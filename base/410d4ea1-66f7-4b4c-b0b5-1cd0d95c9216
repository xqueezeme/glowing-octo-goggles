{
    "title": "The Vengeful Tide Ch. 20",
    "pages": [
        "When I opened my eyes, the first thing I noticed was my head on my desk. The second thing I noticed was my breath. It was hot and filled with need. When it brushed against my hand, my body squirmed. The stimulation was too much. My cock pressed against my stomach. My chest burned.\n\nI slowly leaned up. \n\nBile rose in my mouth. I felt like I just ate an entire barrel of Pete's shitty seafood. A splitting headache rampaged over my head. I massaged my temples with my fingers. Memories of last night pushed against my mind. Like a burst of water trying to get through a tiny crack, they poured in endlessly. Of all of them, one came to the forefront.\n\nMaeloson had somehow been captured. His mind and his body were corrupted by that old shit cloaked in dirt robes. He then fired at my soul with a green arrow.\n\nSuddenly, I put a hand over my mouth. \n\nI opened one of my windows and puked off the side of the ship. I tried to do it quietly since my mother and Ellen were still asleep. My throat burned like I'd consumed some strong spice. My eyes were blurred and unfocused. \n\nOnce I finished heaving up my insides, I walked back to my chair. Well, it couldn't even be called walking. It was more like I wobbled back and sat down.\n\nWhen I took my seat, I pulled out a stick of mint from my drawer. I chewed on it. Hopefully, I could rid myself of shit breath before the two ladies on my bed woke up. I leaned my head back and closed my eyes. \n\nMy thoughts brought me back to Maeloson.\n\nI wouldn't call him a friend. The closest thing I've got to a friend might be Aesteal. No, he might not be a friend, but I did value him. He was a studious elf. He worked hard, rarely complained, knew how to direct the members of my ship. He also wasn't hard to talk to. I spoke with him a few times in private. The guy couldn't handle his booze for shit, but he was a welcome second voice when I wanted it.\n\nThat same man was taken from me. He turned his arrow at me and fired it without hesitation. An arrow filled with green, malicious magic struck my chest, drained my mana, and forced my spirit back into my body. His eyes, like the burning depths of Hades, stared at me. He crossed the magic array to the next island with that old man.\n\nI chanted a spell and lit my right palm with the Blue Flames of Snadi. I touched my chest and sought out any residual corrupting magic. If the flames discovered any malicious magic then they'd turn a different color. If the caster was strong enough, then any magic could be removed as long as it wasn't done with blood. \n\nI did this because arrows or spells like the one Maeloson shot at me come afflicted with curses. For instance, a curse could attract beasts to you. Another curse could cause your body to become weighted in water. I'd rather take care of this now than later.\n\nThankfully, I didn't seem to be cursed. Aside from some damage to my spirit that needed to be repaired, I would live. Well, that was if my lust didn't take over my body. Even when I tried to stand, my legs wobbled. A thousand shivers ran through my body. I was so energized by desire, just my cock rubbing against my pants released precum. Never had I felt such a pleasant, yet aggravating sensation.\n\nI breathed to calm myself. I couldn't lose my nerve now. If I did, then last night would've gone to waste.\n\nTorn between my concern for Maeloson and the sexual energies rampaging in my body, I bit down hard on my mint stick. It snapped in two. When I saw this, I put my head in my hands. I couldn't go on like this.\n\nI decided to get up and walk on the deck of the ship. I must have been the only one awake because no one else was out. The rising of the dawn made itself clear over the skies. A bright sea of orange cast itself over the air. \n\nJust as I let my guard down, a cool breeze brushed against my pants. That made them rub against my cock. \n\nI groaned, whether in pleasure or frustration I don't know. It felt like pleasant hands were wrapped around my stiffening erection. They gently stroked and licked it like thousands of soft tongues. It was pitiful to admit, but the feeling was so good it made my legs weak.\n\nI leaned on the wooden rail off the portside of the ship. I stared at the waters below me. Though the wind was nice to feel on my skin, more places than others, I felt rather melancholy. The water below my ship swam without course, no rhyme or reason to it. Things beneath it moved as they pleased. My hand was not a guiding force upon it.\n\nI held my hand up, but the seas didn't come to me. They ignore me. They laugh at me. Perhaps they pity me as well. Either way, they didn't stand at my side.\n\nI pushed back from the side of the ship. I climbed up the ratlines. Ask me not what I hoped to achieve by doing this. I think the lust just cooked my brain faster than a beef steak in the open sun. I wasn't tired. Yet, I wasn't exactly energized either.\n\nOnce I made it all the way to the crow's nest, I stared out into the horizon. My eyes surveyed my kingdom. Miles upon miles of open water, ready to be reconquered. A horde of treasure grander than any emperor's vault, freedom greater than any slave dared wish for, and a future clawed through one's own grit, that was what one might call The Passion of the Seas. \n\nI yawned. Since my spirit was damaged, my body became more tired. I'd rather think it was that rather than think I wanted to go back to sleep. If I went back to sleep, I wondered what succubus would grant me sweet dreams. I'd probably blow my load on either the thigh of my mother or Ellen. Both were great alternatives, but not now.\n\nFor all my bravado, I must have dozed off for a minute or two. I knew because I heard the sound of someone training from below. I looked over and noticed it was Alteria. \n\nHer glimmering sword in hand, she weaved through several beautiful motions of Balamar swordplay. I noticed a few sparks of beautiful light magic. It wasn't as fancy or powerful as those of the Lightfeather House, but clearly she'd been taught a few spells. \n\nTiny orbs of light stuck to her hair. Her white hair turned a very harsh color of yellow. Like the radiating sun, she swept through her stances with diligence, poise, grace, and all those other fancy words nobles like to use. \n\nI guess Liara's immense vocabulary rubbed off on me as well. \n\nEither way, while I watched her, I pondered the situation in H\u00e6\u0148garam for the first time since we've arrived on this island. If nothing else, it kept me distracted from Alteria's long, shiny hair, kissable lips, beguiling curves, and... \n\nFuck.\n\nI shook my head and pinched my nose. I tried to concentrate on our deal. In exchange for my aid against Zevmar Lightfeather and the Lightfeather House, I'd get as much crystallized ash as my ship could carry. Such an incentive was hard to ignore. However, that only meant that the situation with the empire wasn't as simple as I thought.\n\nTo take down an empire like H\u00e6\u0148garam required massive forces. Even in my old life, I dare not challenge an empire like that with reckless abandon. Its warriors were well-trained. It had some of the greatest warrior-noble families such as the Lightfeathers and Balamars. It was amongst one of the richest nations in the lands of D'orn.\n\nBack in Hilvir, I remembered the conversation I had with Alteria when I first met her. Even back in my old life, I knew of H\u00e6\u0148garam's civil war. Most of the world did. It was such a war that it broke the empire's control and left it susceptible to another empire's invasion. If that was Zevmar, then surely I should have heard of him. Yet, I never did.\n\nHow could that fucker amass such a force? I doubted he'd make a deal with demons. I don't know many Lightfeathers, but the ones I've fought wore righteousness like it was their fucking skin. That's probably why they aligned themselves with H\u00e6\u0148garam, its intolerance towards piracy and other evil actions.\n\nThere was too much information missing and I gave myself too many questions and theories. Aye, perhaps it was best that I send some of the Hilvir warriors that Aesteal and Maeloson trained to H\u00e6\u0148garam. I'd need to know what I was dealing with. \n\nI scratched my chin. Though I doubt a knight like Alteria would go back on our deal, I wondered if she questioned my competency now. She most likely desired a deal when she saw my powers over the sea. Now that those were gone, I could only imagine how frustrated she might be. \n\nSpeaking of the Balamar knight, I turned my attention back to her.\n\nTo be honest, I probably shouldn't have. \n\nAlteria's skin glistened from her sweat. The neckline of her shirt was drenched. Her breasts jiggled with each movement. The contraction of her toned, well-muscled legs, arms, and stomach, made my throat dry. She wasn't quite as muscular as Diane, but one couldn't deny her build. I wondered how many days and nights she swung her blade back in the H\u00e6\u0148garam fields.\n\nAs my thoughts drifted, so too did my consciousness. I fell asleep again. I counted my blessings that no sensual dreams disturbed me. Instead, what did interrupt me was a hand on my shoulder.\n\n\"I found the Captain, Laddies!\" someone shouted. Their breath smelled like rotten fruit and the dense jungle.\n\nI opened my eyes. A man with crooked teeth and scraggly beard stared at me. I stared back. \"Fancy yourself a fine dream, Captain?\" the man said.\n\n\"I fancy a shot of Red Dwarven Snake's Kiss,\" I replied groggily. I leaned up, the light of the sun over the sky and in my eyes.\n\nThe man patted my back roughly. \"Guahahahahahaha! The rough shit that makes your inside spit fire? You got more hair on your balls than any mountain bear, Captain! Perhaps we shall seek that drink one of these days!\" he said to me.\n\nI rubbed my head. \"Aye, your name? I asked.\n\n\"Daven Wolfkiss, Captain!\" he replied.\n\nI patted his shoulder. \"Aye, Wolfkiss, we'll get that shot one of these days!\" I exclaimed. He agreed happily as he took my spot in the Crow's Nest.\n\nAs I made my way down, I noticed my mother and Ellen looking at me. Righteous indignation spread across their lovely faces. I chuckled as I climbed down the ratlines. Aye, there was something about the fury of a woman that makes a man long for her. Certainly the attire meant for comfort from the hot weather was a bonus as well.\n\nOnce I made it to the deck, I stood before my First Mate and Quartermaster. \"What the hell were you doing up there?\" my mother asked.\n\n\"Well mother, when a man is filled with so much fuck energy, he can't help but desire to ravage two vulnerable lasses in his quarters. That would defeat the whole purpose of last night, would it not?\" I returned to her.\n\nShe looked at me and sighed. I was treated to a rose tint of her cheeks. Aye, she looked mighty adorable. I quickly kissed her and then kissed Ellen. Both grumbled at me, but only Sothshore spoke.\n\n\"Of all the shit ideas you've had, this is definitely one of them!\" my Quartermaster said.\n\nI patted her shoulder. \"I'll make sure to keep myself extra safe for you, Ellen,\" I chuckled out while she shoved my hands off her shoulder. \n\n\"Please get your ass spirited away for all I care,\" she fired back while she turned away from me. \n\nThe smile on my face widened. I wondered if my businesswoman's mood was all out of sorts because I hadn't woken up with her. Well, it could just be Ellen being Ellen. She shivered when I pulled her into a tight hug. \"I'll be alright, Ellen. Have no fear,\" I said earnestly.\n\nShe didn't try to remove herself from my embrace. Instead, she just glared at me. \"Whatever, you horny shit. Let's just get this over with so your cock can stop digging into my ass,\" she uttered. My mouth thinned when I indeed felt the way her soothing, feminine buns clenched against my meat.\n\nOops.\n\nWith great effort, I pulled back from Ellen and gathered the crew together. My hands clapped as they all came to attention. \"Alright, ya bastard 'n bitches! We be heading for the second island. Know this, we lost some great findings from the first island, but worry not your souls! There is so much more to claim. However, make haste! I dare you wish to not spend an entire year here scouring for treasures! Yer families might die of old age before ya return! Still, for today, feast! Eat, drink, fuck, sing, and dance! Remember, you've arrived where no one else has! FOR GREATER FAME AND GLORY!\" I shouted.\n\n\"FOR GREATER FAME AND GLORY!\" the crew hollered.\n\nI pointed to the second island. \"Helmsman, head for the second island of Delverhold!\" I ordered.\n\nThe helmsman sailed the ship for the island. As the land got bigger and bigger, I quickly broke through the magic barrier surrounding the island. For my mana levels, this was a bit hard to do, especially with a damaged spirit, but I made do. I knew some of the mages on the ship grew cautious while we passed through the veil. Aye, for them, it must have been quite jarring.\n\nSome of them told me what they felt, but I crafted a lie for them. It was simply left over magic from the barrier being released from what I'd done. They seemed to accept it. \n\nOf course, I didn't desire to fully lie to them, but the less everyone knew about An'raie the better. If they knew about her then that would make it harder for her to single me out. They would all act differently which would rouse her curiosity. They'd be too nervous to sleep and I bet some idiot would go check if she roamed the ship. That wouldn't do good for me or for them. \n\n\"Oh Gdrogran! I fight with steel! I fight with blade! My hands on fire! My teeth of steel! Shake the waves! Shake the sky! Make me roar to the gods on high!\n\nHEYA! HEYA! HEYAAAAAA! \n\nOH! OH OH HA! OH! OH! OH HA! Draegon, see my eyes! See my soul! Where shall I go? Where must I sail? For treasures galor, far and below. Cast me not! Fear me now! May my fortune rise high to the great Florian Spout!\n\nMAEGRE! GRAEM! ASHAVIA! OOOOOOOOOOH! OOOOOOOOOOOH! Where shall I go? Where shall I find? There goes the vast sea on high! The arrows fly far! The guns shoot wide! Fame and glory! Death and honor!\n\nHA! HA! HAAAAAAAAAAARRRRRR! \n\nBitches and Tents! Bastards and Ments! The Eye of Salvorioa finds me there!\"\n\nI shook my head as the sounds of song and dance grew loud. Hell, I thought the entire island heard it. Never in my life had I seen my crew pull out the barrels of ale, wine, meat, and fish so quickly. Musicians played on their stringed instruments and drums. I figured I should rename this ship 'The Revelry.' It seemed to be a common theme amongst this crew.\n\nWhile everyone partied, Nz'ia and Boreli helped me. They dragged Kavtha's Urn through the halls of the ship. I took a brush and slathered the doors with the urn's mouthful of lust magic. The runes I placed into the urn, I drew on the doors with the brush. When the sun went down, and everyone started fucking their brains out, their lust would continue powering runes. An'raie wouldn't concern herself with people so content with their lives. \n\nI slithered and wrote on every door. I took special care on Aesteal's door. I was a bit worried that she still hadn't awakened yet. However, my worries were eased when her aura still wrapped around mine gently. It told me that she would be fine. I wondered what was happening to her that wouldn't cause her to rouse from her slumber. Though curious, I didn't disturb her. I just kissed her forehead and left.\n\nBy the time I was done, the urn was drained and I was fucking exhausted. Unfortunately, there was no rest for me. Nothing stopped the ship from landing on the island. That meant, there was no stopping the ravenous appetites of my crew for adventure. Though I was cautious of what might have changed on the island, I already knew An'raie was the guardian. I doubted there'd be anything as formidable as The Lonely Wail here. \n\nOf course, it didn't hurt to err on the side of caution. Ellen, my mother, and I organized everyone into groups of about five to ten people. I told them of the places they could go and where not to go. I also told them to be back on the ship before sunset. Some asked why, but I merely scared them by asking if they really wished to know.\n\nThey didn't. \n\nI think by this point, they got the message when I told them Alteria would love new soldiers. She backed up my ploy with an oddly sadistic gleam in her eye. \n\nOnce that was sorted, I decided to take the men and women from Hilvir with me. I tasked Lady Knight with guarding the ship. She and her crying goons agreed.\n\nWe sailed and disembarked on the second island. I knew I had no reason to fear An'raie yet. She'd show up when the moon reached the sky. \n\nThe salty air on my nose, I guided these warriors with me to another section of the island. They followed behind me dutifully until I made sure we were all alone. Though a great many on the ship like to laugh, party, and drink, I dare not discuss sensitive matters around them. As always, most on my ship were Draegnarian. A Draegnar bastard would easily sell his captain's information if it netted him five sacks of gold. We're a greedy nation, cutthroat to the core.\n\n\"Sit. Relax. Make yourselves comfortable,\" I told them breathlessly.\n\nThey looked at each other. I noticed one or two of the women take extra precautions to distance themselves from the men. It seemed the trauma of Hilvir still ran deep like spilled wine on a tavern's table. Either way, they all gathered around me. Some even took to sitting on tree branches. I honestly wondered why these Hilvirian men and women seemed so adept at climbing. Was there some monkey deity they worshipped that I didn't know about?\n\nI shook my head and leaned against a wooden tree. \"Alright. I ain't told Alteria this yet, but it's about time I start honoring our deal. I won't lie to you lot. I told you before I wasn't some kind of righteous hero. I didn't save you because it be the right thing to do. I did it because Aesteal told me I could find some use for ya. Well, I've found one,\" I said.\n\nI paused briefly to gauge their reactions. Aesteal and Maeloson trained them well while we sailed. I couldn't properly decipher how they felt when I told them this. Each of them looked at me with stern resolution. One might think they were actually soldiers before they got on my ship. I found myself impressed.\n\n\"A war is set upon the H\u00e6\u0148garam Empire. Alteria tells me of a coup which will leave the entire empire a burning shadow of its former glory. Naturally, she wants us to save the empire. In order to do that, I need to know what I'm working with here. When this voyage ends and we return to Draegnar, I'm gonna organize you lot into groups. Two or three groups will go to H\u00e6\u0148garam and sort themselves out there. I'll scatter others out to other countries,\" I said when someone raised their hand.\n\nI turned to them. \"Captain, we've only been taught to fight. We have no knowledge of information-gathering,\" a man said.\n\n\"Worry not. I'll make sure Maeloson and Aesteal teach you the ins and outs of what you'll be doing. I'll also aid you with stealth training,\" I told them. They all nodded.\n\nWell, it was more Liara's knowledge would be aiding me in helping them with stealth training. As I know now, there are many ways to create a world where warriors can train if there is enough magical presence. That would also help me in casting more spells. Training with them over the weeks back to Draegnar would prove fruitful with increasing the low reserves of mana I had.\n\n\"Will we be recruiting others, Captain?\" someone asked.\n\nI frowned. That was definitely something to look into. However, I wanted a bit of discretion. After all, until now I'd never delved into mundane things like organizing spies. After all, I conquered whatever I wanted. Not much of a need to prepare for what couldn't defeat me anyway. Now, I've come to understand just how overconfident I got. My reckless sense of superiority had damned me to redoing my life, no matter how pleasurable this life was from the last.",
        "\"Use your best judgement,\" I said. A neither yes, nor a no. There were too many variables to consider for such a thing.\n\n\"How shall we make contact with you, Captain? The H\u00e6\u0148garam Empire is well known for its measures against spies. Some claim they even have magic walls which can see through the intent of all who pass it,\" another said. \n\nAh, yes. How could I forget that empire's way of entry? It was all done for the sake of making sure no one came in to smuggle the nation's volcanic ash crystal. I suppose when such a resource made your kingdom one of the richest in the world then you're likely to be protective of it. I know because I tried to steal some once.\n\nTried, anyway.\n\n\"I'll come up with a countermeasure for that and arrangements for contact. If those walls were so great, it would already detect Zevmar Lightfucker's intentions. Anyway, I expect you lot to be prepared. I'll handle all the expenses delegated to ya. Find out anything you can without risking your necks. I can't collect information from a dead bastard!\" I told them.\n\nWell, that was kind of a lie, but I didn't want to resort to necromancy if I could help it. While I do understand the principles and theories behind it, thanks to Liara, the shit still freaks me out. Even dealing with that father-son duo back in the Trials unnerved me. I'd never forget the cold embrace of hundreds of souls wrapped around me while I fought them both.\n\nI dismissed them all to do their own activities. Once they were gone, Ellen came next to me. \"You do realize we'll have to make it off these islands first, right?\" she asked. \n\nI grinned. I swiftly turned my head and surprised her with a kiss. That didn't do me any favors. My cock, which I had forgotten about in the conversation, sprang forward. By the position of our bodies, it easily brushed up against Ellen's thigh. The undeniable flames of lust burned within me. I was like a firepit of slowly burning wood, each drop of oil a drop of lust that would stoke my flames until I exploded. I'd be like a great bonfire, roaring and consuming any unfortunate trees near me.\n\nOur lips smacked apart and I fell to my knees, my breath short. I tried to laugh it off. I even chugged the ice cold water in my sheepskin water bag. All this was done in front of my mother and Ellen. Both shook their heads at me. I didn't blame them.\n\n\"I'd laugh at your misery, but have a good way of making abstinence look pitiful,\" Ellenn replied. \n\nI slowly leaned up, careful to not stimulate my cock too much with my clothes. \"Hearing your sass only makes the ending more worth it,\" I said. I noticed a distinct lack of a reply after that.\n\nOnce I got control of myself, I stared back at the island. With any luck, I could still reclaim what was here before the sunset. \"So what now?\" my mother asked.\n\nI pointed into the foliage. \"We're gonna trek into the forests. I was actually hoping I didn't miss this island. Legend has it there's something great on this one. I aim to collect it,\" I said.\n\nThis was half a lie. No legend spoke of what I was looking for. It was on this island before and I hoped it would be here again. It was another of the things in my past life that I didn't know the significance of until way later. I still remember when I held it in my hands. I sold it off to some rich fucker and never saw it again. Just another of the stupid mistakes I'd punch my earlier self for if I could.\n\n\"Oh? And what makes these better than the treasures we'll dig up?\" my mother asked curiously.\n\nI smirked. \"Remember how on the first island, the Alchemist was experimenting with rune keys? Well, this second island dealt with the spirits those rune keys were meant for. There are many mages out there that make contracts with lesser gods, spirits, demons, and devils. There is a place where they all reside, separate from the spirits which became part of this world to remain close to us. The Realm of of Ig'thraonil,\" \n\nMy mother and Ellen looked at each other. While they took the time to go over what I just said, I started my trek through the overgrowth. One might ask why I didn't involve my crew. Perhaps I wished for a simple adventure with my mother and Ellen. I hardly had much time with them. \n\nI pushed past some large grass and thick vines. My Quartermaster and First Mate continued behind me. The sound of a few animals lingered in the forest canopies. I could already see some type of exotic birds flying over them. I'd like to catch one or two of them if I could. I'm sure I could make a great elixir out of one of their feathers. \n\nWe hiked up a steep trail. The sun was hot and there was no wind to provide us with a cool breeze. Though it was discomforting, this forest heat provided me with a benefit. It had the odd effect of pushing my mind to other matters instead of my growing lust. It was all still there. It just laid beneath the surface while his mind distracted him to other tasks.\n\nA couple of minutes passed. I led us to another part of the island. We started climbing up the steep side of a hill. I admired the change in my mother's body. Indeed her strength became quite noticeable. She sped past Ellen and myself. In no time, she made it to the top of the hill barely even winded. \n\nEllen grumbled. \"I swear she's fucked up on that Ostithium shit the Grandagora nation uses,\" she panted while I laughed. \n\nAye, one might indeed think that way if they saw her now. \"Shall I offer you two snail fucks some help before the wolf howls at the moon?\" she called out to us, a large smile on her face.\n\nI loved that smile. I wondered how many nights I laid in bed wishing I could see a smile like that on my mother's face. Indeed, there was no better expression on her face than that. The difference between her back on Draegnar and her now was like the dark and the light. Her gorgeous red hair, curved lips, joy for her life, delicate body, I had a hand in carving them all. Aye, my dear Queen of the Seas, my First Mate, Ira Drakclaw.\n\nEllen and I finally made it to the top of the hill. I stared out far beyond the structures of metal, brick, and pulsing magic. Thoughts of Maeloson, Liara, Diane, Goron, and my two subordinates filled my head for a moment as I looked out. I hoped they were alright. Unfortunately, I couldn't do much for them now. I still couldn't make contact with any of them. I'd done it a few times over this walk. I received no reply.\n\nI shook my head from those thoughts. Instead, I noticed a large waterfall in the distance. I smirked. \"That's our destination, ladies,\" I said as I ran down the other side of the hill. While I ran, with the wind in my face, I heard Ellen groan behind me.\n\n\"What's wrong, Sothshore? Never ran your ass on an adventure just for the hell of it?\" I asked as I disappeared back into the vine-infested jungle. I heard my Quartermaster snarl behind me.\n\nIt didn't take long for my mother and Ellen to catch up with me. It also didn't take us much time to find the waterfall. The noise it made was quite telling of where it was. Pretty soon the smell of jungle water filled my nose. I could also sense the mystical properties flowing from the top of the waterfall down to the pond. We saw a few animals that came to drink there. They scattered as soon as our noise grew loud enough.\n\nI could see a few tiny spirits floating about near the pond. I captured some of them. They bore no consciousness so taking ones like these for materials wouldn't prove malicious. Some of them floated about like fireflies in the glass bottle I used. Of course, I'd have to create an environment for them to grow. Without magic, they'd quickly fade away like dying embers.\n\nI collected about eight minor spirits. Feeling satisfied, I shoved the jar in my coat pocket. I was confident they wouldn't fade away before I got back to the ship. I then turned to the waterfall.\n\n\"It be a fine day for a swim,\" I said.\n\nI took off my clothes. I then stepped into the water. It was hella cold. \"Are you sure that's safe?\" my mother asked. She held not her gaze from appreciating my body. \n\n\"Why would it be unsafe?\" I asked her. \n\nI fully faced her. Her eyes drifted down to my cock. It was just as hard as it had been earlier this morning. Oh, I think I saw someone lick her lips. Clearly, I had corrupted my mother. No doubt she grew to enjoy our times just as much as I had. \n\nSomehow, she managed to tear her eyes away from my crotch, embarrassed that I'd caught her. I think even Ellen looked at me curiously.\n\n\"These be your terrifying islands, right? We got attacked by a giant stick of weed for seas' sake. Couldn't some grotesque sea monster swim in this pond of yours?\" she asked. \n\nI turned around and shook my head. \"Don't be naive, mother. That's more than likely on the fifth island. Why don't you two take a soak? This pond is good for the mana veins. I wish I'd discovered this shit before I fought that damn frost rug,\" I said as the pain of having my mana veins expand and contract filled my body.\n\nCurrently, my mana tripled just by soaking in this pond for two minutes. I was overcome with vast wells of magical power rushing inside me. I would have to get Aesteal, Liara, and everyone else into this pond. Its rich stores were too great to sink below the tides. \n\nI heard the shuffle of clothes behind me. I shouldn't have turned around because I became aware of my damned lust again. My mother and Ellen discarded their clothes, their feminine, beautiful bodies free to the air. I might've taken them for two forest nymphs if I hadn't already known them.\n\nThey dipped into the pool and basked there. Unfortunately, their elation didn't last long. Just like me, they too felt the pain of the water's mythical properties. I could feel their mana being increased as well. Quite formidable reserves for women who had never delved into the mystic arts before. If they desired the practice, they'd be splendid casters in their own right.\n\nOnce they settled to the pain, and the water provided no more benefits, I told them to hold their breath. We'd be swimming down. They agreed and we all fell below the pond's surface. Beneath the cold water, my Quartermaster and First Mate swam to me. I pointed them to a large groove between the pond and the waterfall. It was just big enough for an adult male to fit through. I saw a few beautiful fish. I wanted to catch them, but I couldn't be distracted. We swam for the entrance.\n\nAs I knew, we all fit beneath the groove easily, but we couldn't be lax. There was no going up for air and the passage was tight, almost suffocatingly so. Fortunately, we were all tough. I was used to holding my breath, my mother had a stronger body, and Ellen was a tough bitch. We could all handle the discomfort.\n\nI felt nostalgic as we swam. I was a bit older than I was now when I'd done this exact same thing. Granted, I didn't have two naked ladies swimming by my side in my previous life. I stumbled on this place alone. I still remembered its beauty when I fell into the pond on a nightly stroll. All the mana I'd received from this pond had gone to waste since I never delved in magic.\n\nI wondered how many past self might view me now. I wield spells like some junior mage of the Institute of Magic. \n\nBefore the need for air became too great, we finally passed the mountain behind the waterfall. We surfaced into the mountain's cove and breathed the cavern air. As one might expect, it smelled damp and musky. \n\nWe pulled ourselves out of the pond. Our feet touched the cavern floor. I didn't quite remember this cave being quite as warm as it was. Given that we'd just exited from the water, I thought to dry us all with a basic fire spell. It seemed that wouldn't need to happen now.\n\n\"There's actually a cave beneath that waterfall?\" my mother asked.\n\n\"Aye. However, there's much more than that, mother. Come,\" I said.\n\nAs I walked on the cavern floor, I had another thought. I... probably should have kept my shoes on. Cavern stones hurt.\n\nWe traveled through the cave. Thankfully, it wasn't as dark as it was when I'd been here last time. Tiny pockets of light beamed from the ceiling of the cave in various places. At the very least, I wouldn't have to embarrass myself as I bumped into rock walls.\n\nOur journey bore fruit quickly. I grinned while Ellen and my mother stared in awe of the giant shrine deep in the back of the cave. At the center of the shrine laid a large stone, beautifully carved like for a religious sect. Its face was lined with exquisite drawings of a tree. In front of it laid that box just as I remembered it. A box made of fine gold, wrapped in red cloth, sat on top of a small wooden table. It was surrounded by unlit stone torches. A few floating stones, dividing two small ponds, led the way to the shrine.\n\nThough I hadn't encountered dangers before, I urged my mother and Ellen on the side of caution. Now that my mana had tripled, there were quite a few spells open to me. Well, spells that wouldn't leave me like a man in a desert devoid of water. I could get us out if needed.\n\nWe walked on the floating stone platforms. In no time, we arrived at the shrine. My mother touched the stone tablet. \"Hey Sothshore, you're a smart lass, or so you claim. How much would this fancy rock get us?\" my mother asked.\n\n\"First, keep the shit talk and the only place that rock is going is up your ass, Ira. Second, I wouldn't fucking know. I'd need my magic appraiser for that. Very sorry, I seem to be out of those until we get back,\" Ellen fired back.\n\nI ignored their squabble and reached for the golden box and red cloth. I didn't have a place to put the cloth so I just wrapped it around my shoulder. I then turned my focus back to the golden box. Fancy designs like tree roots were etched into its body. I believe I sold the box at an auction for two million gold when I returned from Delverhold.\n\nI used that money to craft my second ship. Suffice to say, it was a miracle my first ship made it to another country before it broke down. \n\nI slowly opened the box. If all went as it should have then there should be five rings for each of the corresponding elements. One for fire, water, wind, earth, and lightning. When I peered inside, I nearly dropped the box and the contents inside it.\n\n\"One... three... seven... ten?!\" I counted as I stared at the box in bewilderment.\n\nTen rings were neatly placed in the box. I could identify the original five that should have been there. All five elemental rings laid next to each other. However, when I looked at these other five, I was so stumped. What in the name of the Ten Circles of Haganthar were five more rings doing in this box?! These didn't look like any rings I'd ever seen before.\n\nI closed the box, oddly anxious. \n\nThere shouldn't be ten rings! Why was everything about this trip constantly subverting my damn expectations of this place? I'd have to look into this.\n\n\"So is this what we came for?\" My mother asked, looking over my shoulder. Her hair touched my body and I sharply inhaled. When I looked at her, I saw the damnable smirk on her face. She was going to pay for that.\n\n\"Aye. Forget our deal with Alteria, if Ellen sold these to the H\u00e6\u0148garam empire they might give us the crystal ash themselves. Well, either that or they send the full force of their army upon us to take them,\" I said with a chuckle.\n\nEllen folded her arms. Even the way she did that seemed sensual to me. My eyes shamelessly, and helplessly, ogled her curved. \"Yeah, like we need the full weight of H\u00e6\u0148garam on us when our Captain can't do that insane shit he did to the Callamum kingdom,\" she retorted.\n\nI raised an eyebrow. \"Dare you not underestimate me, Ellen. I can sink many ships even without my command over the seas. Now, let's head back. While the others explore, this is a good time to teach the both of you some shit about magic,\" I said.\n\nMy two naked companions looked at each other. We headed out of the cave back the way we came. Once we were on land and fully dressed, I began to teach my mother and Ellen the basics of magic. I'm pretty sure I didn't have to try too hard with the latter. She made underground deals with magic shit on the daily. To handle that dangerous stuff, she had some prior magic experience.\n\nAnyway, I had them practice on some trees. I knew Ellen already collected a lot of trees from the first island, but I would need a lot as well. They would go to me rebuilding my ship. No, they would go to be building an even better one! One that would not get overtaken by the betrayal of my crew members this time!\n\nI don't really fancy myself as the teaching type, but my mother and Ellen seemed to grasp most of what I spoke about. Given that Ellen didn't have much of a fondness for blades, I taught her the beginnings of gun magic. While she might not have the poise for a blade, Ellen was definitely light on her feet. For a woman like her who's been around firearms most of her life, she's no stranger to shootouts.\n\nIn order to prevent her death, I desired to refine her skills. Granted, I ain't the most refined fucker either, but I've been given a slight advantage over her. Just a slight one. \n\nI also worked with my mother on her first spells. To my surprise, she grasped them rather easily. Perhaps I shouldn't have been surprised. Women do have an easier time mastering control of their mana than men do. She toyed with a ball of fire she made for the next few hours.\n\nBy the time I was done running my mouth, the sun began to set. I stared out into the beautiful sunset sea. A mist slowly began to descend over it. It would soon be time. \n\nHowever, that time couldn't come enough. I was losing control of my lust. On the way back, I kissed my mother like I'd eat her whole. My lust was infectious because she quickly started to get into the mood. It was only thanks to a punch to my face from Ellen that my nerve came back.\n\nOnce we got back, we returned to a sandbed filled with merry men and women. Each of them swinging around beautiful, jewel-encrusted swords, spears, diamond-plated shields, and laughing their cares away. I told everyone to head back to the ship and party like drunken sailors at the Dead Tales Tavern.\n\nThey didn't need to be told twice.\n\nWhile they all partied, I checked the runes on the doors one more time. Everything seemed to be in place and not a single door was uncovered. For this night, I also asked Nz'ia and Alteria to partake in the food. Both were quite stubborn for different reasons. Xhaluters have a very specific diet, and a knight rarely indulges. Clearly, they were the life of all the parties they went to.\n\nAfter some convincing, I managed to sway them to at least be satisfied. They need not go overboard. After all, I'd need them awake if this went to shit.\n\nBoth agreed.\n\nI thought about how I would take care of Boreli, but some woman must have beat me to it. It seemed I wouldn't have to care about his involvement. Though I loathed to see the fucker happy, I'd consider it a necessary sacrifice.\n\nSoon everyone was in their own quarters, either drunk off their asses from the wine or passed out from the sex. I wouldn't complain. I was left onboard the ship's deck, my hair frazzled, my nerves shot, and my feelings of utter dissatisfaction. Tiny drops of the urn's aphrodisiac spilled from my forehead like sweat.\n\nI tried to steady my breathing, but it was hard. When I stared into the sea, I saw my reflection. My eyes were red with black irises. I looked like a man with half his brain shot to hell. The strain actually gave me a headache.\n\nAfter some time passed, I noticed the mist from earlier in the day crawl up the sides of the ship. I closed my eyes and sighed. It wouldn't be long now.\n\nIt took no more than two minutes for the mist to cover my ship. I shivered. It was a little cold. \n\nIn the night, the island's weather must have changed from warm summer to harsh winter. I thought to go bundle up, but there'd be no point now. An'raie was already aware of where I was. She was also aware of where everyone else on my ship was. However, for someone like her, who has never known true satisfaction, I must've been like a damn lighthouse in the distance.",
        "The mist was thick. It was almost as thick as the mist which surrounded The Taker of Voices. It was hard to see the wooden planks beneath my feet. I could barely see the waves below my ship. Nevertheless, I could still hear them slowly smacking against my ship's body.\n\nThough I knew what to expect, a feeling of unease washed over me. Men might deal with monsters, demons, raging dragons, and all the other mighty creatures that walk upon the planet. Yet, there is always something unsettling when one dealt with beings who have lived on this dirtball more than they have. \n\nAye, even Liara made me uneasy, but it was a pleasant uneasiness. Though I understood her a little better, I won't say I fully grasped how she thought. \n\nThe same was true for An'raie. I haven't even lived a quarter of the time that she's roamed the world. Thanks to Liara, I had more knowledge than The Lonely Wail, but at the same time I did not. Had I my powers, I could have fought her more reliably. Now, if I didn't play my cards right I'd be dragged off into the mist never to see my mother, Ellen, or my crew again.\n\nAs I leaned up, my mind delirious from so much unused pleasure, my ears picked up on an odd type of song. A woman's voice hummed like a beautiful siren over sea. Her song was like a mixture between a wail and a sorrowful chorus. It seemed to echo all around my ship. I couldn't properly pinpoint its origin.\n\nUnfortunately for her, I knew she was onboard. She was below the deck. I knew because I could sense the magic of the alchemist's curse which kept her bound. Like a long, thick, purple chain around her neck, it moved when she did. Any 5ith-tier mage could have spotted her if they concentrated enough. Admittedly, there was one tangent to that. Anyone could see her if she wanted them to.\n\nFor ten minutes, her song played. She walked through the halls of my ship below the deck. Unfortunately, this was neither good nor bad. An'raie's victims could be taken without so much as a sound if she wished. I would have preferred it if they did scream. At least then, I could probably make another countermeasure. Instead, I was left waiting like some child for his mother to get home.\n\nThe magical pressure got stronger. She was on the first floor just below the deck. As she got closer, her song got stronger. It also got louder. She must have been frustrated to hell that she'd taken no one. Aside from myself, I doubt anyone heard her lonely wail. Her voice spoke to the needy, the unsatisfied, the forgotten, and the betrayed. Perhaps... even without the heights of lust raging through my body I would have heard her regardless.\n\nWhile I waited for the island's second guardian to appear, I thought to myself. Clearly, I underestimated this woman, something I told myself not to do. She knew the reason why I was the only one aboard this ship that she'd be enticed to. She had to have known that I deliberately sought her out. That was why she went down first. She looked if she could get anyone else before dealing with me. As expected of a woman who has lived for so many centuries. Can't fool an old, wailing bitch like this.\n\nI stood at the center of my ship. The soft thud of soles drummed in my ears. The beautiful song sounded like sweet honey for the soul. I tried to stay focused, but her voice was hypnotic, divine even. We could ease the frustration within the both of our souls for a thousand lifetimes. \n\nFinally, I saw a thin, white dress pierce through the rolling mist. That dress held a beautiful woman's figure in its confines. Like a young maiden, it was a delight on the eyes. However, as I stared up, the body stopped being so beautiful around the shoulder area. \n\nFrom then on, an elongated, broken neck stood over me. A veil of black hair to hide the face of my visitor. Her neck was old, wrinkly, and withered. I had to admit, her warped appearance did a good job on her song not seducing me. Aye, it was still beautiful, but can't really expect to fall for such a creature.\n\nSlowly, her song came to a close. \"Ashhhhhhhaeriena klanghiamu qi valindi. Shalvanrinni xvu glu'fandu!\" An'raie spoke. She raised her beautifully ephemeral hands to touch my face. \n\n\"Shit. Ancient Volormian tongue,\" I thought.\n\nI grumbled. I tried to find what I could on Volormian language from LIara's memories. I found a little on the dead language. Unlike Nz'ia, I dared not touch this woman so casually. She might not be on the level of Liara, but she was still a formidable witch.\n\nBefore she could touch me, I spoke. \"An'raie, the Lonely Wail,\" I said in the Volormian tongue.\n\nThe Lonely Wail's hands didn't stop. However, I felt the way her magic rose like some great fire. One of her eyes pierced her long, wet, stringy hair. An eye filled with rage greeted me.\n\n\"Come with meeeeeee. Rest thine unsatisfied, weary body with me. Lay thy pain, thy troubles, thy concerns with me. Embrace thine body to mine, young sail man, in the raptures of the flesh. Surrender thine own self, life, and soul. Giveth to me of thy boy to me that I shall giveth back to thee,\" she said, her old dialect flowing into my ears like sweet Sarian Bee's Honey.\n\nHad I been seduced and marred by her magic, I'm sure I would have seen the most beautiful woman standing before me. Unfortunately, I wasn't given that pleasure. I was actually thankful for her taking her time to try and speak to me. It gave me the time to try and hone the Volormian ancient tongue. \n\n\"A man follows naught but his own desires, An'raie. Ye ought to know... that. After all, 'twas a man, an alchemist, that used you to fuel his own desires. Then he left you unsatazfied, unloved, untended to, and fargatten like a piace of shit flowing in the wind,\" I said, cursing to myself that I'd messed up a few words in my translation. The tongue movements of ancient Volormian were harder than I thought. If anyone in my crew stepped outside, I probably would have been speaking gibberish to them.\n\nAn'raie's hands stopped. I stared defiantly at her. The pleasant magic she had begun to cast quickly unraveled itself. My lips curved upwards. Aye, the thing about ghosts, they're a damn temperamental bunch. They'd be horrible at card games. Can't hold a straightface worth a damn.\n\n\"Child of saaaaaaaand! Ruuuuiner of Caligros! Spawn of Zeuuuuuuuuus! WRETCHED MAN-SPAWN!\" She hollered. The tips of her fingers glowed with green fire. \"By the Blood Rivers of L'nqil, thy body shall indeed find suffering!\"\n\nAn'raie lunged at me. Her hands faster than I thought. I ducked underneath her strike. She swung her arms like a madwoman at me. Like a crazed bear, she pawed at me, screeching and howling like some monkey. One of her hands punctured the deck of my ship. I jumped back.\n\n\"Why hav you naed to hate me, An'raie? I did not trap ye here like a dog tied to its post!\" I fired back, my Volormian still full of errors. She wailed at me, her long neck cracking like snapping bones.\n\nShe charged at me, her mouth open. In that deep abyss, I saw the swirling tides of magic come together. Just like her fingers, a blast of green fire exploded from her lips towards me. I wondered what would become of my soul if I allowed those flames to touch me.\n\n\"Cursed be thy great steps! Fit to soak the mud and dirt and trees of the Lost Gnalnthral!\" she cursed at me. \n\nA magic of blue color swept through my hands. I smacked my fingers together and split the green fire to my left and right. As the flames passed me, I could hear the wails of a thousand lost souls. As expected of a woman who studied necromancy. Even if I kept it off me, it's unpleasant aura was unnerving. \n\nAs the flames stopped, I leaned my head back just in time to avoid a sharp piece of her black hair. It laid out like a pointed blade, ready to piece my throat. I dared not even let that nick me. For all I knew, even her hair was cursed!\n\n\"I've had lasses try to kill me before, An'raie, but ya be the most inventive!\" I said before I groaned as a barrel slammed into my back. I was thrown off balance as my face collided with my deck. The wind blew out of my lungs when I slammed against the railing.\n\nAh, right. Ghosts enjoyed levitating shit. How the fuck did I forget that?\n\nAn'raie floated next to me. Her white dress flapped in the air. \"Feel the wrath of a thousand souls upon thine body!\" she exclaimed as she raised her arms into the air.\n\nSuddenly, I was surrounded by an army of skeleton ghouls. I grabbed my rapier, its frozen touch seeping into my fingers. I swung my icy blade. A wave of frost exploded from its body and encased each minion in a snowy prison.\n\nWhen I turned back to An'raie, her eyes settled on my blade. Her gaze was so intense it threw me off. I knew not her thoughts. \"Man-spawn, thine blade. Where has thou received it?\" she asked.\n\n\"Woman-bitch, call me by my actual name and maybe I'll tell ya,\" I said, my sass getting the better of me. \n\nAn'raie glared at me with great anger and fury. She looked ready to strike me again with whatever spell she could conjure up. Before she could, I stood up. \"Look here. Don't delude yerself! You knew I was expecting ya. I bet you knew you were bieng lured heare when first stepped on this ship. I've got a deal for you,\" I said.\n\nA wave of green fire blasted towards me. Out of sheer instinct, I raised up a magic barrier and blocked the onslaught of powerful, ancient magic. The force behind this blast was greater than the previous attempts. My barrier nearly broke in five separate areas. As expected of a powerful female mage. Not quite on Liara's level, but not one to be underestimated.\n\n\"Thine mouth be a den of serpents and venom thy tongue. Curses and lies fall from thy lips. My ears remain closed to thine ways! DIE!\" She screamed.\n\nThe Lonely Wail's eyes glowed white like snow. Her unnaturally long neck got even longer. In fact, she started to resemble the men and women of Slathrin. Basically, men and women with the heads of snakes with human bodies. Aye, not the best sight to behold if ya ain't used to it.\n\nHer teeth clashed against my blade with such force that I crashed through the ship's railing. I fell back into the water. Pain coursed through me. It seemed I still wasn't fully healed from my battle with that damned frozen giant. \n\nAn'raie pushed me down further and further while I held my breath. My back touched the bottom of the open sea. \"Look, you're a smart lass. Sure, ya got suckered, but that's gonna happen to everay fucker on this dammn planet at least once. I can break yer curse! I can give ya the bones of the Alchemist! You're a bitch who tampered with necromancy, I bet ya can find his soul if you try hard enough,\" I told her telepathically beneath the waves.\n\n\"THEE SHALL SPEAK NO MORE!\" She bellowed. She raised one of her hands and swung for me. The water did nothing to slow her down. Her blow would take my head off.\n\n\"Lieviara!\" \n\nI casted a wind spell on myself and shot away from An'raie. I blasted through the cold sea and into the air. There, I floated while I gasped for air. I think this gasp was more from the strain of the spell than from me being underwater. The mana tax for this spell was heavy. If not for my dip in the pool earlier, I couldn't have reliably casted this spell.\n\nSoon, I was on guard as the sea below me glowed in a deep, malicious red light. I flew back as a blast of red flames bursted from below. I widened my eyes. The Red Flames of Guqin said to burn hotter than phoenix fire raced past me. Truly, this ghost bitch deserved her title. \n\nUnfortunately, I couldn't relax. The sea then glowed yellow. A blast of yellow fire expelled from the sea. I dashed away from it but it began to follow me. The sea rocked around me like a thousand cannons as the yellow balls of flames exploded next to me. I dodged what I could, but I didn't escape them unscathed.\n\nI stabbed my rapier into the clear waters and swung it with all my strength. A wall of the tides turned into a large frozen wave that collided with the yellow flames. Chunks of frozen liquids collapsed one after the other as I flew into the air. \n\n\"Come on, Lass! I expected more from a witch of the old times!\" I taunted.\n\nMy provocations bore fruit because the skies thundered with purple-colored clouds. The clouds parted like an angry beast was set to descend upon me. My eyes widened. I heard a roar that could've woken the dead. I was then surrounded by thousands of floating, purple skulls. They each cackled at me maliciously. \n\nAn'raie appeared from the waves. \"'Tis fitting that thou shalt perish by the souls of the damned!\" She said.\n\nThe Lonely Wail then released an unholy scream that could make a normal man go insane. From the clouds came an amalgamation of thunder, bones, and necro magic. A beast the likes of which no man should see stared down at me with its soulless eyes. \n\n\"ARRARUEUEUEWUURUGUUGUHHHHHHHHHH!\" It screamed as I felt a bead of sweet fall down my face.\n\nAye, this be not so good.\n\n\"S\u00e6\u0144,\" I chanted.\n\nI flew off with great speed through the water as An'raie chased after me. The creature in the clouds watched me ominously. I grabbed my pistol and created a lightning array. I probably couldn't hurt the bitch with conventional magic, but lightning was always good against shits like this!\n\n\"Anzen: L\u00f0rnsren,\" I called out as I pulled the trigger on my gun. \n\nThe bullet cracked the magic array and a spray of lightning bolts fired at the skulls behind me. I watched the lightning crash into the skulls. However, the skulls regarded my spell like it didn't even exist in the first place. They just cackled their teeth at me and continued to charge for me.\n\nAn'raise must have been pleased with herself. Nevertheless, she was already preparing her next spell. \"Shaen Riskenkur Kailvokso: Entromium,\" she casted. \n\nThe seas rocked. A thousand decrepit chains of the infernal abyss shot from beneath the ocean floor. I had not the time to dodge. Two of them wrapped around my legs. The flames of their ancient curse burned my skin before they pulled me down into the water. \n\nAs I was rushed down against my will, I snarled. Aye, someone was in for a fuckin' rude awakening!\n\nThe chains wrapped around my body like a boa constrictor. I was restrained far below the surface. I held my breath, but the grip of the chains made it unbearable. Even in the coolness of the water, I was offered no relief from the burning sensation that threatened to consume me for all eternity.\n\nAn'raie appeared before me. Her feet touched the floor in front of her. Her long neck stretched out to me. She opened her mouth and I stared into the black void that was her soul. Just like all the rest, she would seek to devour me.\n\nSuddenly, she stopped. She looked down at the giant magic array I casted. Seals, runes, and a large trigram array glowed with an ephemeral light. She, the purple skulls, the chains, and I were all caught in the light.\n\nThe sea floor ruptured with a resounding boom. A blast of light struck the floor where we all stood. I felt the chains burn away in the magic circle I casted while An'raie screamed at me. Her skulls burned away. \n\nFreed of their embrace, I flew into the air and took a few breaths again. I panted as I stared at my body. Deep, charred grooves where her spell burned me laid bare. My clothes were nearly burned off and the side of my stomach bled without end in sight. Fortunately, I healed the wounds. This took more mana than I thought it would need and that strained my mana veins considerably.\n\nWhile I tended to my wounds, An'raie floated out of the water. No semblance of injury marred her body. In fact, dare I say she looked... unimpressed.\n\n\"Re'nthulun: Calthalrolas,\" She casted. She held her hand in the air.\n\nI looked up and saw the large, purple beast of lightning opened its jaw. A beam of pure concentrated magical energy fired upon me. I stared at this magic which held enough force to part the clouds in awe.\n\nAn'raie, ya underestimate me.\n\nI turned up my left hand to the sky. I pointed my frost rapier in my hand to the Lonely Wail. Before she could even register what happened, the blast of lightning struck a teleportation array I made with my left hand. It then blasted out of the circle I made with my rapier. An assault of lightning, ice, and necromancy clashed with her body and sent her flying into the distance.\n\n\"SHIT!\" I cursed. \n\nI gritted my teeth against the damnable pain my arms went through. The strain was too much. Trying to divert such an enormous well of magic took more effort than even I thought possible. How the hell did Liara manage to do with such ease back on the first island? Sure, I ain't no real mage, but thanks to her I know more than I ought to. Yet, even I couldn't fathom what her body must have endured for such proficiency.\n\nThe clouds and the sky returned to normal. I caught my breath. I already knew that wouldn't phase her, much less damage her. An'raie was a woman that even the Alchemist found interest in. She wouldn't keel over just from that. \n\nIn fact, I could sense her moving through the waters right now. I clenched my rapier. Time to see if all those shitty, fancy mage exercises paid off.\n\nI raised my blade into the air. The air turned cold. Wind swirled around me. \"X'unyar: Iciaen \u01af Raeien,\" I casted as I felt more mana leave my body. In circles, I spun my rapier in the air. The unseen water around me formed hundreds of large frozen spears. My body shivered.\n\n\"Zan'qwe: Avlaos Sunkar Andrathra,\" I also casted. \n\nA trail of blood fell off the side of my lip as black flames gathered around each ice spear. I wondered what An'raie might think when she saw the Black Flames of Andrathra. \n\nAndrathra was a male deity whom legend stated sought to create the perfect flame. So bent on his quest was he that he used his own stomach as a furnace. Thus, he created the black flames, his charred innards mixing with his crafted flames. So strong were these flames that some even speculated Helios feared they had the power to consume the sun.\n\nAn'raie blasted out of the sea. She stared at the spells I prepared for her with wide eyes.\n\nI gave her no time to prepare. Instead, I fired the spells at her. Like rainfall, I launched hundreds of ice spears laden with black fire against her. While the ice magic might not do much to her, the black fire was a different matter. The flames began to burn away at her while the spears stuck to separate points in her body. I watched her white dress burn away. How I wish I could be attracted to her body, but the elongated head wasn't doing me too many favors.\n\n\"Hmph, thy skill is that of a brute! Impressive nonetheless for a child's game,\" she suddenly said as she held up her hand.\n\nIn stunned silence, I watched the ice spears metal away inside her body while the Black Flames of Andrathra concentrated themselves in the center of her open palm. All of them gathered before she crushed them with a clenched fist.\n\nI smirked. To think even the Black Flames of Andrathra would be a child's game to her. I had indeed forgotten this was a woman who learned from the Alchemist. Who knew how much stronger she got from when he first summoned her? She was already a formidable mage then. I couldn't tell now.\n\nUnfortunately for her, this was a game for me as well, one I would win!\n\nI folded my arms. \" A child's game magic be enough to battle you. After all, it shloudn't be too hard to deal with a throw away,\" I said, praying she didn't notice my damn slip in Volormian again.\n\nA burst of magic pressure suddenly ripped some of the trees on the island from their roots. It caused large tidal waves that crashed into the side of my ship. Thankfully, the magic barrier for the boat was still intact. No harm would befall my crew this night. \n\n...I probably couldn't say the same for myself. \n\n\"YOU DARE MOCK ME, BOOOOOOOOOOOY?! Thy soul shall not know reeeeeeeeeeeest!\" she said as she charged at me.",
        "I smirked. Aye, come into the spider's web ya pitiful fly!\n\nThe Lonely Wail appeared in front of me. If she was surprised, then she didn't show it when her hands wrapped around my neck. \"Thine own pride and indignation hath been thy downfall! I shall reserve a special place for theeeeeee!\" she hissed.\n\nI already felt my soul being pulled from its mortal shell. Unfortunately, as she touched me something must have made her afraid because her eyes widened. \"Thou... Thou art that woman's...,\" \n\nWhatever she said next died as she suddenly looked down. My hand rested on her navel, my fingertips were covered in a dark blue magic light. Runes started to etch themselves on her phantom like form. If Liara were here, she'd criticize me for being so reckless in the endeavor I was undertaking. However, I was confident. A spell like this wouldn't work on any normal spirit. One like An'raie was perfect for it!\n\n\"Varelaium: Chalomorius ask'e normaliam,\" I chanted. A harsh light covered An'raie and myself.\n\nSo harsh was the light, I covered my eyes. When it disappeared, so did The Lonely Wail. I was left alone, floating in the middle of the air. The battle left me drained and fucking exhausted. I felt like I just went through a Dead Tales tavern brawl... for a whole fucking day.\n\nWith the last of my mana, I flew back to the ship and landed on it. I surveyed some of the destruction. So far, nothing appeared unrepairable. A few broken barrels, some splintered floorboards, one of the ship's masts was cracked. Aye, nothing... too bad.\n\nI entered the lower decks of my ship. I shook my head as I passed by the loud snoring of my crewmates. I guess I didn't need to be concerned about An'raie taking interest in them. They all sounded pretty damn content with their lives, unlike me. The sound of the waves helped the illusion that a fierce magical battle hadn't happened mere moments ago. \n\nMy steps staggered through the ship. My legs shook and I fell to my knees. I leaned back against one of the walls as my breaths became labored. I looked down at my arms. Tiny cracks of light began to appear. They were fucking painful. These lines appeared on my body on those on fancy, fractured glass.\n\n\"Yer first time inside a man in seas knows how long, and already you're trying to escape. Ya ain't gotta keep a bastard that way, Lassy!\" I chuckled as I felt the increased thumps of my heart in my chest.\n\n\"H-How dare thee restrain me within thine own body! Mnuhaaaaaa! T-Thy flesh burns like the wildest inferno of the Burn Lands. R-Release me this instant, man-spawn! T-This... this feeling... What hast thou done to me?! Nnnnnnnnnnnngh!\" An'raie asked with a mix of anger and lust.\n\nI chuckled in pain. The cracks started to appear on my shoulders. \"Heh... heheeee... heh. Yer time trapped on this island has dulled your sense, lass. Do ya really think I'd seek an auidience with you if I chouldn't best you? True, I ain't gonna beat you in a straight magic battle, but that ain't all a man neaeds to guarantee victory. Right now, you're feeling about an entire ship's worth of lust funneling into one man's body. With you sealed in me, at least for the moment, you're feeling the samme thing. How's it feel, a man and woman's lust in your body after so long?\" I asked.\n\n\"Dare thee think... Nnuuuuahaaaa... I shall remain confined here?! Even now, my magic shall overtake thee. Time shall... mmmmmmnnnnph... be short upon you until I break free. The pain I i-i-inflict upon thy s-s-soul will resonate... hnnnnnnnnnghaaaa... until the sands of time blow away!\" she cursed at me with fire in her voice. For her pride, I wouldn't retort about the deep need on her tongue.\n\nThe Lonely Wail was right. I already knew if I didn't do something then her immense mana would overwhelm mine. I found it rather miraculous I held on for this long. \"Aye, that be true. However, good luck finding anything like this feeling ever again. So ya got fucked over by the Alchemist. Get over it, lass. We're all bastards and bitches, screwing each other over since we first walked on this planet. Don't blame me just cause ya couldn't see that,\" I retorted.\n\n\"How dare...,\" \n\n\"Look! Ya can kill me, torture my souls until we both Haganthar overtake the Divine Realm, and you go back to being a bitch on her leash for the person who trapped ya here! OR, you can share your soul with mine for a team. Help me conquer Delverhold, and I'll deliver you the bones of the son of a bitch who chained you here. I know you're a witch that specializes in necromancy. I'm sure you can find some way to drag his soul into your clutches,\" I returned to her fed up with this back and forth between us.\n\nAn'raie stayed silent for a little while. While she did, I felt the cracks on my skin deepen. I looked in one of the ship's windows at my reflection. I wondered how badly my mother would kick my ass if she could see me now. Once again, I stood on the road to Death's Door, slowly walking to its house.\n\nMy eyes were bloodshot. Purple veins pulsed from my legs all the way to my face. A trail of blood fell down the side of my lips. \n\n\"Thou wishest for a deal. Shall I... nhhhhgghhh... place my confidence in a boy navigating the Isles of... ooooooaaaaaaah... Delverhold? 'Tis quite the jest,\" she replied breathlessly. Kinda funny for a ghost lady, but I digress.\n\nI smirked. \"Tell me, lass. What boy could use the Black Flames of Andrathra? Have ya ever heard of such a thing?\" I asked.\n\nMore silence.\n\n\"Thou makest a fair p-p-point. Thine soul aura is much more d-d-developed than what would be of a child thine age...,\" she said.\n\nAnother moment of silence came. \n\nSuddenly, the pain in my body slowly stopped. An'raie's magic stopped its rampage with my own. I breathed easy while the glowing cracks in my skin disappeared. The purple veins which pulsed through my arms with great discomfort vanished. I brushed my shirt sleeve against the sweat on my forehead. \n\n\"I have delayed the demise of thee whilst we discuss. Why does thou wish to aid me? Dare thee not lie... haaaaaa... to me. Our auras h-hath joined temporarily. My aura sees into yours. Thee has... been here before. I have met... mmmmmmnh... thee before. Yet, my mind brings none of this to memory. Tell me why,\" she said.\n\n\"You can't see all of it?\" I asked, a bit of sass on my tongue.\n\n\"Something... hmmmmmmm... strong blocks my a-a-a-advances. Perhaps t-t-thou are indeed not so simple,\" She answered.\n\nI stared out my ship's window and into the sea. The waters moved without course, splashing on the shore of the second island. The trees flew in the soft wind. I closed my eyes. Thoughts of my beloved, Leah, entered my mind. A lot of them were pleasant. That only made their poison infect me deeper.\n\nI'm aware that I was a bastard. Aye, I still am, but I was a much bigger piece of shit back in the day. I stubbornly moved through life without much regard for anyone or anything but my own glory, riches, and adventure. A pirate captain who sought one more cup of ale to drink, and one more cunt to fuck.\n\nI remembered in my journey I got fucked up in a tavern. It's ox mead hit me like a shot to the gut. While I laid in my drunken stupor, a man sat next to me. I don't really remember much about him. He wasn't very good-looking. I know that much.\n\nThat man told me, men were like fire. Wild, passionate, could burn down everything and anything they touched if left on their own. Whether I laughed at that or not, I don't know. It sounded like something I would laugh at during that time.\n\nHowever, he then told me that women were like the wind. Always going from one place to the next, no real sense of direction but always changing lives to whoever felt them. Whether that was for good or bad, was up to them to decide. A gentle breeze or a violent tornado, or some shit like that.\n\nI asked him what the point of this shit analogy was. He laughed at me and looked at me. He said, '\"Listen, son. Every bastard needs his bitch. Fire is strong on its own, but add some wind to it, some direction, and it could burn for miles or snuff out.\n\nI drunkenly asked him what the hell I would need to know that for. He touched my shoulder. \"Because son,\" he said. \"Young bastards like you burn the hottest.\" \n\nWell, if I met that fucker I'd pour him a shot of the Dead Tales' finest drink. That analogy seemed to sort of remind me of Leah and myself. I wouldn't say she directed my 'flames' like wind did, but she definitely tempered me. I think every man realizes that about a woman at some point in his life. They are great manipulators of emotion.\n\nThat wasn't so much a negative or positive. As I told Liara, it was the responsibility of women to drive men to madness. For many men that was the effect a woman can have on them. Men would destroy nations, kingdoms, mighty beasts, and even themselves for a woman. \n\nSometimes, Leah held so much control over my emotions it terrified me now that I thought about it. I remember when a prince mistook her for a prostitute. It was during one of our 'sharing' moments when I watched her get fucked by three or four other men. He tried to buy her from me. I charged him with a bullet to the fucking head. \n\nAnother time, she came down with illness. I sailed half the world for a good enough doctor to cure her. Whatever she desired, I wanted to give it to her. She drove my fire to wild places. To see her happy was one of my most valuable treasures.\n\nYet, there was more than that. She listened to me. I spilled concerns to her that I never would to anyone else. She also shared her own concerns with me. Our relationship was not perfect, but I truly felt she was the destiny which held my course. She respected my authority both on the ship and off it. We often joked about what we would do when our bones became old and the life of the sea would be left behind us. I remembered those times fondly. Even now, I remember what she wanted.\n\nA large house made of Seadragon Stone on an island not too far from land. She wished for a garden to grow what she wished. She wanted a vineyard so we could grow our own fruits for wine. We'd have a few little bastards to run around the open beaches with. They'd grow up and begin their own adventures. \n\nAye, sounds like too pleasant a life for someone like me, but I found myself fond of the idea. I was fond of the idea of turning to dust with her. \n\nI loved her and, as far as I knew, she loved me.\n\n...or so I thought.\n\n\"I know what it means to feel unsatisfied, forgotten, and betrayed,\" I replied, my tone somewhat melancholy.\n\nI figured there was no need to lie. We were basically soulbound at the moment. She'd know if I was untruthful anyway.\n\n\"Thy name, what is it?\" An'raie asked.\n\n\"Eric Drakclaw,\" I said.\n\n\"Thy soul resonates with honesty. Most unusual for a pirate. Thou art a strange man, Eric Drakclaw. Mine eyes were not deceived when I saw the Mark of Ho\u0256 upon thee. Thou hast garnered the favor of The Immortal Witch of Hpolia,\" she remarked.\n\nGiven that she spoke of Ho\u0256, I assumed she mentioned Liara. Perhaps that was another of her many titles that I didn't know about. Still, the fact that An'raie told me I had the Mark of Ho\u0256 intrigued me. Unfortunately, I didn't know what this meant. It wasn't like I could just ask Liara about it. I checked her memories, but those were fogged up as well. How could Ilzahold toy with my life when she wasn't even aware she was doing it?\n\nAfter some time, I felt well enough to stand. My legs were a bit shaky, but I moved through the ship. I continued to check the runes I'd made on the doors. By the time I was finished, my exhaustion caught up with me. I chuckled when I saw Alteria outside her room, sleeping in a chair with her sword in her arms. A persistent knight through and through.\n\nAs I made my way back up the ship, An'raie spoke again.\n\n\"Though I do not trust thee, thou... gnnnnnaaaaaa... art quite ingenious. The laws of a soulbound, even though temporary, are able to suppress the laws of a curse. Thou hast freed me of my prison so long as I stay c-c-connected to thee. Thou hast been here before has thee not?\" she asked.\n\nI appeared above deck. \"Aye.\"\n\n\"Many thought the principles of Time Magic improbable,\" she responded.\n\nI shrugged. \"Yeah well, ya can thank Liara for figuring it out. I don't even know how she sent me back,\" I replied.\n\n\"Thou understand why though?\" she questioned.\n\nI shrugged. \"Apparently, my death started the end of D'orn,\" I answered.\n\nAn'raie remained silent for a time before she spoke again. \"Indeed, thou art a strange man. Very well. Though it's distasteful to have my soul bound to thee, I shall not slay thee in exchange for the bones of the Alchemist who condemned me to this miserable fate!\" she stated. I neither confirmed nor denied her statement.\n\n\"I got no need for the bastard. Do what you wish,\" I said as I opened the door to my quarters.\n\nEverything else seemed to happen in something of a blur. I took off my clothes and dropped into bed with my mother and Ellen. I then fell asleep. I absently noted both moved into my arms, but I was gone before long.\n\nWhen I woke up the next morning, I woke up alone. I heard voices outside so I assumed I didn't wake up early. When I saw the sun in the sky, I had a single thought. That thought rules over all the others.\n\nI drank some water and washed my face in a wooden basin. \"Prepare for an extra benefit to our deal, An'raie,\" I said with a smirk.\n\n\"Pray, what does t-t-thou mean?\" she asked, a shiver in her voice..\n\nI didn't answer. Instead, I forwent my shirt and buckled up my pants. I walked out of my room. The sun was insanely hot. It wasn't as pleasant as yesterday, but I didn't care. Instead, I honed in on my targets.\n\nI marched out my quarters and onto the deck. Some of my crew members were busy repairing the ship as best they could when they saw me.\n\nI sped over to my mother. She noticed me. She smirked. \"Had you slept any longer we might have thought you in another...,\" my mother gasped when I grabbed her arm and pulled her with me.\n\n\"Eric... Eric... wait a fucking... you don't have to drag...,\" My mother tried to say, but sad to say I tuned her out. \n\nI then appeared in front of Ellen. She seemed to be talking to someone, but it wasn't long before I grabbed her arm as well. \"What the fu-,\" she yelled before I dragged her as well. \n\nBoth beautiful ladies in each of my hands, I pulled them down the steps. I think they understood what was going on when I pulled them into a vacant storage room. I closed the door and locked it.\n\n\"You lasses got two options! One, ya take off those sexy clothes of yours, and ya get to wear them again when we're done. Or, I rip those clothes off and you walk naked back to your rooms hoping none of the crew sees your freshly fucked cunts! By the seas, you're both getting fucked regardless!\" I stated with uncontrolled lust in my voice.\n\nTruth be told, it took all my willpower just to not fuck them on the deck in front of everyone. I was sure that might be too much for them right now. Though the thought to fuck them while people watched turned me on, I still cared about their own involvement. \n\nMy mother and Ellen stared at each other. \"Ya couldn't fucking tell his bastard father to pull out, could you?\" Sothshore asked as she quickly got undressed.\n\n\"Shut up,\" my mother fired back as she unbuttoned her shirt. She stripped down to her undergarments.\n\nI pulled my pants down and stared at my cock. It was red, and veiny. The tip already leaked out precum. The aphrodisiac and restrained lustful energy in my body still ran through me strongly. It wasn't as strong as before, but it was there just waiting to be unleashed.\n\nMy breath was short and it was only hastened when I saw the sexy bodies of these two beautiful bitches. As soon as they dropped their garments, I finally began the phase of my much denied satisfaction. \n\nI pulled my mother into my arms and kissed her. It wasn't a romantic, sensual kiss. It was a hard, rough, animalistic one. It was one filled with all the lust, frustration, and desire that a man in the body of a teen could have.\n\n\"Mmmmmmmmnh!\" My mother moaned while I sucked, mawled, and devoured her tongue. To cheat a little, I moved some of the lust in my body to my mother's through the kiss. Her body started to grow warm. Her hands grabbed the sides of my face. She pulled me further and kissed me harder. Her thighs rubbed my cock. \n\nWe spoke no words. Instead, her leg vigorously worked my cock while her fingers moved through my hair. Our lips smacked against each other. The flames of our lust began to spread through the whole room.\n\nEllen made her presence known when she pulled my head to hers. \"Ya dragged me down here too. Don't ignore me,\" she said before she kissed me as well. Her kiss was no less filled with vigor and passion than my mother's.\n\nWhile Ellen and I swapped spit, my mother kissed my cheek and then licked my neck. The way her tongue lathered down my skin was utterly exquisite. My body would be the only thing my mother's lips would wrap around now. No other man would dare have this pleasure aside from me.\n\n\"Nnnnnnwwwwmmmm,\" Ellen groaned while one of her hands stroked my cock vigorously. Finally, the stimulation was exploding from me in my own tiny orgasms. They weren't exactly enough to make me cum, but they were pretty damn close. It was like tiny shocks of lightning moving through my body.\n\nMy mother sucked on my nipples briefly, going further and further down until she came face to face with my cock. My eyes looked at her for a moment. I wondered what she thought when my bulging man-meat twitched in front of her. She licked her lips. I soon received my answer. She gobbled up my cock in one gulp. My mother's nose rested against my pelvis while Ellen and I kissed.\n\nUnfortunately, that one action proved too much for me. I groaned as my cock tightened. My balls fired a cannon's worth of cum into my mother's mouth. Her warm, wet mouth massaged my cock, but I felt her never release her hold of me. Her throat swallowed all I had to offer, but once my orgasm was finished, she began sucking again. We all must have known there was no way in hell I was limited to only one orgasm.\n\nAs my mother pleasured and pleased me with her blowjob, Ellen and I continued our lip lock. Her fingers pinched and teased my nipples while my own fingers fondled her breasts. My Quartermaster quivered. She whimpered while her lips nibbled on my tongue. \"Mmmmmmmm! Nnnnnnnghhhhh!\" she groaned.\n\nOur lips smacked apart. I quickly sought to continue to slather her down, grant her pleasure by my own hand. I bent my head down and sucked on one of her nipples. My fingers caressed her stomach and quickly made their way down to her cunt. She was aroused. Not drenched, but certainly wet.\n\nI eagerly jabbed two fingers into her cunt while my lips tongue and pulled her nipples. \"Nnnuuuaaaah! Fuuck yessss!\" she hissed as she threw her head back. She pulled my head deeper into her tit-flesh. Her nails gripped my hair, but I didn't mind the pain. In fact, it stirred me further.\n\nBetween the moans of Ellen and my mother's diligent sucking, I was in a world of rapture. The lustful energy in my body spread itself over the storage room. My mother gagged and croaked on my cock, licking and slurping it up like fine bovine steak. Her fingers caressed my balls and she licked the full length of my shaft. She even took the time to wrap her lips around one of my testicles.\n\nMy First Mate's movements only made me vigorously work Ellen's cunt faster and harder. My thumb teased her clit. \"Nnnnnnnnnnhggggggh! Ooooooooh! Yes, finger-fuck me you bastard! MMmmnaaaaa!\" Ellen voiced. Her pussy walls gripped my fingers intent to not let them go.\n\nSothshore must have found her groove because she grabbed my face again and kissed me. As my own orgasm built again, I furiously fucked Ellen with my fingers. She kissed me so hard, her body trembled with such fury, that she actually made my lip bleed. \"MmmmmMMMMMMNH!\" she moaned out her orgasm into my lips. Her hips bucked against my stimulating hands until she flooded my palm with her stickiness.",
        "I wasn't far behind her before my mother brought me to another orgasm. I growled as I filed her up with even more cum that she dutifully swallowed. Once we settled down, I took stock of everything. My mother looked wonderfully slutty with her son's cock inside her mouth. Her eyes dazed with lust as my cum dribbled off the side of her lips. She winked at me before she released my cock. Cool air hit its sensitive tip and my mother marveled.\n\n\"Twice and you're still fucking hard,\" she panted while I flexed my cock for emphasis. It bobbed in her face.\n\n\"Face it mother. Nothing less than you two walking out of here limping will be enough for me as I am now,\" I told her. \n\nEllen sighed as her leg dropped to the floor. \"Cocky bastard. Let's see if you can back it up then!\" she said. She then pushed me to the floor. Before I could even give her a cheeky retort, Sothshore dropped to her knees and impaled herself on my cock with ease. My dick felt her walls cling to it with force. If I hadn't already cum, I imagine I'd already be filling my First Mate with my seed.\n\n\"F-Fuck, this damn cock feels good! Why does a shitty bastard like you have such a good cock?\" Ellen asked as her pelvis met mine.\n\n\"It was made for your cunt, Ellen,\" I said as I pulled my mother down to the floor with me.\n\nOnce she came down with me, I kissed her. The taste of my cum on her tongue drove me wild. \"Mmmmmnph! Huaaaaaaa!\" She sighed happily while I fondled her glorious breasts, her auburn hair sprawled over our faces. \n\nMeanwhile, the floorboards creaked as Ellen bounced her cunt onto my cock. Her hands on my chest, her head looked at the ceiling. \"Fuck! Ooooooh fuck! Yessssssss! Goddammit! MMmmMMMmnH!! This... nnnnoooouaaa... fuckin' cock! It's so hard!\" she wailed.\n\n\"Ya sound like a damn brothel slut, Ellen,\" my mother chuckled.\n\n\"Shut. U-UPPPPPP!\" Ellen cried as her hips wiggled and caressed my cock. Every bump and luscious curve of her tight body I felt as the lust inside me fueled and exhilarated us all. The storage room smelled of hot, sweaty, sex and a chorus of blissful wails.\n\nIn contrast to my lower half, my mother and I kissed and held each other lovingly. Her left hand caressed my cheek as we kissed. Her eyes were filled with the immoral love of a mother for her son. However, that was not for the men of society to decide. That was for me. All my mother had to do was enjoy the fruits of my decision. \n\nSuddenly, my mother smirked. She leaned up and placed her snatch on my mouth. \"While I wait for my turn, fuck your mother's cunt with your tongue, Eric! Make me cum!\" She ordered.\n\nOh, I'll make you cum alright, mom!\n\nI grabbed my mother's hips and shoved my tongue into her sloppy cunt. Someone was clearly excited from sucking my cock to two orgasms. I made quick, shoveled movements inside her and her pussy approved my motions. \"MmmmnooooooooooO! Ooooooh Eric! Yes! Ooooooh fuck, tongue fuck me! Make me cum!\" she exclaimed as she eagerly rocked her hips on my face. I actually wondered who was fucking who here.\n\n\"N-N-NOOOOw who looks like the... huaaaaaaaa slut?\" Ellen asked.\n\nMy mother's response was to grab the sandy blonde by the head and kiss her. Both women moaned while they ground their hips on my body. My lust seemed so connected with them that I knew what they were doing even with my mother's ass blocking my view. I could see them kissing each other while my mother groped Ellen's breasts.\n\nI wasn't idle either. I grabbed Ellen's hips and slammed my cock upwards. \"OOOOOOoooooOOoH! Fuck yeah! Shove that damn cock inside me, you fucker! Oh my gooooood!\" She said.\n\nI did as she asked. I fucked her as hard as I could. The rough slap of our flesh would've been heard by anyone if they walked by the room. However, we didn't care. My lust consumed all of us. It left my body and entered their own. When it was expelled from them, it flew into me, growing smaller and smaller until it could be used up. \n\nEllen's honeypot worked my cock expertly. For a woman who'd only been with one man, myself excluded, she had a great command of her pussy to massage my cock. I pierced her up and down, removing my cock until just the tip was in before I shoved it back in. Saliva fell from the side of my mouth and I knew my mother was now attacking Soshore's tits. \n\n\"F-FUUUUUUUUUUCK!\" she groaned before she clamped down on my cock and poured her lust juice on it. Sweat poured down the side of her face while she panted.\n\nMy mother chuckled. \"Enjoy yourself, bitch?\" she asked.\n\nEllen flipped her off. \"Very,\" she said, shivering when I flexed my cock playfully.\n\nWhile my Quartermaster relaxed for a moment, I continued to orally fuck my mother. Her ass and pussy squirmed against my tongue. Ellen quickly started rubbing my mother's clit and sucked her neck. \"GNnnnnnngh! Fuck! MmmmmmmmmmmmmmH!\" she groaned.\n\nEllen smirked. \"Ya call me a slut, but you're the one riding your son's face. Does his tongue feel that good on your cunt? Are you waiting for me to get off this cock so you're son can fuck you?\" she asked.\n\n\"Oh god, yes!\" my mother replied.\n\n\"You want your son to fuck you?\"\n\n\"Seas, yes! Fuck me with his damn, fine COOOOOOOCK!\" My mother threw her head back and came on my face. I slurped up all her juices just like she'd done for me. She huffed and gasped\n\nSlowly, Ellen released my cock. It stood up straight just like the mast of my ship. She laid next to me. She grasped my cock and held it a bit straighter. \"Then come sit on this damn thing, you Draegnar slut!\" she said.\n\nMy mother leaned up and licked my cock once. She then stared into my eyes. She then took me inside. She closed her eyes and sighed as we broke the very laws of established morality once again. My cock slid through her pussy. It wasn't warm. It was hot, burning my skin and my nerves with intense pleasure. It felt like my cock was made to slide into this cavern fit to explore its depths. It was only fully explored when her ass met my balls. With her seated on me, she looked at me again. She smiled. I smiled back.\n\nI leaned up and wrapped my arms around my mother's waist. Her chest bumped into mine. \"Fuck me, Eric,\" she said.\n\n\"Need ya ask?\" I asked her.\n\nI pushed her on her back and shoved my cock into her body. \"Ooooh,\" she moaned. I withdrew and shoved in again. Her walls clung hard to me. Her heels on my asscheeks, her arms around my neck, we fucked. We fucked hard. I didn't make love to my mother. I fucked her. I dominated her. I made her submit to my cock.\n\nI roughly grunted and harshly kissed her. \"mmMMMMMMmN! YESSSSSS! Oooooh Yes! Fuck me, Eric! Fuck me harder!! GnnnnnnanaahaaahhhhhHh!\" she cried. \n\nOur flesh slapped together vigorously. Ellen fingered herself as she watched. She watched my mother and I copulate our desires and release out lust. My mother hooked her heels behind me and panted into my ears. Our lust and sweat mixed together. I vigorously pinned her to the floor. She encouraged me further with her eyes hazed with ecstasy. \n\nBefore I could even warn her, my cock exploded my cum inside her body. \"Uuuoooooh!\" she said as I filled her up. Her cunt milked my cock down, but I still remained hard. \n\n\"Y-You're still hard?\" she asked.\n\n\"Limping, mother,\" I stated.\n\nI pulled out of her and pulled her up. I picked her up into my arms and pinned her against the wall. I then lodged my cock back inside her. \"Hooooooooooo ERIC! How long are you gonna fuck me for?\" she questioned.\n\nI didn't answer. Instead, I just bucked my hips in wild, rough motions. Her body was helpless against my strength. Her legs wobbled in the air. I pulled out and slammed back in. The cum I'd shoved into her before began to leak out. I saw Ellen below us, swallowing our delicate mixture. Her hands caressed my balls as they slapped against my mother's ass.\n\nTogether, our fuck was a chorus of wails, moans, and groans. My mother begged for my cock. She begged for my cum. She begged me to fuck her. \"F-Fuck, I'm gonna cum again!\" I said.\n\n\"Yeah! Cum! Empty your damn, cum-filled balls inside me, Eric! Ooooooooooooh my goooooooooooood!\" she cried as I slammed forward again. My legs grew weak as I fired shot after shot of cum inside her body. Her body spasmed as I struggled to keep her up.\n\nWe sighed and kissed before I let her down. She stumbled to me and blinked. \"No. Fucking. Way,\" she panted as my cock grew inside her.\n\nI then turned to Ellen. \"Aye,\" I responded. I grabbed the surprised Sotshore. My dick slipped out of my mother. I placed Ellen's hands on the storage room wall. Her eyes widened when I grabbed her hips and shoved my cock inside her.\n\n\"How the fuck are... yooooooooou!? Nnnnnnnnnnnnnnnnnnnghhhhhhhhhhhhhhh!\" she cried as I grabbed a fistful of her blond hair and rocked my hips again. Clearly, they both underestimated just how much I suffered under the hands of all this lust.\n\nI pushed my hips into Ellen's ass so hard that she had to lift off her heels just to brace herself against me. Her face leaned against the wall while her nails clawed its wood. \"Oooooh... fuuuuuck...nhggghghg... ooooooh yessssssss! S-S-So hard! Fucking shiiiiiiiit! NNNOOONNAAaaauaugh!\" Ellen cursed as she came.\n\nI don't know how long I fucked Ellen, but I found my lust to be unending. I fingers my mother's cunt while she laid against the wall as well. She panted and shivered like a bitch in heat. I lifted up Sothshore's leg and held it over my shoulder. She stared at me as I dove into her, devoured her, partook of her. Her heart was racing in chest. Her breasts flopped like fish out of water.\n\nI groaned as I came again. I pushed my cock into Ellen and released my pent up spunk. \"Ooooooooooooooooooooh,\" she hollered. She didn't even come down from her high when my cock rose again inside her.\n\nShe looked at me.\n\nI looked back. Then,I grinned.\n\nIn that storage room, my mother, Ellen, and I were locked in a prison of lust for nearly two or three hours. I felt no hunger nor thirst during that time, my only desire to fuck and screw these wonderful lasses in front of me.\n\nI did just that. I fucked my First Mate and Quartermaster in so many positions that I admired their flexibility to adapt to some of them. Had I been none the wiser, I'd be a little worried about my crew increasing by two since I came inside them so much. Of course, I knew that wouldn't happen. The fantasy would lead to lots of fun in the future though.\n\nBy the time we were done, I stroked my cock one more time. My legs locked as I blew my load over their faces while they knelt to receive it. Finally, I felt the lust energy and aphrodisiac expel from my body. I just had no energy to give because those desirable feelings couldn't sustain me anymore. \n\nFinally, my legs gave out and I fell back in exhaustion. Both swallowed my load and licked their lips. I saw how much cum started to flood out of their cunts. I would bet 500 silvers Liara would be fucking proud if she saw this. \n\nMy cock deflated and both saw this. \"F-Finally done?\" my mother asked.\n\nI laughed as I tried to catch my breath. My heart threatened to jump right on out of my chest. That said, I unashamedly basked in the afterglow of the sex I just had. Draegnar would have thrown free coin and lit up in a party for our performance. \n\nMy mother smacked her lips while she swiped some of my cum off her face. She licked it from her fingers. Ellen looked at her strangely. When my mother noticed, she shrugged. \"It's an oddly satisfying taste. Maybe I've just gotten used to it,\" she said.\n\nEllen snorted. \"By Aphrodite's Sweet Grass, you Draegnars are fucking freaks,\" she replied.\n\n\"Says the bitch who bounced on my son's cock like a Agalallum Frog,\" my mother retorted.\n\n\"Aye, alright. Don't start bickering you two. We still have a lot to do today,\" I said as I stood to my feet. My legs wobbled for a moment which made them both laugh at me. I didn't mind much. I got my revenge when I saw them try to stand as well.\n\nI opened the storage room's window. The cooling breeze entered the room while we got dressed. My mother and Ellen dressed in their regrettably untorn clothing. I had been fully prepared to tear their clothes apart if they took too long. Unfortunately, I couldn't treat my crew to a brief show today. Granted, it didn't matter how much my mother and Ellen tried to fix themselves up. No one would mistake their freshly fucked bodies.\n\nAs they tried to fix themselves up, I smirked. \"Stop,\" I ordered.\n\nThey looked at me.\n\n\"Stay that way. Come up with me to the deck. Tell the crew what we'll be doing today. Then you can both go back to your rooms. Everyone's gonna see two sluts that just got fucked by their perverse captain!\" I said. \n\n\"Eric...,\" My mother warned.\n\nSMACK!\n\n\"Ugh!\" My mother groaned when I smacked her ass.\n\n\"Don't talk back to me, mother. Now move,\" I told her.\n\nShe and Ellen sighed, but complied. \"Yes, sir,\" they both said, glaring daggers at me. Despite the cum on the sides of their faces, I kissed their cheeks. The three of us then walked out of the room. To make it a bit fair for them both, I didn't fix my clothes either. \n\nWhen I opened the door, I heard groans behind it. I turned my head and a group of about five or six men and women doubled over each other. I raised an eyebrow, oddly amused.\n\n\"A-Ahoy, Captain! Nice day for a fuck ain't it?\" one of the men asked. The others looked at him like he was insane before they looked back at me.\n\n\"Aye, fine day for a fuck. It be such a fine day that I'll give you lot a head start before Ellen castrates ya. Best get moving,\" I said.\n\nThey all shot up and ran off while I shook my head. My mother and Ellen stepped out of the room. The latter sucked her teeth. \"Castrate? Clearly, I've gotten softer. Fucking pieces of shit,\" Ellen grumbled as she kicked the side of the door repeatedly.\n\nOnce Ellen's tirade was done, we approached the upper deck. When we appeared, all eyes easily zoned in on us. I smiled at the way my mother and Sotshore walked. It was clear that both had an odd walking posture.\n\n\"That where you been, Captain? Fished yourself quite the catch, did ye not?\" someone asked with a heart laugh. I noticed it was the leader of Raven's Shadow, the adventurer group that made us stop at Hilvir.\n\n\"If ya ask me, I say they caught him! Captain ain't got his sea legs even in the mid-noon!\" a female's voice said. The crew laughed at our expense. I allowed them to do so because I saw the inner jealousy of some of the men. I bet they wished to the damn stars that it might be them that got to spray my mother and Quartermaster down with their cum. Oh well, men were allowed to dream weren't they?\n\nI also might be wrong, but I think I saw two or three lasses with jealous looks as well. Whether they were jealous of me, or my two beautiful right hands was something I didn't know. \n\nAs we passed everyone, Ellen grabbed a pistol from someone's gun holster. She then fired into the air. Everyone stiffened. \"Alright, you pieces of shit, have your fun at our expense later,\" she commanded.\n\nI don't know how threatening she looked with unkempt hair, wrinkled clothes, and small tidbits of cum on her face, but everyone listened regardless. \"As you can see, we're missing a few members. The Captain only recently made it back to the ship with Aesteal. To find them, we're gonna speed up these searches,\" she said. She then looked at me briefly.\n\nI nodded to her silent question. She turned back to everyone else. \"Aside from some mythical, wild beasts, trees, and other shit, ain't nothing gonna be a threat to you for now. So... search for whatever you want. Go in groups, go alone, I don't give a fuck. Collect whatever you can, but in two days you better be gathered here because we're moving to the next island. Stay here if you want to, but the only thing ye'll be collecting is your prayers before a watery grave meets ya. Got it?\" Ellen asked.\n\n\"AYE!\" the crew chorused.\n\n\"Good. Now, if you dog shits will excuse me...,\" she growled as she stomped off to the lower decks much to the amusement of everyone else.\n\nI kissed my mother once more on the cheek and sent her off as well. She too disappeared down into the lower halls of the ship. Then, I disappeared into my quarters. When I closed the door behind me, I stepped down into my room.\n\n\"Enjoy yerself?\" I asked An'raie now that I finally had some time to address her.\n\nThere was silence from her side. Curious, I checked on her. I aligned my spirit with hers. A wave of unrelenting pleasure washed over me. \"Haaaah... haaaa... haaah,\" The Lonely Wail panted. I could practically feel the heat of her breath on my soul. Perhaps, the pleasure was too much all at once for An'raie.\n\nWell, I don't think the formerly unsatisfied spirit would have any further problems with our arrangement now. \n\nWith An'raie checked on, I changed my clothes. When I undressed, the warm weather excited my skin. I think a few traces of the aphrodisiac were leaving my body. They'd be filtered out in time. Unfortunately, my cock wouldn't grow hard. I was thoroughly spent.\n\nWhen I was dressed, I walked back outside. I got myself some lunch since breakfast was clearly off the table. While I ate, I felt a sudden surge in Aesteal's aura. Relieved to know she was awake, I gathered her some lunch as well.\n\nI walked to her room and opened the door. There, on her bed, she sat up. Her gaze peered out her window before she turned to me. In the light of the sun, her silver hair almost looked like it was glowing. When she smiled at me, I thought the visage of an ethereal elven goddess descended upon me. In fact, in the light of the sun, I swore I saw the transparent figure of \u018aaonhria, the first mortal woman to ascend to the Celestial Realm. \n\nTales of that lass were legendary. In the world of D'orn, there were many churches dedicated to her. One legend stated that \u018aaonhria was a woman who found favor with Hera. The wife of Zeus embedded \u018aaonhria with the the purest form of celestial magic, divinity magic. Such magic could fell almost any evil being. \n\nSome institutes of magic claimed that Light Magic and Divinity Magic were the same thing. That was one of the reasons the Lightfeather House was so prestigious. Their magic was the closest to divine magic. By my understanding of Liara's knowledge, light magic was merely one leaf on the grand tree that was divine magic. \n\nIt was how I could fight the Father and Son in the Fourth Trial. Small traces of divine magic from Zeus roll through every piece of lightning. Even fewer traces of light magic run through it. Basically, Divine Magic can manifest in any element, but Light Magic can't. Of course, there's not a lot of it. Hell, even by Liara's knowledge, aside from becoming contracted to a Divine Spirit, which is next to impossible, there's no amassing Divine Magic.\n\nTake it like this, if Liara, the one who lived for seas knows how long, decided to try and gather divine magic from D'orn, without the aid of spirits and gods, it'd take her millions of years. Even then, she'd probably only get a very small concentration of it. That's how hard it was for that shit to be gathered. \n\nSome researchers claimed that D'orn would not know of Divine Magic if not for \u018aaonhria. She had Divine Magic in droves. \n\nAnyway, many sought out \u018aaonhria for her power. In the end, Hera brought her to the Celestial Realm. Well, that's one of the legends anyway. Some think she's still there, others think she left the Celestial Realm to give humanity the knowledge of the divine spirits and gods, which is why the Elves have such a connection with spirits themselves.\n\nThat was the woman I thought I saw behind Aesteal. When I blinked, she was gone. I wondered if I was fucking hallucinating. \"Are you alright, Sir?\" Aesteal asked.\n\nI stared back at Aesteal. She returned to normal, or... was she always normal? Was I the one who was looking at things that weren't there? ",
        "\"Yeah...,\" I said, a little unsure myself. Maybe I fucked my mother and Ellen a little too hard. \"Welcome back to the land of the living.\"\n\nAesteal smiled while I delivered her some food. \"What happened?\" she asked as she partook of some bread, munched up porridge, and some apple slices.\n\n\"Aye, well I nearly got my soul taken by an unsatisfied ghost woman, merged her soul with mine, and struck a deal with her,\" I said.\n\nAesteal shook her head. \"Only you would do something so suicidal, Sir,\" she said.\n\nI smiled. \"For now, our interests align. She'll be an extra force against Delverhold and I'll deliver her the bones of the alchemist. She'll do with those whatever she desires,\" I returned.\n\nThe silver-haired elf nodded as she finished her food. She then slipped out of the bed. \"So, may I ask what your plans are now?\" she asked.\n\nI placed her empty wooden plate on a table and leaned against the wall. \"Are you fit to head out?\" I asked.\n\nHer response was to grab her bow and stand. I shook my head at her stubbornness. \"Right... well, there's a few structures I want to look through before heading to the top of the island. We'll set up to return to the third island. This time we won't get caught unaware. We're gonna get revenge on that frozen rug,\" I said.\n\nAesteal nodded. \"I assume we'll have to go back through the cavern with those worms?\" she asked.\n\n\"Aye, but it ain't gonna be like last time with me randomly teleporting like a madman,\" I returned.\n\nOnce Aestral agreed, I then had to give her the other news. I told her about Maeloson and what I'd encountered. I spoke of the robed figure. Somehow Maeloson had been captured and corrupted by the man. They disappeared through the portal gate to the next island. Unfortunately, I also told her I didn't know what this meant for him, Diane, Goron, or even Liara.\n\nAs expected, Aesteal was crestfallen, but her elven grit remained firm. As a proper elven warrior, she didn't become easily swayed by her emotions. \"He shot a green arrow at you?\" she asked.\n\n\"Aye. It actually hurt my soul a bit. Drained my mana too. Whatever's happening to him, it's made him more formidable. We'll have to be prepared for that too. If you're feeling well enough, then meet me on deck,\" I said.\n\n\"Yes, sir!\" she exclaimed.\n\nI was ready to walk out the room, but stopped. I turned around and moved to Aesteal. I grabbed her face and kissed her. She sighed as I deepened the kiss. She caressed my face as well until we separated. \"I'll do what I can for him, Aesteal,\" I said softly, pushing my forehead against hers. My voice was so soft it was like I was telling her a secret.\n\n\"Thank you, sir,\" she replied just as softly.\n\nI kissed her once more and then headed out of her room. Aye, Aesteal and Maeloson were mine. No one would take away what was mine ever again.\n\nI made it above deck and saw my mother and Ellen speaking with some more members of the ship. Both were in new clothes which made me laugh for a moment. Once my laughter settled, I saw about five or six rowboats headed towards the island.\n\nI tasked the helmsman to pull the ship into the shore. The ship was taken to the shore and tied down to four or five trees. Once that was done, I collected the members of Raven's Shadow.\n\nNow that I took the time to actually take in this group, they were a group of seven people. Four men and three women. By their names, they were Brant, Daen, Truon, Goruk, Hannath, Racaell, and Rieth. By their adventurer cards they were classified as Warrior, Warrior, Rogue, Monk, Archer, Gun-Sorcerer, and... Forsaken Priest, respectively. \n\nWhile adventurer groups are common in D'orn, as well as class identification if you wish to be labeled, I've never heard of a Forsaken Priest before. Then again, I probably never looked into adventure classes that much since I usually just shot first and asked questions later. Now, I actually wondered how someone could get a class like this.\n\n\"You called for us, Captain?\" Brant asked.\n\nI shook my head from my thoughts and handed them back their guild cards. \"Aye. Your group is gonna journey with me,\" I replied.\n\n\"No offense, Captain, but what do you need us for?\" I think the girl Hannath asked.\n\nI smiled. \"Simple. When we get off these isles, you're gonna be one of the most famous adventurer groups in all of D'orn!\""
    ],
    "authorname": "WordsToTheWise",
    "tags": [
        "fantasy",
        "threesome",
        "mom-son incest",
        "mother-son sex",
        "creampie",
        "pirates",
        "mom-son sex",
        "magic",
        "incest",
        "spells"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-vengeful-tide-ch-20"
}