{
    "title": "A Slave to the Servants Ch. 37",
    "pages": [
        "Mycah's family had never washed anything and that was obvious. The point was not that they did every piece of their clothing, just that they started to learn. Free men knew how to care for themselves and did so independently. This was just one of many things we had to teach them.\n\nRose's instruction on the use of the camp's washboards were still fresh in my mind. I taught the boys the way I had learned and they did a fair job on the item or two they cleaned. We did most of the work, but one or two of the young ones started to get the hang of it. I encouraged and congratulated them each time they did it right. The boys liked the feedback and tried very hard.\n\n\"You do well instructing, Ciara,\" Hodlen said appreciatively.\n\nI blushed at the compliment.\n\n\"On Earth, Jonathan would have been mine to care for and teach. Women do most of the child care where I am from,\" I said simply. \"I enjoy being part of his life in every way.\"\n\nI saw a faint smile start on Hodlen's face. \"Do you know letters and numbers?\" he asked. \"Do you know how to use a sword, in addition to, the gun?\"\n\nIt was hard not to puff with a little pride. I'd made a point to learn about the things he talked about. I also knew a great deal about the planet and its inhabitants. Men from the camp had taught me and I'd been reading. Frankly, I felt quite well versed.\n\n\"The slaving women, as well as Damien and his Brothers, taught me to read and write,\" I told the men, \"and I have enjoyed having this skill. I read about the world around us and even wrote some children's stories. My friends and I wrote about things we thought the children should know.\"\n\n\"And swords?\" Hodlen's Brother, Kee, asked again. \"You obviously know the guns, you handle them with ease, but do you know swords?\"\n\nI shifted my weight and laughed a little. \"Damien and his Brothers were Warriors and they taught me the fundamentals of sword work. Men from the camps have taught me to fight. I am hardly in any condition to show you right now, but I can easily use a sword.\"\n\n\"And you like children,\" Tos said sounding excited. \"You enjoy teaching them.\"\n\nI smiled and answered affirmatively. Being with the little family made me very happy.\n\n\"So you could Keep Mycah's family in the day,\" Hodlen said with authority. \"We do not need to use unrelated Child Keepers.\"\n\nI was startled and looked up at the men. Doing what he said would be a dream for me, but I wasn't sure it was possible. Obviously, I'd gone to school on Earth, but I had not trained to teach. I didn't know exactly how the children were organized here and I didn't want our boys to have an education too far from the norm.\n\n\"The young ones are all kept together in the day,\" Damien said gently, pausing in his work. \"The various men that care for them work as a team based on age, although each is responsible for only a few families. You learn very quickly, Ciara, and I know you want to do this.\"\n\nBane snorted and looked around before he spoke, \"You can't tell us you wish to continue to work as a shopkeeper.\"\n\nSome of the old prejudices were still there and Kein shook his head as he scolded Bane. Shopkeepers were necessary. Bane needed to amend his way of thinking.\n\n\"He's right, though,\" Christof said quietly. \"You don't enjoy the jobs here the way you enjoyed writing for the children or spending time with the young...\"\n\n\"Rose could help me,\" I contemplated. \"We could work as a team. She knows more about teaching than I do. I'm sure she'd be willing.\"\n\nIt was decided, as far as the family was concerned. I was going to teach our young. The education of Mycah's family would be my responsibility. Everyone was sure the Administrators would approve this change in jobs. It was the appropriate thing to do.\n\nAfter our lesson on cleaning, we hung up the wet garments and stripped out of our clothing. Evan and Rynal took the protective wraps off of Jonathan and Aiden. We all examined the marks and I was shocked. Everything was almost entirely healed. The boys looked as good as new. Tos assured us the Healers would take the stitches out later today. The skin was holding together just fine.\n\nMycah's family was a little hesitant to get in the water after we finished examining them. Our attention to their wounds had reminded them of the excitement the day before. The aliens had been frightening and too much for the young family to handle. We coaxed them and pointed the guards in the bathing pool out to them, but they wouldn't get in until Damien's family patrolled the pool.\n\n\"They trust family,\" Hodlen said watching my men make their sweep. \"Your family has done a good job with them. This is how they should feel. We had thought it would take much longer to earn their trust.\"\n\n\"Evan and I loved Jonathan with our entire being when he was born,\" I told the man stoically. \"We would have done anything to keep him. It nearly broke us when he was taken. I cannot imagine giving up as many male offspring to the compounds as you have.\"\n\nHodlen was thoughtful for a moment before he spoke.\n\n\"Our mountain home was a dangerous place,\" he said looking out across the pool. \"My Brothers and I knew that our young would grow strong in the compounds. The Great Harmonious Spirit was at work and we would not be separated forever. We never doubted that they would join us eventually. It is a pleasure to finally be able to care for at least one family as we should, though.\"\n\nI nodded as Damien and his Brothers bounded out of the water in front of us. They were dripping wet and grinning broadly with their teeth down. They looked ferocious, but I knew the visual was to reinforce to the children we could protect them.\n\n\"No aliens,\" Evan said, shaking the water out of his hair, \"just lots of places to swim.\"\n\n\"We bathe together and then learn to swim together,\" Damien commanded, eyeing Aiden and Jonathan. \"You two need to help your Brothers learn to swim. No one goes off on their own today.\"\n\nHodlen and his Brothers were impressed Aiden could swim. After our bath, the men all practiced swimming some. The boys progressed very quickly, probably thanks to the Aiden and Jonathan's influence.\n\nHodlen's family wasn't lying, they'd never been in this much water. Damien's family, as well as, several others around us took the time to instruct them. By the time we left the bathing hall the men had a solid grasp on the movements they should be making in the water.\n\nBreakfast was a happy affair. Rose and her family ate with us and she was honored to be asked to help teach our boys. My friend adored children and the idea of being such a fundamental part of their life really appealed to her. We preformed a valuable function in Armant's shop, but it wasn't what we wanted to be doing.\n\nRose and I both respected the camp's Administration. We would not change jobs without officially notifying them and being granted permission. Our current job duties split us between the infirmary and the clothing shop. My friend and I put an official written request into the Administrators, but we would to continue our duties until a decision was reached. The leadership was so busy, neither of us expected an answer for a while.\n\nDamien and his Brothers had been assigned to patrol today. Since Hodlen and his family were new, they would follow my men around. Before they left for their duties, the men took Jonathan and his Brothers to the Child Keepers.\n\nI walked with Rose down the crowded main hall to Armant's working area. The camp felt a little gloomy, because the skylights were all closed. I knew this was necessary for all of our safety. Still I missed the sunlight that used to stream in from the ceiling. It would have made it feel less cramped. It would take time for the women to excavate enough room so the camp didn't feel overburdened with men.\n\nAs we got closer to the area with the shops, I was surprised to see tables placed between the fire pits. Men sat at the tables working on boots, coats, and shirts. It was the shopkeepers from the compounds. These men were diligently doing the jobs they had always done. All of them stopped as we passed by and watched us intently.\n\n\"These are free humans,\" Armant announced loudly while walking toward us. \"They have mates they have chosen in the camp. You may touch them with their permission and we encourage you to speak to them. Just as you are not slaves to the women's demands these humans are slaves to no one.\"\n\nThe men around us murmured, some tried not to stare and others watched us openly. There wasn't really malevolence in their faces, just abject confusion. They'd never seen a human up close and they seemed to be waiting for something. Armant stood a body's length away from us, waiting also, and it dawned on me.\n\n\"Good morning, Armant,\" I said loudly and cheerfully, \"Rose and I came to help you sew today.\"\n\nApparently, the conversation was what Armant wanted. He grinned and watched the shopkeepers around us as he spoke. I assumed he wanted them to see a normal interaction between us.\n\n\"The shopkeepers from the compounds are helping us now,\" Armant said motioning. \"We have many more tailors than we need. Perhaps you and Rose should go to the infirmary, your skills may be put to better use there. It is your choice, of course.\"\n\nRose spoke up and I was surprised by her concern. \"They need to learn about the world, Armant. It is very important they don't limit themselves. Sitting and sewing all day will not teach them freedom. This is a very different place from the compounds.\"\n\n\"Not all today, cousin,\" Armant answered in a gentle tone. \"We will teach them slowly, just as we taught you at your pace. They feel comfortable sewing, so we will start with that. This afternoon we may have some lessons with swords or perhaps about the creatures that live in the forest outside.\"\n\nRose was insistent as she looked around at the men surrounding us. None of them were armed and some of them looked ready to hide under the tables. Shopkeepers had been kept from exhibiting any form of strength or self reliance.\n\n\"You should not let their fear limit them,\" she said decisively. \"This is a very wild world-\"\n\n\"Relax, Rose,\" Armant chuckled, \"you would have them fighting racks by this afternoon. They need to be slowly introduced to new things. We will encourage them to explore more once the aliens are under control. I promise you we will not bind them to this job.\"\n\nRose was hardly deterred, but then she was never deterred. My friend was stubborn and decisive. She'd made up her mind about this and would not stop.\n\n\"They should at least be allowed and encouraged to carry weapons,\" she said crossing her arms. \"If something happened they couldn't even begin to defend themselves.\"\n\nArmant watched Rose with appreciation on his face. She'd come a very long way from the girl who refused to look at him.\n\n\"It is not forbidden for them to have weapons, but they did not have them in the villages. You have my word that by the end of eight day cycles every man here will have a weapon,\" Armant said solemnly. \"The smiths will start to measure them today. I will make sure of it myself.\"\n\nRose seemed pleased as we walked to the infirmary. She didn't like to see the shopkeepers unarmed. This was not a place to be without a weapon. I had to agree, how many times had I drawn my own to protect myself from danger?\n\nThe infirmary was the same story as Armant's shop. Healers from the compounds were already helping out. Even with all the wounded they were well staffed with trained professionals. Rose and I would not really add anything to what they already had. Rhane and his Brothers suggested we go see if Armant needed help today. They seemed so frazzled by the confusion their extra helpers created we just politely agreed and left.\n\nOur next idea was the hall where they were keeping the freed slaves. We had been helping with them, perhaps they could use our talents. It was the next best place to try to work.\n\nToday Hassar and Reed along with several male Administrators had stopped by to discuss the options the freed women had. Our leaders had come down to have a frank discussion about future choices. There were risks to staying and risks to going. It was all being openly talked about.\n\nOff to one side I was surprised to see Fuji surrounded by women that looked a lot like she used to. These women glittered and stood nude, even in the cold, but I was sure it didn't bother them. They were demure and attentive, as good slaves from Batra should be, but they couldn't take their eyes off Fuji. Something about her had captured their attention.\n\nRose and I made our way toward Fuji's mane of hair. She had new scars on her back and sides. Our friend must have been part of the war outside. Fuji looked battle tested.\n\n\"I will teach you freedom,\" Fuji was stating in a resonating voice to her audience. \"You will grow strong and powerful like I am. You cannot go back to Batra as you are, we have much to do first.\"\n\nThe women didn't say anything, they just watched her. It was obvious her appearance had the desired effect. Fuji's appearance was shocking; she looked powerful.\n\nOur friend turned to greet us and walked toward Rose and me. I noted right away Fuji was moving differently, almost prowling. There was a speed and fluidity to her movement I'd never seen before. Her eyes seemed to take in every part of Rose and me before settling on our faces. Fuji looked very much like she was hunting.\n\nMy heart sped up a little as Fuji got nearer. I heard Rose catch her breath beside me. It was hard not to feel like prey when being approached in such a manner.\n\n\"Do you fear me?\" Fuji asked in an almost laughing tone as she stopped less than a body length away. \"I didn't expect the smell of fear from you, old friends. There is nothing to be worried about.\"\n\nIt was hard not to feel a little concerned. Fuji looked like a predator you'd see in a zoo, one you'd want held safely behind the bars. My finely honed instincts screamed caution.\n\nRose regained her composure and smiled a warm smile.\n\n\"You just seem different,\" Rose stated, trying to shrug nonchalantly .\n\n\"My race are hunters,\" Fuji practically purred, stepping closer, as he tail moved hypnotically. \"We are carnivores and I have rediscovered my natural tendencies. Being outside hunting everyday brought most of it back. The battle gave me the chance to fully explore my instincts.\"\n\nI felt the girls roll in my belly and found honesty the best policy.\n\n\"Do you eat humans now?\" I asked bluntly. If she did, we'd be having this discussion with the business end of my weapon aimed at her.\n\nFuji laughed for a moment before calming down and meeting my eyes.\n\n\"No,\" she stated simply, \"I don't think so, but I won't change who I am to make you happy. I've done that for too long.\"\n\nI looked into Fuji's strange purple eyes and understood her, probably for the first time. You could tame a creature, but you could never take away its basic instincts. The things that made Fuji who and what she was had been beaten down, but never dissolved. Her spirit had lay silent and dormant, but it was back now.\n\n\"If you're going to start hunting Paterians, they aren't going to like it,\" I warned her, while dropping my voice.\n\nFuji flicked her tail and seemed almost bored with this conversation.\n\n\"We aren't going to hunt Paterians,\" she remarked almost flippantly. \"These women are going to become strong and then we will go reclaim our home planet. This world has no interest for me. We cannot breed and grow my race here.\"\n\nI looked past Fuji at the perhaps twenty huddled women from Batra. They didn't really seem like a fighting force. I raised an eyebrow and looked at Rose. She had the same look on her face; it irritated Fuji.\n\n\"It will take time and I have to get all of them here,\" Fuji said in an exasperated tone. \"I know I can't win with just this.\"\n\nI was incredulous as I questioned Fuji, \"You're going to take over the whole planet with just the few slaves on this planet? It just seems impossible.\"\n\nMy old friend brushed off my concern with a casual air. \"My planet is weak,\" she stated with conviction, \"wait and see what I do.\"\n\nIt was not an idle threat Fuji was making and I understood that. She was commanding, now that she'd discovered herself. I felt for sure she would surprise the slavers of her home world.\n\nRose and I stayed for a few moments to listen to Hassar speak to the other races of women, but it was obvious we weren't really needed. Hassar made it quite clear the choice Rose and I made should not influence the other women. Our behavior had been quite frowned upon at the time.\n\nThe women asked many questions, but Hassar and her Sister answered them. Rose and I were not asked to participate in this session. We almost seemed in the way. My friend and I slipped out when we realized we were just sitting and listening like everyone else. This was not how we could provide for the camp.\n\nRose and I walked through the halls and found a quiet place to sit beside a fire pit. Neither of us was sure what to do. Distantly we heard the occasional boom that told us of skirmishes still raging with the aliens outside. It didn't feel like a good day just to take a day off. There had to be something we could do.\n\n\"We could help with the children,\" Rose said innocently. \"I'm sure the Administrators won't object to you teaching your own young. We could go and see how the children learn today...\"\n\nI smiled slyly at her and had to agree. Spending the day with our little boys would really appeal to me. It wasn't like we had any clue what the boys did all day. We should go down and watch for a while before we tried it ourselves. There was most likely some sort of curriculum they used.\n\nThe children's area was near the infirmary, deep in the mountain. It made sense to cluster the weak and defenseless together. The entrance was set back off the main thoroughfare. We had to walk a short distance down a hall to reach the actual entrance. I was a little surprised to see a door at the end of the hall. The strong metal structure was a powerful reminder of what children were worth. They would always be protected.\n\nOutside the entrance to the children's area an armed guard of three families stood. We'd had too many close calls with sneaky aliens and we certainly had enough Warriors to spread around now. The men were friendly it seemed, but vigilant as we approached. \n\nThe guards from the camp made a point to introduce themselves and speak politely to Rose and me. There were men with them that must have been Warriors from the compounds. I assumed our campmates had been told to model good behavior. Rose and I returned their greetings and made small talk.\n\nUnlike the men last night, these Warriors seemed more accepting of our equality in the camp. They watched us curiously and spoke to us cautiously, there was no malice. I figured they either had no real opinion on humans or were just going with the flow of the camp. Either way, I was relieved not to have to fight again. The night before had been stressful.\n\nThe door was opened, after it was unlocked, and the guards allowed us entry. After we stepped inside I heard the heavy structure closed and re-secured. The men were leaving nothing to chance.\n\nThe inside of children's area was a shock for Rose and me. It was so well lit I blinked a little. I had not realized they'd brought this many young ones back, although the size of this space still dwarfed the men and boys in here. It was like the inside of a football stadium. It appeared all the boys were taught together, although they seemed to be divided by age group.\n\nOlder boys sat to one side and they sat at tables. As the children got smaller they tended to have them grouped sitting on the floor. I imagined they'd run out of tables and the little boys probably didn't mind. Several groups of men were with each different age group, presumably teaching.",
        "Sparing a second look at the room we were in I had to smile. If I had to imagine a Paterian school, this would be it. Based on the marks on the floor the periphery was a track the boys could run. On the left wall were huge diagrams of wrestling moves and the sword fighting positions. The right wall was dedicated to plants and animals in the forest. The far wall was a map of the entire planet. Beneath the map I could just make out short descriptions of the different areas.\n\nEven in this dangerous time the boys still had their lessons and their physical exercise. My campmates had made sure the children would not suffer if they had to stay inside for some reason. Everything continued and they still got to learn, even in times of danger.\n\n\"Mama!\" I heard five voices yell out in synchrony.\n\nMycah and his Brothers dropped what they were doing and ran to me. Instinctively, I knelt and held my arms out to them. The boys expected a kiss on the cheek and a little hug. Daddy and Damien had told them that's how I should greet them. They returned the affection with their usual exuberance,\n\n\"We're learning about animals in the forest today!\" Mycah told me excitedly.\n\nThe little ones couldn't wait to tell me all the things they'd learned already. The Child Keepers had even promised to take them to see for themselves, once the aliens were gone. The boys were enamored with the idea of getting on the big transports and experiencing the bright green world they'd seen outside the tunnels.\n\nI noted men approaching and I encouraged the boys to go back where they had been. My presence here should not be detracting from their education. Mycah's family didn't want to leave me, though.\n\n\"Come with us, Mama,\" Rees begged. \"We like it when family is with us.\"\n\nAs I stood, I smiled down at him and then greeted the lead Child Keepers. They were campmates I'd never gotten to know, but it was evident to me they were formidable men. The five of them were muscular and commanding. This family was obviously in charge of everything here.\n\n\"Ciara, from Earth,\" I said politely to the man who appeared to be the lead Brother. \"I am Damien's mate. My job is usually with the tailors or the Healers, but I am not needed there today. My friend and I would like to assist with the children. It is something we both enjoy. Our families want us to Keep Mycah and his Brothers during the day. We wondered if we could help today, just to get an idea of what you do. We have put in a written petition to the Administrators.\"\n\n\"Hyun, born in the T'lynien Mountains,\" the lead Brother announced in a deep bass. \"We would be glad for more help and you are encouraged to Keep your own family. My Brothers and I would be happy to help you learn.\"\n\nI smiled realizing Hyun was born in this very mountain. He was probably a wealth of information about the world around us. The children were lucky to have men like this teaching them.\n\nIntroductions were made between Rose and the rest of the Brothers. After my friend said her name a slightly smaller Brother in the back, named Lul, pulled out his pad and started to slide his fingers across the face. His face brightened as he looked back up at Rose.\n\n\"You are mated to Basin's family, rescued from the Caras compound?\" Lul asked.\n\nRose was proud of her family and smiled as she answered affirmatively.\n\n\"Saves us a trip, then,\" Lul said happily, \"we have a young family here that was bred by the third Brother in Basin's family. My Brothers and I have been watching them, but they should be with their breeders. There has been so much to do with all the boys we have not had time to bring them to Basin's family.\"\n\nHyun misunderstood the look of shock on Rose's face.\n\n\"They were to be returned sooner,\" Hyun pleaded. \"We have so many children here right now. Caring for their immediate needs was our first priority.\"\n\n\"We could not continue to leave them with Child Keepers from the compounds,\" Hyun's Brother continued. \"Those men do not understand the right way to treat children. We have been finding the children's families as fast as we could. There is training that must happen with many of the men first. It is time consuming and we worry about who the children are left with...\"\n\n\"Especially the very young,\" Lul said agreeing with his Brother. \"The little ones need special care. They couldn't be left with just anyone...\"\n\nRose regained her composure and sought to calm Hyun's family.\n\n\"We did not know there were children,\" she said. \"My mates and I would gladly care for them and we are not upset you kept them safe. No one had ever told us these children existed...\"\n\nHyun and his family relaxed visibly as Lul turned and called out toward the smallest boys in the whole hall.\n\n\"Edas, bring your Brothers and come here! I want to introduce you to your new Keeper.\"\n\nFive small boys were running toward us a moment later. They were younger than Mycah's family, that was obvious. In fact, they barely looked old enough to be at a compound. In their haste, one of them tripped and fell, dragging a Brother down with him. Their lack of coordination told me these were very young boys.\n\nRose didn't hesitate and went toward them, just like Hyun did. She picked the little boys up off the floor and set them on their feet before examining them closely for injury. They were surprised, but didn't fight as she fussed over them. The little family watched her closely until one boy spoke.\n\n\"You no have stripes!\" he announced proudly.\n\nRose smiled as she knelt down in front of him and he grinned up at her.\n\n\"I do not have stripes,\" she crooned. \"You are a very observant boy. What is your name?\"\n\nThe five little ones announced their names proudly. Edas and his family didn't have any fear of Rose. Hyun told them Rose would Keep them today. The children seemed to like the attention this new strange looking Paterian was paying them.\n\nI noted how the boys instinctively wanted to be close to those around them. The compound had not started to teach them the devastating lesson of drawing in yet. These boys would be socialized the way they should be.\n\nI could not imagine how crushing it must have been for Damien's family to grow up in a compound. Isolation was not natural on this planet, far from it. Men needed groups and other Paterians. Their nature was to be outgoing and trusting.\n\nJonathan jerked me out of my thoughts as he pulled hard on my skirt.\n\n\"Mama, where's Daddy?\" he asked looking at the door. I got the impression I had a heart beat before he tried to get out the entrance. Remembering his family's persistence, they might actually succeed.\n\n\"Daddy is working,\" I said grabbing Mycah's hand and Jonathan's hand. \"We have to learn about the animals in the forest today.\"\n\nI pulled my boys back to where they'd been and Rose walked with Edas and his Brothers. It wasn't even mid-morning when Hyun and his Brothers left us alone to continue instructing our boys.\n\nThe method of instruction was unlike I'd experienced on Earth. I sat in a circle with my family and we talked. It was my job to teach them about animals in the forest. I had access to a pad so I could show them pictures of the things I talked about. I made up stories about the animals to keep the boy's attention. They were expected to answer questions after I was done.\n\nI had to puff with a little pride when several men settled their boys behind mine. My imaginative stories captured the attention of my audience. The lessons were interesting and they picked up the facts quickly. It felt good to be someone the other men trusted their young with.\n\nRose was doing something similar with her young boys. Edas and his family were learning their colors today. Rose used her pad to help the boys learn the colors of the things in the forest. While she was at it she also taught them the names of things. The young ones picked it up with ease.\n\nI felt a little guilty as the morning wore on. My men were out looking for dangerous aliens and I was sitting safely inside. It seemed grossly unfair to me, until I concentrated on Damien and his Brothers.\n\nMy men had been raised to be Warriors, but they were never really allowed to fight. Now they soared through the forest hunting invaders with their cousins. This was exciting. The Great Harmonious Spirit linked them to the other fighters in the camp and they battled as one being. It was exhilarating.\n\nThe aliens were systematically removed from the area around our camp. As each section was cleaned the men moved on to the next area. By nightfall the men would have a massive area cleared of invaders. Frankly, they were having a great time.\n\nTime came for the midday meal and the young boys were all ravenous. The food was delivered here and set up on a series of tables along one wall. Whoever was Keeping the children was responsible for fixing their plates. Rose took the initiative to look at her boys' marks before preparing their plates.\n\n\"No rupe for them,\" she announced peering down at one little boy. There was a human slave in his line one generation back.\n\nHe looked up at her and frowned. His Brothers liked rupe. They had given it to him the day prior and the day before that. The family had been forbidden it in the compound. He and his Brothers thought it was a treat that they could have it here.\n\nRose looked horrified. She'd seen what rupe had done to me. Humans, and those with human ancestors, couldn't eat rupe because we didn't absorb the nutrients from it. In the compounds, families like mine, with a human ancestor, never touched that food. Families would share and it was dangerous to risk them sharing rupe. The fact these boys had been given it was awful. One of them may have had no nutrients for days.\n\nThe men Keeping these children must have been too busy to have noticed this detail.\n\n\"How sick would he have been if they'd been left with those men?!\" Rose said to me in English. She seemed very offended that her boys had not been cared for correctly.\n\nRose's attention turned back to Edas's family when she spoke next.\n\n\"Rupe isn't good for you,\" she said firmly and glanced at the table of food. \"I'll bring you something better to eat.\"\n\nEdas' family wasn't sure, but they knew Rose was Keeping them. When she returned with their meals she also brought chilled green stalks, I was sure she'd win them over. The boys each got to try one and they really liked those. These were much better than rupe. They all ate the healthy meal Rose picked out and then chewed on the stalks happily.\n\nOur afternoon was slightly different from the morning. Healers showed up and removed the stitches from my little boys. Mycah's family wasn't nearly as calm as when they were placed. It took a good deal of effort to get the boys still enough for the men to do the job. Luckily, the Healers cleared the children to join in the physical activity that commonly occurred this time of day. That was a relief\n\nIt was late afternoon when we all had a jolting surprise. Damien and his Brothers watched as one of the women's ships drew close to our camp. The men outside didn't run and held their positions, waiting to see what would happen. Still, I knew there must be some apprehension. Mycah's little family was grabbed by The Great Harmonious Spirit, as were many families in the hall we were in. Nothing was left to chance as this strange event played out.\n\nWhoever was steering the large vessel did a good job. The warship came to rest slowly in a small clearing along the mountainside, just outside our main entrance. The engines to the metal beast shut off and it sat unmoving at our very doorway.\n\nI was inside, with the mostly quiet children, but I saw what Damien and his Brothers saw. My focus was riveted on the drama they were watching. None of us knew what to expect.\n\nIt was like a scene from a movie as a piece of the ship lowered to the ground and a ramp was formed. From the size of the ramp I imagined you could have run two transports inside the ship side by side. Something big and dangerous could come down that ramp and I personally felt fear, although the men were as calm as ever. They were always calm and organized when The Great Harmonious Spirit had them.\n\nMany moments passed and there was movement at the top of the ramp. A Paterian woman walked down the ramp with two large bags slung over her shoulders. It took me a moment to recognize Dinah, Nu-reeh's Sister.\n\nI gasped loudly and so did Rose. My eyes met hers and we both wondered what was going on. My feelings intensified when Nu-reeh strolled down the ramp behind Dinah. Much like the other woman she carried two enormous sacks. Tosu came down last, limping heavily, but carrying a load similar to her Sisters'.\n\nThe men evaluated Tosu's wounds from a distance and I felt their concern. She had a bloody mark still oozing from her upper stomach. From her gait and the strange look of one leg it was either broken or just badly damaged. One wing hung oddly and the men could see where something had tried to tear it off. Our friend would not survive with these wounds much longer unless they were tended.\n\nThe women walked toward the ground level entrance of the transport storage area. The men didn't stop them, but they watched observantly from all around. Except for Tosu, these women had not been invited here, but The Great Harmonious Spirit would not turn them away. They were Paterian and at least one of them was in need of our help.\n\nNu-reeh and her Sisters passed into the entrance and walked slowly through the transport storage area and into the main cave. There were countless men controlled by The Spirit still inside. They came out and lined the hallway as the women passed through.\n\nMen from the compounds and men from the mountains hid behind my campmates and in the interior caves. Most of them had not been grabbed by The Spirit. They didn't feel safe with the slave owners here.\n\nSeeing things that my mates saw was one thing. Over many moons I'd become accustomed to seeing with their eyes. Watching the world through the kaleidoscopic lens of thousands was somewhat different. There was no place in my mind to take in everything that the men controlled by The Great Harmonious Spirit were perceiving and acting on. To end my discomfort I got up and went to watch this for myself.\n\n\"Watch the boys for me?\" I asked Rose and she nodded.\n\nHer little ones were quietly coloring together. They were not bonded to the men here, yet, and they were oblivious to what was going on. Edas and his Brothers were continuing the task Rose had put them on.\n\nMycah's family sat quiet and pensive. I didn't think they'd go anywhere right now. The Spirit would keep them safe. Rising as quickly as I could I bolted out the door and into the hallway. The guards at the door didn't spare me a glance as I passed them, but they did re-lock the door. All of them, even the Warriors from the compound, had been grabbed by The Great Spirit.\n\nAs I ran I considered the implication. Men from the compounds were acclimating to the camp, some faster than others. It was good to see, because being bonded to The Spirit gave them enormous strength.\n\nI moved quickly and quietly, intent on watching this strange display for myself. Much like the men, I had no idea what slavers were doing in this camp. They didn't act like they were here to take men, but I was sure that was the point.\n\nPerhaps they wanted to make a trade for whatever it was they carried? I just wasn't sure.\n\nThe scene in our main passageway was amazing. The men from the camp stood in vast numbers watching and waiting for the women to walk past. They didn't speak and they didn't move around. It was unnerving. I made my way behind them down the passage.\n\nI moved until I saw Nu-reeh and then I stopped cold. She was almost to the Administration area. The big woman noticed me and I saw her eyes flash in anger, but another more pressing matter got her attention. Still, my hand was already on my gun and I was ready for anything.\n\n\"Nu-reeh!\" Hassar called out. \"What a surprise to see you and your Sisters in our home.\"\n\nHassar stood on the stage in front of the Administration's main room looking left and right, taking in the crowd lining the halls. The men were absolutely quiet. It was that eerie silence that The Spirit imposed on them. Reed joined Hassar and the Sisters shared a look before turning their attention back at Nu-reeh.\n\n\"It appears you have taken all of our men,\" Nu-reeh said calmly, but pointedly. \"Our loyal cousins that saw this place have alerted us. We could not leave them here without sustenance for their bodies.\"\n\nThe bulky bags must be grain or some sort of food product, it was an interesting turn of events. Nu-reeh and her Sisters had loaded supplies from the compound or mountains and brought it here. It was a good, believable ploy to get inside.\n\nHassar and her Sister had no time to answer as the hall responded to Nu-reeh. The men grabbed by The Spirit spoke to her as one being and it was thoroughly creepy and unexpected. The walls seemed to vibrate with the combined sound.\n\n\"We took our cousins from your bonds and have given them freedom,\" the men said clearly. \"They did not belong where you had them and they were in danger. We will stay together. You may leave the food you have brought in our dining hall.\"\n\nHonestly, judging by their faces, I don't think even Reed and Hassar had seen the men respond to someone like that. Nu-reeh and Dinah had certainly never seen it. Tosu's face looked so tired, but I saw her almost smile. She was surprised, too, but obviously pleased.\n\nHassar cleared her throat and pointed down the passageway.\n\n\"The men eat in a place just several openings down-\" she said and the men interrupted her as a group.\n\n\"We will escort the slaving women Nu-reeh and Dinah to our dining hall. Tosu will be taken to the infirmary for rest and healing.\"\n\nNu-reeh stiffened her spine and her eyes blazed with anger. She didn't like being told where to go one bit.\n\n\"My Sister, Tosu, will heal from her wounds if she is able,\" Nu-reeh said in a growl. \"My family will not act like those weak-\"\n\nThe men cut her off, not by speaking, but by moving. Waves of men controlled by The Spirit forced Tosu past the other Sisters. Transports swarmed the hall above our heads, reminding the women the men could fly. Tosu's load was taken from her and she was pushed forward and away from her Sisters until she sat on a transport. It began to glide toward the infirmary.\n\n\"THAT WOMAN IS NOT YOURS TO CONTROL!\" Nu-reeh roared dropping her bags.\n\nThe men did not answer. Tosu would be helped by us and Nu-reeh's opinion was irrelevant. Tosu had not refused our help. The silence enraged Nu-reeh and Dinah further. They looked furious and the men continued to look impassive.\n\nThis camp just would not let a Paterian die without doing everything they could. The men here felt an obligation to the other men and the women on this world. In addition, Tosu had been in this camp as a friend many times. The men had a personal reason for wanting to save this woman. Tosu was our friend.\n\n\"You will heal and you will help us rebuild our world,\" the men stated as they took Tosu toward the infirmary. \"We will not see good women die when we have the power to stop it.\"\n\nNu-reeh started to curse and push at the men, but it was like fighting the sand. They avoided her claws and held her at bay by constantly moving and shifting. The swarming transports above even stopped her from taking flight. The men wound around her in a graceful ballet of movement. Nu-reeh was livid and I was shocked.\n\n\"Do not fight them,\" Tosu called back weakly. \"I wish to heal and help rebuild the world with them. I have not been honest before now, Nu-reeh, my allegiance lies with the rebels. Their beliefs are my beliefs and have been for a long time.\"",
        "Nu-reeh and Dinah both looked too angry for words. I saw the venom start to sprout from their fangs and I felt intense fear. A single drop of that could kill the men. It was a deadly form of attack and it was intended for Tosu.\n\nMy campmates saw the women's rage start to boil out of control and they stepped back in unison. Weapons were drawn and the men stood innumerable and ready. Cannons from the armed transports were aimed before the men spoke again.\n\n\"You may not stay in our home if you threaten us with death. We have a right to be free and be together. Tosu has a right to heal and help us in the future. We will protect our rights,\" they said pointedly.\n\nThe women's tempers were reigned back in and I saw Nu-reeh's analytical mind start working. She wanted her men back and getting kicked out of here limited her ability to do that. The women both licked the venom away and put on peaceful faces.\n\n\"We only wish to help nourish you,\" Nu-reeh said as sweetly as I'd ever heard her. \"My Sister and I have much more we have brought you all.\"\n\nThe men separated and opened the way back to the main entrance. I looked up and down the hall, but they'd already moved Tosu into the infirmary. Now it was just a long passageway dotted with fire pits and lined with men.\n\n\"You don't even attempt to protect them,\" Nu-reeh said cooly, addressing Reed and Hassar who still stood stoically on the stage.\n\nHassar didn't seem perturbed by the jab.\n\n\"They didn't seem to be the ones that needed protecting,\" she retorted.\n\nMy eyebrows raised at the slightly inflammatory comment, but our Administrator was correct. The men had complete control of the situation. In fact, they could have handled many more aggressive women without an issue. There were just so many men and they worked so well together. The women just weren't cohesive like that.\n\nIt wasn't like the men had been without their female cohorts, though. I looked up and saw women standing just inside the caves all over above our heads. They had taken Hassar's lead and stayed away, but they had never abandoned their male campmates. The women had merely let the men handle this the way they wanted to.\n\nSeveral families came forward and grabbed the bags the women had brought and dropped on the floor. It took two men to lift each bag onto a transport. All six bags were flown toward the dining hall.\n\nNu-reeh and Dinah watched the men and then walked back toward their ship. Several of our transports followed them, partially to watch them and partially to get the food they had brought. The men would not waste the bounty these women had delivered.\n\nI felt The Great Harmonious Spirit shift. Not everyone was necessary to keep a watch on the slaving women. Most of the men were released to go about the jobs they had been doing. A contingent of men was assigned to stay vigilant in case the women tried something.\n\nQuickly as I could I walked back to where Mycah and his Brothers were. They would have gone from calm to wild in an instant and I knew that. With only Rose to watch them, who knew what trouble they could stir up.\n\nSome of the men gave me a look when I returned to the Children's Hall, but no one said anything. The camp was respectful of my rights to do as I wished, even in they didn't understand the incentive. I had to appreciate their silence on the matter of my wandering off.\n\nAll in all I had to admit that training the children would not be as difficult as I'd thought. The men who Kept the children had a curriculum and we all loosely followed the same one. As the boys aged the things they did and learned changed, but there was a fairly standard set of things we taught them. The only difference would be who taught the boys.\n\nRose and I both felt that this was a job we could excel at. Our boys would not suffer from having us as teachers. When we had more dangerous lessons, like the ones outside, there would always be others there to help us protect our families. This was a very workable solution for both of us.\n\nWe sat and talked and I didn't notice Basin and his Brothers until they were standing less than five hand spans away. Edas' little family was busy wrestling on the floor. They didn't look up as the men stood and stared at them.\n\n\"They are...ours?\" Basin asked quietly.\n\nHe seemed stunned. I suppose he'd never thought about his family having children. The women had used him and his Brothers frequently while they were at the compound. No one had ever told him there was this outcome, though. Seeing the physical proof of a mating was evidently amazing him.\n\nRose called the little boys over and the men introduced themselves. Edas and his Brothers didn't feel any particular attachment to the five large men in Basin's family, but they weren't afraid of them either. I saw their confusion when Basin told them they'd be staying with him and his Brothers at night.\n\n\"We stay with them,\" Edas said clearly, pointing at Hyun and his Brothers.\n\nI watched the anger flash in Basin's eyes as he looked up at Hyun. His instincts to care for this family were strong. He and his Brothers had watched my family with Jonathan, apparently they wanted that, too.\n\n\"Basin and his Brother are good men and they are going to Keep you,\" Hyun told the little ones as he stepped closer. \"Rose stays with Basin and his Brothers. You will go with them tonight.\"\n\nEdas and his Brothers liked Rose, a lot. She talked to them and played with them. She'd made them the center of her attention. At lunch she'd given them treats. The idea of leaving with her was very acceptable to the young boys.\n\nBasin and his Brothers knelt and touched the little boys. They straightened their clothing and brushed their hair back. Edas and his Brothers didn't understand, but they wanted to see the weapons Basin's family carried, so the nearness was fine. The big men sat on the floor and let the boys examine their heavy swords, although they kept little fingers away from the sharp edges.\n\nI had to admit watching this was odd. In all the time I'd known Rose and her family, I'd rarely seen her men look surprised and definitely not like this. The big men were sitting on the floor and talking gently to the young boys. They encouraged Edas and his Brothers and answered the simple, childish questions patiently. I would not have guessed they could be like this.\n\n\"The camp encourages us to revere the young. They are the future of The Great Spirit,\" Damien whispered in my ear. \"The other men teach us how to treat children. It was part of what we learned while we were separated from you.\"\n\nI turned to see my family a moment before Mycah and his Brothers saw them. I smiled at the contented faces my men had. They were enjoying watching their boys practice wrestling on the floor. Our little ones were strong and fierce. They would thrive in the world.\n\nI had just a moment to kiss each man hello before the boys were on them. They said their greetings and then they wanted to know where Hodlen and his Brothers were. Mycah's family was watching the door intently for their other family.\n\n\"An alien broke Kee's sword with one of those beams,\" Bane said ruefully shaking his head, it had been a fine strong blade, losing it had been a shame. \"They went to see the smiths to check about a replacement. His family will meet us for the evening meal.\"\n\nThe casual comment had my attention and I was able to delve into their memories. The fighting that broke Kee's favorite weapon had been intense. In my opinion, they were lucky they'd only lost a sword to it. My men just grinned at the memory. The battle had been fun and necessary.\n\nI was worried as I looked at them. Without my family, I would feel lost on this world. Something happening to them was unfathomable. Kein shook his head as I received gentle, comforting touches from the whole family.\n\n\"You would survive and we would go to The Great Harmonious Spirit,\" Kein said. \"The boys would stay with you and our surviving extended family. We cannot hide from this battle, wife. The aliens would take everything we had if we let them.\"\n\nHe was right, I knew he was. It didn't mean I had to like the danger they put themselves into everyday.\n\n\"Better us than them,\" Christof said gesturing to Mycah's family who was back to wrestling with one another.\n\nWe watched as the boys practiced the simple moves Hyun and his Brothers had taught that afternoon. Aiden was very, very good. He'd never suffer in hand to hand combat, even my untrained eyes were sure of that. Jonathan and Rees both seemed to have a slight weight advantage, if they could figure out how to use it. Their human ancestry gave them heavier bones and a smaller stature. They both had a lower center of gravity. My men watched them all with critical eyes, knowing what we would have to do to train them to reach their full potential.\n\nFor everything the men had done today, all the excitement and battling, this was more important. The moment they stepped next to Mycah's family, the boys were the focus of their attention. Damien and his Brothers had not realized how good it would feel to be responsible for their young.\n\nThe halls were again crowded with men as we moved toward the eating area. I saw huge boxes of something stacked outside the dining hall. Bags the women had brought were also stacked there. Mycah's family tried to climb on them and Damien's family quickly told them no.\n\n\"That is our food,\" Damien said pulling Niah and Mycah back, \"it isn't a place to play.\"\n\nAbram's family was at one end inspecting a bag and they greeted us as we walked by. I noted Rue and his Brothers at another bag and saw Arik's family inspecting a crate further down. Other men I wasn't familiar with were loading the different items onto transports. The bags they loaded were all marked with symbols that meant \"checked\" or \"clean\", unmarked items were not touched.\n\n\"They tried to poison us?!\" I said louder than I meant to.\n\nRue's family heard me and they all snorted before turning to look at me. My truce with them was tenuous, but my outburst gave them reason to act superior. Usually we were just polite and professional around one another.\n\n\"The human that suggested the food may have been tampered with told us this was how wars have been won on your own planet. Don't you know your own history?!\" Rue asked in a mocking voice.\n\nRue kept his voice down, because he was being rude. He knew he was being inappropriate, but he apparently couldn't help himself.\n\nDamien wanted to hit the man for being this way, but settled for just staring angrily. His arms crossed in a gesture I was very familiar with. We didn't want to create more conflict for the Administrators when so much else was going on, best to just walk away. My family would have kept moving, but I was curious.\n\n\"I seem to remember Tosu was part of the delivery group,\" I said defending my surprise. \"I can't imagine she would have allowed them to hurt us.\"\n\nRue's puffed a little knowing something I hadn't known. The delivery was made by Nu-reeh, but it had been arranged by several groups of slaving women. Tosu seemed to think it possible the other slavers would not tell Nu-reeh what she was delivering, if it were tainted. Had Nu-reeh and Dinah been detained, there would have been no lie when they said the food was good.\n\nAbram's family approached and heard the last of the conversation.\n\n\"It all appears to be fine so far,\" Abram said to Damien. \"We'll go through everything and make sure it is safe for the camp. There's been nothing so far we've found that could be harmful. Still, I'm grateful to Rhonda for telling us it could be a risk.\"\n\nMy brow quirked and I realized I didn't know a Rhonda and that it was an Earth name.\n\n\"She likes to cook,\" Abram said gesturing inside. \"She is working with our friends now, but she will stay with us as she relearns freedom. The portals seem too dangerous to her, but give her time.\"\n\nAbram's Brothers agreed that the portals were a danger. None of them felt Rhonda had made a bad decision and they enjoyed her company. It pleased all of them to help her. When the Administrators had asked for their help, the whole family had felt a real sense of pride.\n\nListening to their conversation I got the impression being allowed to help with a slave's retraining was quite an honor. Personally, I felt Abram and his Brothers were perfect for the job. Their calm friendly demeanors would make anyone feel more relaxed. \n\n\"We will teach her freedom and how to survive here. If Rhonda wants contact with her former slavers,\" Abram said seriously, \"it will be done in a controlled environment. All of her needs will be met as she regains her strengths.\"\n\nI grunted a laugh and looked over to find my family appearing slightly sheepish. The camp knew we'd snuck around together. I guess the Administrators wanted to avoid having that happen again. While I'd enjoyed the absolute lack of structure, things could have ended badly if my men had not been able to change their outlook. This way was safer, to be sure.\n\nRue and his family had returned to their jobs when it became evident this was just a casual exchange. Damien and his Brothers reigned in the anger as we walked past. Those men were just not worth it. They were perpetually unpleasant. We walked our boys to dinner and just enjoyed the company of the family. There was enough fighting outside for now.\n\nWe wove our way to the cafeteria and I was surprised to see Mia standing outside with a group of men. In the shop at the village Mia had always been dressed in simple Paterian ornamentation. Now standing in the camp was a woman in a flowing multicolored gown with intricate designs. This had not been scavenged from the camp and I had no idea where it was from.\n\nI stared at her until she turned and saw me. Mia walked toward me with a regal air and greeted me in a language I did not recognize. I had no idea what to say to her.\n\nMia had always had a certain confidence, but this was different. She acted like she'd never been a slave. I noted she wasn't with a family. Mia was alone and meeting everyone here on her own.\n\n\"I am E'rsan,\" she said distinctly. \"The words I just used are a blessing, one I have thought each time I saw you breeding. I am a high priestess from a planet called Yallen. I was sold as a slave by my enemies.\"\n\nBane reminded me to close my mouth with a slight nudge. I was staring unabashedly at Mia...E'rsan. She seemed so different and in such a short time.\n\n\"The clothing you have...?\" I stammered staring at the gown and the swirling pattern of gold thread all over it.\n\n\"I made it with found items,\" she said simply and her attention wandered to a group of men passing us. She offered them what sounded like another blessing and raised her hand with her fingers twisted in a strange gesture.\n\nI thought back to the transport with the scared women and the room I'd been in just this morning. E'rsan had been in none of those places.\n\n\"Have you been here this whole time?\" I asked.\n\n\"I was taken to another camp,\" E'rsan said waving her fingers as though casting a spell and murmuring a greeting to another group. \"I wish to travel this world before I leave it. I must leave my blessing, so this world is not cursed by the ill thoughts I have had.\"\n\nI wasn't sure what a high priestess of Yallen could do with ill thoughts, but she must think they were powerful. E'rsan's large oval eyes told me the sincerity of her words. She really believed she could hurt us.\n\n\"How did you get here?\" Damien asked, clearly confused. The next closest camp was a three day transport ride away.\n\nE'rsan turned to look at the lead Brother with a subtle grin. A moment later we were looking at the space she'd been in; it was empty. E'rsan was down the hall, almost out of sight, a moment later she was back in front of us. She moved like the wind.\n\n\"Slavery kept all of us from our true potential...\" Kein said in awe.\n\nE'rsan did not join us for the meal, she flitted about the camp and I heard she left later, traveling to the next camp as the second moon rose.\n\nLife in the camp got stranger and stranger over the next several day cycles. Women, slaving women, appeared regularly. Some would bring gifts, some just demanded entrance; the camp didn't deny any of them. One group tried to grab some men doing patrols. The pathetic attempt was stopped quickly and the women reprimanded by Hassar. Considering the hold those women had prior, their lack of power now was shocking.\n\nThe formerly feared slavers were treated like they were a nuisance. Damien confidently informed me they were no danger to the men. The aliens were our main concern and the members of the camp worked hard to remove them from what we considered \"our\" territory. The slaving women were at this point nearly ignored, which I continued to find odd.\n\nThe main concern most all Paterians had revolved around the ore. Now that we were living openly, the men's opinions could be advertised. Kana had been right about how the free men viewed the sale of the ore. They'd had to stifle their objections to stay hidden. We weren't hiding now, though.\n\nThe free men were vocal and persistent. Women from the camps seemed to share this mindset. It didn't look like the sales would continue and that infuriated the slaving women.\n\nMany of the slaving women had based their life's success on how much they earned from sale of the ore. Not that the proceeds had any worth or use, it was just a measure of how good a miner you were. The idea of stopping the sale was a big change for the women.\n\nThere were debates and talks amongst the various camps. Meetings that took place all over the planet indicated the same thing. Free Paterians didn't like the idea of selling the ore off the planet. That ore represented Paterian flesh and blood, or it had at some point. Selling it to aliens was offensive and had to stop.\n\nI knew what it would mean and so did everyone else. We'd defeated the aliens that had come. All we were doing now was cleaning up the stragglers. If the ore stopped moving, the aliens would come back and in greater numbers. Any group that used the portals regularly would suffer the loss of Paterian ore. Our battle was far from over if this decision became planet wide and enforced.\n\nStill, there was a more pressing threat at hand, in my opinion.\n\nThe slaving women continued to appear and it was obvious they were evaluating the camp's defenses. I wasn't stupid and I saw the looks they tried to so hard to conceal. Of course, some of the women relented and began to change their thinking, but not all of them. Many seemed to be waiting to take their men back.\n\nRose and I fretted about it, but the men were unconcerned. That didn't stop us from talking to one another about it at length and repeatedly. The two of us even talked to other women about it. None of us made any headway.\n\n\"The slaving women are going to try to take men,\" Rose said to me one day as we watched our boys run laps inside. \"I know they are. You've seen the way they look at the men...\"\n\nBoth our families found our concern unfathomable. They had linked up with The Spirit enough times that they shared the collective opinion. The slaving women would change their ways and join The Spirit. That was the accepted dogma.\n\n\"Tosu agrees with us,\" I told her quietly keeping my eyes on my young family.\n\nI'd been to see Tosu on many occasions. We sat and talked as she rested in the infirmary. Her wing was healing very slowly and her leg had started to heal wrong. Those issues were keeping her in the sick area.\n\nShe would have preferred to be outside, but appreciated the help the camp offered her.\n\n\"I have cousins to talk to,\" she would tell me gesturing to Asper on the warm slab beside her.\n\nAsper never spoke to me and only watched my interactions with Tosu. She usually lay there and stared at the ceiling when I came to visit. It seemed she was paying attention to everything. I was sure she was building to her final decision.",
        "The slaving women frustrated Rose and me no end. She shook her head and sat back heavily on a table behind her. Rose looked absolutely vexed as she spoke.\n\n\"Kana and Rysell have tried to talk to the men, but no one will listen,\" she said woefully. \"They even expressed their concern to Hassar and Reed. The camp's Administrators want to respect the men's beliefs. They won't do anything proactive about it. The men want the women here so they can witness how healthy the freedom is. If the slaving women weren't allowed here, it would be insulting to the men and they won't take away their choices...\"\n\n\"The men should stay close to camp and close to the free women,\" I told Rose for the hundredth time. \"They can't just run around like there isn't anymore danger.\"\n\nRose agreed, just like she had all the other times we'd had this discussion. Our men, just like all the men, had no fear of slaving women. They came and went as they pleased. The only danger they believed existed was aliens.\n\nA deep ache settled in my lower back and I paced back and forth as I spoke.\n\n\"I feel like we're watching a train crash in slow motion,\" I panted trying to stretch out the cramp.\n\n\"It's just going to have to happen,\" Rose said irritably. \"Basin and his Brothers are as hard headed as the rest. They won't hear of my discomfort with this...\"\n\nA horn sounded indicating an end to running and the boys bolted back to us. We couldn't talk about this around them. They were confused by our lack of belief in The Spirit's power. Edas and his family, as they bonded to Basin's family, were becoming as stalwart as the rest of the men. Mycah and his Brothers were the same way. Rose and I put on smiles and just walked the children to their next activity.\n\nAs the afternoon went on the cramps in my back came and went. I tried to sit when I could and drank plenty of water. If it was time for the girls to be born that was fine, but I did not want to make them come early. There was still an alien presence fighting on this world and the potential conflict with the slavers made me very uneasy. I wasn't really ready to be a new mother right now.\n\nBy nightfall, I was exhausted. I went to bed long before anyone else. The men wished me a good sleep and spent their time in the communal living space. The cramps had stopped during dinner, but I still felt worn. Hopefully sleep would make me feel better again.\n\nOur bed had become less of a private space, but sharing it with our extended family felt right. As I curled into my place I wondered when it would be that the women would excavate more rooms for us. Perhaps they could dig a second bedroom that entered into our small living space. I wanted to keep the family all close. I fell to sleep thinking about that.\n\nIt was Kein's worried voice that jostled me from sleep in the middle of the night. I'd been dreaming of a deep canyon. The wind whipped and howled through it, making a mournful sound. The noise still echoed in my ears as I woke up. Kein stroked my arm as he whispered my name. I was groggy as I turned my head to look at his face peering over my shoulder.\n\n\"Mama?\" a small voice asked from in front of me and I turned my head to see Mycah's family lined up and watching me over Rynal's body.\n\nThe little boys were wide awake and obviously confused about something. My groggy mind couldn't decide what it was. All thought left me a moment later as the pain gripped my lower back and shot down into my stomach. Panting and writhing on the bed I realized the howling canyon must have been me, moaning in my sleep.\n\n\"You are in pain, wife, it will be soon,\" Kein said as he rubbed my lower back.\n\nOur babies would not wait much longer.\n\n\"We don't understand,\" Hodlen said quietly, directing the comment to Damien.\n\nHe and his Brothers were awake and quietly watching our unfolding drama.\n\n\"There is cramping,\" Damien explained, \"to push the new lives out of Ciara's body. The cramps are painful for her.\"\n\nOur extended family had never seen their mates during this time and didn't know if the same was true of Paterian women. The Paterian women released the new life and brought their offspring to the men, but only after the child had fed the first time. Hodlen's family had never asked how the actual birth happened. It just wasn't done that way.\n\n\"I need to walk,\" I said as I pushed myself to a sitting position. The men's conversation was not interesting to me at this point.\n\nKein put my boots on my feet and Bane pulled me to stand. Pacing had always helped move the labor along in the past.\n\n\"Where are you going, Mama?\" Mycah asked trying to follow me.\n\nHodlen held him back as his family restrained the rest of the little boys. It was too early for the them to be wandering around.\n\n\"I have to walk,\" I told them gently. \"Sleep with your male breeders. It is still night.\"\n\nThe men didn't stop me as I moved toward our main room and then into the community room. The fire pits were almost out and the space was quiet. I began to pace along the wall and found Kein strolling beside me. He seemed utterly content to walk with me, which I found odd. Damien's family liked their schedule and now was time for sleep. This was off schedule.\n\n\"You can't sleep?\" I asked him, keeping my voice low.\n\nHis wide grin told me all I needed to know. Damien's family was too excited to sleep. We would labor together.\n\nThe night moved slowly. I talked to my family and let the contractions happen. After a while Kein was replaced by Christof and so forth. When I leaned over with a cramp, whoever was with me would rub my lower back and make sure I didn't fall. My Husbands were gentle and attentive\n\nMy men were happy, very happy. For the first time we would have our child with no Nu-reeh to scare us during the delivery. I could lay on our bed and the children would be born to their family. It would be better than it ever had been before.\n\nI tried to be calm as I paced the interior of the community room, but I was feeling anxious. A twin birth was not something I had done before. I was worried something would go wrong. Damien and his Brothers had witnessed three births, but they were hardly experts. In case of an emergency, there was no one to help my offspring.\n\n\"Women are the only experts on birth,\" Bane stated as he walked with a hand on my back.\n\n\"Not on humans, though,\" I panted as another contraction faded. \"The women don't know anything about humans. The Healers from the compounds know about humans. The children are trapped inside of me. Healers might know more about what to do if something bad happened.\"\n\nOur conversation was cut short as liquid filled the thick cloth I was wearing between my legs. This was not urine and it meant the time was almost here. My water had broken.\n\nThe rest of my family appeared at my side, dressed and ready for the day. Others were waking up now, so it made sense they'd gotten ready. From the sounds the camp was making everyone was waking up.\n\n\"Women and Healers,\" Christof said, \"if that is what Ciara wants we should take her to the infirmary...\"\n\n\"What is a c-section?\" Kein asked taking Bane's place and steading me.\n\nI had been thinking the word and wondering if I needed one. On Earth I'd watched shows and seen programs about twin births. The women there sometimes got a c-section, because a twin delivery could be dangerous. I remembered the line on the stomach of one of my friends from such a surgery. I wondered if after this delivery I would have a similar line.\n\n\"We won't like it if they have to cut you,\" Damien stated looking troubled.\n\nMy memories concerned my Husbands. Damien's face was held in a deep scowl and his arms were crossed. They'd seen my memories and were not pleased with what they'd learned. Cutting out the babies seemed wrong to them, dangerous and wrong.  \n\n\"It is done if the child is in trouble,\" I assured Damien.\n\nWe paced a few steps more before the family decision was made. Bane scooped me up in his arms and strode purposefully toward the infirmary. My men wanted a birth in our home, but my anxiety would not allow it. As the family member with the strongest opinion, they bowed to my wishes.\n\nI wanted to birth these girls with Healers present. I also wanted there to be someone there that knew about births. In the infirmary lay many women and the Healers were always there. This delivery would happen there.\n\nDamien and his Brothers couldn't stop being proud and happy as we made our way to the infirmary. Whoever we passed, my men made a point to tell them what was happening. By the time we'd made it to the infirmary, I was sure the entire camp was aware today would be the birth of Kein's offspring.\n\nRhane and his Brothers met us at the entrance to the infirmary and seemed confused by our presence. Women on Pateria birthed their young in their caves and men were rarely present. It was considered a rare honor for a male to witness a birth. Even in mated groups, the women still kept the births private. That's just how it always was.\n\n\"That is not how Ciara's Earth tradition handles birth,\" Damien told the Healers firmly. \"She wants to be near Healers, as well as, other women. There is much that can go wrong in a birth and my Brothers and I are uneducated.\"\n\nDamien was right, that was what I wanted and the reason why, but it didn't make sense to anyone present. The large room was silent watching our interaction. They'd never seen a woman want a birth with Healers present. I started to feel foolish coming here.\n\nTosu approached limping heavily and my apprehension melted.\n\n\"There is a slab by the far wall, Rhane,\" Tosu said pointing. \"Ciara could lay there. I would be happy to be near. My former family and I learned much about human child birthing.\"\n\nA family of men I didn't know approached from the side. They were Healers, from the stains on their smocks and the instruments they carried. The family appeared shy and uncertain. Their eyes darted from me to Damien several times, before addressing him.\n\n\"I am Casgar, rescued from the Barnas compound,\" the lead Brother pronounced with some trepidation. \"Our Mistress made us learn about human child birthing, so we could help her human slaves. We could assist your...\"\n\nCasgar wasn't sure what to call me, but he obviously thought I was a slave. The concept was offensive here. I saw Rhane and his Brothers stiffen causing Casgar to cringe. The lead Healers were about to give Casgar's family a lecture when Damien interrupted. I wanted Casgar and his family around. It was my desire they not be scared off. We could deal with the slave or free issue later.\n\n\"Thank you, cousin,\" Damien stated politely and with a smile.\n\nDamien approached the other man and clasped his shoulder in a friendly gesture. Casgar flinched, but relaxed as he watched Damien's face remain relaxed. My Husband tried to look as non threatening as he could.\n\n\"This is our mate,\" Damien continued sounding calm, \"we would be grateful for your assistance-\"\n\nI missed the rest of Damien's comments and the ride to my slab was a blur. Another, stronger, contraction had startled me and taken my breath. I was panting through it when Rose appeared in my field of vision.\n\nMy friend's face was a rapid display of emotions from happiness to concern. She had grabbed a wet cloth and dabbed my forehead in a motherly gesture. Gritting my teeth at the pain I found her hand and squeezed tightly.\n\nThe wall in front of my slab was not decorated, but if you stared hard at it, you could see detail. I started to count the lines of rock to distract myself. The thick black of the Paterian stone was interrupted by thin lines of dark red and thicker lines of shiny blue. Small chunks of ore could be seen glittering in the rock as well. If I squinted hard it looked like the night sky.\n\n\"Breathe, Ciara,\" Rose said calmly as the contraction passed, \"you are safe and the babies will be well. You will have all the support you need. The camp feels honored to share this with you, they are grateful you are giving them more life.\"\n\nAs Christof crawled behind me to support my back. I looked around and realized the infirmary was becoming crowded. Men from all over the camp had come down to see this.\n\n\"Children of T'vailk heritage, and we are here to see it!\" a family said as they settled on the ground behind the slab.\n\n\"An honor cousin!\" another intoned giving a friendly salute our way.\n\n\"We are grateful to share this with your family, Ciara,\" a man from my left said as he sat with his Brothers.\n\nI had not intended this to be a public event, but it was becoming one. I was grateful to be facing a wall and not the throngs that seemed to be arriving. Privacy was important to me and I was surprised at this turn. The camp was joining us to celebrate.\n\nDamien and his Brothers would gladly shoo their cousins out if I wanted it done. The other men were excited, but could be removed. I made my decision as I looked at the happy faces around me.\n\nMen from the camp had no interest in gawking at my body. They weren't here to ridicule or for any nefarious purpose. The camp was just very excited about this unusual birth. They wanted to see their new campmates and were happy to share this with us as a big family.\n\n\"Leave them,\" I told my Husbands firmly, \"T'vailk girls are special and they will need the camp to help care for them.\"\n\nDamien's eyebrow raised and he looked at Evan who shook his head.\n\n\"Women,\" Bane muttered as he watched the room fill, he'd never understand my decisions.\n\n\"Sometimes it seems as though you do not know what you want,\" Kein told me with a smile, but he understood.\n\nPrivacy was not as important as the camp's desire to be part of this great event. They had generously shared with us, so I would share with them. It was the best gift I could give them.\n\nThe labor continued and the room swelled, with men and women. Many of the women I noted were slaving women and that concerned me. The men here far outnumbered them, though, and there were women from the camp present.\n\nCasgar and his Brothers were helpful and did the things I would have expected them to do. Nu-reeh and her Sisters could never have checked my cervix, but these Healers could. Damien and his Brothers wanted to help me, so they made Casgar teach them. Rose acted as a doula. Tosu also offered her assistance and gave encouragement from the side. Honestly, I didn't really need any of them. Things progressed as they should have naturally. My concerns turned out to be overblown.\n\nKennedy and her Sisters arrived as did Hannah and Ra. I panted greeting to them during the momentary calm before the delivery. From the obvious concern on their faces I know I looked a wreck. My older girls watched and waited from the side, quietly talking among themselves.\n\nThe pain and the cramps grew and grew. I pushed with them and the room no longer mattered. Every part of my energy was focusing on delivering my girls, alive and well. Each time I did this I forgot the awe inspiring pain associated with it. Focusing on my new girls I ground my teeth and breathed through the agony.\n\n\"A little more,\" Rose said suddenly, \"push, Ciara, I see her head!\"\n\nIt was always the same as the head came out, awful and unfathomable. I felt the child slip from me and I slumped against Christof in a daze. My only focus was listening for her cry, I knew she had to cry.\n\nThey were drying her roughly to stimulate her, Kein and Evan, as Damien and Bane looked on. Suddenly a sound filled the room.\n\nIt wasn't like a cry I'd heard before. It was a cross between a bird's song and a newborn's wail. The piercing melodic tone echoed off the cavern walls. The cord was cut and seared before Kein lifted his first daughter. She continued to sing her melody in loud, penetrating tones as her limbs flailed in his grasp.\n\nExcept for her song the room was eerily silent. Kein showed me our girl and I watched as she opened her eyes for the first time. Large, bright green eyes were looking at me from a delicate face. Her ears were elongated and elfin as were her limbs. She had no hair and it was her skin that caught my eyes; she was golden. We gazed at each other for several heartbeats in wonder before she let out a high pitched sound that seemed to be a greeting.\n\nKein placed her tiny form on my chest and folded her wings on her back. They fit neatly and curved over her head, hiding behind it. With her span folded she appeared quite tiny and almost human. I saw how different T'vailk heritage made her.\n\nMy fingers traced the line of her face and her long fingers. Her wings felt different from Hannah's or Kennedy's. They were thinner and smaller. She looked healthy, though. The little girl cooed and my heart melted when she called me Mama in that high voice. She was utterly amazing.\n\nBane provided a soft run of cloth and the men bundled her on my chest as she watched me. A tiny smile lifted the corners of her lips and she looked up and sang Daddy. Despite his pleasure at her greeting, Kein was persistent in wrapping her small, nude body in the cloth. She just looked between the two of us, a soft twitter seeming to emanate the entire time.\n\nI noted a woman's approach and only realized who it was when she spoke. Her aggressive tone made the hairs on my arms raise and I'd never felt more vulnerable.\n\n\"Give her to me!\" Nu-reeh demanded. \"She is mine, you are mine, the slave is mine! You have taken this from me. This is MY HONOR!\"\n\nKein grabbed the child and held her tight as his Brothers stood between the aggressor and their family. The Great Spirit grabbed the men in the hall and they moved as one, forming a wall. They were patient and defensive, but it was obvious Nu-reeh was going to resort to outright aggression.\n\nThe sound that left my young daughter's mouth next left me cringing. The lyrical war cry bore through the stone of the camp. The high pitched notes resonated in my bones. My whole being shook with it and the men around me responded like they'd been struck by lightening. My daughter's voice was a catalyst for The Spirit's power. The men bellowed a response and raised their weapons.\n\nNu-reeh was swarmed. Stike rope bound her and a cover was over her deadly fangs. She was swept from the room in a wave of men. They had moved with an assurance that seemed to surprise all the women watching.\n\nKennedy and her Sisters, for all the calm they usually exuded, even looked shocked. My tiny daughter had either joined The Great Harmonious Spirit or at least had some claim to it. Her righteous anger is what moved the men to immediate action. Other women couldn't have done what she just did.\n\nIn all my days I'd never seen anything like it, but there was no time to be amazed. The next delivery was imminent and a mighty contraction made me scream out in pain.\n\n\"Push, Ciara,\" Rose instructed as the next one came and I did. It took less than sixty heartbeats for my fifth child to be born.\n\nShe was similar to her Sister, but different. The tiny, golden girl wailed a song so beautiful it nearly made me cry. It was a song of loss and birth, sin and redemption. She continued to sing as she was bundled for warmth and the sound echoed all around us.\n\nWe were all just amazed watching them. The room seemed speechless listening to the strange song. As the first fed, the second continued to sing and call out. When we switched them the first sang as the second took her first meal.\n\n\"What are their names?\" Kein asked me as the first girl finally settled down in his arms.\n\nI watched the tiny girl nursing sleepily on my chest. She was keeping tabs on me with half lidded green eyes. The second of the twins had spoken a few words to me, outside of her melody. I had heard conviction in her voice. She needed a strong name, as did her Sister.",
        "The small build and sweet voice could fool you, but I'd seen the power these girls carried. They weren't going to be simple singers, content to create beautiful things. From nearly the moment of their birth they'd proved they were willing and ready to fight.\n\nLong ago, in another life, I had looked at baby names with my cousin in a large book. At the time she'd been compiling boy and girl lists. It had been too soon to know what she'd have. I'd loved the names Kaley and Kelli and they had both meant \"warrior maid\", but my cousin had hated those names.\n\n\"I don't want warriors if I have girls,\" my cousin had said disdainfully, \"I want princesses!\"\n\nPink and frilly would never suit these little powerhouses and I knew that. For their delicate builds and singsong voices, they were leaders and Warriors. Their small statures would have no bearing on the power they would wield.\n\n\"This is Kaley,\" I said pointing to the first born of the twins, \"and this is Kelli,\" I stated gesturing to the second in my arms. \"Their names mean Warrior in my native language.\"\n\nIt was suitable, very suitable to the family.\n\nA large woman limped slowly beside us and I looked up to see the woman I'd known as Asper staring at us. She had, it had seemed, been quiet the entire she'd been here. I knew she was virtual royalty on this world, but she had said next to nothing. The camp had found her continued silence odd. Asper didn't interact with almost anyone. Now she was looking at me and my family.\n\n\"I am Asper, born of the T'stald Mountains,\" she said formally. \"I have never introduced myself to a human before or to males, but I feel it is time I changed my way of thinking.\"\n\nI was shocked and too surprised to speak, but Damien spoke calmly and introduced himself. Shaking myself out of my amazement I followed his lead as Tosu approached.\n\n\"Ciara, from Earth,\" I stuttered.\n\nTosu sat on the edge of my slab, but made no move to touch my girls. She merely needed to rest her bad leg, which was still healing. I was glad for her presence. Despite what Asper had said, I wanted to be cautious.\n\n\"You have made up your mind then,\" Tosu said solemnly to Asper. \"You know your opinion will make a difference.\"\n\n\"It will,\" Asper responded looking carefully around the room, \"and I have withheld it until I was sure. Women in my breeder's line have not seen T'vailk girls in countless generations and yet here two sit, born to a female not of this world. We were fools to lose this gift. We gave the right to breed T'vailk women away to humans. That never should have happened.\"\n\nThe strain on the big woman's face was evident. She was frustrated and angry, but the aggression seemed to be directed inward and not at us.\n\n\"I have seen The Spirit here,\" Asper continued watching Kein intently as he held Kaley. \"The strength the men have has returned in full. It scares me: their power and defiance.\"\n\nMy Husbands noted the same thing I did. Asper wanted to treat the men like children. Their determination to make their own decisions scared her. She wanted to make the choices for \"her\" men.\n\n\"The rebellion is educated,\" Damien interjected. \"We are not simple men from the compounds doing as we please with no thought. None of us here make choices without understanding the consequences of our actions.\"\n\nTosu agreed with him as she gave Asper a patient look.\n\n\"The men are educated and intelligent,\" Tosu stated. \"Yes, they are injured and some die, but they are happy and constructive. We lost a great deal treating them as we did. They were right about the ore, Asper, you know they still are. It should not be sold off this world.\"\n\nAsper sat heavily on an unoccupied slab beside us.\n\n\"Free men,\" she said looking around, \"I never thought I would see them for myself. I never imagined I would support them, but I do. What they have created here is precious and saved our world. The beliefs, though, will be difficult...We have obligations and contracts-\" she started to say, but stopped and sighed instead. \"Many alien nations will attack us if we refuse to provide the ore,\" she said plainly.\n\nThis woman had been the leader of the slaving women and here she sat, discussing politics with a family of men. It was unheard of and I was shocked, but Damien's family wasn't.\n\nOne at a time. That's what the men were seeing happening. The women saw the truth one at a time. The rebellion knew they just needed to be patient and it would happen peacefully.\n\nThe men had been right, frustrating as it was. The women had to walk freely in the camps and see the men. Then their minds would change.\n\nDamien found the conversation with Asper, our new ally, thought provoking, but something cooled his interest. This type of problem should go through the proper channels. Asper didn't seem like the kind of woman who spoke casually, but she obviously didn't understand our organization. The Great Spirit connected the men, but there was a chain of command everyone followed.\n\n\"We have strong Administrators,\" he said to the woman, as he waved over some young men. \"Your concerns are valid and should be addressed by our leaders. These men can take you to them.\"\n\nAsper watched us closely for a moment before standing.\n\n\"Will you accompany me, Tosu?\" she asked turning to our friend. \"I find your counsel has been helpful and the company would be appreciated, much has changed.\"\n\n\"It is a new Pateria,\" Tosu stated as she rose slowly.\n\n\"And I am alone in it,\" Asper said with some sadness.\n\nAfter a life spent in the company of strong Sisters, I imagined the large woman must feel abandoned. I pitied her situation.\n\n\"We are both alone,\" Tosu said smiling, \"better to be alone together, perhaps?\"\n\nThey would be strong together and I knew that. It made me feel better that neither woman would continue on without family.\n\nNot surprisingly Hannah and Ra had tagged along with the group heading to Administration. They wanted to be part of the larger planning and the logistics. I suspected the more interest they showed the more often they would be rewarded with responsibility. \n\nIt would have been interesting to Damien to be part of Asper's conversation, but he had other plans, ones that would take us far from here. We couldn't be locked into a set of jobs that limited our travel. It wasn't what the family wanted.\n\nKein cradled Kaley and smiled like a kid in a candy store. She slept in his arms peacefully. Our daughter felt secure under his watchful eye.\n\n\"They need to see the T'vailk Mountains,\" Kein stated as he stroked Kaley's brow and understanding dawned on me.\n\nAdministrators stayed in one place and managed their camp. We wanted to see the whole world. When the girls went on their first flight, Damien and his Brothers planned to travel with them. Kein had been mapping out our journey, it would be a lovely trip, and long.\n\n\"Hodlen's family will come,\" Bane said as he took Kelli from me and gently burped her. \"They have long had curiosity and we need to collect the rest of our extended family.\"\n\n\"The trip will be good for Mycah's family and Tyle's family,\" Evan agreed handing me a cup of water as Christof tidied up around me. \"The boys will learn the world by seeing it and experiencing it.\"\n\nThis alien issue would not be over for a long time, but it would soon be controlled. If the planet worked together, Damien was sure the next attackers would never breach our atmosphere. The planet could be made reasonably safe.\n\nKein had the entire trip planned out in detail. There were places we would camp outside and other regions we could visit with established communities. He knew where we could restock our water. Damien's family had always been superior hunters, so that was no issue. The excursion would be a good way to get new experience and meet new Paterians.\n\nIt wasn't like we'd do this alone. Damien explained many men wanted to travel. It sounded like they were setting up caravans from the Wild West. Some men were traveling for curiosity, some were going to find extended family, and some were just looking for a change. Lots of families had some reason to do this.\n\n\"There are so many places I would like to see myself...\" I said thinking back on my studies.\n\nThere was a body of water in the coldest region of the world that shone red part of the year due to minerals. Other places had herds of giant beasts that didn't live near here. Kennedy and Hannah said they were like dinosaurs. These were things I'd found immensely interesting, but never thought I'd get the chance to see.\n\n\"We know what you want to see,\" Kein informed me proudly. \"It is part of my plan.\"\n\n*****\n\nT'vailk girls, we soon learned, weren't like other women from this world. They never grew fur and their thick golden skin was impossible to breach. Unlike other women who liked it cool and dry, they preferred warmth and water. Kaley and Kelli were swimming before they were walking. They were at home in the warm dampness of the bathing cave.\n\nThe mountains Kein's ancestors were from was on the edge of a tropical sea. It was stormy and windy, but steamy hot. The rain that fell almost continuously was a blessing to cool the area.\n\nHere, in these mountains, cold predominated, so Kaley and Kelli needed clothing to stay warm. They hated the cold. The tiny clothing that I made and put on them really did make them look like small elves.\n\nAs they grew it became obvious they would never have the towering stature of other women. Tosu estimated the twins would only be slightly taller than me full grown. Their delicate limbs were deceptively strong, though, and the talons on their fingertips grew in markedly soon. Kaley and Kelli were just as tough as typical Paterians, just built for a different climate.\n\nOther things made me think they were slightly elfin and different from other Paterian women. They liked to play jokes and were into everything. No one around us minded their antics when they were small. Kaley and Kelli grew up surrounded by the families we knew well. The twins enjoyed livening up our days.\n\nOnce the girls learned to walk they'd sneak into someone's room and do silly things. Short sheet Basin's bed in the afternoon or tack the cover over the entrance to Stayne's lodging shut in the middle of the night. They would do anything and everything to amuse themselves.\n\nAs Kaley and Kelli got older their games began affecting the entire camp. The twins became more and more elaborate in their designs for practical jokes. Since Pateria was not a planet accustomed to this type of fun, there was mixed reaction. Kein and I quickly learned that losing sight of our girls resulted in trouble.\n\nLuckily for me Damien and his Brothers took a very active role with our young miscreants. Unlike Hannah or Kennedy these girls explored the world outside our camp with their male breeder and his Brothers. Damien made sure they knew how to hunt and Kein helped them hone their tracking skills. Bane made sure they could use a gun and Evan took them for target practice regularly. My men did everything they could to keep the twins busy and constructive.\n\nDespite all our best efforts, it was still far too common that we were asked to present the twins to the Administrators. Kaley and Kelli delighted in the irritated looks I saw Hannah throw them. Knowing Hannah's goals I did my best to control my youngest girls. The sprites were fast and sneaky. They were truly a menace.\n\nMycah's young family was a weapon in my arsenal against the twins activities. The attentive young boys kept a running commentary on their sisters' antics. While we often missed the subtle signs the girls were up to something, Mycah never did. He and his Brothers always seemed to know when Kaley and Kelli were planning a caper.\n\n\"They are bored again,\" Mycah would tell me quietly during the evening meal.\n\nA frantic search would find the twins loosening the tops of spice jars in the kitchen.\n\n\"I don't know where Kaley is,\" Jonathan would inform me as we swam and bathed in the morning.\n\nKein found them painting bright eyes on a shadowed patch of wall in the very back of the cavern.\n\n\"Come on, Daddy,\" Kaley whined while she perched on a warm stone.\n\n\"It will be funny when someone sees it!\" Kelli exclaimed as Kein quickly rubbed the haunting visage off the wall.\n\nThey just couldn't seem to stop their antics. The twins sharp wits were not entertained with simply learning about the world. I got the feeling they enjoyed the excitement their stunts caused.\n\nKaley and Kelli weren't all fun and games, though. They were fiercely protective when it was necessary. Damien and his Brothers had come across a Rack while with the Sisters one day. My youngest girls had just learned to fly and only sharpened their spears on their wings the day before. The Rack did not see the twins flying above and attacked my men. Kaley and her Sister did not wait.\n\n\"It was unreal,\" Kein told me later while watching the girls laugh and talk outside our dwelling.\n\nThe twins were playing a card game with Hodlen's family. They looked so delicate and small next to the men; it was deceptive. My girls were powerful like nothing my men had seen before.\n\nKaley and Kelli were fast and efficient. Damien and his Brothers had never witnessed a female fight the way the twins did it. Their lack of cold tolerance was their only weakness. My twin girls moved with fluidly and with precision. The Rack was distracted and neutralized before it understood who was attacking it.\n\nIt relieved me to know the twins were not as weak as they looked. This world was incredibly dangerous and they would not survive if they weren't tougher than everything in it. I was grateful once again for my strong, competent offspring.\n\nKaley and Kelli were using their teeth and eating before I knew it. They were small, for a Paterian female, giving me the illusion they were younger. Since there was no Nu-reeh to shove them out of our nest, I thought they might stay. I was wrong.\n\n\"We need to go,\" Kaley informed me after the evening meal one night.\n\nI had been sitting with Mycah and his Brothers as they learned to sharpen a blade. It was an important lesson and my focus had been entirely on them. The comment took me by surprise.\n\n\"We have our bag packed,\" Kelli stated showing me the satchel slung over her shoulder. \"We'll need clothing for the colder areas.\"\n\nAs a mother I always saw my girls as the tiny, weak creatures I'd first seen at their births. Now, I saw two Sisters ready for life in the world. Their wings were barbed with an impressive array of spears and their talons were sharp. The twins' needle like teeth had proved they could bite through anything. Still, they were my baby girls...\n\n\"Aliens-,\" I started to say and Kaley shook her head.\n\n\"Are an inevitable part of life now,\" Kelli said sounding unconcerned. She casually brushed the rock wall beside us with her talons and the solid stone easily chipped away. \"We are strong enough to deal with aliens.\"\n\n\"Your father and I wanted to travel with you,\" I said standing and starting to feel frantic.\n\nI hated it when my girls left.\n\n\"Mama,\" Kaley said in an exasperated tone, \"you and Dad can travel with us, but not WITH us. Nobody's female breeder travels WITH their offspring. We could plan to meet up with you in a moon's time at the T'leen camp, that would work for us.\"\n\nThey were so absolutely assured that what they were doing was right and I just wasn't ready. My anxious state was transmitted directly into my voice.\n\n\"Some of the women still think slavery is an option. I know they think you two are symbols for the resistance. It could make you a target!\" I argued as Kein approached from the side.\n\nKaley and Kelli stared at us with obvious frustration. They wanted to just be gone. Their instincts to make this trip were very strong. My desire to protect them was just as strong. The world wasn't like it once was and they faced new dangers, but they wouldn't listen to me. Their father had a plan, though.\n\n\"We won't travel WITH you,\" Kein said placing a hand on my back and watching the girls, \"but we wish to travel. It would be safer for us if you both were near us during the trip. My Brothers and I wish to take a similar route to the one you have planned. We would never impinge on your freedom, but we would like you to watch over us.\"\n\nI withheld my smile as the Kaley and Kelli processed this information. Asking them to guard us spoke to a deeply ingrained protective desire. I knew they'd agree as soon as Kein asked.\n\nThe great adventure started slowly enough three days later. We left the safety of the T'lynien Mountain with thirty two other families of men, several women, the mates to men like Hodlen, and the promise to be careful. Kein had drafted us an amazing journey and we were all anxious to take it.\n\nBasin's family travelled with us. They were in search of the rest of their extended family, just as we searched for ours. I felt lucky to get to take this trip with Rose right beside me. We continued to teach the boys as we rode on the transports over deserts and through jungles.\n\n************************\n\n\"On my home world, we would have called those things dinosaurs,\" I told the boys one day as we flew over something that looked very much like an apatosaurus, originally misnamed brontosaurus Earth. On Pateria they were called Untars.\n\nThe massive herd of herbivores was moving about a wide, shallow lake eating the tasty vegetation in the water. They had long necks, powerful bodies, and enormous tails, but they were essentially peaceful. We stayed far above on our transports to avoid other smaller creatures that tended to travel near them.\n\n\"You see the creatures in the water displaced by the Untars feeding?\" I asked Mycah's family. \"If they do not find cover soon they will be plucked out by the Crassas. The Crassas follow the Untars and eat the smaller creatures flushed out of their homes. Those things attack in packs and can overwhelm a single family of men. You must not be on the ground when they are near.\"\n\nJonathan had been looking like he was going to ask to get closer, but then stopped. The Crassas swarmed some amphibious mammals that had been living under the Untars latest meal. Even from our distance it was easy to see the danger. Only bones were left once the Crassas had fed.\n\n\"They could devastate a lake community...\" Mycah said sounding concerned.\n\nHe was right, the Crassas ate everything made of meat in their path. They were a menace and one we took seriously. There were stories from the distant past of futile battles against these creatures.\n\n\"They only feed for half a moon cycle every year,\" I instructed the boys. \"The rest of the year is spent in their dens: hibernating in colder times and breeding in the warmest time. You must know what period they will be active in. They cannot be defeated, only avoided.\"\n\nDamien interrupted our lesson as he cursed under his breath and sent out a message to the rest of the caravan. Our lesson had his attention as a leader of this troop. We couldn't stop anywhere near here tonight. The wetland would have been a good place to refill our canteens, but safety came first.\n\nHodlen's family pointed to an open space far up the hill nearby. The rocky slope would put us on high ground and be easy to defend. Untars and hence the Crassas, would have no interest in that area. Hodlen's Brother had seen the shimmer that indicated a small waterfall cutting down the mountain near there. Our stores were low and fresh water would be a blessing. Relief spread through all of us as we made our way to the location.\n\n\"Where The Great Harmonious Spirit puts up a wall, we are always offered a tunnel,\" Tos remarked happily.",
        "The Earth sayings sometimes came out of my mouth and when the men liked them, they kept them. I had to smile at my family as I heard bits of my old life resurrected by them. It always seemed to make me a little wistful.\n\nI could go back and I knew that. The women had stabilized several portals to Earth. Former slaves were offered the opportunity to return home if they wished it. The Paterian Administration was hesitant to close the portals too quickly. The process of healing was slow and leaving was a big decision.\n\nWe met many former slaves as we started our journey. In the first moon we were hesitant to stay outside an established camp for long. We met many, many freed slaves and found their choices heartbreaking.\n\n\"Where would I tell them I was?\" one human woman had asked me forlornly as she sat in the medical ward of her camp. She was beautiful and broken, in body and spirit.\n\nThe woman, who refused to go by her slave name and would not tell us her free name, had attempted to kill herself by jumping into a pit of lava. She had lost a hand when it dipped into the fire, but a young female Paterian had pulled the human out just in time. The act symbolized how hopeless many former slaves felt. They loathed this place but felt they could not return to who they were.\n\n\"I have been defiled,\" the suicidal woman informed anyone who asked. \"I have no value to my family anymore. I would be cast out. There is nothing to return to.\"\n\nThe Healers in her camp were struggling to deal with her wounded human psyche. It was a scene I saw repeat over and over again. Even my own friends expressed their underlying concerns. There were things they felt made their decision for them, whether they liked it or not.\n\n\"Earth would be a dangerous place to return to,\" Molly had told me stoically as she left the caravan to join her son. \"They might think we were mad and lock us all away. If they believed us when we say where we have been the scientists would never let us go. Even if we never told a soul, there would be a danger our secret would be found out. We could never be free on Earth.\"\n\nI felt for Molly, but she didn't want my pity.\n\n\"This is my life now,\" she said looking out over the green hills that bordered her new camp.\n\nThe men Keeping her son had offered for her to join them in their dwelling. She was essentially adopted like a small, lost animal. I hoped eventually she would find more here. She seemed to find some humor in my high hopes.\n\n\"Not everyone is going to find the loves of their life here,\" she announced in a resigned tone. \"Some of us will just survive and raise our young...\"\n\nMy arms crossed like Damien would have done.\n\n\"You seem like too much of a survivor to JUST survive...\" I observed and she gave me a small smile.\n\n\"Oh, I'm not giving up, Ciara,\" she declared squaring her shoulders and I didn't doubt her a bit.\n\nThe troupe that continued on with us was an odd, hodgepodge bunch. We were nomads seeking many different things; experience, adventure, science, or family. As we gained confidence, we camped outside more often, unless we were close to an organized camp. As we traveled, we collected things the camps would want and traded for things we needed when we arrived at each new camp.\n\nOur boys learned to barter, in addition to everything else. Rose and I kept up their schooling, which was now more interesting as they saw most of what we talked about. Some thought our long travel would be disruptive to the children. It seemed to have the opposite effect. The boys were fast becoming competent little men.\n\nIt wasn't four moons into the trip that we realized our boys were excelling. Mycah's family could secure a camp as fast as any man. They knew the dangers that lay in different environments and how to prepare for them. Edas and his Brothers were almost as quick. Both sets of boys were learning the new skills rapidly. Men had not had experiences like this in ages.\n\nI was learning, too. Previously I'd been sheltered and protected. Here in the wild I fought as hard as any of my family and was exposed to all the same danger. My genetics made me different and I had to learn to keep up.\n\nLess than a moon into our trip I adjusted my expectations of myself and my clothing followed. I'd gotten used to wearing dresses, but they proved impractical in the wild world. Pants worked better and I patterned my clothing after my men's outfits. We hunted together and I soon became a valuable member of the party. It wasn't a role I'd expected and it certainly wasn't one Damien had expected.\n\nKaley and Kelli would pass in and out of our days. Sometimes we'd go several day cycles and only hear their haunting melodies in the distance. Other times they'd sleep near the family in the area we'd fortified for rest.\n\nHannah and Ra were seeking leadership in our old camp. I only spoke to them when we could use a monitor in a camp. The ones we carried were for emergencies, so I only called them when we were at an established camp. It seemed to me they had gained power by becoming close to Asper. Damien congratulated them on their good planning.\n\nKennedy and her Sisters flew with us at first, but they often took detours. They had studies and experiments that took their time away from us. It was good to see them when they had the chance, though.\n\nOur journey around the world was a long one. It took over one turn of the sun, or about a year, in its entirety. The caravan took a large loop north and south as we traveled west. We picked up the rest of our extended family, as well as many others, and the caravan swelled. By the time we reached the T'vailk mountains we were two hundred and fifty families strong, at least.\n\nMen had not lived in the T'vailk Mountains for many, many generations. We found the caves that they had used long ago and the rooms were still in good shape. My family, along with another hundred families, stayed in the T'vailk. We set up a camp and made this our home.\n\n\"I knew we'd end up here,\" Kein informed me late one afternoon as we walked out of the bathing cave. The fields had been muddy. We were preparing a new area for crops and the weather hadn't really cooperated today.\n\nThe T'vailk Mountain range was known for wild storms, but if you stayed where we were, a half day's travel from the coast, it was a tropical paradise. We got soaked today, but that was unusual. The windward side of the mountains usually took the abuse and we just got the wonderful weather in our small warm valley. There was, of course, the occasional typhoon like storm that drove us into our mountain for protection, but it wasn't often. This place was the best we'd been.\n\n\"Shame some men are too scared of the weather to live here,\" I commented as I noted the preserved food we were transporting across the country to our cousins from less fertile areas.\n\nBags of a rice like substance lined one wall awaiting transport. The high calorie food was shipped all over the world, but could only be grown in areas like this one. It was fast becoming a staple. We were limited in production by the number of men and women here, though.\n\nThe storms still scared many away from this region, but the long growing season made it ideal. Our small camp helped to provide a great deal of sustenance for the rest of the planet. We always wished we had more men to do the labor, but this wasn't a popular place to move, unless you had T'vailk heritage. It had a bad reputation, completely unearned, in my opinion.\n\nKein and I walked down the breezy corridor toward the place we'd chosen as our dwelling. The grouping of rooms was just big enough to house our friends and extended family around a communal sitting area.\n\n\"This whole region is virtually unpopulated,\" Bane complained. \"I still can't believe how hard it is to get a good game of chuke going...\"\n\nHe'd been dying to play against new opponents, but getting together five families with any skill at the game was difficult. Tyle's family gave him the most competition, but even that was getting old. Bane was ready for a new challenge.\n\n\"We need to advertise,\" he told his Brothers heatedly, \"get some new families in this place. The storms aren't THAT bad. Beside that the wind at the top of the mountains keeps the aliens from getting anywhere near the ground...\"\n\n\"How many even get that far?\" Christof asked rhetorically.\n\nIt had been ages since the aliens seeking ore had bothered to attack us. Our new improved planet-wide defenses made it a suicide mission to try. The peace had been a nice change, although we tended to stay ready.\n\nThe men settled in the communal area while they talked. Much like before we'd asked the women to dig us a cave off the main walkway. The central fire pit gave everyone a chance to sit together and our individual sleeping ares were arranged all around. If we weren't working, we were here with the family.\n\nUsually we spent our late evenings around the fire with everyone else, but not tonight. I'd been keeping a secret as had several other women. It was sneaky, but it seemed like a surprise the men would like. It was time for more family.\n\nThe other women in my extended family, along with myself, had petitioned our Administration. We wished to breed. Tonight my family and I would start the process, as would four other families. If it was to be female offspring, we had bets on who would get pregnant. If it was to be male offspring, we would all get to celebrate. The Great Harmonious Spirit was in control of that choice, though.\n\nDamien and his Brothers settled next to Hodlen and continued to discuss who could play chuke with them as I slipped into our sleeping chamber. My thoughts were kept closely guarded as I lit the fires around the room.\n\nUnplanned pregnancy was not something we'd wanted to do again. Kennedy and her Sisters had developed a novel way to prevent it. Well, novel for Pateria, it had been a standard on earth. The efficacy here reached almost 100%.\n\nWe used condoms, a word now well recognized by Paterians. The Rack's intestines could be cut and sewed shut at one end. The condoms were very effective and all human females kept a supply of them. If we wished to enjoy a family, they had to use the contraceptive. Damien informed me little sensation was lost and Evan actually liked the way they made sex feel. The little devices gave us freedom to enjoy our physical relationship.\n\nTonight all the men, except Bane, would wear a condom. I'd promised him the next child and it was time. He would be beside himself with excitement and I knew that. It was going to be a secret until the last moment, though.\n\nOur small bedroom was decorated in Damien's family color. Despite our rejection of all things slave, my men still liked to see their room hung with swaths of blue. The filmy fabric softened the interior of the cave. When the torches were lit, the blue reflected the light. It made me think of an exotic sheik's tent.\n\nThe large bed in the center of the room was covered in an array of light blankets I had knitted. Tonight it was all ours, but every fifth night we shared it with Mycah's family. The care of the young family was split between all their breeders. When they got old enough they would stay in their own bedroom. For now, their sleep was guarded by their older male relatives, but not us tonight. This evening the large bed was for Damien and his Brothers to enjoy with me alone.\n\nTonight, I pulled out things we didn't show the boys. They didn't need to see the kink Jonathan's female breeder had brought to this world. I put on a top that supported my large breasts, but left them bare. The corset tied up the middle and gave me a stern look. I wiggled into the leather mini skirt that was slit up both hips. The shiny boots on my feet had heels that were impractical for everyday life, but perfect for this circumstance. All of this fun was what Bane had truly come to enjoy on special occasions.\n\nIt was odd, I considered, as I pulled the low sawhorse out from along the wall. Bane liked these games and they appealed somewhat to Damien, but in a different way. Evan just liked sex, so he never minded what we did. Christof preferred gentle lovemaking with no toys. Kein still enjoyed playing with his rope, which went along with what Damien liked. The men had come to appreciate their individuality, as well as, their similarities.\n\nWe'd told Mycah's family the sawhorse was to dry clothing when they'd asked. Luckily they didn't find the attachments that we used for Bane to kneel on when I put him on the horse. I also kept the restraints separate. It looked boring enough, so they never paid it much attention.\n\nAll that had been easy to make or acquire quietly. No one had thought anything was odd as we built our collection of toys. Only certain things had been more tricky to make.\n\nThe thing I'd had to make myself and make quietly, I put on last. The strap on dick drove Bane to distraction when I used it. He had no interest in sex with other men, that wasn't the point. Kneeling before me as I fucked him made him feel utterly small and controlled. It wasn't a sensation he wanted to replicate with anyone else. He was safe to enjoy those feelings with me alone.\n\nThe strap for my dick went around my waist, under my skirt and between my legs. It raised up under my skirt in a lewd approximation of a man's appendage. Seeing it bob there always amused me, but I could not let my humor show.\n\nI pulled an ornate blade from the back of our closet and polished it quickly. Long ago I'd determined I felt weird using my actual weapon to threaten Bane. The false aggression excited him, though. This sword had only one purpose and that was for this. It felt more \"normal\" when we used it.\n\nMy only jewelry, other than my wedding ring, was a small flask of oil I put on a chain around my neck. It was a decorative way to remind Bane what I planned to do to him. The knowledge always drove him mad.\n\nThe small lash was the last thing. Damien had made it for me with nine strands like I'd always heard about on Earth. The slight sting it inflicted was tolerable for human or Paterian skin. It was certainly more of a symbolic whip and not a real one.\n\nWith my room ready I opened up to my men. I pushed into their shared consciousness with images of me, the room, and an invitation for them to join me. There wasn't long to wait.\n\n\"That wasn't nice,\" Damien said in a soft voice as he entered the room. \"You've been keeping secrets.\"\n\nThe lead Brother took in the scene I had set as his family followed him in. His eyes raked over me and I knew he had his own plan. I stood my ground as Damien approached and invaded my personal space. He brushed aside my weapon and his wicked eyes told me what he wanted.\n\n\"I'm in charge,\" I told him, attempting to sound firm, but he wasn't having it, although he liked the mock resistance.\n\nI could play this game of dominance with Bane all I wanted, but my relationship with Damien was different. He liked to be on top and, with him, I liked that, too. Rarely he'd reverse our roles, but we were more comfortable like this.\n\nDamien's hand slipped around the back of my neck and he held my head as he kissed me deeply. The other hand explored the flesh poking out of my outfit. Calloused fingers tweaked my right nipple and then dropped lower to stroke my hip. He refused to release my lips as his hand stole between my legs.\n\nThe lead Brother loved to do this when I was set to dominate Bane. He liked to remind me that once I was done with his Brother, I'd be in the same position. It infuriated me every time.\n\nI wiggled until my lips were free and sought to free my head from his grasp.\n\n\"I'm in charg-\" I tried to say and was shocked as two fingers invaded my wet cunt.\n\nDamien's thumb made a circle over my engorged clit as he grinned down at me and held me captive.\n\n\"Not for long,\" he remarked drawing his hand away with a smile.\n\nHe'd completely blown my control and I was righteously irritated. The only thing to do was prove to him I could recover from him quickly.\n\nSteadying my breathing I looked over at Bane, who seemed to have found Damien's game very fun. He mirth was more annoying than anything Damien had done. I marched toward him and placed my blade at his chest.\n\n\"Take it off, all of it,\" I demanded, but he just continued to grin.\n\nI placed the blade carefully at his neck and repeated the request. Bane's grin cooled as the heat rose in his eyes. He quickly undid his shirt and pants, dropping it all to the ground. The wide chest rose and fell in front of me with barely contained excitement. I'd been saving this up for him, so I knew he'd really enjoy it.\n\nA small pillow rested on the edge of the bed. I grabbed it and threw it to the ground in front of me.\n\n\"Kneel,\" I ordered Bane.\n\nHis Brothers murmured as he did as I demanded. Bane's extreme enjoyment of this treatment bled over to them, although they didn't really understand it themselves. Bane's pleasure was enough to overcome any resistance they had.\n\n\"Lick me,\" I ordered Bane, pointing to my right thigh.\n\nThis was a part of this Bane found intensely arousing. I had him lick the skin of my thighs and sometimes my boots. When he was sufficiently ready for it, I made him kiss the fake phallus I wore. On more than one occasion he'd had his first orgasm of the night doing that. The idea of actually sucking \"my dick\" excited him, but I'd never allowed it. Tonight was going to be very special.\n\nI grabbed his chin and held the short hairs of his beard tight.\n\n\"Kiss my cock,\" I ordered him, as I done many nights before, \"and DO NOT COME!\"\n\nThe big man kissed the length of my dick before I took it up a notch.\n\n\"Put it in your mouth, NOW,\" I demanded and I felt the beginning of his orgasm start.\n\nThe sharp discipline of the flat of my blade on his naked ass stopped his eruption.\n\nBane's skin reddened where I'd slapped him with my blade and every stripe on his body darkened. He was barely containing himself, not that it usually mattered. Orgasming didn't limit my ability to play with Bane. He was set up for multiple orgasms every time.\n\nI had carved the tip of my dick to simulate a real penis. The flared head passed Bane's lips and then I slowly fed him the rest. The staff was long and thick, like theirs. It had been made to satisfy Bane and it did, no matter where I put it.\n\n\"Use your tongue,\" I demanded as I started to thrust in and out of his waiting mouth.\n\nHe started to suck harder, burying the fake organ in his throat. I had control until he grabbed my ass and began stroking my cheeks. His fingers delved between them and I slapped his ass hard with my blade a second time.\n\n\"On the saddle!\" I demanded backing away from him.\n\nMy cock left his mouth with an audible pop.\n\nIt always surprised me how fast Bane could move. His large size sometimes gave one the impression he'd be slow. With a bounce he was up and on the sawhorse. Kein strapped his wrists in and Evan secured his legs. The next part was building up to Bane's second favorite and his Brothers were just as ready as he was.\n\n\"Thank me each time,\" I told him as the lash came down on his back and buttocks.\n\nI began to swing the cat o' nine tails and I monitored Damien. Too much of this would result in more than I really wanted, later, and I shivered in anticipation. The lead Brother watched me and I knew he was counting. Whenever I took this lash to him or his Brother, I was sure to feel its wrath shortly after.\n\nBane moaned with each strike. He loved the attention and the play discipline. Through our bond I felt his pleasure. This game was something he looked forward to. It was fun, novel, and unique; something for him only. When I felt him nearly peaking I abandoned my whip.",
        "\"Don't come,\" I warned him as I moved behind him.\n\nLeaning over him I kissed his back and down over his firm buttocks. Using the oil I painted the area he wanted me to be.\n\n\"Please,\" he begged softly, \"please...\"\n\nIt was hard to deny him when he asked so nicely. The head of my cock pressed against his opening and I pressed inside. Bane liked to take the whole rod in one thrust. The loss of control and being forced was what he wanted. In an effort not to hurt him, I always held still and let him adjust. As I started to move again, I spoke to him.\n\n\"I'm going to fuck your ass until you're ready to come Bane, but don't! You're going to lay on the bed and I'm going to ride you. I'll let you come until you're soft...\"\n\nA chuckle spread throughout his Brothers as Bane groaned.\n\n\"You'll be begging him to be finished before he goes soft. Especially where he wants to be,\" Evan whispered in my ear, \"but then it will be our turn!\"\n\nThe blue eyed Brother looked mischievous, but I could take this bet. I knew Bane's ability and I wasn't scared. A lifetime spent with this many partners made the idea they could wear me out laughable. It had been a long time since they were too much.\n\nWith Bane's excitement running so high, I didn't want to keep him on the horse. I wanted everything he had to give. The straps came off his legs and my fake dick was hastily removed. He lay dutifully on the bed. Bane expected the condom, but I never reached for one. Instead I straddled his knees and made my way up to my prize.\n\nOn the new Pateria, there were strictly enforced rules about condoms. Only a female could apply a condom and sex with a human was forbidden without one. It made for an interesting balance of power. All men stuck religiously to the rule and it gave the freed humans their choices back.\n\n\"Ciara,\" Christof whispered laughingly as I crawled up Bane's legs, \"aren't you forgetting something?\"\n\nI'd made my way up and sunk down on Bane's length as they gasped in shock. Our play had left me soaked and he slipped in easily. The wet heat surrounded him and he looked like the most miserable, yet ecstatic, man on the planet.\n\n\"Ciara,\" he hissed with his eyes closed, \"you need a condom. Please, wife, get one! I can't wait!\"\n\nI dragged up his length and sunk back down on him before answering. He was fast losing control and I felt his hands wrap around my hips. Bane was impatiently waiting to drive himself home hard and fast. It was only his and his Brother's determination to follow the rules stopping him.\n\n\"No condom for you for a while,\" I whispered in his ear. \"We have the Administrator's permission.\"\n\nThe change was instant and shocking. Bane was no longer under me, I was under him. My mouth was full of his tongue and he had bottomed his dick out in my cunt. He came with a muffled shout while grinding against my sensitive clit.\n\nBane's rested his body low on his elbows as he continued to leisurely kiss me through his powerful orgasm. His body was wet with perspiration and hot to the touch as he pressed me into our bed. I thought he'd need a moment to recover, but he didn't.\n\nA long slow thrust started his next cycle. He broke contact with my lips to put his mouth to my ear. Hot breath made he hairs on my arms rise and I knew he was only getting started.\n\n\"You weren't honest, wife,\" he murmured biting my ear, \"you kept secrets. My Brother will teach you not to do this while I take you this time.\"\n\nWe rolled and Damien did teach me. My short skirt was pulled up so my bottom was exposed. The lead Brother reminded me not to keep secrets with the flat of his hand against my ass. As Bane slowly enjoyed me from below, Damien punished me. The combination of the long, slow fuck made the spanking erotic. My pussy started to pulse around Bane's length and I orgasmed from what they were doing. As Damien's hand fell over and over again I begged for more.\n\n\"My Brother will give you more,\" Damien promised with a final squeeze to my rear.\n\nI was out of my mind with lust when Evan presented his cock. I slipped on the condom he handed me and waited. As I moved over Bane's wide chest Evan grabbed the tender skin Damien had left. He pulled the fiery, red cheeks apart and watched his Brother move in and out of me.\n\nThe oil was used, as it had been so many other times. My ass stretched around Evan's length and then they moved together. I took both of them and it wasn't long before Bane exploded again, filling me with more of himself. He didn't go soft and he wasn't done though. As Evan forced his full length into my ass Bane started again.\n\nI was pressed between them and so incredibly stimulated. Kein slipped a hand down to rub my clit and I nearly passed out as I came. Bane merely pulled my mouth to his and kissed me through the intense orgasm.\n\nDamien offered his cock to my lips once Evan was done. He knelt on the bed before me and I engulfed his length. In his memory was every time I'd done this for him. It seemed to get better and better.\n\n\"Suck harder,\" he ordered wrapping his my long hair in his hands.\n\nBane enjoyed the position and bit lightly at my breasts as they hung before him. I sucked the lead Brother until he spilled in my mouth. Bane also came again, but he still wasn't soft.\n\nKein came in my ass and Christof made love to my mouth, but Bane still wasn't done. I was ready to admit defeat when Bane came the last time. His cock softened and slipped from me as he lay panting on the bed. Less than three heartbeats later the biggest Brother was fast asleep.\n\nMy body was wet with sweat and that made it difficult for Christof to remove my outfit. He and Evan cleaned me gently as Kein put away our toys. Damien slipped a pillow under my hips as I fell asleep next to Bane.\n\n\"We may wait until tomorrow night to try again,\" Damien smiled as the family lay down to rest.\n\nI was too tired to tell him, but I knew we wouldn't need to. As I fell asleep I dreamed of the wonderful little boy already growing inside of me.\n\n************************\n\nThe last portal on Pateria was closed after the last human embraced her freedom and made the final decision to stay or go. My family and I traveled to see the closing. I had mixed emotions about it.\n\nI had written a letter to my mother and given it to one of the freed humans that went through the portals. It was my hope to ease her suffering and not make it worse. Whether she would understand my decisions was not clear to me, but I had to try. She should know I was happy and safe.\n\nI had family here, lots of family. Lincoln, Bane's son and my last child, was too small to know much, but he understood I'd never leave him. I couldn't leave any of them, my great winged girls or my small boys. My Husbands and I had been through too much together to ever separate. This family mattered to me more than I could say.\n\n\"You were too stubborn to let this world defeat you,\" Kein said as the portal imploded on itself.\n\nWeird shards of light cut the sky as the powerful method of transit melted into a flaming ball. We watched from a distance and I saw a plume of heavy dust rise into the air. The physical properties of the portal disintegrated before our eyes.\n\nChristof took my hand and kissed it. \"Too stubborn to let us be defeated,\" he said with a smile.\n\n\"You taught us to be happy,\" Evan said thoughtfully and Damien disagreed.\n\n\"She did not teach us happiness, Brothers, she taught us freedom. Once we understood freedom we could be happy and we cannot be defeated,\" Damien stated.\n\nThat satisfied all of them.\n\nI smiled looking at him. Arrogant men, always, and I felt lucky to have every one of them for my own.\n\n"
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "multiple partners",
        "female dom"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-37"
}