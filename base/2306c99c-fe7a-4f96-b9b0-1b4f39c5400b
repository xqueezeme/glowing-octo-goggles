{
    "title": "Starlight Gleaming Ch. 16",
    "pages": [
        "Notes: Based on comments from Chapter 15, I want to make clear that the Kandikan family speak Vedan, a language ancestral to Hindi; they do not speak Hindi itself. Speaking the words or phrases used in the last chapter aloud, however, is not a good idea, as you will likely offend someone, as the words themselves are impolite in the extreme! \n\nI was nearly done with this chapter when I started reading Rory Miller's book, Violence: A Writer's Guide, 2<sup>nd</sup> Edition. An eye-opener that demanded some revision of this chapter, and it helped me in understanding how Ranji would deal with things. And Benjamin Sobieck's book, The Writer's Guide to Weapons also proved its worth. Sorry for the long wait. Hopefully, it's the better for the re-write. \n\nThanks to my reader, gyfurune, who normally helps catch my mistakes. I haven't heard from him in a while, so I hope it's just school that has him distracted for the past few weeks. Any errors that slip through are my own. \n\n* * * \n\nFUBAR with rebar \n\nSummary \n\nRanji has barely survived training as an Imperial Security agent. His projected training time has already taken four weeks longer than the ten he was told about, meaning over one hundred and forty days. The communication blackout during his training has left him feeling isolated, and disillusioned about the political infighting among the more powerful noble houses in the Empire. Saying goodbye to those he trained with was made even more bittersweet by the loss of Deedee Marrin, who saved his life several times, and at the end, at the cost of her own. \n\nHe is anxious to return to his family. While his is eager to see them, he is also a bit afraid that what he's endured has changed him for the worse. While he was at Sparantzlo being tortured between training as an Imperial Security agent, the rest of summer and fall have passed, and even winter nears its end. \n\nBut before he can go home and lay Deedee's ashes to rest, Ranji has been tasked by Itznacoco with an assassination, using his new sniper skills learned at Sparantzlo. \n\nRanji's family include Captain Janetta Tlacotli, interceptor pilot with the 233<sup>rd</sup>, assigned to High Guard War Base. Janetta is the love of his life. At Janetta's behest, the three women of her flight crew have become his lovers and part of Ranji's family: aviation mechanic and Second Sergeant Zinja Ba'lanchicotl, mother of Corporal Ixma and adoptive mother of Ranji's oldest daughter, Sisi; Corporal Ixma, who is the adoptive mother of Ranji's second daughter, Mina; and Janetta's E-Man, Sergeant Cholan Yakalme. The fifth woman in Ranji's life is his Personal Servant, the empath Calia. \n\nOther members of Ranji's family are his father, the research scientist Arjun Kandikan, and his mother, Shanti. Styen Topangiti, the former fight master of Cop\u00e1n War Base and Ranji's instructor for several years, works as a bodyguard for the family. Bilan Monaycote, a man Ranji adopted as his brother, now commands the Ground Service troops protecting his parents, and lives with his wife and two sons within the Kandikan household. \n\nBefore he left High Guard War Base, Ranji was working to expand the protections of women, as part of his Unit Protection Order. The order forbade anyone from having to submit to an order to provide sex, and included family and dependents. While not effective outside his direct command, other units have begun adopting the same order. Part of that was establishing bus routes to transport people from place to place within the base, increasing not only their protection, but also their mobility. \n\nOther people also on his mind are his aide, Corporal Sowitwee and his pregnant wife Nariya, and the people of his command, the 945th Auditing &amp; Security Oversight, especially Sublieutenant Doyya Lovyanchiti, his Second, and senior NCO, Second Sergeant Chita Wanwari. When he left High Guard, attacks on Ranji, his family, and on his people were just beginning. \n\nCompounding matters, during his long time away, Ranji was isolated, unable to communicate with the outside world. \n\n* * * * * \n\nThe flight north to Defiant War Base was uneventful and quiet. A few rads further west, the setting sun glittered the Western Ocean. \n\nAs the twin-engine Albatross taxied to the terminal, I reviewed my orders again, before putting them away. Find and kill Field Commander Herroto Chatolklan of Imperial Security, formerly the base commander of Sparantzlo. \n\nThe notion of lifting a rifle and using its scope to draw bead on another human being caused me some trouble. My gun fights at High Guard had not been my first experiences with combat. A unit sniper often performed a valuable assist to the rest of the unit, taking out enemy soldiers threatening the team's survival, the main difference being the kills are at a farther distance. Look into the scope, line them up, and fire. End a life. \n\nMost people have a skewed idea of combat, that both sides are aware of each other, charging into battle. Massed battles are rare, and the casualties of those encounters are high. In seizing territory, units move about in small groups, and when they encounter the enemy, it's from ambush. That's a cold, hard fact, and it ensures most or all of your team survives to return home. The down side is the enemy practices the same tactics, and in a matter of seconds, an entire unit can be wiped out. A score of men and women, all dead. \n\nStalking someone, though. It helped, I suppose, that the target, the human being was so distant. In this case, though, it helped that I hated the man I was assigned to kill. \n\nChatolklan had let Sparantzlo become the Seventh Hell, a dark and foul dungeon high in the frozen mountains where torture and brutality were the norm. Where screams for mercy went unanswered or worse, mocked and laughed at. Many recruits died, their bodies tossed into unmarked graves. Surviving torture is a harrowing experience. It cuts away at who you think you are, and reveals just how easily you would say or do things to end the pain. Lie, say anything to make it stop. Those who survived are invariably changed, and not very often for the better. And I worried that I was one of them; a man with a new darkness on my soul. \n\nI had no problem with killing Chatolklan. No. Rather, the question was - would it be tougher the next time I was given an assignment? What if the next target was political? Or worse? A family or... \n\nI took a deep breath. Not now. Deal with those issues later. \n\nI had survived Sparantzlo mostly by gall and luck, I think. As base commander, Chatolklan was ultimately responsible for everything that had happened there. Stryker and his cohorts had killed seven recruits by torture even before our training started. There was a very real possibility they'd died simply because Stryker or one of the others just wanted to murder them. Who would challenge them about it if they did? Or that they'd gotten carried away, pushed too hard and inadvertently killed them. A few, I believed, died just because they were women. Along with the raw cruelty was the waste of it all. Lieutenants Daronu and Marrin had been in my command, and Marrin had been my Second, my lover, and my friend. Adding to hatred of him, during his last days there, Chatolklan had personally tortured me. Within a few hours, my screams had faded only because my voice had given out. \n\nI'm sure that the only reason I survived was the sudden, immanent arrival of Itznacoco and his men. Chatolklan could of taken a few seconds and killed me. But he hadn't. Instead, he'd fled north to his family estate, leaving behind most of the others to face the surprise inspection without support. A coward's act. \n\nMany of the Sparantzlo staff were subsequently replaced by people loyal to Itznacoco, and the practice of torture was ended. Whatever Itznacoco meted out to the guilty, I didn't know, nor did I care. Whoever is in command is responsible for what happens under their command. Killing Chatolklan would be payback for myself, for Deedee, and all the others, alive and dead. \n\nBesides Chatolklan, there was Captain Stryker, Sergeant Charunt, and Corporal Belton. Stryker and Belton were dead, and good riddance! But, like a rat, Charunt had somehow escaped into a dark hole. I'd checked before leaving, and there were no records of his departure or his presence on the base. He'd just vanished. \n\nAfter Chatolklan was dead, I planned on setting aside some time to find Charunt. Anyone capable of torturing another human being was more than capable of hurting little girls. And he had threatened to hurt and kill my Sisi and Mina. I wasn't going to hurt Charunt - that would make me as bad as the rest of them. But when I found him, I was going to stomp on him like the bug he was. \n\nI shook my head. One thing at a time. \n\nWith my duffle bag over my shoulder, I stepped down the ramp and took a deep breath. It was spring and the sun was still out, but there was a bit of chill in the late afternoon air. \n\nAdjacent to Defiant War Base was the city of Raydam, the capital city of Chuman State. Nestled along a large, sheltered harbor on the shores of the Western Ocean, it rivaled Tohingo in size. More than a quarter-million Imperial citizens lived here, keeping its seaport and manufacturing centers busy, day and night, selling and buying trade goods from far off lands like the Shingye Dynasty and the Tongwe States. \n\nThe air was salty, yet different from both Tohingo and High Guard War Base. Part of it was the locale, no doubt. But I'd noticed that the Ocean of Atlan by High Guard smelled and even felt different than the Inland Sea near Tohingo. Styen once compared the Ocean of Atlan as being like an old man, often cranky, and then said that the Western Ocean was like a middle-aged woman in her prime - sometimes giving and sometimes wild beyond reckoning. Even during the summer storms, the Inland Sea was considered docile in comparison. \n\nDeedee's father was currently stationed here, at Defiant War Base. \n\nIn many ways, he was as bad as Stryker and the others had been. How could a father treat his own child like that? Rape her whenever the mood struck, and then offer her up to his superiors as if he were loaning out his vehicle? After years of such treatment, she could have been broken. Instead, she'd escaped and made her own way. My feelings for him were mostly anger. Deedee was gone. Nothing I did to him would change that. His rejection of her burned in my heart alongside the foul things he'd done to her. I had a job to do, and needed to stick to it. And, as much as I wanted to hurt him, it was something Calia once told me that settled things. That if I let anger fill my life... how did she put it? Ah, yes. Anger, like fire, is a good servant, but a terrible master; once it's free, it is eager to consume everything around you. \n\nIf opportunity presented itself, I'd take it. Seven hells, who am I kidding? If I could, I'd stomp the crap out of him. But unless and until that opportunity manifested, I needed to let it go. \n\nOnce I was through security, I thought more about my assignment. I only had vague ideas of what was supposed to happen after I killed him. If he was protected, his men would surely seek vengeance, while I intended to complete this mission and survive the experience. Preferably, without my identity being discovered. \n\nThe tersely written reports from past snipers had talked little of such matters, if they mentioned it at all. Was it as simple as doing the shot, then running like the dogs of hell were after me? Surely others had done this before? Why no backup? Why weren't the anecdotal reports more inclusive about preparation and denouement? \n\nItznacoco had sent me on this mission personally, believing it within my abilities. Still, I wondered. Book learning is important, and I did get some virtual training in the matter, and I'd learned a lot. But one of the many things Styen had taught me included the fact that being in the field, in the forefront of combat is different than planning it, different in ways both subtle and obvious. I expected my actual experience would make my current preparations seem juvenile, even idiotic. \n\nThinking about my training, though, also gave me a smile. One of real embarrassment. I couldn't count the number of times I'd asked used the word \"clip\" incorrectly. The sniper training had driven home hard the concept that ammunition loaded for firing was stored in a magazine. Full stop. Whether the magazine was internal to the weapon, detachable on a rifle, or stored within a pistol grip, ammo was loaded into a magazine. No exceptions. A clip might even be inserted into a weapon's internal magazine, but all ammunition was loaded into a magazine. \n\nSorry, Sergeant Tenayo, militia instructor, you were wrong. Pistol magazines were not called clips, and clips were not loaders. I wondered if anyone had ever corrected him? \n\nDoyya and Sowitwee probably didn't know any better, but no doubt Yalcamara, my security chief knew the difference, yet she'd said nothing. Was it because I was a nobleman and her officer? If I wanted to be ignorant in front of everyone, she wasn't going to embarrass me. Though, she'd never corrected me in private, either. Not that we'd had a lot of normal, regular duty time together - so maybe if she'd thought of it, it had just been put aside until later, and later was pushed aside by yet another emergency demanding attention. \n\nI took the military shuttle to the civilian airport. After locating a wall map, I found the storage locker indicated within my orders. Inside were keys for a ChoCac rented in the name of Ket Beelo. A long-term parking sticker attached to the keys. The accompanying travel papers, driver's license, and charge card had my face and Ket Beelo's name. There was also an envelope with two hundred credits in tens - the serial numbers appeared to be random - and keys to a hotel room, which according to the paper map included with the false idenfication, was just outside the airport. Along with it was a briefcase and a day-pack. Inside the pack were clothes, along with a pistol - a Caiman 35 - and single, fully-loaded magazine of twelve rounds on top. \n\nAt the customer service counter, I bought enough tokens to rent a locker for a week. I rented one several spaces away from the locker where I'd collected my false papers and information from. Keeping only my ID and personal charge card tucked into my boot, I put my own duffle bag into the newly-rented locker and pocketed the key. \n\nOn exiting the terminal, I paused, looking around me. \n\nI was reminded again of how long I'd been away from home. I'd spent fully a third of a year in the underground mountain complex of Sparantzlo and its dangerous, mountain barriers while the rest of the world continued on without me. While I pondered all this, the late winter sun came out and shone down, giving a bit of warmth. \n\nAfter the cold mountains, it felt good. Real good. So I sat down on a bench, closed my eyes and lightly dozed, soaking up the heat of the afternoon sun for more than an hour. When I woke, I felt the better for it, like I was at last coming back into the real world after a tumultuous and fevered nightmare. \n\nI stretched, then got up and headed to the long term parking lot. It took a while, but at last I found the vehicle assigned to me. And right away I missed the modern vehicles. Not only did it require a key, the simple onboard computers did not interact with the driver. \n\nOnce inside the sedan-style ChoCac, I laid the briefcase flat on the seat beside me. The fingerprint lock accepted my print and opened. Disassembled in foam cutouts was a Tlokan LRS-12 rifle. The preferred sniper weapon by the Empire, it was very accurate to about sixteen hundred yards. Beside the rifle was a short magazine, filled with ten rounds of high velocity 8.5 mm cartridges. Included was a Suur 9xm scope and a noise suppressor. While a noise suppressor doesn't make you silent, especially from the side, it can confuse those receiving fire as to direction and distance, as that's where the noise suppression is strongest. \n\nOf interest was the small sat-phone in the lower corner of the case. The mission orders gave instructions on who to call to confirm the kill or if I ran into trouble. \n\nI closed the case back up and opened the day-pack and loaded the Caiman. A lighter weapon than I was used to, it was still a decent pistol. Once the magazine was locked in place, I pulled back the charging handle to load the first round, then put the safety on. Pack onto the floor, quickly accessible. Briefcase with the rifle to the floor beside it. \n\nHmm. No spare magazines or shells for either weapon. \n\nI'd normally take several shots to get a feel for the weapon. But 8.5mm rounds for the LRS-12 were military issue. To get more ammunition, I'd have to go back and get some at the base armory. \n\nBattery charge on the ChoCac was at ninety percent. The nano-charged paint on the newer models allowed the ChoCac to passively charge the batteries directly from sunlight, and even charge when it rained; the impact of the droplets converted the minute kinetic energy into electricity that the vehicle then stored. This one required a cable and time at a charging station. \n\nI pulled out the paper map again. The nearby hotel was marked with a red star. And a line, leading north, to where my target was supposed to be located. I looked closer at the map. \n\nGreat. Field Commander Herroto Chatolklan was smack in the middle of a eight-hundred-and-twenty-seven square rad estate in the foothills of the Mamo Mountains. An estate that large meant security. A lot of security. Men patrolling. Possibly guard dogs, too. The three satellite photos showed me the terrain, and where his main dwelling was located. \n\nI slid the orders into the day-pack, pushing it down the side, then started driving. \n\nIt didn't take long to locate the hotel. An older building, it seemed to cater mostly to travelers from the nearby airport. After I checked in, I went back downstairs and walked across the street to a diner, ate a hot meal and paid cash, after which I returned back to my room for a long, hot shower. The gun case went under my bed and the Caiman, safety on, went under the second pillow. After setting my alarm, I went to bed for a long rest. \n\nEarly the next morning, I checked out the rest of the day-pack. The clothes were my size, but I wasn't interested in wearing them unwashed. At the bottom, I found a night-vision-infrared headset in a carrying case and a hand compass. Useful. \n\nI exercised, ate a leisurely breakfast, checked out of the hotel, and by oh-eight hundred hours, was on the highway heading north. \n\nAfter an hour of driving, I stopped in the town of Leenaway and bought some gear at a hunting outfitters. Large backpack, canteen, fire kit, flashlight, field knife, hammock, travel blanket, first aid kit, hunting knife, extra clothes, travel rations - short term, freeze-dried food, not as durable as the MREs, but a lot tastier. I also purchased a heavier jacket and trousers, a hunter's rain poncho, and civilian hiking boots. \n\nAt a nearby bank, I withdrew two thousand credits from Ket Beelo's account, the maximum the automated teller would let me take out. After a bit of searching, I found a laundromat and washed all the clothes. Twice. The new ones and the ones provided for me. Some clothing manufacturers weren't too careful on the chemicals they used, so it was a good practice to wash them before wearing them to avoid getting sick or even dying. \n\nI ate lunch, then resumed driving north. \n\nBack on the road, another four hours of travel got me within fifty rads of the estate. I stopped at the town of Bisbee's Crossing, population two thousand three hundred nineteen. Maybe three dozen or so buildings, and more than half were residential. ",
        "I ate at a diner, enjoying the quiet and the curious stares of the locals, then set out to explore the town a little. \n\nDuring the meal, I swallowed a scent-mask pill, an interesting tool of Imperial Security. I figured I had a day or two before I was in position, and taking the drug would alter my scent over several hours. For full effectiveness, it was best to take the pill for several days in a row., Eight to twelve hours after I stopped taking the drug, my scent would begin returning to normal. If there were dogs at Chatolklan's estate, this would help me elude them. Provided I was able to maintain my distance. The longer time I had before being seen, the better, as my changed scent would confuse the dogs. \n\nAt the market, I bought several bottles of water and fresh food to put into my backpack. \n\nAccording to the map, once I left the town, it would be private estates and independent farms all the way east to my destination. There were also hiking trails, leading across the Mamos and into the Screyacha Animal Preserve, a huge animal park comprised of thousands of square rads of undeveloped land abutting the Empire and the Seven Nations. \n\nWhile there were other animal preserves in the southern continent, this huge expanse was part of the concord between the Empire and the Seven Nations. No permanent structures were allowed, but some bands of humans were permitted. While a few were research parties, most were Preservers, a group of survivalists that used lithic technology, such as flint spears and knives, atlatls, and more rarely, simple bows, believing that technology divorced humans from their aboriginal roots and dishonored the ancient hunting-and-gathering lifestyle of our forebears. To keep everyone honest, Screyacha Animal Preserve was patrolled by air and satellite, and periodic joint-inspections were carried out, searching for contraband technology and poaching. \n\nSeeing my purchases, the cashier at the market asked if I was planned on doing some hiking, which I affirmed. He let me know that they'd had sightings of short-nosed bears as well as dire wolves on this side of the mountains, and warned me I should be cautious. The dire wolves might or might not bother me; their smaller cousins, the timber wolves, generally avoided humans altogether. But the short-nosed bears, if they caught my scent, would seek me out for their dinner. I bought a five-day hiking permit, and after paying for my goods, I thanked him and left. \n\nDriving further into the foothills, I found a pull-out near the public hiking trails, on a parallel road to Chatolklan's estate along its southern border. I had a twenty-two rad hike over rough terrain ahead of me. I got into my heavier clothing, filled my pack, and assembled my rifle. I stored the scope and noise suppressor in my jacket to protect them. \n\nFortunately, the weather held out as I headed north. In one of the small clearings between copses of trees, I saw a bush-antlered buck herding several does. The antlers were remarkable, being about six-feet wide and split off into at least a dozen tines on each side, looking like two giant combs embedded on their heads. I hunkered down in the tall grass between the trees until they passed. They were big, their shoulders reaching about six feet. It wasn't breeding season, but I didn't want to take any chances if the buck decided to be aggressive. \n\nToward evening, I found that the borders to the Chatolklan estate were marked by weathered. split-rail fences, which were easily climbed and crossed over. That night, I found a nice tree to hook the hammock, settling in high in a tree. \n\nThat night I had an erotic dream. It took place in my bedroom at my parents' estate. On the bed, I saw Janetta, naked, her legs apart. Her face was flushed, and her pussy was puffy, dark, the lips parted and her nether hair soaked with wetness. \n\nThen I saw Calia, standing beside the bed, also naked save for a fake cock attached to some sort of belt harness. Calia told Janetta, \"Let me know if want more,\" before turning and walking past me. The rubber cock glistened wetly. \n\nStill in the dream, I was so hard, I ached. I walked up to Janetta, who looked surprised to see me. She started to rise, but I put out my hand and stopped her. Before she could speak, I said, \"Don't say anything. All I want to know is if you are safe, because I am so going to do you.\" \n\nNot even bothering to take off my trousers, I pulled my out my cock, grabbed Janetta's leg and put myself at her soaked, still open cavity. With one thrust, I slammed into her, my balls slapping against her butt. Then leaning over her, bending her in half, I pounded hard into her depths, over and over, giving her my full measure. As she grabbed my arms and cried out, I could feel myself getting close to ejaculation. \n\nThen I woke up. \n\nOnce I stopped cursing, I took a long breath. I had never seen Calia wear such a device, and wasn't sure that Janetta would ever let Calia do such a thing to her. But the image was hot, and my cock demanded release. So I pulled it out and imagined Janetta was still underneath me, getting her everything I had. It was a matter of moments until I reached release. At the last second, I turned enough to let it shoot out over the side of my hammock and to the ground below. \n\nWhen I was soft enough, I shook off the remnants and tucked myself back in, trying to relax. Yeah, that was a hot scene. And probably total fantasy. It was the first time, though, I'd had a sexual dream about any of the women in my life. Odd, that it was those two. Closing my eyes, I revisited my last night with them at High Guard, and eventually drifted off to sleep. \n\nOn my second day traipsing across the foothills, I got much closer to the house. \n\nI quickly spotted the patrols. Mostly All-Terrain Vehicles, but they kept to the dirt trails. Sloppy practice for them, good for me. The guards wore body-weave armor, sufficient against most weapons, but I expected that my LRS-12 would punch right through anything they wore. \n\nUsing the binoculars, I surveyed the area, approaching the main house from the southwest. In order to have a good angle, I discovered I'd have to back out and make my approach coming from the west to northwest. There was a small rise in that direction, which would give me some elevation and cover. I expected this would take me most of the day to accomplish. \n\nI slipped away and made the wide circle around about, and found another tree to hang out in. During the night, the sky was especially clear, so I looked up at the starlight gleaming down at me. I knew some of the stars, but this far north, there were many constellations that were new. At High Guard, I'd been learning some of the new ones, but that had been mid-spring and summer. It was now early. Some of the stars were familiar, but many more were not. \n\nLooking to the heavens, seeing the starlight gleaming down, naturally made me think of my father. Wondering how he and my mother fared. Thinking of them led me to my own family. I wondered how my girls were doing. Sisi and Mina had been with us for so short a time before I'd had to leave. Did they even remember what I looked like? I knew them. Thinking about their magic hugs had helped me stay sane, as did Sisi's infectious smiles. Janetta and the other women who loved me, I hoped they had fared well during my long absence. I had already been gone longer than they'd been told to expect. Which I knew would cause them worry for my sake. During my time at Sparantzlo, all of us had been isolated from the outside world. And now I was deep into my assignment. I worried that anything I sent home might alert those working against Itznacoco or myself as to my location. The only thing that said I was here was a security report at Defiant War Base. Everything since my arrival had been cash or via my fake ID of Ket Beelo. \n\nI looked up at the stars again, promising myself I'd be home soon. \n\n* * * * * \n\nThe next morning, just before dawn, I crept to my position and settled in, using branches to cover me, and smearing dirt onto my face. I was about four-hundred-and-thirty yards away. I unwrapped the LRS-12 from its protective blanket, attached the Suur scope, keeping the lens covers closed. Screwed on the noise suppressor. \n\nIn front of me was a ranch-style main house, a nearby secondary bunkhouse, and behind them both was a large, three-story barn. Vehicles came and went throughout the morning and afternoon. Guards passed into the bunkhouse throughout the day, and vehicles, when not in use, went into the barn. I counted close to a dozen armed men in small, three-man patrols - plus another six men near the house. Two were stationed outside on opposite corners, with a third man on the roof, who scanned with his own set of binoculars. About lunch time, the shift changed and those on duty were rotated out. No sign of guard dogs, though, and that pleased me a great deal. \n\nIn the late afternoon, while I ate jerky and sipped from my water bottle, the smells of red meat cooking filtered from the kitchen chimney of the main house. The smell of cooking meat made my stomach rumble. \n\nAfter dinner time, a woman came out and sat on one of the chairs on the covered porch, holding a snifter glass of dark liquid, presumably filled with alcohol. As the sun was behind me, I opened the lens cover and took a look. Middle-aged, but nice looking. Loose flannel shirt, tied under her breasts. Heavy tartan skirt and fancy boots. Ligature marks on her wrists. Big surprise. If everything worked out, I was going to change her life. \n\nA man came out. It was Herroto Chatolklan, carrying a cigar and a snifter glass of his own. Flannel shirt to ward off the cool evening air. Jeans. Fancy-tooled boots. Fancy, wide belt with an alexandrite embedded in the buckle. A regular lord of the country manor. \n\nI sighted him in. Tossed up a piece of grass to check windage. \n\nA quick glance back up to the guard on the roof, then back to my target. Herrato sat next to the woman in a chair of his own. \n\nIn case of body armor, aim for the head. \n\nSqueeze slowly. \n\nChuff! went the shot, but even so, the shot was loud in my ears. Chatolklan's head snapped back as the back end of his skull decorated the cabin wall. I heard the distant scream of the woman. \n\nInstantly, the guards went on alert. Lifting the barrel, I sighted on the guard on the rooftop and fired again. He dropped and rolled off the building, and then I snapped off another hit to the man on the closest corner. The third guard dove for cover. \n\nTime to run! \n\nKeeping low, I grabbed my backpack and ran around the rise for the heavy brush. Within two minutes, an ATV patrol arrived, crashing noisily through the bracken. As they scouted up and down the road, I quickly edged further away. \n\nOnce I got at least a half rad distant, I shouldered the pack and began to run-jog, heading southwest. My goal was to travel for three hours, then turn south. I set my watch timer and resumed running. Once I hit the road, I planned to hike east to the park and retrieve my vehicle. \n\nTaking quick breaks every few rads, I readily drank from my water supply. By the end of the first hour, I was getting tired running over the rough terrain, so I took a break. A good reminder to me that I needed to be in better shape, and I would have to remedy that when I got home. \n\nIn the far distance, I spied two helicopters approaching from the west. Saw them before I heard them. \n\nSeven hells! He has air support! \n\nThe notion that I'd been set up flitted through my mind, but I pushed it aside. I needed to focus, and even more important, I needed to move my ass to avoid getting killed. \n\nUsing my binoculars, I saw that they were both AHR-17 Kites. Instead of the fifty caliber machine guns, both carried a pair rocket pods, one aside each landing strut. The pair split up and deployed into a standard outward spiral search. If these Kites were standard military grade craft, they were equipped with very good detection gear, including infra-red scanners, and I would soon be located. \n\nKali's throbbing cunt. \n\nI began running as fast as my legs would move. \n\nBy the second hour, one of the Kites neared my position. I moved until I was under a large copse. The helicopter made a pass, then swung hard about. \n\nI set to a zigzag run. I heard the salvo of rockets firing behind me. I dove for ground just as trees exploded behind me, billowing smoke and scattering a barrage of wood and steel shrapnel. I grunted as I felt some impacts, but kept moving. As the helicopter hovered, searching, I snugged up behind a tree and brought the rifle to bear, sighting on the rear rotor. \n\nChuff! Chuff! Chuff! Three 8.5 mm rounds kicked away. \n\nThere was a sound of metal grinding, and then the rear rotor began to smoke. \n\nHit! \n\nWobbling about, the helicopter lifted higher, then struggled to retreat. \n\nMy elation was short-lived. I could hear the second helicopter coming in fast. \n\nAs the second Kite got closed, it hovered, pointing in my direction. Worse, gunfire from the trees began to sound, and bullets whizzed by near me. \n\nFour rockets from the attack pod fired and I again dove to the ground. Explosions bracketed me, shaking me hard. Wood from blown trees flew everywhere. A second barrage was loosed. \n\nI had the cold realization that they might be tracking me the same way that Chatolklan had been located. \n\nThe chip in my hip! \n\nRolling to my side and shoving down my pants, I bared my butt. Where I'd received my vaccinations I'd been told. Drawing my belt knife, I found the scar and stabbed. Gritted my teeth and swearing, I moved the blade tip. Felt something metallic. Twisting and yelling, I dug down until I could pried it out. Gasping while blood ran down my leg. \n\nPounded the chip with the knife hilt into smaller bits. \n\nHauled up my trousers and ran-limped away. More rockets fired, but they landed to the right of me. The concussive force still threw me off my feet. \n\nProne, I crawled through the brush as fast as I could move. \n\nMore rockets fired, but I was now making my way from their target area. \n\nMy hip was wet with blood. It needed a Nu-Skin patch, but I didn't have the time. \n\nWhen I was about a rad away, the helicopter started into a circular pass. \n\nPanting, I realized I had to deal with my bleeding hip right then. \n\nI hauled off my pack and dug for the first aid kit. Ripped off the Nu-Skin patch, dropped my trousers, slapped it on and held it until it sealed. Pants secured, I swallowed four pain-blockers dry. Then swallowed another scent-mask pill. \n\nWith my rifle in one hand and the pack in the other, I ran, trying to keep my head down. The analgesic in the patch took the edge off the pain in my hip. The patch of trees helped provide cover. \n\nThe helicopter began to climb, slowly spinning in mid-air, scanning the ground around it. I noticed that they had two shooters looking out the sides. Hardened windows open. My hardened 8.5mm rounds could penetrate the rear-rotor housing, but not the main body of the helicopter. \n\nLifting the rifle, I sighted the craft. Timed it as they spun slowly and climbed to increase their search radius. With the infra-red, I was in danger. But the open windows were a break for me. \n\nAs the helicopter came around the second time, a hundred feet higher, I zoomed in on the open canopy. Just as the helicopter stopped and started to reverse direction toward me, I fired twice, aiming for the avionics control box inside, on the roof. \n\nBoth heavy rounds punched through. The pilot responded almost immediately, firing a salvo in my direction. I ran and dove for cover. \n\nI took a lot more chunks of wood sharpnel, this time into my left side, but again the backpack bore the brunt. The helicopter began smoking, losing power. \n\nSucking air, I hauled myself up and scanned about. Two searchers were three hundred yards to my right rear. If I fired, I could distracted them, but it would also confirm my whereabouts to the ground teams. I only had two rounds left in the LRS-12 magazine. Twelve rounds in the Caiman 35, with no spares. I could not afford a prolonged or pitched fight. \n\nThe helicopter fired again, but the angle suddenly dropped, and the rockets went wild. To my front left, I heard distant cries. I blinked. I'll take friendly fire casualties any day. \n\nAs I moved off, keeping as low as I could, the helicopter wobbled dangerously as it turned, trying for the open area near the main house for an emergency landing. \n\nNearly a dozen of the large deer I'd seen two days earlier suddenly burst out from the brush behind me. The deer crying out in panic. Even a doe could hurt someone if they slammed into them. I put my back to a tree and let them pass. \n\nSteeling myself, I slowly zig-zagged through the trees. Within a rad, I slowed to a fast walk. \n\nI had been more than lucky so far. If the gods wanted to help, I would welcome their help. But I was still a long ways from being safe. \n\nThe intelligence for this mission had been next to non-existent, and if this was how Imperial Security ran their operations, they needed to take some lessons from professionals, like the Ground or Marine Service. \n\nThen a sick feeling flooded me. I well and truly hoped my sink-or-swim experience here wasn't just to find out just how bad things were with Imperial Security! Because if so, that meant things were really, really bad, and my life expectancy was suddenly much lower than I'd thought. \n\nWhen I was past the split-rail fence, I breathed easier, but still jogged another rad before halting for a rest. \n\nDug out a fresh pair of hiking pants and shirt. Wadded the bloody and torn clothing up and stuck them into the bottom of my backpack. Besides, the more I sweated, the faster my scent would change back to normal. Sucked down a water bottle, and stored it into the pack as well. Swearing to myself the whole time. \n\nOnce I realized I was speaking aloud, I forced myself to calm down. Field Commander Herroto Chatolklan of Imperial Security was dead. Deedee Marrin and all the others who had died at Sparantzlo while under his watch were avenged. \n\nRight now, though, I was still in a great deal of danger. Once I was safe, I could raise a holy row. But not now. I needed to stay calm. Think. Anticipate what I'd do if I was their leader trying to find an enemy sniper. \n\nMentally, I imagined Styen coming up behind me and giving me a slap alongside the back of my head. \n\nOh, yeah. He would have done it, too. And I admit, I fully deserved it. \n\nDuring my reverie, twilight had come and nearly passed. I was tired and it was night. \n\nSome of the larger carnivores came out to play at this time. Besides the short-nosed bears and dire wolves, there were the big cats to consider. Some of those cats were bigger than I was, weighing at the top end around seven to eight hundred pounds. Guns made humans the apex predators, but surprise would make all the difference, and those big carnivores could move a considerable distance in seconds. \n\nI needed to find a tree and climb. \n\nFinding a suitable volunteer, I threw my rope over a large branch and hauled myself up. At about thirty feet up, as there was no place to set up the hammock, I dug out my jacket and, because it was clouding over, slipped on my rain poncho. Then I tied myself to the tree. \n\n* * * * * \n\nIt was fully dark when I awoke. Something below me was climbing up, claws digging into the bark. Slipping on the night glasses, I looked down. Mountain lion, about halfway up. \n\nI moved my hand slowly for my flashlight. If that didn't work, I'd use the solid-wood butt of my rifle. \n\nIt sniffed the air, growled, then gave an uncertain noise, almost like a cough. It appeared to consider shifting to a lower branch to free up his paws. ",
        "Once I hit it with the light, though, he suddenly dropped back to the ground. Hissing at me, he sprayed the tree, kicked up some dirt, looked back up the tree as he hissed again, before stalking off. Obviously disappointed I wasn't something delectable. I was okay with that. \n\nScimitar cats were mostly plains hunters, and didn't have retractable claws. Sabertooths were bigger and bulkier, but also lower to the ground with shorter legs. Again, not tree climbers. Still, I checked my watch. Just after zero-one hundred hours. I glance up out of habit. No stars. Dark night, which I was grateful for. A while later, it began to rain and the wind picked up, icy cold coming hundreds of rads south, straight off the glacier. \n\nThe rest of the night was one of fitful dozing and moving my legs, while trying to keep myself warm. \n\n* * * * * \n\nAround dawn, the rain eased off and the birds began chattering. \n\nCold, stiff, and tired, I carefully untied myself, stored the rope, and climbed down. I cut off some branches with leaves and stuck them here and there into my pack so as to break up my silhouette. I munched down two protein bars and half a bottle of water. Maybe it was primate spite, but I did my business right where the cougar had pissed the night before. \n\nSecure, I headed south toward the forest road to the park. When I reached the road, something told me to stay close but not actually on it. Heeding the instinct, I followed the paved road east, toward where I'd left the ChoCac. It was rougher going, and I was tired, but I dogged along. \n\nBy mid-morning, the rain resumed, a lot harder this time. Just as cold as the night before. \n\nI'm positive it was just luck. But in the trees up ahead, I saw someone in rain gear like myself suddenly pass a tree, crawling into a small thicket. He was armed with a rifle and scope as I was. I froze, then slowly, carefully edged closer to the road. Sure enough, along the road were the signs for the park. \n\nSo much for the ride home. \n\nThe vehicle was in Ket Beelo's name, which meant using the ID and charge card were now dangerous. If I used them, they'd likely locate me. \n\nTurning around, I kept low and moved away, letting the rain cover my movement. I was cold and my feet inside my boots were wet, but as long as I kept moving, I'd do okay. \n\nI had to give Chatolklan's men credit. They were making a good effort to kill me. \n\nA couple of hours later, I paused for another meal break. Digging into my pack, I retrieved some dry socks and put them on. My boots were soaked through, but what I did was important. Feet that are too long in wet boots or shoes can become a hazard. The skin becomes saturated with moisture, and may split or even peel off the foot, leading to blood loss and infection, a condition commonly referred to as having \"pounder feet,\" pejoratively named after the Ground Service soldiers who first endured the phenomenon. \n\nUsing matches, I then melted the picture portion of the ID card. After using my knife to scrape off the magnetic strip on the card, I dug a small hole and buried both the Ket Beelo ID and the charge card. My real ID and card were still in my right boot. I'd use it I needed to, but I didn't want easy access to it, or to others who might find and search me. I would rather not have people know that Ranji Kandikan was anywhere near where Field Commander Herroto Chatolklan was killed if I could help it. \n\nI brushed off the mud and pine needles, kicked the detritus around a bit, and continued walking. \n\nDuring the day, I passed by a couple of farmsteads. I avoided them. I didn't know how much influence Chatolklan's people had with the locals. I was hungry, tired, and wet, but it was just too dangerous to risk. I had food and water yet, and could move my feet, so I kept them moving. \n\nIt kept raining. The trees kept most of the wind and rain off me. \n\nToward the evening, I could see structures in the distance. I'd finally reached Bisbee's Crossing, the town I had come through four days earlier. \n\nI paused, pondering my options. Looked at my LRS-12. Pulled the magazine, ejected round one in the chamber and loaded it back into the magazing. Two rounds remaining. Obviously a military weapon, marking me as mercenary, hired gun, or Warrior Caste - none of which I wanted anyone to associate with me until I put some more distance between this place and myself. \n\nI'd been real lucky so far. And I owed part of it to my experience with rotary craft. As a pilot, I'd known where some of the weak spots on the Kites were, so I'd known where to aim my shots. Mix in some luck from one of the gods of chaos, making at least one of the shots count. Without that, the Kites would have chewed me up and spat me out. \n\nI broke down the rifle and stuffed it down into my pack. Pulled out the Caiman 35, and after checking the safety, stuffed it into my belt. Then I resumed walking. \n\nAs I got closer to town, I skirted the buildings, taking the side streets. Only the main street appeared to have street lights, the buildings to either side of the main road remained hidden in darkness. Keeping to the edges of buildings, I made my way through. I was tempted to climb a fire escape and find a corner on the roof in order to grab some sleep. But I'd lived near a small town while growing up. Neighbors in small towns tend to look out for each other. If they hear a strange noise, they might investigate, even on a windy, rainy night. \n\nI was worn and wet, but I needed to keep going, and hoof it to the main highway, another fifteen rads before me. Once there, I hoped to hitch a ride south. \n\nMaybe my luck would continue to hold out. \n\n* * * * * \n\nI checked my watch when I finally reached the main highway. Oh-four-hundred hours. \n\nNo traffic. \n\nStill raining. \n\nI'd been up for more than twenty-four hours. My feet were wet again and I was bone-tired. \n\nLook to the good, I reminded myself. I was alive. I would make it home. I would! \n\nI crossed the north-bound lane and turned south, slogging along the highway's edge. \n\nAbout an hour later, two Armadillos passed on by. \n\nThe Armadillo is a civilian transport version of the armored Tortoise, designed for long-distance hauling of food and goods. A lot of them often pulled along one and sometimes two trailers. Their enormous arrays of batteries gave them about eight hours travel before needing recharging. Half that if they hauled two trailers, or if the load was especially heavy. The tops of the trailers had solar collectors, and fed some juice back into the system, but the weight and speed guaranteed a net loss of energy. A four hour wait at a recharging station, and then back on the road. \n\nThe third trucker hauling a double slowed down and pulled over in front of me. Once I ran up, the driver rolled down the window and leaned out. \"Need a lift?\" \n\n\"Gods, yes!\" Grinning back at him, I hustled around to the passenger side. Taking off my poncho, I hauled myself up the steps and climbed in. \n\n\"Name's Emilo.\" He looked to be middle-aged, with a bit of a gut. Still, he had a friendly smile. \n\n\"Styen,\" I told him, leaning over to shake his hand. I hoped the real Styen would forgive me. \"Thanks for stopping!\" \n\n\"Not at all,\" Emilo responded. \"The Great Spirit says to offer kindness where we can. I'm going as far as Raydam, Styen. How far are you going?\" He checked his side mirrors, then accelerated and resumed driving. \n\n\"Raydam is perfect. When we get there, I'll buy breakfast for both of us.\" \n\nHis comment about the Great Spirit resonated with me. My mother and father had talked about divinity, kindness, love, and the universe in broad terms in several family discussions when I was growing up. Not the Great Spirit specifically, mind you, but we had discussed faith and religion. While not overly religious myself, I did think there was something out there. Anyone who has attended a mass with fifty thousand people chanting will agree there is power there. I didn't agree with blood sacrifices, but there was too much out there that strict materialism and physicalism couldn't explain using science alone. \n\nOf course, thinking of my mother, I flashed on when I'd last seen her, bloody and dying in my father's arms. My father had later assured me she was going to be fine, and that I'd saved her life. Despite my father's words, the images of my memory nagged. I needed to see her myself. \n\n\"You don't need to buy me food,\" Emilo protested. \"This is a gift, freely given. Besides, there are no good music stations for the next two hours. I was sort of hoping to have someone to talk to. It makes this early morning route go faster.\" \n\nI smiled. \"Freely accepted. I'm not much of a talker right now. Lost my vehicle a while back, and I've walked all night to reach the highway so as to get home. Still, I'd like to have a hot meal, and company would be nice.\" \n\nI rubbed my face because it itched. I was pretty scruffy with five-days growth of beard. And I hoped I didn't stink too bad, though I was sure I stank of rain, mud, sweat, and fear. I was going on three days in this same set of clothing. And my pack was filled with clothing even worse smelling. \n\n\"Do I detect a southern continent accent there?\" he asked, as we began moving again. \n\n\"Guilty as charged. Tohingo. It's where I'm headed.\" \n\nEmilo whistled. \"That's a far stretch of the legs, Styen.\" \n\nWe settled into talking. Soon, though, Emilo did most of the talking and I just listened. \n\nI tried my best to keep awake. I did manage it for about an hour. But the heat of the cabin and the whine of a dozen tires on the asphalt, and the white lines on the road all seduced me to sleep. All I knew I was incredibly sad, and after a time, I awoke gasping, crying out. Vague images of Stryker, Belton, and Charunt hurting my girls Sisi and Mina, their screaming, and I was tied up, unable to stop the the bastards. It was silly because I knew both Stryker and Belton were dead. And if I had my way, Charunt would join them in the fiery wastes of the Second Hell. But dreams often do the unexpected and the impossible. \n\nSitting up, I wiped my eyes and looked around. We were on a major highway within the outskirts of a large city. Signs quickly told me we had reached Raydam. \n\nEmilo glanced at me. \"You alright there, Styen?\" \n\n\"Yeah. Dreamt about my girls. I haven't seen them in far too long. Months. When I get home, I intend to make up for it with a lot of magic hugs. I'm sorry about falling asleep on you.\" I wiped my eyes again. \n\n\"Magic hugs?\" \n\n\"You have a family. You know what I mean. The hugs your kids give you when you say goodbye. I told my girls their hugs are magic, and if they gave me their hugs, I would always come back to them. They believe it. Now I do, too. The ache to feel another of their magic hugs draws me home.\" \n\nHe glanced at me and grinned. \"Magic hugs. I've never heard it put quite like that. My wife will enjoy that thought.\" \n\n\"I feel badly, Emilo. You picked my up for companionship, and I've been an abysmal travel companion.\" I saw that while we were still on the main highway, there was a lot more traffic, and the land to both sides of the highway grew denser with buildings, roads, and people. \n\n\"It's okay,\" Emilo replied. \"It looked like you needed it. We should reach my destination in about thirty minutes. Maybe longer if traffic continues like this. If you still want to do the breakfast, there's a diner across the street from the warehouse where I'm dropping this load.\" \n\n\"Deal,\" I readily agreed. \"Remember. My treat.\" \n\nHe just smiled good-naturedly. \n\nIt actually took an hour as we'd hit the city's morning rush hour. \n\nWe eventually made it to the warehouse without incident, and Emilo expertly parked his trailer, quickly and efficiently unhooking the trailer from his Armadillo, before parking us in a space near the loading bay. We got out, quickly hooked up the four massive charging cables, and then he took his manifest to the dock supervisor. I hovered nearby, waiting. \n\nThe rain had stopped somewhere along the way. I put my coat back on, slipping the pistol into the backpack. I focused on remaining calm, planning my next steps while Emilo chatted easily with the supervisor and filled out forms. \n\nSoon he was done and we walked across the street to the diner. Shady Grove Truck Stop. There were several warehouses up and down the road, and at the truck stop itself were parked more than a dozen Armadillos, each of them charging batteries while the drivers ate and relaxed inside. \n\nDespite his protests, I paid for both of our meals. Hot cakes with honey and jam. Slices of ham and hashed potatoes. Fresh, hot cahault. The chocolate coffee drink was decently brewed, which was a pleasant surprise. Emilo recommended gooseberry pie and ice cream for dessert. I'd never had either gooseberries or ice cream before. It was flavored with vanilla, a Nahuatl spice. A nice combination, if a bit sweet. I could easily see my girls enjoying the taste. \n\nWe talked as we ate, and I learned more about Emilo's family on the far northern frontier, and his long-haul trips ferrying supplies back and forth across Chuman State. He didn't say anything about my own reticence to speak further, contenting himself with a chance to brag about his wife and children and their accomplishments. \n\nI missed Janetta and the other women in my life, loved them immensely. Don't mistake that. But the handful of times having my daughters on my lap as I read to them? Being their father? Golden moments - that played a huge part of surviving Sparantzlo. \n\nEmilo, I thought, wasn't just husband and father, he was his wife's lover and his children's dad. Emilo reminded me of my father. And I was hungry for more of those experiences in my own life. Not just soldier and lover, but dad, too, and sharing that life with the women. \n\nAt the end of the meal, clutching his jacket just before rising, he said quietly, \"Thank you for the meal, your lordship. Have a safe journey home.\" \n\n\"Your welcome, Emilo, I-\" Then I looked at him, narrowing my gaze. \n\nKeeping his eyes partway downcast, he quietly offered, \"I thought as much. It's nothing you said, I assure you. I was in the military for five years. Got out after I learned to drive big trucks and started my family. You have that aura of command about you. Why you are traveling incognito - well, I'm sure is none of my business. You seem a bit lost, but you also seem a decent man, so I hope you make it safely back to your home, wherever that may be.\" \n\nI raised my eyebrows. \"Lost? How so?\" \n\n\"You're young. But your eyes and how you move tell me you've been hurt bad and recently, and that you're still finding your feet. And I'm not talking about your slight limp. It's deeper. In your heart. My own father was like that when my mother passed on. Stayed that way until he followed her a year later. In any event, your company was pleasant, and the notion of magic hugs was well worth stopping for you. Thank you for that and for the meal.\" \n\nNodding, I stood and offered him my hand again. Surprised, he smiled as we shook hands. \n\n\"Is Styen your real name?\" \n\nI shook my head. \"And for that, I apologize sincerely for the deception. But it belongs to someone very important to me. If you are open to it, I will contact you later, with my real name. I enjoyed hearing about your family. They sound delightful. I'd like to learn more, if I may. And once I'm away from here, I can be open about who I am.\" \n\n\"If you wish, I would be honored. Emilo and Falandi Bitawel in Hoopa Valley, up near Lake Miwaka. Bitawel means Fast Bear. May the Great Spirit keep you safe and see you home.\" \n\nI clapped him on the back, and he left. \n\nI hoped he wouldn't be too upset to find I'd slipped a couple hundred credits into his pocket. I'd picked up that bit at Sparantzlo, too. To him, it would be a huge amount. To me, it was well deserved. Emilo had stopped out of the kindness of his heart, and brought me safely to the city of Raydam. \n\nCollecting my backpack, I paid the bill with a generous tip, then went into the gift store and bought a phone with prepaid minutes. On a lark, I bought a mug imprinted with the truck stop's name on the side. \n\nThen I spotted on a shelf those portable, four-legged back massagers I'd first seen in Capisco, and I burst out laughing. Delighted, I saw there were the original colors, but also some in two- and three-toned color schemes. Janetta and her crew had lost theirs due to the vandalism of our home on Seashell Lane. These weren't made in the Seven Nations, though, but in the Tonwe States, an island continent far across the Western Ocean. Chuckling with imagined reactions from the women, I bought ten. I had no doubt I could find others deserving of some mechanically-derived joy. \n\nI also bought a children's board game, two slinky-toys, and two tablet modules with children's music. All that meant I had to buy another pack to carry all my new goods in. At the stand, they had men's hair dye, \"to enhance your attraction by taking out the grey.\" I bought a package of the black dye. \n\nThe cashier gave me an odd grin as she tallied the charges while I loaded up the new backpack. I had seriously dented their supply. After I paid, she showed me a list of local taxi companies. Using the new phone, I called the third one on the list. \n\nWhen the taxi arrived, I had him suggest a motel, which I had him drive me to. \n\nAfter paying him, I waited until he left, then scanned up and down the street. I spotted a second-hand store. I was near exhaustion, but I also needed fresh clothing. The spares in my backpack were damaged and bloody, and while the ones I wore were nearly dry, they were also quite ripe and had small tears and rips everywhere. \n\nAs I walked to it, I spied a public clinic, and headed there instead. My injuries from the rockets needed tending. They weren't bad, but they were worse than the day before. I remembered my experience with the gunshot to my leg. I had used painkillers to ignore something I should have attended in good time, and was doing the same again. I didn't want a repeat experience of the naval hospital. Draining the infection itself had been really painful. \n\nAfter the wounds were tended to, I desperately wanted a shower, a bed, and a full day's sleep, but I also needed to retrieve my duffle bag from the airport locker. My duffle bag had, among other things, clean clothing. \n\nEntering the clinic, I signed the waiting list, paid the visit fee of ten credits, and waited. Four hours later I was finally seen. I explained that I'd taken a fall, and needed my back and rear of my legs examined, as I was sure I had taken large splinters. At the nurse's instruction, I undressed. She removed splinters and chunks of wood from several sites. Two, though, required another nurse to help with removal and stitches. Seems I had also taken a couple of small metal fragments from the rockets, and one required a bit of digging. The nurses were curious about what happened, asking questions which I refused to respond to, and once I showed them I had the extra credits, they quit asking. A shot of antibiotics, liberal use of astringents and cleaning of the wounds, stitching where it was needed. When they were done, they slapped on fresh Nu-Skin patches over the battlefield of my back and backside. Three times I was offered local anesthetic, which I refused. I remembered Tikleet's warning. No anesthesia, or I'd risk the bomb attached to my heart going off. I actually hurt worse afterward, but now that the wounds were cleaned, I would heal properly. They offered a box of some light pain meds, which I took, and had them add a small packet of stim-tabs to my bill. \n\nFrom there, I walked for a while. Finding a mass transit station, I paid the day fare, and the driver gave me directions on how to get to the airport. I decided if anyone tracked me to the cab-driver, I didn't want to be anywhere near the motel he dropped me at. ",
        "With the beard, the worn clothing, and my ripe scent, most were happy to sit away from me. \n\nThe bus trip actually took me four hours. Not so much because it was slow, but because I'd fallen asleep again. Once I got directions, I transferred to a bus going back toward the airport, and with two stim-tabs to help, made sure I stayed awake. I was pleasantly surprised to find that the bus stop was within a few hundred feet of the airport terminal. By then, having missed lunch, I was starved. \n\nInside the terminal, my first stop was a meal at one of the expensive, fast-food restaurants. Fried chicken from Kenna-Tuck and fried potato wedges with salsa! As I ate, I remembered how much Ixma and Stimmy both liked them. They were a bit addictive. \n\nNext, I found a travel store and bought a large, wheeled luggage kit, along with set of \"guaranteed pre-washed\" casual clothes, including socks and underwear, a comb and a disposable razor. I stuffed the backpack with the gifts inside the luggage carrier and went in search of the public latrines. \n\nOnce in the Hospitality section, I paid for shower facilities. In the bathroom stall, after doing my business, I transferred out my weapons and any items I thought useful to retain from my dirty backpack, stuffing them into the luggage carrier. Tossed out the package wrappers and recycled the empty water bottles. I hadn't turned on the sat-phone, but considering how things had gone and believing it as compromised as my false ID had been, I had no intention of even turning it on. \n\nThe bloody clothing, the filthy, battered backpack, and the sat-phone all went into the trash bin. \n\nOnce in the shower, I kept my gear close at hand, and my Caiman pistol up by the soap dish, safety off. After I shaved, I shampooed and thoroughly scrubbed my skin. Then I applied the hair color, turning my dark brown hair jet black. Let it sit for several minutes while I let the hot water pulse on my aching back. Rinsed and dried off. Dressed in the new clothes. \n\nThen I headed out to the long-term storage lockers. Discreetly checking, I noticed that two people were keeping an eye on the same set of lockers I was interested in. \n\nThankful that I had taken the precaution of getting a separate locker for my stuff. I calmly retrieved my duffle bag and slipped it onto my shoulders, leaving the key in the locker door as the sign instructed. Heart hammering, with my duffle over my shoulder and dragging my wheeled luggage carrier behind me, I calmly walked away. \n\nIn another latrine, I removed the civilian clothes and put on a clean Class B uniform. This was taking a chance, but I didn't intend to fly out of the city. I put the Caiman 35 into my duffle bag. Feeling better, I popped another stim-tab to help keep myself awake. I wanted out of this town as quickly as possible. \n\nExiting the airport, I hired another taxi to take me to the bus station. I checked routes south. One city on the departure schedule caught my eye. Kachotl, capital city of Huezteca State. Since it would make several stops to drop off and pick up passengers, it would be a sixteen-hour bus ride. Low-key and slow, it seemed a good method of travel. \n\nAn hour's travel east of Kachotl was Mohingo, capital of the neighboring state of Nahua. It was also one of three cities within the Empire boasting an Air Service Academy. Adjacent to the academy was a large Ground Service War Base and Boot Training Center, handling both officers and enlisted. Janetta had graduated from Air Academy at Mohingo. \n\nWest of Kachotl was the coastal city of Uiyatiwitz, where Janetta was born and her mother still resided. \n\nI really wanted to get back to my family. But Janetta's relationship with her mother bothered me. \n\nIt was on the way home. Sort of. \n\nWell, really it was me sticking my nose in Janetta's business, but somehow it felt right. \n\nA quick visit to see her mother, and see for myself if I should keep pressing for a reconciliation or let it drop. \n\nI bought a ticket, some cheap travel food, and a lock at the counter for my luggage carrier. After locking it and putting a name tag on the luggage carrier, I checked it in at the counter. Buying some cahault at the adjacent diner, I waited an hour for the southbound bus to arrive. When it appeared, I made a last-minute latrine stop and boarded. Finding an empty window seat, and keeping my duffle in my lap, I was asleep almost immediately. Dreaming I'd show everyone how much I'd missed them. \n\n* * * * * \n\nAround noon the next day we arrived in Kachotl where everyone deboarded. Stiff and sore, I stretched a bit, then after collecting my luggage carrier from the driver, I exited the station. \n\nSeeing a public pubic bath house, I headed over for another shower and shave. Put on the last of my clean clothes from my duffle bag. Outside again, I noticed a laundromat sign down the street and headed for it. It was only when I stood inside the noisy, humid facility that I realized I hadn't a clue on what to do. I could fold my clothing, but getting from the dirty to the clean part? \n\nAnt colonies have warrior ants that fight for the colony; their mandibles are too big to feed themselves, so they must be fed and cared for by the hive's workers. In many ways, I was like that warrior ant. I could hold my own in battle, but I unable to cook or even wash my own clothing. Pulling the tab on an MRE and swallow the disgusting stuff did not count. Well, no one can do everything. It made me appreciate Calia, Zinja, and Ixma for all they had done much to take care of our family. \n\nFortunately, the cashier at the desk saw me in my Air Service uniform, standing about in confusion, and asked if I wanted to have my laundry cleaned. Five credits. Six credits included cleaning my field boots. Paying the fee, I was very grateful.  \n\nThere was a small diner across the street, so I walked across and had a leisurely meal. Simple fare but well made and decent portions. Pan bread, eggs, chopped chicken, melted cheese, diced onions, cilantro, sliced peppers, as well as black and refried beans. Hibiscus tea with a touch of honey. Good stuff. I ate like a pig. \n\nI opened my laptop and briefly powered it up. No wifi access. I realized that made sense. This was a working neighborhood, containing some of the poorer members of the Guild Caste. To pass the time, I put away the laptop and bought a couple of local newspapers. Might as well try and catch up on what the rest of the world had been up to during my exile at Sparantzlo. \n\nHmm. Drought for the third year in a row in the Vedan Kingdom. Tens of thousands threatened with starvation. Grain purchases from the Kemer Kingdom and Shingye Dynasty to help offset the threat. Record floods in Zimbabwe. Oh, this was interesting: Atlantis makes rape officially a crime. In the back section of the papers, several editorials claiming the new law as proof of how morally weak the Atlanteans were. Ah, if they only knew what I intended! \n\nAtlantis might be the enemy, but I had to give them credit. They'd done was I was fighting to do, and had done it somewhat peacefully within their borders in a rather short time. I mean, the protest marches had only gone on for a couple of years, and like that, it was now a law. The lack of reactions from other nations led me to think there was growing worldwide support for this long-needed change as well. \n\nOh, wait. The Kingdom of Veda declares that Atlanteans coddle their women, stating women were made to take care of their men and make children. And this was another reason the Atlanteans were not to be trusted, because everyone knew that women needed men to take care of them, and make the \"big\" decisions. More of that \"women are for fucking, not for fighting\" nonsense. \n\nNot every man is or can be a warrior. And, I knew that not every man could be a good father. If that were true, maybe not every woman should have children. Then I wondered - did every woman want to have children when she came of age? I realized the choice and the right to have control over their bodies had to include this right, too. Equal rights? One day. The Universal Protection Orders were a first step in a fight that one day would make a better world for my daughters. I looked out the window, watching people going about their lives. For them, too. \n\nAfter the meal, I left a ten-credit note as tip, which was twice the cost of the meal. I winked at stunned waitress, and thanked her for a wonderful meal. After all, I'd been there for a couple of hours, eating and reading. I happily whistled a tune as I exited. \n\nAfter I collected my clean laundry, I walked back to the bus station, bought a ticket and proceeded to wait two hours for the next west-bound bus to Uiyatiwitz. To pass the time, I re-read some of my father's last few emails, and wrote some revised thoughts based on my newer, stronger grasp of physics. Still no wifi, but they'd wait in the out-going queue until I found service. \n\nWhen the bus finally arrived, I slipped on my jacket, gave the driver my ticket and settled into my seat. Most of the other passengers were Free Farmers, though a few were Guildsmen. Despite the bus having some riders standing in the aisles, because of my uniform, no one dared sit next to me. Almost next to me, I suddenly noticed a woman with a backpack also carrying an infant in a baby sling. Standing up, I leaned over and tapped her shoulder. \n\nWith trepidation, she turned to face me. Up close, I thought she might even be the same age as me. Which was sobering. Even so, hard work and the weather were aging her fast. \n\n\"Sit next to me,\" I said in Nahuatl. \"Rest yourself. It's a long journey.\" \n\n\"And... what will you ask in return?\" Her large, dark brown eyes were wide, fearful. \n\nI shook my head. \"You have nothing to fear. Rest your feet. There is no debt, no obligation. My word on it.\" \n\nSliding my garrison cap under my left shoulder lapel, I settled back, folded my arms, and closed my eyes. The woman took off her pack, putting it between her legs as she sat down. Then, she began humming to her child, rocking him gently. \n\nI drifted. \n\nThere were numerous stops along the way. Smaller towns and villages. Some no more than a cross street and a building or three with stop signs on the cross street. During our westward progressions, sometimes passengers got off, and yet it seemed even more got on. The aisles became more crowded, and the stops for latrine breaks grew longer. \n\nThe three-hour trip, according to the schedule, turned out to be closer to seven. And just one scheduled meal break. Hungry, I wiped the sleep from my eyes and got up to move past the woman. I heard her stomach give an unmistakable growl. I stopped and looked at her. She just stared back at me, her eyes worried and huge. \n\n\"I have money. Let me buy you and your child dinner.\" \n\nBefore she could protest, I added, \"Please. For the sake of my mother and my own children.\" \n\nSurprised, she just nodded and followed me off the bus. \n\nGetting in line at a open vendor stall, we smelled vegetables and meat cooking in hot oil. My own stomach ached for sustenance. A small bowl of custard and flatbread for her son, and a sandwich wrap for her, two for me. A bottle of water each. \n\nI noticed a man watching us intently, standing among several other passengers waiting to re-board the bus. \"Do you know him?\" I asked her, nodding at him. \n\nShe nodded. \"Meeno. He is my husband.\" \n\n\"Meeno!\" I called. \"Come here.\" \n\nDoffing his faded, sweat-stained cap, in faded workman's clothing and carrying a large pack of his own, he walked toward the vendor's outside lamps. Moths, mosquitos and crane flies buzzed about. His face was a mix of concern for his wife and worry about me. \"Yes, lord?\" \n\n\"May I buy you a meal?\" \n\nAs a nobleman, I could simple do it. Order it even. But my father and Styen had both instilled in me the notion that most men desire self-respect and pride. Some will take what is freely given and move on, but many prefer to earn their way. I had given his wife food, and that might hurt his pride. If he accepted, that would be end of it. But if he politely refused, I could give him a task that could earn him his meal and allow him to keep face, and include my gift to his family as within his earnings. \n\n\"That is not necessary, lord.\" \n\nWhat the baby didn't eat, she finished. But I also noticed she ate only half her wrap. Probably saving it for later or saving it for her man. \n\n\"A trade. When we get to Uiyatiwitz, I'll give you my boots and the cleaning soap in return for dinner now.\" \n\nHis eyes lightened. Quick work for generous wages. \"Yes. I can do that, lord.\" \n\n\"Excellent. Order your meal. Whatever you want.\" \n\nBowing, he smiled. The meal was ordered and I paid, after which we clambered back onto the bus as it was time to leave. Once we were settled, I instructed the woman to finish her food. \n\n\"We will have breakfast when we arrive while Meeno cleans my boots,\" I informed her. \n\nShe blinked, then gave me a half-smile, agreeing to the illusion. This arrangement would take care of this meal and the morning one as well. While I laid back and closed my eyes, she whispered to Meeno, \"Eat the second one. You know you are hungry.\" \n\nHe looked at his wife and then to me. Meeno ate as his wife urged, and I heard her eat as well. Afterward, from his place on the bus floor, I glanced at them both. He leaned his head against her hip, and her free hand caressed his shoulder. \n\nAround dawn, we finally arrived. The young mother whose name I still did not know woke about the same time as I did. She'd fallen asleep, her head against my shoulder. Where she'd drooled on my arm. She grew alarmed at her perceived transgression. \n\nI glanced at the wet spot, then peered at the ceiling. \"How odd. Did it rain last night? I didn't hear anything,\" \n\nDoing her best to keep her face straight while checking on her son, I think she finally understood. \n\nGathering our possessions, everyone de-boarded. She had a large backpack, filled to almost overflowing. Besides the huge pack that Meeno already wore, he retrieved a rolled-up bed mat, which he carried over one shoulder, and a large bag filled tools. Their worldly goods. I retrieved my luggage carrier. \n\nWe found a caf\u00e9 near the bus station and had breakfast. The cafe's cahualt was awful. Far too vile to try and finish. So I ordered three bottles of water, fortified with electrolytes. Meeno cleaned my boots while his wife nursed her son, taking turns eating and feeding bites to her husband. \n\nHer name it turned out was Ai'eesa, but Meeno just called her Eesa. I was told it meant Flower Petal in Huestican. Their son Keemo, I learned, was named after Meeno's father. Meeno was twenty-two and she was nineteen. Fooled me. Both looked older than they were. Hard living will do that. \n\nKeemo was their third child, and they hoped that he would live. They had lost their small plot of land due to taxes and two bad harvests in a row. Meeno and Eesa now worked as migrant laborers, hoping to land a full-time farming job before next year's census. If he couldn't find employment as a farm hand, they would be re-classified as Indentured, and then things would get a great deal tougher for them. They could even be separated. \n\nChanging the subject, I said, \"I'm looking for 12448 Peeno Leeko Street. Do you know where it is?\" \n\nThey looked at me, puzzled. \n\n\"Do you mean Peenu Leeko?\" Eesa ventured. A slight variation in pronunciation, but sometimes that made all the difference. Meeno and Eesa exchanged a few sentences. Then, he said, \"Lazy Fox Street. Is that what you mean?\" \n\n\"Could be,\" I answered. \"I don't know the Huestican language.\" \n\nReaching into my duffle bag, I pulled out my laptop and opened it up, hoping for the best. Finding an open wireless connection available, I logged in. On a local map, I confirmed they were right. It was Peenu Leeko. I'd read the address when I was going to school at Tik\u00fan War Base. All things considered, I was doing pretty good. The street was some rads south of where we were. I powered down and returned the laptop to my duffle bag. \n\nAfter I paid for the meal, they started to leave. \n\n\"Please wait, Meeno. Eesa. I'd like to make you an offer. Keep me company and I will see that you are fed and pay you for your time. When we're done, we'll settle up. Agreed?\" \n\nThey talked, she whispered and nodded, and he finally said, \"Yes, lord.\" \n\nI'd noticed that taxis seemed to wait by the bus station, but by the time we'd finished our meal, they had vanished. However, there were signs with telephone numbers, so I used my temporary phone and called the first one I saw listed on a sign outside the bus station. \n\nFifteen minutes later, we were on our way. \n\nI know, I know. Here I was with a poor family in tow. My plan wasn't firm, but Janetta had told me more than once that all her mother had was her widow's pension. I had money to spare. Having servants around the house could only help Janetta's mother. I hadn't approached Meeno or Eesa, but they might jump at the chance. He could work as a gardener and she as a housekeeper and I'd cover their upkeep. Working as a gardener, I could sign off as his employer and put a freeze on his being reclassified as Indentured. I took a breath. I didn't know Janetta's mother. If she didn't come across right, I'd make other arrangements for the farming couple. If one or the other didn't agree to the relationship, no harm done. \n\nThis was impulse again. I'd take a chance on Doyya, and she was a good Second. Another impulse, and I had a blood brother, Bilan, who'd fought by my side to protect my parents. I hoped this chance meeting would work out for them as well as for me. \n\nMaybe it was the baby and her being so young. The look in Ai-eesa's eyes when she looked at her son Keemo, they reminded me of the look I'd seen when Sisi slept beside Zinja, and the looks I'd seen Ixma give Mina. I was beginning to understand just how important those feeling for the helpless little ones could be. \n\nI told myself again that my goal was a quick visit to find Zaniyah Tlacotli, and to learn how she fared. \n\nThen it occurred to me. What if Janetta's mother didn't want to renew contact? Or, once Zaniyah finds out I'm living with her daughter, she might run me out of the house with crockery and cutlery aiming for my direction. Ah, well. That would be embarrassing, but easy to survive. \n\nAs for Meeno and Eesa, well, if this didn't work out, I'd make arrangements to set them up. And I'd do it myself. My mother had done more than enough. I was an officer, a nobleman. Surely I could handle setting up two people. \n\nThe driver took us through city streets for a bit, then through some upscale housing, before moving into some poorer neighborhoods. When we finally arrived at our destination, I looked about. It may once have been young and vibrant, but this street and the houses now felt worn down. On the verge of being discarded. Two houses up the street, there was a battered ChoCac on cinder-blocks, the wheels gone, and grass sneaking up through the pavement underneath. \n\nI paid the driver the fifteen credits for the forty-minute ride, then asked him if he'd like to earn hundred credits more. I had his attention. \n\n\"Call it in if you need to, but stick around - until I either say you can go, we all pile back in, or it hits an hour past dinner. You might get more trips during that time. If that happens, any fares and mileage will be extra. Regardless of whether you drive or don't drive, you still get a hundred credits. Agreed?\" \n\nI wore my uniform, declaring my status as a nobleman. To ease his mind, though, I showed him the bills I had on my person, and gave him a twenty credit note as a surety. \n\nHe licked his lips before he looked at me. \"Warrior's Word?\" \n\n\"Warrior's Word,\" I acknowledged. ",
        "Grinning, he took the twenty, pulled his cloth cap over his eyes, and settled down in his seat to take a nap. \n\n\"Feel free to stretch your legs, but please wait for me,\" I told Meeno and Eesa. They nodded, opening the windows for air while they waited. \n\nReaching into my duffle, I retrieved the Caiman and its holster, securing it onto my belt. Eesa's eyes got very big, and even the taxi driver suddenly sat up and paid attention. Free Farmers and above could have a knife, but guns really were a big deal, especially among city dwellers. Putting on my garrison cap, I took a breath and set to my task. \n\nThe picket fence in front of the house was missing a lot of slats and several more were broken in places. One section was missing fence altogether. The grey paint was worn and chipped. The ground was dry as scrub, and the only plants were mostly crab-grass and dandelions, and the few trees were scraggly. It was winter time, so I expected the grass to be dormant, but the weeds and wide patches of bare, hard-packed dirt spoke of long neglect and lack of water. \n\nThe house, too, was in need of maintenance. Stepping up onto the porch, I saw holes in the floor here and there. Some of the boards groaned ominously. The paint here was in the same shape as the fence. Worn and peeling. \n\nI knocked. Waited a bit and knocked again, harder. \n\nStill no answer. I rapped loudly on the frame, calling out, \"Hello? Hello inside!\" \n\nThe latch suddenly clicked and the door creaked open a few inches. \n\nBefore I could advance inside, however, a small, older woman burst forth from the house next door, waving her arms and yelling at me in Nahuatl. \n\n\"Get out of here! Haven't you worthless scum done enough to her? Leave her alone or my boys will learn you some -\" \n\nI turned. \n\nShe came to a sudden halt, staring. \"You're a soldier. Are... are you an officer?\" \n\n\"I am,\" I answered, giving a short bow and smiling politely. \"I'm looking for Zaniyah Tlacotli. The information I had is that she lives here. Do you know where I might find Lady Zaniyah?\" \n\n\"What do you want with her?\" she asked cautiously, bordering on suspicion. \n\n\"I've come a long way just to meet her and find out how she's doing. I assure you, I mean her no harm. Who might you be?\" \n\nShe stared at me for several seconds, looked me over again, then finally nodded. \"I'm the widow Teela Deba'xlanti. Zani is in my house. Come on. Follow me.\" \n\nShe looked to be in her sixties, possibly her seventies, but she was hale and spry, and I had to walk quickly to keep up. Lean of body, her grey hair wrapped in a modest bun. The dress was old and worn, but clean and well kept, with some of the colors and patterns favored by the Merchant Caste. Tan dress with dark grey spirals along the hem, topped by a line of stylized lizards above. Matching spirals, bar, and lizards along the arm cuffs. \n\nAs we climbed the steps into her house, she began talking again. \"They hurt her pretty bad. Those hooligans come by and steal most if not all of her pension money every month. She can't afford to hire anyone and she won't leave.\" \n\nWhat? \n\n\"Explain your words, Teela. Who hurts her? And who steals her money?\" \n\n\"The street gangs, of course. Who do you think?\" She shook her head, giving me another appraisal, and this time I didn't fare as well. \n\n\"What about the police?\" \n\nShe curled her lip and spat, though it was all noise and no substance. \"Effin' coppers! They're all on the take. They only come when there's a body or when there's property to divvy up. The street gangs take everyone's money, and then the cops come by after to get their share. It's enough to make the gods weep.\" \n\n\"Why is everything so dry? There should be plenty of rainfall here.\" \n\n\"His High and Mightiness diverts the water for his personal crops and animals. Charges the people in town dearly for any water they use. The more you use, the steeper the increase in fees and rates. Costs are three times what they were five years ago. Gouging the customers is short-term thinking, and bad business for generating repeat customers. Merchant Caste. I know these things. Most people can't afford to keep flowers or ornamentals any longer. Worse, some people can't even afford to keep gardens any more, which means more are going hungry. Thieves and scoundrels! The old Lord wasn't like that, but our new master, Lord Who-sticks-it-to-ya throws huge, drunken parties for his friends while good folk suffer. There's a freeze on land sales, so even if you wanted to leave, you can't sell your land for money to buy a new start elsewhere. With the way of things, who in their right minds would move here?\" She turned around, waving her arms broadly again. \"I ask you, who?\" \n\nShe opened the front door, leaving it open for me. I shut it and followed her deeper into the dimly-lit interior. Definitely middle to upper middle income by the furnishings. \n\n\"So how do you survive, Teela?\" I asked her. We passed through a living room and entered a combination dining room and kitchen. \n\n\"Three strong sons, five - count 'em! - five strapping grandsons. Two of my grandsons live here to keep me safe. That one's Jerro, and that's Dachek. They're good, strong boys. If any of those uppity little gang-bang shits try to come into my home, my boys will learn them a thing or two! Just see if they don't!\" \n\nHer boys were actually big men. Each of them had about four inches and fifty pounds on me. If they'd been in uniform, they'd be even more imposing than they were, sitting casually at the kitchen table. My visit had interrupted their card game. They reminded me of Anton, from his heavy-weight wrestling days. Jerro and Dechak watched me with interest as I came in behind Teela. \n\n\"What can you tell me about this gang?\" I asked. \n\nTurning to lean against a counter, Teela picked up her tea glass and took a swallow before answering. \"Hah! This gang of 'wannabes' call themselves The Wild Jaguars. What a joke! If they ever saw a real jaguar, they'd piss a river trying to escape its teeth.\" \n\nSetting her glass down, she nodded for me to follow. \"Zani's back here in the spare bedroom, resting.\" \n\nAt the doorway, she stopped and turned, dropping her voice. \"Wait here. I'll see if she's awake.\" Then she frowned. \"Zaniyah's Nahuatl, like me. I do my best by her because we have a tribal connection, and we've been neighbors since before my Marko passed away. I give her food all the time, because they almost always take all that she has. Last time, they also took all three bags of quinoa she had! But she's not kin. I can't make her leave, and I need my boys here, to protect me.\" \n\n\"I understand. I'll wait right here.\" Seven hells, I thought. \n\nShe rapped gently on the door, then entered inside. \"Zani? Zani, are you awake? You have a visitor.\" Teela entered, closing the door behind her. \n\nI took a long breath, preparing myself to wait. \n\n\"Are you really an officer?\" Dachek asked. Both lounged lazily against the door frame at the hallway entrance, probably to satisfy themselves that I really was an officer. For a commoner to fake being in the uniform of the military earned a hundred lashes. Wearing an officer's uniform, though, earned a ticket to the slave auction block. I had a pistol. A commoner wearing a pistol without the right to do so earned death by torture. Still, it wasn't unheard of. \n\n\"I'm Senior Lieutenant Ranji Kandikan, Imperial Air Service.\" \n\n\"Aren't you a little young for that rank?\" Jerro said, looking at me sidelong. \n\n\"Jerro! That's just rude.\" \n\n\"But Lieutenant Wayatsho is in his forties. He wears two deelie-bobbers on his shoulders, and this guy has three!\" \n\n\"It's still rude, Jerro.\" His brother shook his head. \n\n\"I'm just sayin' is all!\" \n\n\"Maybe he has better connections than Wayatsho.\" \n\nI wondered a moment whether I was still on the bus, and I was having a really vivid and weird dream. Like one of those strange entertainment stories, where one of the gods sets up a grand illusion to test the main character's mettle with all sorts of challenges and outlandish situations. \n\nAt that moment, Teela stepped back out into the hallway while the two brothers were still arguing about how long Wayatsho had been a Lieutenant. \n\n\"Hush you two!\" she snapped. \"Go play your game and stop making so much racket. I could hear you through her closed door!\" \n\nChastised, they retreated to the kitchen. \n\nTeela stood up a bit straighter as she took her time looking me over. Licked her lips and smiled. \"My, my,\" she murmured. \"You are a handsome devil, aren't you? And an officer. Now that I've seen you better, even with that shadow on your face, you are nicely put together.\" \n\nRubbing my bristly chin, I smiled. \"I just got into town today. I haven't even had a chance to shower or shave, so I apologize for my appearance.\" \n\n\"You've got nothing to be sorry for, young lord. Nope. Not a thing.\" \n\nI tried to move past her, but she slid in front of me, blocking me. I was surprised by her boldness. \n\nShe looked up, speaking quieter. \"You being a lord and everything, you could... have your way with me... Just bend me over, lift my dress, and... there would not a single thing I could do about it. Nothing at all, but... just let you... take me.\" \n\nI heard real need underneath her matter-of-fact words. \n\nThere was the sound of a slap, and glancing back into the kitchen, I saw Dechak's face covered by the palm of his hand. \n\nLeaning into our view, Jerro had a sad look. \"Grandma, did you just offer yourself to this man? You don't even know him! And at your age, too! You're a respectable widow. What would your son, our father, say?\" \n\nTeela's eyes flared, breathing hard as she pushed past me, hands on her hips. \"He's an officer. That means he's a nobleman. It's his right to take me if he wants! Nothing you or I can do about it. Nor you, either. Not a thing, do you understand me, boys? And for your information, this old stove has plenty of fire left in it, so you mind your sass!\" \n\nI was flattered by her not-so-subtle offer. Even so, I lifted her chin, turning her focus to me. \"How long has it been?\" \n\n\"Seventeen years. Since Marko died.\" Suddenly sad, she looked down. \"I'm only sixty-two, but I don't look so bad, do I? Is it because of my age?\" \n\nTeela wasn't a beauty, and life had left its mark. Younger than I'd first thought. Still, beneath the wrinkles and saggy skin and even saggier breasts was a woman trapped by her very human desires. I thought at first it was a simple wish to be held, but then I saw the look in her eyes. Pupils dilating. Skin flushing. No question about it. Teela wanted to be fucked senseless. \n\nFeelings mattered, though. \n\nCaressing her cheek, I smiled. \"No, it isn't your age. If I did such things, I'd make sure you squealed. Over and over. But I don't take women against their will, Teela. Now if you please, I want to see Lady Zaniyah.\" \n\nOpenly disappointed, she moved aside. To her grandsons she muttered, \"Old I may be, but I am not dead. Not by a long shot. And you'd best remember that.\" \n\n\"Yes, Grandma,\" they answered together. \n\nHoo boy. Seventeen years is a lot of pent up need. I shook my head. I was flattered, but I was also glad to dodge that bullet. \n\nI slipped inside the room, closing the door behind me. My eyes adjusted to the dim light. \n\nSitting on the bed, her back to the headboard, was middle-aged woman. There was a large bruise on her cheek, by the look of which was fresh. She was overly thin, for the bones on her body were prominent, more than if she were just leanly built. The dress she wore was worn and the once-bright colors faded. Like Teela, the design was Merchant Caste. A shawl across her shoulders to ward against the evening chill. \n\nBut she had those large black eyes. Pools of blackness that could swallow you up. Just like my Janetta. Same nose. The same sharp, intelligent gaze. My heart responded, aching at the memories of Janetta she evoked. \n\nOnce I found my voice, I gave a short bow. \"Lady Zaniyah Tlacotli? Widow of Captain Milintica Tlacotli, Imperial Ground Service?\" \n\n\"Who are you?\" she asked quietly, sitting up straighter. Looking me over. \n\nMy greeting seemed to ease some of her fear, but she was still uncertain about me and my intentions. She brushed her hair away from her face nervously, revealing more ugly bruises along her wrist and arm. \n\nEven her movements reminded me of Janetta. \n\n\"I am Senior Lieutenant Ranji Kandikan of the Imperial Air Service. I have traveled a long way to see how you are faring. Lady Zaniyah, I must tell you, I am disturbed to learn that things are not as they should be.\" \n\nRaising her eyebrows, she narrowed her gaze. If the mother had half the fire and spirit of the daughter, the two of them must have fought like champions, carrying on the fight even while bleeding from expertly delivered verbal wounds capable of slaying lesser mortals. \n\nShe tilted her head a bit. \"I haven't seen someone from the government in more than ten years. And you're not Ground Service. If you're here to get something from me, you're going to be disappointed. I have no money and no influence with anyone. So why are you are here, Lieutenant?\" \n\nSpotting a chair, I pulled it up and sat down. \"Lady Zaniyah, I'm not here in any official capacity. And for the time being, I'd like to keep this visit just between us.\" \n\nThere was a flash behind her eyes and she scowled in irritation. \"You still haven't told me why you are here. Out with it!\" \n\nNo doubt at all she was Janetta's mother. \n\nI took a slow, deep breath to collect myself. \"Yes, I'm very sorry about that. It's a bad habit of mine, not answering directly when it comes to personal matters. My visit to you is a personal matter for me. I'm in love with your daughter, Janetta.\" \n\nShe looked away at that, now cautious and withdrawn. \"Janetta's alive then. How is she?\" \n\n\"Janetta's a wonderful, beautiful, and amazing woman! She has such strength! She's loyal and brave and - did I say that she's absolutely amazing?\" \n\nZaniyah turned back to me, amusement flickering as she attended my words. \n\nOn a roll, I continued. \"She's an interceptor pilot and she's one of the best they have! Even her commanding officer told me so. Twice! She has a flight crew and they are devoted to her. She's already made captain -\" \n\n\"What?\" Suddenly animated, she leaned forward. \"A captain? So soon! How? What happened? Please, Lieutenant, tell me all about it!\" \n\nThe hunger for news of her daughter was plain to see. Here was a chance for me to talk to Janetta's mother about her accomplishments, and about much I loved her. Just as I readied myself for a long discourse, I remembered there were people outside in a taxi waiting for me, for us. \n\n\"I will, in due time, Lady Zaniyah,\" I assured her. \"First, I want to take you away from this. Things are bad here, and likely to get much worse.\" \n\nZaniyah shook her head. \"No. I won't leave. My husband is gone, and my daughter won't even speak with me. She hasn't so much as visited, written, or even called since she enlisted at age sixteen. That was more than six years ago. This home I shared with my husband for five years. I gave birth to my child within its walls. If I listen at night, I can still hear the echos of his footsteps. My home... it's all I have left of him. And her.\" \n\n\"But you're in danger here! It's just a building,\" I protested. \"Homes can re-built, but people are unique, irreplaceable.\" \n\n\"You must understand, Lieutenant. Mil was not just my husband, he was the love of my life! When he died, at least I had my daughter, who was a part of us both. His death devastated both of us. And no matter how much I tried to make her see, I couldn't make her understand that as much as she missed her father, that I was hurting, too. We are both headstrong women, but Mil kept both of us focused, grounded. After he was gone, my days were filled with trying to keep a defiant, headstrong child from getting herself killed, and my nights were spent grieving for my lost husband, and weeping for the sharp, angry words exchanged by two people who should have loved and leaned on each other. The words of my daughter hurt as much as the ones I unfairly gave back to her. In hindsight, I realize that now. But as unpleasant as some of the memories have been, that house also holds the happiest ones. The day my husband carried me over the threshold. The day I held my baby girl in my arms for the first time. The loving look he gave me, happy to hold our child. That house has been my home for twenty-five years. I'm staying.\" \n\nThis complicated things. But I still had options. \"Lady Zaniyah, while the news of your daughter must wait, I can tell you about your brave husband and how he died. You can not share the news with anyone else, as the information is a state secret. However, I will tell you because you deserve to know the truth.\" \n\nDrawing her shawl closer, desperate hope filled her eyes. Now I could see that Milintica's death, and the secrecy surrounding it, had haunted mother and daughter in equal measure. As much as she wanted to hear of her child, she needed this more. \n\n\"Yes, please tell me! But, first - does she know? Does Janetta know how her father died?\" \n\n\"Janetta and I heard the tale together.\" I moved to sit on the edge of the bed, reached out and took her hand. \"The knowledge has helped ease the loss of her father. Enough, I hope, that her heart is finally beginning to heal. And I must say, that to have had the complete and devoted love of his wife and his daughter, Milintica Tlacotli must have been a truly remarkable man.\" \n\n\"He was a good man and the best husband! The best!\" Tears spilling, she squeezed my hand, urging me on. \"Please? I need to know.\" \n\nSo I told her of the race to reach the downed grey starship, the rush to extract critical technical parts, before either the greys or the Atlanteans showed up. How the Atlanteans did arrive, outnumbering the small team of volunteers, and the deadly firefight that ensued. How Sergeant Milintica Tlacotli rigged the bomb, then held the enemy off while the survivors escaped with the captured alien engine. \n\n\"It was only when he knew the rest of his team were safe that he set off the explosives. I'm sure he never felt a thing. Against overwhelming odds, he held back a superior force of enemy warriors, and protecting the rest of the team. Because of him, they completed their mission. I know it does not replace your loss, but your husband was fierce in battle, defiant against his enemies, and he died a real hero in the service of the Empire, living in the truest sense the Warrior's Code. When the Emperor elevated him to the Warrior Caste, giving him the rank of captain, your husband set the bar high for the rest of us.\" \n\n\"Aliens... and... all this is true?\" she whispered. \n\nI nodded. \"I heard this information from someone I would trust with my life. I believe that at long last, you and your daughter finally have the truth of his death. And if anything, it has increased Janetta's love for her father, and deepened her desire to act in a manner that would make him proud of her.\" \n\nWithdrawing her hand, she wrapped her arms about herself, shaking. Silent tears, as much from grief relived as relief for at last knowing the answer of how her husband perished. For mother and daughter, the not-knowing had been a deep, aching, crippling void that prevented them from moving past his death, and that void had acted to keep them apart. Now at last, Zaniyah, too, could heal. \n\nAll this I understood, and it made my decision to come here not just a right one, but the only one. \n\nLeaning close, I turned her face to look at me. \"I love your daughter with all my heart. She may or may not come around to acknowledging that you and she share the same, heartfelt loss. I truly hope so. You and she are family. Blood kin. And because I love her, Lady Zaniyah, you are my family now, too. I cannot walk away now that I know how your life has been. Therefore I must take steps to rectify things here. I will honor your wish to remain in the house you shared with your late husband, even if it's against my better judgment. Lady Zaniyah, I ask you. Will you place your welfare in my hands?\" ",
        "Surprised, she paused as she wiped at her eyes. Studied me a moment. Then nodded to me. \"Yes, I will.\" \n\n\"I'll give you some privacy now, but later, there are things we need to discuss. Thank you for your trust, Lady Zaniyah.\" \n\nReaching up, she pulled down a picture - the wedding picture of them both. Rolling over to face the wall, clutching the picture and a pillow, she began to loudly sob out her long-held pain. \n\nOpening the door, I almost stumbled over a crouching Teela. \n\n\"I heard crying,\" she accused, standing up. \n\n\"Yes, you did,\" I replied, putting my hands onto her shoulders and turning her around, pointing her toward the kitchen. \"And you have been eavesdropping where you shouldn't. Teela, I warn you now. If you repeat anything you heard me say to Lady Zaniyah, you will find me and many others very angry with you. I am deadly serious about this warning, Teela. You may even endanger your family. Your friend needs some time to herself. You have been taking care of her. For that, I'm in your debt. I offer you-\" \n\nShe stopped, turned and glanced down to my crotch before returning her gaze to mine. I saw the tip of her tongue wet her lips as she returned her gaze below my belt. \n\nSeven hells. \n\n\"Really?\" I asked quietly. \"That's your price?\" \n\n\"I don't need money.\" In the barest whisper, she said, \"It's been so, so long. My sons forbade me from re-marriage in case I bred more heirs. Please, young lord. I'll beg for it, if you want.\" \n\nI stared at her. If this was payback for my earlier luck in escaping those helicopters... \n\nI swallowed. Time to man-up, Kandikan. \n\nI also realized that was the odd difference between being a nobleman and commoner. Teela and her family owed their loyalty to their lord and his House. Zaniyah, as Teela's friend, could take gifts. \n\nBut as a noblewoman, Zaniyah couldn't accept years of gifts from someone bound to another lord by sworn oath - and thus Zaniyah of House Tlacotli incurred a House debt to Teela of House Deba'xlanti. The alternative, of course, was to pay the separation fee and for Teela to swear fealty and service to Zaniyah. But Zaniyah did not have the resources to take on such an obligation, nor could she provide any protection that such fealty demanded. House Tlacotli consisted of Janetta and the bruised and destitute woman I'd just left. Teela had given her shelter and protection. Over and over, obviously saving her life. Usually the commoner asked for some boon or gift, or even something permanent, like access to certain lands or a fixed discount on future purchases or an abeyance on certain taxes. \n\nRules of hospitality and the personal friendship between the women prevented Zaniyah from discharging the debt herself. Teela, in all likelihood, might never have asked for either Zaniyah or Janetta for compensation. But knowing the duties as a nobleman, I had declared Zaniyah as family. I'd even insisted on it. As long as the boon did not impugn my family's honor nor duties as a Warrior or threaten the Empire, I was duty-bound. \n\nFor many other men, they would laugh at my reluctance over such a request and give her what she wanted without a moment's thought. After all, it fit with the common perjorative view of women, that a woman was there for a man's pleasure. If the woman wanted it, all the better! \n\nI knew better, though. Human beings generally like sex, but they also crave relationships and simple touching. In Teela's case, she was plain horny and I was an opportunity too-long denied. Then I remembered what she'd said earlier. Seventeen years enforced chastity after becoming a widow? Holy- \n\n\"My lord?\" Closing her eyes, she breathed out. \"Please?\" \n\nTeela started sliding down to her knees, but I stopped her. Lifted her back up. \"What about your grandsons?\" \n\nHer eyes turned calculating. \"Are those people out in the taxi yours?\" \n\n\"Yes.\" \n\nWhirling about and zipping down the hallway, Teela burst into the kitchen. \n\n\"Dachek and Jerro! Take refreshments out to the porch. Invite the people in the taxi to eat, drink, and relax. Don't stint! Water and beer. Tea and cahault. Pork and chicken. Take out the beans, potato salad, and the meat sticks, too. Get out the folding table and deck chairs and set them up. And stay out there with our guests. Play host to them. Take your cards, too! Keep them entertained. Make sure no one bothers them!\" \n\n\"What about you, Grandma?\" \n\n\"His lordship and I are going to negotiate about a debt, and we need privacy! So don't interrupt us, no matter what you hear. Now get!\" \n\nThey did as they were told. However, they suspected what their grandma planned, and both of them gave me the evil eye. When they picked up their big clubs, they paused for the barest second, giving me a glare. Despite my uniform and pistol on my hip, I think they feared their grandmother more than me. \n\nTeela, for her part, ignored their attitude and ordered them about. The small woman removed containers of food and drinks from the refrigerator as well as plates, cups, and silverware, shoving them all at her grandsons, urging them to move faster. \n\nWhen they were outside, she slammed the door and briefly leaned against it, breathing hard. Then, like a woman on a mission, she blew past me into the kitchen. \n\nThen I realized she actually was. \n\n\"Oh, gods,\" I muttered. Seventeen years? I mean, I felt for the woman, but- \n\nTeela came back and latched onto my arm, practically dragging me into the kitchen. \"Come on! I mean - Ahem. Won't you come this way, young lord?\" \n\nPositively giddy, her eyes were alight. \"I know you said that you don't take women against their will. But... could you pretend? I mean, Marko and I - we did this thing. He'd dress up and pretend to be some wandering lord, and I was the farmer's daughter returning from market he met on the road. He'd grab me and I'd protest. He'd slap me and pinch me, then make me take him out.\" \n\nI flashed on Cholan, who liked it a little rough and to be gently dominated. \n\nBlushing, Teela dropped to her knees, running her hand over my crotch. \"I know it's taboo, but Marko made me suck his cock until he was hard and ready. Hard until his veins stood out and his cock oozed with seed. I could smell his musky maleness. Taste his salty seed. It made me so wet. Feeling him throb against my cheek, the heat of his hard flesh fully aroused. When he couldn't stand it anymore, he hauled me to my feet and bent me over the table, and he'd fully mount me in one go. Then he gave it to me, hard and rough. Gods, I barely remember. But over and over. Deeper and deeper. Held me down so I couldn't escape while he had his way with me. Opened me up like a ripe melon. Grabbed my hair. Yanked on it. Told me I belonged to him while he took his pleasure.\" \n\nAs she spoke, remembering past games, Teela's eyes dilated, her skin flushed, and her breathing deepened. \n\nAs amusing as this was, I needed to focus. Teela had named her reward. And, I reminded myself, hearts are serious business. \n\nShe unzipped me, fishing out my cock. \"Please, young lord?\" Then she began licking and kissing my length, caressing the ridge of my crown. Rubbing her cheek against my hardening shaft. Her hands gently cupping my balls. \n\nDespite my reservations and her long abstinence, Teela knew what to do. No teeth, plenty of tongue and gentle suction as she inhaled most of my length. \n\nThe sheer irony was not lost on me. In the military, I was fighting a sometimes bloody campaign to prevent this very sort of thing from ever happening again. But apparently some women liked or even needed an aggressive, dominant man to surrender to, to feel they were being taken in order to increase their enjoyment or even to achieve sexual release at all. Maybe consent itself make all the difference. \n\nI had no doubt some god of chaos somewhere was laughing his ass off. Hysterically rolling on the floor and everything. \n\nSimple kindness, I reminded myself. She wanted me to make her come. Looking down, I saw her eyes pleading as she laved my cock. \n\nSlipping my hand into her hair, I grabbed her firmly, growling at her. \"That's right, young girl! Take off my shoes and trousers. Then you will suck my cock some more. And if you know what's good for you, you will suck it good!\" \n\nFlushing, she eagerly did as I bid her. When my hand slipped into her hair again, gripping her head firmly, lust and pain mixed as they crossed her face. \n\nMoaning, she sucked with more enthusiasm, her eyes darting up, looking for approval. \n\n\"That's it! Suck it good.\" I began humping her mouth. Not too deep, but rapidly moving in and out of her hot, wet cavity. Once I was fully hard, I jerked her face away. She gasped for air, drool running down her chin. \n\nI pulled her up to her feet by her hair. Mouth open, she panted as she stared at me, wide-eyed. Taking my free hand, I roughly grabbed her nearest breast and mauled her soft flesh, tweaking and pulling her nipple through her dress. She closed her eyes, groaning, pressing her teat into my hand. \n\n\"That's good enough, you wanton slut. Time for you to fuck now.\" \n\nIt took her several seconds to respond. She obviously enjoyed what I was doing. \"But my lord! Whatever will my father say?\" \n\nWhat would an asshole say to a woman he was about to rape? Oh, yeah. \"You tell your father you did your duty to your lord. Now get ready for fucking!\" \n\nGrabbing her arm, I turned her around and pushed her up against the table's edge. \n\nTwisting back, she gasped out, \"Please, my lord! I'm a - I'm a virgin!\" \n\nUtter deadpan delivery. \n\nTeela was either a stellar actress or totally lost in her roleplay. Closed my eyes and took a deep breath. I'm not sure how, but I managed to keep it together. \n\n\"All the better!\" I managed to growl. \n\nI pushed her back onto the table, giving her ass a hard smack. She jumped at the blow, gasping. Another loud swat, and her face flushed as she sucked in more air. A third slap and her head dropped, moaning low, moving her legs apart. I grabbed the back of her dress and ripped, hauling it down her shoulders, baring her well-used breasts. Teela squeaked, panting hard as she looked back with a mix of alarm and hunger. \n\n\"That's right,\" I told her. \"I'm going to open your furrow all the way before I plant my seed. So you'd best get ready!\" \n\nLeaning over her, using my weight to keep her down, I took those loose breasts into my hands, roughly squeezing and tugging on them. \n\nBiting her own lip, Teela shuddered and then gasped. When I focused on her fat nipples, her legs danced about and she whimpered. \n\n\"Oh, gods.\" Then louder, she said, \"Oh, my lord, I beg you, please, don't do this!\" \n\nBut the way she rubbed and pushed her ass against my crotch told me she really enjoyed this. \n\n\"You are a slut, Teela, and you are made for fucking,\" I growled, giving each butt cheek another hard slap. \"And right now, you are my fuck-slut!\" \n\nI ripped the dress all the way down to the hemline, then pulled it apart. She shivered beneath me. She was bare beneath the dress! I'd known about the lack of a bra, but was surprised at the lack of underwear. And the grey thatch covering her fat pussy lips slowly parted as I watched, showing me the pink cavity leading into her core. \n\nShe sucked air when I ran my fingers along her swollen slit. Some slickness oozed out from her inner lips, moistening her channel. Then I gave each butt cheek another smack. \"Look at this! No underwear. You wanton girl! You wanted this all along!\" \n\nShe started to lift up, but I grabbed her hair and yanked, pushing her back down. My other hand kneading her butt cheeks. Then I probed her furry mound, sliding two fingers into her damp tunnel. Teela moaned, trying to push back and envelope them. When I found the soft, spongy diamond just inside, she stiffened, then grabbed part of her dress to muffle a scream. Then her hips began to madly hump back against my fingers. \n\nStill, even with her enthusiasm, she was moist but not nearly slick enough for penetration. I loosened my grip on her hair and leaned close to her ears. \"Do you have some cooking oil? If I enter you like this, it will hurt you, Teela, and neither one of us will enjoy that.\" \n\nHer eyes took a second to comprehend what my words. Naked, Teela darted to the stove, hastily grabbed a bottle of cooking oil, and handed it me so quickly I almost dropped it. \"Here!\" \n\nThen bending back onver the table, she flung her arms out in front of her as she widened her stance. \n\nI barely got the bottle open when she reached back and grabbed my hand, moving it to her hair. \n\nJerking my hand back, I slapped her butt cheeks again, causing her to jump and moan. Squirting out a large dollop of oil, I covered my cock, then pushed my hand into her open sheath. Smeared it over her entire vulva and pushing in slick fingers, coated the parts of her outer cavity that I could reach. Teela groaned as I oiled up her passage, rocking her hips against my hand. \n\nGrabbing her hair, I leaned closed, growling, \"I'm going to fuck you good, Teela. Your pussy is mine!\" \n\nTeela tensed, grunting. \"Yes, my lord,\" she groaned. \n\nUsing my other hand, I lined up behind her, rubbing my crown along her slit. Once I found her entrance, I shoved in, again and again, deeper with each thrust, until I was balls deep within her stretched-out pussy. \n\nShe cried out with every hard plunge into her center. Teela was a lot tighter than I expected. I didn't know how many kids she'd had, but she had a grip on her. Must have been the seventeen years. \n\nI gave her a few seconds to get used to my presence, and I admit, I enjoyed feeling her tight heat around me. Then, for good measure, as I still wasn't moving smoothly within her pussy, I pulled mostly out and squirted another dollop along my length, then shoved back into her. \n\nAnother smack on each cheek before shifting my hands to her shoulders. A stroke or two to lube her tunnel before I starting pumping hard and fast into her core. My hips slapped into her butt, her globes jiggling as I shoved her against the table's edge, rapidly spearing her with my cock, over and over. \n\nGasping and making little cries, Teela muttered, \"Oh god,\" and, \"so good.\" \n\nI suspected she would be happy with just being used, but I wanted her to have a good time. Reaching around her hips, I slipped my hand to her clit and began to rub around it. \n\n\"What - what are you doing?\" she gasped, looking at me in alarm. Then I strummed her thickening nubbin and her eyes closed, and she growled,\"Oh, fuck, yes!\" \n\nTeela bucked against my thrusting, harder and harder, her breathing heavy and gasping. \n\nHer feet danced about as I alternated several hard, deep, stabbing thrusts with a long, slow side-to-side grind when balls deep while stroking the underside of her fat clit. \n\nI was surprised, but soon enough felt the familiar tingle building in my balls. Then I felt a new wetness within her tunnel. Her own lubrication was finally kicking in. The force of my thrusting was beginning to move the heavy table. \n\nLeaning over her as I ground into her depths, I growled into her ear, \"I going to come inside your cunt, Teela. I'm going to fill you up and paint your insides white with my seed. And if you are lucky, real lucky, I'll breed you.\" \n\n\"Yes, my lord!\" she gasped. \"Give it to me!\" \n\nReaching around to her breast, I pinched the nipple. She arched her back, pushing back against my thrusting. \n\n\"And if it doesn't take this time, I'll fuck you again and again until you are fat with child.\" \n\nTaking a deep, stuttering breath, she stiffened beneath me. Then she began to shake and whimper. Her pussy squeezed and released along my length. Teela pressed herself against my groin, trying to take me as deep as she could. Yanking her hair, I shoved back, pressing my cock into her womb. Shoving my hand down between her legs, I thrummed her clit directly. \n\nPressure built in my balls until deep within her belly, my cock swelled and spat out pulse after pulse of hot sticky sperm, coating her innermost core. Teela arched her back and shrieked. Her pussy milked me even harder, and I felt her cervix moving along my crown as it gulped at my seed coating her insides. \n\nI was startled, though, by the sudden heavy stream of liquid spraying forth, coating my hand. Moving my hand out of the way, I held her hips, grunting and grinding deeply as I finished emptying myself within her sodden center. Teela made weaker cries as two more streams gushed out, dousing the table's edge and splashing loudly onto the wooden floor. \n\nShe collapsed on the table, her forehead damp with sweat. \"Oh, sweet gods.\" \n\nReaching around her, I grabbed her saggy breasts and squeezed them, gently pulling on her nipples. Teela shivered, gasping as another round of tremors shot through her body. Another, smaller stream erupted as a weaker wave engulfed her pussy, constricting around my shaft. \n\nGrinning, I was about to ask if she was all right, when I caught a movement from the corner of my eye. \n\nZaniyah's rage-filled face. And the frying pan in her hands coming toward me. \n\nSmack! And darkness swallowed me up. \n\n* * * * * \n\nWhen I came to, I tried to sit up, but my pounding head told me that moving was a bad idea. A really, really bad idea. A hiss of air, and holding my head, I slowly opened my eyes. \n\nI was on the sofa in the living room. Thankfully, my pants were on again. But my shirt was different. My grade pins, name and unit patches were missing. \n\nZaniyah and Teela hovered nearby, whispering urgently to each other. \n\n\"What... what happened?\" I gingerly touched the good-sized bump I found. Bits of dried blood in my hair. I hissed in pain. \n\n\"I hit you. I'm sorry,\" Zaniyah said, her reddened face an odd-mix of contrition and disapproval that seemed equally focused on Teela and me. \n\nI noticed Teela was wearing a different dress. Oh, yes. Of course she was. I touched around the bump again. Ow! The whole area was tender. \n\nTeela nodded at me. \"I'm sorry, too, young lord. I told Zani it was all my doing.\" \n\n\"I am absolutely mortified.\" Zaniyah looked at Teela. \n\nTeela looked puzzled. \"What do you have to be embarrassed about? You told me he intends to take care you - and, no, I didn't mean it like that. We're both Nahuatl and once upon a time you were Merchant Caste like me. And even after you became a noblewoman, you remained my loyal friend. You talked my sons into letting me keep my house instead of selling it. Here, at least I can be my own mistress. This young lord here? He paid the price I asked of him. I may walk funny for a few days but my pussy feels nicely worked over. Best time in more than twenty years.\" \n\n\"Teela!\" Zaniyah looked shocked. \n\n\"It's true!\" Teela thrust out her chin and folded her arms, defiant. \"Best time! Ever!\" \n\n\"Marko's only been dead for fifteen years.\" \n\nTeela dropped her arms, shaking her head. \"After Marko's first heart attack, he couldn't get it up like he used to. I had to be on top. Zani, I prefer being on the bottom. And the last two, maybe three years, he couldn't even get it up at all.\" \n\n\"I knew you were lonely, but I didn't know it was that bad.\" \n\n\"What was I supposed to say, Zani? By the gods, your own man has been gone nearly as long, so you know what I've had to endure. I didn't think we needed to talk about it.\" \n\n\"Teela, I heard you screaming. I thought he was hurting you.\" \n\n\"Because I asked him to! I ain't sorry, Zani! I needed it. More than even I knew.\" Then she looked at me speculatively. \"You know, I don't think I can wait another twenty years for the next time. Fact, I know I can't. If I put in a comfry and aloe poultice, I think I could be ready again tonight. What do you say, young lord?\" \n\nZaniyah glared at her. \"He loves Janetta. You've had your way with him, so quit poaching.\" "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "early earth",
        "consensual",
        "native",
        "alt history",
        "military",
        "aliens",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-16"
}