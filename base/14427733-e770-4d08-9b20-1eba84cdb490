{
    "title": "Lost & Found: A Charm for Trinity Ch. 02",
    "pages": [
        "This is the concluding part, and my final foray into the world of Springfield and the families there; the names and faces are here, see if you spot them as they flit past...\n\nMy thanks, as always, to GrandTeton for his endless patience and superlative editing skills, and to everyone with the patience to follow my sometimes derailed train of thought with this particular story-cycle.\n\nIf you particularly liked this story, please rate it, and if you didn't, please tell me why; all comment is regarded as fair comment, except for the pointlessly rude, or the hopelessly insane.\n\nAll characters indulging in consensual sexual activity herein are at least 18 years of age or older.\n\nThank you for keeping me company over the years with this saga. \n\nbeachbum1958\n\n_______________\n\nPart II: Another life in another town...\n\nAfter helping us to celebrate our wedding, our relationship with Stella, already close, became even closer; she became more like the mother I needed so badly, and less like our landlady. \n\nShe'd call me up to help her move stuff around, or help out at the beauty parlour she owned, or get my opinion on a batch of cookies she'd baked, or to try out a new casserole recipe, things that once upon a time I'd only dreamed about doing with my real mom. \n\nWe'd go into Valdez together to do our grocery shopping when Scotty was away at work, as we only had the car, and laugh and talk like a mom and her daughter are supposed to do; for the first time in a very long time, I had a real mom again, someone who kissed it better, made things right, and talked straight when she thought I needed it. \n\nStella and I usually got together around about mid-morning, whether in her place or ours, having brunch together, or laughing over coffee at the trashy daytime TV shows, or maybe at the beauty parlour, gossiping with the ladies of the town; she taught me to cook, proper, satisfying, man-food, as she called it, and she'd often sit me down and brush and then braid my long hair, something she confided she'd always wanted to do but never had a chance, as she only had two boys. \n\nI could confide in Stella in ways I never could with Mom, and slowly the sense of loss over my former life in Stillman diminished; I'd lost my mom, but I'd found another one. I even suspected she'd had a quiet word with her brother, Scotty's supervisor, because suddenly Scott Corden was the new flavor of the month, promotions and increments in salary gradually inching him up the corporate tree.\n\nI was still a stay-at-home; I had no real marketable skills, and there were precious few jobs of the 'would you like fries with that?' variety anywhere in town anyway. I was resigned to being Stella's gossip and shopping buddy, until one morning, while we were sitting in the beauty parlour, drinking coffee during a lull between appointments, she asked me if I'd like to train to be a hairdresser. \n\nShe'd seen me flicking through some of the magazines and comparing my hairstyle with the girls in there, wondering how I'd look with this or that cut or color. Stella had noticed my interest, and so she asked me if I thought I could learn to do that. The money wasn't great, but the work was steady, she had a good reputation in the surrounding towns, and people came a long way to have Stella do their hair, get a manicure or pedicure or just plumb the depths of the latest gossip. \n\nOf course I said yes; I wasn't trained to do anything, sitting alone at home was so lonely, and I was chafing with the need to do something, anything to make the day seem less empty when Scotty wasn't there. \n\nThanks to Stella, most of the ladies in town now knew me, and the parlour was the hub of the great Mid-Western Gossip Network; if you wanted to know what was really going on thirty miles in any direction, who was up to what, or who needed to keep closer tabs on her man, you came in, poured yourself a coffee, and pricked-up your ears. Believe me, Western Union and Associated Press had nothing on Stella and her ladies. \n\nAnd so I became Holden Crossing's newest hairdresser; Stella was a good boss, tough but fair, and she taught well. I was a quick study. I soon realized I had a natural aptitude for hairdressing, and I quickly developed a real interest in what I was doing. I ordered some of the magazines from New York, Los Angeles, even London and Paris, and tried out the latest high-fashion looks on some of the other girls in town, which went down really well. \n\nWe managed to capture the teen market, too; now they didn't have to go into Springfield or Monte Vista to find a stylist who'd give them something up to date and fashionable; they could get it right here in Holden's Crossing. \n\nPretty soon people were coming in and asking for Trini rather than Stella, and I could see how pleased she was that I'd got it so quickly. I also sent away for a nail embossing kit and a couple of books, and pretty soon the ladies and teenage girls in town were walking around with fancy stars and stripes nails, glittery metal-flake nails, smiley-face nails and my piece de resistance, newsprint nails. \n\nWhen word got around that we could do just about any kind of nails, just like those people in New York and Hollywood, the place went nuts, and we were soon looking for extra staff; Stella told me she was so impressed with the way I'd turned things on their head around there she was contemplating leaving the running of the business to me and letting me train the new girls to do what I did, the way I did it. \n\nAt last I'd found something I was good at, and Scotty and I were finally a real part of the town.\n\nOccasionally, though, just for old-times' sake, Scotty would take the afternoon off and we'd go to the movie theater in Chavez, and there in the deserted theater, safely anonymous in the back row, I'd suck his cock to get him ready, and then he'd pull me astride him and just fuck the hell out of me, rubbing my clit against him while he sucked and chewed on my swollen, throbbing nipples, or kissing me frenziedly while he pumped his fingers into my ass, until I came in a hot blast of orgasmic delight.\n\nThen came his turn, with his cock jammed in my ass while I sat squirming on his lap, working his cock with my ass muscles while he rubbed and squeezed my clit and my nipples, making me cum again and again until he couldn't hold back any more, explosively filling my ass with what felt like gallons of hot, creamy sperm! \n\nThat's how our life together was: Scott worked, slowly climbing the corporate ladder, while I studied hairdressing and grew ever closer to Stella, our surrogate mother; she was the perfect person to tell our troubles to, non-judgemental and sympathetic, and to share a glass of chilled wine or a cold beer on the porch on a hot night. \n\nShe never asked us about our family; I guess she thought if it was something we wanted to talk about, we'd have told her, and she didn't pry, bless her. If only my own mom had been one tenth as understanding or compassionate, maybe Scotty and I wouldn't be living here far from everything and everyone we knew, or if we were, at least we would have had her and Daddy in our corner.\n\nBut Mom slammed that door in our faces, and now Stella was my mom, not that woman back to home, so imagine my shock and surprise when I answered a knock at the door late one afternoon, almost exactly two years after we left home, to find Mom standing there, the one person in the entire world I honestly never thought I'd ever see or hear from again.\n\n\"Hello baby-girl!\" she whispered, and reached out to touch me. I instinctively backed away, remembering the look on her face and the things she'd said the last time I'd seen her, and instantly felt a twinge of guilt as hurt and remorse flashed across her face.\n\n\"How have you been, Trini? I miss you, baby; I miss Scotty too, is he alright? Where is he?\" \n\nHer voice was still no more than a whisper, but I could hear something there, something I'd never heard before; it almost sounded like she was sorry, and that couldn't be right; my mom had never apologized to me once in all the times she hurt my feelings or made me cry, and I backed away even further, suspecting some kind of trick. \n\n\"Scott's not here, and my name's Trinity! I'm alone, so you'll understand if I don't ask you in!\" I said, once again seeing that flicker of hurt in her eyes. \"What are you doing here, and want do you want with me; I'm a whore, remember?\" I snarled at her, any nostalgia at seeing her suddenly overwritten by what she'd said, what she'd called me, and how deeply she'd hurt my Scotty.\n\n\"I won't hurt you baby, I...I just wanted to see you, I just wanted to know you're both okay, that's all; I'm alone, too; your father doesn't know I'm here, and I won't tell him where you are. Please baby, it's been too long. Just talk to me, please!\"\n\n\"How did you find me!?\" I gritted again, and she looked down, her voice almost inaudible.\n\n\"I went to Scotty's office, but they wouldn't let me see him, they wouldn't put my calls through, nothing; I tried so many times, until finally his boss felt sorry for me and told me where you were, but he said I couldn't tell anyone I'd heard it from him. Scott had made it clear to him that didn't want to be contacted by your daddy or me, ever.\"\n\nShe paused, her eyes sad and far away, and what looked like tears glimmered in the corners.\n\n\"He thought Scotty was wrong, that it was wrong for families to fall-out like that, that this had all gone on long enough, so he told me. He must really think a lot of Scotty to protect him for so long; you and Scott are so lucky to have good people like that on your side. Please talk to me, Trini; I'm so sorry, what I did was wrong, please let me try and put it right!\"\n\nI stared at her for a long moment, then nodded and stepped aside so she could come in. I'd just put coffee on; Scotty would be home soon, and he liked a fresh brew when he came in. I offered her a cup, which she accepted with a smile.\n\n\"Your hair looks nice, baby, it suits you,\" she began, commenting on the fact that I'd gone golden blonde on Stella's advice, as it made me look less like Scotty, so other people wouldn't notice the similarities in our features as quickly as she had. Scotty hadn't liked it; he loved my light brown hair, he said it looked and shone like spun sugar, and if he wanted a blonde, he'd have married one, but, after a little friction, and a lot of sweaty, make-up sex, he'd learned to like it...\n\n\"I had to Mom; I couldn't have people guessing I was fornicating with my brother, now could I?\" I flashed back at her, watching the barb sink home.\n\nMom looked at me over the rim of her cup, her eyes sad.\n\n\"I'm sorry I said that, baby, it was stupid and cruel; I'm sorry about everything I said, baby. I was wrong, I should have listened to my children, not driven them out!\" \n\nI wished Scotty were here; she was starting to get to me, and I didn't want that; I wanted to keep on hating her, she'd called me a whole string of foul names and driven us out. Throughout my life she'd made me cry so many times, always dismissing me, always so busy with her church that she didn't have time to deal with my 'childishness'; her damned church and that bastard preacher of hers had always come first, then Scotty, with me a very poor third. Scotty had been so attentive to me because she wasn't, and now she was sitting on my couch saying she was sorry? How about when I'd really needed her, was she sorry about that as well? Time to give her something to chew on.\n\n\"Mom, I know you're sorry now, but it's too late; you called me filthy names, you accused me of all kinds of crimes against your god, you were more concerned about what your damned pastor was going to think than about Scotty, or me, and now you're sitting here saying you're sorry? It's not enough; 'cept for just a little while, when I was real small, you were never a mommy, never there when I needed you, but Scotty was always there, right from the beginning.\"\n\nI had to pause, there was so much I wanted to say, so much remembered anger; it was threatening to overwhelm me, and I had to stop and gather myself to tell her why she had nothing more to do with my life. \n\n\"You gave me to Scotty, you made me love him, and then you got all mad and self-righteous when I chose him over you! What was I supposed to do? You chose your god over us, and you chose leave me out and never be there for me, not once, not even when I needed you most; but Scotty was, every single time, and that's why I love him, and that's why I'm here right now; because you made it happen!\"\n\nI paused for breath, blinking back the angry tears and watching her eyes widen as she finally got to hear what I had to say, the things she'd never given Scotty and me a chance to say.\n\n\"You wouldn't listen, Mom. You called me a whore who seduced and stole your son; you said only whores and degenerates behaved like me, remember? You hurt me, Mom, you set yourself up as judge, jury and executioner, you never once listened to what I had to say, you hurt my Scotty and made him cry, for the first time in his life, and for that alone, I don't know how to forgive you!\"\n\nMom put her cup down, the base chattering on the saucer from the trembling of her hand, and looked at me with tears in her eyes.\n\n\"Everything you're saying is true, Trinity. I was wrong to say the things I said; I should have been your Mom, not your judge. I didn't understand what was happening between the two of you, I was confused and angry, and I did what I've always done: I took refuge in the bible. I was angry, and it was my anger and ignorance making me spout all that nonsense at you, instead of just listening, and I was wrong to do that. I didn't want to drive my babies away, I didn't mean to hurt them, but I did, and I'm so sorry!\"\n\nI still wasn't about to let it go.\n\n\"And what about Dad, all that stuff he said, all that self-righteous, mealy-mouthed God stuff about me seducing Scotty, all that other stuff from Leviticus and Deuteronomy, about incest and sin and fornicating, and all the time he's stashing away incest porn in the garage? Scotty was right; we were doing what he was fantasizing about. He had his hand in his pants thinking about what we were doing, and he had the gall to preach at us about it? He's a hypocrite, and both of you made us leave!\"\n\nMom looked at the floor while she dabbed at her eyes.\n\n\"Your father and me, we...had our problems, and yes, I know about the...the things he had hidden away, and that's my fault; I wasn't as...attentive as I should have been.\"\n\nShe swallowed,and I heard her throat click dryly; she took a tremulous sip of her coffee and continued.\n\n\"I thought praising God was a better way of life than keeping my husband happy, and so he...he found another way. I know what he said and did was wrong, but he had his reasons, at the time he thought they were good reasons, but we talked about it a lot since you've been gone, and we know now how wrong we were...\"\n\nShe looked away, her mouth working, her eyes staring into space, seeing something I couldn't, then looked back at me, her eyes soft and sorrowful.\n\n\"Things have happened, baby, things that started because of what Scott said, because of what he thought of me. Your daddy, he...took steps to make it right, because of what Scotty accused me of, and because of what Pastor Bell tried to do to me.\"\n\nShe looked away again, her eyes not meeting mine, but I saw a fleeting expression cross her face, one I hadn't seen in a very long time; for that second, she looked like my mom again, the beautiful, fun, funny Mom I remembered and lost so long ago.\n\n\"Your daddy's a good man, baby; he lost his way because I let him go, because I let someone into my life who was dangerous and evil. Daddy and I, we let him tell us what to think; we looked at the glowing picture he painted and we believed him. You and Scott, you could see through the picture, you saw what was really there, you saw it all along...\"\n\nShe took another sip of her coffee, her eyes still far away, looking at something I couldn't see.\n\n\"I'm sorry baby. I came here to tell you I was sorry, I was wrong, I left you out and followed a dream, but it was a nightmare, and I dragged Daddy into it, and made him see what I was seeing. I know he wants to say sorry too; he just has to find a way, so please, give him time, and, if you can, let him back in; he's as lost as I was, and he needs you, too.\" \n\nShe went to sip her coffee and saw her cup was empty, so I refilled it for her, getting a small smile in return. I could see she wasn't finished, so I indicated that she continue.\n\n\"After everything was over, we finally realized that being members of the church in good standing was no substitute for having our babies with us; we were both so concerned about the next world we forgot how to live in this one, and we lost you because of it. Now, all I want is to find a way to win you back, both of you; you're my babies, and I miss you.\"\n\nI was pondering what she said when the door opened and Scotty walked in; I looked at the wall-clock in wonder; I hadn't realized it was so late. The look on Scotty's face when he saw Mom spoke volumes.\n\n\"Baby, what the hell's she doing here?\" was his first question, and Mom literally quailed at the anger in his voice; it seemed Scotty hadn't forgiven or forgotten what she'd called us either...\n\nI jumped up and ran into his arms, feeling safe again now he was here. Mom looked on as Scotty kissed me, her expression unchanged as he ran his hands over my back and gently squeezed my ass as he kissed me deeply, something we did every evening when he came in; I guess he wasn't going to hold back just because our estranged mother was in the room. When he'd kissed me properly, he looked over at her almost challengingly, as if he was daring her to say something, but she just smiled.\n\n\"Don't worry, Scott, after what I walked in on, I think I can handle a little kiss and cuddle!\"\n\nI had to hide my quick grin, and even Scott's defiant expression softened slightly.\n\n\"So why are you here, Mom? Last time you didn't wait to hear our side, you just lit right into us; what are you doing here now?\"\n\nMom looked at me and sat up a little straighter.\n\n\"I finally saw how foolish I'd been, how blind and gullible I was, and what I'd done to my babies, and I knew I had to try and win you back, both of you, no matter what it took. I was such a fool, babies, you have no idea...\"\n\nI could feel something coming, something she didn't want to share, but had to get out, something that sickened her; Scott could feel it too, judging by the way he held me closer.\n\n\"Babies, I don't know how to tell you this, even now it makes me sick to my stomach when I think how I...\"\n\nShe shook her head in disgust, but plowed on.\n\n\"After you left, Pastor Bell came to see me; your father was out doing work for the parish, and...that...that man wanted to know why I hadn't been to church or contacted him. When I told him you both had left because of me, he started talking about how immoral my family was, that you and Scott were the way you were because you were sinfully conceived, that your daddy was the bad seed, he was cursed, and he'd passed that curse to both of you. He started saying that you both had strayed from the true path because of your daddy, that he was past saving, but that he could save me, that I should leave your father, because your leaving was the Lord's way of telling me my marriage to your sinful father was over, that I should get a divorce, and start a new life, with him, and he'd help me put my life back together.\"\n\n\"At first I didn't understand what he was saying; I love your daddy, I always have, even if I didn't treat him too well. I've never dishonored my marriage vows, I promise you, no matter what it looked like, and your father knows it too. When I realized what Bell was saying, of course, I rejected him, but then he began touching me...everywhere, fondling me, holding me, tearing my clothes off, shouting that I was the bride promised to him, forcing himself on me, I was so frightened...\"",
        "She paused to gather herself, then continued after a few breaths. \n\n\"Suddenly your father was there, I don't know where he came from, but he dragged that bastard off of me and just beat the hell out of him. He dragged him out into the yard and beat him unconscious. Marnie Kulick from across the road saw what had happened and she told me how Scott had done the same thing to him just a few weeks earlier, when we were still up in Billings, and that's when I finally believed you, Trini; my pastor tried to seduce me, and when it didn't work, he tried to rape me, and he would have raped you if Scotty hadn't been there...\"\n\nShe was crying now, her hands white-knuckled and trembling, and I was torn; part of me wanted to take her hand and reassure her, but part of me was grimly satisfied that she'd found out the hard way just what a low-life fucker her precious Pastor Bell was, and that was the part of me I'm still ashamed of to this day. Mom dried her eyes and looked into mine.\n\n\"Your father was going to kill him; he stomped on him and beat him until he was just all over blood. Sheriff Boone had to drag him off and cuff him, because I think your daddy really was trying to kill him. When word got out of what your daddy did to the bastard, and why, women all over the parish came forward; he raped at least six other women, he tried to rape you, Trini, thank God Scott was there to save you, and he would have raped me, too...\"\n\nI was grimly unsurprised; leopards don't change their spots that easily.\n\n\"What happened to him?\" I heard myself ask, and Mom looked at me, her eyes wide and innocent, and just a hint of satisfaction in her voice.\n\n\"Deputy Carl Haas was taking him from the jail to the court-house for arraignment but somehow he got free and tried to grab Carl's gun; Carl shot him. He had to empty his gun into him to stop him. Bell's dead. It's kind of fitting, and just, too; Carl's wife was one of the poor women that bastard raped...\"\n\nI knew there was more, and Mom knew I knew there was more to it, too, but I also knew she'd never say another word; sometimes justice needs to be quick and harsh.\n\nHer expression softened.\n\n\"Trinity, Scott, I came to tell my babies I'm sorry, I was wrong, I was foolish, and I want to ask your forgiveness, both of you, but especially you, Trini; you were my little girl, and I never treated you like the precious little girl you were, I left that to Scotty, you were right about that; please forgive me, baby, both of you, I was so blind, and so wrong, and I'm sorry.\"\n\nScotty looked at me, indecision in his eyes, but also...sorrow, and maybe, just maybe, a tinge of guilt as well. I think he might have seen the same thing in my eyes too; Mom had apologized, not once, but several times, and it didn't feel right, or good, or satisfying, making her do it again and again. It felt mean. I'd had my say now. She'd finally heard our side, so I was satisfied. Scotty nodded slightly, and I knew what he meant. He looked at Mom, and that hostile expression was gone; it still wasn't exactly friendly, but at least he didn't look angry anymore.\n\n\"Okay Mom, you say you're sorry, and I believe you. I know what Trini and I did was wrong, and for that, and for not telling you, I'm truly sorry too. We were wrong to do what we did; we didn't stop to think what it would do to the family, we were just so caught up in each other. What happened to you, well, that must have been real scary, and I do feel for you; even after all the stuff you said, you didn't deserve that, no-one does, and I'm real sorry it happened to you.\"\n\nHe paused to run his hand through his hair, raking it back with his fingers, the way he does when he's thinking.\n\n\"But there's one thing you got to understand, Mom; Trini and me, we're a family now; this is our home, and we can't come back, not like we are now. Trini's not my sister, she can't be, not anymore, and I'm not her brother, either; she's my wife now, and the biggest part of my life. I won't give her up just to please Dad, and if we can only be your kids if we let each other go, then I'm sorry, but it's not gonna happen. Sorry ma, that's just how it is now.\"\n\nMom actually smiled.\n\n\"I know, Scotty, and I won't ask you to do that; I can see how much you mean to each other, and I won't ever try and come between you again; look where it got me last time!\"\n\nEven Scotty smiled at that, and Mom's face brightened.\n\n\"Look, babies, I know now and accept that what you have is real, and I won't ask you to do anything except what's right for you. Too much has happened to keep this up any longer, and I won't even try; you both have to be what you have to be. I only came here to see my children; two years without you has been sheer Hell; the house is silent, I wake up at night and think I hear your voices, I go and check your rooms, just in case I heard right, but you're not there, you're never there, only emptiness and silence, and I sit and cry there alone because it's my fault.\"\n\nShe paused to sigh, her eyes unfocused as she looked away from us, looking at nothing at all.\n\n\"It's just your daddy and me, alone in that house; there's no laughter, no happiness, just regret and sorrow, and I can't live like that anymore; I need my children. Your father doesn't know how to ask your forgiveness, but he's hurting that he hurt you; all he does is go to work, come home, and sit silently with your pictures in his hands, looking at both of you over and over.\"\n\nHer fingertips drummed lightly on the side of her empty cup, a habit I remembered so well from my childhood, usually a sign that a lecture was on the way, or another list of my shortcomings, but now it was different, now she looked contrite, caring, like a mom's supposed to.\n\n\"He's hurting really badly, and he misses you so much; we know we don't have the right to expect you to come back into our lives, but I know his sincerest wish is that somehow there will come a way for him to unsay what he said, to say instead what he should have said, to be your daddy again, and to have both of you back in our lives again. As for me, for two years now I've gone over and over in my mind what I said to you, regretting every single stupid word, and if I too could find a way to turn back the clock so I never said those nasty, hurtful, hateful things to you, believe me, I would.\"\n\nShe stopped talking while she dabbed at her eyes, then smiled up at us again. \n\n\"But I can't. All I can do is ask you both forgive me one day for being such a bigoted, intolerant fool. I just want you both to be happy, and I can see you are. The door's still open at home, if you want to come see us, whether as Scott and Trini, my kids, or as my son or daughter and their partner, we'll be there waiting. I love you, you're my kids, and I lost you, all I want is a chance to find you again.\"\n\nScott sat on one of the easy chairs, and I perched on the arm next to him, his arm around my waist. As I sat there, I realized Mom could see up my short skirt, and I flushed slightly, because I wasn't wearing any panties; but then, I never did at this time of day, not when Scotty came in from work, because the first thing he always did was allow me to drag him into the bedroom so we could make love, our own signature way of reconnecting after a whole long day apart. Mom didn't even miss a beat, and I mentally tipped my hat at her for showing, at last, a little savoir-faire.\n\n\"Scotty, Trini, I know what your father and I did was wrong, and we want to fix it; will you give us a chance? That's all I'm asking, so please think about it; this time we'll listen, this time it will be different, this time we'll be there for you, I promise...\"\n\nScotty looked at me, checking out my eyes; I knew he could almost read my mind at times, and this was one of those times. I was willing to consider giving them a chance; perhaps enough time had passed to temper the hurt a little. Mom had made the first move, which kind of gave me a hint as to how serious she was about reconciling, and I think he saw that in my eyes. He looked back at her, his eyes no longer hard and unforgiving, but there was still mistrust in his voice.\n\n\"Look, Mom, I know what you're saying, and I guess I do still love you, even after all those things you said about us, but most of all about Trini, and you have to understand, it's kinda hard to let all of it go just like that; we have to talk about this, and we'll have to sleep on it for a few days. We'll call you Saturday morning, that's three days from now. If you don't hear from us, well, I guess you'll know what our answer is. I'm sorry, but that's the best we can do, Mom, take it or leave it.\"\n\nMom smiled sadly, not looking at us, instead running her finger pensively around the rim of her coffee cup.\n\n\"I'll take it Scotty; I'll respect your decision, no matter what it is. I hope you do let me back in, even though I have no right to ask, not after the way we hurt you, but I'll wait for your call and hope for the best. Just remember, whatever you decide, I love you both, I'll always love you.\"\n\nShe stood up, as Scotty and I did, and she made to leave. As she did, there came a knock on the door, so I opened it, to find Stella standing there holding my wrap.\n\n\"Honey, you left this at the parlor...\" she trailed off as she saw Mom standing there. Her eyes widened.\n\n\"Stella?\" said Mom, her eyebrow raised in surprise, and Stella flicked a glance at me, then looked at Mom again. \n\n\"Maudie? What are you doing here...?\" she trailed off, then did a double take as she looked from Mom to me, and back to Mom.\n\n\"Wait a second, are you Trini's mom? I never knew that...this is...well I'll be damned!\"\n\nScotty and I exchanged glances. They knew each other? I had to get to the bottom of this.\n\n\"Stella, how do you know my mom?\" I asked, and Stella grinned.\n\n\"Maudie and I went to school together in Springfield, honey; Maudie's daddy is my mom's cousin, your mom and I are second cousins once removed, I think, on the Hennessey side; how weird is that? You ran all the way over here and you still found family!\"\n\nMom reached out to touch Stella's arm.\n\n\"However they got here, thank you, Stella, thank you for looking after them for me!\"\n\nFor a moment, I thought she'd try to hug, or even kiss, us and I wasn't ready for that, not yet. I think she sensed that, so, with a wistful smile, she said her farewells. Scotty and I stood with Stella and watched her leave, then once more exchanged glances.\n\n\"Well that was weird!\" grinned Stella, \"From what you told me, I expected some bible-thumping, vinegar-faced old buzzard; instead, your Mom's my cousin and old school friend!\"\n\nStella marvelled at the coincidence, obviously completely taken with the idea that we'd been family all along.\n\n\"Maudie sure must have changed; she was the class clown; every boy carried a torch for her, and any trouble you could get into, Maudie was probably the one who got into it first! Your mom, Jonah Hollister, Sarah Novak, your mom's big sister Kathleen, Myra Donnelly: we did everything together, all of us cousins together in Springfield. I often wondered what became of Maudie; Sarah, Myra and I were still just kids when her family moved out of state. Kathleen fell out with your gramma; I don't know what happened there; last I heard she was in New York, married to a firefighter, but I didn't know where, or who, and I didn't know where your mom's family had moved to.\"\n\nShe paused, her eyes soft and far away. \n\n\"I went on vacation one summer, was just turned fourteen, to my aunt in Santa Fe; when I came back your mom's family had gone; they just upped and moved out of state, some big family bust-up, but I never got the straight of it. No-one would talk about it; about all I got was that Kay was married somewhere in New York, but it wasn't really a safe subject to talk about. I'm guessing Maudie married George Corden; he must have tracked her down; if anyone would, I'd have bet it would be Georgie, he had it bad for your mom all the way from kindergarten. I should have known from your name. Well I never, Maudie Donnelly's your mom, I still can't believe it! You do know your Gramma Kathleen's baby sister still lives in Springfield? Rosie Moran, she married that no-account Jerry Dolan...\"\n\n*\n\nAfter dinner that night, we talked about what Mom had offered. I was unsure, now that she was gone; without her there in front of me, I was able to feel a little more objective, and to be honest, after Daddy's hypocritical denouncement of me, even thinking about having him back in my life made me uneasy. \n\nScotty was right, I wasn't his sister anymore, he couldn't even think of me as his sister, only as his wife, and there was no way in his head for me to stop being his wife and become his sister again. I felt exactly the same way; I could only think of Scotty as my husband now. Too much of my life was invested in him and our life now as spouses to ever be siblings again. \n\nGoing home would be a disastrous backward step: it could destroy us, and that was something I could never allow; for good or ill, Scott was my husband now, I was his wife, and I was going to make sure it stayed that way. \n\nScotty was inclined to be a little more flexible; he wasn't prepared to entertain any negotiation of our status, and he was only prepared to accept the olive branch on condition they made no attempt to consider or deal with us separately as their 'kids'; that boat had sailed, and we were now Scott and Trini, husband and wife. \n\nIf they balked at that, well, the door was there, we could walk out the way we came in, and nothing would have changed for us; we'd still be together, still be a couple, and Mom and Dad would have to deal with it or do without us, period.\n\nThat night, Scotty made tender love to me, none of the frenzied fucking we were so fond of; this night seemed different, somehow, as though telling our mother that we were husband and wife had finally made it so in fact, and we made long, slow, gentle love to affirm to ourselves that our relationship was everything it should be. Scott was my husband for real, and as he plowed his thick cock relentlessly into me, I squeezed and clasped him inside me, willing him to fill me up, to make me his wife in reality. \n\nHis kisses seemed to have a different quality too; always tender, always freighted with love and desire for me, this night there seemed to be something extra, a part of his heart that had opened up fully at last and was sharing itself with me, and with that understanding came orgasm, a blinding intensity of overpowering love and need coalescing into one huge explosion of glittering, sparkling light and breathless, gasping fulfilment.\n\n*\n\nWe spoke with Mom on the Saturday morning, as we'd promised, Scott setting out exactly what and who we were, not laying down the law, Scotty doesn't do that, but making sure Mom and Daddy knew we'd changed, and grown, and were no longer subject to their rules, beliefs and prejudices; we had lives of our own that we were willing to share with them, if they'd only meet us half-way. \n\nMom had cried a little, but she'd also sounded happy that we were going to work on a way to reconcile together. Dad was still unaware that Mom had come to see us, so now she had to find a way to break it to him, and give him a way to make that apology she said he wanted to make; that was good enough for both of us. Mom had promised that they wouldn't make an issue of what we were now. They were past that. Now we had to work on learning how to love each other again.\n\nScotty and I spent the rest of the day shopping in Springfield, buying a birthday present for Stella, and generally having a lazy day. There was one especially nice mall in town, so I got to do what I seldom had the opportunity to do: roam around from store to store, try-on anything I liked, and buy what I wanted. I had my own credit cards, but Scotty never audited my spending, because he knew I was even more scared of debt than he was, and I very rarely took the opportunity to splurge, but today he'd insisted I treat myself as much as I wanted; he said he just loved the way my eyes shone when I shopped, so I took him at his word.\n\nWhile I mall-raided, Scotty went off and wandered around the hardware superstore opposite the mall, a huge DolanCo, which is where I found him a couple hours later, staring wistfully at a display of fancy ride-on lawnmowers.\n\n\"One day, baby, one day...!\" I promised him, leading him away from the gaggle of power tool-obsessed husbands and fathers who always congregate in places like that, staring with misty-eyed adoration bordering on worship at weed-whackers, snow-blowers, chipper/shredders and chainsaws. He looked so sad, leaving all that gleaming, turbo-charged powered equipment that I took pity on him and showed him the bag with the Victoria's Secret logo; that caught his attention and took his mind off lawnmowers; now he could hardly wait to get to the car.\n\nAs we walked across the parking lot to the car, a late model Escalade slid up next to the Torino, Scotty's pride and joy. A tall, beautiful girl with big gray-hazel eyes and bright red-auburn hair stepped out and looked at our car, cocking an eyebrow at Scotty.\n\n\"Yours? Nice, very nice!\" she smiled, and then smiled even wider at Scotty, completely ignoring me. Scotty's eyes narrowed at the slight.\n\n\"Yeah, right, whatever, thanks, c'mon babe, let's get outta here!\" he grunted, turning his back on her while taking my bags and putting them in the trunk, then opening the passenger door and handing me in. I glanced back at the redheaded girl as she stood looking at us, and I saw hurt and sadness flicker across her face before she schooled her features, looking at him impassively while he ignored her completely, instead climbing into the car and wheeling away from the parking lot without a backward glance. Obviously, she was used to dealing with rejection and I wondered why a girl who had so much going for her would need a skill like that. From the set look on Scotty's face, I knew that something had happened, so I slid up next to him and squeezed his arm gently.\n\n\"What was that about, baby? Who was that girl?\" I asked him, and Scotty grimaced, dropping his hand from the wheel to squeeze and rub my thigh.\n\n\"That was the owner of DolanCo's daughter, Casey, or Stacey Dolan, something like that; she's a real piece of work, if the stories I heard about what she and her family did to her brother are even half-true; stories get around, and they all say the same thing: that she's a spoiled, vindictive little rich bitch who thinks she's a princess because her daddy and his family own everything in this town. I'm sure glad I don't live in a place that has to put up with the likes of them!\"\n\nI was intrigued by all this, and I had to know more; that name was familiar, too; where had I heard it before?\n\n\"What did they do to him, Scotty?\"\n\nHe grimaced again, looking straight ahead as he drove.\n\n\"Bad stuff, baby, some real bad stuff; the story goin' around is that there was something wrong with the brother, or he wasn't quite right, I dunno, so they kind of...treated him like he was a freak or something, acted like they hated him, never gave him anything. I heard he used to walk around in beat-up, raggedy old clothes because they wouldn't buy him anything, and they're the richest family in the state. I also heard they did all kinds of other mean stuff to him, too. This was their son, her brother, but the story is they just didn't want him around, and I guess they were hoping he'd disappear, or drop dead, or just go and never come back; they made his life a fucking misery, and she was the worst of them.\"\n\nHe stopped talking to run his fingers through his hair, something he only does when he's agitated.\n\n\"No-one in this town did or said anything. Well, they wouldn't, I suppose, not when they all work for that family and have to keep their mouths shut if they want to keep putting food on their tables, but even so, you'd think one person, just one person in this whole damned town might have done something, anything for that poor kid; but no-one did; no-one even tried. The whole fucking town just looked the other way while his high and mighty family made his life hell, so I guess they're as bad as that family, and they pretty much deserve each other. That's why I'm glad we live in another state, well away from people like this; what happened here, to that poor guy, it sort of makes what happened with us look pretty tame, now that I think about it.\"",
        "For the first time ever, there was a look of deep distaste on his face, like he'd smelled something bad. \n\n\"Scotty, what happened to the brother, what did they do to him?\" I asked, almost afraid of the answer.\n\nScotty got a faraway look on his face, his voice dropping to almost a whisper.\n\n\"His name was Robbie, Robbie Dolan, he'd be about my age, mebbe a tad younger, and no-one knows what happened to him; he just disappeared. There was no investigation, no police enquiries, nothing; one day he was there, the next day he was gone, vanished; it's like someone flicked a switch and he just stopped existing. That's what Stacey or Casey or whatever the fuck her name is did; she helped make her brother disappear. I wonder where that poor guy is now; they were his only family, and they just didn't want him at all, God knows why; I suppose when you've got that much hate stored-up, and the kind of money the Dolan family has, you can make a whole lot of bad things happen, and buy a whole bunch of silence.\"\n\nI was appalled, and my shock and outrage must have showed, because Scotty lifted his hand from my squeezing my thigh to gently stroke my cheek.\n\n\"How could they do something like that, Scotty, their own son? Surely someone, somewhere must know what happened to that boy?\"\n\nScotty shrugged.\n\n\"If they do, they're not talking. I just wonder how that poor kid managed to survive as long as he did; I mean, who do you go to for help when a whole town turns its back on you? How do you even survive when you've got nothing, nowhere to go, and no-one to turn to? \"\n\nHe shuddered.\n\n\"Anyway, that's why I brushed her off; the thought of her and that family of hers makes me feel soiled, like I rolled in a hog-wallow, except I think a hog-wallow probably feels cleaner and smells a lot less rancid...\"\n\nI was silent for the rest of the drive home, thinking of what that family had allegedly done, awful images running through my mind of that poor, deserted boy knocking on door after door, asking someone, anyone to please help him, and the set, impassive faces as one after another they shook their heads and closed the door in his face. Now I saw the truth in what Scotty had said. Perhaps, just perhaps, what had happened with us wasn't so bad after all; at least our parents hadn't tried to make us not exist; they'd just gotten up on their God-horse and said ugly, stupid stuff, but at least they were willing to admit they'd been wrong about us and what they'd said and done to make us leave, and now they were trying to make it right again. Mom and Daddy had never wanted us to disappear. They'd never wanted us to never have been, not like that poor Dolan boy.\n\nBy the time we got home, I was feeling very protective and possessive about Scotty; whatever life brought us, I would never stand back and let anything happen to him. I knew in my heart, and all the way through me, that I would go down fighting for him, because some things are always worth fighting for.\n\nWe made love all that day, and far into the night; usually, everything about Scotty excited me, and I couldn't get enough of him, but that day was different. All morning and afternoon I'd been seeing him in my mind's eye, kissing me, licking me, fucking me like the sexually-supercharged fucking machine he was, and my panties were quickly soaked through. By the time we got home, his mood had lightened considerably, and he insisted I model the lingerie I'd bought, a little black Basque corset and ridiculously small black satin panties, with stockings to match; when I posed for him, he made a small growling noise in the back of his throat, and suddenly I was pressed against the wall, my panties pulled to one side, and his thick, solid cock jammed far up inside me.\n\nScotty pounded away at me while I hung there, almost delirious with sexual overload as he banged me almost senseless, orgasm after orgasm ripping and roaring through me, and when he put my legs down, turned me around and yanked my panties down, I was ready for what came next, as he rubbed his wet cock against my asshole, then slowly, remorselessly slid his big, hard cock into my tight ass, taking me straight to orgasm as he filled me so completely.\n\nThat was just the beginning of a night of sheer animal lust. Scotty seemed to be picking-up what I was feeling, how I was reacting to that dreadful story he'd told me about that awful family and what they'd done to their son and brother, and how I was feeling about him now, coupled with my already unbreakable love for him, and he repaid me by making sure my body got a generous amount of attention! When I finally fell asleep, in the wee, small hours, I was truly exhausted from climaxing over and over again as he drove me higher and higher, wringing orgasm after orgasm out of me, until every muscle was singing and my bones had turned to liquid fire just under my skin.\n\n*\n\nWhen I woke, Scotty was nowhere to be seen; I looked around in confusion, then I remembered; it was Sunday, and he had gone to an Auto Swap-Meet in Roseville with Stella's son, looking for an original gear-knob for the Torino to replace the reproduction one he'd originally fitted, and I knew he would be gone most of the day. When he went to those things, he usually wandered around in a happy, semi-concussed condition for hours until some kind soul took pity on him, put a corndog in his hand, and gently led him back to his car. \n\nAs I lay there smiling happily in the afterglow of the night my boy had given me, I began to feel something strange bubbling in my tummy. I tried to ignore it, but it got stronger, and suddenly I had to streak into the bathroom and throw-up what felt like everything I'd eaten since Wednesday. I retched for what seemed like hours as my stomach just kept heaving and lurching, until I was finally empty, my sides aching from heaving, my eyes watering, and my mouth and nose foul with the smell and taste of all that stuff coming up.\n\nI sat on the bathroom floor until my head stopped spinning, then I lurched upright, rinsed out with mouthwash to get rid of that horrible taste, staggered back to the bedroom and flopped onto my bed, feeling worn-out and ready to crash all over again. I was just getting comfortable when I heard Stella's knock on the door, so I threw on my robe and went to let her in. When she saw me, she pulled me into the room and sat me down, then sat down next to me.\n\n\"Honey, I heard you all the way upstairs, are you okay? You look terrible, what happened?\"\n\nI told her I'd woken up quite normally, then suddenly everything was spinning and I was on my knees in the bathroom. She looked concerned, holding her hand against my forehead.\n\n\"No temperature, your color is good, you don't feel sick anymore?\"\n\nI shook my head cautiously, starting to think about breakfast, and that's when the nausea hit again; I barely made it to the bathroom, once again on my knees as I heaved and retched.\n\nI felt cool hands on my face as Stella pulled my hair back out of the way, handed me the mouthwash, then helped hold me upright as I walked rubber-legged back to the couch. She held me as I closed my eyes, exhausted from throwing-up so violently, then tipped my head up to look me in the eyes.\n\n\"Trini, when is your period due?\"\n\nI smiled at such an odd question, but Stella looked completely serious, so I told her.\n\n\"Two days, why?\"\n\nStella bit her lip, looking closely at me.\n\n\"Honey, you're not running a temperature, you're not flushed or feverish, your eyes are clear, and that sure looked like morning sickness to me; I think you might be pregnant...\"\n\nPregnant! I couldn't be; I was on the pill, she must be mistaken! I told her I was on the pill, I even showed her the dispenser with my pill all ready to be taken that day.\n\n\"Trini, have you had any other medications or antibiotics in the last few weeks?\"\n\nI shook my head, then stopped; three weeks earlier I'd had a mild throat infection, and the doctor had given me a short course of antibiotics, just five days worth, and they'd cleared up my throat quickly. I told her this, and she nodded.\n\n\"Honey, sometimes certain meds can lessen the effectiveness of contraceptive pills; it's usually antibiotics; this is what might have happened. Get dressed, baby. We're going to get you a pregnancy kit, but let's not jump the gun here; we'll do the test, then call your doctor and make an appointment, because if you are pregnant, then you need to get into the system, and if that wasn't morning sickness then, boy, do you need to see a doctor!\"\n\nWell I bought the test, peed on the stick, and 5 minutes later I was looking at a blue cross; I was pregnant. Stella took my hands and looked into my eyes.\n\n\"Okay Trini, now that you know, what are you going to do about it?\" \n\nI looked blankly at her, until I realized what she was asking me. Then I looked at her in horror, my hands instinctively covering my midriff, protecting that tiny little speck of life in there as I backed away from her. This was Scotty's baby, what the fuck did she think I was going to do?\n\n\"This is my baby, I'm not doing anything to my baby, what the hell kind of question is that?\" I almost screamed at her.\n\nStella pulled me close and hugged me, calming me down.\n\n\"Baby, I knew that's what you were going to say, but I had to ask and I had to hear you say it; I know you want this baby, now you know it as well. I'm here for you, honey, for both of you. I want you to know you can count on me!\"\n\nShe really was what I needed right then; in all the ways that counted, she was my mom now, and she'd asked what a mom would ask, and said exactly what a real mom would say.\n\nStella called to make an appointment at the community health center ante-natal clinic for me to have a proper pregnancy test. To my good luck, they were open every third Sunday, so they asked me to come in as soon as I could. Stella waited while I had a quick shower and a bite to eat, then she drove me down to the health center. Three hours later I had my confirmation; I was pregnant, with a due date of 26 February. \n\nIn among all the excitement, a sudden dread hit me; we'd never even discussed children, nor considered the possibility. Maybe Scotty wasn't ready to be a father, maybe this was a bad idea, we were too young, maybe he'd think I trapped him with a baby, a whole host of jitters suddenly crowding inside me. Stella saw me start to fall apart and she scooped me up and set me straight as all that stuff came rushing out.\n\n\"Trini, Scott adores you; he's going to love this baby, because it's his baby, made with you, the one thing in this world he adores. I see it in his eyes every time he looks at you. Do you know when you're not looking he can't take his eyes off you? They follow you around whatever you're doing. That boy loves you more than anything or anyone in the whole world and he's going to love your baby just as strongly, take it from me, honey.\"\n\nWhen Scotty came back from Roseville, instead of the usual wild antics we indulged in whenever we'd been apart for more than a couple hours, I held him off, asking him instead to slow down and sit down, as I had something to tell him. Scotty looked mystified, although that didn't stop him sliding his hands up my skirt and squeezing my ass meaningfully as he kissed me. Once he'd had enough (for now!) of squeezing my ass as we kissed, he let me pull him down onto the couch next to him.\n\n\"What's the mystery, baby, you look worried; is something wrong?\" he asked. I'd already planned how I'd tell him, but I didn't plan on his reaction.\n\n\"Scotty, I had to go to the doctor today, I was sick this morning, and he told me...\"\n\nI got no further before he pulled me close, his eyes fixed on mine, hot fear leaping in his eyes.\n\n\"Baby, are you sick? What's wrong, why were you sick, why did you go to the doctor? Oh God, baby, please, how bad is it, I knew there was something wrong...!\"\n\nI grabbed him and pulled him against me, his arms almost crushing me as he held me tight. I could feel him trembling, and my heart blazed white-hot with love for him all over again at how scared he was, for the fear for me I'd seen in his eyes, more proof, if any were needed, of just how much he loved me. I kissed him lightly on his neck and ran my fingers through his hair.\n\n\"Baby, it's not like that; I had to see the doctor because I had morning sickness; Scotty, I'm pregnant. You're going to be a father!\" \n\nHe froze against me, then slowly pulled back and looked into my eyes.\n\n\"Say that again...\" he whispered, so I did.\n\n\"Baby, we're pregnant; you're going to be a father!\"\n\nHis eyes filled as he looked into mine, then that slow, delicious smile of his, the one I'd been living for all my life, broke across his face like the rising sun.\n\n\"Baby-girl, we're going to be parents?\" he whispered, and I smiled back as I nodded. His eyes kindled, glowing like green lanterns as he grinned happily.\n\n\"Oh my God, baby, we're having a baby, oh YES!\" he gabbled, his hands cupping my face as he looked deeply into my eyes, before he grabbed me and pulled me in to kiss me like an enthusiastic tornado, a storm of kisses as he hugged and squeezed me, almost squeezing the life out of me! I finally managed to disengage him, which wasn't easy, as he seemed to have grown several extra pairs of hands, but I finally got away, intending to get him a cup of coffee, the next part of our evening ritual. As I stood at the counter and reached up for a mug, his hands were around my waist, and the bulge in his pants was pressed into the crack of my ass. I giggled as he nibbled my neck, then suddenly his hands were on my boobs, cupping, squeezing, rubbing, as he ground himself against me.\n\nI turned around, and then his lips were on mine, his hands holding my ass-cheeks apart as he ground his fat cock against my damp pussy. As I writhed and ground back against him, pushing my mound against that hard ridge in his pants, he unzipped my skirt, letting it fall to the floor, and now I was naked from the waist down; I in turn fumbled with his belt-buckle, finally getting his pants open so I could reach in there and squeeze that lovely meaty cock of his, making him groan as his lips and teeth roamed over my face and neck, kissing, nibbling, gently biting, making me hot.\n\nScott leaned away from me for a moment, taking hold of the hem of my blouse and pulling it up and over my head, then once again his hands were all over me, squeezing and touching, sliding over and rubbing me, making me gasp against him. Scott popped open my bra and let it drop, and now I was naked, and now I knew what was coming next. Scotty pushed his pants down and tore off his shirt, levering off his shoes as I tugged his shorts down. Once he was completely naked, he backed me up until I was against the wall, whereupon he lifted me up, and as I wrapped my legs around him, he sank his cock all the way into me in one stabbing lunge.\n\nI swear, his cock was thicker and harder than it had ever been, so much so, I could barely fit him inside me, despite the continuous pussy-stretching he'd been subjecting me to for two years now! I came almost immediately, but Scotty kept going, pistoning into me, his tireless fucking reminding me of that first delirious two weeks we'd had together, when he'd pounded me almost continuously, day and night, day after day. \n\nObviously the thought of me being pregnant with his baby was a huge turn-on for him; he'd never felt so big, or so tireless, while I lolled against him as mini-orgasms rushed and swept through me endlessly. At last I could take no more, and with a lighting blaze of orgasmic heat blasting through me, I came like the night-express, my pussy squirting powerfully over him as I shuddered and trembled again and again, fucked almost to oblivion!\n\nScotty hadn't finished with me, though. As I slumped against him, he carried me into the bedroom and carefully laid me on the bed, rolling me onto my front and slipping a pillow under my tummy so my ass thrust up at him. Scott spread my legs and slowly, carefully licked and kissed my still pulsing pussy, the touch of his lips almost unbearable after what he'd just made happen for me, and when he pushed his tongue into my ass, I nearly fainted as a powerful orgasm once again rolled over me. Scotty slid his hands under me to cup and squeeze my boobs, and with slow, careful deliberation, once again slid his engorged cock into me, making me hiss with satisfaction as he once again filled me up.\n\nOnce he was sure I was okay, he began sliding that thick pole of his back out, lights dancing in my eyes at the wonderful sensations he was giving me, then plunging back in, every single nerve ending in my body flaring with hot, electric sparks as my darling husband-brother pleasured me so perfectly, fucking me to ecstasy like the sexual powerhouse he was!\n\nHe fucked me endlessly, powerfully all evening and far into the night, pounding his thick, rich sperm into every orifice I possessed, making me mew, purr, groan and scream as pleasure blasted through me endlessly from what he was doing to me, with his cock, his tongue, or his fingers, or all three. He had to go to work the next day, Monday, but I had Stella knocking on the door almost before he'd left, checking up on me, waiting while I spent twenty minutes on my knees in the bathroom, wanting to know how Scotty had taken the news; I think she guessed from the secret smile on my face, though! \n\nShe had some information for me: pamphlets about the first trimester, the kind of doctor's appointments I needed to make, and when, scans and what they meant, stuff like that. She asked me if I wanted her to run down to the pharmacy and get me something to knock back the morning sickness, but I was dead against that; in High School we'd had a teacher who'd been born in Canada in the early 1960's, whose mother had taken a drug called Thalidomide to prevent morning sickness. But back then they didn't, they couldn't have known about the massive damage it would do to the developing fetus; Mr. Evans had been born with no legs and only one hand because of a morning-sickness remedy, so I was taking no chances. \n\nWe also had a talk about my parents. I was disinclined to have them too involved, even after Mom's visit and her obvious contrition; I guess the suspicion and the hurt hadn't gone away yet, and I was in no blazing rush to let it go. \n\n\"Stella, my Mom made no bones about what she thought of me; she called me names I won't repeat; she stood by while my father called me worse names and preached at me; she made it clear what she thought I was. Her coming here because her guilty conscience got the better of her is no reason for me to think of her as my mom; as far as I'm concerned, she's not my mom, just someone with my name who lives a long way away and never gave a shit about me most of my life.\"\n\nStella stood back and stared at me, displeasure evident in every line of her body; something had made her mad, and she wasted no time letting me know exactly what it was.\n\n\"Trini, you always made sense. You and Scotty were always so grown-up, so sure about what you were doing, where you were going, what you wanted out of life, but I have to say, that was just the stupidest thing I ever heard anyone say, and I've got two boys, I'm used to hearing real stupid stuff! I thought you were an adult. Your mom is still your mom; she came here to ask you to forgive her, she's trying to make it right, why the hell can't you meet her half way? You're going to need your mom, both of you; mend your fences baby, and please, try and not say something so stupid and self-pitying ever again. You're better than that!\"\n\nI felt ashamed at my childish stubbornness; when I thought about it, Stella was right, perhaps now was not the time for old grudges and wounded pride, perhaps now really was the right time for our family to get its act together. After she'd left, I thought about what Mom had said, about what we'd said and agreed just two days before, and picked up the phone. When Scotty came home, after our usual extended kissing and fondling session, I asked him to sit with me; we had things to talk about, and decisions to make. Scotty looked at me quizzically, but sat down, pulling me down onto his lap with his arms around me.",
        "\"Okay Trini, what's on your mind?\" he asked.\n\n\"Baby, I spoke with Mom today...and Dad.\" I felt him tense up, so I moved quickly to calm him down.\n\n\"Scotty, Stella and me, we had a talk, and she made me see some things, things we should have seen for ourselves. It's time we really did get back in synch with Mom and Dad; they made mistakes, sure, but so did we, and this can't go on; Scotty, I'm going to need her; I'm going to need all my family back together; I can't have our baby living in a war-zone, and I won't use my baby to punish Mom and Dad. We need them now, and they need to know about this baby; it's time to let that stuff go, Scotty, please, for me, and for the baby!\"\n\nI was crying now. As I was telling him what I wanted to happen, a huge need for Mom, for my parents, bloomed inside me; maybe my hormones had finally kicked into high-gear, or maybe I'd accepted Stella was right; even with her in my corner, I really needed my mom right now.\n\nScotty held me close as he soothed me, holding my head in against his chest the way he used to when I was small, letting his heartbeat soothe me. When I stopped crying, he dried my tears, and then lifted my face to look into my eyes.\n\n\"So what did they say, baby? Are we going to see them?\"\n\nI nodded. \n\n\"Saturday. I never told them about the baby; I want you there with me when I tell them. Is that okay, baby?\"\n\nHe grinned and pinched my butt lightly, making me grin through my tears.\n\n\"Saturday it is, baby-girl, now stop crying, it's not good for the baby, and talking of babies, I'm kinda hazy on how exactly it happened, so if you're not too busy right now, I think I need you to remind me, y'know, for future reference, sorta thing...!\"\n\nVery little knocks Scotty off his stride when he's got his 'horny' head on...\n\n*\n\nSaturday morning saw us parked a little way down from our parents' house, both of us just sitting there, me somewhat restlessly; sitting down for long periods was just a little uncomfortable right now. Scotty had kind of kept me busy the last couple nights, not that I'm complaining, but I couldn't help wishing for a softer seat cushion than the Torino offered... \n\nWe sat there for a good while, convincing ourselves that we were doing the right thing. Scotty was here because of me, he knew and felt inside that this was right for me, but he was having a problem believing it was going to be smooth and easy; I guess the stuff Daddy had said to him, and the almost-physical altercation that ensued was still squirreling around inside him, and while he was putting on a calm facade for me, his knuckles were white where he was gripping the steering wheel. Finally I'd had enough.\n\n\"Scotty, we have to go inside. Mom's waiting for us!\"\n\nScott looked at me guiltily, realising I'd figured out he was delaying us, and smiled ruefully.\n\n\"You're right, baby-girl, I'm sorry. Let's go, Trini; our fate awaits!\"\n\nAs we walked up the drive, I heard him mutter under his breath \"...into the Valley of Death rode the six hundred...\"\n\nMom was pleased to see us finally back in our home (our OLD home, I told myself; my home was in Holden's Crossing now, with Scotty, not here...), and she got kind of emotional, telling us how our old rooms were still the way they were the day we left, which I found slightly creepy, Scotty and me exchanging glances at that. Mom spotted that glance, and actually smiled.\n\n\"No, babies, it's not like that, I promise. I just left them the way they were because they reminded me of both of you; if I picked them up and put everything away, they'd just be spare bedrooms, and I didn't want that. As long as they still looked like your rooms, I still had a little bit of both of you here, that's all.\"\n\nDaddy was...different; he looked sheepish, glad, sad, all kinds of things, but I noted that he completely avoided touching me in any way; no hug, no attempt to peck me on the cheek, nothing, not even to take my hand. Scotty had once told him never to touch me again, and poor Daddy was obviously still feeling that. In spite of everything that had gone before, it felt funny, and not in a good way at all, to have my daddy avoiding me like that, and it somehow diminished him for me. He obviously felt that Scotty was the man in my life now, not him, and I think that was just adding to his sadness. \n\nI couldn't have that, so I hugged him, feeling him tense-up for a second before hugging me back, his hand on the back of my head the way he used to when he'd carry me to my room when I was small, if Scotty wasn't there to do it for me. \n\nThat was when I felt the tears start; my family was so fractured, and it was my fault; if I hadn't been so eager to seduce my brother, this wouldn't even be happening right now. Daddy felt me start to sob, and he held me close, draining the hurt and the bad memories away as we wordlessly forgave each other. When he finally let go of me, his old smile was back, and that sheepish, slightly scared look he'd had when we first came in was gone. \n\nScotty was still looking less than comfortable, but he relaxed when I took his hand.\n\n\"Baby, let it go, I have, it's over; please, Scotty, for me!\"\n\nDaddy looked suddenly apprehensive as he realized Scotty was still angry with him, and had come here because of me, not because he wanted to, but then Scotty surprised me the most I'd ever been; he gently tweaked my nose, then stuck his hand out, Daddy taking it out of sheer surprise. Scott grinned wryly at Daddy.\n\n\"Dad, we both said stuff we shouldn't have, and I guess we both feel pretty stupid about it; Trini and me, we need to have you back, especially now. I was angry and I said a bunch of stupid, hurtful stuff I shouldn't have, stuff I didn't mean. I still love you and Mom, I never stopped, I just let the anger get on top of me; I shot my mouth off, and I guess I kind of dragged Trini along with me. I'm sorry Dad, and you, too, Mom; when you came and saw us I acted like a prick, and I'm sorry!\"\n\nDaddy looked stunned; Scotty was legendary for his stubbornness; when he dug his heels in, they stayed dug-in, so this caught me off-guard completely; I was expecting a grudging \"I'll say sorry if you do, too, but you say it first...\" kind of thing from him, and I guess Daddy was too, so we were both a little sandbagged. \n\nScotty half turned and gave me that smile, and then I knew he'd made the first move because I needed and wanted this whole thing over and out of the way so I could tell them our news; that's why I love him so much; everything he does, he does it first and foremost for me.\n\nMom reached out to him, and suddenly Scotty was hugging her, probably for the first time since he was a boy. Mom had been kind of distant with us all through our childhood, or at least from the time she joined that damned church, and spontaneous affection from her after that had been rare. She gasped in surprise as Scott hugged her close, but I saw her hands tighten on his shoulders as she hugged him back, her face buried in his chest, and not saying anything about his choice of words, even more evidence of how much she'd changed. \n\nOnce upon a time, using language milder than that in front of Mom meant a stern lecture and threats about washing out our mouths with a bar of Lifebuoy. When he finally let her go, there were tears in her eyes, but a big, happy smile on her face.\n\nMom indicated we sit, so we did, Daddy and Mom sitting together on the couch, Scotty sitting in the easy-chair while I sat on the arm next to him. I didn't know where to start, but Mom gave me a lead-in.\n\n\"Trini, you told me you had something to tell us when you called, so relax, honey, please, and just speak your piece, we're listening.\"\n\nScotty squeezed my hand reassuringly, but I still had to swallow a couple of times as my mouth was suddenly dry as a bone.\n\n\"Mom, Daddy, there's no easy way to say this, so I'm just going to say it. Last week I went to see the doctor, and took some tests. I'm pregnant, Mom, and the baby's due end of February...\"\n\nI braced for the blast of anger, intolerance and bigoted religious nonsense that had become such a trademark of my parents, no matter how much they claimed they'd changed, but unaccountably, they were smiling. I looked at Scotty in confusion, seeing the same confusion and lack of comprehension in his eyes. I raised my eyebrows in silent query, and he shrugged back, as much at a loss as I was.\n\n\"Mom, did you hear me? I said I was pregnant...\"\n\n\"I heard you, baby!\" smiled Mom, \"you're having a baby, our grandchild, in February. Congratulations, both of you, you must be so happy. I know I am!\"\n\nNow I was completely at sea, and Scotty, well, he was sitting there with his mouth opening and closing, but no actual sounds coming out. \n\nMom reached out and put her hand on my knee.\n\n\"We already suspected that was what you wanted to tell us, baby! You've been living as husband and wife for two years now, and to be honest, I'm surprised it's taken this long!\"\n\nNow it was my turn to stare open-mouthed at her. Mom smiled happily at my expression, her face suddenly young and beautiful again, all the harsh, stern lines I'd gotten to know so well completely erased, and she looked her proper age again, a very young forty.\n\n\"I knew as soon as you walked in the door! Actually, when I came and saw you, I suspected then, as soon as I saw you; there was something about you, call it mother's intuition, but I guessed you were pregnant right there and then. I'm so happy for you, for both of you!\"\n\nSomething else was off, and it took me a while before I realized what it was; Mom and Daddy were holding hands, something I hadn't seen in many a year, and when Mom spoke, Daddy followed what she was saying, his eyes tracking hers the way they used to. Apparently things really had changed around here, and for the better. For the first time in I don't know how long, I relaxed, aware that Mom wasn't setting me up to preach at me, lecture me, ignore me, or exclude me, that I was finally her daughter again.\n\nAs I thought and felt these things, a tear rolled down my cheek, and suddenly Mom was there, holding me, wiping my eyes, caring for me, finally my mom again. Scotty kind of looked on, but held his peace; he knew what was happening here, and when Daddy suggested they go in the den and leave me and Mom to talk he nodded, patted my hand, and left Mom and me to find ourselves again.\n\nMom was so light and cheerful it lifted me up. We chatted about the town, about what had been going on while we were gone, stories about the neighbors, just chat, but it was a first, it was Mom and me being equals now, and family once again. \n\nI guess Scott and Daddy had the same kind of talk, the guy version, because when he finally came back in, it was to find me going through old photo albums with Mom and picking out the pictures I wanted. He'd lost that wary defensive air, and Daddy was relaxed and pretty much his old self again, so whatever they talked about, and whatever was left unsaid, it was enough for the two men in my life to find each other again. \n\nAll through that day we talked, about school, about my life in Holden's Crossing, about the baby, and Mom and I even cooked dinner together, one of the things I'd always wanted so much to do with her, but never had.\n\nWe never mentioned the things that had happened to make us leave; they were a given, and didn't need to be rehashed, or talked-out; it was unspoken yet understood that all of that, the things said and the accusations made, all of that was a time best forgotten, and memories no-one needed reviving. Now we'd finally bridged the gap, only the future mattered, this baby, and all our lives going forward.\n\nWhen we finally left, it was with a strong sense of regret; I'd found the thing I'd longed for all my life, I had my beautiful, funny, loving mom again, and now I had to leave her behind to go home; it was a wrench, but I knew Scotty and I could never live here again in Stillman, not where so many people knew who we were. I was silent the long drive home, thinking about the major changes that had happened, and the even bigger changes coming along soon enough. \n\nScotty knew my moods well enough that he left me alone to think, and he was extra tender and caring the next few days while all the tumult inside me quieted down as my feelings sorted themselves out.\n\nAs it happened, Mom became a fairly regular visitor to our home; her natural urge to see her children and her instincts as the mother of a pregnant mother were probably running on high as well, and I looked forward to her tap on the door and the feel of her presence in my home, small as it was. \n\nScotty and I were saving up to buy an old frame house on the west side of town, complete with a couple acres of what used to be a flower garden before the owner let it all turn back to scrub meadow. Scotty wanted the whole package; I think in his mind's eye he was seeing a lawn green and smooth as a billiard table, with himself riding around on one of those John Deere lawn tractors he kept staring at every time we went into Springfield or up to Stillman to see mom and dad.\n\n*\n\nWe eventually put together an offer on the property, with help from Mom and Dad, and a little something from Stella, 'just in case'; it was accepted, and now we were landowners, even if it was a run-down frame house and two acres of thistles, kudzu, and ground Ivy. \"Get a donkey...\" advised Stella, but we cleared that land ourselves, and Daddy and his friends, along with most of the town, came and helped Scotty refurbish the house. \n\nI did what I could, but I was at the waddling stage, and my back hurt, my feet hurt, my breasts ached, and my temper was about a yard long, so Scotty made sure Mom and Stella kept me occupied. He didn't really need the edge of my tongue after a long day at work, and an even longer night working on the house.\n\nThe day after we officially moved into the house, I woke Scotty at 3 A.M. with the news my water had broken and watched him melt into a puddle of panic on the bedroom floor, so I called Stella and she dressed me and got me in the car while Scotty gibbered and spent even more time being panic-stricken.\n\nThe birth was long and arduous; I was in labor for almost twenty hours, Stella was with me, and she must have called Mom, because suddenly she was there too. I kept Scotty out of there; if he'd paid attention to those horribly graphic videos at the Lamaze classes then he knew what was happening, and I didn't want him to see me like that in case he never wanted to see me ever again and took off for the tall timber instead. \n\nSo he and Daddy paced, and drank coffee, and paced some more while the women in my family coped with me, my pain, my panic, and my overwhelming urge to stab Scotty repeatedly for doing this to me. \n\nAt some point I must have screamed extra loud, maybe I called his name, things are a little blurry and confused about that time, but suddenly there he was, his hands cool and reassuring on my face while I called him names I didn't know I knew, and made lurid, graphic threats against his body, but still he stayed and somehow got me back into the breathing exercises we'd learned in Lamaze.\n\n*\n\nKadey-Rae Mason Donnelly-Corden was born just after eleven o'clock that night, seven pounds of red-faced, screaming panic, and she was just the most beautiful thing I'd ever seen; when the obstetrician put her in my arms, I thought I was going to swell up and burst, and if anyone had tried to take her from me, twenty hours of labor or no, I'd have torn them limb from limb and disco-danced on the sticky remains. \n\nAfter a while I realized Mom, Stella, Scott, and Daddy were all clustered around me, all crying and smiling. Scotty looked wrung-out and frightened half to death after all that, but when he looked at his baby girl, his expression flickered among wonder, awe, terror, and deep, deep love.\n\n\"Hey hotshot, want to say hello to your daughter?\" I smiled, and my Scotty kissed me, tears running down his cheeks as he gingerly took that tiny little bundle and held her to him.\n\n\"My baby...\" he whispered, gazing down raptly at her as she wriggled slowly in his arms, her tiny, perfect little fingers clutching at the air as she yawned. \n\n\"Thank you, Trin, I love you so much,\" he murmured, \"she's beautiful, she looks like Mom...\"\n\n*\n\nBringing Kadey-Rae home was an event in itself; everyone who'd come to my baby-shower seemed to be there, and their friends, anxious for the big reveal, and my baby spent a large amount of time being 'oo'ed' over, having her chin chucked, and being passed from mother to mother, so pretty much the whole town could meet its newest resident. \n\nWith guests came food; pies, casseroles, biscuits, cookies, fudge, and fruit baskets, so much we'd never be able to eat it all before it spoiled, so I had Scotty label all the casserole dishes before he piled them in the freezer, and put everything else in the fridge; it barely fit. Our neighbours were the generous sort. The next morning, nice and early, he took all that wonderful food to the homeless shelter and the women's shelter in Monte Vista so it wouldn't go to waste. \n\n*\n\nPoor Scotty! Having a new baby in the house was one thing, but keeping his hands off me for eight weeks was a sore trial; it was a two-way street, too; just because my hormones were running riot inside me, and my body felt like someone else's, and I couldn't see my feet because my titties were in the way, my need for Scotty hadn't diminished; if anything, I was as horny as ever, and when I wasn't getting up in the middle of the night to nurse my baby, I'd be lying there sweating and trying not to groan while the wildest sex-fantasies capered and cavorted around inside me. \n\nScotty, too, if his restless stirring and muttering all night long, and his bleary, weary expression every morning was anything to go by. I was used to Scotty, happy, horny, endlessly inventive Scotty, humping me madly at the drop of a hat, even well into the last trimester, with my full connivance and cooperation, and I really, truly thought I was going out of my mind with need and frustration. \n\nIt got so I even snapped and snarled at Mom, something I had promised myself faithfully I wouldn't do, as part of my program to forgive and forget and move on, but luckily Mom realized what was behind it, and sat me down to give me the frankest talk I'd ever had in my entire life.\n\n\"Trini, I know you can't make love for a while, I know it feels like forever, I've been there sweetie, twice, I remember it well, but honey, you don't have to suffer; you have hands, fingers, a mouth, and I'm sure Scotty does too; you don't need to hump like a pair of mink to get some satisfaction and to give poor Scotty some release; he's looking really frayed around the edges, he's about to climb the walls and explode, so think, baby, use your body; you have...other options; I'm sure you know what I mean!\" \n\nShe was more than a little pink by now.\n\n\"Trini, and I can't believe I'm saying this, but there are other ways to make love to your man, sweetie, other...places; I'm sure you don't need me to spell it out, girl! Do it, and do it soon, because you're driving each other crazy, and your father and I are not far behind!\" \n\nI was astonished; I knew Mom had come a long way back, but this was a new high for her, and I mentally ticked another box in my list of things to do to get my mom back from where she'd been.\n\n\"Mom, are you suggesting Scotty and I...you know...like that? Are you sure?\"\n\nMom grinned, possibly the dirtiest, most smugly suggestive grin I'd ever seen on her face, more proof that Bell and his perverted views and opinions were firmly and irrevocably in the past.\n\n\"Well of course, baby; I know you and Scotty used to do that, I know what I saw, and I'm pretty sure it wasn't a first!\"",
        "I gave her ten out of ten for aplomb, but I was hesitant.\n\n\"Isn't it a little...you know...soon to be doing things like that?\" I asked, and Mom looked at me with that single raised eyebrow she does so well.\n\n\"I think the trick is slowly, gently, carefully; you don't have any sutures down...there, but that whole area is a little...delicate right now, so yes, slowly and gently should see you fine.\"\n\nI looked at her as a sudden thought struck me.\n\n\"Mom, you seem to know an awful lot about doing...that...?\" I left the question hanging, and once more I got the raised eyebrow.\n\n\"Trini, your father and I weren't always a prudish pair of old fogeys you know, and it's about time you learned that you and your generation didn't invent sex, either!\" she retorted archly, then gave me that dirty grin again, and a lewdly suggestive wink, making me gasp in shock, and then we were both collapsing in peals of laughter; I think it was then that the final, lingering barriers disappeared and I had my mom back for good and for real.\n\n*\n\nWhen Scotty arrived home, it was to a quiet house; little Kadey-Rae had been fed, changed, and put down, and now she was with Mom, who'd stayed at the other end of the house to give us a couple of hours together before I had to be a mommy again. When Scotty came in, I was waiting for him in my sheerest robe, with just a tiny pair of panties showing through. I was lucky, I didn't have that tummy-roll of mommy-fat, and I have to say, for a new mother, I looked pretty good. Scotty, of course, brightened when he saw me pretty much primed and ready for him; it had been almost three weeks, and he was probably at fever-pitch now.\n\n\"Trin...?\" he asked, looking puzzled and just adorable, so I stood, and let that robe droop open, showing him my panties, my flat tummy, and most of all, my superb pair of milk-breasts.\n\n\"Scotty, baby, it's time you and I had a little talk...\" I grinned, letting my robe slide to the floor and turning sideways on to him so he could take in my magnificent, but alas, temporary rack as I cupped them and winked at him.\n\n\"Trin, please, don't, you know we can't...\" he moaned, while the tent in his pants showed me just how much he wanted to.\n\n\"Shh, don't talk, baby, just come here, I've got something for you!\" I slurred, licking my lips and hooking my thumbs in the waistband of my panties. \"You and me, baby, we're gonna find out where your howl has gone, baby; you ready to start looking?\" I challenged him.\n\nScott was suddenly in front of me, his hands on my ass, squeezing my cheeks even as he slid my panties off. His lips burned on my breasts, on my neck, my throat, and when he kissed me hard on the lips, thrusting his tongue into my mouth, I damn near came right there. Somehow we were back on the couch, our lips sealed together as hands roamed, Scotty holding my breasts gently even as I squeezed his rock-hard cock. Suddenly he broke our kiss to look me square in the face.\n\n\"Trini, can we really do this? Is it OK? I don't wanna hurt you, I can wait, baby, honest...' he trailed off, his eyes wide as I reached into his pants and took hold of his swollen hardness. When I dipped my head down and took him into my mouth, he gasped, his body tensing.\n\n\"Oh God, Trin, it's been so long, I don't know how long I can...\" but I looked up at him as I kissed the swollen head of his cock.\n\n\"It's okay, Scotty, you can go, then you'll last longer next time; don't you want that?\"\n\nI licked my lips suggestively before slipping him back into my mouth and sucking him as hard as I could, just once. Scotty gave a kind of coughing groan, and I felt him pulse in my hand, his cock-head swelled in my mouth, and then he was blasting long, creamy spurts of his creamy spunk into my mouth, jet after jet of man-juice hitting the roof of my mouth as he came and came endlessly, his body tense and all the tendons in his neck corded and outlined like piano wire. Wow, that boy had built up some head of steam!\n\nWhen the jets died down to a trickle, I cleaned his head, polishing the last of his explosive ejaculation from his still rock-solid cock with my tongue, and smiled up at him.\n\n\"Thank you Trin, love you baby-girl!\" he murmured, pulling me closer. \"Your turn, baby; God, I missed this!\"\n\nWith that, he gently eased me onto my back, his lips touching and caressing everywhere, my belly, the insides of my thighs, a soft kiss on my pussy that made my ringer shoot straight to the top and go 'ding!', and then his tongue and lips were kissing and caressing my nipples, sending quakes through my body that shot straight to my pussy; if I hadn't expressed two bottles full for Mom to take with her, I would have squirted milk all over him; as it was, a few drops trickled out, and Scotty eagerly lapped them up.\n\n\"Every part of you tastes delicious, baby girl!\" he murmured, while I writhed and suffered in an agony of sexual deprivation; everything he was doing to me made me want him, I wanted his body against mine, moving with me in the heated darkness of our bed. I wanted him inside me, filling me with himself. I wanted his explosion of seed in me, his ultimate gift to me, from the depths of his body to the depths of mine. \n\nBut he wasn't finished yet. After lapping and tasting my nipples, his kisses once more roamed down my body, soft, feather touches that burned into me, goosebumps racing up and down my arms and legs as he touched me, tasted me, kissed me and made me his again. Memories roared and tumbled through me, memories of our wild days of uninhibited sexual exploration in that fateful time when we'd finally admitted to each other what we were, before everything had come down around our ears, before we'd left to find our new life. \n\nAs he kissed, licked, and fondled me, suddenly I was eighteen again, finding each sensation new and exciting all over again, his touch once more new, thrilling, and unbearably arousing, and a part of me deep inside knew that we'd found us again, that we were Scotty and Trinity again, not husband and wife, not mommy and daddy, not even brother and sister, but Scotty and Trinity, young lovers finding their own world together.\n\nWhen his lips grazed my pussy, I started; the area was still sensitive, but his touch was so soothing, so delicate, so calming, while still hot and exciting, I knew I'd let him do whatever he wanted. I hadn't shaved or waxed since the birth, and the sensation of his tongue stroking the soft, silky hairs was exquisite; he was enjoying it too, judging by the amount of time he spent just running his tongue over the area, and then he slowly, slowly, pushed his tongue-tip between my labia, easing them apart. I nearly passed-out at the sensation, at the feel of warm, wet succulence probing inside me. He lapped and probed for what seemed like forever, slowly driving me higher, until at the touch of his tongue on my aching clitoris, I came like I'd never come before, jagged white light literally blinding me as a volcano of pleasure erupted deep inside me, blasting through me in pulsing waves of delight.\n\nI think I screamed. I don't remember. All I do remember is the feel of Scott's tongue and lips as he licked and sucked my clitoris, his hands on the cheeks of my ass, holding my pussy firmly against his mouth, and the feel of his hair as I held his head, willing him to keep doing that to me forever and ever.\n\nWhen I came down from that incredible high, it was to see Scotty's beautiful, grass-green eyes glowing darkly in the subdued lighting.\n\n\"Wow baby, are you okay?\" he murmured. \"You were gone there for a second; I thought you'd passed-out!\"\n\nI smiled happily as I held my hands out to him, an invitation he wasted no time in taking; to feel his warm, naked body against mine once again, well, it didn't get much better than this, although, if he was ready, it just might...\n\n\"I want you inside me, Scotty; I need you to fill me up, please...\" I whispered. He looked doubtfully at me, and my heart warmed at the concern in his eyes.\n\n\"No Trin, not yet, it's too soon, baby, you're not healed yet...\" he began, so I silenced him with a finger on his lips.\n\n\"There are other ways, baby,\" I reminded him, \"think baby, we used to do it all the time, before, remember?\"\n\nHis eyes widened as memory filled in for him, but still that look was there, that mingled doubt and concern.\n\n\"Baby, are you sure? It was a difficult delivery, you need to...\" so I silenced him with a kiss.\n\n\"Slowly, gently, that's all it takes, baby; they didn't cut me, there's no sutures, it's just a little tender, that's all, so take your time, but I swear to God, one way or another, tonight you are gonna fuck my ass if I have to drug you and strap you to the bed, you hear me? I need you inside me, now, so you better start thinkin' happy thoughts, boy!\" I hissed in his face, watching his lovely, sweet grin light up his face at my threat. \n\n\"Slow and gentle it is, baby!\" He smiled, squeezing my ass while he kissed me gently, tenderly, then harder, hotter, cranking my thermostat all the way back up to 'Hell, yeah!'\n\n\"Make me ready, baby!\" I whispered, handing him the Astroglide. I gasped at the feel of the cool gel on my skin as he gently smoothed it around my tight little hole. \n\n\"Inside too, baby...\" I reminded him, and gasped again at the sensation of his finger slowly, slowly inserting into my anus.\n\n\"Relax, Trin, I won't hurt you.\" He breathed, slowly sliding his finger back and forth, spreading the lube inside me. As he did that, he kissed my shoulders, the nape of my neck, my shoulder-blades, making me want him more and more with every touch of his lips burning against my even more heated skin.\n\n\"Little more now, Trin...\" he murmured, and I felt a second finger slowly easing inside me, opening me as I relaxed, both fingers stretching me open. \n\nBy now I was burning with need for him; nothing mattered now but that Scotty ram that fat cock of his deep inside me. It had been so long since I'd had him inside me, I'd been reluctant to let him into me, terrified he didn't want me anymore, and now all that existed was his body pressed to mine, his lips searing my burning skin, and his fingers working inside me, getting me ready for him all over again.\n\nAnd then suddenly he was gone; he'd pulled his fingers out of me. I was just about to protest when I felt him pressing against me, and this time it wasn't his fingers.\n\n\"Slowly, Scotty, please...\" I urged him, desperate to have him inside me, and fearful of what it would cost me. I needn't have worried; slowly, a fraction at a time, he eased that thick bar of flesh inside me, reliving what we had once done with almost no thought, but this time delicately, making sure I was OK with what he was doing. My head filled with memories and images of the wild and almost animal way we'd gone at this before, but this time, however, his gentle care of me as he penetrated me made butterflies race up and down inside me, and my pussy pulsed and twitched as the sensations he was giving me threatened to overwhelm me. When he was fully inside me I started breathing again, not realizing I'd been holding my breath throughout the whole excruciating, unbelievable experience. It had never been like this before; fun, yes, sexy, definitely. Now, this was like the first time ever, he was taking my virginity again, and my body rang and clamoured as blinding hot waves of pleasure surged back and forth inside me.\n\nScott held me against him as my body shook and trembled with increasing surges, mini-orgasms crackling like fireworks inside me, strings of soundless detonations as we made love for the first time in what felt like forever. When he moved inside me, slight as it was, another wave of detonations crackled and sparkled inside me, and all of me that was still on this plane wanted my Scott, my man, my husband, to pound himself into me once again, to renew our connection in the best possible way.\n\n\"Are you ready, baby-girl?\" I heard him whisper, shifting position, even that slight movement enough to set me off all over again.\n\n\"Yeh...yeh...yes, do it, do it now!\" I heard myself pant through clenched teeth. I had to grip hold of the bed sheet as he slid almost all the way from me, to slide back in, powering his way back into the depths of me.\n\nAgain and again he plowed his cock into me, reaming my asshole with his rock-solid cock, making soundless white explosions go off in my head; all sensation whirled away, all except the feel of my darling man making love to me. At some point Scotty had pulled me to my knees, and now he held me upright, his hands cupping my breasts as he plunged his cock relentlessly into me while my fingers worked relentlessly on my clit, each light brush with my fingertips pulsing inside me like the shimmer of a bell, until I felt him shortening his stroke; he was going to cum at last; he was going to flood me with his white-hot tribute, filling me again, putting that last shine on our re-established connection.\n\n\"Trin...baby, I can't...I can't...!\" he chanted as he rammed into me until finally, stock-still, his muscles stone-like in their rigidity, I felt his cock swell as a rush of warmth flooded into me, filling me completely.\n\nAs he came, so did I; I screamed as my pussy pulsed and a spray of my own juices splashed the bedding; my nipples gave a mighty throb, paralyzing my brain with the white hot pleasure of it, as twin jets of milk sprayed out from between Scotty's clasping fingers, sprinkling the bed liberally. As I came, my anal ring clamped down around his cock, squeezing him and I felt rather than heard him groan as yet another thick jet of hot spunk hosed into me, and another, and another.\n\nI collapsed onto the bed, my senses scattered to the winds as the room spun around me, until finally coherent thought began to seep back. Scotty was on his hands and knees above me, his head bowed down as he sobbed for breath, and then he slowly dropped to the bed and rolled onto his back. His hand reached for me even as I reached for him, and so we lay there in our own twilit world, reality a long way away at that moment, but I didn't care, and I knew he didn't; we'd found each other, and all was right in our world again. \n\nEven as I took him in, he looked at me and edged his way closer, to slip his warm hand over my hip and knead it gently.\n\n\"It's so good to be home at last, baby!\" he whispered, and I smiled back; I knew exactly what he meant.\n\nAs we lay in the afterglow, I finally pulled myself together enough to ask him something that had puzzled me from the outset; why had he left me untouched since the birth of Kadey-Rae, and why had he allowed himself to suffer alone? His answer was disarmingly simple.\n\n\"Trini, baby, you had a newborn baby; you had to be her mommy first; I didn't really matter. I saw what you went through during the birth. I know how jumbled-up inside you probably were, and, well, I wanted you to feel good enough to want me; I couldn't go forcing myself on you, that would have been wrong, and I couldn't risk losing you...\"\n\nI started crying when he said that, crying because he was so scared for me, because he cared so much for me. He held me close and dried my tears, just as he'd done all my life, and waited until I was able to speak again.\n\n\"Scotty, I would never have left you out; baby, I love you! If you needed me, I would have been there for you; you should know that by now!\"\n\nHe smiled and pointed at my chin; when I looked at his finger, he flicked the end of my nose and grinned; caught me again...\n\n\"I know, baby girl, I just didn't want to pressure you,\" he smiled. \"I could have waited a little longer, you know; I was OK; I'm not the one with the jumbled-up innards after having a baby. I could have waited, I would have waited until you were good and ready, because I love you, Trini.\"\n\nWe lay together for a little while longer, then Scotty began pulling on his shorts and his sleeping tee.\n\n\"Where you going, baby?\" I asked him, enjoying my warm little nest and wanting him back in it.\n\n\"Gonna get Kadey-Rae, baby; I reckon Mom's babysat her long enough; you stay there, I'll bring her to you.\"\n\nI jumped out of bed, completely awake, 'Mommy' mode now in full operation.\n\n\"It's OK, baby, I'll go get her. It must be about time for her feed; you wait here,\" I told him, so he reached out and pinched my butt.\n\n\"Then while you're gone, I think I'll check the windows; that scream you let out near on broke every window in the house! I think the house might have shifted over to one side, too; I'll let you know in the morning!\"\n\nI was mortified.\n\n\"Do you think Mom heard me?\" I asked, face heating up, and Scott grinned.\n\n\"Baby, I think they heard you in Albuquerque!\"\n\n*\n\nEpilogue:\n\nAs the months passed, Mom and Daddy began to once again become more fully involved and included in our lives; they knew and understood that things had changed permanently in the family, but also that those changes didn't have to be a bad thing. I needed Mom, but she had smarts enough to not crowd herself back into my life; we'd grown apart, and that saddened me, but we were also growing closer again, in a more adult, more connected, more 'family' way than we'd ever been before, and we could communicate at last. We were becoming, finally, what I'd always wanted: a close-knit family, mainly because of the distance we'd endured, and the things we'd learned, and I was looking forward to the life we were going to share together. \n\nAll the family is here now in Holden's Crossing, in the house Daddy and Scott, and Stella's two sons, and all their friends built on our land, so my mom is just a step and a whistle away. It didn't take much to persuade them, either; that house in Stillman had just too many bad memories; Bell and his evil had tainted that place for good, so Mom and Daddy agreed with us when we suggested they sell-up and use the money to build a place of their own on our land; we had the room, and both Scotty and I needed the whole family nearby. Plus, Mom had a surprise up her sleeve; in among all the making up and reconnecting with Daddy, she'd got a little surprise all of her own: she was pregnant...\n\nI was stunned, but then I shouldn't have been; Mom was seventeen when Scotty was born, nearly twenty when I came along, and now she was just past forty, so not exactly ready for a rocking chair and a shawl. Mom's little surprise turned out to be a little brother for Scotty and me to love, play with, and help bring up; his name's Georgie, named after Daddy; he's almost a year younger than his niece, which gave me pause for thought; I'm 'married' to my big brother and we have a little daughter, my kid brother's niece, who's a year older than him, so does that now mean we're officially trailer-trash...? Jeez, someone get me a pickup truck with a gun-rack, and while you're about it, change my name to Eula-May...\n\nMom and I have a double connection now; our babies, her son and her granddaughter, keep us close and connected. My family has never been so happy; all that stuff in the past is gone, now there's Mom and Daddy, Scotty and me, and two of the sweetest little children ever to bless this world.\n\nOur home is just a couple of minutes from Stella, our other mother. Kadey-Rae calls her \"Gramma\" too, and spends most afternoons with her, at Stella's suggestion, to \"allow me to work in peace\" at the beauty parlor; actually, it's so Stella can parade her beautiful, green-eyed little 'granddaughter' around in front of all her clients and fellow gossip-mongers and bask in their envy... \n\nWhen Kadey-Rae's not with Stella, she's with Mom, learning, as I did, the basics of finger-painting, making mud-pies, and licking chocolate frosting from the bowl. She's fascinated with little Georgie; she thinks he's her baby brother, and we don't do anything to make her think otherwise; she and Georgie are the bridge between our two families, and I like that just fine.",
        "I don't mind being left alone at the parlor; as junior partner, I like to keep my hand in, and I do enjoy being part of town life. It really is a proper beauty parlor now; as well as the latest hair and nail fashions, we offer complete facials, manicures and pedicures, or a combined program of skin, hair and nail-care, even a tanning booth. We got it after someone told Ellie Hoosen chicken grease helped tanning, so she rubbed herself down with it and laid out one baking hot day in the parking lot, wearing an indecently small bikini; it smelled like Grandma's chicken cookout day out there, and pretty soon every weasel for miles around was lined up waiting for her to stop moving. Stella took the hint, bought a booth, and Scotty and daddy installed it for her. \n\nThe ladies of the county just keep coming back, so we must be doing something right. We have three trainees here in Holden's Crossing alone, and another two parlors, one in Gainsboro, and the other in Chavez, staffed by girls I trained, so I have to stay on my toes to keep all the plates spinning and make sure they're doing things the Trini way, because that's the formula that works. I'm happy to say business is booming, so I'm kind of busy. I feel secure in the knowledge Kadey-Rae's in the best possible hands all the time I can't be with her. \n\nStella loves it that I'm so deeply involved in building the business; her two sons keep far away from the salons just in case Stella starts hinting they might want to get involved one day, or take over from her; they're happy to be mechanics and NASCAR drivers; the only way to get them through the doors would be to tell them it was Nude Hairstylist Night or a Wet T-Shirt Trampoline Challenge; otherwise, they keep well clear and concentrate on avoiding marriage, any hint of inheriting the business one day, and chasing girls up in Monte Vista, far enough away from home to keep prospective second-nighters from ever finding them. \n\nWhen they're not doing that, they're corrupting Scotty with pictures of naked V8 engines posing all lewd and alluring, and dragging him ever deeper into their world of polished and chrome-plated automotive porn.\n\nI'm pregnant again, almost four months now, so I'm beginning to show. Scotty is still in a haze; he's besotted with his little girl, but he's hoping for a boy this time around; somebody has to share that beautiful car with him! We'll find out at my next ante-natal clinic appointment and scan in a couple of weeks, so my fingers are crossed for a son for Scotty, although I know if it's another girl he'll be just as delighted. In the meantime, life continues at full pace for us, and, at last, we've become what I always wanted to be: a normal, young, suburban family in a town where everyone knew us. \n\nTo celebrate, last Christmas, my gift to Scotty was the thing he'd always wanted, but had never dared buy: his very own John Deere ride-on lawnmower, complete with custom paint job, cherry red to match the Torino, Go-Faster stripes, a Vargas-girl 40's pin-up artwork on the cowling of me with a Peek-a-Boo hair hairstyle and dressed in a few wispy strands of nothing much, done by one of the art-student girls up at the college, and a CD sound-system; he spends his life working to make our home a better place for me and his children, so I thought it was time he had a favorite toy, just to even things up a little. Now he can hold his head up proudly with the other husbands of the town.\n\n*\n\nLast week, Mom asked me to help her sort through all of my little-girl clothes that she'd boxed and stored, to see if there were any I wanted to keep as mementoes, or for Kadey-Rae, or to give to Thrift. Scotty had gone with Stella's two sons to rummage through heaps of rusty metal at yet another Auto Swap-Meet, so Kadey-Rae pulled me over to Mom's house and we helped Mom sort through the boxes in the attic and the garage. All of my clothes from kindergarten days and onward were sorted and put in one pile or another, until finally only one little pair of rolled-up red Oshkosh dungarees was left; I looked at them wistfully, remembering how they'd been my most favorite thing in the world, and knowing full well I'd never throw or give them away, they were just too precious to me. Wrapped up inside them was my 'Tinker Bell' trinket box. Obviously I'd put it there to keep it safe.\n\nWhen I opened it, inside was a little leather package tied tightly with red threads. My eyes pricked with tears as soon as I saw it: my magic charm, lost so long ago. In all my happiness with Scotty, my baby, and my life back in the heart of my family, there had always been a tiny, sorrowful, empty place deep in my heart where a piece of my magic was missing. My eyes blurred with tears as I took it out and showed it to Mom, telling her what it was. Of course, she cried a little as well, but we were both dying to know what Scotty had put in there nearly twenty years before to keep me safe from the ogres and goblins. I cut the threads and carefully opened the little age-stiffened roll of oiled leather. \n\nInside, there was a Tootsie Roll wrapped in a little note written in pencil on a bubblegum wrapper, in Scott's careful, eight year-old script, and a small lock of chestnut hair carefully tied with red thread; the note read:\n\n\"This is a magic kiss and a piece of me to keep my baby-girl safe; I love you, Trini.\" followed by a big wobbly X. Now it was my turn to cry, really cry, finally understanding just how much and how deeply my darling Scotty has loved me from earliest days, and how well his magic charm had worked; it gave me the only thing in the world I'd ever wanted, it had given me my Scotty, my very own piece of magic. I really have been the luckiest girl in the world."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother-sister",
        "incest",
        "sex",
        "anal sex",
        "oral sex",
        "mom",
        "reconciliation",
        "pregnancy"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-and-found-a-charm-for-trinity-ch-02"
}