{
    "title": "Used Ch. 05",
    "pages": [
        "Author's Note: So, here is the long-awaited continuation of Used! I've decided for my sanity to split up the chapters. The final chapter is in the works as well as the third of Only You. Again, thanks for reading and continuing to bless my little stories with your kind words. You guys are kickass! Happy Reading, Sienna H.\n\n********\n\nShe was flying down the highway in her pearl gray Highlander, the sounds of Keyshia Cole's Heaven Sent blaring through her speakers. \n\nThe music was so loud, she almost didn't hear her cell ringing.\n\nSlipping on her Bluetooth headset, she pressed the answer key to her cell phone. \n\n\"What's up, Nora-poo?\" she yelled. \n\n\"Jamie? Jay, turn down the damn radio!\"\n\nGiggling, Jamie did as she was told. \n\n\"Can you hear me now?\"\n\nNora's high pitch laugh rang in Jamie's ear. \"Yes, dumbass. I can hear you perfectly. How far away are you?\"\n\n\"About twenty minutes away. I'm on 32 right now.\"\n\nNora squealed. \"I can't wait to see you.\"\n\n\"Me either. It's been so long.\"\n\n\"Jay, it's only been two years.\"\n\nShe chuckled. \"That's like a decade in the real world.\" There was a deeper chuckle in the background. \"Is that Danny I hear?\"\n\nNora let out a girlish giggle. \"Yes, he's here waiting for you too. Hurry up!\"\n\n\"Alright, already! I'll be there before you know it.\" She pressed the off button and sighed happily. \n\nTwo years. It had been two long years since she saw her best friend. Things just got in the way. Immediately after college she had gone to work at a major public relations firm in Manhattan. Her sister was so proud of her. She was a grunt and it was hard work, but it had promise, potential to move up the work ladder. \n\nShe had shared an apartment with a girl from work. Martha was nice enough, but she just wasn't Nora. Martha was more concerned with press releases and crisis communication plans than staying up late to eat ice cream or go out clubbing. \n\nThough Jamie was good at her job, she just didn't love it. It disappointed her, staying in college, graduating with a degree only to discover it wasn't her passion. She had known from a very young age that her heart's desire was art. \n\nHer father had discouraged it, calling it a fleeting fancy. It wasn't something concrete like journalism was. So she held off on her dream to pursue her father's in hopes that he could show her just once that he was proud of her. It didn't work out that way, however. He still criticized. \n\nIt was about seven months ago when she called the big 'Fuck It.'; fuck the job, fuck the apartment, and especially fuck Roger Kincaid. She left the apartment, moving into a small studio in the Village. She enrolled in a graphic design class at the local community college. But the biggest change was the job. \n\nAfter talking to her boss about how unhappy she was working at the large firm, the woman actually understood. She referred Jamie to a friend of hers who was currently looking for someone with design skills to help him create webpages for arts and entertainment companies. \n\nThe company was relatively small, about twenty employees, but it was exactly what she needed. She could design at work and paint and sculpt at her leisure. When she told her sister Rina, she was initially shocked, but she stood by her decision. \n\nJamie reasoned that her sudden life upheaval was one of the reasons why she and Nora hadn't seen each other. They stayed in contact through the occasional email and odd phone call here and there. So to be able to visit Nora for a full week was pretty exciting. That is how she found herself on the road to Maryland to visit her best friend.\n\nAfter college, Nora went to grad school and completed the master's program within a year for psychology. She was now working on her doctorate and was a guidance counselor at a private school. Danny worked as an architect in a high-end firm. They both lived together in relatively quiet Annapolis neighborhood.\n\nShe smiled at the thought of the two of them. They were such a shining example of true love. They had already begun to establish a life together while Jamie still struggled to pick up the pieces of her own. She was happy for them but also a tad bit jealous though she'd never admit to that aloud. \n\nIn no time at all, she arrived in the sunny tree lined neighborhood where Nora currently resided. Jamie shook her head. Nora would live in a place like this. It was just beautiful. Tall trees with crisp, verdant leaves outlined the picturesque houses with their quaint colonial structures. Children played happily on the sidewalk, the sounds of high-pitched laughter and sprinklers letting her know summertime in the 'burbs was here. She pulled a piece of paper with Nora's address scribbled on it out of her large bright yellow purse. \n\nHer eyes darted this way and that, searching for the house number. 607, 607 she repeated in her head. After driving further down, she reached the moderately sized brick house. It was three-storied, with colonial columns that stood majestically on a large wraparound porch. Its dark green shutters added to the quaint feeling of the house. She parked her Highlander on the street next to the house and stepped quickly from the car. \n\nAs she walked up the cobblestone walkway, she smoothed down the wrinkles in the pale green sundress she was wearing. She walked up to the steps and rang the doorbell. \n\nThe door swung open immediately, as if the person on the other side was watching her come up the walk. \n\n\"JAY! Oh my gosh, it's so good to see you!\" Nora Masters grabbed her best friend in a crushing hug and pulled her into the house.\n\n\"Nora, you're making it difficult to breathe\" Jamie said, even as she squeezed Nora tightly. \n\n\"Shut up, I miss you.\" She let go of her friend and stepped back. \"Let me get a good look at you.\" Jamie felt a little foolish when Nora twirled her around. \"Man, you look awesome; so different.\"\n\nJamie had changed. She had lost a little bit of weight due from walking all those city blocks. She was still slightly curvy but with a helluva lot more tone to her body. Her once short black hair was longer now, curling softly around her brown shoulders.  \n\n\"I don't look that bad do I?\"\n\nNora shook her head. \"Nonsense, you look fabulous.\"\n\nJamie smiled. \"So do you.\" And she was right. Nora had this glow about her. Her wavy blond hair was now straightened, its length about the same as Jamie's. Her amber eyes were still happy and thoughtful. \"Love agrees with you.\"\n\nNora's pale pink lips curled into a sly smile. \"And speaking of my love, he's in the kitchen waiting for you.\" Grabbing Jamie's hand, she led her down the hallway into the large modern kitchen. It was tastefully decorated, in warm green and black appliances. \n\nDanny Eisenberg's curly brown head was currently stuck in the refrigerator. He emerged when he heard them enter. \"Jamie,\" he said grinning. \"It's so good to have you here. He grey eyes twinkled as he embraced her warmly.\n\n\"Thanks Danny. I'm glad you guys let me crash at your place.\" \n\n\"No problem. We're just happy that you could take some time off.\"\n\n\"Yes, Jay. How's the new job going?\" Nora reached into one of the dark hardwood cabinets and pulled out three wineglasses. \n\n\"Good. I think I'm finally where I'm supposed to be, you know?\"\n\nDanny nodded as he pulled out a bottle of zinfandel from the wine cooler. \"I know that feeling. I shopped around with job after job until I found the right one for me. It seems like only my baby knew exactly what she wanted to do as soon as she left school.\" He smiled at Nora who grabbed the bottle from him and uncorked it smoothly. \n\nJamie couldn't help but notice they way they moved as if in unison, their movements flowing perfectly with one another. It was ridiculously cute. \"Yeah, Nora knew she wanted to be a psychologist since birth. Always trying to help somebody.\" \n\nNora smirked when she passed Jamie the wineglass. \"I was always there to help you out, Jay.\"\n\nShe couldn't help the warm smile that spread across her face. \"Yeah, you did. That's why I love you.\"\n\nThe two friends clinked glasses. \"I love you too, girl. That's why Danny and I have a surprise for you.\"\n\n\"Really? What is it?\"\n\nDanny and Nora stole secretive glances at one another. \"Well, we know we promised we'd take you out and all that jazz around Maryland but...\"\n\n\"But what? Don't tell me you guys have to work? That would totally suck if I have to keep myself company.\"\n\nNora's blonde head shook from side to side. \"No, nothing like that. We were planning to show you around Annapolis but something else came up. Something like Danny's parents' beach house in Ocean City.\"\n\nJamie grinned. \"You guys are taking me to the ocean?\"\n\n\"Sure,\" Danny said. \"That is, unless you want to stay here.\"\n\n\"No, no, no. We are going on a vacation. That's just freaking awesome.\"\n\n********\n\nJamie yawned loudly. She and Nora had stayed up late drinking wine and giggling about days gone by. It had felt like just another night in their old college apartment. \n\nShe grinned as Danny and Nora sang along together with the song currently playing in the car. They were holding hands, looking so ridiculously in love it made her hurt. \n\nYou could have had that, her stupid conscience reminded her. \n\nGod not now, she thought. She had been too scared to ask Nora about Nate. She knew he had kept in contact with Danny over the years. It didn't seem right to ask about him. With all the upheaval in her life she really hadn't thought about him until she saw Nora. \n\nNot true, her conscience whispered. Okay, so there was the occasional dream.\n\n\"You alive back there?\" Danny called out to her from the driver's seat. \n\nJamie forced a small smile. \"Sure,\" she said. \"How much further?\"\n\n\"We're almost there.\" \n\nNora turned in the passenger seat to face Jamie. \"You're going to really like the Eisenberg's beach house. It's on a private beach, so there aren't any tourists poking around.\"\n\n\"Sweet,\" Jamie said. She lowered the window, anxious to smell the salty sea air. \n\nDanny eyed Jamie through the mirror. \"Oh, and a couple of my friends are going to stay with us too but it's a big house, so no worries.\"\n\n\"Hey, no problem Danny. I'm just looking to have a good time and relax.\"\n\nNodding his head, Danny pulled into the driveway of a spectacular beach house. \"Well, this is definitely the place to do just that.\" He turned off the ignition.\n\nJamie practically jumped out the car, anxious to get a look at the place. It was breathtaking. The large, three story property was bleached white, the soft blue shutters the same color and the afternoon sky. The driveway was paved with sea shells and lined with beach plants. \n\nNora enveloped her in a giant hug. \"Isn't this place amazing? Danny's parents are going to give it to us someday.\"\n\nJamie nodded. \"It certainly is something.\" She pulled Nora to the door as Danny grabbed the bags from the car. \"Come on, let's go explore.\"\n\nThey ran up the shell walkway, skirts flouncing behind them. Nora unlocked the door and pushed it aside. Right away they were hint with a strong scent of sea breeze. To Jamie, it smelled like vacation. \n\nThe entrance opened up to a quaint foyer. On the right was a decent sized living room. A large modern kitchen was at the end of a marble-tiled hallway. \"Come on,\" Nora said, tugging her arm. \"You just have to see the view.\"\n\nThe women walked down the hallway and into the kitchen where there were two large French doors that led out to a generous sized platform deck. \n\nThe ocean view was breathtaking. The sun sparkled on the blue water, the waves gently lapping at the sand. \n\n\"Wow,\" Jamie breathed. \"This is amazing.\"\n\n\"I know.\" Nora pointed back inside. \"Let's go and get changed.\"\n\n********\n\nJamie still couldn't believe how beautiful the house was. When Nora showed her the room she was staying in, she was taken aback. It seriously was the size of her apartment back in the city. \n\nThe room was done in mute colors, all sea blues and misty greens. There was a small balcony that overlooked the sandy beach below. \n\nMy mother always said she wanted to see the ocean.\n\nJamie sighed. She needed to pay her Momma a visit. It had been quite some time, almost a month to be exact. \n\nOpening her small suitcase, she picked out a dark orange bikini, which she quickly changed into. Jamie put on a long sleeved black gauze cover-up and orange flip-flops. \n\nShe stuffed her music player, a towel in her large yellow purse. Before she left, she grabbed her sunglasses, putting them on before closing her door.\n\nJamie silently padded down the hallway. When she reached the room where Danny and Nora were staying she heard the soft giggles and muffled moans. Shaking her head, she bounded down the steps and walked outside to the beach.\n\nIt was a glorious day outside. The sun was going to set soon. Jamie opened her bag and laid out her towel. Stepping out of her flip-flops, she removed her cover-up and sat down. \n\nJamie watched the ocean for a while, the quiet tossing of the waves washed a feeling of calm over her. Reaching for her mp3 player, she slipped the earbuds in. Before leaving the city she made a playlist called \"The Seaside Soundtrack\". It was a collection of songs perfect for the beach. It was weird; she made it before she even knew she was coming here. \n\n\"Ahh, fate\" she said aloud. Staring out at the azure waters, she let the sounds of Sigur Ros perfect the mood. Hopp\u00edpolla was still one of her favorite songs.\n\nAbove her, Nora watched her friend sit quietly on the beach. She smiled when Danny came up from behind and wrapped his arms around her slender waist. \n\n\"Ready for round two?\" he whispered. \n\nNora shook her head. \"The others will be arriving soon. You'll just have to be a good boy and wait.\"\n\nShe looked down at Jamie; her best friend had changed. She seemed comfortable in her life. Comfortable, but not happy. \n\n\"You're worried about her, aren't you?\" \n\nNora met Danny's grey eyes. \"How did you get so intuitive?\"\n\n\"I just know you, Nora. You can't help but care.\"\n\nShe sighed. \"I know. I just want to help her. Do you think we did the right thing?\"\n\nDanny nodded fervently. \"I believe so. I think it's been a long time coming.\"\n\n\"I hope you're right, honey. I hope you're right.\"\n\n********\n\nJamie hadn't realized she dozed off until she felt sand sifting lightly on her stomach. She sat up sharply to see a cute chestnut-haired guy staring down at her. \n\n\"Jamie?\" he asked. \n\n\"Do I know you?\" he did look familiar. She knew she'd seen those green eyes somewhere before. \n\nThe guy smiled. \"Of course you do. Matt Wilkins. From Colson. I was in ATO.\"\n\n\"Oh Matt!\" she exclaimed. He held out his hand for her and she took it as he pulled her easily to her feet. \"Yeah, I totally remember you. How have you been?\"\n\n\"Not bad, not bad. Yourself?\"\n\n\"Can't complain. Did you just get here?\" \n\nMatt shook his head. \"About fifteen minutes ago. We've all been watching you to see how long you were planning on sleeping out here.\"\n\nJamie felt her cheeks flush. \"Well, that's sufficiently odd of you.\" She picked up her black cover-up and slid her feet into the flip-flops. \n\nMatt smiled. \"You're still funny.\" He helped her pick up her stuff. \"Come on, we're all getting ready to set up a fire on the beach and catch up.\"\n\n\"Which is code for get drunk and reminisce.\"\n\nThey both laughed. They were still smiling when they reached the wooden patio. Suddenly Jamie heard a voice that made her stop in her tracks. \n\nThat sexy Southern baritone. It can't be.\n\nAnd that's when she saw him come out on the deck, his face blocked from view by a large cooler. \n\n\"Matt, you asshole! Stop talkin' to them girls on the beach and start helpin'...\" His sentence trailed off as he set down the cooler and stood up to face Matt and her. \n\nJamie Kincaid. The woman who walked away from him two years ago, confused and angry. \n\nThis was Jamie, who he tried to forget but never could get out his mind. \n\nHis Jamie...who was never his to begin with.\n\n********\n\nDead silence. \n\nThe only thing heard was the waves slapping soundly against the shore. There were voices chattering in the kitchen, but all Nate could hear was the sound of his heart threatening to burst through his chest. \n\nAll at once he felt a wave of nausea hit. He hadn't expected her. What the hell was she doing here?\n\nShe looked good. Too damn good for his tastes. Her bikini was modest but ridiculously sexy, showcasing her luscious golden breasts, slender waist, tawny limbs; she was still hot as hell. Her dark hair was longer and he decided he liked it that way, hanging down by her shoulders. She was staring at him, her eyes cautious and hesitant. \n\nMatt stood there, as if watching a riveting game of tennis. \n\nBefore Nate could open his mouth, Jamie spoke up. \"I need...to not be here.\" She took her things from Matt and eased past Nate, careful not to let any part of her brush against him. \n\nShe practically broke into a run as she darted into the house. \n\n\"Wait,\" he called out but she was too far to hear him. \"Shit,\" he muttered. \n\n\"Did you know she was going to be here?\" Matt asked.\n\nNate shook his head. \"It hadn't even crossed my mind.\"\n\n\"Are you going to leave?\"\n\nNate thought about that one for a moment. \"No. We can be civilized for a short amount of time.\"\n\nMatt shot him a 'yeah right' look. \"Whatever, dude. I'm going to go help with the food.\" He hopped up the steps and into the kitchen. \n\nNate exhaled. He was getting that weight of the world feeling again; he had worked hard to remove that burden. But seeing her again...he felt all at once light and heavy. \n\nHe would be a damn liar if he said he hadn't thought about her. It took him a week and a half and a long road trip to finally stop his hands from shaking every time he read that letter of hers. \n\nShe said I made her feel loved. And then she left. \n\nWhen he returned home to Nashville, he threw himself into work. He had gotten a job with a major advertising company. He loved his job; it was fresh and exciting. Since day one, he knew that it was where he was supposed to be. \n\nLife after Jamie Kincaid was finally starting to come together. He had a great job, a nice apartment, and was currently in the process of trying to buy a house. \n\nYes, all these things had kept his mind off the wild girl who, with one look used to have him aching with need. That is, of course until he saw her and all those familiar feelings came rushing back. He had a sudden desire to either kiss her or strangle her, he wasn't sure which.\n\n\"Dude, are you okay?\" He turned to see Danny staring tentatively at him. \n\n\"You knew she was goin' to be here, didn't you?\"\n\nDanny nodded, not even concerned about lying to his friend. \"I did.\" \"I don't know why people can't stop meddlin' in things that ain't their concern...\"\n\n\"Oh, come off it Nate!\" Danny said. \"You can't pretend like it's not good to see her.\"\n\n\"I didn't say that!\" Nate hissed. \"I just...it would have been nice if I was told is all.\"\n\n\"Right, so you could hide back in Nashville? Come on Harlow. You aren't fooling anyone.\"\n\nNate sighed. \"It's just...I don't know if I can face her, man. I wouldn't even know what to say.\"\n\nDanny slung an arm around his shoulder, leading him back to the house. \"Just start with a 'hello'. The alcohol will take it from there. Speaking of, I'm going to need you to make a run.\"\n\nNate glared at Danny. \"What am I, your beer bitch?\"\n\nDanny laughed. \"Exactly. This ain't college anymore, Tex.\"\n\n********\n\nShe slammed her bedroom door, her knees shaking. What the hell was he doing here, and why did he have to look so fucking delicious?\n\nHe looked the same, and yet somehow different. His blond hair was still close-cropped, his skin still nicely tan from the Tennessee sun. He was wearing khaki shorts and a soft blue t-shirt that matched his eyes. ",
        "Eyes that roamed her body freely. There was a stubborn spark of lust in his eyes as he drank her in. The look, however hot was fleeting, the fire doused as quickly as it had ignited. \n\nFor the briefest of moments she had envisoned him scooping her up in his strong arms and kissing her hard, telling her that all was forgiven and that he still loved her. \n\nJamie shook her head, knowing it was a pipe dream. As she slid on a pair of olive green shorts, she cursed violently. \"Get the fuck over it, Kincaid. Get over him.\"\n\nA quiet knock at the door made her heart lurch. Was it really him? \n\n\"Jay? It's me.\"\n\nJamie sighed. So much for fantasy. \"It's open Nora.\"\n\nNora stepped into the room. \"Are you okay? You ran past everyone.\"\n\nJamie shot her a look. \"You knew he was coming.\" It was a declaration, not a question.\n\n\"I did, I will admit that.\"\n\n\"Why, Nora? After everything that's happened between me and Nate, why would you invite him?\"\n\nNora folded her slender arms, the 'no duh' look apparent on her pretty face. \"You just answered your own question, Jay. Two years is enough time to sulk, isn't it?\"\n\n\"I haven't been sulking,\" she said somewhat guiltily.\n\n\"Bullshit. I know you've been dying to ask about Nate every time we talked over the years.\"\n\nOoh, busted. \"So what Nora? What good will it do to drudge up the past?\"\n\n\"It might make living a whole lot easier Jay.\" Her eyes softened. \"You're right where you want to be in life, and yet you look so sad it makes my heart hurt for you. I'm your friend, Jamie. I want nothing but the best for you.\"\n\nShe felt her throat tightening as the tears started to form. \"Nora Masters, you aren't going to make me cry on vacation.\"\n\nNora laughed as she dabbed at her own eyes. \"Okay, I promise to ease up on you.\"\n\n\"And I promise to be civil for you.\"\n\nNora nodded. \"Good. Now come to the store with me. I've got to make a beer run.\"\n\nJamie smiled. It would be good just to get away from all this tension at least for a bit. Clear her head, and return without thinking about how good it used to feel wrapped in a certain man's arms.\n\nThey descended the stairs and walked out down to the driveway. Jamie's good mood vanished as she saw Nate leaning casually against Danny's Lexus SUV. \n\n\"Nora,\" she hissed. \"What is he doing here?\"\n\n\"Nate!\" Nora said loudly. \"Ready to go?\"\n\nNate shot Nora a semi-irritated look. \"Yeah, seein' as I was forced to go.\"\n\n\"That's the spirit!\" she replied brightly. Nora handed Jamie the keys. \"Well, you guys better get going!\"\n\nJamie glared at Nora. \"Wait, you're not coming?\"\n\n\"Nope,\" Nora replied. \"I have to go help Danny and Matt set up the fire. You'll be fine,\" she said, blatantly ignoring the angry look now on Jamie's face. \"Nate knows where the liquor store is. Now have fun!\" \n\nHanding Jamie fifty dollars, she turned away so they wouldn't see the huge triumphant grin on her face. She could barely keep her shoulders from shaking with laughter as she walked back up to the house.\n\nThey stood in silence. Jamie shuffled from one sandaled foot to the other. Nate's hands were shoved into the white zip-up hoodie he was now wearing and a slight scowl was on his handsome face. \n\nHe sucked his teeth loudly, an action that pissed Jamie off for some reason. She walked around to the driver's side. As she was about to get in she looked back and saw that he had followed her. \n\n\"What?\" she asked somewhat rudely. Her brown eyes flashed.\n\n\"You know where you're goin'?\" He stared at her body language. Her fingers clutched the keys and her stance was almost menacing. He couldn't help but notice she looked a little hot when she got mad.\n\n\"N...\" she realized her mistake. Hurling the keys at him, she marched to the passenger side and got in.\n\nHe chuckled softly as he climbed in and started the car. Jamie folded her arms and stared out at the setting sun. The weather was gorgeous and was promising a lovely summer night. \n\nToo bad she had to spend it with someone who wanted nothing to do with her. Sighing, she reached for the knob to turn on the radio. \n\nShe found a station that was playing some random pop song when he reached over and switched it to some random country channel. \n\n\"What the...\" she said.\n\n\"Driver picks the station,\" was all he said.\n\nJamie sulked and he couldn't help but chuckle again. He heard her mutter something about controlling bastards under her breath. You didn't seem to mind me in control before, he thought. \n\n\"What did you just say?\" she asked. Nate hadn't realized he'd spoken aloud. \n\nHe could smell the beginnings of an argument in the air, so he turned up the volume on the radio. It was a slow country tune, one of his favorites. He hummed along softly as they drove past large beach estates and miles of sand. \n\nJamie faintly recognized the song, a pretty thing about sharing secrets on a big brass bed. The song was clearly a love song to some girl planning to leave some guy. She sighed; maybe it was just her, but the song was hitting too close to home. \n\nAs she stared out at the dusky sky, she realized Nate was singing along to the song. He had such a nice voice; it was deep and melodic, giving her the vision of summer rain. It made her shiver. \n\nThe song ended just as they pulled into the small parking lot of the liquor store. Nate turned off the car and stared straight ahead. \n\nDamn you Josh Gracin, he thought. \n\nHe was so busy thinking he almost missed the soft whisper of her sentence.\n\n\"You have a beautiful voice.\"\n\nHe nodded. \"Thanks. You want me to come in with you?\"\n\nShe shook her head, her dark hair falling into her face in such a way he was tempted to brush back the strands. They were hiding her beautiful face. \"No, I'm good.\" She opened the door. \"Back in a bit,\" she said, shutting the door behind her.\n\nHis hands gripped the steering wheel tightly, his tanned knuckles turning pale. What's stopping you? Stop being an ass and talk to her. \n\nShe was gone only a moment, returning with two cases of Corona. Nate opened his door and jogged over to the passenger side, helping with the beer and holding the door as she climbed in. \n\nHe missed the little smile of satisfaction on her face as he got in on his side. \n\n\"Thanks,\" she said as he started up the car. \n\nNate pulled out the space and started the drive back to the house. \"No problem.\"\n\nThe next few minutes were filled with reflective silence. He stole furtive glances at her. She was watching the road, her elbow rested on her bent knee. \n\nHe watched her fingers twirl a strand of hair over and over. She was chewing on her bottom lip, something he remembered she did when she was nervous.\n\nSay something, his brain chanted. He could tell there was something on her mind. He might as well recognize the big ass elephant in the car. Before he could stop himself, he spewed out his word vomit. \n\n\"You fucking hurt me.\"\n\nEven he was shocked. Nate didn't dare look over at her. He didn't want to see the 'fuck you' tumble from her lips. \n\nHe was surprised at the words that followed. \n\n\"I know.\" A long sigh. \"I know. But it was for the best.\"\n\nNate swerved off the road into a dusky parking lot. Shutting off the car, he glared angrily at her. \n\n\"Two years. Two years Kincaid an' you're still clingin' to that lie?\"\n\nThe icy blue of his eyes blazed hotly and Jamie almost wished she hadn't opened her mouth. \"Harlow, please.\"\n\n\"No, goddammit! You ain't weaseling out of this. You will fuckin' talk to me.\" He locked the doors for emphasis. \n\nShe glared at him. \"What the fuck do you want me to say?\" Her fingers trembled and she balled them into a fist. Please stop, she thought.\n\n\"I want you to stop running from your problems. Own up to things, Jamie.\"\n\nJamie let a small scream of frustration. The tears flowed down her cheeks. She didn't even bother to stop them. \"What do you want from me, Nate?\"\n\n\"You, Jamie. I want you. I've always wanted you. Two years ago you walked a way from me, and I hated you for it. But mostly I hated myself because despite you treating me like shit I still wanted to be with you.\"\n\n\"Oh.\" Jamie was stunned. Things had gotten so far from where she wanted them to go. \"Nate, I...\"\n\n\"But I can't be out on this limb by myself. Tell me what the fuck you want, Jamie. I'm tired of playin' these games.\" \n\nHe looked at her once more and his eyes seemed to have taken on a weary tone. He looked about ready to bawl and suddenly she felt compelled to touch him. \n\nHer fingers reached out tentatively, stroking his cheek. An involuntary sigh followed as her fingertips grazed over his blond stubble. \n\nNate couldn't stand it. Unbuckling his seat belt, he leaned over, crushing his lips to hers. A small groan sounded deep within him as she kissed him back, the softness of her skin reminding him of better days. \n\nNate cupped her cheek with his hand as his tongue dove deeper, trying to remember every inch of her. She was still crying softly, wet tears mixing salty between their mouths. \n\nIt wasn't a kiss of passion; it was one of desperation and longing, a hunger so deep it scared him to the very core how much his body craved it. \n\nNate knew she felt the same way, he could feel the same desperation in her touch, they way her body responded to the one thing she had denied it all these years. \n\nAnd as quickly as it had begun, it was over. The kiss broken, the tension hanging heavy in the air. He watched her for as long as he dared. Her eyes were still shut, lips tender from his assault. The tears streaming slowly down her face. \n\nHe knew then he loved her. He had loved her for a long time, when he started it didn't matter. All that mattered was he loved her now. \n\nAnd he needed to know if she felt the same. \n\nNate pulled away, fastening his seatbelt once more. As he started up the car and pulled out from the lot, he gripped the wheel even tighter, hoping to mask his quivering body.\n\n********\n\nThey arrived back at the beach house in silence. Jamie barely waited for the car to park before she hopped out and yanked one of the cases from the back seat. \n\nShe crunched up the driveway and was already in the house before Nate could get the other case of beer from the backseat. \n\nNora and the others were already set up outside. The evening sky shone bright with stars. The beach was illuminated with the roaring fire already set up. \n\nDanny and Matt were roasting hot dogs on skewers while Nora chatted animatedly with a cute brunette whom Jamie assumed was with Matt. Everyone looked up when she practically flung the Corona at Nora and plopped down on the sand. \n\n\"Nice drive?\" Nora asked, her amber eyes feigning innocence. \n\n\"Should I go check my car for bloodshed?\" Danny asked, partly joking.\n\n\"No need, we didn't murder each other\" Nate said, he stepped down off the deck to join the others. \n\n\"Glad to know,\" Matt said cheerfully. \"After all, you guys had the extra beer with you.\"\n\nThey stayed up late into the night, drinking and laughing about days gone by. It was a nice night; the stars were out and he was surrounded by good music and good friends. He watched her through the firelight. Even with the layer of distress underneath, she had a soft glow about her; it was almost impossible to stay away from. \n\nHe tried to relax and not think about the incident in the car; how good it felt to be near her once more, her lips on his. Groaning softly, he took another sip of beer and tried to join in on the conversation. \n\nDanny was telling some story about their sophomore year of college. Nate smiled. He had met Danny the same time he met Matt, when they all pledged ATO. He had been just like Nate was in high school, the All-American boy. \n\nDanny's parents were wealthy, owning several hotel chains. He was the middle son and wasn't in line to take over the family business. They clicked instantly. Danny was sharp and bitingly funny but more than that he was a loyal friend. \n\nNate knew he was completely in love with Nora, and vice versa. He looked at them now, her back resting against his chest, his arms wrapped around her as they snuggled under a fleece blanket. That's how he wanted to be. \n\nWith Jamie. His Jamie. \n\n\"...so Nate goes up to the stage and when the guy asks him for the cheesiest pick up line he goes 'Is that a keg in your pants, 'cause I'd definitely tap that!\"\n\nThe group burst out laughing as Nate grinned. \"What can I say? That line is classic. Besides, we won fifty bucks for it, didn't we?\"\n\nMatt nodded. \"Yup. We spent like eight dollars at the bar that night for penny pitchers and then bought the rest in Ramen!\"\n\nDanny laughed, wiping tears of mirth from his face. \"Dude, I totally remember that! We had this wall of Ramen in the room. It took us fucking months to eat it all!\"\n\n\"I know man,\" Nate said. \"To this day I can't look at a package of that stuff without getting the heebie-jeebies.\"\n\nThe music, Nora's mp3 player and stereo was on random when suddenly a song came on that made Jamie's heart lurch. \"There's nothing like you and I...\"\n\nShe looked up and found Nate staring right back at her, the firelight dancing madly in his orbs, sending a shiver running down her spine. Why this song, she thought. \n\nFate. It could only be fate.\n\nNora saw the uneasiness between the two of them. She quickly changed the song to a more upbeat tune. \"Nope, no sad songs tonight\" she said, giggling. She tried to stifle the huge yawn creeping up on her. \n\n\"You tired, honey?\" Danny stared down at her. \n\nNora shook her head sleepily. \"I'm good.\" She fought off another yawn. \n\nHe chuckled. \"Liar. Alright guys, we're going to head to bed. Boardwalk tomorrow?\"\n\nMatt nodded. \"Definitely. You ready for bed, Lila?\" he asked his girlfriend. \n\nShe nodded, rubbing her blue eyes and stretching. \"Yeah. I'm sleepy as hell.\"\n\n\"That's too bad. I wasn't really planning on sleeping.\" He grinned wickedly at her. \n\nLila laughed. \"You are so bad. Are you coming in, Jamie?\"\n\nJamie stole a glance at Nate, who was busy lying on his back, staring up at the stars.\n\n\"Uh, I'll be going to bed in a little while.\"\n\nMatt nodded knowingly. \"Okay. 'Night guys.\"\n\nIt was just the two of them now. Jamie ran her fingers through the sand, listening to the soft rise and fall of the waters, the sand sifting to rest at her feet. She shivered a little, suddenly feeling the chill of the night air. All she had on was the gauzy cover-up and shorts. \n\nJamie hadn't realized Nate had moved until she felt the warmth of his soft white hoodie around her shoulders. \n\n\"Thanks,\" she said quietly. He sat down next to her, his legs stretched out. Jamie drew her knees closer, wrapping her now warm arms around them. \n\n\"You're welcome.\" \n\nMore silence. It seemed to be their new thing. Two years of unsaid words, hurt feelings, and yet nothing but the waves and the lone cry of a gull bedding down for the night. \n\n\"I'm sorry.\" \n\nShe said it so softly he had to wonder if he was hearing things. He wanted her to continue on her own terms, so he waited and said nothing.\n\n\"I'm so sorry Nate. For everything. I feel like I've been punishing myself as well as you for the past two years. And over what? Leaving you hasn't done anything but make me miserable. \n\nYou're right. I run away from things. It's been my past experience dealing with people that I love. In time, they'll leave or I'll get scared and run away, always afraid the other shoe will drop; afraid someday they'll wake up and realize the monumental mistake they've made and leave me.\n\nI was so scared of being alone, so I hid. I pushed those feelings way down and told myself that if I could be like 'screw the world, I'll do what I want' things wouldn't be so scary; things wouldn't hurt.\n\nAnd then I met you. At first it was just a game. Break you down just because I could. You were game at first, giving back as much as you got. It was thrilling. You were so hot and made me feel sexy. It was then I started to notice the little things: the way you held me after sex, the looks. I tried to run away, to push you away. \n\nAfter awhile when I realized you weren't going anywhere, I knew it had to end. School was nearing the end and I couldn't bear to have you walk out of my life.\"\n\nHe knew, suddenly he knew. She had cared for him and didn't know how to show it. Instead, she drove him away. His heart felt lighter finally hearing the truth, but it still stung to know she couldn't trust him enough to share her feelings. \n\nSilence again. Jamie clutched his hoodie around her tighter, inhaling the clean scent of his cologne, her body aching with the memory of that smell. \n\n\"I love you,\" he whispered. \"Loved you then. I love you still.\"\n\nShe stared at him, her brown eyes wide in amazement. \"I...\" her sentence was cut short as he pounced on her. He was everywhere, lips pressed hard against hers, his hands pushing aside the hoodie to cup her breasts. \n\nJamie moaned, spreading her legs wider for him to fit. She wrapped her arms around his neck, clutching him tightly to her. She could hear his heart pounding in his chest as he unzipped his pants and freed his throbbing cock. \n\nHer mouth watered at the sight of it and she reached between them to stroke him. Nate growled softly, unbuttoning her shorts and yanking them down, nearly ripping them in the process. As yanked off her bikini bottoms and tossed them carelessly aside, he stared down into her eyes. \n\nHe saw the look in them, the one he knew matched his own. He knew then this was not going to be a slow love-making. It was going to be a hard fuck, one of out of pure need held off for years. Nate reached down and thrust two fingers inside her already wet core. \n\nShe moaned, a low guttural sound that make his dick jump. It had been so long. Boyfriends had been an afterthought, and sex? Forget about it. \n\nNate placed his cock at her entrance and thrust hard into her, making both of them cry out. Jamie kicked off her shorts to wrap her brown legs around his waist. He was breathing hard, his hands braced on either side of her. \n\nHe began to move inside her, pushing long, hard strokes. They were silent, the occasional grunt or sigh spilling out. His eyes never left hers. He watched them run the gamut of emotions, from pleasure to slight pain. He could have guessed it had been awhile from the tightness of her pussy. \n\nNate supposed he wanted to punish her a little, but Jamie seemed to enjoy it. Her fingers grabbed at his back, her nails pressing sharply into his skin, threatening to break it. He would have bruises tomorrow, but he didn't care. \n\nHe moved faster now, his cock ramming into her so hard he thought she might break. She was meeting his hips with hers, the gyration of her body letting him know she was nearing her peak. \n\nHer breath was coming harder now, and he noticed the wet spots on her cheeks. As he looked into her eyes, her brown fingers reached up and wiped the tears from his eyes. He had been crying. \n\n\"Nate,\" she whispered. \"I love you.\"\n\nShe squeezed him inside her and he came with a loud moan, with her following behind. Nate arched his back before falling on top of her. \n\nJamie welcomed his weight against her, cradling him in her arms as his body shook; from pleasure or the sobs that now tore through him, he didn't know. \n\nShe rubbed his back, his cock now softening inside her but she still couldn't bring herself to let him go. Never again, she thought. \n\nJamie stroked his hair, whispering the three words over and over. I love you, I love you, I love you...a chant she'd never get tired of.\n\nNate was soothed into a silence. They stayed like that for some time, wrapped in each other arms, the waves licking at their feet as the tide loomed ever closer. \n\nThe fire had died down long ago and they suddenly realized how dark it had become, the moonlight sparkling over the water. ",
        "He looked into her eyes as he kissed her gently. She smiled shyly. \"Let's go upstairs.\" "
    ],
    "authorname": "nerd4music",
    "tags": [
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/used-ch-05"
}