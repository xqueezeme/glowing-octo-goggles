{
    "title": "Jeff and Paige",
    "pages": [
        "My name is Jeff Clark. I'm a widower in his mid forties. My wife and I had married young and had been happily married for 17 years until she was taken from me in an automobile accident. The first few years were kind of tough. I wallowed in self-pity for a while and then got my head back together through hard work and attention to detail at my job. I've been working for the same engineering firm for 25 years now. I've always had good relations with my co-workers over the years, working closely with a number of them on special projects. \n\nRecently, the firm hired a young woman fresh out of college named Paige Dunham who, apparently, was tops in her class at University. At the time there weren't a lot of women engineers, so the company wanted to make sure that she was to be treated in an equal and fair manner. Since we had a number of young engineers it was decided that I was to be the one who would be her mentor since I had been working for the firm the longest (and probably the safest as far as sexual harassment issues were concerned.).\n\nPaige is a delightful person to work with. She's quick to learn, anxious to help and never complains about anything...a bonus in this business! Paige is very good looking with strikingly bright blue eyes, a big beautiful smile and lovely dark brown hair. Since our job required us to go out in the field and get our \"hands dirty\" our dress, in and out of the office, tended to be casual at best and very blue collar most of the time. We probably spent more time in coveralls then we did in normal clothing. Coveralls are the great equalizer in that everyone looks rather bad and that figures are concealed. I liked to wear coveralls because being older my middle was a bit larger than I liked and that was camouflaged quite nicely by the bagginess of the coveralls.\n\nPaige and I had been working, for several months, on one particularly complex project. We had been spending a lot of time at the work site, which required us to stay away from home for weeks at a time. During this time we got to know one another quite well as we spent all of our meal times together discussing the project and other odds and ends about our lives. It turned out that we both have a love of classical music (Mozart in particular), bicycling and reading. \n\nWe had been back in our homes for a week with the wrap up of the project we were working on and I have to admit that I missed the company of Paige. We would see each other in the office but really hadn't really spoken since our return. At the end of the week Paige sent me an email inviting me to her place for a bar-b-que the next day. I responded that I would like that and asked if I should bring anything. She responded with \"Bring beer!\" She sent me her address and told me to arrive around 2 p.m.\n\nWith beer in the back of my car I headed for the address she gave me. It was in an area of town I wasn't too familiar with so I had to rely on my phones GPS capabilities. When I arrived at the house I was astonished at the size and modernity of it! It looked like one of those places you see in upscale magazines about upscale houses...all cubes and windows at odd levels. I couldn't help wonder how a young woman just out of college could afford such a place. I knew from our mealtime conversations that Paige's family was not well to do.\n\nI trundled up to the front door with the beer in hand and rang the bell! It was the right place because Paige answered the door. I must have looked amusing because I was bit taken aback with what Paige was wearing. She had on a short silk kimono, which clung to her enticingly showing off her figure in a way that baggy jeans and coveralls didn't!\n\nShe welcomed me in the house with a giggle and closed the door behind me and then led me through to the back towards the kitchen. The kitchen was very modern with lots of stainless steel, glass and rail lights. It looked back onto a large swimming pool and hot tub with exquisite landscaping and interesting sculptures. Paige laughed when I asked her how she could afford such a home...\n\n\"It isn't mine! It belongs to the parents of my college roommate, Sarah. Her parents are loaded and have several houses around the world. They are currently in France following the Tour de France or something. Why don't you put the beer in the fridge after grabbing a couple and I'll show you around the place.\"\n\nI grabbed a couple of bottles after stashing the beer and turned back to Paige handing her one. I asked, \"So why doesn't Sarah live here?\"\n\n\"She's currently in the Peace Corps...in Belize, I think?\" Paige responded. \"She will be there for a couple of years and then, perhaps, she will move back here. Until then I'm the house sitter!\" She then laughed. \"It's a good gig as I can save a lot of money towards a place of my own someday. \" \n\nPaige and I then toured this stunning house. The furnishings were rather Spartan but tasteful. There were 5 bedrooms, a game room with a snooker table, a library with a small collection of books, a spacious dining room and a room next to the kitchen with wide French doors, which led to the pool/patio. The master bedroom was astonishing with the biggest bed I had ever seen and a bathroom that was nearly as big as the bedroom with a huge walk in shower that had numerous spray heads located throughout.\n\nAfter the tour I asked, \"When are the other guests arriving?\" To which Paige answered, \"You are the only guest, if that is alright? I missed your company this past week so I thought we could grill up some steaks, drink some beer and get away from the job and just relax!\" I told her that I liked the idea!\n\nIt took a while to figure out how the gas grill worked and then I set to the task of grilling the steaks while Paige got the rest of the meal together. She had made several dishes ahead of time and some baked potatoes. While we were preparing the food we consumed more of the beer that I had brought. Since I was expecting a bar-b-que with a number of people, I bought a lot of beer!\n\nAfter a while the steaks were cooked and we sat down to eat. The food was great as was the conversation. We continued drinking the beer I brought and after a bit we were getting pretty drunk. Paige asked me about my late wife and if I was seeing anyone. I told her that I had taken a long time to get over her death and just couldn't get too excited about going through the whole ritual of wooing and dating.\n\nWhile we were talking I had noticed that Paige's silk robe was opening a bit revealing a bit of cleavage. I tried not to appear to be staring because I didn't want to send the wrong signals; after all I was almost old enough to be her father. Paige decided that we needed to jump into the pool to refresh ourselves after the food and beer. I informed Paige that I didn't have a swimming suit so she said just jump in with your skivvies. She ran upstairs to put on a swimsuit while I pondered whether I should swim in my boxers. The beers convinced me that it would be OK since they were a dark blue and so I probably wouldn't offend Paige by being too see-through.\n\nAfter a few minutes Paige came back down stairs still wearing the little silk kimono. She said that I should go ahead and jump into the pool while she turned on the hot tub for later. It was pretty warm outside in the sun so I decided I would take the plunge. The water wasn't too cold but was very bracing and woke me up a bit from the beer stupor. As I surfaced I looked over to where Paige was walking towards the pool. As she neared the pool she undid the sash holding her small silk kimono closed and slipped the robe off of her shoulders onto the patio. What greeted my eyes was the most spectacular body I had ever seen, in probably, the smallest bikini ever made! Paige had rather large round breasts, which were just the right firmness with a bit of jiggle to them. Her nipples were being hidden by two small triangles of very thin fabric, so thin I could discern her areolae. Her waistline was superb as were her legs. Her pubic area was covered by another very small triangle of material, which was so thin I could make out the details of her labia from 15 feet away! \n\nI was so stunned by this vision of beauty I just stared at her as she walked around to the shallow end of the pool and then slipped gracefully into the water. She dove under briefly and swam over towards me then came up a few feet away with only her head above the water. She then smiled and asked, \"So, do you like my bathing suit?\" I was a bit taken aback by the question and stammered, \"Uh, yyyes, it is very, um, lovely...the, uh, cccolor suits you.\"\n\nPaige smiled widely, swam next to me and gave me a hug and a peck on the lips. \"You are so sweet for noticing!\" She then swam back to the shallow end of the pool. While this was going on I felt like a cartoon character, I was blushing so hard the pool water was turning into steam and evaporating away! I was also beginning to sprout an erection for the ages! I had a problem because being in my boxers there was a long slit in the front and my boner was poking through in a big hurry! \n\nMy situation was not helped when Paige climbed out of the pool exposing her thong bikini bottomed derriere to me! I was rather shocked that I didn't die of a stroke then and there! I had never seen, in my life, in person or in print, an ass as glorious as the one Paige was displaying at that moment. The globes of her tush were perfect, shimmering with water in the sunshine firm and yet pliable at the same time. At that moment I was happy that I had my boxers on because I would have ripped through a pair of mere swim trunks!\n\nHowever, things got even hotter for me as she turned on the patio to walk towards the hot tub as the material that covered her nipples and vagina seemed to disappear while wet! She may as well have been walking across the patio naked! I thought my eyeballs were going to explode from this vision of beauty. My erection was reaching epic proportions and I didn't know what to do about it!\n\nPaige was now halfway to the hot tub and yelled for me to come and join her. I looked up and saw that magnificent ass jostling back and forth as she walked and went cross-eyed with desire. \"I'll be there in a moment, I, uh, just want to check something with the pool filtration system.\" I yelled back playing for time in an effort to allow my erection to wane a bit so I wouldn't embarrass myself. \n\nAfter a couple of minutes I managed to control my erection enough to venture from the pool to the hot tub. Paige was already in with the water churning around her ample bosom. I quickly jumped in because the sight of her barely covered breasts were re-awakening my not so dormant penis. The warmth of the hot tub was quite a contrast to the pool and should have been relaxing but I was still on edge due to the situation with my erection.\n\n\"Isn't this relaxing?\" Paige said, basking languidly in the tub. Again, I stuttered my agreement, though I wasn't feeling particularly relaxed. Paige opened her eyes and smiled at me with her beautiful smile. \n\n\"I really like you Jeff, you were so kind to me when I first joined the company helping me to fit in and not treating me like a helpless girl. You never tried to take advantage of me while we were on all of those road trips. You are always a gentleman, that is refreshing in this day and age.\"\n\nI smiled and said, \"Well, I try to be a gentleman. It isn't always easy especially with some of our clients and their demands, but I have always found that if you treat people with respect you can get so much more accomplished.\"\n\n\"Well, I appreciated it.\" Paige said. \"It's very tough trying to break into this field as a woman. Even in school, the faculty and my male classmates were constantly demeaning me. They seemed to think I would give up after being treated harshly, but I wasn't going to be cowed. I studied harder than the rest and got top grades just to prove to them that my gender had no bearing on my ability to become an engineer!\"\n\nPaige's eyes were alight as she relived her school time defiance. I was struck by how hard it must of have been for her to accomplish what she did and admired her even more for it!\n\n\"I think you have proven your point!\" I said, \"You are a fine engineer and a pleasure to work with and I really hope that we are able to work on many more projects together in the future.\"\n\nPaige smiled at this, came across the hot tub towards me, sat on my lap and gave me a huge kiss. I felt her tongue sneak between my lips into my mouth and I responded in kind! I just melted under the feeling of her warm, succulent mouth upon mine. I wrapped my arms around her body and kissed her in a way I hadn't kissed anyone since I had lost my wife. Her skin felt so soft and warm to my touch and I reveled in the feeling. \n\nAs we kissed Paige began to rub herself on my, all to apparent, erection. Having not been with a woman since my wife passed away I was quickly losing control of my senses. I broke off the kiss and told Paige, \"If you keep this up we are going to have a mess in the hot tub!\" She just smiled, moaned and continued rubbing her barely concealed vagina on my ever-growing boner.\n\nA couple of minutes later I lost all control and experienced one of the most intense orgasms in my life! I couldn't believe how wonderful it felt. Sure, I have masturbated through the years since my wife's passing but none of those occasions even came close to comparing to the intensity of this one.\n\nAfter I calmed down a bit Paige stood up, grabbed my hand and said, \"We need to take a shower, I really don't like the smell of chlorine.\" I was still in a state of shock and followed sheepishly as she drug me along to the master bath we had seen earlier. As we walked I feasted my eyes on her lovely fanny and experienced a tingle in my groin as my penis began to reawaken quickly.\n\nPaige immediately went to the shower and turned on the water. It appeared to get hot instantly as I could see steam rising from the floor of the shower. Paige then turned toward me and with a smile untied, first, her microscopic top and then her equally small bikini bottom. My penis, again, snapped to attention and stuck out of the hole in my boxers. Paige giggled then reached over and tugged my boxers down to my ankles. I stepped out of them and then was dragged by my erection towards the shower by Paige.\n\nWe stood under and next to many jets of streaming water feeling the heat of it against our skin. Paige moved up to me, pressed her beautiful body against mine and, once again, gave me a very deep and passionate kiss. Her body felt so nice as I rubbed her back and pulled her tight against my chest. Her hands were rubbing my back simultaneously and felt wonderful. \n\nAfter a few minutes Paige broke off the kiss and pushed me towards an area where there was little spray, soaped up her hands and gave me the most sensual scrubbing I had ever had. She cleaned nearly every square inch of my body. While she reached around me to soap up my back she leaned down and sucked on my nipples, licking and biting them gently. This sent a thrill through my body. She then washed my chest and moved down to my legs while my erection stared her in the face. I could feel her breath on my penis as she worked her way down my legs soaping me up. She then bumped my inner knee wanting me to spread my legs apart, which I did. She then moved her hands up towards my groin and began soaping up my testicles and the perineum behind them in front of my anus.\n\nAfter gently cleaning and fondling my testicles she gave the head of my penis a quick kiss and then soaped it up generously. A moan escaped my lips as she gently stroked me to new found hardness. After that she turned me around and soaped up my ass cheeks and then reached into the crack of my ass and soaped my anus up rubbing vigorously thus eliciting another moan from my lips. \n\nWhen she determined that the job was complete she grabbed the hand held showerhead and rinsed me off completely. She then knelt down and took my erection into her mouth, took me most of the way in and then released my boner from her mouth. She then turned me around, spread my ass cheeks and forced her tongue up into my anus giving it a big lick. Another moan escaped my lips. \"I just wanted to make sure I got all of the soap off.\" and then she winked at me.\n\nPaige then stood up and announced it was my turn to wash her! I was still in shock about all that had happened so far and stood there like I couldn't understand a word she said. Paige then took my hands in hers and looking directly into my eyes said, \"I think you are the most wonderful man in the world. You have shown me nothing but kindness and respect. I know we have known each other for only a short time but in that short time I have grown to love you in a very real way. I asked you here today so that I might be able to seduce you because I knew you were too much of a gentleman to ever try and seduce me. I have been longing for your touch, to hold you and kiss you since the first road trip we took together. I know you loved your wife dearly and I would never suppose that you could forget her and I understand that. I want to be something new in your life...another love, not a replacement.\" Tears were rolling down her face as she smiled up at me.\n\nI was moved by her admission and tears began forming in my eyes too. I said, \"I'm in a state of shock! I can't believe a woman of such beauty and intelligence would find herself in love with me. I'm so much older than you. I'm flabbergasted by all of this.\" Paige, again, smiled brightly and gave me another long, deep kiss that went a long way to ease my mind.\n\nShe broke off the kiss and said, \"I've always liked older men, especially older gentlemen who are kind and gentle and treat me as an equal. That, sir, is what you do and is why I have fallen in love with you. Now, it's your turn to wash me,\" as she handed me the body wash.\n\nI followed her precedent and soaped her up as thoroughly as she had cleaned me. After licking and gently biting her nipples I soaped up her beautiful breasts and then proceeded to cleanse the rest of her paying particular attention to her vaginal and anal areas! After rinsing her off, I accomplished a similar soap check by licking her totally shaved vagina from her hole to her clitoris, which elicited a deep moan and shiver for my actions. I then turned her around and did the same thing to her anus spreading her cheeks wide and then placing my tongue on her little pucker and then licked and probed for a second. This action brought out another deep moan as she pressed her ass against my face. \n\nI then stood up and we washed each other's hair and when that was finished we dried each other off. Paige then led me back into the cavernous bedroom and we crawled onto the bed where we held each other and kissed passionately.\n\nAs we kissed I began to let my hands roam all over her body taking in her feel. Her skin was soft and warm and a delight to the touch. I reached down and felt the soft globes of her ass and reached up to feel her wonderful breasts. I was nearing sensory overload! I then reached down to her thighs and rubbed them up and down and then dipped down to feel her vulva. I dipped a finger in and felt her warm, damp labia. I worked my way down and ran a finger between her vaginal lips and felt the softness and copious moisture there. At this I was startled to realize that this young, beautiful woman did desire me! I continued stroking Paige's vulva from her opening to her clit. Every time I touched her clit she let out a low moan and pushed her pelvis into my hand. Taking the hint I rubbed her nub more consistently and with increased vigor.\n\nPaige began whispering in a husky voice, \"Don't stop...feels so good...I'm going to cum! As she writhed and groaned she continued whispering, \"So good...so good...oh my!\" And with that she climaxed, spraying my hand several times with her sweet juices. I had never experienced a woman who squirted during their climax and found it quite exhilarating. Who knew that I could do that to a woman!",
        "After a few moments she took my face in her hands and kissed me again with passion and ardor. She then broke the kiss and said, \"I want you to make love to me...now! I have been dreaming of this moment for weeks!\" I rolled her onto her back and decided I needed to taste her loveliness before anything else. I slid down her body and placed my mouth on her shaven pubis taking in the smoothness of it and the heady aroma of her recent ejaculation.\n\nI have to say that licking and tasting her was one of the most profound experiences of my life. Her taste was enticing and I felt I couldn't get enough of her. I licked her slit and sucked on her clit. I stuck my tongue inside her and lapped at her juices. Paige grabbed my head and pulled me into her. She was bucking and moaning again as before. Just as she was about to climax again I moved my head down a bit more and inserted my tongue into her beautiful anus. This caused her climax to come again harder this time and she began squirting copious amounts of her ejaculate which I shifted up to capture in my mouth...I was in heaven!\n\nFinally, Paige pulled my head up and demanded, \"Fuck me now, please!\" I crawled up her torso, kissing as I went until I reached her mouth and kissed her with all the passion in me. She reached under me and placed my aching erection at her opening and I thrust forward gently entering her warm vaginal cavern. I was sure I had died and gone to heaven. She was warm and tight as I started sawing my way in and out of her. I kissed her again with even more passion and she returned my kiss snaking her tongue around my mouth. As our tongues intertwined our copulating pace picked up. Paige broke the kiss whispering, \"oh yes...oh yes...harder...please...so good...I love you...aaahhh!\" \n\nIf I thought I would last long after cumming earlier I was very much mistaken! All of the feelings and passion since we left the hot tub had left me very much on the edge of another monumental orgasm! I cried out, \"Oh god, I'm going to come again! You are so beautiful and you feel so good! I can't hold back...\" Paige cried, \"Oh yes! Cum in me now! I want it so bad! Fuck me with everything you have!\" I continued pounding into her luscious body for a couple of more moments until I unleashed my second torrent of sperm in the past 45 minutes! \"Oh fuck! Oh fuck! So wonderful!\" Paige exclaimed! As I climaxed I could feel the shivers of Paige's third hard climax as she squirted again all over my testicles!\n\nAs our climaxes faded we lay in each other's arms kissing passionately. We rolled over to our sides still in an embrace with my penis still, somewhat embedded in her glorious hole. As our breathing returned to normal Paige looked into my eyes and beamed at me. \"That was so wonderful! I knew you'd be a wonderful lover! I have never climaxed like that in my life!\" Paige then pulled me into another hug and kissed me deeply again.\n\nAfter we broke our kiss I said, \"That was incredible! I haven't felt like this in years! You are so beautiful I could just hold you forever!\" Paige responded, \"Do you promise? Will you please hold me forever!\"\n\nWith that we kissed and rubbed each other for quite sometime until we fell asleep. I woke up with Paige's back towards me spooning. It was early evening outside as shadows stretched across the bedroom. I leaned up and kissed Paige's ear and was rewarded with a contented sigh. I then got up to relieve myself and to get something to drink. I brought up a couple of glasses of water for the both of us. As I sat back down on the bed Paige stirred and stretched languidly. Her nude body was the most beautiful and erotic thing I have ever seen! She saw the water I was holding, smiled and took one of the glasses while thanking me for bringing it. \n\nWe sipped our water and stared at each other for a couple of minutes until Paige asked, \"Are you hungry? It seems like forever since we had our bar-b-que...I'm famished!\" I told her I could probably eat something in order to keep up my strength. With that she answered, \"We have two more days here because Monday is a holiday and I have no intention of letting you go!\" I laughed and said I had no intention of going anywhere!\n\nWe went down stairs, still naked, to fix ourselves a snack. We ate leftover potato salad and other odds and ends that we found in the fridge. After we finished eating I sat back and enjoyed watching Paige as she tidied up after our meal. I couldn't get enough of watching the way her breasts swayed as she moved. Her ass was especially enticing as she moved about...I could feel another erection stirring in my loins. \n\nWe opened a bottle of wine and decided to sit out on the patio near the pool and enjoy the warm summer evening. There was an outdoor loveseat that we sat on, as the evening grew darker drinking our wine. We sat looking at each other with big smiles on our faces, happy in each other's company.\n\nFinally, after a couple of glasses of the excellent Bordeaux (that, no doubt belonged to the owners of this magnificent house), we began to converse. \"Where on earth did you find that bikini you were wearing this afternoon? I nearly had a heart attack when I saw it!\" I asked. \n\n\"I made it!\" Paige responded. \"Did you like it? I assumed you did by the way you were staring and judging by the effect it had on your penis!\" \n\nI laughed and said, \"Yeah, I liked it all right! Especially when you got out of the pool! The material seemed to disappear when it was wet so you looked like you were naked...not that you had much on to start with! I gather my ploy to regain my composure by looking at the pool filtration system didn't fool you.\"\n\n\"Not for an instant! I thought it was cute! I imagined you were a bit embarrassed and didn't want to come off as if you were some sort of sexual predator!\" Paige stated with a knowing look.\n\n\"You got that right! Seeing you like that woke up every sexual part of my being...things that had been, pretty much, bottled up for years. Thank you for waking me up, I needed it!\"\n\nPaige smiled even brighter and leaned in to kiss me again. One of her breasts brushed my arm as we kissed which sent a shock of electricity through my body and waking up my now flaccid member. We started kissing more passionately and began groping each other again. After a couple of minutes Paige broke the kiss and whispered, \"Should we retire back up stairs?\" I nodded in agreement and up I went with Paige, again, leading me by holding onto my now fully erect penis.\n\nAs we climbed the stairs I, again, watched Paige's beautiful ass in awe. My penis twitched a couple of times and feeling that Paige turned to see what was causing the twitch. She caught me staring unblinkingly at her lovely bum and chuckled. This caused me a moment of embarrassment and I'm sure my ears turned a bit pink. She gave my erection a couple of quick strokes and continued leading me up the stairs.\n\nWhen we got to the bedroom Paige turned and kissed me lightly and asked, \"Do you mind if I use the toilet? I think all of the beer and wine is catching up with me!\" I told her there was no problem and that perhaps I should find another bathroom for myself. With that Paige went into the master bath and I trundled down the hall to another bathroom that I had seen earlier. \n\nAfter relieving myself and cleaning up a bit I wandered back into the master bedroom and waited for Paige to return. She remained in the bathroom for about 15 minutes before emerging with a big smile heading towards me on the bed. \"I'm sorry I took so long.\" she said while climbing up the bed into my arms. We kissed again for a few minutes when Paige broke it off with a chuckle. I asked, \"What's so funny?\"\n\nPaige responded, \"I was laughing at the way you were staring at my ass as we were coming up the stairs. You were so cute when you blushed. That made me wonder whether you, as they say, are an ass man or a breast man?\" \n\nThis question took me by surprise. I had never really thought about it too much as I liked both tits and asses and Paige had superior assets in both categories. I decided to hedge my bets and answered, \"I'm neither, I'm a Paige man!\" This answer got a hoot of laughter out of Paige again.\n\n\"No, no...as flattering as that answer was it didn't really answer the question. Are you an ass man or a breast man?\"\n\nDeciding that I couldn't lose either way I said, \"Okay, I really like both and your breasts and ass are the most beautiful I have ever seen, but I guess I'd have to say I like asses a fraction more than breasts.\"\n\n\"I kind of thought so given the way you were staring and reacting to mine!\" Paige said with a smile. \"It's very flattering to be admired, especially from a man like you!\" And she leaned down to kiss me.\n\n\"Why does it matter whether I like one over the other? In all honesty I like the whole body, especially yours. You have a beautifully radiant face, lovely legs, expressive hands, gorgeous breasts, an ass to die for and beautiful eyes. I could just eat you up!\"\n\nPaige cocked one eyebrow with a glint in her eyes and responded, \"Dining privileges are now open!\" with a laugh. \"Actually, the reason I asked was because I wanted to ask you if you would do something with me that I have never done before.\" \n\nThis last request caused me to cock an eyebrow and I asked, \"I will do anything for you, what did you have in mind?\"\n\n\"Earlier today after our shower you licked my anus and it shot sparks of desire through me. I have never experienced anything like that before so I was wondering if you would do that again and then, maybe, have anal sex with me? I have never done it but I think I would like it...if it's done with the right man!\"\n\nI had never done it before either. I had read in various places that for men it was the most intense feeling of all but for women it could be quite painful. If I were honest with myself I would conclude that I have wanted to try anal for a long time but it just never came up. I asked, \"Are you sure? I've never done it before and I've heard it can be quite painful for the woman.\"\n\nPaige kissed me again and the laughed and said, \"You are such a gentleman! I've read that, yes, it can be painful but if we take our time and prepare me properly; with plenty of lube it can be exquisite for both parties! I have never found anyone that I wanted to try it with until I found you. So, what do you say?\"\n\n\"Well, okay...I'd love to have anal sex with you! We need to find some lube and...\" At this Paige kissed me again very hard and passionately.\n\nPaige then reached into a drawer next to the bed and pulled out a fresh tube of KY, winked and said, \"I was hoping you would say yes!\" She then rolled back into my arms to hug and kiss some more. As our ardor increased we kissed and groped each other with more intensity. My erection had returned with gusto as we continued our foreplay.\n\nAfter several minutes Paige broke our kiss and asked me, rather breathlessly, \"Will you kiss my fanny now?\" I smiled, got up and moved behind Paige as she got up on all fours. \n\nAs I stared at her ass I couldn't help but think what an incredibly lucky person I was at this particular moment! I leaned down on my elbow and planted two wet lustful kisses on each globe of her beautiful rear end. These two smooches caused Paige to moan so I continued planting kisses and trailing my tongue across both cheeks. Paige pushed herself back towards my face as I kept kissing her derriere. \n\nFinally, I decided, it was time to get down to some serious ass loving. I reached up, spread her cheeks and began kissing down the cleft that separated her globes. Paige moaned even louder and then said, \"Don't be afraid...I cleaned myself very well back there. That's why I was in the toilet so long.\"\n\nWith that I splayed out my tongue and licked her anus long and hard. Again, Paige moaned very loudly and pushed her ass back into my face...it was glorious. I began licking her lovely rosebud with increased passion and began pushing my tongue into her as far as I could and would then pull it out and lick around her little crinkled muscle. After a bit I asked Paige to hold herself open for me, which she did. \n\nNow that my hands were free I reached under Paige and began stroking her very wet pussy. She moaned again with passion. We continued along this vein for a while until I put my thumb into her soaking wet vaginal opening and stroked her clitoris as I ran my thumb in and out of her. Paige's moans turned into very loud groans as she wailed, \"This is fantastic...stick your tongue into me...rub my clit harder...oh fuckkkk!\"\n\nBeing the dutiful person that I am I complied with her wishes. This was probably the hottest thing I had ever done. My erection was like a steel girder I was so aroused. We kept this up for a few minutes more until Paige begged me to put a finger in her asshole! I sat up, removed my hand from her vagina, grabbed the tube of KY, opened it and shot a dollop on Paige's sphincter. Paige cooed and said it was cold and tickled. I then put a dollop on my index finger and the worked at spreading the lube around her anus while gently pushing my finger into her anal opening.\n\nThe combination of my saliva and the lube made her opening quite slick but it was tough to penetrate her tight little hole. I then remembered something my doctor always says when he needs to check me during physicals...\"Paige, try to relax and then bear down as if you are pooping, it really helps.\" Between her moans she said, \"Okay.\" And then my finger slipped in past the second knuckle.\n\nPaige cried out! \"Ooohhh mmmyyy gggoooddd! That feels...so fucking good!!! Fuck...my...ass with ...your...finger!!!\" I began sawing my finger slowly in and out of her very tight hole. Paige was groaning very loudly now with lust as I sawed my finger in and out of her hole. I would, periodically, squeeze a little more KY onto my finger to keep her lubed up nicely. \n\nAfter a while Paige asked me to put another finger into her. I pulled my index finger most of the way out, smeared some KY onto my middle finger and the reinserted both fingers into her, now, slightly gaping hole. \"OOOHHH FFFUUUCCCKKK!\" Paige screamed as I pressed both fingers all the way into her. I asked if she was all right and she answered, \"I'm wondeeerrrfffullll! TThhis fffeeellls soooo incrrredibbbllle!\"\n\nAfter several minutes of stroking in and out of and twisting around in Paige's anus I reached under her and began stroking her clitoris! This really set Paige off as she pushed her ass back on my fingers with increased gusto as she screamed, \"FFFaaasterrr hhhaaaarrrddeeerrr in mmmyyyy aaassssss! RRRRuuubbb mmyy cclliiittt!!!\" After another couple of moments Paige screamed out her orgasm! \"OOOhhh ffffuuuuccckkk I'M CCCCUUUMMMMMIIIINNNNGGGGG!\" and with that I felt her squeeze my fingers and squirt all over the hand that was rubbing her clit.\n\nI continued rubbing Paige's clit and stroking her ass as she caught her breath. She turned her head and looked into my eyes with a big smile and said, \"That was incredible! I need your cock in me!\" I removed my hand from her pussy and my fingers from her asshole, grabbed the lube and smeared a large amount on my very hard penis. Paige was laying down with her head on the bed and her ass in the air. Her anal opening was still gaped from my fingers and looked wonderful. I leaned down and began licking, kissing and probing Paige's asshole again. I let my saliva run into it while I probed her with my tongue. I then leaned back up and squirted another large amount of the KY into her asshole.\n\nI then leaned forward and placed the head of my penis at her anal opening and pushed ahead gingerly. As I began entering Paige's ass I couldn't believe how hot and tight it felt. I managed to get a little way in and then stopped to give Paige a moment to cope with the invasion into her tiny hole. She was breathing loudly and moaning constantly. I pushed in again after several seconds and reminded her to bear down again, like before. I could feel a sort of squeeze and then I slipped in a couple of more inches!\n\n\"OOOHHH FFFUUUCCCKKK!!!\" Paige wailed with this last addition of cock to her hole. \"Are you OK? Does it hurt too much? We can stop!\" I told her. Paige said, \"NNOOO dddooonnn'ttt sssttttoooppp! \"It hhhurrrtts a llliitttle\" she moaned, \"bbbbutttt it hhhhurrrtttsss soo ggggoood!!! Puuussshh ssoommme mmooorree innnn!\" I then continued pushing and several moments later I had completely impaled her ass on my rock hard penis.\n\nI stayed still, again, to let Paige get used to me being inside her. I couldn't believe how it felt being inside her in this way! Her vagina felt wonderful but this took feelings to a whole other level! I could feel her hand brush up against my scrotum as she began caressing her clit. Another groan escaped her lips and I felt her squeeze my cock with her asshole and then I groaned! I reached around her and felt her breasts! Her nipples were so hard I thought they couldn't get any harder. \n\nPaige leaned back, lifting her head towards mine. Turning toward my face we kissed with my penis in her ass and my hands on her tits. We kissed like this for a couple of moments and I began rolling her nipples between my thumb and index finger. Paige moaned again while we kissed. Paige then leaned back down and said, \"Please fuck my ass! Long and slow will feel wonderful!\" I began, slowly, to pull out of her anal cavity until just the head of my cock was still inside her and then, slowly, pushed myself back inside her glorious ass! \n\nWe continued this pace for a while. We were now both moaning and groaning at the intense feeling this sex act was having on us. Paige began backing up against me increasing the pace and the force with which I was fucking her. I grabbed the KY and gave a quick shot on my penis on an out stroke to keep things well lubed. Our pace began to quicken. I could feel Paige's hand still stroking her clit increasing her pace there. I pulled my hands from Paige's breasts and grabbed her hips as our pace continued to increase, pulling her toward me with renewed vigor.\n\nPaige began crying out, \"Ooohh ssoo gggoood! Sssooo gggoooddd! Fuuuccckk mmmeee! Hhhaarrrdddeerrr JJJeeeffff! FFFFUUUUCCCKKK MMMEEE!\" I now began pounding into Paige's ass blinded by desire! \"I'm CCCCuuummmmiiinnnggg!!\" Paige cried out! And with that I felt her anus grab me and her vagina began soaking my balls! The feeling was so great that I began letting loose with my own orgasm!!! I yelled, \"I'm ccccuuuummmmiiinnngg tttoooo!, and blasted my load into Paige's bowels! Considering that I had already cum twice before that day, I couldn't believe how much of my ejaculate kept pumping into her. \n\nAfter what felt like an hour our breathing began to moderate and Paige collapsed onto the bed with me on top of her. I rolled us over onto our sides, my penis still impaling Paige's anus. After a few more minutes Paige turned her head to me and said, \"That was the most incredible thing I have ever experienced! Thank you for indulging my fantasy...it was wonderful. It was more wonderful than I had imagined. I hope we can do it again...a lot!\" She then turned a bit further and I leaned up a bit and we kissed. The most loving kiss I had experienced in my life.\n\nI broke the kiss and told her, \"I have never experienced anything like that either! We can do this again anytime you want!\" and I hugged her towards me, my semi erect penis pushing back into her a little bit. After several minutes of continued spooning we both fell asleep, exhausted. Sometime during the night my penis fell out of Paige's ass but I couldn't tell you when as I slept like a rock. \n\nI had no idea what time we fell asleep but it couldn't have been too late. I awoke at around 9 a.m., my bladder was crying the blues! I got up and noticed that Paige was not in the bed. I went to the toilet and did my business and then wandered downstairs where I found Paige in the kitchen. She had a French press with coffee in it and was pouring a cup. \"Here you go sleepy head! Nice and strong just as you like it.\" She had the little silk kimono on again and I was standing there naked. I could see that Paige had nothing on under the robe as I could see the sway of her breasts as she moved...it was lovely!",
        "Paige excused herself and went out the front door to retrieve a newspaper. We then made breakfast, read the paper and drank our coffee. After a while I asked Paige, \"So, how are you feeling?\" Paige smiled, stretched languorously and said, \"I feel wonderful! My backside is a bit sore but other than that I feel great! How do you feel?\"\n\nI laughed and said that I felt naked! Paige said, \"But you wear it so well!\" She then came over to me and kissed me. I just couldn't get enough of her kisses! The warmth of her mouth and the feel of her body pulled up against mine were intoxicating. After a few minutes of kissing I suggested that we should take a shower and clean up. Paige agreed and off we went to the master bath. I asked if there was a toothbrush I could use to which Paige said I could use hers. I brushed my teeth and then popped into the shower with my lovely Paige. Our shower was a little more straightforward than the day before but there was still a lot of fondling and kissing. I thought to myself that there couldn't be a better way to get clean than this!\n\nAfter the shower my seemingly insatiable penis began raising his baldhead again. Paige was quick to notice. After we dried off she pulled me towards the bed, sat down and then took the head of my cock into her mouth! This brought out a moan from me as she swirled her tongue around my growing cockhead. At this moment I was struck by a thought and said, \"Wait, I have a little thing I would like to do, if you are willing.\"\n\nPaige took me from her mouth, smiled and said, \"What would that be?\" with a twinkle in her eye. I said, \"I would like to, in crass terms, have a 69 with you.\" Paige's smile widened and said, \"Oh yes please!\" I laughed, crawled onto the bed and lay down on my back. Paige giggled and said, \"Ooooh, I get to be on top!\" and with that she crawled over and stretched out on top of me with her legs around my head! I pulled a pillow under my head and began licking Paige's vaginal slit for all I was worth. I licked deep into her cleft smelling her aroma and lapping at her vaginal dew. I licked up to her clit and sucked on it for a few seconds and then brought my tongue all the way to her perineum...this brought a guttural moan from Paige. \n\nWhile I was enjoying Paige she was licking and sucking my cock with vigor. She would encase the head of my penis within her mouth and then swirl her tongue around the head while sucking on it. It felt wonderful. After a few minutes of that Paige began trying to get as much of me down her throat as she could! She arched her back and pulled my penis back towards her face and then dove in trying to get it all of the way in. After a few attempts she succeeded getting me all of the way in her mouth. I could feel her nose and her hot breath on my scrotum. The feeling was out of this world. This was one time when I wasn't too upset with not having a big penis!\n\nAs Paige had her back arched trying to take me deep this brought her lovely ass close to my face. I reached up with both hands and pulled her ass cheeks apart. I then lifted my head and began licking her perineum and then up to her beautiful anal opening! This brought a moan from Paige's throat, which, in turn, vibrated, on my cock, which was buried in Paige's, mouth! The feeling was exquisite! This caused me to moan as I redoubled my effort on Paige's pussy and ass! \n\nAfter several minutes of intense oral sex I could feel the tell tale signs of my impending orgasm. I backed my mouth off of Paige's rectum and cried that I was cumming! With that Paige began to fuck my cock with her face, bringing my penis out until the cockhead was all that was in her mouth and then plunging down with my dick stuffed down her throat! I couldn't take anymore so buried my face into Paige's pussy, stuffed a middle finger into her ass and pushed my cock into her mouth letting loose my ejaculate!\n\nAs I was pumping my jism into Paige's stomach she began to cum too, releasing her ejaculate into my mouth. I licked and swallowed as if my life depended on it! It was wonderful! I again felt like I had pumped gallons of sperm into Paige. I had no clue how much it really was but I was shocked that my body could produce such prodigious amounts in such short time spans!\n\nAfter our orgasms abated Paige rolled off me and then lay in my arms. She smiled, looked into my eyes and said, \"Well, that was fun!\" I laughed and agreed that it was, indeed, fun! She then kissed me, her tongue swirling around my tongue. I could taste myself on her tongue and I'm sure she could taste herself, too.\n\nWe laid in bed making out for a while and then we decided we should probably get up. Paige decided that we should go out by the pool and lie in the sun. Paige was pretty well tanned all over but I was not. I hadn't laid out in the sun since I was in my 20's and because of this sported the classic farmers tan...two thirds of my arms were brown and the rest of me was butt white! Paige said not to worry, that I could lie out under an umbrella.\n\nWe both sauntered downstairs and out to the patio both still naked. I moved a couple of chaise lounges together and then moved a large umbrella so it shaded one of the chairs. While I did this Paige brought out a large bowl filled with beer bottles and ice! I applauded her brilliance, opened two beers handing her one and then laid down on the chaise in the shade. \n\nI took a pull from my beer bottle and then looked over at Paige. She had a bottle of tanning oil and was now spreading it all over the front of her body. It was one of the loveliest things I had ever watched. The oil made her skin glisten in the sunshine. As she sat on the chaise she reach down and oiled her legs moving up towards her pubic area. She rubbed a fair amount around her pubis rubbing it onto her vaginal lips! It was quite erotic watching spread the oil on her body but my penis remained flaccid since it was still recovering from its last escapade! Finally, Paige finished by rubbing the oil on her torso, arms and breasts and then laid back onto the chaise. I couldn't believe the sight lying next to me! Her skin shimmered in the sunlight. It made her look like a goddess...my goddess! \n\nThe heat of the day felt great and the cold beers were going down nicely. We laid there and talked about all sorts of things laughing and joking for quite a while. Paige sat up and lowered the back of her chaise to make a flat bed and then turned to lie on her stomach. She then asked me to rub oil on her backside. After several beers and laying there staring at Paige's beautiful body, I was quite willing to oblige her. I got up grabbed the bottle of oil and straddled the chaise. With my knees on either side of Paige's legs I bent forward and poured the oil onto Paige's back and began spreading it around. I started up by her neck, trying not to get the oil on her hair, and then worked my way down and along her sides. Her breasts were pressed down into the chaise and were squeezed out to the side a bit. I made sure to get plenty of oil there as Paige let out a soft moan. I worked my way down to Paige's ass, spread some oil on both globes of her ass and then stood to work the oil onto her legs. I started at her feet and then worked my way up to her thighs. \n\nI was beginning to get aroused as I worked the oiled up the inner thigh of one leg and then the other. As I rubbed the oil in Paige moaned and then spread her legs apart. I knelt between her knees and continued rubbing the oil up her thighs to her vagina. I put some more oil into one of my hands and the rubbed it into her pubic area rubbing between the lips of her vagina. Despite the oil I could feel Paige getting very wet as I continued rubbing her lips. After a minute Paige arched her back lifting pubic area off the chaise, turned her head to me, with lust in her eyes, \"Oh...please... fuck me!\"\n\nI knelt up taller and put my cock to her opening and gently slid into her honeypot! She was very slick from the oil and her own moisture...it felt heavenly. I began sawing in and out of her doggy style, relishing the feeling, as her vaginal walls seemed to grip my cock! After a while I grabbed the oil bottle and poured some more oil into the crack of Paige's ass. I set down the bottle, never losing my tempo as I ploughed into Paige's wonderful pussy, and began rubbing the oil along Paige's ass crack, paying particular attention to her little pucker.\n\nThis got Paige moaning and groaning while we fucked. After a while I rubbed my thumb around Paige's anus and then began to press it in! Paige howled, \"Oh fuck! That feels wonderful!\" As I worked my dick in and out of Paige's pussy I began to work my thumb in and out of her asshole, alternating between the two. Paige began rocking back and forth with my tempo making sure I got maximum penetration into her pussy! \n\nI felt that I would probably last a good long time and was savoring the feelings of my cock in Paige's pussy and my thumb being squeezes by her ass! After a while I could feel Paige's finger start to work on her clitoris! She started chanting, \"So good, so good, so good!\" with each stroke. After another little while Paige started having a series of orgasms! I could feel her squirting her juice on my balls as I continued pumping in and out of her pussy. After what seemed 30 minutes Paige turned her head to me and said, \"Fuck my ass! Please, fuck my ass!\" I pulled my cock out of her pussy, grabbed the oil, poured some on my erection and poured some more into the gape of Paige's ass. I then placed the head of my cock at Paige's ass and pushed forward. \n\nI slipped in a little easier this time but she was still very tight. I stopped pushing for a moment to give Paige a chance to adjust. Paige, however, kept pushing back against me as she said, \"Don't stop! I want all of you in my ass now!\" Very quickly I was totally embedded, once again, in her beautiful ass! The feeling was exquisite but I had no time to savor it because Paige was chanting, \"FUCK MY ASS! FUCK ME HARD! FUCK MY ASS! I began sawing in and out of Paige as she rocked back and forth into me. We continued for several minutes and then Paige screamed out, \"OOHH GGOOODD...III'MMM CUMMMIINNNGGG! I could feel her ass grip me but I kept on sawing in and out her ass as I felt my own orgasm starting to raise its head. \n\nI continued pounding away at Paige's ass and she continued her massive orgasm. Finally I felt my own orgasm begin and with a mighty groan let my sperm fly! I was, again, astonished at how my body kept producing large amounts of ejaculate. I felt like I was shooting into Paige's ass for several minutes. The feeling was so incredible that my eyes rolled up into my head and I just kept groaning.\n\nAfter the spasms stopped Paige turned around, bent over and sucked my still hard penis into her throat! She sawed it in and out of her mouth licking and sucking on every bit of it licking me clean. After a couple of minutes I pulled her up to me and kissed her. We held each other in our arms while kneeling on the flat chaise kissing deeply. After a few minutes I picked Paige up into my arms, turned and ran jumping into the pool!\n\nWe were in the shallow end of the pool so I was able to stand up right away. The water felt very refreshing on my hot sweaty skin. Paige emerged from the water a second later with her eyes wide and laughing. We splashed water at one another for a couple of minutes and then walked toward each other to kiss and hug once again. \"You are wonderful! I can't begin to tell you how much I love you\"! Paige said as we broke our kiss. \"I have never felt so good in my life!\" And then she kissed me again. A few seconds later we broke our kiss and I said, \"I love you too! I never thought that I would find love again and I never in my wildest dreams expected to find love with a young, vibrantly beautiful woman like you!\"\n\nTears began rolling out of Paige's eyes as she beamed at me and asked, \"Do you really love me? Really?\" I grabbed her, pulled her tight and kissed her with all of the passion I had. After a couple of minutes I again broke the kiss and said, \"Yes! I love you with all of my heart!\" and kissed her again. After a while we made our way out of the pool and I said, \"Work is going to be really interesting now! What do think our co-workers are going to say?\" Paige laughed and said, \"Who cares!\"\n\nWe spent the rest of the day lying out on the patio reading and talking and enjoying the warmth of the day with an occasional foray into the pool to cool off. As the afternoon wore on I suggested that we should go out to dinner and give our genitals a breather. Paige laughed at that and agreed. \"Where should we go? What kind of food do you want?\" Paige asked.\n\nI told her about a great Lebanese place that I knew about. Paige indicated she loved Lebanese. I told her, \"I should probably go home really quick, get a change of clothes and some toiletries since you aren't letting me go until late Monday.\" Paige responded, \"Well, if you have to...but I would prefer to keep you naked!\"\n\nIt took a while to locate the clothing I had arrived in the previous day. My boxers were still damp and messy so I drove home commando style! I took a quick shower, got dressed and threw another change of clothes and some toiletries into a small duffle. I drove back to Paige's and picked her up for our dinner date. She had showered too and was wearing some gauzy white pants and a similar blouse. As she walked I could tell she didn't have a bra or panties on by the way her breasts and ass swayed as she walked. I could feel my loins stir as I watched her. We got into my car and we drove to the restaurant. \n\nOur meal was great with grilled chicken kebabs, tabouli, rice, pita and hummus. After dinner we strolled together hand in hand through the downtown area and window-shopped for a while. We then returned to my car and headed back to Paige's place. When we arrived Paige asked if I would like a brandy or something. I told her some more of the wine we had last night would be great. Paige fetched a bottle and some glasses and we wandered into the living room. We turned on some soft music sat down and drank our wine.\n\nAfter a while and several of glasses of wine Paige stood up, held her hands out to me and said, \"Dance with me!\" I took her hands, kicked my shoes off and told Paige, \"I'm not a very good dancer so I apologize in advance for any damage I do to you feet!\" Paige laughed and took me into her arms and we began swaying to the music. As we danced I rubbed her back and kissed her neck. I could feel her breasts push into my chest as I pulled her close to me. We swayed together for a while and then Paige lifted her head up, looked into my eyes and smiled...she was so beautiful at that moment. I moved my head down and kissed her. \n\nWe swayed and kissed like that for quite a while. I was in heaven enjoying the music, a slight buzz from the wine and the feel of Paige's body next to mine. After a bit more time I started to feel that tell tale tingle in my groin as my penis began waking from its slumber. At the same time Paige suggested that we should go upstairs for the night. I readily agreed, took her hand and led the way to the bedroom.\n\nWe took turns in the bathroom relieving ourselves and brushing our teeth. I went first and then Paige followed me. I was down to my boxers when Paige emerged from the bathroom. She walked over to hug and kiss me. I began sporting an erection in earnest now, which caused Paige to giggle. \n\nShe then stepped back a couple of feet and began unbuttoning her blouse very slowly and sexily. When she got to the bottom button she stood straight up and smiled at me. Her tanned skin contrasted beautifully with the white of her blouse. I could see the inward halves of her breast as they swayed slightly with each breath she took. She then shrugged the blouse from her shoulders and allowed it to drop to the floor. She then reached down and pulled on the drawstring to her pants and loosened it around her waist. Still staring and smiling at me she let her pants drop to a heap around her feet and stood there naked. \n\nI couldn't help but let out a small gasp as I admired her beautiful body. She then stepped out of the pants that were puddled around her feet and took me in her arms to kiss me deeply once again. After a couple of minutes we fell onto the bed as we kissed our arms and legs intertwined. My hands kneaded Paige's back for a while and then worked down to her lovely rump. Paige rubbed my ass and back as well and then reached between us and grabbed my erection. She pumped my penis gently for a few minutes and then pushed me onto my back and quickly straddled me. \n\nWith her hand still holding my penis she worked her way over it and slowly sank her pussy down upon my erection. She sank very slowly until she, finally, had me buried completely into her pussy. The feeling was exquisite as she just sat there for a couple of moments. We both let out simultaneous sighs. Paige then lifted herself up slowly until my cock was barely inside her and then slowly lowered her self all the way down again. When she bottomed out she gave a little wiggle as if she was trying to work herself lower onto me. She then rose up again as before, very slowly, and then lowered herself again in the same way with the same wiggle when she bottomed out. She just stared into my eyes and smiled the whole time. It was the most erotic sex I had ever had.\n\nPaige continued this same slow tempo as we both savored the wonderful feelings it generated. After a bit Paige leaned down so that her breasts were in my face. She twisted slowly from side to side brushing her nipples across my face. I snagged one nipple in my lips and gave it a soft love bite. This got a low guttural moan out of Paige. I then snagged the other nipple and sucked on it for a moment until she pulled it away from my mouth. I then reached up and grabbed each of the breasts and kneaded them in the same, slow, sexy way that Paige was fucking me. \n\nI took each nipple in my hands and gently rolled them between my thumbs and index fingers making her nipples even harder. Again, Paige moaned loudly as I did this and then she whispered, \"Pinch them harder!\" with a sigh. I pinched her nipples a little harder and she moaned again. After a few moments Paige again whispered, \"Harder!\" I again added more pressure to her nipples. As I did this, her tempo began increasing as she slid up and down on my erection.\n\nAs the tempo of our fucking increased I began bucking up to meet Paige as she descended on me. I dropped her nipples and grabbed her waist to help pump into Paige harder and harder. It wasn't long until I felt my balls start to signal my impending orgasm. I cried out to Paige that I was about to cum and then released a torrent of sperm into her womb. Paige continued moving up and down on my still erect cock for a couple of more minutes until she announced her own orgasm. I felt her squirt onto my genitals as she cried out and trembled on me. \n\nFinally, Paige collapsed into my arms panting heavily and announcing that, \"That was wonderful!\" After her breathing normalized Paige looked up and kissed me hard and long. She then exclaimed, \"I love you so much!\" I kissed her and told her that, \"I love you too!\" After a while Paige rolled off me and then we spooned as we fell asleep...sated once again.\n\nSunday, July 4th dawned brightly but not too early for the two of us. I was the first to rise this morning. After relieving myself I threw on some boxers and dashed outside to fetch the newspaper. I then combed the kitchen to find everything to make coffee. After a while Paige came downstairs wearing an oversized t-shirt with her University name across the front. She came over to me and reached up to kiss and hug me. I could tell she had no bra on by the way her breasts swayed as she walked...a sight I would never get tired of. As I hugged her I reached down and felt her ass to discover that she didn't have panties on either. My penis twitched in my shorts!",
        "We made and ate breakfast, read the paper and drank our coffee. After we had managed to get through most of the morning we decide a shower would be in order. We went up stairs hand in hand, stripped off what little we had on and jumped into the shower. After we shampooed our hair and scrubbed each other's bodies we rinsed off. As I was about to leave the shower Paige grabbed my arm and said, \"Can we have anal sex again today?\" If I didn't have an erection before I certainly had one now!\n\nI told her we could have anal anytime she wanted. She smiled, then kissed me and said, \"Good! Would you like to help me clean myself?\" I told her I would love too. She then went into one of the bathroom cabinets and pulled out a hot water bottle with a long tube and nozzle. Paige said, \"This was hard to do by myself the other day so I thought it would be easier with two of us. I just want to make sure that I'm clean back there.\" I asked her what she wanted me to do and she said you can hold the bottle up and release the water and then stop it when I tell you to.\"\n\nWe decided to perform the enema in the shower where it would be easy to run things down the drain and keep clean. Paige loaded up the bottle, brought it over to me and then got down on all fours on the shower floor. I spread a little Vaseline on her beautiful sphincter and then, gently, inserted the nozzle completely into her rectum. Paige cooed and then said, \"Go ahead and release the water into me.\" I opened the clip on the tube and could hear the water rush gently into Paige's bowel. Paige called out to shut off the water which I did and then removed the nozzle. \n\nPaige stood up and walked back into where the jets of warm water were spraying in the shower and then squatted to release the water from inside her. I couldn't really see what was coming out but I could tell from the frown on Paige's face that it wasn't very nice. She then refilled the bottle, handed it to me and we repeated the process. After the fourth enema Paige was finally happy with the resultant discharge. \n\nWe then kissed quickly, turned and headed back into the bedroom. Paige jumped on the bed and stayed towards the edge on all fours. I admired here lovely derri\u00e8re one more time then knelt down and began kissing all round her lovely ass. I then pulled her cheeks apart and began licking up and down the cleft of her ass from her perineum to her tail bone. Every time my tongue slid over Paige's anus she moaned loudly. I then zeroed in on her lovely pucker and licked around the sphincter and shoved my tongue into her anal canal. I then began rubbing, her now, very wet vagina up and down the slit from het clitoris to her perineum. This got Paige bucking against my face and hand. After a while I pushed my thumb into Paige's pussy and rubbed my fingers on her clit. Paige increased her bucking and began crying out, \"OOhhh yyeeesss ttthhaat fffeels soooo goooood!!!\"\n\nAfter a few minutes Paige cried for me to put a finger into her ass. I grabbed the tube of lube and applied a dollop to her anus and another to my index finger. After rubbing the KY around Paige's anus I then inserted my finger. Again, I marveled at the wonderful feeling of her rectum as I slowly pushed my finger all of the way into her beautiful ass. I pumped my finger in and out with a slow and steady pace as I continued to pump in and out of Paige's vagina at the same time with alternating strokes. Paige altered the rhythm of her pushing against my hand to coincide with the finger that was pushing into and out of her ass. Each time my finger pushed into her ass Paige moaned loudly.\n\nAfter a couple of minutes Paige asked me to insert another finger into her ass. As I adjusted the hand in her ass I removed the one from her pussy and squeezed out some more KY onto her anus and onto my fingers. Once adequately lube, I pushed two fingers into Paige's ass and returned my other hand to her pussy. As I pumped in and out Paige let out a low growl and then said, \"Ooohh mmmyyy ggggoood! Thiiisss ffeeeellls soooo ggoooooooddd!\" I started picking up the tempo a bit and Paige matched that tempo slamming her beautiful ass on my fingers.\n\nI marveled at the sight of my two hands penetrating Paige's body with alternating strokes. My penis was so hard it was rubbing against the side of the bed as I continued stroking Paige's holes. I then decided to insert a third finger into Paige's ass and removed my thumb and inserted three fingers into her vagina. After a few strokes Paige began screaming out the she was cumming and I felt the telltale squirting from her vagina. I continued to stoke in and out of Paige's holes as she continued her strong orgasm.\n\nFinally, Paige screamed out for me to, \"FFFUUUCCCKKK MMYYYY AAASSSSS NNOOOWWW!\" I stood up, grabbed Paige by her hips, pulled her back to me and put my raging hard-on at the entry to her ass. When Paige felt that my cock was at her anal opening she pushed back against me and forced my penis all the way into her ass!! While I groaned with pleasure Paige screamed out, \"Tthhaaattt iisss ssooooo ffuucckkiiinnng gggooooodd! PPPooouunnndd my aaasssss nnnoooowww!\" I was gripped by desire and began pounding away at Paige's ass. I felt my eyes roll up into my head as I humped Paige with all I had. I was afraid that I might be hurting her but Paige kept crying out, \"SSSSOOO FFFUUUUCCCKKKIIINNNGGG GGOOOOOODDD!\" in a nonstop mantra!\n\nAfter several minutes Paige cried out that another orgasm was impending and then screamed, \"FFFUUUCCCCKKKK!\" as I felt torrents of her ejaculate drench my balls and legs! I continued pounding into Paige's backside until I too let loose another flood of sperm into Paige's bowel with a mighty groan! I fell forward as my legs gave out under me and landed on top of Paige as we both gasped for breath.\n\nI rolled off Paige and then crawled to the middle of the humongous bed and then rolled over onto my back. Paige crawled up to me and kissed me very hard. After a minute Paige then faced away from me towards my feet, straddled my head and then began licking and sucking my half hard cock! She then lowered her pussy to my mouth and I began eating her for all I was worth! \n\nHer mouth felt wonderful as she licked, twirled her tongue around the head of my cock and then engulfed my whole dick into her mouth and throat! As I lapped at Paige's pussy I began tasting the fruit of my loins as it dribbled out of Paige's ass towards her pussy and then into my mouth! It was very erotic! After a while I reached up and caressed Paige's ass cheeks and then gently massaged her asshole rubbing the sperm that was oozing out onto her ravaged anus. This caused Paige to moan while my cock was engulfed in her mouth, which felt wonderful on my now re-hardening penis. Paige continued moaning on my cock and I continued licking her pussy, sucking on her clit and rubbing her asshole. After a few more minutes I could feel Paige shudder and have one orgasm after another showering my face with her lovely juices! \n\nI was really enjoying giving Paige these constant orgasms while she kept sucking my cock. I held out for a good long time but the skills of her tongue finally got the better of me and I shot another load of sperm down Paige's throat. Paige collapsed on top of me and laid still for quite a while. Finally, she stirred and turned to lay on top of me face to face. We both smiled and then hugged and kissed for several minutes. We both fell asleep wrapped in each other's arms until the late evening when the sounds of explosions stirred us from our slumber. We hugged and kissed and then made off for separate bathrooms in order to relieve ourselves. \n\nWhen finished we wandered back downstairs, still naked, out to the pool and watched fireworks exploding into the air around us. We held each other tight enjoying the show. When we tired of the fireworks we wandered back inside. I took Paige in my arms kissed her and then told her, \"I love you so much! I don't think I could stand to be away from you for even a minute.\" Paige replied, \"I love you too and I feel the same way!\" I hugged her to me and gave her another passionate kiss and then pulled away slightly and asked Paige, \"In that case, would you do me the honor of becoming my wife?\"\n\nPaige's eyes went wide and her jaw dropped for a moment and then she wrapped her arms around me in a bone-crushing hug and then said, \"Yes, yes, yes! A million time YES!\" and then she kissed long and hard. As we broke the kiss we both said simultaneously, \"I love you!\" We laughed at that, turned around and walked upstairs holding hands. "
    ],
    "authorname": "Kalavo",
    "tags": [
        "first anal",
        "oral sex",
        "poolside sex",
        "love",
        "anal first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/jeff-and-paige-1"
}