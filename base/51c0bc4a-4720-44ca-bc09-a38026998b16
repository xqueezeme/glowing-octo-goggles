{
    "title": "Justin's Starring Role",
    "pages": [
        "It is gratifying to receive comments from readers who appreciate my stories. I enjoy sharing tales, such as the one here, of lusty ladies and their handsome men who delight in discovering the erotic pleasures borne of the inventive imaginations of women eager to orchestrate scenarios with their lovers because such play arouses them. So I hope you enjoy reading about Candace, a truly caring girlfriend, and her meticulous planning of the surprise awaiting her boyfriend Justin.\n\nOn a different note, there have been multiple inquiries about the existence in real life of the story site mentioned in my last Literotica posting, \"Modeling Her New Toy for Him.\" Alas, it is only the stuff of fiction, used as a means of supplying wonderfully naughty information about strapon play to the fascinated protagonist in the story who is hot to take her boyfriend in that fashion. A real-life web site dedicated to stories of women eager to fuck their men\u2014REALLY fuck their men\u2014yet to do so lovingly and reassuringly as both of them discover how incredibly intimate, erotic, and intensely pleasurable the act is would be a true source of inspiration, fantasy, and masturbatory gratification for both strapon wearers and strapon receivers. Such a site would not contain stories of women who need to dominate or humiliate, or men who desire that. (However, whispered questions such as, \"Do you like being my personal butt-boy?\" or nasty statements like, \"I love stroking my strapon cock deep into your asshole, baby, and I get off on your sexy moans and the way you're squirming underneath me when I fuck you like this,\"can certainly be part of erotic, loving man-fucking sexplay between lovers\u2014all without even a hint of the demeaning behavior so frequently a part of strapon fare.)\n\nPerhaps the existence of an eager readership for sexy, loving, man-fucking tales will birth such a site. Until then, one supposes that carefully culled Literotica stories and thread postings will have to suffice . . .\n\n***\n\n\"Please, baby\u2014do it for me! You don't know how incredibly hot it will make me just thinking about you having your pictures taken.\" Candace turned on the sofa and snuggled her breasts against her boyfriend. Even through her top and sweater, it felt good to press her nipple against his arm. \"And just thinking about all the women who will see the calendar and look at you, wishing they were in the picture next to you to feel your hard cock . . . damn! How hot is that?\"\n\nShe scooted one thigh on top of his, a prelude to straddling him. He needed convincing.\n\n\"They're only pictures, Justin. I could never even stand the idea of some other woman next to you when you're naked.\" Candace inched closer into position astride his lap. \"But, god\u2014the thought of all those coeds ogling your incredible body and hard cock and wishing they could play with you.\" She leaned into Justin's ear to whisper, \"For some reason that just drives me wild.\"\n\nJustin's resolve was not going to last long under his girlfriend's assault. Candace was the best thing that ever happened to him in every way. She was a bonafide TEN. Not a poorly lit dance club ten. Not a lingering glance at a lovely lady walking across the street ten. Not even a Santa Monica beach bunny ten. No, Candace was an in-your-face, little-black-dress, Playmate-of-the-Year TEN.\n\nWho made great Sunday morning pancakes that were just barely crunchy at the very edge because of how she cooked them in butter in the skillet.\n\nWho then served them to him using only natural maple syrup.\n\nWho turned every man's and woman's head in the place when she dressed up to go out to a concert or a play or even just a movie with him.\n\nWho gave the hands-down best blowjob any man could ever experience.\n\nWhose pussy tasted like . . . well, Justin knew how lucky he was. He worked to make Candace happy. He LOVED making Candace happy. That he was older by a few years and established in a job that paid well enough to treat her to surprises was perfect. He knew that he wasn't buying her affection\u2014Candace loved him\u2014yet making enough money to lavish her every now and then with a getaway or jewelry was as perfect as her light brown hair, dark brown eyes, pert breasts, and slim figure.\n\nShe was also the perfect mix of free-spirited college co-ed and down-to-earth, responsible adult who was mature enough to be serious about launching her career yet adventurous enough to sample all manner of life's treats along the way.\n\nBut in spite of all that perfection and how much he truly enjoyed making Candace happy, Justin managed some protestations about this calendar pictures thing:\n\n\"But there will be a photographer there. What if it's a woman?\"\n\n\"Doesn't count,\" Candace giggled. \"Except when I fantasize that I'm the photographer telling you the poses I want you in for the shots.\"\n\n\"But you said you can't stand the idea of other women next to me when I'm, uh-\"\n\n\"Shhh, baby,\" she cooed. \"The calendar is put out by a company that's been doing them for the past five years. It's really a professional, classy product. I'm sure nothing could possibly happen on the photo shoots of the guys in the calendar.\"\n\n\"But, Candace, what, what if I'm not really . . . uhmm . . . not . . .\" Justin searched for the words. Shit! How could he even say this to her? He swallowed hard. \"What if I'm not as buffed as the other guys in the calendar?\"\n\nCop out, Justin thought. Why didn't I just tell her that I'm worried the other guys might have bigger cocks?\n\nCandace leaned back a bit, now in position and completely straddling his thighs. She eyed him thoughtfully for a moment. The corner of her mouth turned up slightly, the barest hint of a smile that lingered for only a few seconds before she broke into a big grin.\n\n\"What are you worried about? No other man could possibly taste as good as you. No other man's nice, stiff, cock could possibly make me hotter or happier.\" She unbuttoned her sweater as she continued talking. \"Will some man in the calendar have a bigger dick? Yeah, probably\u2014there's always one picture of some guy, usually Mr. December, who is huge.\" She shrugged off the sweater. \"But your tasty cock is perfect, Justin. There IS something to be said for quality over quantity.\" Candace released her hair from the pony tail she'd been wearing, her chestnut locks shaking out to frame her beautiful face and gorgeous brown eyes. \"Besides, baby, your cock is plenty big anyway. Remember? We measured because I wanted to know how much was sliding into my pussy when you drive me crazy with that thing you do to hit the spot like nobody else possibly could. Seems like seven inches is way above average, at least, when you're talking about any group of men except ugly porn actors.\"\n\nHow do you always know EXACTLY what to say? thought Justin.\n\n\"So no woman is going to touch my man's privates, and the women who look at the calendar are all going to have their individual preferences no matter what\u2014black guys, guys with long hair, guys with sexy shoulders, blonde guys, guys who aren't circumcised\u2014Justin, I guarantee you no woman looking at the calendar is going to think that your cock isn't fantastic.\" Candace scooted off him, walked to the fireplace and flicked on the switch to bring a roar of flame to the gas logs. She turned back to him, stood in place, and pulled her top off, tossing it into a nearby chair. Wearing only her bra from the waist up, she moved back to his lap, resuming her position.\n\nNot fair! he thought. I'll do anything you say when you're naked.\n\n\"Justin, babe, when I take off my bra and you see how hard my nipples are, it's because of the thought of your gorgeous, naked body in a beautiful picture in a calendar that will be bought by hundreds of eager coeds who like to see naked men and make up stories in their heads about the guys in the pictures.\" She reached behind her back to undo the clasp on her bra. \"That is so hot. My man, my fantastic, sexy man, naked and starting all kinds of naughty fantasies in the minds of the women who see his picture.\" She slid her bra down her arms, tossed it aside, and shimmied just a bit to emphasize the shape of her breasts.\n\nShe wanted Justin to see how very hard her nipples were. She wanted him to stare at them.\n\n\"See, baby? I am so turned on by this. Have you ever seen my nipples this hard?\"\n\nHe couldn't resist teasing her. A bit of revenge for her pressure to do this crazy thing.\n\n\"Yeah, Candace. Last summer. You were wearing that yellow tube top made of the really clingy, thin material. We went to the grocery store. You took a long time trying to decide which brand of ice cream to get.\" He grinned at her as he reached his hands to her beautiful globes and pinched her nipples between his thumbs and forefingers. \"I'd say your nipples are about as hard now as they were then.\"\n\n\"Well, maybe,\" she pouted. \"But you couldn't do in the grocery store what you're doing to me now.\" Candace leaned back just a little bit, causing her nipples to be tugged forward in Justin's grasp. \"Oh, yeah, that feels good.\"\n\nHe leaned forward, releasing his grip, and took one of her hard nubs into his mouth, gently trapping it between his front teeth.\n\n\"Oooh, baby, you know I love that,\" she purred, head thrown back.\n\nJustin began a combination of sucking mixed with soft, teasing pinches of her nipple between his teeth.\n\nShe sucked in a big breath. Her stomach fluttered.\n\nSensing her reaction, Justin released her nipple and leaned back against the sofa cushion to look at Candace. A slight flush underneath her collarbone told him she was rapidly becoming too horny to do anything but fuck him to a glorious climax.\n\nIt was something he would love, as well.\n\nBut right now, he had one more objection to her outrageous request. Surely she couldn't think of a way to counter this final reason that he was reluctant to pose naked as Mr. Whatever-Month in a calendar with pictures of eleven other naked men.\n\n\"And you say this calendar is sold to college sororities as a fundraiser, huh? How do you know that's the only place where the thing is on sale?\" He placed both hands on her breasts, cupping them and toying with them. He knew she loved the warmth of his hands against her naked skin. \"How do you know that the calendar isn't peddled around at other places?\"\n\nHer puzzled look told him he might finally have a bit of leverage in his protestation about granting her request.\n\n\"You know good and well what I'm talking about, Candace,\" he said, his tone playful in spite of the words. \"You told me once that you and your girlfriends, way back in middle school when Playgirl was still on the newsstands, knew who bought it. You said yourself that when you and your friends used to sneak into your friend's sister's room and look at her issues, even then, at that age, you knew that gay guys bought the magazine, too, because they liked to see other men naked.\"\n\nInstantly, Justin knew he'd been wrong to even bring this up.\n\nCandace's face clouded. \"What are you saying?\"\n\nJustin tried backpedaling. \"You know I'm not saying there's anything wrong with people being gay. But the thought that, um, well, that-\"\n\n\"Oh, good grief, Justin!\" Candace blurted, interrupting his tortured confession. \"You're worried that gay men will see the picture and jerk off or something thinking about you?\"\n\n\"It's just that . . . no, there's nothing wrong with some guys being gay, but when they . . . you know, if they were seeing me and . . .\" Justin gave up and shrugged his shoulders, embarrassed.\n\nCandace continued looking at him, waiting for an answer.\n\n\"It makes me uncomfortable to think about that,\" he admitted.\n\n\"So what if your picture gets anyone who sees it sexually aroused? It matters whether it's a girl or a guy? Are you serious?\"\n\nJustin's uncomfortable glance away from Candace's gaze told her the answer.\n\nShe softened. \"Baby, the calendar's marketing slogan has always been, 'Twelve gorgeous guys to keep you ladies happy all year long.'\" She reached a finger under his chin to raise his gaze to hers. \"The sorority knows that it's the boyfriends of sorority members in chapters all over the country who are recruited for the photos. Nobody's going to think you're posing and hoping other guys are going to look at it. All those girls are going to be thinking, 'Damn! Who's the lucky sister with THIS guy as her boyfriend?' \"\n\nShe began unzipping his jeans. \"Besides, so what if gay men do see your picture and get hard? That's kinda hot to me, too.\"\n\n\"Candace!\"\n\nShe was now fumbling with his belt buckle. \"No, baby, I don't want to see you with another guy. Are you kidding? That's not how I think of you, just like I never, and I mean NEVER, think of you with some other woman.\" She leaned forward to slide her hands inside the waistband on both sides of his hips. \"But this whole idea of my man, my naked, handsome, sexy man, in a beautiful picture taken by a professional photographer . . .\" Candace squirmed the palms of her hands into his briefs and levered down the sides, causing his jeans and the briefs to slide down his hips, \". . . and then to think that this beautiful picture will show you with your gorgeous cock nice and erect . . .\" she grabbed the waist of his jeans and his briefs and tugged them completely down and underneath his ass, helped by the fact that Justin raised his hips to allow it, \". . . well, I don't care who it is looking at that picture, the thought of the person seeing MY man and getting hot, and then me knowing that nobody but me will ever . . .\" Candace leaned forward, scooting back on Justin's thighs and sliding off his knees to lower herself to the floor in front of him, \". . . have his naked body to play with\u2014Justin, it is so amazing and arousing to me that it absolutely demands that I do this . . .\" and she pulled his jeans and briefs all the way to the floor before lowering her head to his crotch and immediately engulfing his penis in her mouth.\n\nGod! thought Justin. No way will I be able to resist now . . .\n\nAfter a couple of minutes of her exquisite, deep-throat blowjob, Candace rose from her knees to shuck off her own jeans. She walked to the end table, opened the drawer, and pulled out a bottle of lube.\n\nJustin groaned. His penis, slick with her saliva, pulsed in anticipation.\n\n\"Why don't you scoot down a little bit to the edge of the cushion and get your pants and briefs out from around your ankles, baby,\" she said in a sexy tone as she squeezed out some of the lube onto the middle finger of one hand. \"I want your ass easy for me to get to.\" She smiled at him and licked her lips. \"You know where this finger is going, don't you?\" \n\nCandace waggled her lubricant-coated finger in front of him. \"I love doing it to you, babe. I just LOVE how it feels when you come and my finger's inside you. I'm going to slip this finger into your asshole right now, and I'm going to slide your cock down my throat, too.\"\n\nJustin's quickened breaths, eager actions to struggle out of his jeans, and the cute way he then slid down on the sofa so his tush was positioned nicely at the edge of the cushion reinforced for Candace the knowledge that he loved taking her finger-fuckings as much as she loved giving them.\n\n\"Oh, god, oh god, oh god,\" moaned Justin as she took his cock back in her mouth and teased his asshole with her lubed finger at the same time. \"Unnghh, oh, ahhh,\" were the unintelligible sounds of ecstasy as she slid her finger inside him.\"\n\n\"I love being inside you,\" she said, slipping his cock from her mouth. \"I love finger-fucking you in the ass and hearing your sexy moans, Justin. You're gonna squirm and moan for me right now, aren't you?\"\n\nThen she paused the motion of her finger as she slowly accommodated the entire length of his lovely penis down her throat. When she had her lips sealed around the base of his dick, she held him in her mouth like that, not breathing, and pushed her finger completely inside Justin's asshole.\n\nLittle whimpering sounds of pleasure was all he could manage.\n\nThen Candace began what produced for Justin the most intensely pleasurable physical sensations of their sexual couplings. She pressed the pad of her finger against his prostate, massaging there, and began bobbing her head up and down on his stiff cock, slurping and tonguing him with abandon.\n\nIn only a few minutes of this deeply intimate shared eroticism, Candace sensed that Justin was not far from a powerful orgasm. She pulled her mouth off his cock. With the hand at the base of his stiff penis keeping the purple head pressed lightly against her lips, she looked up into his eyes. \"So you'll be my little calendar boy, right?\" She wiggled her finger inside his tight, warm bottomhole as she asked the question.\n\nHis lust-fogged brain produced a fleeting thought: Is this what they mean by agreeing to something under duress? God, no\u2014can't be. This is the furthest thing in the world from duress.\n\n\"It'll make me so horny, Justin. I swear, thinking about your hot, naked bod in that picture, your cock sticking up all hard and long, your handsome face as you smile into the camera, and then thinking of how all the nasty coeds who'll see it will want to feel you, to touch you, to play with your cock, but they can't\u2014they can only do it inside their fantasies. Shit! I'll be so hot that I'll want to suck your cock and fuck you in the ass with my finger every time I see you, babe!\"\n\nAnd she lowered her head, again sliding his cock down her throat, prepared for the gusher of an orgasm she knew was imminent as Justin moaned and squirmed on her finger.\n\n\"Yes-s-s-s-s!\" was his exclamation as he sucked in a huge breath and drew up his shoulders, knowing that he was about to explode. Poised at the precipice of a rush over the edge of intense pleasure, Justin held his breath, his toes curling as he held back the moment only briefly, just long enough to say, \"Yes, I'll do it for you!\"\n\nIt was as if all the pleasure in the galaxy was pulsing back and forth between the sensitive bundle of nerves under the head of his cock and the spot that Candace's fingertip had been massaging.\n\nShe backed off his cock, knowing that these orgasms produced loads of his tasty cum. She let him spurt powerfully into her mouth, his snug warmth gripping and releasing her finger at the same time. Waiting for his contractions to subside, and becoming even more turned on by the sexual pleasure she was giving him, Candace finally swallowed and slid her mouth off his cock, smacking her lips in the process.\n\n\"Switch places, Justin. Quick! I have to have your mouth on my pussy right now!\"\n\nSummoning enough willpower to rouse himself from his blissed-out shivers, he slid down onto the carpet and turned around on his knees. Candace scrambled into position in front of him on the sofa, draped her legs over his back, and slid forward enough to place her gushing pussy right in front of his face.\n\n\"Eat me. Suck my clit. Please! Do it now, baby,\" she said, using both hands to pinch and tug on her nipples. \"God, I'm so hot. Lick my clit. Stick your fingers inside my pussy. Make me come!\"\n\nJustin tongued her, sucked her, fingered her, and generally slathered his mouth all over her vagina, sliding underneath on occasion to flick his tongue against her asshole as she purred encouragement. She ground her crotch into his face, desperate to force as quick an orgasm as she could trigger off.\n\nCandace did not worry that getting there quickly would be shortchanging herself. She knew that her orgasm would be massive, would shake her body and her mind. Whenever she fingered Justin and sucked his cock, it turned her on incredibly. Feeling his hot hole grip her finger in wave-like contractions as he spurted into her mouth was the most intensely erotic act she had ever experienced. She craved the sensations of being inside him, sucking him, making him come.",
        "And then a series of short, quick in-breaths told both of them she was about to have as intense an orgasm as he had experienced. Candace drew in a series of tiny breaths, not exhaling between them, purposefully drawing out the expectation, postponing the rapture she knew was coming.\n\nShe loved teasing herself as much as she loved teasing Justin.\n\nThen, in a massive rush of pleasure that started at her G-spot and quickly flooded every cell in her body, she shuddered, skin goose-pimply in excitation, and finally crashed head-long into the perfect orgasmic storm of pure animal lust mixed with an intense love for her man that was a cocktail of joy not to be found anywhere else.\n\n***\n\nLater, after the frantic and intense lovemaking, after the contented dozing in each other's arms, after the snack Candace fixed for them, she smiled at Justin as they sat at the little table in the kitchen. \"I have the contract they sent out to the sororities for this year's calendar. The calendar comes out every Thanksgiving, and the contracts arrive at the sororities each fall in early October.\"\n\nThe cat and mouse game was over. She had won. He knew she would. Pleasing her, making her sexually aroused\u2014that turned Justin on as much as anything she did to him. Would posing for this calendar get her hot and wet? If it would, then he would go through with it.\n\nThe idea wasn't quite so shocking to Justin by now.\n\n\"Contract?\"\n\n\"Yeah,\" Candace said, sipping some of her hot cocoa. \"Even though only twelve guys wind up in the calendar, all the men who have test shots taken have to sign the contract.\"\n\nJustin looked worried.\n\n\"It's for the models' protection, too,\" Candace responded. \"The contract has a section that guarantees that the photographer has to delete all the files of the pictures after the calendar is finished and that all the files of the guys who don't make it into the calendar are deleted, too.\"\n\nHis dubious look told her that Justin was well aware of how easily computer files can be copied. Stored. Pictures can be scanned. Emailed.\n\n\"It'll be okay, I guarantee,\" Candace said, playfully crossing her heart with Boy-Scout fingers and holding them up in the air. \"I can guarantee you that the picture files from the photographer always stay only with the calendar company, and if they pick you as one of the guys in the calendar, those files will be used to make the calendar and nothing else.\"\n\nHe harumphed. \"No way can you make that guarantee, and you know it,\" he said, taking a sip of his own cocoa.\n\nThe twinkle in her eye presaged her response.\n\n\"I know the photographer.\"\n\nHis eyes widened.\n\n\"Yeah. The calendar production company is here in Boston.\" She put her mug down and licked a bit of foam off the edge of her mouth. \"After last year's calendar came out, I looked them up from the production company information printed on the back of the calendar and found out they're local.\"\n\n\"You've been planning this for months, haven't you?\" Justin asked, his eyes narrowing at her.\n\nShe giggled. \"Well, maybe.\"\n\n\"You are a bad, bad girl,\" he said, shaking his head at her.\n\nMore giggles. \"Well, maybe.\"\n\nJustin continued looking at her, thinking. \"So you went to the production company and introduced yourself as a senior at BU who was thinking about asking her boyfriend to pose for the calendar?\"\n\n\"Something like that,\" she said, a satisfied smile on her lips as she drew her mug back to her mouth for more of the delicious cocoa.\n\nHis head continued in a slow side-to-side motion as he looked at her. \"You are so bad.\"\n\n\"I had to check them out, you know? I wouldn't send my stud muffin boyfriend into some sleazy operation. But it was only verification, Justin\u2014the calendars are so classy. No company that makes such a product could be second-rate.\"\n\nShe put down her mug, reached a hand across the table to grab his, and looked at him earnestly. \"I had them give me a tour, met the photographer, looked at their studio, everything. They're great! And it has to be this year, Justin\u2014it's my last year in the sorority.\"\n\n\"Hmmm,\" he responded, still amazed at how seriously Candace was taking this little adventure. \"You didn't hang around for a photo shoot, did you?\"\n\n\"Sure. Why wouldn't I? They were very nice to let me watch a shoot,\" she said.\n\nThe shock on his face startled her, then she realized what was going through his mind.\n\n\"A photo shoot of some kitchen gadgets they were doing for a corporate client, Justin. What did you think? A photo shoot of some naked guy?\"\n\nHis expression gave him away.\n\n\"Your mind never ceases to amaze me,\" Candace said. \"The company only does nude photos for the calendar. That's it. The owner is a sorority sister who graduated, like, twenty years ago, and she knows the calendar sales support the community projects the sorority undertakes each year.\"\n\nShe glared at him briefly, then smiled. \"It's okay. The company, the photographer, the way they handle the digital files of the pictures\u2014I checked all of that out, Justin. I get hot thinking about other girls getting turned on by your naked picture, but I'm just as much interested as you are in knowing that your beefcake debut is only for the calendar.\" She gave him a loving look, a look she knew would melt his heart.\n\n\"All right!\" he said. \"All right. You've convinced me about how careful you've been to check this out, to think it through.\"\n\nCandace clapped her hands in glee. \"Oh, baby, you're the best.\" She rose from her seat to stand next to him, lean down, and kiss him softly on the cheek. \"Starting right now, Justin, starting this very moment, I'll be dying in anticipation of finding out if you're one of the guys in the calendar. If you are, I'll be horny for weeks thinking about the comments the sorority girls on campus will be making about your naked body and your nice, hard cock.\"\n\nHe circled his arms around her waist as she stood next to him. Twisting in the kitchen chair so he could nuzzle through the opening in the thick robe she was wearing, he kissed her belly and drew back to look up into her eyes. \"Your sorority sisters have met me, Candace. Remember the May Fling last spring?. If any of them ever happen to see me somewhere around Boston after the calendar comes out\u2014if I'm in it\u2014they'll know what every inch of me looks like.\"\n\n\"And your point is?\" she asked, again teasing him.\n\n\"That's kinda embarrassing.\"\n\n\"For the girls or for you?\"\n\n\"Well, for me, for sure.\"\n\nShe leaned down and whispered into his ear. \"That's so sweet, baby. But you know what? It turns me on for some reason, knowing that you might blush when they see you.\"\n\nIs she ever going to stop with the surprises about this crazy situation? thought Justin.\n\nCandace inched back into her seat, pulling her robe back together and tightening the belt. \"Yeah, it's crossed my mind that Janet and Gloria and Betty and Courtney all will see you naked in the picture if you make it into the calendar. Maybe they'll even say something to me like, 'You said he has a nice cock, Candace, and you were right!'\"\n\nJustin could only look at his girlfriend, dumbstruck that this new revelation about getting turned on by other women seeing him naked was something she'd thought about so much.\n\n\"Last year I remember Brittney's boyfriend looked really good in his picture, and we all teased her about it. But you could tell she really liked hearing that her boyfriend looked good naked.\"\n\nTaking another sip of her cocoa as Justin continued to stare at her, Candace said, \"Maybe that's what got me thinking about how hot it would be for them to see your hard cock in a picture and know that I've had it down my throat and they never will.\"\n\nJustin slumped forward in mock amazement and dropped his head onto his forearms. \"God, Candace. You are just so bad.\" He raised his head to look at her. \"Where did this part of you come from?\"\n\n\"Can't tell you, babe,\" she answered lightly, \"but I've found I like letting the bad girl come out to play sometimes.\"\n\nHe stared at her, still amazed.\n\n\"Yeah, I told them that I deep throat you and that I have to work at it to take all of your gorgeous cock.\" \n\nJustin remained mute. Processing, or at least trying to.\n\n\"And you'll be happy to hear that the photographer is a woman. Nice lady. Maybe forty-ish. We hit it off. You'll like her, I think. I told her that I wouldn't be jealous of her seeing you completely naked with a hard-on as long as she took really great pictures and as long as I could be there for the shoot.\"\n\nNow it all fell into place for Justin. Candace had planned this completely, checking things out, building in safeguards, removing all the variables except for the one about whether he'd be chosen as a model.\n\nOr had she rigged that, too?\n\nShe rose from her seat, her mug in hand to move to the stove in order to pour a bit more hot cocoa from the pot warming there. Turning to look at him over her shoulder, she said, \"The bad girl isn't so bad, though, that she'd ever want any other woman, whether it's the photographer or some horny college coed, to get their hands on you.\" Walking back to the little table to resume her seat opposite him, Candace looked at Justin intently and said, \"You know I love you more than anything, Justin. You never have to worry that I'll be so bad that it would jeopardize our relationship.\"\n\nShe looked steadily into his eyes.\n\n\"You know?\"\n\nHe smiled. \"Sure. I know. And I love you just as much.\"\n\n\"So your loving, devoted girlfriend will always love you, never stray, and be your sexy, inventive lover,\" she responded happily. \"But now you know that part of the bargain is also bad little Candace who likes to appear occasionally and make things interesting.\"\n\nJustin grinned.\n\n\"Can you handle that?\" she asked.\n\nHe didn't answer. At least, not with words. Justin stood up, stepped to stand in front of her, leaned down to gather her up in his arms, and carried her to the bedroom.\n\n*** \n\nThey'd made love twice in the same day on many occasions. This time, though, the second coupling was so deliciously and completely draining that they both drifted into a deep sleep from which they didn't rouse until the next morning. Justin awoke to smell pancakes. Those glorious, delicious, fantastic pancakes. He was instantly ravenous.\n\nAfter a quick trip to the bathroom, he pulled on sleep pants, a thick cotton long-sleeved T, and some clog-like slippers and ambled into the little kitchen of the apartment they shared not far from campus and embraced Candace from behind as she stood over the stove. \"I love you,\" he whispered into her ear.\n\nShe smiled as she poured more batter into the skillet. \"There are a couple of pancakes warm and waiting for you, babe.\" She nodded to the table.\n\nHis mouth was watering as he slid into the chair to see a pat of butter melting in the center of the pancakes. As usual, the bottle of maple syrup was next to the plate.\n\nAnd there was something next to the syrup.\n\nThe contract.\n\n\"Model Release, Theta Tau Ceti Calendar Shoot,\" it read at the top. Justin glanced at Candace, who seemed engrossed in her pancake-making. He turned his gaze back to the contract, slid it next to his plate, and reached for the syrup.\n\n\"Model assigns to Silverstone Productions the right to make photographic images of him for potential use in Theta Tau Ceti's sixth annual Monthly Delights calendar,\" it read. Justin poured some of the delicious maple liquid over his done-to-perfection pancakes and continued reading:\n\n\"Model agrees to the following conditions:\n\n\"1\u2014No more than four days nor less than two days before the shoot, model will go to Lexi's Spa, 8038 Arbor Street (www.lexislexispa.info) to receive the treatment named, 'The Full Monty.' Said treatment is a waxing removal of hair from model's genitals, perineum, around the anus, and from additional areas on the buttocks and crotch such that presentation of model's penis, scrotum, and areas of interest to the calendar's purchasers are smooth, hair-free, and aesthetically pleasing to both sight and touch.\" \n\nJustin's laden fork was suspended in mid-air, not having made it to his mouth. \"Candace!\"\n\nShe pretended not to hear, bumping the whisk against the metal bowl to create a diversionary racket.\n\n\"2\u2014A determination of the thoroughness of the waxing and the resultant suitability of model's physical presentation for the calendar will be made by the photographer and her assistant prior to the session. Close inspection will be necessary to ensure model is hair-free as required, which helps avoid time-consuming and costly post-production digital image touch-up.\"\n\n\"Candace!\"\n\n\"3\u2014If, after thorough inspection at the beginning of the photo shoot, model is judged acceptably prepared for photographic renderings, he will be required to perform the following: a.) posing as directed by the photographer, no matter the position into which he is directed; b.) producing facial expressions indicating his pleasure at sharing his nakedness with the calendar's audience; c.) showing no hesitancy to communicate directly with and into the camera that his nudity and sexual arousal (see item [d.]) are displayed freely and openly so as to achieve the best effect for the calendar's audience; d.) producing and maintaining an erection at the photographer's direction.\"\n\nItem 3 was so outrageous, so incredibly worded, that Justin's intense reading meant he was unaware of Candace moving to the table and seating herself opposite him, her own plate of pancakes ready for butter and syrup. She said nothing, watched him with interest, tried to guess at what was going through his mind.\n\nAnd moistening just a bit.\n\n\"Can-\" Justin looked up, a yelp of disbelief interrupted when he saw his girlfriend pouring syrup on her pancakes across from him. \"This, this . . . 'contract' . . . are you crazy? Have you read this thing?\"\n\nShe smiled as she slipped a bite of pancake into her mouth. \"I guess you're reading the list of requirements, huh?\"\n\n\"Requirements? Is that what you call them? This says I have to get myself hard on command!\"\n\nShe looked at him, an expectant expression on her face as she chewed and swallowed. \"And?\"\n\nHe stared at her. \"And? And that means I'll have to masturbate in front of the photographer, that's what!\"\n\n\"God, that is so-o-o-o hot, baby,\" were the totally unexpected words from her mouth. Justin couldn't believe what he had just heard.\n\nHe slapped the contract down on the table. \"No way!\"\n\n\"You haven't read it all the way through, Justin.\"\n\nCandace lowered her eyes, feigning interest in spreading the melting butter across her pancakes. She did not want him to see her smile. She did not want to spoil the surprise.\n\n\"Why should I? Jerking off to get a hard-on in front of a woman I've never met before, who's seeing every inch of me naked\u2014and waxed, I might add!\u2014that's not enough to make me want to stop reading?\"\n\n\"I think you'll like the ending,\" was Candace's simple reply as she pushed a pancake around on the plate to sop up syrup, still not looking up.\n\nHardly believing he was doing it, Justin picked up the contract and began reading where he had left off:\n\n\"4)\u2014Model may take breaks as needed to fantasize or otherwise assist himself in maintaining a suitable state of tumescence for the camera. However, photographer will in no way assist, will remain completely clothed, will not speak of pornographic fantasies to him, or in any other manner attempt to contribute to model's production of an erection for the pictures.\"\n\nJustin glanced up. This was certainly NOT getting better. This crazy contract was being VERY explicit about 'model's erection' even if it had just proscribed any model-photographer interaction.\n\nCandace remained seemingly engrossed in the tendrils of melted butter swirling into the syrup on top of her pancakes.\n\n\"5)\u2014Providing needed assistance in producing and maintaining model's erection will be the responsibility of photographer's assistant, Candace Covington.\"\n\nJustin re-read item 5. Then he read it again. Eyes wide in disbelief, he slowly lowered the contract to see Candace looking at him with a big grin.\n\n\"Surprise!\"\n\nShe giggled. She laughed out loud.\n\n\"I am so ready to be the photographer's assistant, baby!\"\n\nHe shook his head at her. \"I ought to refuse doing this just because you have been so sneaky,\" Justin said, looking at her in mock disapproval. \"I ought to say no and then give you a bare-assed spanking for being such a naughty tease,\" he said, serious about the spanking if not about refusing to do the photo shoot. \"As a matter of fact, maybe a spanking is required as a sign that you'll not be this naughty again.\"\n\nThey both knew she WOULD be naughty again, and they both wanted exactly that.\n\nCandace rose, chin lowered in appropriate contrition, and turned around to lean over and then reach back to flip her robe up onto her back, exposing her firm, naked backside. \"I promise, after my spanking, Justin, that I'll not be so naughty again,\" she said in a little girl voice.\n\nThe role play excited both of them.\n\nHe slapped one cheek, then the other. Placing his palm flat against the curve of her bottom, Justin wandered a finger between her legs, testing for wetness there.\n\n\"You may turn around and resume your seat, missy,\" he said. When she did, he made of show of slipping his finger into his mouth. \"How long have you been wet, young lady?\"\n\n\"From the instant I laid the contract next to your plate,\" Candace giggled. \"I had such fun writing it, and the photographer said that it's definitely unique in all her years of shooting the pictures for the calendar.\" \n\n***\n\nThe trip to Lexi's Spa for his waxing had been about painful as Justin expected. Having his hair ripped away from his scrotum could never be a treat, no matter how attractive the pretty attendant in the tight shorts was who coached him through the procedure as Candace sat next to him.\n\n\"Damn, that was pretty sexy, watching her spread that wax on your balls and at the base of your cock,\" Candace said as they walked toward his car after leaving Lexi's. \"I mean, this whole thing is just the hottest\u2014seeing you naked in front of another woman. Why does this turn me on so much do you think?\"\n\nJustin was walking gingerly. It was clear why the contract specified a minimum two-day interval between waxing and photo shoot: the skin was pink and tender, even a bit swollen, on his balls, at the base of his cock, and, jeez, how humiliating was that part where the attendant had to wax away the hair on his perineum and his ass? All his private parts would be tender for several hours, at least.\n\n\"I'm glad someone's getting their jollies from this,\" Justin groused as he fished out keys from his pocket to unlock the door for her. \"That spa attendant doing what she did\u2014how did you sit there and watch that after having told me that you would never want any other woman to get their hands on me?\"\n\nCandace leaned up to kiss him before sliding into the car seat. \"Silly question, Justin. Doctors don't count, masseuses don't count, and waxing technologists don't count.\"\n\nAfter carefully getting behind the wheel and closing his door, Justin said, \"Then maybe I need to find the best-looking woman doctor I can to be my personal physician. You know, since doctors don't count and all.\"\n\nShe shot him a don't-push-it look.\n\n\"Anyway,\" he continued, non-plussed, \"This damned waxing.\" Justin grimaced as a bit of fabric somehow grazed a sensitive area in just the wrong way. \"A man in his natural state isn't sexy enough? Women need to see naked skin EVERYWHERE?\"\n\n\"You guys are such babies!\" Candace knew his female doctor remark was made in jest, but she was still a bit miffed. \"One little wax job and you're ready to declare that women should be happy with Bigfoot hair on a guy's balls. Tell me: would you rather see a hairy bush or a nice, smooth pussy, showing off the woman's slick vaginal lips and allowing you to see the tip of her little clit poking out from under its hood?\"",
        "She had a point. \"Well, I guess . . .\"\n\nAfter a few seconds of silence, Candace's resentment at her finac\u00e9's remark had dissipated. \"It makes the guys' dicks look bigger, you know.\"\n\nJustin turned to look at her, the car engine idling.\n\n\"Shaving or waxing makes your cock look bigger.\"\n\n\"See. I knew sorority girls were into big cocks.\"\n\n\"No,\" she laughed. \"That's not the reason why the calendar shows guys who've removed the hair on their stuff. You seemed so worried about how big your cock is going to be in the calendar. But it is true\u2014a guy's cock looks bigger without all that hair covering things up.\" She leaned closer to him and lowered her voice conspiratorially before continuing. \"But the real reason for smooth, hairless cocks and balls is that they're so much more fun to lick and caress, and one of the selling points of the calendar, after all, is for-\"\n\n\"I know, I know,\" Justin sighed as he pulled away from the parking spot. \"One of the selling points of the calendar is for the girls looking at the pictures to get turned on thinking about what they'd like to do to the guys who are smiling at them in poses where they're naked and their cocks are hard.\"\n\n\"Not that anybody ever says that's the reason,\" Candace joked.\n\n\"No, I imagine not,\" mused Justin. \"It's only supposed to be guys who get turned on by 'disgusting' pictures of the opposite sex naked and displaying every inch of themselves to the camera.\"\n\n\"Oh, you'd be surprised,\" answered Candace. \"I know plenty of girls who like seeing naked guys. I know girls who masturbate when they look at pictures of hot, nude men on the web. It's pretty easy to get to pictures like that these days, and we girls are a lot more liberated than our moms.\"\n\n\"You seem to know a lot about this,\" Justin said, grinning at her as he eased into the flow of traffic.\n\n\"Enough to know how silly the old double-standard is, that's for sure,\" Candace answered, becoming more earnest. \"There are even studies that prove women get sexually aroused seeing naked men. I've read the research as part of my class work.\"\n\n\"Psychology turned out to be a pretty interesting major, huh?\" he teased.\n\n\"All psych majors have to take the human sexuality class. So much of who we are is tied up with our sexuality, after all.\"\n\nJustin remained quiet. He was interested.\n\n\"Anyway, in these studies the female subjects put these instruments, kind of shaped like tampons, inside their vaginas and then watch a series of pictures. Every now and then pictures of nude men are shown. The instrument inside the women is able to show when they produce lubrication by bouncing a light inside their pussies and measuring reflectivity or something.\" \n\n\"And what did it show?\" he asked, intrigued by what the study found.\n\n\"That even if the women said they weren't turned on by pictures of naked men, even if they consciously believed that seeing guys naked didn't do anything for them sexually, they actually were aroused by seeing nude guys.\" She looked at him and arched an eyebrow. \"Wet pussies don't lie.\"\n\n\"I knew it!\" Justin said triumphantly. \"It's not just us neandertal guys who get turned on by porn!\"\n\n\"Don't look so smug,\" Candace scolded. \"Other studies show that the emotional aspect of sex really is a big deal for women. Certain brain chemicals that can be measured and brain scans, too, prove it.\"\n\n\"And I'll bet some day there'll be studies that prove men like the emotional part of sex, so everybody ought to just accept that it's all good.\"\n\nThey both laughed. \"It's all good,\" was a phrase used to hilarious effect by one of their favorite comedians.\n\n\"Yeah,\" said Candace, still giggling at the joke, \"it IS all good, no matter how you're wired. Even though the studies found that all women are hard-wired to get turned on by seeing naked men\u2014at least, good-looking naked men, which is what the women in the studies saw\u2014some women had more intense reactions that others. The researchers said that it's probably just like anything else: some people like green beans, some don't, but everybody loves to eat.\"\n\n\"So let me guess,\" Justin said, checking the rearview mirror before changing lanes, \"you like green beans a lot!\"\n\nShe laughed. \"Yeah, babe, I guess I'm a woman that really likes seeing naked men and likes the idea that women in general are just as naturally turned on seeing naked men as guys are by seeing naked women. It makes it okay to enjoy it\u2014seeing hunky studs with no clothes on and nice, hard cocks\u2014because it's evolution that has made things that way. No more silly guilt trips for the women of the world!\" Candace placed a hand on his thigh. \"The naked man I like to look at the most, though, is you, and you're the only man I want to make to make love to.\"\n\n\"Hmmm. That must make you, what? A green bean-loving woman, but only a Great Lakes green bean-loving woman?\"\n\nHappy that his good humor was showing through as she revealed more of her sexual self to him, Candace answered, \"I guess. Maybe I have more brain area devoted to processing visual stuff or something, but the sights, what I see, when we have sex is such a huge part of the turn-on for me. You know,\" she mused, now a bit anxious if her next revelation would be too much information but eager to see what his reaction would be, \"the one thing I regret when I'm giving you a blowjob and putting my finger inside you is that I can't watch as my finger slides inside your asshole. God, babe\u2014that has to be the sexiest sight I can imagine.\"\n\nJustin threw his head back against the headrest, quickly returning his eyes to the road. \"Dammit, Candace! Are you absolutely intent on driving me crazy with this conversation? Keep talking like that, and I'll get us killed.\"\n\nCandace smiled, a warm flood of happy feelings coursing through her body and then centering on her clit.\n\n\"It's true, Justin. I would love to be able to see that, but I can't when I'm sucking your cock.\"\n\n\"You do want it! You DO want to get us killed!\" he said in exasperation.\n\n\"Okay, okay. I'll stop with the talk, but only if you agree to let me slide my finger inside you when I'm not sucking you off so I can see how sexy it looks.\"\n\nHe glanced at her, shook his head in wonder, and said, \"You're incredible.\"\n\n\"Just visually wired, babe. I'm just a woman who enjoys seeing naked guys, feels no guilt about it, and for whatever crazy, psychological reasons get wicked hot from the thought of other women seeing her man naked with a hard-on in a picture and knowing that she's the only one who'll get to play with his gorgeous cock!\"\n\nJustin looked at her. He didn't have to say anything. She knew what he was thinking.\n\n\"Don't worry, baby,\" she said sexily. \"I'm gonna make sure your beautiful penis is so stiff that it's pointing to the ceiling for your photo shoot.\" She smiled seductively at him. \"I told the photographer that I could guarantee an incredible picture for the calendar because I know exactly how to make the model's cock hard for as many shots as it takes to get the perfect photo that will look fantastic blown up for a calendar that will be in sorority bedrooms all across the nation!\"\n\n***\n\nTwo days later, Justin pulled into a parking space in front of a warehouse-looking building in a part of town that he didn't know very well. Candace had navigated from the passenger seat, punching the address into the GPS and helping him spot the proper turn-ins when driveways were right next to streets.\n\n\"So this is where you came when you were planning all this?\" he asked, turning off the ignition.\n\n\"Yep. The studio is inside. They also have their post-production facilities here\u2014computer image manipulation, that kind of stuff.\" She opened her door. \"Silverstone doesn't actually print and produce the calendars, though.\"\n\nThe pretty receptionist smiled at them as they walked through the door which had a stylized double-S logo above the name, \"Silverstone Productions\" painted on the glass. \"Hi, Ms. Covington. Good to see you again.\"\n\nJustin shifted his weight nervously as they stood at the receptionist's counter. Silverstone Production's receptionist acted as if she and Candace were old friends.\n\n\"I assume this is Mr. Mabry?\" the receptionist asked Candace.\n\n\"Justin, this is Tabitha. She works the front desk but helps the photographer, too, sometimes.\"\n\nHis worried expression was priceless. And sexy. Candace couldn't help but moisten.\n\n\"I do help Liz in the studio with some of the shoots,\" Tabitha said, \"but I'm chained to the desk right now while Allison is out running an errand.\"\n\nAre all of Silverstone Production's employees women? wondered Justin.\n\n\"Too bad for you, Tabitha,\" Candace said, taking Justin's elbow to begin ushering him down the hall. \"It'll be a really, really good session.\"\n\n\"I know it will,\" Tabitha said, smiling at Justin as Candace steered the two of them toward a door several feet away.\n\n\"You sure seem to know your way around this place,\" he whispered to her as they approached the studio door. \"And did you have to make that remark to the receptionist about the shoot today being, 'really, really' good?\"\n\n\"I was only telling Tabitha the truth,\" Candace said, batting her lashes at Justin playfully. \"This is going to be the best session Silverstone Productions has ever had! Besides, it gets me hot that Tabitha knows you're about to be completely naked in a photo shoot.\"\n\nBefore he could say anything else, Candace opened the door to the studio. It was a large, open area with a corner set up as a lighting stage, obviously the place where his pictures would be taken.\n\nApparently the photographer had decided that a library setting, looking like something out of a Victorian mansion somewhere, was going to be a sexy backdrop against which to pose him. There was a dark cherry desk with a small globe and a wooden box sitting on it, a padded desk chair, and shelves of books all lending an air of authenticity to the fiction. The set was large, big enough so that it wrapped through almost all of three walls of this fake library/home office.\n\nThe photographer would be able to get shots from a lot of different angles and still capture only the set in the background.\n\n\"I agreed with Liz that you would look really hot in this setting,\" Candace said as they walked toward the stage, nonchalant in her use of the photographer's first name. \"I got to pick out a great looking silk robe that will be one of the props. We get to keep it. I paid for it as an early Christmas present.\" They were at the front of the set now, and Candace leaned up to kiss him on the cheek. \"Just seeing you naked in that setting,\" Candace said, motioning with her eyes toward the fake library, \"with your cock hard and pointing to the ceiling while Liz takes pictures of you will be MY early Christmas present.\"\n\nBefore he could grab her around the waist and hug her next to him to whisper something about how she was surely taking advantage of him, the photographer walked into the studio through the same door they had entered. She strode to the table in front of the stage where her cameras were laid out. \"Hello, Candace,\" Liz said with a smile. \"And I know who this is,\" she said, turning to Justin, \"and you were right. He has a handsome face.\" She stuck out her hand. \"Good to meet you, Mr. Mabry.\"\n\nHe shook her hand and didn't know if he was relieved or nervous that the photographer who would soon see him completely naked was a tall, trim woman in jeans and a blue cotton shirt who could easily be a model herself. Liz did look to be Candace's guess of \"forty-ish,\" but it was a very nicely put together 40. She had a confident air about her, and the way she moved communicated pure professionalism.\n\n\"You can take off your clothes in the changing room over there,\" she said, nodding in the direction opposite the stage. \"You did get waxed a couple of days ago, right?\"\n\nThe reality of what was about to happen struck Justin like a hammer blow in spite of all the mental preparation he had made, all the rationalizing he had done about how he could handle this, that it was silly of him to be nervous. \". . . take off your clothes . . .\" and \". . . you did get waxed? . . .\"\u2014could anything other than those two statements have more clearly communicated the certainty that he would soon be without a stitch of clothing on, trying to coax seven inches of hardness into his naked cock while this attractive photographer and his girlfriend collaborated to devise explicit poses for him to display himself in some photograph that would be ogled by who knew how many college co-eds seeing every inch of him? Every HARD inch of him?\n\nHe prayed that he would, indeed, be able to avoid embarrassment enough to have the ol' wood working properly.\n\n\"Um, okay,\" was all he could manage in response to Liz' indication of where he was to strip down to his birthday suit.\n\nCandace grabbed his hand. \"Thank you, babe, for this sexy, sexy thing you're doing for me,\" she said, kissing him on the cheek.\n\n\"You owe me one, big time,\" he replied, glancing nervously at Liz, who was readying her cameras and checking a light meter.\n\n\"And I promise to pay up!\" she answered with a big grin.\n\nAs Justin trudged to the changing room, Candace walked over to the table where Liz was meticulously going over her cameras, strobes, and other equipment.\n\n\"He's nervous, isn't he?\" Liz asked.\n\n\"Can you blame him?\"\n\nLiz laughed. \"Not a bit. I'll try to put him at ease.\"\n\nCandace turned to look at the set, eyeing it thoughtfully. \"This is great, Liz. Just like we talked about. I think Justin will look fantastic leaning against the desk, holding the picture frame and gazing at it. Everyone will know it's a picture of his girlfriend that he's looking at.\"\n\n\"It's a nice story captured in a single photographic frame,\" she answered. \"Boyfriend at home in his study, his girlfriend away. He looks at her picture and gets hard thinking of how much he wants to have sex with her.\"\n\n\"Very romantic,\" Candace said dreamily.\n\n\"And hot, too,\" said Liz. \"We know what sells these calendars, and Judy always wants the calendars to sell a lot. It raises more money for the sorority's projects.\"\n\n\"Don't worry,\" Candace answered happily. \"Justin is very hot. He should fit right in among the other hunks in the calendar, and all the sisters really appreciate the fact that Ms. Hagarty donates Silverstone's services each year to produce the calendar. She's one of our most generous alumnae.\"\n\nJustin opened the door at that moment and stepped into the studio. He was wearing the silk robe Candace had bought as one of the props.\n\n\"It's probably cool in here when all you're wearing is that robe,\" said Liz as she eyed her subject. \"The lights on the set will warm you up, though, while you're naked for the shoot.\"\n\n\"Okay,\" answered Justin in a small voice.\n\nGod, this is so embarrassing!\n\nHow did I let her talk me into this?\n\n\"You can keep the robe on for now. Is it okay if I call you 'Justin'?\" Liz asked.\n\n\"Yeah, sure.\"\n\n\"Great. Have a seat in the chair, Justin, and let Candace touch up your hair and check to see where we might need a spot or two of make-up so you look as sexy as possible for the camera.\"\n\nHis perplexed look let Candace know her boyfriend was a true novice at being a model.\n\n\"Right here, honey,\" she cooed, patting the seat of the chair. \"Liz told me what to do. I'm her assistant today, remember? Just like the contract says.\"\n\nJustin stepped onto the stage and walked to the chair. When he was seated, Candace brought a bag of whatever it was she would use as \"the photographer's assistant\" from the table where Liz' cameras sat and placed it on the desk next to the chair. She unzipped it, pulled out a comb and some hair spray, and began fussing with his hair.\n\nAfter leaning over from the side for a few seconds, she moved to stand in front of him, and insinuated herself between his knees, indicating he was to open his legs so she could stand close in front of him.\n\nIt was starting. The tease. He knew she was going to toy with him. She had talked constantly about her role as \"the photographer's assistant\" and how she would work with \"the model\" almost every day since he signed that blasted contract.\n\nTrue, there were worse things. More than once her descriptions had gotten both of them so worked up that a good session of humping and hard, athletic sex was inevitable.\n\n\"I am so lucky to have such a handsome boyfriend who is doing this for me,\" she said as she combed and sprayed his hair.\n\n\"As I said before,\" he answered, his eyes closed as she spritzed some of the spray across the front of his hair, \"you owe me a huge favor for this.\"\n\n\"Just name it, babe,\" Candace said, leaning back a bit to eye him critically, looking first at his hair and then his face. She reached into the bag and pulled out a small jar of something. Opening it, she dabbed a tiny amount on her fingertip and patted it against a spot on his jawline. \"Anything you want. I know how much of a stretch this is for you and that you're doing it just to make me happy.\"\n\n\"And horny,\" he said. \"Don't ever forget that the only thing that finally convinced me is that you're going to be insanely hot to have wild sex with me because of this.\" Justin smiled at her.\n\n\"Don't grin, you tease,\" Candace said. \"I need to get the make-up on this spot correctly, so wipe that smile off your face.\" Then she leaned close to him to whisper, \"But it does make me incredibly hot, Justin. I am wet right now and so excited, knowing that I'm about to see you naked in front of us, having Liz snap your picture.\"\n\nJustin felt his cock begin to stir.\n\nThank goodness. \n\n\"When you're done,\" Liz said, looking up from one of her cameras, \"have Justin throw his robe over the back of the chair as we planned for this shot.\"\n\n\"It's show time, baby,\" Candace said softly, screwing the top onto the jar of make-up and putting it back in the bag. \"This is so exciting!\"\n\nShe gathered up the bag and walked off the set.\n\nAfter setting the bag on the table, she stood next to Liz, who was ready with her camera.\n\nThey looked at Justin expectantly.\n\nHe swallowed hard. He felt his cock deflating.\n\nNo!\n\n\"Don't be embarrassed, babe,\" Candace said. She motioned for him to stand up.\n\nHe rose slowly, fumbled with the silk belt at his waist, got it undone and then eased one arm out of the robe. Then the other, shrugging off the last thing between his nudity and the unflinching gaze of the camera.\n\n\"Very nice,\" murmured Liz. Then, in a voice loud enough for Justin to hear, \"You are a handsome man, Mr. Mabry. We'll get good pictures today.\"\n\nShe's just being nice, thought Justin.\n\n\"No need to worry with the erection right now. I want to get some shots to verify the proper settings for skin tones, things like that,\" said Liz, moving on the set. \"My assistant today assures me that she is a practiced fluffer for the subject of these particular pictures.\"\n\nThe photographer smiled at him briefly, then looked down at the display screen on her camera.\n\n\"Fluffer?\" Justin mouthed silently toward Candace.\n\nSeeing a big grin spread across her face, Justin knew that whatever a \"fluffer\" was, it was something that was a part of why Candace got so turned on with this bizarre role play.\n\n\"You know, Justin. A 'fluffer.' That's the girl on the porn shoots who gets the guy hard before he goes onto the set to shoot the scene.\"\n\nHe stared at her, his mouth open. Then he remembered where he'd heard the term before\u2014some late-night interview of porn starlets on a racy radio talk show as he drove home from college on a Christmas break years ago.\n\n\"After Liz gets all the lighting and the camera settings just right, I'll get you nice and hard for your pictures.\"\n\nCandace was literally squirming in anticipation.\n\nAh, the reassuring stirrings in his nether regions. Maybe this wouldn't be so bad . . .",
        "\"Okay, Justin, I have what I need in order for us to get going. Let me describe how we want you for the shot. There's a little story that's being told in the picture, and . . .\"\n\nLiz explained the story, how she needed him posed and angled for the camera. Justin heard Candace break out into a loud giggle when he took the picture frame from Liz that was to be used as a prop for the shot and saw that it held a picture of Candace, naked, her nipples hard as she reclined against the very chair now on the lighting stage for this shoot. Her legs were spread wide, one hand was at her crotch as she fingered herself, and she was smiling seductively into the camera.\n\n\"We assumed this picture would be appropriate for the shoot,\" Liz said, looking toward Candace and smiling.\n\n\"I got really wet when we took the picture, Justin,\" Candace said. \"If you look close, you can see the light reflecting off the wetness of my pussy lips.\"\n\nShocked to hear his girlfriend talking like this in front of Liz, Justin could only look from the picture to Candace, then to Liz, then back to the picture.\n\n\"We shot it the other day,\" Liz said.\n\n\"I hired Liz to do a sexy photo shoot of me, babe, so I could give you an extra special present.\"\n\n\"You have more pictures like these?\" Justin croaked.\n\n\"Candace was an excellent model, Justin,\" Liz said. \"We did a nice series of erotic photos, some of them quite explicit. Though Silverstone doesn't do such jobs, I free-lance and occasionally do some nude photography. Men and women. Your girlfriend's wonderful ideas were so intriguing that I was happy to be the photographer for both the calendar shoot done by Silverstone Productions and for the additional work Candace described she would require.\"\n\nSomething in the way Liz briefly hesitated when she said, \"additional work,\" made Justin even more nervous than he already was.\n\n\"God, Candace\u2014what am I gonna find out next?\"\n\nHer only answer was a mysterious smile.\n\n\"Do you find the picture useful for . . . ummmm . . . helping you maintain an erection for us while we take your picture?\" asked Liz.\n\nJustin looked at her dumbly.\n\n\"We have hard copies sized to fit the photo frame of all the shots that Candace chose for her present to you,\" Liz said, motioning with her head to Candace, who bent to pick up a photo album lying on the table among Liz' cameras and other equipment.\n\n\"I was thinking about seeing you on the set, naked, with Liz taking your picture when we made all these, baby,\" Candace said, holding the photo album up and rifling through several pages as a dumbstruck Justin watched. \"There are lots of different pictures of me you can look at while Liz takes your picture. I'm naked in all of them.\"\n\n\"I'd say you've really surprised your boyfriend, Candace,\" Liz said, her camera hanging from her neck as she observed Justin looking in disbelief at the picture in his hands. \"That's good. As the shoot progresses, we'll constantly swap out the pictures. That should help keep him hard for us.\"\n\nJustin put the picture down on the desk. \"I give up,\" he said, shaking his head. \"I am absolutely amazed at what's happening right now.\"\n\n\"It'll get more amazing, I promise,\" said Candace slyly.\n\nBefore he had a chance to consider that remark, Liz announced that it was time for her assistant to prepare the model for the first shot.\n\nCandace stepped quickly onto the set, dropped to her knees in front of him, and slid her mouth around his cock to take it completely inside. In his non-erect state, it was easy to engulf all of him, but she knew that he would quickly begin to grow as her warm, wet tongue caressed the head and shaft of his dick.\n\nLiz raised her camera and snapped off a quick series of shots.\n\nJustin's eyes went wide and his mouth dropped open.\n\nCandace kept sucking.\n\n\"I am, after all,\" Liz said from the back of her camera, \"a professional who provides the services contracted for by the client.\"\n\nSnap. More pictures.\n\nCandace continued her oral assault, now sliding her head up and down on Justin's rapidly lengthening cock.\n\n\"Your girlfriend hired me for ancillary picture-taking which supplements that done for the calendar shoot.\"\n\nSnap.\n\nCandace paused from her fellatio to look up into Justin's eyes. \"I guess I forgot to tell you about Liz' free-lancing. She's done some shoots for one of those web sites I told you about.\"\n\nJustin simply closed his eyes and swallowed.\n\n\"The experience comes in handy for doing this annual calendar,\" Liz answered, lowering her camera as Candace resumed slurping on Justin's now-erect cock. \"Our owner wants a good calendar because she's so committed to helping the sorority raise money, and while she may not particularly advertise the fact that one of her photographers shoots for the Visual Erotica for Women web site, she always has me shoot the calendar to ensure the best results.\"\n\nHis cock now hard and pulsing, Candace pulled a soft cloth from her pocket and quickly wiped away any traces of saliva before stepping away.\n\n\"Okay,\" Liz said, moving away to frame the shot in her camera's display, \"get into position for the picture, Justin.\"\n\nHis cock began wilting quickly, and Liz stopped after four pictures.\n\nCandace stepped back onto the set. \"I know what's up,\" she said to Liz.\n\nLiz shrugged and walked back to the table to get a different camera.\n\n\"No, Justin\u2014none of the pictures Liz takes of me playing with you are for anyone but you and me to see,\" Candace said, looking at him intently. \"And, no\u2014I would never, EVER, ask you to post one of your pictures on the web site, no matter how turned on I get by the thought of women seeing my boyfriend naked.\" She placed a hand on his arm reassuringly. \"What's going on here is that I want Liz to get a fantastic shot for the calendar, and I know she will, but I've hired her on a separate contract from the Silverstone calendar contract to take pictures of the two of us.\"\n\nStill in shock, Justin just looked at her.\n\n\"Pictures of us that I'm going to love looking at when you're away and not next to me to play with, baby. Pictures that I'm going to show you on the big-screen TV in the den while I snuggle up to you and play with your cock as I tell you exactly why what's on the screen is so hot for me.\"\n\nShe looking pleadingly into his eyes. \"I will love it, and you will, too.\"\n\nCandace kissed him softly on the lips, drew back to see a flash of hunger in his eyes, then kissed him deeply, passionately, feeling him wrap his arms around her and return the kiss with just as much passion.\n\nHis cock began to swell between them.\n\n\"Okay,\" he said, breaking the kiss, \"but just how far is this going? I mean, are you going to talk dirty to me to keep me hard? What does Liz expect? Are you going to be up here sucking my cock and telling me that you want to feel me inside your pussy as a way to 'get a good calendar picture'? Tell me, Candace, how am I supposed to act?\"\n\n\"Just go with the flow,\" she said, looking into his eyes and fondling his cock. \"Just enjoy, baby\u2014this is my present for my gorgeous boyfriend!\"\n\nAgain, she dropped to her knees in front of him and began to suck him, this time playing with his balls in ways she knew Justin loved. It was only seconds before he responded.\n\nRising and again quickly wiping away any signs of moisture, she said, \"Oooh, it IS nice playing with your balls with no hair on them, baby. The next time I come up here, I'm going to put one of them in my mouth and gently run my tongue all over it. Do you think that will feel good?\"\n\nHis cock told her the answer.\n\n\"Excellent!\" said Liz, camera at the ready. \"Let's continue.\"\n\nWith Candace's nasty comment lodged in his brain, Justin had to concentrate to get into position for the shot. Thinking about anything BUT what she had said she was going to do to him was almost impossible.\n\nLiz got numerous shots.\n\n\"Whatever you did that time, Candace,\" the photographer said as she snapped away, \"do it again the next time he needs a little encouragement.\"\n\nCandace smiled broadly as she watched Justin, naked and with a rock-hard cock making it obvious that he was sexually aroused. It would be easy for anyone seeing the calendar to know that the picture in his hands was turning him on incredibly.\n\nThings were going beautifully.\n\nSo it continued. Liz coached Justin through many variations of his pose for the picture, and his sturdy cock cooperated for them all until it was time for a bit of physical stimulation to help things along again. Then, Candace would supply plenty of that stimulation, and Liz would capture such \"ancillary images\" with as much care as she took for the calendar shots.\n\nCandace was brazen during the shots she'd hired Liz to take of the two of them. Having worked out with Liz beforehand the action she wanted captured, many of the photos would show Candace looking into the camera as she mouthed Justin's cock. Some showed her fondling him as she stood next to him, whispering in his ear:\n\n\"God, this is making me so wet, Justin,\" she said, nuzzled against him at an angle that let the camera clearly capture his naked cock as she stroked it and cupped his balls. \"I can't wait for us to look at this together\u2014I am so wet thinking about playing with you while we look at these pictures.\"\n\n\"I'm beginning to think you must have some kind of fetish about this,\" he said, all the while enjoying how she was toying with his cock and balls. \"Have you always thought about this, or did this come on suddenly?\"\n\n\"Don't really know,\" she answered throatily, turning him a bit so the camera would see one of her hands cupping his balls as the other rested on the cheek of his naked ass. \"I've always loved seeing you naked, that's all I know for sure.\" She gripped his cheek tightly, making sure Liz' photographic skills would produce a picture that showed her turned on by her boyfriend's tight butt. \"So I guess my subconscious must have always been ready to get pictures of you nude as a way to feed that pleasure.\" Before releasing him, she put her mouth very close to his ear and said, \"So I don't think a desire to see you naked is a fetish, and I don't think wanting to see me playing with you is a fetish, either. But what I'm going to do in a little while in this studio . . . well . . .\"\n\nShe removed her hands, wiped away the bit of pre-cum that had leaked from the head of his cock, and walked back off the set.\n\nShit! thought Justin. How can she do that?\n\n\"Last time, I think,\" Liz said, raising the camera to look at the display. \"You've been about the best I've ever worked with in terms of keeping an erection, Justin, and your cock looks yummy in all the shots.\"\n\nThings had progressed to the point\u2014after nearly an hour of being naked in front of Liz and Candace, much of that time with an erection\u2014that Justin had started to \"go with the flow\" in the manner that Candace had suggested.\n\n\"Not hard to do, Liz, with my girlfriend up here sucking my cock and telling me all kinds of nasty things,\" Justin said, surprising himself at the explicit words out of his mouth to a woman he'd only met less that two hours earlier.\n\n\"Whatever works,\" the photographer replied, busy again as the professional taking pictures for a client.\n\n\"But the way she's been teasing me is going to have to stop,\" Justin said, looking at Candace. \"Your calendar shot is going to be of a guy with blue balls if I don't get some fast relief after this photo shoot.\"\n\nCandace thrilled to those words.\n\nShe blew Justin a kiss and quickly walked to the changing room as Liz snapped a final few shots. The last ones wouldn't have worked, anyway, what with Justin's quizzical expression prompted by Candace's trip to the changing room.\n\n\"We're good,\" said Liz, walking back to the table to put her camera down and reach to rub a spot on the back of her neck. \"You did great, Justin. I can guarantee you that when the sorority's Executive Committee shows up to review the shots of all the calendar candidates, your pictures are going to stand out. Your state of excitement as you gazed at the picture sure tells a great story, and your body, your, face, your butt and your cock\u2014they all photograph beautifully.\"\n\nLiz said all this in a matter-of-fact manner as she packed some of her gear into the cases on the table. She didn't even look at Justin in the process.\n\nHer comments, though, snapped him back to the reality of what he'd just done and the consequences: college co-eds seeing him naked, with a hard-on, specifically for the purpose (at least according to Candace) of jump-starting female fantasies of him as THEIR boyfriend-lover-sextoy-whatever, putting THEIR hands and mouths on his cock, sliding THEIR wet pussies down onto his erection, and riding him to climax.\n\nWhat a crazy mix of arousal and anxiety!\n\nHe must have lost himself in those thoughts for a minute or two, because Candace's voice roused him. She had stepped out of the changing room and was walking toward the set.\n\n\"Let's start with his robe on, Liz,\" she said, smiling.\n\nJustin's expression was priceless. He was mesmerized by the sight of his girlfriend.\n\nCandace was wearing a dress that looked custom designed for something like a James Bond movie, where the hottest woman at the exotic locale dresses explicitly to seduce Bond by sashaying into a casino full of beautiful people dressed in exquisite attire. Elegant and glamorous, she looked stunning. The dress and strappy, sexy heels were black. The tasteful necklace, earrings, and bracelet were gold.\n\nHer beautiful smile made her look like the sexiest angel and/or the naughtiest devil he had ever seen.\n\nHow had she changed so quickly? How did she get her hair like that so fast?\n\nSilverstone's receptionist emerged from the changing room behind her. She smiled at Justin, glancing briefly at his naked cock as she did so.\n\nReminded of his circumstances (and of the second door into the changing room he had noticed when he undressed there), Justin blushed at the prospect of yet another woman in the studio as he stood before them without a stitch on. He hastily reached for his robe.\n\n\"Candace?\"\n\n\"It's okay, baby. We're totally finished with the calendar shoot. Now we're completely on my contract's time.\"\n\nThe receptionist walked to the table where Liz had now finished stowing her cameras. Reaching to a different box, this third witness to Justin's nakedness drew out from between layers of gray, spongy padding what was clearly a microphone.\n\n\"Tabitha can do receptionist duties when she has to fill in,\" Liz said over her shoulder as she walked to an equipment locker against one wall, \"and she also has make-up artist skills, but her primary job here is as A/V tech for our video shoots.\"\n\nTabitha smiled at him as she plugged a cord into the base of the mic.\n\n\"Okay,\" said Candace, stepping beside Justin, \"though it's true that the only time Silverstone does any kind of erotica is when they shoot the calendar, the TTC sister who owns Silverstone owner allows Liz to do some of her free-lance work here in the studio.\" She leaned close to him and said, \"Liz won an award last year as the producer of one of Femme Features' videos. They specialize in erotica aimed at the female market.\"\n\n\"Satisfied customers let us know we're doing things right,\" Liz laughed.\n\n\"Too far, Candace, too far!\" he announced. Liz and Tabitha stopped what they were doing, interested in whether they should continue or simply call an end to the day's work.\n\nJustin continued. \"You don't for a second think that I'm going to do a video for other women to-\"\n\n\"Shhhh!\" Candace placed a finger against his lips. \"Of course not! This is my contract, remember? Liz and Tabitha are working for me now, and I've specified that ALL the images and video shot today except for what winds up in the calendar are for me alone. This has nothing to do with anything except my present for you.\"\n\nHe simmered, looking at her.\n\n\"Please, baby! I know I'm springing this on you, but I figured after you got comfortable as a nude model for the calendar shoot you'd be more open to the idea of being in a video with me.\"\n\n\"You tricked me! Why'd you have to go about it like this? You couldn't have just asked me?\"\n\n\"Justin, please. Listen for a minute, baby.\" Candace glanced nervously at Liz and Tabitha, who were on hold before proceeding any further. She lowered her voice and moved close to him, pressing against the silk robe that Justin had donned and belted tight. \"You know you never would have agreed to having a professional video made of us having sex. It was months before you agreed to let me use my little camera to get those two hot sessions that we've had fun looking at together, remember?\"\n\nCandace was masterful at talking her boyfriend into things.\n\n\"Oooh, baby, you know how hot I was when we were making them. Remember? You even said yourself that my pussy had never, ever been wetter.\" Candace sensed that she was making some headway. She continued, whispering. \"I've admitted to you that I'm just a really visual person. I accept that about myself. I want you to accept it, too, Justin. This doesn't mean that I don't love you unless I have pictures and videos of you or a mirror on the ceiling or anything else. This is just me not being afraid to be completely open with you about my fantasies, what turns me on.\"\n\nThe furrow in his brow softened a little.\n\n\"I've never told my fantasies to anybody else, never trusted anyone enough. I trust you, though. I trust you enough to know about what turns me on, even if it is a little kinky by some people's standards.\"\n\nThen, she sealed the deal:\n\n\"Please don't reject me, baby. This may seem like I'm asking a lot, that I might have been sneaky and tricked you into things, but, Justin, I am so hot for you. I think you're the sexiest man alive. Since I'm such a visual person, it's only natural that I want to look at you, want to see us together, want to have pictures and vids to turn me on. I don't want that with anybody but you, baby, I swear.\"\n\nShe was so earnest, so open, that Justin's anger evaporated. He smiled at her.\n\nCandace's knees almost buckled in relief.\n\n\"Candace, this is so outside of my comfort zone. I can't believe that I actually went through with that photo shoot, so-\"\n\n\"And you were fuckin' fantastic!\" she interrupted enthusiastically. \"You heard Liz, who's shot tons of naked men, say how great you were, how good the pictures will be.\"\n\nIt was like a three-year-old pulling daddy into the ice cream parlor.\n\n\"As I was saying,\" he continued, a note of exasperation in his voice, \"you have no idea how NOT me it is to be doing this. Candace, please, PUH-LEAZE, tell me there's absolutely no way that those pictures go anywhere except where they're intended. One and only one shot will go into the calendar if I'm chosen, and ALL the rest of the files, both the other calendar shots and all those 'ancillary' shots you paid for, HAVE to come back to you with some kind of guarantee that Silverstone or Liz or Tabitha\u2014whoever\u2014can never possibly see them again.\"\n\n\"That's always been the agreement, Justin. My contract with Liz and the calendar contract stipulate all that stuff very carefully.\"\n\nHe continued pressing his demands. \"But now, Candace. Damn! Now there's ANOTHER woman who's seeing me naked.\" Justin glanced nervously at Tabitha, who, like Liz, had discreetly turned her back to the two of them. \n\n\"And this 'video'\u2014IF I say I'll do it?\"\n\nHer spirits soared. \"Same thing.\"\n\nHe looked at her, not saying anything.\n\n\"I got all dressed up for you.\" She twirled in front of him, showing off the gorgeous dress, how very sexy she looked in it.\n\nStill not an acquiescence from him, but Candace knew she would get it.\n\n\"I'm not wearing panties.\"\n\n\"Oh, god,\" Justin groaned, throwing his head back to look briefly at the ceiling before returning his gaze to Candace. He pulled her to him, hugging her tightly, his lips pressed against her forehead. \"Tell them to keep setting up.\"",
        "Candace gave a thumbs-up sign to Liz and Tabitha, grinning broadly at Justin. \"You are the absolute best! I'm gonna make you so happy, I promise! And I'm gonna fuck your brains out for the camera!\"\n\nJustin was warming up fast now that he had relented. \"So where's my costume? Seems it's only fair that I start out in something to match your sexy outfit.\"\n\n\"You're wearing your outfit.\"\n\nA puzzled look crossed his face.\n\n\"Oh, except for the thong.\" She turned to call to Tabitha. \"I forgot to bring his thong with me from the changing room.\"\n\nThe A/V tech who also did hair and make-up answered, \"No problem. I'll get it.\" Tabitha put down the piece of equipment she was working with and walked to the changing room.\n\n\"So my outfit is this robe and a thong? And you're dressed like that?\" Justin's puzzled expression matched his tone of voice.\n\n\"One of my fantasies for years, baby, has been for me to be wearing a knock-out sexy dress and accessories while I play with a nude man.\"\n\nA worried look crossed his face.\n\n\"Only you, though,\" she added hastily. \"MY naked man to play with. That's part of the fantasy. But don't worry. I'll get naked, too, pretty damned fast in this video.\"\n\n\"So you have a whole scene planned out?\"\n\n\"Don't make it sound so clinical, babe.\" Candace slid her hand around his waist, then let her hand drop to his butt, caressing the silk that covered his naked ass. \"Yeah, I admit that this is a way for me to act out one of my fantasies for the camera, but I would never do such a thing if it weren't with my man and if it weren't because I want us to watch it together.\" She squeezed his firm butt. \"And it's not like this is some acting job where you have to be a certain way because it's my fantasy. The fact that it's you is exactly what MAKES it my fantasy. All you have to do in this video is to let me take the lead, be your sexy, natural self, and to moan and groan and squirm when I make you feel good.\"\n\n\"Candace, you are such a manipulator. You have schemed and plotted and cajoled and teased and pleaded, and every step of the way I've been your unwitting puppet, winding up precisely in each and every orchestrated scenario just as you've planned all along.\"\n\n\"It has been a lot of fun,\" she replied, a twinkle in her eye. \"But only because you're so special and you get me so sexually revved up, Justin. That's the reason I've worked so-o-o-o hard to figure out how to make all this happen.\"\n\nFlattered yet still feeling manipulated, he looked at Candace, a part of his brain debating whether, in spite of his assent, being in a video having sex, even if it was with the love of his life, was something he could go through with.\n\nLiz passed by at that moment\u2014had Candace put her up to it?\u2014and said, \"We do very good video work, Justin. You'll be really pleased with the result. When the two of you are celebrating your fiftieth wedding anniversary, you'll be glad you did this and can enjoy the sexy memory together.\"\n\nCandace looked down quickly.\n\nHad she confided in Liz that she hoped Justin would someday ask her to marry him?\n\nNot that it hadn't crossed his mind . . .\n\n\"Yeah,\" added Tabitha, who had returned from the changing room carrying a pitifully small piece of fabric that must his thong. As she stepped on the set, she said, \"We're known for putting out classy, well-shot, high-production-value erotic videos for women. You'll love how good you look when you see yourself in this video.\"\n\nIs everybody in this damned building listening in on this conversation? wondered Justin.\n\nTabitha held out the thong for him to take.\n\n\"I'll get you naked quickly in the video, baby, but I want to be able to slowly peel down a thong from your sexy, naked ass for the camera to capture. It will look so hot! I want a thong because it will show off your gorgeous butt as I strip off the last piece of clothing that my nude sextoy is wearing.\"\n\nThere was a hungry tone in Candace's voice.\n\nJustin didn't know what to think about that.\n\nHis cock did, though.\n\nHe took the black thong from Tabitha. It had some kind of mesh-like front, obviously meant to titillate with glimpses of his naked cock showing through.\n\n\"It was fun shopping for your costume,\" Candace giggled.\n\nJustin rolled his eyes.\n\n\"I think we're ready,\" Liz said, motioning to Tabitha to move the boom mic into place so it was hanging over the spot where Candace and Justin were standing in front of the desk on the set. \"The scene starts with you wearing the thong and the robe, Justin, so go ahead and put on the thong.\"\n\nCandace's grin was bigger than he had ever seen it. She was excited, happy, turned on, eager\u2014all at the same time. And in her stunning outfit, she looked sexier than he'd ever seen her.\n\nAs Tabitha adjusted the mic, headphones over her ears as she positioned everything, she said, \"Go ahead and say something, Candace. I need to get audio levels. Do a little bit of whatever it is you'll say when we start the scene.\"\n\nA sly look crossed Candace's face as she watched Justin struggling into the thong underneath his robe. \"I wanted it nice and snug to show off your package,\" she whispered as she turned to Tabitha. \"Okay. When the scene starts I'll say, 'Ah, Mr. Mabry. Good. I'm glad to see that Serena's recommendation was accurate. You're a handsome man. I will enjoy playing with you.'\"\n\nJustin swallowed. He looked in amazement at Candace as she continued the mic check.\n\n\"Serena says you have a nice butt. Turn around and lift your robe so I can see.\"\n\n\"Candace,\" Justin whispered warningly.\n\nShe ignored him. \"How's that, Tabitha?\"\n\n\"Great. We're good.\"\n\n\"Candace,\" Justin said urgently, \"you better tell me what's going to happen in this scene. What the hell have you planned?\"\n\n\"What I've planned, babe, is for you to be my paid-for plaything, my toy, in the video, and that you've come with a recommendation from 'Serena,' who has recommended you to me. God! This is so hot now that we're here doing this!\" She was almost breathless.\n\nNo longer caring that Liz and Tabitha were not only in earshot but could hear all their conversation with the advantage of the mic's amplification, Justin said, \"This is starting to get kinda weird, Candace.\"\n\n\"No, not even a little bit,\" she quickly answered. \"We've role-played me being a rich aristocrat who secretly hires a gigolo to have sex with, remember?\"\n\nThe scene came back to him. It had been several months ago when they giggled their way through a role play that had ended in a sexual coupling that Justin remembered because of how wet Candace had been when he slid inside her. The scene they concocted on that occasion was different in several significant ways, and Justin hadn't put two and two together yet. Now the similarities flooded his brain. But the overwhelming part of the memory consisted of two things: how very aroused Candace was, and the mind-blowing orgasm she coaxed from him as the scene built to its conclusion.\n\n\"So you've already read for the part,\" Candace said to him with a grin.\n\n\"Anytime you two are ready,\" Liz said, a video camera resting on her shoulder. \"Justin, Candace already knows how this is going to work, but you need to know that we're doing a two-camera shoot during parts of this. Tabitha will set the mic, and until the mic needs to be re-adjusted based on where you two are on the set, she'll shoot the two-camera stuff. Just ignore us\u2014we'll worry about keeping things framed the right way. All you need to do is to be Candace's toy for this scene.\"\n\nHis face flushed red in embarrassment.\n\n\"Good! Good!\" said Liz excitedly. \"Catch that now, Tabitha! The embarrassment is part of the scene.\"\n\nWhatever that meant, Justin knew that he would be flushed for at least a couple of minutes. How embarrassing! This video would show him as a willing male sextoy, dressed exactly like such a toy would be dressed, and being used for the gorgeous lady's pleasure who had hired him.\n\nHow could such a situation be both embarrassing\u2014his face was still flushed\u2014AND arousing?\n\n\"Ah, Mr. Mabry. Good. I'm glad to see that Serena's recommendation was accurate.\" Candace fell immediately into character, starting her dialogue again.\n\nThings quickly got very interesting as Candace's words prompted memories of that intensely arousing role play she had orchestrated several months ago. His cock stirred within the tight confines of the thong.\n\n\"You're a handsome man. I will enjoy playing with you. Serena says you have a nice butt. Turn around and lift your robe so I can see.\"\n\nCandace stepped slightly back in order to better appreciate the view as Justin turned around, now resigned to the scenario being played out but fast becoming incredibly turned on, spurred by the recollections of their sexy play months before. He lifted the back of the robe to expose his naked cheeks, the thin strip of fabric hidden between his muscular globes.\n\n\"Lean forward,\" Candace said.\n\nHe did, realizing that the pose was designed explicitly to emphasize his ass, to show it off to Candace.\n\n\"Ummmm, very nice,\" she said. \"Wiggle that cute little butt for me, Mr. Mabry.\"\n\nHe did. She stepped close to him and placed a hand on one cheek, gripping and squeezing. \"Serena said you enjoy exposing this pretty little bottom. I like that. Pretty little boy butts are very sexy playthings.\" Candace continued playing with his ass as she kept up her nasty dialogue. \"You're a handsome toy, Mr. Mabry. Turn back around.\"\n\nHe dropped the robe, straightened, and turned back around to look at Candace.\n\nMy god! She was sexy and beautiful and alluring in that outfit!\n\nShe began circling him. He was trapped prey in this scenario. Reaching a hand to his waist, she let it slide around him as she placed one stiletto-heeled foot in front of the other, panther-like in her deliberateness. Circling slowly, she asked him a series of questions. \"Do you enjoy a woman who knows what she wants sexually, taking it from a man, Mr. Mabry?\" Not waiting for an answer, she continued. \"What about being naked in front of me while I'm still wearing my clothes? Does that make you uncomfortable?\" Pausing before her next question, she stopped in front of him and slipped a hand inside his robe to pinch his nipple between her thumb and forefinger. \"Does a role reversal worry you, Mr. Mabry?\"\n\nJustin gasped. Yes, the nipple pinch would have caused the reaction, but even in the absence of her touch, Candace's words, 'role reversal,' held ominous implications that would, alone, have caused his reaction.\n\n\"I like that the money I've paid for your time tonight has defined clearly who's making the rules for our little game.\" She stepped close to him, slid both hands inside his robe to pull him tight to her, and then kissed him passionately. \"You taste good, too.\" Stepping back, she untied the fabric belt on the robe. It fell open in the front. Candace eyed him hungrily up and down, her gaze lingering at his crotch. \"Good. Very good. Serena promised that I would like your body. She says you work out to keep those abs nice and sexy. I see, too, that you've been thorough in wearing the attire I requested. The thong looks quite fetching.\"\n\nI'm glad it looks good, Justin thought to himself, because it sure as hell doesn't feel all that good.\n\n\"Drop the robe.\"\n\nJustin was aware of Tabitha moving around them, capturing with her camera a different angle from the one Liz was shooting. When he shrugged off the robe, he imagined Tabitha's camera zooming in on his crotch, emphasizing the growing bulge there. His eyes remained on Candace, however.\n\nShrugging off the silk garment, he now stood before Candace in only the thong. She was leaning against the desk, eyeing him thoughtfully. Again she ordered, \"Turn around.\" \n\nLiz and Tabitha panned up and down Justin's body, Liz from the back, Tabitha from the side.\n\n\"Bend forward, hands on your knees, Mr. Mabry. Arch your back so it's very clear that your firm, naked backside is what you mean to be the center of my attention, and entertain me with your beautiful ass.\"\n\nIf Justin were embarrassed before, it was nothing compared to being asked to put on a slutty display in a position that thrust his ass out, making it obvious that he was presenting his butt and moving it around for no other reason than to sexually arouse Candace. And\u2014god!\u2014there were two other women seeing him do it!\n\nIs this what it feels like to be a sex object? he wondered as worried thoughts raced through his head, competing with other, incredibly arousing, thoughts. He loved making Candace hot and wet, but putting on a display like this . . .\n\nHis stiff cock provided the answer that his subconscious served up: Who cares if Liz and Tabitha were witness to his show? He was incredibly turned on by Candace's little scene, and making her horny was getting him very, very eager to fuck her.\n\nJustin did exactly as Candace commanded, just as he had during their earlier, private, role-play.\n\nHe put on a thoroughly shameless display.\n\n\"Oh, yeah, that is very nice,\" Candace purred as Justin continued rotating and shimmying his ass for her. \"I like seeing that sexy, sexy butt, Mr. Mabry. May I call you Justin?\"\n\nHe stopped and straightened to look over his shoulder at her. \"Yes. Please.\"\n\nShe leaned forward and slapped him smartly on the ass. \"I didn't say to stop. I only asked a question.\"\n\nCandace seemed to be enjoying his show, but Justin wondered about what was really going through her mind. And Liz and Tabitha\u2014what were they thinking as they filmed Candace's fantasy?. Did he look silly? Was Candace just playing her part with her comments about his show, or was she really turned on by watching him display his backside for her?\n\nAs Candace continued with encouraging comments and expressions of appreciation, Justin tried using his gyrations as a way to re-arrange his cock, which had hardened and was quite uncomfortable inside the mesh-like pouch of the thong. At one point, things progressed to the degree that the head of his cock popped out from under the waist band of the thong. From behind her camera, Tabitha motioned to Candace.\n\n\"Turn around, Justin.\"\n\nHis hands went to the front of the thong. He intended to stuff himself\u2014somehow\u2014back into place.\n\n\"No. Don't adjust anything,\" Candace said.\n\nWhen he turned around, he saw her blatant in a masturbatory pose, one foot planted on the floor, the other leg bent so she could put her foot on the edge of the desk. Her dress had hiked up to her waist, and she was lazily stroking her clit, her earlier comment to Justin about not wearing panties obviously true. It was easy to see the darker pink of her pussy, indicating her arousal.\n\n\"Well, Justin, you must like putting on a show for me. I see that you have an erection.\" Candace's gaze dropped to his crotch and lingered there. She licked her lips. \"Lower the front of your thong. Move it down so it's underneath your balls and showing me everything.\"\n\nShe continued stroking her clit as she watched, a hungry look on her face. Liz and Tabitha coordinated perfectly, one catching Candace's lustful gaze then panning back to show her masturbating as she watched Justin while the other had her camera trained on him as he did as Candace directed. \"Very nice. I like the display of your cock and balls like that. They look simply delicious and so readily available to me.\"\n\nCandace was really getting into this. Their earlier role play had been hot, no doubt, but it was a spur-of-the-moment giggle. Now, with months of careful planning, costumes, being filmed\u2014the scene was even more intensely erotic. And Justin\u2014bless him!\u2014was acting his part perfectly. She carefully moved ahead with the scene, becoming even wetter as she anticipated what she had planned during the filming.\n\n\"Come closer.\" Feeling silly with the damned thong snugged up under the back of his scrotum and therefore pushing his scrotum and his cock forward as though he were purposefully showing them off (and knowing that's exactly why Candace had him arrange the thong that way), Justin stepped forward. \"Closer.\"\n\nShe reached a hand forward and fondled his balls as she continued playing with her clit and her slick pussy. Looking him in the eyes, she said, \"You're getting me very, very wet, Justin.\" Candace sensuously slid her hand up to the base of his cock and levered it forward so it touched her pussy, which was at the perfect height in her position on the edge of the desk. \"See?\"\n\nWondering if she wanted him to push it inside, he leaned forward a bit, insinuating the head of his throbbing dick between the folds of her glistening lips. \"No, Justin. Not yet. You're going to show me many more exciting sights before this lovely cock slides inside,\" and she slipped the head of his cock up to her clit and tapped gently on it, being sure that the sensitive bundle of nerves on the underside of his dick came in contact with her hard and slick nub.\n\nHe moaned in frustration. \n\nTabitha and Liz heard the sexy sound. In spite of their professional roles as videographers, Candace's tease of Justin with his naked cock in her hand in the scene she had orchestrated had an effect on them both.\n\nCandace eased herself off the desk, her hand still wrapped around his cock. He shuffled back to accommodate her. Her pretty dress fell down into place, and the heels she was wearing meant that she was eye-level with Justin. In a move she imagined countless times during her erotic reveries about this video shoot, Candace slid her hands around his waist and rested them on his hips. It was the cue for Liz, who immediately moved into position to capture the action with Justin's naked backside filling the camera's frame.\n\nDrifting her hands slowly downward with a feathery touch as she barely allowed her fingertips to make contact with his pink skin, Candace said, \"I am truly going to adore playing with your butt, Justin. I dare say that you will like it, too.\" She gripped both his cheeks firmly and looked into his eyes. Tabitha was catching the action from the side, careful to frame the shot with a zoom in on their faces as Candace continued her sexy dialogue. \"Toying with a handsome man's firm, naked ass\u2014it's a true delight.\" She pressed her fingertips into his pliant flesh, kneading it. Enjoying it. \"I like to look, like to grab and massage, feel the sexy muscles.\" She leaned close to his lips. \"No, not 'like.' I 'love' seeing your naked ass, Justin, and playing with it.\" Before she sealed her lips against his, she murmured, \"It's mine tonight, isn't it? Your ass is mine tonight, isn't it?\"\n\nThe passion in her kiss was intense. She snaked her tongue into his mouth and feasted on him, pulling him tight against her, using her grip on his ass as leverage to press his belly against hers. Candace knew that the pre-cum on his cock was going to stain the front of her dress. She became even more aroused at the thought of that happening and ground her belly against his, trapping his throbbing cock between them as she gripped, massaged, and fondled his naked ass.\n\nThen, her mouth still glued to his, Candace began tugging his cheeks apart, first only a brief second, the action nothing but a natural consequence of how she was toying with his butt. Breaking her kiss, she looked into his eyes, grip still firm on his ass. \"That is so nice, so very sexy, Justin. Grabbing and kneading your ass while I kiss you. Yum.\"\n\nA twinkle in her eye presaged something. Justin didn't know what.\n\nThen her plan became clear. She pried his asscheeks apart and held him open. Seeing the surprise and then a flash of worry cross his face, she soothed and petted him with her words as she held him open for Tabitha's unflinching camera lens.\n\n\"Very hot, Justin. Very, VERY hot like this.\" Candace's gaze was locked on his eyes. \"Just thinking about the sexy view behind you right now, my grip spreading your bottom cheeks apart so that the thong's thin strip of material is the only thing covering your pretty little opening . . . that is such a delicious, nasty thought, don't you think?\"",
        "The intensity of the scene was driving Justin deeper into a reality in which only he and Candace were present. Her actions, her words\u2014they were so erotic that he was forgetting for seconds\u2014minutes\u2014at a time that two other women were in the room, filming his naked display.\n\nShe held him open as she again kissed him deeply and passionately. He squirmed under her grip.\n\nBreaking the kiss, she said, \"I have to see.\" Releasing her hold, she ran her hands up to his shoulders and turned him around. \"Take a few steps forward so I get a nice view.\"\n\nJustin did as he was told.\n\n\"Now, my lovely man, let me see what I just described.\"\n\nWithout a second thought, he leaned forward, reached behind him, and spread himself open to her view.\n\nTabitha framed his exposure. Liz caught Candace's lustful look as she again scooted up on the edge of the desk, hiked up her dress, and began masturbating as she resumed her dirty talk.\n\n\"Oh, my, Justin. It's as sexy as I knew it would be. Do you like the thong? I love it. I chose it because that thin little strip of fabric can't really cover everything. You must surely be aware that I can see the cute little crinkles of your asshole on either side of that naughty, naughty excuse for an undergarment.\"\n\nCandace was masturbating in earnest, her voice becoming husky. Tabitha's camera caught Justin's asshole clench in excitement.\n\n\"Reach back and pull the strap to the side. I want to see your asshole.\"\n\nThe pouch of the thong, still snug under his balls, pressed even deeper into him when he did as Candace asked.\n\nA sharp intake of breath let Justin know that Candace liked his unveiling.\n\n\"Oh . . . ummm . . . ahh . . . yes, yes,\" were the sounds that accompanied her mini-orgasm.\n\n\"What a sexy, sexy sight! Your pretty, pink opening is such a visual treat, Justin. I'm so glad you're so open with it, so eager to have me see it.\" Candace leaned forward, sliding off the edge of the desk and leaned forward, wetting a fingertip in the process, and placed it gently at the center of Justin's pucker.\n\nThe touch was electric. He jumped.\n\n\"Turn around.\"\n\nCandace dropped to her knees and immediately took his cock in her mouth. She licked away the pre-cum that had accumulated on the head, savoring the taste. Then, she reached to the sides of his waist to grip the waistband of the thong, and she began sliding it down.\n\nAs pre-arranged with Liz, this was the cue for the videography to capture the sight of Justin's thong being slowly peeled off of him. Candace had been insistent that one of the visuals which was extremely important to capture would be the back strap of the thong being pulled down and out from between Justin's muscular glutes, a sight that Candace knew would be very arousing for her.\n\nLiz' videography was perfect. Justin's pink cheeks slowly gave up their secret as Candace slid the thong down slowly while she held his cock in her mouth and ran her tongue around the head in a way she knew he loved. When the t-strap back of the thong was free of his ass, Candace slid the flimsy garment completely down and released his cock from her mouth.\n\nStanding, she said, \"Now, Justin, step out of your thong. I'm very excited that you're completely naked for me.\" Grabbing his erect cock, she pulled him to the desk. \"Stand right here. I want you to wear something else for me now.\"\n\nHis puzzled gaze followed her hands as she reached behind her to the wooden box on the desk. Swiveling around so her back was to him, she turned the box so that when she opened it, the top would hide the contents from Justin's view. Glancing back at him with a sly smile, she reached inside and withdrew the cock ring she had placed there.\n\nWhat she was planning to do would mean that Justin would most certainly need some help in delaying his orgasm until he was plunging his stiff cock repeatedly into her gushing pussy.\n\n\"You looked so cute and sexy for me in your thong,\" Candace said as she dangled the thin strap of red leather in front of Justin's surprised expression. \"Your cock and your balls looked sumptuous when you had the front of your thong pulled down under them, so I know that you are going to look wicked hot wearing this cock ring.\"\n\nBefore her words had fully registered in Justin's astonished mind (they had never played with a cock ring before), Candace had the strap of red, with its metal studs gleaming in the light, looped around the back of his scrotum. Pulling the ends up across the base of his cock, she snapped the ends together. Leaning back against the desk, she admired the view.\n\nIt was Tabitha's assignment to get this sexy shot. Justin's cock was arched up toward the ceiling, still throbbing from the workout Candace had given it with her mouth. Now, though, a shiny circle of red separated his erect manhood and the precious orbs underneath from the rest of his body. Yes, the snug ring would certainly help in preventing his orgasm while Candace played her sexy games with him in front of the camera, but the visual that Tabitha was framing was breathtaking in its effect: it was as if the ring's sole purpose was to present his cock and balls to Candace, to emphasize them visually and to invite her caresses, her petting, her fondling. Framed to display Justin's abs and on down to mid-thigh, the camera lens captured the eroticism of the erect male penis in all its sexiness.\n\nJustin's cock was beautiful and terribly tempting, the young videographer thought as she worked to keep her mind on her job.\n\nCandace reached forward with both hands to carefully cradle his balls, almost like she was scooping up a tiny kitten to hold it tenderly. Moving one hand up to his stiff cock, she wrapped her fist around it and squeezed, thrilling to the hardness. \"God, I love looking at you like this, Justin,\" she said, her voice dripping with lust. \"I love seeing you hard, excited. It is such an incredible turn-on to see you naked, hot, and throbbing. This gets me so wet.\"\n\nCandace released his cock, quickly slipped a finger inside her slippery cunt, then drew it out. She reached to his face and traced her fingertip around his lips. \"See? The sight of you has made my pussy drip.\"\n\nJustin captured her finger with his mouth, sucking it inside. Looking in her eyes, he sucked her finger, tonguing it as she had tongued his cock.\n\n\"Oh, you sexy, nasty man,\" Candace breathed, her eyes fixed on his mouth, watching him suck her finger. \"You are driving me crazy.\" A smile formed on her lips. \"That's it, Justin. Suck on my finger. Get it nice and wet, baby. I'm going to slide it inside your asshole.\"\n\nHer sexy statement almost made Justin clamp down on her finger with his teeth. He opened his mouth to draw in a breath, and she slid her finger across his lips as she took it from his face.\n\n\"The cock ring will help keep your orgasm in check while I have my fun with you, Justin.\" She grinned at him but immediately leaned close to say, \"I want you to enjoy it, too, because that's what gets me so excited. I think I know how to make both things happen.\"\n\nBack to the box, this time drawing out a small bottle of lubricant, she turned back to him as she unsnapped the lid and said, \"I'm going to love giving you a nice, slow handjob while I toy with your asshole.\" She drizzled some lube into one palm, capped the bottle, and set it on the desk. Twisting the middle finger of the other hand through the lube in her palm, she said, \"Turn this way for me.\"\n\nNudging him with her elbow, Justin quickly understood that \"Turn this way\" was a directive meant to position him for the best camera angle. That realization, though, did nothing to keep the weakness from his knees upon hearing Candace's declaration that she was going to jerk him off in front of the camera while she slid her finger inside his ass.\n\n\"Yeah, that's it, lover,\" she cooed, wrapping her fist around his cock. \"I like it that you can't come for me yet, no matter what I do. What a sexy concept!\" Candace moved the hand with the lubricated finger behind him. Standing to his side, she was perfectly positioned to stroke him with her right hand while she penetrated his ass with the finger of her left. \"Spread you legs apart a bit. I want your cute little butt crack easy to get into.\"\n\nJustin swallowed hard and looked at the ceiling. He saw clearly in his peripheral vision that Liz had positioned herself behind Candace. He knew Liz' camera was recording the motion of Candace's hand up and down his cock AND the movement of Candace's other hand as she flattened the palm against his butt, insinuating a finger between his cheeks.\n\nTabitha was behind the desk, focused on his ass and Candace's invasion there.\n\nHe felt like he was in one of those maddening dreams\u2014the ones in which he was caught out on the street, naked for some reason, people watching him as he hurried to some destination. Everyone looking at him, women with their hands over their mouths, shocked at his nakedness. Other women pointing at the erection he was trying to conceal.\n\nHe always awoke in a sweat from those dreams.\n\nAnd, just as was the case now, when we awoke he had a raging hard-on.\n\nCould Candace somehow have tapped into his sexual psyche? This was HER fantasy, she said, yet what she was doing to him, the things she was saying\u2014damn! He was out of his mind with lust for her!\n\nHer finger slid inside.\n\n\"Oh, my god! Oh, my god!\" Justin gasped as she pushed inside as far as she could go. Her hand was gliding up and down his cock.\n\n\"Justin, my sexy man,\" Candace said, her gaze fixed on his cock and her fist wrapped around it. \"God, it feels good being inside you and stroking your stiff prick. I love this, baby. I love this.\" She slid her hand down to his balls and cupped then, smearing lube across the tender, hairless pouch that had drawn up slightly in his excitement. Her finger stayed buried to the hilt in his ass. \"Now let's see what happens when I do this,\" she teased, moving her hand back to his cock. When she resumed stroking him, she slid her finger out just a little then pushed it back in. Soon she was finger-fucking him with little strokes while she masturbated his erect cock.\n\n\"Feel good?\"\n\nCandace had moved close to him, straddling his leg as she stood to his side. It made for a better position with the hand that was cupped underneath his cheeks, her middle finger buried in his asshole, but it also meant she could rub her pussy against the side of his thigh.\n\nLiz was getting all of it. She is going to make him wild to fuck her, the videographer thought. The visual of Candace, still in her sexy outfit, standing next to a completely naked Justin (except, of course, for the sexy red cock ring), and grinding against him while she stroked his cock with one hand and pushed her finger inside his asshole with the other was powerfully erotic. We will find a way to make this happen in the next Femme Features video, Liz thought. This is so fuckin' sexy!\n\nJustin was moaning. He had reached an arm around Candace to embrace her as she played with his sexual soul. It felt wonderful to her to feel him urge her on.\n\n\"God, Candace, this will make me come so hard that I'll pop that damned cock ring apart!\" he gasped as she intensified her actions.\n\nThen, abruptly, she stopped. He groaned in frustration. \"Don't stop! God, please, don't stop,\" Justin panted.\n\n\"I have to,\" Candace said, her mouth close to his ear. \"I have more ways to play before I take your big cock inside my pussy.\" Stepping back from him, she reached behind her to the zipper at the top of her dress, starting it down enough to then bring one hand behind and finish pulling the zipper down to the waist of her dress. It fell from her shoulders, and she kicked it aside.\n\nWalking to stand in front of Justin, now dressed only in her jewelry and heels, she reached up to her pert breasts, grabbing her nipples and squeezing them blatantly in front of him. It caused shivers to run up her spine. \"Don't worry, though, my sexy toy. I WILL unsnap that ring and then plunge down on your cock and ride you hard.\" Her eyes closed briefly, savoring the idea. \"But not now. I have another way to make you feel good before that happens.\" Dropping her hand to her pussy and tracing circles around her hardened clit, she said, \"Up on the desk, on your back, and slide to the edge. I'm going to suck that gorgeous cock some more.\"\n\nJustin's excitement meant that he was eager to get into position, and he hopped on the desk and positioned himself as she directed. Doing so, however, meant he knew that he was only minutes away from being finger-fucked in the ass during Candace's torturously wonderful fellatio techniques. She had explicitly mentioned that she wanted to see her finger slide into him while she sucked his cock. Now, in this video that she had arranged, it was clear she had planned one of the shots to show her doing it.\n\nBut it quickly became clear that she wasn't going to do it until she had teased him unmercifully. Pulling the drawer out from the desk, she extracted a towel and wiped the lube off his cock. In the process, she continued telling him about what she was going to do to him.\n\n\"Umm, I love the taste of you,\" she said, wiping away the last of the lube from his throbbing penis and her hand. \"Your cock is delicious.\" Tossing the towel to the side, Candace positioned herself between his legs. \"Do you like it when I slide it all the way down my throat? Like this?\"\n\nJustin dropped his head back on the desktop from the position he'd held it in when she was speaking to him. He knew what was coming. The wonderful sensation as she slid him all the way down her throat did not disappoint. She held her breath, leaning over him and bracing one hand on the desktop to help her maintain her position. Then Candace inched her lips the last few centimenters to the base of his cock. \n\nFeeling his cock completely encased in his sexy girlfriend's mouth and throat never failed to make his dick pulse, and Candace could not accommodate the motion for more than a second or two. She backed off, gathering the mixture of saliva and pre-cum in her mouth before pulling his cock free with a gasp.\n\nShe moved up to his face and kissed him deeply, his cock in her grasp as his legs dangled over the edge of the desk.\n\nAgain, Liz and Tabitha were treated to a sight so sexy that their videography professionalism was sorely tested.\n\nI should be paying her for this, not the other way around, thought Liz as the erotic scene she was filming caused her pussy to moisten. Tabitha, too, was working hard to frame the shot in spite of the thoughts running through her mind: Damn! This is so hot! Will I ever have a man to play with like this? Will some guy love me enough to let me-\n\nThen, Candace broke the kiss and said, \"I have plenty of lube, Justin. I'm going to suck your cock and slide my finger inside your beautiful asshole at the same time. Will you be able to stand that? Will that feel good, do you think?\"\n\nJustin could only moan. Liz captured the twitching of his dick, a motion that Candace had told her was sure to occur when she told him in the scene that she was going to finger-fuck him in the asshole while she sucked his cock. Reaching again for the lube, Candace quickly dripped more of it into her hand. \n\nKeeping her palm horizontal so as not to lose the lube, she lowered herself in front of him, maneuvered his legs over her shoulders, and then straightened her legs so she was standing close to his butt at the edge of the desk, his legs draped over her shoulders. This pulled his butt forward and up.\n\nIt was the perfect position to give her free access to his private opening.\n\nShe quickly pressed the palm of her hand against his asscheeks, twisting her hand and pressing forward in a way that transferred most of the lube between his cheeks. Then she began petting him there, rubbing the lube against his asshole, getting him thoroughly slippery in the process. Looking into his eyes while she stroked his asshole, Candace said, \"It's really exciting to be inside you. I love it when I push my finger into your asshole, baby. It feels so sexy, so wonderful.\"\n\nThe explicit talk coupled with the sensations she was producing in and around his anus\u2014warmth, tingles, anticipation\u2014was an exquisite, erotic torture for Justin. He squirmed against her hand impatiently, not caring whether he looked like a sex-starved maniac desperate to feel his lady's finger slide inside him. \n\nCandace was driving him crazy.\n\nThen she leaned down, took his cock in her mouth, and slid her finger deep inside, all in one coordinated motion.\n\nJustin gasped. He threw his hands to his head, covering his face. Sexy groans came muted through his hands before he drew them away, quickly moving them to grip the edge of the desk, gaining purchase there in order to pull himself even deeper onto Candace's finger. \"Fuck me,\" he gasped. \"Fuck my ass, baby!\"\n\nCandace slid as deep inside him as she could and then took his cock all the way down her throat. She was so turned on that she wanted all seven inches of his throbbing dick in her mouth, in her throat. She stayed bent over him, feeling him squirm his ass against her hand as she focused on surrendering to his erection at the back of her throat. Finally, she raised her head, pulling his cock out of mouth and drawing in a huge gasp of air, a string of saliva escaping in the process to fall on his belly.\n\nShe held her finger firmly in place as he panted and groaned. Candace began stroking his dick, using the saliva lingering there as lubricant.\n\n\"Oh, that feels so good! Don't ever stop! Don't ever stop!\" Justin gasped, his cock twitching in her grasp.\n\nBut she did stop, knowing that continuing risked his orgasm, and Candace wanted that to happen only when his cock was buried inside her.\n\nPulling her finger from his asshole, she turned her head to kiss one leg as it hung over her shoulder before she lowered both legs gently to the floor. Justin lay panting on the desktop.\n\n\"I'm sorry, baby, but this is the one time during the shoot when getting the video to come out as I want it means that Liz and Tabitha have to set up a special camera angle. I want them to capture the sexy visual of my finger sliding into you when you're in position on your back on the desktop.\"\n\nTabitha had already switched to the camera mount that would allow her to record the under-and-up view that would be necessary to show what Candace wanted to see in the video. It took a few minutes to set up the added lighting she needed. Justin \"settled down\" (as Candace later put it) during that time.\n\n\"Oh, my gosh, Justin\u2014you were fantastic! You had me so hot and bothered that I was absolutely dripping during that scene.\" She snuggled against him as the two of them sat on a couch which was a few feet away from the lighting stage. \"This video will be everything I have imagined. I love you so much for doing this for me.\" Candace paused only a beat, then said, \"For us. I can't wait to be snuggled up exactly like this, watching what just happened.\"\n\nJustin was more interested in an immediate interaction. \"Candace, I have to admit that I really wondered about you when you brought up the idea of that calendar. It's easy to see that, after all the convincing it took to get me to agree to THAT, the idea of a video of us together . . . well, yeah. I guess I would have given you a flat \"No!\" if you had suggested it and asked me to do it.\" He pulled her closer to him. \"But I have to admit that this is turning out to be nothing like I expected.\"\n\nHe stopped talking at that point. Candace waited, hopeful that \"nothing like I expected\" meant that it was BETTER than he expected.\n\nHe kept her in suspense on purpose.\n\n\"Justin!\"\n\nHe laughed. \"I meant what I said about blue balls, babe. What you're doing to me should be against the law.\" She smiled. \"So don't you dare drag this out any more. We are going to have to get down to business up on that stage pretty quick or I worry that I'll actually injure myself.\"",
        "She was thrilled. He had just told her that he was eager to fuck her for the video\u2014just what she wanted: a good, hard, thoroughly satisfying fucking. Candace was incredibly revved up herself.\n\nThey would make love tenderly, passionately, innumerable times in the future, she knew, but fucking is what she desperately needed right now. A wicked hot, nasty, sweaty, good, hard fucking. And she was ecstatic that Justin felt exactly the same.\n\nThe video was going to be so hot!\n\nBut she had one more surprise for Justin.\n\n\"We're ready,\" Liz called from the set. When they had rejoined the two videographers on the lighting stage, Liz went through the somewhat complicated choreography it would take among two camera operators and the porn-stars-for-a-day in order to film what Candace was so hot to see in the video. It involved getting a close-up of Candace sliding her finger between Justin's cheeks while standing farther back from him than she was during the scene of a few minutes earlier. \"We'll edit it all together so it looks like real-time action,\" Liz said.\n\nBasically, Candace would have to be in a somewhat awkward position while they filmed the close-ups of her hand on Justin's ass, her finger penetrating him.\n\nShe could live with that.\n\nWhen Liz had finished explaining everything, Candace leaned very close to Justin's ear so that neither Tabitha nor Liz could hear her nasty comment: \"I love this! I guess you have to open up and let me inside your pretty asshole repeatedly, baby. Who knows how many takes we might need?\"\n\nBefore the two videographers had finished shooting the close-up action, Justin suspected that Candace had planned things ahead of time to require multiple takes solely for the purpose of allowing her to repeatedly finger-fuck him for the camera. What other explanation could account for the filming, stopping for the three of them to view the footage on the monitor, excited talk among the ladies about what they saw but always capped off with one of them saying something like, \"We should probably get another take, just to be sure, though . . .\" and then the torturous process would start again: Justin surrendering his private opening to Candace's erotic tease, strokes, and eventual invasion while Liz and Tabitha filmed everything in unblinking close-up detail.\n\nAfter three \"takes,\" Justin was beside himself.\n\n\"Candace,\" he whispered urgently as Liz said, \"Let's check this out on the monitor. Maybe we're getting close to having what we need for the edits.\"\n\nHis girlfriend, her hard nipples still prominent in arousal as she stood at the edge of the desk, still wearing only jewelry and heels, looked at him lustfully. \n\n\"Baby, you know you can't keep doing that and not expect me to come.\"\n\nCould her nipples get any harder?\n\n\"This next scene better be of me fucking you, because I'm about to burst. This cock ring has got to come off!\"\n\n\"You like it when I fuck you in the ass, don't you?\" she teased in a throaty voice. \"I love doing it to you, baby. This is so sexy, catching all of this on video.\" Her talk was doing absolutely nothing to calm him down. \"I promise, Justin, just a couple more scenes.\"\n\nCandace moved away to confer with Liz and Tabitha at the monitor.\n\nTWO more scenes? Is she crazy? thought Justin.\n\nHe reached for the towel that Candace had brought him at the conclusion of the last take. He was perspiring both from the lights and from the tease of his asshole as well as the weird, incredible turn-on of the situation: his gorgeous girlfriend finger fucking him while two women filmed everything.\n\nIs this for real? Am I going to wake up in a minute and-\n\n\"Okay, Justin,\" Liz said, breaking his reverie, \"Candace and I could only guess at what would be the right size for this desk.\" Videocamera in hand, she walked to the opposite side of the desk from where he'd received his protracted finger-fucking. \"We're hopeful that you can lean over the desk with your legs spread and back up enough so that your cock and balls hang down to let Candace stroke your dick. If we're lucky, you can stretch forward and hang onto the front edge of the desk while she plays with you.\"\n\nJustin swallowed hard. Liz' explicit directions painted a very clear description of the position he was to assume. He thought he knew why Candace wanted him lying across the desk like that. Seeing the gleam in her eye as she walked up next to him confirmed his suspicion.\n\nShe took the towel from him and looked into his face, smiling. \"Yeah, you can just imagine how sexy you'll look to me in that position, baby,\" Candace said. \"I have really thought a long time about how I wanted all this to happen in front of the camera, knowing that I'll get to see you naked and on display for me.\"\n\n\"If I'd had even one clue about how much you like seeing me naked, I'd probably have wondered about you . . .\" he said, drifting into silence as he gazed into her eyes.\n\n\"And then you'd have stripped right down and turned around to shake your cute little butt for me just like you did in that shot a few minutes ago,\" she giggled. \"At least, that's what you'd have done if you realized how excited it gets me, how erotic it is for me to see your naked ass and cock and know that they're all mine to play with.\"\n\nTabitha had stepped onto the stage and was repositioning the boom mic. \"I'll have to lower this just a bit, I think, Candace. If we want to capture all of his moans,\" she paused, looking away in embarrassment from Justin, \"well, um, it might take a couple run-throughs to make sure the mic is close enough to record all the sounds but not so close that it's in the camera frame.\"\n\n\"Oh, he'll be moaning, Tabitha. I'm going to see to that.\" Candace leaned forward just a bit in her standing position in order to look down and check that she had successfully toweled away the trace of pussy juice that had leaked out onto the inside of her thigh. \"I'll be moaning, too. I hope it won't overpower the audio level.\"\n\n\"Just be natural. We'll make it all come out okay,\" Tabitha said, satisfied with the mic's positioning. \"Is this the scene when you're gonna-\"\n\n\"Yes,\" Candace answered, quick to interrupt.\n\nShe didn't want to spoil the surprise.\n\n\"Let's do it,\" said Liz, ready with her camera at the front of the desk and speaking to Justin from behind the camera's on-board monitor. \"I'll be filming from this spot while Tabitha films from the side and the back.\" She took her gaze away from the monitor in order to look directly at him. \"As you'll realize when we begin shooting this scene, my camera is going to capture your face if you look up from the desktop.\"\n\nCandace immediately jumped in. \"Oh, my god, Justin, that is going to make me come to see it\u2014you looking into the camera in that position.\"\n\nLiz continued. \"Candace wants us to film her behind you, which means I'll also be filming your face whenever you look up as I shoot from this angle, so just remember my camera's going to be there. Look into it occasionally, but not like it's something that's taking you out of the scene. Be natural. Let me worry with the cinematography, okay?\"\n\n\"In other words,\" Candace said, \"focus on what I'm doing to you.\"\n\nWhat's going to happen in this scene? thought Justin.\n\n\"We set?\" Liz asked Tabitha, who had once again picked up her camera.\n\n\"Yep.\"\n\n\"Rolling,\" Liz said, her gaze dropping to the camera monitor.\n\n\"Now, Justin,\" Candace purred, running her hands across his chest, \"we both know how much your sexy ass turns me on. I want to play with it some more.\" She pulled him from his position leaning against the desktop and turned him around. Pushing gently between his shoulder blades, she said, \"Why don't we get you into position over this desk, you legs spread and your gorgeous butt up high in the air for me\u2014won't that be fun?\"\n\nCandace couldn't tell whether his hesitance was real or for the camera. She picked up on the cue, though.\n\n\"Come on, my sexy toy, don't be shy,\" she said, whispering into his ear from behind him. \"I've been inside your tight, warm asshole, and I've taken every inch of your hard cock down my throat.\" She pinched him lightly on one asscheek. \"Don't tell me you're embarrassed about this?\"\n\nJustin startled her by turning around and grabbing her face in both hands to kiss her hard. Breaking the kiss, he said, \"Tell me how excited you'll get seeing me like that.\"\n\nA knowing smile crept across Candace's face. \"You're a nasty boy, Justin. You like the dirty talk, don't you?\"\n\nHe only smiled, turned back around, and dropped to his elbows on the desktop as he craned his neck around to look at her. \"I like to hear about you being aroused. I like to hear you say things that get us both turned on.\"\n\nShe stepped close behind him. He felt the front of her thighs press against his legs. Candace reached around him from that position, leaning forward and over him, and closed her fist around his cock. \"I AM turned on, Justin. I'm so hot that I'm dripping, and I just love playing with your naked cock.\"\n\n\"Ummm, yeah, that's it,\" he said, slowly lowering his chest to the desktop. \"You like to see, but you like to talk about what you see, too, don't you?\"\n\nShe laughed softly. \"What I like, Justin, is my naked man, bent over for me, offering up his nude butt and his stiff cock for my pleasure. Let's just concentrate on that for a while, okay?\"\n\nOn his own initiative, Justin reached for the box on the desktop, fumbling it open with hopes he would find a bottle of lube to hand back to Candace so she would use it to stroke his stiff dick.\n\nYes, a bottle of lube was there.\n\nSo was something else.\n\nHe pulled both from the box, raising up on his elbows.\n\nLiz made sure to capture the puzzlement, then the dawn of recognition, then the slightly worried expression on his face.\n\nCandace was going to love this!\n\n(And it was really getting Liz aroused, too, in spite of all the videography she'd shot for Femme Features.)\n\n\"So you've found my toy,\" Candace said. She hadn't planned it this way\u2014she was going to surprise him by drawing the toy out of the box as she leaned over him\u2014but things would work out wonderfully for the video like this. \"Have you ever been plugged, Justin? Have you ever had a woman slide something other than her finger inside your pretty asshole?\"\n\nShe knew he hadn't.\n\n\"It's only a little bigger and a little longer than my finger, Justin. You took that without a problem.\"\n\n\"I don't know,\" he answered worriedly. The furrow in his brow was evident as he looked into the camera, then back at Candace. \"You didn't say anything about-\"\n\n\"Shhhh,\" she hushed, taking the plug from his hand. \"I want to be the one to do this sexy thing to you for the very first time, Justin. I want to be the first one who's going to slide a buttplug into your tight little asshole and let you discover how good it feels for a lover to take you like this.\" Candace slid down to her knees behind him, spread his asscheeks wide apart in front of her, and leaned forward to press the tip of her tongue against his asshole. She held that position for several seconds, then leaned back and released her grip on his ass. Sliding up over his prone, naked body once more, she dragged her nipples up across his back and then laid on his back high up enough to whisper into his ear, \"Right there, Justin, right where my tongue was a minute ago. That's where I'm going to put the tip of the plug. Tell me you're ready for it. Tell me how much you want me to do it, to push it slowly inside while I stroke your beautiful cock.\"\n\nHe dropped his forehead to the desktop, groaning in resignation, excitement, worry, embarrassment\u2014the mix of emotions was as indescribable as it was powerful.\n\n\"Tell me you want it,\" Candace urged, the wetness of her pussy on his ass as she lay over him giving its own testimony to how much this request was turning her on. \"And then, baby, after you ask me to do it, I'm going to watch it slide slowly all the way inside you while I masturbate you at the same time.\"\n\n\"Candace,\" he hissed, \"the damned cock ring. It has to come off!\"\n\n\"I promise, Justin. I promise I'll take it off right afterwards. Remember: you're not to come until your hard cock is pounding into my wet pussy.\"\n\nTabitha and Liz both were working diligently not to let Candace's words and teasing along with Justin's unscripted yet powerfully erotic reactions distract them from capturing the sexy play in front of their cameras due to their own arousal at what they were seeing and hearing.\n\nGroaning again, this time in clear and total frustration, Justin dropped his forehead back to the desktop and said, \"You want to see it? Then do it! Push it inside me. But be careful with my cock. I'm about to explode.\"\n\nThen, in an action Liz knew couldn't have been better written into any sex scene in any Femme Features video, Justin looked into the camera as he stretched his hands forward to grip the front edge of the desk and press his ass upward into Candace's body, indicating his eagerness to be taken.\n\n\"You're the sexiest man alive, Justin,\" Candace cooed, pushing herself off his back to stand behind him, bottle of lube in one hand, slim plug in the other. \"I'm going to come when I do this to you, but remember: you're not to come during this. I'll take off the cock ring after the plug is all the way in.\"\n\nShaking his head in exasperation as he tried to look back at her, Justin said, \"You'll be the first. You're going to be the first woman to do this to me, and I'm going to remember it forever.\"\n\nThose words had an unexpected effect on Candace. They emphasized the special thing Justin was doing for her. All of this\u2014the calendar, the extra pictures that Liz took of them, now the video with him giving up a part of himself in a way he'd never done with her before\u2014he was doing all of it because he knew it was her fantasy and would make her hot and horny . . .\n\nShe realized how precious he was to her.\n\n\"I'll be so gentle,\" she said, overcome with love for Justin. \"I'll be so loving with your beautiful sexy, gorgeous little asshole, baby.\"\n\nOne palm now well lubed, she titled the bottle over his ass. \"Now, Justin, I want you to spread yourself apart for me, but not with your hands. Show me how much you want me to do this,\" Candace said, her voice nearly shaking with excitement and lust.\n\nHis pink opening came into view, and she barely had enough presence of mind about the video to move slightly to one side so Tabitha could capture the revelation as Justin pulled flexed open his cheeks for Candace and the camera. \n\n\"So very pretty,\" Candace whispered, \"and so very sexy, seeing you open yourself up for me to go inside you, baby.\" She drizzled plenty of lube into the furrow between his cheeks to ensure the least amount of discomfort for him. Pouring more lube into her palm, she snapped the bottle closed, picked the plug up from where she had set it on the desktop next to Justin, and began to coat it thoroughly by fisting it the same way she would be doing his cock in only a few moments. \"I'm getting it nice and slippery.\"\n\nJustin moaned into the desktop.\n\nFrustration?\n\nEagerness?\n\nWorry?\n\nLust?\n\nCandace placed the tip of the plug against his exposed asshole. She remained slightly to the side as she stood behind him so Tabitha would capture with her camera exactly what Candace wanted to see on the video for all those times in the future when she knew she would be watching this, her legs spread as she stroked her clit, or when she and Justin watched together as she stroked his cock and told him how sexy it was to see him open up like that for her.\n\nShe reached for his stiff dick, captured it in her slickened grasp, and held him still in her fist, feeling the throbbing, the pulsing of her man's erection. Then, his cheeks still splayed apart for her, she placed the tip of the plug against his exposed anus.\n\nHis head jerked up at the sensation. Liz captured the look on his face.\n\n\"Oooh, baby, it is so-o-o-o sexy,\" Candace said, slowly sliding her fist up his hard shaft. \"This looks so sexy.\" She began rotating the plug against his hole, dragging it up slightly then back down, teasing his twitching opening with the tip of the plug.\n\nJustin dropped his forehead back to the desktop. A sexy moan rattled up from his chest.\n\n\"Now, just a little bit of the way in,\" Candace breathed, pushing the plug against his opening and thrilling to the sight of his crinkle accommodating the first few millimeters inside him. \"But then a little ways back out, too.\"\n\nThat really caused a moan of frustration from Justin, and his head reared up. Turning to the extent possible from his position as he lay across the desk, his look was a pleading one. \"Don't tease me like that. Please don't tease me like that!\"\n\nHis comment shot a jolt of excitement up her spine. Candace thrilled to his expression of how much her actions were arousing him.\n\nIn spite of everything, all the planning to make HER fantasy come true, to capture what SHE wanted on videotape, the fact that what she was doing to her man was making him excited meant the world to Candace.\n\n\"You like?\" she asked, a smile on her face that broadcast her knowledge of the answer to the question. \"Does it feel good?\"\n\nI AM a terrible tease, Candace thought.\n\nJustin's butt arched up in response to the question, something that Tabitha clearly recorded as she framed the action in her camera.\n\nCandace knew her man could not stand much more. She centered the tip of the plug on Justin's asshole, gripped his cock firmly with the other hand, and slowly but firmly began pushing the toy inside his asshole.\n\n\"Unggh,\" came his sexy response, muffled as it was into the desktop. She continued pushing the plug into him.\n\n\"This is just what I want to see, baby. It is so very arousing watching you take this toy for me. Watching it slide into your cute little asshole is the hottest thing I've ever seen.\" Candace felt Justin's pre-cum mix with the lube as she stroked his cock slowly.\n\nVery slowly\u2014what she was doing to him was pushing him dangerously close to climax.\n\n\"Ahh, baby. Just a little bit more. It's almost all the way in.\"\n\n\"Oh, god, oh, my god,\" Justin panted. He was squirming on the desk, his ass thrusting up, trying to force the last inch of the plug inside.\n\n\"There, my sexy man. There it is. So sexy for me. You've taken the whole thing inside for me,\" Candace cooed, her grip relaxing on his cock, knowing that he was in an ecstatic agony of orgasm denial. \"Oh, that looks, so, so hot,\" she said, releasing her grip on his cock in order to place her hands on his cheeks. Justin's white-knuckled grasp on the front edge of the desk made clear his intense effort to prevent an explosive climax.\n\n\"Now,\" Candace said gently, her hands slowly relaxing their grip on his cheeks, \"hold the plug inside, baby, and stand up and turn around for me.\"\n\nGingerly, unsure of his ability to keep the plug in place in spite of the flared base of the toy's design exactly for the purpose of making such an action easier, Justin rose from his prone position and turned to face Candace. \n\nShe dropped to her knees.\n\n\"Relax for me, baby,\" she said, looking up into his eyes as she reached for the snap that held the cock ring locked into its constricting circle around his cock and balls. \"I'm going to take this off, and then I'm going to crawl up on the desk, and you're going to fuck me hard while I push the plug deep inside you.\"\n\nJustin's cock bounced markedly in response to her comment. \n\nCandace smiled.\n\nLiz had moved around the desk and was now filming from a different angle. She zoomed in on Justin's engorged cock, the head a deep purple in his intense arousal. Tabitha was catching the action from a larger perspective, the randy couple, the library set, everything captured as a scene-setting build-up to the video's literal and figurative climax.",
        "Justin gasped when Candace unsnapped the leather ring from around his cock and balls. \"Now!\" His urgency was packed into a tight bark of a command. It surprised Candace in its intensity.\n\nShe loved it, and she scrambled onto the desk. Justin pushed the box off the edge of the desktop in his rush to bury his cock inside his girlfriend. The globe perched precariously close to toppling onto the floor.\n\nIt was heaven for both of them when he sank his aching cock into her hot, wet pussy and started thrusting. Quickly, though, Candace reached behind him and placed her hand on his ass in a position that allowed her to press two fingertips against the base of the plug and hold them firmly there, nudging the toy even deeper inside him.\n\nThat did it. The plug bumped up against his prostate, and Justin howled in relief and surprise as his stiff dick shot powerful jets of cum deep inside Candace's clenching pussy. Her own orgasm was electric and intense, her vagina gripping and releasing his cock in concert with Justin's spurts.\n\nThey lay gasping in exhaustion for several seconds, aftershocks rippling through both of them.\n\nBoth Liz and Tabitha swallowed, not realizing how dry their mouths had become as they filmed the scene.\n\nWhile their mouths were dry, their pussies decidedly were not.\n\nThe spent couple lay in each other's arms for a moment longer, then Justin levered himself up on his elbows and gazed into Candace's eyes, the plug still lodged firmly in his bottom. \"You're incredible.\"\n\nHe kissed her.\n\nLiz and Tabitha framed the kiss, Liz in close-up, Tabitha in tableau.\n\nIt was the perfect fade to black. "
    ],
    "authorname": "escriterra",
    "tags": [
        "asshole",
        "cfnm",
        "anal",
        "photo shoot",
        "fellatio",
        "buttplug",
        "anal fingering",
        "masturbate",
        "cock ring"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/justins-starring-role"
}