{
    "title": "The Violin Pt. 11",
    "pages": [
        "Mrs. Evans was watching the news when Kendra joined her on the couch. The mother patted her daughter's hair.\n\n\"How're you doing, sweetheart?\"\n\n\"Okay. I'm just bored. I want to get back to work.\"\n\nThe older woman smiled. \"I know I said it before, but I'm so proud of you. The woman you've become, from excelling at the firm to sticking to your guns...You reminded me how to be strong.\"\n\nKendra hugged her. \"Thank you, mom. How's dad?\"\n\nMrs. Evans shook her head with a resigned sigh. \"Still not talking to me. He leaves for work before I get up, and he's slept in the basement the past week. He's hurt. And a jackass. Let's change the subject,\" she brightened. \"Have you heard from Keith?\"\n\nKendra nodded. \"Really briefly. He just called to let me know when he made it in town, and then a few nights ago. He's been different since the night him and dad talked.\"\n\n\"Different how?\"\n\nKendra blushed. She didn't want to say she and Keith hadn't fully made love since that night. From the look her mother gave, chances were she already knew. \"Distracted. No, I take that back. He's been crazy focused, just not on me. I don't know. Maybe it's nothing. I just want to get back in my groove. That's where my head is.\" \n\n\"I'm sure. Hey Kenny, I got a call from the police department today. They'll be sending a patrol car around a few nights a week to watch the house, said it's related to your case.\"\n\nKendra sat up straight. \"Do they think there could be some retaliation?\"\n\n\"Sure sounds that way,\" Maria replied. \"What I want to know is how they even knew you were home.\"\n\nTwo familiar mug shots flashed on the TV screen, catching Kendra's attention, and she turned to focus on the broadcast. \"Mom? I think it might be a moot point now.\"\n\n++++++++++\n\nKeith spent the next week preparing a place fit for Kendra. He rented a beautiful historic 3-bedroom in Beacon Hill and paid rent upfront for a year to offset his lack of credit. He had no possessions worth holding onto, so he didn't bother going back to clear out his rented room. He just called Raul and told him to take whatever he wanted. Movers brought Kendra's possessions over, which he lovingly unpacked. He contacted Millville High and enrolled in the two online courses needed to complete his high school diploma and simultaneously enrolled in community college. At night, he settled into a huge new bed, the only furniture in the house that didn't come from Kendra's place, and sifted through her box of letters. \n\nHe tried, at first, to make himself wait, to put them in chronological order so that he could go through them methodically, but found he preferred to randomly select them to read. It gave him a strange kind of peace to fall asleep surrounded with piles of her letters each night. The letters weren't always rosy. Sometimes, Kendra had written him in anger, demanding to know why he'd taken such drastic measures, or why he never wrote back to her. She blamed him, it was clear, for separating them. Sometimes she wrote about the guys she was dating. She never gave much detail, but he couldn't help the uptick in his body temperature at these missives. A sense of loneliness was ever-present, something he could relate to because he'd felt it himself. Keith often cried, or paused in his reading to press a letter to his lips. He wondered how different he'd have been if he'd had this lifeline to her love while incarcerated. Instead he'd become hard, calculating, which was how he'd survived. But now, he craved to reopen those parts of himself he'd walled off. He wanted to weave the disjointed strands of his life into something that made sense, a stronger, smarter version of himself that would make everything he'd been through worth it. Make him someone worthy to stand beside her. \n\nOut on the streets, all looked clear. Cody and Bam's murder got a few mentions on the news, but police were busy with a dozen suspects. Any number of people wanted those rats dead. Finally he felt safe to call Kendra about coming back to the city.\n\n\"Will you move in with me? You said not to ask while we were in bed. Well, you're not in bed anymore.\" Keith tried to keep the tension out of his voice. He realized his 'surprise' was a bit stalkerish, especially if she said no.\n\n\"What about my lease? It's not up for four months.\"\n\n\"I can take care of that,\" he replied. \"I don't want to go another day without you. Just say yes.\" \n\nAt the need in his voice, Kendra's breath hitched\u2014she'd missed him, too. And not just the mind-blowing sex; she'd missed his smart mouth, and the sense of security his presence provided. He was the towering shadow she could always rely on. \n\n\"Yes.\" \n\nKeith whooped in joy and gave her the new address. \"I'll take care of everything,\" he promised. \n\n++++\n\nKendra walked back into the law offices of Kent, Stavros and Burn, breathing deeply. A short, swarthy, distinguished older man waited by her office.\n\n\"It's good to have you back,\" Michael Stavros clapped her on the back. \"It hasn't been the same without you.\" \n\nKendra smiled at her mentor. \"Four weeks and you're falling apart?\" she joked. \"So what's the scoop since I've been gone?\" \n\nMichael's eyes twinkled as he filled her in on the gossip on their clients and the office, but Kendra was distracted by Niall passing by. He stiffened visibly and though she knew he'd heard her voice, sped up as he walked past her open door. Michael, who missed very little, drew his eyebrows together.\n\n\"Having trouble with your hero?\"\n\n\"Who called him that?\"\n\n\"He did! Over and over. To hear him tell it, he burst into your apartment and took the assailants down himself.\"\n\nKendra rolled her eyes. \"Not quite. But he did drive me home to my folks.\"\n\n\"So you're back together?\"\n\n\"Who said we were ever together to begin with?\"\n\nMichael just shook his head. \"Niall is a brilliant litigator, but he's not the most discreet. Anyway, it's none of my business. Now,\" he looked around, \"I know you've got a lot to catch up on. Take your time\u2014no one's going to throw you in the deep end right away. They'll have to go through me.\" \n\nKendra smirked. \"Only cause you want first dibs.\"\n\n\"But of course!\" He patted her on the shoulder and exited.\n\nKendra's paralegal brought in stacks of briefs and files that other colleagues had taken on, and she didn't look up from her desk until she heard a knock on her door at 7 p.m.\n\n\"It's good to see you back,\" Niall said. He'd put on some pounds and looked a little disheveled, like he hadn't been sleeping well, but he was still a handsome enough man. \"You wrapping up? I'll wait.\"\n\n\"Thanks. I didn't realize it had gotten this late! I've got to get home.\" Kendra finished scribbling some end-of-day notes and prepared to walk out with Niall. \n\n\"Makes sense; it's safe now. I know you heard about those guys getting offed.\"\n\n\"I did. I'd planned on trying to get the witnesses back on record.\"\n\n\"Guess your boyfriend had a more permanent solution in mind.\"\n\nKendra's neck snapped back. \"What you're implying is baseless and tasteless, and borders on slander.\"\n\n\"Hey girl, don't get mad at me,\" Niall retorted. \"You know what kind of guy he is.\" He could barely suppress a grin; he liked getting her riled up. \n\nKendra just stared at him for a moment, the wheels turning in her head. \"I'm really starting to see what kind of guy you are,\" she replied. \"You go on without me. I've got one more thing to look at before I leave.\"\n\nShe arrived just by cab just before dusk. When she got to the Victorian-looking building, Kendra had to double-check the address. The house was painted a delicate yellow with pops of green, traditional but decidedly unstuffy. In the driveway was an older Saab, the kind of car mid-career family men drove on weekends to go camping with their kids. There was even a front porch with a swing. She climbed the few steps up, noting the almost undetectable motion detectors and sensor alarms, and knocked. The door swung open.\n\nKeith leaned against her couch in a sharp gray suit, sporting a shaggy, expensive haircut. He looked like sex and money. She gave a low whistle as they drank each other in. \n\n\"When did you do all this?\" She made a gesture that indicated the house, his hair and everything.\n\n\"I had a couple interviews today. I didn't want to tell you unless I got an offer,\" he said, coming in for a closed-mouth but lingering kiss. \n\nGod, his lips, Kendra groaned internally. They were so soft, yet strong, and he tasted like fresh mint. He was suave but retained a little danger in his suit; it gave her all kinds of ideas. But first she wanted to see the rest of the house. She pushed away and had to fight him a bit to separate, which made her smile. He'd missed her too.\n\n\"Okay, okay. Why do you have to be so delicious?\" He stole a last kiss. \"You like?\" \n\nShe took a small, languid walk around the living room\u2014and him. The suit she wore skimmed her shapely curves. Damn, my girl's a boss, Keith admired. \n\n\"Oh yeah,\" she smiled. Keith had chosen well. Natural light spilled in through the tall, arched windows, dressed in billowy sheers. Her furniture fit well here, better than it had at her old place.\n\nHe grinned, flashing freshly whitened teeth. \n\n\"Jeez, babe, it's like you went to Handsome Boy Modeling School while I was gone,\" she exclaimed. \"Here I am missing the simple, rugged guy that works with his hands.\"\n\nKeith stepped close. \"We can get hands-on,\" he murmured, relishing the warmth of her body and the way the tiny pulse in her neck beat faster. She gave a teasing smile.\n\n\"Show me around first.\" \n\nKeith gave her the tour, trying to stop imagining ways to christen each room. \n\n\"That's the study, and this is our bedroom. That spare room with the California walk-in closets is your dressing room,\" he added, hoping she'd be pleased. The built-in was like something out of a dream: every piece had a place, even her jewelry and accessories. The main room had a pair of deep velvet sofas, a small table and, off to the side, a bar and tea cart. Book shelves and a wall-mounted flat screen completed the retreat. He couldn't have cared less when the realtor lady showed it, but she'd promised that the lady in his life would love it. Kendra stretched and stooped, marveling at the convenience and lay out.\n\n\"Baby, it's wonderful!\" she gasped. \"I am never gonna get anywhere on time, I'll have too much fun getting ready!\"\n\nKeith opened his mouth to respond, but his belly beat him to it with a loud grumble. He laughed. \"Hey beautiful, what say you slip into something more comfortable and we go out to dinner?\"\n\nHer nose wrinkled in mischief. \"What say you slip into something more comfortable and we order delivery?\"\n\n\"Hell yes.\" Keith was unknotting his tie before she finished her sentence. He'd had big plans for the evening, but so long as they ended on the right note he was ecstatic.\n\nKendra didn't waste any time. She shed her blazer and wriggled the blouse over her head, giving Keith a private moment with her beautifully hung breasts. Her silky bra was an exquisite match to her spiced chocolate skin. He hadn't touched her in weeks, and she needed him to take her there. She'd missed the things his long, lean body could do, and that day in her father's study had made her hunger worse, not better. She hated how weak she was for him, how badly she needed him to split her open and pull her feelings out in the open. She raised her chin for a kiss and when he bent to her, she tugged hard on his golden brown hair. \n\n\"Ow!\" He grinned into her lips and smacked her backside. \"What did I do?\"\n\n\"More like what haven't you been doing.\"\n\n\"I'm sorry, K. Let me make it up to you.\" Keith pushed her skirt down her sculpted legs and helped her step out of her heels. He unsnapped her bra, but when Kendra hooked her thumbs in her silky, spiced chocolate colored panties, he stilled her hands. \n\n\"Uh-uh, leave them on for a bit. I need to concentrate for a second.\"\n\n\"Evil,\" she muttered, even as her tummy fluttered. \n\n\"I'll be peeling them off you soon enough.\" He pulled her into his arms. \"Do you trust me, baby?\"\n\nKendra nodded. \"Of course,\" she replied. \n\n\"Good, I want to ask you something.\" He was suddenly serious. \"I love you, K, and you've never said it back, but you love me, too. I feel it every time we touch.\"\n\nHis tone spooked Kendra. He was right, she hadn't said it, and she resorted to a tactic that often worked with Niall: distraction. Kendra let him continue uninterrupted, wordlessly bending her knees until she was eye level with his heavy cock. \n\n\"Wait,\" Keith said, but she was already leaning toward it, engulfing him. With a groan, he walked deeper into her mouth, until her back pushed against the seat of the settee and his crown lodged in the top of her throat. Her saliva coursed around it as she continually swallowed. \n\n\"I can't believe how good you feel,\" Keith moaned. He'd missed her welcoming lips, but not enough to skip what he needed to say. \"I know you heard your mom, when she said the letters were meant to be a wedding present. But you never asked me about it.\" \n\nKendra sucked him harder, which he took as encouragement even though it made him dizzy. \n\n\"You're a smart girl, probably the smartest person I know. You already know what I'm about to say.\" Keith waited, and when Kendra didn't answer he pulled out past her tonsils with an obscene squelch. She tried to grip him and he grabbed her hand.\n\n\"Stop, I'm trying to talk to you.\"\n\n\"I know,\" she said slowly. \"I'm trying to stop you.\"\n\nKeith didn't flinch. He pulled her up onto his lap, face-to-face. Her legs parted, making way for his engorged nature, but he wouldn't be deterred from his true goal. \"Be my wife, Kendra. Let's put down roots together and grow into the people we were meant to be. I'm the opposite of what you need right now, but I'm working to change that. I'm working to change a lot of things. I can take care of you.\"\n\nTheir bodies locked in on each other and Kendra began the slide into oblivion. She easily took the first half, but those last five inches were a beautiful battle her body would relive in shivers over and over the whole day after. His hands were on her rump in a sensual massage that alternately widened and narrowed her opening, and she snaked her waist in time with his movements. She was falling under his spell and she hated it. Their lovemaking always unearthed feelings in her; this time, it was anger.\n\n\"Marry you, huh?\" She started fucking him harder, wringing his dick in her canal. She wanted him to cum, not from pleasure but because she willed it. Keith fucked back up into her, bouncing her on his lap like a car with hydraulics. He tried to pull her close in an embrace, but she wasn't having it. She leaned away, deepening the angle of penetration, pimping the weight and shake of her breasts as they spun in circles. The position offered a hot visual but less intimacy and Keith picked up on it, even as his libido responded. Why was she running away?\n\n\"That's right. Marry me. Get this raw day and night,\" he bent forward sharply and whispered in her ear. He was mashing her clit, supporting her back, and Kendra had to trust him to hold her almost horizontal as he pumped her full of his cock. She did; Keith would never let her fall. Tears sprang to her eyes. She was so wet, she gushed on his lap with every thrust, yet she scrabbled her nails across his shoulders, caught between pulling closer and pushing him away. That indecision made Keith blow. He had her on the knife's edge, grinding into her mercilessly. He'd spent everything on this one shot, burned all his bridges, mined his emotional depths, because he knew Kendra was worth it. Now, it was starting to look as if she didn't think he was. He pounded her soft body like she stole something.\n\n\"I don't want\u2014\" Kendra stopped, choking up. \n\n\"What don't you want? An ex-con on your arm? A white baby? Spit it out, princess!\"\n\n\"I don't want to be strung out on you! Weak for you. Dependent on you, caving into whatever you say. I won't be like Maria and Dad!\" Kendra burned with embarrassment at her outburst. She hadn't meant to say it aloud.\n\nKeith gripped her weight and stood, wrapping her legs around his waist. Firmly seated inside her, he carried her to the windowsill and rested her bottom on the ledge before slowly pulling out of her. \n\n\"You're not Maria. Your mom is a wonderful lady, but she'll never be as strong as you are. You're loyal, faithful, in the old sense of the word. You had more faith in me than I did in you. You kept writing with no word from me. You kept loving me. You saved my life three distinct times and stayed strong even when my dirt almost ruined your life. Let's make a deal.\" Keith pulled a small black velvet box from the teacart and cracked it open, lifting out a square-cut emerald in a simple platinum setting. He bent down on one knee.\n\n\"Your love makes me a stronger man, a better man. I think I do the same for you. We're incomplete without each other. If I don't support you the way you need, lift you to where you want to be, you walk away from me, no harm, no foul. Give us a year, baby. I swear to God, I'll give you my all. I'm asking\u2014fuck it, I'm begging. You said you trust me; take my hand and jump with me. Marry me.\"\n\nKendra's hand couldn't stop shaking. Not when she slid the ring onto her finger. Not when she gripped the window sill. And not when Keith dug back into her from behind, pushing her happy cries into the night air."
    ],
    "authorname": "brownbeauty",
    "tags": [
        "black woman white man",
        "emotion",
        "drama",
        "love",
        "raw sex",
        "kendra and keith",
        "wmbw",
        "bwwm",
        "aggressive female"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-violin-pt-11"
}