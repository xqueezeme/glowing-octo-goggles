{
    "title": "Old Friends in Paradise Ch. 03",
    "pages": [
        "For almost all of the next week I was out of my head on romance, and it was wonderful. I'd never known a relationship remotely like this one.\n\nI suppose each of my previous boyfriends was a learning experience and whatever happened I knew what to do or not do with the next one, what to give and what to expect.\n\nFirst there was Simon; much as I wouldn't piss on him if he was on fire he did teach me the valuable lesson that not all boys can be cured of their own stupidity or changed into the kind of bloke you want. Also there was that part that convinced me that it's OK to believe you deserve better.\n\nOut of my teens and into the Air Force there was John. He had been a good-looking bloke but we'd known each other for three or four months before we had that slow dance in the squadron bar and he asked me to go out to dinner with him. He was cute but there wasn't any of the instant attraction I'd had with Chris.\n\nLater my eye was drawn to Paul with his smooth self-confidence and his comedy and I really thought we had something, but his career came first and I was kicked into touch as soon as he'd passed his Close Protection course. \n\nRodge was sex, nothing else.\n\nHe was the sexy, cheeky, older man with his devil-may-care, seat-of-your-pants lust and while it was initially exciting and 'naughty', that was it - it was 'just sex' and nothing else and even that never turned out as good as it promised.\n\nAnd he was a twat of course.\n\nChris, bloody hell but he had it all and in bucket loads. Penny pointed him out to me and I saw him across a crowded cookhouse in the same uniform almost all of Her Majesty's Armed Forces wore and he took one glance at me and I had butterflies. Within three nights I was having moist dreams about him and beating one out.\n\nOK, I spent the next night beating myself up about him but the next afternoon and the next evening I rediscovered how comfortable I still was with him as well as still being turned on by him.\n\nTurned on, yes, very definitely but it was more than that - there was something in his look and his smile, something more than just wanting to rip his clothes off, (I did actually want to do that) but even before I recognised him there was still that sparkle. Even he admitted he hadn't recognised me until the third evening and after our T-shirt flirt.\n\nOur Friday night dinner, our two semi-naked days on the beach, mealtimes - our 'hanging out' as Amy had put it. There was something there that grew, even the huge and gorgeous Christian admitted he was slightly afraid to make his move in case he 'ruined something'. In hindsight though I think we would have just given in and fallen on each other eventually!\n\nWe didn't need to though and after that wonderful realisation on that Thursday night after our coffee with Amy, we had an even nicer Friday where decided we would meet the next morning.\n\nWe headed for the beach again, no gentle flirtation this time. We held hands, we kissed, we sat arms around each other on the bus before we even got to the beach. \n\nWe went to the same stretch we'd been to before and flung out our towels with the same routine as the two times before; only this time I stripped out of T-shirt and shorts without even thinking those confidence-sapping thoughts from before. I was happy about sending out my message to the rest of the beach this morning.\n\nChris came back with four beers beaded with moisture and straight from the chiller. I took mine from him and took a long swig. We both sat on our towels pushing our beer bottles into the sand.\n\n\"Chris,\" I whispered, leaning across to him and putting my hands on his shoulders, \"you've got something on your face.\" He looked a bit confused but smiled. \"Me...\" I whispered and glued my mouth to his out tongues giving it plenty, firstly as something I'd wanted to do since I spotted him across the canteen that morning, and happy that everyone within staring distance will have seen our kiss. \n\nThey would then have seen me fall against him and partially over him flipping my long blonde hair our or our faces.\n\nHe put his hands on my waist and pulled me to him, laying almost completely along his fine body. My bare skin against his, hmmm...\n\nWhen we broke he smiled,\n\n\"Hell Chrissie,\" he said, \"That was worth the wait!\"\n\n\"Remember what I said about sunscreen Chris,\" I hissed into his ear.\n\n\"Oh yeah!\"\n\nHe eased me off of him and reached for the bottle I'd already got from my bag.\n\n\"Spray my back for me so I can take care of you,\" he said simply. I did so, spraying across his broad shoulders and rubbing in, enjoying every touch just as much as he did. Then I did his chest feeling good about every swipe, giggling to him and playing with the dark hair on his chest. \n\nAt the same time he was spraying his legs and rubbing them, with some sense of urgency as I think he wanted to get to do the same to me.\n\nPretty soon I kissing his nose to signify that his face and neck had been covered.\n\n\"Your turn Christina.\"\n\n\"Oh yeah,\" I said.\n\nHe rolled me onto my back and started with my shoulders and my neck, massaging the factor 30 into every knook, moving down my chest until he reached the bits that were just about covered by bikini and he touched me almost everywhere.\n\nOoooooooh yeah!\n\nThen it was my tummy and my sides...\n\nChrrrrrrist! It was so sexy, improved only by his move across another bit that was covered over to my thighs and my inner thighs raising each so he could cover all the flesh. He smiled at me as his arm, his wrist, then his finger-tips nudged against my bikini covered pubis and labia. \n\nOh-EM-F'ing-Gee!\n\nIt was the single sexiest thing I'd ever felt and he grinned at me as he did it, not confirming if he knew he'd done it, had done it by accident or had done on purpose - which made it even sexier.\n\n\"Turn over Christina,\" he said quietly, and I rolled as ordered. He started on my neck and shoulders digging in again and giving me the most amazing massage, and soon I felt him move lower and his fingers undo the small string at the back of my top releasing my boobs.\n\nLaying flat I put my arms to my side, but then moved them up to rest my head on them. \n\nI actually wanted him to accidentally touch the sides of my breasts in the same way he'd done to my puss and I wriggled down a bit so more of them would squash out to the sides - quite uncomfortably actually but if it meant his fingertips would rub across them then I didn't give a shit.\n\nThat was precisely what he did, and I groaned deeply as he gave me more deep muscle massage into my shoulders and upper arms, he stroked down my sides and I felt his fingers brush across the sides of my tits. Oooooh yeeeeeeeah. \n\nNext he moved down my back, along my spine, stopping at the string of my bikini panties, but then going around that to stroke both cheeks of my arse.\n\nOh. \n\nMy. \n\nGod.\n\nHe rubbed across them, he stroked them, he cupped and caressed them, dragging a finger through the cleft between them.\n\n\"You're trembling again Chrissie,\" he said, \"Are you cold?\"\n\nI pushed myself up slightly on my elbows allowing my loose bikini top to fall forward, exposing slightly more of my boobs to him.\n\n\"The last thing I can claim to be is cold Christian,\" I said, knowing that my stinging nipple would be in his sight and within his reach. \n\nLaying next to me I felt his left hand slide gently under me and I lowered myself, and my left boob down into his palm.\n\nHe gently squeezed it, continuing his right-handed massage of my back and my bottom.\n\nI was feeling so fucking horny by now and looked around in case we were being observed and our seemingly innocent massage and sunscreen application could be causing upset to anyone.\n\nApparently not.\n\nNow resting on his elbow with his left hand trapped under me, he continued to spray sunscreen along my legs and he rubbed the back of my thighs and down inside again. I pushed my boob down into his hand, rubbing the nipple into his palm and feeling him trap it between his fingers and giving it a hard pinch.\n\nThat caused me a sharp intake of breath and I smiled and moved closer to kiss him, sliding across so he could carry out a similar massage to its twin, all secret, all hidden and making me more and more turned on. \n\nI don't think I'd ever been quite so ready for sex in my life and I thought about whether I'd brought those two condoms Penny had forced on me the Saturday night a week before.\n\n\"You'll be really pissed if you don't have them and need them,\" she'd said, and right there and then I thought about somewhere Chris and I could slide off and get down to it.\n\nI also knew as a police patrol sergeant all of the places we checked because of complaints of soldiers sneaking off for impromptu knee-tremblers and pissed up shags. With my sergeant's stripes less than three days old, I really didn't need to be caught by one of my colleagues with another sergeant screwing each other.\n\nHe finally released my tits to reach down and finish applying sunscreen to my lower legs.\n\nHe lay next to me with a big smile,\n\n\"Was that OK Chrissie, I definitely enjoyed myself.\"\n\n\"So did I Christian, I will confess I was thinking of a way we could sneak off and make love somewhere.\"\n\n\"I'm really looking forward to that Chrissie,\" he said with a grin, \"but in the meantime let's have some more beer.\"\n\nAnd that was that; we chilled out, and Chris reconnected my bikini top so we could swim. I was still outrageously hot - for him. We played around in the sea more than we had the weekend before, our touches then being 'experimental' rather than intimate.\n\nThe amount of people around us meant that any shenanigans we might have gotten up to in the water was impossible.\n\nThen it was back to our caf\u00e9 and lunch, then back to more swimming, sunbathing with some more gentle touches and caresses, laying back on our towels and smooching each other. Feeling just the greatest buzz about my lovely boyfriend I rolled over laying out on top of him again, and we kissed until we were breathless, panting, catching our breath and looking into each other's faces with big, almost surprised looking smiles, as if we'd only just discovered how good this whole kissing thing was.\n\nThere was a cough from behind us.\n\nI looked up to see a very nicely dressed ex-pat lady in her shaded deck chair, voluminous hat, large winged sunglasses noisily turning pages on that day's edition of the Cyprus Mail.\n\n\"Well done Dear Girl,\" she said not making eye-contact with either of us, \"For a moment there I thought your mouth-to-mouth resuscitation wasn't going to work.\"\n\nI giggled, Christian giggled, I apologised as Christian stood to head to the bar for some cold Cokes.\n\n\"Oh I say,\" she said, looking over her sunglasses at the man-mountain-marine in his full glory, \"I take it all back Darling, he was well worth bringing back to life.\"\n\n\"Thank you Mam,\" I said with a hand over my mouth, \"I'll be sure to tell him you approve on his return!\"\n\n\"Oh no,\" she said all innocence \"Never let the good-looking ones know how good looking they are dear girl, all together takes the fun out of it, make him keep up his standards.\" She twisted around, \"Is he from that regiment up the road?\"\n\n\"No,\" I said, \"He's a Royal Marines Commando, a PTI and a Policeman.\" I brushed some of the sand from my leg that had stuck there during our writhing about.\n\n\"Oh weeeeeeell,\" she said, \"He has no excuse for letting his standards down does he.\"\n\n\"No Mam,\" I said standing up to make my way to the bathroom as soon as Christian was heading back and our gear was in view. She looked me up and down with raised eyebrows and nodded.\n\n\"And with a beautiful girl like you in love with him, he needs to keep his standards up after all.\" She said with sweet smile.\n\nI looked back at her.\n\n\"Is it that obvious?\" I whispered.\n\n\"Oh yes,\" she replied, \"you've got the love light in your eyes for sure - and if you ask me the feeling's mutual!\"\n\n\"I certainly hope so!\" I said giving her a wrinkled nose smile and got her to take a picture of us before I headed for the WC.\n\nWhen I got back from the bathroom Chris had started to pack up. We dressed and walked back to the bus stop, his hand tucked into the back pocket of my shorts cupping my bottom. I'd never known it before and I had the biggest smile on my face all the way back to the base.\n\n\"Did you have a chat with the old lady?\" he said as we took our seats.\n\nHmmm... I wondered if she'd mentioned 'the L word'.\n\n\"Just a quick one, she said that you were well worth my effort to bring you back to life.\"\n\nHe leaned forward and kissed me,\n\n\"She told me that I was bloody lucky to have a beautiful girl like you so crazy for me, that I should never let you out of my sight. I agreed with her of course.\"\n\nI kissed him and we sat in companionable silence, his arm around me and my head on his shoulder all the way back.\n\nI was SOOOOOOOOO into my Christian, no it was more than that, I was so IN LOVE with my Christian!\n\nThe next day, Sunday, I was on duty with my team and Chris was running a basketball competition but we still met for meals and at the post-basketball barbecue and prize giving in the evening. There were some nudges and nodding heads towards Chris and me and we really did have that 'new couple' look about us no matter what we did. \n\nI'd had my Sunday chat with Mum earlier, explaining that the day before we'd gone to the beach and got REEEEEEEALLY close. Mum sounded almost as excited as me. she knew that Christian and I had been 'going out'. Still tingling from the day before I admitted that our relationship had changed a bit; yes, I was being careful, no I hadn't shown him 'all the sights' yet but I could confirm he was just the most amazing kisser and one hell of a masseur!\n\n\"Oh Christina!\" she sighed down the phone, I thought she would cry!\n\n*\n\nAnd so life went on. We met for meals, then after duty we would go for walks, a few days at the beach to top our tans with the inevitable making-out and the occasional heavy petting.\n\nOn school nights we'd sit in the bar and just chat or watch the TV, sometimes we'd take our drinks outside and sit by the pool, with more kissing. Sorry, it just happened. \n\nPenny would see us, roll her eyes and say, \n\n\"Oh for heaven's sake, get a room you two...\"\n\nChris had both of his day jobs to do and I saw him in the gym and tried hard not to coo over him. Especially when he arranged our annual fitness tests running first in PT kit, then the other one in our full combat gear with rifles and heavy rucksacks - dug out of our beds to undertake that particular run at 0400, before the sweltering heat of the Mediterranean day kicked in.\n\nYes, Chris and I were inseparable - except when we were at work of course - so much so, a few weeks later my friend Jo the Chief Petty Officer regulator that had arranged the car for me on our first Friday night had taken me to one side and said that some Ex-Pat mates of hers rented out a villa on the edge of the nearby coastal village and she gave me their phone number and said to mention her name.\n\nI was the duty station sergeant while Chris was out on patrol, carrying out investigations into crimes taking place with British Forces or their families rather than PT.\n\nI headed across to the pool that evening where we'd agreed to meet and have a coffee at a bit after ten o'clock. He'd appeared from one of the car parks and the patrol vehicle he just been dropped off from. He looked AMAZING!! \n\nWe chatted sweetly and I mentioned that my Mum was doing his Mum's hair and that I'd admitted to her that we had something going on.\n\nHe was wearing his tan tropical uniform with his white stripes and red MP patch under them, looking like the RMP's and the RAFP's around him but standing out by virtue of his green beret. \n\nThis gear had the chino/khakis look about them and once pressed looked really smart and quite sexy I always thought, especially the gear the guys wore, and Chris's great body and fine arse was well worth the look and he watched me as I checked him out. I ran a hand across his broad shoulder, down his arm and across his bottom with raised eyebrows, nodding to let him know that I'd really liked what I'd seen. \n\n\"Chris,\" I said, taking my cap off and sitting on the same bench that we kissed and caressed on a few nights before, putting down my thermal mug on the bench next to his.\n\n\"Yes Baby?\" He started to use that particular romantic shorthand a few nights before and it still had the power to take my breath away.\n\n\"I... don't know how to say this...\" I grinned to let him know it was all good, \"I've taken Penny's advice and I think I've 'got us a room'.\"\n\n\"Really?\" he smiled, \"go on.\"\n\n\"Jo has given me a phone number to rent a local villa for a long weekend, that's if you would like to, and if you can get the following Monday off?\" I sipped my coffee and broke eye contact with him, I knew his duty roster as well as my own! \"I just thought it might be nice to have some time together,\" he grinned hugely, \"on our own I mean...\" he was pursing his lips looking like his face would burst, so I giggled and slapped out at him.\n\n\"What a fantastic idea!\" he said, leaning forward, \"that sounds amazing, I'll go halves with you.\"\n\n\"Wonderful!\" I said with a big sigh and kissed him again and was just starting to get really comfy with that and what 'having some time together' was actually going to mean. \n\nWe'd have three days and of course three nights with just each other for company and looking around to make sure we weren't being watched I pulled him towards me. \n\nHe reached out for me, stroking my face having been denied the chance to run his fingers through my hair, with it all being pinned into place to go under my hat. I was about to pull a few hair grips when my radio squeaked and I realised that my tea break was over and I had to walk back to the police station where it was my turn on the front desk, the radio and the phones for two hours while Chris was out on patrol with his MP's. He gave me a hug and walked me back, stepping me into the shadows behind the building for a final kiss.\n\nI finished my shift the next day and headed for breakfast, then back to my block for a shower and then chucking my uniform into the washing machine. I lay on my bed and took the post-it note that Jo had given me.\n\nI rang it and spoke with a very nice lady who said that weekend was free and we could have it for a very reasonable price. I accepted straight away and said that I would drop the money to her the next day when I was passing that way on duty.\n\nShe said that seeing as it was just for the weekend and we were both of the Police persuasion we had a reduction of fifteen percent and she emailed me a selection of menus she would have delivered for us and leave in the food cupboard and the fridge, I thanked her again feeling a tremble run through me. I'd only ordered a food delivery but I was all but panting!\n\nThe strange thing was that there hadn't been a man in my life for well over almost eighteen months and no one I cared about for at least two, and beside the occasional wank I had been pretty much OK and not bothered by any desire for male company, and yet Chris was all I could think about. I'd quite forgotten that wonderful feeling and just wanting to be with him and now I came to really think about it much, much more.\n\nI told him about the booking for the following weekend and we both ensured that we were either on days off or were at least not 'available for duty'.\n\nChris was working his straight days and taking the various shifts through their requalification's and for a few days I never saw him, but we did stay in contact over email and the occasional text message.\n\nI was working the next weekend and saw him for meal breaks and when he was in town having a few quiet beers with his section. He seemed to be extremely popular with his crew and I gave him a few looks and just a couple of discrete touches that let his three girls, one RAFP and two MP's, know that he was very much taken and just to nail it I was now a sergeant that and my rank slides showed it. During my coffee break on Sunday afternoon I rang my Mum.",
        "\"How's Christian!?\" she almost shouted.\n\n\"He's great Mum,\" I said, but that didn't even come close to what I felt about him.\n\n\"Just great?\" she teased.\n\n\"OK, we've booked a villa for next weekend.\"\n\n\"Oh Christina!\" she purred, silly romantic thing that she was.\n\n\"I'm really looking forward to it,\" I said.\n\n\"I bet you are!\" \n\n\"Mum?!\" I guffawed.\n\n\"Well aren't you?\"\n\nI paused.\n\n\"Yeah, I really am.\"\n\n\"Good for you Baby,\" she said, \"just take care of everything and enjoy yourself.\"\n\n\"OK Mum,\" I said. I nearly told her about the box of condoms I'd got from the medical centre seeing as they weren't convinced that the pill would be effective in time, \"All under control I promise.\"\n\n\"Then you and Christian have a wonderful weekend and really get to know each other again after all these years.\"\n\n\"OK Mum.\" I told her the rest of the news from the Cyprus Joint Police Unit, about Penny, about Sam, the rest of my team and asking when was she bringing Dad out for a holiday.\n\nWe blew kisses and promised to speak the next weekend.\n\nChris and I met Monday and Tuesday evening. We sat in the CJPU mess and had a few cold ones and chats with our colleagues that was very much a routine now; Penny would tell us to 'get a room', and we'd enjoy the banter about how I must have been struggling not to kick sand in Chris's face seeing as we lived on a Mediterranean island that was covered by the stuff.\n\nChris played up to them and took it all in good stead while I maintained my innocence and drank my beer in silence. On both evenings he was kind enough to walk me back to my block, taking the long way and finding ourselves on the bench by the pool again, me on his lap and in his arms just as some of the younger and more junior Non-Coms had in the past. While at the time I'd rolled my eyes at them like some of my other single friends, I suddenly saw the attraction.\n\nThe next few days flew by and before I even realised Penny was lifting my weekend bag from the top of my wardrobe and asking what sexy gear I was packing for my weekend with the Marine.\n\n\"Fuck's sake Christina, you've finally 'got a room', make the effort sweetie!\"\n\nShit! The next evening!\n\nEven though we both really should have been turning in, we sat up til past one o'clock giggling, drinking tea and picking out beachwear, day wear, something nice for Saturday evening in case we went out to dinner and a mix of other stuff - to be honest I think we pretty much packed my entire wardrobe of 'nice', 'pretty' and 'sexy'. \n\nPenny was kind enough to point out that while I had some really nice underwear (the majority of my really sexy stuff was safe in my chest of drawers at home) I had nothing over a shiny silky vest top by way of a sexy nightdress.\n\nI dug through my drawer looking for a camisole top I 'thought' I might have brought with me, and as Penny checked her wardrobe and drawers she stopped, slid her top drawer closed and looked at me across folded arms.\n\n\"Come on Christina,\" she said with a pursed lipped smile, \"I saw you both in the bar, in fact I've been watching you since he arrived and you started your sexy wiggle whenever the green-bereted hottie was within 500 metres of you,\" she folded her arms, \"and he can't take his eyes off you either. \n\nAnything sexy you wear the Marine is just going to rip you out of the second you both walk in the bedroom. Shit, I doubt you'll get out of the lounge without him grabbing you Hon.\"\n\nI smiled and nodded and thought about just that, so we said goodnight and turned off the lights and turned in. I lay back in bed and thought about it.\n\nChristian; making love with 'my Christian', my best friend in the world, no one else had ever come close to him, not Rachel, not even previous boyfriends. \n\nWhy was that, was it animal attraction or was it just because I knew him so well, after all I had always loved him; always.\n\nBy the time I was in the RAF, Mum had started to take care of Julie's hair again and he was at University and while we emailed and chatted regularly Mum hadn't really kept me up to date with what was happening with my old mate. \n\nI knew he'd headed off to University but that was through Rachel, but I guess that Mum and Julie hadn't discussed our both being in the services and our various tours. She certainly never mentioned that Christian was in the Royal Marines and had been awarded a QCB that was for sure! The comment in her email, that was it.\n\n\"...I thought something had happened between the pair of you, only you stopped talking about him rather abruptly, and you and that awful ex-boyfriend of yours used to make such horrible jokes about him and his family...\"\n\nThat must have been it, that must have been why she'd never told me about him. I'd ask her during our next phone call.\n\nI thought about when we'd stood there making out on our return from the nightclub and he'd stroked my bum, our afternoon on the beach where he massaged me and touched me all over, stroked and caressed my bottom again, cupped and squeezed my bare boobs; it was the sexiest thing I'd ever known - so far. \n\nHe was as crazy about me as I was about him, had to be. I pictured his smile in my head, that wonderful look that warmed my insides and took my breath away in the same instant. I fell asleep with a smile on my face and hugging myself. I had a whole weekend of him all to myself.\n\nThat was the longest Friday of my entire career and I'm still convinced that just the morning was 17 hours long. We didn't meet for breakfast but did for lunch and I excitedly asked him if he was packed and ready.\n\n\"Packed Chrissie,\" he said with a cheeky grin, \"but we're on bloody standby tonight, those fucking grunters are getting their rocks off talking about how they're going to knock seven shades of shit out of each other but both Battalion's adjutants can't prove anything over the testosterone-fuelled chat that's running around both sets of cookhouses and NAAFI bars and aren't sure they have enough to gate 800 blokes because of it. So my entire crew is on standby tonight until after closing time. What a pain in the arse.\"\n\nI reached across and took his hand, looking around to see if Penny was there and would tell us to 'get a bloody room' again. She wasn't so I squeezed his hand and looked lovingly at him.\n\n\"Don't worry Chris,\" I said, \"you've got a whole long weekend with me to get over it.\" I picked up my coffee and looked at him.\n\n\"I'm so looking forward to it Chrissie,\" he said, \"Fucking policework is a such a pain in the arse, it's why I became a PTI!\"\n\n\"I'm sure you'll think of something Chris.\" I said, \"can't you just wave some PTI magic wand and sweeten all of them up?\"\n\n\"Sweet...\" a huge smile rolled across his face, \"Of course! Christina Mair YOU are a fucking genius!\" he downed his hot coffee almost in one, \"Baby, I've got to scoot but trust me, I'll meet you at the Villa as soon as I possibly can, and thanks to you it might be a lot quicker!\" He squeezed my hand, stood, winked and almost ran from the cookhouse.\n\nStill unsure of whatever genius thing I'd done I finished my coffee and returned both our plates and cutlery. My team were assigned to various tasks and being the sergeant I kept the easiest one for me. While my guys were digging out the backs of our patrol vehicles and cleaning them all over I had an afternoon of indoor work with Sam and eventually after clearing out an evidence locker it was suddenly 1600 hours! \n\nShower, then laundry, with a promise from Penny she'd take it out and hang it to dry for me and bring it in, I was ready to go.\n\nWhile I'd sorted everything, grabbed my bag and managed to scrounge a lift to the villa, Chris and his entire section were still on standby for a real likelihood of a punch-up between squaddies from the two infantry battalions that had allegedly been squaring off at each other for a few months now over the outcome of a football match of all things. \n\nHis crew were in MTP's with body armour, with cuffs and batons hanging off - pretty warm for that kind of thing and in a couple of minibuses with radios in case they were needed. \n\nI was annoyed of course but that was kind of what we did and technically Chris's days off didn't start to until Saturday morning but I arrived at the villa in bags of time to get the key from the lovely ex-pat owner, a former Pay Corps Officer called Pat and her husband Trev, a one-time Sergeant Major from the Royal Electrical and Mechanical Engineers and they showed me around and asked when my boyfriend was due to arrive.\n\n\"My boyfriend...\" just saying that gave me a warm feeling and they must have seen my smile, \"Chris is still on duty and I hope one of the guys will drop him off here quite soon.\"\n\n\"We'll leave you to it then honey!\" said Pat with a maternal grin bordering on the quite cheeky. She was good friends with my friend Jo and I guessed that our new love affair had probably been discussed.\n\nI checked out the villa and it was amazing, better even than the pictures in the leaflet she'd sent. The TV was huge with a DVD player and stereo system through large speakers along with a large selection of movies and music CD's. The pool was HUGE, was nicely lit and had lots of chairs around it and a gas barbecue.\n\nThe kitchen cupboard had all the necessaries for a long weekend including enough food for a Saturday night barbecue and a Sunday lunch should we so desire. I made myself a cup of tea, my first Earl Grey in months seeing as the mess never served it and I used up what I'd brought with me from my last leave, and sat on the poolside veranda listening to the waves washing up on the beach a short walk from my, no OUR weekender.\n\nI looked at my watch and yawned, it was gone ten o'clock so I decided that I would clean my teeth and head for my bed, sending Chris a text saying that he would need to walk around the side of the villa and I would leave the bedroom sliding patio doors open; 'our bedroom', hmmmm.\n\nHe'd probably be some time yet.\n\n*\n\nAs it happened he had already planned for a quiet night and early finish, even though the scuttle had it that punch-ups were planned.\n\nBeing his Uncle's nephew, Chris grinned to his crew and rather than park up somewhere quiet and wait for the call they went fluorescent yellow and high profile, with big smiles and friendly chat to all of the people leaving the pubs and clubs.\n\nHe'd managed to get packets of large gobstopper boiled sweets and each MP had filled his or her pockets with them and stood around smiling and chatting to the people out on the town, many interested in the huge commando standing out from his colleagues' scarlet berets and blue berets with his in green.\n\nAs the drunken young singlies turned out from the closing pubs and clubs they were chatted to, lots of banter and the gobstoppers were dished out to one and all, even the pub staff.\n\n\"St Michael's day!\" said Chris with a grin handing over the plastic wrapped sweeties, \"You shout 'Happy St Michaels day', put the sweet in your mouth and I do the blessing!\"\n\nThe first grunter did just that.\n\nChris shouted, \"Ebrius miles ire in domum suam!\" waving a hand priest-like in the air towards the bus stops and taxi ranks where the dozens and dozens of mostly short-haired young men could be found with quite a few young women, for some strange reason this elicited a cheer!\n\nEvery now and again the shouted 'Happy St Michaels Day!' could be heard.\n\nThis was picked up by some of the likeminded and everyone seemed to have a full mouth, and mumbled, smiled and pointed to the MP's. They climbed on the buses, climbed into taxis or walked and the night ended peacefully forty-five minutes before it usually did with only a couple of arrests the duty crew were dealing with.\n\n\"What was all that with the gobstoppers and the Latin Sarge?\" said one of his RAFP girls.\n\n\"Never heard of St Michael,\" said another, \"other than Marks and Spencer of course.\"\n\n\"St Michael is the patron saint of police officers, and every Friday night is his night,\" said Chris in a direct quote from his Uncle Pete, \"and 'ebrius miles ire in domum suam' is very dodgy Latin for 'drunken soldier go home.\"\n\n\"And the gobstoppers?\"\n\nThe sports psychologist took over, folded his arms and looked down at her,\n\n\"How do all the fights start outside pubs and clubs?\"\n\n\"They start arguing normally, then...\" said the RAFP girl as the minibus door slid closed behind her.\n\n\"And tonight?\"\n\nHe saw it come to her,\n\n\"Their mouths were full so they couldn't start gobbing off at each other! Good one Sarge!\"\n\n\"Powerful weapon you can't use too often,\" he said, \"Learnt it from my Uncle Pete who used to police Bournemouth Town Centre and sea front.\"\n\n\"Genius!\" she said.\n\n\"Remember honey,\" said Chris pointing to his head then his feet, \"Up here for thinking, down there for dancing...\" \n\n*\n\nAn hour after that I woke up with a start to the sheer bulk of Chris as he slipped off the MTP shirt and then skinned down his trousers having taken off his boots earlier. Just lying there in the dark and listening I could tell that my gorgeous boyfriend had stripped naked.\n\nThis was really good, because that was exactly what I had done! \n\nI loved to sleep like that and whenever Penny was away or on night shift I often would. I'd agonised over what to wear and finally went with nothing. \n\nAfter all, he'd seen me in a bikini that stitched together wouldn't have created a piece of material the size of an A4 piece of paper, and we were both severely in lust with each other.\n\nI felt the side of the bed dip and Chris lay down beside me. I rolled to him and pulled him towards me and we kissed. \n\n\"Hey Chris,\" I hissed, \"Welcome home.\"\n\nWOW! It was just the most amazing feeling of his naked skin against mine, and I was soon to discover that while we'd cuddled and caressed on sofas on benches, a few times on the beach, my big rugged commando was amazingly sensitive and knew just how to touch his lover.\n\nHis hands started in safe areas like my back, my sides and ooooh yeah, running his fingers through my hair! They went to my sensitive boobs and I trembled, they had received some attention from previous lovers but nothing like what Chris gave them, his lips and tongue soon had my nipples aching and stinging they were so hard. \n\nDuly satisfied he moved to a very gentle hand cupping first one then both cheeks of my bottom, only giving that up to slide a hand up my very sensitive side to finally cup and caress my tits one last time - all with barely breaking the kiss that had started when he first held me. \n\nMy Christian, in bed with me and I didn't even consider that we were naked and about to make love, it was... it was just Chris and... wow!\n\nI had never known passion like it, trembling and moaning like the worst Mills and Boon virgin even though I'd shagged Rodge quite a few times, and my two boyfriends before him. \n\nThey had all been Non-Coms in Her Majesty's Royal Air Force, so they were quite fit and reasonably clever, but none of them had been a match for the PTI Royal Marine! My Christian.\n\nOur movements were becoming more and more desperate and I took the initiative and reached down for his erection I could feel brushing against my waist and legs, taking it and giving it a few hard pumps, the occasional squeeze and gently massaging the sensitive head - it felt huge! He didn't object to that at all and reciprocated with my genitalia in an equally exciting and stimulating fashion.\n\nFucking hell though, whether it was just that I was really turned on after having been working up to this moment for a couple of weeks or the physiologically trained expert on the human body I was in bed with just got which parts of me needed touching and how.\n\nAnd didn't he just.\n\nHe lay a gentle hand across my bare puss shaved especially that morning just to make sure, and gave it a squeeze. Chrrrrrrrrrist it turned me on and I pushed hard up against his hand trying to grind my inflamed clitoris against his palm and give me some of the relief my sexed-up body was crying out for, had been crying out for, for a month, since that Friday night when he'd grabbed my bottom.\n\nMy Christian had just grabbed My pussy! What the Actual FUCK!\n\nIt felt so natural though and I didn't feel weird or pull away from him, I just felt horny!\n\nFortunately Chris realised this and his middle finger found my clit and I cried out as it played along my soaking labia and up into the hood. Giving that a momentary fuss, his hand moved back and down and that same finger was pushing up into my puss, undertaking the briefest of reconnaissance until he found my G-spot and scrubbed at that.\n\nInvoluntarily I found my hand grasping his wrist and holding it in place.\n\n\"Oh fuck yeah,\" I hissed out to him, \"More... Chris! More... Please... oooooh fuck! CHRISITIAN!!\" I screeched as I reached my first orgasm with him.\n\nI shuddered and jerked as my come took me there and I slowly released his hand figuring I'd probably cut off the blood supply I was holding it so tight.\n\nI used that hand to pull his face to mine and we Frenched each other.\n\n\"Condoms,\" I said when we broke for breath, \"top of the nightstand Chris.\"\n\n\"Condoms?\"\n\n\"Yeah,\" I said feeling so horny that I could never remember a feeling like it, \"I think you should make love to me.\"\n\n\"Great idea Chrissie,\" he hit the small beside light and all became clear, and he handed me the small box so I could take one out, rip it open and reach down to his huge cock, putting the condom on very quickly and feeling him sit up a bit and make sure it was in place before he rolled over me. We were both panting and our excitement was obvious, my thighs opening without any real thought or effort from me.\n\nFinally and with only a nudge from me, I felt his huge erection push into my wet, swollen pussy with almost no pulling, and I pushed up against him, something that Rodge had complained about but fuck, while Rodge had quite a nice average-sized penis - the biggest of my three lovers - Chris's weapon felt huge and felt amazing as it slid up and into me, filling me like never before.\n\nI gasped looking up into his face and he mastered me, as taken with the moment as I was,\n\n\"Ooooooh yeah!\" I sighed, beaming into his face.\n\n\"Shit Chrissie, you're perfect Baby, completely fucking perfect!\"\n\n\"Oh Christian!\" I gasped back at him pulling him down into and against me, our naked bodies touching and rolling together, my thighs holding him close but no so close that he couldn't push in and out of me, I felt a familiar tremble in my loins that told me just how good my lover was I thought that tonight might finally be the night and decided to tell him my little sex secret. \"Christian,\" I cried into his ear, \"I'm really close,\" I crossed my arms behind his neck and pulled him a little closer looking up into his face, \"I've... I've never come making love - like this I mean,\" I looked into his eyes, \"Please make me come?\" I put on my most girly pout.\n\n\"A making-love orgasm virgin huh?\" He grinned down at me, \"Can soon sort that out...\" he raised himself up onto his arms and started the most amazing rhythmic thrusting in and out, moving his organ around inside me to touch places I'd never felt touched in that way before; my G-spot, deep into me at the mouth of my cervix with the eventual clitoral alignment that had me groaning and crying out, \n\n\"Ooooh my God!\"\n\nThat was enough and I came, huffing through the several short intakes of breath that I normally had when reaching the peak of my climax before a long intensely strong series of trembling vibrations hit and I came.\n\nAll of this happened and Chris fucked me through it, easing back as he felt my shivers of pleasure then speeding up again as he felt me coming down but still eager to respond.\n\n\"That better?\" he said reaching down to kiss me and lowering his body into mine.",
        "\"Oh fuck yeah!\" I hissed back at him, \"I have NEVER felt an orgasm like that in my LIFE!\" I pushed hard up against him feeling his dick push hard against my cervix again and crying out.\n\n\"Guessing you'd like some more Chrissie?\"\n\n\"Pleeeease!\" I said, adding a more energetic \"YES!\" as he raised up and off of me again for another round. Being so close to my last come, it took me no time to get back to the plateau of my second and this time Christian eased off physically, but my psychologist boyfriend decided it was time to give me a bit of a brain-fuck...\n\n\"Come for me Christina,\" he said kissing my face and down my neck and exhibiting the most tender and sensitive movements, \"Have an orgasm just for me, come for me Chrissie, come for the big strong commando, come for your Christian...\"\n\nCHRIST!!\n\nMy second come hit me, harder and faster than the first and I was crying out his name again,\n\n\"OH SHIT, CHRISTIAN!\"\n\n\"Oh Christina!\" he hissed back into my ear as I felt him push hard up and into me for the last time, his come as hard-earned and welcome as both of mine had been.\n\nWe rolled to our sides and glued our mouths together, catching our breath, cooling down from the single most intense sexual activity either of us had ever known - we did check.\n\nStill panting the tiniest bit I looked at him, the first man to make me come during a fuck, twice in fact; no, the first man to ever make me come during love-making. \n\nOK, he did fuck my very shapely little bod into the middle of next week, but it wasn't just that, it was... sexy, sensitive, tender, passionate and without question 'lovely' - just what I'd been hoping for and dreaming about when I'd first considered making love with Chris.\n\nAnd that was it, I felt that feeling again, shit but I had it bad for my old friend and neighbour, which all added just the tiniest tremble to my loins as I slowly came down.\n\nI looked into his gorgeous face,\n\n\"Christian,\" I said biting my bottom lip, \"how the fuck are we going to explain that to our Mums'?\"\n\nHe laughed and pulled me against him, I was powerless to resist.\n\n\"Let's just say we were playing house again.\"\n\n\"I'm sure I've never played house like that before Christian.\" I snuggled up close to my big strong man and felt warm, safe and... yeah OK, I'll say it, loved.\n\nWe woke at work o'clock the next morning and I was most pleased to find that he was ready for a rematch, the sight of his huge morning wood holding up the sheet that covered us a bit scary in the morning light but I'd enjoyed it with no problem the night before so I didn't let that stop me kneeling across him to enjoy myself with some classic cowgirl.\n\nChris didn't object in the slightest and I realised it was his first chance to see me naked in the daylight. OK, he'd seen my VIRTUALLY naked as we played around on the beach and in the warm blue waters of the Med but not completely.\n\nLaying back he put his hands behind his head and just looked and grinned lecherously.\n\n\"Oh yeah Chrissie,\" he said with a look that made my toes curl, \"You are well worth the wait,\" he reached out a single hand to stroke my bare skin, reaching up to cup my left breast, the hard nipple pinching between his fingers, \"you are, as I have said before, perfect...\" his voice tailed off and he pulled me down to kiss him and I purred again, squeaking a little note of acquiescence into his mouth as his arms wrapped around me, one slipping down to lay warmly on my bottom.\n\n\"My turn now Christian,\" I said turning to the bedside table and the condoms I'd left there the night before, opening one, and reaching down and giving him a few cheeky wanks and squeezing the biggest penis I'd ever seen not in a porn movie, then once satisfied to roll the prophylactic into place before raising up settling back down onto him again with a cheeky, \"Wow Christian...\" as I had to raise one knee to get high enough to come back down on him with a slightly guttural moan as I reached the perfect depth.\n\nOK, our mutual friend Rachel had confessed that she'd slept with my friend Christian and in fact lost her virginity to him, she certainly never mentioned he was this huge! \n\nBut then he was her first so I guess every guy she slept with afterwards would always be a bit of a let-down! As I bottomed out on him, I thought of how this might have been to lose your virginity to!\n\nWith all of those sexy thoughts in my head I screwed him for as long as I had energy which was half-way through my first come and almost collapsing onto him in my throes. He held me and fucked me through my climax stopping only to roll out from under me then raise me by my hips and push me forwards a bit before I felt him all but mount me from behind.\n\nChrist but he went deep into me, pulling me back hard onto his length with both hands on my still tender tits, with a tiny cry and an eyes-wide-open stare into the pillows as I felt my second come of that morning start it's quick but unstoppable progression through me from my cervix to all points north, south, east and west until I cried out again in the most amazing sexy explosion of feelings from my puss all the way up to my brain, and I actually cried.\n\nI felt him come again, his swollen glans deep inside me after he'd enjoyed his ride. I slumped forward giggling like a pissed idiot my entire groin feeling like it had just run a marathon.\n\nHe saw my tears,\n\n\"Christina!\" he said laying next to my and cupping my cheek, \"are you OK?\"\n\n\"Hell yeah!\" I beamed into his face and kissing him again, \"that was THE most amazing love-making,\" I pecked a kiss on his lips, \"EVER! I've never come as strongly as that - not even on my own with my vibrator!\"\n\nHe smiled the smile of the satisfied professional and kissed me again.\n\nI was no stranger to orgasms I'll be honest.\n\nLike many of my gender I was lucky enough to have been encouraged not to be afraid of sexuality, or sex for that matter, and can still to this day remember in my first year of college leaning against the washing machine quite accidentally and feeling my first rather domesticated sex toy and the amazing feelings it evoked. \n\nI now knew why I had seen my Mum, someone I knew was quite a passionate woman herself, standing so close to it as it went through the spin cycle.\n\nAbout a week later I saw a Channel Four movie on my bedroom TV that was a bit racy and left nothing to the imagination, added to this I was considering having sex with Simon, so I masturbated to a full climax for the first time. Oooh it was very nice.\n\nIt became a bit of a habit and I read various things on the internet about what and what not to do and how I could have the most fun. I'd started a Saturday and holiday job in Boots the Chemist in the town so had access to money, I also had some very smart looking corporate clothing that with the addition of some of the demonstration make-up they had in abundance to make me look more grown-up, made my way to Ann Summers and bought a vibrator, the shop girl only marginally older than me talking me through what to get and selling me a simple phallic vibe that I could use for either clitoral or penetrative pleasure. I will confess I was still a virgin and didn't want to lose that little treasure until I found the right guy to help me with it.\n\nI soon learned how to turn myself on and how to make myself come, learning to control my gasps and cries unless I had the house to myself. I ran the first set of batteries down in less than a week and but bought a twelve pack from work with my staff discount and never ran out again. \n\nWith the history of my various orgasmic pleasures over the years fresh in my mind - none of which came close to my last ones - I lay in the wide king-sized bed I'd slept the most relaxing night's sleep in with my wonderful man and been screwed by him twice and, I think, had four or was it five comes. I tried to gather enough energy to get out of bed, falling into a light doze with my hand lightly on my still-swollen pussy.\n\nAs I lay there gradually coming back to life, Chris had made us coffee, real coffee (not instant!) and was grinning as I slowly emerged from my orgasmic coma, and thanks to a cup of the brown life-reviving brew I was able to head to the bathroom on wobbly legs just about in my control. \n\nAfter using the loo and washing my hands I just stepped straight into the shower and it was enough to bring me back to life again.\n\nI arranged an easy breakfast of granola, yoghurt with honey, fresh fruit I cored or peeled, and made tea while my lover had his turn in the shower.\n\nWe sat in the shade on our veranda and looked out across the med, both still naked and for once speechless, other than simple statements about the food or what a glorious day it was.\n\nSomething unspoken had passed between us and I guess it was just that lovers' telepathy thing, after all we already knew the answers to so many questions about the other person that the small talk was unnecessary.\n\nWe relaxed into our Sun loungers and applied sun-screen, especially to our white bits that never normally saw the sun and Chris gave me another massage. This time he didn't stop at my bikini line and I felt his hands massage my bottom, inner thighs and breasts, just like I'd wanted him to those weeks before at the beach. It was amazingly sexy but I just wanted to sleep afterwards.\n\nAfter an hour of lying there, still both recovering from our amazing rounds of love-making Chris stood, removed his sunglasses and leapt straight into the pool. I took off my sunglasses and jumped in after him, pulling myself along in a half-crawl, half breast-stroke kind of movement as he powered through the water like an Olympian. Fuck but he was fit and he looked it, so I moved across to where he was about to do his next racing turn and he was quick enough to swim into my open arms and we kissed again.\n\nWhile I have no complaints about how he'd kissed me in the weeks leading up to this, sat in the cool water in his arms, kissing and cuddling was just the best and I all but used up my supply of contented sighs and gasps of simple delight.\n\nWe climbed out of the pool and sat back on the loungers to dry off before we headed back into the villa for more coffee and a snack, still naked and I just loved the attention and grateful looks of my muscular marine as he leched at my naked form.\n\n\"Like what you see Chris?\" I said.\n\n\"I can't get enough of you Chrissie,\" he said with a hint of a growl, \"I'm conscious that in three days time I'll have to imagine and remember what you look like with no clothes on - I can't get enough of you Baby.\"\n\nI was so touched I walked to him, held out my hand and led him to our bed again.\n\nHe lifted me and lay me down, bringing his head to my groin rather than laying over me. Before I knew it he was raising my legs and kissing my thighs getting closer and closer to my sex, John had never gone down on me, Paul twice but I could tell he was never really into it, Rodge a few times later into our affair and it was pretty good but he always stopped just as I was getting into it. It always made me feel very sexually vulnerable and I'm not sure I ever really relaxed enough.\n\nBut Christian, Wow-Wee! \n\nBearing in mind we had made love twice already, and I'd always found oral to be the most intimate of all sexual acts but within his first lick of my labia, I was laid back and rolling towards my first come as he penetrated me with his tongue, swiped up and down, sucked and licked my pussy lips before he settled on my clitoris and attacked that, while his pointer finger strummed inside me and found my G-spot.\n\nMy climax was incredible and I felt his short buzz-cut hair in my fingers as I stroked his head in encouragement, calling out his name. He decided that one orgasm wasn't going to be enough and without giving me time to recover took me to my next, this time finger-fucking me while he sucked and licked my genitalia, as I cried out his name a second time, I felt his pussy-wet ring finger slide into my anus and stroke there! WHAT THE ACTUAL FUCK! Where had THAT been all my life.\n\nBoth hands were at my sides grasping my sheet as I rolled into a series of powerful spasms I'd never known the like of before. \n\n\"Oh Christian!\" I gasped out his name as his lips, tongue and fingers had my hips raised off of the bed as I came to my first multiple orgasm the like of which I'd never known in my life before, and it was only when I dragged my tingling groin from his face that I was allowed some respite.\n\nHe was quickly at my side and holding me through the last of my tremors and wiping away the tears on my face as we giggled, kissed and hugged before we napped again.\n\nI woke to the smells of cooking meat and I crawled from my bed and pulled on my tiny panties and the olive green T-shirt Chris still had on his pile of uniform from the night before. He'd lit the barbecue and the first of the steaks were going on.\n\n\"Chrissie!\" he said with a grin, \"was just coming to wake you up, coffee in the mug there.\" He leaned forward and kissed me, softly and tenderly and the bubbles in my tummy were at it again. I was crazy about this guy! It was more than lust I knew, it was... love, nothing else could even come close.\n\nI'd felt a bit like this before of course but... y'know...\n\nOn reflection I'd fallen for Simon after all of his attention and he was bit of an infatuation, and I was in love with him but not sure he felt the same ever, he was in love with rugby after all.\n\nJohn and Paul - not really, I'd had real feelings for Paul and did feel it getting serious just at the point when he dumped me for some wrap-around sunglasses, a Sig Saur P226 pistol and an M16 assault rifle derivative. \n\nRodge? Nah - I was on the rebound and feeling down, he was 'just sex' and whenever I started to think it could be more once we got out of that place, he'd do something amazingly cuntish and blow that out of the water and I'd swear never again.\n\nUntil we met in some shitty corridor or yard or room at Bastion and we'd be all over the other and shagging again. It wasn't making love, definitely not. \n\nAfter less than 24 hours with Chris I could never call anything I'd had before love-making ever again, not in the same way, hell no.\n\n\"That looks amazing Chris,\" I said, putting a hand on his T-shirted shoulder, \"do I have time to... freshen up?\"\n\n\"About ten minutes honey,\" he said, \"but you look fucking gorgeous already!\"\n\n\"What?\" I said pulling down his shirt I was wearing to show 'RMCTC LYMPSTONE - STAFF' around the Royals' globe and laurel cap badge, \"this ol' thing?\" \n\n\"You'd look sexy in a sandbag Chrissie, trust me.\"\n\n\"Back in five,\" I pecked a kiss in his cheek and had a really fast shower without getting my hair wet and in the bedroom pulled on my lovely green lace, thonged bodysuit which had sat in my drawer since my arrival, but now I knew it would get the kind of appreciation it deserved.\n\nI sprayed perfume and applied a touch of lipstick, and for badness put his T-shirt back on again. It smelled nicely of him, of my boyfriend, of my Christian.\n\nMy Christian, I'd called him that years before when we were both at primary school and another girl had been jealous of our closeness and had tried to make him her best friend, but MY Christian had seen right through that.\n\nI'd loved him like a brother, always had, until he wasn't there and then the other boys started to take an interest in me and...\n\nI shook my head and headed back out to the veranda and the great food he was cooking. \n\nHe saw me and grinned again, his T-shirt fitting me like a short dress. I gave him a twirl and he handed me a beer.\n\nI thought about the falling out and my 'bother from another mother', \n\n\"So Chris, do you think that your childhood... err... difficulties made you closer to Stevie?\"\n\nHe paused, flipping a lamb chop as he did so.\n\n\"Nah,\" he said with a grin and taking a long slug on his beer, \"he's just as much of an aggravating little twat now as he was then.\"\n\nI laughed,\n\n\"That's wicked!\" I said, slapping out harmlessly at him, \"talking about OUR 'ickle baby Stevie like that!\" I threw in 'our baby' just to give him some more old 'Christian and Christina' context. \n\n\"Oh, he was alright I suppose,\" he looked thoughtful, \"just because he's my brother never stopped me wanting to strangle him every now and again.\" He sipped more beer and flipped another lamb chop, \"When Rachel and I first started going out he was twelve - and just followed me... sorry US, around the whole time, could have strangled him. You 'only children' are so lucky.\"\n\nI moved closer to him and slipped an arm around his waist,\n\n\"But I had a brother Christian,\" I said, \"he lived two doors away from me for most of my life, and looked after me, unless I was looking after him of course.\" I couldn't hold back my smile and he kissed me this time - long, slow and incredibly, gently amazing and I thought I would melt.\n\n\"Yeah, and when you started going out with boys I was the aggravating twat I expect.\"\n\n\"No! You were never but I did think you might report back to your Mum who would then tell mine!\"\n\n\"There,\" he said, his arms extended, \"same shit, different day. I could have cheerfully strangled Stevie sometimes; when I was going out to meet Rachel I would let his bike tyres down and hide the pump, happy he wouldn't find it 'til I was safely a few miles away on my bike.\"\n\n\"Christian Tucker!\" I admonished, \"that's wicked.\"\n\n\"Sibling thing Baby,\" he said with a shrug, \"we do shitty stuff when we're kids... BUT,\" he pointed his beer bottle at me, \"I went off to university, he was at big school. He started reading my physiology text books and decided he wanted to be a paramedic so took Chemistry and biology. His teachers at school then college are like 'with your results you could get into medical school' so now he's a doctor, and we're best mates - have been since I went to uni'.\" He leaned in closer, \"I think absence makes the heart grow fonder.\"\n\n\"Definitely,\" we kissed again.\n\nJust to make the perfect moment, He raised a plate and placed a burger onto an already prepared bun with some salad, laid cheese over that, then two strips of bacon. This had a pork chop, a steak laid next to the bun then some sausages laid into a cut baguette, \"there you go,\" he said.\n\n\"Is that all for me?\"\n\n\"Of course, the rest is mine!\"\n\n\"But...\" I gasped, \"I'll never eat all that!\"\n\n\"Darling, lovely Christina,\" he said, \"we'll get up tomorrow morning and do a bit of a run and a walk before it gets too hot. Trust me honey, with the rest of the energy we've been burning off this weekend, you'll never notice it.\"\n\nI put my hand to his cheek and kissed him,\n\n\"I keep forgetting I'm sleeping with a PTI!\"\n\nHe grinned, \n\n\"Not that much sleeping going on the moment Chrissie!\"\n\n\"Well that's hardly MY fault is it,\" I said, \"you're really good at it, you can hardly blame me for taking advantage of you when the opportunity presents itself.\"\n\n\"Aaaaahh,\" he sighed as he plated his own food, \"my work here is done.\" \n\n\"It had better not be,\" I whispered, \"We have another two nights before we have to be back on base.\"\n\n\"Hence I'm working on adequate food stuffs to keep our energy levels up.\"\n\n\"I'll make sure I clear my plate then Sarge.\"\n\nThe food, like everything about my lover, was amazing and I had no problem finishing it all, even picking at the few sausages and bacon rashers still on the hot plate. \n\nWe had some more beers then one of the two bottles of wine we'd bought for our first date, a white called Petritis which, while it sounded like a foot inflammation, was a really nice white wine that I had a taste for.\n\nI sipped mine relaxing back into the lounger chair, lifting my leg and stretching it out.\n\n\"You legs are AMAZING Chrissie!\"\n\n\"Thank you Chris,\" I said lifting them up the left then the right flashing an amount of bottom and the thin strip of emerald green lacy thong bisecting it. I put my hands on my hips, \"I am rather proud of them!\"",
        "\"And what underwear are you gracing us with this fine evening Sergeant Mair?\"\n\n\"Why Sergeant Tucker, depends on who wants to know?\"\n\nHe rolled to the side of his lounger to watch me, \n\n\"It's to ensure good order and military discipline Sergeant Mair.\"\n\n\"Discipline Ah?\" I said slipping my feet to the floor and preparing to stand, \"So if I'm wearing the wrong thing, I'll be... punished?\" My eyebrows raised at that one.\n\nHe swung his legs round off of his lounger to face me.\n\n\"Only if you ask reeeally nicely,\" his voice all but crackled with lust.\n\nSo I stood and stepped into the pool of light caused by the setting Sun and the patio lights coming on. I stepped in front of his lounger, my weight on my right hip as I posed before him. I reached down for the hem of his T-shirt I was wearing and pulled it up and over my head, standing before him in my sexiest undies this side of continental Europe. \n\n\"It's just this old thing,\" I said with my hands on my hips, then turned so he could appreciate the side view, \"Not brand new but I think you'll agree,\" I turned my back to him, feet together and heels raised slightly with hands on hips a'la Bette Grable, \"It has a charm all its own.\" I was sure I could see his mouth drop just a fraction, but he was way to cool to let it go further. I grinned at him again, \"if you really don't like it Sergeant Tucker, I can always take it off?\" I turned back to face him and folded my arms making my cleavage its absolute best.\n\n\"Hmmm... yes, well... pleased to see it's green at least.\" \n\n\"Knew you'd like it,\" I smiled back at him. There was a pause, \"want me to put your T-shirt back on?\"\n\nHe reached up and pulled his T-shirt from my hand and pulled me towards him, and I stepped astride his legs and squeezed them together and sat on him again. I was so well used to this that I slipped my arms around his neck, beaming a smile at him. \n\nWe started to kiss and I could feel his erection nudging against me through his boxers and I rubbed myself against it. \n\n\"Well now Sergeant Tucker, I do believe I can feel a weapon you may be concealing in your underpants,\" I stood still astride him and reached down to remove his shorts and I resumed my position and rubbed the lace covering my pubis against him and kissing him all the while. I could feel that he was really starting to get into it and stopped. \"I believe I really should check to see if this is loaded.\"\n\n\"It won't go off in your face Chrissie honest...\"\n\nI giggled,\n\n\"Still looks pretty dangerous to me Chris.\"\n\n\"Yeah, if anyone is going to make it explode it's you Chrissie.\"\n\n\"Well I think we should go for a controlled explosion, you should probably fuck me Christian,\" I murmured.\n\n\"Bedroom Christina?\"\n\n\"No,\" I said looking back over my shoulder and at the sun setting against the hilly backdrop, \"I've never made love by moonlight, let's do it here.\"\n\nI glued my mouth to his just to emphasise my passion for him. His hands were still on my back rubbing at my bare arms and shoulders too, and I felt him slide the straps of my body suit from my shoulders and I slid my arms out of them and I pulled the material over my tits to settle underneath them.\n\nNext I stood slightly and reached between my legs to my crotch and undid the three plastic poppers holding it together, and it sprung away from my groin to form a green lacy elasticated strip around my waist.\n\n\"And look what I found,\" I said, reaching up under it to just above my hip and the condom I'd secreted there when I dressed, \"PPE!\"\n\nHe leaned back so I could make use of it,\n\n\"You are just full of surprises Sergeant Mair.\"\n\n\"Yeah,\" I said with a pleased squeak, \"now let's do this... oooooh yeah,\" I sat back down on him gasping as I felt his huge weapon touch all of the places that needed touching, still throbbing from when he went down on me earlier that evening.\n\nI rode him again, just gentle thrusts and bounces, up and down, back and forth until I was gasping and striving for my next come which arrived as soon as I leaned into my lover hissing, \"Now Chris...\" holding on to him for dear life as he took over the fucking and I came. \n\nHe stood up, holding me tight and still inside me and stepped towards the pool and we dropped in with a loud splash, surfacing moments later to float to the side where he proceeded to fuck me again, eventually pinned to the wall, thrusting up and into me battering my G-spot until I came again, and I hugged him and cried out his name until I felt him give his hardest thrust and came as well.\n\nWe stepped out of the pool holding hands and as he dropped the condom into his bag of rubbish, I stripped out of my bodysuit and dropped it across the plastic lounger while he did the same with his T-shirt, stepping into the bathroom together to wash off the pool water, dry each other very gently and make for our bed, where we lay almost too tired to do anything but turn off the lights.\n\nWe woke up the next morning and kissed and cuddled and I confessed that my puss was feeling the usage it had received since Friday night.\n\n\"Time for our run and walk then Sergeant Mair?\"\n\n\"Oh,\" I said, pulling the sheet back over my naked breasts, \"If I let you fuck me, can we stay in bed a bit longer Sergeant Tucker?\"\n\nHe giggled, \n\n\"I've been a PTI for two and a half years Chrissie and NO ONE has ever made me that offer before!\"\n\nI smiled and wrinkled my nose cutely at him.\n\nWe dressed and we did run and walk and I made him chase me a few times and he did likewise. Fuck but he really was fit, and not just when he was naked and screwing me into oblivion. \n\nAs it started to warm up into another beautiful day we stopped running and slowed down to brisk walk then a slower one where we took in the great views and I certainly thanked the fates that had me right there, right then and getting paid to do it. \n\nAs we walked we did that simple but most wonderful of things, we held hands and it was lovely! I'd held hands with boyfriends before but I suppose it had never meant as much to me before; I was in love with him, no two ways about it - mad about the boy.\n\nI stopped walking for a moment and pulled him towards me, my heart thumping and it was nothing to do with the exercise.\n\nHe smiled at me and slipped his arms around me,\n\n\"Kiss me Christian,\" I whispered.\n\nAnd he did, and it took my breath away. \n\nWe walked back to the villa, his arm around me and my head on his shoulder, yummy.\n\nAs we walked I thought about telling him that I was in love with him and I was, no question. But that tiny doubt was still tickling away in the back of my head, did he feel the same, would I scare him off, or worse - would he laugh in my face and point out that this 'was just sex'; pretty fucking amazing sex but no more than that. I dismissed that, this was my Christian and whatever I'd done to him in the past he would never be that mean, would he?\n\nI stopped thinking about that and instead decided to just go with it and not over-analyse, I was on a paradise island with a wonderful man and figured I would decide what to have for dinner and what movie to watch rather than the colour of my bridesmaids' dresses.\n\nWe walked back to the villa, stripped off (shit but my man turned me on!) and jumped in the pool, and swam around which Chris turned into a warm-down from our exercise. We also had a bit of a snogging session before we climbed out, showered and did breakfast.\n\nWe were back in swimwear because of the heat and I was wearing just an ordinary bikini and was really pleased that Chris still couldn't drag his eyes off of me. We swam to cool down and once in the water I gave my puss a squeeze to make sure all was well down there and the slight soreness from the previous day's passions was on its way or gone altogether. It pretty much was I was pleased to note.\n\nLunch was filled fajitas with our second bottle of wine and a siesta in bed afterwards. Naked we lay together, dozing nicely until we both woke up around the same time. We smiled at each other, kissed, then kissed again our passion building slowly and easily until we both knew we wanted to make love.\n\nWith only a stop for one of our diminishing supply of condoms he rolled over me, entered me gently and slowly and made the sweetest love to me. It lacked the urgency and immediacy of our previous sessions, but again I felt that we didn't have to have that every time. \n\nIt was incredibly sexy and thrilling but this time it was different, just simple desire - love, had to be. It was for me at least and as looked up into his face I saw that look straight back at me, well I thought so. I came to my first orgasm that day with that alone, well that and the fact he was fucking my tight pussy with his huge dick so expertly of course. \n\nIt was amazing and once he'd fucked me through a second climax it was his turn and I encouraged him towards his. He got up and went to the bathroom, then the kitchen for two mugs of tea while it was my turn.\n\nAs I washed my hands I vaguely heard the musical ringtone of my mobile phone but it stopped. I was very careful with who had the number and knew that whoever was ringing would call back. I washed my hands and was about to climb into the shower when I heard voices, Chris was on my phone!\n\nNaked I ran back into the room and there he was lying back on the bed like some kind of royalty looking sexy and relaxed, my phone to his ear. The bedside clock on the nightstand told me it was four thirty in the afternoon, two thirty back in the UK, and I was late ringing Mum for our usual Four o'clock/Two o'clock Sunday Afternoon chat!\n\n\"Yes it is! Yes... She's just in the bathroom Mrs Mair... Oh OK... Jen, yes, I'm very well thank you, no...\" I put a hand to my mouth seeing him naked in a bed he'd spent at least ten of the last forty-eight hours taking me to new orgasmic heights, now on first name terms with my Mum, what WAS he going to tell her!\n\n\"We've rented a villa for a long weekend - a great pool we've just got out of, really nice.\" I lashed out at him with the hand towel I was holding as I imagined the visions in Mum's head, \"Yeah, hang on I'll just hand you over... please do Jen... yes as soon as I'm back in the UK I promise!\" he handed me MY smart phone, \"there you go Baby,\" he said, adding a now pointless, \"it's your Mum!\"\n\nI sat on the bed, raising my legs up to lay next to him.\n\n\"Hi Mummy,\" I said brightly, \"chatting with Chris then?\"\n\n\"And why shouldn't I?\" she said, \"I've known Christian since he was five days old, changed his nappies, fed and winded him at the same time as I did you!\"\n\nI pressed the 'speaker' button.\n\n\"You changed Chris's nappies Mum?\" He looked at me with a grin, leaning over to get closer to the microphone.\n\n\"She's just pointing out that she saw me naked before you did honey.\" He said with a lift in his voice.\n\n\"Precisely,\" said Mum, \"Now Christian, bugger off and have a shower and make some tea or something while Christina and I have some girly talk, go on, off you go!\"\n\n\"Sorry Mrs Mair, just going Mrs Mair!\" he planted a loud slurpy kiss on my cheek and went to the bathroom as ordered, taking the tea he'd already made with him and as soon as I heard the electric shower start up I switched off the speaker so we could talk normally and took a sip of mine.\n\n\"Oh Chrissie BABY!\" she gasped, and I could hear the delight in her voice, \"So you've had a night together!\"\n\n\"Two in fact,\" I said with a sigh I couldn't hold back, so tried to mentally change the subject of the amazing sex I'd had with the man she'd known from a baby, \"this villa is so lovely, I'll send you the details, it'll be perfect for when you and Daddy come to stay... eventually!\"\n\n\"Well, seems like I'll have to, protect you from that Christian!\" So Mum was going to get a bit rude was she? Two could definitely play at that game!\n\n\"Oh no,\" I said languidly stretching, \"I'd much rather you didn't do that...\"\n\n\"Christina Lillian Mair, get you!\" she screeched.\n\n\"Wait a second Mum,\" I said, messing around with my phone while I emailed her a picture of us on the beach that seemed like ages ago - me in my sexy yellow bikini and him in his shorts, \"there,\" I said, pressing the 'send' button, \"check out the picture and tell me if you think I should be basket weaving or country dancing with him instead.\"\n\n\"Hang on,\" said Mum, \"it's just loading... Holy fucking Jesus!\" hissed Mum again, the lady that hardly ever swore, \"Ahem... Weeeell, I err... I think it's fair to say that young Christian has grown up a bit since I last saw him Christina that's for sure.\" \n\n\"The defence rests,\" I said putting a hand back behind my head to bask naked in the glory of my victory.\n\n\"Oh Baby,\" said Mum, \"he does look lovely doesn't he, mind you so do you honey. I told you that yellow bikini would look great on you, yes,\" she breathed, \"a gorgeous couple,\" she said with the definite emphasis on the word 'couple', \"can't wait to show this to Julie next week!\"\n\n\"Pace yourself Mum,\" I said, \"we've only been...\" I paused.\n\n\"Only been what Darling?\"\n\n\"Seeing each other Mum, hanging out - for a month.\"\n\n\"Not forgetting the first sixteen years of your lives of course,\" she added, \"Suppose we have to knock off a few at the end, when you were being so mean to him!\"\n\n\"MUUUM!?\" I whined like a teenager as she threw in the large spanner I'd conveniently forgotten about.\n\n\"But you were!\" she pointed out the obvious in the way that Mum's so often do, \"various Mums' told me.\"\n\n\"What?\" I said stupidly, \"who...\"\n\n\"Oh come on Darling, did you honestly think your school was another country?\" I could hear a quite genuine sigh from the other end of the phone line. \"Julie and I were mates, you know? And Gavin's Mum Vanessa? We were at school together, I carried her home after her hen night.\n\nShe came into the shop one Friday morning and showed me the letter that Pete Finlay wrote to her about him, with Simon and that thug Brett that always seemed to be around. She was fuming... right up to the point that I told her what the three of them had been up to, and Gavin breaking Christian's glasses on purpose, and Brett almost breaking his nose. And that was only one of the times that he'd been attacked...\" I made to but in, \"attacked Darling, you're a policewoman, you tell me.\" \n\nThere was nothing I could say to that, I'd arrested people for less.\n\n\"Nessa was shocked of course, Gavin was a very bright kid and did very well academically so after our chat - all of the stuff that Julie told me really - she went into the school to find out for herself. \n\nShe spoke to the head who told her what had been said rather than what could be proved and all that. She did point out that Gavin did always seem to be around when things were going on around Christian and the school was 'dealing with it'. They had teachers watching him as often as possible after that and yes, Young Mr Mills was around where the shit was happening.\n\nThen a few days after you all left school she came in and asked if I still saw Julie. I said that I did and asked why. She said young Gavin wanted to apologise for his part in all of the grief and left an envelope for me to give to Julie, it was a Specsavers voucher to cover the cost of getting Christian's glasses replaced and forty quid for the trousers and shirts that had been ruined weeks before.\"\n\nThat made sense, Christian had put the frighteners on him and he'd probably ran straight home and told his Mum.\n\n\"Christian explained why that was a few weeks ago.\"\n\n\"Did... did he beat him up?\"\n\n\"Didn't need to, he only threatened him,\" I said.\n\n\"Not surprised, the way you lot treated him.\"\n\n\"Thanks Mum,\" I said with just a hint of sourness, then added, \"Mum...\" I was thinking about the lack of information about him, \"Did you and Julie chat about us? About me being in the RAF and him being in the Marines?\"\n\n\"Sometimes,\" she said, \"we used to have a coffee once or twice a month, then I was back doing her hair again. She told me about having to have her hair done to go see him get his medal from the Duke of Edinburgh. I told her you were in the RAF some years before, but we only ever chatted amongst ourselves.\"\n\n\"You never told me?\"\n\n\"No Sugar,\" she said with a pause, \"I knew how badly you felt about Christian and him giving that hooligan Simon a slap or two, I also knew that you'd feel guilty about some of it...\"\n\n\"Yeah...\" I said, \"I did.\"\n\n\"The last thing I wanted to do was spoil the fun you were having in your great job by bringing up Christian, particularly as he was doing so well, had his degree, medal and all of that.\"\n\nOK. That made perfect sense, as I kind of knew it would, this was my Mum of course.\n\n\"Ah well, never mind honey,\" she said with an air of conciliation, \"you were never violent towards him were you; no, and by the sound of it you... err... kinda made it up to him this weekend?\"\n\nCheeky mother of mine! Again, two can play at that game...\n\n\"Almost Mum,\" I said with rude, suggestive sigh, \"almost...\"\n\nJust as I thought I'd outdone my Mum she came back with the final quip,\n\n\"That's my girl!\" I gasped at that! \"I'm sorry Darling,\" she giggled, \"but I just have to admit to myself that my daughter - my little Kissie-Chrissie - is the gorgeous, sexy-looking 36-24-36 blonde bombshell just about wearing that yellow teeny-bikini in the picture you sent me. My lovely girl is finally starting to... err... live a little and enjoy herself and the fact that she is finally starting to enjoy herself with one of the nicest boys I ever met that now looks like Mr Universe just makes me feel better and better. You remember all that stuff me and Auntie Jo said to you about not putting yourself about and not sleeping with just anyone?\"\n\n\"Yes?\" I giggled back, unsure of her response.\n\n\"This is why,\" she said, \"I approve Christina, I definitely approve, just you look after him!\"\n\n\"Thanks Mum!\"\n\n\"I'll leave you two to enjoy your weekend away, speak to you soon Baby, love you!\"\n\n\"Love you Mummy!\"\n\nI disconnected the call and stood, walking into the bathroom where my incredible lover of the last two nights was rinsing off in the huge shower cubicle. I thought about the amazing oral he'd given me the evening before so stepped in and pulled the glass door closed behind me, kissing him then dropping to my knees before him.\n\nAs the water splashed off of him and on to me, I looked up into his face and proceeded to wank him suggestively. I grinned up to him,\n\n\"My Mum says I have to make it up to you for being such a cow when we were teenagers.\" I opened my mouth and sucked him in, bobbing back and forth slowly and surely, just like in the internet porn I'd watched with John when we were drunk.\n\n\"I know your Mum likes me Chrissie, but I'm guessing she never suggested you do this... ooooh shit!\" he gasped as I rubbed my tongue on the sensitive flesh under his helmet.\n\n\"Not as such Chris,\" I said taking a breath, \"not as such...\"\n\nI'd never gone all the way with a blowjob but knew I was going to that day; not only did I suck and mouth him to his orgasm, he came in my mouth and onto my chest like I'd seen in the porn movies. Feeling really proud of myself I was only half a thought away from if not actually telling my Mum then at least hinting to her about it.\n\nStill on my knees I took a handful of shower gel and washed and manipulated his penis, feeling it harden slightly under my care even after I'd blown him.\n\n\"This is a wonderful piece of work you have going on here Chris,\" I said, \"I'm amazed that some of the girls took the rip out of you suggesting you didn't have one. If only they knew!\" I said wanking him quicker for a moment, \"I suppose at least two of us have had gotten quite close to it!\"\n\nChris smiled.\n\n\"Can't argue with that!\" he said reaching a hand to stroke then hold my hair back.\n\nI was sure I could hear a suggestion of something in his voice.",
        "\"I can't even think about losing my virginity to someone as big as you Chris,\" I said leaving it open ended and an indirect link to Rachel.\n\n\"She didn't seem to mind at the time,\" he said dipping his head under the water to rinse off.\n\n\"Are you OK Christian?\" I asked hoping I hadn't spoilt anything.\n\n\"Yeah,\" he said, \"believe it or not, while I never had any bad feelings towards you I did have a few towards Rachel...\"\n\nI stood and stepped closer to him,\n\n\"What?\" this was tiny slim sexy Rachel, \"Really?\"\n\n\"Yeah,\" he said with a hint of a chuckle, \"Don't forget almost all of the shit I went through was down to her. Of course I never really found out until we started dating at college. \n\nI told her about all of the shit I'd had from Simon and his cronies and when, and her face went rather pale and she went quite quiet.\"\n\nOh fuck.\n\nWhat now? Had I ripped off a plaster to help it heal or just reminded him of his crappy schooling.\n\n\"She admitted to me that she really hated Simon and thought that you could have done much better. Initially she wanted to split you up and tried everything, eventually using the things that she'd heard in our various kitchens about how close we were, you remember how that ended up.\" He pressed the 'off' button on the power shower, \"She cried and hugged me, said that she was really sorry and that she must have brought everything down on me, how it was her fault.\"\n\n\"Oh shit, Christian I'm sorry I brought it up, sorry I reminded you of it.\"\n\n\"History honey,\" he said slipping an arm around me and pulling me close, \"it happened, you not talking about it won't make it go away, I rather think that while we both had strong feelings for each other she knew that I'd suffered because of what she'd said, and I knew I'd had a few good smackings because of her and he trying to get one up on Simon,\" I hugged him, \"she was different after that chat, distant.\"\n\n\"Christian, I...\" I felt terrible. \n\nWe'd had the most wonderful couple of days together and I really hoped I hadn't trashed what we'd built up.\n\n\"Christina,\" he pulled me close again, \"Baby, it was never Rachel,\" he looked at me, \"I've more feelings for you in the last few weeks than I had for Rachel in two years. I broke up with her far too easily Baby - I've got you back and don't even want to think about not having you in my life.\"\n\n\"Thanks Christian!\" I mouthed to him and hugged him.\n\nWell-well, that explained a lot. \n\nShe'd said how much into him she was during our chats but there was obviously a large lump of guilt involved. Chris had glossed over them 'just drifting apart' when they left for their separate universities with such ease.\n\nPoor Rachel. Poor Christian. My ex-boyfriend stuck in the middle of both of them. \n\nBut it was history.\n\nThat was obviously that then. 'Don't mention School or Rachel Christina for fuck's sake, it's done and dusted he's TOLD you that'.\n\nWe dressed and I cooked chicken for dinner and didn't make such a bad job of it considering I hadn't really cooked since I joined up, and that I was dressed up in one of my prettier dresses I was working really hard to keep it clean.\n\nChris was in his chino's and a linen shirt and was very complementary of both my dress and my culinary skills and we sat up to the table in the villa and chatted and drank more wine, just boring couples stuff that we could do because of how well we knew each other, but was completely growing on me.\n\nWe retired to the large lounge and the huge TV and selected the box set of 'The Mummy' movies from their extensive DVD library and had a great time watching them, drinking a few Cokes and eating ice cream with me in his arms then kicking off my shoes and resting my legs on him.\n\nIn an homage to one of our pool garden bench moments, I asked him if I could sit on his lap.\n\n\"Oh yeah,\" he said pulling me towards him and held me. It's now my all-time favourite seating position. \n\nWe went to bed and made that most exquisite love again, reducing me to tears.\n\nThe following morning I woke fully refreshed and virtually leapt on to his morning wood, dragging on a condom before we screwed each other silly.\n\nWe got up, swam in the pool, showered, had a huge brunch made up of what we had left in the fridge and did a bit of a tidy up and repacked the few clothes that we'd worn before enjoying a final kiss and cuddle on the sofa. \n\nWe called a local taxi that collected us from the villa and drove us back to the Sovereign base and dropped us at the gate. We showed our ID's and walked in and towards our accommodation blocks, ignoring the cookhouse as we already eaten quite well that day.\n\n\"Well Chris,\" I said, \"I really don't want to let go of your hand,\" He seemed quite quiet, and looked across at me, \"You OK?\"\n\nHe smiled at me,\n\n\"I'm perfect Chrissie, I've finally got you, and I'm even more in love with you now than I was all those years ago.\"\n\nThe import of what he'd just said bounced through my 'end of the weekend' sadness.\n\n\"You love me?\"\n\n\"Of course Chrissie, from that moment you took my arm and looked up into my face outside the station on our first Friday night out, when you SAID you were trying to annoy Huss, right there and then, couldn't have stopped myself if I'd tried.\"\n\nI leaned in for another kiss.\n\n\"Thank Fuck,\" I hissed at him, \"thought it was only me being in love with you for a minute there.\"\n\n\"Nah,\" he grinned and held me tight, \"definitely both ways.\"\n\nWe kissed goodnight and made for our own rooms to unpack and prepare our gear for the next day that would see me back on duty and Chris across to the other sovereign base for a couple of days for more training and to discuss training sessions in Aikido, a martial art form he'd trained in since he was... ahem... sixteen and had a black belt in, with the CJPU second-in-command.\n\nI unpacked and was able to put most of my clothes back into my dresser still folded as over that wonderful three day break, I'd hardly worn any of the far too many clothes Penny and I had packed on the Thursday night before.\n\nShe came in after having been to the bar for one of the DVD movie nights.\n\n\"So Christina!\" she said with a very suggestive look and looking down at just bikini, my crumpled body suit, a pair of shorts and a T-shirt and a couple of pairs of panties in my laundry basket, \"I'm guessing you two... shall we say... err... got on?\"\n\nI smiled back at her.\n\n\"Like a house on fire Pen!\" I said hoping to leave it at that.\n\n\"You look...\" she folded her arms and looked me up and down a few times, \"relaxed Christina, you have a bit of a look about you that I can't quite put my finger on.\" She rolled her eyes and smiled, \"but I'm guessing that the marine did?\"\n\nI relented and gave in to the girly chat.\n\n\"And then some Pen...\" I said quietly, slipping on my T-shirt nightdress before she noticed that my white patches weren't quite as white as they had been before.\n\nPenny sat on her bed and stripped out of her jeans and removed her bra from under her T-shirt and leaned forwards conspiratorially,\n\n\"Was he great in bed?\" she said quietly, \"He has the look about him, like one glance and you'd be creaming your jeans.\"\n\n\"Not quite one glance Penny,\" I said, \"But fuuuuuuck, he was AMAZING in bed, never better! I don't know if it's something they teach at PTI school but there are some muscles that got a workout this weekend I never knew I had.\" I put my hand to the flat of my stomach and soft aches that I wouldn't forget in a hurry.\n\n\"Awwwwww Christina?!\" screeched Penny, \"I'm so pleased for you!\" She stepped across and gave me a hug, \"And... well, is it going to go somewhere?\"\n\n\"I certainly hope so,\" I said verbalising the thought I'd been having since Christian and I had our first dinner date, \"Neither of us are going anywhere for the next five months at least.\"\n\nI tucked my toes under my duvet and pulled it up, and Penny climbed into her bed and did the same, turning off her bedside light as I did mine.\n\n\"Sleep well Babes,\" she said as I closed my eyes and ran through the entire weekend in my mind, hugging myself with an occasional hand across my well exercised puss, feeling the slightest bit tender around my labia and clitoris thanks to the attention they had both received that wonderful weekend.\n\nI rang Mum on the Tuesday evening knowing she'd be desperate to know how the rest of our weekend went. I had some lovely mother/daughter time with her that I'd never had before, and even she mentioned that we'd never chatted about John and only about Paul the week before he came to stay at our house then never again after. \n\nEver since I'd mentioned that Christian had come to Cyprus I'd been talking to her about him and expressing how I really liked him, fancied him, had gone to dinner with him, gone to the beach with him and finally that not only had I been promoted he'd kissed me - rather we'd kissed each other and it was really nice.\n\nOn Sunday it was to tell her that we'd spent two nights together, and tonight I was bubbling inside when I told her that Christian had said that he was in love with me. We both cooed and Mum promised not to mention any of it to Julie.\n\nI giggled,\n\n\"Like Christian is going to tell Julie anything about his girlfriend Mummy, I might be crazy about him but he's still a bloke!\"\n\n\"It's so lovely to hear you talking about a boy Christina, even better when I know him and what a lovely boy he is!\"\n\n\"So what have you and Julie talked about since he took me out to dinner?\" I said rolling on my side and hugging myself just a little bit.\n\n\"Weeeeeeeell we might have discussed it a bit,\" she said with that maternal giggle of hers that indicated mischief and pride in equal measures, \"discussed what lovely kids you were and how you were so close to each other.\"\n\n\"Did... did she talk about me?\"\n\n\"What do you mean sugar?\"\n\n\"Did she say... well did she indicate that she was cross with me about how Chris... Christian was treated at school and whether she thought I was responsible?\"\n\n\"Can't say we discussed that specifically Darling,\" Mum took a breath, \"Baby, don't worry about ten years ago, enjoy what you have now and what you might have in the future!\"\n\nI love my Mum to the moon and back, but at the point it was even more. We were both very quiet and our breathing could be heard.\n\nWe both recovered of course,\n\n\"So you're going to tell Julie about me and her lovely son?\"\n\n\"Nah!\" said Mum, \"I think that's one for Christian - and you of course!\"\n\n\"Well perhaps you all really need to come to Cyprus for holiday!\"\n\n\"Do you know what?\" she said, \"That sounds like a fantastic idea, leave that with me!\"\n\nChristian rang his Mum who had a similar arrangement as us. Their chats were fortnightly or monthly and were like ours but with less talk about love, hair and clothes obviously.\n\nIt turned out that my Mum and his Mum had been chatting and along with a list of available weeks they'd decided when they would take their holiday and posted the joint cheque to me and we booked the villa for a further two weeks so my Mum and Dad, and his Mum could fly out for a long overdue holiday for them all. \n\nIt was an easy decision for us and we were able to book two weeks leave at the same time as them for a wonderful joint holiday in the sun.\n\nMy Dad sent money for us to hire a seven-seater MPV, and after a chat with the lovely Ex-pat owner I ordered food deliveries for the first week, having gotten a list of Julie's favourite things, which were extremely close to my Mum and Dad's favourite things.\n\n*\n\nThrough her own hard work, grit and determination, things had turned out quite well for Julie. With both of her boys grown up, graduated, well-established and happy, Julie's life had changed and for the better.\n\nAlthough never to reach her previous high-earning, high-risk life of the financial services professional and finally discharged from her bankruptcy, she moved on and re-trained and was now a medical secretary working at the local GP's surgery and on a much steadier income.\n\nShe never saw any of her money from her missing then imprisoned ex-husband but she did benefit from one of his misdeeds.\n\nOld, slightly batty but terribly maternal Mrs Pearce that had been there for Julie and a kind of surrogate Granny to the younger Stevie. His benefactress had stayed in regular contact with the family, especially Stevie who despite his bad start, she nagged into doing his homework, even tutoring him herself at one point. \n\nWith his good results she nagged him into college then into University. In Stevie's third year they heard that Mrs Pearce had passed away suddenly and were amazed when told she had left Julie the holiday home in Devon in her will.\n\nJulie was still enough of a financial specialist to know that while selling it would provide a lump sum, rental would provide smaller amounts over a longer time and also meant that she had somewhere to go for family holidays or even just long weekends. So Julie rented it out to the same people for similar amounts, just like her benefactress had.\n\nSo with a reasonably regular three to four hundred pounds a week rolling in on top of her wages, Julie had bought a two bedroom flat in our old village and could finally have my Mum do her hair for her. \n\nStubborn, hard-working, charity hating Julie would only stop into Mum's salon for a natter and a coffee but still wouldn't let Mum do her hair unless she could afford to pay for it.\n\nMy Mum argued and bantered with her but no, three years went by until she sat in a salon chair again rather than in Mum's office or kitchen, wouldn't even accept it as a birthday or Christmas gift preferring Mum's company as a friend than what could possibly be considered 'pity'. \n\nBeing my Mum she waited until after closing time, set up a chair with flowers and balloons, wine and cake and both in tears she finally got her hands on her old friends hair. \n\nThe condition was OK seeing as quality hair products were never high on Julie's shopping list, she admitted to using washing-up liquid a few times which had my Mum in hysterics. \n\nShe recovered though and by the time she'd finished with scissors, colour to hide the grey roots, highlights to bring out the style, all resulting in a look that according to Mum took ten years off of her, and they both cried, with Mum taking a few notes from her friend in payment. They both finished the wine and the cake and when Julie headed for the bathroom Mum silently put the money back into her friend's purse, squished down and out of the way in one of the credit card holders.\n\nBut those days were long past and they met three or four times a month now seeing as they had more to talk about and our photos to share. \n\nWe waited at Larnaca airport seeing four delighted faces not three. Julie was accompanied by her long-term boyfriend Rob, a paramedic that worked with her.\n\nI was so worried that Julie would hold some grudges about my treatment of her beloved son, but her screamed 'Kissie Baby!' (her nickname for me for most of my growing up) and her run across the concourse of the arrivals lounge to grab me and pull me into just the biggest hug and repeatedly kissing my face, both of us beaming through our tears, convinced me that I might just have gotten away with it.\n\n\"Oooooh!\" she sighed, \"I love you Kissie!\" she said like she always used to when hugging me.\n\n\"Love you more!\" I said, in the way I'd always replied.\n\nShe caught her breath,\n\n\"Look at her Rob,\" she said to her boyfriend but not letting go of me, \"Isn't she gorgeous!? Should be a bloody fashion model not an army cop!\" I was wearing short shorts and a cropped top and looking particularly shapely and let her get away with the 'army' reference. She tucked a strand of my hair behind my ear \"this gorgeous girlie is the closest I ever came to having a daughter,\" she hugged me again and leaned back looking towards Rob, \"And I couldn't love her any more or be any prouder of her than if she was actually mine!\"\n\nIt became evident that some booze had been consumed on the plane, but I still loved her for what she said.\n\nAt the same time I was being hugged like a long lost child, Chris was being hugged by my Mum and shaking hands with my Dad and receiving a similar 'Oh Christian, just look at you!'\n\nWe took them straight to the villa in our hired people carrier and lit the barbecue, me getting everyone settled into their rooms while Chris cooked, both of us stripping down to our beachy best. \n\nOur visitors showered-off the travel and plane journey and emerged in beach clothing, my Mum leaping straight into the pool in a bikini just marginally larger than mine.\n\nI broke out the wine and poured some for everyone, conscious of my tiny yellow bikini bottoms not really covering my bottom at all and my Dad, Rob and Julie looking on. Mum looked as proud as she ever did.\n\nAs Chris started to circulate with the hot, expertly cooked food his bronzed, slightly shiny-looking chest, shoulders and arms looked divine. We shared some loving glances.\n\n\"Oh look Jen,\" said the still sexy, black-swimsuited Julie over the top of her wine glass, a cheeky smile on her lips, \"Christian and Christina are obviously playing house again...\"\n\nWe sat around the pool in the evening, and as he so often did Chris pulled me on to his lap, and I could see Mum and Julie smiling at each other and watching us. Mum gave me one of her wrinkled nose smiles and the slight nod of the head that said 'follow me in a bit'.\n\nI did so, moving through into her and Dad's bedroom and she was opening her suitcase.\n\n\"Here you go Baby,\" she handed me a Sainsbury's plastic carrier bag. I took it from her and peaked inside.\n\nIt was a selection of some of my racier, sexier undies and dark blue silk chemise that I had bought as a bit of sexy nightdress sort of thing for when I went to stay with Paul at his parents' place but never wore because he 'didn't think it was appropriate'.\n\nOh yeah!\n\nMum grinned, \"I thought you might appreciate some of your prettier stuff now you have someone to appreciate you in them!\"\n\nI picked through, and there were lots of my favourite posh, sexy and sophisticated undies that had graced my more intimate regions for dinners in long dresses, nights out and the occasional night in and Mum, no stranger to sexy underwear herself, had picked out the very best of my collection, even including a couple of new black stringy looking things she'd bought me that looked strange on the hanger but three nights later when our guests were in the town and having a grown-ups dinner, they had my boyfriend positively panting with lust!\n\nWe took them to Nico's on their first Friday and the largest of the balconies for the most amazing dinner. Mum had brought my expensive little black dress and when I stepped out of their room in it with hair and make-up beautifully done, it was worth the 'extra luggage' fee Mum had paid for another of Christian's many dropped jaws that holiday at my simple,\n\n\"Hey Chris, what do you think?\"\n\nI thought Mum and Julie would cry - again.\n\nWe had a great holiday and showed everyone the sights and they all got tans nearly as good as ours. \n\nChris got to know his Mum's new boyfriend Rob and on one of our morning runs stopped for some water and he admitted that he was very impressed with the paramedic that had stood down from his blue light work for the nine to five normality of a general practice. \n\nHe was awfully sweet and paid attention to Julie even though Mum and I were walking around the pool in our blonde teeny-bikini splendour most days even going topless one afternoon. Even Chris noticed that!\n\nWe even got permission to take them onto the Sovereign base and to our bar. I introduced Mum to many of my girlfriends and as usual with Mum they all instantly adored her and her usual ebullient self.",
        "She hugged and kissed 'Navy Sam' that I'd told her about so many times, then shouted 'Oi' across the bar to the newly arrived Penny who ran across to her with a screamed 'Mumma-Jen!' \n\nShe told her she was even more gorgeous than before, asked about her boyfriend then told her off for not using enough conditioner and her spilt ends, but still sat on the large outdoor sofa and hugged her like another of her blue-uniformed, long-lost daughters. Dad was of course used to this and had a simpler 'Good evening Mr Mair' from the few girls he knew.\n\nJulie stood by and smiled, pleased with the response that her old friend was getting, in fact always got; my Mum, everyone's Auntie, everyone's Mum.\n\nWe all had a great time that evening and for weeks afterwards I had compliments from the Unit, 'your Mum is Lovely'.\n\n\"Yeah,\" I said proudly, \"I think so.\"\n\nWe had a final barbecue and got very drunk on the last Friday before they flew home. The stereo played some old songs and we danced, ending up with many slow ones which eventually saw Julie and Rob slink away to their room, Mum and Dad dancing romantically while Chris and I retired to the sofa and making out, me sat on his lap.\n\nMum pulled Dad towards their bedroom waving goodnight to us. Chris picked up the remote and turned off the stereo and we stood. I made like his Mum and my Mum and pulled my lover to our bedroom switching off and locking up as we went. We slipped out of our clothes, climbed into bed and made love, simply, softly and tenderly, improved by my having gone onto the birth control pill a few months before. The sound of two other couples doing the same thing was occasionally just audible, but I think we'd all drunk enough not to worry about it and I was conscious that all of the people I loved the most were as loved up as me.\n\nThere was no discomfort at what we knew had to be taking place in the rooms either side of ours - for me it was a simple confirmation of love. I hugged Christian to me and told him I loved him so much. He whispered back,\n\n\"Love you more...\"\n\nThey next morning there were some embarrassed faces for a few moments until we all realised we had nothing to be ashamed of, far from it. We had breakfast and coffee to ease our hangovers and packed our bags into the people carrier.\n\nWe drove them back to Larnaca and there were hugs and tears, and I promised that I would come home for a visit as soon as I could.\n\nMum gave Chris a final hug,\n\n\"I know I don't need to tell you to look after my girl Christian, but look after her for me anyway Honey.\"\n\n\"Promise Jen,\" he said simply.\n\nSeconds later Julie was hugging me,\n\n\"Look after my Baby Boy as well Christina,\" she whispered looking across at her huge son, my boyfriend, \"There's hardly anything of him, and you know what bullies are like, don't let them pick on him!\"\n\n\"No Julie,\" I said with a chuckle, hugging and squeezing her as tight as she was hugging me, \"I'll keep them off of my Christian I promise!\"\n\n\"Suppose I've got to share him now,\" she whispered the thing I'd wanted to hear most of all, \"I'm so pleased you two have finally got it together,\" she hissed, \"you two are perfect for each other, you always have been... love you my Kissie!\" said my second Mum.\n\n\"Love you more Julie,\" I replied, barely.\n\n*\n\nIt was back to the real world after the most wonderful holiday and Chris and I were really serious now.\n\nWith the weeks flying by his return to the UK was getting closer. While I tried not to think about him leaving he was thinking about life back in the UK.\n\n\"We are going to live together Chrissie, aren't we,\" He said to me quite simply one evening in the bar as 'Mission Impossible' played almost to itself on the big screen.\n\n\"Yeah,\" I said just as simply. We'd spent many evenings discussing our future. It was quite simple; we'd get postings as close as we could, we'd get a place of our own and live together. We both mentioned getting married, but simply because it would be another reason why they'd post us together.\n\nChris's future was quite simple, he was being sent back to The Defence School of Policing to put his training and research into practice and along with the Army MP, Navy Regulator and the RAF Police PTI's they'd use their experience to put together improvements with sector and area specialisms to the defensive training for service police staff.\n\nI'd apply for a posting there when my tour was coming to an end. If that worked we'd rent somewhere local.\n\nMy time was up before his and I'd apply for Dorset Police, Devon and Cornwall or Hampshire at a push. Chris would hopefully finish his time at the Defence School then head towards me and teach, either at an FE college or a school, the school would mean him having to take a postgrad education certificate but he wasn't overly worried about that.\n\n\"S'pose I could join the police if all else fails...\" he said feigning disappointment.\n\n\"Yeah right,\" I kissed him.\n\nI didn't give a shit what he did for a living so long as he came home to me afterwards.\n\n* \n\nAll of the sergeants and above were called into a briefing at Episkopi HQ. It seemed that the new Chief of the General Staff was heading to Afghanistan for a three day visit and was staging at Cyprus like most people did. He'd been invited to visit one of the two infantry regiments that he had a particular link to and he would be having two days with them, flying to Afghan, then on his return a further four days visiting the rest of British Forces Cyprus and the British team wearing their United Nations blue berets patrolling 'the Green Line' - the buffer zone between the Turks and the Greeks.\n\nWe were stood too, told to iron, brush or polish anything we wore, clean or polish anything else and told to brief our teams on what could or couldn't be said if they were spoken to by the CoDS - an Army General who was quite old school but very popular.\n\nWhile he wasn't actually visiting the CJPU we would be around and doing crowd control and our police thing. We didn't get to see much of him during his first two days as he was on camp with the infantry regiment and in the exercise areas and ranges around it before he was off to Afghanistan.\n\nHis first day back was quite splendid and he did a bit of a walk around both sovereign bases meeting flag waving school children and their teachers, their parents and shaking lots of hands. Then to the airbase at Akrotiri then dinner, safely in the Garrison Officers Mess with the British Forces Cyprus Chief of Staff.\n\nAfter a long hot day we all found ourselves in the bar, downing a few but not too many as we had another full day the next day.\n\nI leant against the bar chatting easily with mates when I felt a hand slide around my waist, down to my left hip then grab my bottom, I was about to suggest that Chris didn't get that handsy in front of our senior ranks when I heard a remembered 'Hey Christina!'\n\nI looked to my right and there was Paul leaning in for a kiss and my hand was up like a shot and he ended up kissing my Palm.\n\n\"Hi Paul,\" I said, adding, \"Fuck off Paul.\"\n\n\"Is that any way to greet an old friend Christina?\"\n\n\"Not when they grab my arse in front of my friends.\"\n\n\"Let me buy you a drink then,\" he said with that smile that had meant so much to me once, \"then we can go somewhere quieter!\"\n\n\"Nah, thanks anyway.\"\n\n\"Christina!\" he leaned in close and I could smell his breath, he was quite pissed and judging by his glow and the faint smell of sunscreen he'd been by our pool as well for part of the day at least, \"no need to be like thaaaaat! Look,\" he said leaning in close again, \"why don't you go and get changed and we can go out to this really nice restaurant I've been recommended.\" His arm snuck around my shoulder and I pushed it off.\n\n\"Like I said Paul, fuck off mate.\" I added a smile.\n\n\"Oh come ON Christina!\" he leered trying to peak down the front of my tan uniform dress where I'd undone the top button, \"do you still have a thing for sexy underwear Christina - even under your uniform?\"\n\n\"Paul, which bit of the two previous 'fuck offs' aren't you getting?\" I stood up straight, a hand on the bar.\n\nHe looked me up and down,\n\n\"Still so fucking hot Christina!\"\n\n\"Yeah,\" I said, \"but not for you.\"\n\n\"Oh, so I go off to improve my career and you take it personally.\"\n\n\"Well yes, actually. You dumped me Paul, with a three-word e-mail. Two and a half years and not a word since and you're annoyed because I've moved on?\" \n\nAn interested but supportive crowd was gathering, including another of the CP boys that were bodyguarding the General, an RMP lad who was reading my body language - better than his mate was at least.\n\n\"Paul,\" he said with a hand on his colleague's shoulder, \"think you got too much sun today mate!\"\n\nThe team of six CP staff had been given the day off, their team leader happy that their principal's security was more than covered in the Sovereign bases.\n\n\"Fuck off Denny!\" said Paul, \"me and Christina go waaaaay back!\"\n\nI looked at the Redcap in his coyote tan 5.11 cargo pants,\n\n\"Take him and put him to bed Denny.\" I said, arms folded and my three stripes on my arm nicely visible.\n\n\"Only if you come with me Christina... look at this body Den!\" he shouted to the bar, \"me and Christina used to have it GOING ON!\"\n\nOh God, another twat that was going to tell everyone around him that he'd slept with the 'Hot Blonde Snowdrop'.\n\nPenny was at my side, as we so often were for each other.\n\n\"Trouble is Paulie, if you take Christina out to dinner you'll have to take her partner.\"\n\n\"Oh fucking hell Pennyworth, are you two a matched pair? Joined at the fuckin' hip? Every fuckin' posting, like clockwork - it's not even as if you're a pair of Lesbians that I could watch!\" He giggled.\n\n\"I'M not her partner Paulie, THIS...\" she had a huge grin as she put her hand to the broad shoulder of my just arrived boyfriend, \"this huge, PTI, Aikido instructor, Sergeant of Royal Marines is her partner.\" She patted his bicep and the three stripes pulling tight against it just in case Paul might have missed it.\n\nChris pulled his shoulders back and smiled that big grin of his.\n\nI had told him all about all of my ex-boyfriends, and how Paul had walked away from me without so much as an explanation or even considering how we might maintain our relationship.\n\n\"Paul, Christina's told me all about you!\" Chris extended a hand which Paul ignored.\n\n\"Naaaaah, fuckin' commandos don't impress me!\" he said looking across the bar for his, or probably any drink.\n\n\"Wasn't trying to impress anyone Paul, I think you should listen to Denny mate - perhaps have a walk around, drink some water and get some fresh air.\" Chris was at his most personable.\n\n\"Fuckin' commandos!\" he belched dangerously, \"See me right, I'm fucking CP!\"\n\n\"Yeah,\" said Chris looking him up and down, \"5.11 coyote brown cargo trousers, wraparound sunny's in your shirt pocket even though it's dark, figured you were.\"\n\n\"Jealous much?\" Paul cocked an eye at the commando looking across at Denny then me. The room was deathly quiet now.\n\n\"CP trained? Yeah but let's be honest mate, isn't everybody?\"\n\nPaul put an elbow on the bar,\n\n\"You've done the CP course?\" Chris nodded with a grin, \"where did you do it!?!\" Paul snapped annoyed that someone else had done the course.\n\n\"Longmoor mate, same place everyone does it, Police Troop thing,\" He patted the gold RM shoulder titles on his shirt epaulettes. Paul seemed to sway a bit as he processed that information. Chris put a big steadying hand on Paul's shoulder, \"Denny? I think Paul here has had...\"\n\n\"Don't think you're all that mate,\" shouted Paul pulling away from him, \"I heard she was fucking some psycho all over Bastion after I... after we... split up! Just 'cos you're the current bloke shagging the beauty queen...\" he snarled at Chris and pushed at him. Chris took his arm and eased Paul back to a bar stool, followed by a raised hands and a 'hey-hey chill out mate' moment.\n\nPaul started to talk quietly and seriously to Chris pointing and I could see him tapping out on his fingers and looking like he was making extremely serious points. Chris smiled and shook his head a few times until Paul pointed at me and looked really cross.\n\nChris leaned over to Paul and whispered in his ear.\n\nSuddenly arms were flailing and CP MP Denny, Chris, Penny and another of the CP crew pinned him to the floor snarling. Another of the General's bodyguards dragged him outside while the fourth spoke with duty sergeant Chris and one of the sergeant majors that they would take care of this and there would be no further trouble.\n\nThe sergeant major did not look impressed while Chris the duty sergeant shrugged his shoulders, grinned at me and went back to work. \n\nThe next morning at breakfast I sat next to my gorgeous if slightly tired looking boyfriend who was eating his usual vast breakfast.\n\n\"Hey Chris!\" I sat next to him and rubbed shoulders.\n\n\"Hey Chrissie!\" he leaned in and gave me a kiss, \"any sign of that dickhead from last night?\"\n\nThere hadn't been; their team staff sergeant was pissed off at what Paul had gotten up to the night before and the whole CP crew were up at 0600 and running off any booze and sunstroke they might have had the day before.\n\n\"He was majorly trying to wind you up wasn't he!\" I said with a grin.\n\n\"Yeah,\" he said with a laugh, \"Twat was pissed, he also didn't realise that I'm a sports psychologist, I've been trained in dealing with people that need more self-confidence to meet their goals and pass them, but also to deal with people that think they're the best and clearly aren't.\"\n\n\"What did he say to you before he lashed out?\" I put my hand on his.\n\n\"Stuff about how the Close Protection Course is that much tougher than the commando course, that's what he was tapping out on his fingers. I told him that was a matter of opinion seeing as I'd taken them both and had that badge stitched to my Number one uniform. I then pointed out the fail rate for the commando course, even the all-arms one, is much higher than CP. \n\nThen when he saw I wasn't biting he thought he'd make it about you - how he could still be shagging you but is at the peak of his profession and much as it seemed that the hottest girl was with me, it was really only because \n\nhe wasn't and some things were more important to him . You weren't as important to him as his trade, not taking his eye off the ball, best of the best - all of that shit. Said that you weren't all that.\"\n\n\"Bastard,\" I hissed, \"he dumped me as soon as he passed the course, I have a feeling he would have been right back if he'd bombed out on the second week.\"\n\n\"That bastard still wanted to buy you a drink though didn't he, still thought he was in with a chance. I think he was still working on the understanding that he was going to be the one that took you to bed last night.\" He smiled, \"but revenge is sweet my lovely Chrissie,\" he put a hand on mine and squeezed obviously seeing my upset. \n\n\"I said that that it's just a job and I'd much rather have you,\" I blushed almost head to foot, \"I told him we'd been in a relationship for four months already, had a couple of holidays together and we were already talking about living together back in the UK, that seemed to really piss him off. He looked angry at me and pointed at you. I told him that you were the sweetest and most beautiful girl in the world and I was lucky to have you.\"\n\n\"What did you whisper in his ear?\" I said.\n\nChris kissed me again and smiled, then put his lips to my ear,\n\n\"Jealous much?\"\n\nMy smile must have gone from ear to ear and even though we were sat in a large dining area surrounded by colleagues I wrapped my arms around his neck and kissed him.\n\nWhile this drama had been taking place in our bar, over dinner with the Chief of Staff Cyprus, the CoDS did the rounds with the senior officers, one of which was the Assistant Provost Marshal Cyprus and he was complimented by the smart turn out and professional bearing of the Joint Police Unit.\n\nThe Big Boss said how hard we worked and outlined our day to day operations and how we were effectively the local Bobbies for the two Sovereign bases. Over glasses of port the APM explained about the two junior non-commissioned officers that had recently returned from operations in Afghanistan plus the Royal Navy Senior Rating (my friend Jo as it turned out) that had completed twelve years.\n\n\"Medals?\" said the CoDS with a raised eyebrow.\n\n\"Yes sir,\" said the APM with a grin. He rang the duty officer and it turned out that all three were expected in the next few day's post for a presentation in a few days' time. It was decided that a presentation ceremony would take place and the three medal winners would be presented to the CoDS at the very least.\n\nWe were all ready in our best anyway and an impromptu inspection and parade was thrown together at the last minute, and one of our big Honda ST1100 motorbikes was waiting at the post room in Akrotiri and there were the three short squat blue boxes with the embossed crown in gold on them. \n\nThey were brought back in plenty of time and attaching loops hung from the recipient's tropical uniforms.\n\nAnd so we stood to. Arranged in two ranks, each section with their sergeant in front to the right of the right marker.\n\nThe Squadron Leader called us to attention and the CoDS and the APM appeared from the side of the parade square that had been cleared of the police patrol vehicles, Land Rover's, trailers and motorbikes that normally lived there.\n\nThe Company Sergeant Major took charge and the CoDS was shown along each of the ranks stopping to speak to a few of the NCO's that caught his eye.\n\nMy gorgeous boyfriend, alone in his green beret of the Royal Marines, caught the Chief's eye and the APM explained how Sergeant Tucker was here on behalf of the Defence School of Policing working on latest Home Office self-defence training.\n\nThe Chief discussed this with Chris who was able to talk about how it was working and he was confident that the training was effective.\n\nThe CoDS said that he would be sure to pass Sgt Tucker's confidence on to the Provost Marshall Army when he met him the following Monday. Chris smiled and thanked him.\n\nThe Chief asked him how it was to be the only Royal among so many Redcaps and Snowdrops. Chris looked pensive,\n\n\"It was hard at first Sir,\" he said seriously, \"but now they're getting up to my standard I hardly notice them.\"\n\nThe Chief laughed loudly and slapped Chris on the shoulder.\n\n\"Well done Sergeant Tucker, They'll be glad to see you back at Southwick Park bringing them back up to your standard!\"\n\n\"Thank you sir!\"\n\nThe last group were inspected and then the Chief was shown to the front of the parade and the three medal recipients called out one at a time to have their medals clipped on. The Chief asked the two Snowdrops about their tours of Afghanistan and shook hands.\n\nThen it was Jo's turn and she marched forward to a big handshake, and bigger smiles. She saluted and marched back and the CoDS stepped forward and made a nice speech about our hard work and how much it was appreciated but the service personnel and their families but mostly by him.\n\nWe were called to attention again and he was quickly escorted into the offices and to the cookhouse to meet the teams in a more relaxed atmosphere. We fell out, and headed for our brunch, breakfast being held off in case of time delays. It became quite the celebration with handshakes and cheers for the celebrities.\n\nI stood next to Chris and congratulated him on his humour at our expense.\n\n\"Not you Baby,\" he said leaning in close, \"you're exceptional.\"\n\n\"Good catch Chris,\" said Jo, her new long service - good conduct medal hanging from her dress, \"A very good catch!\"\n\nThe Brunch was very nice and the CoGS wandered around and chatted with the teams now seated at their tables and was quite relaxed and it soon became obvious why he was so popular with the rank and file.",
        "Following the Squadron Leader's instruction I stepped outside to check all was clean, clear and generally spick and span as the Chief would be leaving from that direction in a few minutes, and there was the red flagged Range Rover, the four stars front and rear denoting the occupant was an army General. \n\nI smiled at the driver who was Denny, the young Redcap from the night before and tapped my watch wagging two fingers to denote the time his principal would be arriving.\n\nThere was another Range Rover following with his protection team in, still aching and sweaty from their morning punishment run. Paul was the driver in the second Range Rover, still looking rough.\n\n\"Paul,\" I said not wanting any bad feeling between us, \"Feeling better?\"\n\nHe wound down the electric driver window.\n\n\"I'll live,\" he said. He was pensive for a moment then sat up straight. He looked across at the other front seat passenger and the man sat behind him, \"The one thing that I feel really good about it that I screwed you before your hot-shot marine did.\" He raised an eyebrow and had a stupid self-satisfied grin on his face.\n\nThe bastard. \n\nThe front seat passenger looked distinctly uncomfortable while the guy in the back seat looked across at me and my three stripes his bottom jaw falling at speed.\n\nOK, Paul was trying to get at me and to hurt me in front of two of his friends. \n\nI had several options, one of which was to have him locked up in the nearest military cell block while I reported him, the corporal, being insulting to the sergeant. After his antics in our mess the night before, his section commander would be interested that was certain.\n\nBut no, revenge was sweet and as the prophets occasionally have it, non-fattening.\n\nI leant both arms on the door sill.\n\n\"Yeah, you were there before him Paul, but he's much bigger than you mate!\" I pinched my elbows together hoping some cleavage might appear at the top of my beautifully pressed uniform dress, \"Oh and you know about the whole female orgasm thing?\" I raised my eyebrows at his shocked face and flapping bottom lip, \"No, I didn't think you did; well he does Paul, and he's bloody good at it.\" I squeezed my eyelids shut and gave an involuntary shudder, \"He's sooooo much better than you were mate...\" I stood up straight and patted his right cheek with an open palm, \"he's an eleven out of ten Paul, and to be honest AND with the benefit of hindsight you were struggling to get into the low two's.\" I winked at the front seat passenger, stood and walked back to the cookhouse and another coffee giving it the best figure-of-eight fashion-model bottom wiggle that I could. I could hear his colleague's guffaws coming from the still open Range Rover window.\n\nThey stopped the second the CoGS appeared and I opened the door, stamped to attention and saluted as he stepped out.\n\n\"Thank you Sergeant!\" he said loudly.\n\n\"Well done Sarn't Mair!\" said the Squadron Leader just behind him.\n\nMy coffee tasted really nice.\n\n*\n\nChristmas came and while we both would have quite liked to go home it wasn't to be, I'd gone home the previous Christmas and it was something that really had to be shared around, and both Chris and I being senior within the unit it was also expected, besides which we had each other!\n\nThe strangest thing happened though. A couple of weeks before I received an email from our old friend Amy asking if I could pop into the hospital next time I was passing, so taking a patrol car I duly did. Amy invited me into their rest room and arranged coffee for me this time. She was smiling as she handed it over.\n\n\"So how's Christian?\" she said brightly.\n\n\"He's still amazing Amy!\" I said and she all but screeched, clapping like a teenager.\n\nA month before I'd been at the hospital responding to an injured drunk that wanted to fight his way out of the accident and emergency, and once he had been dealt with there was Amy. She tucked an arm into mine and dragged me towards one of quieter bays.\n\n\"I saw your pictures on Facebook!\" she'd beamed at me.\n\nI told her about our long weekend, my parents coming to visit and her sigh as Mum used to do her hair as well! I explained that Chris and I were stupid for each other and she got all silly as we girls tend to do with mates. \n\nBut weeks later I was sat in her break room.\n\n\"Chrissie,\" she hesitated, \"James and I are going home for Christmas, are you?\" I said no and sipped my coffee, wondering where this conversation might go. \"Only we have a married quarter and... well...\" she looked a bit embarrassed, \"I was wondering if you might... you and Chris that is... if you would pop in every now and again, water the flowers, feed the dog, that kind of thing.\"\n\nWe'd gone to their quarter a couple of times for dinner and it had been lovely, but I knew she didn't have a dog.\n\n\"You don't have a...\"\n\n\"Christina!?\" she said with a grin and wide-open eyes, \"You and Christian?\" she said, obviously not wanting to get straight to the point, \"You've seen the spare room, you could... stay there... for a bit... while we're away. All but one family in our close are going home so...\"\n\n\"Define 'stay there' for me Amy!\" I said with chuckle.\n\n\"Oh... you know!\" she snapped back at me, \"I can't just give you the key and let you move in, it's not allowed, but if you two were to... oh, I don't know, turn up, do a security check, let yourselves in and boil a kettle and... well...\"\n\nAmy was pretty much telling me that Chris and I could go to their house for a few nights and live, and sleep, together.\n\n\"Oh thank you Amy!\" I said finally getting it. Christian and I hadn't done anything over kissing and cuddling and heavily petting each other since our parents had flown home after our villa holiday six weeks before, \"That would be lovely, thank you so much, you won't know we've been there.\"\n\nAnd that was how we spent our working Christmas, lunch in the cookhouse, parties in the CJPU bar and a great time had by all, then when it was bed time Chris and I would make our way separately and quietly to the married pads and let ourselves in, and with the minimum of noise or fuss to the spare bedroom already made up with unlit candles, a note about the bottle of wine in the fridge and two glasses and a small box of chocolates, all Amy's idea I was sure. It was another of those wonderful romantic moments.\n\nWe slept together in that bed five out of the seven-night break, and it was truly wonderful, cementing our relationship even more, if that was even possible.\n\nThat six months was one of the most splendid of my life, and we became a couple. This kind of relationship wasn't unheard of within the military and I heard from several higher ranked colleagues that it had been 'smiled upon'; any disappointment within the upper echelons could have seen us separated, but of course his attachment was only for six months while mine was for two years with another seven months to run. \n\nHe was being posted back to the Defence School of Policing as they wanted their Home Office trained fitness and self-defence specialist back to train the next generation of service police men and women and his operational tour had taught him much about what he taught and how he could improve it.\n\nI was of course heartbroken. I begged him to try to get the occasional posting back here, but it simply wasn't what the Royal Marines wanted. He promised me that we could stay in touch over the phone and the internet and he'd come back as soon as he could square some leave. He'd also arranged it so that he came back to run the next re-qualification courses as the MoD seemed in no rush to send another PTI and he could call it 'research'.\n\nI cried myself to sleep the night we said goodbye and didn't even have Penny for company as she'd gone home after her year was up. Having been promoted to sergeant I had a room to myself and while I liked the privacy, I was on my own again. \n\nChris was good to his word though. We spoke on the phone every few days, and a six weeks later he rang and confirmed it was my weekend off. I said it was and asked why.\n\nHe was at the RAF station and wanted to be picked up! I pinched the patrol car and drove straight to Akrotiri with the blue lights flashing and leapt into his arms at the door!\n\nChris had found out from an RAFP mate about an Afghan bound C130 that was staging at Cyprus and had a spare seat, used his influence to get it and the promise for a return flight three days after. He contacted my Station Warrant Officer and squared it with him before and booked the villa we loved so much. We walked into the bar arm in arm that night to a selection of oohs and aahs, and of course jeers. We bought some bottled beers and left them to their drinking.\n\nAt the villa he asked me about coming home for a holiday, I demurred saying that life here was one long holiday. He suggested a trip home for my birthday and to visit my grandparents who I hadn't seen in over a year.\n\nWe sat on the cooling stones around the villa pool with a couple of bottles of Keo, watching the moon waning and the stars glittering off of the water and we worked out when I could take some leave and come home.\n\n\"Well, if you don't come back, how are you going to show this off?\" He opened a small box and presented me with a diamond and sapphire engagement ring, \"will you marry me Chrissie?\" he said, \"it's nothing to do with postings, I've realised that I'm just so miserable without you.\"\n\nMy bottom lip trembled and I giggled, nodding like an idiot as he slipped the ring on my finger.\n\nI leaned forward and kissed him,\n\n\"You're a little bit late Christian Tucker...\" I said gazing at it.\n\n\"Really?\"\n\n\"Yeah, you promised you were going to marry me when we were proper grown-ups, ten or eleven - twelve at the oldest.\"\n\n\"I remember!\" he said with a smile, \"but didn't I knock your Playskool kitchen unit over and you said you didn't want to marry me anymore?\"\n\n\"I might have done!\" I said haughtily, \"I did have some very good imaginary cakes baking at the time.\"\n\n\"Well Christina Mair, forgive me?\"\n\n\"For anything Christian!\" I breathed.\n\nI dragged him to bed.\n\n*\n\nThat was ten years ago and yes of course we got married. I was given the nice safe UK posting to the Service Police School in Hampshire as a sergeant instructor, teaching the newbies a very similar syllabus to the one I'd completed eight years before, plus what I'd learned over the years. \n\nIt was also where Chris was now a senior PTI, and we lived just down the road in a flat in Portsmouth, the rent paid once we were married. \n\nI'd already had my first hen night sprung on me at the CJPU mess on my last Friday night with me all but being carried back to my room for the last time. \n\nThe second one was at Southwick Park with taxis down into Portsmouth and the nightclubs along the seafront, occasionally having to send pissed-up but hopeful Pompey sailors back to their ships with the simple expedient,\n\n\"Hey Jack, you do know we're all MP's don't you...\"\n\nIt was enough.\n\nI had the last and the best one back home, with Julie, our aunts, Penny, Sam and loads of other friends tracked down for the event, and all in our big garden with Mum being the perfect host again, more cocktails made by my Dad in his dinner jacket. Then it was some silly gifts and me being dressed up in all kinds of embarrassing gear before hair and make-up was touched up and we all jumped in the coach for a night in Bournemouth. \n\nI was walked down the aisle by my Dad in the church in the village with lots of our friends there, including Captain Amy White and her husband James who were both still good friends, he was in uniform but she wasn't being very pregnant.\n\nI told the vicar that in my vows I wanted to refer to 'MY Christian Michael' rather than just 'Christian Michael' - he said it was charming!\n\nI did eventually send the 'guess who I'm going out with' message to our mutual friend Rachel and she hadn't recognised the hunky marine MP hugging me in Amy's picture on my Facebook page at first.\n\nWe had long messenger chats about our lives, she was still on maternity leave with her second child and fantastically happy and was over the moon that I'd finally gotten engaged. She had previously nagged me about the apparent lack of good-looking boys on my Facebook page after breaking up with Paul. I hadn't told her about Rodge of course.\n\nShe was as nice about Chris as he'd been about her and said we were always meant to be. The next summer said that she'd love to come to our wedding and did so with her husband and their two boys. We all hugged, it was really lovely.\n\nWe came out of the church to a guard of honour of RAF Police colleagues, MP's and a few marines all holding extendable batons, with my former Roomie Sergeant Penny Taylor RAFP (She'd married her Artillery Officer before I married Chris and we'd done the same for her!) and first in line and calling the troops to order.\n\nEven though it was our wedding day both Chris and I instinctively flinched and pulled our shoulders back at her shouted \"Squad!\"\n\nThey drew their batons, flipped them down to extend them in a manner that they MUST have rehearsed then slowly raised them to form an arch. We stopped for the photographer and kissed.\n\nPenny hissed 'oh get a room you two' like she had so often and I laughed which resulted in a suggestion of smiles and open mouths as we broke and looked soooooo cool on the front of our wedding album.\n\nStevie was Best Man and while not having Chris' amazing body, he had his brothers good looks and his longer dark hair, designer stubble and strong features had much of a young Keanu about him. His nurse fianc\u00e9e Sonia looked lovely too and is the nicest girl and she became my sister-in-law two years later.\n\nMy Mum cried, his Mum cried, my Auntie Jo and his Auntie Liz cried, his Uncle Pete was very much a stand-in father of the groom and it was a wholesome family affair.\n\nWe honeymooned - no not Cyprus! We got to enjoy the English countryside staying in Julie's West Country cottage for two weeks.\n\nAfter my nine years was up I left the RAF and Sergeant Tucker was accepted into the Dorset Police while Chris spent another eight months at the School commuting to our Dorset home as and when he could then left at the end of his six years, working for two more at the local college teaching the same pre-service diploma course I'd taken while he got his post-grad teaching certificate.\n\nHe's now everyone's favourite PE teacher at our old school and known as 'Mad Mr Tucker' for the way he drives the children along, as if they were young Royal Marines.\n\nI became a firearms officer for the tactical response team, got on the list for consideration for a dog handler but once I'd finished my probation I found my way into the neighbourhood office, having only ever used Uncle Pete's Friday night gobstopper routine once.\n\nOur old school was on my beat and Chris told me that PC Tucker had been invited up to the staff room to have a coffee with her husband and all the teachers, some of whom would remember me. \n\nChris met me at the reception area I remembered so well, and showed me up to the staff room. As I unzipped my heavy and kit-laden body armour, I felt a hand on shoulder.\n\n\"Christina!\" said a loud and long-remembered voice, \"Constable Mair... NO Constable TUCKER!\"\n\nIt was the head teacher, looking slightly greyer and care-worn, but unmistakably still Mr Maguire.\n\n\"Mr Maguire!\" I said with a huge smile offering my hand which he ignored, instead pulling me into a bear-hug.\n\n\"Call me Mac Christina,\" he said with a bigger smile and looking me up and down, \"there,' he said with a positive roar, seeing my black armour and shirt with 'police' written all over it, \"been waiting years for you to come back in and visit us as a copper! WELL DONE!\" He thumped his fist down on to my still padded shoulder as he always had to his best performing students.\n\nI felt great when I passed off of the parade square at RAF Halton as an aircraftswoman after basic training, then five months later as an acting-corporal of the Royal Air Force Police with my parents there, I felt great passing out from the Dorset Police HQ and receiving my warrant card but nothing, absolutely nothing came close to the sense of pride I got from Mr Maguire's happy smiling face and that fist-bump.\n\nChris had a similar grin recognising the moment, and Mr Maguire looked across at him. \n\n\"Not congratulating the war hero there, gotta bloody pay him...\" \n\nChris hadn't really told anyone much about his service, but one of his colleagues met the pair of us at the Town's Remembrance Sunday event I was working wearing my police uniform and my medals and Chris in his suit wearing his, and he spotted the silver on the ribbon.\n\nHe later let it slip to the children complaining about having to do PE in the cold that the reason Mr Tucker is the way he is because he was a Sergeant Major in the Royal Marines. (He wasn't, he left as a sergeant) but all of the kids treated him with a new respect.\n\nAfter I'd been out of my probation for a while and with the promise of keeping my neighbourhoods job open for me I stopped taking the pill and five months later I missed a period. When my second missed period was due I was at Mum's salon having a coffee before work and to her delight I ran to her staff toilet and started throwing up like a mad thing.\n\n\"Oh Christina!\" she said hugging me on my return and shouting out \"She's pregnant!\" to the whole place. I was minded to say it was just the curry I'd had the night before but her delight was just too perfect.\n\nOur daughter Penelope was born and my lovely Mum and the lovely Julie were over the moon that they were grandmas. If they had been sweet and lovely to have as Mum's it was nothing compared to them as Nanna Mair and Nanny Tucker. Our son Michael was born three years later.\n\nWe both have a chest full of medals each and the most fantastic memories of what seemed like a very long, very romantic holiday. Our children often ask why we seem to have so many holiday snaps!\n\nThe End."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "oral",
        "royal air force",
        "cyprus",
        "oral sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/old-friends-in-paradise-ch-03"
}