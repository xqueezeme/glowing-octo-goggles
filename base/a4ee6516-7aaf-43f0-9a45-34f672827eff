{
    "title": "Pay It Forward Ch. 10",
    "pages": [
        "So it ends. I want to thank everyone who followed this tale. I hope you truly enjoyed it. I asked myself a question. Can one man make a difference? This journey answered it for me. It is a resounding YES. These characters came to life for me as each went on their own journey. I truly enjoyed telling their stories.\n\nA special thanks to Overstar for taking time to edit this chapter. Any errors found are my fault and not his. Again, thank you all for reading and supporting me through this adventure. IR2R\n\n*\n\nSpeeding down the long winding road, Kevin Knight was heading to work. He had just been promoted to Vice President, second in line to replace the President when he retired. He'd worked for the company for years. At thirty, he'd accomplished more than most men his age dreamed.\n\nHe'd trained many people. Normally, he wouldn't give a rat's ass about others but things changed. Today he was meeting with the President and CEO of a new company he worked for to recommend someone deserving for a more prominent position in his department.\n\nKevin was ready. With the help of his friend, Eileen, he was more than prepared. The two of them had worked nonstop for months to prepare him for this meeting. He knew people hated working under him, but Eileen was different. She worked well with him and dealt with his eccentric personality. \n\nKevin was a workaholic. He had family, but they were mostly married with kids; He was still a bachelor, having long ago given up on finding someone. His adopted Dad often encouraged him to date, but he really didn't have time to deal with the intricacies of it. His job was his main focus. \n\nHe was impatient and would quickly dismiss anyone he deemed wasting his time and not getting to the point. His often harsh and curt mannerisms lead many in his office to avoid him at all cost. Eileen was the only person that could deal with him. She was at least a foot shorter than him and thin. Clear alabaster skin and russet red hair that was naturally curly and wild. She wore it long and often twisted it in a bun. She dressed conservatively, always professional, unlike the other young women her age. She was a natural and beautiful woman. Kevin really liked that about her, although he'd never admit it. He loved the way she carried herself, unapologetic and proud. \n\nAs one of the only Irish women in the office, she never stopped being true to herself. She was also the only one that was strong enough to deal with him and his boorishness. Kevin had gone through several secretaries before Eileen was assigned to him. \n\nHe smiled as he recalled their very first meeting a few years earlier and how she quickly put him in his place. \n\nKevin failed to attend another family gathering, Delia was now concerned so she called him. He made some excuse about work, but she didn't believe him. She talked to Shaun.\n\nShaun MacGregor was ready to retire. Not that he had a reason to, but he wanted time with his lovely Delia. He'd had his physical and learned he was in the best of health. His sons were all successful, and now raising their own families. Only one wasn't, and he'd take care of that.\n\n\"Good morning, Kevin. We've hired a new secretary to work with you. Since you have a hard time keeping anyone around you, we had to pay her more and give her a title of Executive PA. She will work directly with you and help with any and all assignments you have. Now son, you've gone through twenty-six secretaries in the last year. If this girl quits, you will work by yourself from now on\", Kevin's boss, Mr. MacGregor explained. He liked Kevin. He knew his past and realized that he'd had a hard time growing up. So he took the young man under his wing and molded him. \n\nHis investment was well worth it as Kevin was invaluable to the company. Often positions would open up, and Kevin would be passed over because of his lack of social skills. He simply could not work with others, but the man was a designing genius. He could create and design proposals that seem to fall from the heavens.\n\nPushing a button on his desk, Mr. MacGregor called, \"Ms. Isaacs, please come in.\" Kevin was floored as the most amazing and exotic creature entered the room. He'd never seen a more beautiful woman. She was awe inspiring. She had clear alabaster skin, with a few freckles across her nose, thick naturally curly red hair, big plump lips, dark green eyes, and smile that stopped his heart. He admired her svelte frame. Eileen was not thin and frail like most of the women in the office. She was slender, but healthy. She had a narrow waist, wide hips, and an ample bosom. Kevin had to remind himself to breath.\n\n\"Yes Mr. MacGregor,\" the Red-haired Goddess answered smiling as she entered. Then she noticed Kevin sitting in a chair and her smile vanished. \"Eileen, remember that post I offered you. Well this is your new boss, Kevin Knight. You will be his Executive PA. Kevin, this is Ms. Eileen Isaacs.\" MacGregor introduced the two. He didn't miss the younger man's reaction to the young woman that walked in. \n\nEileen hesitated. Everyone knew this guy's reputation and no one wanted to work with him. But it was just a job, and she needed to work. With her illness, she didn't have the luxury of walking away. So she turned and faced her new boss, taking in the look of shock and then the frown that crossed his face. \n\n\"Hello, Mr. Knight. I look forward to working for you.\" She politely stated extending her hand.\n\nHe is fucking gorgeous, she thought as she quickly hid behind a cloak of professionalism. He looked bookish, and she'd always found bookish men irresistible. He was a tall man, muscled, but not in a grotesque way, long and slender. His hair was cut short and his beard neatly shaved. His dark green eyes which were hidden behind a pair of wire framed glasses sitting on top of a crooked nose.\n\nClearing his throat and collecting himself, Kevin went into his super vicious mode. \"We'll see how long that lasts. I certainly hope you don't mind hard work. I mean, you won't have a lot of time to hang with your friends\", he answered snidely. \n\nHe asked his employer, \"So Mr. MacGregor, when will she start, so we can get the crying over with?\"\n\nMr. Macgregor shook his head. His young man was so rude. Even after trying to mentor him for years, he didn't change. \"In the morning, she's already cleared everything with payroll and we are finishing her last transitions today.\"\n\n\"Good, Then Ms. Isaacs, report in at least thirty minutes early, I want to go over what I expect in detail. Don't be late. I don't tolerate slothfulness. If that is all Mr. MacGregor, I have work I need to be doing.\" Kevin explained to his boss then he exited the meeting. As soon as he left, Macgregor asked Eileen to come back into the office.\n\n\"Eileen, he's rather abrupt, but he's excellent at what he does. At any time, if you need a break. I'll personally grant you time off.\" he offered hoping to convince the young woman to not leave. Shaun MacGregor knew people and he knew if anyone could handle this angry, young man. It was the young woman standing before him.\n\n\"Mr. MacGregor, I can handle him.\" Eileen assured her mentor, praying that her words were true. Kevin Knight was one ill-tempered son of a gun.\n\nThe next morning, Eileen arrived at work a half hour early to get acquainted with her new boss. Kevin was nervous. She would be here any minute and he had to get himself under control. Here he was thirty years old acting like a schoolboy with his first crush. Besides, she might not even like him. No one liked him. \n\n\"While sitting at his desk, he heard the outer office open. She went to her desk and took a few minutes to settle then knocked on his office door. \"Come in.\" Kevin called out gruffly. Eileen walked in and he was momentarily dazed.\n\n\"Good morning, Miss Isaacs. Please have a seat.\" Kevin eyed the lovely woman sitting before him. He had to admit to himself that she was beautiful, but they worked together and nothing would come of it. He had a few women he'd call when he needed companionship and they took care of his needs.\n\n\"Well, Ms. Isaacs. I see you've worked here for five years. You started as a receptionist and obtained training to elevate. I can see that you are very ambitious, I like that.\" Kevin stated. He proceeded to explain to her how things worked.\n\n\"First, let me preface this meeting by informing you that I'm not man that minces his words. I expect you here early and I will need you to stay late until our contracts are complete. You will dress appropriately, no tight clothing, anything that exposes you midrif, or short skirts. I hope you aren't offended, but I would appreciate if you maintain a professional air, no girlfriends or boyfriends dropping in. Please keep any and all personal drama you may have out of the office.\n\nI will expect you to be free anytime I call, mornings, nights, and yes even weekends, so please let your boyfriend, girlfriend, spouse know in advance in order to avoid conflict.\" Kevin continued as Eileen watched him intensely.\n\nKevin Knight was an extremely sexy man. He wasn't drop dead gorgeous, just regular. He was so intent on is work that everything else around him faded. The sound of his voice was like a soothing balm over burning skin and it massaged Eileen's senses. She'd heard horror stories about this man, and seen the ladies that couldn't work with him. The fact that he'd gone through so many assistants fascinated her even more. MacGregor thought he had to offer her incentives to take this guy on, truly he didn't. She would have done it just for the challenge.\n\nSmiling she listened to the rest of his reverie. At the end of his short, but very detailed speech, Eileen nodded her assent that she understood, now it was her turn to set her parameters as well. \n\n\"Mr. Knight, I am grateful for the opportunity to work for you, but let me explain myself. I think we need to get some things straight before we even begin.\" She looked him in the eye. \"I am your assistant, not your servant. I will do my job and do it well, but I will not put up with your abuse.\" Kevin started to speak, but Eileen held up her hand and stopped him.\n\n\"No, Mr. Knight, you need to listen. I have spoken with several of the young women who refused to work for you and their reasons were often the same. I will not quit. Nothing you can do will force me too. So get the idea of bullying me out of your head. I am Eileen Isaacs. I can be your best friend here, or your worst enemy. You, Mr. Knight need to decide. Now, that we seem to understand each other, let's get to work. How do you like your coffee?\" she asked smiling sweetly at him. Kevin was speechless. The two of them clearly understood each other, and that was the beginning of their relationship.\n\nEileen, true to her word, came in and did her job to perfection. Kevin could not find fault in anything that she did. He even created assignments just to challenge her, and she excelled. Kevin was very aware of how his coworkers felt about him. Most hated him on site, but he was the best designer the company had so they tolerated him. He came earlier than most and stayed late many evenings, as his assistant, Eileen was expected to follow the same schedule.\n\nOne day Eileen came to work and wasn't feeling well. She knew her health issues were aggravated because she'd not followed her diet and exercise regimen as closely as she needed to. So she called her doctor and scheduled an after work appointment to come in. That afternoon, Eileen walked into Kevin's office and informed him that she needed to leave, she had a medical appointment.\n\nKevin looked at her, their Cortol Proposal was due in two days and he needed her there. \n\n\"Well after you see your doctor, can you report back here to the office? I hope this doesn't take long. We need to finish this proposal tonight. Eileen didn't respond. She asked herself, \"Can he really be this clueless? I have not taken a day off since I started and he wants me here even if I'm sick,\" she fumed.\n\nRealizing she hadn't responded, Kevin looked up. One look at her face, her flushed eyes, and darkened skin tone and he knew something was seriously wrong. \"Eil..., um Ms. Isaacs, I'm sorry. Look, go see your physician and then go home and rest. I had no idea you weren't feeling well. You can type up the reports tomorrow when you get here.\" He permitted her. Eileen glared at him. He was clueless, sexy but had no clue.\n\nAfter leaving her doctor and receiving a treatment, Eileen went home to rest. As soon as she donned her pajamas, someone knocked on her door. She didn't have friends and no one should be at her door after nine pm. \"Who is it?\" She called out. She picked up her trusty aluminum bat and if someone came through that door she was taking her some swings at them. \n\n\"It's me, Kevin, Ms. Isaacs, can you please let me in? I don't like standing out here.\" He answered. Eileen opened the door to let him into her small home. Kevin stepped across her threshold and a sense of comfort engulfed him. He relaxed. There was something about this woman that intrigued him. He arrived at work each day waiting for her to come in. He loved watching her and spending time alone with her at the end of the day. Since she'd become his assistant, his productivity level had increased even more as he worked to find more reasons to stay around her at the office. \n\nToday when she left, and he realized she was ill, he could not function and nothing was completed. After sitting in his office and realizing the time was after eight pm, he grabbed his bag and left. He had driven her home numerous of times and so decided to just stop by and see if she was alright. He could have called, but in all honesty he needed to see her. He needed to see if she was well.\n\n\"Come in, Mr. Knight. You could have called. There was no need, to stop by.\" Eileen informed her boss, struggling to get her heart and thoughts under control. He was in her home and it was a mess. \"What was he thinking?\" \"Kevin, my name is Kevin. Are you going to be alright?\" he asked softly, concern clearly etched across his strong face.\n\nEileen smiled and his heart skipped a beat, as he realized no other woman affected him in this way. He'd give his life for her to smile at him in any way again. \"Mr. Kni.., um Kevin, I'm fine. I haven't taken my medicine like I should have and my body reacted. I'm fine.\" She assured him.\n\nFrowning, \"Medicine, what medicine?\" Kevin asked. He'd make darn sure she had a steady supply from this point on.\n\n\"My medicine for my hypertension, I'll be fine\", she assured him.\n\nKevin asserted, \"I didn't know you were hypertensive. I should have known this.\"\n\nKnowing that he hated any sign of weakness, Eileen wondered would he use her illness as an excuse to have her transferred. \"Look, Mr. Knight-.\" Kevin stopped her.\n\n\"Kevin, my name is Kevin and I'm not here as your boss. If something happens to you Eileen, I don't know...\" he inhaled. \"How could you not tell me about this? We need to talk about this and everything else concerning your health. What other secrets are you hiding?\"\n\nEileen was tired. Her episode earlier had drained her and she didn't feel like dealing with her eccentric boss tonight. \"I'm fine, but for now I need sleep. I'll be in early tomorrow. Mr. Knight, I need for you to leave.\" She explained.\n\n\"No, I'm staying here. You're sick and I won't leave you alone.\" he explained.\n\n\"Really, I'm fine and you need to go home. Besides, where will you sleep? My couch is lumpy. And I know you wouldn't want to sleep in bed with me, would you?\" She teased.\n\nKevin blushed, turning a deep red. Then he looked at this beautiful woman. \"OK, I'll go home, but don't come in tomorrow. I'll check on you when I get off. If you need anything, call, and I will have someone bring it to you\", Kevin promised. Eileen led him out of her door. \"I'll check on you when I get off\", he promised before leaving her alone. Smiling, Eileen went to bed and dreamed of her frustratingly sexy boss.\n\nReluctantly, Kevin left her and drove home. He really wanted to stay, but he respected her need for privacy. Once he got home, he called his sister-in-law, Sharon. She was a registered nurse and if anyone could tell him about this ailment, she could.\n\n\"Hey, Kevin\" Darren greeted his brother. \"What's up? You know it's been a while since you've been by. The kids want to see their uncle.\"\n\nKevin smiled. He couldn't believe how Darren had changed. He'd married the most perfect woman and fathered the two most adorable girls ever. He loved his nieces to death and took every chance he could to spoil them.\n\n\"I might stop by this weekend, but for now I'm looking for your wife.\" He asked, \"Is my favorite sister-in-law home?\"\n\n\"She's here. Is everything ok? You're not sick or something, are you?\" Darren asked clearly concerned.\n\n\"No, Eile...\" Kevin paused. He never discussed anyone's business and he wouldn't start now.\n\nBut Darren had heard enough, \"Ok, hold on.\"\n\n\"Well, well, well, if it isn't the mysterious vanishing man.\" Sharon teased, once Darren told her Kevin was in the phone.\n\n\"Hey Sis, I need some medical advice.\" He stated, and then he explained Eileen's condition.\n\nSharon listened and informed him that she wasn't a doctor, but the main thing was to make sure she wasn't stressed and took her medications. Kevin nodded as a new plan formed in his head. Things here about to change, if Ms. Isaacs won't care for herself, then I'll do it for her. He smiled as he thought of the interesting ways she'd argue with him about this, but it didn't matter. He couldn't lose her. That thought frightened him more than anything.\n\nSoon the conversation ended with Kevin agreeing to come to the MacGregors for a family get together that weekend. Sharon insisted he bring Eileen with him. After they hung up, she turned to face her husband. He was grinning, and she laughed.\n\n\"Well, Baby. I think Kevin may have found his woman at last.\" Darren pulled his wife close and kissed her. \"It's about damn time.\"\n\nSharon looked at him. She asked, \"Wait, what makes you think that?\"\n\n\"Baby, this is Kevin. He called for advice about her. He never goes anywhere without her, and even after working with him for three years, she hasn't quit.\" Darren laughed. \"I met her once. I went to his office to make him go to lunch with me and Gianni, and she greeted me. She's a cute redhead.\"\n\n\"Alright now,\" Sharon teased, \"I don't have to color my hair, now, do I?\"\n\nDarren stroked her lovely dark hair. \"Don't change a thing.\"\n\nHe then kissed his wife, and held her as he reflected on how much his life had changed. He had grown from an angry boy to a happy and successful man. Was it easy? No, but he had help. He thanked God every day for bringing Shaun MacGregor into his life.\n\n\"Hey, baby. Let's go to bed. You owe me a little boy. Tonight, I'm collecting\", she whispered. She didn't have to tell Darren twice.\n\nKevin hung up, and was ready for bed. He needed to talk to her. He had to make sure she was alright. So he called to wish her a good night. That night, Kevin slept peacefully for the first time in years.\n\nEileen returned to work early as usual and Kevin instantly took charge. He wanted to know if she had breakfast. What did she have? He didn't like her reply, so he insisted they grab breakfast and coffee at a local coffee shop.\n\nOnce the day started, everyone was asking how she felt. Most were relieved she was back, because that meant they didn't have to deal with Mr. Knight. It seemed only Eileen could withstand his fiery temperament. Mr. MacGregor stopped by to ask about her. He was concerned and wanted to be sure she was alright. She assured him she was fine. \n\nKevin watched her doggedly. He was attentive, and constantly asking how she felt. Finally after a few hours, Eileen had enough. As soon as he finished his meeting with several department heads, she walked into his office and demanded to know what was going on.",
        "Kevin was stunned, and caught off guard. For a moment, he was stunned by the furious, beautiful red-headed goddess. She was magnificent in her fury, eyes flashing, chest heaving, and he found himself becoming aroused. She excited him, and he realized that this was a woman he really wanted.\n\nKevin had to keep himself from smiling. He knew if he smiled, she'd lose it. So he used the tone he often used to placate Clemmie and his sister-in-laws when he ticked them off. He started apologizing. \"Ms. Isaacs, I'm sorry. I know I overstepped my boundaries, but I hate the thought of you being ill. I was a bit gruff and so everyone is glad you came back.\" He smiled, contrite, and her heart melted. \"Please forgive me\", he whispered.\n\nEileen looked at him and she wanted to strangle him, but he truly seemed to feel guilty. He didn't mean to make her uncomfortable. She smiled. \"Apology accepted\", she whispered.\n\nA few days later, he was scheduled to meet with the chairman and other department heads. He wouldn't be able to have lunch with her, so he made her promise him that she'd take off and have lunch that day. \n\nMr. MacGregor was glad to see Kevin walk in. It seemed that the young Miss Isaacs was having a great effect on the stalwart young man. He had improved his appearance and was even more approachable. He actually held brief conversations with other members in the board room, where in the past he sat sullen, quiet, appearing hostile.\n\nThe meeting went well, and he felt that the company was in good hands. His only regret was that it was a family ran company, and when he retired, his nephew would take control. His son, Michal was supposed to take over, but he'd started his own companies and had no desire to run this one. He'd settled his differences with his brother-in-law and gotten to know his nephew Simon really well. Lang Corp would be in good hands.\n\nThat Friday evening as they were finishing up some key assignments, Kevin remembered the cook out he agreed to come to. \"Oh, Ms. Isaacs, my family is having a get together tomorrow. I'd love for you to come with me. Are you free tomorrow afternoon?\" He asked. His heart was racing, praying she would go with him.\n\nEileen smiled. She teased, \"Mr. Knight, are you asking me for a date? \"\n\n\"Um, no, not really... I mean, you have to eat, right. And it will be nice to eat with others.\" He stammered.\n\nEileen laughed, \"Pick me up. You know where I live.\"\n\nShe bid him good night and left for the day. Kevin watched her walk away. His mouth hung open, as he soon realized, his two brothers would roast his ass. This girl was everything he ever wished for. He just had to figure out how to tell her.\n\nThe longer Kevin worked with Eileen, the more profound his feelings became. She and the other women in the family had become fast friends. He was visiting with Darren one evening when Gianni came over. She became much more than his coworker, she became his one true friend. He began to rely on her as much as he did his family, and that scared him.\n\n\"Big brother,\" Gianni stated. \"You are one sad case. Have you told her how you feel? She can't read your mind. You have to say something.\"\n\n\"Gianni, man, they work together. She could sue.\" Darren interjected. He and Kevin had talked about this earlier. But he knew that was fear talking. Eileen was just as enamored with him as he was with her. However, she was also just as introverted and wouldn't admit her feelings.\n\nHe also knew that if it was meant to be, these two would end up together.\n\n\"Gia, Eileen is too good for me. I'm mean, ornery. No one really likes me. If she did have a choice of a man, I wouldn't be it.\" He answered, as he sat down to sulk.\n\nGianni teased him. \"I guess you're right then. It's a good thing she has a date with some guy from your office that works in on the first floor. So maybe he'll be the man for her. I heard her and Kara talking about it. Kara was helping her find something sexy to wear.\"\n\n\"Wait. What date? What man?\" Kevin demanded. All though there was no clearly stated rule that banned interoffice dating, he would call and tell her this date was a bad idea.\n\n\"It doesn't matter to you, right? You're not good enough.\" Gianni reminded him of his words.\n\nKevin checked his watch. \"Hey, I have to run. I'll be back.\" He stood to leave immediately.\n\n\"Don't go over there, Kevin. Let her have her date. If you interfere and you aren't ready to step up, is that fair to her?\" Darren asked beforehe walked out.\n\n\"Darren, you know what she means to me. How can I sit here while she goes out with another man?\" he asked, defeated.\n\nGianni answered, \"It's just a date. Play it cool. Tomorrow, when you go to work, do something for her. Something small, I bet she notices.\" He explained.\n\nSo Kevin sat down and prayed Eileen had a terrible time on this date.\n\nMeanwhile, Eileen had a terrible time. Her date was too short. He talked too much. He was even too nice. He wasn't Kevin, and that was who she really wanted.\n\nKevin continued his work over his department, and they made steady growth. The new CEO wanted to expand and bring in a younger more urban clientele. Although Kevin had no problem expanding, he was one of the more difficult people to work with. Soon he found himself in the position of having to reapply for his position. Kevin worked hard and he would not beg or lower his standards to appease anyone. So his outright refusal to conform led to a meeting with the new owners. \n\n\"Mr. Knight, I understand that my uncle had a great deal of respect for you and ran the company a certain way, but this is a new generation, new rules, new leadership. We want you to create designs that are geared toward a newer, fresher crowd. If you can't, then we'll have to let you and members of your department go.\" Simon informed him. He liked Kevin, but he wanted to move the company forward and he refused to cater to Kevin's whims. This was a business and he would run it as such.\n\nKevin walked out of his office knowing that his time at this company was done. He'd talk to HR and see if Eileen could be transferred to another department. Unfortunately, because she worked as his assistant, her job was terminated as well. Kevin then returned to his office to share the horrible news of their termination. \n\nEileen looked up as Kevin returned from his meeting with the new leaders. His expression was closed off as he passed her desk. He walked passed and did not say a word, as he closed his office door, Eileen feared something horrid had happened. An hour later, he called her into his office. \"Ms. Isaacs, stop typing and come into the office please. We have an important matter to discuss.\" \n\nClosing down her screen, Eileen followed him into his office. His tone did not bode well. \"Ms. Isaacs, please sit for a moment. My position with this company has been eliminated as of nine am this morning. That means I no longer work for this company. Since this office no longer exist, that means your position has been terminated as well.\" Eileen gasped. She'd been fired. They had no grounds to terminate her, to terminate either of them. They could file a lawsuit, sue the company.\n\n\"Wait, are you saying I'm being transferred to another department or...\" she asked, when she looked at his troubled eyes.\n\n\"No Eileen, they want us off of the premises by five, or they will have someone escort us off. You don't deserve this, but because of your association with me and this office, this is the action they have chosen to take.\" Kevin explained as an expression of stark fear crossed Eileen's face. She lost her job, just because the new bosses didn't like the man she worked under.\n\n'Eileen, you can sue and they'll have to let you retain your position. I'll pay for your attorney if that's what you want to do, or would you consider relocating?\" Kevin asked, his heart-racing, praying she'd say yes.\n\nShaun MacGregor feared this might happen, so before his retirement he'd called in a favor from an old friend. Kevin had been offered a position at a firm in Canada. The position was open and he could start at any time. The thing was he refused to go unless the firm also offered a position to Eileen. This morning after meeting and being terminated, he called and they did. Now all he had to do was convince her to move with him to Canada,\n\nKevin and Eileen had lived in Canada for several months. He loved it. They visited home, his family for Christmas, and spent New Year's Eve together in the home they shared. Now Valentine's Day was fast approaching and he wanted to admit his feelings to her. He knew she liked him, because if she didn't she would not have stuck around.\n\nHe was now one of the guys. His brother's had their wives, and he had Eileen. She got along famously with his sisters-in-laws. He recalled seeing her in a bikini for the first time. He thanked Kara profusely for that gift. It was late August and they were relocating. Having already bought a house and had their things shipped, the family wanted to have a party to celebrate their departure.\n\nThe women went shopping, of course, leaving the children with the guys. He had fun watching his brothers and their offspring. Part of him was a bit jealous, but he wasn't sure he really wanted kids. Even JJ, world renowned playboy took to parenthood, like a duck to water. He'd miss seeing his brothers every day, but moving to Canada was a great opportunity for him. Besides, they were only a few hours away by plane.\n\nThe women returned from their shopping trip. All four had bought new swimsuits. Each woman was gorgeous, but when Eileen walked out wearing the sexiest navy ensemble against her clear alabaster skin, Kevin was floored. She never dressed this way around him. The most casually he'd ever seen her dress was jeans and a graphic t-shirt. \n\nEileen noticed his reaction and walked past him wearing a smirk and not much else. He knew then that she was the one for him. They then moved and spent most of their free time together. Since they changed jobs, Eileen was no longer his assistant, but they maintained a close working relationship. He was still gruff, but Eileen helped temper his fiery temperature.\n\nSmiling as he thought of her, Kevin raced home. As he was driving along, his car lurched, stalled, and stopped. \"Damn it, I just had this car serviced. Fuck!\" Kevin exclaimed. The day had started out with breaking down way out of town. He reached for his phone to call Eileen, but no service. She'd be worried, but there was nothing he could do right now. So climbing out of his car, Kevin started the long trek back towards a lonely gas station he'd passed a while back; then the rain started. Not just a drizzle, but a monsoon. He'd lived in Canada for six months now, and in that short time, he'd learned that here, when it rains, it rains hard. Walking down the road, drenched, Kevin thought of the one person that made him smile, Eileen. \n\nHe squinted at the distance ahead, no a car in sight. So slowly through the downpour he trudged. Kevin was drenched to the bone and nowhere near a gas station. Now soaked to the skin,Kevin may have as well been naked. As he trudged along, he didn't see the pothole until his foot went down and he found himself tumbling into the mud. Now, wet, cold and muddy, Kevin laughed. He thought about how his reaction would have been different years earlier, but now because of her, he could laugh at himself. \n\nHe laughed so hard that it took a moment to notice that someone had stopped. Standing Kevin realized he was one big mess. But he prayed that is rescuer would at least let him sit in the trunk and give him a ride on to the gas station.\n\n\"Well, well, what have we here?\" a heavily accented woman asked. \"Seems, someone is being a bit naughty.\" she laughed. Soon a male joined her and pulled Kevin up. Kevin took a minute to explain and the couple offered to take him to the station. Unfortunately when they got there it was closed. So the friendly couple invited Kevin to their home for the night. Grateful, Kevin went to their home and asked to use a phone. He quickly called Eileen and explained what happened and that he would be delayed. Eileen was relieved; for she was afraid something heinous had happened to her friend. \n\nAfter talking with Eileen, Kevin soon joined his host for dinner.\n\nWhile eating dinner, the couple who had introduced themselves as Beatrice and Ortho decided to approach Kevin with a proposition.\n\nKevin was welcomed to stay with them for the night, but he had to promise to come back and help Ortho with some much needed repairs. Kevin was not a handy man, but he liked these two people. He found that he liked a lot of the people that he met since he met Eileen. Thinking about her, he started smiling once more, s sight that was soon noticed by Beatrice.\n\n\"OK, young man, spill. What's your girl's name? No man smiles that much unless he's thinking about his lady!\" Beatrice teased. Kevin blushed. He didn't realize his feelings were so transparent. \n\n\"Eileen, her name is Eileen. I've loved her for years, I've never told her, but now I can.\" He whispered. \"I just called and told her about the car breaking down she was worried, but she's glad I'm OK. I wonder, could she...\" dismissing his thoughts, \"No, she'd never want someone like me. She's beautiful, people love her. I'd stifle her.\" Shaking his head, \"we're better off as friends\". He surmised.\n\nOrtho laughed at the solemn look on the young man's face. He knew from experience, that the last thing he wanted was to remain friends. He hadn't met this young lady, but if when was at all interested, the young man's goose was cooked.\n\n\"Don't worry about it son. Sweetheart day is in two days, you can do something for her then.\" He suggested. Valentine's Day, Valentine's Day was two days away. Kevin always bought flowers for Delia, his sisters-in-law, Mrs. Johnson, Mrs. Kingston, and Maria. He even made sure the kids got balloons and candy from him on the day. A few years earlier, Mr. MacGregor coerced him into giving Eileen flowers on this special day. So every year, he had a dozen red roses with a simple card delivered.\n\nWhen they relocated to Canada, Kevin convinced Eileen to share a four bedroom home he'd purchased. They'd cohabitated for six months. Christmas and New Year's Day came and went and the two of them spent quiet evenings at home, simply enjoying each other's company.\n\nThis year was different, Valentine's Day meant so much more. So the evening ended and Kevin helped his host clean and retired to the room they let him use for the night. Sleep was elusive, and he needed to hear her voice. So before he fell asleep, he once again called Eileen.\n\nHe listened as the phone rang, and wondered had she fallen asleep. He really wanted to talk to her, because he felt as if he was yearning for her presence. Besides, Ortho had asked him a question, and he could finally admit to himself. Eileen was much more than a friend and a coworker.\n\nShe answered, \"Hello, Kevin. It's late, why aren't you asleep?\"\n\n\"I'm sorry. Did I wake you? I just needed to hear your voi...\" Kevin whispered. Eileen smiled. She missed him. This was the first night since they'd relocated to Canada that they were separated by circumstance. When he traveled, he'd be away but this time was different, he couldn't make it back home. Eileen knew she wanted more with him, but often wondered if her feelings were biased. But tonight, he'd called. From his tone, he missed her. She smiled missing him just as much.\n\n\"Kevin, I miss you,\" She whispered. \"I want you to come home soon.\"\n\nShe heard his intake of breath, \"Eileen, I wish... I wish I was home with you now. As soon as I get the car fixed, I'm coming home to you.\" He promised.\n\n\"OK, I'll see you tomorrow then. Now, sleep.\" She commanded him. \n\n\"Goodnight\", he whispered.\n\n\"Night-night\", she replied. Then they both hung up.\n\nKevin couldn't sleep and then he heard a light knock on his door. \"Come in.\" \n\nOrtho walked in and he was nervous. He had a favor to ask of Kevin and it wasn't just a simple can I borrow your tie type question. \n\nHe and his wife wanted children and he could not have any, but she loved him and stayed with him. For forty-two years, Beatrice dedicated her life to him. Now he was sick and he would leave her. He hated the thought of her being alone, and he prayed. His prayers led him to recuse a stranger along their long winding road. \n\nOrtho imagined that if he'd been blessed with a son, he would have been a lot like the young man before him. \"Kevin, I have cancer. I have less a year left. Beatrice doesn't know, and I won't worry her. I know you don't know us, but we are kindred spirits. I am asking you to look out for her. We have no family and it's always been just the two of us. I don't want her to be alone.\" He sighed as tears gathered in his eyes.\n\n\"Ortho, you don't know me. I'm not usually the kind of person people rely on\", he tried to explain.\n\n\"If it was Eileen, would you try to find someone to care for her?\" he asked, effectively silencing Kevin. The thought of Eileen hurting brought him to his knees.\n\n\"Ortho, she'll never be alone, I assure you, but I want you to tell her the truth.\" Kevin admonished his new friend. \n\n\"I will when the time is right. You just keep your promise to us, and visit.\" Ortho reminded him. They chatted a bit more, and then Ortho finally went to bed. Kevin finally lost the battle with fatigue and fell asleep. \n\nThe next morning, Ortho drove Kevin back to his car. He knew a little about cars and asked Kevin to let him check. Ortho realized that the person, who serviced his engine, did not secure the battery cable and it was completely disconnected. Ortho took a moment and repaired the connectors. Kevin was ever so grateful. He thanked his new friend and promised to return. He'd promise to bring Eileen with him on his next visit, and then Kevin drove home. \n\nA little after seven a.m., Kevin drove into his garage. Walking into his home, he realized Eileen wasn't up. He went straight to her room to tell her he was home and found her bed empty. She wasn't in the shower, so maybe she'd gone walking. Deciding to go to his room, Kevin would surprise her with breakfast, but he was the one surprised. Resting in the center of his bed was the one woman he wanted more than anything. He smiled realizing that he wanted what Ortho and Beatrice had. He wanted a lifetime with the beautiful woman who was waiting in his bed for him to come home.\n\nEver so slowly, Kevin climbed into bed behind her wrapping his arms around her, holding her close. He inhaled her scent then whispered, \"Hey, honey, I'm home.\" \n\nSnaking her arms around his neck, Eileen whispered his name. \"Kevin, I missed you. Love you.\" Then she continued to snore.\n\n\"Love you too baby\", he whispered in return. Then, wrapping her tightly in his embrace, he held her until she woke up.\n\nEileen awoke to a heavy arm draped across her waist. She moved and he asked her. \"Did you mean it? I mean, you were asleep, and..\"\n\nEileen turned and looked at him. He was the most handsome, mule-headed annoying man she'd ever met, but her heart belonged to him. She could no longer hide what she felt. Hell, she'd even relocated to another country just to be with him.\n\nShe touched his rough unshaven cheek, and nodded, \"Yes\u00b8 Kevin. I meant it. I'm in love with you.\"\n\nTears rolled down his cheeks, as he whispered. \"I've dreamt of you for so long. I gave up and decided that you weren't real, that I'd never find you. I love you Eileen; I've loved you even before we met, and I'm so happy to hold you in my arms now.\"\n\nWithout thinking she flung herself into Kevin's arms. Kissing him hard and with so much passion, Eileen said softly, \"Kevin I have felt the same way for you for so long but never dared believe you would want someone dull as me\", she whispered.",
        "Kevin was ecstatic, beaming with pride. The most beautiful woman wanted him. Where she got the idea she was dull, he had no idea. Nothing was further from the truth. Kevin looked deep into her eyes and kissed her. He wanted to show her in that kiss, how much she meant to him. \n\nHe wanted to love her. He wanted to be with her. Eileen could feel Kevin's hard cock pressing into her. She was so taken with her new found love of her life. She was his in every way and he wanted her every bit as much as she wanted him. Now Kevin had told her that she was all he had wanted for so long, the only woman that he had ever loved. With that in mind she offered herself, both body and soul, to him.\n\n\"Kevin, I love you. I want you. \" she whispered. \"I'm yours.\"\n\n\"Eileen, are you sure? If we do this, I'm never letting you go. You're it for me girl.\"\n\nKevin greedily took her gift. He'd waited so long. He slowly kissed every inch of her body. Loving her slowly, he worshipped her. He kissed her temple, nibbled her ear, and slowly tasted skin at the base of her neck. Then he realized she was wearing too may clothes. He made short work of removing his shirt form her body. Eileen lay before him, her lightly sun-kissed skin, a stark contrast against his dark sheets. \n\n\"Eileen, you're so beautiful.\" He whispered awed at the sheer sight of her. Eileen blushed and moved to cover her body with the sheet. He stopped her. \"Never hide from me, baby. I have seen the finest of arts, admired statues of the Goddesses of ancient Greece and Rome. But none of them were nearly as lovely as you are to me, Eileen. I was stunned by your beauty when we met years ago, but I fought hard against it. I just... I mean-\" She kissed him, not needing to hear more. She pulled his body love hers. Kevin then decided to continue his exploration of her body.\n\nEileen groaned as Kevin suckled and nibbled her breast. \"Kevin, please.\" she moaned. She wanted more. Her body burned for him. The feel of his lips on her sent waves of heat to the center of her body, Her pussy, was throbbing and leaking copious amounts of fluid. Baby, please, I need...\" Eileen groaned. \n\nHe stopped, \"Uh uh, not a sound and don't move, or I stop, alright.\" Eileen whimpered. \n\nHe continued his exploration until he reached her glistening center. Her neatly trimmed red hair was covered in moisture. He inhaled her scent. Slowly he stroked her clit, and inserted three fingers deep inside her. Eileen, rode his probing digits biting her lips to keep from screaming.\n\nThen he spread her thighs, as he leaned down to taste. At first taste of her he groaned. He'd never tasted anything as sweet. He drank from her as if he was starving and Eileen screamed as he pleasured her. Within minutes, she rode his probing tongue to completion. Her cunt exploded as her juices flowed into his mouth. \n\nRising and removing his garments, Kevin entered his woman urgently and swiftly both moaning at the feel of her body accepting him so completely. She was so tight and hot. Kevin wanted to make this last, but knew he would not be able to. He stroked in and out, loving her slowly, willing his body to hold off. Soon his sack clinched and he knew then would come. \"Eileen, baby, cum with me, please\" he begged. \"YES,\" she screamed as her cunt contracted on his cock, pushing both of them into a state of coital bliss. Both shouted as their bodies succumbed to the most exhilarating climax of their lives. This was the first time that they made. Neither were virgins, but the moment was as special as if they were. \n\nKevin held her close, and soon realized, his chest was covered with her tears. Fearing he was too rough and had hurt her; he was immediately concerned. \"Kevin, I knew it would be like this. For years, I've waited for you and now I can't ever let you go. If you don't want me, I don't think I can handle-\" \n\nKevin silenced her with a kiss. \"Now, you are mine, as I am yours,\" he said softly. Eileen cried as she looked at him. Kevin smiled, and said, \"Let me show you.\" Then he proceeded to love her well into the later part of the day. Soon Eileen was crying out for more, as Kevin once and for all claimed his woman. Never had she felt so treasured. Kevin held her and kissed away her tears. A few hours later, the two lay snuggled together, neither speaking.\n\n\"You know we have to marry, sooner rather than later.\" Kevin stated wearing a well-satisfied grin. They had finally gotten out of bed. It was late in the afternoon, and Kevin was determined to prepare a meal for her. They both cooked, and she loved his creations.\n\n\"What? Kevin, that's a big...\" Eileen stated, choking on the tea she had just sipped. He never showed an interest in marriage.\n\n\"Well baby, there is no way on earth I'm giving you up. Think about it, we spent the whole day in bed, right, not a condom in sight. I will not have my son or daughter be born out of wedlock, Reverend Johnson will strangle me. After the way I teased Gianni before Giovanni was born, he'll demand retribution. Besides, I love you Eileen. Marry me? Please?\" He asked so sweetly, moving to hold her. He loved touching her and simply feeling her in his arms. \n\nShe tried to look pensive. Then she saw the earnest look on his face. Kevin was at his most vulnerable and she could not deny him. Eileen smiled. \"Kevin! Yes, yes! I love you too. We need to arrange-.\" He kissed her.\n\n\"No, we marry today. We'll go to the magistrate and be done. I'm not willing to wait. I want to start our lives now\", Kevin insisted. He had waited years to find her, and he wasn't waiting a minute more.\n\nEileen paused. He froze. If she really wanted a big wedding in a few months, he'd wait. But he hoped that she agreed to marry him today. He didn't want to spend another minute without her in his life.\n\n\"Kevin, I love you. I have loved you for so long. If you want this now, then, Yes, let's marry, today.\" Eileen agreed.\n\n\"Yes!\" he yelled. \"Yes!\" Then he kissed his woman. He called Ortho and he and Beatrice joined them. They were honored to have their new friends witness their special moment. A quick trip to the magistrates office, and Kevin was kissing his wife.\n\nAfter the short ceremony was over, Kevin and Eileen treated Ortho and Beatrice to lunch and invited them to stay with them for a few days. They refused, because as a newly married couple, they knew these two needed time alone. So after lunch, Ortho and Beatrice drove back home, but not before Kevin and Eileen promised to join them for dinner in a few days. \n\nAfter their new friends left, Kevin wanted his wife. He smiled as he thought about Darren and how he was so possessive of Sharon. He laughed because now he finally understood. \"What are you laughing about?\" Eileen queried. Kevin kept laughing at something and it peaked her curiosity. \"My brothers and how mad they will be when I introduce my sexy new wife. Baby, we might have to have another ceremony to appease the family. Um will you marry me again?\" He asked. Eileen nodded and kissed her husband.\n\n\"Husband, I have other needs right now,\" she reminded him. So for the next few hours, Kevin took great pleasure in taking care of his wife's needs. \"I love you so much Kevin.\" She whispered, tired sweaty, and completely satisfied. Then she kissed his chest and napped. \n\n\"Eileen, I love you, too. I promise to be the best...\" she snored and he realized she was asleep. Holding her against his chest, he mused, Hmmm, I wore her out. I'll pamper her when she wakes up. Easing from their bed, he went to make an important call. \n\n\"Hello, Kevin.\" Shaun answered. Kevin greeted his mentor, forever grateful to him for saving his life. If he had not shown up, Kevin would not have survived. He would forever be grateful for him. Kevin asked, \"I have a surprise. I want to drive home this Saturday. Can you have everyone meet at your house?\"\n\nSaturday morning dawned bright and early. Everyone arrived at the MacGregor's home. Shaun called everyone and told them what Kevin had said. They had finished breakfast and Kevin had not arrived. That morning, a little after eleven, he drove up.\n\nKevin and Eileen entered and everyone greeted them. Everyone was excited about his announcement when Kara screamed. \"Oh my God, you two got married!\" She grabbed Eileen's hand as everyone else noticed the gorgeous wedding band that donned her finger. Not to be outdone, JJ pointed out that Kevin's ring matched. The whole family celebrated welcoming Eileen into the family, finally.\n\nDarren, Gianni, Michal and JJ cornered Kevin to tease him. \"Oh Hell no, you tortured us before we married. It's pay back. We are going to...\" Darren stopped and for a second looked at his brother, his friend. \"Man, congrats, she is perfect and you deserve to be happy.\" \n\n\"Darren's right, as much as I want to tease you, Kevin I'm so happy for you right now.\" Gianni added.\n\nKevin looked at all three of his brothers. He would never forget what they went through, where they came from, because that's what made them who they were. They were his family and that's all that mattered.\n\nGlancing over, he saw the smirk on Michal's face, \"Come on, Mike, let me have it.\" he teased. \n\n\"Nope, I'm happy for you Kevin. I never knew you were so slow on the uptake, but you finally caught on. It took you long enough.\" he teased. Soon all the guys laughed and the women looked over. \n\nEileen loved his family, because they made her feel at home. As she sat and talked with her new sister-in-laws, Ms. Delia took a moment to thank her for loving Kevin. She was rendered speechless by her gesture, because how could she not love the one man that was made for her, even though he was ornery, mule-headed, and short-tempered. He was hers, as she was his.\n\nThe cheers and jubilation lasted well into the day, before Shaun had a chance to speak with Kevin alone. Shaun went to his office because he needed a few moments. Someone knocked and entered. He thought it was Delia, but it wasn't; it was Kevin.\n\n\"Mr. MacGregor, are you alright? I looked up and you were gone.\" Kevin stated. \"I'm fine, son\", he answered. \"I want you to know that I am so happy for you. You deserve this happiness. You've overcome so much. I want you to go on and live. Love her. Take care of her. Live your life son. You aren't alone anymore.\" He smiled.\n\nKevin hugged his mentor. This man, this one man, changed his life. Not only his, but the lives of his brothers. He'd honor him. He'd make sure he would help someone else along the way. Kevin realized he missed his wife. He smiled, his wife; that title had a nice ring to it.\n\nSo he and Shaun joined the rest of the family.\n\nEPILOGUE\n\nShaun stood out to the side and simply admired his family. Delia walked over and asked what he was thinking about so intently. Shaun laughed. \"Nothing much, just how a few traffic tickets was the best thing to ever happen to me.\" Delia looked at their kids and she had to agree. Those tickets years ago, changed their lives in ways they couldn't imagine. She and Shaun stood, hugging each other.\n\nDarren looked over at the MacGregor's. He took a moment to reflect. He smiled as he thought for a moment about his life's journey. If it wasn't for that man standing over there, he'd probably be dead. Mr. MacGregor saved his life. Thanks to him, he had a beautiful wife, two lovely daughters, and a handsome new son. Years ago, Mr. MacGregor gave him a card. The card said,  \"I know life is hard and you want to fight. Let me teach you to fight the right way, and I'll help you slay your demons. Trust me. I'm here for you.\" Those words gave him hope, and he latched on. Now, years later, he owed this man and he'd never forget it. He even took time to volunteer on weekends to mentor some of the young boys at his children's school. It wasn't much, but he'd learned that even the smallest step over time could yield big results.\n\nWhen Mr. MacGregor promised to protect Clemmie, he sealed his fate as a true leader to him. Under the guidance of the MacGregors', Darren watched his baby sister flourish and blossom. Now, not only was she safe, but now happy and married to a man he considered his brother, Michal. Clemmie and Michal lived in LA, but when Shaun called, they came back home to be with Kevin. Clemmie was now a nurse practitioner. She and Michal's family was the reverse of his and Sharon's. They had two rowdy boys, and she and Michal were expecting their third child, a daughter. His sister was finally happy, as was he.\n\nClemmie smiled at her brothers as she glanced toward the two people that changed her life as well. Shaun and Delia MacGregor were the parents she and Darren lost when they were young, and she'd love them for eternity for the normalcy their love and support gave them. After Robert attacked her, she was at the lowest point in her life, but those two people would not let her drown. They fought for her, even when she could not fight for herself. Ms. Delia taught her how to be a woman, and for that alone she was eternally grateful. Mr. MacGregor promised her she was safe and he was true to his word. He always told her, don't thank me, help someone else along the way and she did. Because of them, she treated patients for free on weekends at her clinic, honoring the idea that Mr. MacGregor always taught. You should always help someone else along the way. She couldn't see many, but the few she could help, she did. \n\nSoon, Darren heard Gianni laugh and looked his way. Gianni was playing with his oldest, Giovanni. Gianni saw Darren looking pensive, and he too looked over at his mentor. He smiled and nodded at him. Gianni knew this quiet man was his life-line. He taught him how to be a man, not only him but also his brothers as well. He lost his mother a year ago, and it was hard, but he and his brothers were never alone. Shaun & Delia, alongside his wife Kara, and the rest of his family stood with them. Mr. MacGregor promised him he'd never be alone again, and he kept that promise. He held his wife close and watched their extended family mingle. He whispered a silent thank you to his mentor, his father.\n\nKevin would usually segregate himself. But today was about him and his wife. He looked across the area and saw Shaun and Delia. It was then he realized that he wasn't alone anymore. He had people that were there for him, cared for him. He smiled. Mr. MacGregor gave him a card that said, \"Kevin, you are so much more than what you know. I am here for you and will help you find your way. Trust me, let me in and you'll never be alone again. Kevin looked into is eyes and he believed him. That moment changed everything for him. He met his brothers, and sister. They were and would always be a family. \n\nMichal looked at his parents. He was so proud and in awe of them. They were two of the most selfless people he knew, and he was honored to call them Mom and Dad. Years ago when his dad told him he was mentoring three guys from a detention center he worried at first, but in the end, he acquired three brothers and a beautiful woman that was all his. Michal stood and admired his parents for a moment, as he felt Clemmie's arm encircle his waist. Turning he moved behind her to hold her and caress her growing stomach, where his daughter was safe and protected, smiling he thought  I wonder if he has any idea how great he is. If he knows how many lives he has changed. I am so proud to be his son.\n\nAll four men stood and walked over to their mentor, their father. Each young man took a moment to thank the one man that fought for them, and gave them a reason to hold on. Delia stood next to her husband, as the boys showered both him and her with praise and adoration. She smiled.  Can one man make a difference?\", she thought. \"Yes, one man can.\"\n\nTHE END\n\nThank you all for reading this story. I hope you enjoyed the ending and that you weren't too disappointed. As I wrote this, I had no idea where it would lead. The characters took on a voice of their own. Late one night, I wondered could one man make a difference. This story was born. "
    ],
    "authorname": "Iread2relax",
    "tags": [
        "love",
        "trust",
        "family",
        "friends",
        "friendship",
        "laughter",
        "gratitude"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/pay-it-forward-ch-10"
}