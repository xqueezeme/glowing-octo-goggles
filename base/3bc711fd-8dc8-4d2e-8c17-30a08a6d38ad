{
    "title": "Mable's Breasts Pt. 11",
    "pages": [
        "In the weeks and months that followed Mom's breakup with John, one might think our collective personal lives and business connections might have suffered somewhat because of it. But, to the contrary, our lives continued almost as though nothing untoward had ever happened. John and Mom had seemed to reach a depth of understanding where they were both able to maintain a true warmth of friendship without sexual intimacy. Mom was equally adamant that Mable and I follow her example of understanding and forgiveness. As such, John remained an integral part of the business as my partner and was still a frequent and welcomed dinner guest at our house.\n\nEleanor, however, was another matter. Mable suggested removing her altogether from our list of clients and I concurred. John came to Eleanor's defense, however, pointing out that Eleanor had, by her word of mouth alone, brought us well over a dozen new clients. He even offered to take over Eleanor's account personally and to be her primary source of contact to eliminate our having to deal with her personally. Mable and I shared a smile over that, assuming he was, in all likelihood, hoping to continue a sexual relationship with Eleanor as well. \n\nOnce John and I were through with the burden of having to attend school, our computer maintenance business began to grow at an unprecedented rate. Between Mable's herculean efforts to canvas office buildings within her sphere of business influence, along with the surprising explosion of new clients brought to us purely by word of mouth, our appointment calendar quickly reached critical mass where John and I were running our asses off from morning to evening.\n\nAfter a discussion, Mable and I visited a local post-secondary IT school to interview prospective new employees and were happy to offer positions to Bonnie and Margot, two female students who both had a wealth of computer experience and came with glowing references for dependability and trustworthiness.\n\nJohn and I each took one of the new girls under our wing and, within a few days, they were both up and running seamlessly without supervision. We offered them both part-time positions with a better than average wage, promising them full-time employment if they wanted it in the near future. In less than a week, each woman was working independently on a calendar that worked with their school schedule and alleviated a great deal of pressure on John and me.\n\nThen, just when things seemed to be leveling out, Mable came to us one day bursting with excitement. She presented us with a prospect that, if it came to pass, would move Jamble into an entirely new income tax bracket. She had been presented with a proposal from a large local real estate company to take over the tech support for the entire company. They had previously outsourced their tech support to a company in the Philippines and had been very unhappy with their work. It would mean maintaining an on-sight presence for either John or myself as well as necessitating that both of us become knowledgeable and up to speed with all of the tools involved with Server administration, such as Active Directory and Group Policy Management.\n\nWaiting for the requisite 90 days to relieve their current tech support of their duties, John and I had a window of opportunity to gain the knowledge we needed. At the recommendation of Margot and Bonnie, we enrolled in the same IT school they attended for a boot-camp crash course in Server 2012 and 2016, to apprise ourselves of the ins-and-outs of server administration so as to be able to work seamlessly and effectively for the real estate company once we had the tech support contract.\n\nJohn was extremely enthusiastic about the on-site position of tech support, so it was decided he would be our liaison there. He and I both put in a few long nights rebuilding their server and bringing the group policies up to our liking, but then it was his to run while I maintained the day to day running of Jamble with Bonnie and Margot. Upon their recommendations, we brought on another student named Amir and quickly brought him up to speed as well.\n\nWith John in the new position of on-site tech support manager, I saw much less of him. But we kept in touch daily by phone for updates or if he needed a hand with the server. He confessed to me one day that he had a new love interest that kept him busy in his off-hours. When pressed, he wouldn't reveal the new girl's identity, saying he preferred to keep his personal life private from now on and seemed very happy.\n\nMom finally confided to us how, just before his unfortunate dalliance with Eleanor, John had revealed to her his desire to have sex with Mable and had asked her about the possibility of inviting Mable for a threesome some evening. The request had actually hurt Mom's feelings, as she had begun to have definite feelings for John at that point and had suggested pointedly that perhaps John should take that particular subject up with Mable and leave her out of it. I finally came to understand what that little estrangement in their relationship had been about on the day we had gone over to Eleanor's.\n\nFor me, however, I seemed to fall deeper in love with Mable with every passing day. We spent so much time together that Mom finally spoke up and chastised her for keeping her apartment and paying her exorbitant monthly rent when she was basically living at our house all the while.\n\nIt didn't take long for Mable to see the wisdom in Mom's words. She discussed it with me in private that night to make sure I would be okay with the proposed living arrangement. I couldn't be happier, I told her, and we sealed the deal with over an hour of lovemaking. Arrangements were made with a local moving company to put her furniture in storage and Mable turned in her notice with the apartment manager.\n\nI'm not exactly sure when I decided that I wanted to ask Mable to marry me. I suppose it had always been lurking there in the back of my mind, but lately, the thought became ever-present in my thoughts.\n\nOne afternoon while passing a jewelry store in a mall, I looked over the selection of engagement rings purely to get an idea of the range of prices. Impulsively, I purchased one that very day, with savings I had accrued over time, and took to carrying it with me every day and waiting for what I was hoping might be the perfect opportunity to propose to Mable.\n\nOf course, it went without saying that I had no idea what Mable's answer might be. I felt in my heart that she would accept but nagging doubts in the back of my mind kept were always present. She was of the same age as my Mom, which presented quite a quandary. While I was certain it had no bearing on how I felt about her or how much I wanted her to be my wife, it certainly gave me pause to consider how she might feel about marrying someone as young as I.\n\nSeeking counsel from my most trusted source, I took Mom aside one afternoon. \"I've been thinking about asking Mable to marry me,\" I said, watching her eyes to gauge her reaction.\n\n\"Oh?\" She said, her lips curling into a smile. \"Well, frankly, it's about goddamn time.\"\n\nWe both laughed. \"So...I'm guessing you're okay with it?\" I grinned.\n\n\"Of course I am, honey,\" she said, taking me in her arms. \"I can't imagine anyone in the entire world better for you than Mable. When are you planning on asking her?\"\n\nI shrugged. I hadn't thought about it all that much, only that I wanted it to happen. \"I don't know, Mom,\" I said, \"I guess I'm probably a little worried about what she might say if I ask her.\"\n\nMom nodded and smiled, \"Is it the age thing you're worried about? Because if it is, you can put that out of your mind right now. Mable loves you, Jimmy. I don't think the age difference will matter to her one iota.\"\n\nRelief course over me and I couldn't help but smile. Even though I still had more than a few misgivings about it, Mom's confidence eased my mind tremendously.\n\n\"Have you thought about buying a ring yet?\" She asked.\n\nI nodded and smiled, reaching into my pocket for the little red velvet pouch, opening it to let the ring slide out into the palm of her hand.\n\n\"Oh, Jimmy, it's beautiful,\" she gasped, holding the ring to let the diamond catch the sunlight cascading in from the window. \"Mable will absolutely love it.\"\n\n\"I've been carrying it around with me for the past two weeks or so just waiting for the right and perfect time,\" I smiled, my heart warmed by Mom's praise. Now all I had to do was find the perfect occasion.\n\nA few days later, Mom came home from a shopping trip bubbling with excitement. Apparently, Richie's new band, \"Sambora\", was about to take up a Las Vegas residency in the Hard Rock Hotel and Casino, and Mom was beside herself with excitement at the prospect of seeing him again.\n\nOn the band's opening night, Mom and Mable dressed to the nines and took an Uber down to the Hard Rock. Mom had managed to score excellent seats near the stage, and both women had managed to fortify themselves with several shots of Jameson's before leaving the house.\n\nAlone in the house, I busied myself by immersing in the Marvel universe to watch \"The Avengers - Endgame\" while enjoying the remains of the Jameson's with cola.\n\nJust as the movie was ending, the front door opened. I turned to smile at Mom and Mable and, to my astonishment, Richie himself. The women enthusiastically introduced me to Richie who smiled at the movie I was watching. \"Avengers End Game...nice,\" he said, giving me a fist bump and a smile.\n\n\"He brought us home in his limo,\" said Mable, her face wreathed in smiles.\n\n\"I offered to take both of these fine ladies out to a late dinner tonight, but Mable said she was too tired. If you don't mind though, I'd like to keep your Mom out for a while longer. It's been ages and we'd like to catch up over dinner.\"\n\n\"Of course,\" I smiled, seeing the look of pleasure and excitement on Mom's face. \"By all means, you guys have a good time.\"\n\nRichie gave Mable a warm hug and fist-bumped me once more as he and Mom made their exit. Mable and I waved as the limo sped away.\n\n\"Do you think she'll be home at all tonight?\" I asked, cocking an eyebrow at Mable. Mable laughed aloud, \"I'd be surprised if we see much of her at all for as long as Richie is in town. He has a serious thing for her. Apparently, SHE was the one who got away all those years ago and he seems hell-bent on not losing her again.\"\n\n\"Wow,\" I said. \"Tell me all about tonight.\"\n\nWe sat on the sofa with a couple of glasses of Grand Marnier while Mable told me of their evening.\n\n\"The show was excellent,\" she exclaimed. \"Leslie and I were having a great time bopping up and down to the music. Then, about halfway through the show, Richie asked to bring up the house lights so he could see the crowd. And, oh my God, Jimmy, you should have seen his face when he happened to catch sight of Leslie in the audience. He almost stopped the show saying hello to her from the stage. And poor Leslie was so self-conscious in the bright lights, her face was beet red.\n\nOnce the house lights were off and the band began to play again, two of the band's security guys approached us and whisked us both backstage where we got to watch the rest of the show. Afterward, Richie literally ran over to Leslie and picked her up in his arms, twirling around as they both laughed like school kids.\n\nHe took us to their dressing room and introduced us to the rest of the band and we all had a few drinks before he offered to take us both to dinner. I could see he only had eyes for Leslie, so I didn't want to be in their way. And, here I am.\"\n\nShe smiled and we clinked our glasses together. \"So,\" I said with a smile. \"Besides Richie, how many of the other band guys wanted to take YOU out to dinner?\"\n\nMable laughed and almost spilled her drink, \"Well, let's see,\" she said, rolling her eyes playfully. \"It was a five-piece band, and Richie was spoken for, so...would you believe...four?\"\n\n\"Oh, I would believe that. You look incredible tonight.\" She wore a loose-fitting knit pullover and was obviously braless beneath, and a short denim skirt that showed off the shapeliness of her legs in her high-heeled pumps.\n\n\"Why thank you,\" she said, fluttering her eyelashes playfully while fanning her face with her hand. She paused and her smile faded, \"I love it when you look at me that way,\" she said.\n\n\"What way?\"\n\nThe corners of her mouth curled into a little smile, \"The look that says how much you want me. The one that says how much you want to be inside me. The look you have on your face right now.\"\n\nShe set her glass down on the coffee table and stood, moving to stand in front of me and smiling down at me seductively. She moved her hands down the sides of her hips, caressing her hips and thighs teasingly as she swayed her hip slowly from side to side.\n\n\"I've been so horny all evening,\" she murmured, her eyes on mine. \"I couldn't wait to get home to you.\" She lifted her hands and cupped her breasts, squeezing them teasingly as she watched my eyes, knowing how much I loved it when she brought out her teasing, slutty persona.\n\nShe moved her shoulders, allowing her breasts to sway provocatively beneath her top and reached down to grasp her skirt, inching it very slowly higher and higher. I was instantly erect and adjusted my erection within the tight confines of my jeans.\n\nMable smiled, \"I want to see you, baby. I want to see your beautiful cock.\"\n\nI undid my jeans, my eyes glued to her rising skirt as the hem was almost at her crotch. I unzipped and pushed my jeans and my briefs down to my knees, allowing my erection to spring free.\n\nMable sighed, her eyes on my penis as she began to move her hips seductively. In one rapid movement, she pulled her skirt up until it was bunched around her waist with only her tiny red satin thong covering her from her waist to the tops of her shoes.\n\nImpulsively, I sat forward, sliding my hands along the backs of her legs from her calves to the back of her thighs as I bent my head to kiss the red satin triangle that covered her pussy.\n\nShe caught her breath as I pressed my lips to her, moving my mouth to stroke the lips beneath her thong with my tongue. She placed her hands on either side of my head as I continued to probe my tongue against her, moving her hips slowly to grind her pubic mound against my mouth.\n\nI raised my hands and grasped the narrow band of material that surrounded her hips and pulled her thong down to expose her smoothly shaved lips. She groaned softly as my mouth found her bared mound and I plunged the tip of my tongue forward between her smoothly shaved lips.\n\n\"Yes, baby,\" she sighed, her voice little more than an airy breath as she pulled my head tightly to her. I cupped her buttocks and continued pressing my tongue against her, feeling the hard rise of her clitoris and flicking the tip of my tongue rapidly against it.\n\nShe moved her hips faster, grinding herself against my mouth as she held my head pressed tightly to her. My mouth, lips, and chin were coated with her slick, viscous vaginal secretions as she used my mouth to bring herself closer to orgasm. I held tightly to her with my hands cupping her buttocks, feeling her gluteal muscles flexing beneath her smooth flesh with each thrust of her hips.\n\n\"Oh, God!\" She gasped, her fingers tightening as she grasped my hair, her hips moving so rapidly they seemed almost to be vibrating. She gasped and cried aloud, holding herself hips still, her chest heaving as she gasped for breath. I flicked my tongue rapidly against the hard rise of her clitoris and she screamed my name, her pelvis jerking spasmodically and, as she began to cum, a warm gush of fluid erupted from her to flow down over my mouth and chin.\n\nShe held me tightly to her, her hips grinding against me as her orgasm swept her away, and I continued the pressure against her clitoris with the tip of my tongue. With a final cry, she pushed my head away and stood, gasping for breath as her orgasm began to ebb. When I moved closer to kiss her lips, she slipped her hand over her vulva to keep me away, her body still shuddering with acute little spasms of pleasure.\n\nI moved my fingers over my mouth and chin, collecting her ejaculate and bringing my fingers to my mouth to taste more of the heady, musky scent from her vagina and swallowed her almost hungrily as her secretions permeated my mouth and the back of my throat.\n\nWhen she finally sighed and moved her hand from her vulva, I moved in immediately, surprising her with my desire to taste more of her. I closed my mouth over her entire vulva, thrusting my tongue deep between her smooth puffy labial lips to lap more of her into my mouth as I gripped her fleshy buttocks and pulled her tightly to me.\n\n\"Oh...Jimmy!\" She sighed breathlessly, her words little more than a soft guttural moan. \"Yes!\" She gasped, her voice shuddering. \"Yes!...Oh, God, yes!\"\n\nShe grasped my head once more as she began thrusting her pelvis, once again, grinding herself against my mouth. She came a second time a moment later, her cries filling the living room and echoing off the walls, as I was rewarded with another squirt of her vaginal discharge directly into my mouth, her hips vibrating almost frantically.\n\nWith a loud gasp, she pushed me away as her orgasm reached its crescendo. She stood, her thighs trembling almost spasmodically as she began to lose her balance. I guided her hips and she fell onto the sofa beside me, her knees drawn up with her arms between her legs as she continued to tremble with the aftershocks of her orgasm, her chest heaving, her eyes wide. \"Holy shit, baby,\" she whispered, \"That...Was...Incredible.\"\n\nI couldn't help but smile, proud and happy that I had managed to bring her to such shuddering orgasms. After a moment, she moved closer, reaching up to my mouth to wipe away several drops of her ejaculate from my chin with a little smile on her lips as she brought her fingers to her mouth to taste herself.\n\nShe glanced down, her eyes widening to see how her ejaculate had soaked the front of my shirt and had also dribbled down onto my thighs.\n\n\"Oh, my God, baby,\" she said, staring at the wetness on my shirt. \"Is that all from me?\" She looked up at me and I smiled and nodded.\n\n\"It is...and I loved every second of it.\"\n\nHer lips parted and her lips formed a tiny, self-conscious smile, \"I...felt something kind of loosen inside me...when I came. Do you think I might have actually squirted?\"\n\nI nodded and smiled broadly, \"I think that's exactly what happened.\"\n\nShe shook her head in disbelief, \"Is that even a REAL thing? I mean...I've heard how some women do it when they cum, but I thought...well, I thought it was all just some sort of urban legend or a porn-star trick. I can't believe it might have just happened to me.\"\n\nI smiled broadly and wiped my mouth and chin, \"Well, I for one can firmly attest to the fact that SOMETHING happened when you came. And not just one time, it happened both times you came.\"\n\nShe shook her head in disbelief as the corners of her mouth curled into a hint of a smile. \"So...why would it happen now? I mean, this wasn't the first time you made love to me with your tongue.\"\n\nI shrugged, wondering if perchance it had something to do with the fact that, while I had indeed used my tongue to excite her toward orgasm, she had actually been the dominantly lustful one by thrusting her hips and grinding her pussy against my mouth, essentially taking her pleasure almost selfishly. I broached that suggestion with her and watched as her cheeks colored as she looked away with a little smile of embarrassment.\n\nShe looked up and pursed her lips thoughtfully. \"I think there might be some truth in that,\" she said. \"I don't think I've ever actually been so sexually aggressive with anyone before.\"\n\nI smiled broadly, \"I loved it, Mable. Hopefully, you'll feel inclined to be that way again. And again,\" I added with a laugh.",
        "Mable returned my smile almost sheepishly, \"I think it's fair to say that you can pretty much count on it,\" she said. \"It was a little...I don't know, scary I guess...to lose myself that way.\"\n\nI smiled and reached out to stroke her cheek lovingly. \"I'm just happy that you trusted in me enough to allow it to happen with me.\"\n\n\"I love you, Jimmy,\" she said, looking into my eyes. \"And, right now, I believe you and I are not quite finished.\"\n\nWhen I cocked an eyebrow curiously, she continued. \"I'm feeling a little empty inside,\" she said, reaching her hand between her legs to cup her pubic mound. \"I need to feel you inside me.\"\n\nI smiled, feeling a great need to let myself go and relieve the ache and pressure I was still feeling between my legs.\n\nTo my surprise, she quickly rose up and straddled my thighs, taking my face between her hands and looking into my eyes. \"I don't want you to make love to me,\" she said with a little shake of her head as she lowered her left hand, her fingertips teased the tip of my cock. \"There's been enough of that for now. I just want to take you inside me and feel you cum. I want to FEEL it inside me. Will you do that for me?\"\n\nShe smiled and leaned forward to kiss my lips warmly as her hand closed around the tip of my cock and she began to stroke me with exquisite tenderness. She pressed her forehead against mine and looked deeply into my eyes. \"Tell me when you're close, baby,\" she said.\n\nI surrendered to the pleasure of her hand as she stroked me and felt the rise of my orgasm swelling in the pit of my stomach as my abdominal muscles began to tighten.\n\nMy eyes widened as I looked into hers, \"I'm...really close,\" I said, feeling myself reach the point of no return.\n\nShe quickly raised her hips and guided me to her vagina, settling her weight onto me and taking me deep inside her. \"Let it go, baby,\" she urged, her eyes imploring into mine.\n\n\"Oh, Mable,\" I sighed as my first ejaculation erupted inside her. Mable gasped and her mouth opened as she felt my penis swelling inside her and the sudden rush of wetness within as my semen began to fill her.\n\n\"Mable!\" I sighed as my second ejaculation sent another jet of semen deep inside her. And then, \"Mable!...Mable!...Mable!\" I sighed anew with each succeeding ejaculation while staring into her eyes.\n\nAs my orgasm began to fade and my final burst of semen flowed into her, her eyes suddenly filled with tears. Her eyelids fluttered and her breathing faltered as the tears began to stream down her cheeks.\n\n\"Oh...My baby,\" she said, her voice breaking with emotion as her arms went around my neck tightly. \"My baby...my darling, baby,\" she whispered, her lips now against my ear. \"Oh, baby...I love you SO much.\"\n\nTo my astonishment, her hips began to tremble. And, as she continued to sob lightly, I felt her vagina tightening against me as her hips began to move ever so slightly.\n\n\"Oh, god...I'm cumming,\" she sighed as her hips gently rocked to the rhythm of her need and she surrendered to the pleasure. Her orgasm was slow and gentle with her buttocks pressed down onto my thighs and her vagina tightening on my cock as she shuddered in my arms and her soft sighs warming my cheek.\n\nMoments later, as her pleasure began to ebb, she raised her head and looked into my eyes, the tears streaming down her cheeks.\n\nI wiped away her tears and she smiled self-consciously. \"I just...couldn't hold the feeling back, baby. The look of love on your face as you came inside me was just the most beautiful thing I've ever seen. No-one's ever looked at me with so much love.\"\n\nWe held one another and kissed lovingly as I caressed her bared thighs and buttocks. \"I don't know what I would do if I ever lost your love, baby. I don't know what would become of me.\"\n\nOh my God. Like a bolt of divine lightning from the heavens, I knew this was the perfect moment I had been waiting for. As I looked into her eyes, I reached below my knee to find the ring pouch in the pocket of my jeans. \"I never want to lose you either, Mable,\" I said. \"Will you marry me?\"\n\nHer jaw dropped and she gasped, looking deeply into my eyes with a little shake of her head. \"Are you...are you asking...\"\n\nI smiled and nodded, bringing up the red velvet ring pouch and opening it before her eyes. She gasped as the ring slid into the palm of my hand. Her eyes welled once more, and tears began to flow down her cheeks.\n\nShe pressed her lips tightly together in an attempt to stem the tears and nodded her head. I took her left hand and slipped the ring onto her ring finger. \"Please, Mable,\" I said looking imploringly into her eyes.\n\nShe nodded again and, despite her tears, she smiled, \"Yes,\" she said, the word little more than a breathy whisper. \"Yes...yes, yes. A thousand times YES!\"\n\nShe threw her arms around my neck and crushed me to her, sobbing softly against my ear as I caressed her, tears of happiness welling in my own eyes as well.\n\n\"Are you sure this is what you really want?\" She said, raising her head to look into my eyes.\n\n\"With all my heart,\" I returned. \"I don't want any other woman, Mable. I only want you. Every time I see you, all I want to do is to be inside you.\"\n\nMable looked into my eyes without smiling and nodded, \"I sure hope so baby, because that's exactly how I feel. I don't want to be with another man...ever. I don't want to feel any other man's penis or any other man's semen inside me. I only want you.\"\n\nI couldn't help but smile when she finished talking, \"God, Mable, everything we just said sounded like wedding vows from a porn movie.\"\n\nMable laughed aloud and tossed her hair from her face, \"I think so too, but I meant every word I said.\"\n\n\"Let's do it then,\" I said. \"Right now. Let's get dressed and get married right now.\"\n\n\"Woah, hold on there, tiger,\" she admonished. \"While I'd like nothing more than to marry you right this very second, we have your Mom to consider. If we do it without her she will never forgive us.\"\n\nI nodded, realizing the truth in her words. \"You're right,\" I said. \"We'll have to wait. At least until we talk to her.\"\n\nWe kissed and I felt my penis stirring inside her. God, her vagina was beautiful. \"I was hoping,\" I smiled as our lips parted, \"that the next time I make love to you, it would be making love with my wife.\"\n\nI smiled as I pushed her to the side and rolled over on top of her, \"I guess I'll just have to be satisfied making love to my fianc\u00e9 instead.\"\n\nI thrust into her forcefully, leaving no doubt in her mind how much I wanted her at that very moment. We made love frantically, like animals, thrusting and grinding as we each cried out in our lust and pleasure.\n\nLater, as we finally made our way upstairs to our bedroom, we made love again, slowly and sensually, a celebration of our love for one another and our impending marriage.\n\n***********************************************************************************\n\nThe next morning, while Mable showered, I slipped out to pick up a couple of breakfast burritos from a nearby Roberto's. Arriving home, I found her in the kitchen where she was in the process of making a pot of coffee.\n\nIt hit me all over again as I walked in the door and saw her busying herself in the kitchen how much I loved her. Her hair was pulled back into a loose ponytail and, even without makeup, her face looked astonishingly fresh and beautiful. But it was her voluptuous body that never failed to take my breath away, and this morning was no exception.\n\nShe wore very little, loose-fitting tank top cut off just below her breasts to expose her midriff and a little black thong. As she moved, her big beautiful breasts swayed provocatively beneath the thin cotton material, occasionally exposing the bottoms of her breasts whenever she bent at the waist or turned abruptly. Her broad plush hips narrowed to her curvy thighs and shapely calves. The little black thong completely disappeared between her gorgeous buttocks cheeks and barely covered her pubic mound, almost giving the impression that she was completely nude beneath her little cut-off top.\n\nWatching her move about, I couldn't help but be astonished all over again at my extreme good fortune to have her in my life. She was everything to me, my business partner, my lover, my best friend and soon to be my wife.\n\nI leaned against the doorway arch leading to the kitchen just to watch her move and excite myself. I smiled to feel my erection coming to life in the confines of my jeans and adjusted them accordingly as I couldn't help but begin to fantasize about the many and varied ways I wanted to make love to her at that moment.\n\nShe glanced up and was momentarily startled to see me standing in the doorway. She turned from the sink, wiping her hands on a dishtowel and her lips curled into a smile. \"Oh, hey,\" she said, I didn't hear you come in. I was...\" She paused when she saw the look of desire on my face and her smile faded as her eyes dropped to the bulge in the front of my jeans.\n\n\"Oh,\" she said, narrowing her eyes knowingly as she moved toward me with a seductive smile on her face. \"God, I love it when you look at me that way.\"\n\nShe slipped her arms around my neck and pulled me close, pressing her body against mine and kissing my lips warmly as I slipped my hands over her hips and down to cup her fleshy buttocks cheeks and pull her into me.\n\n\"Mmm,\" she moaned deep in her throat as I pressed the bulge of my erection directly against her pubic mound. I thrust my hips into her and shivered with pleasure as her body responded. My mouth moved on hers almost hungrily and I felt her lips warm as her arousal increased.\n\nI turned and pressed forward, backing her against the arch of the doorway, grasping the flimsy waistband of her thong and thrusting it down over her hips to fall onto the floor at her feet. She moaned softly, her mouth never leaving mine as I quickly opened up my jeans and pushed them, along with my briefs down to fall onto the floor as well.\n\nMable responded by parting her legs as I guided the tip of my cock to her vagina. I felt her slick and warm with the tip of my cock and pressed forward, parting her lips with the tip of my cock.\n\nMable opened her eyes and looked directly into mine as I thrust forward and penetrated her, moving deeper into her with each succeeding thrust until my pubic bone was pressed against hers and I was deep inside her.\n\n\"Come on!\" She gasped as I began thrusting rapidly. \"Cum for me, baby...cum inside me.\"\n\nBut, I was already letting go before she finished speaking, unable to hold myself back for even a moment once I felt the exquisite sensation of her warm, wet vagina surround me.\n\n\"Yes!\" She cried as she felt my erection swelling inside her as I began to ejaculate, her arms tightening around my neck, her lips close to my ear. \"Oh, baby...YES!\"\n\nI felt her need rising just as my orgasm began to fade and I continued to thrust into her vigorously until, with another cry that filled the kitchen and echoed off the walls, her orgasm swept her away and her body shuddered almost violently in her throes of pleasure.\n\nMoments later, I pulled back to let my cock slip from her. We smiled at one another, both of us basking in the glow of our pleasure. \"Sorry,\" I said, feeling a little self-conscious for having forced myself on her the way I did. \"I just wanted you so bad...\"\n\nMable shook her head vigorously, \"No,\" she said, \"you NEVER have to apologize for wanting me this way, baby. My body is yours, and you can have me anytime, anywhere.\"\n\n*****************************************************************\n\nLater that evening Mable and I lounged on the patio and talked over our plans for getting married. Neither of us had any desire for a church wedding with invited guests and discovered we both really liked the idea of going totally Vegas by getting married in a Strip wedding chapel by an Elvis impersonator. The love we had for one another coupled with the absurdity of the Elvis ceremony seemed to really appeal to the inner child in each of us.\n\n\"It sounds perfect,\" smiled Mable. \"Why don't I get us some wine to commemorate this momentous occasion.\"\n\nShe made her way into the house and through the open patio door, I heard the cork pop from the bottle. Suddenly, I heard Mom's voice and Mable's exclamation of excitement. I smiled, happy Mom was home and wondering how long she might be home for this time.\n\nTo my surprise, Richie stepped from the kitchen onto the patio and joined me at the patio table. We smiled at one another in greeting and fist-bumped.\n\n\"Hey,\" I said. \"What are you two up to tonight?\"\n\n\"We're going out to dinner and Leslie wanted to bring you two along if you're up for it.\" He answered. \"She also wanted a change of clothes too.\"\n\nHe glanced over his shoulder at the patio door and then back at me, lowering his voice. \"Listen,\" he said, leaning closer. \"I'm kinda glad I got you alone for a minute. I'm a bit of an old-fashioned guy here. And, seeing as how YOU are the man of this here house and her only son, I wanted to ask you if it would be all right with you if I asked Les...your Mom to marry me?\"\n\nI blinked at him in mild disbelief and then smiled. \"Are you kidding? It would be perfectly all right with me,\" I smiled, reaching out to shake his hand. He gripped me tightly and smiled, looking relieved.\n\n\"I missed my chance with her all those years ago,\" he continued. \"And I don't want to make the same mistake all over again.\"\n\n\"For me,\" I said with a smile, \"I'm for anything that makes Mom happy. She hasn't really been happy in a long time.\"\n\n\"I know,\" he said, nodding soberly, \"I can see it in her eyes. I just want the chance to make things better for her if I can.\"\n\n\"You certainly have my blessing,\" I continued, pausing to smile broadly. \"As long as I don't have to call you Daddy.\"\n\nHe laughed aloud and tossed his head, \"No worries in that department.\"\n\nSuddenly we both jumped as Mom shrieked from the kitchen. Before either of us could rise to respond, we heard the women laughing. I put my hand on Richie's arm as he was about to jump up. \"Hang on,\" I said. \"I think Mom just found out that Mable and I are engaged.\"\n\nRichie's eyes widened and he smiled broadly. \"No shit? Congratulations.\" He grasped my hand once more just as Mom and Mable stepped out onto the patio.\n\n\"Richie!\" exclaimed Mom, her arm about Mable's waist. \"They're engaged!\"\n\nI quickly stood as Mom rushed over to take me in her arms. \"I'm so happy for the two of you,\" she murmured, her lips near my ear. \"When are you planning to do it?\"\n\n\"Actually, we were kind of waiting for you, Mom,\" I said, pulling away to look into her eyes. \"We wanted to make sure you would be able to be there.\"\n\nMable stepped up and Mom and I included her into our communal embrace. \"You two damn well better not even think of doing it without me,\" said Mom as Mable and I shared a smile.\n\nAs we all stepped back and Mom wiped the moisture from her eyes, we turned to see Richie down on one knee behind Mom.\n\n\"Richie?\" Said Mom, her eyes widening in surprise.\n\n\"Leslie Anne Kirk?\" Said Richie, looking up with a very anxious expression. He lifted his hands holding an opened ring box with a diamond that looked at first glance to be the size of Cleveland. \"Will you do me the honor of becoming my wife?\"\n\nMom's hands covered her mouth and her eyes welled with tears. She knelt beside him and took him in her arms. \"Yes,\" she said, her voice muffled with her face buried in his neck.\n\nMable and I embraced as well, as Mable too wiped tears from her cheeks. I hurried into the kitchen to procure the forgotten bottle of wine and four glasses, returning just as Mom and Richie stood and kissed warmly. We all sat down and the wine was poured. \n\n\"My God,\" said Mom, sounding slightly breathless. \"Everything seems to be happening so fast.\"\n\nMable reached over and took Mom's hand. \"We've decided to do the Vegas thing in one of those chapels with Elvis,\" she said smiling broadly.\n\nMom returned her smile, \"Oh, God...That sounds perfect.\"\n\n\"Is that something you would like too?\" asked Richie.\n\nMom smiled and nodded, \"I think so,\" she said, \"I'm not much into church formality anymore.\"\n\nRichie smiled and stood, taking his cellphone from his back pocket. \"Give me a second,\" he said, turning away and putting the phone to his ear.\n\nMable looked from Mom to me, \"Would either of you be opposed to all of us getting married at the same time?'\n\nMom smiled broadly as she looked at me and I nodded, knowing the idea appealed to her very much.\n\n\"Hey,\" said Richie, stepping back to the table excitedly. The Little White Wedding Chapel on the Strip is open and available right now. What do you say, Leslie?\"\n\n\"Would you mind if they got married too...at the same time?\" She asked. Richie laughed and nodded, \"I can't think of anything more perfect,\" he said.\n\nAs Richie finalized things on the phone, we all decided that our current mode of casual dress was the way we should go and, moments later, we were all jumping into Richie's limo while he gave the driver directions. He stayed on the phone for several more minutes as the limo sped away, but then we were all sipping more wine and laughing happily as we made our way down to Las Vegas Boulevard.\n\nThe marriage ceremony was short and sweet and completely succinct. First, we stood before a Justice of the Peace to recite our wedding vows, one couple at a time. And then we entered the little chapel to meet the Elvis impersonator. He was actually remarkably good at his performance, only stumbling over his words once when he recognized Richie. He married both couples at the same time, Richie and I both promising to give our brides a Big, Big Hunk of Love every day, while the women promised never to step on our Blue Suede Shoes.\n\nA group photo was taken with the four of us and Elvis and it was over, the entire wedding ceremony over in less than thirty minutes. What can I say? It's Las Vegas.\n\nOnce back inside the limo, Richie hit us with his next surprise, telling us he was taking us all out to dinner at the top of the Aria.\n\nWe all smiled happily, and Mable kissed my cheek. She leaned in close, her lips touching my ear and whispered, \"I guess we'll have to wait a little longer to consummate our marriage,\" she said. \"But, as soon as I get you home, I am SO going to consummate your brains out.\"\n\nI smiled and nodded, feeling the pull of a growing erection at the thought. When next we made love, it would be as husband and wife.\n\nDinner was incredible, and Richie spared no expense, ordering expensive wine and tipping lavishly. As we made our way down to the lobby after dinner, he excused himself for several minutes. While the women excused themselves to visit the ladies' room to freshen up, I took a seat in one of the lobby's plush easy chairs, smiling to myself and watching the tourists walking by.\n\nOnce we had gathered together once more, Richie gave Mable a plastic room key card. \"I took the liberty of reserving two of their honeymoon suites on the penthouse floor. It's my wedding present to both of you.\"\n\nMable smiled and blushed, reaching out to give him a warm hug. \"Thank you, Richie,\" she said. \"This is so sweet.\"\n\nOur suites were not adjoining but were actually across the hall from one another. We all embraced warmly and retired to our respective rooms. Entering the suite quite literally took our breaths away. It was immense, with a seating area complete with sofas, easy chairs, a big-screen television, and a large bedroom alcove with a big round, canopied bed. A large bathing area complimented the rest of the room, with a jacuzzi, walk-in shower and every amenity imaginable.\n\nBy far, the most awe-inspiring aspect of the suite was the view of the Strip. One entire wall was glass from floor to ceiling with a stunning panoramic view of the neon-emblazoned Las Vegas Strip.",
        "\"Oh, my fucking god,\" gasped Mable. She switched off the interior lights to enhance the bright, glittering panorama before us and stepped up to the window. \"Oh, baby...this is the most incredible thing I've ever seen.\"\n\nI stepped up to her and slipped my arm around her waist. She turned to me with a rather lascivious smile and kissed me warmly as she pulled open the front of my pants.\n\n\"I want us to be naked,\" she said almost breathlessly as she pulled off her top to allow her incredible breasts to fall free. I hurriedly removed my pants, stepping out of them and pulling down my briefs as Mable hurriedly pulled my polo shirt up over my head.\n\nAs I removed my socks, Mable removed her jeans and pulled down her thong to stand nude in front of the window. She smiled, turning to face the window, reaching up to place her hands on the glass with her arms raised above her head.\n\nI moved behind her, wrapping my arms around her torso and pulling her tightly to me, my erection pressed snugly into the cleft between her buttock's cheeks. I kissed her neck and she moaned softly and moved her hips against my erection. I raised my hands to cup her breasts, squeezing firmly in the way I knew she especially liked.\n\n\"God, yes!\" She murmured, leaning into the window to press her forehead against the glass. \"I want you to fuck me, baby. Right here...just like this. In front of the entire city...in front of the world.\"\n\nI reached between us and grasped my erection, bending it down toward her vagina as she arched her back and raised her hips to give me better access. I found her almost dripping with her lubrication and pressed myself home, parting her slick lips with the tip of my cock and then thrusting myself deeply into her as I grasped her hips and pulled her to me.\n\nShe cried out as I penetrated her, leaning into the glass, her breasts ballooning against the window as I thrust into her again and again. \"Baby...I love you,\" she gasped. \"I...love...\" Her final word was obliterated by her sudden cry of pleasure as she began to cum.\n\nI wrapped my arms around her waist and thrust hard, feeling her vagina tightening spasmodically against my erection as her orgasm took her away. I cried her name as my first ejaculation erupted into her, \"I love you...I love you...\" I gasped as my semen filled her.\n\nThere was just something so magical to make love in front of the entire city, neither of us cared a whit if anyone could see us, it was as if we were the only two people in the world and our orgasms were intense.\n\nWe walked hand-in-hand to the bathing area, stepping into the large shower stall and caressing one another and kissing as the warm water cascaded over our bodies. We stepped from the shower and toweled ourselves dry, slipping into the incredibly plush bathrobes supplied.\n\nAs we stepped from the bathroom, we heard a knock on the door. I opened it to find a bellman with a cart carrying a large ice bucket and two bottles of champagne. \"Compliments of the house,\" he smiled, \"and congratulations on your wedding.\"\n\nI popped the cork on one of the champagne bottles and Mable and I toasted one another. \"Here's to us,\" she said, smiling demurely. \"Right now, I feel like the luckiest woman in the world.\"\n\nI raised my glass to her, \"I feel the same way, Mable. I feel so lucky to have someone like you in my life.\"\n\nI'll not go into a lot of explicit detail about the rest of our night. Suffice it to say, we made love several more times in a variety of settings and positions. In the morning, we showered and dressed, stepping from the bathroom to hear a soft knock at our door.\n\n\"Hey, you two,\" smiled Mom, as she and Richie stood in the hallway. \"We're going down to breakfast. Care to join us?'\n\nBreakfast was also complimentary from the management, and when it was concluded, Richie summoned his ubiquitous limousine to take Mable and me home.\n\nIn the days that followed, Mom prepared to pack up some of her things to follow Richie as he was about to begin a tour of Canada and Europe that would take him out of the country for almost six months.\n\nShe spent some time with her lawyer and drew up papers to deed the house and car to me. Her wedding present to us, she said with a broad smile. She no longer needed either, as Richie had homes in New Jersey, California and the south of France.\n\nIt was sad to see her go, we all hugged and kissed in the airport and then Mable and I watched teary-eyed as the plane taxied away.\n\n********************************************************************************\n\nIt was less than a year later when a big California IT company offered to buy Jamble. We had no desire to part with our company, but Mable thought it best to at least hear them out.\n\nTheir proposal was astonishing. We were offered a cash purchase price of sixty-six million dollars and a residual price of one million a year for five years to keep the name Jamble.\n\nJamble had expanded tremendously from the time Mom left the city. Our humble computer repair business now handled the IT tech support for five companies in and around Las Vegas, two companies in Reno and one in Laughlin, Nevada. We now employed over thirty full-time technicians and several part-time employees as well. The name Jamble became synonymous with honest computer repair and technical support.\n\nThe California tech company had long wanted to make inroads into southern Nevada but been stymied by Jumble's stranglehold on the IT tech support and computer repair in the Las Vegas metropolitan area as well as the smaller towns from Mesquite to Pahrump and as far south as Boulder City.\n\nStill, sixty-six million dollars seemed an astonishing price to pay for what we still felt was our humble little company. Mable hired a law firm to handle further negotiations and we finally settled on seventy million with a yearly 1.6 million in residuals to keep the name Jamble for ten years.\n\nAs our partner, we brought John into the discussions and together we all agreed to make the sale. How could we not? John and I would be able to retire comfortably at a very young age and live the rest of our lives without ever working again.\n\nAs part of the sale, we made sure our trusted managerial staff, Bonnie, Margot, and Amir, would be kept on at their current salaries. We signed on the dotted line and celebrated at the top of the Aria Hotel. Our lives had been irrevocably changed. After taxes, each of us would take away a little over twenty million dollars with five hundred thousand a year each for the next ten years.\n\n*******************************************************************************\n\n Epilogue\n\nOn the occasion of our twentieth wedding anniversary, Mable and I gave a party and invited our family and loved ones.\n\nWe left Las Vegas shortly after the sale of Jamble and, after looking far and wide for a comfortable place to retire, we settled on Northern Idaho in a beautiful big house and acreage on Coeur d' Alene lake. After the hustle and bustle of Las Vegas, we enjoyed the peace and quiet of small-town living and returning to a climate that had four distinct seasons once again.\n\nJohn followed suit and purchased a lovely home a few miles away, also bordering the lake, and we remained close friends, getting together for birthdays and holidays.\n\nThe first to arrive at our anniversary party, however, was our daughter Icilynn (Icy for short) and her husband, Michael. Unable to have children of our own, Mable and I looked into adoption. When we were presented with the opportunity to adopt Icilynn, we responded immediately.\n\nIcy was a precocious four-year-old when she came to us. The product of a Japanese mother from Okinawa and an African American soldier. The mother died shortly after giving birth and the father, who was completely unprepared for the role of a single parent, placed the child up for adoption.\n\nRaised from infancy in an Okinawan orphanage, she was brought to the United States by an American military foster family. When their marriage dissolved, Icy was again placed with the state. At the time she was presented to us as a possibility for adoption, she had been loosely diagnosed with a mild learning disability, where she did not progress as rapidly as others her age.\n\nNone of that mattered in the slightest to Mable and me, who fell in love with her from the moment we first saw her. Her long black hair and her creamy latte skin tone contrasted beautifully with her gorgeous green eyes.\n\nWe placed her in a school that catered to developmentally challenged individuals where it immediately became apparent to us that she had no learning disability at all. She was, in fact, so far advanced intellectually that normal school curriculum was relatively boring to her and, as such, she tended to pay little attention and was completely misdiagnosed.\n\nOnce we had her correctly placed in an advanced learning atmosphere, she excelled dramatically. She showed an exceptional aptitude for music and art, taking to the piano like a duck to water and excelling in watercolor painting.\n\nScholastically, she was so advanced that she graduated high school at the age of 15 and was enrolled in the University of Las Vegas the following year, earning a bachelor's degree in Law and Ethics in three years.\n\nShe grew into a stunningly beautiful young woman and could have been a super-model if that had been her choice, but she opted for academics instead. \n\nAfter our move north, she enrolled in Gonzaga University in nearby Washington state where she was sitting for her master's thesis in constitutional law. It was there she met Michael, an undergrad student and assistant professor, who was several years older.\n\nThey fell in love and very soon afterward, Icy became pregnant and they married. On the occasion of our twentieth anniversary, she was glowingly eight months pregnant, cradling her belly lovingly as she and Michael arrived.\n\nJohn arrived shortly after Icy, along with his wife and his twin sixteen-year-old daughters. His girls, Paige and Ariel, were exceptionally beautiful young girls. Both had their mother's dark red hair and pale complexion. You are correct, dear reader, their mother was none other than Eleanor. As with Icy and Mike, when Eleanor became pregnant, she and John married.\n\nEleanor had been his secret lover for several years. He had kept his relationship with her to himself because he didn't wish to perpetuate any friction or ill will between Eleanor and the rest of us.\n\nHe confided to me shortly after their marriage how Eleanor's over-the-top sexuality was, in reality, a cry for help. All she had ever wanted was to be loved and used sex as a medium to get the attention she craved more than anything else. Once John had presented her with real, unconditional love and not just physical lust, she blossomed into a remarkably conservative woman and mother. Needless to say, they took great pains to expunge any and all records of her previous sexual dalliances, as it wasn't something their daughters ever needed to know about her.\n\nEleanor had gained a fair amount of weight over the years. After her pregnancy, she never quite lost her weight and even gained several more pounds. She was presently what most men would call pleasingly plump with a plush figure that was extremely pleasing to John.\n\nMom and Richie were the last to arrive, both of them now in their sixties and showing their age with a lot more gray in their hair and age in their eyes, and still very much in love.\n\nMable had preserved her weight and figure over the years and, while she always maintained she needed to lose at least five pounds, I still loved every inch of her incredible body. Much to my disappointment, her breasts had ceased producing milk many years ago, but I never tired of taking her nipples into my mouth at every opportunity, and especially when making love to enhance the sensuality and pleasure for both of us.\n\nAt sixty years of age, her hair had gone completely gray. She colored it several times over the years in an attempt to hold back the look of aging, but at my encouragement, she allowed it to grow out naturally. I loved the maturity her gray hair gave her. \n\nAfter all these years, we still made love almost every day. That very morning, the morning of our anniversary, she woke me with her mouth on my cock and gave me the most beautiful orgasm, swallowing my semen with a smile before mounting me and taking her own pleasure as I thrust lustfully into her.\n\nSitting on our back patio, the warm Idaho sun blessing our reunion, I smiled as I looked around. We had all come through the years successfully in business and marriage, wealthy enough to live the rest of our lives in complete comfort with nary a want, and with the love in our hearts for our spouses and extended family that seemed never-ending.\n\nIt hit me then, as I looked around at all our smiling faces and listened to the laughter, how everything we had, all our good fortune, could be traced back to only one thing. I couldn't help but smile broadly to think about how everything good in our lives had come about specifically because of MABLE'S BREASTS.\n\n End\n\n Author's note\n\nIt is a tremendously humbling experience for me to submit my story to Literotica and have the members read and submit comments about my work. If you have finished the entire series about Mable's Breasts, you have my heartfelt thanks. The kind words of encouragement and praise I have received over the past few months from all of you mean more to me than I can possibly express and I thank you all from the bottom of my heart."
    ],
    "authorname": "Jaymie_dee",
    "tags": [
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/mables-breasts-pt-11"
}