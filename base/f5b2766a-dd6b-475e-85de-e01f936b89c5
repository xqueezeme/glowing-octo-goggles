{
    "title": "Mary's Innocent Passion",
    "pages": [
        "In the darkest, coldest part of the night, four hours before dawn, Mary Durham escaped from the only home she had ever known. \n\nFor five hours she had lain awake in bed beside her husband, counting the seconds off on her fingers until they were sore and cramping. Slipping noiselessly from beneath the blankets, she crept through the pitch-black room. Unwilling to risk even the slightest light, for fear of waking her captors, she made her way around the silent house from memory. Over the years, she had completely memorized the layout of the building. Now the knowledge served her well, as she had to merely count her steps to know exactly where she was. \n\nShe dressed in the dark, pulling one of her baggy, shapeless dresses over her head and the swelling curve of her pregnant belly, still five months away from term. Next, a trip to the spare room, where the luggage she had carried in her own hands when she moved into Brother Ezekiel's house was kept. Padding on silent feet, she took a suitcase and a large duffel bag back to her room, where she filled them with dresses, socks, and underwear. She made no attempt to sort or fold. There would be time enough for that once she and Rebecca were out of the ungentle reach of the Church of the Holy Death and Fiery Resurrection. \n\nWhen her suitcase was filled, she locked it, whimpering behind her teeth at the small click that resounded through the house, seemingly as loud as a shotgun. In the bed, her husband snorted, his huge belly and gray beard making him seem like an evil, malevolent Santa Claus. When, after an agonizing moment, no sound of discovery came, she ghosted down the hall to the dormitory where the younger children slept. In the dim glow of the nightlight, left on to aid the mother on duty, she filled the duffel with her baby's clothes and dressed Rebecca slowly, taking care not to wake her. In her mind she blessed her ability to sleep through anything less than a howling tornado. \n\nOne step left. Do I dare? Oh, Lord, please help me. \n\nIn the darkness, her jaw firmed. Trembling, she crept silently through the house to Brother Ezekiel's study. She opened the desk drawer where the monthly tithes were kept. Her fingers recognized the thick envelopes and the not-quite-paperlike feel of cash. Triumphantly, she slipped the envelopes into her pocket. \n\nToo late to stop now, she thought deliriously. She felt an insane urge to laugh aloud. If they had caught me before, all I would have risked was a beating. Maybe a whipping. But stealing God's money? For that, they will stone me. And Becca will never see her mother again. \n\nFighting the desire to run, lest haste prove her downfall, she went back into the dormitory. Rebecca still slept. Slinging the duffel across her back, she picked up a suitcase with one hand and her child with the other. Stopping only to grab her heavy denim jacket, worn on cold days in the Utah mountains, and a set of car keys, she slipped out the front door. \n\nIn five minutes she had left the compound and her old life behind, heading east, Rebecca asleep on the passenger seat beside her. \n\n***** \n\nTwo years later \n\n\"Mr. Hayes?\" \n\nThe balding, overweight man at the desk looked up and smiled. \"Come on in, Mary.\" \n\nShe did, although the presence of two people filled the tiny, cramped office to bursting. \"I'm leaving for the day. I was hoping...I was hoping you might have some extra shifts for me later on this week. Or over the weekend?\" she asked hopefully. \n\nDennis Hayes, owner of the somewhat inappropriately named 'Maggie's Diner,' shook his head. \"I'm sorry, kid. Not right now. But if someone calls in sick, you'll be the first one I reach out to. I know things are tough for you right now. How are the girls? You haven't brought them by lately.\" \n\nThe young woman smiled, transforming her tired face into something approaching the angelic. \"They're fine. Becca's pouting cause I won't let her eat all her Halloween candy at once. Deborah was too young to really understand what was going on, but she liked dressing up.\" \n\n\"What did they go as?\" \n\nShe pulled her phone out of the pocket of her waitress' uniform. \"Debbie was a ladybug. And Becca was a bumblebee.\" She fumbled with the controls, then showed him the pictures of her two smiling children, dressed in their outfits and holding hollow plastic pumpkins, ready for candy. \n\n\"Cute,\" Dennis said. \"Where did you get the costumes? They're really well done.\" \n\n\"I made them myself.\" \n\n\"You did? Wow.\" He looked closer at the tiny screen. \"That's some really good work, Mary. I wish the garbage I bought my kids when they were younger was half as good.\" \n\nShe looked down at her hands. \"My mother taught me to sew when I was a little girl. It's not that hard.\" She swallowed and looked up. \"I've got to go and pick the girls up. You will let me know if there are any open shifts, right? I have rent due at the end of the month, and the girls' sitter, too.\" \n\nHe nodded. \"I will. Go on, now. And bring the girls by some night for dinner. I'll pay. No reason why you shouldn't have someone wait on you for a change, rather than the other way around.\" \n\n\"I will,\" she promised, and left the office, thinking how lucky she was to have found this job so soon after quitting her first. The manager at that restaurant had reminded her far too much of her former husband, with his leering mouth and pawing hands. She had walked out three days after she had started, and never regretted the decision. \n\nBut Dennis was cut from a different bolt of cloth. He and his wife had started the diner thirty years ago, and it was a Des Moines institution. Mary had caught hints from the other waitresses that after his wife died a lot of the heart had gone out of him. He was content now to simply mind the store and let the cooks and waitresses run things. As long as they pulled a profit every month he didn't care. And with the diner close to both the Iowa state capitol and to some of the ongoing construction work downtown, they did a steady if unspectacular business. He could usually be found in the office in the back, a benign, fatherly presence. \n\nShrugging into her heavy denim jacket, she walked out into the dim November evening, shivering as the chill north wind struck her face. The weather had shifted for good, it seemed. It would be cold and miserable all the way through April. \n\nShe drove to the sitter's house, mentally counting the tips she had made during the day. The other waitresses had told her that the money was better during the evening shift. But her schedule revolved around the girls, and it had proven impossible to find someone who would watch them in the evenings. \n\nIn fact, she considered Diana Polk a gift from God. A widow whose husband had passed away several months earlier from complications from diabetes, she supplemented her social security check by babysitting young children. Since she had raised five kids of her own, Mary had no worries when she left the girls at her house early each weekday morning and went to work at Maggie's. And the cost of paying her was a lot less than it would be in a traditional daycare. \n\nShe pulled into the gravel driveway and got out of the car. As she did, a cold rain began to fall and she hurried up the front steps, where Diana opened the front door for her. \n\n\"Looks like it's getting nasty out there,\" she observed. She shut the door firmly behind them, cutting off the wind. Inside, the house was warm and comfortable. \n\nMary nodded, her eyes seeking out her children. Rebecca already had her jacket on, and was trying to help Deborah into hers. The activity was complicated by Debbie's squirming, as she seemed to want to put on her jacket herself. Mary smiled at the pair. From the time of Debbie's birth, Becca had appointed herself as a sort of junior mother to her little sister, helping her whenever she could. For her part, Debbie exhibited a strong-willed independence which made any effort to coddle her useless. The struggle between the two could provide hours of entertainment. \n\nBut she didn't have time to indulge herself now. She knelt down on the wood floor. \"Deborah,\" she said. \"Come over here, sweetheart.\" \n\nAt her voice, the young girl, nearly eighteen months old, came toddling over on sturdy young legs, her jacket clutched in her hands. \"I do it,\" she said, her face set in a stubborn frown. \n\n\"All right,\" she smiled down at her. As Debbie struggled into the jacket, she helped only a little, then zipped it up as she spun around, displaying her work proudly. \"Good job,\" she praised her, giving her a kiss on the cheek. \n\n\"Are you ready?\" she asked Rebecca. Her oldest child lifted the carry-all, almost as big as she was, which held all the stuff that had to be hauled to Diana's house on a daily basis. She turned to the older woman, who had been watching the show with a look of amusement on her face. \n\n\"I have the money for last week,\" she said, handing over an envelope. \n\n\"Thank you, honey,\" Diana replied. \n\n\"I hope to pay this week on time,\" she continued, hating the apologetic tone in her voice. \"But I've got to go grocery shopping tonight, and rent is due at the end of the month. I'm already a month behind. And with winter coming, I'll have heating bills, and-\" \n\n\"Shh,\" Diana said, her wrinkled, careworn face lightening in a small smile. \"I know you'll pay. You always have. You take care of yourself and your girls. That's the most important thing. I'm not going to starve to death if you're a few days late.\" \n\n\"Thank you,\" Mary said. Her throat threatened to close with emotion. It was strange that she had found more decent people, and more love and friendship, in Iowa, a thousand miles and more away from where she had been born, than she ever had from her birth family. \n\n\"We've got to go,\" she continued. She turned to the girls. \"Who's ready to go grocery shopping?\" she asked cheerfully. \n\n\"Me!\" Becca replied excitedly. \n\n\"All right then. Let's go!\" \n\n***** \n\nThe car was slow to start, grinding through several turns of the starter before the engine finally caught. She frowned at the dashboard as they made their way through the early-evening traffic to the grocery store. Behind her, in the back seat, Becca talked to Debbie, who was riding in the passenger seat. Or, rather, Becca talked while Debbie listened. The sound made Mary smile. Ever since her older daughter had been born, she had flown through life with an energy which sometimes made her feel old and exhausted. \n\nSafely parked at the grocery store, she released the girls from the car-seats, sighing as she did so. Sometimes it seemed as if half her life was spent getting the girls out of car seats, or jackets, or coats, or their clothes when they needed to go to bed or get up in the morning. \n\nAnd the other half was spent getting them into the same things. \n\nWith Debbie safely secured in her shopping cart, and Becca pushing a child-sized cart beside her, they made their way through the store. Over the past two years, Mary had come up with a system, and she stuck to it rigorously. Heavy on the fresh fruit and vegetables, light on the more expensive, processed foods. She dropped a half-dozen cans of store-brand beans into her basket, and generic soup into Rebecca's, smiling wryly as some of the other shoppers stood in front of the display cases, obviously trying to decide what to buy. \n\nAt the meat counter, she struggled with herself for a long moment, then splurged on a package of stew meat. It's worth it, she tried to convince herself. I can make stew sometime this weekend. It'll be a way to pass the time, and I can start teaching Becca how to cook. And I can take the leftovers to work and microwave them for my lunch break. It's nice getting cheap meals there, but I'm getting tired of fried food. \n\nHer eye was caught as an elegant young woman, only a few years older than herself, walked by. Dressed in form-fitting jeans which clung to her hips and a silk blouse which outlined her breasts in such a way to leave little to the imagination, her cart was piled high with food. \n\nMary's lips thinned. I bet she never has to worry about whether the check to keep the power on will bounce, she thought. Or about whether the generic cereal you just bought for the kids will last until the next paycheck. Or scheduling her shopping trips around whether it's double-coupon day. Look at her! Flaunting her beauty shamelessly like a common whore. \n\nStop it. When you left the compound this is the life you chose. Would you rather be back there? \n\nShe shuddered. No. I am never going back to that life. And neither are my children. She tore her eyes away from the alluring young woman. It's not her fault she has money and I don't. Someday that will be me. And I will be able to buy Rebecca and Deborah everything they need. \n\n***** \n\nThankfully the lines were short on a Tuesday night. She placed the bagged groceries into the cart and headed back out into the cold, rainy evening. After strapping the girls back into the car seats, she packed the bags away in the trunk, then tiredly got back into the car. \n\n\"Time for home,\" she said, with forced cheerfulness, reaching for the keys. \"What do you want for supper tonight, Rebecca?\" \n\n\"Grilled cheese!\" said her daughter, who was not a picky eater, thank God. \n\n\"That sounds good,\" she replied. Grilled cheese and soup. Nice and simple. And I'll be able to get some studying done before bed. She slotted the key into the ignition and turned. \n\nNothing happened. The engine didn't turn over. She stared at the ignition switch in shock, then pulled out the key, as if to make sure she was using the right one. She tried again, with the same lack of a result. \n\n\"Oh, no,\" she whispered. She got back out of the car, for the first time noticing how the interior light didn't come on. With an effort she manged to raise the hood, then looked down blankly at the dark mass of the engine block. Even if she knew anything about car engines, which she didn't, how would she be able to fix it in the dark with the wind blowing rain in her face, and her hands growing numb with cold? \n\nSuddenly it all was too much for her. The stress of raising the girls on her own. The constant, gnawing worry about money. The schoolwork, the job, the not-so-subtle hints by her landlord that he would reduce her rent in exchange for certain \"favors.\" God, how would she pay to get the car fixed? Would her one credit card, unused except for true emergencies, be able to cover the costs? Or would she have to dip into her meager savings? \n\nWhat am I going to do? \n\nHeedless of the driving rain, Mary leaned back against the side of the car, put her head in her hands, and cried like a child. \n\n***** \n\nEveline Kershaw nodded absently as the clerk handed her change back to her, then wheeled her cart out through the automatic doors and into the parking lot. A wind-blown spray of icy rain hit her face, and she pulled on her hat and gloves. She shivered as another blast of wind knifed through the thin cloth of her blouse, and she zipped up her black leather jacket, wishing she had had enough sense to wear something more appropriate for the weather and the season. \n\nHad to be a slave to fashion, didn't you, Evey? She smiled wryly at her own thoughts. Inside her lace bra, her nipples tightened with the cold. No fun tonight for you, girls. Heather's moved out. And good riddance, too. She frowned at the memory of her former girlfriend. \n\nHer steps slowed as she neared her car. A few spaces away, a woman was leaning against the side of an old Buick sedan, the sort of car which had gone out of fashion around the same time as Betamax and disco. The rain had turned her heavy denim jacket a dark blue in the overhead lights. Her hands were covering her face, as if she were weeping. \n\nFrowning, she slowly loaded her bags into her trunk, pausing every few seconds to watch her. When she was finished, she had made no move away from where she was standing. \n\nLongingly, she thought of her warm condo, only a short drive away. Oh, to hell with it. \n\nShe closed her trunk and walked over to the woman. \"Excuse me?\" she asked over the blowing wind. \"Are you all right?\" \n\nThe woman made no sign she had heard her. \"Excuse me?\" she repeated, somewhat louder, and touched her shoulder. \n\nThe response was immediate. The woman shied away violently, stumbling to a halt several steps away. The delicate, heart-shaped face she turned to Evey, framed in a mass of tumbling blond curls which escaped from beneath the brim of a shapeless stocking cap, was taut with fear. Her hands were clenched at her sides in a gesture of hopeless defiance. \n\nOh. \n\nShe held up her hands, palms open, showing she wasn't a threat. \"I'm sorry I scared you,\" she apologized. She nodded at her car. \"I saw you from over there, and I was wondering if you needed some help.\" \n\n\"I don't...\" she began, then cut herself off. \"My car won't start. And I don't know how to fix it.\" \n\n\"Have you called a tow truck? Or a cab?\" Evey asked, then immediately felt like an idiot. This woman's posture of helpless despair told the story in a way which made words unnecessary. \n\nThe woman shook her head. \"I just found out something was wrong,\" she said. \n\n\"Well, let's see what we can do, then,\" she replied. She extended a hand. \"I'm Eveline Kershaw.\" \n\nThe woman took it hesitantly. \"Mary Durham.\" \n\n\"All right. The first thing we need is some light.\" She took out her key fob and popped her trunk. \"I'll be right back.\" \n\nWalking quickly, she went to her car and pulled the box with her emergency supplies into view from the back of the trunk. She snapped on the flashlight, nodding in satisfaction as the bright light illuminated the interior. Dad, you're a horse's ass in a lot of ways, but I'm glad you taught me how to prepare. And a little bit about cars. \n\nShe walked back over to Mary's car and shone her flashlight under the hood. She winced as she took in the cracked hoses, the grime-covered carburetor, and the poorly-maintained engine. The battery, particularly, looked to be in very bad shape. She shook her head as she looked at the leads and wiring. There were clear signs of corrosion around the terminals. \n\nA few questions to Mary told her the symptoms, and she had a pretty good idea what the problem was. \"I think you have a bad connection to your battery. So no juice is getting to your starter. Which is why the engine won't turn over. \n\n\"I want you to get in, but leave the door open. I'm going to jiggle the connectors around. If I'm right, your interior lights should come on when we get a good connection. \n\n\"When that happens, I want you to start the car right away. That way you can at least get home. Then you can replace the battery. Also the wiring to the alternator.\" She frowned, looking at the balding tires, the flakes of rust around the wheelwells, and the dents in the grille which made it look like the car had hit a deer at some point. She shouldn't be fixing this car. She should be replacing it. \n\nAnd what makes you think she can, Evey? You've seen this sort of thing before. I bet the woman is hanging on by her fingernails right now. \n\nUnaware of her inner monologue, Mary nodded and got into the car, leaving the driver-side door cracked open. \n\nGod damn it. These gloves cost eighty bucks. She grabbed the filthy, grime-encrusted leads and began to wiggle them back and forth. Flakes of corrosion broke away under her touch. \n\nSuddenly, from the corner of her eye, she could see a flare of light. At the same time, the fanbelt began to turn, and she leaped away as the engine roared to life. Stumbling over her feet, she landed on her backside in a water-filled pothole. But the sound of the rumbling engine was worth the cold, clammy feeling as water seeped through her jeans. \n\nSmiling triumphantly, she got to her feet and slammed the hood closed. Wiping her dirty gloves against her thighs, she made her way around to the driver's side door. There she was met by Mary. ",
        "\"Thank you!\" she said, smiling from ear to ear. \"I'm so grateful,\" she continued, then her face fell as she took in Evey's bedraggled condition. \"Oh, my. Did you fall? I'm so sorry.\" \n\n\"Don't worry about it,\" Evey reassured her. For the first time, she had a chance to take in her features, and her heart skipped a beat. She's younger than I thought. A senior in high school, maybe? Or just out of high school. But damn, she's fine. \n\n\"I should probably follow you home,\" she said, shaking off her momentary distraction. \"Just in case...\" her voice trailed off as she noticed that there were two other people in the interior of the car. \n\nShe bent down, smiling. \"How are you doing, girls?\" she asked cheerfully, one hand gripping the edge of the doorframe. \n\nThe younger girl stared at her silently from the passenger seat, one thumb stuck as securely in her mouth as a cork in a bottle. The older, in the back seat, looked at her in frank curiosity. \"Hello,\" she said cheerfully. \"I'm Rebecca. What's your name?\" \n\n\"I'm Eveline,\" she smiled back. \"But my friends call me Evey.\" \n\n\"Eee-vee,\" she pronounced carefully. \"That's a nice name. That's my sister,\" she continued, pointing to the front seat. \"Her name's Deborah. But we call her Debbie, mostly. She doesn't talk much yet,\" she finished, with the air of someone divulging important information. \n\nShe nodded gravely. \"I can tell.\" She winked. \"It's hard to talk when you've got your thumb in your mouth, isn't it Debbie?\" she finished, smiling at the solemn little face in the passenger seat. \n\nShe backed away, shivering as a blast of rain hit her face. The cold sting told her that sleet was mixing in, just like the weatherman on KRNL had forecast. \"We better get going. I don't know how much longer that connection is going to last. The wiring in this thing is pretty much shot. Drive slow so I can keep up with you.\" \n\n\"You don't need to-\" Mary began, but Evey interrupted her. \n\n\"No, I don't. But I'm going to anyway. What's going to happen if that wiring fails again? You're going to be stuck on the side of the road in the middle of a sleetstorm with no way to keep those girls warm. \n\n\"Stop arguing,\" she concluded, \"and get on the move.\" \n\n\"Yes, ma'am,\" Mary said. If Evey didn't know better, she would have thought the young woman was mocking her. But her face was completely serious. Too serious. The poor girl looks like she hasn't had an easy day in years. If ever. She climbed into the car and closed the door. After a moment, Evey followed suit in her own car. \n\n***** \n\nAs she drove towards her apartment house, Mary threw up hosannas of praise to a God she had sworn a thousand times over never to pray to again. She could not believe her good fortune. The woman had appeared out of nowhere, like an angel! And the way she had fixed the car was little short of miraculous! She flushed in shame as she remembered how she had mentally criticized her clothing in the store earlier, without even knowing her. How many people would have stopped to help a complete stranger? \n\nShe pulled into the parking lot of the apartment house, sighing in relief as she turned off the engine. Hopefully it would start again in the morning. Despite Evey's warning, she really had no choice put to trust to luck. If she could nurse the old rattletrap Regal through one more winter, she would be all right. Next fall Becca would be eligible for the pre-K program in her school district. That meant less money going to pay Diana for baby sitting. Which meant more money for \"luxuries\" like car maintenance. \n\nShe snorted as her mind ran through the mental rut for the thousandth time, then climbed out of the car. She walked over to where Evey had parked beside her. She rolled down the window so they could talk. \n\n\"Safe and sound,\" she said, then noticed the way the older woman was shivering. Really, though, she's not that much older. Twenty-four, maybe twenty-five. No more than that. \"You're soaked clear through, aren't you?\" she said, her voice taking on the no-nonsense tones she used when the girls were acting up. \n\n\"I'm fine,\" Evey said. But Mary didn't miss the way her teeth were chattering, even though the heater in her luxury sedan was turned on full blast. \n\n\"Don't be silly,\" she countered. \"After all you've done for me, the least I can do is offer you a chance to dry out. Come on upstairs with me and the girls and you can take a shower and put your clothes in the dryer. Or you can borrow some of mine.\" She looked her over with the shrewd eye of someone who had sewn far too many sets of clothes. \"I think we're close to the same size.\" \n\nFor a moment, she thought Evey was going to refuse. But she gave a grateful nod and got out of her car. Despite her shivers, she insisted on helping carry her groceries up to her third-floor apartment, an offer Mary accepted gratefully, as it saved her another trip outside in the rain. \n\n\"We're home!\" Becca shouted cheerfully as Mary turned on the lights. She took off her jacket, then helped Debbie do the same thing, hanging them up neatly on the battered coatrack by the door. Free of the jacket, Debbie toddled over to her, her small round face creased in a frown. \n\n\"I'm hungwy, Mommy,\" she said. \n\n\"I'll have something ready for you in a few minutes, sweetheart,\" she said absently. Then she realized that Evey was looking at her with something like horror in her eyes. \n\n***** \n\n'Mommy?' This child? Evey's mind reeled. She had thought the two girls were Mary's nieces. Or perhaps she was a babysitter. She looked at the two children and her mind did some rapid mental math. She couldn't have been more than fifteen when her first child was conceived. If that. Maybe less. \n\nMary looked at her, her chin raised, daring her to say something. \"They're both mine,\" she said with painful dignity. \"and no one is going to take them away from me.\" \n\n\"I wasn't judging,\" she replied quietly. \"I do social work myself. I've seen worse, believe me. I've seen thirteen-year-old boys strung out on heroin. I've seen women who shouldn't even be allowed to be near children having baby after baby. I've seen...too much,\" she finished lamely, unwilling to catalog all of the horrors she had seen over the last three years. \n\n\"You talk funny,\" Rebecca observed, from a spot down around her knees. \n\n\"Rebecca!\" Mary said, her voice horrified. She looked at Evey in apology. Instead, she knelt down to kiss the child's cheek. \n\n\"Ah do, don't ah, punkin?\" she said, emphasizing her Georgia drawl. \"Why, bless yo heart, but you're just as sweet as pah.\" \n\nThe little girl giggled, then spun away to sit on the couch. \"You mentioned a shower?\" Eveline asked, feeling her frigid, waterlogged jeans sticking uncomfortably to her thighs. \n\n\"Of course,\" Mary said, blushing. She led her down a short hall to a bathroom. \"Just toss your clothes outside the door. I'll put them in the dryer. It's one of the few extras this place has.\" \n\nShe skinned out of her wet clothes quickly, tossed them blindly out the bathroom door, then stepped under the blessedly hot spray of the shower, letting the heat soak into her bones. Unwilling to get her long black hair wet when she had a long drive home in terrible weather, she lathered with a bar of soap over and over, until the last remnants of chill had been driven away. \n\nShe stepped out, drying herself with a threadbare but clean towel. She was just hanging it up and beginning to wonder what she was gong to wear while her clothes finished drying when there was a polite tap at the door. Mary came in, with a small pile of clothes held in her arms. \n\n\"I thought these might fit,\" she started, then broke off, staring at her naked body. Her pale face, her skin like cream under Evey's gaze, flushed scarlet. \n\nEveline kept her face carefully neutral. Oh. So it's like that, is it? But inside, her heart leaped, even as her belly spasmed in frustrated longing. Two children, and a lesbian? She must have one hell of a story to tell. And I doubt it's a happy one. \n\n\"Thanks,\" she said calmly, taking the clothes. She did not, by word or deed, let her own budding attraction to Mary show. But her eyes hungrily devoured the wonderfully curved figure she could see underneath the drab waitress' uniform. \n\n\"I've...I've got your clothes in the dryer,\" Mary stuttered, still unable to peel her eyes away from her chest. \"Come on out when your ready.\" \n\n***** \n\nMary ladled soup into a bowl, and set it in front of Rebecca, to go along with the requested grilledcheese sandwich. In the high chair beside her, Deborah was contentedly munching on carefully cut-up squares of buttered bread and chopped apple slices. \n\nEvey stepped into the room, dressed in one of the pairs of baggy flannel pants she had bought at the thrift store, with a loose sweater on top. White socks completed the ensemble. She looked, Mary thought, absolutely lovely, with her dark hair spilling down her back like a wave. Even the faded sweater couldn't hide the high, proud glory of her breasts. And her face was clear and unlined, a template of female beauty. \n\nShe sat down at the table, but waved away Mary's offer of a meal. \"I'm fine. I just need to get my clothes dried out and get out of your hair.\" She sounded apologetic. \n\n\"It's no trouble,\" Mary replied. She leaned back against the kitchen counter, nibbling on a grilledcheese sandwich of her own. The crunchy crust contrasted wonderfully with the melted cheese inside. \"So you say you do social work?\" \n\nEvey nodded. \"Ever since I graduated from Wake Forest,\" she said. \n\n\"Where's that?\" \n\n\"North Carolina.\" \n\nMary frowned. \"So what are you doing in Iowa?\" she asked. Then she blushed, hearing how rude the question sounded. \n\nIn the silence, the buzzer for the dryer was jarringly loud. Evey got up and pulled her clothes out. \"Ah. Nice and dry,\" she said. Ducking back into the bathroom, she got dressed, delighting in the feel as the toasty-warm clothes slid over her skin. \n\nWhen she emerged, Mary was waiting for her. \"Wait,\" she said, laying a hand on her arm. \"I haven't thanked you properly.\" She pulled a small wad of bills out of her pocket. \n\nEvey recoiled. \"Good grief, I don't want your money. And there's no need to pay me. Anyone would have done the same thing!\" \n\nAt the table, Rebecca looked up in reaction to her words. Mary frowned. \"Anyone could have. You did. No one else.\" Reluctantly, she put her money away. \"At least come over to dinner on Friday night. I'd like...\" her voice quavered, then firmed. \"I'd like to repay you. Somehow. And if you won't take money...\" \n\nEveline ran through her social schedule, which, ironically, didn't last long. Her recent move to Iowa had left her little in the way of local friends, and her one serious romantic relationship had soured in a matter of weeks. She smiled at the teenage girl. \"Sure. What time do you want me?\" she asked then bit her lip at the unintended double entendre. \n\n\"Maybe...seven o'clock?\" \n\nShe nodded. \"That sounds good. Give me your phone number and let me know what you plan to make, so I can bring something to go along. And also to let me know if you have to cancel.\" \n\nAfter putting Mary's number into her phone, she smiled at the girls, who were finishing their dinner. \"I'll see you again soon, okay?\" With a nod at Mary, she slipped out the door and down the staircase, smiling as she emerged into the cold night rain, which didn't feel nearly as bad as it should. \n\n***** \n\nThe next three days went by in a blur for Mary. She finished and mailed off two more tests for the correspondence courses she was taking for her high school equivalency certification. And on Thursday, she was able to pick up a extra half-shift in the evening when one of the regular evening waitresses had to stay home to take care of teenager who had broken his arm skateboarding. The extra money she had to pay Diana to watch the girls was more than offset by the extra hourly wages and the tips she picked up. One table, containing what appeared to be a young man, his girlfriend, and her mother, left her a ten-dollar tip on a thirty-dollar tab. She closed her eyes in gratitude, wondering if they knew how much the money meant to her. \n\nWith a little extra cash in her pocket for a change, she scrapped the plan she had made for Friday's dinner with Evey, and bought an entire chicken, already cut up and ready to fry. She justified the expense to herself with the thought that she could pack the leftovers for the girls when they went over to Diana's the following week, and save the older woman the trouble of making lunch for them. \n\nIt was just before seven o'clock, and the chicken was simmering on the stove, when the muchanticipated knock came at the door. She answered it to see Evey waiting with a smile on her face. She held a bottle in one hand and a covered dish in the other. \n\n\"I come bearing gifts,\" the older woman said, stepping in to the apartment. She sniffed the air appreciatively. \"That smells wonderful.\" \n\n\"Thank you,\" she replied. She relieved Evey of the dish and peeked under the lid. \n\n\"It's nothing fancy,\" Evey said apologetically. \"Just asparagus with onions and herbs. I'm not much of a cook. But I brought some wine, too.\" \n\nWine? Mary looked around the kitchen helplessly. She didn't have a corkscrew. Or proper glasses. Her hands began to shake. What had she been thinking, to invite this beautiful, glamorous woman to dinner? She would see how stupid she was, how she couldn't even prepare a simple meal without screwing it up... \n\nJust as her thoughts began to threaten to run away with her, she heard a popping sound. Evey waved the cork at her, stuck on the end of a corkscrew she had obviously brought along. Moving through the tiny, cramped kitchen as if she had been born there, she was soon pouring generous splashes of wine into a pair of mismatched glass tumblers. \n\nShe handed one to Mary, who took it reluctantly. \"Are you sure this is a good idea?\" she asked. \"I'm only nineteen. I wouldn't even be able to get served at a bar.\" \n\nEvey returned a conspiratorial smile. \"You're not planning on driving anywhere, are you? Then I promise not to tell,\" she finished, as Mary took a tentative sip. \"Sometimes we girls have to let our hair down and relax. And trust me. Looking the way you do, you could get served at any bar in town.\" \n\nThey drank the wine slowly as dinner finished cooking. The girls wandered into the kitchen from time to time to check on them. But in short order they sat down to a substantial dinner of fried chicken, roasted red potatoes, asparagus, and buttermilk biscuits. Mary put Deborah beside her in her high chair, and cut up child-sized portions for her. Becca, on the other hand, peppered Evey with questions throughout the meal, and Mary was happy to see that the beautiful woman had a large supply of patience. \n\nWhen she pushed her chair back at last, her stomach felt more full than it had in months. \"Time to clean up,\" she announced, and began to carry plates from the table back into the kitchen. \n\n\"How can I help?\" Evey asked. \n\n\"Thank you, honey,\" she said to Rebecca, who had handed her her plate. She began running water into the sink. \"I have to wash dishes,\" she said. \"If I don't they pile up in a hurry. Would you like to wash or dry?\" \n\n\"Neither?\" Evey said hopefully, laughing at her horrified expression. She got up with a groan. \"You're a cruel woman, Mary Durham,\" she said. \"Plying me with food and now you make me work. And on a Friday night, no less. I guess I'll dry.\" She winked at Becca, who had been watching the conversation with wide-eyed interest. \"Does your mommy make you clean up, too?\" \n\nRebecca nodded, her wavy blonde hair bouncing. \"I have to clean me an' Debbie's room every Friday when we get home. Debbie tries to help, but she's not very good at it yet.\" \n\n\"Well, soonest begun, soonest done,\" Evey said resignedly. She helped carry plates and platters into the kitchen, where Mary thriftily stowed the leftovers away in her mismatched plasticware. After, the girls sat on the couch, looking at picture books, while the two older women did the dishes. \n\n\"You're good with the girls,\" Mary observed quietly, passing a clean plate to Evey. \n\nThe older woman shrugged. \"I have to deal with kids a lot at work. I've found if you don't talk down to them, you'll do all right.\" \n\n\"So how did a woman from Georgia end up being a social worker in Iowa? What's your story?\" \n\n***** \n\nEveline sighed, drying another dish. She wasn't sure she wanted to go over her history, even to someone as sweet and innocent as Mary. \n\nBut she felt drawn to this fragile young woman. She wanted to know her story. And she knew, in her heart, that if she wanted to draw her out, to have her confide in her, she would have to give her the gift of her trust. \n\nShe smiled crookedly at Mary as she set a clean plate in the plastic dish-rack beside the sink. \"Well, to start off with, my family's rich.\" \n\n\"Oh,\" Mary said, but her face told her she didn't understand. \n\n\"Old money,\" Eveline expanded. \"Old southern money.\" She grimaced. \"It started out as slave-trading, to be honest, back about two hundred years ago.\" She grinned briefly. \"Mama used to get so mad when I would mention it when there were important guests around. As if it were perfectly acceptable to enjoy the fruits of that wealth, but not to admit where it came from. \n\n\"Well, my however-many times great-grandfather got lucky. He bought himself an exemption so he didn't have to fight in the Civil War, and his sons were all too young to go. And Sherman's soldiers somehow missed the plantation when they marched through Georgia back in 1864, so the Kershaws were one of the few wealthy families in Georgia that came through the war intact. They got out of the slave-trading business and got into banking and railroads and politics.\" \n\nShe sighed. \"Georgia was never as bad as some of the other states in the deep south, like Mississippi or Alabama. And my family was fairly progressive, for the time. \n\n\"But that's only by the standards of rich white southerners. Who are not exactly the most liberal people in America, as you might have noticed. \n\n\"So when I came out to my parents as a lesbian, and told them I was in love with a black girl at my ohso-prestigious boarding school, well, I might as well have told them I was a Satan-worshiper, or didn't like football, or, or a Republican,\" she said with a wry grin. \"My mother couldn't believe it. She couldn't understand why I didn't want to go to the University of Georgia, pledge a sorority, get a degree in Communications or some other phony major, marry a frat-boy with a business degree, and settle down in Gwinnett County like all the rest of her friends' daughters.\" \n\nMary frowned as she scrubbed at a stubborn spot on a plate. \"From what I understand, I'm surprised your parents aren't Republicans. I mean, isn't it the Democrats, mostly, who are in favor of gay marriage?\" In fact, Mary was sure of it. She remembered hearing the news on the radio, and had laughed until her sides ached, imagining the impotent, spittle-flecked fury of Brother Ezekiel and the rest of the members of the Church of the Holy Death and Fiery Resurrection. \n\nEvey smiled at her. \"Ah, I can tell you don't understand Southerners. My family has been Democrats for nearly two hundred years. They would no more change their political party than they would buy Japanese cars or start going to the Lutheran church, instead of the Episcopalian. Some things, darling,\" she drawled, \"are simply not done. They'll keep on happily voting Democratic and patiently wait for the party to admit it was wrong on gay marriage and a slew of other things, like school desegregation and the nineteenth amendment. \n\n\"But to get on with my story, I wasn't kicked out of the family or disowned. Not quite. But after I graduated college it was made clear to me that it would be preferable if I moved away. A long way away, where I wouldn't embarrass them.\" She shrugged, trying to pretend the hurt wasn't still there. \"It was a blessing, really. They couldn't touch the trust fund my grandfather had set up for me, thank goodness, so I'll never have to ask them for money. And being away from them means I can do the work I want to do.\" ",
        "\"Which is?\" \n\n\"Helping poor people. Reaching out to folks who need assistance, but aren't quite sure how to get it.\" Her voice softened as she gazed into Mary's eyes. \"People who are too proud to beg.\" \n\nMary opened her mouth, not quite sure what she was going to say, when Rebecca came into the kitchen holding a box. \"Can we play a game, Mommy?\" she asked. \n\nShe slanted a look at Evey, unsure as to whether this would be a welcome activity on a Friday night. The dark-haired woman shrugged cheerfully. \"No problem here,\" she said. \n\n\"Okay, sweetheart,\" she replied to Becca. \"Just let Mommy finish up, okay? Why don't you show Evey around?\" \n\n***** \n\nEveline let Rebecca guide her around the small apartment, first showing her the bedroom the two girls shared, with bunkbeds stacked against one wall and a mass of brightly-colored pillows on the floor. The room looked bright and cheerful, a welcome contrast to the drab beige walls of the apartment. \n\n\"That's Mommy's room,\" Rebecca said, pointing at a closed door as they came back out into the hall. \"And here are our books,\" she continued, pulling her into the living room. Two battered bookcases rose from floor to ceiling, jammed with books. One was obviously for the children, with Dr. Seuss and other children's authors taking prominence. The other was just as obviously for Mary. Evey ran her fingers along the titles, smiling as she saw some old friends lurking in the crowd. Mary's taste was eclectic, and none of the books looked new. Many obviously had been rescued from garage sales or flea markets, with prices scrawled on bits of masking tape still stuck to the spines. \n\nA lower shelf held a series of high-school textbooks on all sorts of subjects, from biology to American history to mathematics. She wondered at that. Why would Mary keep these? On the day she graduated from Wake Forest, she had dumped most of her schoolbooks in the nearest recycling bin and never looked back. \n\nDespite the threadbare surroundings, the apartment was painfully neat, as if in defense against the chaos of the world outside. The carpet was clean, the walls and shelves free from dust and cobwebs. Even the books in their bookshelves were lined up in alphabetical order and so straight and even Evey could have used them as a ruler. \n\n\"All done,\" Mary said, emerging from the kitchen and wiping her hands dry on a dishrag. \"Ready to play?\" she asked Rebecca, who agreed enthusiastically. \"Good. We can play a game and listen to the radio before it's time for bed.\" \n\nShe switched on a small radio that was nestled in one corner, and classical music began to play softly. For the first time, Evey was struck by the almost complete lack of electronics in the apartment. Mary had a cell phone, she knew. But aside from that - no television, no DVR or DVD player, no computer, no laptop or iPad or any of the other gadgets people seemed to think they needed in the twenty-first century. The effect was actually quite restful. There were no distractions. Nothing to keep them away from concentrating on each other. \n\nAs they set up the game of Chutes and Ladders, she mentioned the fact to Mary, who nodded. \"I don't have a TV, and can't afford one right now. I would like to get a computer sometime soon. It would help with a lot of things. \n\n\"But I don't want the girls exposed to too much. Some of the kids my sitter watches just sit in front of the TV all day, with their mouths hanging open.\" She demonstrated, earning a chuckle from Evey at her slack-jawed expression. \"I don't want Becca or Debbie to end up like that. And some of the things you see on the internet...\" she left the rest of the sentence unsaid, grimacing with distaste. \n\nThey played with Rebecca, Eveline smiling at the little girl's glee when her little figure was able to climb up a ladder, or her crestfallen expression when she had to slide down a chute. Halfway through the game, Debbie toddled over to her from where she had been playing with a pile of blocks. \n\nShe held out her arms to Evey. \"Up,\" she demanded. \n\nEvey smiled down at her. \"Okay, Miss Bossy,\" she agreed, lifting her into her lap. Once there, the little girl snuggled close in apparent contentment, her nest of golden curls bright against the wine-red blouse she was wearing. \n\nMary won the first game, and Rebecca demanded a rematch. \"All right,\" her mother said. \"One more. Then it's time for bed.\" \n\nStuck for a conversational topic as the game went on and Rebecca's game piece rapidly ascended the board, Evey opted for a discussion about clothes. \"That's a lovely dress,\" she said, eying Mary's clothing admiringly. \"Where did you get it?\" \n\nThe younger woman looked down at her hands. \"I made it myself.\" \n\n\"Really?\" She asked permission with a glance, then fingered the warm cotton fabric, the color the green of new leaves in spring. It had a high neckline and long sleeves, but clung to Mary's curves appealingly. \"It's beautiful. You should think about looking into work as a dressmaker. I bet you could get a good job at one of those bridal shops, if this is any indication of what you can do.\" \n\nMary's fists clenched on the table. \"I...I don't know. I make clothes for me and the girls because I have to. Not because I really enjoy it.\" \n\nEvey nodded as she spun the dial and moved her piece, unwilling to push her. \"I understand. But if you play your cards right, you could make a lot more money than you do waiting tables. You might want to think about it.\" \n\nMary nodded, but let the subject drop. They talked of inconsequential things as they played. Evey sipped her second (and last) glass of wine, and tried to keep her eyes from wandering over Mary's body in blatant admiration. \n\nShe was gorgeous, she decided. Simply gorgeous. Her face was pale, but her lips were full and pink, and her eyes were an arresting shade of dark blue. Her long blond hair tumbled in ringlets past her shoulders. Her waist was slim, and although her dress was much longer than was currently fashionable, Evey had caught enough glimpses of her legs to think they would be more than presentable. \n\nAnd her breasts! Despite, or perhaps because of, the way her dress hid them, Evey couldn't keep her eyes away. Not overwhelmingly large, but high and full. She swallowed, pulling her mind away from the fantasy of peeling the dress off Mary's ripe young body and kissing every luscious inch. \n\nShe took a last sip of wine, and was startled at the way her hand trembled as she set down the glass. \n\nOh, girl, she thought to herself. This is such a bad idea. The poor kid is obviously damaged goods, and is holding things together through sheer cussedness, willpower, and grit. One more tough blow and she might shatter. Do you really want to be the one who has to pick up the pieces? \n\nHah. Do you even have to ask the question? Yes. Why did you get into social work anyway? It wasn't for the high pay and the prestige, I can tell you that. This girl is a perfect example of why you do what you do. And you don't have to tell her about your nefarious scheme to get into her pants unless you want to. \n\nA happy shout broke her concentration and she jumped. While she had been lost in her thoughts, Rebecca had won the game. \n\n\"I won, I won,\" she chanted, jumping off her chair and dancing. At her mother's stern look, she seemed to remember her manners. \"Thank you for playing with us, Evey,\" she said politely. \n\n\"You're welcome, dear.\" she replied, smiling at her. She shifted, suddenly aware that Debbie had fallen asleep in her lap. \n\n\"Time for bed,\" Mary said, standing up. She lifted Debbie out of Evey's arms, and Evey stood up and stretched. \n\n\"I should go,\" she said, glancing at her watch and surprised to see it was nearly ten o'clock. The evening had slipped away while she barely noticed. \n\nMary nodded, though her eyes were sad. \"Do you want to take any of the food home with you?\" she asked. \n\nShe shook her head. \"No way.\" She slapped her belly. \"A few more meals like that and I won't fit in my clothes anymore. Though I'm sure you could make some more for me.\" \n\nShe pulled her jacket on and let Mary walk her to the door. She paused, the doorknob in her hand. \n\nNothing ventured... \n\n\"Listen,\" she said quietly, pitching her voice low, out of earshot of Rebecca. \"It's none of my affair, and you can tell me to mind my own business if you want to. But my job is to help people who are struggling. And if there is one person I've met in this town in the last three years who fits that description, it's you. I don't know your story. And I'm not asking for it. But I think I can help you get some help and make your life a little bit easier. \n\n\"Why don't you come over to my place tomorrow? Bring the girls. You can tell me what you're willing to tell. And I can see what kind of public aid you're eligible for.\" \n\nMary was quiet for a long moment, and Evey feared she had overplayed her hand. Finally she nodded as need overcame her reluctance. \n\n\"All right,\" she said quietly. \"I know I need help. I've been trying to keep it together, but it's so hard right now. The money's gone, and there's never enough time, and-\" For a split-second, her composure cracked, and her glorious blue eyes pooled with tears. \n\n\"Shhh,\" Evey said, pulling her into a warm embrace. She rubbed her back as the younger woman trembled in her arms. \"It's okay. It's all going to be okay.\" Before her hug could turn into anything more, and she destroyed the fragile trust which had grown between them, she pulled away. Perhaps it was her imagination, but she thought that Mary's arms were somewhat reluctant to let her go. \n\nShe pulled a scrap of paper out of her purse and scribbled her address on it. \"Come on over anytime tomorrow. I don't have any plans, anyway. I was just going to veg out in front of the TV, and maybe get some reading done.\" \n\nMary nodded. \"I will.\" \n\nEveline smiled, then gave her another quick hug goodbye. She gave the watching Rebecca a wave, and closed the door behind her. \n\n***** \n\n\"Time for bed,\" Mary said, forcing cheer into her voice, as the door closed. She looked at the cheap Timex she wore on her wrist. \"It is time for little girls to be asleep.\" \n\n\"Can we have a story, first?\" \n\n\"One story,\" she said firmly, having learned from experience how good Becca was at wheedling extra tales out of her. \"Then it's lights-out. We've had a big day today.\" \n\nShe lifted Deborah from the couch where she had laid her and carried her into the girls' bedroom. She had just put her in the lower bunk and pulled the covers up over her sleeping form when Becca came back into the room, lugging a book almost as big as she was. \n\n\"The World's Best Fairy Tales,\" she read the title. She cocked an eyebrow at her oldest daughter. \"Okay. But I get to pick the story. No scary ones tonight. A nice short one with a happy ending.\" She moved a couple of cushions around, then leaned up against the wall, with Becca snuggling up beside her so she could look at the pictures. The book was over seven hundred pages long, and had every fairy-tale she had ever heard of, and some she had not. \n\nShe flipped through the pages. Ah. Here we go. \"'As long ago as forever,'\" she began, \"'and as far away as yesterday, there was an ugly duckling...'\" \n\nBy the time the story was over, Becca was half asleep. \n\n\"Am I an ugly duckling, Mommy?\" she asked drowsily, as she climbed up the ladder and into the top bunk. \n\n\"Of course not,\" Mary replied. She kissed the warm cheek and pulled the blankets up over her. \"You are my beautiful angel, you and your sister. \n\n\"Now good night and dream sweetly. I love you.\" \n\n\"I love you too, Mommy.\" \n\n***** \n\nI know who the ugly duckling is, she thought, as she dried off from her shower. She kept her eyes away from the bedroom mirror. She didn't much care for the sight of her own reflection. \n\nStill, as she turned off her bedroom light and lay down in her own cold, narrow bed, a knot of tension which she had carried around for years began to loosen. The night had been a welcome respite in a life which had become a long, slow slog towards an unknown destination. For so long her life had revolved around work and money and bills and the girls that she had all but forgotten the necessity of friendship. \n\nEveline had changed that. The woman charged through life fearlessly, and forced her to come along with her, or be left behind in her wake. Mary remembered the way she had casually mentioned that she had a female lover when she was Mary's age, as if it were a matter of no consequence, instead of the blackest, foulest sin imaginable. \n\nNo. You left that behind. They were wrong. You know that. Don't fall back into their way of thinking. \n\nHer face warmed in the dark as her mind lingered on Eveline's elegant form. The older woman was everything she dreamed of becoming. The effortless way she wore her expensive clothes, the way she carried herself, her self-confidence -- Mary ached to have that sort of poise. \n\nAnd she made her ache in other ways, as well. She turned over on her side, the heavy comforter suddenly seeming hot and confining. She closed her eyes, willing sleep to chase away the sinful images inside her mind. \n\nAt last she rose up, throwing off the covers and sitting propped against the headboard. She undid the straps of her thin nightgown and let it pool around her waist. She cupped her right breast in her palm, the weight of it heavy in her hand. In the dim light coming through the window, she could see her nipple rising high and proud. \n\n\"Oh,\" she sighed as her fingers lightly stroked the taut nubbin of flesh. It felt so good! She closed her eyes, giving way to pleasure. In her mind's eye, Evey stood in front of her, slowly unbuttoning her blouse. Her hands drifted lower as she imagined her breasts coming into view, followed soon after by the rest of her spectacular body. \n\nThey kissed, and Mary trembled with longing. Her free hand stole surreptitiously between her legs. \n\nNo need to be ashamed any longer, she insisted to herself, trying to drive away the memories. The fury of Brother Elijah when he caught her touching herself in the bathroom. The carefully blank faces of her sister-wives as she was marched naked out the door into the raw February wind. The sting of the whipthin tree branch, used as a lash across the tender skin of her thighs and calves. The way she couldn't walk for over a week afterward. The sick, gleeful gloating of Brother Ezekiel when he took her the next night, hard and brutal, his cock tearing at her fragile insides. \n\nNo! \n\nShe shook her head from side to side. Never again! I will not let myself be used like that again! \n\nAs if declaring her independence, she pushed her hand between her legs. Her nether lips were hot and slick with arousal. She circled the small nubbin of flesh with her index finger, groaning as pleasure coursed through her body. Her legs sagged apart, and she imagined Evey was there, doing wonderful, unimaginable things to her. Her thighs shook, her hips slowly rolling her womanly mound upward to meet her hand. \n\nHer breath was loud and panting in her ears as her pleasure grew. Suddenly, she halted, as the muscles in her belly and her womb seemed to lock and loosen, all at the same time. A deep, wrenching groan emerged from between her clenched teeth, and she sagged back in to the mattress in sudden release. Stars glittered behind her closed eyelids, and she felt the hot track of tears flow down her cheeks. \n\nNot guilty. I am not guilty. This is not a sin. This is right and natural. I will not feel ashamed. It is my body, not theirs. \n\nIn the dark, she forced a tremulous smile to her lips, driving back the shadows of her own memories. She slipped out of her nightgown and, her bare body singing in contentment, spiraled down into a deep, dreamless sleep. \n\n***** \n\nThe next day, Evey waited impatiently for Mary's arrival. By the time four o'clock rolled around, she was checking outside every few minutes, and wondering if the younger woman had decided not to come. She mulled over the idea of calling her to find out, then put it firmly aside. \n\nYou've got her trusting you a little bit now, Eveline Rose Kershaw. Don't blow it by acting like some dumb teenager, full of hormones. If you come on too strong, all you'll do is scare her away. \n\nLuckily for her state of mind, Mary showed up a few minutes later, the noise of her rattletrap Buick unmistakeable as it pulled into her driveway. Eveline exited the house to help her with the girls, the two of them removing the blond-haired twosome from their carseats as if they had been working together all their lives. \n\n\"I'm sorry we're late,\" Mary said, as the two of them climbed up the stairs to Evey's condo. \"We went to the library this afternoon for one of their reading programs. They had a woman dressed up as a princess reading 'Cinderella,' and Becca was just entranced. I wouldn't have been able to get her out of there with a crowbar. When she was done she went up to her and asked her questions about her dress and her tiara and everything. I'm pretty sure I know what she wants to be next Halloween.\" \n\n\"Well, all girls go through a princess phase,\" Evey said good-naturedly. \"Lord knows I did. Though for me it was Jasmine from 'Aladdin'. I wanted a pet tiger like she had for Christmas, and was very upset when I didn't get one.\" \n\nShe opened the front door. \"Here we are. It isn't much, but it's home.\" \n\nMary gasped. \n\n\"My goodness, Evey. I know you said you were rich, but...\" \n\n\"We prefer the term 'well-off.' Or 'comfortable.' Or even 'well-to-do,'\" she replied as she led them into the condominium. \"Stating you are actually rich is so...so gauche, don't you know. Rich people don't need to tell each other how rich they are. They leave that to sad little upstarts like Donald Trump.\" \n\n\"So, how 'well-off' is your family?\" Mary asked weakly, taking in the polished hardwood floors, the high ceilings, the modern furnishings, and the deep-pile carpet in the living room, just to the right of the foyer. She glimpsed a huge, high-definition TV screen, surrounded by what appeared to be a stateof-the-art entertainment system. To her left, a pair of stairways wound both up and down, apparently to a basement and to the bedroom (or bedrooms?) on the second floor. Past them was a kitchen, with stainless-steel fittings and polished granite countertops. \n\n\"Oooh,\" said Debbie happily as she walked into the living room. She fell to her knees, plunging her fingers into a strange object. \n\n\"Is that...a bearskin rug?\" \n\n\"Yes.\" Evey sighed and smiled. \"My brother sent it to me last Christmas. His idea of a joke.\" \n\nMary swallowed. Unbidden, a vision came to her mind of Evey lolling naked on the rug, her black hair spread like a fan across the white fur. \n\n\"How rich are you?\" Her voice sounded plaintive in her own ears. \n\n\"Well, we're not Bill Gates rich,\" said Evey laconically, as the children's footsteps thumped off into the distance. \"But we get by, somehow. My grandfather was fond of me when I was a little girl. I was a tomboy, and loved fishing with him and taking hikes in the woods. I think he had a premonition that I was going to butt heads with my parents at some point. So he put a big chunk of his money in a trust fund for when I turned twenty-one. If I wanted to, I could just live on the interest for the rest of my life.\" \n\nShe made a face. \"I'm not going to, though. I've got too much pride to end up just another useless drone, like half the kids I went to boarding school with.\" She shook her head. \"There's something wrong about being sixteen years old and having nothing to live for, because everything you could possibly want has already been given to you.\" \n\nShe smiled at Becca, who was had scampered up to stand beside her mother. \"Would you and Debbie like to watch a movie on my TV?\" ",
        "Rebecca looked up at her mother, who smiled and nodded her permission. \"Yes, please.\" \n\nShe guided the two of them into the living room, where she slipped a Pixar movie she had rented the previous evening into the DVD player. \"Now, if you girls need anything, come and see me, okay? Me and your momma are going to be taking care of some business in the other room. \n\n\"Now,\" she continued, speaking to Mary. \"Let's see what we have in that folder, there.\" She nodded at the manilla folder peeking out of Mary's shoulder bag. \"Are those your financials?\" \n\nMary nodded. \"Everything that I have. I hope it's enough.\" \n\n\"All right. Let's take a look.\" \n\n***** \n\nWhile Evey looked over Mary's financial documents, Mary pulled her algebra textbook out of her shoulder bag and tried once again to get some studying done. Growing up in the compound had given her a rudimentary skill with numbers, and she had moved quickly through the easier levels of mathematics as she tried to pick up enough high school credits to get her equivalency certificate. But algebra remained a frustrating enigma, and she muttered crossly to herself, chewing absentmindedly on a strand of her hair, unaware of Evey's smiling eyes on her. \n\nShe checked her answers against the list in the back of the book, unsurprised to find that, again, they were completely wrong. \"Gosh...gosh darn it,\" she swore blackly, throwing her pencil on the table. \n\n\"Having some trouble?\" Evey asked sympathetically. \n\n\"It just doesn't make any sense! How can a number be variable? How can it change? Numbers...are numbers. They don't change. I can't make four turn into five, no matter how hard I wish. So why do I have to deal with this...this silliness?\" \n\nEvey walked around the table to sit down beside her, glancing at the textbook. \"Ah. Algebra. Trust me, it's tripped up smarter people than you, Mary.\" She looked at the set of problems that were causing her so much frustration. \"You know, it's not that hard. You just have to put into the right context.\" Her brow furrowed for a moment. \"Think of it the way you think of something like grocery shopping.\" \n\n\"What?\" \n\n\"Well, when you go to the store to buy food for you and the girls,\" she said, cocking her head towards the family room, where laughter and the faint sounds of the TV could be heard, \"you don't know how much the food is going to cost, do you?\" \n\n\"Well, no,\" Mary said. \"Not exactly. Although I've usually got a pretty good idea.\" \n\n\"Good. So think of the cost of the food as a variable. Now. Let's look at this first problem: \n\n\"4X-8=16 \n\n\"The first thing to do is make everything nice and neat. We want the variable to be all by itself on one part of the equation. And everything else on the other. So let's add 8 to each side. You have to do it to each side,\" she said, mock-seriously. \"It keeps things fair. \n\n\"4X-8+8=16+8\" \n\n\"All you did was make it more complicated,\" Mary groaned. Her head felt like it was going to start to hurt any minute. \n\n\"Just for a second.\" Evey smiled smugly at her, and Mary was torn between a desire to hit her and hug her. \"If I have eight of something, and you take away all eight, how many do I have left?\" \n\n\"Zero?\" she hazarded. \n\n\"Right.\" Using her pencil, Evey crossed off the eights on the left side of the equation. \"So now we've got 4X=16+8. I don't like that sixteen plus eight there. It's untidy. Let's add those together. What's sixteen plus eight?\" \n\n\"Twenty-four.\" \n\n\"Right. So now... \n\n\"4X=24 \n\n\"Much better. So now, let's think about your trip to the grocery store. If you have twenty-four dollars, and each thing you want costs four dollars, how many can you buy?\" \n\n\"Six,\" Mary said automatically. Her mouth fell open as Evey did the last piece of math and wrote the answer: X=6. \"That...that was easy.\" She took up a piece of paper and snatched the pencil out of Evey's hand. Using the same process, she was rapidly able to complete two more problems. \"How did you do that?\" She looked down at the paper disbelievingly. \"How did I know that?\" \n\n\"Everyone in your situation already knows basic algebra, Mary, just from living in a world where they have to budget their expenses. It's just a matter of applying real-world skills in a different way.\" She nodded at the textbook. \"So you're going for your high school equivalency certificate? Good. You won't believe how much that will help you in the future. When did you have to drop out?\" She flushed, as if suddenly aware of how rude the question sounded. \n\nMary chose to ignore it. \"Have you been able to find out anything?\" she said, waving at her thin pile of W-2s, pay stubs, and tax forms. \n\nEvey nodded grimly. \"Yes. Girl,\" she said severely, \"you've been leaving so much money on the table it's practically criminal. \n\n\"First off, you're eligible for SNAP cards.\" \n\n\"What?\" \n\nEvey sighed. \"They're also known as food stamps. But we don't like to call them that anymore. There's a sort of stigma attached to them.\" \n\nMary recoiled. \"I don't want to be on food stamps. We can get by without them.\" \n\n\"No,\" Evey said flatly. \"You can't.\" She waved a hand at the documents. \"I can tell from this how much you make. And I can take a pretty good guess at how much you have to pay in food, and rent, and diapers, and all the rest. Remember, this is what I do for a living, so it's no use putting up a brave front and trying to fool me. How much do you have in case of an emergency, Mary? If that beater of yours outside gives up the ghost, how will you get to work? \n\n\"It's not a crime to accept help when you need it, Mary,\" she continued, her voice gentling. \"You pay taxes, right?\" At Mary's jerky nod, she went on. \"This is what the taxes you pay go to. Schools and roads and clean water and clean air and fire trucks and the military and all the rest. Including help to those who need it. Such as unemployment insurance and children's health insurance and social security and Medicaid. And when you get back on your feet and have a good job, the taxes you pay will help another young woman who's having the same problems you are right now. \n\n\"Accept the help.\" \n\nMary nodded, though her lips thinned unhappily. \"All right. But no longer than we have to.\" \n\n\"Agreed. And here's another thing.\" She waved a sheet of paper. \"Did you seriously file a 1040EZ for your federal taxes the last two years?\" \n\nMary squinted at the sheet of paper, covered with her handwriting. \"Yes?\" \n\n\"Oh, sweet Jesus,\" Evey moaned. She shook her head, apparently caught between an urge to laugh and to bang her skull against the table. \"Do you have any idea how much money you threw away? You could have itemized your deductions, Mary. And you're eligible for tax credits for the girls. Did you ever think about that?\" \n\n\"No!\" Mary snapped angrily, goaded past endurance by Eveline's pitying tone. \"I didn't think about that. Because I didn't know! Maybe where you grew up you knew all about taxes and how to file them. I grew up-\" she caught herself, just in time. \"I didn't know. I still don't know. What's a tax credit? What do the girls have to do with it?\" \n\n\"Good lord,\" Evey swore softly, her eyes wide. \"You really don't know, do you?\" She shook her head. \"And I bet you didn't go to a tax preparer the last couple of years because you were stubborn and bullheaded and thought you could do it on your own and didn't want to pay the fee, right?\" She smiled crookedly at Mary's shamefaced nod. \"All right, then. The government,\" she explained, \"gives you a tax credit for your children as kind of a rebate for having to take care of them. For all the costs associated with raising kids. Food and clothes and diapers and daycare and all the rest. You can deduct those costs from the amount you owe. And if you don't owe much, you get cash back from the feds. \n\n\"You,\" she said sternly, \"didn't claim thousands of dollars that you could have gotten back from President Obama and the rest of the federal government.\" \n\n\"Thousands?\" Mary whispered. Her heart sank into the pit of her stomach, thinking what she could have done with that money. The car. A decent apartment. \"Oh, God, I'm such an idiot!\" \n\n\"No,\" Evey said sternly. \"You're not. And I don't want to hear that sort of nonsense ever coming out of your mouth again. Ignorance is not stupidity. Just because you don't know something doesn't mean you can't learn. \n\n\"You were ignorant about one piece of algebra a few minutes ago. Now you're not. You were ignorant about deductions for the girls. Now you're not. And when you have to file your taxes again next year, I bet you won't make the same mistake again, will you?\" \n\n\"But what about all that money I left behind?\" Her voice was almost a wail. \n\n\"Well, honey,\" Evey drawled, \"for all that I complain about the feds sometimes, they do allow you to correct a mistake if you find out you've made one. We've got a couple of accountants who donate their time where I work. If you can swing by my office sometime next week, we'll file an amended tax return for last year and the year before. With electronic filing, you'll have the money in your bank account in a couple of weeks.\" \n\n\"How much?\" she asked eagerly, then winced at how greedy her voice sounded. \n\n\"Impossible to say for certain, right now. I'm no CPA. But it'll be a decent chunk of change.\" \n\n\"Thank you,\" Mary said, covering Evey's hand with her own. \"I owe you so much. You've been such a huge help to me. When I think how I felt when you walked up to me the other night in the rain...\" She laughed, a trifle unsteadily. \"Maybe there really is a God, and you're an angel sent to help me.\" \n\nEvey laughed, but Mary thought it sounded shaky. \"Believe me, I'm no angel.\" \n\nTheir eyes locked. Mary was suddenly very aware of the feel of Evey's hand under hers, the skin feverishly warm in the cool room. Her eyes were wide, and she could see her pulse beating under the fragile skin of her throat. What would her skin taste like? The thought ran through her head before she could stop it. Almost of her own accord, her head leaned forward, and she could see Evey's doing the same, her lips parting eagerly, ready for their first kiss. The first of thousands. She- \n\n\"Mommy? I have to go potty. And Debbie is stinky.\" \n\nShe closed her eyes, choking back a scream of frustration, and turned to her oldest child. Beside her, Eveline rose to her feet. \n\n\"I'll show you where the bathroom is, Rebecca. I should have told you when you came in. We girls need to know things like that.\" The look she turned to Mary was wickedly mischievous, as if she knew her innermost desires. And instead of being repulsed by them, couldn't wait to indulge them. \n\n***** \n\nEveline returned from showing Rebecca the bathroom to find Mary changing a diaper on top of her dining room table. \n\n\"I'm sorry,\" she apologized. \"But I couldn't find a good place to do it. I didn't want to do it on the floor, or on the carpet.\" \n\n\"Don't worry about it,\" she soothed her. \"Poop wipes off. And the people I have come in here to clean never have enough to do anyway.\" She looked over Mary's shoulder at her youngest child, whose feet kicked in the air as her mother quickly and professionally cleaned her bottom and pinned a new diaper into place. \n\n\"Cloth diapers?\" she asked. \n\n\"You can wash them over and over and don't have to replace them,\" Mary said shortly. \"If I had to buy disposable diapers I wouldn't be able to afford food.\" \n\n\"I understand,\" she said, changing the subject. \"Well, now that we're done in here, how about we watch another movie? And maybe we can order some supper?\" she suggested, as her stomach gurgled hungrily. \"I'm paying,\" she added, as Mary's mouth opened in a hesitant demurral. \n\nShe pulled a menu out from a stack on her kitchen counter and picked up her phone. She quickly ordered a couple of pizzas from a nearby restaurant, coming back into the living room in time to see Rebecca slide another movie into the DVD player. \n\nShe smiled as the opening credits to 'Finding Nemo,' came up on the screen. She settled onto the couch, Mary beside her. The two girls sat on the carpet, close to the TV. \n\n\"Have you seen this?\" she asked, relaxing into the comfortable leather. She put her feet up on the coffee table, wiggling her toes contentedly. \n\nHer companion shook her head. \"No, but I've heard about it.\" \n\nThey watched the movie silently, broken only by laughter at the antics of Nemo, Marlin and Dory. Mary seemed particularly taken with Dory, breaking into girlish giggles whenever she said something silly. \n\nThirty minutes into the film, the doorbell rang, and Evey paid the delivery man. \n\n\"Mmmm, Mama Juliana's pizza,\" she murmured happily, opening the cardboard box and inhaling the aroma of pepperoni and sausage. While the movie was paused, she plundered the kitchen for plates and cups. Waving off Mary's feeble attempt to share the cost, she passed out slices of pizza and poured glasses of cold milk for all of them, and sat back down. \n\nAs the movie went on, she stole occasional glances at Mary's face, wondering what her story was. The young woman was an enigma. Obviously she was running away from something. But what? Poor choices as a younger, more foolish woman? Abuse of some sort? Something else? \n\nHer brows creased in a pensive frown. There was something about her that she couldn't quite put her finger on. The way Mary seemed almost frightened of modern technology, and was painfully unaware of things that most people took for granted, spoke to a deeply sheltered childhood. She suspected that childhood could not have been a happy one. If it had been, Mary would have had a support network to aid her. Instead, she was forging through life practically single-handed. \n\nHer heart melted as she looked at her again, her face open in childlike delight as she watched the cartoon. But her innocent exterior only masked the strength and passion beneath. She might look sweet and innocent, but she had a core of steel. Evey had caught a glimpse of it, just a short time ago. \n\nShe closed her eyes as she relived that moment, when Mary had leaned close to her, so near she could scent her breath. Her kiss would have been so welcome. She yearned to take her in her arms, to feel her warm, lissome body against hers. To have her so close was a sweet, gentle torment. If not for Mary's obviously scarred past, she would have slipped an arm around her waist and pulled her close, so that they could cuddle together on the couch. \n\nTime. Give it time. \n\nThe movie drew to a close. She was surprised to see tears on Mary's cheeks as the closing credits played. \"Are you all right?\" \n\nMary sniffled. \"It was so sweet. The way the daddy fish said goodbye to his son. I wish-\" she cut herself off, glancing at her watch. \"Goodness, it's late,\" she said, blatantly changing the subject. \"We should go.\" \n\nEveline did not try to dissuade her. She followed Mary through the house, helping her pick up her things and get the girls ready to leave. \"You'll come by my office next week like you promised, right?\" \n\nThe blond woman nodded as she bundled Debbie into her coat. \"After what you told me about my taxes, wild horses couldn't keep me away. I'll try to call ahead so I won't take up too much of your time.\" \n\nEvey smiled, and on a sudden impulse, leaned forward so she could kiss Mary's cheek. \"Any time with you is time well spent,\" she said quietly. She knew her eyes and face were saying more than her voice was, but she didn't care. She knelt down to give each of the girls a goodbye hug. \"I'll see you two again soon, okay?\" \n\nRebecca hugged her back. Deborah gave her a loud, smacking kiss on the cheek, and giggled. \n\n***** \n\nOver the next two weeks, Eveline found herself falling in love with Mary Durham. And she was so happy she didn't even care. \n\nThe appointment at her office took place on Tuesday, and she took quiet joy in Mary's flabbergasted surprise at just how much money she would be receiving with her amended tax returns. With Evey's advice, she began making tentative plans on getting a different car, and perhaps moving out of her dump of an apartment when her lease was up at the end of the winter. \n\nFrom there, it was an easy step to invite her out for coffee the next day. The two of them met during Mary's lunch break, and she invited her back to the diner where she worked to introduce her to her coworkers and her boss, who were cheerfully friendly and obviously doted on the gorgeous young woman and her children. \n\nBarely realizing it, they found themselves spending more and more time together. On the weekends, during the chilly November afternoons, they took long walks, pushing Rebecca and Debbie together in their strollers. Or they simply visited, talking together about books or the girls or other matters. Mary, Evey did not fail to notice, was almost completely silent about her childhood. The only hints she let fall seemed to indicate she had lived the first several years of her life in the west, in the mountains, as she commented several times about the lack of snow and the relatively mild Iowa weather. \n\n\"So what are you and the girls going to do for Thanksgiving?\" she asked one lazy evening. It was Sunday night, and they were at her condo, where she was attempting to teach Mary some of the fundamentals of football by watching ESPN. \n\nMary shrugged uncomfortably. \"I don't have any plans. The diner will be closed, so I won't have to work. The girls and I will probably stay home. What about you?\" \n\n\"Well, the past two years I've spent the holiday with some friends of mine here in town. Crazy family named Chamberlain. Maybe you know the type, all into environmental causes and stuff like that. They even claim to worship some sort of nature goddess. But they've had a lot of changes the last few years. A couple of marriages and some babies and I feel like I'm starting to become a bit of a fifth wheel. \n\n\"So I figured I'd start my own tradition. Why don't you and the girls come over on Thanksgiving? I'll deep-fry a turkey and make some other fixings and we can have ourselves a good old feed right here.\" \n\nMary blinked. \"You're going to deep-fry a turkey?\" \n\n\"Sure. Haven't you ever had deep-fried turkey before? It's fantastic. If you do it right, it's juicy on the inside but the outside is like fried chicken. Mmmmm.\" \n\nMary took a deep breath, and Evey could see her getting ready to refuse. \"Come on, Mary. Don't make me spend the holiday alone,\" she said, shamelessly playing on her sympathy. \"I need my friends around me during the holidays.\" \n\n\"Your friends,\" Mary repeated, and Evey was shocked to see tears glimmering on her eyelashes. \"I'm your friend?\" \n\n\"You are.\" Inside, her heart was breaking. What had happened to this girl, that having a friend was so important to her? Had she never been close to anyone in her life? \"And I am yours, I hope.\" \n\n\"You are,\" Mary repeated her words. Eveline reached for her hand, and their fingers laced together. \"My best friend in the world.\" Suddenly she smiled like a mountain sunrise. \n\n\"All right. We'll come over for Thanksgiving. Because I'm fairly sure you're making it up about the turkey.\" \n\n***** \n\nAfter Mary and the girls left, Eveline puttered around the condo, putting things in order for the week to come. As she put away plates and folded clothes, her mind dwelt on the mystery that was Mary Durham and her daughters. \n\nWhere did she come from? What was she running from? All the evidence pointed towards a young woman who had been shockingly abused. That she could be so strong at her age, dealing with the stress of raising two children single-handed, was incredible. \n\nShe sat back down on the couch, half-watching the football game. For some reason, the condo felt empty, and she gave a rueful smile. Ever since she had moved to Des Moines, she had lived alone, and had been happy to do so. Her scattered, short-term relationships had rarely evolved to the point where she had considered asking her lovers to move in with her. The only time she had done so, with Heather, had been a rapidly-regretted mistake. Now she was lonely when she was separated from a woman she had barely held hands with! ",
        "She sighed regretfully as she turned off the TV. She shut off all the downstairs lights, then walked up the stairs to her master bedroom on the second floor, passing the empty guest bedrooms on either side. \n\nFour bedrooms up here, and three never get used. The last time was when Darren visited from home, and he was only here one night. Mom and Dad wouldn't come to Iowa if I paid them. They wouldn't want to risk becoming contaminated by breathing Yankee air. \n\nShe lay down, turning on her bedroom TV and flipping through the channels, searching for a distraction. Her fingers slowed, then stopped, as the movie channels appeared. \"Ah, good old Skinemax,\" she smiled. \"You never let me down.\" An adult movie was playing, and she was thankful she hadn't gone channel-surfing while Mary and the girls were in the house. The children would be too young to understand, but Mary would be horrified and Evey embarrassed. \n\nBut since she's gone... \n\nShe slipped out of the sheer blouse and the snug pair of jeans she was wearing, worn especially for Mary. She had noticed from the first night they met how the young woman was in equal parts scandalized and fascinated by her fashion choices, especially when she never seemed to wear anything but long dresses or the most conservative of blouses and skirts. Her apparel would have made her seem drab, if that were possible. But even a potato sack was not enough to hide her extraordinary figure. \n\n\"Ahhh,\" she moaned softly, cradling her breasts, as a pair of buxom women embraced on the screen. She stroked the curves, her fingers moving inward, massaging the bundles of nerves at the tips. Almost immediately, she could feel her nether-lips dampening. Simply being in Mary's presence put her on the hair-trigger of arousal, and it didn't take much to get her body ready for sex. \n\nThe only downside, of course, was that there was no one there to actually have sex with. \n\nShe lay back on the plump pillows on her bed, her fingers softly kneading her flesh. She watched through half-lidded eyes as her nipples peaked, and gently scratched the sensitive aereolae with a fingernail. \n\nShe turned off the movie, preferring her own fantasy. Not a pair of silicone-injected nymphets on a soundstage, but a shy, quiet girl, with a sweet smile and a body made for loving. A woman with a gentle temper and a core of flame-tempered steel. \n\nShe fumbled open a drawer in her nightstand, pulling out a vibrator. She switched it on, and ran the buzzing tip down her body, from her throbbing nipples, across the flat planes of her belly, the gentle rise of her mons, and down to her cleft. She gave a frustrated hiss as she encountered the barrier of her sheer silk panties, worn in futile hope of a sexual encounter which still had not occurred. Dropping the vibrator for a moment, she hooked her thumbs around the waistband and pulled them off, discarding the wisp of silk in a moist, limp heap on the hardwood floor. \n\n\"Much better,\" she sighed, as the cool air of the room hit the hot petals of her labia. She ran the tip of the vibrator along the edges and smiled as delicious feelings coursed through her body. Her straight girlfriends in college had always described being horny as an urge, a need to be filled. Not her. She had experimented once or twice with men, but the encounters had left her with a firm understanding of her own lesbianism. Not 'confused,' as her mother had tried to suggest. \n\nNot even close. I don't want anything in my pussy. Except, maybe, Mary's fingers. Or her tongue. \n\nShe shivered as the image came to her mind, full-blown and startling in its intensity; her blond-haired friend sprawled carelessly between her legs, her lips and tongue busily lapping at her womanly core. In her fantasy, her skin had darkened, free time allowing her to spend more time outside, resulting in a healthy tan. The lights struck golden highlights from her glowing body, but her honey-blond hair retained its angelic glow. \n\nHer passion peaked, her orgasm moving in on her with almost frightening speed. She moved the vibrator to her bud, her free hand gathering her juices from her lower lips and coating her clit with lubricant. She pressed the buzzing tip to her clit. Harder, then softer, then harder again, shaking as her arousal grew. Her fingers pushed down on the rise of her pubis, and her thighs shook. \n\n\"Oh, oh fuck,\" she gasped, her climax racing through her body. Stars danced behind her closed eyelids as a noiseless explosion echoed in the vaults of her mind. When she came back to herself, her body felt limp and boneless, suffused by a gentle languor. \n\nShe gave her nipple a teasing pinch as she turned off her bedside lamp. \n\nSoon, she promised herself, as she drifted off to sleep. \n\nSoon. \n\n***** \n\nThanksgiving Day dawned dark and cloudy, with a cold bite in the air. Evey monitored the weather forecast with one ear as she prepared for a huge holiday feast. Potatoes were scrubbed and peeled, ready to be mashed. Cans of green beans were decanted, needing only to be heated up. Putting aside the habits of years of indifferent cooking, she even rolled up her sleeves and made up a batch of crescent rolls. The condo began to fill with the smell of cooking food, reminding her of holidays long past, before she had become estranged from most of her family. \n\nMary and the girls arrived a little after three o'clock, Mary carrying a tray of cold vegetables and dip. \n\n\"Nice,\" she said, taking it from her as the three of them shed their coats and jackets. \"But you shouldn't have spent your money on a veggie tray, sweetheart. Those are expensive.\" \n\n\"What?\" Mary turned a faintly scandalized look on her. \"Do I look dumb enough to spend money on one of those trays? I made this myself. It was easy. All I had to do was buy raw vegetables and cut them up. I can't believe how lazy some people are. Why should they spend twenty dollars on a tray when they can make one like this for so much less?\" \n\n\"Well, I guess I've been told,\" Evey said mildly. Mary had the grace to look embarrassed by her outburst. \"You look beautiful, girls,\" she told Rebecca and Deborah. They were dressed in matching white blouses with red skirts and black patent-leather shoes. If not for the difference in their heights, they could almost have been mistaken for twins. She picked each one up and gave them a hug and kiss on the cheek. \"Did you make those?\" she asked, nodding towards their outfits. \n\nMary shook her head. \"Not these, no. I picked them up at the thrift shop a few days ago. They looked so nice and fit so well I couldn't resist.\" \n\n\"They look beautiful,\" Evey repeated, noting with pleasure how Mary's skin blushed a pale pink at the compliment. She placed the tray down on the kitchen counter and lifted the lid, then picked up a carrot stick and dipped it in ranch dressing. \"Are you girls hungry?\" she asked. \"Or would you like to play for a while?\" \n\n\"Play!\" said Debbie authoritatively, then trotted away, by now familiar with the layout of her condo. The two adults traded an amused look as Rebecca hurried off to watch over her younger sibling. \n\n\"You look very nice today,\" Evey said into the sudden silence. \n\n\"Thank you,\" Mary replied. As usual, she was wearing a dress. This one was a deep, midnight blue, which brought out her eyes. With graceful simplicity, it accentuated the flatness of her belly, the sweet curves of her hips and rear, and the proud outthrust of her breasts. Evey's eyes narrowed as she drank in her form. Was it just her imagination, or could she see the faint outline of Mary's aereolae pressing against the fabric of the dress? Was she not wearing a bra? \n\nEvey felt her breath grow short in her chest. If Mary had come to her home braless, it signaled a change in their relationship which even she might not be ready to acknowledge. \n\nCarefully, girl. \n\nOh, but I want her so much. \n\nShe poured them each a glass of wine, and they talked as they worked together, preparing the meal. \n\n\"So where is this fried turkey?\" Mary asked suddenly. \"Or were you just making it all up?\" \n\n\"Making it all up?\" Evey repeated, trying to sound offended, which was difficult, when one had to fight to keep a straight face. \"As if a well-brought-up girl like me would evah do something as...as low-class as that,\" she drawled. \"Come out on the deck and see.\" \n\nShe led Mary through the door out onto the wooden deck that opened off the kitchen, where on more pleasant days she relaxed with a good book in one of the wrought-iron patio chairs. \n\n\"What,\" Mary asked, \"is that?\" \n\nShe smiled at her. \"This,\" she replied, \"is what is going to give us an awesome meal in an hour or so.\" \n\nSitting on the patio was a propane tank. Leading from it was a hose, which was in turn connected to a multi-flame burner. Sitting on top of that was a large stainless-steel pot, about two-thirds full of cooking oil. Suspended above the pot was what looked to be an ancient instrument of torture, but was, in reality, a simple rope hoist. Dangling from the hook, with its legs tied together with metal wire, was a huge turkey, covered with aluminum foil to protect it from the elements. \n\n\"Actually,\" Evey said, \"I should probably start heating the oil.\" She took a packet of matches out of her shirt pocket. She then turned on the spigot for the propane tank and lit the burners. With a muffled whoomph, blue flames emerged, and she nodded in satisfaction. \n\n\"Three things near and dear to every southerner's heart,\" she grinned, taking another sip of her wine. \"Alcohol, fire, and meat. All we need now are some guns and a couple ugly hound dogs, and it'd be like a family reunion back home.\" \n\n\"I don't like guns,\" Mary said quietly. A cold breeze swept over the deck. She wrapped her arms around her chest and shivered, but made no move to return indoors. \n\n\"Here,\" Evey said. She moved closer and put her arm around her. Her hand slipped from shoulders to waist, and she smiled as her suspicions were confirmed. There was no telltale bra-strap on Mary's back. \n\nThey stood for a long while, content to luxuriate in each other's company as the oil slowly heated, Evey leaning over from time to check the thermometer suspended in the pot. \n\n\"What happened to her?\" Mary asked abruptly. \n\n\"To who?\" she replied, confused. \n\n\"The girl you said you were in love with. The one that made your parents so upset.\" \n\n\"Ah,\" she smiled sadly. \"Lorraine.\" She sighed. \"I was in love with her. Unfortunately, she was not in love with me. We broke up before I left for Wake Forest. It's probably for the best. My parents could accept -- barely -- a daughter who was a lesbian. Living with, maybe even marrying a black girl? That would have been beyond the pale. And I don't think Lorraine's family was too fond of me, either. It's asking a lot for a black family to get used to the idea that their daughter is going out with a girl whose family used to own slaves.\" \n\nShe bent over to check the temperature again. \"All ready,\" she said, changing the subject. Very carefully, she lowered the hoist until the turkey was fully immersed in the oil. With a hiss, frothing bubbles rose to the top, and a savory odor began to emerge. \n\n\"I hope you're not planning on us eating that entire turkey,\" Mary said nervously, stepping back into her one-armed embrace. \"That thing is huge. How big is it? Fifteen pounds?\" \n\n\"Eighteen,\" she replied complacently. \"But too much turkey is a self-correcting problem.\" She grinned down at the smaller woman. \"Turkey sandwiches, turkey gravy, turkey soup, turkey salad...after a while, there's no more turkey.\" \n\n\"Hmmm.\" Mary seemed unconvinced, but didn't argue the point. Her body felt tense, and Eveline wondered what was going through her mind. \n\nAbruptly, she turned so that they were face to face. Evey was astounded to see tears in her eyes. \n\n\"Mary? Are you all ri-\" \n\nAnd then Mary kissed her. \n\n***** \n\nIt was wonderful, blissful, beyond her wildest imaginings or her most pleasant dreams. Evey's arms wrapped tight around her, holding her close, while their lips and mouths danced with each other. \n\nShe moaned, shaking, as Evey's hands stroked up and down her sides. The wood deck of the patio seemed to wobble under her feet, and she realized she was only a few seconds away from falling over, overcome by love and desire. \n\nHer hands tightened on Evey's waist as she fought for balance. The older woman pulled away slightly, and their mouths parted. She didn't have time to voice her disappointment before Evey guided her hands around to her denim-clad rear. \n\n\"There,\" she whispered into her ear. \"Squeeze it. Yeah.\" She gave a throaty chuckle as Mary obeyed her. \"Oh, I love that.\" \n\nShe pulled her close once more, her lips brushing Mary's. \"I love how you fit against me,\" she whispered. Her tongue reached out and licked Mary's lips. \"Mmm,\" she murmured, low and loving. \"You taste wonderful.\" She repeated the gesture. \"Why not let your tongue come out and play?\" \n\nHesitantly, she moved forward. As if sensing her fears, Evey simply stood, quietly waiting. Mary tilted her head up, her mouth opening shyly. As their lips touched, she seized her fears in both hands and extended her tongue. \n\nOh! \n\nIt was incredible. Nothing like the sour-breathed reek of Brother Ezekiel, his tongue forcing its way into her mouth like a slab of rotten meat. Instead, Evey's tongue was warm and sweet and oh, so skilled, winding its way around hers until Mary thought she was going to pass out from sheer pleasure. \n\nShe realized she was moaning, her breath coming in sharp, short pants. Her breasts felt hot and tight inside her dress, and an urgent ache was growing in her groin. \n\n\"Please,\" she said, her voice a cracked half-whisper. In her aroused state, she wasn't even sure what she was asking for. \n\n\"What are you doing?\" a voice asked. \n\nHer head whipped around, and she saw Rebecca standing on the deck. A few feet away, Deborah was in the doorway leading from the house to the outside, her thumb securely lodged in her mouth. As she watched, she walked onto the deck, the clatter of her shoes loud in the sudden silence. \n\n\"We were kissing,\" Evey explained in a tone of such matter-of-fact honesty that Mary had to stifle a sudden snort of laughter. \n\nBecca's brows pinched together in a suspicious frown. \"Mommy never kisses me like that.\" \n\n\"I'm sure she doesn't,\" Evey agreed. \"Oh, no, you don't,\" she said, catching Debbie as she approached the pot where the turkey was gently frying. \"You have to stay away,\" she warned the toddler. \"See? That's hot.\" Carefully she knelt on the deck and showed her the flames, extending her hand so she could feel the heat. \"Little girls need to stay away from this, or they could get hurt. Do you understand?\" Her look took in both children. \n\nBecca nodded, her face solemn. \"Rebecca, can you take Debbie inside?\" Mary asked, proud of the way she kept her voice from quavering. \"We'll be back in a few minutes.\" \n\nWhen the girls were back indoors, she turned to Evey. \"That was a mistake.\" \n\n\"No,\" the dark-haired woman corrected gently. \"It wasn't.\" She took up her hand, her thumb caressing her knuckles. \"Do you know how long I've wanted to do that, Mary? Almost since the first time I met you. You're beautiful, and brave, and strong, and I want you.\" \n\nShe shook her head numbly, not daring to believe. That such a woman could say such things about her! \n\n\"I'm not.\" \n\n\"You are.\" Her head snapped up at the tone in Evey's voice. \"Listen to me,\" she continued. \"I don't know what happened to you, to make you think you are worthless, or dumb, or ugly, or weak. \n\n\"Regardless of who is saying it, I am not going to listen to a good woman being slandered any longer. Do you hear me, Mary Durham? I say you are lovable, and worthy of being loved. If you can't believe in yourself, believe in me.\" \n\nShe nodded her head, overcome by the fierce passion in her friend's words. \"Now,\" Evey went on more calmly. \"Let's go inside and warm up before we catch pneumonia. The turkey will do fine without us staring at it.\" \n\n***** \n\nThanksgiving dinner was like a feast out of one of the fairy tales in Rebecca's book. \n\nWhile the turkey was cooling after being hoisted out of the pot of boiling oil, Evey had hurried upstairs to, as she said, 'put on something less comfortable.' She had returned wearing a dark green dress that would have cost Mary a month's salary and a string of pearls that circled her slender throat like snow on a mountaintop. \n\nMary remembered that meal for the rest of her life. How the candles glowed against the polished wood of the dining room table. How Becca tried so hard to look grown-up, balanced on cushions that brought her high enough to eat. How Debbie had to sit on several copies of the Encyclopedia Britannica, since Evey refused to have her sit in Mary's lap as she first proposed. \n\nThey ate off fine white china, until they were stuffed, the turkey moist and tender, the mashed potatoes and gravy and all the other side dishes melting in their mouths. And all through the meal, Mary could feel Evey's eyes on her. She smiled at her, toying with the stem of her wineglass, until Mary blushed and looked down at her plate in embarrassed memory. \n\nAfter the last bite of pumpkin pie, which Mary had brought from the diner, the adults lingered over the meal, but the children were excused to watch TV. \n\n\"Oof,\" said Evey, finally staggering to her feet. \"Why did I eat so much?\" \n\nMary smiled and followed her example. The table looked like a war zone, with platters and trays of cooling food scattered all over. \"We better put this away before we sit back down, or it'll never get done.\" \n\nEvey gave a mock groan. \"Some day, girl, I'm going to have to teach you the benefits of being lazy.\" In defiance of her words, however, she started to carry the dishes to the kitchen. \n\nSoon the leftovers were safely stowed in the refrigerator, the table cleared, and the dirty dishes stuffed into the dishwasher, which chugged merrily away. Evey poured them each a last glass of wine, and they drifted into the living room. \n\nBecca greeted them with an excited smile on her face. \"Evey! Mommy! It's snowing!\" \n\n\"Is it?\" Mary looked out the picture window towards the backyard. True to her daughter's words, fat white flakes were spiraling down out of the dark sky. Caught in the light pouring through the window, they gave the backyard the look of a winter wonderland. Already most of the grass was covered. \n\n\"Can we go make a snowman?\" Becca asked eagerly. Beside her, little Debbie, who was too young to remember the previous winter, stared outside in open-mouthed wonder. \n\n\"In your good dress? No. It'll get all muddy and dirty, and besides, it's dark outside. But maybe we can do it tomorrow,\" she finished, catching her daughter's crestfallen look. \n\n\"I know what I'm going to do,\" Evey said, coming up behind her. \"I'm going to light a fire and play some Christmas music. Now that we've had our Thanksgiving dinner, it's officially Christmas season, isn't it? And we can sit here and talk and watch the snow come down.\" \n\nIn a few minutes a gas fire was lit in the stone fireplace, and Evey had loaded some CDs into her stereo. Haunting, beautiful music, played by a full orchestra, whispered through the room. The children sat down near the window, watching the snow fall, while Mary and Evey sat on the couch. \n\nMary curled up next to her friend, letting the warmth of her body soothe her. \"Thank you,\" she said quietly. \"This has been a wonderful day.\" \n\nShe felt Evey chuckle. \"It's not over yet. I think you should all sleep here tonight. I don't trust that old car of yours in bad weather. And the Snow Maid said we're supposed to get five, maybe six inches tonight.\" \n\nMary frowned. \"The who said what?\" \n\n\"That's right. You don't have a TV, do you? So you wouldn't know about the Snow Maid. She's a local thing here in Iowa. ",
        "\"A few years ago, the weatherman for KRNL, one of the TV stations here in town, was part of an expedition to Siberia. Some sort of exploration for oil or gas or something.\" She shrugged dismissively. \n\n\"Well, their chopper crashed and a bunch of them were killed. Only about a dozen survived, out of forty people. And their communications gear was smashed and most of their emergency supplies had been stolen. \n\n\"So the ones who were still alive ripped a door off the wreck and used it as a sled, pulling whatever they could scavenge over the ice, trying to reach safety. But it was cold and they were running out of food and they were sure they were all going to die. \n\n\"The weatherman, Bill Carter, got real bad frostbite in his feet and hands. He knew he was done for. So he walked out of the tent into the middle of a howling blizzard.\" Evey's voice was faintly awestruck. \"He sacrificed himself so his friends could live.\" \n\n\"What happened?\" \n\n\"Well, right after that, the ones who were left found a dead bear. So they had enough food for a while.\" Evey didn't sound like raw bear meat appealed to her too much. \"And they somehow found some shelter. Eventually they made contact with the outside world and were rescued. \n\n\"And then, about six months later, Bill Carter showed up in this tiny village on an island not too far from where he had left the others, with a gorgeous woman with him. I'm telling you, Mary, I'm not bad looking-\" \n\n\"You're a lot more than that,\" Mary put in. \n\n\"Why, thank you, honey,\" she drawled. \"But seriously, Mary, this woman looks like a sex-goddess come to life. Not too tall, but she's all blond hair and curves that would make a priest curse his vows. \n\n\"It seems that she found Bill right before he was about to die and nursed him back to health. And they fell in love. So when he came back to America she came with him. He calls her the Snow Maid, and whenever there's going to be a bad storm, he asks her how much snow we're going to get and he tells everyone on his weather report. It's cute. And she's usually right.\" \n\n\"That's a sweet story,\" Mary sighed. True love did sometimes happen, it seemed. \n\nFrom the window, there was a faint thump as something hit the floor. Rebecca sat up, rubbing her head. \"Ow,\" she said. \"I fell over.\" She blinked sleepily. \"I'm tired, Mommy.\" \n\n\"All right, sweetheart.\" Nearby, Debbie was curled up on her side, already asleep. She looked outside at the spinning snowflakes and considered the three -- no, four -- glasses of wine she had drunk. She really didn't feel like getting the girls back into their coats and driving home through the storm. \n\nEspecially when she had nothing to look forward to when she got there but a cold, hard, lonely bed. \n\n\"Does that offer still stand?\" she asked quietly. \"Because I'm not sure if you want to deal with my girls in the morning.\" \n\nIn answer, Evey kissed her cheek. \"You can't scare me.\" \n\n***** \n\nThey carried the girls upstairs and put them to bed in one of her spare bedrooms, using some of her old t-shirts as makeshift nightgowns for the girls. Evey was reduced to giggles at the sight of Rebecca holding up the hem, which reached down past her feet, as she brushed her teeth and washed her hands and face. \n\nShe watched as Mary kissed the girls goodnight and pulled the blanket over their quiet forms, the gesture filled with so much love and tenderness her heart nearly broke. \n\n\"I'm glad to be out of that dress,\" she said as they walked back downstairs. She had changed out of her dress and into a comfortable bathrobe she had bought back when she was still in college. \"I don't mind getting dressed up, but this is so much better on a cold night.\" \n\n\"You still look lovely,\" Mary said. She had borrowed a pair of sweatpants and a t-shirt, and looked, to Evey's eyes, like a college freshman ready for a long weekend. \n\n\"Thanks, babe,\" she said casually. \n\nShe sat on the couch with a relieved sigh, then sighed again, much more happily, as Mary snuggled up next to her. Her blood heated as her warm, pliant body curled against hers. \n\nShe raised a hand to capture a lock of her hair, as fine as silk. She ran it through her fingers over and over. \n\nClosing her eyes, she whispered a prayer. \n\n\"Where do you come from, Mary? And what are you running from?\" \n\nThe younger woman gasped, her body tensing beside her. Evey was very careful to keep her body calm and relaxed. Any effort to try to control her, she knew, would only result in Mary becoming more panicked. \n\n\"You don't have to tell me if you don't want,\" she said quietly. \"But I care for you a great deal. And if you want a future with me, I need to know the truth.\" \n\n\"I've never lied to you,\" the younger woman protested. \n\n\"I'm sure you haven't. But you've kept a lot hidden. And that's your right. I won't push you. But I'd like to know. Just to help you protect Rebecca and Deborah, if for no other reason.\" \n\nIn the firelight, she saw Mary's lips trembling. \"Will you...\" she whispered. \"Will you still be my friend after I tell you? Because...oh, God, Eveline!\" she covered her face with her hands. \"Some of it is awful.\" \n\n\"If you can bear to say it,\" she replied quietly, \"I can bear to hear it.\" \n\nMary smiled at her, though there was no happiness in the expression. \"You might change your mind, after you hear this.\" She suddenly looked much older than her true age, as if two or three decades had flashed by in an instant. \n\n\"I was born and raised in the compound, in Utah. Until a year and a half ago, I barely knew the outside world existed. \n\n\"My parents...I don't know. I caught a few hints, here and there, that they had been wealthy before they fell under his spell.\" \n\n\"Whose spell?\" \n\n\"Brother Ezekiel.\" She shuddered, a convulsive movement that seemed to wrench at her bones. \"That's what he called himself. The leader of the Church of the Holy Death and the Fiery Resurrection. A cult obsessed with sin and damnation. \n\n\"I don't know how he and my parents met. But by the time I was born they had sold all their property and moved into the compound. I was born there and raised there. Taught to follow their rules. That women were inferior creatures who should be completely under the control of men. That any disobedience was to be punished immediately. That the laws of man could not be set above the laws of God.\" \n\nShe smiled bitterly. \"And that only one man could interpret the laws of God: Brother Ezekiel Branford. He and his toadies ruled us all with an iron fist. The women were their toys, to be used, traded, and thrown away, like children with a set of action figures.\" \n\n\"My God.\" Evey swallowed sickly. \"Didn't anyone know? Neighbors? Or the police?\" \n\n\"There were no neighbors. We were up in the mountains, twenty miles away from the nearest paved road. \n\n\"I think the police knew. But they never did a damn thing. When you have the resources of dozens of converts to draw on, it's easy to find enough money to pay off the cops. And if someone does poke around too much, well, Utah is full of places where you can hide a corpse. I've seen it happen. \n\n\"Judith,\" she said to Evey's shocked silence. \"She made the mistake of fighting when Ezekiel gave her to Brother Jeremiah. They stoned her to death in the middle of the compound, and forced the women to watch.\" \n\n\"How did you escape?\" \n\nA long silence fell. \"Brother Ezekiel had his eyes on me since I was eleven years old,\" Mary said at last. \"He demanded my parents give me to him as a tithe on my fourteenth birthday. In payment, he said, of his allowing them to stay in the compound. \n\n\"I think my mother wanted to argue, but was afraid. My father,\" she said, her voice full of loathing, \"would have done anything that monster said at that point. Every day he woke up expecting Ezekiel to take up the mantle of lordship, and scour the nation clean with a fiery sword.\" Her lips curled in mocking contempt. \n\n\"So I left my parent's building and moved in with Ezekiel and the rest of his co-wives. And I lost my virginity to him less than an hour later. \n\n\"The next three years were a nightmare. I was forced to wait on that...that pig of a man like a slave. No humiliation was too small. I won't tell you all the things he made me do, or how many times he raped me. I tell you the truth, Eveline. I would rather be dead, and my children with me, than spend one more day under that man's roof. \n\n\"Rebecca was born when I was sixteen. I was pregnant again barely a year later, with Debbie. My mother went on and on about how fortunate I was to bear Ezekiel's children, until I wanted to claw her eyes out. \n\n\"And then one day, I heard Ezekiel talking with some of the other men.\" Her hand clutched Evey's, her fingers cold as ice. \"They were...they were deciding which of them Becca would go to when she was older! When she wasn't even out of diapers yet! \n\n\"I decided that day I would be dead before I let my baby live the life I had been forced to. I would cut Ezekiel's fat throat, I would burn the compound down around me, I would drive a car off a cliff with Becca beside me, but I would not let that happen. My children would grow up free. \n\n\"So a few nights later I packed some clothes, took enough money to last me a few months, stole a car, and drove away. The gate guards were asleep, I guess, or I would never have made it out. Ezekiel was always terrified of the FBI coming to get him, and had the place guarded like an armed camp.\" She snorted derisively. \"As if that sad bunch of losers could have held off anyone for more than five minutes. I still did some pretty good damage to the front end of the car when I rammed through the gate, though. \n\n\"I drove to Des Moines, paying for everything in cash. By the time I got here, I thought I had run far enough. I got an apartment, bought some furniture at the Salvation Army, and waited for Deborah to arrive. Once she did, I got a job waiting tables.\" She shrugged. \"The rest you know. I'm trying to get my high school equivalency certificate. When I do, I can get a better job. And my children will never be forced to endure what I did.\" Her voice grew harsh. \"And they will never know who their father is.\" \n\n\"My God,\" Eveline breathed. \"You incredible, amazing, wonderful woman.\" She sniffled, wiping at the tears which were running unashamedly down her cheeks. \"I thought you were just learning algebra? Fuck, Mary, for the last two years you've been learning how to be human. \n\n\"I'm sorry,\" she whispered, pulling her close in an embrace. \"I am so, so sorry. I thought...I thought you were someone who had made mistakes when you were younger. I never imagined... \n\n\"You are the bravest person I have ever met in my life.\" \n\nMary shook her head. \"I just wanted my babies to have a better life than I did.\" \n\n\"They will,\" Evey promised. \"And don't talk like your life is over. You're hardly a dried-up old maid right now. In fact,\" she went on, her hand cupping her cheek, \"you are the most beautiful woman I've ever seen.\" \n\n\"Really?\" Mary teased. \"What about that Snow Maid of yours?\" \n\n\"Well, she's not mine, more's the pity,\" Evey replied, playing along. \"And she's not here now, is she? And even if she was,\" she said, her voice dropping low, \"I'd still rather be with you. \n\n\"Will you be my lover, Mary?\" \n\nThe younger woman looked down at her lap, where her hands were clenched tight. \"I don't...\" she looked up, her cheeks hot with embarrassment. \"I don't know what to do.\" \n\n\"Of course you do,\" she corrected gently. She ran a hand up from her waist until it grazed the swelling mound of her breast. \"The body knows what it wants. Trust it. \n\n\"Upstairs?\" she asked. \"Or down here?\" \n\nMary glanced at the fireplace, and all at once Evey saw a thousand dreams reflected in her eyes. \"Oh,\" she said, waggling her eyebrows outrageously. \"It's like that, huh? Well, don't ever say I didn't have a romantic side.\" \n\nShe stood up and extended her hand. Mary took it, her fingers trembling in her grip. She guided her around the coffee table until they were in front of the fireplace. Kneeling on the bear-skin rug, she looked up at the blond-haired woman. A sense of wonder filled her, and also of nervousness. All of her previous lovers had been experienced. With Mary, she felt the weight of a vast responsibility settle on her shoulders. \n\nI have to do this right. All she has known is rape and abuse. \n\nHer turn. As long as she wants it will be her turn. \n\n\"I love you,\" she said softly. \"So don't be afraid. Just relax and take your time. We have all night long.\" \n\nWith a muffled thump, Mary's knees hit the rug. Knee to knee, breast to breast, face to face, their bodies were just a few inches away from each other. \n\n\"Oh, Eveline,\" she whispered. \"I love you, too.\" \n\nAnd Mary kissed her with a pent-up force that was like the breaking of a dam when the flood-waters burst through. \n\nPassionate but tender, innocent but wise, her mouth tasted of wine and desire. Her arms slipped around her, holding her gently. Evey groaned into her mouth as her hands moved down her back to knead her buttocks through the material of her bathrobe. Inside the robe, her body caught fire. Her nipples tightened into hard points on her chest, and her skin flushed, hot blood showing proof of her arousal. \n\nPatience, she told herself. She ached to take control, to pull off Mary's clothes, to feast on her delectable body, to spread her legs and lick her to climax. But she somehow knew that Mary needed time. Time to gather her courage. Time to trust her own body's needs. Time to become not just an object to be used for Evey's own pleasure, but a true partner. \n\nShe opened her mouth in invitation, and Mary caught her hint, licking her lips sweetly, then exploring her mouth with her tongue. Evey moaned, their breath mingling, as the darting tip drew along the insides of her lips. \n\nShe felt a tug at the belt of her robe, and looked down. Mary's hands were undoing the knot. As she looked back up, Mary dropped her eyes. \n\n\"Is this all right?\" she asked hesitantly. \"I want...\" Her voice faltered, then firmed as she looked up again. \"I want to see you naked. All of you.\" \n\nShe smiled into her eyes. \"Baby, that's exactly what I want.\" She sighed as the knot came loose and the warm glow of the fire caressed her fevered skin. Mary spread open her robe, her eyes widening. \n\n\"Oh, God, Eveline. You're so beautiful.\" Her throat worked as she swallowed. \"I knew, even when I was in the compound, that I didn't like men. That I wanted women. But I was taught that made me sinful. Evil. So I had to hide it. I had to pretend that I was like the other women. \n\n\"I did it so well Brother Ezekiel believed me. The names he used to call me. It got him...excited. Slut. Cunt. Whore.\" She began to shake, then buried her head in Eveline's shoulder and cried. \n\n\"Shhh,\" Evey said, stroking her back as the woman sobbed. \"You're with me now. You're safe. I'll never let anyone hurt you again.\" In her mind, she devised a thousand torments for the bastard who had tortured this remarkable woman, each more inventive and painful than the last. \n\nAfter a few minutes, Mary stopped shaking. Evey felt her lips kiss her shoulder, then drift lower. She caught her breath as one of her hands slid from her waist upwards toward her breast. Still hidden by the blond cloud of her hair, her head worked lower and lower, her mouth shyly exploring. \n\n\"That's it, baby,\" she encouraged her. She rocked back on her heels, then slowly sank to the rug, lying on her back. Her robe gaped open, and the firelight flickered over her skin. Mary came with her, drawn down by her hand on her wrist. Her lips moved toward Evey's aching, turgid nipple, then paused, making her want to scream. \n\nShe doesn't know, she reminded herself. \n\n\"Kiss it,\" she urged. \"You're making me feel so gooood.\" Her words turned into a groan of pleasure as Mary's mouth fastened on her throbbing nipple. She arched her back up and laced her hands around the back of Mary's neck, forcing more of her breast into her lover's hot, questing mouth. \n\nMary licked her, the pad of her tongue scraping across the tender skin of her aereolae. She squeezed her eyes shut as delicious feelings tore through her body. She could feel the heat growing between her legs, and the lips of her pussy getting hot and slippery as they were flooded with moisture. Almost unconsciously, she spread her thighs invitingly. \n\nMary hovered above her, moving her head from one breast to the other, while her hands slowly stroked and caressed her skin. She hefted the round weight of her breasts in her hands, inspecting them closely, sweetly touching them. It was so tender, so intimate, so pure and innocent that it made Evey want to cry. But under her quickly-learning touch was the drive of her desire. A desire that could not be quenched or set aside. A desire that demanded she satisfy her lover, and be satisfied in return. \n\nShe lifted her head. \"You've got gorgeous breasts, Evey.\" \n\n\"You don't think they're too big?\" She palmed one in one hand, smiling as the jiggling movement drew Mary's eyes. \n\nShe shook her head. \"No. I think they're beautiful.\" \n\n\"Good. One of my roommates in college used to say that more than a handful was wasted. But as far as I'm concerned, she was so full of crap she squeaked.\" She stroked her cheek, smiling as Mary leaned into the caress. \"What do you want to do next?\" \n\n\"I...\" she looked down at her. \"I want to make you feel good. To...\" \n\n\"To come? It's okay to say it, you know. It's not wrong.\" \n\nShe grinned wickedly. \"And I want to come, too.\" She grasped Mary's hand and placed it at her entrance, enjoying how her eyes widened as her fingers gingerly touched her lips for the first time. \n\n\"How do I...?\" \n\n\"Like this,\" she replied, easing her legs farther open. With the motion, her nether-lips parted. Almost without volition, one of Mary's fingers slipped into her channel, and she whimpered. \n\n\"Are you all right?\" \n\n\"No. I'm fantastic,\" she whispered. She pulled her wrist higher. \"Touch me. There. Softly. Stroke it. Can you feel it, darling? How wet I am for you? How hot you make me? Yes.\" She threw her head back as a jolt of pleasure raced through her. \"That's it. There's my button.\" Her thighs began to tremble. \n\nMary lay down beside her. In the firelight, her eyes were wide. She kissed her again, Evey moaning into her mouth, caught between the lovely feelings at her mouth and groin. She slowly pumped her hips up into Mary's hand, increasing and lowering the pressure on her clit. Her finger traced slow circles around it, then brushed across. \n\n\"Damn,\" she breathed, as Mary left her mouth and returned to suckling her breasts. \"You're good. So good. And you're only going to get better, sweetheart.\" \n\n\"I'm just trying to touch you how I like to be touched down there,\" Mary said. Evey filed that comment away for later use with a smile. With sudden confidence she rose above her. One hand stayed at her gates, rubbing her pearl of pleasure. The other cupped her breast, her thumb dancing around her turgid nipple. Her mouth went from breast to Evey's mouth to breast again, kissing wherever she could reach, even the line of her jaw, her ears, her nose, her shoulders. \n\n\"I want you to do it,\" she panted hoarsely. She scraped strands of her blond hair away from her flushed cheeks. \"I want you to come. I want you to come for me!\" \n\nThe pressure on her clit increased, becoming almost painful, and Evey squirmed away slightly. \n\n\"Easy,\" she whispered, catching Mary's crestfallen look. \"You can't force an orgasm, babe. Trust me on that one. Just keep it nice and slow and gentle, and you'll have me screaming your name in a few minutes. There we go,\" she cooed approvingly as Mary resumed her stroking, her fingers again light and loving on her most tender parts. ",
        "She felt her orgasm approaching. \"Oh, Mary,\" she whispered. \"I love you so much. I want to be with you forever. I want to...oh, crap. I'm coming, Mary. Coming. Coming for you,\" she groaned, her thighs clamping down on her lover's hand while her body shook with ecstatic release. The tremors went on and on, her climax almost frightening in its intensity. She trembled and gasped, grinding her groin helplessly into Mary's hand as she kissed her breasts, her lips pulling at her nipples while she whispered meaningless words of love and comfort. \n\nWhen she could finally think again, she opened her eyes to see Mary's face hovering above her. \"Was that all right?\" she asked. \n\nEvey laughed. \"All right?\" She pulled the younger woman down until they were lying side-by-side on the rug. \"Girl, if every other orgasm I had was a pop-gun, that was a tactical nuke. Damn,\" she said, catching her breath. That was awesome. But now we have a problem,\" she continued, frowning in mock-severity. \n\n\"What's that?\" \n\n\"I'm naked. And you're not. How the heck did that happen?\" \n\nMary blushed, her skin rosy in the firelight. She looked down at her hands. \"I wasn't sure you wanted to see me naked.\" \n\nEvey shook her head. How long would it take this woman's confidence to be restored? Years, probably. \"I've wanted to see you naked from the night we first met, sweetheart. \n\n\"Now, I know you've been hurt. And I know this is new to you. So if you aren't sure, we can just go upstairs and go to sleep and we'll do more when you're ready to do more. \n\n\"But I want to make you come, Mary. I want to kiss you and hold you and touch every beautiful inch of your body. And after I've given you the best orgasm you've ever had, I want to do it all over again. \n\n\"Will you let me do that for you, darling?\" \n\nThere was a long, pregnant pause. Evey watched her lover quietly, keeping her hands and body still and relaxed. At last Mary bit her lip and sat up. Evey held her breath as, with slow, dignified grace, Mary pulled the hem of the borrowed t-shirt up over her head, exposing the long-hidden treasures of her body. \n\nEvey swallowed, her mouth gone suddenly dry, as Mary slipped out of the dark blue sweatpants. Her skin glowed golden in the firelight, the flickering flames creating pools of light and shadow on her glorious body. \n\n\"Oh, sweet Jesus, Mary. You're so beautiful.\" She broke off, shaking her head. Hesitantly, she reached out her hand, still uncertain whether the blond-haired goddess in front of her would be able to put aside her fear and truly become her partner. \n\nMary came unhesitatingly to her arms, as if she had shed more than her clothes in that moment. Their lips locked, and the passion of the hour before was nothing compared to what she felt now. Her mouth was hot and insistent on hers, her tongue spearing in and out of her mouth, driving her desire to a feverish pitch. She laid back on the rug, her breasts, golden peaks without the slightest hint of sag, jutting arrogantly into the air of the room, her pink nipples pebble-hard in the dim light. \n\nWith a faint growl, Evey straddled her, her knees brushing Mary's trim thighs. \"God, your titties are beautiful,\" she said, leaning forward. She caught one up in each hand, bending her head as she gently mauled Mary's heaving mounds. She brushed her lips across the sweetly swelling curves, all the while watching for her lover's reactions, letting them guide her movements. \n\n\"Ah!\" Mary gasped, as Evey let her tongue dart out and flick across a swollen nipple. Her groin jerked up, pressing her nether-lips against Evey's for a delightful moment, then fell back. Her head lolled lazily from side to side. \n\n\"You like that, don't you, babe?\" Evey said. She mouthed her nipple for a split second, then raised up again, leaving a wet circle of saliva on her breast-peak shining in the firelight. \"Yes, I can see you do. Good. We're going to be awesome in bed together.\" She laid her hand on Mary's cheek, smiling when she turned her head to kiss her palm. Her clever tongue darted out to taste her skin. \"But look at you,\" she went on. \"It's ridiculous. There's no way you've had two kids. You don't have a stretch mark on your entire body.\" \n\n\"One of the benefits of having my babies young,\" Mary breathed, trembling as Evey's hands explored downwards from her chest to the vulnerable skin of her belly. Her brows pinched in a frown as Evey's fingers began to comb through the luxuriant golden fur on her pubis. \n\n\"Do you mind?\" she asked anxiously. \"I didn't know that some women...shave...down there,\" she said. She could hardly force the words past her trembling lips. Despite her reservations, her body overrode her inhibitions, and her thighs spread wide in an open invitation. Would Evey touch her there like she had done for her? Oh, she hoped so. \n\n\"Don't be silly,\" her lover replied. \"I love you. All of you. Even if you dyed your pubes green and braided them in a ponytail, I would still love you.\" She kissed her way down her body, from breasts to belly to her mons, the golden hair crinkling under her lips. \n\n\"Here,\" she said, pausing long enough to grab a pillow from the couch and tossing it to Mary, who caught it with a questioning look. \"Put your head on that. I want to be able to see your face.\" \n\n\"What?\" \n\n\"When I eat you,\" Evey said, ignoring the stunned look on Mary's face. She slipped down between Mary's thighs, raising them and gently pushing them apart. \"So beautiful,\" she sighed. \"Shhh,\" she continued, catching the half-terrified look on Mary's face. \"It's all right.\" \n\n\"All right?\" Mary said. She looked torn between laughter and tears. \"People actually...do that? I never believed it. I thought the girls at the diner were making it up.\" \n\n\"Oh, no,\" Evey replied. Her mouth was only inches away from Mary's cleft, and she turned her head so she could kiss the cream-colored flesh of her inner thighs. She did not fail to note how Mary jerked and bucked as her lips traced patterns of desire on her skin. \n\n\"Just relax. And enjoy it.\" \n\nShe opened her lips and covered Mary's labia with her mouth, kissing her with the same delicate ferocity as she did when they were kissing face to face. Her tongue reached out and lapped at Mary's cleft, moaning happily as she tasted her for the first time. She tasted of honey and salt and musk, and she thought she had never tasted anything so wonderful in her entire life. \n\n\"Oh...oh God,\" Mary keened, her voice high and breathless. Even as her mouth continued to work on her lover's loins, Evey looked up the trembling length of her body. Mary's eyes were pinched shut, but her mouth was curved in a joyous, disbelieving smile. Her hips lifted off the rug, allowing Evey to slide her hands under her body and cradle the lovely curves of her buttocks. \n\nMary floated in a haze of pure sensation. Her wildest imaginings had not prepared her for the pleasure she felt under Evey's touch. She moaned as she licked her, every stroke of her tongue seeming to swipe away a painful memory. No longer was her body a curse, something that brought unwanted attention to her, something to be reluctantly endured. Instead, it was an instrument, and on it, Evey played a song of love. \n\nShe draped her calves across Evey's back, wanting to touch her everywhere, barely able to stand the idea of ever being parted from her again. She spread her thighs wide, giving her access to that part of her which had always been a source of pain, but was now a font of unbelievable pleasure. \n\nWhen Evey touched her clitoris for the first time with her tongue, she thought her mind would explode. She screamed, a harsh, panting shriek, as lightning bolts of sensation rippled through her groin. When the feeling stopped, she opened blurry eyes to see her dark-haired friend looking at her worriedly. \n\n\"Too much?\" \n\n\"God no. Never too much. Just right,\" she gasped. \"Please get back down there. Please.\" \n\nEvey's lips curled smugly. \"Well,\" she teased. \"Since you said please, I will.\" \n\nShe bent her head once more, and Mary let her mind drift into ecstasy. She was dimly aware that she was playing with her breasts, her fingers pulling at her nipples, adding two more points of pleasure to a body and mind that already felt almost overloaded. Her entire body seemed to be on fire, and it was all she could do to keep herself from begging. Begging for more, more more. \n\nUnbelievably, Evey now seemed the be sucking on her button, her lips pulling on it softly, her tongue stroking back and forth, back and forth, until she thought she'd go mad. Her hips lifted up, each time a little quicker, a little higher, a little more urgent than the last. Evey held onto her rear, her long, clever fingers massaging her cheeks. \n\nShe felt her climax approach, not like a lightning bolt, but like a slow, heavy wave, that threatened to uproot everything in its path. She opened her eyes, gazing down into the face of her lover, whose eyes were focused on hers in an expression of love so tender, so pure, she thought her heart would break from sheer joy. She knew that after this night, this climax, nothing in her life would ever be the same. \n\n\"Evey,\" she gasped. \"Eveline. I'm going to-\" But then her words were caught off as the wave hit, obliterating all thought as she reached a crescendo of pleasure which made every other orgasm in her life look sad and pathetic. \n\nWhen she came back to herself at last, Evey was lying beside her, traces of her juices still glimmering on her lips. \n\n\"You make the cutest little squeaks when you come,\" she said, her eyes glinting merrily. \"Kind of like a happy hamster.\" \n\nGreatly daring, Mary leaned in and kissed her, lapping away the evidence of their lovemaking. With a happy sigh, Evey drew close, until their bodies were a tangled knot of arms and legs. Mary murmured, low in her throat, as she felt her loins press up against the firm muscle of Evey's thigh. \n\n\"And your pussy tastes wonderful,\" the older woman continued. \"What?\" she asked, catching the way her eyes turned away. \n\n\"That's the way he talked.\" she muttered. \n\nEvey nodded soberly. \"Let me guess,\" she said. She drew a deep breath, her mouth curling distastefully. \"My whore. My little cunt. My slut. Right?\" \n\nMary nodded. \n\n\"The difference is, I'm talking about what's yours. Not mine. And certainly not his. Your pussy,\" she said, covering it lovingly with her palm. \"Your breasts.\" She bent her head to kiss each one in turn. \"Your body. Yours. \n\n\"All I want to be,\" she finished, \"Is your lover. And have you be my beloved. My beautiful Mary.\" \n\n\"This is a dream,\" Mary said. Tears glimmered on her lashes. \"This can't be real. I'm too happy.\" \n\n\"Then it is a good dream, isn't it?\" Evey replied. She stood, extending an arm. \"Come on upstairs to bed, . We can think about tomorrow when tomorrow comes.\" \n\n***** \n\nMary woke slowly the next morning. She was sunk deep in a sinfully soft mattress, covered by cool satin sheets and a wonderfully thick and heavy down comforter. Had there ever been an awakening like this for her in her entire life? When she woke feeling warm and safe and protected, rather than having her heart hammering in terror or stressful worry? \n\nShe frowned, piecing together the memories of the previous evening. There had been a meal, she recalled. And several glasses of wine. And snow and a fire and- \n\nEvey! \n\nHer eyes snapped open. Lying next to her in the bed was her black-haired friend. \n\nNo. My lover. \n\nThe room was filled with sunshine, reflecting off the snow outside, bright enough to make her squint. \"Hello, love,\" Evey said quietly. Her lips curved in a gentle smile, and she raised a hand to trace the line of her eyebrows. \n\n\"Hi,\" Mary replied. She felt tongue-tied and shy. She knew she should be ashamed of what they had done the previous evening. But instead, her body was filled with a bone-deep lassitude, as if a dozen knots of tension had somehow melted away during the night. \n\n\"Regrets?\" the wonderful woman across from her asked. Her voice was light, but she caught an underlying thread of worry. \n\n\"Not at all. It was wonderful. Thank you.\" \n\n\"Good.\" The hand at her eyebrows slipped around behind her head, pulling her closer, gently insistent. She didn't fight it. Instead, she found herself leaning forward, her mouth opening for a sweet goodmorning kiss. \n\nIt was strange, she thought some minutes later, how what had once been unthinkable quickly became commonplace. A month ago, she would have sworn on a bible that she would never have sex again. Today, she had woken up naked in bed with an equally unclothed woman, with whom who she had spent a good portion of the previous evening having incredible sex. \n\n\"Why are you smiling?\" Evey asked, when they came up for breath at last. \n\n\"Lots of reasons,\" she replied, unwilling, for now, to voice all of her thoughts. \n\nEspecially when I an be doing something else with my mouth, she thought, and giggled at her audacity. \n\nGiving Evey one last kiss on the lips, she began a slow, gradual descent down her body, throwing the bedclothes back as she did so. Her mouth casually explored her neck, her shoulders, and her chest, paying a long, heartfelt homage to the twin wonders of her breasts. She teased, licked, and suckled Evey's rose-colored nipples to turgid fullness, then left them to explore the flat, golden curves of her belly. \n\n\"Tanning salon?\" she asked, pausing in her inspection of her lover's navel. \n\n\"Uh-huh,\" she panted. Mary could feel her legs shift, opening for her. The motion made her feel giddy with power. She dipped lower, entering the angle of Evey's thighs. She kissed the insides while her hands slid beneath her buttocks, cupping a well-toned cheek in each hand. She squeezed them firmly, smiling to herself as the older woman squirmed, groaning. \n\nWell, she thought. This looks different. She had never seen another woman's nether regions so close. Or at all, to be honest. Evey's lips were pink and puffy, and slightly parted. Deep within her crevice, Mary could see a hint of moisture, glimmering in the morning light like dewdrops on a summer morning. A faint, tantalizing aroma rose from her folds, making her mouth water. \n\nShe looked up, meeting Evey's eyes. \"You don't have to if you don't want,\" the dark-haired woman said. \"Some girls don't like to do it.\" \n\nShe shook her head. \"No. I want to.\" She surprised herself with how sure her own voice sounded. \"Just...promise you'll tell me, if I make a mistake? I don't like feeling dumb.\" \n\nOne long-fingered hand reached down and caught hers, twining together. \"Baby, when it's done with love, nothing can be a mistake.\" She smiled, making a dimple appear at the corner of her mouth. \"But I promise to tell you what feels good. And what feels even better.\" \n\n\"Okay.\" Trying to still the nervous flutter in her stomach, she leaned forward. \n\nHow do I kiss a woman there? She recalled the way Evey had pleasured her the night before, the memory still able to make her stomach feel delightfully squirmy. But she probably had lots of lovers before, and lots of time to practice. \n\nTentatively, she placed a close-mouth kiss on her warm lips. The flesh was slightly yielding, but not much different than the skin on other parts of her body. Encouraged, she kissed other places on her labia, smiling happily as Evey slowly writhed under her. \n\nHer legs spread wide, and Mary could now see deep into her channel. With one hand, she parted her lips, running her index finger up and down her womanly crevice. \n\n\"Aahhhh,\" her lover sighed. \"Good. I love how you touch me.\" \n\n\"Really?\" She looked up to make sure she wasn't being teased. \n\nEvey nodded. She was cupping her breasts in her hands, slowly kneading. \"You're careful. And gentle. Some people...\" She sighed. \"Some people get so excited they forget how sensitive those parts are.\" \n\nMary shook her head. \"I'll never do that to you.\" She thought of three years of pain at Brother Ezekiel's hands. No. I will never make someone have to deal with that. \n\nShe withdrew her finger, noting with interest how Evey's lips stayed open, even after it was gone. More confident now, she leaned forward, her kisses more passionate, and with a silent prayer, opened her mouth and tasted Evey's bounty for the first time. \n\nHer nectar exploded on her lips and tongue, the taste both indescribable and something she knew she had longed for her entire life. She found herself lapping rapidly at her cleft, her hands raising Evey's rear, pulling her closer to her mouth. A dim, muffled sound reached her ears, and she realized it was herself, humming in hunger as she swiped her tongue up and down her girlfriend's dripping crevice. She plunged it deep inside, unable to get enough of her, while above, Evey clutched the bedsheets and rocked back and forth, her skin turning a mottled red as her passion rose. \n\n\"Higher.\" Her voice was a keening whisper. \"My clit. Lick it, baby, before I lose my damn mind. God, you eat me so good.\" \n\nMary raised her head, peering closely. At the top of her cleft she saw the pink nubbin of Evey's clitoris, shining wetly in the morning sunlight. She moved forward, flicking it with the merest brush of her tongue-tip. Evey hissed, her hips jerking upward slightly. Mary felt a sudden weight on the top of her head. Evey's hands gently tangled in her blond tresses, pulling her close. \n\n\"Nope. You're not going to give me a little lick, then move away. Please, Mary. I need you.\" \n\nNot as badly as I need you, she thought. Still, she obeyed the unspoken command, opening her mouth wide and laving the pearl with a long sweep of her tongue. Over and over she licked her, trying to convey her feelings for her without words. Evey's salty taste grew in her mouth and nostrils, until it surrounded her like a sweet cloud. Her lover stopped talking, her breath coming in sharp, rapid pants, and her legs raised until her feet were resting on her back. \n\nSuddenly, Evey arched up into her, her pubis thrusting into her face. Her heels beat a rapid tattoo on her back like a drum. Just as suddenly, she collapsed, her breath coming hard and deep. When Mary dared to pull away, she saw her looking down at her with a deep, contented gaze. \n\n\"Did you...?\" \n\n\"I did.\" Her hand curved around her cheek, infinitely gentle. \n\n\"Why so quiet? Last night, you told me. Loudly.\" \n\n\"I didn't want to scare the kids. They might be awake by now. The last thing they need in a strange place is to hear someone screaming.\" \n\n\"Mmmmm.\" She murmured her agreement, and slid up the bed until she could gather her friend in an embrace. She sighed as Evey's hand cupped her breast. Her thumb slid over her nipple, and she bit her lip to keep from crying out. \n\nShe was about to suggest something that Evey could do when the sound of running steps sounded from outside the room. The door burst open wide, admitting Rebecca and Deborah. Like a pair of blondhaired kittens, they quickly climbed onto the bed, crawling forward for good-morning hugs and kisses. \n\nDisappointed, but not angry, she met Evey's eyes. The dark-haired woman, cradling Debbie, returned the glance, her loving smile promising all that she could possibly ask. \n\n***** \n\nThe next few weeks passed by in a haze of happiness and sex for both Mary and Evey. The younger woman bloomed like a rose in springtime, breaking loose from the gray, drab walls of her former life. Under Evey's careful watch, she slowly turned into the woman she should have been before abuse stunted her growth. Her eyes sparkled with joy, and she found herself singing for no reason while at work, eager to share her happiness. \n\nFor her part, Evey found herself falling more and more deeply under Mary's spell. Her simple pleasure in the most ordinary things, along with the extraordinary hunger of her mind, had her scrambling to keep up with her. Together with the children, they explored Des Moines by day, taking in the library, the small art museum, the state capitol, and everywhere else Mary's whim led. ",
        "But the nights were theirs. As if their first session of lovemaking had been the key which unlocked the door to Mary's desires, she showed a willingness to tumble into bed at a moment's notice, and not emerge until they were both gasping and replete. Despite the years of abuse she had endured, her hands and body were endlessly skilled and surprisingly inventive. Evey thought she could live with her the rest of her life and never grow tired. \n\nMeanwhile, the two girls had grown used to her presence, while Evey openly doted on them. Never one to grow mushy in the presence of children, she nevertheless was growing to love Becca and Debbie almost as much as she did Mary. Becca reminded her a lot of Mary in her more motherly moods, as she wanted to help everyone with what they were doing. Debbie, on the other hand, had a streak of independence a mile wide, and showed a surprising fondness for Evey. Perhaps there was something in the little girl which responded to Evey's own outspoken individuality. \n\n***** \n\n\"Merry Christmas,\" Evey said, smiling as Mary's door opened. \n\n\"Evey!\" Rebecca shouted, heading for her at warp speed. She hit her legs hard enough to stagger her, her little arms wrapping around her knees. \n\n\"Careful, sweetie.\" She grinned down at the curly-haired little moppet. \"Or I'll drop your presents.\" \n\n\"Eveline!\" Mary scolded her, even as she relived her of her bags and leaned in for a kiss, their lips rubbing over each other sensually. \"Didn't I tell you that you didn't have to get the girls anything?\" \n\n\"That sounds like something you might say,\" Evey agreed, smiling widely. She pulled off her coat. \"Good thing I wasn't paying attention, huh?\" \n\n\"You're going to spoil them,\" Mary sighed. \n\n\"No one was ever spoiled by love, Mary.\" She pulled her into a hug, her fingers brushing her hair back from her temple. Hidden from the children's view, her other hand squeezed her lover's breast, her thumb brushing over an erect nipple. It was only with difficulty that she kept from engaging in a prolonged make-out session. \n\nMustn't shock the kids, she thought, sighing regretfully. She took a deep breath. The small apartment was filled with holiday smells, from the pine scent emerging from the small, festively decorated Christmas tree in one corner to the tantalizing aroma of freshly baked cookies coming from the kitchen. \n\nThe girls were too excited about their presents for a meal to even be a possibility. They stood, side-byside, their dark blue eyes fixed on the bags Eveline had carried in. Evey and Mary waited as long as they dared, lingering over a glass of wine and a tray of treats. But they finally gave in and allowed the girls to open their presents. Wrapping paper flew over the living room, the sound of boxes being opened almost drowning out the sound of Christmas music playing on Mary's radio. \n\nEvey had paid enough attention to know that Mary didn't approve of too many toys for the girls, and also to know that they needed other things. So she kept her gifts simple. Books, good clothes they could both grow into, and a few simple toys. Becca, particularly, seemed entranced by the set of Legos, and had to be persuaded to leave them for later. \n\n\"Evey,\" Mary said, handing her a box wrapped in brightly-colored tissue paper. \"This is for you.\" \n\n\"You didn't have to buy me anything,\" she protested. \n\n\"I didn't.\" \n\n\"Oh? I didn't think you were the shoplifting type,\" she teased, opening the box. \"You better be careful, you know. Some of the stores - oh, Mary,\" she breathed. \n\nShe lifted it from the box, a swath of shimmering white cloth. It was neither a dress nor a negligee nor a nightgown, but some sort of divinely-inspired combination of the three. \n\n\"I made it for you,\" Mary said. In her eyes unshed tears glimmered. \"Will you put it on?\" \n\n\"Here?\" She slanted a look at the two children. \n\n\"They've seen me in less,\" Mary said. \"Even you, that night you stayed over last week.\" Her eyes twinkled as she remembered the way Debbie had entered the room with a full diaper, interrupting what had been a very pleasant session of lovemaking. \n\n\"All right,\" Evey said, taking the dare. She gathered up the bundle of cloth in her arms and made for the bathroom. \n\n***** \n\nShe was covered from chin to ankle, and had never felt so indecently dressed. \n\nMary was a genius, she decided. If most women hungered for a little black dress that could be worn to cocktail parties and wedding receptions and the like, her lover's little white dress spoke to every woman who wanted something that would be truly provocative in the bedroom. The cloth fit her like a second skin, and was so sheer that it was all but transparent. Gauzelike, it clung to every curve in her body, proclaiming her femininity with shameless exuberance, and making things like bras and panties seem hopelessly old-fashioned. As she examined herself in the mirror, her nipples peaked, poking at the cloth temptingly. \n\nShe imagined wearing this in the bedroom, and felt herself grow wet. Mary would kiss her, hold her, stroke her until she was light-headed with wanting, then peel it off and tumble into bed with her. She ran her hands from belly to breast, seeing how her flushing skin showed dimly through the thin material, then opened the door and made her way out, her face feeling hot enough to warm the entire room. \n\n\"Ooh, pretty,\" said little Debbie, her eyes wide in her round face. She toddled over to feel the dress, her hands thankfully clean. \n\n\"Very pretty,\" Mary agreed. Unseen by the children, their eyes met, promising. \n\n\"Well.\" Evey sat down, feeling somewhat ridiculous. \"I guess it's time I gave you your presents, Mary.\" \n\nThankfully the younger woman didn't protest. She handed her a small, flat box. When Mary opened it, she raised her face quizzically. \"What is it?\" \n\n\"It's a set of keys.\" \n\n\"I can see that.\" Her voice was unusually impatient. \"Keys to what?\" \n\n\"To my house,\" she replied softly. \n\n\"I love you, Mary Durham. And your children. You and the girls are welcome to move in with me at any time. \n\n\"Which leads me to this.\" Out of the depths of the bag, she pulled another, smaller box, covered in black velvet. Feeling vaguely ridiculous, she dropped to one knee. As she opened it, Mary's eyes grew wide in recognition of what was happening. \n\n\"Mary, will you marry me?\" \n\nTears spilled down her lover's cheeks, and her mouth opened and closed helplessly. As it did, Evey sat in a whirlwind of emotion, hope warring with fear. Would she say yes? Would she say no? \n\nGod, will she say something? \n\n\"Mommy?\" Rebecca was frowning up at Mary. \"Why are you crying?\" She looked over at Eveline suspiciously. \"Did Evey make you sad?\" \n\nMary sniffled and dragged an arm across her face, dashing away the tears. \"No, sweetheart,\" she whispered hoarsely. She gathered her child in a hug, squeezing her tight. \"Evey made me very, very happy. So happy it made me cry. \n\nShe knelt down so she could look her oldest child in the eye. \"Evey asked me to marry her. And for us to all live together in her house. Evey would be...\" she pressed her lips together, as if suppressing a hysterical laugh, \"Evey would be your mommy, too.\" \n\n\"I already have a mommy. You.\" \n\n\"Yes,\" she said gently. \"I would still be your mommy. And so would Evey. You and Debbie would have two mommies.\" \n\n\"Oh.\" Rebecca nodded. \"That's okay, then.\" She turned away and went back to looking at one of her new books. \n\n\"Mary?\" She tried to keep her voice quiet and undemanding. \n\n***** \n\n\"Evey, I-\" \n\nHer voice choked off, fear rising up around her like a cloud, as a hated voice she thought she had left far behind her roared from outside the apartment door. \n\n\"Mary Durham, you motherless fucking whore! Open this door right now, or I swear in holy Jesus' name you will be sorry you were ever born!\" \n\nOh God oh God oh God he's here. \n\nShe looked around the small living room. Herself, dressed in jeans and a sinfully tight blouse, worn to attract Evey. The children, their eyes wide in startlement, their expressions slowly turning to fear. Evey herself, clad in the gown she had made for her, every inch of it an outrage to someone like Brother Ezekiel. \n\nI have to protect them. \n\nShe lowered her voice, pitching it to carry above the sudden jarring thud as a heavy body slammed against the door, making it creak alarmingly. \"It's him,\" she said. \"Ezekiel.\" Evey's eyes widened in sudden understanding. \"Evey, call 911 now, and take the girls to my bedroom. I'll stay out here and slow him down.\" \n\n\"No.\" Her lover shook her head as another vicious thud echoed through the apartment. \"I'll stay here and help you.\" \n\n\"And who's going to protect the girls if he gets past us? Dammit, there's no time to argue. Get in my room and lock the door right now!\" \n\n***** \n\nGod, I haven't asked you for much the past few years. But if you could spare me a favor, I'd sure appreciate it. \n\nShe stood beside the door, trying to time the erratic slams as Ezekiel hurled his body against the frame. Above her, plaster drifted down in a thin white cloud, a bitter mimicry of the snow flurries outside. During one of the infrequent pauses in Ezekiel's bellowing, she could hear Eveline talking rapidly to the dispatcher. The children were eerily quiet, unsure of what was happening, but praise the Lord, not crying or hysterical. \n\nAnother massive thud. A bright-sounding crack echoed overhead, and Mary could see that the top of the door-frame was starting to splinter. \n\nAs quickly as she dared, she undid the deadbolt and threw the door open wide, catching Ezekiel in mid rush. Prepared to hit the door, he stumbled into the apartment, tripped over Mary's outflung leg, and fell to the ground with a crash. \n\nBefore he could regain his feet, Mary was on him, screaming in terrified fury, the shotgun held in hands clenched into bloodless claws. One, two, three, four times it came down, the well-oiled wooden stock smashing his lips, pulping his gums, and shattering his black, rotting teeth. A last, bludgeoning blow crushed his cheekbone. \n\nPanting, Mary reversed the gun, holding the barrel only a few inches away from her abuser's crotch. \n\n\"One move,\" she grated harshly. \"Make one fucking move, and I will blow you and your useless cock straight to hell. Do you understand me, Ezekiel? \n\n\"Do you understand me?\" she roared, when no answer was immediately forthcoming. Ezekiel finally gave a terrified nod, whimpering in pain. \n\n\"Evey?\" she called, never removing her gaze from his face. \"You can come out now.\" \n\n\"I thought you didn't like guns,\" her lover commented shakily as she came up beside her. Rebecca and Deborah trailed in her wake, their eyes wide. Becca held Debbie's hand protectively. \n\n\"I don't. But it doesn't mean I don't know how to use them. I bought this the day after I moved in here. I always hoped I'd never have to use it.\" \n\n\"So this is him, huh?\" Evey's voice was quiet. She eyed the prone figure on the floor distastefully. \"He doesn't look like much.\" \n\n\"He's not. Not anymore,\" she replied. A big, fat man in baggy clothes, a matted gray beard streaked with unappealing shades of brown, balding and instantly forgettable. Only the memories of the last five years made him a horror. How many times, she wondered. How many times had those memories risen out of the past, making her wake late at night, her body drenched with cold sweat, remembering the way his stinking, heaving bulk had pressed down on her, forcing her legs open. She wondered inanely if the blood on the carpet meant she would lose her security deposit. \n\n\"Mommy? Who is that?\" Rebecca asked. \n\n\"He's a bad man who wanted to hurt me and take you and Debbie away, Becca,\" she replied. The full truth could wait for later. \n\nHer daughter's eyebrows lowered in a frown. \"Go away, bad man,\" she said loudly, then kicked him in the side. \"You made my mommy scared. I don't like you.\" \n\n\"Whores.\" The word was mushy, but recognizable as Ezekiel pushed it past his bleeding lips. \"You're all whores. Your time will come.\" His eyes were wide, staring, and utterly mad. \"The righteous will purge the ungodly, and the wicked temptresses will pay for their sins. You will all pay, cunts and sluts and-\" \n\nThe cocking of the gun was very loud in the small room. \n\n\"One more word,\" Mary said conversationally, pulling the second hammer back. \"And I turn your head into a canoe.\" \n\nThen the police sirens sounded, and flashing lights lit up the gray Iowa sky. \n\n***** \n\nA few hours later they were brought in front of a police captain, a thin, tall woman with dark red hair turning gray. \n\n\"Miss Durham,\" she addressed them from behind her desk. \"Miss Kershaw. Have a seat.\" She nodded at a pair of chairs a few feet away. \"Pretty exciting Christmas Day, if I can say so,\" she said mildly. \n\nMary sat down apprehensively. \"I've been reading the complaint you lodged against...this Brother Ezekiel Branford,\" Captain Williamson went on. \"Who is also,\" she continued conversationally as Mary's eyes widened, \"known as Mortimer Snodgrass. And also known as Terrence O'Leary and Dr. Miguel Sanchez. When we took his prints the computer lit up like a damned Christmas tree. \n\n\"He has warrants out for his arrest in three states. Most of it is small-time stuff. Passing bad checks, a little fraud. Basically, he's a small-time con man.\" \n\n\"He-\" Eveline began heatedly, but Williamson held up a hand, cutting her off. \n\n\"But it seems he decided to go big-time. All of the stuff we have on him is over twenty years old. From your statement, I guess we can make a pretty good guess about where he's been, can't we?\" She snorted. \"He isn't the first man who started a religious following for the money and started to believe his own bullshit.\" \n\nMary nodded. \n\n\"So.\" The gray-haired woman leaned back in her chair. \"Just from the evidence at your apartment, we can nail him for breaking and entering, trespassing, assault, and three counts of attempted kidnapping. \n\n\"Also, he claims you're his wife and the children are his. Is that true?\" \n\n\"The children are mine,\" Mary gritted out from between clenched teeth. Even Evey, who knew her well, was surprised by the ferocity in her tone. \n\n\"Sorry,\" the older woman said apologetically. \"I meant biologically.\" When Mary nodded reluctantly, she gave a shark-toothed grin. \"Then we've got him for statutory rape as well. Because I can do math, Miss Durham, and you were way below the age of consent when that little girl of yours was conceived. \n\n\"Any way you slice it, he's going away from a long, long, time.\" She paused, then went on delicately. \"This marriage. Did anyone actually officiate at it?\" \n\nMary shook her head. \"Just him. He said I was his wife.\" She smiled painfully. \"I knew better enough than to argue, by that time.\" \n\n\"Which means it certainly wasn't legal. I bet if we look in the records of the state of Utah, you will never find any sort of marriage certificate. He has no legal hold on you. Or the children.\" Evey sighed in relief. \n\n\"There's more,\" Mary said quietly. \n\n\"More?\" \n\nMary began telling her story in a low voice. Before she had spoken for five minutes, Chief Williamson had stopped her and begun recording the conversation. She spoke for over an hour, going into far greater detail than she ever had with Evey. When pressed, she supplied dates and details, her quick mind recalling the horrors of her teenage years. \n\n\"Jesus Christ.\" Williamson's face was slack with horror and rage. \"If this is true...Christ, I'm going to have to bring in the Utah State Police, the feds, everyone. We're talking murder, and so many cases of rape and sexual abuse I don't want to think about it. Can you show me where this compound is?\" \n\nWith the help of the internet, Mary was able to point out the general area. \"Thanks. You two go on home now. It looks like you had plans that were interrupted, and you might as well enjoy the rest of the holiday.\" Her eyes twinkled wickedly, and Mary blushed despite herself. \"We'll be in touch regarding the trial, but if that sad sack of crap has any brains at all, he'll try to cut a plea-bargain.\" \n\n\"Excuse me,\" Mary said as they stood. \n\n\"Yes?\" \n\n\"Did he...did he ever say why he came looking for me?\" \n\nThe chief snorted. \"No. But I can guess. Tell me, Miss Durham, have you ever done any fishing?\" \n\n\"No.\" \n\n\"Well, go to any place where a bunch of old fishermen hang out. Before too long you'll be hearing stories about the one that got away. \n\n\"Sound familiar?\" \n\n***** \n\n\"You know, you never answered my question,\" Evey said, as they settled the girls into the old Buick Regal. She closed the rear door and walked towards her lover. A raw north wind whipped snow in delicate, lacy patterns across the blacktop of the parking lot. \n\n\"Didn't I? How silly of me. I guess I was kind of busy, seeing as how I was saving my family from a religious maniac.\" \n\nShe waved that away negligently. \"Yes, but it's not like it was really important. I mean, not compared with the rest of our lives. \n\n\"So here is how I see it. You and the girls can move in with me. Then we get married and throw my entire family into conniptions,\" she grinned. \n\n\"We make love three or four times a day. When we aren't doing that, you can finish up your high school work, and if you want, you can go to college right here in town. Drake has a really good College of Art and Design. And when they see some of the dress designs you've been doing on your own, I bet they'd snatch you up in a heartbeat.\" She made a gesture towards the dress she was still wearing, hidden underneath a calf-length coat. \n\n\"Then you'll open your own dress shop and we'll all live happily ever after.\" \n\n\"Yes,\" Mary laughed, the sound high, unfettered, and free. I'm free at last. With a smile, she reached for her lover, kissing her soundly, not caring who might see. In the whipping wind, their hair mingled together, light and dark. \n\nJust as their lives had been bound together. \n\nToday, and for the rest of their lives. \n\nThe End "
    ],
    "authorname": "Glaze72",
    "tags": [
        "lesbian romance",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/marys-innocent-passion"
}