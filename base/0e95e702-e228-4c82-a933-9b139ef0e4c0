{
    "title": "My Brother's Best Friend Ch. 04",
    "pages": [
        "We're all standing in the parking lot, I'm holding the remainder of the tiramisu birthday cake we all enjoyed at the end of our sushi feast.\n\n\"I hope it isn't inappropriate to say that Feline is coming over to my house tonight.\" Shawn isn't asking. He's just stating it in a most perfectly natural way. As casual and relaxed as he always is. More so, in fact. But definitely not flippant. He's respectful, yet also calm with a sure dominance just simmering below the surface. \"Just so no one gets worried.\" he adds.\n\nI look up at him in surprise. Instantly my face heats up.\n\n\"Shawn. Our daughter is 18 now. She can make her own decisions. But we value your respectful attitude. Thank you for that. We trust you with her. Hell, you've grown up together. It's not like you're a stranger!\" Dad clasps Shawn's hand in both of his and they shake.\n\n\"Thanks Chuck. I appreciate that.\" Shawn smiles.\n\n\"Thanks Dad.\" I manage to choke out.\n\n\"Baby Bear, I couldn't have chosen better myself. Mom and I were close to you and Shawn's age when we first met.\" Dad looks slightly behind him at Mom in her beautiful white sundress. Long, black curls blowing in the ocean breeze. Mom's bangin'. Even now at 42 years old she doesn't look a day over 35/36. She took care of herself. She runs every day. Every single day. For hours. And she swims too. That pool is kept pristine year round so she can indulge. She used to be pale like I was when she was my age, but over the years in the California sunshine she had developed a very light, beautiful tan that stayed with her even through the winter months.\n\nPat has this look of trepidation. Like he's not sure how he's supposed to react to Shawn's statement about me staying the night. Then he shrugs and smiles.\n\n\"Don't do anything I wouldn't.\" Pat chuckles and brings me into a tight hug.\n\n\"That's not much Patrick.\" I whisper into his ear, hugging him back.\n\nHe laughs and gets into the back of mom's Chevy SUV.\n\nMom kisses both my cheeks. She's holding back tears. She's so emotional. Like me. Or, I suppose I am like her.\n\n\"I love you baby. Have fun.\" she winks at me and then she surprises me and hugs Shawn as well.\n\nThey all pile into her vehicle and with a wave they are gone. And we are alone again.\n\n\"What do you wanna do?\" Shawn asks me, reaching over to play with one of my braids.\n\nMy throat is dry. I can't believe my parents just let me go to spend the night at a man's house! Is this what being an adult is like? Because I am enjoying this way too much.\n\n\"Ice cream.\" he states nodding. \"Yes. Copious amounts of it!\"\n\n\"Triple C?\" I ask.\n\n\"Is there a better place?\" he's grinning, knowing there really isn't even 1 other ice cream parlor besides the Cayucos Candy Counter in our tiny town.\n\n\"Nope.\" I say, shaking my head and we walk over to that beautiful bike of his.\n\nInside the Cayucos Candy Counter, or what us locals call Triple C, Shawn and I peruse the ice cream.\n\nI know exactly the flavour. It's been my favourite forever.\n\nWe step up to order and Shawn won't let me pay again, even though I had my wallet out first.\n\n\"No way babe.\" he winks at me. \"2 sugar cones please, 2 scoops for both. First one a scoop of cookie dough and one of chocolate fudge.\" Then he looks down at me and smiles this soft smile. \"And for the Birthday Girl 2 scoops of salted caramel.\"\n\nI recognize the cashier as a boy from my school. We were in the same graduating class. His name was James.\n\n\"Hey Feline. It's your birthday? You know, you get free toppings on your birthday.\" he nods, motioning to the board behind him and the FREE BIRTHDAY TOPPINGS scrawled in old 50's font in chalk.\n\n\"Hi James. Yea. Big 18, yunno.\" I say mockingly.\n\n\"Well Happy Birthday. What'll it be?\" James waits patiently.\n\n\"Caramel chunks. The really big ones.\" I say. Getting excited.\n\n\"You bet!\" and James goes off to make our cones.\n\n\"You remember!\" I grin up at Shawn. \"You remember my favourite ice cream??\"\n\n\"Heck ya, I mean, damn was there a weekend when we were kids that we didn't come here? You order the same thing Feline.\" Shawn regards me, his eyes laughing.\n\nI shrug. \"I like caramel.\"\n\n\"Me too. I'm stealing some of your caramel chunks.\" Shawn nods.\n\n\"NO WAY THOSE ARE MINE!\" I joke, standing up on tip toe for him to kiss me. \"I'm just kidding.\" I sigh as his lips taste mine just once.\n\n\"Little Wednesday Addams.\" he whispers, gently tugging one of my braids.\n\nAnd then our order is ready.\n\nWe're sitting outside on the bench looking across at the ocean. The sun has been down for awhile, but it's still really hot out. Our ice cream melting, down onto the pavement.\n\nI ask Shawn for some of his and he shares it without hesitation.\n\n\"Wow that chocolate fudge!\" I exclaim.\n\n\"Yea, she's pretty good.\" his eyes are twinkling as he adds, \"Not as good as you taste though baby.\"\n\nI am now completely red and turn away. Shawn laughs.\n\n\"I hope you never lose that.\" he muses, over his cone.\n\nWe finish our cones mostly in silence. I let Shawn have half of mine. I'm completely stuffed after that meal.\n\n\"Back to my place?\" he offers.\n\nI nod. Throwing my arms around him as he lowers his lips to mine.\n\nOn our way back to his house, Shawn stops at a corner store.\n\n\"Be right back, stay here, keep my motor running.\" he winks and departs.\n\nHe's only gone less than 2 minutes and emerges with a 711 bag, filled with what looks like candy and chips.\n\n\"God Shawn, you can eat!\" I say laughing.\n\n\"What? I'm a growing boy.\" he jokes.\n\nHe packs his bike bag and we're off again.\n\nBack at Shawn's he unloads his 711 loot in his gigantic steel and granite kitchen. All kinds of gummies, sours, beef jerky, chips, dip and a few different sodas. Including my personal fave: cherry coke. And then I see familiar packaging, I turn it over. It's a blue toothbrush.\n\nI glance up at Shawn.\n\n\"Can't have you neglecting your beautiful teeth. Especially after all this.\" he waves over the junk extravaganza on his granite counter top.\n\n\"You are...the sweetest most considerate man.\" I hug him.\n\n\"It's just a toothbrush babe.\" his low chuckle as he embraces me.\n\n\"No it's not.\" I sigh and squish my face into his chest, kissing him.\n\nShawn works around the kitchen grabbing bowls, emptying our junk into them. Peeling the lids off of dips, he throws everything onto a big wooden tray and I follow him into the living room.\n\nWe sit on the giant black leather couch and he's already into the bbq chips.\n\nI grab the remote and head over to Netflix. I chuck on the last episode that I can remember watching of Love, Death And Robots this morning.\n\nWe watch several episodes, freaking out over the good parts, gasping over the shocking bits and laughing our asses off at the funny.\n\nShawn can really pack it away. There's no bbq chips left, most of the ripple chips and dip is gone and now he's working on the beef jerky and sour gummies. I dig in with him and crack a cherry Coke.\n\nPeriodically we pull each other into a kiss that leaves us breathless and then turn back to the animations.\n\nEventually there's no more episodes and Shawn has this look when I turn to ask him what he wants to do now.\n\n\"I saw you admiring that bathtub.\" he smiles slyly.\n\n\"God, it's like you can read my mind Shawn.\" I laugh.\n\n\"Maybe I can.\" he winks at me and stands up.\n\n\"Want to? Giant bubble bath? I think I have some actual bubbly to go with that. Or dad does.\" he walks into the kitchen and down the stairs. I sit on the couch and munch several more sour gummies.\n\n'Heck ya, bubble bath with Shawn in that giant swimming pool of a tub.' I giggle to myself.\n\nWhen he comes back in he's got 2 champagne flutes and a bottle of fucking Cristal!!!\n\n\"Cristal?? Shawn!\" I exclaim.\n\n\"Ha, yea. Dad gets them all the time. Gifts yunno? Bankers, Stock Brokers...\" he shakes his head. \"There's like 2 dozen down there at least.\" he motions with his head to the stairs, where Shawn's father had a wine cellar and an outstanding amount of other liquor and a specific champagne refrigeration unit. I remember, when we were kids we snuck down there a few times. Just to look at it. Maybe that's why Shawn didn't really drink. His dad drank too much and often. He had confided to me several times growing up. Many nights Shawn would be awoken to his father, drunkenly yelling at no one, stumbling and then passing out in the hallway or the kitchen and just sleeping wherever he had fallen. Shawn had found his father in the most precarious situations all through elementary and the first year of high school. Often having to help his dad get up and get ready for work. Although that part stopped after Shawn threatened to leave in grade 8. His dad relegated his drinking to weekends after that.\n\n\"I don't know what to say!\" I exclaim. \"You sure he won't mind.\"\n\nShawn shakes his head again. \"Nah, no way. He'll probably be impressed that I had some at all.\"\n\n\"I don't know if I've ever seen you drink.\" I tell him.\n\n\"It's not something I indulge in often Kitten. I dunno. It doesn't do a lot for me.\" he shrugs.\n\n\"But now?\" I ask, standing and following him as he leads the way, again, down to his room and into his en suite.\n\n\"Now, with you? Yes.\"\n\nHe lays the bottle, the champagne flutes and my new toothbrush on the counter and strides over to the tub.\n\nIt's ultra modern and so huge, 5 people could be in there pretty comfortably. Shawn begins to fill it, reaching behind the faucet where there's a bunch of bubble bath concoctions that he dumps in. I spot some soaps and several hair care products and about a ton of epson salts.\n\nHe sees my gaze and explains it to me.\n\n\"Sore muscles. Epson salts are great for that.\"\n\n\"Ohhh. Ok.\" I understand now. \"My gymnast boyfriend.\"\n\n\"Ha, yea.\" he strides over to me and picks up the bottle of Cristal. Unwrapping it he places his thumbs under the cork and it pops loudly, startling me. He pours us each a glass and hands me one, picking his own up.\n\n\"To us.\" he smiles. \"And to your birthday Feline. I hope it was amazing.\"\n\n\"It was the best day I've ever had in my life.\" I whisper, and we clink glasses.\n\nIt takes my breath away, how tasty it is. Shawn's smiling at me as I giggle about the bubbles tickling my nose.\n\n\"WOW!\" I laugh. \"That's delicious!\"\n\n\"You're right it really is.\" he takes another sip and brings the bottle over to the tub and sits it on the side of the marble.\n\nThen he stands, and starts to take his clothes off, watching me, grinning that sideways boyish smile the whole time.\n\n'Ugh...he knows!' I think to myself. 'He knows what an effect he has on me. He's such a shit. Giving me a strip show.'\n\nHe does. He undresses slow, nothing flourishing, no big movements. Just undressing, but slowly, watching me. His eyes, following my own eyes, heating up my whole body.\n\nWhen he's done he stands there and leans against the wall separating his huge bathtub from the rest of the bathroom, slowly crossing those rounded, muscular arms across his chest. That broad, beautiful chest.\n\nI take him in, allowing my hungry gaze to just, devour him. Christ, he's a fucking Norwegian god. Odin, or Thor, No better than them even. He's like some diety from a fantasy novel! All that hair in deep, voluptuous waves. His face, angular and almost elven.\n\n\"Your turn Kitten.\" he's smirking, eyes filled with that smouldering animal passion, hovering just below the surface.\n\nI feel that cursed blush start to burn my cheeks and I push it down as best I can, turning so he can unzip me again. Which he does, slowly. Coming back around I cast my eyes down, not being able to bare the heat of his gaze without totally failing at going beet red.\n\nShawn leans back up against the wall, watching me. Crossing those arms again. Appraising me.\n\nI begin to disrobe.\n\n\"Feline. Look at me.\" his voice is gentle and warm. I flick my eyes up and over to him. \"Look at me when you do that, I want to see your beautiful blue eyes.\"\n\nI laugh nervously. He says the most lovely things to me.\n\n\"Shawn...\" I whisper, trailing off. But I do, I look into his eyes and a bravery I hadn't experienced yet takes hold.\n\nI slowly, languidly let the dress slide down my body and off my hips, pooling in a black pile of sheer fabrics and velvet. I kick it away then I turn, allowing him to look at me from the side as I lift my leg onto the counter and perch just my toes to hold me there, arching my whole body for his eyes. I slowly peel off my over knee socks as sexily as I can allow myself, without seeming ridiculous. Turning and giving him a view from both sides as I remove the semi sheer stockings.\n\nThen my lacy black bralette, which I dangle from my fingertips before dropping it onto the floor. His long, slow exhale of appreciation urges me on. I turn again, allowing him to view me completely from my back side and I bend, thrusting out my bottom like I've seen the girls on Instagram do and shimmy my black lace panties down my hips and over my thighs letting them slink down my calves I take one foot out and then, with the other, I quickly flick my panties up in the air and over in Shawn's direction. He catches them in one hand, just reaches out and snags them without looking away from me. He brings the garment to his nose, inhaling deeply before a deep growl escapes his throat. He casts the panties to the side and strides over to me, that member between his thighs now at FULL attention.\n\n\"Feline...\" he whispers hotly. \"Fuck me, you're the sexiest woman in this whole damn world.\" And then his hands are on me and his lips are on mine and I delve my tongue into his mouth as he groans.\n\nHe picks me up lovingly, and carries me over to the tub, now almost full and lays me in it. It's absolutely amazing. Better than I imagined. The water is so warm and nice, the bubbles completely envelope me. And then he's climbing in opposite me and the water splashes up and over the sides and all over the floor.\n\nI laugh.\n\n\"SHAWN! Shit the floor.\"\n\n\"Heated, and there's a drain there, see.\" he jerks his thumb over to the corner of the floor where the water was pooling and draining now.\n\n\"O! That's why the floor is slightly slanted.\" I say.\n\n\"Exactly. Smart design that.\" he nods. \"It'll be dry by the time we get out.\"\n\nThen he pours us more champagne.\n\nWe soak together, just touching and sipping bubbly and smiling at one another. He takes my feet, one at a time, and massages them expertly. If I had any tension, it's long gone by the time he takes my toes and sucks on them again, each one of them. Making me giggle and laugh and squirm, trying to get away and finally sighing, resigning myself to the strange but pleasurable sensation.\n\n\"You've got the cutest little feet. I should call you Little Foot.\" he smiles, kissing the instep to my arch, recalling a beloved childhood movie of my Dad's that he showed all of us, Shawn Pat and I, over and over.\n\n\"Yours are beautiful Shawn. I'd never thought I'd say that about someones feet.\" I reach under the water and stroke one of his.\n\n\"Baby...\" he sighs.\n\n\"Like that?\" I smile.\n\n\"O hell yea. I like everything you do to me.\"\n\nI take his long, narrow foot in my hands and massage like he just did to me.\n\n\"I'm not very strong.\" I say.\n\n\"Your hands feel amazing. Don't you worry about it.\"\n\nI rub him down, both feet, admiring how solid he is. Every single little tendon and bone in his feet are pronounced, and surrounded in strong muscle. I even try tasting his little toe. It's clean and no jagged skin or anything anywhere. Not unpleasant by any means. I giggle when he throws his head back and groans.\n\n\"Fuck yes.\" he whispers.\n\nI take my time, stroking my viking. All the way up his calves, feeling those muscles, I turn to take another sip of champagne and Shawn refills my glass.\n\nI massage his legs, all the way, running my fingers down every cord, every hill and valley. Feeling his powerful anatomy under my hands. He flexes under the water and hangs his head back over the tub, letting his hair dangle all the way to the floor.\n\nSlowly I creep my way up. Eventually I am seated across his thighs and I reach over and grasp his giant erection.\n\n\"Shiiiiit.\" he hisses, sitting up to meet his eyes with mine.\n\nI slide forward. Until only that member of his is between us. I'm hit with a sudden idea. And I pray that he'll like it. I have a feeling he will.\n\nI take a sip of champagne and I lean up and grasp my lover by his hair gently. He smiles up at me as my face hovers over his. And then I kiss him, letting the champagne release from my mouth and slowly flow into his.\n\nHis moan is immediate and excited. He gulps the liquid down and explores my mouth with his tongue.\n\n\"Fuck!\" he exclaims, pulling back, eyes dark and filled with passion.\n\n\"Do that again!\" he says excitedly.\n\nI take another sip, and bring him in for a kiss rising up high, so my face is above his.\n\nWe kiss deeply, sharing the bubbling alcohol between us. Shawn positively devours my mouth with his and I'll admit, I'm not holding anything back.\n\nFinally we part and both of us are panting.\n\n\"Good Lord Feline.\" Shawn breathes. \"What made you think of that?\"\n\n\"I don't know!\" I smile. \"It just came to me, and I didn't think you'd mind.\"\n\n\"Mind?!\" he grasps me to him, and I can feel just how hard he is. \"That was the sexiest thing you ever could have done. Wow.\" he's breathless as he holds me and I rub his large member as he grinds it into my belly.\n\n\"I want you.\" I tell him. \"Right here.\"\n\nHe nods, seemingly still in amazement at what I just did with the champagne kiss.\n\nI rise up, and he holds his cock for me with one hand and my body with the other. Slowly I descend upon him.\n\nImmediately I begin to ride, waves of water wash over the side of the tub splashing onto the floor and down into the drain near a corner of the room.\n\nShawn is holding one of my breasts with one hand and kneading my ass with another. He pinches the nipple and I cry out in pleasure.\n\nWe make love in that tub and neither of us lasts long. Only moments after I reach my crisis Shawn does too. We cry out together and spiral back down to earth, holding each other tightly.\n\nI'm laying across him, he's still inside me, my cheek on his shoulder. My braids float in the water left in the tub as we pant in post orgasmic bliss.\n\nHe's running just his finger tips all up and down my back, making me shiver and sigh.\n\n\"I fucking love you.\" he whispers.\n\n\"Shawn...\" I sit up to look into those gorgeous eyes of his. \"That was incredible. God, I love you too.\"\n\nHe pulls me in for another kiss.\n\nEventually we are pruney. And about half the water went over the sides during our lovemaking anyways. Shawn helps me out of the tub and wraps me in a huge, fluffy, navy blue housecoat. It smells like him. He wraps a giant gray bath sheet around his hips and we go into his room and plunk down on his bed, laying back, legs dangling over the sides, smiling at each other.\n\n\"I was gonna go to the gym tomorrow. I go real early. But you can stay here. All snug in bed. Or I can drop you at home. Whatever you want Kitten.\"\n\n\"I want to come watch you.\" I say, grinning.\n\nHe laughs. \"Baby I'm up at 4:00. I go for a run and then I'm gone by 5:00.\"\n\n\"Don't care. We'll get coffee. I've been wanting to watch you do your magic again for so long.\" I greedily explore his arms with my fingers, gripping and stroking him.\n\n\"You really like that hey?\" he turns to look at me as we lay beside each other in his bed.\n\n\"Shawn, are you kidding? What you do is like, gravity defying, vidya game shit. It's like watching someone deny the natural rules of the universe and flipping it the bird at the same time!\" I tell him excitedly.\n\nHe chuckles and turns red.\n\n\"You're blushing.\" I smirk at him.\n\n\"Christ, I am!\" he shouts. \"You're rubbing off on me Feline.\" he chucks me under the chin.",
        "Eventually we are brushing our teeth together. After, I watch him braid his hair loosely into one long, platinum rope for bed. Just like I do! Except mine are already in braids.\n\nI wash my panties in his sink and hang them to dry for tomorrow. He smiles at that. Tells me I'm cute.\n\n\"Guess we did get them pretty dirty today.\" he winks at me.\n\n\"Yea we did.\" I smile, reminiscing.\n\n\"Want to sleep in one of my shirts?\" he offers.\n\n\"I want to sleep naked with you.\" I tell him.\n\n\"O baby.\" he embraces me, kissing me. \"You're amazing. I hoped you'd say something like that.\"\n\nHe pulls back his soft duvet blanket and top sheet and I slide in, him after me.\n\nI didn't realize how tired I was. I yawn.\n\n\"Me too.\" he stretches, yawning. \"Damn. Big day.\" he says sleepily.\n\nHe's spooning me again. And kissing my shoulder. I don't remember much after that moment.\n\nI smell something delicious. I know that smell.\n\n\"Coffee.\" I whisper.\n\n\"Right here coffee fiend.\" it's Shawn, fully dressed in a blue, over size UC Berkeley hoodie and grey jogging pants. His hair is damp and his skin is glowing. He must have just come back from his run. In his hands are two giant black mugs.\n\n\"O shit! What time is it?\" I sit up and scrub sleep from my eyes.\n\n\"It's real early babe. No worries you got tons of time if you still want to come with. I won't be hurt if you don't.\" he offers me the mug as I sit up.\n\nI take it and thank him.\n\n\"No prob.\" he sits on the edge of the bed, grinning at me over his coffee.\n\n\"I'm coming. I wouldn't miss it!\" I tell him excitedly, taking a sip. \"Mocha?\" I smile.\n\n\"Yup. Dad's got a Keurig. Not as good as your espresso though.\" he winks at me.\n\n\"Nothing's as good as espresso. But this is great!\" I take another gulp, already feeling more awake. \"You went for your run?\"\n\n\"Yup got back about 5 minutes ago.\" he nods, taking a sip of his hot beverage.\n\n\"I promised Pat we'd go surfing later today. He texted me last night. Told me I better not ditch.\" he smirks. \"That cool with you?\"\n\n\"Of course!\" I say. \"I should probably get some coding done anyways. I promised the guild I'd have the site done next week.\"\n\n\"Guild?\" he raises an eyebrow at me.\n\nI feel my face start to burn but I force it down.\n\n\"Yea, it's one of the groups I game with. We got good enough to have a presence in a few tournaments. I'm designing our site. It's just a hobby. Nothing serious.\" I explain.\n\n\"You'll have to show me sometime.\" he reaches over and fingers one of my braids, now all messy and coming apart at the seams.\n\n\"OK but, it might bore you to death.\" I chuckle.\n\n\"Nothing you do bores me to death Kitten.\" and then he leans over and kisses me.\n\nI'm strapped in and on Shawn's bike. Back in my dress. Braids gone, just my hair loose, past my butt and care free. Rippling from being caught up in plaits for a day. The breakfast of the rest of the fruit from our picnic and toast still lingering as I lick my lips. Shawn comes out of the house with his backpack, he almost forgot it. He shrugs it on and gets on the bike.\n\nThe gymnastics and dance studio is across town. About 8 minutes from Shawn's and directly on the way to my place. He's got special status and has his own key card to get in. The place is pitch black before he flicks on the lights.\n\nA huge practice space illuminates. Suddenly I am so excited I can hardly contain myself. I get to watch Shawn use that incredible body of his. My own Olympics presentation. All for me!\n\n\"Find a spot to squat. Here's your coffee.\" Shawn hands me my triple shot caramel latte from Starbucks. I hate supporting rivals to Luna's but they are the only one that's open at 5 in the morning. He gives me a gentle kiss but I want more. I pull him into me, hungrily.\n\nHis moan as I enter his mouth with my tongue makes me giggle.\n\n\"Damn easy tiger!\" he laughs, his eyes so bright and full of mischief. \"Shit, maybe I'll have to take you up against the wall in the showers later.\" he winks at me.\n\n\"Promises promises.\" I smile back.\n\n\"You're so dang precious.\" he chucks me under the chin and marches off to change.\n\nWhen he emerges he's in the shortest of shorts, dark blue, and the same University of Berkeley bright blue hoodie. Bare feet. Hot, he's so hot!\n\nHe starts off just warming up. Jogging around the entire gym, each lap increasing in speed. He does all kinds of lunges and scissor kicks as he does his laps. Then he goes backwards, which if it was anyone else would look ridiculous, but Shawn excels at backwards running like it's his second nature. Then he stands and does a myriad of stationary stretches, nothing in his body is neglected. Everything is warmed up and stretched out. He's laying down now, stretching out his legs. And then he just casually does the splits, BOTH WAYS! Like it's nothing!\n\nI'm sipping my latte and just sighing inwardly about how lucky I am getting to watch this. And this is just the warm up!\n\nThen he's up and jumping, as high as he can standing in one spot. Bringing his legs up as tight as he can against himself. Leaping higher and higher. Eventually he performs a series of different kicks, working out every muscle, then he moves into handsprings, then cartwheels then tucks, walking on his hands backwards, forwards, then he's standing, stretching his arms out and rolling backwards in the most elegant way I've ever seen! Just backwards roll and up and standing in one fluid motion, over and over. And then leaping forward onto his hands and flipping backwards, in more flawless one move motions. Backflips and forward flips in a succession. Two handed and one handed. Both in place and across the padded floor. He makes me dizzy.\n\nHe takes his time. Over an hour. He really gets limbered up. And I am about to find out why as he pulls out one of those insane running backflips and then flipping back to his front in one go! He moves so fast I almost can't see what he's doing. It's really incredible.\n\nFinally, he removes his hoodie, now quite sweaty, and underneath is a tight tank top. He's ready.\n\nI watch him cycle through the vault first. Getting his hands super dusty in chalk.\n\nShawn takes a breath and then sprints towards the vault, throwing himself onto the top of it he does some kind of 540 twist in the air and then lands. Back to the running start and then all over again. Over and over, sprinting towards that vault equipment and launching himself impossibly high in the air. Flying, in some kind of death defying spin and then landing. Not all his landings are perfect. Far from it. But the landings aren't really what I am here for anyways. Even though I know that makes or breaks his score in competitions. I'm here to see what that amazing body is capable of.\n\nNext, I watch Shawn on the pommel horse, his arms look impossibly ripped as he works himself over and around that simple piece of equipment. At points doing hand stands, his legs stretched right into the splits and then swinging down impossibly fast, making me worry about that beautiful unit between his legs but he never sacks himself. Thank goodness! I cringe, wondering if it ever happened and how often.\n\nThe way he dismounts, nothing short of glorious.\n\nAfter the pommel horse I watch my lover stride over to begin some floor exercises. I don't know why but I love watching him dusting his feet and hands in that white chalk. There's just something nostalgic about how I used to watch my brother and him do those motions since I could remember.\n\nShawn stands and takes a big breath, then he's sprinting across the padded floor and he leaps, impossibly high and spins almost stationary in the air, landing perfectly as keeps running. I clap like crazy and Shawn pauses, looks over his shoulder at me and winks. And then he's sprinting and back flipping, about 7 times in a row and then back flipping the other way and then spinning in the air and landing as he performs a tumble and another back flip and then he's on his hands, doing incredible spread leg moves like on the pommel horse but he's on the floor. If memory serves I think they are called flaires.\n\nHis form, the way he stands arms straight in between transitioning into moves, it just looks so strong and capable and perfect.\n\nLastly he sprints fast and then executes some kind of insane triple spin in the air lands, backflips and executes it again! Landing perfectly with his feet together and arms outstretched.\n\nHoly shit that was beautiful!\n\nShawn immediately moves over to the parallel bars and dusts his hands once again. The fluid movement within which he leaps, grasps the bars flips his legs basically against his face and then up and over the bars, laying them in a splits makes me shake my head. The human body is an incredible thing when it is honed to perfection like his. It's amazing. I can't imagine being able to do the things he does. But then I remember, Shawn's been in gymnastics since he was 4. My entire lifetime!\n\nWatching him pull out these insane one handed, upside down spins on the bars is mesmerizing. He swings from one end of the bars to exact opposite side and then seems to huck himself up far above and spin elegantly catching himself on his way down and then swinging back up and over. God I could watch this all day!\n\nHe spends a good deal of time on the bars. And I think I fall in love with him even more, just watching him. He's incredible.\n\nEventually he dismounts and grips his knees and breathes for a few moments. Then he's standing and walking over to me.\n\nI've just watched Shawn roll through every piece of equipment in the practice space as smooth as silk. Every move seems effortless. It's absolutely intense what he is capable of! Every piece of equipment except my personal favourite, the rings, is covered in chalk dust.\n\n\"Having fun?\" he asks, trying to dust the chalk off his hands.\n\nI nod, vigorously, eyes wide.\n\n\"I want to get up on the rings for you baby but, there's no one here to supply the lift for me to grab them.\"\n\nMy face falls, O how I wanted to see him on those rings again. Shitty.\n\nAnd then someone comes strolling through the doors. Shawn's old coach who trained him for the Olympics!\n\n\"Well shit. Hello Shawn! I didn't know you were back in town already!\" Shawn and his coach give each other one of those from the side bro hugs.\n\n\"Hey Coach Eleany! How are you?\" Shawn's beautiful smile.\n\n\"O can't complain can't complain. I see you still insist on that lions mane.\" Coach laughs, gesturing to Shawn's hair, ponytailed tightly at the base of his neck, thickly braided, folded twice and fastened around the entire thing with several elastic bands.\n\n\"Yea, well, you never would have allowed it when I was on the team.\" Shawn retorts, crossing his arms in that calm, sure way of his.\n\n\"Hell no I wouldn't have. I still don't understand how you get anything done with it.\" Coach is shaking his head.\n\n\"It's all what you get used to Coach.\" Shawn affirms, giving one nod.\n\nThen Mr. Eleany sees me, over on the side, sipping my coffee.\n\n\"Feline? Feline Jaxton?\" Coach Eleany smiles, surprised to see me here.\n\nHe remembers me! I used to come to every practice of Patrick's and Shawn's. Every single one! I wanted to be a supportive sister for Pat. He was my best friend after all. Him and Shawn.\n\nPatrick's gotten out of the gymnastics game entirely. Preferring boards of every kind and his weight sets. He became sponsored recently even! DC, which is how I got my shoes. California surf boards, and also O'Neil.\n\nI get up, placing my coffee down on the floor and walk over to the men.\n\n\"Hi Mr. Eleany.\" I smile as he leans in and gives me a hug.\n\nAfter Coach Eleany releases me, Shawn comes beside me and takes my hand gently, with his, all covered in chalk.\n\n\"Shawn?\" Mr. Eleany has a wry smile. \"Well, it's about damn time you two!\" he laughs.\n\n\"God was it that obvious?\" Shawn's nervously rubbing his shoulder. Chuckling.\n\n\"Too obvious.\" Mr. Eleany states, smiling.\n\nWe have a good laugh at that.\n\n\"I was just about to leave but, well, you're here and Feline really wants to see me on the rings. Whaddya say Coach?\"\n\n\"Let's get you up there.\" Coach drops his bag and they walk over to the middle of the practice space, where those rings are. High up in the air.\n\nShawn dusts his hands and spits on them and then dusts them some more and spits on them again. A thing I had seen him and my brother do countless times. He's swinging his arms as he approaches the rings.\n\nThen he stands under them perfectly straight. He leaps as his coach hoists him up and he grasps the rings in both his powerful hands.\n\nI wish I knew all the names to the moves that gymnasts use when they are on their equipment. I would sound a lot cooler when I try to describe what he does. You'd think I would, after all the years I watched Pat and Shawn, here, at practice. I suppose my mind was on other things.\n\nShawn's powerful body flies through the air and then is still. Upside down, and still. He draws his legs out in front of him slowly, perfectly straight, pointing his toes, showing just how powerful he really is as he drops back down and up. Down and up and around. Over and over, making me dizzy. And then he's turning and turning, holding incredible poses, in between rotations: backwards, forwards, upside down, right side up, at one point he's a blur and then upside down in that move I now know the term of, arms outstretched. The Maltese Cross. He holds it for several seconds. And from there his epic spinning dismount blows my mind!\n\nI stand as he perfectly plants both his feet on the ground, no stumbling whatsoever, then he straightens, arms outstretched in victory.\n\n\"YEA!\" I yell as Shawn punches the air triumphantly.\n\n\"Shit yea even!\" Shawn shouts as I scream and clap like crazy. Even Coach Eleany's eyes are practically bulging. He gives several slow claps. And he was not prone to be an overly praise giving man.\n\nShawn comes over to me and hoists me up onto his shoulder.\n\n\"Like that?!\" he says excitedly.\n\n\"AGAIN!\" I cry.\n\nHe chuckles and lets me down from his shoulder, planting a kiss on my lips on the way down.\n\n\"That's enough excitement for you today.\" he announces, and then he leans in, and whispers in my ear. \"We'll have to wash your panties again.\"\n\nI can feel my cheeks turn fire red.\n\nWe're back on Shawn's bike and headed to my place. The sun is up now and shining. It's probably 7 in the morning when we come into the house. All is quiet. Mom and Dad like to sleep in on the weekends.\n\nI head to the kitchen and start to prepare an epic breakfast for my Olympic medallist.\n\nHe sits on one of the stools at the island, peeling an orange and watching me fry him ham, eggs over easy, sausages and warming up some of the crepes from yesterday that were still left over. I slice 2 whole avocados onto Shawn's plate, sprinkling them with pink rock salt and lemon juice. Then I lay 4 large pieces of ham, 4 eggs over easy, and 6 breakfast sausages on the plate next to the avocado. A plate of neatly folded crepes with coconut whip cream and Mom's stewed nectarines that somehow avoided being devoured by Pat last night, I assemble on a smaller plate. In a bowl I throw fresh blueberries, raspberries and I slice up a mango and several strawberries. I slide all three dishes over to Shawn.\n\n\"You're beautiful.\" he says leaning his face on his palm, who's elbow is propped up on the quartz island, flecked with myka. He glances down at what I made him and then back up at me. \"Thank you baby.\"\n\nI stand there awkwardly and try not to look at the ground. \"You're welcome.\" I manage to get out.\n\nHe pulls his phone out of his pocket and takes a picture of what I just prepared as I'm pouring him fresh squeezed apple juice from our juicer.\n\nI laugh. \"What are you doing?\"\n\n\"It's laid out so nice. I dunno. Don't you like pictures of pretty food?\" he shows me a folder on his phone, they're all images of meals he's enjoyed. He uses only a couple of different filters, making all the dishes have this coherent vibe that is instantly appealing.\n\n\"These are really good Shawn. You should start a curated Instagram!\" I smile.\n\n\"O yea?\" he gives me a kiss on my cheek as I come over beside him. My own plate substantially smaller in portion. \"This is amazing. Just what I need. Seriously, thanks so much!\"\n\nHe dives in.\n\n\"Yea! Lots of people like that kind of thing. I'll show you later.\" I tell him as he nods at me, over a mouthful of fruit. I hear a creak and look up at the top of the stairs, Patrick starts to descend.\n\n\"I knew I smelled something good!\" he smiles, coming into the kitchen.\n\n\"I made you some.\" I tell him, gesturing towards the crepes I gave the same treatment to as Shawn's and mine. And then the plate of meat and eggs and lastly a bowl of berries and ataulfo mango chunks. \"I knew your nose would wake you up.\"\n\n\"You're sweet Cat. Thanks.\" Patrick grins. \"Best sister ever.\"\n\n\"I was wondering what you were doing with that third meal.\" Shawn chuckles.\n\n\"Hey Shawn.\" Pat comes over and Shawn and he bump fists.\n\nPatrick regards us for a minute, then flashes that stunning Jaxton smile, the one he inherited from Dad, before he comes over to sit on the other side of me and digs in.\n\nAfter breakfast Pat and Shawn waste no time changing into board shorts. I get a sweet kiss and a hug from my lover before he heads out to the back of the seldom used carriage house where they kept their boards.\n\nShawn never took his home. What was the point? The beach was here. His house was built into the granite formations on the cliff wall completely opposite Cayucos Pier and Estero Bay, way into town. Close to where my dad went and climbed the rock faces on his days off.\n\nI head upstairs and turn on my computer tower I built all myself. Top of the line. Only a few months old now. The RGB controller I got for my fans is pretty fun. I love the soft glow it gives off in the dark. My old beast still lays on the floor beside the desk. I really should turn it into a server or something.\n\n\"Hey guys.\" I say as I log in to Call of Duty.\n\n\"Shit, it's Black Cat! Where have you been doll?\" feisty1's voice comes through first. And then a succession of my friends, all wondering where I was.\n\n\"Well it was my birthday and...\" all kinds of voices shouting happy birthday to me. I won't lie, it felt really good to hear. Several ask me how old I am now.\n\n\"18.\" I say.\n\n\"Oooooo shit! You're just a kid!\" capYurAss laughs, his voice always sounds reassuring. Fatherly. He was by far the oldest of our group. In his 50's. \"Here I was thinking you were in your 20's at least.\"\n\n\"Nope.\" I chuckle. \"Fooled you!\" I laugh.\n\n\"Ready to frag some bitches B.C.?\" Fang5 asks. Her voice always sounds so husky. Sexy. Like she smokes three packs a day but still looks 20. \"You n me and cappy, triangle formation.\"\n\n\"You guys don't even know.\" I grin.\n\n\"Lock n load, ladies, lock n load.\" feisty1 grinds out, I can hear his chuckle.\n\nI actually managed to get up at some point this morning, telling the guys I'll be back in 30, and washed my face, did my skin care, brushed and flossed. I combed out my crazy spiral curls, now almost grown past my ass and used leave in conditioning oils in my hair and coiled all of it in a bun on the crown of my head.\n\nI also changed clothes: a simple Calvin Klein lightly lined, triangle bralette and matching low hipster panties in the same microfibre material. Black. Super slippery and soft. Shawn will like this.\n\nOver the Calvin's I had on an old, faded black Skinny Puppy Too Dark Park t shirt that I had modified myself into a slashed tank top that hugged my body. I had found the shirt among Aunt Lacey's stuff that she had left behind in the house when she passed away. Turns out she was big into Industrial music in the late 80's and early 90's and spent a fair amount of time in Vancouver, B.C. Canada getting to know the members of Skinny Puppy and several other local acts from the area like Frontline Assembly. I had read her diaries countless times throughout the years, all those glossy pictures of her and her friends and bands she had seen, taped into the pages. Aunt Lacey all in black, dyed black hair spiked and backcombed to perfection, and her lips, black like tar with extravagant eyeliner wings framing her eyes. In later photos she had a little nose ring. She was so adorable.",
        "The pictures were like a time capsule. And I treasured them. She took 100's. I still have her old analogue SLR. I should learn how to use it. Those personal journals and her extensive, underground goth and industrial vinyl collection set the tone for my entire youth. She was directly responsible for my turning to the goth side. I thought I had stumbled upon the worlds best kept secret when I snuck into the attic alone and started exploring old chests and boxes of Auntie's stuff when I was 9 or 10. Dad never had the heart to give away or throw out any of her things. And for that I would be eternally grateful! She was his twin sister after all. I know he still misses her.\n\nLastly, to complete my outfit, I had tossed on a pair of cut-off, simple, overdyed black jean shorts. Tight on the hips, ass and tummy but nice and loose around the thighs. Made for Shawn's hand to glide up there...shit...I gotta pay attention to what I'm doing!\n\nI become completely lost in game. Laughing maniacally as I total another poor sap from the opposing side. My team is kicking ass and taking names.\n\n\"NO FUCKING PRISONERS!\" I shout as Fang5 and capYurAss flank me.\n\n\"Birthday girl on a roll!\" feisty1 exclaims.\n\n\"Implying she's not always on a roll.\" xD3usVultx, another of my team mates chimes in.\n\n\"Guys...\" I groan, embarrassed.\n\n\"Someone's gonna come up on your ass Black Cat. I'm coming back almost in range. Tighten up and watch that blind spot. I'm about to... SHIT! Campers!\" I hear HEX666 shout as I swing around in game and frag the asshole waiting for my team member and I.\n\n\"Fuck you, bitch ass! You're outta here!\" I chuckle.\n\n\"Fuck! Thanks!\" HEX666 breathes.\n\nI glance up at the clock to check the time and see Shawn for a brief moment reflected in my monitor. I gasp and spin around in my chair.\n\n\"SHAWN!\" I shout. \"Geezuz you scared the shit outta me!\"\n\nHe just smirks, leaning against one of the posts to my bed, those large and defined arms, folded in a relaxed, confident manner.\n\n\"Shawn? YOU got a GUY over there B.C.? That your brother's friend?\" Fang5...I've confessed to her in late night private messaging, more than once, my attraction to Shawn.\n\n\"The same. I gotta go guys.\"\n\n\"Wait! Black Cat! What gives?\" HEX666 exclaims, his voice sounds almost pouting.\n\n\"I'll be back later.\" and hit the escape, quitting my game, peeling my headset off.\n\n\"Geezuz Shawn...don't you knock?\" I smile over at him.\n\n\"I did. A couple times. You were balls deep in that game.\" he smiles and comes over to me, peering over my shoulder. \"You're damn good at that. Ah ok. I see. Call of Duty. Nice!\"\n\n\"How...how long were you there?\" I stammer, staring at the floor.\n\n\"Long enough. My babe is a tournament champ.\" he nods down at me. \"Hot.\" he grins and then kneels down and kisses me.\n\n\"I thought it was WOW?\" he asks.\n\n\"Only on Saturdays. I still love it, I'm just really into FPS's right now.\"\n\n\"You'd give the guys a run for their money downstairs.\" Shawn tells me.\n\n\"PC's a lot different than console. But I play downstairs with Dad pretty often.\"\n\n\"I'd like to see their faces if they knew about this.\" he says, jerking his chin in the direction of my monitor. \"Why don't you ever play with us Kitten?\" Shawn's always expressed worry about my lack of IRL friends, preferring the company of Pat and Shawn and all the guys. And why I would never ask for the controller when all Pat's friends were over.\n\n\"I guess I just never wanted any of the guys to hate me.\" I say quietly.\n\n\"Fuck that, fuck the guys, this shit is lit. I want to watch you wipe the floor with Dale, or hell, Jonathan. Jon could stand to lose a peg or two.\" then he adds, \"Take those bitches down.\" he mashes a fist into his palm, smiling.\n\nI giggle like crazy and he stands, taking me with him and gives me one of his sensual, full body hugs that I'm getting so used to in the best way.\n\nWhen he releases me he looks at the clock.\n\n\"It's 1. Aren't you hungry? God I could eat a horse!\" his hair is still dripping and I play with the ends as I hold his hand.\n\n\"You're even more tan.\" I tell him, reaching out for his waist. He doesn't have a shirt on again and I wish he'd never wear one. \"And warm.\"\n\n\"Come on downstairs, your mom and dad made lunch.\" he takes my hand and leads me.\n\n\"Hi Baby Bear.\" Dad smiles, reading the Sunday paper as I come in. \"Shawn.\"\n\n\"You know you can read that on your tablet now Dad.\" I tell him, kissing his cheek.\n\n\"Meh....technology...\" he waves. \"That's your department.\"\n\n\"Dad you're a machinist!\" I laugh.\n\n\"True that.\" he grins and folds his newspaper up as Mom brings in 2 platters of delicious food.\n\nI'm a coffee fiend. Shawn's right. I head over to the espresso machine and quickly prepare and pull 3 perfect shots of espresso for Shawn, Patrick and I and I make them into iced vanilla latte's and then bring them over to the table.\n\nMom sits down and smiles at me. A knowing smile. I turn 80 shades of red.\n\nI slide Shawn and Pat's lattes over to them and they both take a big sip.\n\n\"Mmmmm.\" Shawn moans. \"Yes. That's nice. Thanks Kitten.\"\n\n\"Good pull, Cat.\" Patrick raises his cup to me.\n\nMom and Dad made a huge pile of grilled lemon chicken breasts with those little potatoes I love, roasted in oil and tossed with fresh rosemary from our small garden out the side of the house. There's a spinach salad on the side and a fruit salad for desert.\n\n\"Wow.\" I smile. \"This looks great Mom. Dad.\"\n\n\"Glad you're happy honey.\" Dad tells me.\n\nWe all talk and laugh and make light jokes as I sit between my brother and his best friend, Shawn, the man I adore. Mom is across from me and Dad is beside her. I love this. I love our little family.\n\nLunch is amazing. I swear Shawn eats like 6 chicken breasts. I'd ask where he puts it all but, well, it's damn obvious after what I saw this morning. Never mind a full day of surfing.\n\nAnd then the doorbell rings. And a steady stream of my brother and Shawn's friends float through the door, lining up their boards in the foyer. They'll play vidya games until the next tide. Then they'll all go out and surf again. It's incredible the energy they all have.\n\nAfter lunch Shawn helps me clean up and put away the dishwasher dishes. Dad announces that he and Mom are going to the grocery store and they'll be back later and not to burn the house down.\n\n'Yes!' I think to myself. 'Off the hook with having to go with Patrick!'\n\nI'm just finishing my latte when Shawn leans over and whispers in my ear.\n\n\"Wanna go cuddle in your room?\" his eyes are all mischief.\n\n\"You don't want to play vidya with the guys?\" I ask, suddenly curious about the ideas behind the way he was looking at me just now.\n\n\"I'd rather play with you.\" he grins, and leans in and takes a handful of my ass in both hands and gently squeezes.\n\nI race through the kitchen, putting everything away and wiping the counters and taking Shawn's hand to lead him upstairs.\n\nSuddenly a loud \"OHHHHH SHIT!\" erupts from the living room. \"He's whipped now guys.\" and \"Shawn's ditching\" and \"Nice knowing you buddy!\" all come from the living room as they stare over at us going up the stairs.\n\n\"I am.\" Shawn nods agreeing, as he turns around and faces the living room full of obnoxious surfers and announces. \"Completely whipped.\" he grins, crossing his arms over his chest and leaning into the banister going up the stairs. \"And you would be too if your girlfriend was Feline Jaxton. Sorry not sorry Pat.\"\n\nPat just smiles and shakes his head and the guys rip on Shawn as he turns, takes my hand, and lets me lead the way. I don't even think he hears them as we lock eyes half way up the stairs.\n\nShawn gently pushes me up against the wall at the top of the landing, where no eyes can pry. He takes my hands, linking our fingers together, and brings them up above my head and presses them into the wall above me and holds me there like that. That boyishly mischievous grin, as he looks at me. Then he leans in and gives my throat one long lick. All the way from my collarbone, up to my left earlobe. Immediately my body is on fire!\n\n\"Shawn.\" I whisper.\n\n\"MmHmm.\" He's nibbling on an earlobe, still holding me pressed up against the wall. He slides a thigh between mine and I melt.\n\n\"I can't move.\" I tug just slightly with my hands and his tighten their grip on me. Keeping me there. I'm only too happy to be his captive.\n\n\"Mmmm Yes Kitten. You're so helpless right now aren't you? I could do all manner of delicious things to that beautiful body and you wouldn't be able to stop me.\" he relinquishes my ear lobe from his teeth and then slides back just slightly, so he can look at me, a fiendish grin on his lips.\n\nI giggle nervously and nod. A flush of a different kind, colouring my cheeks.\n\nShawn regards me for a moment and then lets my hands down from the wall. I am almost disappointed before he takes them both in one of his and tows me into my room, shutting the door softly. Locking it.\n\nHe strides over to my bed and I have trouble keeping up as he pulls me along with him. Then he spins me around until my back is to his front, he keeps hold of both my wrists in one of his huge hands.\n\n\"You like this? Little Feline?\" he whispers.\n\nI nod vigorously.\n\nHe bites down where my throat meets my shoulder, then my shoulder itself and back again. With his other hand he possessively grips my hip and pulls me flush into him. I don't even try to struggle, I am enjoying this too much.\n\nThen all of a sudden, he releases me.\n\nI turn to question him and he just jerks his head to the bed.\n\n\"On the bed Kitty Cat.\"\n\nI instantly obey, wondering what he's going to do next!\n\nI kneel on my bed, unsure what to do with my myself. I feel awkward and try to just stop my hands from fidgeting by placing them both, one on each thigh, waiting.\n\n\"Yes. I like this pose. Very pretty Kitten. Try turning the palms up, lay the back of your hands on your thighs.\" Shawn suggests\n\nI do. And kind of laugh. Feeling a bit silly. But liking this game.\n\nAnd then Shawn is on the bed with me, towering above me, simply standing there, as I sit back on my haunches, legs apart, palms upturned on my thighs not daring to move. Straining my neck to look up at him.\n\nHe just stands there above me and watches me. I search his eyes, wondering what he's waiting for. What he's thinking.\n\nAnd then he grips my shoulders and kneels down in front of me and begins more delicious biting. I start to skim my hands up Shawn's chest but he grips them and brings them back down to my thighs, palms up.\n\n\"Stay there.\" he growls.\n\nI gulp and hold myself in this pose of obedience. Subservience. I am already a mess downstairs. O sweet angels in heaven help me!\n\nShawn nibbles, nips and bites. Everywhere. Pillaging my mouth in kisses between those bites. Kneading my breasts in the most voluptuous way. I'm lost in sensation when he takes my wrists in one of his hands and my waist in another and guides me down so that now I'm laying on my back. Immediately he pulls my hands above my head and pins them there in one of his, allowing his other hand to roam. Which it does, slipping inside my tight tank top and then inside my bralette, cupping my left breast and rolling the nipple into a hard peak. And then going to my right and just pinching it, very lightly and slightly tugging. I gasp and moan and squirm under Shawn's sweet assault. Briefly I wish for a blindfold and then quickly file that away for later.\n\nThen he rolls me to my side and slips down in the bed behind me, gripping my hip and pulling me into him, my wrists still completely trapped in his other hand. I can feel him, pressed up against me like a steel pipe, and I slightly rotate my hips against him. I'm rewarded by a long moan from behind me and a bite on my shoulder that he holds forever.\n\nI actually try to pull my hands free, just to see if I can. Big mistake. His hand on my wrists becomes vice like. Unmovable. Absolutely no way I am freeing myself from his grip. I begin to struggle in earnest, testing him. Wanting to feel the power of his beautiful body.\n\n\"Feline, do you want me to let you go?\" his concerned tone has me glancing back at him, as best I can.\n\n\"NO!\" I squeak out. \"Please no.\" I whisper.\n\nAnd that animalistic growl that I love so much as one hand tightens around my wrists and then his other hand opens my jeans in one try and slips down into my panties.\n\n\"Baby girl,\" Shawn chuckles then. \"You're already soaking.\" he drags out over my exposed ear.\n\n\"Shawn!\" I cry when his fingertips find the spot.\n\n\"Shhhhh...you don't want the guys to hear you do you?\" then he laughs low and adds \"If Pat wasn't here, I might just make sure they hear you. Hear you scream my name.\"\n\nI gasp as his words find their target, right to my sex, making me squeeze my thighs tight and writhe against Shawn's hand.\n\n\"Baby...\" his soft sigh. \"I love how wet you get, you know that? It's amazing.\"\n\nI'm trying my best to be quiet. But those incessant fingers, the way he is holding my wrists, his love bites all over my throat, shoulder and down my arm are driving me over the edge.\n\n\"Ohh. O Shawn!\" I try to reach out to grip something but Shawn holds me tight.\n\n\"Kitten, you going to come?\" when I nod his already deep voice lowers another octave. \"Come for me.\" it is a command. Not a request.\n\nI don't have a choice, even if I wanted to resist the climax his fingers were coaxing out of me, I wouldn't have been able to. I most definitely did not want to resist! God, why would I?\n\nHis steady rhythm combined with the strength of his grip on my wrists and the biting and licking sends me over the top.\n\nI try so hard to be quiet. I come on my lovers fingers, HARD. I turn my head into my blankets to muffle my cries as I shake and tremble and moan and gyrate my hips back and forth like a mad woman. All I hear is Shawn's low chuckle and his \"Yes, baby! Yes!\" before my whole world gets turned upside down and I climax, all at once, into Shawn's palm.\n\nEventually Shawn loosens his grip on my wrists and allows me to pull free. Immediately I take one of his hands and lace my fingers with his and grip hard. The aftermath of the pleasure I just experienced still coursing through me. I tremble in his arms, moaning.\n\n\"Damn. That was good hey?\" He's kissing my shoulder and my neck and melting my body into his.\n\nI nod and finally I can breathe.\n\n\"THANK YOU!\" I sigh at last and lay limp on my bed, while Shawn spoons me and caresses me, somehow finding more space between us and closing the gaps wherever he finds them.\n\n\"NO baby. Thank YOU.\" Shawn removes his digits from me and pets me there. Holding me, gently helping bring me back to reality. And then he pulls his hand out completely and closes my shorts back up.\n\nI smile and sigh.\n\nWe're quiet a long time. Shawn just squeezing me to him, running his hand up and down my side, pulling my hip into him, over and over. It's the most comforting feeling. The way he possessively owns me with his hands. I feel so safe. And deeply loved.\n\nI don't know how it happened. But I drift off into sleep.\n\n~Shawn~\n\nI'm laying behind my girl. Feline Jaxton. Goddamn. How did this happen again?\n\nShe's sleeping in my arms and I can't remember a moment when I felt so peaceful. I turn her carefully, so as not to wake her.\n\nShe's on her back now so I can gaze down at her ethereal beauty. And she is a beauty! I'm fucking biased. Sure as shit. But Christ, you'd have to be a blind fool not to just even admit, this is a perfectly symmetrical face. Delicately feminine. Angelic even. Pure. Soft.\n\nLips, so plush and flushed pink. Always so pink, so dark sometimes they appear almost red against all that milky white flesh of hers. Full lips. Lips made for kissing. Kissing for hours. Alabaster pale skin, a beautiful contrast to those lips. Completely blemish free, she's been gifted with fantastic skin, my Feline. I never remember her going through the awkward horrible teenage acne phase that Pat and I were subjected to. God, am I ever glad that's over and done with. It's been a few years now.\n\nI continue to gaze down at Feline. I decide to take those chopsticks out of her hair and I gently uncoil the heavy bun that sat on the crown of her head. Spreading all those midnight black spirals out around her, she looks like some kind of sprite. Or a forest dryad. Diana, the huntress.\n\nThose cheeks, that flush so easily, even now carry the hue of post orgasmic bliss. So soft, I reach up to stroke one. She smiles slightly in her sleep. Her cheeks are like velvet.\n\nHer little body is so classically curvaceous in the most feminine way possible. Venus de who? Clamshell pose what? Hips that won't quit with thighs so perfectly firm and just slightly plump. Just enough to give that already incredibly small waist, an even smaller appearance. That little midsection, that my hands can easily encompass between them. And have. Many times now. Good God those hips!\n\nI wish I could get a look at those incredible breasts right now. They are a perfect palmful. No more than that. I think about her small, very light pink nipples sitting on top of her delicate, milky white mounds and it makes me want to strip her clothes off right now so I can devour her with my eyes, and my mouth.\n\nShe's perfect. I'd never been so attracted to a girl before. I couldn't get her out of my mind these last 6 years. Especially since going away to university. That's been killing me. At least when I was still in high school, I saw her every day.\n\nWatching Feline grow up and blossom into this amazing young woman has been an exercise in mostly heart ache. But now, now that she was in my arms and mine, all joy. Nothing but.\n\nI love her. I really love her! Getting to finally reveal everything I have felt for her for years feels like magic. Forbidden magic, that I shouldn't be allowed to wield.\n\nShe feels so right in my arms. Like she was meant only for me, and I, only for her.\n\nI allow my thoughts to turn into all kinds of fantasies of her and I moving in together, buying our first house together, getting married, her, pregnant with my child and those perfect, soft, curvaceous hips, cradling him safely inside her body. Hips made for carrying children. And for my hands, that I'm all too willing to grip and hold and softly stroke.\n\nI already know I can't go another semester without her. I can't leave Feline again for another whole year. I want her to come back with me at the end of August!\n\nI have time. We have all summer. 2 whole months. I want her to say yes to moving in with me by summers end. That's my goal. Because I'm not going without her. I'm just not.\n\nI know I will feel terrible about taking her from Chuck and Kristine. I hate to leave them all alone in this place for 9 or so months at a time. But it's only a 3 hour drive from 'Frisco to Cayucos. My babe has that sweet ride now. She could come and go whenever she wanted. Maybe, she'd want to attend college or university if she came and experienced it with Pat and I. I know she said she was finished with school, now that she's graduated, but her knowledge of computers and technology both hardware and software is incredible. She's wasting her talent here in this small town. Frisco is where it's at for tech. She'd absolutely lose her mind there. Shit, I'd never see her again!\n\nI chuckle, quietly, to myself.\n\nHer soft, rhythmic breathing and warm body invites me in and eventually I pull a blanket over us from the foot of her bed and drift into sleep with my love.\n\n~ to be continued ~"
    ],
    "authorname": "LV4206",
    "tags": [
        "sexy surfer gymnast guy",
        "romance",
        "love",
        "loving sex",
        "romantic sex",
        "positive love story",
        "sweet beautiful geeky goth girl",
        "gigantic tub sex",
        "playing with dominance",
        "playing with submission"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/my-brothers-best-friend-ch-04"
}