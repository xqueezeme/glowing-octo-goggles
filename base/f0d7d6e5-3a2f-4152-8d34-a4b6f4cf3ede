{
    "title": "Voyeur gets Voyeured",
    "pages": [
        "It's 4:17 AM and I'm lying here in bed on my back pitching tent listening to the Loons on the lake tuning up for the day. It's mid-summer and the transition from total darkness to the gray of early dawn has started but sunrise is still forty-five minutes away. I should roll over and go back to sleep but like so many mornings I'm reliving the best and worst day of my life and one part flows mercilessly into the other. One can't be relived without the other. They are contiguous in my mind because they happened that way in reality. I love to relive the first part but hate the fact that the second part, the worst part, concludes the memory and causes me to start the day in a melancholy mood. If anyone asks me if I want the good news or the bad news first I always choose the bad news first so the news would end on the upbeat.\n\nI'm thirty-eight years old and I purchased this small house on the edge of a lake in New England ten years ago to escape my world that collapsed so suddenly on that fateful night three years before. It's a year-round home nestled amongst seasonal cabins populated on summer weekends and vacant during the winter. \n\nThe memory always starts at the same moment: I'm standing behind my lovely wife, Anna, while she prepares for bed. My hands are on her naked hips as I playfully pull her back against my erection which is firmly pressed against the curve of her spine at her slim waist. My balls rest on the slope of her perfect ass. She is eight inches shorter than me and I bend low to nuzzle her earlobes and neck, which drives her crazy. I look in the mirror to see her reaction as she tilts her head to the side to provide me better access to her neck. She closes her eyes and moans as she pushes her ass back against me. My hands release her hips and run upward with a feather light touch to her waist and then up to her large breasts. She trembles from my touch. I cup her breasts in the palms of my hands and gently run my index fingers around her erect nipples. \n\nShe moans again and puts her makeup cleanser on the counter and puts her hands on top of mine and assists me with her fingers on her own nipples. I can see my own smile in the mirror as she tilts her head back against my chest. Her breathing has become ragged and urgent. \n\nAnna continues her own attack on her nipples as my hands drop below the edge of the counter to find that her neatly trimmed pussy is soaking wet. I touch her clitoris and she groans hard and presses her hips firmly into the vanity to trap my hands. I can still move my fingers and I drag my index finger along the length of her vagina to her clitoris again. She groans again and spins around to face me. My hands are now trapped between her ass and the vanity. She presses her breasts against me and looks up. Her eyes are on fire and her face is flushed with passion. She stretches up on her tip-toes and offers her lips. I bend low to receive them. We kiss passionately for several seconds and she pulls back and whispers, \"Make love to me.\"\n\nI kiss her again and scoop her up in my arms and carry her to the bedroom. We usually started our love making with oral sex as a preliminary but we are both more than ready by the time I gently lay her on the bed. I start to go down but she stops me and pulls me down on top of her. Her legs are spread and I can see the glistening moisture on her sex. I maneuver my knees between her legs. My cock is as hard as it's ever been and Anna reaches down to wrap her right hand around the girth. I bend forward and kiss her with all the passion that I feel at this moment.\n\nAnna pulls my cock to her sex and drags my glans along her sopping wet vagina spreading her labia. When my glans touches her clitoris she groans hard and arches her back and then lifts her hips up with her legs. Her feet are planted on the bed next to my knees. I know all her moves and I maintain my position above her as my cock glides easily inside. She screams from the initial penetration and I groan as she pushes herself onto my glans and then I push the length of my cock deep into her pussy. Her body language reveals how fast I should go. My push isn't slow or fast. It's just what she wants as evidenced by her continuous groans through her open mouth. Her chin lifts as she drives her head back into the pillow. Her beautiful bright green eyes present a contrast with her auburn hair. They seem to be radiating her passion although it's apparent that she isn't aware of anything in the world but my cock sliding in and out of her.\n\nI lower my face to hers and kiss her open mouth which brings her back to the world. Her eyes clear and she grins up at me and groans, \"Jesus Christ Baby. I'm gonna cum already.\" I pick up the pace and she screams again as the tendons in her neck go taught and she slams her hips up into me. Her hands grab my ass cheeks and yank me down to hold me there unmoving while she throbs through her orgasm. The pulsing grip of her vagina on my cock is strong; stronger than usual. I try to flex my cock to match her pulsing but I can't keep up. Her orgasm lasts at least two minutes. My own orgasm, which had been on the edge was now gone; I was so consumed with pleasuring her.\n\nWhen Anna's orgasm ended she releases her grip on my ass and starts fucking me again. She smiles up at me and says, \"That was amazing. I want another one.\" I grin down at her and start thrusting my cock in and out again. Her head thrashes from side to side and suddenly she pushes hard to the side and we roll together until I'm on my back and she's on top thrusting her hips down my cock. Her tits are bobbing up and down on my chest and I cup them with my hands and pull them to my lips. \n\nThe look on Anna's face is one of almost pain as she flails her pussy on my cock. I can't hold back any longer and every muscle in my body tenses as I drive my hips up into her. It feels like my cock will explode as cum rockets up my shaft. Anna feels the surge and she's pushed over the top of her second orgasm. We are both groaning and gasping for air.\n\nWhen I come back to earth Anna is looking down at me with a grin on her face. She's twitching her hips from side to side at a languid pace as she luxuriates in the sensation. When she sees me looking up at her she says, \"Jesus, you are good fuck\", and then giggles.\n\nI playfully tweak her left nipple and reply, \"So are you.\" We both laugh and she drops her torso down on my chest and pushes her legs down the inside of mine. She stays there like that as we tease each other with our flexing genitals until our breathing returns to normal. Anna rolls off me and lies on her side running her fingers through my sparse chest hair. My arm is under her and I lightly run my hand from her ass to her shoulder and back again. We fall asleep just like that.\n\nWhen I wake, my arm is completely asleep and it hurts like hell. In the process of extricating it to get blood flowing again, Anna wakes up. Without hesitation she grabs my flaccid and sticky cock and starts jerking on it again. She lifts herself on her other elbow and says, \"Let's go again.\" My cock is all in on her suggestion.\n\nI roll toward her as she rolls onto her back still clutching my now rigid cock. I lean in to kiss her and while face to face in the dark she says, \"I have something to tell you first.\" I can see her gleaming white teeth even in the dark so she's grinning about something. I stay where I am, inches above her face as she whispers, \"I'm pregnant.\"\n\nIn my current reverie all these years later, those words reverberate over and over again - \"I'm pregnant\". \"I'M PREGNANT\". \"I'M PREGNANT\".\n\nI look down at her as she grins up at me. I don't know what to say at this moment so I don't say anything. As evidenced by TV shows and movies, guys always say such stupid things at moments like this. I lower my lips to hers and kiss her passionately for several moments. She giggles in mid-kiss and pulls back and says, \"Well. What have you got to say, mister?\" as she tightens her grip on my cock. \n\nI've thought over the past many years about that initial reaction to her announcement. I still haven't decided if kissing her like that was an appropriate reaction or not, especially considering what would transpire in the next few hours.\n\nFollowing that post announcement kiss I make passionate love to Anna for more than two hours. She has many orgasms. I lose count. She is oblivious as she rolls from one into another. It's amazing to watch and even better to participate. She finally cries uncle and says, \"No more. Oh God, you're killing me.\" She rolls out from under me and pushes me down on my back and gives me one of her infamous deep-throat blowjobs until I fill her up. We cuddle up together and kiss until we both fall asleep. I remember her lifting herself to an elbow and then she rolls away to her side facing away from me. When I wake later she's in the same position. \n\nIt's at this point that I wish my reverie would end. I reach over to touch her on the shoulder and to my unforgettable horror it was cold and hard. I instantly spring from the bed and try to roll her onto her back. Her body is stiff and resists my efforts. I let out a blood curdling scream. Anna is clearly dead. My mind can't wrap around the reality and I sit there on the edge of the bed stroking her hair back from her face pleading with God to make her okay. As always, he offers no help or comfort. \n\nMy mind clears enough to realize that I need to call 911. When a police officer arrives, I'm curled up in a naked heap in the corner of the room closest to her. I'm still praying to God when he helps me up and moves me and a blanket to the living room. EMT's arrive soon after but there is nothing they can do. \n\nThe autopsy concluded that she died of a massive brain aneurism. The only comforting words from the doctor were that it was quick and painless. That even if she could have wakened me, there was nothing to be done. It was of little consolation to me. If I could, I'd have given my life for another millisecond with her.\n\nI was a complete mess after that. I drifted through the days, weeks, months and even years. Our computer software business, that we had started together after we graduated from college, was beginning to fail from lack of attention. Anna had been the brilliance behind our success. I realized that I had to sell the business before it spiraled into the ground. In spite of the decline, it sold to a major software company for many times more than I could ever spend in my lifetime. I was free of all obligations and I wallowed in my despair.\n\nYears later I was still a mess. Our friends had tried desperately to comfort me but they soon realized that I was beyond their help and they drifted away. I decided to escape the world and bought this lake house. \n\nI think of the baby that Anna was carrying now and then. She would be around twelve now. I visualize a 'she' so I can imagine her as Anna. She was beautiful in every way. She had been a track star in college with a long, lithe body. In spite of her large breasts, she ran like the wind. When she got her boobs in sync with her stride, it was something to see. I was on the track team too and that is where we met and fell in love. While she was a sprinter, I was a distance runner. I wasn't a star but I won a race now and then. We continued to run together after we were married to keep ourselves in shape.\n\nOn this morning, my usual melancholy had set in so I pushed myself out of bed and stood there gazing out on the lake. A low blanket of patchy fog was slowly drifting from west to east. Two loons were close to my dock with a tiny baby chick drafting along behind. It was a tiny blob of brown fuzz bobbing around in the water like a rubber bath toy. Upon closer inspection I realized that a second chick was riding on one of the adult loon's back. The adult loons worked feverishly to collect small fish and the chicks gobbled them down. Through the open windows, I could hear the babies emitting a constant high pitched wheezing noise. It's hard to imagine how those almost inaudible wheezes would grow into the deep throated warbling cries of their parents.\n\nI thought of my own baby, never to be born, and headed for the kitchen for a cup of coffee. While it was brewing I went back to the bedroom and pulled on a pair of cotton athletic shorts, emblazoned with our college logo and a tee-shirt. As usual, I wore no underwear or shoes. I looked in the mirror as I passed through the master bath and ran my hand along my three day stubble as I decided that I should shave. I brushed my teeth and put on deodorant. It was going to be hot today.\n\nI sat on my deck with coffee cup in hand, struck by the pure serenity of the mirror surface of the lake. The loon family had moved further down the shoreline but I could still hear the wheezing noises from the babies pleading for food. The air was still as it usually is this time of the morning. The sun was peaking above the horizon and the top of the pine trees across the lake looked like they were on fire.\n\nWhen the air is still and the humidity is low, everyone on the lake can clearly hear sounds from a long way off. In the cabin to my left I can hear the owner and his new girlfriend having raucous sex. They were always having sex. She is a screamer and he continuously and loudly exclaims, \"Oh God. Oh God.\"\n\nThere must be something about that cabin. When I moved here ten years ago it was owned by an elderly couple in their late seventies. In spite of their ages, they had outdoor sex several times a week. Sometimes it was on their deck but was more frequently on their party-boat moored at the dock. I had a clear unobstructed view of their boat from my deck. Thankfully, they always had their fun at night in the dark. While the sounds of their sex were as erotic as anyone else's and had the same affect on my libido, I had no real desire to watch a pair of octogenarians sucking and fucking. I guess that's when I realized that I had become a voyeur. I would sit in my chair jerking off to the sounds trying not to let a visual image of the participants into my mind.\n\nMaintenance on their cabin became too much for the old couple and they sold it to their nephew, Jacob. He is around fifty years old and had been married and divorced twice. Jacob owns a construction company and is still extremely wealthy in spite of two divorce settlements. He freely proclaims that he will never get married again even in the presence of his new twenty eight year old girlfriend, Ashley.\n\nAs I listened to their sex romp this morning, my cock became erect and pushed out from my left leg hole of my shorts. I envisioned the girlfriend. My guess is that she is or was a stripper with a foul mouth that would embarrass a trucker. She is pretty with long red hair and green eyes but she's not beautiful. She has an aggressive, hard edge to her. Her body is spectacular though and I think I've seen her only twice with anything on but a bikini and once with nothing on at all. Even under close inspection, during my lone sexual encounter with her, I couldn't tell if her breasts are enhanced or not. If they are, the doctor did a fantastic job. She is not embarrassed at all to be displaying them in bikini tops that were never designed to contain them.\n\nWhenever Jacob and Ashley are around they spend the day lounging in their zero-gravity chairs set up on the dock. Inevitably, a parade of boats will cruise by going ever so slowly. She knows what they are all gawking at and she revels in it. He knows full well too but he feels a sense of pride that those massive globes on her beautiful body are his and the boaters can only look. When they get too hot in the sun they dive into the lake and then the action really gets started. As nearby boaters watch; they like to fuck in the water. It's amusing to watch the boaters act like they aren't paying any attention and if wives are aboard; they don't linger for very long unless they decide to take advantage of their husband's erection. I admit that I look too and often jerk myself off as I lay back in my zero-gravity chair. I also confess that I have a high powered pair of binoculars at the ready to enhance my voyeurism.\n\nI got busted one day several weeks ago when Ashley slithered her oiled body into Jacob's lap and obviously pressed her huge tits into his face. She was facing me but his chair blocked my view of everything but her face. His back was to me and I couldn't see what he was doing but I could hear him motor-boating on her tits. She got laughing and squealing as she dropped her hands to his crotch and pressed her arms against her sides to press her huge tits together.\n\nI grabbed my binoculars to get a better view through the leaves of the big oak tree that I thought was keeping me out of their view. They weren't usually this brazen in the daylight. I held the binoculars in my left hand as I feverishly stroked my cock. She had rocked her head back to gaze at the sky in response to his apparent penetration. When she dropped her head she was looking right at me. She winked and pursed her lips in a kiss. Then she mouthed the words, \"Nice cock.\"\n\nMy first thought was that I should get back out of sight but it was too late for that and it would have been so un-cool. So, I lowered the binoculars and mouthed the words, \"Nice tits.\" She got the message and grinned at me as she began vigorously rocking her hips forward and back on Jacob's crotch. I raised the binoculars to my eyes and she mouthed the word, \"later,\" with a very sultry look on her face.\n\nWith that thought, cum exploded from my cock and flew over the railing to the ground below. I kept stroking hard until I began to soften. She really picked up her pace after that and moments later Jacob blew his load into Ashley's pussy. His new hardness dragged her over the top of her orgasm and she slowed as she purposely drove herself hard on his pulsing cock. The look on her face as she continued to look over at me was erotic.\n\nWhen she was done, she threw me an air-kiss. I pulled my shorts down my left leg to cover my softening cock leaving a wet cum spot on them. Jacob and Ashley retreated to their deck and the fleet of boats slowly moved off down the lake.\n\nOne bow-rider speedboat lingered and I raised my binoculars to see why. I was treated to two topless teenage girls on their knees on each side of the driver's legs. They were sharing the driver's cock as evidenced by their bobbing heads in his lap. The girl on the right was up on her knees and one hand while her other hand stroked his cock in sync with her bobbing head. The other girl's face was right next to the first, sucking in one of his testicles, waiting her turn. Her hand had pulled the first girl's bathing suit bottom to the side and was driving her index and middle fingers into her pussy. The first girl was so aroused that she couldn't keep going on the lucky guys cock and she pulled off to gasp for oxygen. The second girl took her opportunity and devoured his cock all the way to his pubic hair. The look on his face was priceless.\n\nThe first girl rolled off the guy's leg and went to the deck on her back with her hands in her own crotch. She frigged her pussy and clitoris with incredible speed until she began thrashing from side to side beside the driver's seat. Her loud moans were clearly audible.\n\nNeither the second girl nor the driver even noticed the first girl's orgasm as he had his hands on her head driving his cock up into her face. She took it all and in moments he deposited his load in her mouth. She gagged a little and he released her so she could pull back. She coughed a huge load of cum on his thigh. He wasn't too pleased but he was cool about it, especially when she bent forward and licked up the saliva and cum cocktail and grinned up at him. Then she licked her fingers and bent forward and sucked his flagging cock back into her mouth. She took a couple of full depth strokes and then pulled off quickly. She smacked her lips and grinned up at him again. He grinned back and then bent down and kissed her lips. Moments later their motor started and they sped off down the lake. I sat back in my chair and thought, 'Wow. What a day.' Little did I know that it wasn't close to being over yet.",
        "Retreating from the heat of that day, I was lying on my bed in the air-conditioned bedroom, reading my e-reader when I heard Jacob's truck roar to life. The big diesel engine groaned as he drove off. I got up to look. Ashley's car was still in the driveway and I watched for a few minutes to see if she was leaving too. They often came in two vehicles to accommodate their separate schedules. They usually left at the same time but sometimes she left and he stayed and other times he left and she stayed.  \n\nI went back to the bed and picked up my e-reader. I read for another twenty minutes before my eyelids grew heavy and without even turning the e-reader off, I was sound asleep. I was dreaming of Anna running low hurdles on the track back in college. What a sight. All other events ground to a halt as if time stopped. In my dream, dust particles lazily drift in the air as Anna is racing in slow motion. There are no sounds. In the slow-motion, her boobs are slowly bouncing in rhythm with her strides and then they lurch upward as she crests each hurdle and drop hard as her forward foot plants on the ground.\n\nIn my dream, hands went up my athletic leg and began massaging my cock. Even in my dream it seemed weird to be watching Anna race while someone else was fondling my cock. Where had the hands come from? Who did they belong to? Anna was crossing the finish line. Weird things can happen in a dream that make perfect sense at the time so I went with it.\n\nSomething brushed my lips and it wasn't in my dream. When my eyes flashed open, a pair of lips was kissing mine. The face was too close to make out who it was. Then the lips pulled back and I focused on Ashley's pretty face. She was lying on the bed beside me with her hand up under my shorts gripping my rapidly hardening cock. She was wearing one of her many bikinis and smiling down at me. \n\nAs I came to, I watched her eyes go from an impish grin to wide-eyed astonishment as my cock grew in her hand. She muttered, \"Oh my God. Mother-fucker, what have we here?\" She pulled up the leg of my shorts exposing my cock in her hand. Her fingers were curled around the circumference at the base and nearly as much stuck out above her hand.\n\nI had always playfully accused Anna of only being interested in my cock, which was nearly ten inches when erect. The circumference is a little larger than normal. She always countered that I was only interested in her tits. Then we would both nod and laugh.\n\nAshley reached around behind her back and untied her bikini. Her massive tits literally sprang free. They looked and acted real and I just stared at them as she started jerking me off. I lifted my hips off the bed and helped her pull my shorts down to my shins. I moved my right hand to her left tit and thumbed her nipple. I still didn't know if they were real or not. She shuddered from my touch and let out a muffled groan.\n\nMy cock was bouncing in the air an inch or so above my stomach and she grabbed it again and lifted it to a vertical position. She was still wide-eyed as she put her elbow down at the base of my cock and muttered a simple, \"fuck\" as she measured the tip of my glans just above her wrist. Then she dropped her head and kissed my glans. Fuck, my cock was hard. Her lips parted and she pushed them down over my glans and the sensation was one I hadn't experienced since Anna.\n\nI drove my head back into my pillow and pushed my hips upward. She inhaled more than half of me before she gagged. It had taken Anna a while to be able to deep-throat me. I had forgotten how incredible a blowjob could be. Nothing but my hand had touched my cock in thirteen years.\n\nThe urge to cum was growing fast and I fought hard to hold it back. Ashley bobbed her head up and down my cock until her jaw tired and she pulled back and sucked on the top half while she jerked me off with her right hand on the bottom half. I was intoxicated by her tits as they bounced all over her chest in reaction to her head and hand movements. I could see that her crotch was soaking wet from the wet spot on her bikini bottom. \n\nJesus, Ashley was an accomplished cock-sucker. I was losing the battle and I finally relented and seconds later I let out a loud groan followed by a stream of \"Oh Fucks\" as cum boiled up my shaft into her waiting mouth. She grinned around my glans and stared into my eyes as she sucked everything I had down her throat. When she was satisfied that she had the last drop, she pulled off my cock with a pop and giggled at the sound. She drilled her tongue into the eye and pulled back with a single drop of cum tethered to the tip of her tongue. She rolled her tongue into her mouth and muttered, \"Yummm.\" \n\nWith my cock still pretty hard, I pushed myself to my knees and pushed her back on the bed. She went willingly and lifted her hips to aid my efforts to pull her bikini bottom off over her feet. She lifted her head off the bed to watch. Her arms were pressed close to her sides so her hands could work her pussy. This position pushed her tits to the middle of her chest and she looked down through her cleavage as I lowered my mouth to her sex. She spread her labia exposing her inner folds. Lubrication bubbled out of her pussy and I dipped my tongue into it and dragged it up to her clitoris. She screamed hard as her head slammed back into the bed and her hips involuntarily lifted to apply a firmer contact with my tongue.\n\nAs long as it had been since I'd had a blowjob, it was just as long since I'd performed cunnilingus. I dragged her essence into my mouth and savored the taste before moving my tongue to her anus and pushed the tip inside her puckered rosebud. She screamed hard again and slammed her thighs tight on my head to hold me there. She rocked her hips up and down several times as I pushed my tongue in and out of her. She was gasping for air and mumbling something about how Jacob wouldn't do that. She obviously loved it.\n\nShe released her thighs and I worked my tongue to the bottom of her vagina and pushed my tongue into her bubbling juices and dragged it all the way back up to her clitoris. She groaned and threw her head from side to side muttering, \"Oh Jesus. Oh Jesus,\" followed by a more clearly enunciated, \"Jacob won't do that either,\" as she just stared up at the ceiling fan slowly rotating above her head. \n\nI was taking my time reliving how it felt to drive a woman crazy with my tongue. My cock was a steel pole again but I wanted to drive her to orgasm with just my tongue and fingers. She had released her labia as her hands flew out to form a cross on the bed. She grabbed the bedding and pulled hard in response to my tongue finally moving to the well of juices and slowly pushed my tongue into her depths. \n\nWith her arms no longer holding her tits in place on her chest, they rolled off center and came to rest a few inches to the right and left. Her head continued to thrash from right to left. Her mouth was open to form an \"O\" as she sucked air into her lungs. Then she forcefully expelled the air as she muttered, \"Oh Fuck. Oh Fuck. Yes. Yes. Yessssss.\"\n\nWhen she felt her orgasm rolling in to crush her, she screamed out, \"Oh my gawwwd. I'm cumming. I'm cumming on your fucking tongue. Oh fuck. Yes.\" With the final \"Yes\" she thrust her hips hard into my face and I drove my tongue in as far as I could and flicked the tip. I had no idea if she could feel the flicking tongue in her pussy but I did it anyway. She was all over the bed thrashing in every imaginable direction. I was forced to release her pussy and pull back to let her go. Her hands flew back in to take my place and she feverishly stroked her clitoris as I watched her pussy spasm for a long time. I dipped back in occasionally to scoop up copious amounts of her juices. \n\nAshley slowly came back to earth and finally she stopped moving all together as I sat beside her running my hand lightly over her legs, stomach and tits. When she came to rest she trembled from my touch and looked up at me. A huge grin formed and then it morphed into pursed lips as she gave me an air-kiss. Her hands moved out of her sex and rested on her stomach. Her pussy was drenched and continued to sporadically pulse. \n\nAshley finally spoke, \"Oh my God. Jacob won't go down there and I do like it a lot. You are very good.\" She dropped her closest hand over the glans of my rigid cock and ran her fingers back and forth around the circumference. My cock surged harder with her touch. She watched it throbbing for a moment and then said, \"I can give you another blowjob or jerk you off if you want. I can't let you fuck me, even though the thought of your cock in me is driving me nuts. I draw the line there when I'm dating someone steady.\" \n\nI pushed up on my knees and moved my cock to her face. She grinned hard when she saw what I was doing. She wrapped her fingers around the base of my cock and pulled the glans to her mouth. She flicked her tongue all around the ridge and then rubbed my cock all over her face. She pulled my cock and me down to rub my glans on her closest nipple. She groaned with the contact and then pulled me back to her lips and slid them over the glans and as far down the shaft as she could until she gagged again. She coughed and spit a messy glob of saliva on my cock and started sucking hard as she bobbed her head on and off my cock. \n\nOccasionally she pulled off and used her hand to jerk me off for a moment before going back to the blowjob. Her tits bobbled on her chest as she drove her face on and off. I groaned hard when my orgasm approached and moments later she pulled back to lock her lips on the ridge of my glans and accepted several hard surges of cum. I thought I would blow the back of her head out.\n\nWhen I was done she dragged her tongue through the eye and pulled her mouth back. She showed me her prize and then promptly gulped and swallowed the load. She smacked her lips and licked her tongue all around her lips. She looked down and discovered that she had lost some when she displayed the pearly, white, gooey cum on her tongue. It had fallen on the fleshy part of her left tit above her nipple. She cupped her tit in her hand and lifted it to her lips and licked it off.\n\nAs my cock softened, Ashley got off the bed and pulled her bikini bottom back on and then struggled to get her tits in the cups of the bikini top and tie the strings behind her back. She stood there looking at my softening cock. I was sure she wanted to see what it looked like in a flaccid state. After a couple minutes she came over and leaned in and kissed me hard on the lips twice. She looked like she was going to say something but she didn't. She walked to the bedroom doorway and turned back and put her fingers to her lips and kissed them and then pushed her fingers toward me. I heard the screen door slam shut as she left. \n\nI was hoping that further encounters with Ashley would happen but to this day she has not come back. She still looks up to my deck to see if I'm watching whenever she and Jacob are engaged in yard or dock sex. She always gives me an air-kiss just as she starts her orgasm. 'What a tease.'\n\nWhen I finished the reverie of my encounter with Ashley that hot afternoon, I realized that the early morning sex between her and Jacob had finished. All was quiet and my attention was drawn back to the loon family as they slowly made their way around the point and out of sight. The sun had raised enough to expose the opposite shore to its golden light. With the sunrise, the air started to move with a slight breeze. The mirror surface of the lake became disturbed in places.\n\nI struggled out of my zero-gravity chair and went in the house. I kicked off my shorts and pulled off the tee-shirt and stepped into the shower. While I lathered myself I thought about Ashley's huge tits and my cock rose to full staff. Ashley's tits made me think of Anna's large tits. They weren't near as huge as Ashley's but their shape was very similar. My melancholy was back.\n\nI finished my shower ignoring my erection and it was soon gone. I dressed in cargo shorts and a knit, three button golf shirt and sandals. I drove into town to the local restaurant that had the best omelets ever and had breakfast. The waitress commented, as always, about the fact that I was alone. I glanced at the embroidered name on her apron and motioned toward the seat in the booth across from me and said, \"Donna, please join me.\" She giggled and said, \"I'd love to but I'm working.\"\n\nDonna was a very attractive woman with no ring on her left hand. There was a trace of a compression on that finger though. There was no tan line. I guessed that she was in her mid thirties and probably divorced but not recently. I had contemplated asking her out but it had been a long time since I had asked anyone out on a date; not since Anna in my third year of college, seventeen years ago. I could never get the words out even though she was giving every obvious signal that she would gladly accept. I ate alone in silence. Donna stopped by my table once to see if I wanted anything else. I didn't. I paid the bill and left a generous tip. She waved and yelled the obligatory, \"Have a nice day,\" as the door swung closed behind me. I looked back through the front window and waved back.\n\nAs I turned onto the dirt road leading to my house, I noticed the neighbor to my right was tying balloons to the mailboxes. One of them was a silver Mylar helium balloon with a message in a script font reading, \"Happy 18th Birthday Divi\". The neighbor's name is Priya. She is forty-two but looks twenty-five. She is of Indian descent with long black hair, large dark eyes, inviting mouth, dark skin and a smoking hot body. I've met her husband, Naveen, once but he's never around. He's considerably older than Priya. He has an import/export business that apparently requires that he spend most of his time in India.\n\nPriya is a huge flirt as she spends most of the summer in very revealing bikinis. She always leaves me blushing and giggles as she walks away with an exaggerated swing of her hips. She always looks back to see if I'm looking. I'm always looking.\n\nPriya's daughter is Divya. Her father calls her by her full name but Priya has always called her Divi except when she's angry with her. From the balloons, I astutely deduce that Divi is eighteen today. As I drove down the road more balloons were pulling on their strings at every intersection. I guessed that they were having a birthday party and the balloons were meant to guide the attendees through the maze of dirt roads and cart paths.\n\nDivi is a carbon copy of her mother. They look like sisters. She has blossomed into a stunningly beautiful girl. Her large dark eyes, with exceptionally white sclera are captivating. She delights in watching her mother torment me with her flirting and in recent years she has gotten pretty good at it herself. My flirting skills have improved too and I occasionally get to walk off leaving both of them blushing. \n\nI suddenly felt old. Divya was ten years old when she moved here. Their house was just a seasonal camp when they arrived. They have completely remodeled it and it is a gorgeous, year-around home now. Even before they bought the camp there was a single row of tall arborvitae providing a wall of green all the way to their roofline between their house and mine. I can't see in any window but I can see their yard by the water from my deck. In keeping with my voyeurism I take every opportunity to spy on Priya in her bikini from my chair on my deck. I'm certain that she knows.\n\nI stripped out of my going-to-town clothes and pulled my athletic shorts back on along with my tee-shirt. I plunked myself down in my chair on the deck with my book-du-jour. As usual, it wasn't long before my eyelids grew heavy and I was asleep. I never sleep long. Speed boats roaring by wake me. Before Jacob and Ashley's escapades started, boats didn't usually come down this far into our cove. They had always turned mid-lake and sped back down the lake. Now they come further down the lake probably to see if Ashley was around. I always lift my binoculars to see if the boats contained anyone I know. In truth, I don't know hardly anyone. I'm really scanning the occupants for hot women. They usually contained only men.\n\nI fell asleep again and woke to party noises to my right in Priya's yard. I lifted my binoculars to get a better view. Divi and a few squealing girlfriends were jumping off their dock. They all wore bikinis and their thin teenager bodies handled them well. Divi was easily the most voluptuous. She had quickly passed through the awkward early teens and the curves of her waist, hips and breasts were prominent. Her breasts were already fully developed and were the same as her mother's. They contrasted with the small pert breasts of her friends. In my thirty-eight year old mind they were all very attractive.\n\nTo my left, clinking of glasses and dinnerware and the clanking of pans on the stove indicated that Jacob and Ashley were up and making breakfast. As usual they had slept late after their early morning sexual romp. My attention went back to the birthday party.\n\nI don't think Divi and her friends realized that their voices were carrying so clearly across the water, which is often the case on the lake. They were treading water with foam noodles between their legs about twenty feet out from the end of their dock and were intentionally talking softly amongst themselves, or so they thought. I could hear every word like they were sitting right beside me. They were laughing together as they all started making fucking motions on their noodles. They each tried to out-do the others. Then one pulled the end of her noodle to her mouth and made like she was giving it a blowjob. It was much too big for her to get her lips over it so she just simulated by bobbing her head near the end. They all burst into laughter again.\n\nI wasn't paying particular attention until they started talking about sex with their boyfriends and one was talking excitedly about having sex with the father of her baby-sitting charge. \"I sucked his cock until he came in my mouth on the way home last night,\" I heard her say. The others were asking pointed questions like: How big his cock was? Did she swallow his cum? What did it taste like? Had she had intercourse with him yet? She delighted in being the center of the conversation and she answered every question with sexually charged details. They were all squealing with delight.\n\nThe baby-sitter was obviously proud of her relationship with this older mature man who \"knew something about sex\". She proclaimed that it was so much better than sex with boys her age. When I heard her tell the others that the father was going to divorce his wife to be with her, I couldn't help but chuckle to myself and mutter the words, \"Yeah right.\"\n\nI recognized Divi's voice as she picked up on the 'sex with boys' theme and stated that she was thoroughly disgusted with her current boyfriend. Another friend piped in and said, \"I dated him a few times. His dick is so small he couldn't get it in me.\" The others burst out laughing again.\n\nI loved how teenage girls always thought they were so mature and experienced and laughed heartily at their peers who they perceive as having less experience than them. I had been exposed to similar teenage girls in high school. Only they called me a freak and recoiled when they saw my junk. In short order I was a pariah that the girls raised their index fingers together in the form of a cross whenever I asked one of them out on a date. That all changed in college though.\n\nI chuckled again when Divi asked 'baby-sitter girl' if she could deep-throat the father's cock. The response was, \"Of course. He loves it.\" The others accepted her answer as the gospel truth. The girl that had previously dated Divi's boyfriend said, \"Divi? Have you and Jason had sex?\" ",
        "Divi said, \"If you can call it that. At least he's easy to deep-throat.\" The others burst out laughing as the girl who had previously dated Jason raised her hand out of the water with her thumb and index finger two inches apart. They all burst out laughing again.\n\nPriya appeared on the dock in her bikini and told the girls to keep it down. It worked for a short while. I couldn't make out what was said for several minutes and then they were right back to the same volume.\n\nMy attention was pulled back to my left as I heard footsteps slapping down the boat-ramp between our two houses. In anticipation of me being in my usual perch in my chair at the corner of my deck, Jacob yelled out, \"Good morning Jack.\" He couldn't see me through the leaves of the oak tree in my backyard. I could only see their feet and lower legs passing by.\n\nI responded, \"Morning Jacob. It's going to be a hot one again today.\"\n\nJacob replied, \"Yup\" as they continued down the ramp to the water. He and Ashley climbed on a large float that had previously been used for tubing behind a speed boat. They both fit easily on it as they cuddled up side by side on their stomachs and paddled out to deeper water. They kissed occasionally and let the float drift as they laid there in the sun with Jacob's hand resting on Ashley's ass.\n\nAbout twenty minutes later, Ashley rolled onto her back and nonchalantly stuffed her tits back in her top. Jacob rolled on his back and put his hands behind his head. I lifted my binoculars again as Ashley put her hand on Jacob's crotch and began rubbing him there. In short order, Jacob's bathing suit was tenting from his erection. He said something to her and she giggled as she pulled her hand away and pushed it inside his suit. The motion of her arm indicated that she was jerking him off.\n\nTo my right, Divi and her friends had swum to their beach at the end of their boat ramp and were walking out of the water and back onto their dock. Divi was adjusting her bikini top to cover her breasts and the others were pulling their bikini bottoms out of the cracks of their firm little asses.\n\nPriya had a small rowboat with a ten HP motor on the stern. Divi and her friends stepped into the boat and Divi affixed the oars and rowed away from the dock making her way into deeper water. Once there, she stopped rowing and stowed the oars inside the boat. They thought they could continue their conversation without being overheard but she was wrong. There were days when I could hear a conversation on the opposite shore of the lake. They were directly behind my pontoon boat and about a hundred feet out and the same distance from Ashley and Jacob on their float.\n\nI clearly heard one of the girls say, \"Oh my God. That woman is jerking that guy off on the float.\" My binoculars were focused on Ashley and she laughed when she heard the girl in the boat. I moved my view to the boat and one of the girls was pointing toward the float as the others looked on slack jawed and wide-eyed.\n\nEver the exhibitionist, Ashley pulled Jacob's cock out of his suit and continued stroking his cock to the full view of anyone close enough to see. I pulled mine out of my shorts and started jerking off with my right hand as I held the binoculars with my left. Ashley figured that I was looking and she turned her head to look back at me. She rolled her tongue around her lips and then returned her attention to Jacob's cock. She rolled on her side facing him and began jerking his cock in earnest, fully conscious of the show she was putting on for the teenage girls.\n\nAs my right hand flew up and down the length of my cock I alternated my view from Ashley's handjob to Divi and her friends as they intently watched in slack-jawed silence. I was just moving my view back to Ashley when I heard Divi's voice shout, \"Holy Shit. Look at that.\" I swung the binoculars back to the boat and Divi was pointing directly at me. One of the friends looked at where Divi was pointing and said, \"Oh my God. That's a big dick.\" The other's shifted in the boat to look and another said, \"Fuck Divi. You've been screwing around with 'little dick Jason' when the biggest cock I've ever seen lives right next door.\"\n\nI continued jerking on my cock so I wouldn't give away that I could hear everything they said. I moved the binoculars back to Ashley who had released Jacob's cock and was looking back at me with a grin on her face. Her right hand was raised, giving me a thumbs-up. She must have heard the girl's comments too. I moved my view back to the boat and they were still staring at me stroking my cock. Divi giggled and said to know one particular, \"I know what I want for my birthday,\" as the others roared in laughter.\n\nI heard splashing coming from my left. Ashley and Jacob had both rolled off their float into the water and began swimming for the beach towing the float behind them. They finished up what they were doing in relative privacy on their deck. I was a little embarrassed about being caught jerking off by a bunch of teenage girls and I lost my concentration. My cock softened and I pushed it back in my shorts and went in the house for a beer.\n\nWhen I came back out, I flopped back in my chair and lifted my kindle. The boat full of teenagers was back at Priya's dock and the girls were gone. I was reading a few minutes when I noticed movement on the boundary between Priya's and my properties. I stretched up to see what it was. It was one of Divi's girlfriends with Priya. They were talking softly between them and I couldn't hear what either of them said.\n\nThe curious thing was that the girl kept pointing in my direction as she talked. Then she put her open hands with extended fingers nearly a foot apart and pointed toward my house again. Priya looked where the girl was pointing. Apparently neither of them saw me sitting there in the shadows of the big oak tree watching them. Priya nodded to the girl and glanced back toward me as they walked back into her yard. The girl disappeared around the corner of the house but Priya turned and looked back at my house for a few moments before following the girl.\n\nLater on I heard the partiers burst into a chorus of \"Happy Birthday\" and soon after the girls and Priya found chairs in the back yard with plates of ice cream and cake. I raised my binoculars to see what was going on.\n\nI felt like Jimmy Stewart in the movie \"Rear Window\" spying on all the neighbors as he sat in a wheel chair with a broken leg. I wished I had a Grace Kelly coming by to check on me.\n\nI noticed that Priya kept glancing my way and then go back to her cake and ice cream. The girls were clustered together giggling about something like girls do.\n\nThings got quiet after that as the party went indoors. I nodded off to sleep again. I don't know how long I had napped when I heard Divi yelling, \"Thanks guys. I had a great time. I'll see you soon.\" Then came the sound of car tires snapping on the gravel of the dirt road and the roar of an engine accelerating by my house heading for the main road.\n\nI became aware of the distinct sound of skin slapping together that could only come from a couple during intercourse. Ashley and Jacob were at it again. I listened closely to determine if they were inside or on their deck. I figured they were on their deck. I pivoted my chair to look that way but the leaves on the oak tree pretty much blocked my view. I could see movement but their deck railing and balusters precluded any clear view even through a break in the foliage.\n\nTheir moans and groans raised my libido and I rubbed my hand on my cock as I pulled it out above the waist band of my shorts. My erection was aided by my recollection of that one day with Ashley on my bed. I closed my eyes and reminisced as I laced my fingers around my shaft and began masturbating again with my head resting back against the chair. \n\nI was trying to time my ejaculation with Jacob's or Ashley's, whoever came first. Judging from the moans and groans, they were getting close and so was I. My hand was flying and then slowing as I tried to time it right. \n\nSuddenly, there was a scraping noise on my deck to my right. My eyes flashed open and my head snapped to see what it was. To my horror, it was Priya and Divya. They had come up the stairs from the yard to my deck and come around the edge of the house to find me perched in my chair furiously jerking off. They were both in their bikinis and Divi was holding a paper plate containing cake and ice cream. She nearly dropped the plate on the deck when she maneuvered out from behind her mother, who had suddenly stopped, to see me jerking off.\n\nMy breath caught in my lungs as I struggled to get my erect cock back in my shorts. The looks on their faces quickly morphed from shock to grins. Neither of them turned away. Divi set the plate on the railing and stared down at my crotch. I was dying a thousand deaths as I looked away from them to my hands trying to cover my erection. \n\nPriya quickly recovered from her shock and said, \"Please. Don't hide it.\" She took two steps closer with Divi's hand in tow. She turned to Divi, whose eyes were bugging out of her head as her free hand went to her breasts to fondle her erect nipples through the material of her bikini top, and said, \"Joanne said that this is what you want for your birthday,\" as she pointed at my erection. I turned a deeper shade of red than I already was.\n\nDivi hesitated as she stared at my hands covering my cock. Her face was as flushed as mine. Then she nodded her head and moved past her mother to sit in a chair beside mine. Priya pulled another chair over and sat down beside her. Divi was trembling and her hands fidgeted in her lap to stop them from shaking. Priya reached over and took my hands in hers and lifted them off my cock which leaped up to bounce all over the place as if it couldn't decide whether to run and hide or stand tall. Priya settled the issue when she curled her fingers around the shaft and stroked it from glans to balls a couple times before releasing it and then rubbed the cupped palm of her hand gently around the glans. Her face was flushed too as she gently held her lower lip between her teeth. Divi closely watched what her mother was doing. She was still trembling and rolling her hands together.\n\nPriya turned to Divi and said, \"I heard you girls talking so I know you have some experience. From what I heard, this will be a new one.\" Divi pulled her eyes from my cock and looked at her mother and smiled and nodded at the same time.\n\nPriya reached over and took one of Divi's trembling hands from her lap. Divi resisted for a moment but then relented and scooched her chair closer as Priya pulled her hand to my cock. She trembled even harder as her index finger touched my glans. I was settling down and just sat there and watched to see what Priya and Divi would do. It seemed that I was totally disconnected from my cock and resumed the role of voyeur.\n\nPriya whispered to her daughter, \"Don't be scared. It won't bite. I'm here to show you the way. Just breathe.\" Divi suddenly realized that she was holding her breath and she took a deep breath and blew it out through her pursed lips.\n\nDivi looked at her mother and said with a shaky voice, \"I can't believe I'm doing this. I'm gonna kill Joanna when I see her. This was a private thought that I said out loud.\" She moved her cupped palm to my glans and mimicked what she had seen Priya do. I groaned from her touch and Divi smiled at my response. Priya smiled too.\n\n\"You don't have to do this Divi. You can get up right now and walk away. No problem,\" said Priya. God I was hoping she wouldn't but I remained silent. Divi didn't say anything in response. She rolled her palm over my glans and then gripped my shaft tight and slid her hand down my cock until the skin at the ridge pull tight. She continued to pull down until I flinched. She stopped and pulled her hand back like she had been bitten by a snake. Priya laughed at Divi's reaction and then bent down over my bobbing cock and spit on the glans and curled her fingers around the shaft and rubbed the spit in for lubrication. Priya didn't stop. She seemed to be in a trance as she spit on my cock again and kept on jerking me off.\n\n'God damn. I hope she does more than this,' I was thinking. I intently watched her face gazing down at my long cock. She was biting her lip again and concentrating hard until Divi spoke up. \"Mom, I can do it.\" Priya snapped out of her trance and her hand slowed to a stop and then she released it and sat back. \n\nDivi leaned in and attempted to spit on my glans like Priya had done but the spit clung to her lower lip and then rolled down her chin. She giggled and scooped the spit off her chin and spread it around on my glans. She was more successful on the second attempt. She dragged her saliva down my shaft with her right hand following her mother's lead. She was learning quickly and the firm grip on my cock felt incredible. I looked over at Priya and she was smiling at me. She was breathing heavily and her face was flushed with lust. \n\nI took a chance and reached over and cradled Divi's left breast in my hand. Her nipples were hard and pushed insistently against the thin material of her bikini top. When I stroked her nipple with my thumb, her breath exploded from her lungs as she lunged forward in her chair and then back. She sucked her lower lip between her teeth the same way her mother did. She groaned hard. Priya was inspecting Divi's face with a grin and looked back at me. I smiled at her and groaned hard as Divi's pace increased. She was stroking my shaft from ridge to balls and I was in heaven. \n\nPriya said, \"Divi honey, don't forget his balls.\" Divi had a confused look wash over her face. Priya reached down and cradled my ball-sack in one hand and then began fondling my balls with her fingers. Divi watched every move and then used her free hand to replicate Priya's moves. She grinned at her mother as she relinquished my balls and sat back in her chair. I was groaning continuously now. I didn't have to but I wanted to give Divi some encouragement. Priya grinned at me. She knew what I was doing.\n\nDivi started giggling and looked at Priya. \"His balls are moving around by themselves. How weird is that?\" Priya looked over at me and burst out laughing.\n\nDivi frowned at her mother and Priya raised her hands and said, \"I'm sorry Honey. I forget myself. You're doing wonderfully. Welcome to the wonderful world of the male anatomy.\"\n\nDivi's right hand was tiring so she switched to her left which was not nearly as coordinated. I continued to lightly massage Divi's tits. Priya reached around behind Divi and untied her bikini top at the neck and back. The top slid down her chest and into her lap. Her tits were gorgeous and my cock surged harder. Priya reached around her own back and untied the bow and lifted her bikini top over her head. Priya's tits were only slightly larger than Divi's but her nipples were much longer. They were the same shape as Divi's. They were a bullet like torpedo shape that stuck out straight from her chest with dark nipples that sat perfectly at the tapered ends. \n\nI like tits in all shapes and sizes. Priya's and Divi's tits were very much different from Ashley's, which are flatter and fleshier and rounder; nearly the size of a volleyball with a lot of high chest cleavage when they were corralled into a bra or bikini. Divi's and Priya's tits were a bit larger than a softball and were perfect for their slim bodies and my cock surged harder at the sight of these two beautiful women with their torpedo tits exposed. \n\nDivi was amused by the sudden surge in hardness and she giggled again. I manually flexed my cock in her hand and she giggled again and looked up at me and said, \"Are you doing that yourself?\" I nodded and flexed it again. Divi looked at her mother and giggled again. Priya was grinning as she ran her fingers over her tits and pinched her hard nipples. She groaned hard and surged forward in her chair and then snapped back to her original position. Air surged from her lungs. I wondered if she was in the throes of an orgasm but I couldn't tell for sure. I could immediately recognize when Anna was having an orgasm but I was way out of practice. \n\nI could feel my orgasm closing in and I worked hard to push it away. I was hoping for way more than a hand job by an inexperienced teenager. I wanted Priya to get involved too. I knew she wanted to from the dark wet spot in the crotch of her bikini bottom. Divi had the same spot in her bikini bottom. All three of us were breathing raggedly.\n\nThen Priya relieved me of considerable pressure when she said, \"Divi Honey. We'll get Jack to cum and then I'll show you some other things. Okay?\" Divi grinned hard and shifted back to her right hand. I stopped trying to hold back and let my orgasm crash over me like a tsunami.\n\nPriya recognized the symptoms and stood up and put her lips on the tip of my glans. Divi was fascinated by this move and she flailed her hands up and down my shaft until I let out a loud groan and bucked my hips upward, pushing the glans to Priya's mouth. Unfortunately, she pulled back so her lips were a few inches above my cock as I blew long forceful streams of cum at her face. Divi squealed when she saw the pearly white cum launch from my cock. She immediately released my cock with the first salvo, figuring that I was done. I had to grab my cock to finish myself off. Divi pushed her face down toward my glans, fascinated with the long individual steams of a white substance that she obviously was completely unfamiliar with. I had a fleeting thought, \"Poor Jason. If Divi had ever given him a blow job, she had never continued to completion\".\n\nPriya was catching most of my jizz in her mouth but it was all over her face. When I noticed Divi going down, I aimed my cock at her face and the last two streams of cum blew across from her left forehead, to her right cheek. Only a small amount went in her mouth and her face scrunched up from the taste. She immediately pulled back and began wiping cum from her face with her hand. She examined the cum with her fingers.\n\nPriya was scooping cum off her face and pushing it into her mouth. Divi wasn't too sure she wanted to do that but she did. She trusted her mother that that was the right thing to do. I chuckled as Divi pushed a cum-covered finger into her mouth and shuddered from the taste. Priya laughed and said, \"It's an acquired taste. You'll get used to it.\" Divi obviously wasn't so sure as she wretched and stuck out her tongue with disgust. Priya and I both started laughing.\n\nPriya wrapped her fingers tightly around my cock and began jerking me off again. My cock hadn't softened at all and her attention made sure that wouldn't happen. I was as hard as I had ever been. Divi clutched her right breast and tweaked her erect nipple and then did the same to the left breast. Priya was looking at Divi while she stroked my cock. \"From your conversation with your friends, I assume you know something about giving a blow job.\" She turned toward me and winked. She had noticed Divi's reaction to my cum and knew that Divi may have put her lips on a penis before but that was all.\n\nDivi was eager to express how experienced she was and she vigorously nodded and said, \"I've given a lot of blow jobs to Jason and other guys before.\" She beamed with pride.\n\nPriya frowned at Divi and chose not to challenge her on her professed experience. She said, \"From what I heard, Jason hasn't pushed your skill level any.\" It was Divi's turn to frown. Priya continued as she nodded at me, \"This is a real cock. In fact, I've never seen a bigger one.\" Divi smiled as she looked down at my cock in her mother's hand. Priya went on, \"This cock is longer than average and a little fatter than average in girth. This cock is circumcised and it's hard to describe what an uncircumcised cock looks like but they are both nearly the same when they're hard like this. Your father isn't circumcised just in case you've snuck peaks at him in the nude.\"",
        "Divi blushed red and it was obvious that she had stolen a peak now and then. Priya went on, \"What you just did was a hand job.\"\n\nDivi humped up disgustedly and said, \"For God's sake Mom. I know what a hand job is. I've been doing that for years.\" She thought about what she had just said and shut up as she looked away from her mother's disapproving eyes. Priya continued, \"Now I'm going to show you how to give a proper blow job. Forget about your experiences with Jason. It sounded like you were sucking on your index finger.\" Divi thought about that for a moment and then just nodded and Priya lowered her lips to my glans and flicked her tongue around the firm spongy flesh. My cock surged from the contact. Divi giggled at my reaction. She lowered her head to get a close up look. Priya pushed my cock from her mouth over to Divi and she eagerly mimicked the tongue flicking.\n\nDivi pulled back and said, \"The shaft is so hard but the tip is kind of soft and velvety.\" Priya grinned and pushed her lips down over my glans as she held my cock in place with both hands. She stopped with her lips locked on the ridge and her lower hand slid under my cock and cradled my balls. She pulled back and aimed my cock at Divi. She lowered her face again and dragged her tongue around my glans and then pushed her lips over the spongy head and gripped the ridge except she used her teeth. \n\nI went completely rigid and my eyes went wide as I groaned out, \"No teeth. Fuck.\" Divi immediately loosened her grip and pulled back her teeth using only her lips to hold me in place. She did the ball cradling thing and held my shaft with her other hand just like Priya had done.\n\nPriya giggled and said, \"Almost never use your teeth, Honey. You'll learn with practice when that is appropriate.\" She grinned at me. I relaxed again. Divi went the next step on her own as she slid her lips back up over my glans and back down again several times before pushing her lips further down my shaft. I looked at Priya who was grinning as she watched her baby girl giving me a blow job. She only attempted about three inches which I guess was the limit of Jason's dick. \n\nPriya leaned down and said, \"How much can you take? Go as far as you can until you gag.\" Divi did as instructed and slowly pushed her lips down my shaft. Priya went wide-eyed when Divi had descended about six inches. She looked up at me and said, \"Fuck, Jack. She's a natural.\" Divi gagged a little and then extended her lips out as far as she could and inch-wormed her way down to meet them. She gagged hard at that point and pulled back and then off my cock. Saliva flooded out of her mouth onto my cock. Divi was embarrassed and Priya moved her hand to my cock and rubbed the saliva all over my shaft. Divi smiled broadly when she discovered that she hadn't done it wrong.\n\nPriya leaned in and said, \"Let your Mom try it. I'm itching to see if I can deep throat this thing.\" I grinned hard. I was getting my wish.\n\nPriya got down on her knees in front of me and I spread my legs so she could move up between them. She quickly moved her lips down my shaft to about the same point that Divi had gagged. She slowed at that point and I could feel my glans pushing into her throat. Divi moved down closer to see and she gasped when she could plainly see her mother's throat expanding around my cock. I groaned continuously as she pushed my glans into her throat. After that, there seemed to be no limit as to how much cock she could take. Her lips pushed up against my pubic hair as she held that position for several seconds before pulling slowly back up my shaft. She stopped with her lips at the ridge and then started a full depth blow job that brought me right to the edge of another orgasm. Jesus Christ, she was good. It was easily the best blow job of my life. I found myself being jealous of Mr. Priya.\n\nPriya knew immediately when she needed to stop before I blew my load. I could tell she didn't really want to stop but she wanted Divi to finish me off.\n\nDivi said to her mother, \"Show-off,\" and then giggled. Priya pulled her mouth off and swallowed a mouthful of her own saliva. She aimed my cock back at Divi and said, \"Finish him off. He's nearly there. You have to swallow his cum.\"\n\nDivi was anxious to get my cock back but she didn't seem enamored with the prospect of swallowing my load at all. My orgasm was swirling around the periphery from Priya's blow job and I didn't figure it would take long before Divi got me off.\n\nDivi pushed herself out of her chair and moved in between my legs just like Priya had done. She dispensed with the preliminary tongue lashing and pushed her lips right back down to her gag point and started to bob her head up and down my shaft. My head snapped back against the chair and I let out a loud groan. Priya grinned at my reaction. Her beautiful dark eyes stayed right on mine as I got closer and closer.\n\nPriya quietly said, \"Fill her up, Jack.\" Divi's pace quickened. Her suction was incredible and I knew I was a gonner. I set my arms on the chair and involuntarily drove my hips up to aid the launch of my jizz into Divi's mouth. She hadn't timed her retreat very well and my first salvo hit her at the back of her mouth. She gagged and pulled back instantly. She wanted to get off all together but her mother's words rang loudly and she took many shots of cum directly in her mouth. She was forced to swallow a couple times because of the quantity of jizz. Her eyes watered heavily and her cheeks blew out as she gagged a couple more times. I was done.\n\nDivi stayed on the end of my cock until she was sure I was done. She wiped her eyes with her hands and pulled back off my cock. Priya told her to lick the remaining cum from the eye and she complied. Some cum had escaped her mouth and had drooled down her chin and dropped between her tits. She felt it as it drooled lower in her cleavage. She ran her index finger down her cleavage and started to bring it to her mouth but Priya took her hand before she got there and pushed her lips over Divi's finger and licked it clean.\n\nMy cock was softening and Priya pointed it out. Divi watched with fascination until it was completely flaccid and then she grinned at her mother and said, \"It's still pretty big.\" Priya nodded and helped Divi to her feet. I was guessing that the training session was over. Priya pulled on her bikini top and tied it behind her back. She helped Divi with her top and tied it at the neck and back. Divi was so excited. She was grinning so hard I thought her face would crack.\n\nDivi picked up the plate of completely melted ice cream and soggy cake. She giggled as she handed it to me. I looked at it and laughed. I pushed my limp cock back in my shorts and got up. Priya pulled herself in to me and stretched up for a kiss. I bent down and we kissed passionately while Divi looked on. With the kiss over, Priya pulled back and Divya moved in for her kiss. She pushed her tongue deep into my mouth, which I assumed was still a prerequisite for a sexy kiss to teenagers. I was cautious as I watched for Priya's reaction. She grinned and then said, \"Come on Divi. We have to clean up from the party.\" I walked them to the stairs down to the ground and watched them walk toward their yard. Divi was nearly running and Priya stopped, turned around and quietly said, \"Later? Okay?\"\n\nThere was that word again; 'later'. I wasn't sure what 'later' meant exactly but I nodded and said, \"Sure.\"\n\nI went back to my chair and picked up my 'kindle' and turned it on. My mind was consumed by the recent events. My cock grew harder but I ignored it and brought up the book I had been reading. I hadn't been reading for ten minutes before I nodded off to sleep again. When I woke in was dusk. The air was completely still. An occasional boat passed through heading for the far end of the lake. Other than the wakes from the boats, the water was as flat as glass. My stomach grumbled reminding me that I hadn't eaten since breakfast. It was no big deal. I often skipped lunch to compensate for my mostly sedentary life-style. I walked through the breezeway to my front door and went to the mailbox at the edge of the road to collect my mail.\n\nI was standing there scanning the mail when Priya's car backed out of her driveway and headed toward me. I waved expecting her to drive on by like she always had before. It was Divi behind the wheel and she stopped and lowered her power passenger window. I bent down and said, \"Hi Divi. What's up for the rest of your birthday?\"\n\nShe said, \"A sleep-over at Joanna's house. I had planned to kill her but I've changed my mind.\" She giggled as she knew that I knew what that meant. \"Thank you Jack for the best birthday present of my life.\"\n\nI laughed and said, \"Believe me; it was my pleasure.\" She giggled and drove on as the window whirred back up. I went back in the house and stood there in the kitchen opening the mail. It was all junk mail and I tossed it all in the trash. A voice at the sliding screen door startled me.\n\nIt was Priya. She said, \"Nothing good in the mail?\"\n\nI said, \"There never is. What's up?\" as I walked to the screen and slid it back inviting her in. Priya came over on occasion to ask for an egg or sugar or milk or something. I was sure this wasn't one of those occasions. She was still in her bikini and her nipples were pushing hard on the material. My cock surged harder as she walked past me.\n\nI expected her to grab a bar-stool but she walked to the left and turned around at the door to my bedroom and said, \"It's later.\" She turned and opened the bedroom door. My cock was fully erect. Now I knew for sure what 'later' meant. My heart was pounding in my ears. I've fantasized about this for years. I pinched myself to make sure I wasn't dreaming. \n\nI followed Priya and found her sitting on the edge of my bed untying her bikini strings. She lowered her top just as I appeared in the doorway. She was breathing heavily and so was I. She said, \"I've never done this before and I love my husband but I'm tired of my dildos. I have orgasms but they're just not the same as intercourse. I wanted so bad to fuck you this afternoon but I knew Divi would want her turn too. She's a beautiful girl and she is persistent. She is going to be all over you now. It'll be either you or some drone from high school that she'll totally regret. She is on the pill. We both are. I wish I could stop either one but that's not going to happen. Be gentle with her. Teach her. Okay?\"\n\nI came over to the bed and sat beside her. I bent my head to hers and kissed her gently on the lips. She responded with considerably more passion. She pushed her hand down into my shorts and pulled my erect cock out into the air. She groaned in the middle of our kiss and we were off to the races.\n\nI pulled off her lips and moved my lips to her neck and flicked my tongue. She groaned and tipped her head away. She whispered, \"Make love to me. It's been so long.\" I didn't say it but I thought, 'baby you have no idea what long is.' It had been thirteen years since that amazing night with Anna. I was so nervous. It was obvious that she was too. I went very slow as I kissed and caressed her body. I untied the ties of her bikini on her hips and she rolled toward the center of the bed. She was completely naked. Her pussy was sopping wet and her nipples were like nails. Her face, neck and upper chest was flushed with passion.\n\nI stood beside the bed and peeled my tee-shirt off and then dropped my shorts to the floor. She didn't take her eyes of my cock that stood out slightly above horizontal with the floor. I got on the bed and moved up beside her. She took my cock and started stroking it as I went back to her neck. She really reacted to the neck attack. I put my hand on her pubic mound, which was devoid of all hair. I ran my fingers down over her clitoris and into her sex. She moaned, \"Oh fuck. I'm going to cum before we even get started.\" \n\nI said, \"I know exactly what you mean.\" The anticipation was driving me crazy and I was as close to blowing as she was. She desperately held on to my cock. She seemed to be afraid that if she let it go she wouldn't get it back. I touched her clitoris again and she screamed hard and loud as she drove her hips upward like she was searching for more. I pushed my middle finger into her pussy and I wasn't even in to my last knuckle before her pussy started throbbing. She gasped and every muscle went taught as she thrashed around on the bed.\n\nPriya screamed out, \"Fuck. I'm cumming. Oh my gawwd. Fuck me.\" I thought about it but right then was not the right time. I wanted to fuck her into an orgasm and I was sure she did too. I continued the finger-fucking through her orgasm. She was whimpering by the time she settled back down again. She was gasping for air as I sucked on her nipples. She was holding my head tightly to her tits. She directed my lips from tit to tit and I was going wherever she wanted me.\n\nI sat up and turned around so my lips were by her pussy. I blew gently on her sex. The wetness made my breath feel cool. I dipped my tongue into her sex and dragged it from anus to clitoris. Her head thrashed from side to side as she groaned. She held my head in place as she bucked her hips up into my face. I pushed my tongue into her on her upward push. \n\nFinally, she realized that my cock was inches from her face. She grabbed it in one hand and urgently pushed her lips over the glans. She wasted no time pushing all the way down. The sensation of my cock pushing into her throat was incredible. She pulled back and started an amazing blow job. She had to stop on occasion to breathe and gasp as I was going for a tongue induced orgasm. She groaned around my cock and pulled off. She groaned again, \"Oh my gawwd. Fuck. Yes. Here I go agaaaaaiiiinnnnnn.\" She exploded into another orgasm as her pussy was grabbing my tongue at a furious pace. She had to abandon my cock as her whole body throbbed for a long time. Her face looked like she was in pain. I knew she wasn't. I teased her a little by flicking my tongue on her clitoris and she groaned and flinched every time. She pleaded for me to stop and I did. I rolled onto my back and joined her gasping in huge quantities of air.\n\nWhen Priya was back in control of her body again she rolled over toward me and came up on her elbow as she maneuvered her lips back to my cock. Before she pushed her mouth on she said, \"You're going down buster,\" and giggled.\n\nI chuckled and said, \"I was just there.\" She nearly choked on my cock as she burst out laughing.\n\nShe pulled back and cleared her throat before saying, \"You are so bad,\" before pushing her lips back down to my pubic hair. \n\nI groaned hard and said, \"Mae West said, \"When I'm good I'm very good, but when I'm bad I'm better.\" Her head flew back up my cock and she burst out laughing. I figured someone of Indian heritage maybe wasn't too familiar with the wisdom of Mae West.\n\nPriya said, \"Did she have any other notable quotes?\"\n\nI thought a moment as Priya lashed her tongue around my glans waiting for my answer. \"Anything worth doing is worth doing slowly.\"\n\nShe lifted her head and said, \"That's for sure,\" and then slowly pushed her lips onto my glans again.\n\n\"I generally avoid temptation unless I can't resist it.\"\n\nHer eyes flashed at me as she nodded and mumbled with my cock still in her mouth, \"That's why I'm here right now.\"\n\nI chuckled at her response and groaned hard as Priya went to work on my cock. She bobbed up and down my cock for a couple of minutes before pulling back and saying, \"If you cum now will you be able to continue. I desperately want your cock in me.\"\n\nIt didn't matter what my answer was because cum was boiling in my balls and when she pushed her lips back on again, she was met by a surge of cum rocketing up my shaft. She was surprised but she recovered quickly and gulped my jizz down without losing any. She kept right on sucking up and down my shaft until she was satisfied that I wouldn't go down.\n\nShe didn't wait any longer for me to act. She pivoted her body and lifted one leg over my hips. She was straddling me like a cowgirl on a horse's back but she couldn't lift herself high enough to get my glans to her pussy. She had to put one foot down on the bed by my hips and lift herself higher. She guided my cock to her sex and dragged my glans along her sex until she found the right spot. She rolled her hips and pushed down as my cock descended slowly into her vagina. Her head tilted back and her mouth opened as she groaned out, \"OOOOOHHHHHH MY GAAAAWWWDDDD.\" I was thinking the same thing. She was tighter than I expected. My cock surged harder as she descended and she groaned out again, \"OHHHH FUUUUCK JACK. YOUR COCK IS WONDERFUL. FUUUCK MEEEEE.\"\n\nI pushed my hips up as she descended. We ran into trouble about three quarters of the way down my cock. She stopped suddenly with wide-eyes and said, \"Oh fuck. My cervix. Fuck that hurts. I've never experienced that before. My husband is half the length of yours.\"\n\nI lifted myself and rolled her over on her back with most of my cock still imbedded in her. \"Let me take control. My wife had the same issue and we discovered that she couldn't control the depth when she was on top positioned like that.\" Priya smiled up at me and pushed her hips up at me with a sultry grin on her face.\n\nI pushed down slowly to find her limit and she groaned hard as I got there. She said, \"Stop right there and don't move in or out.\" She pushed her hands down between us and wrapped both hands around the protruding part of my cock and then smiled up at me and said, \"Fuck me Jack.\" Her solution to the problem was genius. I fucked her pussy with most of my cock and her hands with the bottom half as she held the heel of her hands tight to her pussy. \n\nShe pressed her head back into the bed and groaned out, \"Oh my God. This is better than I hoped. I love your cock.\" This was the first pussy my cock had felt in a long time and I had forgotten how incredible the sensation was. Priya's facial muscles contorted as she continued to groan loudly. I bent low and sucked her right nipple onto my lips and then her left. She screamed as the move had changed the angle of attack with my cock. I pulled back and slowed my pace to see if I was hurting her. She screamed, \"Don't slow down. Fuck. I'm so close. Harder. Give it to me Jack. Oh please, give it to me.\"\n\nI ramped up my pace again and I could feel my balls pulling up tight. Priya loudly exclaimed, \"OOHHH...OHHH...OOHHH\" in sync with each thrust and then she screamed, \"YES. I'M CUMMMINNNGGGG.\" \n\nI couldn't believe how tight her orgasmic spasms were. Her orgasm pulled me over the top of mine and I shuddered as my muscles locked up tight until cum spewed into her pussy. Priya, screamed again, \"OH GOD. YES. I'M FUCKED.\" She pulled her hands off my cock and grabbed my neck and pulled me down to kiss her. We kissed while we finished our orgasms and then I collapsed down on her chest. My cock had softened enough so her cervix was not a problem. I could feel her vagina clenching and I responded with manual flexing that caused Priya to start giggling. She said, \"Are you doing that on purpose?\" I nodded. \"That's incredible. I didn't know a guy could do that other than during an ejaculation.\" I flexed my cock again and she shuddered and then giggled again. She manually clenched her vaginal muscles.\n\nI laughed and said, \"Wow. You've been working out.\"\n\nPriya giggled and said, \"I do Kegel exercises every day.\"\n\nI remembered Anna doing pelvic floor workouts all the time. Her mother had a prolapsed uterus at an early age and she didn't want that to happen to her. If she'd known her future, she wouldn't have bothered.\n\nMy weight was distributed on my elbows so as not to crush her. I lowered my lips to hers and kissed her as she ran her hands to my waist and then up to my shoulders and pulled me down to her chest. She passionately kissed me back. I pulled back and said, \"Divi told me that she was going to her friends for a sleep-over. Can you stay the night? It's been a long time and I'd like a chance to do better.\"",
        "Priya burst out laughing, pushing her tits up against my chest in the process. \"If that was you; out of practice, I'm a dead woman. I was hoping you'd ask.\" She stretched up and kissed me and I flexed my cock one last time as she giggled around our kiss and crushed my cock with her own clench.\n\nWe showered together and messed around some more. We both knew we would be back at it before dawn and probably again before getting up in the morning.\n\nIn the near total darkness of 2:22 AM with the only light coming from the digital clock on the night table; I felt a gentle vibration in the bed. I was on my back with the covers down to my waist and when I opened my eyes I first noted the blades of the ceiling fan lazily rotating. I could feel the air being pushed down from them. The air was cool on my exposed chest. The vibration that woke me was Priya rapidly strumming her fingers in her sex. I could barely see the rapid movement of the covers in the dark.\n\nMy cock quickly grew to full stature and rose to tent the covers. She must have noticed the tent because she whispered, \"Are you awake or is that just your morning woody.\" Her fingers didn't even slow down.\n\n\"You're getting ahead of me aren't you? No fair, you're cheating.\"\n\nShe giggled and said, \"Well, from the size of that tent, I'd say you caught up pretty quick.\"\n\nI chuckled and said, \"I'm ready any time you are.\"\n\nShe giggled again and rolled toward me and sucked in my closest nipple as she threw her top leg over both of mine and pushed herself up on top of me like she was sliding into a saddle. I took all of her weight as she leaned forward and pressed her tits into my chest. She stretched up and kissed me hard on the lips. I kissed her back in kind.\n\nShe whispered, \"I'm so incredibly horny right now. I don't want any foreplay or preliminaries. I just want you to fuck me as hard as you can for as long as you can. Don't delay your orgasm waiting for me. I'm nearly there already.\" Then she reached between our bodies for my rigid cock trapped under her stomach and pulled herself up my body until my cock pushed up between her thighs. She reached across her ass-cheeks and guided my cock into her pussy and then slid herself down onto my shaft. In the light from the clock I could see her face screw up tight as her mouth opened and she groaned hard until she had taken as much of my cock as she could.\n\nI wanted so bad to rock my hips upward as she slid down but I was conscious of hurting her and restrained myself. She tested her limits by gently bobbing her hips up and down. When she was satisfied, she pulled her hips back to my glans and thrust herself back down, slowing as she got deeper. She groaned hard but not from pain. She had the measure of me and she started fucking me at an insane pace. I couldn't believe how fast she was going. Her ass was like a piston. I groaned out, \"Jesus Priya.\" \n\nShe lifted her head off my chest and screamed, \"Jesus Jack. I'm cumming. Oh my gawwd.\" Her pace slowed considerably. She pulled her legs up and pushed her knees into my waist and went back to pummeling my cock. She tested this position and found out that with her current state of arousal, she could take all of my cock. Knowing that, I took over the action and grabbed her hips and started driving my cock into her pussy. I was intentionally stopping an inch or so short. I didn't want to hurt her.\n\nPriya felt my surging hardness and screamed out, \"Jack. Oh fuck. Yes. Yes. Here I go again. OOOOHHHH.\" Her pussy was clamping hard on my cock and that action pulled me into an intense orgasm that gripped every muscle in my body from my face to my toes. I contorted hard and a groan started out of my throat until I was crying out, \"Jesus. Fuck. Oh Fuck. Yeah.\" Cum exploded up my shaft and filled Priya up. Our combined actions pushed cum out of her with each thrust. \n\nPriya suddenly sat up straight and pulled her feet out in front of her under my armpits. She leaned back with her hands at my knees and her arms locked. From here, Priya bent my cock back toward my feet and started quickly rocking her pussy on and off my cock. I couldn't believe it but she was soon in another orgasm. She kept driving her pussy forward and back on my spent cock. She recovered and rolled right into another one. She kept this up until my cock softened so much that she wasn't accomplishing anything.\n\nShe tucked her feet back behind her ass and collapsed gasping for air to my chest. I held her there with my arms across her back and kissed her forehead while I ran my hands down her back to her slim waistline and then up the slope of her ass and over the top and then back up again. I repeated this many times until our breathing recovered and Priya rolled off me back to her side of the bed and cuddled back up to me on her side with her top leg draped across my thigh. She wrapped her fingers around my flaccid and sticky cock and just held on to it.\n\nPriya muttered, \"Fuck. That was incredible. I rarely have multiple-orgasms. Naveen is having erection problems and he can't keep one for very long. I'm lucky if I can get one orgasm. He's good though. He'll finish me off with his tongue if his cock can't.\" We fell back to sleep above the covers without any further words spoken. I really didn't want to continue the discussion about her husband.\n\nThe sun was well above the horizon when I woke. I never slept this late. I glanced at the digital clock and it read 8:42 AM. I realized that I never woke in the middle of the night for hot and vigorous sex either. Priya was lying on her stomach and drooling on her pillow. I rolled gently on my side so as not to wake her. I examined every inch of her amazing naked body. Her ass was perfect, by anyone's standard. Side-boob was visible with her arms cradled into her pillow.\n\nShe seemed to sense that I was awake and looking at her. She opened her eyes and looked over at me with the one eye that wasn't buried in her pillow. \"What are you looking at?\" she mumbled into her pillow. I didn't answer. She rolled over on her back and said, \"Wow. Was that a dream?\"\n\nI replied, \"If it was, I was having the same one.\" Priya moved over close to me and kissed me and said, \"One more time, before I have to go? I want to be home when Divi comes home. She doesn't need to know about this.\"\n\nI laughed and said, \"Are you kidding. Just say the word.\"\n\nPriya looked down my body and grinned at my rising wood. She glanced away and hesitated. I sensed something was wrong so I rolled on my side and pulled her chin up to face me. \"Is something wrong?\"\n\nShe said, \"No, not really. We can do this any way you want but ... ummm ... I'd love to ... ummm ... I'd love to have anal intercourse with that monster between your legs. I acquired a taste for anal in college but my husband thinks it's disgusting and dirty. He won't do it that way. It's been nearly twenty years. I use a dildo there but it's not the same. I hope you aren't grossed out by it. Many men are.\"\n\nI grinned at her and said, \"Consider it done. My wife liked it in the ass too. It's been forever since then but if I recall correctly, all I have to do is one: use lubricant and two: go slow until you don't.\"\n\nPriya's mood was instantly upbeat and she giggled at my list of things to know. She immediately maneuvered onto her stomach again and grabbed her pillow and shoved it under her hips. \"I like the 'speed-bump position',\" she said. She settled her hips into position. Her perfect ass lifted like that was driving me crazy and my cock surged even harder. I knew exactly what to do. I got out of bed and went to the medicine cabinet in the bathroom and grabbed the jar of petroleum jelly. The K/Y Jelly that Anna kept around for these occasions dried up long ago and I threw it out.\n\nWhen I got back, Priya was humping on her hand pushed under her hips. I sat on the edge of the bed and scooped a generous portion of jelly onto my fingers. I pushed a large dollop of jelly onto her anus. She flinched from the cold jelly and then groaned hard as my index finger pushed the jelly inside as far as I could reach. I left my finger in her for a while to allow her to adjust. When I pulled out she shuddered hard with anticipation. I ran a thin coat all around her rosebud and then used the rest to lubricate my throbbing cock paying particular attention to the glans.\n\nI got on the bed with my knees between her legs. I took my cock in my hand and dragged the glans between her butt-cheeks heading for her anus. She groaned as my cock bypassed her rosebud and pushed past her fingers into her pussy. I pushed all the way in, confident that I wouldn't hurt her in this position. She whimpered as I fucked her that way for a minute or so. Then I pulled my cock out and ran my glans, lubricated by her natural lubricant and the petroleum jelly up to her anus.\n\nPriya was already gasping for air. I put my glans to her rosebud and pushed firmly but slowly. Priya groaned hard and pushed back just as firmly. We spent at least a minute pushing together before my glans suddenly pushed past her tight sphincter. She groaned and I stopped until she signaled that she was ready to proceed. Three minutes later I was completely imbedded in her anus. Her sphincter pulsed tightly on my cock. I stopped and let her adjust again. Going slowly still, I pulled my cock back out again. Her sphincter muscle started to relax after a couple cycles and then the go-slow part was over and Priya took over the action.\n\nWhen she pushed back hard on me, she let out a loud scream. I thought I was hurting her and stopped and began to pull back. Priya screamed, \"Fuck no. Don't you dare stop? Go. Fuck. Go.\" I did as instructed and began pummeling her anus in full length glans to balls strokes. Jesus her ass was tight. I wasn't going to last long. Fortunately, she didn't last long either. Her fingers were working her pussy and clitoris and she screamed all the way into her orgasm. She didn't have an anal orgasm like Anna had, but her vaginal orgasm was violent. She turned to look back at me pummeling her ass. Her eyes were bugged wide and her mouth was open in a long groan that ended with her holding her breath. If I didn't know better, I'd have sworn she was in agony. \n\nI was gasping from my physical efforts and then, there it was. My orgasm crushed me. Cum streamed deep into Priya's bowels. She felt it too and she sucked in a huge breath of air and let her head drop to the bed. I could feel her vaginal clenches even though I was buried in her ass.\n\nPriya let her hips fall heavily on the pillow pulling my cock from her bowels. I pulled back and extricated my cock from her anus. We both lay in a heap urgently gasping for air. When we recovered, Priya spoke into the mattress that surrounded her face, \"I remember now what I was missing. She rolled on her side and said, \"Jack. Your cock is perfect for anal intercourse. I don't want to miss this again.\"\n\n\"I forgot that I had missed this too,\" I said. \n\nA giggling sound came from the bedroom doorway. I didn't have to look. I recognized the giggle. Priya did too and she groaned as she buried her head under my pillow like an ostrich burying its head in the sand.\n\nDivi walked into the bedroom and sat down on the edge of the bed beside me. She motioned toward the door and we were joined by Joanna. Her face was flushed red with embarrassment and she wouldn't look at anyone except Divi.\n\nDivi was amused by Joanna's reaction. She later told her mother and me that she had confessed to Joanna her new experiences from yesterday afternoon. Joanna didn't believed her and was apparently upset that Divi had surpassed her own experiences, which it turned out wasn't too difficult because when push came to shove, Joanna confessed that she had never had any sexual experiences and she was sure that Divi hadn't either.\n\nNow in my bedroom with a naked mature man and a naked Divi's mother and Divi acting like it wasn't anything unusual, she wanted to just disappear. Divi was having nothing of her bullshit and said, \"Come on Joanna, let's join them. Jack's cock is amazing. With your experience, it's probably no big deal though. I got right away what Divi was up to and Priya pulled the pillow off her head and sat up. She still couldn't look directly at her daughter though. She was caught red-handed having sex with a man not her husband. She was sure that Divi would be discreet seeing as how she had oral sex with the same man the day before.\n\nPriya whispered to Divi, \"How long have you been watching us?\"\n\nDivi said, \"About a half hour. It seems that I have many other things to learn.\" Priya buried her face in her hands and groaned.\n\nI got off the bed and headed for the bathroom to clean off my cock. I stated to no one particular, \"I guess I'd better start locking my doors.\" When I returned, I sat down on the edge of the bed between Divi and Priya.\n\nDivi looked down at my cock lying peacefully along my left thigh. Divi reached over and wrapped her fingers around it and lifted it up saying, \"Joanna, watch how big Jack's cock gets when I jerk him off. I gave her a stern look and she winked at me and slightly nodded at Joanna. I got it. Divi started stroking my cock from ridge to balls after spitting into her palm. My cock quickly grew and Joanna's eyes did the same as she couldn't resist looking even though she obviously wanted to be anywhere else at that moment. \n\nWhen my cock was at full size, Joanna muttered, \"Fuck, that's huge.\" Divi aimed my cock at Joanna indicating that she should try it. Joanna looked everywhere around the room faking that she hadn't seen Divi offer the cock to her.\n\nDivi released my cock and stood up beside the bed and to the shock of everyone else; she took all of her clothes off. Her nipples were like nails. She cupped her breasts in her hands and pinched her hard nipples. Joanna was completely embarrassed then. It was now obvious to her that Divi had been telling the truth about yesterday afternoon. \n\nDivi took Joanna's hand and more or less dragged her to the bed in front of me. I wasn't about to touch her. Divi knelt down on her knees between my legs and pulled Joanna down beside her. My cock was bobbing up and down and Divi took it in her hand again. It surged harder in her hand. She cupped my balls in her other hand and looked at Joanna who was just staring wide-eyed at my cock. Divi said, \"You just have to see this. His balls move all by themselves. Here feel them.\" \n\nJoanna's hands were on her thighs and she had no intention of moving them. Divi released my balls and reached over to Joanna and forcefully pulled her hand to my balls. It was obvious that Joanna was terrified but I could see that she didn't want to appear completely inexperienced, so she cradled my balls in her hand and Divi released her wrist. She was nearly in tears but when Joanna felt my balls move, she grinned at Divi and then at me. She was warming to the idea as she took her other hand and with some trepidation, wrapped her fingers around my cock just above Divi's hand. Her fingertips didn't come together on the girth. She squeezed hard attempting to duplicate Divi's grip; but Divi was at least six inches taller than Joanna and it wasn't going to happen. They both started jerking me off in sync.\n\nPriya's view was blocked by my body so she moved on her hands and knees up behind me and positioned herself up on her knees looking over my shoulder down into the grinning faces of Divi and Joanna. I felt Priya's erect nipples drag across my back.\n\nDivi looked at Joanna and said, \"Before we start the next part, you have to get out of those clothes.\" The grin on Joanna's face was instantly gone. Divi released my cock to Joanna's control and turned toward her and started unbuttoning Joanna's blouse. Joanna didn't resist but she wasn't going to help. Joanna had to release my cock and balls so Divi could pull the sleeves over Joanna's hands but as soon as they were clear, she grabbed my cock with both hands and resumed her hand job as she examined my cock closely. She seemed fascinated by my glans. She released the shaft with one hand and gently squeezed the firm but velvety tip between her thumb and index finger. Divi was working on getting Joanna's skirt off.\n\nJoanna was breathing very hard as she lifted herself so Divi could remove the skirt and then her thong. She had worn no bra so now she was naked except for her sneakers. Divi pulled those off. She had small breasts; no more than an 'A-cup' but her nipples were more than a half inch long and they were very erect.\n\nTo my surprise and Priya's too, I expect, Divi moved behind Joanna and reached around Joanna's body from both sides and cupped her breasts in both hands and then gently palmed her nipples. Joanna's torso reacted immediately by pulsing forward and then back into Divi's breasts. Her mouth opened to form an 'O' as her eyes closed tight and her chin lifted. Divi looked up into her mother's eyes with an erotic smile on her face. When Divi released Joanna's tits Joanna exhaled forcefully and leaned forward to break the contact with Divi's breasts. As Divi moved back to her original spot she was massaging her own breasts and pinching her nipples again.\n\nI couldn't see Priya's reaction so I turned to look over my shoulder. She was just pulling her jaw back in place. Her eyes were still displaying her shock. Joanna had stopped stroking my cock while Divi was palming her tits but she didn't let go and now she renewed her hand job with vigor. She turned to Divi and whispered, \"What's next? When does he shoot?\"\n\nDivi giggled and said, \"If you keep doing that, he'll shoot pretty soon but I want to show you some other stuff.\" Joanna stopped her hands and aimed my cock at Divi. Joanna didn't seem to be so embarrassed anymore about her lack of experience as she eagerly pulled her ass off her feet and knelt tall with her hands on my left thigh. She was now anxious to learn.\n\nDivi took my cock and started her own two handed hand job as she positioned herself so she could lower her head toward my glans. Joanna was wide-eyed and slack jawed as she watched Divi drop her lips to my glans. I had to chuckle to myself when Divi took Joanna through the same training process as Priya had done with Divi yesterday. I looked back at Priya to see her reaction. She glanced at me and smiled.\n\nDivi lashed her tongue around my glans working the super-sensitive spot on the underside of the ridge and I groaned hard. Divi smiled at my reaction and then aimed my cock back at Joanna who scooched in closer and positioned herself just like Divi had. She followed Divi's instructions to the letter and when she flicked her tongue on my spot, I groaned again to Joanna's delight.\n\nWith that lesson complete, Joanna gave my cock back to Divi who leaned in and pushed her lips down over my glans. Joanna's eye nearly bugged out of her head as she mumbled, \"Jesus Divi.\" Divi flicked her tongue around and around my ridge with the glans in her mouth and then she pushed her lips further down my shaft as she held my cock in place with one hand. She had abandoned her training plan and was now fully engaged in a combination blow job and hand job. Joanna leaned in close to watch Divi's lips stretched around my cock as she pushed halfway down my shaft. Her cheeks hollowed as she pulled back up. Her hand was in sync with her mouth. Joanna was in a trance watching Divi suck my cock.\n\nI was getting close to cumming when Divi pulled back and licked the saliva off her lips before aiming my cock at Joanna. Divi had a huge grin on her face. She was so pleased with herself. Priya leaned close to my ear and whispered. \"See. She's a natural born cock-sucker...Just like her mother.\" I chuckled as Priya's hands came around to my chest and started fingering my erect nipples. 'She was getting into this,' I thought.\n\nJoanna eagerly accepted my cock back in her hand and made another attempt to close her fingers around the girth with the same results as before. She leaned down to duplicate what she had seen Divi doing. She got her lips down over my glans and then pulled back. The eager look in her eyes was gone. She turned to Divi and said, \"You took so much. How did you do that? It's too big.\"",
        "I was surprised when Priya spoke over my shoulder, \"That's alright Joanna. This cock is bigger than most. You may never see another like it. Take as much as you can until you gag. Then grip his cock with your hand just above that spot. Then when you are giving him a blow job you won't take too much.\"\n\nJoanna was embarrassed again and she looked for encouragement from Divi. Divi smiled at her and said, \"Do what my mom said.\" Joanna pushed her lips to the tip of my glans and pushed them down to the ridge. She stopped there for a moment and then pulled back off again. She licked her lips and went right back down again to the same spot at the ridge. I figured she had found her depth right there but she didn't mark the spot with her hand.\n\nJoanna held her position at the ridgeline for several moments as if gaining courage to proceed and then slowly pushed her lips lower. Priya was breathing hard in my ear. I turned to look at her but she was concentrating on Joanna perched on top of my glans. When Joanna pushed lower I groaned and so did Priya. I was concentrating so much on what Divi and Joanna were doing that I hadn't realized that Priya had a grip on my arm and was grinding her sex on my elbow. It was subtle at first but now she was groaning enough to get Divi's attention. Priya's forehead was on my shoulder so she didn't see Divi look up to see what her mother was doing. Divi smiled at me and returned her attention to Joanna, who now had two inches beyond the glans in her mouth. She hadn't started her blow job. She was gingerly searching for her gag point.\n\nShe found it after another inch as she heaved up and gagged hard. She did as instructed and wrapped her fingers around the shaft just above her gag point. Saliva was pouring out of her mouth and down the length of my cock to my balls. Tears flowed from her eyes smearing her makeup. She slowly pulled back to the safety of the ridgeline and then resolved herself to do this and she quickly drove her lips down my shaft to her hand and then just as quickly pulled back. She turned her tear-soaked eyes to me to see if she was doing it right. I groaned hard and she formed some sort of a smile around my cock. \n\nJoanna's blow job was actually pretty good for her first time. Divi was grinning at her and then me as she sat there with her ass on her feet. I could tell that she really wanted it back for herself but she watched intently. Priya was watching too. She was watching me to see if I was going to cum. After a couple minutes of Joanna's mouth I was getting close and Priya knew it.\n\nTo everyone's surprise, Priya burst out, \"Don't make him cum yet. I want to show you something else.\" I turned to look at her. Her face was flushed with sexual arousal as she maneuvered herself off the bed from behind me. Her pussy was sopping wet with her juices smeared all over her crotch from humping my arm.\n\nJoanna stopped her blow job and pulled back and then off. My cock was slick with Joanna's saliva which seemed to embarrass her. She started to wipe the saliva off with her marking hand but Priya told her to stop as she hit the floor and moved in between the two girls. I had no idea what she was going to do.\n\nPriya got down on her knees between the girls and positioned herself with my cock at face level. Divi and Joanna stared at her as she took my shaft and pushed her mouth over the glans and without preamble, pushed her lips all the way to my balls. Divi had seen her mother do that yesterday so she didn't react now. Joanna gasped and pulled her hand to her mouth and stared in awe as Priya drove her mouth up and down my shaft. I figured that Priya was just showing off her skills as she pulled my orgasm to the surface.\n\nPriya knew exactly when I was going to blow and with mere seconds to go, she pulled off the head of my cock and laid my cock on her nose and furiously started jerking me off. Cum was boiling in my balls and I started groaning as my muscles seized. My fingers balled tightly into fists and my toes curled under gripping the carpet. \"You girls come in close to my face,\" said Priya. Divi moved closer to her mother and pressed her face right up close so they were cheek to cheek. Joanna did the same on the other side. It was clear that the girls didn't know what they were doing that for but they went with it anyway. Priya's hand was flying up and down my cock as she stared up into my eyes. 'Damn, she has beautiful eyes,' I thought. I looked at Divi who was also staring up at me too. Her bright eyes and sultry smile were incredible. Joanna was looking at Priya with my cock bouncing off her nose.\n\nI held back my orgasm until I couldn't anymore and cum blasted out in long streams, directly into Priya's face. She took two huge shots and then turned my cock toward Divi. She was startled when a strong blast of cum launched across her face but she stayed right there. After the second shot in Divi's face, Priya turned my cock toward Joanna. When Joanna felt the warm jizz land on her face she instinctively pulled away. Priya was expecting that she would so she followed her movement and the last two salvos hit Joanna on her tits. When Priya was satisfied that I was done she pushed her lips over the glans and pushed all the way down again. I could feel her tongue lashing my cock along the way to clean me off. She pulled off and offered my cock to Divi who without hesitation pushed her lips down lashing her tongue around my shaft like she had seen her mother do.\n\nJoanna was sitting back on her feet with her hands out to her side staring down at the pearly white and gooey substance clinging to her nipples. She had a horrified look on her face and she didn't move a muscle. \n\nPriya noticed Joanna sitting there like a statue. So did Divi. Priya reached over and used her index finger to scoop up cum that was dangling off Joanna's left nipple. Joanna stared at Priya's cum covered finger as she lifted it straight up to Joanna's face. Divi moved around to Joanna's right and scooped cum from Joanna's face and pushed her index finger into her own mouth and made a big show of how delicious it was. Priya and I watched and Priya grinned up at me. We both knew Divi didn't care for the taste at all.\n\nJoanna was intrigued and leaned forward and opened her mouth so Priya could push her cum covered finger inside. She closed her lips and Priya pulled out a clean finger. Everyone watched Joanna's face to see her reaction to her first taste of cum. As expected, she didn't like it and she stuck out her tongue with a \"Yuuucckkk. That's awful.\"\n\nI chuckled when Divi said, \"It's an acquired taste. You'll get used to it.\" Priya burst out laughing. I was looking down at three beautiful women with their faces and tits covered in cum. What an erotic sight that was. Joanna was a trooper as she helped Divi and Priya wiping cum from each other's faces and push their fingers into their own mouths. Only once did Joanna lurch forward with open mouth in a retch but she recovered and kept going. Divi wasn't a fan either but she wasn't going to reveal that fact to Joanna.\n\nPriya was shocked when Divi bent low in front of Joanna and sucked each of her nipples into her mouth and licked each one clean. She sat back up and noted the look on her mother's face and said, \"What?\" Then Joanna did the same to Divi and Divi held Joanna head in place while she sucked on her nipples and then licked her fleshy tits. Priya watched closely. I noted that she had a sultry look on her face as she watched. Divi groaned from Joanna's attack on her tits. She recovered and glanced quickly at her mother and was surprised at the lascivious look on her face.\n\nWhen Joanna pulled back to her original position there was a brief look between the girls. Without words they had communicated a plan and Divi moved back to the left side of Priya who was watching her intently. She had seen the look between the girls and she wasn't sure what was up. I saw the look too and I had some idea of what would happen next.\n\nDivi put her index finger to her mother's face and then leaned in and licked her cheek and then kissed the same spot. Priya's hand went to her cheek and she turned toward Divi. Divi met Priya's lips as she turned and Divi kissed her mother with considerable passion. I expected that Priya would pull away but she didn't. She kissed Divi back with the same passion. Divi pressed her hand to Priya's shoulder pushing her down to her back. Priya didn't offer much resistance and she and Divi went down together with lips locked.\n\nJoanna took the opportunity of Priya's distraction and lowered her lips to Priya's right nipple. Air exploded from Priya's lungs in a loud and long groan. She turned to look at Joanna who was anxiously looking up at Priya with her lips firmly attached to her nipple. She rolled the nubbin around with her tongue. Priya moaned, \"Oh my God. What are you two doing to me?\" Divi smiled at me and then lowered her lips to her mother's left nipple. Priya wrapped her arms around the necks of both girls and groaned hard as she lifted her hips up off the floor displaying her gushing pussy to me.\n\nDivi motioned for me to come down and join them. There wasn't much room between the edge of the bed and Priya but there was enough. My cock was back to full size from watching the antics of Joanna and Divi. I slid over the edge and dropped to my knees between Priya's spread legs. Priya couldn't see what I was doing because Divi's and Joanna's heads were blocking her view as they continued their assault on Priya's breasts. Their hands had worked their way down to Priya's pussy. This whole thing was taking a weird turn but I was extremely turned on by it.\n\nI reached under Priya's thighs and lifted her up so I could get my knees under her ass. Divi and Joanna both looked to see what I was doing and then went right back to Priya's tits. Priya continued to moan as I raised her feet to my shoulders. Priya understood what was going on then and she moaned out, \"Oh my God. This is my favorite position.\"\n\nI dragged my cock along the girls probing fingers and pushed the glans into Priya's pussy. She pinched her thighs together to increase her tightness on my cock. Divi lifted her head from Priya's tit to watch my cock slide deep into her mother's pussy. She grinned at Joanna who grinned back. Joanna was clearly more comfortable with lesbian sex.\n\nPriya released the girl's heads and moved her arms back so she could prop herself up to watch my cock fucking her pussy. I was careful not to impale her too deeply and hurt her. The left over petroleum jelly worked perfectly to allow my cock to slide along her clenched thighs. This position also worked to allow Priya to control the penetration by opening and closing her thighs. I drove my cock in as far as she permitted. \n\nDivi moved down Priya's body to get a close up of my cock sliding in and out. I was surprised when she reached down and grabbed my cock out of her mother's pussy and dropped her lips over my glans. She sank her mouth as far as she could and then pulled all the way off. She smacked her lips and flicked her tongue around them and said, \"Mom. Your pussy really tastes good.\" Priya burst out laughing. Joanna came down and sampled Priya's juices on my cock too and then Priya said, with considerable urgency, \"Please put it back in. I'm almost there.\" \n\nDivi and Joanna obviously understood what \"there\" meant and Joanna pushed my cock back in Priya's pussy. They had probably used their tongues or dildos to get each other off before. Divi reached under Priya's leg and found my balls and began fondling them. She looked at Joanna and said, \"You have to feel this. His balls are really moving. Joanna put her hand under my balls beside Divi's. The look on her face was precious. She looked in awe at Divi.\n\nJoanna said, \"Awesome.\" I began driving my cock back into Priya's sex and the girls had to abandon my balls. Joanna's eyes went wide as she watched my muscles tighten in preparation of my pending orgasm. She grinned at my facial contortions. My cock hardened with anticipation and Priya screamed, \"Go. Go. I'm cumming. Oh my God.\" I let myself go and jizz rocketed up from my balls. Six hard evenly spaced shots of cum filled her up. She was screaming and thrashing from our combined eruptions. She grabbed her own tits and squeezed them harder than I ever would.\n\nWe were both gasping for air as Divi and Joanna, consumed by lust, resumed their attack on Priya's tits. Face to face with their lips clamped to Priya's nipples they were communicating again with very few words. They each released the nipple on their lips and I saw the look on Divi's face as Joanna shook her head in reply. Divi nodded with a grin and Joanna gave her a stern look and shook her head again.\n\nWhen I had recovered, I pulled my softening cock from Priya's pussy. Cum oozed from her pussy and she clasped a hand over her pubic mound and quickly moved back and hurried to the bathroom. As our legs untangled, I could see that she was oozing cum from her anus too. \n\nDivi followed her mother to the bathroom and I could hear them talking softly but urgently as Priya cleaned herself up. I couldn't make out what they were talking about. Joanna sat where she was and stared at my softening cock. She was sitting on the carpet with her legs crossed like an Indian and I could see that her pussy was soaking wet. When she saw me looking down there she put a hand down to cover her sex. It wasn't long before she was dragging her fingers along her labia to her elongated clitoris. She smiled at me and I smiled back.\n\nWhen Priya and Divi came back in the room Priya helped me to my feet and fondled my flaccid cock. She said, \"Divi wants you to fuck her. I explained that guys can't just have multiple orgasms like women can. She wants to try. I told you she's persistent.\"\n\nI shrugged my shoulders and said, \"I'm okay with it if you are, if she can get me back up again.\" Divi broke into a huge grin and she jumped up and down clapping her hands. Just the bouncing of Divi's tits would give me an erection under normal circumstances. I sat down on the edge of the bed and Divi dropped back to her knees and lifted my flaccid cock to her lips. She gazed into my eyes as she sucked and stroked. She giggled when she realized that she could deep throat my soft cock and she got a kick out of burying her nose in my pubic hair. Joanna watched closely but she didn't want any part of having intercourse.\n\nI wasn't too surprised to see that my cock was steadily rising to the occasion. Divi realized that she couldn't deep throat me anymore and was delighted that she was getting me back up again. She kept at it until her lips were back to the depth that she could take before. I was at full size again and Divi was anxious to get on with it. She pulled her mouth off the glans and ran her tongue around her lips. I moved back on the bed on my back. Priya moved onto the bed and showed Divi how to position herself over my hips and how to hold my cock to guide it to her vagina. There was no problem with lubrication but Priya coated my cock with more petroleum jelly just to make sure.\n\nI looked up at Divi's gorgeous face and locked onto her beautiful eyes. My cock surged even harder when she wrapped her fingers around my shaft and pulled me up. She had to lift herself up on one knee and one foot to get high enough to drag my cock between her labia. She groaned hard when my glans dragged across her clitoris. She started to drop herself onto my cock but stopped and made an adjustment. Priya took that moment to lean in and kiss Divi with passion. \n\nI steadied Divi by grabbing her hips. She slowly dropped her pussy down my shaft. The tightness was incredible. I wasn't sure if I would encounter her hymen or not but I was prepared to pull her down quickly if necessary. Priya had the same thought as she positioned herself to accomplish the same thing if necessary.\n\nDivi had knowledge of dildos so she probably used one to break her own hymen. Divi dropped lower and she groaned with a painful look on her face and I figured that she was probably really feeling pain. A little more than halfway down, her eyes went wide and she stopped immediately and groaned hard. Priya said, \"That's your cervix Honey. That's as far as you go. Most guys' penises are five or six inches long and you won't have any problems with them.\" Priya looked to get Joanna involved and she asked her to grab my cock and hold it at the point that I encountered Divi's cervix.\n\nDivi looked at her mother and said, \"I don't understand. When we got here Jack was fucking you with all of his cock. How do you take it all and I can only take half?\"\n\nPriya laughed and said, \"Honey. When you came in Jack and I were having anal intercourse. He was fucking my ass, not my pussy.\"\n\nDivi was really confused. She apparently had no knowledge of anal sex. We all burst out laughing when she said, \"You mean where you poop from?\" She was embarrassed by her question and our reaction and she turned beet-red. Tears formed in her eyes. She was upset now. Priya moved to her and hugged her as she was perched on top of Joanna's hands with my cock buried to the bottom of her vagina.\n\nPriya hugged her daughters face to her chest and kissed her forehead. \"Oh baby. Don't be upset. This is a magic moment for a woman. There is a lot for you to learn and I hope you never stop learning all the different ways that please you and your partner.\" She paused for several moments running her fingers through Divi's lustrous black hair. Then she said, \"Now. You've got a big cock in you and you need to finish him off. He's waiting.\" Divi grinned at her mother and pulled her pussy up my cock and tested whether Joanna's hands would prevent her from driving down to her cervix. When she was satisfied, she went to work fucking herself on my cock. She groaned with each thrust and so did I. I couldn't believe how tight she was. I didn't expect that Divi would have an orgasm during her first time and she didn't. I waited for her anyway for as long as I could and then my balls told me I was moments away. Even though I knew she was on the pill, I didn't want to cum in her and I tried to push my hips down in the bed to pull my cock from her pussy. She would have none of it though and she followed me lower and she screamed out, \"Oh my gawwd. You're getting bigger. I can feel you cumming in me. That's amazing. I wondered if I would feel it or not. Mom. Thanks you for letting me do this.\"\n\nI shot eight salvos of cum in Divi's pussy. Priya was grinning. Divi was delirious and Joanna was ecstatic that Divi had this experience. Divi turned to Joanna and said, \"Oh my God, Jo. You have to try this. It's incredible.\" Joanna just waved her hands at Divi and shook her head. Divi pulled herself up my cock and then continued to fuck my softening cock. She was taking all there was then and she liked that. She fucked me until my cock literally fell out of her vagina and laid there on my pelvis unmoving.\n\nShe moved down my legs and lifted my flaccid cock and sucked it into her mouth. I thought she was trying to get me back up but she wanted to see what her own pussy tasted like. She pulled off and smacked her lips and said, \"Amazing. Mom, I taste just like you.\"\n\nNow Joanna was interested and she moved in to suck my cock into her mouth and she licked all around and pulled back with a smile. \"It does taste like you,\" she said. Divi gave Joanna a scathing glance. Joanna had revealed that she and Divi were performing oral sex on each other. Divi was clearly not pleased with that revelation. Priya didn't react to Joanna's statement but it was clear that she fully understood the meaning.\n\nPriya got off the bed and found her bikini on the chair across the room where she dropped it last night. She pulled her top over her head and fitted the cups to her breasts. She traced the string around the back and tied it tight. She pulled on her bikini bottom and pulled it smoothly to her hips and adjusted the crotch. Divi and Joanna took the hint and they picked their clothes off the carpeting and pulled them on. ",
        "Priya wanted to say something to me in private so she asked Divi and Joanna to wait for her on the deck. Divi was skeptical of her mother's intentions and said, \"Don't be long.\"\n\nWhen the girls left the bedroom, Priya crawled back up on the bed and kissed me and said, \"Thank you Jack. I had an amazing time.\"\n\nI kissed her back and said, \"So did I. I hope this isn't a one night stand. I was just starting to feel like I knew what I was doing.\"\n\nShe gripped my flaccid cock and bent down to kiss my velvety crown and then said, \"No way is this a one night stand.\" She dropped down to the floor and stopped at the doorway. She turned and pursed her lips and threw me an air-kiss before she disappeared.\n\nI dropped my head back in the pillow and reviewed what had happened in the past twenty hours in my mind. I wondered how long it would be before Divi was back for more. I drifted off thinking about how much I liked my neighbors. I knew many people who hated their neighbors but I doubted that any of them had neighbors like mine."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/voyeur-gets-voyeured"
}