{
    "title": "The Big Tits Club Ch. 49-50",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 49: Power --\n\n****\n\nSam didn't show up for our shared first period.\n\nOr second period.\n\nOr recess.\n\nShe didn't show up to school, period, and nobody knew where she was. So naturally, everyone asked ME. I mean, she was living at MY house, right? I told them truthfully that I had no idea where she was. Since she'd eaten dinner at Zofi's house and had a conversation about the status of her relationship with me last night, Zofi was quick to ask if anything had \"happened\" between us since then.\n\nI didn't have to respond verbally. Everyone could read the answer on my face.\n\nI mean, I didn't admit to the girls that I'd told Sam I was in love with her. I didn't admit to the girls that I'd told Sam she was my favorite. I didn't admit to the girls that my last thoughts before falling asleep were of Sam, or that nothing in the world made me happier than waking up to find her in my arms.\n\nSam was the total package: intelligent, funny, kind, hard-working, and of course: ridiculously gorgeous and sexy. She was an onion, but in a good way, because every time I peeled back another layer, she made me fall in love with her a little more.\n\nI couldn't say any of that stuff out loud, of course. Naimh and I had just gotten to a comfortable place accepting our friends-with-benefits relationship knowing there would've been a time limit on a romantic relationship anyway. Belle walked the razor's edge between content \"little sister\" and obsessive/clingy yandere. And even Mari still wanted to enjoy the time she had left with her \"boyfriend\". Any admission of love for Sam would throw a monkey wrench into all three of those relationships. My world was not the same as when Naimh and I had asked for (and received) permission to try \"dating\".\n\nThe key difference, of course, was the fact that at that time Naimh had been equally interested in dating me. Sam, on the other hand, had almost literally run screaming out of the room and was still AWOL at this very moment.\n\nAt lunchtime, I pulled Zofi away from the others for a bit to have a private conversation. \"You're her best friend. She'll come to you first, maybe even come over to your house. Will you please call me when she does that?\"\n\nZofi gave me an apologetic look. \"Like you said: I'm her best friend. If she comes over to my house, I'll ask her whether she wants me to call you or not.\"\n\nMy shoulders slumped, but I nodded. While I didn't like her answer, at least I understood it.\n\n\"What happened?\" Zofi asked. \"What did you do?\"\n\nI sighed and shook my head. \"She's your best friend. I'm sure she'll decide what she wants to tell you. But this one you can't get from me.\" I turned around and walked back to the table.\n\nIt was \"Zofi and Sam Wednesday\", but neither girl came over to my house that afternoon. Zofi didn't call me, either. But that didn't mean I spent the afternoon alone.\n\nNormally in such situations I'd talk to Belle, but I knew better than to light a match and toss it into a canister of gasoline like that. Instead, I called Alice.\n\n\"Hey,\" I began with a weary sigh. \"I know you're probably busy, but--\"\n\n\"I'll be right over,\" she interrupted, and then the line went dead before I could say anything else.\n\nAlice showed up ten minutes later, gave me a fist bump, and sauntered into my family room. She dropped her backpack on the floor and slumped onto the couch. Her left arm went to the armrest and her right draped across the top of the backrest. And she kicked her legs up along the length of the couch before fixing me with an interrogative look. \"So the way I see it, there are two most likely scenarios. Stop me if one of them is correct.\"\n\nCurious, I folded my arms over my chest and sat down on the padded armrest of the armchair, not the seat.\n\n\"So we both know Sam's in love with you, only she doesn't have the time to be in love with you with her busy schedule and all. Spending all this quality intimate time together ever since she moved in stripped down the walls she'd put up from actually being in love with you, but then you realized how much things were escalating and you tapped the brakes, kicked her out of the house Saturday morning, cut her off for a few days, and now she's mad at you.\"\n\nI frowned and arched both eyebrows expectantly, leading, \"Or...\"\n\n\"Or...\" Alice scrutinized me with narrowed eyes for an extra few beats. \"Or spending all this quality intimate time together ever since she moved in made YOU fall in love with her, you tried to tap the brakes but couldn't help yourself because... well... Sam's kinda awesome... and you admitted you were falling in love with her and she went running for the hills.\"\n\nI scowled and looked away.\n\n\"Thought so.\" Alice smirked. \"I have to admit: Can't really blame you. Like I said: Sam's kinda awesome. She's perfect for you. You love strong women who take charge, but that little Master/Slut thing she does is just... nngh!... She's super-smart, independent, obviously has no problem sharing you with her friends, fuckin' sexy, and for the most part requires no relationship maintenance because she just wants to go off and do her own thing most of the time. It makes sense that you'd fall in love with her.\"\n\n\"I wish I hadn't.\" I rubbed my face with my right hand. \"This whole thing is a disaster. Years of building up the BTC into this incredible circle of friendship is about to get flushed down the toilet because I can't keep my emotions in check.\"\n\nAlice frowned. \"Why would you think this would flush the BTC down the toilet?\"\n\n\"Neevie and Belle, for starters. Mari, a little bit. You and Zofi are the only two I can trust to not be bothered by this. Zofi would wish for Sam's happiness--\"\n\n\"As would I,\" Alice confirmed with a nod. \"But I think you're overblowing the way the girls would react. Mari doesn't believe she has a real shot with you anyway. Neevie's not competitive with Sam anymore - well, okay she's still a little peeved that Sam got your cherry and not her. But she's made her peace with going to UCLA with me and knows there's no future with you. She's content with what she gets from you nowadays and as long as she doesn't get pushed aside and lose what she currently has, she'll be fine.\"\n\n\"I can't say the same for Belle. Two weeks ago she was mentally decorating the apartment we were going to share together in Berkeley without the rest of you and she actually cracked a joke about us getting married.\" My eyebrows went up. \"And I'm pretty sure she was only half-kidding.\"\n\nAlice sighed. \"You said Belle was more terrified of you leaving her than anything else, and you said yourself you believed your relationship was much better (and more stable) as siblings with benefits than with her as a romantic partner. I think what she fears most is you hooking up with some hottie she doesn't know who might take you away from her. If you end up dating Sam, she already knows Sam wouldn't do that to her. I think that she'd actually welcome you starting a relationship with Sam.\"\n\n\"Maybe,\" I conceded. \"Belle herself said something similar when we found out Sam was coming with us to Berkeley.\"\n\n\"See?\"\n\n\"Not that any of this matters. I told Sam I loved her and she took off. I don't think becoming my girlfriend is part of her master plan.\"\n\n\"Well, maybe not. You and Sam may never formally get together. The two of you and Belle might end up just fucking each other's brains out for stress relief for four years and never date anybody else until you graduate.\"\n\n\"Yeah, right. My relationships with those two haven't been stable for four months, let alone years.\"\n\n\"Perhaps. But for all you know becoming your girlfriend IS part of Sam's master plan. Maybe she's gonna walk through that door in five minutes saying, 'Matty, I love you too, but we need to talk.' And then she's gonna lay out her detailed multi-year itinerary for getting her Bachelor's Degree, interning at some hoity-toity law firm (maybe your Mom's), and then getting her J.D.\" Alice smirked. \"And then finally, after banging you on the side for like ten years, she'll say, 'Okay, I'm finally ready' and then you two can start dating.\"\n\nI made a face. \"I hate that every word you just said makes perfect sense.\"\n\n\"Can't wait that long?\"\n\nI rubbed my forehead. \"How the fuck should I know if I can wait ten years? I'm eighteen. Ten years ago I thought girls had cooties and I was memorizing dinosaur facts.\"\n\n\"A surprisingly mature thought out of you. I half-expected you to get some dreamy faraway look and reply, 'She's worth waiting for.'\"\n\n\"She IS worth waiting for, but at this very moment I don't even want to date her NOW, let alone ten years from now. I'm serious: me dating Sam is NOT a good idea, and I told her as much this morning. I've always known she doesn't have time to date me--\"\n\n\"Even though we've all got our colleges lined up,\" Alice cut me off, \"so there's really no reason why she can't spend more time with you. It's not like she needs to do anything else for the rest of the year to pad her applications.\"\n\n\"That's beside the point.\" I waved her off. \"She's made clear from the beginning she doesn't want to date me. Show up when convenient for her, get a coupla nice orgasms, and go on her merry way: THAT'S what she specifically asked for. The idea of keeping the BTC 'in balance' wasn't total bullshit, for me OR her. The BTC is too important to both of us, and regardless of how we may or may not feel about each other, NOTHING is going to change. I'm the BTC's boyfriend because I love ALL of you, collectively, and I'm NOT gonna do anything to fuck that up. Alright?\"\n\nAlice sighed and shrugged. \"Alright.\"\n\nJust then, the sound of a key jiggling in the front door made my heart start racing. Both Alice and I sat up straight and looked over in that direction, even though the door itself was out of sight from our current vantage points. A few moments later, the door opened and closed in rapid succession, and excited footsteps came echoing down the hall.\n\nBut to my surprise, Belle and Mari turned the corner and came in. I sighed, shook my head, and muttered, \"I never shoulda given you that key back.\"\n\nBelle pouted. But Mari was already chirping enthusiastically, \"Okay, we figured it out! I mean, we think we figured it out and we just need Matty's confirmation.\"\n\nAlice looked up at them and drawled, \"He's not gonna wanna talk any more about this.\"\n\n\"Well we already know Matty won't tell us anything,\" Belle commented nonchalantly. \"But he can't stop us from speculating in front of him while we watch the way his expressions give him away.\"\n\nI groaned and covered my face with both hands. \"Speculate on THIS expression,\" I muttered.\n\nAlice gestured towards me and explained, \"He fell in love with Sam, told her, and she freaked out.\"\n\n\"We KNEW it!\" Mari exclaimed and she turned to give Belle a high five. \"We're total love detectives.\"\n\nBelle giggled. \"But he's probably all terrified I'm gonna go crazy stalker and murder Sam in her sleep if I find out or something, right?\"\n\nI groaned and rubbed my forehead a little harder.\n\nBelle laughed. \"C'mon, Matty. Didn't I TELL you I'd be thrilled for you to date her so I wouldn't have to worry about some greedy bitch at Berkeley taking you away from me?\"\n\n\"Doesn't matter,\" I insisted. \"Sam and I are NOT gonna start dating. No way, no how. The BTC means too much to both of us.\"\n\n\"But why not?\" Belle looked confused. \"Were you worried about how the rest of us would react? Because I actually think everybody would be fine with it.\"\n\nI shook my head and looked over at Alice. \"Are we really gonna have this whole conversation AGAIN?\"\n\nAlice threw up her hands. \"We could skip past rehashing the same conversation, all get naked, and have a wicked foursome instead,\" she suggested. \"It's not like any of us is gonna get any homework done.\"\n\n\"Works for me,\" Belle chirped, reaching for the buttons on her blouse.\n\nRolling my eyes, I stood up and started walking out of the room.\n\nBehind me, Belle drawled, \"Did we seriously offer to have a wicked foursome with him and he just up and walked away?\"\n\nMari sighed. \"He's actually in love with Sam. I think it's sweet.\"\n\nHer comment brought me up short. I stopped walking at the edge of the room and turned around. \"Sweet?\"\n\nMari blinked twice. \"Yeah. It's sweet.\"\n\nI frowned. \"I would've thought you'd be disappointed.\"\n\nThe light in Mari's eyes dimmed just a little. \"I fantasized about you and me falling in love, sure. But I always knew it was a long shot we'd end up like that. I'm not your type.\"\n\nBelle reached out and hefted one of Mari's big breasts. \"Well these are definitely Matty's type.\"\n\nMari blushed and batted Belle's hands away. \"He likes the confident, outgoing, sexy types.\"\n\nI smirked. \"You've always been sexy. And you were pretty confident and outgoing for your week as Queen Mari.\"\n\n\"Around the BTC, sure. Not in public.\"\n\nBelle pushed her bestie in the shoulder. \"You're getting there. You've grown so much this year.\"\n\nMari blushed again. \"Maybe. But while getting a week to play Queen Mari was fun - and I wouldn't mind another week, if that's on the table - I'd never lose my head enough to believe you and I would walk off into the sunset together, especially now that I'm going to Caltech. I think you and Sam would make a great couple, and I genuinely hope things work out for you two.\"\n\nI arched an eyebrow. \"What happened to Team Belle?\"\n\nMari exchanged a loaded look with her best friend.\n\nAlice leaned forward. \"Yeah, what happened to Team Belle?\"\n\nBelle herself screwed up her face and finally answered, \"I'd be a horrible girlfriend for you.\"\n\nAlice sat up straight and frowned. \"What makes you say that?\"\n\nBelle pointed at herself with both index fingers and deadpanned, \"Crazy stalker. Murdering Sam in her sleep.\"\n\nI waved her off. \"I never worried about you murdering Sam in her sleep.\"\n\nBelle cocked her head to the side. \"But if I told you I'd intercepted Sam's Berkeley paperwork, shredded it, and then forged a letter declining the offer, you'd believe me capable of doing so, wouldn't you?\"\n\nMy mouth went dry. \"Please tell me you didn't do anything like that.\"\n\n\"Of course not, and you're proving my point.\" Belle sighed, looked up, and took a deep breath. \"The fact that you want me to reassure you I didn't shred Sam's paperwork proves just how little you trust me right now.\"\n\n\"And that means you decided you'd be a horrible girlfriend for me?\"\n\n\"I would be a horrible girlfriend for you. If you were mine - as in 'officially mine' - I'd turn into a possessive jealous bitch. We saw how I acted around Holly, and that was me TRYING to be nice and let her in.\" Belle sighed and gave me an apologetic look. \"Even as it stands, I'm gonna have to control my impulses to judge and hate every other girl you so much as look at for the rest of my life.\"\n\nI made a face at that pronouncement.\n\nMari chimed in again, \"Hence, Matty getting together with Sam solving all your problems.\"\n\nBelle looked glum. \"Much as I would agree, so again I wouldn't have to worry about some random greedy bitch taking you away from me, it's not gonna happen. Sam's never gonna date you.\"\n\nAlice's eyebrows went up. \"So sure? She clearly loves him.\"\n\n\"So do we all,\" Belle remarked. \"But she's still not gonna date him until after she's graduated college at the earliest. She's been VERY clear on that point.\"\n\n\"She has,\" I agreed. \"And I told her flat out I wouldn't ask her to be my girlfriend or in any way try to change the status of our relationship.\"\n\nAlice frowned. \"You didn't?\"\n\nI shook my head. \"I didn't.\"\n\n\"Then why'd she freak out?\" Alice cocked her head. \"Just you telling her you were in love with her?\"\n\nI waggled my head, replying, \"More or less.\" I did NOT want to tell the other girls that I'd deemed Sam my 'favorite'.\n\n\"It's enough to freak her out,\" Belle muttered and stared out into the middle distance. \"It's the same reason she wouldn't become a Girlfriend of the Week. She's focused on this master plan of hers, and she knows the only thing that would derail it would be starting a relationship with Matty. He's the one thing that would tempt her to give up her dreams. She told me: if given a choice between going to some awesome law school across the country that would put her on the perfect career path, or settling for some second-tier law school that would keep her close to him, she'd be VERY tempted to stay with him.\"\n\nMy eyes got big. \"Waitaminute. Is THAT the real reason why she chose Berkeley over Stanford?\"\n\nBelle shrugged and gave me an uncertain look. \"I dunno. I'd like to believe she meant every word of trying to get out of her dad's shadow at Stanford. But... maybe?\"\n\nAlice raised both eyebrows at me. \"And yet you two still aren't gonna date each other?\"\n\n\"Well, certainly not for the rest of high school,\" I said. \"The BTC means too much to both of us. I belong to the collective, and vice versa. That's not going to change until college finally separates us.\"\n\nMari leaned forward, eyes twinkling. \"And then what happens when it's just the three of you at Berkeley?\"\n\nBelle answered, \"She'll still want to focus on her academics.\"\n\nMari's eyes narrowed. \"So what: the three of you just fuck each other's brains out with no formalized relationships?\"\n\n\"For Sam, Matty would be a dependable booty call to get uncomplicated stress-relief. For me, Matty would be my big brother with benefits.\" Belle smirked. \"Is it really any different from what we're doing right now?\"\n\n\"I suppose not,\" Mari conceded with a sigh. \"But the romantic in me still hopes at least ONE of you two pulls her head out of her ass and finally loves this gorgeous man the way he's meant to be loved.\"\n\n\"Well, you could always pull your head out of your ass,\" Alice teased, \"rescind your Caltech admission, and love this gorgeous man the way he's meant to be loved.\"\n\n\"I AM tempted.\" Mari blushed and fiddled with her fingers. \"Neither Alice nor Zofi seem interested, Belle's withdrawn her application, Neevie didn't get into Cal and seems content to just fuck your brains out as friends for the rest of the year, and Sam outright refuses to date you. The position would seem to be available.\"\n\nBelle looked down and muttered, \"You'd come to Berkeley with us, I wouldn't have to worry about greedy bitches stealing him, and obviously I know you'd share.\"\n\nMari eyed Belle warily. \"YOU were the one insisting Caltech was too good of an opportunity for me to pass up.\"\n\n\"I was, and I still do.\" Belle sighed. \"My head knows it's the right decision, but the selfish bitch inside me wants what's best for Belle. You coming to Berkeley as Matty's girlfriend would solve a lot of my problems, not the least of which is that I don't wanna miss my BFF.\"\n\nMari looked up at me, her eyes quietly intense. \"So let's just say I can relate to how hard it is for Sam to make the decision between her personal goals and being in love.\" Mari's eyes narrowed for a brief moment as the room went silent. Alice and Belle exchanged glances with each other, and I took a deep breath and gave Mari an apologetic look.\n\nMy expression apparently sealed the deal for her, though, and she started shaking her head. I knew I was in love with Sam, not her, and she knew it too. I apologized, \"I'm sorry, Angel.\"\n\nMari was already waving me off, saying, \"The difference for me is that I know he doesn't have the same depth of feelings I have for him; it makes my decision easier. I can rest easy at night knowing I didn't miss out on the greatest love of my life because... well... I know I'm not the greatest love of HIS life. But for Matty to tell Sam he DOES love her like that?\"\n\nMari turned to face me and shook her head sadly as she finished, \"Good lord you're fucking with that girl's mind.\"\n\n****\n\nAfter Mari's pronouncement about how much I was fucking with Sam's mind, I finally did get up and walk away from the conversation. I went up to my room, opened my textbooks, and proceeded to stare straight at the wall for far too long.",
        "Near as I could tell, the girls remained in my family room talking for over an hour. You'd think we'd have already covered all the salient points, but never underestimate teenage girls' ability to continue a conversation well beyond the \"beating a dead horse\" stage. In the end, though, they all went home.\n\nAround dinnertime, Belle called to ask if I was coming over to join her and her dad. I told her I wasn't hungry, and she correctly guessed that I wanted to be here just in case Sam came home. About an hour later she walked over a plate full of food for me, kissed my cheek, and thankfully left me alone.\n\nI devoured the food, decided I needed to get out of my own head, and parked myself in front of the big TV playing video games in an attempt to distract myself.\n\nI must've lost track of time, because the next thing I knew the bass rumble of the garage door rolling up vibrated through the house. My shoulders slumped, because Sam always parked outside and used a spare key to come in through the front door. I checked the clock and found that it was shortly after 9pm, and when Mother came inside, I didn't bother looking up to greet her.\n\nBut she came over to check on me.\n\n\"I can't remember the last time you were playing video games this late at night,\" she remarked thoughtfully. \"What's wrong?\"\n\nI glanced at her for half a second before returning my attention to the screen. \"Why does something have to be wrong?\"\n\n\"I may not be very maternal, but I can tell when someone is withholding information,\" Mother stated in an even voice that was nevertheless laced with subtle insinuation. She walked directly in front of me, blocking my view of the TV, and folded her arms across her chest. All subtlety then flew out the window when she gave me a cold glare and asked, \"Where is Samantha right now? I noticed her Escalade isn't parked outside.\"\n\nMy eyes were suddenly moist. My attempts to distract myself had only worked to a degree, and the pang I felt inside at her absence had been eating away at me for hours. \"I don't know,\" I muttered thickly.\n\nMother sighed. \"What have you done?\"\n\nI pursed my lips and glared at her. \"So quick to assume it's MY fault?\"\n\n\"It's always the man's fault. Even when it's not.\" Mother cracked a bit of a smirk at that.\n\nI took a deep breath and sighed. \"Yeah, well, maybe it is my fault,\" I conceded.\n\n\"So I will repeat: What have you done?\"\n\nAlready at my wit's end, I had no strength to deflect or otherwise skirt around the truth. Setting the controller aside, I sighed and explained, \"I told her that she's beautiful, both inside and out. I told her she was the most amazing person I'd ever met. I told her she was intelligent and so very kind, so warm, and so hard-working. I told her I knew she didn't want to have a romantic relationship with me and I told her I'd been trying to keep my feelings at bay ever since Friday morning, but that in the end I couldn't help myself.\"\n\n\"Oh, shit,\" Mother cursed, sensing what was coming next.\n\n\"I told her I was in love with her, which is the absolute truth,\" I continued. \"I told her she was my favorite in the BTC.\"\n\n\"Please tell me you didn't ask her to become your girlfriend.\"\n\nI snorted and gave her a perplexed look. \"I thought you WANTED me to tell her I loved her. All those quips about marrying me and staying in our house forever or becoming your daughter-in-law.\"\n\nMother was aghast. \"You DID ask her?\"\n\n\"No, of course not,\" I insisted with a sigh. \"She's made clear from the beginning that she didn't want to become my girlfriend, and I was very clear that I wasn't asking her to start dating or anything like that.\"\n\nMother looked only slightly relieved. \"But you DID tell her you loved her. You even used the word 'favorite'.\" They were accusatory statements, not questions, and I felt like I was on the witness stand.\n\nI sighed and confirmed, \"Yes.\"\n\n\"And she ran away, of course.\"\n\nI sighed again. \"In my defense, I tried to emotionally withdraw and keep her at bay for a few days to avoid having this happen.\"\n\n\"And then you went ahead and let it happen anyway.\" Shaking her head, she muttered, \"Stupid, stupid boys. Always making dumb decisions without properly thinking through all the consequences.\"\n\nI scowled. \"You know for a mom, you're doing a real shitty job of making me feel better.\"\n\nMother gave me a funny look. \"Whatever gave you the idea I was trying to make you feel better?\"\n\nI just rubbed my forehead and sighed.\n\nMother started rubbing her forehead and sighed as well, and for a moment we were like mirror images of each other.\n\nBut Mother recovered more quickly than me, and she turned and came to sit down beside me on the couch. Reaching out, she actually took hold of my hand and held it atop her knee between both of her hands. \"Matthew, I can't say I have ever been there for you in a time of emotional need, and I'm not about to magically transform into your source of guidance or reassurance. But in this particular instance, I think it would be fair to say I understand more about Samantha's feelings for you than you do.\"\n\nI blinked twice and looked at her curiously.\n\n\"Samantha loves you. Please don't doubt that. But she's extremely conflicted about those feelings and it's not solely because she wants to focus on her academics or future career.\"\n\nI frowned. \"It's not?\"\n\nMother shook her head. Taking a deep breath, she gave me a serious look and prefaced, \"What I'm about to tell you are things she's said to me in confidence - things she could perhaps get quite angry with me for revealing -- things you may not enjoy hearing. But it's important that you understand the problem in order to properly provide a solution. Otherwise I fear the two of you could do irreparable harm to your relationship, and that's not something I want for either of you.\"\n\nI took a deep breath, exhaled slowly to calm myself, and forced myself to focus. \"I'm listening.\"\n\n\"Samantha is in love with you now, in love with the man you've become, but things were not always this way. For years you were just the safe 'boy' she had wrapped around her little finger. I told you before that she loved how obedient you were to her.\"\n\nI chuckled. \"I remember.\"\n\n\"She relished the adrenaline rush of teasing you mercilessly. It gave her quite a sense of power to be able to manipulate your arousal, to push your buttons, and to stretch the boundaries of your relationship without fear of you pushing back. Your obedience made her feel safe, safe enough to test her own limits, because she knew with absolute certainty that she had all the power in the relationship.\"\n\nI shrugged. \"I remember those days.\"\n\n\"She didn't love you back then. She appreciated you, and she valued your friendship. But you were just a toy to her, a favored toy perhaps, but still just a toy. She was still attracted to the bad boys and craved the validation of their attention, not yours.\"\n\nI scowled. \"I see what you mean about telling me things I won't enjoy hearing.\"\n\n\"Patience.\" Mother gave me a stern look. \"At the same time, you were her salvation. Much as she may have craved the validation of the bad boys, after her first few horrible experiences, she never let them touch her because she could never feel safe with them the way she felt with you. Every time some greasy fuckwit got close to her, she panicked and backed off.\"\n\nI blinked. \"Did the phrase 'greasy fuckwit' just come out of your mouth?\"\n\nMother smirked. \"Samantha's term, not mine.\"\n\nI chuckled and gestured for her to continue.\n\n\"Then came the 'Holly incident', as she put it. I understand that you were offered sex, but turned it down in favor of saving yourself for the BTC girls.\"\n\nI made a face. \"Has Sam really told you ALL our secrets?\"\n\nMother shrugged. \"The saying goes that you don't realize what you have until it's gone, or in this case, nearly taken from you. I recall that it was not too long ago when you believed Samantha had gone out on a date with another man and the sudden jealousy consumed you.\"\n\n\"I remember.\"\n\n\"So it was for Samantha. The unexpected wave of jealousy surprised her and forced her to reevaluate your relationship. She recognized how much you'd grown, realized how much she enjoyed finding physical pleasure with you, and began to consider you as a serious partner for the very first time instead of a plaything so easily cast aside. She no longer craved attention from other men; she craved YOUR attention. And the competitive drive she has always possessed made her crave to be your 'favorite'.\"\n\n\"I know that part. But she got over it.\"\n\nMother shook her head in the negative. \"She still wants to be your favorite.\"\n\nI frowned. \"She said she got over it. She even credited YOU with helping get her head on straight.\"\n\nMother pursed her lips and thought about that. \"I helped her realize it would be more productive to redirect that competitive desire, to channel her aggression into her career rather than get caught up in... girlish cattiness.\"\n\nA fond memory came to mind, and I hooked my hand into a claw, muttering, \"Meow...\"\n\n\"What?\"\n\n\"Nevermind.\"\n\nMother arched an eyebrow, but continued. \"I could see she was on a path to undermining her relationships with her friends by pursuing you. At the same time, the balance of power had shifted. Instead of being the one in control, she found herself craving your validation, and she didn't like that feeling. I told her that her love for you might be teenage infatuation, not real, and that she'd be better off taking a step back a bit to regain control of her emotions.\"\n\nI frowned. \"YOU told her to withdraw from me?\"\n\nMother shrugged. \"It seemed what was best for both of you at the time. You were clearly more infatuated with Naimh than Samantha anyway.\"\n\nI frowned. \"Do you NOT want us to end up together?\"\n\nMother's eyes glittered. \"I would be overjoyed if Samantha found lifelong love with my son and became my daughter-in-law. Someday.\"\n\nI keyed in on the word 'someday'. \"You're playing the long game. You think that me and Sam crashing and burning after a doomed high school romance where neither of us was ready would ruin your little dream.\"\n\nMother smirked. \"You said it, not me.\"\n\nI rolled my eyes. \"And you still don't think we're ready for a relationship now.\"\n\nMother took a deep breath. \"No, you're not. You belong to the BTC, not to any one girl, at least through the end of high school. And Samantha is going through a very difficult period of her life where she needs the stability of dependable friends, not the inherent instability of a new and uncertain romance.\"\n\nI shook my head. \"I'm not asking her for a new and uncertain romance.\"\n\n\"And I'm very glad you're not. But we still haven't addressed the crux of the problem.\"\n\n\"What's that?\"\n\n\"Power.\"\n\nI frowned, not yet understanding.\n\nMother took a deep breath and exhaled slowly. She hugged herself and looked away for a moment, collecting her thoughts. And only once she was fully prepared did she finally turn and look straight at me.\n\n\"I know what it's like to be a girl like Samantha: beautiful, desirable, intelligent, and ambitious. All of those things give me power, give me the ability to control the world around me. But at the same time, for any woman, that power can still be easily stripped away. Samantha believed she was in control of the boy who took her virginity right up until he got her in bed and stripped away her power. She can't go home right now because her father still expects her to fall in line. She can be physically manhandled if she lets a man get too close and will spend the rest of her life monitoring her drinks at bars and parties. She'll tell you she's lost count of the number of times some boy has grabbed her ass while walking through the school hallways. Men she has no interest in will leer at her and devalue her down to... well... three holes and a pair of tits.\"\n\nI swallowed thickly and averted my eyes.\n\n\"And of course... a powerful young woman can end up pregnant.\"\n\nI blinked and picked my head up. There was a rich note of emotion in Mother's voice, and I immediately knew she wasn't talking about Sam anymore.\n\nMother pursed her lips when she caught my gaze and she sighed. Furrowing her eyebrows, she gave me an apologetic look and explained, \"It's not that I never wanted you. I DID want children... eventually. I wanted the same dream Samantha wants: a loving husband, a fulfilling career, a nice house in which to raise my family.\"\n\nShe looked down at her lap and closed her eyes for a moment, clasping her hands together.\n\n\"Your father whisked us away on a surprise tropical island vacation. Straight to the airport, no warning, nothing but my purse and the clothes on my back. He thought he was being romantic.\" Mother picked her head up and stared at me evenly. \"I didn't have my makeup or my clothes... or my birth control. I found bikinis and sheer dresses from beachside vendors. I found cheap makeup and condoms at a drugstore. One broken generic condom later and I found myself in an unhappy marriage and almost fatally behind on the firm's partner track. My power had been easily stripped away.\"\n\nI'd never heard that story before, and I didn't know what to say, so I remained silent, just trying to process what Mother was telling me.\n\nShe took a deep breath, sat up straight, and within moments was right back to the imperious, confident woman I knew. With an almost casual shrug, she continued, \"So I doubled my efforts on the one thing I really could control: my job. By the time I finally got rid of the man I had come to hate, my relationship with you, unfortunately, had become a lost cause. Being distant with each other had already become habit, for both of us. I am sorry for that, you know. I wish I had found a better balance between mother and lawyer. I wish I had never gotten married and simply embraced being a single mother from the start. But it's much too late for that now. You're old enough and independent enough that you're much happier with my absence than my presence, and my career has become my life.\"\n\nWe both went silent, but rather than feel awkward, the intermission gave us both time to collect ourselves.\n\nEventually, though, I picked my head up and said, \"Thank you for the explanation. It helps me put things in perspective.\"\n\nMother pursed her lips and waved me off. With a slight shake of her head, she said, \"I didn't mean to get sidetracked. We were supposed to be talking about Samantha.\"\n\nI nodded. \"And her need to feel like she's in control -- like she still has the power in our relationship. I certainly know Sam liked things better when she could play me like a marionette on strings.\"\n\nMother mused on that. \"More or less. There was something she told me after that first morning you two went for the 5-mile run.\"\n\n\"And I barely made it back home.\"\n\nMother chuckled, but schooled her features a moment later. \"Samantha said she was starting to see you as just another pathetic male who couldn't keep up with her. It made her feel better about losing ground in the power dynamic between you.\"\n\n\"And then I told her she was beautiful and she ran away.\"\n\nMother raised both eyebrows and head nodded out the door. \"Sound familiar? Samantha needs to feel in control of her situation, especially at a time like this with everything going on with her parents. Her inability to control her emotions with you terrifies her. She thinks about you all the time. She falls asleep every night wishing she could be in your arms, and from what she's told me these past couple of weeks, she couldn't help but leave her bed to go cuddle with you before the sun came up. That's power. That's leverage. Saturday night when you brought Mari home, you locked your door. Samantha came crying to my room when she found out, did you know that?\"\n\nI blinked. \"What? No.\"\n\n\"She was happy to let Mari have the night alone, but in the morning she wanted to surprise you with a threesome. When she tried the door, she found it locked, and you have no idea how much that affected her.\"\n\nI frowned. \"As if me locking the door symbolized my ability... symbolized that I had the power... to shut her out. To hurt her badly.\"\n\n\"Compounding the situation, you left for the day instead of staying for brunch when Belle and Samantha returned from their run. She was devastated, and to later find out you'd gone on a date with Naimh?\"\n\nI pursed my lips. \"I thought I was doing what was best for our relationship by withdrawing from my emotions the way she'd been withdrawing from me.\"\n\n\"You made her panic is what you did. She wanted you. She NEEDED you. And she felt so utterly helpless to do anything about it.\"\n\nI sighed. \"I knew I was hurting her. I didn't realize how much.\"\n\n\"For a young woman who craves to be in control, you were really stressing her out.\"\n\n\"I know, I know.\"\n\n\"She's in love with you.\"\n\n\"I know.\"\n\n\"And she HATES being in love with you.\"\n\nI blinked. \"What?\"\n\nMother shrugged. \"She hates how much she loves you. She hates how much she needs you. But she can't stop herself. She can't let you go. And the more she tells herself to stop, the more she can't get you out of her head.\"\n\n\"It's like telling someone on a high cliff, 'Don't look down,'\" I mused.\n\n\"Something like that.\"\n\n\"So what am I supposed to do? Tell her I don't love her when I really do? Kick her out of the house and tell her there's no chance of a relationship so she can move on without me? Go to USC or Cornell to save her the misery of seeing me at Berkeley?\"\n\n\"No, no, none of those things. Haven't you been listening?\"\n\n\"I'm trying.\"\n\n\"What's the crux of the problem?\"\n\n\"Power. She wants it, and I apparently have too much of it.\"\n\n\"Precisely.\"\n\n\"What am I supposed to do about that? Give her back the power somehow?\"\n\n\"Find a way to make the girl who needs to feel in control... feel in control. Reassure her that even if you do have this power over her, that you won't abuse that power. She fell in love with you because she believed you would never do anything she didn't want you to do. Stop doing things she doesn't want you to do.\"\n\n\"Like locking my door.\"\n\n\"Obviously.\"\n\n\"Reassuring her I won't use my 'leverage' to try and manipulate her to do anything she doesn't want to do.\"\n\n\"Yes.\"\n\n\"Even though she's spent years manipulating me into doing anything she wanted me to do.\"\n\nMother's eyes sizzled. \"Tell me you didn't enjoy it.\"\n\n\"Convince her that I won't interfere with her career goals or become the kind of guy who would ever ask unfair questions like, 'What's more important: that exam or me?'\"\n\nMother perked up. \"That's a good one.\"\n\n\"Respect that she doesn't want to get tied down by a romantic relationship, not even with me. So I need to reassure her that just because she's the most incredible young woman I've ever met and I love her to pieces, I'm comfortable keeping things the way they are: friends with benefits.\"\n\nMother nodded.\n\n\"Help her not feel so powerless. Help the control freak feel in control.\"\n\n\"Can you handle that?\"\n\nI gave Mother a shrug and a hopeful smile. \"I love her. I have to try.\"\n\n****\n\nSomething tickled my balls, and with a start, I jerked awake.\n\n\"Mmph!\" somebody grunted, and as I sat up, I realized I'd just shoved my dick an inch into a girl's throat. She gagged a little but didn't quite pull her head off. Continuing to suck my mushroom head and twisting her hands around the base of my cock, she pumped them together up and down the length of my shaft until she recovered enough to push her face back down.\n\nMy eyelids flew WIDE open, and I gasped aloud, \"Sam?\"\n\nBut when I looked down, I saw Belle's strawberry-blonde head in my lap, and she looked up at me with a bit of a smirk. Popping off my prick, she grinned and remarked, \"You know, almost any other girl in the world would be really annoyed at you for saying that.\"",
        "I grimaced. \"Sorry, B.\"\n\n\"I get it.\" She shrugged and took a lollipop lick along my shaft from base to tip. \"You're in love and you're worried about her. I noticed her bedroom is still empty. So don't sweat it.\"\n\nI was still a little stunned as Belle casually resumed her blowjob, but after a few seconds' thought I relaxed. She was right: almost any other girl would not be only annoyed, but livid to hear the guy she was blowing gasp another girl's name. But then again, the rules were different within the BTC.\n\nMoments later though, she pulled off again and narrowed her eyes. \"If there was something for me to be annoyed about, it's you calling Alice to come over and talk yesterday afternoon instead of me.\" And then she started sucking on me again.\n\nI sighed. \"It's not that I didn't want to talk to you about it.\"\n\n\"It's that you can't trust me to be impartial about something like this, hence why you've gone out of your way to stop sharing your feelings about the other girls. Plus, I'm like... liable to murder Sam to remove the impediment to getting you all to myself.\"\n\nNow it was my turn to narrow my eyes. \"You know, you keep bringing up the notion of murdering Sam. It's not exactly reassuring.\"\n\nBelle had already resumed the blowjob, and she promptly choked trying to laugh with my dick probing her throat. She picked her head up and coughed a bit, but collected herself quickly and flashed me a grin. \"You're right: I need to stop using that example. The point is: I need to earn back your trust; I know that. I'm glad you have someone like Alice you can still depend on.\"\n\n\"Me, too.\"\n\nBelle grinned, pushed her face as far as she could go, and I could feel the tight constriction around my spongy head as it entered her throat. But while she was able to hold that position for a pretty long time, there was still only so far she could take me. And after a few more seconds, she backed away having still come up short of completing the deep-throat.\n\nNot that she seemed to mind. Rather than obsess about her inability to take me all the way, Belle started sucking powerfully on my knob while rapidly pumping both hands up and down my shaft. I recognized her technique as the one she used when she just wanted me to cum, not as foreplay. I was appreciative, since it had been about twenty-four hours since my last ejaculation. And instead of worrying about saving myself so she could climb aboard and go for a ride, I just lay my head back down on the pillow, reached up to hold Belle's head, and let the pleasure flow.\n\nWithin minutes, I grunted, \"Fuck B. So good. You're making me... I'm gonna... nnnnnnGGGGGHHH!!!\" And I began spewing sperm straight into my \"little sister's\" stomach.\n\nA minute later, Belle finished nursing out the last dregs of jizz from my deflating prick and she flopped onto the bed beside me. I reached out to caress her cheek and sighed.\n\n\"Enjoy that?\" she asked brightly, pale-green eyes twinkling.\n\n\"I did. Thanks, B.\"\n\nShe preened, clearly happy to make me feel better. But a moment later, concern crossed her face as she asked, \"Have you heard from her at all?\"\n\nI nodded. \"I called Zofi last night. Spoke with her mom and told her I needed to talk to my 'girlfriend', so Zofi wouldn't have been able to refuse without coming up with some explanation why.\"\n\n\"That works.\"\n\n\"Zofi told me Sam didn't want to talk to me, but I promised her all I wanted to know was whether or not Sam was safe and sound. Zofi told me Sam was crashing with her overnight, but that she'd come back in the morning to change and get ready for school. So... that could be any minute now.\"\n\nBelle's eyebrows popped. \"Good thing I didn't go for more than a blowjob. She might've walked in on me riding you and gotten mad.\"\n\nSomebody snorted over by the doorway, and Belle and I both whipped our heads around in surprise. Sam leaned against the doorjamb, a smirk on her face. \"In the sum total of our entire friendship together, what would EVER give you the idea I'd get mad if I walked in on you riding him? You should have been riding him, actually. I would've joined in.\"\n\nBelle giggled. I was still too stunned by Sam's arrival to react. My mouth flopped open and I eventually stammered, \"H-How long were you standing there?\"\n\nSam shrugged. \"Like thirty seconds before you gave Matty's Little Cumslut everything she wanted. Maybe I should've spoken up sooner and asked her to share.\"\n\nSam's playful giggle REALLY confused the hell out of me. I was still trying to wrack my brain for everything Mother and I had talked about last night and organize it into a coherent dialogue-slash-apology for telling her I loved her. I'd expected her to still be upset, and yet...\n\nSam checked her watch, shrugged, and stepped into the room, closing the door behind her with a smile. \"What the hell. We've still got time.\"\n\nAnd then she started pulling her clothes off.\n\n****\n\nWhat followed was not the greatest sexual experience of my life or anything. Don't get me wrong: there's no such thing as a BAD threesome with Belle and Sam. I was just a little too stunned to fully enjoy the experience.\n\nSam casually got naked and tied her hair back in a functional ponytail before climbing onto the bed and crawling across the mattress to park herself between my legs. She almost lazily slurped my semi-hard prick into her mouth, her lips forming an airtight ring of suction as she slowly tugged and coaxed my penis into growing back up for her. I watched, mesmerized by the gorgeous blonde orally making love to my dick: first with just her mouth, and then with her right hand, and finally by taking my renewed erection all the way into her throat, forming another tight ring of suction with her chin resting on my balls.\n\nSam's seductively beautiful brown eyes stared up into mine, searching for my approval. What did Mother call it? Validation. She wanted my validation, my affirmation that she was doing a good job. And I reached down to caress her cheek and non-verbally express just how pleased I was with her.\n\nThis, at least, was something within Sam's control. She knew her skills and knew her ability to make blissful sensations flood my brain, and she certainly utilized those skills this morning. She played me like a marionette on strings, sucking and humming and pumping and licking every inch of my cock, my balls, and even my inner thighs. She teased me and titillated me, almost toying with me, and I was happy to let her have this simple power over my reactions.\n\nSam brought me close to the brink only once. Belle had stripped herself naked and currently reclined against my side, feeding me her nipples and letting me play with her pussy from behind while rubbing her ass. I suddenly felt a fresh surge of energy as my balls prepared to uncork. My arm tightened around Belle and I grunted around a mouthful of perky D-cup titflesh. But Sam sensed it too, pulled down hard on my balls, and actually bit my dick a little to divert the pleasure. I squeezed my Kegels and held myself back, and after thirty seconds or so I sighed with relief and set my head back against the pillow.\n\nThe girls mounted up then. Sam straddled my hips and slowly sank her incredible nude body down around my shaft. She gyrated in wide orbits with my upright shaft as her center. Belle parked her ass in my face and her pussy on my tongue, facing back towards Sam. I couldn't see what they were doing, but I could hear the sounds of wet lips smacking against each other, hums of erotic satisfaction as the girls mewled their arousal. And there was no mistaking what was going on when Sam groaned, \"Suck my tits... suck my tits...\"\n\n-I- wanted to be the one sucking Sam's tits, but I settled for letting my hands scoot up Belle's petite firecracker body and palm her impossibly firm titties instead. I wanted to grab Sam's bigger boobies and go honka-honka to my heart's content, but some part of me still feared what might happen if I took the initiative. I was half-terrified she was nothing more than a figment of my imagination and would evaporate into a fine mist if I so much as reached out to touch her.\n\nAs it was, my brain's logic decided that the sooner I got Belle her orgasm, the sooner I could get her off my face and verify with my own eyes that Sam had truly returned home, and not only returned but was also fucking herself on my dick. So with that in mind, I gripped Belle's hips, tugged her down on my face, and REALLY ate her out just as furiously as she'd blown me earlier this morning.\n\nWhen she sensed my increased focus, Belle stopped messing around with Sam, let her head fall back, relaxed her spine, and let the pleasure flow.\n\nWithin minutes, my petite pixie grunted, \"Fuck, Matty. So good. You're making me... I'm gonna... nnnnnnGGGGGHHH!!!\" And she began drenching copious amounts of girlcum straight down into my waiting mouth.\n\nI waited an extra minute to let Belle get over her climax before somewhat unceremoniously tossing her aside. I had to see Sam with my own eyes, remember? If Belle minded, she didn't show it. She was rather more interested in watching the busty blonde take one look at the girlcum smeared all over my face and immediately drop herself down to start licking her cream off my cheeks.\n\nThree times, and then four, Sam's lips and tongue brushed across my mouth. Each time, I SOOO wanted to grab her head and spear my tongue through her lips and express all my pent-up passion through a frenzied kiss. But I clenched my hands and resisted the urge as best I could. I couldn't touch her. I WOULDN'T touch her, lest she evaporate into that fine mist. I felt like I was just the \"safe guy\" once again, not allowed to make the first move, and yet knowing somehow that in the end it would all be worth the wait.\n\nShe WAS worth the wait.\n\nFinally Sam did take my head in her hands and kiss me. I moaned and groaned and finally allowed myself to hold her in my arms as we made out like a pair of teenagers in love. I set my feet flat atop the mattress and started thrusting upward, really driving my dick in deep. The increased sensation made Sam break our kiss and plant her forehead on the pillow beside me, moaning and groaning her ecstasy. But after a couple of minutes of that, I started to slow down and she sat up once more.\n\nBelle was suddenly behind her, turning Sam's face to hers so that the pair of hot babes could share a Sapphic kiss. Sam grabbed my hands and pulled them to her breasts, and I happily went honka-honka while watching two gorgeous examples of femininity make love to each other with their mouths. Belle also slid her hand down to the junction of my loins with Sam's, and her little hand seemed to vibrate as she began furiously rubbing the platinum blonde's bare-shaven twat.\n\nOverwhelmed, Sam finally broke Belle's lip-lock and set her forehead against the other girl's. Clenching her eyes shut, she rode me harder and harder, moaning as the pleasure built up inside her. \"Mmm... Belle... so good... Fuck me, Matty... Fuck me... Ohmigawd... We're gonna be doing this every fuckin' day in Berkeley, aren't we? You two are so fucking hot together. I wanna get sandwiched between you two all day long.\"\n\n\"All day long,\" Belle crooned, kissing Sam's neck. \"Every day.\"\n\nSam turned to face Belle. \"You really won't mind? Look me in the eyes and tell me it's okay that I love him. We both know you love him as much as I do. Two weeks ago, you thought you were gonna have him all to yourself. Is it really alright that I'm coming with you?\"\n\nBelle bared her teeth and playfully nipped at Sam's nose, her teeth snapping together well short. \"It's alright with me, but I do have one condition.\"\n\n\"What's that?\" Sam asked in the same playful tone.\n\nBelle turned Sam's head so that it was facing forward, so that Sam was looking down at me. And in a husky voice, Belle intoned, \"You have to let me slurp his cum outta any of your holes whenever I want. That's my only condition. I want you to fuck his brains out every day, all day. And I want you to share his sperm with me.\"\n\nSam giggled. \"Of course. Is that all?\"\n\nBelle glanced at me, and then glanced back at Sam. \"Actually, I do have one more condition,\" she said much more seriously. The playful tone was gone, and it made Sam grind to a halt on top of me.\n\n\"What's that?\" Sam repeated, her tone just as serious.\n\nBelle's expression was almost a plea. \"Don't break his heart.\"\n\nSam's eyes opened up wide, but she shook her head immediately. \"Never in a million years.\"\n\n\"You mean that?\"\n\n\"With every fiber of my being.\"\n\nBelle took a deep breath, pursed her lips, and then suddenly lurched forward, grabbing Sam's head and pulling her close for a fierce kiss that ended as abruptly as it started. \"Then you have my permission.\"\n\nSam's eyes watered. \"Really?\"\n\nBelle nodded, her own eyes watering. \"I'm happy for you. For you both.\"\n\nI was still stunned that Sam was even here, and at the moment quite confused. One minute, it seemed like Sam was ramping right up to orgasm with Belle helping her along the way, and I had started to relax myself in preparation for giving the gorgeous blonde an internal combustion. The next minute, we'd ground to a complete halt. My brain was complete jello at the moment, and I was feeling very, very confused by what was going on. After all, even though my fat cock was still imbedded in Sam's wet box, both Sam and Belle looked on the verge of tears.\n\nI blinked, looking up at both girls, and finally wondered aloud, \"What's going on?\"\n\nTeary-eyed but smiling, Sam barked a short laugh and bent forward to give me a quick kiss. And after pulling back just far enough to gaze into my eyes with an expression of utter adoration, she stroked my cheek and said, \"I love you too, Matty. Will you be my boyfriend?\"\n\n****\n\n-- CHAPTER 50: Marionette --\n\n****\n\n\"And you said, 'yes'.\"\n\nIt was a statement, not a question. Lying flat on her belly across a lounge chair in the backyard with her feet up in the air and ankles crossed, Alice set her chin down on her interlaced fingers. It was officially \"Belle and Mari Thursday\", but the girls had invited Alice to join us. Given the tenor of the situation, sex did not seem to be planned anyway.\n\nReclining back against Matty's Chair, I shrugged. \"Of course I said yes. No way in hell was I gonna say 'no'.\"\n\nAlice narrowed her eyes as she scrutinized me.\n\nMari smiled merrily from the lounge chair on the other side of me, seated sideways, and commented, \"I still think it's sweet.\"\n\nBelle sat beside Mari, her elbows on her knees with her hands clasped together, lost in thought. Mari tapped her shoulder and asked, \"How did Sam react when he said yes? Did she swoon into his arms? Did she get filled with so much love and passion that it swelled inside her like too much air and start bursting throughout her entire body?\"\n\nBelle blinked and regarded Mari in confusion for a second. But she sat up straight, nodded, and said, \"Basically, yeah. I mean, you saw the way she was at school today. Have you ever seen Sam so bubbly and excited on campus? She normally walks around all, 'I'm the Queen. Bow before me or get outta my way.'\"\n\n\"And today she was like a six-year-old whose parents told her she was going to Disney World,\" Alice drawled. With eyes narrowed, she then gestured to me. \"Matty, on the other hand...\"\n\nAll three girls now scrutinized me, and I raised both eyebrows questioningly. \"What?\"\n\nMari made a face. \"You're right.\"\n\n\"I know I'm right,\" Alice muttered dispiritedly.\n\n\"Someone's gotta tell her,\" Mari sighed, her shoulders sagging.\n\n\"Yeah. Matty's gotta tell her,\" Alice pronounced. \"It can't come from one of us.\"\n\nI arched an eyebrow and sighed. Looking at Belle, I gestured at the other two and asked, \"Can you translate?\"\n\nBelle pursed her lips and tilted her head to the side. \"You gotta tell Sam you don't want to be her boyfriend.\"\n\nI frowned. \"Why in the world would I ever do that?\"\n\nBelle's eyes sharpened. \"Because you don't want to be her boyfriend.\"\n\nI shook my head. \"That's not true. I love her. She loves me. The three of you basically gave us your blessing yesterday afternoon, and now you're taking it back? Are you jealous or something? Didn't you insist you'd be happy if Sam became my girlfriend so you wouldn't have to worry about other greedy bitches?\"\n\n\"I would be happy if Sam became your girlfriend, but that's not the point.\" Belle frowned and leaned forward with her elbows on her knees again. \"It's pretty obvious you don't really want to be her boyfriend. You said just yesterday you weren't going to start dating. And you just admitted a minute ago that you only said 'yes' because 'no way in hell was I gonna say no'. That's not a reason for a couple to get together.\"\n\n\"I assumed she wouldn't want to date ME. I never said I'd have a problem dating her.\"\n\n\"You don't have to say anything,\" Alice chimed in. \"Your current behavior speaks for itself.\"\n\n\"What are you talking about?\"\n\n\"I was there when you and Neevie agreed to start dating,\" Belle explained. \"Your excitement was palpable. You couldn't stop grinning for DAYS. This morning? You were just stunned. You sorta lay there like a lump on a log while Sam went into a frenzy on top of you. She got so absorbed in her own outrageous orgasm that she didn't notice, but I noticed. And even now? Look at you.\"\n\nI blinked. \"What about me?\"\n\n\"You're just... there.\" Belle sat up again and gestured at me with one hand in a flat line, palm up. \"I think you're still stunned and unsure of how to react.\"\n\n\"Give him SOME credit,\" Mari interjected. \"He was just as lovey-dovey as Sam was at school.\"\n\n\"Yeah, because Sam was all over him,\" Belle pointed out. \"If you crawled into his lap and started making out with him right now, he'd totally get into it and be all happy.\"\n\nAlice mused on that and started pushing herself off the lounge chair.\n\n\"Don't even,\" I warned, palm out.\n\nAlice made a face and dropped her chin back onto her folded hands.\n\n\"It was easy for Matty to feel in love and be all lovey-dovey while Sam was wrapped around his arm 24/7 or dragging him out into the parking lot for a minivan nooner,\" Belle continued before looking straight at me. \"But now that she's not here - standing in front of him all scantily-clad gorgeous platinum-blonde goddess with tits out to here -- you've defaulted back to 'regular Matty'.\"\n\nI scowled. \"It's like you're trying to imply that I don't really love her or something.\"\n\n\"No, we don't doubt that, actually,\" Alice chimed in.\n\n\"We know you love her,\" Belle added. \"The angst you were going through yesterday and the way you gasped her name when I started blowing you this morning prove that enough to me. But you're REALLY torn about this whole 'girlfriend' thing.\"\n\nMy shoulders slumped. \"Sam told me she's in love with me. I really DO love her and care about her a ton. She's truly special to me, and I can't let her down.\"\n\nAlice frowned. \"I'm far from an expert on romantic relationships, but even I know that 'fear of letting someone down' is NOT a good basis for one.\"\n\n\"I think you're blowing the fear bit out of proportion.\" I sat up straighter. \"I may not have gone to bed last night ever expecting Sam to walk up and ask to be my girlfriend, but that doesn't mean I'm opposed to the idea now that it's been presented. It's not like I'm flying blind into uncharted territory, either. I know what it's like to have a girlfriend within the BTC. My relationship with Neevie set a precedent, one in which there isn't a whole lot that changes. I'll still spend quality time with each and every one of you. Sam will get some level of priority, the way Neevie did, but we all know she won't cut any of you off.\"\n\n\"She'd better not,\" Alice drawled. \"I got PLANS for you this summer.\"\n\nBelle and Mari laughed. But Belle raised her eyebrows and asked, \"Are you SURE Sam will follow Neevie's blueprint? What if she wants more than a relationship based on casual sex? What if she wants time and mindspace and half of your closet? What if she wants quality time and intimate conversations?\"",
        "I leveled her with a look. \"You mean: What if Sam wants everything YOU'VE wanted from me for the past few months?\"\n\nBelle blushed and looked away.\n\n\"It's a fair question,\" Alice added. \"And what does having Sam as your official girlfriend mean to YOU? In the end, you weren't happy with the shallowness of your relationship with Neevie. Would YOU want quality time and mindspace from her? Would it bother you if Miss Hundred-Miles-an-Hour-Multitasker doesn't dedicate a significant enough percentage of herself to you?\"\n\nI thought about that. \"I don't know yet. Having Sam for an official girlfriend had never entered my head as an option before. Now yes, I'd like to spend a little more quality time together with Sam than I did with Neevie, having intimate conversations that in the past she would never make time to have. I mean, we did talk a little about this stuff today. With school winding down and her statement that she's gonna let go of some of these extracurricular activities and other time-sucks in order to be a good girlfriend instead of always being absent, I think the two of us have a legitimate shot at finding happiness. Or are the three of you really such jealous selfish bitches that you don't want that for us?\"\n\n\"Of course we do,\" Mari insisted. Belle and Alice nodded their agreement.\n\n\"And even if we realized that being 'official' isn't what we really want and we default back to being 'just friends', our feelings for each other are already out there. I love her. She loves me. Even among six equals, I'm going to naturally gravitate to her a little more from now until we all leave for college. Functionally, there's really not a big difference between whether or not we're 'official'. I'm not gonna turn into some clingy needy whiner begging her for attention, and neither is she. So really, what's the big deal whether we're official or not? Might as well be official.\"\n\nBelle frowned. \"Do you even hear yourself?\"\n\n\"'Might as well be official'?\" Mari quoted with obvious concern on her face. And in an unusually sarcastic voice she added, \"How romantic.\"\n\n\"Functionally, nothing changed when you and Neevie became official,\" Belle pointed out. \"But emotionally, everything changed. You were already fucking each other's brains out. But once she got the girlfriend title, you both got SUPER excited and could barely contain yourselves for WEEKS. Sam's like that right now, too. But you?\"\n\n\"Ehhh... not so much,\" Alice drawled, answering Belle's rhetorical question.\n\nI pursed my lips, sighed, and said. \"I'm not opposed to being in a relationship with Sam.\"\n\n\"My heart goes pitter-patter with the intensity of your emotions,\" Alice deadpanned.\n\n\"Shut it.\" I exhaled slowly. \"Okay fine, fine, I'm not sold on the idea of being Sam's boyfriend. I really WAS quite happy to be the BTC's boyfriend -- collectively -- and while that little epiphany about how much Sam means to me and how much I'd hate losing her from my life knocked me for quite a loop, I really never intended to start dating her. Having her show up and ask me to become her boyfriend really did shock the hell out of me.\"\n\n\"So circling back to the beginning: you need to tell her you don't want to be her boyfriend,\" Belle advised.\n\n\"Well, you don't need to tell her you don't want to be her boyfriend,\" Mari clarified. \"But yeah, you need to tell her that you weren't expecting it, you're not sure about it, and that the two of you should work through that stuff together.\"\n\nAlice made a face. \"Pretty girl like Sam asks Matty to be her boyfriend and if he says anything other than 'Yes, absolutely!', she's gonna feel hurt and rejected.\" Alice then mimed air quotes as she added, \"'Isn't Aphrodite good enough for you?'\"\n\nBelle frowned. \"Maybe initially, but this is Sam.\"\n\n\"Exactly. 'Isn't Aphrodite good enough for you?'\" Alice repeated, again with the air quotes.\n\nBelle and Mari exchanged glances. Belle reasoned, \"She's emotional and she can suffer bouts of extreme self-doubt, but she's also super-smart and logical. As long as Matty doesn't abandon her, she'll get over it. I have faith he can make her see that his present uncertainty is perfectly understandable based on everything they've been through together and her plainly stated insistence on not dating him. Seriously, back when we got over the Neevie Sex Boycott and Sam and I went off to talk by ourselves, she was adamant about not dating him, and I think we've ALL been taken by surprise by her abrupt one-eighty.\"\n\n\"Because she's in love,\" Mari sighed.\n\n\"Apparently so is he.\" Alice got her elbows underneath her and now propped up her chin in her palms as she asked, \"Do you really love her?\"\n\n\"Yeah, I love her.\" I nodded and glanced at Mari for a moment before returning to Alice. \"Please don't take this the wrong way, either of you, because I will miss your friendship. But had Sam gone to Stanford and I didn't get to consistently see her anymore... it would've REALLY hurt. And while you say 'fear of letting someone down' is not a good basis for being in a relationship, I am terrified of letting her down.\"\n\n\"Then I propose a two-step plan,\" Alice announced with a broad smile.\n\n\"What's that?\"\n\n\"Step One: lead with that,\" Alice advised. \"Assure her you love her. Assure her you're committed to doing whatever it takes. But be honest that you said 'yes' to her boyfriend request because you were afraid of saying 'no' to her shocking and unexpected change of heart. Tell her you're willing to continue being her boyfriend if that's what makes sense for both of you, but let her know it's not so cut and dry at the moment and you need to work it out together.\"\n\nI shrugged and nodded. \"And Step Two?\"\n\nAlice sat up and grinned. Reaching down to the hem of her t-shirt with a cross-armed grip, she ripped it over her head and reached back to start working at her bra. \"Step Two: the three of us fuck your brains out. We missed out yesterday.\"\n\nI grimaced. \"But what if Sam comes home and finds us all like that?\"\n\nBelle's eyes glittered. \"Did you not learn anything this morning? She'd just join in.\" Her fingers started unbuttoning her blouse.\n\nMari grinned and reached for the hem of her sweater. \"I LOVE this club.\"\n\n\"Wait-wait-wait,\" I stammered, holding up both hands as a topless Alice got off her lounge chair. \"Girls, seriously. I am NOT in the right headspace for an orgy. Sam's out there somewhere doing whatever it is she's doing while I'm here going into vapor-lock thinking about my feelings for her.\"\n\n\"All the more reason for us to distract you,\" Alice remarked with a shrug as she sank down to her knees in front of me and reached for the zipper of my shorts. \"Worrying won't do you any good.\"\n\n\"Alice, I'm NOT in the mood,\" I complained.\n\nMy best friend slid her hand through the flap of my boxers and started scratching my limp prick. \"You've NEVER refused me before. Not in our entire lives. Are you really gonna start now?\"\n\nI narrowed my eyes and muttered, \"I told you 'don't even' like five minutes ago.\"\n\n\"That was different. You didn't want me to start making out with you and therefore prevent you from carrying out this conversation.\" Alice smirked. \"And you're not taking my hand out of your shorts.\"\n\nI sighed. \"I'm not gonna refuse you, but I'm really not in the mood.\"\n\nAlice glanced back at the others. \"Hey B, strip down Mari, suck on her hooters a bit, and then turn her over to start giving that bubble butt a rimjob. I'll blow Mr. Grumpy-Pants here a bit while moaning shit about slamming his big dick into Mari's bodacious butthole.\"\n\nMari blinked. \"You're being awfully free with MY asshole.\"\n\nAlice shrugged. \"Fine. YOU come give him a blowjob while Belle gives ME a rimjob in preparation for slamming his big dick into MY bodacious butthole.\"\n\n\"Hey, hey, let's not get crazy here.\" Mari laughed. \"I'm always happy to let Matty up my ass. I just want him to fuck my pussy first.\"\n\n\"Deal.\" Alice smirked and turned back to me. \"Now where were we?\"\n\nWe were rock hard is where we were, my dick having sprouted through my boxers like a flower on steroids, and Alice was pumping both of her hands up and down my full length.\n\nAnd yet, something still didn't feel right.\n\nI grabbed both sides of my head, clenched my eyes shut, and groaned. Alice stopped stroking, and the moment she did, I shook my head, took her hands off my dick, and kicked my left leg over her head as I dismounted Matty's Chair. Yanking my shorts up, I turned and stalked back into the house, leaving three very confused girls out in my backyard.\n\n****\n\n\"Matty? Hey! Uh, Sam's not here,\" Zofi exclaimed in surprise when she opened her front door.\n\nI waved her off, saying, \"I'm not looking for Sam. I know she's got stuff to do and obligations to people in her clubs. I'm actually here to talk to you.\"\n\nBlinking, Zofi said, \"Oh, sure. Come on in.\" She took a step back to let me in through the door, and as soon as she closed it behind me, the exquisitely beautiful brunette gave me a warm smile and extended her arms outward in an obvious invitation.\n\nI stepped into her hug and she squeezed me tight. A moment later, she tilted her head and her lips found mine. I hummed quite happily and pressed closer into Zofi's embrace. And after what felt like five minutes of making out, we finally broke for air.\n\n\"Ahhh, I needed that.\" Her big blue eyes sparkled at me from inches away. \"I missed out on 'Zofi Wednesday'.\"\n\n\"I'm sorry. I'll make it up to you,\" I promised.\n\nZofi's eyebrows waggled mischievously. \"Is that what you're here for now?\"\n\nI blinked. \"Uh, well, no, not exactly.\"\n\n\"Aww...\" She pouted cutely.\n\nI blinked again. \"I mean, if you need me to take the edge off I'd be happy to pull your panties down and take care of you.\"\n\nZofi rolled her eyes and chuckled. \"I only want you if you want to have me too. It's the way it goes.\"\n\n\"I didn't mean to imply that I don't want--\"\n\n\"Relax,\" she interrupted. \"I get that you're a little distracted today. It's not every day that Sam decides she finally wants her first boyfriend out of the blue. Plus, it's 'Belle and Mari Thursday' and yet you're here. So something's obviously gone wrong.\"\n\nTilting her head, the lissome brunette led me down the hallway into her family room while I watched her tight hips sway from side to side. She definitely had the model's walk down cold. Even fully clothed, she was alluring enough to make me reconsider my current lack of interest in getting laid.\n\nZofi sat on the loveseat, just barely to one side of the centerline, and patted the cushion next to her. I sat down, she set her hand on my leg, and she gave me her complete and undivided attention.\n\nI found myself just staring at her for a minute. She was truly a work of art, and I knew I was going to really miss her. I couldn't help but trace her cheek with just my right index fingertip, unwilling to touch her any more firmly than that for fear of marring her perfect complexion. \"My apologies, m\u00f3j skarbie.\"\n\nEven a frown couldn't mar Zofi's beauty. \"Apologies for what?\"\n\n\"I feel like I've been neglecting you lately. First I was so focused on discovering Alice's sexuality, then this whole jealousy thing with Belle, Neevie's Sex Boycott and then reconciling, the Girlfriend of the Week stuff, Holly joining for a few weeks, and now this thing with Sam... I'm afraid you must feel like I took your virginity just to mark you off my checklist and then moved on.\"\n\n\"Silly Matty. We had sex only three days ago with Neevie. And that was FUN, by the way.\"\n\nI shook my head. \"I don't mean sex. I mean... headspace. Quality focus. Emotional... attentiveness. I feel like I took for granted that you'd always be there.\"\n\n\"Fine by me. Relax. If I wanted your attention I would've gotten it.\" She gave me a reassuring look. \"As you pointed out, you've had enough drama circling around you lately without me adding more. Besides, I told you I was gay immediately after losing said virginity, so not getting a significant share of your emotional headspace sorta makes sense given all the other romantic turmoil that's been going on. Really, I've been just fine.\"\n\nI sighed. \"I'm glad.\"\n\n\"Now, what actually brings you out here on a 'Belle and Mari Thursday'? Did you get into some argument with them about this new relationship with Sam?\"\n\n\"Ah, no, not exactly. They're all pretty supportive of Sam and me dating, IF that's what we both want.\"\n\nZofi's eyes narrowed. \"Is that NOT what you want? Because you kinda made it seem like you were all aboard with a dating relationship today at school.\"\n\n\"I know, I know.\"\n\nZofi wrinkled her nose. \"I smell a 'but' coming.\"\n\n\"That's my line.\"\n\n\"It's still accurate.\"\n\n\"Yes it is.\" I took a deep breath and exhaled slowly, finishing, \"But... I'm not a hundred percent sure it's what I want.\"\n\n\"So I gathered. The question is: Why aren't you a hundred percent sure?\"\n\nI pursed my lips. \"I don't know exactly; I'm still working that out. But that's not actually why I came here.\"\n\n\"Why did you?\"\n\nI gave Zofi a serious look. \"Sam spent last night here with you. And as much as I want to fantasize about your nubile bodies writhing together to explore the highest levels of ecstasy all night, I'm pretty sure you spent most of the night talking about her and me.\"\n\nZofi's eyes narrowed again. \"She's my best friend. I'm not going to reveal her secrets or anything.\"\n\n\"As of this moment, she's my girlfriend,\" I reminded her. \"And I need to know what's going on in her head if I'm going to successfully keep her happy. Can you please help me with that part? Help me keep Sam happy?\"\n\nZofi pursed her lips and looked over at the TV for a moment, even though it wasn't turned on. She stared off into space for just a minute before turning back to me. \"What do you want to know?\"\n\n\"Help me work out the timeline here. Yesterday morning I told her I loved her, insisted that I didn't want to change the nature of our relationship, but that I had to admit what was in my heart because it was tearing me up inside. She ditched school, and you and I talked about letting me know if she showed up here, but you never called. I finally got a hold of you later at night, and thank you for letting me know she was safe and sound. But you also told me Sam didn't want to talk to me. You had to have been able to imagine what was going through my head at that point.\"\n\nZofi gave me an apologetic look. \"She wasn't ready to talk to you yet. She was still weighing the options and trying to decide what was best not only for her, but also for you and your feelings for her.\"\n\n\"It still felt like a rejection to me. I tell a girl I love her, she runs away, doesn't show up to school, and when I finally track her down, her best friend says, 'She doesn't want to talk to you.'\" I popped my eyebrows. \"I was a MESS last night.\"\n\n\"But it all worked out in the end, right? She told you she loved you. She asked you to be her boyfriend. You two were soooo adorable together all day--\"\n\n\"And then she left to do her own thing like she usually does most afternoons and I went home more confused than ever.\"\n\nZofi frowned. \"Is that it? You feeling abandoned because your brand-new girlfriend is spending the afternoon taking care of business instead of falling into your bed to fuck like bunnies? One would've thought that nooner in the minivan would've taken the edge off enough.\"\n\nI shook my head. \"Please don't think so crassly of me. The reality is that I get laid plenty often enough with all six of you to ever worry about where my next orgasm is coming from. No, I have absolutely no problem with Sam spending the afternoon away from me. Actually, come to think of it, I rather like that she has a life full of other things that don't involve me. It means she's far less likely to ever become a clingy, needy girlfriend. I love the idea of her being low-maintenance in that sense.\"\n\n\"Lucky you. Five other hot babes willing to bend over for you at the snap of your fingers whenever your actual girlfriend is busy.\"\n\nI blinked, smirked, and snapped my fingers.\n\nIt took Zofi a second, but she grinned, stood up from the loveseat, and promptly bent over at the waist. Her ballerina flexibility made it look so gracefully effortless as her legs were ramrod straight although her feet had been split shoulder-width apart, allowing her to smile back at me between her calves.\n\nI mused aloud, \"You know, I don't think we've ever actually had sex in this position before.\"\n\nStill upside-down, Zofi thought about that. \"Most of the time I enjoy the intimacy of cuddling with you while we make love. That said, if you ever want to just bend me into various pretzel shapes and have your way with me, I wouldn't mind letting you do that on occasion.\"\n\n\"I definitely want,\" I stated a little too eagerly. \"But we're getting sidetracked.\"\n\nI snapped my fingers again, and as if I'd hit an \"off\" switch, the flexibly slender brunette stood back up and returned to sit beside me. She giggled and put her hand on my thigh, gently stroking it.\n\n\"What I don't understand,\" I prefaced, \"is how Sam got from 'I don't want to talk to him' last night to 'I want him to be my boyfriend' this morning.\"\n\nZofi shrugged. \"Simple. She already wanted you to be her boyfriend from the minute she showed up at my house. Floating on Cloud 9, idly dreaming up children's names, crazy stuff like that. Now she waffled on that off and on all evening, and didn't want to talk to you last night because she was afraid that as soon as she heard your voice her love for you would burst forth and she'd rush back home to promise you every ounce of her being even thought she was terrified of surrendering that kind of... power... to you, for lack of a better term.\"\n\nI nodded. \"It seems an apt term. Mother kept using it last night as well.\"\n\nZofi shrugged again. \"I'm sorry that you had such a rough night last night, but I think you can understand why she didn't want to make promises to you she wasn't yet ready to keep.\"\n\n\"But she's ready to keep them now?\"\n\nZofi smiled. \"She said she wanted to sleep on her decision, so we quietly got each other off, fell asleep in each other's arms, and she woke up pretty early this morning feeling positively effervescent. She hurried over to your house, found you with Belle, and the rest is history.\"\n\nI nodded slowly, still processing all that. \"Can you tell me what her concerns were? Why she wasn't yet ready to keep those kinds of promises?\"\n\nZofi shrugged. \"The usual: focused on her career, focused on school, worried you might become clingy or needy or demand certain 'boyfriend rights' that would force her to choose between you and her goals. Stuff we all knew about for a long time that made her so certain she'd never date you for real until after college.\"\n\n\"But she's ready to risk all that now?\"\n\n\"Obviously.\"\n\nI shook my head slowly. \"Why?\"\n\n\"Because she's terrified of losing you.\"\n\nI frowned. \"What?\"\n\n\"What was that phrase she used?\" Zofi screwed up her face and looked up to the right, as if scanning through her memory banks. \"Oh, it was about Belle. Sam said something along the lines of, 'He told me he's in love with me. If I reject him now, it's gonna undermine his faith in me to the point that if we go to Berkeley as 'just friends', he's gonna end up meeting some greedy bitch who's gonna take him away from me just like Belle's afraid of.\"\n\nMy frown deepened. \"Wait, so Sam doesn't actually want to date me, and in fact would be happier with the status quo. But she's afraid that if she doesn't lock me down as her official boyfriend then that leaves open the door for someone else to come and take me away?\"\n\nZofi eyes got big, a bit of a deer-in-the-headlights expression on her face. \"Uh... well...\"\n\n\"So it's not that she's super in love with me and can't stand the idea of not letting our love bloom,\" I reasoned. \"But rather, this is a calculated chess move to take me off the market.\"",
        "Zofi blanched, now wincing as if realizing she'd unwittingly betrayed her bestie's secrets. \"Uh, well... I don't really think you're seeing it the same way that Sam--\"\n\n\"No, no, don't get me wrong,\" I cut her off. \"I'm not upset at Sam for this. I mean, this course of action actually makes more logical sense than my declaration of love suddenly washing away everything Sam had been saying for months now about how important her goals were to her and that she wouldn't be ready to date me until after college.\"\n\nZofi's eyes narrowed. \"You're not upset?\"\n\n\"I don't think Sam and I are ready to be a couple. If we continue on this track, I WILL want to be a primary priority in her life and have certain expectations of her time commitment to me. I wouldn't even do it intentionally, but I'd want that from a committed girlfriend, and I seriously don't want to do that to her right now.\"\n\n\"But you love her. And she loves you.\"\n\n\"I know, I know. But I think things would be better if she and I had the space to continue growing closer without the expectations of a committed relationship. As you would say, 'We're not there yet, darling.'\"\n\nZofi blushed momentarily, but she raised her eyebrows and pointed out, \"You've already agreed to become her boyfriend.\"\n\n\"I'm not going to reject her if she wants to stay this course. But I want us to be on the same page, that's all. If she's looking for Prince Charming to come sweep her off her feet and carry her away to a castle in the sky where she can be pampered for the rest of her life - unlikely as that may be - I need to know. If she wants me to suddenly become her committed monogamous partner in life -- hopefully not -- I need to know that too. If she actually wants to keep the status quo, albeit with a ceremonial boyfriend title to keep the greedy bitches away, I think THAT'S more what I'm leaning towards if she's like-minded.\"\n\n\"She is. That last option,\" Zofi confirmed.\n\nI sighed with obvious relief.\n\n\"Or at least, that's what her head wants,\" Zofi hedged.\n\nI frowned and my eyes narrowed. \"You're implying that her heart wants something different. Something more.\"\n\n\"Isn't in obvious?\"\n\nI sighed. \"How MUCH more does she want?\"\n\nZofi mimed zipping her lip. \"For that, you'll need to talk to Sam.\"\n\n****\n\nI went back home to find that Sam had not returned but that Alice, Belle, and Mari had all vacated the premises on their own. I found three panties atop my bed along with a note, reading: You should have been here. It was SPECTACULAR.\n\nIt was nearing dinnertime, so I walked over to Belle's house to start dinner. She obviously wanted to know where I'd gone off to, and I explained about going over to Zofi's house to extract what information I could about Sam's thought processes the night before.\n\nBelle, of course, tried to squeeze out all the juicy details but I told her I was done talking about this stuff and just wanted to get dinner going.\n\nWe had a pleasant meal with Belle's dad, and when I walked back to the house, I felt my heart skip a beat at the sight of Sam's Escalade parked in the driveway. I hurried inside, and as soon as the door shut, I called out excitedly, \"Sam?\"\n\n\"Matty!\" She was already at the top of the stairs and hustling down, her feet banging the treads. I met her at the foot of the stairs as she launched herself at me, and I staggered beneath the impact of the busty, curvaceous blonde as she wrapped her legs around my waist and crammed her tongue straight into my mouth.\n\nWhatever uncertainty I'd felt all afternoon evaporated in an instant beneath the waves of intense passion the girl I loved obviously felt for me. And suddenly consumed with a need to be inside her, I rapidly carried her over to the living room sofa just a few feet away from the front door, pivoted, and sat down heavily without ever breaking our liplock.\n\n\"Matty, I need you in me...\" she whimpered, fingers scrabbling at my shirt.\n\n\"The feeling's mutual,\" I muttered, my own hands sliding into the back of her shorts. We stared at each other hungrily for three seconds, just panting from the exertion. And then suddenly we both moved.\n\nShe stood up on the floor, frantically tearing at her shorts while I hopped on the sofa cushion to strip down mine. There was nothing seductive or sensual about our actions. We were just getting our clothing out of the way as fast as we could to get straight to the main course as if we hadn't eaten in days.\n\nWith less than a minute of foreplay, Sam wasn't super wet, but she was wet enough as she climbed back into my lap and notched my cockhead at her entrance. We both groaned as I entered her, my hands hooked around her shoulders yanking down as hard as I possibly could. It was like my dick was on fire and the only way to quench the flames was to get my entire schlong fully immersed in Sam's sweet snatch. And once I finally succeeded, we both gasped in utter and complete relief.\n\nMy body went spineless as I flopped against the backrest. Sam groaned and collapsed against my chest, her forehead braced against my shoulder. Both of us were breathing hard and neither of us was in any hurry to start moving again. For now, feeling this ultimate union of two bodies joined together as intimately as they ever could be was all we really needed.\n\n\"I love you, Sam,\" I muttered, feeling strength flow back into my limbs so that I could clutch her fiercely.\n\n\"I love you too,\" she sighed happily, kissing her way up my neck and jawline before holding my head and initiating a fresh makeout session.\n\nWe kissed for what felt like five minutes, no longer in any rush whatsoever. Joined together, it felt like all was right in the world and there was no need to actually pump in and out or do all the normal things a couple does when having sex. I just wanted to BE together with Sam, and accomplishing that goal felt like I'd already conquered Mount Everest.\n\nI loved her.\n\nI did.\n\nI had feared losing her when she ran away yesterday morning.\n\nI feared letting her down now.\n\nI knew with a hundred percent certainty that I would accept whatever role in her life she wanted from me, up to and including a monogamously committed boyfriend. I absolutely HAD to have her in my life.\n\nI LOVED her.\n\nI couldn't pinpoint any one moment when it had happened. True, Sam would always be special to me as my \"first\". But ever since then, she'd never been at the forefront of my life or my emotions. Belle... my Annabelle... had always occupied the lion's share of my attentiveness, and she would always be a huge part of my life. My sexual attraction to Naimh and our ill-fated romance had taken up a huge chunk of the rest of my focus. Caring for and protecting Mari... my angel... had helped give me a sense of purpose. Discovering sex with my best friend Alice, and helping Zofi come to terms with her own sexuality, had driven me for a while as well.\n\nAnd yet through it all, Sam was always there. Ready and willing if she was needed, but never an intruder when she wasn't needed. So strong and yet so fragile, she fascinated me. She was a lady in the street and a freak in the sheets. She was both smarter and more assertive than me and yet made me feel both needed and loved. I still had so much to learn about her, and I was desperate to find out.\n\nI loved her.\n\nAnd I came.\n\nPrematurely.\n\nAgain.\n\n\"Oh, shit,\" I grunted as I felt my balls evacuate their contents into her, my eyes flying open WIDE.\n\nSam broke the kiss and sat back, a look of wonder on her face as she felt me splatter her insides with my hot spunk. \"Are you cumming in me again? I haven't even moved!\" Her tone wasn't upset, more amused than anything.\n\nI was still in the throes of ejaculation, my abs clenching as I squeezed out the final spurts. I grunted and groaned, my cheeks flushed with embarrassment. And in the end I gave her a helpless look and muttered, \"Aphrodite's pussy made me cum.\"\n\nSam grinned and pecked my lips. \"Damn straight.\"\n\n****\n\nSam climbed off me and reached down to scoop a glob of my jizz leaking out of her pink taco. She popped the glob into her mouth and gave me a saucy grin, which almost kept me hard. But it was clear that the initial urgency had passed, and she grabbed her panties and shorts and started casually putting them back on.\n\nMy own shorts and boxers were around my ankles, so it was a simple matter to pull them up, and once again we were both fully clothed. Sam narrowed her eyes and remarked, \"I take it as a compliment that I have this effect on you, but I'm warning you now -- boyfriend -- that you'd better make it up to me before we go to sleep.\"\n\n\"Absolutely, ma'am,\" I replied hurriedly.\n\nSam nodded and started walking out of the living room. I got up and followed her into the kitchen. \"Did you get dinner already?\"\n\nShe nodded. \"Ate dinner with Neevie, actually. I went over to her place this afternoon.\"\n\nI blinked in surprise. \"Really? I'd assumed you had extracurriculars or stuff.\"\n\n\"Usually I would, but you know... second-semester seniors and all. I promised you I'd wind down that stuff in order to be a more attentive girlfriend.\"\n\n\"Yeah, about that.\" I grimaced, although I paused as she finished filling a glass of water and handed it to me.\n\n\"Hydrate,\" she instructed. \"I need you at full strength when you make it up to me.\"\n\n\"Absolutely, ma'am,\" I repeated with a smile and took a big swig while sitting down on one of the stools at the kitchen island. But once I swallowed, I continued, \"About you giving up things in order to be a more attentive girlfriend, I wanted to make sure you understood you don't need to do that for me. I'd never ask you to give up things you want to do or demand more time from you than you have. Like, I'll never be the kind of guy who asks unfair questions like, 'What's more important to you: me or XYZ?\"\n\nSam's eyes narrowed. \"You talked to your mum about us.\"\n\nI blinked. \"Well, yeah.\"\n\nSam smiled again. \"I'm glad. I know how little you actually WANT to talk to Beverly, so it just goes to show how much you actually care.\"\n\nI arched an eyebrow. \"I will state, Mother was pretty clear that she did NOT want us to start dating now. I don't remember exactly what she said verbatim, but it was something along the lines of you needing the stability of our group of friends, not the inherent instability of a new romance.\"\n\nSam pursed her lips and sighed. \"She told me the same thing.\"\n\nI took a deep breath and added, \"And this is the part where I'm supposed to tell you I'm not sure I want to be your official boyfriend either.\"\n\nSam's eyes abruptly popped open and her mouth gaped. \"Run that by me again?\"\n\nI winced. \"Please don't get upset, and I need to make absolutely clear that if this is really what you want, then I'll be with you a hundred percent.\"\n\nHer eyes narrowed. \"But you're not a hundred percent about this right now.\"\n\n\"I rather doubt you're a hundred percent about this either. Not after talking to Zofi this afternoon.\"\n\n\"You went to talk to Zofi?\"\n\n\"You apparently went to talk to Neevie. What was that about?\"\n\n\"What did you talk to Zofi about?\"\n\n\"Nuh-uh. I asked you first.\" I cracked a grin.\n\nSam took a deep breath and sighed. \"She's not happy about me asking you to be my boyfriend.\"\n\nI blinked rather rapidly at that pronouncement, rather surprised.\n\n\"She's not happy with you for telling me you loved me, either.\"\n\nI grimaced. \"It doesn't mean I didn't love her.\"\n\n\"I tried to remind her of that. But it's still a bit of a kick in the tits for her to have this big dream of making you fall in love with her again, come to an agreement to just be friends, and believe that the seven of us would stay one big happy BTC until the end of summer...\"\n\n\"And then have you and me hook up together instead.\"\n\nSam grimaced. \"I failed to factor her into my calculations with Zofi last night.\"\n\nI arched an eyebrow. \"Really? I thought the whole point was to make me official in order to get me off the market. At least, that's what I seemed to get from Zofi. Just keep things status quo except for the title.\"\n\nSam frowned. \"She said that?\"\n\nI shrugged. \"-I- said that and watched the way her expression gave her away.\"\n\nSam pursed her lips and furrowed her eyebrows. \"I DO love you. I've always loved you. Please believe that.\"\n\n\"I do believe that. But I also believe you're not a hundred percent certain a romantic relationship is what you really want.\"\n\nSam gave me a curious look. \"But isn't a romantic relationship what YOU want?\"\n\nI made a face. \"Not really.\"\n\nSam looked genuinely surprised. \"Really?\"\n\nI spread my hands out. \"I thought I made that part pretty clear when I first told you I loved you. I want you to be a permanent part of my life long-term, but I wasn't asking you to be my girlfriend or in any way change the way you were going about your life.\"\n\n\"But I thought...\" Sam frowned. \"I mean, especially after you complained about the lack of emotional intimacy in your relationship with Neevie...\"\n\n\"What, you thought I wanted emotional intimacy with you?\"\n\n\"Don't you?\"\n\n\"Well in general, yeah. Waking up with you in my arms and getting laid every morning was pretty dang nice.\"\n\n\"That's physical intimacy.\"\n\nI took a deep breath. \"I want to get to know you better. I wasn't lying when I said it felt like out of all six BTC girls, I spend the least amount of time with you. Yes, I want to have more conversations with you. You fascinate me, and I want to know everything there is to know about you.\"\n\n\"You want more quality time with me.\"\n\n\"Well, yeah.\"\n\n\"And you love me.\"\n\n\"Absolutely.\"\n\nSam furrowed her eyebrows. \"Then I don't understand why you said you don't want to be my boyfriend.\"\n\n\"I didn't say I didn't want to be your boyfriend. But I do need to admit I'm not completely sure about it, either.\"\n\n\"That's basically the exact same thing to me. You're either 'in' or you're 'out'.\"\n\n\"I'm in, I'm in,\" I assured her, \"if that's what you really want as well. Is it?\"\n\nSam looked REALLY frustrated now. \"I don't get why YOU'RE not sure it's what you want. The whole thing with being in love with me, that I'm your favorite, that you want me to be a permanent part of your life... wasn't that basically asking me to be your girlfriend?\"\n\nI frowned and shook my head. \"I thought I explicitly told you I wasn't asking you to be my girlfriend.\"\n\n\"Because you didn't want to mess up my life and because I'd made clear for months that I didn't have time for a boyfriend.\"\n\n\"Exactly!\"\n\n\"But I thought...\" Sam was pretty huffy now. \"I thought you were just saying that stuff to be... I dunno... Like, you were in love with me and you wanted to be my boyfriend but you knew I didn't have time for a boyfriend so you were just trying to be nice about it and say it would be okay that I wasn't your girlfriend but deep down you actually wanted to be my boyfriend.\"\n\nI pulled my head back. \"Is THAT what you thought?\"\n\n\"YES!\"\n\nI shook my head. \"I'm pretty plain about what I mean.\"\n\nSam narrowed her eyes and muttered, \"Tell me if this sounds familiar: Last year I'm dry-humping virgin Matty's boner out by the pool peeling back my bikini inch-by-inch while shoving my tits into his face, and when I ask him if it's okay that I don't bare my nipple and let him suck on it, he says it's okay.\"\n\nI blinked and frowned. \"It WAS okay.\"\n\n\"You saying you didn't secretly wish I'd bare my nipple and let you suck on it back then?\"\n\nI rolled my eyes. \"Of COURSE I not-so-secretly wished that.\"\n\n\"How is this any different?\"\n\n\"It's not any different. When I was still a virgin and you were asking me if it was okay that you didn't bare your nipple and let me suck on it? That was me being supportive and not making you do anything you didn't want to do. Last summer? You weren't ready to cross that line, and I was fine with it. And in case you haven't noticed, we did cross that line eventually.\"\n\nSam managed a little smile at that.\n\n\"And right now?\" I continued. \"It's exactly the same. I want to be supportive and attend to your needs, whatever they may be, at whatever comfort level you feel.\"\n\n\"But I knew you wanted to suck on my nipple back then, and I know you love me and want to be with me and want to have the kind of close emotional relationship you never got with Neevie, don't you? I mean, you're gonna SAY you're okay with not getting it just like you ALWAYS say you're okay with not getting it. You've spent YEARS telling me you're willing to accept whatever I'm comfortable with even if deep down you actually want more from me, and do you have ANY idea how guilty that's made me feel when I realized I was treating you like a disposable plaything? I USED you for years, always taking, never giving. And with you now telling me that you're in love with me, I just can't--\"\n\n\"Whoa-whoa-whoa,\" I held up both hands, cutting her off. \"First of all, please don't feel like you were using me. I got PLENTY out of your teasing; my mental spank bank was permanently overflowing because of you. And the absolute LAST thing I want is for you to try becoming my perfect girlfriend out of GUILT. Is THAT why you asked me to be your boyfriend?\"\n\nShe shook her head, still clearly confused. \"Do you honestly NOT want me to become your girlfriend?\"\n\n\"Like I said, if you and me becoming devoted girlfriend and boyfriend is what YOU want, then I will do everything in my power to make you happy.\"\n\nSam screwed up her face. \"That is NOT what I want to hear right now Matty! I'M the one standing here trying to tell you I will do everything in my power to make YOU happy!\"\n\nI snorted. \"That's not how this relationship works. That's never how this relationship has worked.\"\n\nSam splayed out her hands and gave me an incredulous look of both confusion and frustration.\n\nClosing my eyes and holding up both index fingers, I took a deep breath to collect my thoughts, Mother's words about power in the back of my mind. When I opened my eyes again, I found Sam pacing back and forth across my kitchen with her arms folded over her chest and her lower jaw jutting forth with her teeth clenched.\n\nTaking another deep breath, I gave Sam a serious look and stated evenly, \"I want you to listen close: I. Don't. Need. You. To Change. You've always set the pace in this relationship. You run, I follow and stare at your ass the whole way. I'm the marionette, and you're holding the strings. THAT'S how this relationship has worked, and I LIKE it that way. You're strong, and you're confident, and yeah, you like feeling in control. I'm happy to help you feel in control.\"\n\nSam stopped pacing and gave me a curious look.\n\n\"And let me repeat for what feels like the millionth time: When I said I wasn't asking you to change a thing about your routine, I meant it. No secret wish for you to become my perfect girlfriend. This is different from the baring your nipple and letting me suckle on it thing. Yes, I will absolutely grant that I wanted to suck on your boobs from the moment you brought them within six inches of my mouth. But this? No, I was genuine about not asking you to change your routine. I don't secretly want you to blow off your extracurriculars to be an attentive girlfriend. I don't secretly want you give up ANYTHING about your current life for my sake. I ONLY wanted to tell you how I felt. That's it. I mean, I appreciate that you were willing to subjugate your own needs in order to appease your sense of guilt for my sake, but it's not necessary. I am perfectly happy keeping things the way they are.\"\n\n\"Just the way they are?\"\n\nI blushed. \"Well I really did like waking up with you in my arms - I loved the emotional intimacy - and then of course getting laid every morning. But I genuinely don't mean for that to become a requirement or anything.\"\n\nSam blushed as well. \"I rather enjoyed those mornings, too.\"",
        "We shared a smile, and Sam averted her eyes for a minute. But after taking a deep breath, she asked one more time, \"You really DON'T want me to become your affectionately devoted girlfriend?\"\n\n\"I want to know what YOU want. Now I think your head wants one thing and your heart wants something else. Now maybe there will be a day when the two will resolve themselves, but can you honestly tell me that today is that day?\"\n\nSam hesitated, clearly conflicted. But eventually she pursed her lips and looked down. \"I'm sorry.\"\n\n\"Don't apologize.\"\n\n\"I sincerely thought you wanted me to be your girlfriend but were just pretending not to for my sake, and I thought I owed it to you to give you a fair shot. Even now I'm still feeling guilty about it.\"\n\nI shook my head. \"Don't feel guilty. Don't you realize I'm one lucky sonofabitch? I'm living the perfect life right now being 'the BTC's boyfriend'. I've got Neevie Mondays, Alice Tuesdays, Sam and Zofi Wednesdays, Belle and Mari Thursdays, the whole group orgy Fridays, a variety of dates on Saturdays, and then Belle and Sam Sundays. I've spent a lot of time having emotionally intimate conversations with Belle. After some weird months, Alice has really become my best friend again now that we finally got past all the sex stuff and she's far less biased about romance than Belle is. And I have you... living in my house... I love you, and I need you in my life, and there's a special quality about you that drives me insane. Aphrodite's pussy has made me prematurely ejaculate twice now just because you're so amazing.\"\n\nSam blushed and preened a little.\n\n\"I get all of my physical and emotional needs taken care of collectively by the group,\" I continued. \"I get more pussy and ass than any one human male deserves. So please don't feel guilty about keeping things status quo.\"\n\nSam scrutinized me and pursed her lips. Eyes tight, she muttered, \"Now I'm wondering if you're only rejecting a seriously committed relationship because you don't think I'm good enough.\"\n\nI buried my face in my hands, \"Oh good LORD I wish I could relieve you of this crippling self-doubt thing. You are fucking AMAZING and I would be LUCKY to be in a seriously committed relationship with you. I would LOVE to date Aphrodite, alright?\"\n\nSam looked skeptical for a moment, but she seemed to accept my answer.\n\n\"Maybe someday you and I will be ready for that next step. Not now. For now, I think it's best that I continue to be the BTC's boyfriend, not yours. I love you, but I also love all the girls. I want you ALL to happy. Making you happy... making you feel safe... and really, being obedient for you for these past few years have been my life's purpose, collectively. I will do everything in my power to make the BTC happy, at least for as long as we stay together.\"\n\nSam exhaled slowly. \"Neevie will be happy. She said she'd accept me becoming your girlfriend for her own guilt for not giving you the intimate relationship you needed. But she'll be happier with you belonging to the entire BTC and not to me.\"\n\n\"From the conversations I've had with the others, I think they'll all be happier as well. I mean, Alice, Belle, Mari, and Zofi all gave us their blessing if it would've made us happy, but they'll be relieved if you and I stay 'just friends' for now.\"\n\nSam grinned. \"Well, I still get to be your 'girlfriend', don't I? Just not your sole girlfriend. I mean, if you're the BTC's official boyfriend, then this just means you have SIX girlfriends.\"\n\n\"You're still my favorite. Maybe you can be 'head girlfriend'.\"\n\n\"Ooh, I like that idea,\" she laughed and came forward to hand me the glass of water again.\n\nI took the glass and arched an eyebrow.\n\n\"Hydrate, Matty. Your head girlfriend wants you to take her around the world.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "big tits",
        "big breasts",
        "high school",
        "harem",
        "18-year-old",
        "mff",
        "love",
        "angst",
        "creampie"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-49-50"
}