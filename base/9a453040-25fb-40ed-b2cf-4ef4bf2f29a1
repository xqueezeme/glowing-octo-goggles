{
    "title": "If I Knew Then... Ch. 06",
    "pages": [
        "I had everything ready to go in the car when the call came on Saturday morning. I was at Jill's house in twelve minutes, and the door was opened by Jill in a dressing gown, and I thought, nothing else. That thought was confirmed once the door was closed and I could take her in my arms to kiss her. \n\nShe was already very turned on, and slightly wild eyed. Between kisses she said \"Upstairs\" so we made our way to the foot of the steps and then she broke off and ran up them. I followed, spurred on by the fact that as she ran Jill was undoing her robe, and dropped it behind her as she opened the bedroom door, calling out \"It's Sean, honey!\"\n\nI stopped at the door to stare. Jill was lying naked on top of Penny, who was also naked. They were kissing, and Penny's hands were smoothing over Jill's body in a desirous fashion. I could see that both were using their tongues, and Jill was playing with Penny's left breast, squeezing the nipple between thumb and finger, and at the same time moving to get her knee between Penny's. She was pressing her pussy down on the top of Penny's thigh, and as I watched Penny opened her legs, raising the one between Jill's thighs and pressing her own dark hairy mound up against the pale leg that was rubbing between her soft tanned limbs. Penny was obviously in a state of high arousal. \n\nI wondered what to do. Strip? Join in fully clothed? Let them carry on and just watch?  It looked like Penny would come soon, and if that hand of Jill's was heading where I expected ...\n\nPenny's body lurched upward as Jill's fingers ran through  her pubic hair, over her mons and down her naked lips. I watched as Jill curled a finger upwards, pressing in and parting Penny's thick outer labia, catching the moisture within, bringing it up to her clit, pressing a fingertip on that sensitive bud, driving the breath from her body. Penny was overwhelmed. Her body shook and her legs flailed as she almost screamed. For a moment Jill was shocked into stillness, but then renewed her efforts. She had moved her own leg back to allow her hand access, and now bent her head to take a nipple in her mouth as she began rapidly rubbing her fingers up and down over Penny's swollen pussy. Penny's body responded, her gasps getting higher pitched, her hands clutching Jill's head as she came. \n\nFrom my viewpoint at the bottom of the bed I saw Jill move to kiss Penny, her hand releasing Penny's pussy, leaving it open to my sight. Her dark hair was thick and only slightly curled, her Mediterranean colouring showing in the darkness of the inner lips just showing through the tanned outer labia. I had to kiss them. \n\nI moved to kneel between Penny's feet, bending to worship her beauty with my mouth. The first touch of her pussy was made with the tip of my tongue. Her thighs jerked to close, then relaxed as I explored her with lips and teeth and tongue and nose and chin. I was able to push her legs wider and lick down the whole length of her, pressing my tongue into her depths. \n\nJill was still kissing her and playing with her breasts, and Penny began fondling her in return. As I ran my mouth up to concentrate on her clitoris, savouring the delicious taste of musky salty sweetness, I saw Penny's hand reach for Jill's nipples and the other slide down over her stomach to explore the pale pink folds and light brown curls below. \n\nJill moaned, and my erection caught in my jeans became uncomfortable. I wanted her. Her pale thigh was only a few inches away, curving up to her upraised bottom. Her breasts hung down with Penny's darker hand gripping one. I could just move to stand behind her, drop my trousers and take her from behind. I could grip those slim pale hips and sink my cock deep, and come in her as she kissed Penny and fingered her.   But Penny was approaching another climax as I lapped at the top of her slit and slid a finger carefully up and down the lower part of it. I couldn't stop now.\n\nI found the entrance to her pussy, and pressed gently in with my finger tip. Penny gasped \"Oh, oh my! Oh what are you doing?\"\n\nI didn't reply, my mouth was busy. I gently pulled my finger out and pushed it back in, deeper, feeling her soft warm wetness. She wriggled and again said \"Oh, oh my!\"\n\nI repeated the motion, and with each penetration I licked her clitoris, and as I pulled out I pulled gently to each side or down, relaxing her muscles, stretching her. After half a dozen strokes I had my whole finger in her and had spread her open with my tongue.  I paused to look at her. \n\nIt was a strangely familiar sight, in memory from another life, Penny's pretty pussy with my finger in it, inner lips dark pink, almost purple edged, dark haired lips spread, tanned thighs wide, conical tits with dark nipples pointing at the ceiling, gasping as my thumb rubbed her clitoris and the finger inside her pulsed against the inside of her behind her mons.  Of course in memory Jill had not been there, sucking those dark nipples, and having her own pussy fondled by Penny. \n\nI felt Penny's inner muscles contract in waves around my finger as I latched onto her clit again with my lips and flicked it with tongue tip and hummed deeply at the same time. As she came I pumped my finger in and out in time with her pulses and her gasps.  \n\nShe was almost breathless and weeping by the time I let her close her legs and climbed up the bed beside her. She clung to Jill as she kissed her and held her, and I snuggled behind her, wrapping my arm around both girls. I kissed Penny's neck and Jill's lips. Jill smiled, and ran her tongue across my mouth, tasting her friend's pussy on my lips. \"Mmm.\" Jill crooned. \n\n\"Hi Penny. You okay?\" I said gently. \n\n\"Uh huh.\" she snuggled against Jill's shoulder, \"Very.\" Then she giggled. \"You never told me about that, Jilly.\"\n\nJill laughed \"Good isn't it?  And did he put his finger inside as well?\"\n\nPenny nodded, \"I think so. It felt weird. Nice though, especially when I came.\"\n\n\"Hmm, I know what you mean. It is good to have something inside when I come.  Speaking of which, I need to come now, with something inside me. Help me get Sean out of those clothes please.\" Jill said, and released Penny. She rolled off her side of the bed, and came round to my side as Penny rolled over to face me. \n\nPenny kissed me then, as she pulled at my jumper.  I made sure to touch my tongue to hers, and smiled when we parted to let her pull my clothes over my head. I pulled her back to kiss her and said \"Your mouth is as delicious a your pussy, Penny.\" \n\nHer eyes went wide and she looked shocked as she broke the kiss. She blushed as I said \"You can taste it on my lips, can't you? And don't you taste good?\" and I kissed her again. \n\n\"Oh,\" she said \"I, I ...\"\n\n\"No false modesty now, and no silly prejudice.\" I said sternly. \"Kiss me again, and tell me how I taste.\"\n\nShe did as she was told. \"I suppose it isn't bad.\"\n\nJill laughed. She was at my feet, undoing my shoes and taking off my socks. \"It is odd the first time, honey. But I like it now. The same with Sean's cock. The first taste was strange but then it was delicious.\"\n\nPenny was blushing fully then. \"Sean's ... Sean's...\" she spluttered. \n\n\"Penny darling,\" Jill crooned, and came up to put an arm round her \"You liked it when he kissed your pussy yes?\" Penny nodded  \"And I love it when he kisses mine.  So it makes sense that he would like being kissed there too, doesn't it?\" Jill  asked in gentle, reasonable tones.\n\n\"And you did that?\"  said Penny. \"You have kissed it?\"\n\nJill nodded  \"You asked me last night if I would show you everything we do. Well that is one of the things we do. You don't have to do it, okay?  Now, I want to get Sean naked. I want to play with him, and make him come, like we said last night. Is that okay?\"\n\nBy this time the two girls were kneeling side by side on the bed, with me infront of them, lying facing them, my head at Penny's end of the bed, my waist about level with Jill's knees. I had my right hand on Penny's bottom, just cradling it, and my left on her knee, again just holding her. I smiled up at her as she looked down nervously. \"It's ok, Penny darling,\" I said, \"We can all put our clothes back on if you want.\"\n\nShe giggled, and automatically raised an arm to cover her breasts. \"Oh I'm sorry. I just feel rather silly suddenly. I mean, you have just seen me naked. I am naked. It's all a bit weird.\"\n\nI raised myself on my elbow and reached to take her chin. I said \"Yes, I have seen you naked, and you are beautiful. From top to toe, and all of the bits in between. I am very lucky, I know it, to have two beautiful young women naked on a bed with me, and it would be an awful shame if they got dressed so soon.\" I kissed her, and drew her down to me, letting her develop the kiss, letting her run her hands over my chest, as I touched her sides and breasts and back and thighs. I whispered how beautiful she was, complimented her smooth skin, her firm breasts, her tiny oval navel, her bottom. I had to admit when she questioned me that it wasn't as round as Jill's, but it was beautiful none the less. \n\nJill had moved off the bed. It was not really large enough for three. I was conscious that I was neglecting her as I seduced Penny, but she knew what I was doing. I rolled Penny on her back and began to kiss my way down her body. Jill came and sat on the edge of the bed, stroking Penny's hair and saying \"He is right you know. You are beautiful naked. Open your legs for him Penny, let him look at your pussy again.\"\n\nShe did as she was told, and I kissed her there again, saying \"Such a beautiful thing, so complex and pretty, and soft and sweet,\" and I kissed her deeply. \n\nPenny gave a great relaxing sigh. Jill said \"That's better eh?\" and moved to lie beside her. They kissed, while I nibbled at Penny's pussy, and Jill lifted her leg so I could slide two fingers into her very wet slit.  Jill began to pant quite soon as I worked my fingers in her and Penny's kisses and caresses fired her nerves. She brought Penny's hand down to join mine as I used my thumb on her clit, and I heard her say \"Rub me Darling, make me come, Penny.\"\n\nPenny obeyed.\n\nI had two fingers in Jill and one in Penny when Jill came. She was clutching at Penny's hair and back, kissing her deeply and wildly and rubbing her breasts against Penny's. Both girls hips were jerking and rocking, and I felt Penny begin to contract around my finger as she held Jill in her arms. Her orgasm was not as intense, but she shook and moaned, and the two kissed like lovers reunited after a month apart. \n\nI gently moved my hands to release them both, and watched as they wrapped their legs around each other. \n\nThey were beautiful. Stunning. Pale skin and honey, slim and curvy, pink and brown. Both lost in post orgasmic haze. \n\nI was touched by it, and a little frustrated. I decided to remove my trousers but keep my underpants on so as not to freak Penny too much, and I climbed onto the bed behind Jill. \n\nI spooned her, and nuzzled her neck. Her hand came round between us to grasp my cock, and she had to fiddle for a moment to get her hand down my waistband. I pressed against her, my hips moving in a rhythm of their own. \n\nJill matched my movements, and I began to get quite heated. I was reaching round her to hold her breasts, and I could feel Penny's against my hands as well.  Over Jill's shoulder Penny's face was peaceful and sated, she had her eyes closed and head back, hair wild about her head, face gently flushed. As I watched she rolled onto her back, exposing her pointed breasts and matted bush. There was room for Jill to roll onto her back beside her, if I made a tricky manoeuvre holding myself on one knee and one hand. Then I could move between her legs, and she opened her thighs and arms to embrace me. \n\n\"Hi there beautiful woman, how are you doing?\" I said\n\n\"Doing good, handsome man. But I want you.\" she hoarsely whispered. \n\n\"Now?\"\n\n\"Now and always.\" she smiled, and we kissed and my cock grew harder. She opened her legs more, and lifted them, so I pressed on her wet and open sex. At her moan Penny opened her eyes and when she saw what we were doing she grinned. \n\n\"Oh, Sean, no trousers?\" she said coquettishly. \n\n\"No pants either if you'll give me a hand.\" said Jill, and she pulled at the top of my knickers. \n\n\"You sure?\" asked Penny, as she got to her knees beside me. \n\n\"Yes Darling. I've done this before.\" said Jill. I raised myself to let Penny pull them down below my knees, then lowered myself on my knees to lift my feet. As I did so Jill caught my cock, and began to wank me.  I longed to take her right then, just sink into her pussy, but I knew Penny would freak.  As it was she was pretty surprised. \n\n\"Oh my goodness!\" Penny cried. \"Jill, Oh my!\"\n\nJill laughed, and said, \"Pretty isn't he?\"\n\nPenny was kneeling with her hand covering her mouth. \"Jill, is Sean's... Is he... Jilly?\"\n\nJill held up her hand to Penny and beckoned her. \"Come down here love, it's ok, honey.\"\n\nI had held still, and smiled at Penny as she moved to Jill's side. \"That's it, honey, come here.\" Jill said wrapping her arm round her friend, and stroking her hair and back. \"It's fine, look.\"\n\nShe pushed up on my chest, and I lifted up, so Penny could see. \"Oh.\" was all she said. \n\nJill made another stroke and pulled me toward her, dropping her legs and closing them so I could straddle her. I moved up over her stomach and she pulled me further. My cock was over her breasts, six inches from Penny's face, as Jill slowly pulled my foreskin back. She held me with just one finger and her thumb, so Penny could see. \"Isn't it pretty?\" said Jill\n\nPenny looked dubious. Jill said \"You can touch it if you like.\"\n\nPenny glanced up at me, and then at Jill and then reached out a finger. She touched my shaft gingerly. \"Oh. It's soft.\"\n\n\"Actually it's quite hard, although not fully hard.\" said Jill \"Hold it.  Go on. Put your hand round it. That's it, a bit tighter but not too tight, like this,\" she said, putting her hand over Penny's. \"Now if you move it like this, it is like when Sean put his finger in you, but the the other way round.\"\n\nI gave an appreciative moan, and said \"That's nice, Penny, thank you.\"\n\nJill smiled at me, and winked. Then said \"Ok, can you keep doing that? Alright then I can do this.\" She wriggled further down, and kissed the tip of my cock. Penny was wide eyed, but kept stroking me. \n\nI pulled a pillow to support Jill's head, and lowered myself so it was easier for her to reach me. Jill said \"Thanks Sean, now could you just wank him with two fingers into my mouth please Penny.\"\n\nHearing her say that, and feeling and seeing them do it, was a serious turn on. \n\nJill was making a show of it, and Penny was watching closely as she licked the underside of my glans, and up over the opening, round the top and back down before sucking me in with her whole mouth. I pushed forward, so several inches went into her as she sucked, and Penny's fingers touched Jill's lips. I pulled back, and did it again, finding Penny's quiet exclamations of \"Oh. Oh my!\" an amusing and arousing sound track. \n\n\"Could you pull Sean's foreskin up and just wank the tip  please, honey, I want to lick his shaft and balls.\" Jill said in deep and wicked tones.\n\nPenny almost squeaked \"Okay.\" and watched amazed as Jill slipped under me, licking my shaft up and down then kissing and sucking and licking my balls. \n\n\"Oh, girls, that's good. If you keep that up I'll come.\" I groaned. \n\nJill stopped what she was doing and said \"Do you want to come in my mouth or Penny's hand?\"\n\n\"Your mouth, if you want it\"\n\n\"Hmmn yes please.\" said Jill. \n\nPenny stopped wanking me and looked down at Jill \"You want him to do it in your mouth?\" Her voice dripped with incredulity an horror. \n\n\"Oh Penny honey, you should taste him. It's delicious darling. And his come is lovely. No really, trust me. Here come closer, doesn't he smell nice?\" Jill pulled Penny nearer to my cock, and I lifted up towards her. \"Now Penny, try it. Do what I was doing, you'll see. Just a little kiss.\"\n\nPenny pursed her lips, swallowed her uncertainty, and gave the end of my cock a light peck. \n\n\"Oh you can do better than that!\" said Jill, craning up to lick my balls. \"Give Sean a proper kiss.\"\n\nPenny did as she was told. I made a small whimper of pleasure and she looked up at me, so I smiled to reassure her and said \"Thank you Penny dear, that was nice. Would you do it again?\"\n\nShe did it again, looking up at me, her big brown eyes full of wonder. \"Oh yes, that's lovely.\" I said \"Oh yes, that's nice too, oh, I like that. Can you take a little more in, so your tongue can... Oh yes that's the spot.\" \n\nShe had taken the end in her mouth and was licking the underside of my glans the way Jill had done. Jill was watching her, and said encouragingly \"Good girl Penny, now try sucking it\"\n\nI moaned. The noise made Penny look up again but not stop. I could see her eyes smiling and she moved her hand back and forth, wanking me as she sucked, wanking me into her mouth. I almost came. A stab of near orgasmic muscle twinging pleasure dragged another groan from me and I nearly fell forward. Jill laughed. \"Oh Penny, he likes that!\"\n\n\"Oh, oh, I have to lie down\" I gasped. \n\nPenny released my cock and said \"Are you okay?\"\n\nI gulped air and Jill said \"He's fine honey. It's just like when you are going to come. Your legs get wobbly, yes?  Here darling lie down here.\" She moved from under me, and pulled me back onto my heels, them lowered me on my back. She kissed me, and glanced at Penny \"It's ok, you can suck him again now\" she said. \n\nPenny bent to lift my cock, and put it in her mouth. She responded to the movement of my hips and began wanking me and sucking at the same time, bobbing her head. I reached for Jill's pussy as she kissed me, and played with her nipples. Jill hummed, and dropped her lips to whisper \"Come in her mouth.\"\n\nI groaned, and tried to whisper \"Lick my balls\" but it was loud enough for Penny to hear. As Jill shifted to do it, Penny ran her mouth down my shaft and began lapping at my balls, copying what Jill did earlier. Jill laughed as I writhed and said \"Well done Penny, mind if I join in?\"\n\nWithout waiting for answer she licked me and took me in her mouth, bobbing her head up and down, sucking me, wanking me, pulling my leg wide to let Penny get a better approach to licking me, doing everything to make me come.\n\nIn seconds I was panting and my hips were jerking, Jill pulled her mouth away but kept wanking me hard and fast, and I heard her say \"You want to suck him?  He's going to come in a moment. Suck him Penny, come on.\" \n \nJill's body was in the way so I could not see, but I felt the mouth on my balls stop and a second later hot lips closed on my cock as Jill kept wanking me. A hand closed on my balls, and Jill said \"Come now Sean, come for us, come on, come in her mouth!\"\n\nI had no alternative. \n\nJill kept wanking me, my hips heaved up, Penny sucked and I felt the rush of spunk out of my balls, forcing up through my cock, pulsing out into the mouth that held me, the tongue that swirled around my tip. Seven ass-clenching, ball-twitching jets of come shot through me and my breathing stopped. I was rigid. Arched. My cock thrust deep in Penny's mouth, Jill holding still, squeezing my shaft. \n\nI collapsed. Every muscle relaxed, breathing in gasps. I barely felt them letting go of my cock, and long moments passed before I raised my head to see the girls kissing deeply over me, their long hair brushing my stomach and thighs. \n\nWhen the kiss was over Jill looked in Penny's eyes and said \"Didn't I tell you he was delicious?\"\n\n\"Hmmn. Okay. You were right. But I can't believe I just did that.  And I can't believe I enjoyed it.\" Penny sat back on her heels. She looked around like someone waking up. \"I'm sitting here, stark naked, with a naked man. And a naked girl. Who I've been kissing. Both of them. I'm not sure which should be the more disturbing. Why am I not disturbed by this?  I mean, look at me. I'm naked. I've spent eighteen years wearing clothes my parents approve of. I have kissed four boys, including you, Sean. Three of them in the last three weeks.\"",
        "She was in full flow. Jill motioned me to move, and as Penny talked she manoeuvred her friend around to the head of the bed, and picked the duvet off the floor. I helped, and the two of us got on each side of her and pulled the duvet up.\n\nWe each put an arm round her, and she talked on, \"Three weeks ago I had never let a boy touch me with clothes on. I never thought of kissing a girl. I mean, never. I never thought of kissing a boy like I just did. Really, never. I mean, I had heard about it. Half of me thought it was just a story, and the other half thought it was disgusting. And here I just did it. I just put your thing in my mouth and sucked it. And I liked it. And you, you came. And it wasn't disgusting. And you kissed me afterwards and you think it isn't disgusting either. And Sean, you kissed me, down there. Twice. And I came. And you put your finger inside me. And Jill, you touched me there and I touched you, and Mike did too, a bit, and you and Mike and Sean have sucked my nipples and, and I sucked yours. And I enjoyed it. All of it. You know I wanted Mike to take my knickers off. I couldn't say why, I just wanted to be naked, bare down there. I wanted a boy to touch me there. I wanted a boy to see me, there.\" \n\nShe looked at Jill \"But that was only after he had put his hand there. Before that I never wanted one even to touch me. And I didn't want them to see me. I've seen the other girls in the shower. All pink, and mine is all brown and dark. Like my nipples.  It was only after he said, and you said, that they were nice that I thought I wanted someone to see me there, and see if it was alright.\"\n\n\"But you are beautiful darling, all over!\" said Jill. \n\n\"And delicious too.\" I added\n\nPenny blushed, but said \"And that's another thing. Kissing me there. You, kissed me there. And that was lovely. And you put a finger in me. And it was nice. Lovely, wonderful. But, but I don't know that I should like it.\"\n\nJill squeezed her shoulder. \"I understand darling. Kissing boys and even letting them play with your nipples is one thing, but when it comes to those bits... It gets serious. You're worried about being a virgin, or not. Being what the girls at school call a slut.\"\n\n\"Uh-huh. I mean, am I. Am I still a virgin?\" Penny sounded scared. \n\nJill squeezed again. \"Well, I think it only counts if a boy puts his cock in your pussy.\"\n\nPenny sucked in a deep breath. \"Oh. Yes.\"\n\n\"But I'm not sure that you should be worried about all that nonsense anyway. It's not what you do, it's who you do it with and why and how. Girls who don't even go all the way get known as sluts because they go with lots of boys. They'll do it with anyone. They do it at parties infront of people, or at least they make it obvious what they are going upstairs with a boy for.  You aren't like that. You are like me. Okay, we are both horny, we both love sex, we like being naked, kissing, having our pussys kissed and fingers inside us, but that is all natural, and fun. We don't sleep around, we don't use sex to manipulate boys. We don't hurt anyone. We do it in private with people we love.  We aren't sluts. Well I don't think we are and I don't think anyone else thinks we are.  No-one said anything bad about you and Mike,  Have you heard anyone saying anything about me and Sean?\"\n\n\"No. Nothing bad. All the girls are jealous of course, but no one thinks you are bad at all.\"\n\n\"And you don't think I'm a slut do you?\"\n\nPenny was vehement \"No!\"\n\nJill smiled but said \"Even though you have seen us together?  You have seen me suck Sean's cock.\"\n\n\"Yes, but...\" Penny protested but fell silent. She thought hard. \"But...\" she started, and went quiet again. Then after a moment more she said \"No. I never thought that, before. And I don't think it now. You love him. You aren't doing it just for fun.  It isn't just lust. You do these things because you love him. And he does those things to you because he loves you.\"\n\n\"So that makes it right?  I think you are right. Sean and I are in love, and love each other, and we want to share each other. And everything we do is right. And that's why you didn't want to do it with Mike.\"\n\nPenny hung her head. \"But I wanted to do it with Sean. And, and we did things Jill. You and me. Things we shouldn't have done. Dirty things.\"\n\nJill puffed up. \"Penny Harty, you and I both had showers this morning. Everything we did was perfectly clean.\"\n\nIt worked. Penny laughed. But she was still troubled. \"You know what I mean. You know what they say about girls who do that sort of thing together  And I shouldn't have done things with Sean, and you shouldn't have let me.\"\n\n\"Why not?  You love me don't you?\" said Jill. \n\nPenny was stopped in her tracks. Jill smiled. \"We have been friends for seven years. I know you better than anyone. You have been with me through everything. If you disappeared tomorrow I would miss you. Forever. I would cry. Lots. I worry about you. And, and now I've kissed you I want to do it again. It's not like how I feel about Sean, but I love you Penny.\"\n\nPenny was touched. \"Oh Jill. Oh I don't know what to do.\"\n\nJill hugged her. \"You love me, yes?\"\n\n\"Yes, yes I suppose I do, but it isn't right for girls to kiss and everything.\"\n\nI joined in. \"Why not?  Girls are nice to kiss. And everything.\"\n\nPenny looked at me. \"Boys are nice to kiss. Would you kiss a boy?\"\n\n\"Maybe. If it was the right boy.\" I shrugged. She was open mouthed. \"Jill and I talked about this. It's not that I fancy any boy, its just that I don't see anything wrong with it if I did. If I was fond of him. That's the point though.  I would have to want to make love with him, not just have sex. Like being with you. You know I am very fond of you, Penny. I care about you. I know it isn't the same as I feel about Jill, but I am more than happy to say I feel great affection for you. That I love you like she does. We love you, Penny, that's why we are happy to be here in bed with you.\"\n\nPenny was still confused. \"But... Oh Sean that is awfully nice of you to say. But ... Oh I don't know. Jill, yes, I do love you, and I have to say I find myself very turned on by you, and I find that really weird, and you Sean, well I have fancied you for ages, and well, you are still very fanciable, and I do like you a lot. I could fall in love with you. But you are Jill's.\"\n\nJill hugged her again. \"So we love you, and you love us, and together we have a very nice time. And we don't think there is anything bad about what we have done. All the same we know other people make those judgements, so we don't draw attention to it. We will never tell anyone.\"\n\n\"I won't tell either,\" Penny said. \"But that still isn't the point. Even though we are all good friends and this has been very good fun, isn't it still wrong?\"\n\n\"We don't think so.\" I said. \"We know others think it is, but we don't understand why.\"\n\n\"Look honey, you are over thinking this.\" said Jill. \"People tell us it is wrong, they don't say why. It is all just control. Men mostly, want virgins as brides so they know their kids are theirs. Parents want their kids to marry so they don't get left with single mothers and grandchildren to look after.  Other women want women not to sleep with other men because they are scared they will loose their husbands. Priests don't want anyone to enjoy themselves at all, so they keep giving money and hoping for heaven. It is all control.\"\n\n\"Aren't you afraid Sean will fall for me?\" Penny asked. \n\n\"No more than he fears me falling for you. If he does I can't stop that. If he does then it is because he doesn't love me that much. I'd rather know that. But I don't think he will. No, let me rephrase that. I fully expect he will fall for you, a little more in love every day. But he won't fall out of love with me. And I know that because this last week that we have been so close has changed things for me. When I say I love you I mean it, but I don't mean I love Sean any less.\"\n\n \"And when I say I love Jill, I mean it, and still I can feel love for you. \" I said. \n\n\"But...\" Penny tried to protest. \n\n\"Penny. Look at me.\" said Jill. \"Now honestly tell me, not what anyone else thinks, how did it feel when Sean and I were kissing you, and touching you, and you were kissing us?\"\n\n\"Good. Of course it's good. But...\"\n\n\"No buts. Now you believe in God, yes?  Well why would a God who loves us make us so that things we do with people we love feel good if in fact they were bad?\" Jill asked. \n\n\"Sex is for marriage. Doing it outside marriage may be fun, but that makes it even more sinful.\" Penny hung her head. \n\n\"Say the priests, and parents.\" Jill snorted. \"I won't believe in a God who sets traps like that. Now if people get hurt, that's another thing. If you have promised to each other not to do it with anyone else, and you break the promise, or if you abandon your kids to run off with another guy, that's bad. Or if a girl gets pregnant and the boy leaves her. But what we do doesn't hurt anyone, does it?\"\n\n\"No. Although my parents would go nuts.\"\n\nWe both laughed. \"Yeah, ours too. But we won't tell them.\" I said. \n\n\"You really think they're wrong?\" Penny sounded like she wanted to believe us. \n\nI pulled out the memory trick, dragging in ideas she had come up with herself, arguments I knew she would agree with. \"Your parents were quite old when you were born, weren't they?\"\n\n\"Yes, but what..\"\n\n\"They married late, yes?\" I pressed. \n\n\"Yes.\"\n\n\"Your mum, did she have any boyfriends before your dad?  During the War?\"\n\n\"Yes. She was engaged. He was killed.\"\n\n\"And your father?\"\n\n\"Yes.\" Penny looked down. \"He was married before. She left him. He was away on duty, and she found another man.  They divorced.\"\n\n\"So he definitely wasn't a virgin when he married your mum, and maybe she ... Well wartime romance and all that. Maybe not. But she was in love before, and must have kissed her fianc\u00e9 at least.  But she still loved your father. and they married and had you. In some churches there is no divorce. In some churches your parents aren't married, cannot be married. Now since they had you they definitely had sex at least once. So according to that church they have unmarried sex. Now I don't see any sin in all that.\"\n\n\"Well, no, although they aren't hypocrites. He didn't want the divorce, and it was years after when he met mum.\"\n\n\"Yes Penny, and I'm sure he loved his first wife, and he loves your mother. But being married had nothing to do with it.\" I squeezed her shoulder, and added \"Also, let's be honest, your parents are even more old fashioned than mine - not just because they are older, but he was an army officer, and she's a teacher.\"\n\n\"True.\" She smiled wickedly \"and he is still a good shot, so he had better not find out, or you'll have to run a good zig zag.\"\n\n\"True. But the point is that we don't think what we are doing is wrong, but Penny love, if you don't want to stay I can run you home.  It really is fine. We would like you to stay of course. Love you to stay, love you to stay and make love with us. Because we love you. Both of us.\"\n\nJill chimed in \"Honestly darling, I know how difficult it is. But I know how beautiful it is as well. I'd like you to stay. But if you can't it is ok.  But if you can, then, well. I'll make you a deal. If after the weekend you decide that this was enough, that Sean is out of your system, I will help you get any boy you want. And if it isn't enough, I'll carry on with the sharing plan, until you fall for someone else. As long as Sean agrees. I want you to be happy, whatever you decide.\"\n\n\"I don't want to hurt you two. And I don't want to get hurt. I don't know what to do.\" Penny said nearly in tears. \n\nJill hugged her. She drew her into her arms and brought her head onto her shoulder. I rubbed her back a little, and we both tried to reassure her. Then Jill kissed her shoulder, and then her neck, and Penny's head came up, and she looked at Jill and said \"You love me?\"\n\n\"Yes.\" Jill said, and they kissed. It was soft and sweet, friends and lovers, teenage romance multiplied. Gradually I saw both were getting turned on, the kiss became intense, and when they stopped to breathe both were flushed with passion. \n\n\"Phew.\" Penny breathed deeply. \"Okay. Okay, I think I need Sean to answer a couple of questions now. But thank you darling. Thank you.\" She kissed Jill with a quick peck on the lips and turned to me. She smiled, but then looked serious as she took another deep breath. \n\n\"Okay, Sean. If I stay this weekend and you drop me home tomorrow night, what would you do if I say then that I don't want to do this again. That I don't want to kiss you, or, or, anything else, ever again. That I want a boy of my own, and to be faithful to him. So you could never kiss me again?\"\n\nI answered without hesitation. \"I would respect that, and understand it. And I would cherish the memory of the kisses we had shared, but it wouldn't change my friendship for you.\"\n\nPenny followed up instantly. \"What if I said that I needed not to see you. I have a crush on you. I know it. If I am to find another boy and fall in love and be his alone, maybe I shouldn't see you again, even socially, for a while. Months. A year maybe. Maybe forever  How would that be for you?\"\n\nI hesitated this time. Other life memories of a past separation from Penny flooded me. I knew exactly how it would be for me.  \"I can see that might be one way to go. And if you felt that it was the right way, the only way, then I would try to help you to do that. But I have to say I am sure it would be hard for me. I would miss you. I would wonder how you were. I would wish I could see you, just to know you were alright, and I would think of you often.  And I would be happy to see you again even years later, and I would always be here to help you if you needed me.\"\n\nPenny's eyes were shining, \"Oh Sean. That's lovely.\"\n\n\"Actually, that's love, darling,\" said Jill and she smiled at me, and touched my face. \n\nPenny pulled her shoulders back, a gesture of resolution that I recognised. I knew she had made her mind up to stay, and my heart lifted. The fact that her movement also exposed one nipple from beneath the duvet also helped. \n\n\"Okay. One last thing. I have decided to stay today, and, and I want to make love with both of you again. But I need to know something. When Jill kissed me I got, well, a bit hot and bothered. Now it was very nice. And I liked it. And I'm beginning to think that I don't care what the girls in school say about girls who do that together. But I am still a bit worried about it, because it is a bit, a bit, queer. So I want to try something. Jill would you mind if Sean, by himself, played with me?  So I know it is not you that is turning me on?  So I know it is not that I'm a lezzie?\"\n\nJill laughed. \"Neither of us are lesbians darling, we both enjoy boys too much. You had a lovely time with Mike, and you fancy Sean, you aren't a lez.\"\n\n\"But, well, I broke with Mike because, well because I wasn't sure it was him that made me come. I didn't think he loved me. He didn't make me feel loved, and I didn't feel able to be with him and so vulnerable and, naked, with him. It was because you were there, looking after me. And looking at me. And I could look at you, and Sean. It was hearing and seeing you that made me come. And just there now, well if Sean hadn't arrived, I would have come with you alone. I did, I think. Now if that is the way it is, if that's what I am, well, I suppose that's what I have to be. But I want to know. I know it's a lot to ask, and I think you guys should talk about it, and I really have to go to the loo, so you can call me when you have thought about it. And if you don't want to, well that's ok. I'll stay with you both. For the weekend.\"\n\nJill said \"Ok honey, but be quick because I need to pee too, and we won't need to talk for long\"\n\n\"Well?\" I said when we had both watched Penny's naked body cross the room and the door closed. \n\n\"No problem.\" said Jill. \"It's half eleven now, I'll make lunch for one o'clock. That should be time enough to convince her.\" \n\n\"You sure?\" I said\n\n\"Darling, we are talking about inviting her to live with us. I don't imagine that you two would not end up alone and horny and naked on a regular basis. And sometimes I would have her alone too. Nearly happened this morning, and I'll tell you all about that later, but now, just one thing. Have fun, but don't take her. Not without me. I want to be there when you take our girlfriend's virginity. I want to hold your cock and put it in her. Okay?\"\n\n\"Of course. But I don't think that will be on the cards anyway. She has a big hangup about being a virgin, she'll not go for that yet.\"\n\nJill looked askance at me. \"Lover, my dear and wonderful lover, you weave your magic and she'll be on her back with her legs open and your cock rubbing her slit in ten minutes tops. Yes, she is protective of her virginity, but two seconds after you popped your cock in her she'd be grabbing your back and bucking her hips like I want to be doing right now. So just remember that.  I want you to take me, this afternoon, and again tonight, and again tomorrow. So she can wait. Ok?\"\n\n\"Ok. No cock in pussy. No problem.\"\n\n\"Ok, now kiss me, and then I'm off to the loo, and I'll send her in.\"\n\nI kissed her and told her I loved her and she slipped away, lithe and pale, smiling and blowing me a kiss at the door. \n\nA minute later the door opened again, and Penny stepped in. \n\nPenny stood by the door, naked, nervous, nipples erect. I was under the duvet, smiling at her. I lifted it back beside me and said \"You'll get cold over there.\"\n\nShe smiled and came over to me. I admired her as she walked towards me, all over tan, dark bush and head of tousled hair, lips full and dark, nipples brown and crinkled, limbs smooth and graceful. She slipped into bed beside me, and said \"Thank you Sean\" and she kissed me. \n\nI tried to take it slow, and spent time exploring her. It was familiar in my memory, and I knew so well how she tasted and smelled and felt in my arms. Jill had been right. I could so easily have slipped into the habit of old and taken her there and then, and she would have let me without knowing what I was doing until it was done. As it was the experience was strange. I had loved and made love with this girl a thousand times, and the last time nearly thirty years ago she was skinnier, twenty five, had multiple piercings, tattoos and her hair was suede short, with a collar round her neck and a butt plug inserted by her mistress that I was not permitted to remove. That image  momentarily overlaid the cuddly eighteen year old bundle of fun I was kissing, and shocked me for a second. I shook those memories away, and let myself discover this Penny. It was in any case a new experience. In my old life she was nineteen, nearly twenty, when I first had her naked in bed. \n\nPenny was warm and soft. She was shorter than Jill and her curves were more emphatic. Her darker colouring, and her different scent, the texture of her skin, all was delightfully different. I ran my hand down her back, and pulled her body to me. She smiled as she kissed me, and murmured \"That didn't take long.\"\n\nI mumbled back \"Just pleased to see you\" as I pushed my hard cock against her thigh.  \n\n\"Would you like me to suck it again?\"\n\n\"Later. If you like. But just now I just want this.\" I said and pulled her harder to me. One hand in her hair, one on her hip, then on her bottom, grasping her cheek and pulling her over on top of me, as I took her mouth with mine. \n\nI released her hair and sought for her breasts, she lifted to let me feel them, and my other hand slid round to her bush. She spread her legs for me, and I sank a finger in her slit, as she reached for my cock and her tongue probed for mine.  \n\nI did everything I could to turn her on, ninety percent of which was just going with the flow, listening to her body, her breathing and her words. We rolled over, me on top, her legs round mine, pussy spread by my cock lying along it, and I rode her gently, touching and kissing all I could reach, complimenting her on her skin, her smell, her taste, her exquisite breasts, the sexy tuft of down in her armpit, the depths of her hazel eyes. ",
        "Her voice was dark and heavy, and I made her speak, made her tell me what she felt, what she wanted, made her use words she had avoided. I drove her to beg me to make her come, to finger her pussy, to suck her tits, to let her suck my cock, lick my balls, come on her tits, come in her mouth, wank me, give me her fingers and tongue in my mouth, to lick her pussy, to let her breathe. \n\nShe came with me on top, and pushed me on my back and rode me frantically afterwards, to a second orgasm. She moved to a sixty nine, and then down to curl around me to concentrate on my pleasure. She wanked me between her breasts, and made me come in her mouth again. \n\nI pulled her to me and and kissed her, and told her truthfully that she was really rather good at that. She laughed and said she had a good teacher. I rolled her on her back again and after quickly ravishing her breasts I once more licked her pussy and fingered her. She came, for the fifth time that morning, and lay in a tangled heap of perspiration and the rumpled under-sheet. I curled around her, and said \"How are you doing, my lovely?\"\n\n\"Very well, my love.\" She murmured and snuggled to me. \n\nJill knocked the door a while later. She had her dressing gown, a tray and a smile. Penny sat up, hair everywhere, and lazily smiled back, and reached for her friend. Jill put the tray on a stool beside the dressing table and went to her. \"Hey honey, are you alright?\"\n\nPenny hugged her, and kissed her and said \"I'm more than alright. And I'm not totally a lezzie. And I think I love both of you. And that's complicated but I don't care. I'm happy. Thank you, thank you so much.  But I think I might have broken Sean.\"\n\n\"Feed me...\" I croaked feebly \n\nWe made the bed and ate the sandwiches and drank the juice and shared the fruit Jill brought, and Penny talked more about her fears and hopes and we shared our thoughts. We talked for hours, coffees were drunk, secrets shared. \n\nPenny talked about what happened that morning before I arrived. The girls had talked last night about what we had done, and what they wanted to do. They decided that they would have showers, dry their hair, do their make- up and get dressed in skirts and stockings and blouses and nothing else. A plan of which I heartily approved, but the plan went awry. \n\nThey had got as far as the make-up table when Jill went to put lipstick on Penny, and ended up kissing her instead. They were just in dressing gowns, and as Penny put it \"Things got out of hand.\"\n\nThey had been nude, kissing, getting all worked up, when the bell rang, and Jill came down to greet me. Jill shrugged. \"Well you've been nude in bed with her. How could I resist?\"\n\n\"Hey, I'm not complaining. You two are beautiful together.\" I said \u201cAnd you know you never need to apologise and you certainly don't need my permission to make love with Penny.\u201d\n\nJill kissed me, and Penny said \u201cOh that's sweet.  Its just what she said.\u201d\n\nI asked her what she meant and Penny added \"When I went to the bathroom earlier, and you two were talking. Jill came to me and said it was ok; and I said 'I'm sorry I know it is a lot to ask' and she said 'Someone I love never needs to apologise for wanting to make love to someone I love, and you Penny dear, never need my permission and nor does Sean.' \"\n\nI kissed Jill, and said \"Have I told you recently how wonderful you are?\"\n\n\"No.\"\n\n\"Very. Thank you.\" I turned to Penny. \"So, after all that, honest now, when we made love this morning, just the two of us, did you miss her?  I won't be offended if you say yes.\"\n\n\"And I won't mind if you say no - he is rather good at making me forget everything in the world when he puts his mind and mouth to it.\" said Jill. \n\nPenny said \"Yes and no. I did think of you Jill darling, and that thought did turn me on. But Sean turned me on. Lots. I'm pretty sure I'm not queer, just hooked on you two. No definitely not queer, because I keep thinking of your cock.\"\n\n\"Hmm, intriguing,\" said Jill \"I think that's the first time you have used that word so casually, but more importantly, what are you thinking about?\"\n\nPenny blushed. \"Sucking it. Watching you suck it.\" She dropped her head \"How big it is.  I know that, well I know how babies are made and I can't help wondering how that would fit, when your finger seems to be so big in me.\"\n\nJill nodded \"I understand that. I used to be worried about that too, and worried that it would hurt. But it doesn't. It feels wonderful.  Oh it was a bit uncomfortable for a while, the first time, but Sean was very gentle, and really it was so good I came the first time, and every time.\"\n\nPenny was stunned \"You. You've done that?\"\n\n\"Yes darling. Lots. But not enough.\" Jill smiled. \n\nPenny looked at me and I nodded, she looked back at Jill. \"You never told me.\"\n\nJill took her hand \"I never told anyone. It was special, private, just between us as lovers. It was our shared secret. So you are now the first and only one I've told, because you have joined us, and because I wanted you to know, and because I want to do it again this afternoon, or tonight, or tomorrow, and I don't want you to be shocked.\"\n\n\"But, that means you're not a virgin.\" Penny said with serious tones. \n\n\"Yes Penny. And I don't care. And it doesn't matter.\" Jill said. \n\n\"But now you can't get married. Unless you marry Sean. In fact you have to marry him!\" Penny said.\n\nJill laughed. \"We are in the 1980's darling. If I meet another guy and he falls in love with me he will still want to marry me. And if he didn't because I have made love with Sean, I'd certainly not love him. And I don't have to marry Sean. Although I'd like to.\" She took my hand and squeezed it. \n\nI kissed her hand, and said \"Thank you. Looking forward to it.\"\n\nPenny was flabbergasted once more. \"Are you two engaged?  And you didn't tell me!\"\n\n\"No, we are not engaged.\" said Jill.\n\n\"But we have talked about it.\" I said \"And we agreed that we need to take our time, so I'm not allowed to ask her again until next Valentines day.\"\n\n\"Again?  You asked her already and she said no? And you didn't tell me!\" Penny was almost outraged. \n\n\"Darling, I didn't say 'No'. We talked about it and agreed that right now we would get married, because right now we are quite insanely in love\" said Jill, and I kissed her hand again as she smiled at me. \"And we are both grown up enough to know that we aren't grown up enough to make that wild decision. So we agreed to wait a year and talk about it then. And if our feelings change, then they change, but for now, they haven't.\"\n\n\"You could have told me anyway.\" said Penny, a little petulantly\n\n\"Darling I couldn't. You would have thought I was being daft. Like that girl Fiona, Shauna's friend, how many boyfriends has she had?  Four? And she claims to have been engaged to three of them?  Okay, one got bullied into buying her a cheap ring, but really, it's pathetic.\"\n\n\"I suppose so. Actually, truth be told, and no offence meant, but you have only been going out for what, a month?  Even though I know how good you are together, and how good he is in bed, it does still seem a bit quick.\"\n\nI laughed \"Why thank you Penny, for the compliment. And yes, it has been very fast, and took us by surprise, which is why aren't talking about it to anyone else, except you, and why we aren't making any decisions for a year.\"\n\nJill smiled. \"And as for how good he is in bed, darling, you ain't seen nothin' yet.  We have been holding back, because we didn't want to scare you. But now you know, and I am terribly horny. So would you mind if we didn't hold back next time?\"\n\n\u201cYou mean, do that?  Let him do that to you? Now?\u201d said Penny, a little dubiously.\n\n\u201cPenny dear, I don't 'let him do it to me.' We do it together. It is something I do, I take him inside me, I hold him, I, well, I love him. And I love doing it.  As for 'Now', well actually, that would be nice, if Sean has recovered.  I spent an hour and a half not in this bed  this morning, and discovered something interesting.  You two could be heard from every room in the house. Now this is all good to know, because it means if I ever have one or both of you in the house with my parents about I know that even if they are watching a movie we still can't make any noise. However, it also made me extremely horny, and I'm still horny.  So yes, now would be nice.\u201d\n\nPenny said, \u201cOh Jill, I've been so selfish!\u201d and reached out to touch her arm.  \n\nJill extended her hand and brought her into an embrace, saying \u201cNo, no, dear, I didn't mean it to sound like that. It was just that I was imagining all the things you were doing, and well, you can imagine how that felt.\u201d\n\n\u201cStill, it was selfish, even if I thought I needed to do it, but its ok, I'll take the lunch things away and wash up and leave you two in peace now.\u201d Penny said, still apologetic\n\n\u201cPenelope Miranda Harty, don't you dare!  You are to stay right here and make love to me, since you got me all horny! I don't just want Sean to jump on me, I want you both to share me, and to share you both.\u201d Jill said, sternly at first, then gentling. \u201cI want to kiss you darling Penny when I come.\u201d\n\nPenny was suddenly blushing, suddenly turned on.  She said \u201cOh!\u201d and then joined to Jill's lips and the two fell back on the bed in an instantly passionate moment.  The kiss, and the embrace, a full body hug with legs entwined, went on for half a minute, and Jill was breathless when she broke it.  \n\nPenny said \u201cOh Jill. I want to make love to you.  And I want to see you with Sean. Can I really stay here?\u201d\n\n\u201cOf course darling.\u201d said Jill\n\n\u201cActually, I was thinking we shouldn't stay here.\u201d I said, and both girls looked up at me in confused shock. \u201cThis bed really isn't big enough. Isn't there a double in the spare room?\u201d\n\nJill laughed.  \u201cOh, yes, but it needs made up.\u201d \n\nIn moments the three of us had raided the hot-press, and turned down the bed, but then it turned out that all of us needed the toilet, and really we should take the opportunity to wash the relevant bits, which in Penny's case, after the sweat inducing session earlier, was really everywhere.  So we bunged her into the shower cubicle while I went to the loo and Jill got towels.  And then inevitably we all ended up in the shower with her.\n\nIt was crowded, soapy, slippery, squirmy, very good fun. Good cleaning fun.  Jill made sure Penny washed my cock and balls, although she soaped my bottom and spent a little time on my ass herself.  I washed Jill's pussy and ass, returning the compliment of rubbing a slippery finger over her opening, and she squirmed nicely.  Jill did the same to Penny, who made a small sound of surprise, and Jill grinned, saying \u201cGot to be clean all over, dear.\u201d  I got to soap up both girls breasts, and got them to stand back to back so I could feel them both up and slip my cock between their soapy bottoms.  But we all knew that there was another agenda, and that the bed awaited us.\n\nBack in the spare bedroom with loads of towels, we finished drying each other off, and Jill dived under the duvet when Penny pronounced her finished. \n\nI was kneeling at Penny's feet, behind her, drying her calves and running a towel up between her thighs. I kissed her brown left buttock, and turned her to kiss the other cheek. She squealed delightfully, as my fingers brushed between her thighs and through her curls. \n\nI ran my other hand up her front, grasping her breast and squeezing it. Jill was watching us, smiling. I used my hands to push and pull Penny to bend over, her hands on the bed, Jill reaching to kiss her as I spread her legs and pressed my face between her thighs to lick her pussy from behind.   Penny gasped as my finger entered her again. \n\nJill threw back the covers and took Penny's hand, directing to her pussy as she played with Penny's breasts with her other hand and mouth. \nWith her own hand on top of Penny's, Jill pressed her finger down on the fingers below, and pushed them into herself. She made them move, rubbing her girlfriend's hand back and forth over herself, opening herself up, making Penny push two fingers deep, as I was swapping my left index finger for my right thumb. \n\nPenny was tight, even after the several times Jill and I had gently stretched her, but my thumb slid in, and I pressed my hand up into the cleft of her buttocks so my finger lay along it and pushed against her ass. I was watching Jill sucking Penny's right breast, and brought my other hand up to touch her cheek and slip the finger which I had just taken out of Penny into Jill's mouth to flick Penny's nipple as Jill sucked it. \n\nBy now Penny had begun working her hand on Jill's pussy by herself, and so both Jill's hands were free. She moved them to Penny's hips and with my help shifted her over, lifting her leg and bringing her to kneel with one knee on the bed, over Jill's mouth. I pushed her down as I kissed her deeply, and swallowed her sigh as Jill's lips met her clitoris, and her slit was raked by Jill's probing tongue. I brought my hand up and slipped my wet thumb between my lips and Penny's, and into her mouth. Then I lifted Penny's hand and sucked her fingers, the ones that she had put in Jill earlier. \n\n\"Lucky Jill,\" I said as Penny sucked on my thumb \"She gets to taste your pussy directly, you only get it this way. But you could taste her pussy if you like,\" and I moved Penny's fingers to her lips. I kept eye contact with her as she tentatively licked them, and I  said \"Tastes nice, yes?\"\n\nPenny nodded. \"Why don't you try the real thing?\" and I guided her down to Jill's open thighs, and watched her as she took her first taste of Jill's sweet juices straight from her hairy lips.   It was quite something to watch these two in a classic sixty nine, each opening the other up, spreading their lips and hips, licking with full tongues and slender fingers frigging clits and dipping deep. Each sighed and groaned and called each others names in joyous encouragement. I climbed onto the other side of the bed and moved from end to end of the pair, stroking thighs and buttocks and backs and breasts, arms and hands, hair and lips, kissing and fondling both of them. Jill whispered to me \"Make her come first, then take me darling\" so I concentrated on Penny, getting her onto her knees so I could kiss her lips and taste Jill on her mouth, rub her clit as I felt Jill licking it, and squeeze her breast and pinch her nipple. Her cries rose in pitch and volume, and I frigged her fast, sucking at her neck and throat and urging her to come. \n \nShe did as she was told, and I kissed her deeply as I grasped her breasts and Jill pulled hard onto her mouth to lap her pussy as the juices flowed. She fell half senseless to the side, sprawled across the bed, arms and legs spread limply. Jill was rolled over and up on her hands and knees in a second, spinning round and climbing on top of Penny, kissing a nipple on the way past, going for her mouth, sharing the taste of Penny's come with her. She had one knee between Penny's legs, high up against her pussy, and the other spread wide to the side, so her bottom was in the air and her pussy was exposed, pointing right at me. I took the hint, and took her from behind. \n\nShe was so wet and slippery that my cock sank in without any resistance. I was balls deep and gripping her hips to pull her back to me on the first stroke. We both made little noises as I hit her beautiful rounded bottom with my stomach, and she clenched my cock. \n\nWith her lips touching Penny's I heard her say \"Oh god. Oh lover. Oh I love that\" as I took my first three stokes. \n\nPenny replied \"Jill my love, thank you.\" and kissed her deeply. \n\nI smiled, knowing Penny hadn't realised what was happening.  The girls kept kissing and I felt fingers touch my shaft as I slid it back. The touch was withdrawn, and came back again more certainly as I pushed back in. The fingers moved from Jill's flesh entirely to mine, exploring the connection between my shaft and her sheath. The fingers suddenly withdrew again. \n\n\"Oh.\" said Penny \"That's Sean. Inside you.\"\n\n\"Yes love, but please don't take your hand away, it is lovely too.\" Said Jill throatily. \n\nThe fingers came back but Penny said \"But isn't it in the wrong way?\"\n\nI almost laughed, but Jill said \"No, Penny darling, it's in exactly the right place.\"\n\n\"But I thought you had to be on your back, with him on top?\" said Penny, \n\n\"That's one way, but this way is nice too, especially with your fingers there.\". Said Jill. \"In fact if you rub me a little more I might come very soon darling\"\n\nI like seeing the face of the girl I'm making love to, especially when they come, so I don't often spend so long taking a girl from behind, but this was an exceptional event, and Jill's little round bottom was  an exceptional ass to ride. I held her by both cheeks and pulled them open to let me penetrate her deeply, an also to expose her ass-hole, heightening her sense of naughtiness and vulnerability, which in turn heightened her sense of being loved and cared for, and the freedom of that  ultimate nakedness.  \n\nI could feel Penny rubbing Jill's inner and outer lips, and dragging some of the wetness that my cock was drawing from her to lubricate her clitoris. She began frigging her in double time to my strokes, and Jill's breathing rapidly became fast and shallow and then more restricted and punctuated by moans. Her pussy tightened and I felt her come. I pushed deep into her, feeling her clench and pulse around my shaft and hearing her cry out. She pushed back against me, and her bottom moved up an down in spasms so I began shafting her again, and she arched her back. She pushed up on her arms, and I could see Penny below, one hand on her breasts, the other frigging her again, saying \"Come on, come on Jill, come for us!\"\n\nI love the sound she made, a deep roar, and a series of higher pitched yelps, each simultaneous with the pulsing of her body.  She pushed her self back against me with each yelp, and then with a final groan slumped forward, pulling off me, and falling onto Penny, who hugged her and kissed her and wrapped her legs around her. \n\nI lay down beside them, and Jill kissed Penny and then me. I hugged them both, and kissed Penny as well, and pulled the duvet over us all. \n\nI thought Jill and Penny might need a rest, but quickly found they were happy to carry on kissing each other and me, and then to bring me into their joint embrace. I found myself in the midst of four arms, four legs, four breasts and nipples, four hands that smoothed over my body, stroked my cock and balls and bottom, my nipples and chest, my head and arms. Mouths found my fingers and wrists and the tendons inside my elbows, nipples and navel, knees and shockingly toes. Each kissed my cock, sucked me, licked my balls, kissed my inner thighs.  They pressed their tits to my mouth, my hands, around my cock. They placed my hands on their pussies, their tits their asses.  \n\nI wasn't always sure who was touching me, or who I touched. I'm pretty sure it was Jill who pressed her finger to my ass-hole, and Penny who put her wet fingers in my mouth, although I don't know if the sweet musk on them came from her or Jill. I know it was Jill whose head I held while I slowly shafted her mouth, because Penny was rubbing her nipples across my mouth at the time. And when Jill came up to kiss me she had both hands on my face, so it had to be Penny stroking my cock. \n\nJill drew away from my face while still holding my head and looked into my eyes with smiling face. \"Hey handsome man, how you doin?\"\n\n\"Hi beautiful woman, doing fine. You?\"\n\n\"I want you. Take me again, Sean. Make me your woman.\" Jill breathed to me. \n\nPenny was stroking my cock and holding my balls, and when I drew back the cover I saw that her head was resting on Jill's thigh, and she was lazily licking at the open pussy infront of her. She stopped, and looked up at me, smiling naughtily. \"Sorry to interrupt, Penny darling, but would you mind putting my cock in Jill's pussy?\"",
        "\"Oh, okay.\" said Penny a little wide eyed. \n\nI let her move around and swung my leg over her head, as Jill rolled onto her back. I knelt between her open legs, and looked down on her naked body. It was hard to believe that this slim and soft girl was waiting for me to enter her, that her pretty pink pussy with its fringe of soft brown could open to my cock, and take the hardest thrusts and deepest pushes.  Face of an angel, voice of a lady, body of a Boucher painting, flushed with desire and ready for love \n\nPenny was at her side and Jill stroked her hair as moved forward and Penny took my cock in her hand. \"Thank you Penny, now can you rub it up and down her slit?\" I asked. \n\n\"Oh, Penny, that\u2019s nice.\" Jill crooned as Penny used my cock to open her lips and spread her wetness around. \n\nI saw Penny flash a smile, before returning to look with serious concentration at what she was doing. \n\nI pushed forward a little when she pushed me down to the bottom of Jill's pussy lips, and felt my tip start to enter her. Penny's face was only a few inches away, and she made a little sound of surprise as she saw the way her friend opened up. Jill sighed, and I pushed an inch deeper. \"Oh, thank you Penny.\" said Jill. \n\nPenny watched, fascinated, and Jill opened her legs a little wider. I rested a moment, admiring her, and caught her eye. I smiled and raised an eyebrow, and she nodded and mouthed \"Oh yeah\". She lifted her legs wider, and said \"Penny, pull my pussy lips open.\"\n\nI pulled back as Penny had to shift position to reach, and took a moment to work out what to do. Then I plunged deep into Jill, all the way down until I met Penny's fingers. Both girls emitted noises, Jill a throaty sigh of pleasure, Penny a cheep of surprise. Jill lifted her legs right up, knees on a level with her chest but spread wide, feet straight at the ceiling, and I settled deeper inside her. It was my turn to sigh, and I leaned forward to kiss Jill, letting all my weight focus on her pussy. \n\n\"I missed you.\" she murmured. \n\n\"I love you.  And it's good to be back.\" I said\n\n\"I want to talk to Penny, lover, can you hold off a while? I want her to know what to expect.\" Jill said, her voice dark and soft, full of desire. \n\nI wanted just to revel in her, ravish her, take her wildly, but I understood. \"I'll do my best to resist.\"\n\nPenny was kneeling beside us then, one hand on her mouth, the other forgotten on Jill's thigh, as she stared at our conjoined bodies. Jill called to her, and she answered as if she was somewhere else. \n\n\"Penny love, can you see if Sean lifts up?\" said Jill. \n\n\"Yes. I can see. Oh my goodness. All that was inside you! Oh lord, where does it go?\" Penny sounded curious, almost scared but excited above all. \n\n\"How does it look  if you move between my legs?\" said Jill.  \n\nPenny shifted and I took another couple of strokes, smiling at Jill as the little voice behind us said \"Oh, that's, that's rude!\"\n\n\"What do you mean?\" said Jill, almost laughing. \n\n\"I can see your bottom. You know. Below your pussy. Well not now, Sean's balls are in the way. Oh, and when he pulls up, I can see his! But I can see your pussy too, and his shaft going in. Oh when he pulls up your lips pull up with him, stuck to him!\"\n\n\"Yes, Penny, and it feels lovely.\" said Jill, looking at me. \"I'm going to put my legs down now, it changes the angle. Can you see anything now Penny?\"\n\n\"Not really, just Sean's bum.\" she said, and sounded a little disappointed. I took a few strokes and Penny said \"It is a nice bum though.\" \n\nJill laughed, and said \"Come here and lie beside me, love.\" Penny snuggled down by her, and I felt her knee touch my side, as she wrapped her leg over Jills. I realised her pussy must be against Jills thigh, and the knowledge made my cock twitch. Penny wasn't just observing, she was turned on and joining in. Jill had put her arm beneath Penny, and drew her to kiss her, a friendly kiss with a little added passion. Then she got her to arrange a pillow so both of them had their heads at the same height. I kissed Penny as well. \n\nThen Jill said to me \"Okay Sean, I want you to come. I'll come too, before or after, or at the same time, but don't worry about that. I want you to take me, love. Take me and come in me. I want Penny to see what it is like when you let go.  And Penny darling, I want you to know that I want this. I love this. And we love you, and want you to share this with us. If there is anything you want to do, please do it. And, oh...\" \n\nI silenced her by thrusting into her, and her head snapped back. I dropped on top of her, put my hands under her, pushing up to take her shoulders, feeling Penny's tits against my arm, and pulling Jill down against my upward thrusting hips. \"Oh..\" she said again, and I took her mouth with mine,  and we were lost in each other. \n\nI needed her, I needed to be in her, and touch her and clasp her and grasp her, to plunge into her I've and over again, to taste her mouth and neck and nipples and shoulders and ears and eyes and hair, to grip her breasts and buttocks and thighs and arms, to steal her breath with my tongue. I made her cry out, and I grunted my desire and my love and my rough reverence for her. I pounded her body hard, fast deep, long, and she pulled me to her, begging me and thanking me, and writhing beneath me. I felt her thighs and breasts rubbing against me, her hands on my back, gripping my buttocks, digging into my hair and gripping my waist.  And all the time beside us was Penny, wide eyed, and silent. \n\nThen Jill started to come. I had done as she asked, taking my pleasure, timing and pacing and force dictated by my hips, my balls and burning lungs and thighs, and she had thrust back and joined in my race to come in her, to fill her with myself, my essence, my seed. She was a willing vessel, desirous of me, wanting my come, and driven to climax by the relentless cock that drove into her with love and lust and wanton abandon. \n\nAs she was about to come she looked at me and then Penny in wild eyed joy and said \"I'm coming\"\n\nI grunted \"Kiss her\" at both girls equally, and fell to sucking hard on Jill's breast as she bucked her hips up to me. \n\nBeside my face was Penny's brown nipple, and I turned to suck it as well, causing her to cry out in surprise, I moved up and kissed her shocked face, and turned to Jill who was starting to come down from her organic high, and I growled as I crushed her lips and began to speed up my hips. \n\nI locked my hands on her shoulders, and arched up, driving fast and hard, forcing gasps from her body with every stroke, sucking huge breaths and pushing the pressure down through my body into my balls as they slapped against Jill's ass. Faster, harder, her slick wet pussy making noises, our sweat soaked flesh slapping together, grunting and grimacing, and crying out 'Oh Jill, oh god, oh darling, oh I'm going to come in you, oh darling!\" \n\nAfter those few brief moments of climax, my body in tension, the world reduced to my cock and balls and her enveloping pussy, I fell upon her and into her arms and legs and her sweet tits and her open mouth, and I whispered my love, and our kisses went on for a soft eternity, until oxygen starvation threw me off her onto my back and I lay gasping and calling on God. \n\nI held her hand as she lay beside me, and I heard her murmur to Penny. \"You alright Penny dear?  We didn't scare you did we?\"\n\n\"Oh no, that was, it was beautiful.\"\n\nJill said \"Penny darling, would you like a treat? I usually do this, and I really like it, but maybe you would like to suck Sean's cock now.\"\n\n\"Oh. Okay.\" said Penny brightly.\n\nPenny ended up kneeling between us down around our knees, and gave me a wicked flashing smile as she leaned down to kiss my now flaccid cock. \"Oh the poor thing, it's all small and curled up!\" she said, and took the whole of my cock in her mouth. She sucked it and I felt her tongue rasping over it, and then she popped it out and licked down the slightly hardening shaft to my balls. \n\nI reached down and brushed her hair aside so I could see her better, and she looked up at me and winked. It was a wicked look. A wanton look. \"Thank you Penny. That was lovely.\"\n\n\"Mmm, my pleasure. Jill was right it is a tasty treat. I'm amazed, but in one morning I'm convinced, I love the taste of your come.\"\n\nI laughed. I knew she would like it. I knew she would be an enthusiastic cock sucker. But I was also exhausted, so I said \"I'm glad you like it, but that poor thing needs a while to recover. It is going to be an few hours before I can come again. Still, if you liked the taste of my cock now, there is plenty more where it came from. Or came in. Try licking Jill's pussy.\"\n\nPenny looked up at me, a tiny hesitation on her face, as well as desire and knowing naughtiness. She needed a push, permission to be bad. I gave it. \"Go on Penny, lick my come out of her. Lick Jill's pussy clean.\"\n\nJill chimed in with \"Oh, yes please, come on lover, taste our man's come in me.\"\n\nI rolled on my side to get a better view and held Jill's hand as I watched her loving girlfriend dip her tongue in the sweet and salty sticky, slippery, most intimate folds of her body. Jill lifted a leg and hooked her heel behind my knees, and raised the other one wide, giving Penny access to all of her pussy, and more. \"Oh Penny darling, I can feel it running down out of me, catch it before it gets on the bed. Oh yes, oh lower, oh yes lick me there, oh that's lovely. Oh yes, up and down, oh  yes girl you're good at that.\"\n\nJill subsided into a series of sighs and moans, and Penny slowly wound down her activities, eventually sitting up on her heels with a grin, licking her lips theatrically, and saying \"Mmmm,\" with a wicked look. She knew she was being bad, and it felt good. \n\nJill beckoned her to lie between us, and we both lay on our sides, facing each other across Penny's naked body, taking turns to kiss her and thank her and trace a line or curve or two with a finger on her soft skin. Jill wanted to know that Penny was okay about what we had just done, and if she had any questions. \n\nPenny said \"It was lovely to watch. And very exciting. When Sean got close to coming I was amazed at how hard he was pushing into you, I mean he was bouncing his whole body on you. And then when he came, oh, I nearly cried. He was so gentle, you two were so, I don't know how to put it, so together. I was embarrassed, I thought it was so private and intimate I shouldn't look.  No, no it's okay, I didn't feel bad about it, it was just, well just beautiful. It was a privilege to see that. I, I understand now why you would do it.\"\n\n\"I'm glad Penny\" I said \"because I was worried I might have scared you. I know it looks rough, but I'd never hurt Jill, you know.\"\n\n\"Oh I know, and well, yes it was a bit scary. I mean, at first when I was looking at your cock going inside her, I couldn't believe it fitted, and it didn't hurt, but Jill was enjoying it, obviously, and I thought about your finger in me, and I like the way that feels. So I can imagine how it would be.\" \n\nJill smiled an said \"No honey, you can't. It is way better than a finger. You know how it feels when you play with yourself, and put your finger in you?\" \n\n\"No.\" said Penny simply. \"I don't do that.\"\n\nJill boggled. I laughed gently at her expression, and saw Penny blush. \"Sorry darling, I didn't mean to embarrass you, I was laughing at the look on Jill's face.\"\n\n\"You mean you don't put a finger in, or do you mean you don't play with yourself?\" asked Jill. \n\nPenny's blush deepened. \"I only ever, well, played with myself a couple of times using my hand, until about a week ago. When Mike made me come.  I hadn't come before, ever. I nearly did, when I was in the bath and I was rinsing myself with the shower. I used to do that every now and then, because it felt nice, but I knew it was wrong. I mean, I thought then that it was wrong. Only dirty girls would do that.\"\n\n\"But you don't think it is wrong now?\" asked Jill\n\n\"No. Well, not really. You see I got scared when it started to feel too good. I didn't understand. But when Mike made me come, well then I knew what it was. And I was in the bath that night, and I did it, with the shower head.  And then I had a bath a couple of nights later, and I had an idea. I got the mixer taps set so it was warm, and I got in the bath and moved myself under the flow from the tap.\"\n\nJill wriggled. \"Mmm, I'll have to try that. Although it would be difficult in our bath, the tap doesn't stick out very far.\"\n\nPenny said matter of factly \"Nor does mine, but if you lie on your back and scoot up to the end, with your feet up on the wall, it's easy.\"\n\n\"I should like to see that.\" I said. \"No, seriously, that sounds very sexy to watch, you on your back with your legs open and the water splashing down on your pussy. Very sexy.\"\n\nJill giggled. \"You know he could be right, not elegant, but yes, sexy. Especially If you came.  Did you come?\"\n\nPenny nodded. \"Yes. And I've done it twice more since.\"\n\n\"But you have never fingered yourself?\" said Jill. \"I think you should try it now. Slip a finger into yourself.\"\n\n\"Now?\"\n\n\"Right now, Penny. Put your finger in your pussy.\"\n\nPenny reached down and touched her mound. She hesitated, and slid a finger towards the top of her slit, paused at the edge of the valley shaped fold in her flesh, and then pressed on and down. I sat up to get a better view, and helped her move her leg, lifting and bending her knee and splaying her. Her finger lay along the line of her lips, pressing the hair on each side down into her, pushing the outer lips open a little. \n\nJill was still lying beside Penny talking to her, but she took a knee as well, drawing Penny's leg up, saying \"There darling, now you can spread your pussy with the other hand, and get your finger in deeper, right inside.\"\n\nPenny nodded at her, and looked at me. I smiled encouragingly, and watched as she pulled her pussy open with two fingers on her left hand, and let her right index finger run up and down the inner lips as she exposed them. She was glistening, pink, purple and brown, her dark hair and honey toned thighs framing her mouthwatering inner folds. \n\nI saw her penetrate herself, and take a short stroke or two with her finger tip before she pushed further in. She lifted her legs higher an sank the digit in fully. \"How does that feel?\" I asked. \"It looks very pretty.\"\n\n\"Nice.\" said Penny. \"but not as nice as when you do it, or you Jill.\"\n\n\"Exactly,\" said Jill, \"although it is nice. Having Sean's finger, or mine, in you is different. Having something else in you is different again. And I think a tongue is really different. Yes?\"\n\n\"Yes,\" said Penny, as she pulled her finger out, and dropped her legs. \"Tongues are lovely. Not nicer, exactly, I mean sometimes they are, but fingers are just as good.\"\n\nJill said \"Agreed. Well, I think that while they are all wonderful, and I love it when you lick me and finger me, having Sean's cock in me is different again, and the most wonderful of all. Although I didn't say to you to stop fingering yourself. Go on, use your fingers to rub your clit.  Go on Penny, rub your clit. Sean likes to watch girls rub themselves, don't you darling?\"\n\n\"Pretty girls, playing with pretty pussies, are lovely to see. And yours is a very pretty pussy, pretty Penny.\" I said. \"So please, do play with yourself for me.\"\n\nPenny's hand began to move again, finger tip in the top of her slit, pressing her clitoris from above. Jill said \"You should play with your tits as well. If you rub your nipples they crinkle up just like when someone sucks them. It isn't as nice as being sucked, but it like doing it when I rub myself off at night going to sleep.\"\n\n\"Do you do that every night?\" I asked. \n\n\"Not every night. But most nights.\" she said. \n\n\"Hmm,\" I said \"I'll remember that when I'm in bed, I'll think of you like that.\"\n\n\"And maybe wank yourself?\" said Jill, \"We should arrange a time, when we will all be in our homes in bed alone, an all three of us can do it, and think of the others,all doing it as well.\" She shuddered, and said \"But that is getting away from the point. I was telling Penny how wonderful it is to have your cock inside me, and teaching her how to wank herself, so don't interrupt. Now Penny, try rubbing two fingers up and down your slit, one on each side between the inner and outer lips. You know what I mean?\". \n\n\"Oh, yes, oh that's nice!\"\n\n\"Good. When Sean's cock pulls out it draws my inner lips up with it, and then he pushes down and they are pressed all round. But the best bit about it is that I feel naked. More naked than ever. You can feel it a bit now, he's looking at your pussy, looking at your open legs and your naked tits and you're showing yourself to him, but when he's inside you, then you are more open, more with him, more his than ever. Utterly naked, not even air between you, exposed to him, and he is in you, not just his cock, but him, Sean, all of him, opening you, possessing you, taking you, all you can give him of you, and he gives you all of him. Can you imagine that? Think about that while you stroke yourself, Penny,\"\n\n\"And vary the stroke, faster or slower, try faster, nice yes? Oh now your getting there. Ok now we've got the heart rate up, go slow. Slower. Slower. Leave a pause between. Try a pause then a fast stroke and then stop. Again. Now can you put your other hand down under your bottom, and reach a finger up to touch the lower part of your pussy?  Yes? Don't put it in yet. Try this, make your finger go round and round the opening, not in it. And do the same on your clitoris with the other hand.\"\n\nPenny had to lift herself up on her feet, legs spread, to do as she was told, and I had a wonderful view of her opened up pussy being stretched and pulled in opposing directions by her hands. Her breathing was restricted by her posture, and she began to pant. She gave that little \"Oh\" sound that marked the transition from aroused to orgasmically charged. \n\nJill said \"Do it like his tongue, opening you up and getting you wet and slick for his cock to go in. Now rub up and down with those fingers, and the other hand, like you rubbed my pussy with Sean's cock, that's it. Now Penny, when you want, put your finger in your pussy. You might get two in, but keep rubbing your clit.\"\n\nPenny went for it, dropping her bottom down, and pushing her middle and index fingers into herself from below. \n\n\"Imagine Sean's cock honey, shafting you, in and out, all of him inside you, coming in you, coming on your pussy, pounding you deep and hard.\" \n\nI saw Penny pulse her fingers, curling them and flicking them straight inside herself, and her bottom clenched as she forced herself down on them. Her breathing was suddenly punctuated by a series of small cries, and her legs opened and closed. \n\nBefore our eyes, untouched by either of us, the tanned form of the teenage girl became a house of pleasure and release. She came, loudly, tits bouncing, nipples dark and hard, fingers thrust deep in herself, clutching her pussy with both hands, legs jolting, and back arched. \n\nIn the silent aftermath she lay panting with her arms at her sides and legs spread, and I wanted to take her right then. I could have climbed between her thighs and sunk my cock in her, and ravished her body, her mouth, her fabulous breasts, her glorious bush. I was sure that she would not have objected.  Jill was right, this girl was ready for it,  but even after that intensely erotic show my cock had still not recovered, I was semi hard, and could not have done justice to her. \n\nJill kissed her, and said \"You are beautiful Penny. Thank you for showing us that. I've done that for Sean, but I've never seen a girl do it, and now I know why he liked to watch me.\"\n\nI settled down beside her again, and reached an arm over to pull Jill to me. We kissed across her body, and each then kissed her lips, and again wrapped her on our legs and arms.",
        "\"Pretty Penny\" I said \"I will cherish that sight for the rest of my life. Thank you for sharing that with us.\"\n\n\"Oh, Sean, Jill, oh I need to get my breath back!\"\n\nI pulled the duvet up over us all, and snuggled down. Penny rolled on her side, facing Jill, and I spooned her. I think I fell asleep first, and I woke first as well. \n\nIt was dark outside. I was hungry and thirsty and needed the loo, so I slipped out of bed and went to the bathroom. I must have woken Penny, because as I came back out she was\nOn the landing, wearing Jill's dressing gown and making the \"shhh\" gesture. \n\nShe stepped up to me and put her arms round my neck, and lifted her face to kiss me. It was soft and warm and promised more. \"Sean, are you staying tonight?\" she murmured \n\n\"If you want me to. Jill and I planned I would, but we wanted to be sure it was ok with you.\"\n\n\"Please do. Jill's asleep now let's not wake her yet, can you wait here until I get back?\" she said, and turned towards the bathroom. \n\n\"Ok, but be quick, it's cold out here.\"\n\nPenny turned back to me and smiled. In a gesture I knew she would not have considered a day before she slipped the robe back off her shoulders, and off arm, sweeping it round her to hold out to me with the other hand. She was naked, perfect, a confident and stunning goddess, eighteen going on infinite, carnal sex incarnate. \"Take this,\" she said. \n\nI looked her up and down, as I took the gown. \"Later,\" I said \"And I'm looking forward to it.\"\n\nShe giggled and turned on one foot, and wiggled a little as she stepped away. She was lucky not to be ravished on the landing carpet. \n\nI waited, not long, peeping through the half open bedroom door at my sleeping beauty. My fianc\u00e9, as I thought of her. It struck me. I really expected her to be my wife, and already thought of Jill in that way. And I now thought of Penny as my girlfriend. Our girlfriend. Our lover. Not 'Mistress' though. One thing Penny would never be was a mistress. \n\nShe emerged from the bathroom looking radiant. Her hair was brushed, and she had a bounce to her step, which made various parts of her move in intriguing ways. She snuggled against me and said \"It is cold, isn't it? How do we turn the heat on?\"\n\n\"Keep rubbing against me like that and the heat will be turned on pretty soon.\" I said, quickly massaging her goose fleshed bum. \n\nShe hit my arm, not very hard. \"Down boy. I'm cold and starving, no more kerfuffling until I get fed.\"\n\nI said \"Kerfuffling? Good word.\"\n\n\"Chow mein, Spare ribs, Lemon Chicken: better words. Now go get your clothes and go get us a Chinese.\"\n\nI looked at her, and re-assessed my earlier thought, in the light of refreshed memory. Not a Mistress unless hungry. Unfed = bossy. I had forgotten.\n\nWhen I got back the girls were dressed, and they had things ready to eat with, and a glass of wine in their hands. I considered suggesting a game where we has to feed each other, but the way they both fell on the take away bag suggested I could lose a finger if I tried doing some flirtatious feeding. \n\nWe all ate too much, drank just a little too much, and settled together on the sofa to watch some film. I can't remember it. I do remember that I was in the middle with a cuddly sex bomb on each side, both wearing short skirts and partially buttoned blouses, and nothing else. \n\nWe drank two bottles between the three of us, and while I did enjoy a few passing caresses, an the girls brushed their cotton covered nipples against me, it was a relaxed atmosphere. So relaxed that Penny fell asleep. We woke her when the film ended, and took her to bed. I enjoyed helping her out of the skirt, and blouse, stripping her naked and kissing both nipples and her soft bush before drawing the cover over her. Jill got in the middle, I curled up to her. \n\n\"I'm looking forward to waking up with you tomorrow\" I said\n\n\"Hmm, me too, handsome man.\""
    ],
    "authorname": "MVPrimetime",
    "tags": [
        "first time",
        "young lesbian",
        "first blow-job",
        "love triangle",
        "penny",
        "female masturbation",
        "1980s"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/if-i-knew-then-ch-06"
}