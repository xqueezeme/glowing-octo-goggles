{
    "title": "Efrain and Cory Ch. 21",
    "pages": [
        "Author's Note -- Rather than continue with the old name (which I kinda grew to hate), future chapters will be published under the \"Efrain and Cory\" title (as it is called on other sites).\n\nSorry for the confusion (and for the delays)! ~Dayne\n\nChapter 21 -- In Soviet Russia, Iceman Thaws You\n\nI folded my arms over my chest and looked down at the mound of blankets and cushions at my feet -- two heads, one dark brunette and the other fair blond, just barely poking out were the only sign that said mound also contained my roommate and his boyfriend.\n\nTwo of everything had been scattered about -- two pairs of jeans, two t-shirts, two pairs of socks, and, unfortunately, two pairs of underwear. \n\nThose fuckers were sleeping completely fucking naked under there!\n\nI had come home to find my living room in shambles -- seemed that Cory and Efrain had wrecked the damn place in the process of wrecking each other.\n\nThose fuckers had fucked in my fucking living room!\n\nEvery couch had been stripped of its cushions and piled in front of the fireplace, along with what seemed like every blanket and comforter I owned. Efrain's laptop sat nearby, probably to play his little fuck-fest soundtrack. A bottle of lube laid on its side just within arm's reach.\n\nGod, there was a good chance I would have walked in on those fuckers fucking in my fucking living room!\n\nHad I not stopped the mental inventory, I would have stepped right in 400 pounds of well-fucked football player.\n\nWhich I should still do just because.\n\nFucking hell!\n\n\"Good morning, sunshine.\" I looked back down to find Efrain grinning up at me with a sleepy and satisfied leer. \"Just getting home?\"\n\nHe extended his arms over his head, reaching out on either side of my legs, and had himself a long post-wake-up stretch. The mound of covers shifted as he stretched his long legs. Cory mumbled against his chest in protest, then burrowed down into the blankets, until only the very top of his sandy blond hair was visible.\n\n\"So, you got lucky, huh?\" he said. He tucked his arms back under the blankets, wrapping one across Cory's shoulders.\n\n\"More like unlucky, at least from where I'm standing.\"\n\n\"Dude, you were gone. How could I not?\" Efrain shrugged his bare shoulders while he casually ran his fingers through Cory's baby-fine hair. \"Now, back to your nocturnal activities.\"\n\n\"Man, you're nosy.\"\n\n\"Might as well tell him, Indie.\" Cory's slate-blue eyes had peeked out of the blankets long enough to deliver. \"You know Preston's going to give me all the details.\"\n\n\"That's his business.\"\n\n\"And then Cory's going to tell me everything,\" Efrain added. \"Including piercings 24 and 25.\"\n\n\"Good for you,\" I said, and clapped my hands sarcastically.\n\n\"It's the magic of pillow talk.\"\n\n\"Whatever,\" I muttered. I was tired and I needed to get back in bed if I was going to function. I carefully stepped over them. \"You know you're cleaning all this up before you leave.\"\n\n\"Of course,\" he said. I turned my back on them, fully intending to book it before I had to listen to them meowing and growling at each other. Efrain barely wasted time as I heard him quietly murmur something that made Cory giggle in protest.\n\n\"Vato, I don't care how much time we have before we have to be at the locker complex. I still want to be able to walk into the locker complex!\"\n\n~*~*~*~\n\nIf I were to be honest with myself, I'd have to say that I looked delicious.\n\nMy favorite sweater, a silk and cashmere blend v-neck in a blue so dark it might as well be black, and a silvery dress shirt. A pair of skinny jeans that made my ass look damn good. Soft leather loafers. Of course, I couldn't exactly see these in the dark window I happened to be looking in, just my second-best coat (as I was still cleaning all traces of eau de hipster from the other), and a scarf. I wore a coordinating beanie, slouched just so over my hair, with my bangs swept across my forehead. The cold had made my cheeks a little pink, but I thought it added to my appeal.\n\nAll too many students saw nothing wrong with slouching off to class in pajama pants and messy buns, but such sartorial crimes wouldn't work for me. The only concession today was to leave my tie at home.\n\nI adjusted my scarf and smoothed my hair. And then, I realized what I was doing.\n\n\"Motherfucker.\"\n\nI picked up the second coffee cup off the low wall I'd set in on earlier and stalked off down the hall. It wasn't that I had an issue with primping -- I had very few problems with worshiping at the altar of my own vanity -- it was more a problem with who I just happened to be primping for.\n\nThe door to Indie's office was wide open when I walked up. The man himself sat at his desk talking to a befuddled undergrad. I didn't know why, but I kinda liked the a black long-sleeve Dickies work shirt he wore. He had the sleeves rolled up to his elbows with the top three buttons undone, revealing a red t-shirt underneath. It looked good with the faded jeans he had on.\n\n\"Your essay isn't a total waste. I mean, the theory isn't one that I've considered, but it's not without merit. Thanks, Preston. Some more research to substantiate your claims would eliminate the need to pad your word count with drivel. Have you considered...\"\n\nHad the corner of his lip not curled up and his eyes cut briefly to me, I would have missed his acknowledgement of the large Americano I had set down in front of him. As it was, Indie kept up his stream of talk, while the hapless undergrad bobbed his head in the appropriate places. The poor kid looked out of his element.\n\nI set my own cup down before divesting myself of hat, scarf, and coat. I pulled out my phone and pretended to play around with it. Indie's deep voice was distracting. I wasn't really paying attention the content of the conversation, or even the other person participating. I just let it wash over me, sending my mind back, as it had for the past few days, to Friday night.\n\nMy intentions that night had been innocent (well, mostly innocent), but that hadn't stopped him from fucking me into the mattress. My cheeks heated up as I recalled the sound of his labored breathing, the weight and heat of his body on and within me, the way his throaty moans sometimes sounded like half-laughs, as if he couldn't believe what we were up to.\n\nIn less than an hour, he had completely turned my head inside out -- which was pretty par for the course as far as my interactions with Indie went -- then proceeded to thoroughly scramble my brains throughout the night and into the morning. I had had only a few measly hours of sleep before I had to report to the locker rooms before Saturday's game. Meggy had told me that she didn't need to see me walk out of the bar with Indie in tow to know what I had been doing. The bags under my eyes and the satisfied grin slapped across my face spoke volumes. According to her, my entire body -- from head to toe -- screamed that I had been taken for a ride.\n\nI had assumed that he wouldn't be all that good, yet he had an impressive set of skills and an impressive set. Better still, he had even seemed okay with the casual cuddling habit that had sent quite a few one-night stands running. Indie and I had exchanged numbers when I dropped him back home Saturday morning, and we had texted back and forth since then. We hadn't set up a repeat performance just yet, but I was more than game.\n\nI was even willing to beg for it.\n\nIt was odd that I could be so engrossed in my thoughts, yet still hyper-aware of Indie's presence in the room at the same time. I pretended otherwise, but I was alert for any sign that he was done helping the guy sitting in front of his desk. This was the second day in a row that I had used the \"I'm getting coffee; do you want some?\" excuse to come see him during his advisement hours, so I could wait out Mr. Lousy-essay.\n\n\"Look into some of the suggested texts. That should help you locate other resources. And for fuck's sake, stop citing Wikipedia and Google -- those are tools, not research sources.\" When Indie stood, the undergrad followed suit and allowed himself to be led out. \"Think you could have your revision in to me before Thanksgiving break?\"\n\nThe guy nodded his assent and seemed all of two seconds from fainting with gratitude despite getting fuckall for turn-around time. Indie ushered him out, then shut and locked the door behind him. I took a sudden and keen interest in my still blank cellphone screen. He came to my chair and pulled me up. My phone was quickly plucked from my hand and tossed into my now vacant seat. Indie's finger crooked under my chin and I submitted to his mouth. Our tongues traded flavors, his espresso for my latte. I needed cream and sugar in my coffee, but he had a way of making black coffee dangerously tempting. His eyes had already ruined me for anything but dark chocolate, and I was pretty sure his lips could break me of my fancy coffee addiction.\n\nIt didn't take long for his tongue and roving hands to make my legs forget that they had bones in them. May have also been that any sort of stiffness I possessed had taken up temporary residence in my groin. Too soon, however, he pulled back. Indie grabbed my hand and I tottered behind him on wobbly legs as he pulled me back behind his desk. He sat back in his chair, and I figured he wanted me in his lap again. Instead, he patted the desk blotter. I hopped up and about passed out when he pulled my knees apart and scooted up between them.\n\n\"What...what are you...\"\n\n\"What am I doing?\" He had wrapped his arms around my hips and nuzzled into my lap by the time I managed to stammer out those few words. Now, he was untucking the back of my shirt and slipping his hands underneath to tickle over my lower back. I sat up ramrod straight as my nipples pebbled under my clothes. \"I'm taking a nap. What did you think I was doing?\"\n\nTrying to kill me.\n\nHe nuzzled my lap again and I quivered.\n\n\"So,\" he said when I hadn't answered. \"Tell me more about the white elephant party.\"\n\n\"White elephant party?\" With his head relaxing in my lap and his fingertips stroking my skin, my thought processes weren't quite up for anything more complicated than begging to get bent over his desk and fucked.\n\nHe pointed to the stuff I'd been leaving in his office. For some reason, it seemed like some of the things he had on the shelf, like Marshmallow, had made its way back to the desk. \n\n\"Don't get me wrong,\" he said. \"It was fun, but some things were just confusing.\"\n\n\"I knew you were simple, so I went for simple messages,\" I explained. At least this conversation was distracting me from the tantalizing circles he was drawing along my spine. \"'You're a cold bastard.' Done.\"\n\n\"Yup, nothing says 'you're a cold bastard' better than Pok\u00e9mon.\"\n\n\"Oh, no. That was 'you're a fucking loser.' Those were the lamest ones I had.\"\n\n\"You still have your Pok\u00e9mon cards? You do realize that's the pot calling the kettle black?\"\n\n\"It was that or let my little brother destroy my fire deck,\" I said, a little more defensively than I meant to.\n\n\"God, you would play with a fire deck.\"\n\n\"God, you would understand what that meant,\" I shot back. Of course, this only prompted him to nip at my erection through my jeans, and then laugh when I yelped.\n\n\"So, the cards came from your collection,\" he said. \"So where'd you get everything else?\"\n\n\"Grandma and Grandpa Finnegan.\"\n\n\"Your grandparents helped you hate stalk me?\"\n\n\"No, Grandpa likes giving gag gifts.\"\n\n\"And Grandma?\"\n\n\"Clueless,\" I said. \"I told her I thought Kit Harrington was hot once -- ONCE! -- and next thing I knew, I had Jon Snow shit all over the place.\"\n\n\"Oh man, that's awful.\"\n\n\"I know, right?\" I said. \"She's bought me like every collector's edition DVD since then.\"\n\n\"Gods forbid,\" he said. I got the distinct impression that he was mocking me now. \"If you left those on my desk, I would feel so insulted, I'd die on the spot.\"\n\n\"Oh, whatever.\"\n\n\"Okay, now the Frozen crap.\"\n\n\"What about it?\"\n\n\"Am I supposed to be Olaf or Marshmallow?\"\n\n\"Neither.\" For some reason, he started making contented noises. It wasn't until I looked down that I realized I was running my fingers through his purple and black hair. It was thick, and surprisingly soft considering how often he had to color treat it. \"You're Elsa.\"\n\n\"The ice queen chick?\"\n\n\"Yep. Figured you'd like to have your minions.\"\n\nHe seemed to be satisfied enough with this explanation, or with my fingers in the hair, that he lapsed into silence. Moments later, he started giggling. It was pretty fucking odd hearing Indie giggle.\n\n\"Indie didn't want to build a snowman with me.\" He looked up at me and the confused expression I was most likely wearing, before breaking down into a fit of laughter.\n\nI didn't think I really wanted to know what that was all about.\n\nIndie, however, spared me from all forms of thinking when he untucked the rest of my shirt and lifted it enough to expose my lower belly. His teeth grazed over my side, followed by his lips and tongue. My stomach fluttered under his ministrations, and I was glad I was unable to think straight as I would have been embarrassed by the sounds coming out of my mouth. He sat up and scooted me off the desk and I started kissing him before he had me settled on his lap.\n\n\"Why haven't you called me over?\" I asked in the spaces between kisses. We ended up making out yesterday, too, but I couldn't figure out why we hadn't met up again.\n\n\"You know, you could have called me over,\" he said. \"You do have my number.\"\n\nFor lack of a better response, I shoved my tongue back down his throat. How exactly do you tell a guy you can't call him to hook up again because every other time you've called to hook up with a guy again, you got turned down because you happened to be a little clingy, without sounding like you could potentially get clingy? I spent the better part of a year sitting on my hands waiting for guys to call because I learned the hard way about calling them myself.\n\nIndie worked his mouth down to my neck and lightly nipped me. He had his hands up the back of my shirt. I started wondering why the hell he was so obsessed with putting his hands up the back of my shirt, but his nails raking over my ribs rudely shoved the thought aside and I was back to whimpering.\n\n\"So, I take it you want a repeat of Friday night?\" he murmured in my ear. His voice made me throb so hard that it felt like I was throbbing all over. I was struggling to put together the sounds necessary to make words, and Indie nibbling at my earlobe wasn't helping.\n\nBut, before I could so much as stammer out a \"yes,\" the door opened.\n\n~*~*~*~\n\nPreston picked up his chopsticks long enough to put a dab of wasabi on a piece of sushi. Then he set them back down and used his fingers to pick up the piece and dip it in soy sauce before bringing it to his mouth.\n\nPreston apparently ate sushi the correct way.\n\nBecause he watched a video on YouTube.\n\nI didn't have the heart to tell him that his efforts were wasted on the \"sushi\" served in the student union. But, as he picked up his chopsticks again to take a bite of pickled ginger to \"cleanse his palate,\" I knew his meticulous way of eating sushi allowed him to avoid talking about Indie.\n\nNot like I was going to give up.\n\n\"Yeah, and then my roommates were all on my ass about being okay with you and Indie,\" I said.\n\n\"Why?\"\n\n\"Why were they on my case?\"\n\n\"No, why is it any of their business?\"\n\n\"That's what I said. But, then they started going on about 'bro code' and how you can't sleep with your bestie's former fling or whatever.\"\n\n\"Does it bother you that I slept with Indie?\" he asked, looking genuinely concerned.\n\n\"Fuck no,\" I said. \"Besides, I don't think bro code has anything on cases where you've also slept with the bestie going after your former fling.\"\n\n\"Yeah, don't suppose there is.\"\n\n\"So, I couldn't help but notice that Indie came home extra late and wearing the same clothes he left in,\" I said. \"How was it?\"\n\n\"You can stop grinning at me, sugar, 'cause I ain't telling you shit.\"\n\n\"But, you're my best friend. You're supposed to tell me everything.\"\n\n\"So you can turn right around and tell your boyfriend?\" he said. \"Indie told me all about that particular conversation.\"\n\n\"Oh. You've talked to him since then,\" I said, a wicked smile slowly stretching across my cheeks.\n\n\"This isn't any of your business.\"\n\n\"Dude, you owe me. If it wasn't for you, my roommates would have no idea about Indie and me,\" I argued. \"Plus, considering the methods you used to drag details about Efrain out of me, I think I'm asking rather nicely.\"\n\nHe sighed. I resisted bouncing up and down and repeating \"tell me, tell me, tell me.\"\n\n\"Fine,\" he said. \"I slept with Indie. It was fucking amazing. I was almost too sore to make it through half-time. The End.\"\n\n\"But, you've talked with him since then,\" I said.\n\n\"Yeah.\" He looked down at this lunch and blushed. \"I went to his office a couple times.\"\n\n\"Anything fun happen?\"\n\n\"We made out a little,\" he said. \"Mike walked in on us this morning.\"\n\n\"Oh?\"\n\n\"The guy's a saint. I mean, his girlfriend squealed and jumped all over me yesterday in the coffee shop, then he walks in on me sitting in Indie's lap today, all without a word of complaint.\"\n\n\"Huh? Why was Laurel all over you?\"\n\nPreston pulled a sweetly innocent face, but the laugh was anything but.\n\n\"Oh, something about someone's ex coming up to her on Friday and demanding to know who the skanky little pretty boy thought he was to run off with his man!\"\n\n\"The chunky guy with the curly hair...\"\n\n\"Jameson,\" he said simply.\n\n\"That guy is Indie's ex?\" \n\n\"Fucking douchebag is what he is,\" Preston said angrily.\n\n\"The ex?\"\n\n\"Yeah.\" He ran his hand through his hair, the added quietly, \"You didn't see how Indie was with him. Almost like he was scared or something. I couldn't leave him alone with the piece of shit.\"\n\n\"If it makes you feel better, Teague and I helped a bouncer throw him out when he harassed Laurel,\" I told him. \"If I'd have known, I wouldn't have been so gentle about it.\"\n\nHe nodded and I moved on to my original target.\n\n\"So, Mike caught you in his lap. Are you and Indie just making out or...\"\n\n\"We kinda have plans to meet up tonight to watch a movie.\" I couldn't help chuckling at how cute he was acting. Yeah, I'd had a thing for Indie, but I was only really interested in fucking him. Somehow, no matter how much Preston protested it, I got the impression that Indie was more than just a quick fuck. I meant to tease Preston some more, but he suddenly seemed intent on changing the subject. \"So, what are your plans for Thanksgiving?\"\n\n\"Well, we have that game on Friday, so I can't exactly go home,\" I said. \"Thought I'd kick it around here with some of the other guys who can't go home.\"\n\n\"You haven't made any plans with anyone?\" he asked, almost looking shocked. \"Not even--\"\n\nPreston cut off as some guy I didn't recognize abruptly plopped down in the seat next to him and hugged him.\n\n\"Oh my God, man,\" he said excitedly. \"You're like my most favorite person ever.\"\n\n\"Do I know you?\"\n\n\"Norman gave me a fucking extension on my paper,\" he said.\n\n\"Wait, what?\" I said.\n\n\"Norman never gives extensions,\" the guy added, the words coming out rapidly. \"You're pretty much screwed if you get that guy for a TA. I don't know what you did to him, but he's been slightly less of an asshole lately. I fucking love you, man.\"\n\nAnd then the guy hugged Preston again. So, Laurel wasn't the only one excited about a certain grad student finally getting some.\n\n\"You saved my ass, man.\"",
        "Preston simply shrugged and went back to eating his sushi.\n\nThe correct way.\n\n~*~*~*~\n\nI was going to keep this casual and cool. No way was I going to scare off yet another guy because I couldn't stop myself from getting clingy. \n\nYep, Preston J. Finnegan was going to keep it cool.\n\nI wasn't even going to dress up. I'd taken my shower after practice, then pulled on the first thing I pulled out of my dresser.\n\nAnd then I pulled it right back off the moment I saw myself in the mirror.\n\nGod, I looked like a slob!\n\nAfter too many wardrobe changes to keep count, I finally settled on the perfect outfit and resumed keeping it casual and cool. \n\nI wore a t-shirt and sweatpants that were both a size too tight, but looked fucking hot. The way the material clung to my body was almost obscene, especially when it came to my ass (which was fucking fabulous -- thanks for asking). I was certain Indie would have no choice but to be absolutely gobsmacked and unable to help falling over himself to worship me.\n\nI scrunched up my sweatpants over my calves, mainly because it seemed to get too hot if they covered my ankles (it didn't hurt that it also made me look cuter), then worked on various assignments so I'd be in the middle of something when Indie came over. Problem was, two hours of coursework was enough to make anyone go crazy. I went back and forth between homework, chores, and jumping at anything that sounded even remotely like Indie knocking on my door, but it only served to make me more antsy.\n\nJust two minutes before my sanity snapped, Indie arrived. My sweatpants kept me nice and warm, but the thin t-shirt did nothing to guard my poor chest from the cold air blowing in behind him. My nipples got hard enough to poke holes through the fabric, but I noticed with a hint of satisfaction that he certainly appreciated the sight. Couldn't have planned that better myself!\n\nI let him follow me in so he could check out my ass.\n\n\"You can get comfortable on the bed. Sorry that I don't have a couch, but it's kinda hard to fit things in here,\" I said. \"Let me get you something to...\"\n\nI trailed off as he pulled my back against his chest. When I looked up, he lowered his mouth to mine. Our height difference made it easy to kiss like this, but it meant that his hard as fuck dick rubbed against my back, nowhere near where I wanted it. I whimpered in frustration, aware that the only thing keeping my dick from tenting my suddenly too-tight sweatpants was a skimpy pair of bikini briefs. I wanted so badly to grind my ass against his hard length, but had to content myself with him rubbing his hands down my chest until his thumbs found my nipples. He chaffed them through my t-shirt and my back arched involuntarily. After a few flicks, one hand continued down to lift up my shirt. Both hands slipped under the thin cotton and found my nips once again. He teased, flicked, pinched, rubbed -- his fingers still cold from the November air -- and I panted and whined for more.\n\nHe mouth worked across my cheek until he pressed a soft kiss by my ear. I could barely process the words he murmured to me, and could only throb in time to his voice.\n\n\"Huh?\"\n\n\"I said, what movie are we watching?\"\n\n\"What?\"\n\n\"Movie.\"\n\n\"Movie?\" I asked, still a little disoriented.\n\n\"Yeah, what movie are we watching?\" The asshole was laughing at me again!\n\n\"Doesn't matter,\" I said. I moved off to my tiny as fuck galley kitchen. I needed a drink if I was to deal with anymore of his teasing. \"Want a beer or something?\"\n\nI'd have to go back through my viewing history to figure out what the hell we watched because I remember precisely dick about it. I do remember sitting between his legs and lying back against his chest while he stroked my arms. At some point, we decided to pull off our pants and pull the blanket over our laps.\n\nWhich led to him nibbling at my neck.\n\nWhich led to me panting and squirming.\n\nWhich led to him raking his fingertips up and down the sensitive skin of my inner thighs.\n\nWhich led to me reaching behind and palming his dick through his boxers.\n\nWhich led to him moaning into my ear.\n\nWhich led to me turning around and straddling his lap.\n\nI pulled my t-shirt over my head and flung it aside before I slanted my mouth across his. His tongue met mine halfway, but I still found myself being pulled into the kiss, painfully aware of the pieces of clothing still separating our bodies. I thrust against him, as if writhing in his lap would make certain bits of fabric disappear.\n\nHe rolled me over onto my back and made his way down, stopping the sweet torture he'd been inflicting on my chest long enough to pull off his shirt. I panted harder the lower his mouth moved, almost to the point of hyperventilating by the time his fingers hooked into my waistband. I forgot how to breathe when his lips closed over my head and I felt the familiar stainless steel ball on the underside of my shaft as his tongue rolled against me. Holding in the keening cries working their way up my throat was a fight I knew I was close to losing the longer he held me between his lips.\n\nBut then he finished pulling off my underwear and started making me crazy. His mouth worked over my balls, sucking them between his lips and giving a couple light tugs. Indie pushed up on my legs and pressed my knees into the mattress. Thus spread open, I felt vulnerable and exposed. His eyes, so dark that they seemed black, watched me intently as he inched even lower. I felt his tongue lap at my ass, swirl around it, and I lost the struggle to keep quiet. With my knees pinned down on either side of my chest, I couldn't thrust against his mouth and was forced to cry and beg for more.\n\nIndie paused long enough to lick his fingers before working them into me and my voice rose higher. He did something with his fingers that made my eyes roll back, and then continued to work his hands this way and that, seeking out all my sweet spots. I was a helpless mess, completely incapable of forming the words needed to beg him to take me. I tried reaching for the nightstand so I could get into my condom stash, but could just barely touch the edge and then he flipped his hand over and scissored his fingers and I forgot all about my mission. Thankfully, I was too out of it to be embarrassed by what I must have looked like as I whimpered and batted feebly at my bedroom furniture.\n\n\"Need something?\" he asked.\n\n\"You,\" I whimpered.\n\n\"Where?\"\n\n\"There.\"\n\n\"Here?\" He arched his eyebrow and shifted his fingers over a sensitive area.\n\n\"Yes!\" I gasped. \"There!\" He shifted in me again and there became the only word I could remember. It poured out of my mouth over and over, interrupted when I finally managed to remember oh God, please. His only response was to lick up -- from perineum to frenulum -- and swallow my dick whole. He got back up on his hands and knees before moving back up my body, shedding his boxers in the process. Indie's crawl was too fucking slow and I ended up yanking him to me so I could kiss him again. His long limbs had no trouble reaching the nightstand to fumble around for a condom and lube, and I all but whined for him to hurry.\n\nHe sat back on his heels and rolled on the condom. He pulled my hips on top of his thighs, dribbled lube along his length where it rested against me. His hips flexed forward and his cock slid along my cleft. I planted my toes on either side of his legs so I could move with him. I lifted my hips higher, until his head rested against my hole, took a deep breath then slowly impaled myself on his dick. My hips moved slowly down his length, taking him deeper, easing him back out, sliding even further down. \n\nDespite the chill in my apartment, my body practically burned by the time my ass came to rest on his thighs once more. I hadn't forgotten how big he was, but his cock still took some getting used to. I was stretched almost painfully, and it took me several breaths to relax. Indie's breath hissed between his teeth as I shifted in his lap with my tight hole clenched around him, but he held himself absolutely still until the aching subsided and I started fucking myself on his cock.\n\n\"Fuck,\" he groaned. His hands came up to rub over my chest and stomach while my hips worked, lifting up to the tip, then plunging back down. \"I don't think I'll ever get tired of watching you.\"\n\nHe leaned back over me, curling his arms underneath. He spread his knees so my ass dropped between his thighs while keeping me trapped. Then he pulled back and thrust forward. I'd been able to control my voice when I controlled our fucking, but I was more than willing to surrender. My arms and legs wrapped tightly around him, pulled him closer. He sped up within me, pushing me even further and I muffled my cries against his shoulder. My nails dug into his back, creating angry red welts that would still be visible the next morning.\n\nHe shifted his weight to one elbow and freed his hand to wrap around my cock. His fingers matched the syncopated rhythms his hips seemed hell-bent on pounding into my ass. Indie pushed me closer to the brink and I just barely had enough presence of mind to grab a pillow and cram it into my face before he shoved me headlong over the edge. I screamed around a mouthful of cotton and down filling as my back arched up. My cum shot between our bodies and the accompanying muscle spasms pulled several moans from him until he himself came a handful of thrusts later.\n\nIndie rested his head on my shoulder while he pulled out of me. We shuddered and panted while our heart rates slowly returned to normal. He held me close, even after he rolled off me, kissing me until the room stopped spinning.\n\n\"Be right back,\" he said, dropping a quick peck on my forehead. He slipped out of bed and into the bathroom, probably to clean off. I heard him open the cabinet where I kept my bath linens and the faucet turn on. When he returned, he brought a warm wet washcloth and a towel. I held out my hand, thanking him for the gesture, but he set about cleaning me up himself. I was even more bewildered when he tucked himself in bed with me and wrapped me up in his arms.\n\nIndie spent the night without me even having to ask.\n\n~*~*~*~ "
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "mild bdsm",
        "gay interracial",
        "comedy",
        "muscle twink",
        "anal",
        "blowjob"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-21"
}