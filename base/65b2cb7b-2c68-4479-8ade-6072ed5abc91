{
    "title": "As I Lay - Dying?",
    "pages": [
        "Apologies to William Faulkner for paraphrasing his title for my tale.\n\n*****\n\nPrologue\n\nI opened my eyes and saw my grandson Matthew standing at the side of the bed.\n\n\"Hi, Grampa! Mom, Grandma, Grampa opened his eyes!\"\n\nMy wife and Matthew's mother jumped up from their chairs and joined Matthew. I'm certain I was smiling; but it was hard to tell what with the drugs in my system. After all, why wouldn't I be smiling; I was awake and looking at a few of my loved ones, it meant I beat the odds, which were just under fifty-fifty coming out of the surgery. Whether the operation was successful in getting the growth out of my brain would be answered as soon as the surgeon came around later. But for now, the higher powers granted me the privilege of seeing my wife and family again. \n\nMy beautiful wife was smiling back at me. \"Welcome back, J.R.\" she said as she bent down to kiss my forehead. (My given name is William, same as my Dad's, so I became 'Billy' or worse, 'Junior', until I convinced my mother to call me J.R., short for 'Junior'. The name stuck and sixty years later, I'm still J.R.)\n\nThe news spread fast and within ten minutes the room was crowded; my oldest daughter stood next to her mom (my ex), my son and twin daughters next to theirs. Everyone looking down on me, most with tears on their cheeks. The hospital usually wouldn't allow so many people in a room; but probably made an exception because my daughter-in-law, Matthew's mom, was a resident here. Even her pull didn't get the two youngest grandchildren past the nurses' station, though. Hopefully, my recovery would last long enough to hold those two girls in my arms at least one more time. \n\nThat afternoon, with everyone except my wife out of the room, the surgeon came in and gave me the news. He thinks he got the entire growth, they'd start chemo and radiation soon, I'd notice some changes in my cognitive, speech and motor skills for a while, but the therapy would help recover most of it. All in all, he was positive that the first hurdle was behind 'us'.\n\nOf course, he didn't have to remind me that the chemo and radiation would be tough and no guarantee of long-term success. Very few with similar tumors ever made it past five years. We had talked about this, all this surgery, therapy and treatments would be expensive with a less than ten percent chance we'd still be together and watching Matthew's grade school graduation four years from now.\n\nSo, the thing I have to ask myself is this - \"Do you feel lucky?\"\n\nDamn right, I do.\n\n*******************************\n\nHow It Started\n\nIt wasn't always like this; this feeling of being lucky, that is. Sure, I spent fifteen years racing motorcycles without a major injury; that's pretty lucky, I guess. I had a decent childhood, growing up just outside of Chicago; I hit a few rough patches in my teens and early twenties. Probably had something to do with my discovery of, and poor choices involving, booze and bad women. Which kind of explains Jane, my first wife. Ever hear the song \"Jackson\" sung by one of Frank Sinatra's daughters, Nancy I think, and by the Cash's? \n\n\"We got caught in a fever - hotter than a pepper sprout.\" Well, that line pretty much describes my first marriage. I was working nights stocking shelves at the local grocery and going to school during the day. Weekends were spent trying to make up for all the drinks I missed during the week. \n\nI was on my third beer when a girl I dated in high school walked in with Jane. Jane just had that look about her, the kind that said she'd fuck your eyes out and you'd go blind with a smile. The ex-girlfriend came over to say 'hi' and introduced me to Jane. Before I finished my fourth beer, Jane was ditching her friend and pulling me out into the parking lot. \n\nWe fucked once in my car, not an easy thing to do in a Corvair; then we headed to my apartment where she gave me head to get it back up so we could do it again. At three in the morning we woke to start all over; but this time she stopped me before I went in. Jane got off the bed, I heard her in the kitchen opening drawers. She walked back with a bottle of olive oil. Me, maybe because I'm still kind of sleepy/groggy, I'm thinking she's going to slick up her tits and I'm going to fuck her bodacious set of ta-ta's. Jane spreads some of the oil on my now hard cock; but instead of laying on her back, she gets on all fours and points her ass at me. The light from the kitchen is coming through the door and I can see her special star just before she sticks her oily finger inside. She pulls her finger out and that star just closes right back up again.\n\n\"Fuck me, J.R.; fuck my ass!\"\n\nWell, I never had my dick in anyone's ass before that night, I didn't know what to expect. \"What the hell,\" I thought to myself as I got on my knees behind her. My cock is pretty decent sized, above average in length and width if you can believe the charts (yes, I measured - admit it - so did you at least once); looking down at that tight star and my cock, I had to wonder if it'd fit. \n\nI needn't have worried; the human body is a wonderous thing. I pressed the tip of my cock to her entrance and pushed. The head popped in and my next push drove further up her canal. The feeling was different; her sphincter grabbed tight, but the oil allowed me to move in and out. I grabbed Jane's hips and started to pump. Jane is moaning now, maybe a little too loud for three in the morning; especially given Jane's outburst just before I came, \"That's it - fuck my ass!\" Obviously loud enough for Charles, my gay neighbor whose bedroom shares a too-thin wall with mine, to hear; Charles gave me a great big wink when I saw him in the hall Sunday.\n\nThat was the beginning of the fever. I finally woke up Saturday around noon to find Jane in the kitchen making coffee and eating a bowl of cereal; she was freshly showered and naked as the day she was born. I knew she had a pretty face and nice body; but seeing her in the daylight without a stitch of clothes made me realize she was world class. \n\nI grabbed a cup of coffee and went to shower. When I came out of the bathroom, Jane was stripping the bed. \"These sheets need to be washed. Do you have a shirt and a pair of gym shorts I can wear?\"\n\nHow did I get so damn lucky to bed a woman as gorgeous as Jane? I'd find out much later, too late, that she was rebounding after her married lover dumped her when he received an ultimatum from his wife. \n\nI let my little head do all my thinking and Jane became my wife. Years later one of my good friends from back then asked me, \"What were you thinking? You two had absolutely nothing in common,\" This wasn't true; Jane and I loved to fuck. With so little free time and such high libidos, nothing else mattered at the time. Wake up, fuck, go to school, go to work, fuck, go to sleep. Repeat. I was twenty-two; who needed anything more?\n\nI should have been paying closer attention. In my defense, I was finishing my final year of school and working at the store. Jane was working in sales at an insurance agency; her paychecks were paying most of our living expenses, which allowed me to cut back from five to three days a week, Monday through Wednesday. We were still fucking like bunnies the other four days, so I had little cause for concern; or so I thought.\n\nOne of the other stockboys (yes, in the seventies, they were still called stockboys) needed to trade days for a long weekend; he asked me the week before if we could trade Wednesday for Thursday; I agreed and promptly forgot all about it. Wednesday, I show up and he's giving me the look, 'what the hell?' before I remember the trade-off. I call the house, leave a message \"I'll be home\" and grab a bottle of wine and some flowers. I get home by seven to an empty house. By seven-thirty I open the wine; by nine, the bottle is empty. By ten, I'm lying on the sofa in a dark room nursing my second Jack Daniels. At ten-fifteen the apartment door opens and Jane walks straight into the bedroom without seeing me and starts the shower. I took the opportunity while she showered to grab her clothes off the bedroom floor. No mistaking the odor of fresh semen inside her panties. \n\nI'm on the bed barely keeping my shit together when Jane walks out of the bathroom drying her hair. Seeing me, she nearly jumps back into the bathroom. \"Fuck, J.R.; you scared the crap out of me!\" As she finishes the sentence, Jane's eyes focus on the pair of panties I'm holding in my hand. Jane is speechless. \n\n\"Go sleep on the sofa tonight. I've had too much to drink tonight and I'm afraid what I might do or say if we start talking about this, because I'm certain we'll be shouting in a minute and then who knows what. Just grab a t-shirt to sleep in or whatever and get out of our bedroom.\" Jane was still standing there. \"NOW!\" I shouted. \n\nI took a blanket off the bed and threw it into the living room. When Jane left the bedroom with a t-shirt in her hand, I closed the door. \n\nI actually fell asleep, probably from exhaustion; but I woke up around six, my head swimming from the alcohol and thoughts of what I'd do now. My pride told me to kick the bitch out and divorce her ass; but my pride would also take a hit if we divorced after only a year of marriage because she's unfaithful. I imagined the chuckles behind my back. Hell of a dilemma! \n\nBy seven I got up, went out to the sofa and shook Jane awake. \"Get up.\" Jane opened her eyes and they looked swollen; she'd obviously been crying.\n\n\"So, who you fucking?\"\n\nJane waited too long before answering; I could see her hesitation, wondering whether to lie. \n\n\"Don't bullshit me! If I find out you're lying to me, it won't be pretty.\"\n\nJane gave in. \"Henry.\"\n\n\"Henry Jacobs; you're fucking your boss?\"\n\n\"Yes.\"\n\n\"What does his wife say about this?\"\n\nJane's eyes widened, the terror evident in my question. Did I intend to tell Henry's wife?\n\n\"She doesn't know. Please don't tell her; he's got kids.\"\n\n\"Are you fucking delusional? You two are screwing behind our backs and you don't want his wife to know? If he doesn't want his wife to know that he's an adulterer, he shouldn't be dipping his wick in my wife's pussy!\" \n\nIt was apparent my words hit somewhere in the logical space of Jane's brain, because she dropped her face in her hands and began weeping. \"I'm sorry J.R., I'm sorry.\"\n\n\"Grab what you need for a few weeks. Find some place to stay for a while. Your sister's or Sally's; I don't care where, just get out of my sight until I can figure out what we do next.\"\n\nObviously, Jane hadn't understood the full extent of my anger, maybe I was too successful in remaining relatively calm and in control; because what she said next could only come from the mouth of a complete idiot.\n\n\"Why should I be the one to leave? This is just as much my apartment as yours.\"\n\nI've never hit a woman and thank goodness I didn't choose this moment to act on my caveman impulses. Jane will never know how close she came to getting smacked at that moment. \n\n\"Tell you what Jane; you stay here, I'll move out. But, my first stop will be to your parents' house so I can drop your cum stained panties off and hand them to your father. Imagine the pride he'll have in his little girl when I tell him you're fucking your married boss.\"\n\nI don't think I could have shocked Jane any more than I did with that statement. She knew her father, she knew how he would react if I carried out my threat.\n\n\"You wouldn't do that; you love my father. Why would you hurt him like that?\"\n\n\"Because you've hurt me beyond reason and I hate everything and everybody right now. Leave today and we keep the reason for our separation between you and me.\" \n\n\"What about Mrs. Jacobs?\"\n\n\"Don't press your luck, Jane. I haven't figured out what I'm going to do about Henry just yet.\" I didn't tell Jane that it was my intention to let ole Henry sweat for a while, then I was going to bust his ass. \n\nJane moved out and lived with her friend, Sally. Sally was single and I'm certain that during the five weeks of our separation Sally reintroduced Jane to the world of being single. The trouble was, Jane never really cared for the single lifestyle. She latched onto me and married me because; one, I think she loved me in her own selfish way, and two, she liked the security of, for once - having a full-time man. Too bad she couldn't keep her legs together and not screw her boss.\n\nMe? I admit I loved Jane and admit I missed having her home. And I really missed the sex. During the five weeks of our separation, I picked up a couple of women. All I can say is there's good pussy and then there's great pussy, then there's Jane - in a league of her own. \n\nWhich brings up something that bothered me back then and bothered me for years after. Jane gave it up to Henry Jacobs, who I thought was by no means any kind of stud. I never shared this with anyone; but the truth is, I probably wouldn't have been so damn pissed off if Jane had fucked somebody like Steve McQueen or Sean Connery (to use two examples of guys who were considered studs back in the seventies). Instead she gives prime pussy to a guy who I consider to be downright plain and ugly. What does that say about me? (I never asked Jane if Henry had a big cock, never wanted to go there.) My pride took a double shot and that's the reason I spent our separation trying to reclaim my sense of manliness by fucking around.\n\nMaybe Jane got sucked in by the whole power thing; he was her boss after all. She never could explain it to me. And since she could never explain it properly; I kept my eyes open after we reconciled; never really trusting her after that.\n\nYes, we reconciled. I knew it then and know it now; at least half the female and most of the male population thinks that's just plain stupid. And except for one great outcome, our daughter, I was stupid. Here's how it happened.\n\nJane shows up five weeks into our separation and asks if we can go to counseling together. She's been missing me and thinks if we try a second time, maybe we can make it work. My little brain lets her in the door and within an hour we're banging away on the couch, in the shower and in the bed.\n\nI woke up the next morning with the sunlight shining through her blonde hair. She opened those big blue eyes and stared into mine. It's then I knew some love still lived in my heart for this woman; despite the hurt she put on me. Could I take her back and make another go of it?\n\nI laid down some ground rules. She quits the insurance agency. No way am I going to let her stay hanging with Henry; no way am I going to let him look me in the eye knowing he fucked my wife. \n\nBy the way; I did make a house call to the Jacob household after Jane quit. This fat, dumpy, plain as matzo cracker woman answers the door. She doesn't let me in, so I stand out on the front porch and give her the news that her husband had an affair (I didn't want to use any foul language with a strange woman) with my wife. You could have knocked me over with a feather with how she reacted to the news. \n\n\"Tell that whore wife of yours to stay away from my Henry. I've seen that slut, the way she dresses. You call yourself a man? Letting your wife out of the house like that?\" With that, Mrs. Jacob slams the door in my face. \n\nI turned around and walked back to my car, shaking my head and thinking to myself, \"Well, that didn't go as expected.\"\n\nWe tried and for the next seven years we did OK. It helped when Jane got pregnant and gave birth to Kristy. And yes, I checked the paternity using the technology available at the time. I even re-checked years later when DNA testing became available; Kristy is my biological daughter. \n\nDuring those seven years I found my niche in the world of finance. Having graduated with a business degree, I started working for one of the big banks downtown. Money was tight for a while, but with each advancement at the bank, more money was coming in. I felt like I was hitting my stride. A good job, a great daughter, enough money for the essentials and then some. The only thing lacking concerned my marriage. \n\nJane and I still had great sex; we ate many of our meals as a family and seemed to get along all right, but we both knew deep down that something was missing. It didn't help that we had very different interests. I spent a few nights a week playing tennis at the club, weekends either playing golf with co-workers or racing at a track in Indiana. Jane spent a couple nights a week at her two book clubs and spent the weekends at a variety of artsy events. \n\nWe also began to diverge on our political views. I think I was always a bit conservative; not over the top John Birch or anything, but a bit \"teach a man to fish and he can feed himself\" kind of thinking (I even spent a few months volunteering on the 'Scoop Jackson for President' campaign). Jane, on the other hand, started leaning farther and farther left of the mainstream/Daley Democrats. We dealt with our differences by not discussing politics in the house; we never raised our voices or had any heated discussions; but it was out there and causing a rift.\n\nEverything came to a head one afternoon. I was in my office when Helen, my administrative assistant, came in. \n\n\"Did you hear about Mr. Harrison?\"\n\n\"No, what about him?\"\n\n\"He's dead. He was walking down the sidewalk, heading to lunch with a client and a bucket fell on his head. A window washer dropped a bucket from way up high on the Marshall Building and it killed Mr. Harrison.\" Helen started to cry; most everyone loved our CEO. I got up from my desk and held Helen until she could get a hold of herself. She looked at me and seemed embarrassed, then walked out the office and down the hall to the lady's room. \n\nI fell back in my chair; stunned by the news. It was so random. How could such a terrible thing kill such a great man? Here's the part that made me search my soul: One hour ago, I had just passed the Marshall Building on my way back from lunch when I spotted Mr. Harrison and another man heading toward me. As we approached, Mr. Harrison recognized me and smiled, while he and the other man continued to walk and talk. I had taken pleasure in the fact the CEO smiled at me. It was probably less than two minutes later that he died walking under the spot I walked by only minutes before. \n\nThe event helped me make up my mind. That evening after dinner I skipped my tennis lesson and sat down with Jane. \n\n\"Jane, last week I got a call from a headhunter. There's a position available for me at a bank in Spokane, Washington. It's a great position and more money. I've decided to accept the position.\"\n\n\"J.R., I don't want to move to Washington.\"\n\n\"Actually, I wasn't asking you to move. This is probably as good a time as any to end this farce.\"\n\nJane looked relieved. \"What about Kristy?\"\n\nI held my breath. \"I'd like custody of Kristy.\"\n\nJane's reaction to my news made it obvious she was already considering a separation. \"My parents are going to be upset if you move out to Washington with their granddaughter. I think they're going to be pissed at me for allowing it.\"\n\n\"I'll make certain you and your parents see Kristy as much as possible. We'll work out liberal visitation. Holidays, summers, whatever.\"\n\nTears began running down Jane's cheeks and those tears triggered my own. We sat at the kitchen table and held hands. Jane spoke first.\n\n\"I'm sorry we couldn't make it happen, J.R. I'm sorry.\"\n\n\"Me too, Jane. You do know I love you. You know I wanted this to work out; but there's no getting past the point we want more than the other is giving. And that's not either of our fault, it just isn't there. I know you feel it too.\"\n\n\"It's going to hurt Kristy. She'll be glad she's going with you; she's Daddy's little girl; but she is going to miss her Mommy.\"\n\nThe sadness was overwhelming and I started to doubt the resolve behind my decision.",
        "\"Do you want to give it another try? I haven't given notice; we could try to make it work.\"\n\nJane looked up at me and smiled. \"Damn it J.R., that's just like you. I know you would try; but do you really want to live like this for the next twelve years until Kristy graduates from high school; then we break her heart anyway? In the meantime, we both are missing what we know is out there.\"\n\nJane and I talked for another hour. She admitted to recently considering a separation to join the Peace Corps; but hesitated because of how it would affect Kristy. Jane may not be the nurturing mother type, but she does love her daughter in her own way and didn't know how to resolve the conflict she was feeling; my news settled it.\n\nI don't want to place too much blame on Jane for the failure of our marriage; but here's another thought I've never shared with anyone, especially Jane - that her adultery all those years ago probably made it difficult, if not impossible, for our marriage to succeed. There was always that little empty spot in the relationship, a little bit of distrust, a little bit of anger, that never fully vanished. Those women I fucked during our separation didn't help because it's true - two wrongs don't make a right.  \n\nI know there are some couples who have gotten past the deceit of adultery, but they probably have more going for them than we did. And I bet those couples always feel at least a small piece of their love was permanently damaged.\n\nI also realized that if I ever married again, I'd like my wife to be my best friend.\n\nKristy did take it hard. I think it was a good thing Jane changed her mind about the Peace Corps. For the first six months after our move to Spokane I would fly with Kristy back to Chicago once a month to visit her mom and the grandparents. The first summer she stayed at each of their homes for at least a week. I spent those weeks missing her and working my butt off in my new position. Jane flew back to Spokane with Kristy, Kristy wanted to show her mom her new house and bedroom.\n\nI was reluctant to allow Jane to bring Kristy to Spokane; but the divorce would be final soon and so far, Jane hadn't put up any road blocks to what was becoming a model for friendly divorces.\n\nI had the guest room fixed up for Jane; she'd be staying with us for two days and three nights. After we sang to Kristy and had her settled down, Jane and I went into the living room to chat. It didn't take Jane long to get to the point.\n\n\"Do you have a girlfriend?\" Jane was smiling as she asked.\n\n\"No; been working too hard and been concentrating on Kristy. It's a bitch being both parents.\"\n\nJane laughed. \"When's the last time you got laid?\"\n\n\"The night before our discussion at the kitchen table; what, six months ago?\"\n\n\"Me, too. Let's fuck, J.R.\"\n\nIn less than a minute we were both naked on my bed and in a sixty-nine. Jane was on top trying to swallow my entire cock, I was nibbling on her clit in between licking those beautiful nether lips. We sucked, then we fucked: missionary, doggy, lap dance, cowgirl; making up for lost time. For the first time in years I came three times in one night; each orgasm better than the last. Completely exhausted, we spoke for the first time since Jane said, \"Let's fuck\" two hours ago. \n\n\"I assumed you'd have all kinds of swinging dicks hanging around you. You still look ten years younger than you are and you're still a babe.\"\n\nJane laughed. \"I got a big scare and it kept my legs crossed. Sally Reynolds is still single and still playing the field. She ended up with some kind of STD that's incurable; some kind of genital herpes virus. It sounds awful. Sally has to take meds just to control the outbreaks. Just hearing about it scared the shit out of me enough to keep me away from sex. I needed this.\"\n\n\"We both did.\"\n\nJane and I fucked once more. We set the alarm for six am, allowing Jane time to get into her own bed before Kristy woke up. For the next two days we played it cool around Kristy so we wouldn't confuse her. No hand holding, kisses or hugs in front of her. But as soon as she went down for the night, Jane and I were back at it. \n\nWhen the alarm went off at six the last morning of Jane's visit, we made love one more time; it would be the last time.\n\n*******************************\n\nWith Jane's return to Chicago, it became apparent how much I missed the emotional and physical aspects of a relationship. For the first time since moving to Spokane, I took a good, hard look around. There were plenty of nice looking woman working at the bank and few restrictions on co-workers dating or being married. \n\nThe rules forbade the dating/married couple to be employed in the same branch or department, one partner could not have any authority over the other, no matter how many levels between the two. The bank realized that in the current environment, many relationships started in the workplace, merely because that's where people spend a majority of their waking hours; so the bank did its best to accommodate; when two co-workers started to date, one of the couple was given a transfer. The policy seemed to work.\n\nThat's why it wasn't a problem when I found myself attracted to one of the branch tellers. Katelyn was a beautiful twenty-four-year old that had the personality to light up a room just by walking into it. She had a sensitivity towards others that I found especially appealing. She loved children, dogs, her family and Jesus; not especially in that order. We'd been dating for a few weeks when I was scheduled to race one weekend in Portland. Katelyn asked if she could join me. She surprised me when she said we could share a room; but requested it have two beds. \n\nI dropped Kristy off with her nanny, Mrs. Hansen, and picked up Katelyn at her apartment. Katelyn spent a few moments looking over my motorcycle strapped down on the pickup's bed. I held the door open as she climbed into the cab; she caught me staring at her long tan legs and blushed. Katelyn was wearing a very pretty sundress that obviously didn't allow for a bra. \n\nThe drive to Portland was relaxed and fun; Katelyn spent the first half hour asking questions about my bike; she'd never ridden on one because her parents were very anti-motorcycle. When I convinced her that very few bikers were members of a criminal motorcycle gangs, she seemed to relax a little. She admitted to withholding our real destination from her parents; telling them we were visiting Portland; but saying nothing about attending a motorcycle race. \n\nFriday night in the hotel room was chaste; some kissing, but nothing more. We both slept in PJ's in our respective beds. Saturday was spent at the track. I did all right; with a third-place finish which got me on the podium. Unfortunately, the race was marred by a bad crash; Kevin Sawyer and Ted Colton got busted up when Ted high sided coming out of a turn. Both had to be taken to the hospital and from what I heard, Ted probably will never race again. The incident really effected Katelyn. She asked me on the way home Sunday how I could possibly take such chances. \n\nIt's hard to explain why dangerous activities appeal to some people. Hobbies such as motorcycle racing, sky diving or rock climbing are important to the individual participant. I think it's in their DNA; some people need the thrill, others are horrified by any danger. Katelyn belonged in the second category. I found out how much when I called her on Tuesday to ask her for another date. Katelyn turned me down; told me she was falling for me; but couldn't allow herself to get involved with a man who took such chances. \n\nI wasn't ready to quit racing, nor was I ready to spend my life with someone who feared my lifestyle. It was early in our relationship and a good time to cut the cord before we went any further down the road. Pity though; she really was a very sweet lady. \n\n*******************************\n\nI was playing in a mixed doubles tennis tournament when I saw the beautiful blonde sitting in the stands. She was watching the match and smiling. I tried not to stare; but failed because the next serve went right past me.\n\n\"Damn it, J.R.! Get your head out of your ass!\" \n\nTess Young, my doubles partner, is the most competitive person I've ever met. She's five foot ten and built like Elle MacPherson, only with arms like Linda Hamilton. She catches the eye of every man she meets and laughs all the way to her bed; which she shares with her girlfriend. Did I mention she's gay?\n\n\"Sorry, Tess.\"\n\nTess looked into the stands and smiled back at me with one of those, \"I know what you're looking at\" smiles.\n\nTess returned the next serve between our two opponents. I rallied and broke their serve to win the set. I looked back into the stands to see the tall blonde stand up clapping.\n\nWe won the second set and the match. After shaking hands with our opponents at the net, Tess whispered in my ear, \"Would you like to be introduced?\" \n\nI looked at Tess and she read my mind. \"No, she's not gay. I work with her and she wants to join the club. I invited her here to show her around. C'mon, I'll introduce you.\"\n\nTess knew my situation; divorced for almost a full year. Although not celibate, I wasn't some pussy-hound trying to bang every woman I dated. After Katelyn, I met a few other nice women; but nothing ever clicked, many were put off by the thought of becoming an instant mother to my six-year-old daughter. One had the gall to suggest I ship Kristy back to her mother so we'd have time to get to know each other. My reply? \"No thanks, you've just told me everything I need to know about you.\"\n\nSo, I was more than willing to let Tess introduce me to this beautiful woman with the smile that lit the court. \n\n\"Denise, this is J.R.; my tennis partner and an all-around good guy. J.R., this is my co-worker and good friend, Denise.\"\n\nI tried to keep my composure. \"Tess tells me you're thinking of joining the club. Do you enjoy tennis?\" Yea, stupid, but it's all I could think to ask at the moment and it was a better opening line than the thought swirling around in my noggin, so I bit my tongue before I said, \"You're beautiful, marry me.\"\n\nDenise ignored the triviality of my question, \"Yes, I love tennis. I played varsity tennis at the U.\"\n\nWell, that explained the great pair of legs and the athletic stature. \n\n\"Since you're thinking of joining the club, would you like to be my guest tomorrow and play a match? Maybe I can convince you to join.\"\n\nDenise agreed to meet me the next afternoon and I made my excuses to leave her with Tess before I made a fool of myself. I gave Tess a call later that evening and found out a bit about Denise. Tess told me Denise was in a marital state of limbo; her husband had abandoned her and their four-year-old son over eight months ago. Denise filed papers to divorce him and contacted the church to have the marriage annulled. It would be a few more months before the divorce papers could be accepted by the court for abandonment. \n\n\"She's a very nice woman, a bit conservative when it comes to her ideas relating to marriage, men, and sex. I've never heard her say a bad word toward anyone, even the dip-shit that left her.\n\n\"She was quite devastated when he walked out; claims she doesn't know why he left. We have lunch together at the office and I really like her. She hasn't been out socially with any man since he left; I thought you'd be a perfect person to help get her out of her shell; start with tennis and maybe ask her out to dinner some time. I know you think she's cute, I saw the look you gave her.\"\n\nDenise and I met the next day and she trounced me in tennis. I barely held my own and managed to win the second set. Then she got serious and beat me 6-2 in the third. The short tennis skirt and the sleeveless top didn't help my concentration. Wow; it was a pleasure just watching her move around the court. She was kind enough to agree to a rematch soon. \n\nThe following week we spent a few minutes chatting immediately after our match before Denise excused herself to go pick up her son from the sitter's. Just as she turned to leave I asked her to have dinner with me that weekend. Denise gave me a smile and accepted. \n\nDinner was great. Denise and I exchanged life histories and current situations; especially the trials and tribulations of raising a child as a single parent. We had a few other dates after that dinner and I finally decided to introduce Kristy to Denise and her son, Mike. \n\nThe two kids got along, Kristy liked Denise, so the romance continued to build. I was in love with Denise by this point and was fairly certain she felt the same about me. We took a slow approach to the physical aspects of our relationship (except for the tennis) over the first two months when Denise surprised me by suggesting an overnight at Coeur d'Alene. We arranged sitters for the kids and I found myself in a hotel room overlooking the lake as the moon rose over the horizon. But the real beauty was standing in front of me with the moonlight behind her. The light shone through the sheer negligee Denise was wearing. \n\nI held her in my arms and kissed her. Denise made me close the curtains even though we were on the tenth floor and there wasn't a chance anyone could see in the room. The lights were all turned off and it was nearly pitch black in the room. Surprisingly, this was probably the first time I made love to a woman where I couldn't see her and it was erotic in its own way. I concentrated on my sense of smell and touch in ways I never had before. \n\nI stripped Denise of the negligee as I kissed her. We parted long enough for me to turn back the covers and I laid her down on the bed. This was another reason why the lack of light in the room was advantageous; when Denise grabbed for the top sheet to cover herself; it was easy to convince her it wasn't needed. Since I couldn't really see her, the cover was unnecessary. \n\nThere was no oral, anal or any other out-of-the-ordinary sex that night. I did pleasure her nipples with my mouth, Denise seemed to enjoy that; I made love to her in the missionary position the first time. Afterwards, we laid next to one another catching our breath. My recovery time was quicker than normal and as we lay with her back to my chest, my cock hardened. I decided to take a chance and raised her leg and slipped my cock between her thighs. She was still slick, slick enough that I was able to enter her from behind. I thought about raising her on her knees; but decided not to press my luck; we made slow movements with our hips until I came a second time. Denise placed her hand on the back of my head as I kissed her neck. We fell asleep that way. \n\nWhen I opened my eyes in the morning, there was enough sunlight coming into the room that I could see again. Denise was still asleep; the covers were over us and I couldn't help but lift them. I laughed silently when I looked at Denise; sometime in the night she got up and put on a nightshirt. The negligee was draped over a chair; I laughed because it was going to take some getting used to such modesty. Jane and I always slept in the nude unless it was freezing outside; even then we'd usually just turn the electric blanket up high. \n\nMy physical relationship with Denise was very restrained; but very loving. We kept it hidden from her parents because Denise was still married in their eyes and they considered any physical relationship as adulterous. Needless to say, they didn't like me. That's why it was no surprise how they reacted when, a month later, Denise's husband returned to town.\n\nBoth her parents and her in-laws were over-joyed at the return of Dillon, the prodigal husband; all four put pressure on Denise to stop the divorce proceedings and try to salvage the marriage. I stopped by her parent's home in an effort to talk some sense into her folks and was greeted at the door by her mother. You could have frozen hell with the look I got from Denise's mother when I asked why they wanted the couple to reconcile. Did they even know where the bastard had been and what he'd been doing? Didn't they care to find out before pushing Denise back together with him?\n\n\"That's none of your business and I'd thank you to leave Denise alone from now on.\" She slammed the door shut.\n\nI was hoping to see Denise alone and couldn't go to her apartment since Dillon moved back in; my best hope would be during the next weekend when we were scheduled to play in a tennis tournament. I shouldn't have been surprised to find out, through the club's scheduler, that Denise had resigned her club membership.\n\nFinally, Tess interceded on my behalf and convinced Denise to call me. Tess informed me that Denise had given her two weeks' notice at work. \n\nDenise did call me that day. She apologized for the way she ended our relationship; telling me she avoided calling me because she didn't know how to explain what was happening. She felt she owed it to her marriage and to their son; she would do her best to forgive Dillon and salvage their marriage. \n\n\"Denise, I think you're making a giant mistake; but I'm going to respect your wishes and leave you alone. You know we love each other and you know we were bound to be the best of friends.\"\n\nI heard Denise sobbing as she whispered, \"I know J.R. and I love you.\" before she hung up the phone. \n\nI was a walking zombie for at least the first week after Denise's phone call. Worse yet was Kristy's reaction when I told her we'd most likely never see Denise and Mike again.\n\n\"But Daddy, you told me you loved Denise and you thought she loved you. You seemed so happy when you two were together. Why can't you get her back?\" I didn't have an answer; all I could do was hold Kristy until she fell asleep in my arms. \n\nThree weeks later I walked out of my favorite watering hole across from the office. I stood outside taking in a breath of fresh air when I was approached by a strange man. \"Hey, aren't you J.R. Douglas?\"\n\nI looked at the guy, trying to figure out if I knew him, when he threw a hard right fist straight into my gut. It knocked the wind out of me and before I caught my breath, he followed with a hard left and smashed my nose. I slumped to my knees and caught a foot to the ribs. I blocked the next kick with crossed forearms, trying to get to my feet to fight back when the bar door opened. Two guys I knew saw what was happening and started to yell. My assailant ran off; I blacked out.\n\nI ended up in the emergency room. A broken nose, three broken ribs, a mild concussion. Because of the concussion I spent the night at the hospital. I was surprised when I woke to find Tess standing next to the bed holding Kristy's hand. Kristy was holding mine.\n\n\"Good morning, J.R.\" \n\n\"Daddy!\" Kristy went to hug me, but was held back by Tess, she leaned over and whispered into Kristy's ear about broken ribs. \n\n\"Hi baby.\" Then I looked up at Tess. \"Why are you here?\" Tess and I were tennis partners, but I couldn't imagine she'd get a call if I was injured. \n\n\"I'm here because I saw Kristy in the waiting room. She was in there with Mrs. Hansen. I sent Mrs. Hansen home; she was dead tired. I told her I'd keep Kristy with me until you were released. The doctor said you can go home this morning if there aren't any complications.\"\n\n\"That doesn't explain why you're at the hospital in the first place.\"\n\n\"I brought Denise and Mike into the emergency room last night. We'll talk about it later.\" Tess motioned toward Kristy with her eyes. I got the hint; but was anxious to learn why both Denise and Mike were in emergency. I figured it couldn't be too serious if Tess brought them in instead of an ambulance. Tess understood my concern and leaned in to my ear. \"They're all right; her folks picked them up. I'll fill you in later.\"\n\nThe doctor and a nurse came in; I noticed how gorgeous the nurse was while she pulled the IV out of my arm. I looked; her nametag read, \"Wendy\". She smiled when she caught me looking. The doctor gave me the OK to go home and within an hour I was being wheeled out the door and into Tess's car for the drive home.",
        "\"The police stopped by while you were asleep last night. Gave me their cards and asked if you would call them this morning.\"\n\nWe pulled into the drive and Tess carried Kristy into the house; she was already fast asleep. I showed Tess Kristy's room and Tess set her down on the bed; I covered my baby with a light blanket. \n\nWe sat at the kitchen table and at last I heard about last night's mayhem.\n\n\"Last night Denise's husband went berserk. He knew the two of you dated; but until yesterday he never knew about the sex. Little Mike said something that set him off. He slapped Denise until she admitted you two slept together. Then he went out looking for you. After he finished with you, he went back and hit Denise a couple more times; Mike stepped in; what a brave little boy. Dillon grabbed him and broke the poor kid's arm. After he left the house, Denise called me and I brought her to the emergency room. You should have heard her; she was so worried about you. \n\nTess got up and poured the coffee she brewed. I sat thinking.\n\n\"Wait, if Denise's husband only heard about the sex last night; how did he find me so fast?\"\n\n\"Don't know; maybe he was already stalking you. We'll know more after the police pick the asshole up. They have an officer stationed in front of Denise's house and there's an all-points bulletin out on him.\"\n\n\"How are Denise and Mike?\"\n\n\"Denise has a swollen lip and black eye; Mike has his arm in a cast; they're both on pain killers. I called her folks' house and her mom hung up on me. Said something about a dyke before she hung up the phone. I don't think either one of us are going to get through to Denise while she's staying at her folks'.\"\n\nThe police came over later that morning; two detectives took my statement and asked if I would be willing to press charges. Their attitude toward me started out cold; but changed over the course of our conversation. At first, they treated me like some pervert who seduced and screwed a married woman, then got my just deserts. After I explained the abandonment, our lengthy courtship and my intention to marry Denise when the divorce was finalized, they treated me differently. \n\nThings got even goofier after that first morning. After the police caught and processed Dillon, it turned out there was an outstanding warrant for his arrest in Montana. Seems the reason he left Denise is he got a seventeen-year-old waitress in Whitehorse pregnant while he was with his buddies on a fishing trip. When she threatened to have him arrested for statutory rape unless he came back and married her, he went out to Montana, convinced her to have the baby aborted, then spent the remaining months being such an asshole that she finally kicked him out and sent him packing back to his wife. \n\nWhen the young girl's parents found out the whole story, they called the cops and the warrant for his arrest followed. Unfortunately, it was a low priority and the Whitehorse PD never followed up until Dillon was arrested in Spokane. Dillon eventually spent six years in a Washington State prison for the three assaults before being extradited to Montana to spend a few more years as a guest of their prison system. \n\nDillon never made it home. Given his propensity for violence, I was tracking just in case he decided to come after me again. I lucked out when Dillon got into an altercation in the Montana prison and ended up getting stabbed to death. \n\nAfter Dillon's arrest for his assault on Denise, Mike and me, I thought about renewing my relationship with Denise; but it never happened. She quickly reverted back to her old ways while living with her parents. They laid it on thick; convincing Denise she sinned by sleeping with me while she was married, that she was under the spell of me and an ungodly lesbian. Her mother screened my one phone call to the house. When I approached Denise outside her house the next day, Denise refused to talk to me. \n\nDillon's parents also blamed Denise for Dillon's criminal temper-tantrum; said it was her fault for being an adulteress; totally ignoring Dillon's eleven months with an underage child in Montana. Both sets of parents convinced Denise to stop the annulment; claiming Mike was a bastard in God's eyes if the marriage was annulled. I talked to a Catholic priest about this; he told me that was BS; but Denise chose to believe her parents.\n\nMany years later I saw Denise at a tennis match between Kristy and Mike's respective college teams. Denise smiled at me, but the smile lacked its previous glow. Kristy spent some time after the match with Mike, they talked and reminisced how close they were to becoming step-siblings. Mike told Kristy that Denise never divorced his father; even during his seven years in two prisons. Neither of them visited him during those years; Denise became a widow when Dillon died, then married the man sitting next to her in the stands; an ex-priest of all things. \n\n*******************************\n\nDo We Make Our Own Luck?\n\nFive or six weeks after being ambushed by Dillon outside the bar, I was mostly recovered. Kristy and I were walking through Riverfront Park in downtown Spokane when I spotted a beautiful woman jogging toward us on the trail. She gave us a look of recognition as she passed, smiled; but didn't slow down. It took me a half a minute to figure it out - Wendy, the nurse who removed my IV. That thought was immediately followed by a second thought; damn, too bad she didn't stop to say hello. Kristy and I continued on the path to the children's playground while I wondered if my love life would ever recover.\n\nI was pushing Kristy on the swing, my mind a half a million miles away, when a voice behind me simply said, \"Hi\".\n\nI turned around to find Wendy standing there. My mind went blank until I got whacked by Kristy's seat on its back swing. Kristy screamed out, \"Daddy!\" and almost fell out of the seat. I recovered fast enough to catch Kristy. Wendy asked, \"Is she all right?\" I nodded \"yes\" before Wendy started laughing. \n\n\"Sorry, I didn't mean to startle you. I suppose the last thing you need is another concussion. How are you doing?\" Wendy held my chin in one hand and turned my head back and forth to examine my nose. \"It looks like it's healing.\"\n\nI took that opportunity to look into her eyes. It's hard to explain and makes little sense; but it's as if the higher powers flipped the switch that day from 'kinda unlucky' to 'very lucky'. For the next three decades things just seemed to go my way; at least until that day in the doctor's office as we reviewed my brain's CT scan. \n\nThat's how we became a couple; me holding Kristy in my arms and Wendy holding my chin giving me her medical opinion on how my nose was healing.\n\nI asked, \"Would you have dinner with me? Any evening you're available.\"\n\nWendy's eyes tracked from my nose to my eyes. \"What about that woman that was hovering over you at the hospital? Won't she be upset or jealous?\"\n\n\"Tess is just a good friend and my doubles tennis partner. We aren't in a relationship.\"\n\n\"I thought maybe she might want to change that status, the way she acted.\"\n\nI smiled, \"That would really upset her girlfriend. Tess is a lesbian.\"\n\nThe girl with the big ears in my arms interrupted. \"Daddy, what's a lesbian?\"\n\nWendy gave me an amused look as if to say, \"How are you going to answer that one, Daddy?\" (Remember - this was the early eighties, things weren't quite as open regarding sexuality as they are today.)\n\nI chickened out. \"Baby, can I talk to Wendy for a minute? I'll answer your question later.\"\n\nI turned to Wendy. \"Now that we have established I'm not in a relationship; can you answer my original question before we get side-tracked again? Can I buy you dinner sometime this week?\"\n\nWe had dinner, followed by more dates. We clicked on many levels. Wendy didn't play tennis; but she was an avid golfer; so more of my free time was spent on the links and less on the courts. Tess bitched a little; although she did it in a way that made it clear she was happy for me. I didn't 'officially' introduce Wendy as my 'girlfriend' to Kristy for a couple months, the poor kid was still reeling from the loss of Denise and Mike. The timing helped; within a week of that first date, Kristy was scheduled to spend two months with her mother and grandparents during summer break. \n\nI had reasons of my own to take time building a relationship with Wendy; more than one nosey 'friend' questioned whether our relationship was a 'rebound'. I heard it enough times and it turned out Wendy's friends and co-workers brought it up to her. We just took everything nice and slow. \n\nI realized something soon after we started dating; it occurred to me how similar Denise and Jane were in appearances. Both were blondes with blue eyes. Both had that wide open, friendly smile that immediately attracted me to them. Both were about five foot nine and large breasted. How had I missed that before? The similarities were made more apparent after comparing those two to Wendy. \n\nWendy is a five-five brunette with brown eyes. She has a slim waist which gives the illusion of more backside than she really has. (She bitched about her 'big butt' until I told her, \"enough!\") Wendy's small bust is a perfect fit on her slim body.\n\nI was pleased with the differences and here's why. I have a friend, David, who after he and his first wife Betty divorced, he dates and eventually marries a woman named Becky who looked very much like Betty. People were too polite to say anything; but I'd watch them at social functions when David introduced Becky to someone who knew his first wife. You could see the confusion on people's faces - like, \"is this a joke?' before they realized it wasn't. Poor Becky; people constantly called her Betty. David and Becky eventually divorced. Turns out Betty and Becky also had similar personalities; the same issues that destroyed the first marriage destroyed the second. \n\nI don't know if some part of my brain tried to recreate my first marriage when I decided Denise was the one. They certainly had different values when it came to sex; but was I only fooling myself regarding the physical attraction? I guess I'll never know. \n\nI talked to Kristy almost every other day during the two months she spent with her mother and grandparents. Jane was dating a high school volleyball coach and Kristy was getting great lessons from him. I silently hoped this wouldn't turn her off to tennis. I needn't have worried, Kristy eventually ended up getting high school varsity letters in tennis and volleyball and chose a college which offered a nice tennis scholarship. \n\nAnother reason for our slow courtship was due to Wendy's work schedule. She lacked seniority at the hospital and worked nights. Nights can do a number on a relationship. \n\nBesides the physical differences, there was another big difference between Wendy and the two previous loves of my life. Both Jane and Denise were happy to go along with my decisions when it came to how we spent our time together. I love going to a movie or a rock 'n roll concert, maybe a good steak restaurant for dinner, and that's usually how my dates went with Jane and Denise. \n\nIt was different with Wendy; she'd go to a movie or rock concert with me, but on our next date she would pick the activity. I couldn't complain because she would pay when it was her turn to pick. And I found myself enjoying live theater, country western dancing and, lord help me, Sushi. \n\nThe biggest surprise was how much I learned to love hiking in the mountains. Being a Midwest city boy, the nearest I came to nature was swatting mosquitos on some Wisconsin lake when we'd cruise up to Lake Geneva for the Fourth of July. \n\nWendy took me to REI and got me a pair of hiking boots and three pair of wool socks. The very next weekend I'm hiking into some Idaho hot springs. We'd only been dating two months and we still hadn't consummated the relationship; so I was stunned when we entered the clearing where the hot springs were. There were probably eight or nine other people there, mostly in their twenties or thirties and half were women - and not one of them had a stitch of clothes on. Wendy dropped her back pack and just stripped right out of her clothes. It was the first time I saw her naked.\n\nShe jumped into one of the pools and called to me, \"C'mon J.R., this feels great.\"\n\nI dropped my pack and shed my clothes, all except my undershorts and sat down in the pool next to Wendy. The girl sitting across from me chose that moment to stand up and sit cross logged on the edge. Really?\n\nI looked at Wendy, she had a stupid grin on her face, I whispered, \"You could have warned me.\"\n\n\"What? And miss the look on your face?\"\n\n\"Very funny.\"\n\n\"Now that you're in the water, get out of those wet pants and let them dry out.\"\n\nI slipped my pants off and, half standing, tried to toss the shorts next to my gear without exposing my hard-on. I was only partially successful.\n\n\"Nice. I kind of had a feeling it was good sized during our slow dances; you've got nothing to be ashamed of.\" \n\n\"I wasn't worried about the size; no lady has ever complained. I'm just the only guy here sporting a woody. How do those guys do it?\"\n\n\"I've been coming here for years, since my college boyfriend took me here. Newcomers usually take a while to get past it. You'll see, in a half hour you'll be used to it.\"\n\n\"I don't know about that. For one thing; this is the first time I've seen you naked, and you've got an incredible body. For another, please forgive me for saying this, but I can't help but notice the woman sitting across from me shooting me the beave.\"\n\n\"The what?\"\n\n\"The beaver. Of course, I don't know if it applies in her case since she doesn't have any hair down there. I've never seen a shaved pussy before.\"\n\n\"Do you like it?\"\n\nI stopped to ask myself before answering Wendy's question, \"Is this a trick question? Like, \"Do these pants make me look fat?\"\" Oh well, I thought, \"might as well stick to the truth\". So, I answered her question.\n\n\"On the one hand, it's kind of erotic; on the other, it looks a little pre-puberty, which might be perverted; on the third hand, it eliminates that awkward moment when a pubic hair ends up in your throat - just at the wrong moment.\"\n\nWendy laughed. \"I like how you think, J.R. This could be the start of a long relationship. Maybe I'll shave down there when we get back to civilization.\"\n\n\"Now you're just teasing me and you've gone way too far. Up until twenty minutes ago I hadn't seen you naked. Now you're promising to let me kiss you in the most intimate spot on that beautiful body. I'm never going to be able to get out of this pool if you keep that up.\"\n\nI eventually was able to get out without embarrassing myself. Wendy and I hiked another half mile and found a nice spot to set up the tent near the edge of a short cliff with an excellent view of the valley below. This being my first night sleeping in the woods, I followed Wendy's instructions. \n\nWe ate freeze dried food, surprisingly good, probably because I was so hungry by then. Wendy pulled our sleeping bags out of the tent and laid them on the ground as it started to get dark.\n\n\"Aren't we going to sleep inside the tent?\"\n\n\"Yes, but that's later.\" Wendy answered as she stripped off her clothes. \"Get naked.\"\n\nAs I said, I was the camping-outdoor novice, so followed her instructions. Wendy sat me down, then sat on my lap facing me. \"I've wanted to make love to you for weeks now; but I know you needed time and I wanted our first time to be special, something you've never experienced before. Something we'll carry in our hearts forever. I love you, J.R.\" Wendy was caressing my cock as she said it. My cock was as hard as it's ever been. \"Make love to me, J.R.\"\n\nShe rose high enough to line my swollen cock head with the entrance to her sex. The lips were wet, but she stroked the head back and forth, using my pre-cum to remove any friction. Wendy released the grip on my cock and sank down in one motion. \n\nWe kissed, our tongues darting in and out. Wendy broke the kiss, \"Damn, I needed you and this so bad.\"\n\nI was amazed; how did she know? Of all the wonderful positions to make love to a woman, this was my absolute favorite. Holding the woman you love while your cock is fully nestled in that velvet glove. Feeling the tip of your cock tickling her cervix, without hurting her, just enough pressure to let her know you're big enough to fill her up. Having the ability to fondle her ass or her breasts; to kiss and lightly bite her nipples. Being able to look in her eyes as you start to feel the beginnings of her orgasm. All these things made that first coupling with Wendy a most special lovemaking experience. \n\nI felt Wendy shiver through her first orgasm; my hands gripping those two perfect butt cheeks and drawing her closer to me. After she settled down, we started back up again; my hips bucking up to meet her down trusts. Wendy's tongue found mine and danced, the velvet glove around my cock squeezed me tight and I felt the wetness of her second orgasm; that was it, my cock grew another inch and I came.\n\nWe settled down, our breathing returning to normal, Wendy still on my lap with my cock still embedded, not soft enough to drop out, yet.\n\n\"I didn't ask. I hope it was all right I didn't pull out.\"\n\n\"I went on the pill after our second date. I knew this would happen and I wasn't about to spoil it with condoms or having you pull out.\"\n\nWendy slid off my lap and laid back on the sleeping bag. It was a moonless night, the sky darkened as it got late and more stars appeared. I never saw so many stars in my life; Wendy pointed out the Milky Way, the first time I'd seen it. Wendy nestled her head on my shoulder while pointing out the satellites as they passed over and we saw two shooting stars. After an hour, I heard her softly breathing; she had fallen asleep with my arm around her.\n\nI held out as long as I could; but after a while I needed to move my arm or risk losing it. I woke Wendy with a kiss, we grabbed the bags and went inside the tent to sleep.\n\nThe next morning we rose with the sun, Wendy made coffee, some freeze dried eggs (not as good as the freeze dried stew). Another first for me right after breakfast - bathing in a stream. Wendy was kind, she didn't laugh as I climbed out of the ice-cold stream; my cock was doing its best to shrink into my body. I looked at her and shouted, \"Shrinkage, shrinkage.\"\n\nWe broke camp and hiked back to the trailhead. On the way we discussed our relationship and made a commitment to each other to be exclusive; no dating, sex, etc. with others. I think we both felt good about the agreement.\n\nWhich is why it was such a surprise three months, three wonderful months, later when I received a packet in the mail. There was a typed note and computer disk inside. The note read, \"See what your girlfriend has been up to.\"\n\nI placed the disk into my computer's slot and watched in horror. There was the woman I was weeks away from asking to marry me having sex with another man. I couldn't determine who the man was because of the way the video was edited; but there was no doubt it was Wendy. The filming was done from a stationary camera and there were at least five different scenes. I didn't watch all five, nor did I watch any of the scenes in their entirety. I watched just enough to know Wendy wasn't coerced and that she was getting off on the sex. I shut the computer down, made myself a stiff drink and sat down trying to work out a plan.\n\nDuring the three months since our hike, Wendy had given me every reason to assume she was abiding by our agreement. A woman couldn't show more affection or happiness than how she behaved whenever we were together. That made her treachery on the video difficult to comprehend. Could the woman I loved be that devious? Unfortunately, given my history, the answer could be yes. ",
        "Wendy was coming over that evening to have dinner with Kristy and me. When Wendy arrived, I did all I could to remain calm including only having a single beer with dinner. Kristy excused herself to watch a movie, giving Wendy and me time to talk alone. \n\n\"Wendy; I have something to show you.\"\n\nWe walked into my home office. Wendy sat at my desk while I powered up the PC. I started up the video.\n\n\"I'll be right back.\" I left the room, closing the door, not wanting to see those scenes again.\n\nI returned ten minutes later. The PC was shut down and Wendy was sitting slouched over, her hands covering her tear stained face. I was the first to speak.\n\n\"I thought we had an agreement.\"\n\nWendy looked up at me; there was horror in her eyes. \"We do; and I haven't broken it. These were taken some time ago, before you and I started dating.\"\n\n\"Wendy; you know my history with Kristy's mom. As much as I want to believe you; I'd feel like the biggest chump if I became a cuckold a second time. Is there any way to prove the videos are old? Who's the man, anyway?\"\n\n\"It's Dr. James Andrews and no, I don't know how to prove to you those movies were taken last year. James and I dated for almost five months before I found out he was screwing at least two other nurses. I certainly didn't know he was filming us. Those movies were taken in his bedroom, he obviously hid the camera from me.\"\n\n\"Why did he send these to me? I don't understand.\"\n\n\"James wasn't happy when I broke it off with him. He promised to break it off with the others if I forgave him. I told him to go fuck himself. Last month he approached me, asked if I'd give him another chance. I refused, told him I found a real man who understood the concept of love and fidelity. He didn't say anything; I figured he understood.\"\n\nKristy chose that moment to knock on the door and walk in the room. I was at a loss; here we go again. Kristy was starting to forget about Denise and was accepting Wendy in our life. How could I be so fucking stupid? I sat in my chair as Kristy climbed in my lap and innocently asked Wendy if she'd tell her a bedtime story or sing a song.\n\nWendy's held off the tears long enough to tell Wendy she needed to get going right away. Kristy didn't see Wendy's eyes cloud over before the tears began again. Wendy shouted good-bye before we heard the front door close.\n\nI sat wondering what I could do. I didn't have a clue. How could Wendy convince me those videos were from last year? Could I trust her if it couldn't be proven? Finally; how the hell do I un-see the woman I loved with another man? Even if the videos are old; the few minutes of seeing her with him would be difficult to forget. I told Kristy to go brush her teeth and I'd be in to tuck her in.\n\nKristy might be only be eight; but she wasn't unaware. \"Daddy, why was Wendy so sad when she left?\"\n\nI was prepared for her question; I never lied to my little girl; but that didn't mean she had to have all the details. \"Wendy heard some bad news about a person she works with at the hospital and it made her very sad. Maybe we'll find out more soon.\"\n\n\"I hope she's all right, Daddy. I like her.\"\n\n\"I like her, too. We'll keep our fingers crossed everything is OK.\"\n\nI tucked in my daughter before walking into the kitchen and pouring myself three fingers of good bourbon.\n\nThe next two days were maybe the longest two whole days of my life. There was nothing I could think of to ease my anxiety. Friday evening, the phone rang.\n\n\"J.R., can I come over tonight?\"\n\n\"I thought you were working tonight.\"\n\n\"I took the night off. We need to clear this up and I don't want it to wait. Are you free tonight?\"\n\n\"Yes; of course. Have you had dinner?\"\n\n\"No, but don't worry about that. I only need to talk with you.\"\n\nMy heart was pounding. \"Come right over.\"\n\nWendy was at the house in less than ten minutes. I didn't even give her a chance to ring the bell; as soon as I heard her car in the drive, I opened the front door. As soon as Wendy walked in the door, Kristy ran into her arms. \"Wendy! You're back!\"\n\nWendy looked up at me; her eyes searching. Was there some deeper meaning in Kristy's greeting? Had I told Kristy that we were through?\n\nI shook my head in answer to Wendy's silent question. \"Kristy was concerned when you left so suddenly last time. I told her you heard some bad news about a co-worker. She missed you the last two days.\" \n\nWendy looked relieved. \"Kristy, can I talk to your Dad for a few minutes about some grown-up things? I'll come and sit with you when your Dad and I are finished; I promise.\"\n\nKristy wasn't crazy about being excluded; but obeyed. As soon as she left the room, Wendy walked toward the den and closed the door after I followed her in. \n\n\"J.R., the only way I could figure out how to convince you I haven't cheated was if you heard it straight from James' own mouth. I cornered him this morning at the hospital. The dumb shit didn't even consider I was recording the conversation and he didn't know one of the nurse supervisors was within ear-shot when I cornered him. I want you to listen to this.\"\n\nWendy pulled out a recorder and pressed, 'play'.\n\nW: \"James, J.R. showed me the movies of us; it had to be you that sent them to him!\"\n\nJ: \"Oh fuck; really? He showed you?\"\n\nW: \"Yea, oh fuck, really! Why did you send those to him?\"\n\nJ: \"I was hoping the guy would get pissed and just break it off with you. I figured some dumb-fuck banker would go off the deep end and never talk to you again. I was at the nurses' station when you told Glenda that your boyfriend had trust issues because of his first wife cheating on him. So, I sent those videos thinking if you got dumped, you and I could get back together. How was I to know your boyfriend was smart enough to ask you about them instead of just dumping you?\"\n\nW: \"You cock-sucker. You thought I'd run to you after this?\"\n\nJ: \"It was worth a shot. You weren't supposed to know about the videos or that I sent them to him. Nine out of ten guys would have just dumped your ass without getting your side of the story.\"\n\nW: \"Glenda, did you get all that?\"\n\nG: \"Yes, I did.\"\n\nJ: \"You set me up? You fucking bitch!\"\n\nW: \"You have no idea.\"\n\nWendy turned the recorder off. She looked at me. \"Now what, J.R.?\"\n\nI hugged Wendy as hard as I could without hurting her. \"We have a lot to talk about. But first; what are you going to do about this doctor?\"\n\n\"Well that's a problem. If I turn him into the administration, most likely those movies get viewed by numerous people. I'm not all that crazy about that. Can you understand?\"\n\nI could understand Wendy's reluctance; but she needed to know I was one-hundred percent behind her and there were bigger issues here. \n\n\"That's the real problem, isn't it? Any time one of these perverts does something to a woman, the victim becomes a victim all over again when she signs a complaint. The system turns it around on the woman; her sex life becomes a matter of public record. The pervert's defense lawyer is given latitude claiming it's only a zealous defense of the client and ends up making the victim the criminal. \n\n\"That's if it even goes to trial. Too often the man is rich, powerful or has some special talent. Society, his peers or superiors are willing to give him a pass because of his 'talent'; whether he's a CEO, a sports hero, a doctor, a priest or minister. \n\n\"But, here's the issue for you. If you give this Doctor Andrews a pass, I guarantee in a year or two, maybe less, he's back at it with another nurse or patient.\" \n\nWendy listened to my spiel and I could tell she needed more time to think about it. I knew as well as she did that turning the doctor in to HR could finish her career at the hospital. \n\n\"They're going to try and turn this around on me. Doctor Andrews is very popular at the hospital. Most everyone will think I was lucky to share his bed and won't give a damn if he filmed it.\"\n\n\"OK; you don't have to decide tonight. Tonight, there's a little girl waiting for us to finish our 'adult' conversation. Let's take her out to Baskin and Robbins for a cone. We have the weekend and have a lot to discuss.\"\n\nThe three of us went out for ice cream, much to Kristy's delight. I admit, it was fantastic to be together again. Wendy stayed overnight, but we didn't have sex that night. I could tell Wendy was disappointed; but we needed to get the bullshit discussed before going forward. Wendy didn't waste any time Saturday morning. After breakfast, she and I sat with our coffee on my back deck.\n\n\"J.R., you're having a hard time with the images after watching those movies, right?\"\n\n\"Yea, I knew you had men before me; but I didn't need to see you with any of them. It made it too real.\"\n\n\"I can understand that, J.R.; but I want you to think about something. I had sex with a dozen men before I met you; but never made love to any of them; you were the first man who I gave my heart and soul. You, on the other hand, gave your heart and soul to two women before me. One you married and another you were planning to marry. Think about this from my perspective, from a women's perspective; do you think it's any easier for me to get over that fact?\"\n\nWendy made a good, no - great point. I didn't know how to answer her question. \n\n\"And think about this, J.R. - I've seen both of those women, they both had bigger breasts, much bigger breasts, than me.\" Wendy said this with the slightest curl of her lips; showing me she was trying to keep the conversation from becoming too heavy.\n\nI'm no fool, I fondled one breast through her shirt and kissed her, \"Yours are perfect.\" \n\n\"Damn right.\" She kissed me back.\n\n\"I'm serious about us, J.R.; but I have a few conditions before we go further.\"\n\n\"Oh, oh.\" I thought to myself.\n\n\"Number one. We have children together. I want at least two, maybe three. Can you handle having three or four children running around the house?\"\n\n\"I'd actually love that. But will you love Kristy as a daughter, even after you start having children of your own?\" \n\n\"I already love Kristy, that's not going to change. I'll give her all the love that Jane allows. I won't try and replace Jane in Kristy's heart.\"\n\n\"I understand. What's number two?\"\n\n\"The second condition is, you have to stop racing. I can't stand when you take off to the track. Can you do that for me?\"\n\nDamn, Wendy was asking a lot. Honda just came out with their NT650 Hawk and I had my eyes on buying one. It was a beautiful caf\u00e9 racer, all stripped down, almost naked. The thing is; I already was thinking of quitting the tracks, the young guys were blowing me away and I was starting to work too hard to keep up. Last year I crashed twice, neither serious, but still. \n\n\"Do I get to keep the Harley?\" I knew this would be a tough one for Wendy; in the medical profession, we bikers were nicknamed 'future donors'. \n\n\"If you promise to be careful.\"\n\nI decided this was an opportunity I'd been waiting for. \"OK, I give up racing, keep the cruiser and you promise to ride on the back once and a while.\"\n\nWendy surprised me once again. \"You buy me a helmet and all the leathers; I'll go for a ride with you. But remember, you promised to be careful.\"\n\n\"All right!\" I nearly shouted, \"What's next?\"\n\n\"The last condition is, you promise to love me the rest of your life. That we grow old together. I'm not asking you to be faithful because I know you; you don't need to be asked; you'll be faithful as long as we're together. I promise the same.\"\n\n\"It's a deal. Do we seal this with a hand shake, or?\"\n\n\"What are you, nuts? We seal it with a kiss.\" Wendy jumped onto my lap, wrapped her arms around me and gave me a soul kiss.\n\n\"Wendy; did you just propose to me?\"\n\n\"Yes, Mister Douglas, I did and in case you weren't paying close attention, you accepted.\"\n\n\"I'll talk to Kristy later today. I'm sure she'll be thrilled; but I think it's something she and I need to discuss alone. And you and I need to finish the discussion regarding what to do about Doctor Andrews. All right?\"\n\nThe mention of Andrews brought a frown to Wendy's face. I needed to get us back to this morning's happier subject.\n\n\"Say, since you proposed to me; do I get the ring?\"\n\nWendy slapped my chest. \"No, silly. I've already picked out the ring you're going to buy me at Ben Bridge. I'll show it to you tomorrow.\"\n\nAn hour later Wendy left to get some clothes at her apartment. I took the opportunity to talk to Kristy; as expected, she was thrilled. I even brought up the idea of her having a couple siblings and she was even more excited by that possibility.\n\nSaturday evening Wendy and I had the dark conversation regarding the doctor. She agreed with me that she couldn't let it slide. Together, we came up with a plan.\n\nSunday, the three of us went ring shopping. Kristy had been asking if she could get her ears pierced and this was a perfect time to make that happen. Wendy pointed out the ring she liked; it was a beautiful half-carat solitaire. Just like Wendy to pick something understated. I told Wendy and Kristy to pick out Kristy's earrings while I talked to the salesman. I told him to replace the half-carat with the full one-carat next to it. He smiled and whispered, \"She's going to love it. It will be ready tomorrow afternoon.\"\n\nKristy got her ears pierced and a nice pair of sapphire studs. Wendy loved the ring when I gave it to her Monday night. She stared at it for a few seconds before she realized the diamond was larger than the one she picked out. I was rewarded with hugs and kisses - and tears. The following weekend we were married by a justice of the peace.\n\nWendy did turn the doctor into HR. They hemmed and hawed, but finally fired him. The turning point was when another nurse publicized the harassment she received when she rebuffed his advances. She had complained to HR and they ignored it; the complaint got buried. When word of Wendy's complaint became common knowledge, the other nurse made her previous complaint public. Neither the HR director nor Doctor Andrews could weather the subsequent storm.\n\nWendy sued Doctor Andrews for secretly filming, then sharing the movies. The jury's outrage increased when they heard how Andrews sent copies to me in an effort to sabotage our relationship. Just before the jury went out, Andrew's attorney offered Wendy two-hundred thousand if she signed a non-disclosure agreement. Wendy and her attorney discussed it, it was a good offer; but in the end she rolled the dice and let the jury decide. This also assured Andrew's filming was public knowledge.\n\nLuckily, the jury came back with a decent award; Wendy was awarded one-hundred-thirty thousand dollars. The money helped because by the time the trial ended, Wendy was no longer working at the hospital. Wendy's original instincts were correct; for every one person who was pleased by Wendy's willingness to stand up to the harassment, two were upset at losing a valuable surgeon and thought a lowly nurse should have just sucked it up and quit if she didn't like it. \n\nWendy's attorney convinced the hospital that it was in everyone's best interest if they went their separate ways, if the hospital agreed to a year's severance. The hospital agreed, wrote the check and said, \"good riddance\". \n\nWendy was four months pregnant when the trial ended. Five months later we greeted William Douglas the Third into the world. And no, he wasn't nicknamed 'Trey', since there wasn't a 'Bill' in the house, my son got to have his grandfather's nickname. \n\nEighteen months after Bill was born, Wendy gave birth to twin girls. Leslie and Emma were named after our respective mothers. Wendy and I agreed the family was complete; the question now, which of us would get fixed? We did it the only fair way - we flipped a coin. Heads, I get the clip; Tails, Wendy gets her tubes tied. One flip. Tails.\n\nI took the sting out of Wendy's losing the coin toss by showing her the tickets. Two first-class round-trip tickets to Saint Martin, one month after the twins were scheduled to be weaned. The baby-sitters were already on board. Kristy's nanny, Mrs. Hansen, was still helping us out with Bill and the twins. Kristy was now thirteen and a very responsible big sister. Both Wendy's parents and my parents agreed to fly in for a week apiece and help Kristy and Mrs. Hansen. I had the two weeks covered. \n\nWe rented a condo on Orient Beach; most of the beach was topless and the end was totally nude. Although Wendy and I hiked into those infamous nude hot springs a number of times before Bill was born, we'd never been to a nude beach. This would be a first for both of us. Wendy knew about the topless beaches in the Caribbean, the nude beach was my surprise on her. \n\nAs Wendy looked at the tickets, I couldn't stop myself from teasing.\n\n\"I bet you can't wait until we hit those topless beaches to set those puppies free and show off them off.\" Wendy's breasts grew from an A cup to a B cup after three children. Still one or two cup sizes smaller than Jane and Denise; but, like I said before, they're perfect, especially on her lean body. \n\n\"J.R., you are such a pervert. What am I going to do with you?\"\n\n\"Keep me, if you have any sense.\" Remember when I wrote earlier that my luck changed? It's true because she did keep me. \n\nWendy became my best friend. She told me when I was wrong, encouraged me when I was right and supported me either way. We had our disagreements; but never went to bed without at least talking through them. The biggest disagreement was whether Wendy would start working again after the twins began pre-school. Mrs. Hansen was still with us and Wendy missed her career. We finally compromised when Wendy found a part-time position; four days a week and she'd be home by three. \n\nWe loved to travel and some of our best times were trips with the kids to the National Parks. We camped all over the Western states; Zion, Arches, Yellowstone, Crater Lake; you name it, we were there. Of course, we had to fit these trips in between all the various sports schedules. A hell of a nightmare; but a labor of love.\n\nMy four children grew up healthy, except for the occasional sports-related broken bone or scrape, and well adjusted. We somehow dodged the major bullets. We have friends that we consider to be great, loving parents whose children grew up to become drug addicts, homeless vagrants and/or financial burdens. One couple lost their youngest son to an overdose, at least three of the couples we know have their twenty and thirty-something children still living with them.\n\nWendy and I did have a few scares. Our son Bill experimented with marijuana in high school. We caught it early and spent time discussing it with him. At first, we heard the same old arguments, \"You guys drink, what's the difference?\" Our calm reply: \"When's the last time you saw either of us have a drink before we go to work and effect our ability to do our jobs?\" (Many of Bill's friends started the school day with a joint and Bill knew their grades were suffering as a result.) Second, \"We're adults and we're not breaking the law.\" I believe our approach - not overreacting and working out a compromise with Bill - produced the right results. His grades picked back up and he got through high school and college without getting into trouble. (Years later, Bill convinced me to try the stuff when it became legal in Washington; I got high and later told Bill I'd stick to Manny's Pale Ale and my Basil Hayden.)\n\nAnother tense moment came just two years later when Leslie, one of our seventeen-year-old twins, came home from summer basketball camp and told us she'd fallen in love with one of her coaches; a twenty-three-year old college senior. We learned he did nothing to encourage her infatuation; but the next few months were riddled with angst for all of us. Luckily, the issue resolved itself eventually with no one breaking any laws, no long-term animosities, and in a most satisfying manner. Five years after Leslie's announcement that afternoon, I walked Leslie down the aisle as she became Mrs. Marcus Price. Theirs is a romantic tale and too lengthy to go into here. Their two girls are the two young grandchildren sitting in the waiting room at the very beginning of this tale.",
        "*******************************\n\nBad News\n\nWhich brings us back to just before the day this tale started. Wendy and I had recently finished a bucket-list trip to Italy. We rented a Ducati in Florence and did fourteen days touring Tuscany and the Adriatic Coast. We watched Valentino Rossi out-duel Jorge Lorenzo at the Moto GP race in San Marino. Wendy had only seen my races and was awe-truck watching these professionals reach speeds in excess of 170 miles per hour. It was a great trip; great food and wine, wonderful people and a beautiful traveling companion.\n\nSoon after returning from that awesome trip, I started having headaches and brushed them off as sinus trouble. Wendy finally convinced me to see an ear, nose and throat specialist who told me it wasn't my sinuses. More tests, more doctors, until a CT scan found the tumor in my brain. Unfortunately, because I had a high tolerance for pain, the tumor had been growing for quite a time. Surgery would be iffy, full recovery even more so.\n\nYou already know I woke up after the surgery. Now it's time for therapy and keeping our fingers crossed. With luck, I get to spend five more years with Wendy and my family.\n\n*******************************\n\nEpilogue - Ten Years Later\n\nTen years; yes, you read that right. I'm sitting in the stands watching Matthew graduate from Gonzaga Prep High School. Never thought I'd make it this far. I turned seventy last week and we decided to celebrate both events by combining it with a family reunion. \n\nKristy came in from Colorado Springs, where she works for USA Volleyball. Kristy brought Casey, her 'friend'. We're all hoping our oldest has found 'the one'; but keep our mouths shut. It's our own outlook on life that wants that for her; she's been happy living the single, carefree life. She claims the athletes she coaches are her kids (and no diapers).\n\nBill and his wife still live in the Spokane area; Emma, her husband and their two sons are close by in Sandpoint. Thank goodness, because Leslie, Marcus, their two girls and five-year-old son moved to Miami when Marcus received an offer to become an assistant coach for the Heat. At least it gives Wendy and I an excuse to spend a few weeks in the warm Florida sunshine every winter. \n\nSo, the entire family was together for the first time since Christmas, eighteen months ago. We had to rent a large house on Airbnb for the week because Wendy and I downsized after the last child left the nest; we have a small two-bedroom cabin north of town in the mountains. \n\nFour children, three children-in-laws, six grandchildren, and one 'friend'. What a treat to have my entire family around me; but what a treat when they left after a week. I was exhausted.\n\n*******************************\n\nAfterward - by Wendy Douglas\n\nI found J.R.'s journal in an old Moleskin notebook he had in his nightstand. I don't know if he wanted his memoir published; but I decided he would. Less than two months after Matthew's high school graduation the tumor came back with a vengeance. His doctor told him surgery was out of the question and the therapy wouldn't do much good; it was a matter of managing the pain. J.R. spent a month visiting the kids and grandkids; then came home for the end. \n\nThat last night J.R. woke up, I was sitting in a chair reading a book and I heard him stir. He opened his eyes and smiled at me. \"My God, Wendy - what a beautiful ride it's been.\"\n\nHe closed his eyes and fell back asleep. I kissed his forehead. That was the last hour of J.R.'s life.\n\nJ.R. never got over the tragic death of that man, the CEO, in Chicago who died so suddenly walking down the street. J.R. said he felt lucky - he was given the chance to put his house in order and say good-bye to his loved ones. \n\nThe son-of-a-bitch (and I say that in a good, loving way) had the nerve to tell me to find another man after he was gone. He said I was too young to spend my life alone; I was too beautiful, sexy, generous and gracious (his words) - and it was my duty to make another man as happy as I made him. Can you believe that? He got angry when I told him to forget it. \n\nWell, J.R. is physically gone; but all I need to do is look at our children and grandchildren to understand he's still with all of us and how lucky I was to stop at that swing-set thirty-eight years ago."
    ],
    "authorname": "BillandKate",
    "tags": [
        "romance",
        "loving wife",
        "cheating wife",
        "anal",
        "nudity",
        "infidelity",
        "jealousy",
        "romantic"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/as-i-lay-dying-2"
}