{
    "title": "Until Daylight",
    "pages": [
        "(There are three points of view in this story. The characters are: The Woman, The Hunter and The Camper.)\n\nTHE WOMAN\n\nShe struggled to catch her breath, wanting nothing more than to stop, stop just for a moment. Her legs ached, her lungs burned. She felt that she must have been running for hours and hours. Her children couldn't go much further. Maybe they could rest, maybe he wasn't close. If she could stop gasping then perhaps they could find some place to hide. If he couldn't find them they would be alright.\n\nAs if in mockery to her thoughts, a branch snapped behind them. It was deliberate, she knew, to let her know that he was still back there. She summoned her strength, pushing her two daughters before her, and they began to run again.\n\n\"Oh God, oh GOD, please help me!\"\n\nTHE HUNTER\n\nHe smothered a laugh even as he slowed his pace and allowed a bit of room between himself and his fleeing prey. She must have thought she was getting away. Well, she wasn't, no one ever got away from him. But it was still too early for the hunt to end. The most delicious part was letting them think that they were ALMOST safe before shutting the trap.\n\nHe had watched them, the woman and her two young girls, ever since they had arrived at the park. He had followed them to their camp-site and been pleased that the one they had chosen was a bit too far from any other campers.\n\nHe licked his lips. This one might not have to die. Well, not right away that is. She would die sooner or later, of course. He had watched her undress for the night and had been taken with her long legs and the cheeks of her ass peeking from under her panties. He'd have that ass before he used the knife on her.\n\nIt was too bad about the children, but Hell, you can't make an omelet without breaking eggs and all that.\n\nTHE WOMAN\n\nWhat was that ahead and on her right? There was a flicker of light through the darkness. Hoping against hope, she turned in that direction. She tried to shield the child in her arms from the unseen tree branches that slapped against her. She wasn't very successful, particularly as she was now nearly carrying her younger daughter.\n\nA shadow crossed the light of what she now saw was a small campfire. She tried to call for help, but couldn't force the words through her dry as dust throat. Then the shadow was coming towards her and her daughter was scooped up as an arm went around her back and helped her into a clearing in front of a dilapidated old house.\n\nShe collapsed on to her knees in front of the fire. She would have fallen had the other person not set her daughter down and turned to support her.\n\n\"Its okay, its okay. You're alright. What in Heaven's name is going on?\"\n\nShe couldn't speak for several minutes, whooping as she fought to get enough air in her lungs to reply. Lifting her head, she looked at the other woman. No taller than five and a half feet, she seemed slight and slender. A few freckles dotted a face that could have been no older than twenty or twenty-one. Red hair was matched with green eyes.\n\n\"We always come here and go camping for a week at this time of year. My husband was delayed, his plane was grounded and he couldn't come until tomorrow, or today, I guess now. The girls look forward to this all year and were impatient so we came on ahead. \n\nWe set up the camp, had supper and then went to bed. Sometime, I don't know when, I woke up. I could feel something wasn't right and sat up. There he was, just a shape, a dark shape. He was squatting between my daughters as they slept, but he was watching me. He was holding a huge knife, bigger than I have ever seen before.\n\nI wanted to scream but I couldn't. Then he warned me not to make a sound. He told me to get dressed and then to wake my daughters and get them dressed also. Once we had done that, he told us he was a hunter, and we were his quarry. He pointed this way and told me if I could keep ahead of him until daylight he would let us live.\n\nI begged him to let my children go, that I would do anything and everything he wanted. He laughed and the sound of that laughter was frightening beyond any thing I had ever heard. Then he simply said 'Run' and we did.\n\nAnd I know he's back there, not far away. He's playing with us. I saw your fire and hoped there might be someone here who could help us. Do you have a car or any way to get us out of here?\"\n\n\"No, I'm sorry. A friend dropped me off at the park and I hiked up here. I wanted to be alone for a few days out in the wilderness. He won't be back until tomorrow night.\"\n\n\"Oh dear Lord.\" She buried her face in her hands. \"He's so big. I don't know how the two of us together could stop him. He'll kill you too, but please, PLEASE, help me to save my children.\"\n\nShe looked at the young woman and was startled to see her face. There was no fear there, but rather anger that was building towards fury.\n\n\"I'll kill that bastard.\"\n\nTHE CAMPER\n\nShe had come, as she said, to get away from the world for a few days. Every now and then she had to do that. She had walked the woods at night, watched the stars, listened to the noises of the forest. She shunned all human contact during these retreats.\n\nSometimes she wondered about the old, deserted house. It was crumbling, but it still provided shelter. There was even an old root cellar under the house. Dry and warm, it was without windows and with a solid door leading down from inside the house.\n\nHer oldest friend was scheduled to pick her up in about 18 hours. He had even said something to her about occasional reports of people missing in the area. But those reports tended to surface about any area if you looked long enough. Besides, she hadn't thought there would be anything here that could threaten her. \n\nShe looked at the sobbing woman and then at the two girls. One was about eight, the other maybe twelve. Rather than clinging to their mother, they both supported her and looked as determined to try to protect her as she was to protect them. Her anger grew. Nothing was more likely to enrage her beyond any hope of calming down than a threat to a child. One of her deepest regrets was her lack of her own children. Danger to one tended to bring out the monster that lurked deep inside her.\n\nShe helped the woman to her feet. \"Get in the house,\" she directed. She lifted both children and moved quickly towards the sagging front door. \"If need be, you can go down there,\" she pointed with her chin at the door to the cellar. \"You can bar it from the inside. Stay there until either I come back or until my friend arrives.\" She grinned. \"You'll have no doubt who he is when he arrives, but get him to identify himself anyway.\"\n\n\"I don't understand.\" The mother said, but hope was dawning in her eyes. \"Are you going to try to draw him away?\"\n\n\"No. As I said, I'm going to kill that son-of-a-bitch.\"\n\nTHE HUNTER\n\nHe cursed when he saw the fire. No one else was supposed to be over in this direction. No one camped here, or lived here. It was why he always chose to drive his prey in this direction. He slowed, becoming cautious. It was possible that this was a party of males, fishermen maybe, possibly armed. He was strong and skilled at hunting, but he didn't take chances either.\n\nHe crept closer, moving silently. Then he almost laughed. Standing in front of the fire, looking out into the darkness, was a woman. A single woman, who wasn't even as large as the mother. He looked around. The quarry must be hiding in the old house. If that other woman stood aside, well, maybe he would let her be.\n\nHe wouldn't, of course. The reason he had been so successful in his hunts was because he never left a witness. Or a body. He might offer escape to the intruder, but her body would end up down in the overgrown mine shaft where all the others had gone.\n\nA frown crossed his face. It was obviously just by chance, but the new prey was looking directly at him. Using all his wood craft he slipped back into the trees and circled around. Not that he was afraid, but it was so much more exciting to surprise them. \n\nHolding his breath, he moved in again. This time he was really surprised. Not only was she looking right at him again, but she had advanced to stand between him and the house. He moved back until he could barely see the fire and resumed circling. \n\nDamn. How did she do that? She was still between him and the old house, and still watching as though she could see him. Even when the fire was blocked by the house, eliminating any chance of a reflection, she was still somehow tracking him.\n\nEnough. It was no fun playing with someone who wouldn't play back the proper way. He rose to his full height and walked into the clearing.\n\nTHE CAMPER\n\n\"My, he WAS a big one,\" was her first thought when he came into the light. She shrugged and turned back to the fire. Picking up a burning twig, she shook a cigarette from the one pack she had left and lit it.\n\n\"Smoke?\"\n\nThe simple question seemed to baffle the towering man. He blinked and uncertainty crossed his face. She could tell that this was the part where she was supposed to scream and blubber and wail. Well, she didn't do much of that, hadn't in a long time.\n\nHe opened his mouth. Before he could speak she interrupted him.\n\n\"If you're about to say 'I am death' or some other foolishness, let me save you the trouble. I've heard all the wacky statements from nut cases who would put you to shame. You can color me unimpressed.\" He gaped at her, his mouth moving but no words came out.\n\nTHE HUNTER\n\nHow DARE she? Who did she think she was? Maybe some martial artist who thought she could kung-fu herself out of this? Maybe she was armed. His eyes narrowed as he swept his gaze over her. He saw no sign of weapons. He lifted the knife and let the light from the fire reflect off it.\n\nHe stepped towards her. \"I'll make you the same offer I made her.\" He jerked his head towards the old house. \"If you can keep ahead of me until daylight, I'll let you live. You'll even have a running start, because I'm going to finish them first.\"\n\nTHE CAMPER\n\n\"The only one about to be finished here is you.\" She watched calmly as he lunged towards her, his face twisted in anger. She side-stepped him easily and he went sprawling. Quickly, she stepped behind him and kicked him. She took one last deep drag on her cigarette and carefully tossed it into the fire.\n\nHe roared as he regained his feet and stalked towards her. This time he was more careful, feinting left and right and making short thrusts with the tip of the knife. She danced away from him, not seeming to notice that he was working her towards an angle of the old house. When she stepped back one more time, he snarled and swung the knife in an upward stroke intended to rip her open.\n\nTHE HUNTER\n\n\"What the HELL?\" Faster than his eyes could follow, the woman had reached out with her left hand and caught his wrist, halting his thrust. His muscles bulged as he strove to drive the knife home. She never even blinked as she continued to hold him at bay. Without thinking, he clamped his other hand on his wrist and shoved with both arms until the veins stood out on his forehead.\n\nShe suddenly twisted her wrist and he fell heavily to the ground again, losing his grip on the knife. She walked over, picked it up and balanced it for a moment. Then with a quick flip she threw it, burying the blade in the dirt beside him. \n\n\"Want to try it again?\"\n\nHe staggered to his feet. \"You BITCH.\" Scooping up the knife he advanced on her again.\n\nTHE CAMPER\n\nDamn, this was just about fun. She did love a knucklehead who had to have the facts of life pounded into his, or sometimes her, skull. She darted to one side and slapped him in the face as he went by. He spun, dropping the knife and caught her in a bear hug. He lifted her from her feet.\n\n\"I'll break you in two. I've killed more than once like this.\"\n\nA muffled whimper came from the house. It sounded like one of the girls. They apparently thought she was about to lose the fight. Okay then, she didn't want them scared any more than they had been already. She simply snapped her arms away from her body, breaking his hold as though it was a child's grip. She followed with a one-two punch that stretched him dazed on the ground.\n\n\"Enough.\" she said. Once again she picked up the knife. She reached down and grasped the hunter by his shirtfront, effortlessly lifting him to his feet.\n\n\"What the hell are you?\" \n\nShe looked him in the eyes and didn't reply. She watched those eyes widen and then all but roll up in a faint. She knew her eyes had changed.\n\n\"Here's the deal,\" she said to him. \"I'll give you a head start. Then, if YOU can keep ahead of ME until daylight, I'll let you live.\"\n\nAs she pushed him away, she pressed the knife into his shaking hand. \"Take this. When I catch up to you, try cutting my head off.\"\n\nHe backed away from the woman. She grinned at him. That must have been even more terrifying than her eyes, for he turned and ran. She listened for a while, until the sound of him crashing through the brush had almost faded. Then, running easily, she disappeared from the campsite.\n\nTHE HUNTER\n\nHe reeled into a clearing and fell to his hands and knees. How far had he run? It seemed like miles and hours. He struggled to rise, casting a frantic look at the night sky. It was only an hour or so until daylight. Maybe he could keep ahead. He shuddered again at the inhuman strength the petite woman had shown and at the glowing red orbs her eyes had become.\n\nHis gaze dropped to the trail he had left and he shrieked. He could see the two red points, staring at him, freezing his soul. Soundlessly, the woman entered the clearing. He managed to heave himself to his feet, gripping the knife she had so casually returned to him. His knuckles whitened.\n\n\"Why?\" He moaned through ashen lips. \"I never harmed you. Why are you doing this to me?\"\n\n\"WHY?\" She seemed amused. \"Because you deserve it.\" She closed on him. \"I know that woman and her children never harmed you. You chose them for sport, as well as who knows how many others. I wanted you to get a taste of what those other innocents must have felt, a taste that you can carry with you right to the Gates, where I feel quite sure the only words you are going to hear are 'Going DOWN'.\"\n\nShe paused and when she resumed she seemed to be talking to herself. \"I should have ended it back at the deserted house. I could have killed you then, I SHOULD have killed you then. I suspect whenever I finally face judgment I'll end up spending extra time in Purgatory for what I have done to you tonight. I doubt there will be any more time there though just for finishing you off.\"\n\nHe stumbled back, lifting the knife. \"Stay away from me,\" he screamed hoarsely. \"Demon or devil, stay away!\"\n\n\"Oh for heaven's sake, I'm not a demon nor a devil.\" She was closer now, so very close. He made a faltering swipe at her with his knife that she avoided with a twist of her body.\n\n\"What are you then?\"\n\n\"Well, I'd claim that I'm an avenging angel, but I don't want the real ones to get mad at me.\" The red glow in her eyes brightened. She opened her mouth. Terrified beyond words, he saw the two upper canine teeth elongate and become needle sharp. \n\n\"My mother always used to scold me. She'd say, 'How many times do I have to be telling you not to play with your food?'.\" She was touching him now. Standing on her toes, he felt her cool breath on his skin and then heard the final words.\n\n\"Don't you recognize a vampire when one kills you?\"\n\nTHE CAMPER\n\nShe looked down at the drained corpse. She grasped one arm and dragged the body through the woods to a nearby stream they had crossed. She sniffed up and down until she found a likely spot.\n\n\"Right here,\" she mused aloud. \"The birds and the beasts will be at you by the time anyone finds you. At least some of God's creatures will get some use from you.\"\n\nShe turned to go, then hesitated. She knelt beside the body. She tore off a part of his shirt, dampened it in the stream and cleaned her face. Tossing it back to the ground she remained on her knees. She fished inside her shirt and pulled out a worn silver cross.\n\nMaking the sign of the cross she began to pray. She prayed for forgiveness, for herself. Not for killing him but for hunting him as he had hunted others. She prayed that the woman and her children would not be haunted by this ordeal their entire lives. \n\nShe rose and started to cross herself again. She stopped and looked at the heavens. \"Whatever mercy you can grant this bastard, well, you know better than I. Personally, I would simply say 'Bon Voyage' and jerk open the trapdoor to the fires, but thy will be done, not mine. Besides,\" she reflected, \"I might need all the mercy I can get one day. I have to admit, this time, damn it, I ENJOYED doing this.\"\n\nTHE WOMAN\n\nAfter she had barred herself and the children in the cellar, she sat and shook. The other woman had pressed a canteen and some food into her hands before she had pushed the three of them into the old house. They had found a flashlight and a Coleman lantern in the cellar. They ate and drank and strained to hear what was happening outside. For a long time they heard nothing. Eventually exhaustion claimed all three of them and they slept.\n\nWhen she woke up, she was confused and still terribly frightened. She climbed the steps and listened at the door, afraid of what she might hear. Then a soft voice drifted through the door panels.\n\n\"Are you alright?\"\n\nRecognizing the other woman's voice, she opened the door. The room was almost as dark as the cellar, but she could see a trace of sunlight through a crack in one of the room's other doors. \n\n\"Oh God, is it over? Are you okay?\"\n\n\"I'm fine and its all over,\" she was reassured. \"Its about an hour till sunset. My friend will be here to pick us up before too long. We'll get you all down to the main park area and contact your husband. I'm sure he'll be frantic. Maybe I should start carrying a satellite phone on these retreats.\"\n\nNot long after dark, a brightly lit 4X4 truck rolled up and a man leaped out. At the sight of the woman and her daughters, he drove back into the truck cab and snatched up a radio mike.\n\n\"Base station this is Special Agent Dale. I've located the missing campers and they're okay.\" She noted he spoke with a bit of an English accent. Tossing the mike down, he turned and glared at the red haired woman.\n\n\"I should have guessed that somehow you would end up being involved in this.\"\n\n\"Its not MY fault Robert,\" protested the female. The mother noted that an Irish accent seemed to be appearing more and more in the other woman's speech, as though the sound of the man's own accent triggered it. She suddenly stepped forward, kissed the man on the cheek, and then with a laugh jumped into the back of the truck with her gear.\n\nHe gently assisted the girls and the woman into the cab of the truck, explaining that a massive search had been conducted since her husband had arrived to find them missing from the camp site. He showed them his identification as an FBI agent.\n\n\"Is she an FBI agent too?\"\n\n\"Not hardly,\" came the reply, almost as a duet in the man's bass voice and a contralto that piped in through the open sliding window. The FBI agent shook his head.\n\n\"She's a spook.\"\n\n\"A spook?\"\n\n\"She's a CIA agent.\"\n\n\"Cool,\" commented the older daughter.\n\nThey arrived at the brightly lit parking lot, crowded with searchers and vehicles. Her tears were matched by her husband's as he ran to them, scooping up both of the girls as they all hugged.\n\nWhen they finally broke, the woman looked around for her rescuer. She didn't see her. She looked at the FBI man.\n\n\"Where did she go?\"\n\n\"Probably took off,\" he replied. \"After all, she can't do much in the way of spook things if her name and picture are on the late night news.\"",
        "\"I didn't even thank her. I don't even know her name.\"\n\nHe smiled. \"Trust me. I've known her a lot longer than you might think. She knows you're grateful and she's happy to see your family reunited and safe.\" He started towards his truck and turned back. \"And her name is Bridget. Bridget O'Brien.\"\n\n(The End)\n\n(Those of you who have met my wandering vampire Bridget before probably identified her halfway through the story. For those of you who haven't made her acquaintance, without going into great detail, you can find my alterations to the vampire mythos in the stories that name her.) "
    ],
    "authorname": "patricia51",
    "tags": [
        "killer",
        "crime drama",
        "suspense",
        "hunter turned hunted"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/until-daylight"
}