{
    "title": "Matchmaker 03: March",
    "pages": [
        "<center>Brooklyn</center>\n\nNormally when a client contacted me to engage my services, I was responsible for everything, but not this time. My client, Heston Mallard, knew exactly what he was doing and what he wanted. He was taking a working vacation during the month of March to give his new sailboat a shakedown cruise in the Caribbean. I only had to provide his companion.\n\nHeston was different than most of my clients. Like all my clients, he was wealthy, worth just a tick under a billion dollars on paper, but unlike most, he was a little younger, twenty-nine, and a confirmed bachelor. Many of my clients were in their mid to late forties, or older, and were looking for someone special. That was where I came in. I specialized in finding that special someone, arranging a dream getaway, and allowing nature to take its course.\n\nNot this time. Heston claimed he wasn't interested in a relationship. He was only looking for someone to spend a month on his boat with him, someone whose company he could enjoy, and when the month ended, the pair would go their separate ways. I first thought of turning him down as a client. Despite what my critics said about me, I didn't run an escort service, and I didn't provide women as playthings for the wealthy. I hadn't discovered what Heston said he wanted until I was interviewing him. He was very clear he didn't have time for long term relationships, that he was married to his work, and he liked it that way. The only reason I accepted him as a client was because during our interview, I realized he was deluding himself. I didn't have time or the inclination to dig into his emotional baggage, but it was clear he was trying to make himself happy by throwing himself into his work. If he truly wanted nothing more than someone to warm his bed at night for a month, he could have found plenty of takers for that role on his own. By coming to me, he was making a silent plea for help.\n\nI always interviewed the client first to find out his or her likes and dislikes. I had a Ph.D. in psychology from the University of Chicago and had started out as a traditional therapist, helping people deal with life's slings and arrows. Early in my career, I realized what I enjoyed most was fixing troubled relationships. Later I'd become more of a life coach by helping men and women create healthy, rewarding relationships. That led to what I did now. I used my counseling experience to discover what my clients were looking for in a companion and matched them with people seeking what my client offered. The interview process normally took several hours and allowed me to develop a profile that I used when selecting a companion.\n\nOnce I had a baseline for my client, I began my search for a companion. I found my companions, both male and female, the same way anyone finds anything these days. I used the internet. I'd hired a company to design a 'dating' app that people could download for free. They filled out some basic personal information, and I used that information to make my selections. The app was only the first step. From there I selected individuals I thought might be a good fit, and after a brief phone interview, if I was still interested, I'd arrange a face to face for a more in-depth interview. I typically narrowed my interview list to between two and four potential companions during the phone interview.\n\nLike with my client, the interviews with potential companions took several hours and allowed me to develop a profile for them. There was no science to what I did, but it should be clear to anyone that an outdoorsy adventuresome type probably wouldn't be a good fit for someone that enjoyed ballet, opera, and quiet evenings at home reading a book. It often took me anywhere from six weeks to three months to find a companion, matching people based on their personality types and my clients' desires and wishes.\n\nSome clients were easier to match than others. Heston was proving to be more of a challenge than most, and I was running out of time. It was already the first week in February and his new boat was scheduled for delivery in the next week. He was pulling up anchor March second, companion or no.\n\nDuring my interview, I realized the deal breaker for him was he was keenly interested in a woman who had her own career, who would understand the demands of his job, and finally, someone who understood he was a man driven by competition and winning. He measured himself by his financial success and his ability to make hundreds of millions of dollars in a single stock trade. If his companion wasn't equally competitive, I knew he would grind her down and lose respect for her.\n\nWhat I needed and hadn't yet found was a strong, confident, woman who was at the top of her game in a highly competitive field, and she couldn't be an artist or someone who's successes couldn't be quantified. I needed a lawyer, doctor, businesswoman, or someone similar. I'd thought I'd found a perfect match, a divorce lawyer who specialized in high profile cases, but she'd turned out to be a real ball buster who took only female clients and was driven by the thrill of ruining her clients' husbands. Like Heston, I didn't have the time or desire to get into all her problems, but during the interview I realized that would have been an explosive pairing. Cooped up on a boat, they would have either hate fucked each other to death, or one would have thrown the other overboard in the middle of the ocean.\n\nI looked through the latest applicants. Like most days, many of the applicants were people I couldn't use. My clients weren't likely to interested in a thrice divorced, three hundred-pound, mother of five barely getting by on government assistance, or an unemployed, unshaven, parolee whose idea of a good time was shot gunning beers and watching football on television while his girlfriend or wife waited on him.\n\nAfter wading through and deleting more than a hundred applications, one person caught my attention. My app intentionally asked for very little information. The details of applicants' lives didn't interest me at this point, and it was natural for people to inflate themselves, so any information they might give was be suspect anyway. All I asked for was some basic information I used to weed out those who would never make the cut.\n\nI looked Chloe up on the internet, searching for more information to give me a better idea of the woman. She was attractive, and working backwards from her credentials and graduation dates, I pegged her age somewhere around thirty. It was hard to believe someone so accomplished would have to resort to using a dating app, even mine, but at first glance she appeared to be perfect for my needs. I booted my version of the application she'd used that brought her to my attention and initiated a contact request. Chloe's phone would alert her that I wished to talk to her and asked for permission to contact her, along with a time and phone number that would be convenient for her. I hoped she would respond soon and agree to contact quickly. I was running out of time. \n\nChloe had signed up just last night. It wasn't often that the very person I was looking for happened to fall into my lap just when I needed her, but I wasn't going to look this gift horse in the mouth. Chloe and I were in the same time zone, so ten a.m. in Chicago was ten a.m. in Nashville. Even on a Saturday, she should be up by now.\n\nThe sounds of bare feet padding across my hardwood floor caught my attention. I looked up from my desk and smiled as my latest conquest appeared. Jacob Lanier was tall and muscled like an athlete. He was twenty-two years my junior, but that hadn't prevented him from fucking me into bliss last night. The fact he'd slept to almost ten o'clock probably meant I'd given as good as I'd gotten.\n\n\"Morning, lover,\" he purred. \"Coming back to bed?\"\n\nHe was still bed tossed and wearing nothing but his tight boxer briefs. I couldn't decide if the most attractive thing about him was his rock-hard abs or his equally hard cock. I wouldn't mind another tumble, but I was working under a tight deadline.\n\n\"Sorry, Babe, duty calls. There's orange juice in the 'fridge.\"\n\nHe stepped up behind me, taking my breasts into his big hands as he nuzzled my neck. \"The only thing I want for breakfast is you,\" he rumbled, his voice low and sexy.\n\nI let him continue for a moment. \"Stop. I have work to do.\"\n\n\"All work and no play...\" he continued in his bedroom voice.\n\nI rose from my desk. He tried to pull me into a kiss, but I blocked him with a hand on his muscular chest. \"Be a good boy, let me work now, and maybe tonight you can make me squirm again.\"\n\nHe backed off. \"Who works on a Saturday?\"\n\n\"I do.\"\n\nHe didn't like me giving him the brush-off. \"Fine,\" he growled. \"I need to go anyway.\"\n\n\"I had a good time last night,\" I said softly, trying to soften the blow to his ego. He'd fucked the shit out of me last night, and if he did that to most women, he probably wasn't used to getting turned down for seconds.\n\nHe smiled, but I could tell I'd never hear from him again. I was a little disappointed, but it wasn't unexpected. I'd let him pick me up because he looked like a good candidate to scratch an itch, and he hadn't disappointed.\n\n\"Okay, lover. I'll call you.\"\n\nI smiled. He couldn't even remember my name. \"Want to shower before you go?\"\n\nMy computer dinged, and I looked at it. Chloe had accepted my request for contact. I needed Jacob to go.\n\n\"Join me?\"\n\n\"Can't,\" I replied, nodding at my computer. \"Work.\"\n\n\"Then no.\" He kissed me again, trying to draw me out, but I refused to take the offer. \"I'll call,\" he said as our lips slowly parted. \"I'll let myself out.\"\n\nI didn't know how he was going to call me since I'd never given him my number, but I said nothing. I watched his ass as he walked out of the room before I turned back to my computer, picked up my phone, and dialed, mentally crossing my fingers that Chloe was the person I was looking for.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Heston</center>\n\nI admired the sleek lines of the Oyster 575, fifty-seven feet of pure Heaven. She'd been delivered to me only three weeks ago, and last week I'd christened her and given her a name, Trade Winds, in a nod to my occupation. She was a beautiful, capable craft in gleaming white paint and oiled teak decking. The Oyster 575 wasn't the largest sailing yacht, or the fastest, but she was big enough for my needs and was still small enough that two people could handle her with ease. Push button sailing, some called it, with large electric winches doing the heavy lifting that would allow me to sail the boat by myself if I wanted to.\n\nThe Winds, as I'd taken to calling her, was a true blue-water yacht, capable of circumnavigating the globe should I care to try. Someday I might sail her from my home base here in Miami to Europe, or if I was feeling frisky, San Diego by sailing East, but I wanted to get some experience with her first by doing some island hopping here my back yard.\n\nI'd been sailing for over half my life. I started out in an eight-foot dingy my parents bought me for my tenth birthday. From there I'd moved up to a sixteen-foot Catalina sloop when I turned seventeen. My next stop had been a twenty-seven-foot Catalina sloop when I turned twenty-three. Hedging My Bet had been my escape, and had served me well, but for my thirtieth birthday I was replacing her with Trade Winds.\n\nThe Winds was likely my last boat. She was a beautiful craft built to the highest degree. Anything larger would require a crew to sail, which was something I didn't want. The ocean was where I went to get away from everything, and the last thing I wanted was two or three crewmembers looking to me for direction.\n\nI hefted another of my provision boxes and stepped aboard. Since she was designed to handle the world's oceans, The Winds was a broad, stable craft. Weighing in at over sixty thousand pounds provisioned with a sixteen-foot beam, she shrugged off my added weight without a ripple in the water. I carefully made my way below deck where I lifted the floor in the galley and began to store my supplies. I was provisioning her for a month's sail, though we would likely never spend more than two or three days on the water before making port somewhere. Still, the point of this trip was to learn what The Winds was capable of, and the only way to do that was to actually do it. I'd already loaded all my perishable food. All that was left were the dried and packaged items that would wait patiently for years, if necessary, to be consumed.\n\nI broke down the box and returned to the dock, adding the flattened cardboard to the growing pile waiting on the berth to be tossed to the recycle bin back on shore. I picked up the two cases of dried Ramen Noodles and carried them aboard. The noodles functioned as my emergency meals. They would keep forever and all that was needed to prepare them was hot water, making them perfect for a quick meal in an emergency or when I was battling the elements.\n\nThe Winds wasn't my first blue-water craft. I'd learned through experience that Mother Nature was an unforgiving bitch and to be prepared for every conceivable emergency. I carefully packed the packaged noodles into the spot I'd reserved for them, shuffling items around to get the bilge hatch closed.\n\n\"Hello?\" a woman's voice called from outside.\n\nI made some quick final adjustments to get the hatch closed and hurried out of the cabin, the two empty carboard boxes in my hands.\n\n\"May I help you?\" I asked as I climbed the ladder-like steps to the deck.\n\n\"Yes, I'm looking for berth 13C. Is this it?\"\n\nThe woman was about my age, a single, large, wheeled suitcase sitting on the dock beside her. She was about average in height, perhaps five-six, with raven black hair cut short in an easy-care style. She was wearing a pair of white shorts that weren't daringly short, but revealed plenty of muscular leg, along with a dark blue men's shirt that she'd tied into a knot that allowed her flat stomach to play peek-a-boo, and white canvas deck shoes. The stylish sunglasses perched on her small nose completed her look.\n\n\"You found it.\"\n\n\"Are you Heston?\" she asked.\n\n\"I am.\" I stepped onto the dock and extended my hand. \"Heston Mallard. You must be Chloe.\"\n\nShe smiled and took my hand. \"That's me. Chloe Meyer. Sorry I'm so early. I flew in last night.\" She shrugged. \"Since I was in town, I figured I might as well show up and see if I can do anything to help get ready.\"\n\nI smiled. I liked her voice. It was pleasantly deep for a woman, and it had the ring of confident authority. This was a woman used to being obeyed without question. I broke down the two boxes and added them to the pile before picking up her suitcase and gesturing to The Winds in welcome.\n\n\"I'm still provisioning the boat, but welcome aboard.\"\n\nShe stepped onto the deck, moving carefully until she realized the boat wasn't going to wallow or move under her. \"Nice boat.\"\n\nI smiled to myself. She either didn't know boats or she was the master of understatement. An Oyster yacht was the Rolex of sailboats. \"You sail?\" I asked as I led her down the steps to belowdecks.\n\n\"No. Never been on a... Wow!\" she said, her voice becoming hushed as she pushed her sunglasses up onto her head.\n\nHer subtle exclamation of surprise and appreciation pleased me. After three weeks I was no longer in awe of The Winds, but hearing the hushed reverence in her voice reminded me of how I felt the first time I stepped aboard. I'd toured a 575 before I bought mine, of course, but it was different when it was my boat.\n\n\"This is some boat!\" she gushed, looking around, taking it all in.\n\n\"Not bad. Let's get you squared away and I'll give you the tour.\"\n\nI led her down the two steps to the fore cabin, placing her suitcase on the bed. \"This is your berth.\" I began opening doors and panels, showing her where everything was. \"This is your closet, with more storage down here,\" I said, raising the floor to access the bilge. \"All doors and cabinets are locked, so you'll have to release the catch to open them,\" I explained, showing her how to release the locks that prevented items from flying around in heavy seas. \"Don't leave anything unsecured, ever. Not only is it bad seamanship, you'll spend all your time looking for your stuff if we get into heavy seas.\"\n\nShe nodded in understanding as I opened another door. \"Your head, with shower.\" I squeezed past her after she looked into the small room and opened another door in the hall opposite her head. \"Stowage,\" I explained, stepping aside so she could peek inside.\n\nThe stowage room normally functioned as a small cabin, but I'd had the boat outfitted for maximum seakeeping and was using the room for storing spare parts and other emergency supplies, which meant The Winds had only the main and guest cabins fore and aft with the two small crew cabins refitted to serve other purposes. I led her back to the main cabin.\n\n\"Hand holds,\" I said, grabbing one of two chrome bars that ran along the ceiling and throughout the boat, and pulled my feet off the floor to show her they were plenty strong to use. \"This is the common area,\" I said, sweeping my hand around, taking in the room.\n\nThe common area was the width of the boat and occupied about a third of her length. I led Chloe around a wall. \"Galley with all the amenities.\"\n\nShe looked around, her eyes wide. She probably thought she was signing up for a trip in a dark, dank, windowless ship like she saw in pirate movies, not the bright and sunny cabin with air conditioning, television, engineered stone countertops, dishwasher, refrigerator, microwave, and windows everywhere.\n\nWe stepped out of the galley and paused at a small desk with a large GPS screen, redundant radios, satellite phone, a couple of monitors, and large panel of buttons and switches mounted in a wall that controlled the functions of the boat. \"Chart table. Behind there is my office,\" I said, opening the door on one side of the steps into what was once the second, smaller, crew berth that now served as my office.\n\nI allowed her to look. Inside the small room was a narrow desk, with a laptop securely attached, a duplicate of the satellite phone found at the chart table, and a chair. After she turned away, I led her around the steps that led to the deck, down two steps, and along a short hall.\n\n\"Finally, the master suite.\"\n\nI stepped aside so she could look around. While the common area was in the widest part of the boat, the space was shared by the galley and the relaxation area, but here, in aft of the boat, the entire width was devoted to the suite. The room had a large closet with a private head opposite. With only two cabins, the forward head was for all purposes private, but it was intended as the public head for the entire boat.\n\n\"This is amazing!\" she whispered.\n\n\"I like it. I still have some things to do before we're ready to get underway, if you'd like to unpack. Please, make yourself at home.\"\n\nI followed her out of my suite as she made her way forward. I watched a moment, admiring the way her ass moved, before climbing the steps back to the deck. On the dock, I picked up the old wine case piled with spices and carried them aboard. I was still putting the spices away when Chloe appeared.\n\n\"Anything I can do to help?\"\n\n\"There's one more box of supplies on the dock, if you want to get that.\"\n\nShe nodded and disappeared up the steps. \"God... damn!\" I muttered softly as I watched her ass disappear through the hatch. A moment later she appeared again, moving carefully down the steps, the box in her hands. \"Just set it on the counter,\" I said with a nod. This was my boat and I wanted to put stuff away where I wanted it.",
        "I finished putting the spices away, sliding the basket back into the cabinet and locking the door. She took the box from my hand and disappeared up the steps before I heard the ripping of cardboard as she broke the box down. By the time she returned I had the flour, sugar, coffee, and the rest of the contents of the box stowed.\n\n\"Done!\"\n\n\"So we're ready to go?\" she asked, taking the box from my hand.\n\n\"As soon as we take care of the trash and disconnect from shore power.\"\n\nShe smiled. \"Since I don't know how to do that, I'll take care of the trash. I saw the dumpster on my way in.\"\n\nI nodded. We climbed the steps to the deck, and as she gathered the boxes, I began to disconnect The Winds from the berth so I could set her free. I was pulling in the bumpers that protected The Winds from rubbing against the dock when she returned.\n\n\"Those go in stowage. Can you handle that?\" I asked, nodding at the bumpers I'd piled on the deck.\n\nShe grinned. \"I think I can handle it.\"\n\nShe gathered the thick, pill shaped, bumpers up and disappeared down the steps. I'd discretely check to make sure they were properly secured once we were out of the harbor. I locked in the safety cable to close off the gap in the railing where we were boarding the craft and started the engine.\n\n\"I thought this was a sailboat?\" she said as she appeared from below deck to get the last few bumpers she couldn't handle on her first trip.\n\n\"It is, but it's way easier to maneuver around the marina on engine power,\" I said as I spun the wheel and added a little power, engaging the bow thruster to push the nose away from the dock.\n\nAs Chloe disappeared below again, the boat slowly pivoted away from the dock and I added a little more power to combat the wind trying to push us into the dock. Once I gained a little space, I added more power, the Volvo diesel softly clattering away as we pulled away from the slip. I retracted the bow thruster. Chloe had arrived over two hours early, but I didn't mind. The sooner I was out in blue water the better, as far as I was concerned. We chugged slowly out of the Miami Beach Marina into Government Cut and turned for open water. There was lots of boat traffic, so I stayed on engine power for better control around the idiots who had no business being on the water.\n\n\"Want to take the wheel?\" I asked once we were well out in the channel.\n\nShe grinned. \"No, I don't think that would be a good idea.\"\n\n\"Come on!\" I encouraged. \"It's just like driving your car, and there's nothing to run over.\"\n\n\"You'll be right here?\"\n\n\"I'm not going anywhere. If you're going on this trip with me, you should learn to handle the boat.\" She walked over and placed her hands on the large wheel as I stepped back. \"Steady as she goes,\" I said as I settled into the seat at the other wheel.\n\n\"Aye, aye, Captain!\"\n\nI couldn't help but chuckle. I'd taken women out on Hedging My Bet plenty of times, but never one I'd just met. Compare to the Trade Winds, Hedging My Bet was small and cramped, and though she was rated as a blue water boat, I was never comfortable straying more than a day's sail beyond sight of land. I'd done all the boat handling, and with only one cabin, the women knew they were aboard for one reason. Chloe was no different. She knew why she was here as well as I did, despite what Brooklyn said. I had little doubt Chloe and I would end up fucking before the trip was over, but I wasn't going to pressure her.\n\nShe looked at me and smiled. She'd said she'd never been on a boat before. I could believe it, but unlike most of the women I'd brought aboard, she wasn't afraid of getting her hands dirty. I had to admit, she looked good standing at the wheel, the wind whipping her hair. We were rounding the tip of Miami Beach and she was making small corrections to keep the craft in the center of the channel.\n\n\"Why don't you throttle up,\" I suggested, but giving her no directions on how to see what she would do.\n\nShe grabbed the throttle and advanced it to about fifty percent. She'd obviously been watching me as I worked our way out of the marina. She looked at me for approval.\n\n\"Go ahead to full throttle.\"\n\nShe advanced the lever to its stop, The Winds surging up to about nine knots, it's nominal top speed. For someone who'd claimed to never have been on a boat, she certainly didn't hesitate or act unsure of herself, and I liked that about her.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Chloe</center>\n\nI piloted the Trade Winds into the ocean. I was going to keep going in a due East line, watching the large compass in front of me to keep my course, until Heston told me to turn. I didn't care where we were going, and I'd drive the damn boat all the way to Africa if that's where he wanted to go.\n\nBrooklyn had given me an idea of what I was getting into, but I'd had no idea that Heston's boat would be so beautiful. Above, its gleaming white paint, wooden decks, and sleek lines made the boat sexy as hell, and below it was tastefully decorated in whites, blues, and greys, with massive amounts of highly polished wood and a touch of chrome. I'd tried out the bed in my cabin after I unpacked, flopping back on it like a kid, and like the rest of the boat, it was sumptuous.\n\nBetween college, medical school, and residency, I hadn't taken more than a couple of days off in a row in over twelve years. I was mentally exhausted and desperately needed a vacation to decompress. A month sailing around the Caribbean Sea sounded like exactly what I needed, even if it had been in the hold of some rusty old scow, but the Trade Winds was far from that. Moreover, Heston Mallard was a stone-cold honey.\n\nBrooklyn had told me Heston was my age and handsome, but she'd severely undersold him. He looked like he'd stepped out of the pages of a fashion magazine. Part of his attraction may have been the fact that it'd been over a year since I'd had my needs met by something that didn't run on batteries, but there was no denying he was hot as shit. He was clean shaven, like I preferred my men, with his light brown hair cut stylishly long. His strong jaw, dark eyes, and deep mellow voice called to me, while his shorts showed off his tanned muscular legs, and his loose-fitting shirt couldn't entirely mask what was hidden beneath. If he didn't turn out to be a total dick I was going to find out if his bedroom skills could live up to the promise his appearance made, and soon. Like maybe tonight. The way he looked, he'd probably had a lot of practice, and I'd let him put that practice to use on me as often as he wanted.\n\nAfter our interview, when Brooklyn asked me if I was interested in joining Heston for a month at sea, I'd leapt at the chance, and while I could certainly afford to pay my way, having all my expenses taken care of was a bonus. I'd been looking forward to this trip for three weeks, and the last week had been torture as minutes had crawled by like days.\n\nI'd worked furiously to clear my calendar, but I'd still had to threaten to quit before the head of surgery would allow me to take an entire month off. I'd left Nashville for Miami, and though I wasn't supposed to meet Heston until about now, I hadn't been able to sleep and had called for an Uber at eight.\n\n\"Why don't you throttle back and we'll switch over to sail,\" Heston said, pulling me out of my daydream.\n\nI slowly pulled the throttle back until the motor was idling. \"Want me to switch off the engine?\"\n\n\"Do you know how?\"\n\n\"Is it the key right here labeled 'Start?'\" I asked, pointing to the switch on the side of the console.\n\nHe grinned. \"That's the one, but leave the engine running so we're not drawing off the batteries. Bump the RPMs up to about eight hundred and disengage the prop.\"\n\nI did as I was told, pulling the big lever marked F-N-R into the center position and then easing the throttle forward until the needle hovered just below one on the dial. Engine set, I watched as he worked at the duplicate set of controls on the other side of the boat. As I watched, sails appeared from the mast, and with the soft whine of electric motors, began to deploy. He scampered along the edge of the raised cabin in the center of the boat, doing something with ropes at the front of the boat, watching a moment as the sails rose, before hurrying back to the console.\n\nAs the sails deployed, the Trade Winds began to slowly rotate about her center. I spun the wheel to try to keep the boat pointed straight, but my efforts were in vain. Without the propeller spinning, turning the wheel didn't appear to do anything. With more thumps and electric whines, the sails began to move, rotating to the side, flapping and fluffing before snapping taunt.\n\nThe wheel in my hand started to move. I first gripped it tight but realized it was Heston trying to spin the wheel and I released it. The boat came about as it surged through the water while heeling over to the side. I grabbed the edge of the pilot console, holding on for life in case the boat capsized, proud of myself for not crying out in alarm. The boat soon settled and began to move smoothly through the water. The engine fell silent, and the only noise that remained was the hiss of the boat cutting the water and the soft creaking of the sails.\n\nHe grinned at me. \"You can turn loose now.\"\n\nI released my death grip. \"I thought it was going to roll over.\"\n\nHe shook his head. \"Impossible. Almost impossible,\" he amended. \"There's almost twenty thousand pounds of weight in the keel, and the harder over she goes, the harder it is to go over any farther.\"\n\nThe deck was canted over, making crossing to Heston an uphill walk, the deck tilting like a fun house floor. I stood beside him, leaning into the angle of the boat.\n\n\"Does it always roll over to the side like this?\"\n\nHe smiled. \"This isn't too bad, only a few degrees. If we were tacking in a heavy wind, she'll almost put her deck in the water.\"\n\n\"Tacking?\" I'd heard the term but didn't know what it meant, and I didn't like the thought of the boat rolling so far over on its side that it's deck would be in the water. That seemed like something that would happen just before we were swimming.\n\nHe nodded. \"Tacking. Sailing when the wind is in your face. Jibing is when the wind is at your back.\"\n\nI stared at him, trying to decide if he was teasing me. \"How can you sail forward, into the wind? That doesn't make sense.\"\n\n\"It doesn't?\" I shook my head. \"Take a minute. Where's the breeze now?\"\n\nI paused and frowned as I pointed. The wind was in my face, but I thought it was from the movement of the boat. \"That way.\"\n\nHe grinned. \"We're tacking now. We obviously can't sail directly into the wind, so we turn and allow the wind to push us sideways but in the general direction we want to go. Then we...\" He spun the wheel and the boat turned. The boom the sail was attached to swung over my head before snapping taut against some ropes as the boat rolled upright and the sails filled with air again. Now the breeze was coming from the other side of the boat and the boat had heeled over on its other side. \"We tack,\" he said, completing his sentence. \"Now we're moving at almost ninety degrees to our previous course.\"\n\n\"I don't understand.\"\n\n\"Don't make it harder than it is,\" he explained. \"Think of it this way. Have you ever played pool?\" I shook my head. He rolled his eyes in teasing exasperation. \"But you understand the concept, right?\" I nodded. \"Okay. If you were to shoot the cue ball into a rail at an angle from one end of the table, it would bounce from side to side, but eventually reach the other end, right? We're working the wind the same way. Every time we turn, it's like we're bouncing off a rail, but we're still headed in the general direction we want to go... the other end of the table, or in our case, Bimini.\"\n\nI began to nod, his explanation making sense. \"Okay, I get it, but what keeps us from simply going sideways with the wind?\"\n\n\"The design of the hull. It's easier to go forward than sideways, so the boat takes the path of least resistance.\"\n\n\"I get it... I think.\"\n\n\"It's what make sailing so intoxicating. You don't simply point the boat where you want to go and push the throttles forward, you have to feel the boat and understand how she moves. The ocean is alive and organic, and you have to learn to read it. You can sail for a lifetime and never truly master it.\" He paused. \"Want to try your hand?\"\n\nDid I? \"Sure.\"\n\nHe stepped away from the wheel, holding it until I gripped it. I could instantly feel the difference. Before, when we were using the motor, I simply steered the boat, but now I could feel the boat tugging at the wheel, wanting to turn away from the wind, the wheel squirming in my hands as I made small adjustments to keep the marine compass in the console pointed at SE, where it was when I took over.\n\n\"Wind's changing. We need to tack.\"\n\n\"North East?\" I asked as I began to turn the wheel.\n\n\"Yes. We want to keep heading due East.\"\n\n\"Where did you say we going?\" I asked as I overshot my direction and corrected back, the sails snapping and popping at my rough handling of the boat. I remembered he told me, but I was so focused on the idea of a pool ball caroming its way down the table I hadn't retained what he said.\n\n\"Alice Town, Bimini, Bahamas. I hope you brought your passport.\"\n\n\"In my luggage.\"\n\nI didn't understand sailing at all, but I could follow directions. I'd turn when he said turn, and I soon began to get a feel for the boat. Within a couple of hours, I could tack and hit my course smoothly almost every time. I began to relax at the wheel, and The Winds appreciated my smoother boat handling, the sails filling with air without all the flapping and jerking when I first took over the helm.\n\n\"Ready for lunch?\" he asked.\n\nHe was still wearing his shirt, but he'd opened the front. It was damned hard to pay attention to what I was doing as the breeze billowed his shirt, allowing me to catch peeks of his washboard stomach and sculptured chest. It took a moment, but his words finally penetrated, and the thought of being left alone at the helm snapped me out of my daydream.\n\n\"Lunch?\" I squeaked.\n\n\"Aren't you hungry?\"\n\n\"Well, yeah, but I'm not ready to solo.\"\n\nHe chuckled. \"I think you're doing fine, for a landlubber. But we'll pull in the sails so the boat will settle. Eating on a sloping table isn't much fun.\"\n\nI relaxed and smiled. \"Then sure, I could eat something.\" What I'd like to eat is standing right here beside me, I said to myself.\n\nHe moved to the other console, the one I'd been using when I piloted us out of Meloy Channel. With more pushing of buttons, the sails drooped, and the boat slowed and righted itself. As we slowed, he hurried back and forth along the boat, arranging the sails into neat folds. I expected the sails to tuck away into their masts, or booms, or spars, or whatever they were called, as they'd been when we started, but once he had them the way he wanted them, he left them exposed. I guess since we were going to use them again there was no point in putting them away.\n\n\"That's it?\" I asked as the boat coasted to a stop and began to bob slowly.\n\n\"That's it. Let's go below.\"\n\nHe led me belowdecks and headed straight for the kitchen... galley, I reminded myself. The toilet was the head, the kitchen was the galley, and the bedroom was a berth.\n\n\"Anything I can do to help?\"\n\n\"You can slice the tomato.\"\n\nWe worked in the kitchen. It was tight quarters, but there was room as I worked on one side of the sink, slicing tomato, while he worked on the other, slicing white meat chicken. As he mashed up and seasoned an avocado, I toasted bread before he slapped it all together for sandwiches. We settled at the table in the relaxation area as he set a pair of pilsner beers in front of us. He hadn't asked if I wanted a beer, but maybe drinking beer with a meal was a sailing tradition or something.\n\n\"Since we're going to be together for the next month, tell me about yourself,\" I suggested as I bit into my sandwich. \"Good,\" I mumbled as I chewed, hoisting the sandwich in acknowledgment.\n\nHe chewed a moment and washed the bite down. \"Not much to tell. I run a hedge fund in Miami, I work a lot, and I enjoy sailing.\"\n\n\"That's it? That's all there is to Heston Mallard?\"\n\n\"Pretty much. In fact, after lunch, I'm going to check in with the office. We shorted Disney two hundred million, and I want to see if our researchers missed the mark.\"\n\n\"I'm not sure I know what that means, but I thought you were on vacation.\"\n\n\"I don't take vacations. Shorting means we're betting the price of Disney's stock is going to go down, so we sold shares we'd don't have at a higher price, betting we can buy them back later at a lower price later, and pocket the difference.\"\n\nI stared at him. I assumed what he was doing was legal, but... \"It sounds risky,\" I said softly.\n\n\"It is. If the price doesn't drop, we'll have to buy the shares back and we make nothing. Even if it goes up, we still have to buy the stock, so we could lose a lot of money, but with great risk come great reward.\"\n\n\"You're a fan of Thomas Jefferson?\"\n\n\"Not particularly, why?\"\n\nI shrugged. \"He's the one who said, 'With great risk comes great reward.' Since you quoted him, I thought maybe you were a fan of his.\"\n\nHe chuckled. \"No. I didn't even know he was the one who first said it, but it applies. We have about six billion invested in the market, and we could lose it all like that,\" he said with a snap of his fingers, \"with a few bad trades. But when it goes right...\" He smiled, but it was the smile of a cat watching a mouse.\n\n\"So why do you do it?\"\n\n\"Because I like the thrill and challenge. If this Disney deal goes the way we predict, we could make anywhere from two to three million dollars profit in only a couple of days, and we're working hundreds of deals like that all the time.\"\n\n\"So it's all about the money?\"\n\nHe grinned again. \"Isn't it always? What about you?\"\n\n\"I'm a surgeon at Vanderbilt Children's Hospital in Nashville.\"\n\n\"What kind of surgery do you perform?\"\n\n\"Ocular.\"\n\n\"Ocular, like in the eye? Lasik?\"\n\n\"Yes, as in eye, but no, not Lasik. I do things like corneal transplants, vitrectomies, repair retinal detachments, things like that.\"\n\nHe paused as he watched me for a moment. \"Okay, I'm impressed.\"\n\nI smiled. Time to toss out something else that always seemed to impress males. \"I'm also a team doctor for the Tennessee Titans.\"\n\n\"No kidding?\" he asked, his surprise clear in his tone.\n\n\"No kidding. I work with their players if they receive eye damage.\"\n\n\"Saved anybody's eye?\"\n\n\"Once. Remember Ryan Demarkle, their quarterback who was taken out of the game last year after a sack?\"\n\n\"I think so. Ended his career, right?\"\n\nI nodded. \"That was a nasty injury. We were in surgery nine hours repairing the damage. He lost about twenty percent of his vision in his left eye, due to scarring, but was lucky he didn't lose his sight in that eye all together.\"\n\nHe grunted. \"I guess compared to that, playing the stock market seems kind of shallow.\"\n\nI smiled as I shrugged. \"Everyone measures their successes differently.\" I glanced around. \"I'm afraid to ask how much this boat cost, but probably more than I can afford, so who am I to judge?\"\n\n\"A shade under two million, delivered.\"\n\nMy heart skipped a couple of beats. \"Wow,\" I breathed. Trade Winds cost a little more than six times the amount of my house.\n\n\"It's just money.\"\n\n\"Says the guy with the two-million-dollar yacht.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Heston</center>\n\nAfter lunch, I spent twenty minutes or so working, using The Winds' satellite phone to check in with Mallard Investments. Mallard Investments played in the entertainment and technology fields, and I had the best research department money could buy. Nikki, the nerdy chick in research that watched the movie industry, had forecast Disney was going to tank based on news of back to back failures of two movies in one of their tent-pole franchises. She'd been right. With the opening weekend numbers coming in and the movie severely underperforming, as she'd predicted, the price of Disney stock was falling like a dropped rock.",
        "The price had almost reached our trigger point, the point where I said we were to start buying the stock back, but I'd put a hold on that. For every half-point the stock dropped, we made another eight hundred thousand, and I was rolling the dice it was going to continue down. After consulting with my team, I set a new trigger point, down two more points from where it was and left orders for the team to buy every share they could get their hands on once it hit the trigger.\n\nI was betting between five and seven hundred million dollars that Nikki would be right and Disney's next entry into another of their tent-pole movie franchises was going to be a monster hit that would drive their stock back up. If Nikki was wrong, we would take it in the ass, and hard, but if she was right... I smiled at the thought. We could net almost a half-billion dollars if the swing was at the outer limit of our projections.\n\nI hung up the phone, almost tingling with excitement. If Mallard Investments grossed a billion dollars from this deal, that would put another hundred million in my pocket for my management fees, along with another three hundred million from my own investments in Mallard. And that was from only one deal. Even if we didn't realize the full potential gain, we'd more than recover our investment and make a handsome return for our investors.\n\nI swiveled away from the desk and stood. If I were back in Miami, when I left the office today, I'd find some fresh pussy and be balls deep and dripping sweat by nine o'clock. Nothing made me harder or hornier than making a shitload of money, and today I was staring at a potential fuck-ton, which was even more.\n\nI took a moment to compose myself. Brooklyn had made it clear that Chloe wasn't a whore and whether she slept with me or not was entirely up to her. I'd never forced a woman in my life, and I wasn't about to start now, but if she was willing, I'd ride her tonight until she couldn't walk. I used the restroom to try to take care of the rogue boner threatening to burgeon. Finished, I washed my hands, cleared my throat, and made my way to abovedeck.\n\nI froze halfway up the ladder. After we'd tidied up from lunch, I thought Chloe had gone to abovedeck. She had, but she'd obviously made a stop in her berth first. She'd changed. Gone were the shorts and knotted shirt, replaced by a bathing suit. The suit, a one piece, caressed her figure like a lover, the vibrant blue side panels of the deep black suit highlighting her athletic build. Her breasts weren't as large as some women I'd fucked, though there was no mistaking her for all woman, but her legs were outstanding.\n\nShe hadn't realized I was watching. She was lying on her back on a towel stretched across the teak decking at the rear of the boat, her sunglasses over her eyes, one leg up to form an 'A' as she smiled dreamily at the sky. Her skin was pale and glistening slightly, probably from sunscreen. She was a doctor. She knew the risks of exposure to the blazing southern sun.\n\nThe boner was coming back, but it wasn't a rogue this time. I knew exactly what was causing it... the fucking goddess on my boat. I dropped down a couple of steps until I could no longer see her.\n\n\"Chloe? You up here?\" I called before I started up the steps again.\n\n\"Right here,\" she said. She didn't seem the least embarrassed or shy, and why should she? She was stunningly beautiful. \"Are you ready to get underway again? Do I need to move?\"\n\n\"Yes. We need to get moving if we're going to make Bimini today, but no, you don't have to move.\"\n\n\"Do we have to?\" she asked, not moving.\n\n\"Have to what?\"\n\n\"Make Bimini today.\"\n\n\"No, I guess not. I thought I'd take you to dinner at the best restaurant in Alice Town.\"\n\nShe remained completely still. \"If you want. To be honest, I'm pretty content right here.\"\n\nI watched her. I was pretty content doing what I was doing as well. \"How about I get us underway, and you keep doing what you're doing. Just don't get too much sun.\"\n\n\"SPF 50, baby,\" she said, a smile tickling her lips. She sighed and then rolled over. \"I'll move, but before I do, can you do my back?\"\n\nShe wasn't making it easy on me and my cock was trying to tent my shorts. \"Sure.\"\n\nShe stretched like a cat in the sun, and I sat down on the swimming platform beside her, squirted some of the lotion from her bottle into my hand, and slowly smeared it on her back. I kept my hands in the center of her back, where her suit was open, and then moved to her legs. I did one leg, but as I worked my way up on the second one, I became a little more daring, reaching deeper between her legs and running my fingers under the edge of her suit. She didn't protest, so I became a little bolder still.\n\n\"Hands,\" she warned softly, but made no move to stop me.\n\nI smiled as I pulled back on my touching, but only a little. \"Finished.\"\n\nShe rolled over, sat up, and smiled at me. \"Thank you.\"\n\n\"The pleasure was mine, I assure you.\"\n\nHer smile became playful as she rose to her feet in the pilot area and then relaxed into the pilot seat at the other wheel. She'd warned me off as I smeared her with lotion, but that smile suggested her warning had been more of a test than an actual objection, and she was teasing me with what could be. As she watched, I hoisted the sails and skippered the boat the rest of the way to Bimini, about fifty nautical miles East of Miami.\n\nSailboats were like women. Each one had her own personality, and the short run to Bimini was perfect for me to get a feel for The Winds. Where Hedging My Bet liked a firm hand and responded best with slightly rough treatment, Trade Winds was more refined and responded best to a light hand and a smooth, gentle touch. While The Winds could do about nine knots in perfect conditions, we didn't have perfect conditions, and it took more than seven hours to cover the fifty miles.\n\nChloe was a quick study, watching what I did with the rigging and asking questions. After a couple of hours, she began to handle the ropes under my direction to adjust the trim of the boat. The winds had eased with the heating of the day and we were inching along at three to five knots, perfect conditions for learning to sail, with enough breeze to keep up moving, but light enough that the boat wasn't difficult to handle. She was nowhere near ready to solo, but she wasn't totally incompetent either.\n\nIt was nearly dark as we rounded the south end of Bimini Island. The winds were light and variable, making for slow progress, but I was enjoying the slow cruise, reading the ocean and teasing the boat into motion.\n\nWhen the marina was in sight, I furled the sails and we switched to engine power. I allowed her to pilot the boat until we reached the edge of the marina, where I took over. I trusted her out in open water, but she wasn't ready to conn the boat in the tight confines of a marina.\n\nHaving a bow thruster made easing The Winds into her berth a snap, and Chloe was hanging bumpers as I nestled the boat up to the dock. As I cut power, she scampered to the dock and tied us off using the over under motion on the cleat I'd shown her. The bow secured, I did the same to the stern, and we were docked.\n\nShe stretched and smiled. \"My inner ear thinks we're still on the ocean.\"\n\n\"The land moving?\" I teased.\n\n\"A little. What's the plan?\"\n\n\"Dinner at Cheryl's. I eat there every time I come here. The seafood's fantastic.\"\n\n\"I need to change.\"\n\n\"No you don't. This is Alice Town. I'm going like this. Throw on a shirt and you'll fit right in.\"\n\nShe hesitated and then smiled. \"I'm liking this place better all the time. Give me a couple of minutes.\" She disappeared below and returned a moment later with a light and breezy wrap around her waist that complimented her swimsuit. \"So, how do we get there?\"\n\n\"We walk.\"\n\n\"Walk? How far is it?\"\n\n\"Other side of the island. Ten minutes or so.\"\n\n\"The other side of the island is a ten-minute walk?\"\n\nI grinned. \"Yeah. The whole island is only seven miles long and about five hundred feet wide. You could walk around the entire island in about eight hours.\" I could tell she wasn't sure she believed me. \"If you don't believe me, we can do it tomorrow, so you can see for yourself.\"\n\nShe shook her head. \"No, I believe you. It's just hard to wrap my head around the idea that people live on such a small sliver of land.\"\n\n\"All part of the Bahamas,\" I said, leading her off the boat. \"I forget how many islands make up the Bahamas, but it's at least five or six hundred, I think. We'll see a lot of them before we go back to Miami.\"\n\nI led her to Cheryl's, and though they were busy, we quickly had a table on the patio.\n\nShe took a deep breath and let it out slowly. \"It's hard to believe it was forty-eight degrees and raining when I left Nashville, and now I'm sitting outside in my bathing suit.\"\n\n\"I love it here.\"\n\n\"Isn't it hot in the summer?\"\n\n\"Not on the ocean.\"\n\n\"You go out often?\"\n\n\"As often as I can.\"\n\nShe leaned back in her chair. \"Sounds wonderful. It seems like all I do is work.\"\n\n\"Same here, but I love what I do, so it's not really like work.\"\n\n\"I feel the same, but I can't do what I do from the deck of a boat like you can.\"\n\nI nodded slowly. \"Yeah... but then I can't save some guy's eyesight, either. There are tradeoffs.\"\n\n\"Seems like there should be a balance, though.\"\n\n\"So take some time for yourself,\" I suggested.\n\n\"Easier said than done. If some little kid comes in with a BB in his eye, I can't simple say, 'Sorry kid. I have vacation scheduled.'\"\n\nI paused as food was placed in front of us. I'd suggested she try the fried conch, but I wouldn't tell what it was. She looked at the food on her plate dubiously.\n\n\"Try it before you turn up your nose. If you don't like it, I'll trade you my fish for it.\"\n\nShe took a tentative bite, her eyes opening wider as she chewed. \"No, I'll keep this, thanks.\"\n\nI smiled. \"I thought you'd like it. I get it a lot,\" I said as I pointed at her plate with my fork. I paused as I cut my fish. \"You're here now,\" I said, returning to our earlier subject. \"You just have to make the time. Surely you aren't the only surgeon at... wherever you said you work.\"\n\n\"Vanderbilt Children's Hospital, or VCH as we call it. No, and I'm not even the only ocular surgeon. Doctor Wescott is also there, but...\" She shrugged.\n\n\"But what?\"\n\nShe looked at her plate. \"I don't know. I feel guilty when I'm away.\"\n\n\"You feel guilty now?\"\n\nShe seemed to slump. \"I didn't, not while we were on the boat, but thinking about it now, yeah, a little.\"\n\n\"Then stop. Everyone deserves a break. Hell, even I take breaks.\"\n\n\"Like today?\"\n\nI nodded. \"Yeah. Twenty minutes on the phone, that's not so bad. It keeps me in the loop, and my people can reach me anytime if there's an emergency.\"\n\nShe took a deep breath and let it out slowly. \"But I can't do that.\"\n\n\"I know, which is why when you're away, you need to get away. If you don't, you're going to burn out, and then what use are you going to be to anyone?\" She stared at her plate, pushing her conch around with her fork. \"You're a big girl, and I don't mean to lecture, but what's going to happen to all those people that need you if you snap?\"\n\n\"I'm holding it together.\"\n\n\"Are you? I've only known you for a day, but you're not the same person right now you were just three hours ago, when we were out on the boat. You need to leave all that shit in Nashville. It'll be there when you get back.\"\n\n\"Easier said than done.\"\n\n\"Maybe,\" I said with a smile, \"but you've got a month to practice.\"\n\nShe sniffed out a slightly sad laugh. \"I guess.\"\n\nWe finished our meal and walked along the beach, talking about whatever came up, before turning to cross the island and return to The Winds. Her troubles were still weighing on her. I worked hard, and I expected my people to work hard, but I didn't expect them to work all the time. Company policy said every employee had to take at least ten days of vacation a year, otherwise some of my people would be like Chloe and never take a day off. That wasn't healthy, and considering how much money I was throwing around, I needed my people at the top of their game all the time.\n\nWe returned to The Winds, and we spent a long time simply talking while sipping a dessert wine. She was a truly dedicated professional, usually working seven days a week. I could hear a sadness in her voice. She was burning out, and I suspected it would soon begin to affect her performance in the surgical suite.\n\nI admired her dedication, but I'd seen friends and colleagues go through what she was starting to go through. In the high stress world of investing, a lot of people burned out early, sometimes spectacularly so. When I was still working for a brokerage firm, one of the partners swallowed a shotgun shell. That was an eye opener for me. I might check in every day I was out on the water, but the rest of the time was for me.\n\n\"Thank you,\" she said softly through a yawn.\n\n\"For what?\"\n\n\"For talking to me. It's nice to get someone else's perspective.\"\n\nI shrugged. \"My opinion is worth exactly what you paid for it, but you do need to think about it. It sounds like you have an amazing career ahead of you... if you don't destroy yourself in the process.\"\n\n\"Maybe I just need to buy a sailboat,\" she said with a slightly sad smile.\n\n\"Maybe you do. Nothing like trying to read the wind and waves to take your mind off work.\"\n\nShe yawned again. \"I think I'm ready for bed. Good night,\" she said softly as she slid out from behind the table.\n\nI rose with her. \"Good night,\" I murmured as I gently pulled her close. Like when I was smearing her with lotion, she didn't object, so I kissed her slowly.\n\nI pulled back from the kiss, watching her face as she slowly opened her eyes. She made no move to disengage, so I kissed her again, more fully this time. She responded, pressing herself more firmly against me as the kiss came alive. I devoured her, the kiss deepening as she offered me her tongue. I took it, our tongues engaging in an erotic dance. I cupped her breast, and she moaned softly into my mouth before pulling slowly back. I was crushed with disappointment. I held her close, resisting her gentle push, silently coaxing her to continue, but as she pushed harder, I let her go.\n\n\"I'm sorry,\" she murmured, licking her lips as she back slowly away. \"I'm sorry,\" she repeated, as if she were debating with herself, standing just out of reach. She looked at her feet. \"I'll see you in the morning,\" she murmured before she turned and walked away.\n\nI watched until she disappeared into her berth, pausing at the door to watch me before shutting it slowly. \"Fuck,\" I sneered quietly so she wouldn't hear my frustration and disappointment.\n\nI turned for my own cabin. I had a raging hard on from the kiss, but by the time I tumbled into bed, I'd softened considerably. She'd wanted me, I could sense it, and I'd damned sure wanted her. I heaved a sigh. Maybe tomorrow.\n\nIt took a while, the kiss playing in my mind like looped movie, but I finally drifted into the darkness of sleep. It felt like I'd just dropped off when there was a tickle at my lips. I wiped at my face, but the tickle returned, and I opened my eyes. Chloe was standing at the side of my bed. I could tell she was wearing a sheer nothingness, but in the dimness of the cabin, I couldn't tell what it looked like.\n\n\"Chloe? Is everything alright?\"\n\nShe kissed me again, her lips brushing mine with gossamer lightness. \"Permission to come aboard, Captain,\" she whispered.\n\nI smiled and glanced at the clock as I moved over to make room. It was 1:03. Technically it was morning. \"Permission granted,\" I murmured as I flipped the sheet back in invitation.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Chloe</center>\n\nLying on the swimming deck, I smiled at the sun as Trade Winds surged through the water. I had never been so relaxed in my life. It had been a week since I'd visited Heston, Duck as I'd started calling him, in his berth. After our talk that first night, I'd gone to my cabin and cried into my pillow so he wouldn't hear me. I'd wept for what I'd missed, was missing, and would miss if my life continued on the same path. I loved my job, and I wouldn't trade what I did for anything in the world, but Duck's words had cut open something inside me and all the unhappiness, regrets, and frustrations had to go somewhere.\n\nAfter I'd cried myself out, I hadn't been able to sleep. I wanted him so badly. I'd brought Buzz, my toyfriend, but I didn't want him. I wanted Duck. Hell, at that moment, I'd have taken any halfway decent guy that would fuck me until I slept and who would hold me until I woke up again. Heston was more than decent. Not only was he heart stopping, panty dropping, handsome, but he also was understanding. He seemed to comprehend and appreciate my dedication, admitting he was as committed to his career as I was to mine, but he'd found a balance, a work/life, balance that had eluded me.\n\nI felt the boat roll as Duck jibed. I sighed. Over the past week, the hot Caribbean sun had burned away my troubles and was slowly turning my pale white skin to a golden, sun-kissed brown. Between the sun during the day and Duck at night... My smile spread. \n\nThe first night, when I joined Duck in his cabin, I'd come aboard alright. I'd ridden his mast off and on, and in various positions, for almost an hour. When he wasn't fucking me, he was eating me, and I had three orgasms. I was a quiet fuck, so there was no screaming, but my God, the orgasms that man had given me. The Winds' air conditioning was off, with the windows open to allow in the fresh sea air, but when he'd finally orgasmed, we were dripping with sweat. I'd never worked up a sweat fucking before, and it was the most erotic thing I'd ever done.\n\nWe'd slept after that, but I woke him the next morning with his cock in my mouth, and we'd had a rematch. I'd only come once that time, but that was okay, because after a short nap, he'd fucked me to another orgasm in the tiny shower.\n\nThe stall was barely big enough for both of us to squeeze in there, but that suited me just fine. I'd pinned his ass against the wall with his cock inside my womanhood, squirming my ass against him until he came, causing him to grunt and buck as I continued to fuck him. I thought I'd finally bested him until he took over the fucking with a growl, pinning me to the wall as he pounded the shit out of me while muttering in my ear about how hard he was going to make me come. He'd been right, and I'd come so hard my legs had weakened. Had he not pinned to the wall with his body, his breath hot and harsh in my ear, I'm certain I would have fallen.\n\nI rolled my head to my left and watched Duck for a moment. He was at the helm, guiding the boat, shirtless, wearing only a bathing suit. My smile widened as I closed my eyes and turned my face to the sky again. I'd been all but dripping with desire ever since. We fucked at least twice a day, once in the morning after we woke up and again at night before we went to sleep. Sometimes we'd throw in another one or two romps during the day just because we could.\n\n\"Where are we?\" I asked without looking at him.\n\n\"Approaching Ship Channel Cay.\"\n\nI smiled. I didn't know why I bothered to ask the question. Even after he answered I still didn't know where we were. We were, as he called it, island hopping. We'd sail to some deserted outcropping of land, find a sheltered cove, and spend the night on the boat. The Winds was taking good care of us. We hadn't been in port in three days, and I was in no hurry to change that.\n\n\"We stopping here?\" I asked as I rolled to my feet and sauntered up behind him.",
        "\"No. Too shallow, but according to the charts, there's another cay, Beacon Cay, about three miles North that has deeper waters closer in.\"\n\n\"Mmmm...\" I purred as I pressed myself against his back and nibbled at his neck. \"I like it deep.\"\n\n\"I know you do,\" he said with a smile, turning his head to offer me his lips.\n\nI was turning into a regular sex kitten, saying things to Duck I'd never said to anyone before. The first time I'd said something risqu\u00e9, the words slipping out unexpectedly, I'd been embarrassed, but he'd responded in kind. He seemed to enjoy our verbal jousting, and now I did as well. Best of all, the wordplay kept me on a slow boil, so when we got down to business, I often came with explosive force as all my pent-up desire was released.\n\nI pulled back from the kiss. In the past week, my imagination had started running wild, and a month ago I would have been shocked at what I was capable of. Yesterday, as I soaked up the sun in the middle of the ocean, he'd dropped the sails, along with his bathing suit, and without warning had stripped me of my bathing suit, slathered us with oil, and proceeded to fuck the shit out of me right there on deck. Nobody had happened by, but if anyone had been watching on a spy satellite, we'd given them a hell of a show as he took me in one position after another all over the back half of the boat.\n\nNow we were looking for a quiet, uninhabited, sandy beach where we could get The Winds in close. Last night, as we were drifting to sleep, I'd confessed to him I wanted to find an uninhabited island for him to fuck me on.\n\nThe breeze was dropping as we crossed the leeward side of the narrow finger of land, the boat slowing as the small island broke up the wind. \"I'll go make us some lunch. If you're right, you're going to need your strength.\"\n\n\"Promises, promises,\" he replied with a smile.\n\nI went below and dug through our supplies. I was looking for something light. If Beacon Cay was our stopping point, it was only thirty to forty-five minutes away, and I didn't want to fill full.\n\nI decided on a salad. I began tearing lettuce, chopping tomato and boiled eggs, and then added cranberries and leftover boiled shrimp from our meal the night before. I drizzled the contents of the bowls with dressing and carried them, along with two waters, to the helm.\n\nHeston held the wheel with his leg as he took his bowl. \"Beacon Cay has a derelict lighthouse on it,\" he said as he crunched through his meal.\n\n\"Does that mean...?\" I asked, leaving the question unspoken.\n\n\"No. But I thought you might want to see it.\"\n\n\"Have you been there?\"\n\n\"No. Well, I've seen it from the water, but I've never stopped and explored.\"\n\n\"Sound like fun,\" I said, not specifying which part of our stop I meant.\n\nHe nodded, making a slight course correction. \"I'm looking forward to it.\"\n\nA tingle passed through me at the way he smiled at me. He was so damned sexy I almost couldn't stand it. I knew it was nothing but a vacation fling, but the only thing I wanted to do was ride the ocean and his cock. If it wasn't for the fact that I was enjoying the sailing almost as much as the fucking, we'd never leave his bed.\n\nAs we finished our meal, I could see a splotch of brown and green appear in the distance. Duck corrected our course as we made our way toward the cay. I took our bowls and went belowdecks, quickly washing, drying, and returning them to their place. When I returned to abovedeck, I could see the rocky ruins of the long-abandoned lighthouse in the distance. When we got in close, he lowered the sails, and we slowly motored in, Duck keeping a close eye on the depth gauge so we wouldn't run aground.\n\n\"This is it,\" he said, stopping the motor and dropping anchor to hold us in place.\n\nIt was still at least three hundred yards to the rocky outcropping, and I couldn't see anything that looked like a beach. While it would be interesting to see the ruins, what I really wanted to do would apparently have to wait. I sucked it up so I wouldn't sound like a whiny child.\n\n\"How do we get there?\"\n\n\"You can swim, can't you?\"\n\nHe knew I could. We'd been swimming a couple of times already. I wasn't as strong a swimmer as he was, but I knew I could make it that far.\n\n\"Sure.\"\n\nHe gave a firm nod. \"Then let's go. I want to be back before dark.\"\n\nHow long did he think this would take? We put our shoes in a mesh bag tied to his waist and stepped into the water from the platform at the back of the boat. Swimming in the ocean was easier than swimming in fresh water, and I stroked confidently toward land. I'd started calling Heston Duck because of his last name, but it could have equally applied for his swimming skills. While he was a much stronger swimmer than I was and could have easily pulled away from me, he held back and paced me all the way to the cay. We were still twenty or thirty feet from land when the water became shallow enough to wade ashore. I was panting, but Duck wasn't even breathing hard.\n\nWe paused to put on our shoes so the coral wouldn't cut our feet to bloody ribbons before we made our way to the ruined lighthouse. There wasn't a lot to see, some stone walls that formed a circle about six or seven feet tall and perhaps twenty feet in diameter, walls that were obviously once part of the lighthouse. There were more stones strewn about that were likely more of the remains, and what appeared to have once been a hearth a short distance away that had probably been part of the lightkeeper's house. That was all there was. The entire cay was less than a city block in size, and I couldn't imagine living and working here alone, tending the light that helped keep ships safe, for perhaps months at a time.\n\nThe tide was starting to go out and a finger of sand was beginning to appear around the edge of the cay. My heart began to beat faster as my imagination began to ramp up. I walked up the stone staircase that hugged the outer wall of the lighthouse until I reached the top. Standing on the last step looking over the ruined wall, I could see Trade Winds bobbing in the distance, and in the opposite direction, a huge ocean-going container ship on the horizon. Nothing else could be seen, not even Ship Channel Cay, even though it was only three miles away.\n\nI breathed deep, drinking in the fresh ocean air. I looked around again. The sandy beach continued to grow as the ocean receded. \"Tide's going out,\" I observed, looking down to where Duck was standing watching me.\n\n\"I know.\"\n\n\"The Winds will be okay, won't she?\"\n\nHe nodded. \"She'll be fine. I made sure to stay far enough out to account for the tide.\"\n\nI smiled down at him. \"Can we go look for shells?\"\n\n\"If you want.\"\n\nI wasn't fooling him. He knew looking for shells was just an excuse to go down to the beach. I began to flood in anticipation. We might be here until dark after all.\n\nI carefully made my way down the steps and took his hand. He led me away from Trade Winds to the opposite side of the cay where the beach was wider. We carefully wandered down to the sand and strolled along, hand in hand, the ocean breeze taking the edge off the heat from the blazing sun.\n\nWe walked around the island. I stopped to pick up a shell, the biggest conch shell I'd ever seen. It was in perfect condition, and I held it to my ear to listen to the ocean. I knew it was simply the ambient noise echoing in the shell, but it didn't change the magic of the moment.\n\n\"Want to keep it?\" Duck asked.\n\n\"Do you mind?\"\n\nHe shrugged. \"Why would I mind?\"\n\n\"It's kind of smelly.\"\n\n\"So wash it good before you bring it aboard. It'll be fine.\"\n\nI placed the shell on a rock so I could find it later. We continued to stroll, and as The Winds came into view, I smiled. The Winds and her captain had been my escape for the past week. No matter what happened from this moment forward, I would always remember this trip. As we walked, the sandy strip narrowed, the rocky outcropping less worn on the side sheltered from the ocean's relentless pounding waves.\n\nWe rounded a finger of rock that reached almost to the ocean, and I saw the wide beach where we'd started our walk. I slowed to a stop, Duck stopping beside me. I turned toward him and pulled his lips to mine. Our kiss was torrid, his strong hands gripping my ass to pull me against him. I wanted him, I wanted him so badly, but my fantasy had another part, a part I was going to put into play. I pushed him strongly away.\n\nHe looked at me in confusion. I smiled at him. \"If you can catch me, you can have me,\" I challenged before I turned and dashed away.\n\nHis confusion caused enough of a delay that I had a good head start. Before work had consumed my life, I'd run to stay in shape, and before that I'd run track in high school. I knew I was fast, or had been. I wanted him to catch me, but I wasn't going to make it easy on him.\n\nI led him on a merry chase around the cay. I thought he'd given up when he disappeared behind some rocks and didn't appear. I stopped and waited on him, disappointed he hadn't caught me and had given up so easily. After a moment, I crept back to see what he was doing, but he was nowhere in sight.\n\n\"Duck?\" I called, wondering if he'd tired of the game and returned to The Winds. \"Duck? Heston?\" I called again, but there was no answer.\n\nDisappointed, I started to trudge around the cay to swim back to The Winds, but shrieked in surprise and excitement when he popped up from behind some rocks, having circled around from the other direction. I dashed away, but he used stealth to get close.\n\nHe was at least six inches taller than me and had longer legs, allowing him to eventually run me down, grab my arm, and drag me to a stop. He tried to pull me in, but when I resisted, pushing and shoving, he released me. I danced away and laughed in uncontained excitement.\n\n\"You almost had me there... lover,\" I purred before I ran again, hoping he got the message.\n\nI made it only as far as the widest part of the beach before he once more dragged me to a stop. Again, I fought to get away, being careful to not actually hurt him, but he wouldn't be put off. As we struggled, grunting in effort, gasping for breath in excitement and from our exertions, he gently wrestled me to the sun-warmed sand, softly dominating me as we rolled and tumbled, slowly stripping ourselves bare in our struggle.\n\nHe'd caught me fair and square and claimed his prize, making me his again and again.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Heston</center>\n\nI pushed back from my desk. Nikki, the researcher who had predicted Disney's drop, had been dead on. We'd easily made back our short, pocketing a handsome profit in doing so, and she was just as confident in three to four months, the price of Disney was going to rebound in a big way. She'd called the bottom, and if she was equally right about the top, we were well positioned to make a killing. Even if she was wrong about the size of the rebound, we'd bought low enough to still make money, but I was making a large gamble, almost a half billion dollars, that she was right. Invest five hundred million to make a billion? I'd do that every day, all day.\n\nChloe still couldn't read a marine chart or the ocean, and she couldn't properly trim out The Winds without coaching, but once the boat was set, she could steer the course I gave her, tacking or jibing better than most with only two weeks of sailing experience. She'd gained my trust in her ability to conn the boat while I worked if we were at sea.\n\nI paused in the galley to pour two glasses of wine. Chloe was simply amazing. I'd fucked women that were as adventuresome as she was between the sheets, and bedded some that were perhaps as brilliant as she was. I'd sailed with other women that could handle a boat better, but they all had more experience, and dated some that were as dedicated to their career as she was, and understood my dedication to mine... but Chloe was the first woman to have all those traits.\n\nNone of the women who did their best work horizontal had her brains or drive, and those that did couldn't match her sexuality. She was the complete package. I carried the two glasses abovedeck, popping out of the hatch as she spun the wheel to tack on a new course. I handed her a glass.\n\n\"Thanks,\" she said with a nod, taking the glass from me with a smile.\n\nI smiled back. We were making for Freeport, Grand Bahama, where we would re-provision The Winds. We were running low on fresh food and potable water. While we still had plenty of canned and dried food, and The Winds could make as much water as we needed from the ocean, it was much cheaper and easier to simply fill her tanks at a water supply than to run the small desalination plant aboard the boat.\n\nI glanced at the controls. We were making about six knots. If the winds held, that would put us in Freeport about midday tomorrow. \"Want me to take over?\"\n\nShe shrugged. \"Up to you. I've got it if you want to relax.\"\n\nI smiled. We didn't exactly fight over who got to pilot The Winds, but neither of us griped about having to sail her either. \"No, that's okay. You keep her.\"\n\nShe smiled at me and blew me a noisy kiss. My smile spread as I shook my head. After that first night in my bed, she'd thrown off whatever weight she'd carried and had come alive in front of my eyes. When I'd first met her, she'd been pale. Not sickly pale, but the pale of a woman who spent most of her time inside. Now she glowed a light golden brown, with tan lines that made her achingly sexy.\n\nI simply couldn't get enough of her. She'd given me the single most intense sexual experience of my life, something I was sure I'd never surpass. Chasing her down on Beacon Cay and wrestling her into submission in the sand, grunting and thrusting at each other as we ripped away our bathing suits, had driven me wild with desire. I'd almost come three times, holding onto my orgasm only by the thinnest threads as I tried to satisfy her and make the moment last as long as possible.\n\nRolling over and over in the sand as we pleasured each other with our lips and tongue, the soft sounds of our passion mixing with the muted, rhythmic, roar of the ocean lapping at the beach, had nearly been my first undoing. I'd survived that only because she'd climaxed first, which had allowed me to escape her ministrations long enough to cool down slightly. Twice more I'd pulled out of her only seconds before I raptured, using the opportunity to lick and kiss her to orgasm as I gathered myself. She'd finally trapped me as I took her from behind, half in and half out of the water, begging me not to stop and to make her come again. In that moment I could deny her nothing, and when she came and clamped down on my manhood like a velvet vice, I'd climaxed so hard I thought for an instant I was going to pass out. The Chloe shaped depression we'd left in the sand was something I'd never forget either.\n\nI'd collapsed sideways onto the sand, panting from my efforts and the hardest orgasm of my life. With a low sexy groan, she'd slowly crawled onto my chest, her knees to either side of my hips as she mashed my still hard cock between us, and we'd lain in that position for almost an hour, basking in the afterglow, the water tickling our toes as we slowly kissed and touched.\n\nOnce I recovered enough strength to think I could swim back to The Winds without drowning, we'd gathered our clothing and her shell and returned to the boat. I smiled in memory. As I washed the salt from my body in the shower, I was certain I was done and wouldn't be able to perform for her that night. I was wrong, and we'd made slow, easy love long into the night.\n\nI looked to the south, the direction in which we were sailing. Clouds were building in a way I didn't like. I rose from my perch behind the control consoles and went below to check Trade Winds' navigation and weather radar, and I didn't like what I saw. A squall was building directly in our path. I called up a satellite image. Watching the two-hour loop, I could see the line of thunderstorms was developing rapidly. I checked the maritime charts for a safe harbor. The closet was Walker Cay, but looking at the winds and distance, it didn't look promising.\n\nI bounded back up the steps. \"Turn East-Northeast,\" I said as I began to crank in the lines to retrim the boat.\n\nShe didn't hesitate, spinning the wheel hard left. \"What's going on.\"\n\nThe Winds heeled over as she turned hard. We had the wind almost directly at our backs. That would help. \"Change of plans.\" I jerked my head at the white fluffy clouds just beginning to darken. \"A squall line is between us and Freeport. We don't want to tangle with that if we don't have to. We're making for Walker Cay.\"\n\n\"Is it dangerous?\" she asked, her nervousness clear in her voice.\n\n\"No,\" I said slowly. \"But I'd just as soon we not get tossed around if I can help it.\"\n\nWe sailed along, the wind at our backs, making almost ten knots. The Winds was giving her all for us, but the storm front was gaining on us. So long as we had the wind, we'd stay on sail because engine power would actually slow us down a little.\n\nWe were within an hour of Walker Cay when we heard the first rumbles of thunder in the distance as the clouds became increasingly dark and ominous. The atmosphere was becoming troubled and the winds were picking up as the storm gathered strength. The Winds was pushing eleven knots, two knots faster than her rated hull speed as we raced for safety. The wind had come around and we were hard over to port, the deck only inches from the water line.\n\n\"Come on, girl,\" I urged the boat as we plunged through the waves. I looked to our right. We were running out of time. \"Chloe! Stay on this heading until I tell you change!\" I called to be heard over the rush of water and wind.\n\n\"You got it!\"\n\nI was making a gamble, using a long jib to try to gain some space from the storm that would allow us to come up on the leeward side of Walker Cay. If it worked, we would avoid the squall until we could use the cay to buffer the coming gale, but if it didn't, we'd be out of position to make a final dash to safety on the leading edge of the storm.\n\nWe stayed on course. I was itching to take the helm, but Chloe could steer a course as easily as I could, and having her at the conn kept me free to trim the rigging to take maximum advantage of the wind.\n\nI hurried down the steps to check our position. In ten more minutes, we'd have to make our turn and race for shelter, but it was looking less and less like we'd make it. The storm was building faster than I hoped it would, gathering strength from the warm Caribbean waters. I didn't want to approach Walker Cay in a squall. It would be too easy to get tossed into a reef and mortally wound The Winds.\n\nI closed the windows and made sure everything was secure. If the water got rough, I didn't want to have to worry about making Trade Winds secure. The Winds heeled over even more before she righted herself. She was catching gusts from the squall.\n\nI climbed back abovedeck. \"Turn East-Southeast!\" I called to be heard over the rising wind and the hissing roar as we pounded through ever roughing waters.\n\nShe spun the wheel. The gusts had shifted, and we were catching the wind almost directly off our starboard side. I retrimmed the sails, trying to eek every bit of speed out of the boat I could, but our speed was down to about nine knots. With the wind from the side we couldn't overrun our hull speed, the speed where going faster required exponentially more energy.\n\nTen minutes later we felt the first drops of rain. \"You want to go below? It's about to get wet up here,\" I asked as I stepped up behind her, ready to take the wheel.",
        "She stepped aside. \"No. You can have the wheel, but I'll stay up here with you.\"\n\nI kissed her quickly. \"Then keep the wheel and I'll work the rigging.\"\n\nWe raced through the water, but as the rain continued to increase, I knew we weren't going to make it, and I didn't want to endanger the boat. The safest place for a boat in a storm was at sea.\n\n\"Chloe! Start the engine and turn into the storm! Full power!\" I called to be heard over the wind and rain as I began to pull in the sails.\n\nThe wind was beginning to swirl, and I didn't want to risk tearing a sail or damaging the rigging. Sailing in the swirling wind could put us on a reef before we could react if we got in too close. We would make our stand out here in open water.\n\nIt was raining with gusto as I furled the sails and lashed them securely. Having Chloe on board had allowed me to push harder than I would have dared if I'd been skippering the boat alone because she could conn the boat while I pulled in the canvas.\n\nSails secured I returned to the conn. \"Why don't you go below? There's nothing else to do and there's no point in both of us getting soaked!\"\n\n\"You sure you don't need me?\"\n\n\"We're just going to ride this out!\"\n\n\"How long?\"\n\n\"Twenty, maybe thirty minutes! Don't worry! We're in no danger!\"\n\nShe nodded and hurried below, securing the hatch behind her to keep the water out. Without the sails pushing us around, I simply kept The Winds' bow pointed into the waves, the engine giving me plenty of steering control.\n\nTrade Winds held her ground in the storm as we made slow progress toward Freeport, powering through large waves to crash down on the other side, the spray soaking me even more than the rain. Fifteen minutes after I took the helm, I could tell the squall line was passing, and ten minutes after that, the rain began to diminish. Chloe's head popped up from belowdecks as the rain became a shower.\n\n\"You okay up here?\"\n\n\"Wet, but otherwise okay.\"\n\nShe came the rest of the way up, closing the hatch behind her. \"Is it over?\"\n\n\"See for yourself,\" I said with a nod.\n\nThe setting sun was to our right and was a stunning ruddy red that was painting the ocean the color of blood. \"Beautiful,\" she murmured.\n\nI nodded. \"Yeah. You know that old saying, 'Red sky at night, sailor's delight.'\"\n\n\"So, it's over?\"\n\n\"Yeah. It was just a little squall line. We'll be lucky if we don't run into another one before this trip is over.\"\n\n\"How did that compare to a hurricane?\"\n\nI spluttered. \"I'm not stupid enough to be out in a hurricane, but a hurricane would make that look like a gentle breeze.\"\n\nShe sighed. \"Well, I don't mind telling you, I was hanging on for dear life down there.\"\n\nI grinned at her. \"Were you scared?\"\n\nShe smiled, unable to meet my eyes. \"What if I was?\"\n\n\"Then I'd think you were pretty smart. When you don't respect Mother Nature and the ocean, that's when she'll fuck you up.\"\n\n\"Were you scared?\"\n\nI shook my head. \"Scared? No. Respectful? Yes. These little squall lines pop up all the time. That wasn't the first one I've been through, and it won't be the last. Be glad you weren't on Hedging My Bet. We got bounced around a little, but on Hedging My Bet, it would have been three or four times worse.\"\n\nShe stroked the wheel in a way that made me slightly jealous. \"I'm glad we were on The Winds then.\"\n\n\"Yeah. She handled the rough seas with total grace. She's a fine boat.\"\n\nShe smiled at me. \"Captained by a fine skipper.\"\n\nI hitched a shoulder. \"I do okay.\"\n\nShe stepped in close. \"Since I didn't drown, thinking of you up here at the wheel, guiding The Winds through the storm, giving Mother Nature the finger with a big F.U., is turning me on.\"\n\n\"And?\" I prompted when she didn't continue.\n\n\"And, as soon as you can, I need you to come below and perform your seamen duties.\"\n\n\"Seamen, huh?\" I asked with a smile.\n\nShe stepped closer as she nodded slowly, a wicked smile dancing on her lips as she drew a finger along the bulge in my pants. \"Red sky at night, and all that. The more semen, the more delight, I think.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Chloe</center>\n\nI smiled as Duck looked dubiously at the horse. \"She won't bite,\" I encouraged as the woman saddled the animal for him.\n\nWe were on the largest island in the Bahamas chain, Andros Island, the island most people, myself included before this trip, associated with being Bahama. When I found out we could rent horses to ride on the beach, I'd begged for the chance. Duck was hesitant at first, but some sexy pleading as I rode him like I would a horse had won me the day. He wasn't fooling me. I knew he'd have agreed anyway, but a little erotic play never hurt anyone.\n\n\"Are you sure?\"\n\n\"You've really never ridden a horse before?\"\n\n\"I've never been this close to a horse before.\"\n\n\"I thought all you rich guys played polo and stuff.\"\n\n\"Not this guy, and I wasn't born rich, you know.\"\n\nI knew. He'd been born into a middle-class family, his father a CPA and his mother a high school principal. He'd started Mallard Investments with fifty thousand dollars, money he'd saved while working at a brokerage firm and from the sale of his car. In a year, he'd grown that fifty grand into two hundred with a couple of smart, if high risk, trades. He admitted he'd been foolishly aggressive, but it had worked for him and had gotten him noticed. With another million dollars of investor money, he'd started Mallard Investments, and the rest was history. In four years, he'd gone from a little over two million of invested assets to about six billion, and investor money was still pouring into his fund. He was the latest wonder kid with the Midas touch, and everyone was begging to get in on the action.\n\n\"Trust me.\"\n\nI had to look away so he wouldn't see my smile as the woman helped him mount. I hadn't been on a horse in more than ten years, but it was like riding a bicycle, with all the old skills coming back in an instant. When I started saddling my own horse, the stable hand had nodded in approval and turned her attention to Duck, his bafflement at the reins, bit, and halter obvious. Once she checked my work, she turned us loose with only minimal instruction.\n\n\"You need to relax,\" I teased as we turned the horses down the beach.\n\n\"How can I?\" he grunted.\n\nI smiled. He was going to be sore as shit because he was tense and not moving with the animal, but I'd help him work out any stiffness he might have later.\n\n\"It's kind of like sailing. You have to move with the animal like you move with the boat.\"\n\n\"A boat doesn't have a mind of its own.\"\n\n\"Are you sure about that? Weren't you the one telling me every boat has her own personality or some BS like that?\"\n\n\"That's different.\"\n\n\"How?\"\n\n\"Because it just is. Boats might have a personality, but they don't think for themselves.\"\n\nI grinned, enjoying his discomfort as he held the saddle horn firmly. For the first time since I arrived in Florida, he was unsure of himself and out of his element, while I was comfortable and in control.\n\n\"Where did you say you learned to ride?\" he asked as the animals plodded along. I didn't even have to steer. They knew where they were going.\n\n\"I didn't.\"\n\n\"Okay. Where did you learn to ride?\"\n\n\"At my uncle's, my mother's brother. He had horses and I used to ride with my cousins.\"\n\n\"He was the doctor, the one that inspired you, right?\"\n\n\"Yeah. Dad wanted me to join the family business, like my brothers, but fertilizer sales to soybean farmers in and around Dyersburg just didn't do it for me.\"\n\nHe chuckled. \"That would have been a real waste.\"\n\n\"Don't get me wrong. Mom and Dad are successful. They put me through medical school and my two brothers through college, but I wanted to help people, you know?\"\n\n\"I'm not belittling them, but you obviously had the potential to be more. Not everyone lives up to their potential. I think you did.\"\n\nI grinned, his compliment warming me in ways the sun couldn't. Though no one had ever said anything negative to me, sometimes I wondered if my dad and brothers thought I felt like I was too good to work at Meyer Farm Supplies. I didn't, and while Uncle Glenn was nothing more than a hard-working family doctor in nearby Newbern, he'd inspired me to try to be more than a saleswoman.\n\n\"You haven't done so badly,\" I pointed out. I didn't know what he was worth, but I was sure it was enough to make my doctor's salary look like a pittance.\n\nHe shrugged. \"I get these feelings about companies, about what their stock will do based on events. I can't explain it, but I seem to have a sixth sense for this kind of stuff, which is why I stick to technology and entertainment. I can predict it with reasonable accuracy. Like this Disney deal. I had a feeling their stock was going to go down when research started seeing negative press about their latest big movie. We bought a bunch of Activision for the same reason. Their latest game was getting killed by people who watch that sort of thing, and I had a feeling when it released it was going to hit them hard. We didn't short them, but we did pick up a large pile of their stock on the cheap. When the price goes back up, we'll sell it off and bank the profits. But compared to what you do...\" he shook his head.\n\n\"Don't sell yourself short. I couldn't do what you do. If I tried, I'd be living in a carboard box under a bridge somewhere. I let someone else manage my 401k for that reason.\"\n\n\"I suppose.\"\n\n\"Why Heston Mallard, is that humbleness I hear?\" I teased.\n\nHe smiled at me. \"I'm good at making money, I know that, but I have to admit, I'm a bit in awe of your abilities. I mean, saving or restoring someone's sight? How do you put a price on that? If I were to go blind, I'd give every penny I had to be able to see again. You could do that for me, but no amount of money could do it.\"\n\n\"When I get back to Nashville, I'm going to hit you up for a donation to our new eye center,\" I said, my voice light and full of humor.\n\n\"You do that.\"\n\nI snickered. We were approaching the end of the beach. We had about ten miles of beach to play on, five miles to either side of the stables, and I wanted to ride every inch of it. I pulled my horse, Domino, probably named for his rich black coat and white socks and blaze, to a stop. Duck's horse, Buttons, stopping beside.\n\n\"Let's walk,\" I suggested to give Duck a chance to stretch and loose up. I wanted him stiff tonight, but not stiff and sore.\n\nWe walked along the beach, our horses following obediently behind us. We continued to talk about ourselves and our past. As much as I enjoyed jumping his bones, simply having someone I could talk to was nice. The longer I was with him, the more I realized how lonely and isolated I'd become. I'd insulated myself and used my work as an excuse. I had friends, but no one I felt I could share with like I could Duck.\n\n\"Did you know you're not the first to call me Duck,\" he said after a long but companionable silence.\n\n\"I'm not surprised. With the last name Mallard, what else would anyone call you?\"\n\n\"Nothing, I guess. I hated that nickname. I haven't heard it in years.\"\n\n\"Oh! I'm sorry. I didn't know. You should have said something.\"\n\n\"It's okay. For some reason, I don't mind you calling me Duck. Actually, they didn't call me Duck, they called me Ducky.\"\n\n\"Same thing, I guess. Why did you hate the name then but not now?\"\n\n\"When I was growing up, I was the fat kid, so I took a lot of teasing.\"\n\nI gave him a long, obvious, lecherous, and humorous looking over. \"I find it hard to believe you were ever fat.\"\n\n\"I was. When I started college, I was still the fat kid. I was surrounded by all these beautiful women that wouldn't give me the time of day, and though I didn't know anybody, I still felt like Ducky. My sophomore year, I was sick of it and started whipping my fat ass into shape.\"\n\n\"You did a good job.\"\n\n\"Thanks. It was hard work, but I dropped almost a hundred pounds, and when I did, women started to notice me. I stopped answering to Ducky from people who knew me and...\" he paused.\n\n\"And what?\"\n\n\"And nothing. That was when I finally broke away from the nickname.\"\n\nI had the feeling he was going to say something else, but I didn't press. \"Then I won't use it anymore.\"\n\n\"No, don't do that. Having you call me Duck has made me realize that the problem wasn't the nickname, it was me and how I saw myself.\"\n\n\"You're sure it doesn't bother you?\"\n\n\"Not when you say it.\" He smiled. \"Actually, I kind of like it.\"\n\n\"Okay, Duck. You ready to ride?\"\n\nHe grinned. \"You or the horse?\"\n\nI smiled back at him. \"The horse now, me later.\"\n\nHe groaned. \"Do I have to?\"\n\n\"Me or the horse,\" I asked with exaggerated innocence.\n\n\"The horse.\"\n\n\"Yes, but give me a kiss first.\"\n\nI fell into his kiss. I wasn't a virgin when I met Duck, but no lover had ever made me feel like he did. I desired him more than any man I'd ever met, or even fantasized about. He held me close, our kiss lingering, until Domino nudged us with his nose.\n\n\"Okay, okay,\" I grumbled, smiling at the horse and holding Domino's head in my arms.\n\nWe mounted and rode past the stable to the other end of the beach before circling back. I gave Domino a hug, and even Duck patted Buttons as we left.\n\nWe left the stable and spent a few hours shopping for provisions. In Nashville I hated shopping for groceries with a passion, but with Duck I found I enjoyed picking out fruits and vegetable for The Winds.\n\nWhen we returned to The Winds, we loaded our supplies aboard and slowly motored to the boat equivalent of a service station where Heston filled both the water and fuel tanks. After paying the man, we slowly clattered away, making our way back to sea. We hadn't spent a night in a marina in over two weeks.\n\nWe were almost at the entrance to the marina, and as we puttered along, I heard the engine bog as if it were under load, before the boat began to shudder. Duck quickly shifted the boat into neutral. He throttled back and engaged the drive again. The engine almost stalled before he quickly disengaged the propeller.\n\n\"Shit,\" he spat. He shifted the boat into reverse and added throttle. The engine bogged heavily, and I could feel the engine straining through the soles of my feet. He slapped the engine into neutral. \"We've fouled the prop.\"\n\n\"What does that mean?\"\n\n\"It means some asshole lost their mooring lines or something, we've sucked it into the prop, and now it's probably wrapped around the shaft,\" he grumbled as he switched off the engine.\n\nI started to make a comment about things wrapped around shafts but decided this wasn't the time or place. \"Are we going back to the dock?\"\n\n\"No. Take the wheel. We're need to clear the channel before I can do anything about it, so we're going to have to sail her out of here. Just keep her in the middle of the deep water,\" he ordered as he scrambled forward.\n\nI could see the ocean beyond, but we had a tight turn at the end of the marina, and the wind was pushing us back toward shore. I didn't panic, but I was nervous. We'd never hoisted the sails in such tight quarters before.\n\nAs the canvas rose, Duck hurrying along the length of the boat, The Winds began to turn as the sails caught the breeze. He ran the sails up only a short way, scampering back and forth on the deck and running the winches.\n\n\"Hard to starboard!\" he called from the bow.\n\nI spun the wheel as fast to the right as I could until it stopped. We were still drifting toward land and butterflies began dancing in my stomach. He hauled on some ropes by hand, leaning back at an angle as he held them, and the boat slowly began to turn away from shore, creeping back into the center of the channel. I spun the wheel left to center the rudders as he continued to hold the ropes, and then frantically spun the wheel more left to turn us back toward the entrance as he released the ropes.\n\nThe Winds turned, but she was sluggish and slow to respond at such slow speeds without the engine to help her steer. We slowly turned as a large, heavy powerboat rumbled by. Even though Pussywillow was moving slowly, her wake made us bob and pushed the bow to the side. I cranked in some steering input to hold our course.\n\nDuck hurried along the deck and grabbed the ropes that secured the boom over our heads, grunting in effort as he hauled, his arms and legs bulging in effort as he pulled the boom to the side. \"Come on, you bitch,\" he groaned as he strained against the ropes.\n\nI knew he was talking to The Winds. I had no idea why he was doing what he was doing, but it helped me bring the bow around. He released the ropes as we returned to our course before hurrying back to the bow. We crept along, doing less than one knot, and I stood ready to make the sharp turn out of the marina. I waited, chewing on my bottom lip, hoping I didn't screw this up.\n\n\"Hard...\" he called an instant after I started spinning the wheel to starboard, The Winds slowly coming around as he again hauled on ropes.\n\nThe moment we were pointed at the sea, I straightened the rudders as Duck released the ropes and all but ran down the length of the boat, punching at the console to raise the sails to their full height. As the sails bloomed, The Winds began to gather momentum. She became more responsive as we picked up speed, but we were drifting left, so I corrected, then corrected more. Once the sails were fully up, I expected him to take the wheel, but he stood at the ready but allowing to me conn the boat. I began making tacks, bouncing from one side of the channel to the other, like the proverbial cue ball on a pool table, as we slowly worked our way out of the narrow channel and into open water.\n\nFinally clear of the reef, I woofed out a breath. \"That was intense!\"\n\nHe held up his hand, and I slapped our palms together in victory. \"Yeah, but you did great. That would have been a real bitch to do by myself.\" He paused and grinned. \"Now you know why we come into marinas on engine power.\"\n\n\"Yeah, but what do we do now?\"\n\n\"Now, we get out to sea a little way before I go over the side and try to clear the prop.\"\n\nI nodded. As I piloted the boat to sea and away from the rest of the traffic going in and out of the marina, he disappeared below, returning a few minutes later. He'd stripped out of his shorts and shirt and was wearing his tight, black, bathing suit, a large sheathed knife belted around his waist and resting on his hip and a scuba mask propped on the top of his head. Standing there, equipped to repair the boat, ripped to perfection with his sun kissed skin and his manhood bulging in his suit, it was impossible for anyone to be more masculine. I hoped this didn't take long because when he was finished, his knife wasn't going to be the only thing sheathed on this boat.\n\nWe dropped sails but kept the anchor up. We were far enough off the reef we were in no danger of being grounded, and The Winds rode better when her nose wasn't tied down. I watched in fascination as he pulled the mask from his head, spat onto the lens inside, and smeared it around with his finger.\n\nI kissed him lustily as he started to pull on the mask. \"Good luck,\" I murmured.\n\n\"Mind the boat,\" he said with a smile as he stepped off the platform.\n\nHe disappeared under the water for a long moment before he popped back up. \"It's a fucking mess down there,\" he said as he held onto the platform. \"Let me know if we start getting to close the reef, but otherwise, you might as well get comfortable. This is going to take a while, and for God's sake, don't start the engine, no matter what.\"\n\nI nodded as he disappeared again. I paced, watching as he bobbed up for air before diving back under the boat. He worked for over an hour, hacking at the rope with his knife, once bringing up a long piece and handing it to me to see. It was bigger around than my thumb and looked like the same type of rope we used to tie off at the dock.",
        "As he worked, I imagined him under the boat, grunting and straining, his feet against the hull as he hauled on the rope, his muscles twisting and bulging with effort as he struggled to clear the propeller. I couldn't explain why, but in my imagination, he was nude and sporting a huge erection as he worked. I was working myself into quite a state with my little fantasy. After almost ninety minutes, he launched himself out of the water and sat on the platform.\n\n\"I'd like to find the asshole that didn't secure his mooring ropes. I'd use his own rope to keelhaul the bastard,\" he panted softly, pushing his mask up to the top of his head.\n\nI snickered quietly. When he talked sailor, it turned me on. I smiled to myself. Hell, everything he did turned me on.\n\n\"Finished?\" I asked.\n\n\"Yeah, finally.\"\n\nMy previously private smile danced across my lips. Good thing. He wasn't the only one on The Winds who was dripping wet.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Heston</center>\n\nTrade Winds was gliding through the water at a sedate five knots as we made our way to Miami on a meandering course. Tonight we were going to shelter among the dozens of tiny cays that formed the west side of Great Abaco Island. In just over three days, Chloe was catching her flight back to Nashville, and my shakedown cruise of Trade Winds would be complete. The Winds had performed flawlessly with only one minor problem.\n\nFour days ago, about twenty miles north of Shroud Cay, we'd become becalmed for a couple of days, the winds dying until there was only an occasional whisper of a breeze that would barely ruffle the canvas. The ocean had been glass smooth, allowing the clouds to reflect in its surface like a mirror. I'd given Chloe the option of switching over to engine power, but she was content to wait it out for as long as we could. So was I. With little else to do, we'd spent two days doing nothing but eating, sleeping, swimming, and fucking. Mostly fucking.\n\nDuring the first night, the air conditioning had stopped working. With no breeze and no air conditioning, it had become uncomfortably warm belowdecks. The next morning I'd traced the problem to a split high-pressure hose that was probably defective from the manufacturer. Since air conditioning wasn't a critical system, I didn't have a spare on board, but even if I had, I didn't have the refrigerant to recharge the system. The Winds would need a mechanic when we reached home port.\n\nDespite the warmth, we'd still made love at least four times a day, grunting and gasping in pleasure until we were bathed in sweat from our labors. We'd take a dip in the ocean to cool off, swimming in the nude, only to start over again in a couple of hours. We slept abovedeck at night to enjoy what little cooling breeze there was, while making passionate love under the stars.\n\nThe trip had been magical, and for the first time in my life, I was sorry to see a woman leave. I didn't love Chloe, not in less than a month, but I was strongly attracted to her like I'd never felt before.\n\nUntil her, women were to be used and discarded. If I were honest with myself, I was probably carrying a grudge from having so little success with women until I got myself into shape. I could understand the change at an intellectual level. I was more attractive to the opposite sex at 195 pounds than I was at 275. I was the same person inside, but nobody had given me a chance. It was all about how I looked, not the person I was, and that had hurt. Maybe I was still nursing that grudge and taking it out on women in some sort of revenge.\n\nI'd never analyzed why I acted the way I did, why I felt the way I did, until now. Until Chloe. She'd opened my eyes in a way no woman had, and I was seeing her, perhaps women in general, in a different light. During those two days of almost constant fucking, something had clicked within me. The second night, after a long, slow, round of love making under the moon and stars, we slept nude on deck. Chloe was tucked in comfortably close as the stars blinked brightly above us, and as I began to drift into sleep, I realized I valued these quiet times with her nestled in my arms as much, or more, as our energetic love making. It was the first time I'd ever felt that way.\n\nThe next morning, our sex was more explosive than ever, my realization of the previous night fueling my passions as we rolled and tumbled in a heated erotic contest. It was every bit as intense as our fucking on Beacon Cay, but different in a way I could feel but not explain. Now, every time we engaged in a duel of passion, the feeling became stronger, and I think Chloe could sense it as well. Last night, for the first time, she'd cried out softly in orgasmic bliss, her quiet wail of completion stripping away my control in an instant so that we climaxed in harmony. It was the perfect ending to our love making, and we'd both slept the sleep of the dead.\n\n\"Lunch!\" she called as she appeared from below, a tray in her hands loaded with finger sandwiches made from the leftover fried chicken she'd prepared last night.\n\n\"Looks good,\" I murmured as I looped my arm around her waist and pulled her into a kiss, my manhood twitching as I began to harden. In the three days since my realization, I'd become a walking hard-on.\n\n\"I slaved over it for hours.\"\n\n\"Oh! Yeah, the food looks good too.\"\n\nShe snickered and picked up one of the small squares and held it for me to take a bite. I did, and she popped the rest into her own mouth. Eating after each other was nothing compared to the parts of each other's body we'd had in our mouths.\n\nWe cruised along, Chloe feeding me from the tray. I could have fed myself, but having her do it filled me with raging desire and calming peace, a dichotomy I could feel but not understand. I chased the latest bite of sandwich with a sip from the beer as I watched her chew her own bit of sandwich.\n\n\"Where are we stopping tonight?\" she asked, holding another square for me.\n\nI bit into it, snapping at her fingers playfully with my teeth, making her squeal in surprise as she jerked her fingers back, giggled, and then slapped at me playfully.\n\n\"Somewhere off Great Abaco. Tomorrow we'll sail to Bimini, and then finish the trip to Miami from there.\" She looked down, a shadow of sadness playing across her face. \"What's the matter?\"\n\n\"It's almost over.\"\n\n\"Yeah.\"\n\n\"I don't want to go home.\"\n\nMy heart skipped a beat. \"You could always stay. I'm sure some hospital in Miami would love to have you on staff.\"\n\nShe looked at me, and though her lips twitched into a smile, there was no joy or humor there. \"I can't. My home and career are in Nashville.\"\n\n\"It doesn't have to be. You could start a new career, buy a new home, here.\"\n\nShe sighed heavily. \"I can't.\"\n\nI nodded. I was disappointed, but I wouldn't let it show. \"I understand. I had a good time, though.\"\n\nThis time her smile was honest. \"So did I.\"\n\n\"Are you relaxed?\" I teased.\n\n\"Oh my God! If I were any more relaxed, I'd puddle on the deck and run over the sides into the ocean.\"\n\nI snickered. \"I did my best.\"\n\nShe took my head and pulled my lips to hers for a long, deep kiss. She sighed dreamily as she pulled back. \"Babe, your best is more than good enough for me.\"\n\nI nodded, smiling in self-satisfaction. She demanded my best, but it was easy to give as she brought out the best in me, and she'd given back in equal measure. \"You want to take the conn? You don't have many more opportunities.\"\n\n\"Maybe after we eat,\" she said, offering another morsel.\n\nWhen I'd eaten my fill of sandwiches and grapes, she took the tray below and returned. I stepped aside and let her have the wheel. I hadn't offered the conn exclusively from the goodness of my heart. I wanted to bank more memories of her standing there, her hair tousled by the wind, as she guided The Winds across the ocean. We sailed on, making good time. We should arrive at Great Abaco Island at dusk, which was perfect.\n\nI watched her for a while. Her boat handling skills were vastly improved over when she first took the helm, and I wished I had the time to teach her to handle the sails. I wished for a lot of things, things I knew I couldn't have.\n\nI stepped up behind her and pulled her back into my chest as I nuzzled her neck. I'd suggested she move to Miami, but I couldn't fault her for turning me down. She had her career in Nashville, and I respected that. Perhaps we could stay in touch. Maybe she could even pay another visit and we could go sailing again. Too bad Tennessee was landlocked, otherwise I could sail The Winds to her.\n\nShe sighed as she pushed her ass back into my crotch, trapping my erection between our bodies before squirming her ass against me. She was damned near insatiable, seemingly ready to go at a moment's notice. I wanted to drop the sails, drag her to the deck, and ravish her, but I didn't take the bait. That would come later this evening, so I contented myself with nibbling on her neck.\n\n\"You doing that makes it hard for me to steer my course,\" she said, but she made no move to stop me.\n\n\"It's not the only thing that it makes hard,\" I murmured into her neck as I drew a finger lightly over her stiffening nipples.\n\nShe wiggled her ass again. \"I've noticed.\"\n\nI pinched her nipple lightly, causing her to gasp softly as her head tipped slightly back. \"So have I.\"\n\n\"If you don't stop, I'm going to drop anchor right here and you'll have to man up.\"\n\n\"Go ahead,\" I challenged. She could drop it, but since we were in deep water, nothing would happen, and she knew it. But that wasn't the point, and she knew that too.\n\nShe turned away from the wheel and put her ass against it. Out here, away from everything, we were taking long jibs. Holding the wheel steady with her ass, she pulled me down, kissing me fully. I held her tight against me as our tongues danced. I pulled back from her lips and kissed under her ear in the spot I found she liked. She tipped her head over to give me better access as she held me close.\n\n\"You're so going to get it tonight,\" she murmured, lightly stroking the bulge in my shorts.\n\n\"So are you,\" I whispered as I continued to nibble at her neck.\n\n\"Oh, God, I hope so.\"\n\nI pulled away. Things were getting out of control. If we continued, we'd be going at it well before we reached our stopping point. The Winds wouldn't sail herself and we needed to arrive at Great Abaco Island before nightfall for safety. That left no time for any hanky-panky, despite our obvious need. I kissed her again, but we both stepped away, saving our rising passions for later. When we denied ourselves the moment, as we were doing now, it usually led to explosive passion later.\n\nShe turned back to the wheel and made a slight adjustment. \"Dammit. Now you've got me all hot and bothered,\" she growled playfully.\n\n\"It's probably because the air conditioning isn't working.\"\n\nShe sniffed out a laugh. \"That's not it and you know it.\"\n\n\"Oh? We could take a quick dip to cool off.\"\n\n\"Oh hell no. Seeing you in that tight bathing suit? If you want to wait until later tonight, that wouldn't be a good idea.\"\n\n\"Bathing suit? I'm not wearing a bathing suit.\"\n\nShe groaned playfully. \"Don't you need to go below or something?\"\n\n\"No, but I could go down if you want.\"\n\nShe looked at me, a look of comic aggravation coloring her face. \"If you don't stop...\"\n\n\"Well make up your mind. This morning you were telling me 'Don't stop.'\" Her scowl deepened. \"I think your exact words were, 'Oh, God. Don't stop. Please don't stop. Don't you fucking stop.' Or something like that.\"\n\nShe snickered as she looked away. \"You're incorrigible, you know that?\"\n\n\"I am. I really am,\" I moaned in sympathy.\n\nShe looked at me and smiled. \"Are you as turned on as I am?\"\n\n\"More.\"\n\nShe stared at my crotch. \"So I see.\" She brought her eyes back to mine. \"Don't worry, when we get to Abaco, we'll do something about it.\"\n\n\"That's four, five, hours away. Think we can wait that long?\"\n\nShe caressed my manhood again. \"I can if you can.\"\n\n\"You're on.\"\n\nShe smiled. \"Deal, but I warn you, when we get there, you better not disappoint me.\"\n\nI pulled her close to me again, bringing her lips to mine. \"Have I yet.\"\n\nKeeping one hand on the wheel, her lips closed over mine. \"Not even once,\" she breathed.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Chloe</center>\n\nThe ruddy, glowing sun was kissing the surface of the ocean as we dropped anchor. The winds had lessened as we sailed north, slowing our progress, and we'd arrived at our anchorage with little time to spare. I'd been disappointed when we hadn't taken the time to get it on, but in hindsight, that had been the right decision.\n\nThe slow sail north had been both fun and torture as Duck kept up a near endless stream of seemingly innocent, though risqu\u00e9, comments and was almost constantly touching my ass, breast, face, or arm. He was a true expert in the long seduction, and by the time the sails were furled, I was all but pawing at the deck for him.\n\nI thought we'd rip into each other the moment the anchor splashed into the water, but he'd made no move on me, and he wasn't taking me up on any of my rather obvious advances. He was still teasing me with touch and words, but he was making me wait as he prepared dinner.\n\nWell, two could play at that game. I stopped trying to put the moves on him and switched tactics, pressing myself against him with only the slightest of provocations as we worked together in the kitchen to prepare a typical Bahamas dinner. He baked the bonefish and fried the plantains, both of which we'd picked up fresh that morning, while I prepared johnnycakes, a thin fried cornbread gruel, from our supplies. Neither of us acknowledged what we were doing, but we both knew where the near constant touching would lead.\n\nWe dined abovedeck where we could enjoy the growing twilight. The fresh fish seasoned with a dash of lemon and vinegar was light and delicious, while the plantains and johnnycake made the perfect companion dishes. The sun was completely down as we finished, only the faintest of glows on the horizon marking the sun's disappearance. As we carried our dishes below, Duck set Trade Winds ablaze with light, a glowing beacon in the dark waters. In the distance, we could see lights on Grand Abaco Island and catch the occasional snippet of music on the wind, but otherwise it was as if we were alone in the world.\n\n\"I'm going to miss this,\" I murmured as we lounged on a thick blanket of towels spread on the swimming deck, taking another sip of the dessert wine.\n\n\"So am I.\"\n\nI had so much to say, so much I wanted to tell him, but what was the point? Despite my growing feelings for him, I knew it was only a vacation fling that meant nothing. But dammit, it felt like it meant something.\n\nMaybe it was my imagination, but it seemed like in the last few days Duck had changed. When I'd first joined him in his bed, it was nothing but raw, animal sex. We were sport fucking. Not only hadn't I minded, I'd wanted it, but now it seemed like there was more there than physical gratification.\n\nMaybe I was reading too much into it. While he'd always made sure to please me, now he seemed to be more caring, more giving, perhaps even more intense. We still had our hard, sweaty, romps, but now we had an equal number of slow, easy, almost loving sessions. Those had started in the last ten days or so, and after we got stuck out on the water and tried to fuck ourselves to death, he sometimes looked at me with such tenderness I wondered what he was thinking.\n\nA cooling breeze wafted over us, and I smiled into the darkness. My time on The Winds with Duck had been just what I needed. I wished there could be more, but I had my memories and a lesson learned. When I got back to Nashville, I was going to work hard at finding my own work/ life balance, as Heston had.\n\nThe tug of my wine glass pulled me from my thought. He gently pulled my glass from my hand and carefully set our glasses on the swimming platform below us, out of the way. \"I want you,\" he whispered.\n\nA thrill passed through me. That was the first time he'd uttered those words. Normally he simply started undressing me or began kissing me and let nature take its course.\n\nI touched his face. \"I want you too.\"\n\nHe brought his lips to mine in a long, lingering kiss. All the pent-up desire from our long afternoon of verbal play and sensuous touching washed over me like a tsunami. I wrapped my arms around his neck and leaned back, drawing him down on top of me. He'd been rock hard all day, and I was praying he could stay just as hard all night. Our time together was growing short, and I wanted to soak up as much pleasure as I could before I had to leave for home.\n\nHe kissed me aggressively, just like I wanted, and I responded in kind. He was accomplished at reading my moods and giving me just what I wanted, what I needed. Tonight I wanted him to pound the shit out of me, to fuck me long and hard, and finish me off with some slow, easy love making.\n\nHis lips danced from my lips to the spot under my ear, the spot I didn't know existed until he'd found it and used it to make me squirm. I gasped as he nuzzled and licked, my simmering desires turning into a raging boil. I grabbed his hair and pulled his lips back to mine as I rocked my hips against him, unable to remain still, thrilling with the press of his hardness against my stomach.\n\nHeston was living proof of an old saying. So long as it wasn't a dinghy, it wasn't the size of the ship that mattered, it was the motion of the ocean. I'd taken a larger lover once, but he was a lazy and selfish bastard, thinking that just because he was hung like a mule he didn't have to work to please me. Fuck that. Plus he was so large when he went to his full depth, he hurt me, something he didn't care about despite my protest. But not Heston. He was only slightly smaller, but he well knew how to use his tool. Not only did he know how to please a woman, he filled me to perfection, stretching me enough to please, but his hard, deep thrusts stopped just short of pain where pleasure peaked.\n\nHe pulled back and looked into my eyes. He was an intense lover, and the way he looked at me never failed to make me feel like the sexist woman alive. I fumbled at his shirt, undoing the couple of buttons holding it closed. I shoved it roughly over his shoulders as he rose to his knees and tossed it away. Staring at me, he reached down with a smile and violently ripped my shirt open, the buttons flying like shrapnel. I gasped in rising excitement. I knew he'd never hurt me and his raging, uncontained lust, was winding me tight. He dropped over me, his chest pressing into mine as he propped on elbows, kissing me until I was sure I felt my toes tingle.\n\nI gasped, pulling away from his torrid kiss, unable to catch my breath. He was a force to be reckoned with tonight, like he had been on Beacon Cay. He rose again and savagely jerked my shorts down, exposing my flower to the world. He slid down between my legs and began to feast on my womanhood. I moaned softly as I wadded my hands in his hair and held him tightly to me. He was a master of pleasuring a woman with lips and tongue, and I surfed the wave of pleasure as he kissed and licked, his lips gently pulling and tugging as his tongue slithered into all my secret places.\n\n\"Shit,\" I whispered as I gently thrust as his face. We had barely started, and I was already ramping up for an orgasm.\n\nHe continued to pleasure me as I began to burn in pre-orgasmic fire, my skin crackling and sizzling as if millions of tiny lightning bolts were dancing over my flesh. I began to curl up, my shoulders rising from the towel covered deck, my eyes crushed closed as I was overwhelmed with pleasure. I grunted softly as I became incandescent with pleasure, my orgasm raging through me like a hurricane, and still he kissed me. I jerked softly, my body curling in on itself, each movement accompanied by a soft grunt, every muscle battling the others as the power of my climax stole my breath and my voice.",
        "I fell back to the towel with a soft groan as my climax washed out of me, leaving me adrift in the aftermath of my orgasm. I sighed as he quickly kissed his way to my lips. I kissed him fully, tasting myself, but not caring. I drank my fill from his lips before I shoved him to his back. He'd rolled over me like a tidal wave, but now it was my turn.\n\nI shrugged out of my shirt and jerked his shorts down, throwing them aside. I got a little carried away and giggled as they sailed off the boat and into the waters of the Caribbean. Fuck 'em. He'd ruined my shirt and I lost his pants. That made us even.\n\nI draped myself across him, my breasts pressed against his stomach, and swallowed him in one swift motion, his soft bark of pleasure my reward. He was too big for me to take all the way, but I'd been working on him for a month and I could almost get there. He groaned again and pressed me down gently, his soft sounds of pleasure incredibly erotic and making me ache with desire.\n\nHe didn't try to hold me down, and when I reached my limit, I was able to easily force my head back. I gulped air and swallowed him again, struggling to take the last bit of him into my mouth. I got there, but couldn't hold it and backed off, covering my failure by battering the head of his cock with my tongue.\n\n\"Goddammit,\" he growled, softly holding my head while slowly face fucking me.\n\nI allowed him to use my mouth as I tickled his balls, his sexy hiss exciting me even more. I pulled his member from between my lips with a pop and turned on him. He grabbed my head and roughly pulled me into a kiss, our tongues jousting, before he rolled me over. I opened for him as he hooked my legs behind his arms and slowly sank into my depths, our mutual exhales of pleasure at his passage mingling in the air between us.\n\nHe started slowly, giving me time to adjust to his size, but then increased the power of this thrusts. He slammed into me as he glared at me, his face hard as he fought the pleasure I gave him. He pounded into me for many long moments as I held his head, sticking my fingers into his mouth so he could suck on them.\n\n\"Fuck!\" he snarled, shaking his head violently. That was his tell, the shaking of his head an unconscious signal of denial as his pleasure threatened to overwhelm him. I wrapped my legs around him, trying to hold him inside, but he powered out of my embrace. \"Fuck,\" he panted. \"That was close.\"\n\nHe rolled away from me and lay on his side, pulling my back against his chest as he jacked up my leg, holding me open as he guided himself inside again. I moaned softly at his entry, my head resting comfortably on the arm wrapped around my shoulders. He flexed his hips, slowly churning my butter, caressing and tickling my nipples with his free hand and gently biting me on the shoulder before kissing away the sting. I turned my face to his and he took my lips, releasing my leg to put his hand softly around my throat, kissing me deeply as he plunged into me.\n\nThe slow pace gave him a chance to recover, and he again pulled out, flopping me over to my stomach and drawing me backward to stand in the cockpit. He bent me over, pressing my breasts into the towel on the swimming deck as he slowly entered me.\n\nHe again pounded into me, our flesh slapping together as we moved as one. He was starting to sweat, making the moment even more sensual. I hadn't realized how exciting sweaty sex could be until I'd experienced it for myself. He drove into me furiously, pulling me up to cup my breasts in his big, strong hands before bending over my back and holding me down as he massaged my breasts and gently tweaked my nipples. I was working my way up to another orgasm when he roared and threw himself back.\n\n\"Fuck! You sexy witch! You almost made me come again!\"\n\nI moaned in frustration, his harsh exclamation twisting me up even more. He shoved me back up onto the swimming deck, gently manhandling me, his big cock bouncing temptingly as he followed. I tried to take him into my mouth, but he shoved me away, pulling me over him as he tumbled to the towel covered deck.\n\nI settled over him, my mouth opening slightly in an exhale of pleasure as he teased my nipples with his tongue. I rose slightly and reached between my legs to hold him erect, lowering myself over him, my head tipping back in pleasure as he filled me. I was close to climax, but so was he, and I knew this would be our last stand. I began to move, rocking my hips as I tried to finish him, wanting to see his face as he raptured. As I watched, Duck's face hardened as he set his jaw in determination, his eyes blazing. We were in a war of passion, each of us determined to destroy the other with pleasure before we succumbed ourselves.\n\nI rode him for a long moment, sweat beading on my skin before trickling down my body as I alternately bounced on his cock and rocked my hips. He pulled me down, caressing a nipple with his tongue as I began bouncing again.\n\nI moaned softly as he licked the sweat from my breasts. My legs were getting tired as I hung on the knife edge of orgasm, trying to fight off the overwhelming pleasure as long as possible.\n\nHe growled, low and deep in his chest, rocking his head back and forth against the towel.\n\n\"Fuck,\" I whispered as I forced myself up and began rocking my hips as hard and fast as I could, trying to push him over the edge.\n\nIn the near distance I saw another yacht, it's lights blazing as it slowly cruised past. The large cruiser was far enough away that I couldn't make out faces, but there were two women and a man at the rail and another man at the controls, watching us fuck our brains out, the bright lights of The Winds making us easy to see. I didn't care. In the past month we'd seen two other couples fucking on their boat, one in broad daylight, but nobody seemed to care. This was the Caribbean, and what happened in the Caribbean stayed in the Caribbean.\n\nHaving an audience pushed me over the edge. I groaned low and deep as I sagged, overwhelmed with pleasure and unable to hold myself erect. Sensing my orgasm, Duck crushed me into his chest and pistoned into me, bellowing in effort and sexual agony. His cock hit me in my sweet spot to drive my orgasm on. I gripped his broad shoulders, my eyes tightly closed as I tried to hang on lest I be swept away by pleasure and never found. He splashed into me as he grunted, embracing me so tightly I felt my ribs creak under the strain, but I wanted him to hold me even tighter.\n\nSuddenly his crushing grip was gone and we both exhaled with an explosive gasp as our orgasms released us. I found his lips with mine, kissing him slowly, luxuriously, as I held his face. After a moment, he began to move, slowing taking me, stirring the embers of our passion.\n\nHe made slow love to me for many long moments, his still hard cock slowly sliding into my depths as we kissed and touched, no words needed or spoken. I basked in the perfect moment, completely satisfied. I sighed as I held him, looking up to see if we were still being watched. The motor yacht was slowly disappearing from sight.\n\nHe was still making love to me as he finally began to soften. I groaned, shivering in pleasure as I pulled him from me and settled into the crook of his arm. \"We had an audience,\" I murmured as I snuggled in.\n\n\"I saw,\" he whispered in return. \"The men were probably jealous.\"\n\n\"The women too,\" I sighed as I kissed his chest. \"We should turn off the lights.\"\n\nHe groaned. \"Be my guest.\"\n\nI took a deep breath and exhaled slowly. \"Screw them,\" I breathed. \"We can turn them off later.\"\n\nHe nodded slowly but said nothing. I smiled and released another long exhale of complete contentment. Lights on or off, it didn't matter. I didn't want to move from this spot. Ever.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Heston</center>\n\n\"Bye,\" I murmured as I ended the call.\n\nI sighed as I lay my cell aside and picked up the tumbler with a finger of twenty-year-old Scotch. Two weeks ago today I'd dropped Chloe at the airport for her flight home. I'd spoken to her every night since.\n\nI didn't know what was wrong with me. She was supposed to be nothing more than someone fun to spend time with while I took Trade Winds out on a shakedown cruise. I was supposed to fuck her and forget her, like I had all the women I'd taken before her, but it wasn't working out that way.\n\nI couldn't get her off my mind. Three days after Chloe left, I'd gone on the prowl, looking for some hot bitch to bury my cock in, and I'd found one. The woman had a body built for sex, every curve the product of hours in a gym and the finest medical science. I thought if I just got back in the saddle, my life would return to normal, but I was only fooling myself.\n\nTwo months ago, I'd have taken the woman home and used her for my pleasure. Two months ago, I wouldn't have cared that she didn't have two brain cells to rub together. Two months ago, I'd have fucked her and forgotten her. But that was two months ago.\n\nNow my heart just wasn't in it. I'd left her at the bar. Chloe didn't have the same banging body as the bimbo, but her beauty, her sexiness, was God given and natural, not crafted by the knife of a surgeon, and that made her beauty special. Five minutes after I met her, the bimbo was getting on my last reserve nerve with her shallowness. She didn't care about anything except the latest celebrity gossip and pop culture, she had no fucking clue how economies work, and she had trouble with any word over two syllables.\n\nI knew I liked intelligent women, but Chloe had shown me that intelligence and sexiness weren't mutually exclusive or as rare as I'd thought. With her, I didn't have to choose one or the other. I tossed back the last of my drink and growled as I rose to pour another splash.\n\nI was like a drug addict, and Chloe was my drug. Each night I promised myself that was the last one and that starting tomorrow I would leave it behind. Yet, each night, as the sky darkened, she called to me like a siren, the craving to hear her voice demanding and relentless until I weakened and picked up the phone to get my fix.\n\nI returned to my chair and stared at my cell. Last week I'd deleted her number from my contacts, thinking it would break the cycle, but I'd seen her number so many times I had it memorized. I took a sip of my drink, grimacing as the liquid burned down my throat. Truth be told, I didn't want to break my habit.\n\nI wanted Chloe. I wanted her in my bed and in my life. I'd spent the last two weeks examining my feelings, taking them out and holding them up to the light to scrutinize them. I didn't love Chloe, but dammit, I wanted to. I wanted the chance to fall in love with her, to take these threads of attachment and weave them into a strong, unbreakable cable. I wanted to look at her over a meal, to hear her laugh and see her smile. I wanted to feel her touch and touch her in return. I wanted to take her lips and hold her hand as we walked. I wanted to take her out on The Winds and watch her as she conned the boat. I wanted to teach her sailing and have her teach me to ride a horse. I wanted to tell her about my day and hear about hers. I wanted to make love to her long into the night, have her fall asleep in my arms, and wake up the next morning the same way. I wanted all that, and more.\n\nI took another sip of liquid courage. I could live without Chloe, but dammit, I didn't want to. I'd been thinking about this for the last couple of days. I was going to ask her when I'd talked to her earlier, but I'd lost my nerve and hadn't. I picked up my phone, put it down, and then picked it up again.\n\nI tossed back the drink and growled as it burned. \"Fuck it!\" I snarled as I dialed.\n\n\"Calling again so soon?\" Chloe asked, her voice dripping with innocence. \"You must really miss me.\"\n\n\"We need to talk.\"\n\n\"Oh. Okay,\" she said, becoming serious. \"What do you want to talk about?\"\n\n\"Us.\"\n\n\"What about us?\"\n\n\"I can't stop thinking about you.\"\n\n\"That's sweet,\" she said, her smile in her voice.\n\n\"I'm serious, Chloe. This wasn't supposed to happen. I didn't expect it to happen, but...\"\n\n\"But what?\" she asked, her voice barely above a whisper.\n\n\"But I want you to move to Miami.\"\n\nShe sighed. \"You know I can't do that.\"\n\n\"Why not?\"\n\n\"Because my career is here.\"\n\n\"So start a new career here.\"\n\n\"Duck, we've been over this. It was fun while it lasted, but\u2014\"\n\n\"I think I'm falling in love with you,\" I blurted over the top of her, the words coming out in a rush.\n\nThere was a long moment of silence. \"You're in love with me?\" she asked, her voice so soft I had to strain to hear her.\n\n\"Yes. No. Maybe. I don't know!\" I growled. \"All I know is I can't stop thinking about our time on The Winds and about how much I miss you.\"\n\n\"I miss you too, and I enjoyed our time together, but\u2014\"\n\n\"Chloe, its more than that,\" I interrupted again. \"I feel something for you, something I've never felt before. It's not love, at least I don't think it is, but it's something. Or maybe it is love. I don't know! I don't know what it is, but I want to find out.\" I paused, breathing hard, my heart hammering in my chest.\n\n\"I can't throw away my career on a whim, Heston.\"\n\n\"I'm not asking you to throw anything away. I know you love what you do, but can't you do it here in Miami?\"\n\n\"I guess, but...\"\n\n\"But what?\"\n\n\"But you're asking a lot from me.\"\n\n\"I know I am, but with great risk comes great reward.\" I paused, gripping the phone tightly, my heart pounding so hard I could feel every thump. I waited, waited for her to respond, but she was quiet. Maybe she was as surprised at hearing my words as I was that I needed to say them. \"I want you, Chloe. I want you like I've never wanted another woman in my life. I want your face to be the last thing I see before I go to sleep and the first thing I see when I wake up. I want to explore what I'm feeling, and I want to explore those feelings with you.\"\n\n\"I don't know, Duck.\"\n\nI sighed. She was slipping away. \"Okay, but tell me one thing. Give me one honest answer, and I won't bother you about this again. Do you feel anything for me at all, or are we just friends?\" She was quiet for so long I wondered if we'd been disconnected. \"Chloe?\"\n\nShe whimpered. \"I felt something too.\"\n\nMy heart tried to leap out of my chest, and I squeezed my phone so tightly my fingers hurt. \"Like a connection?\"\n\n\"Yes.\"\n\nI swallowed hard and licked my lips. I pushed my entire stake into the center of the table, gambling it all. \"Love?\"\n\n\"I don't know.\"\n\n\"But something? Something... special?\"\n\n\"Yes.\"\n\n\"That's how I feel.\" I paused as I gathered my thoughts. \"I'm not going to pressure you, but I've told you how I feel. I want you to come to Miami. You can move in with me until you find your own place, or if you want, you can live here. I want you, Chloe. I want you to be part of my life, and I want to be part of yours. I want to find out if this... this... this whatever we have is love, the beginnings of love, or what. I want you. I want you with me.\"\n\nI heard her panting, like she was trying not to cry. \"I'd like that, but...\"\n\n\"But what?\"\n\n\"But what if it doesn't work out?\"\n\n\"Then it doesn't.\" I paused, trying to put my thoughts into words. \"It might not work out, but what if what we have is the real thing? If we feel like this after a month, how will we feel in a year, in five years? Some people go their entire lives and never find 'the one.' What if we're each other's 'the one?' Isn't that worth taking chance to find out?\"\n\n\"Yes,\" she whispered.\n\n\"You'll consider it?\"\n\n\"Will you come here?\" she asked softly.\n\nI thought about it. Would I? \"Yes,\" I finally said.\n\n\"You would? You love Miami.\" I could hear the surprise in her voice.\n\n\"I know, but if that's the only way we can be together, then yes, I'll come to you.\"\n\n\"What about Trade Winds?\"\n\n\"I'll keep her, or I'll sell her. She's not as important to me as you are.\"\n\nShe was quiet for a long moment. \"No. I won't ask you to do that.\"\n\n\"What? Sell The Winds?\"\n\n\"Move to Nashville.\" I remained quiet, sensing she had more to say. \"How could we go sailing?\"\n\nFor the first time in my life, I damn near cried over a woman. \"We'll go every weekend. I'll make sure you have a personal life.\"\n\nShe was quiet for another long moment. \"I can stay with you until I sell my house and find a place of my own?\"\n\n\"Whatever you want to do.\" I'd agree to anything. I'd give her the moon and the stars if she asked for them.\n\n\"It might take a little while to find a position.\"\n\nI smiled. \"I doubt it, but we've got the rest of our lives together.\"\n\n\"Are you sure about that? We might find out we can't stand each other.\"\n\n\"I don't think that's likely, do you?\"\n\n\"No.\"\n\n\"But even if it happens, you'll be where you can have your own sailboat.\"\n\n\"Maybe I'll just take yours,\" she teased.\n\n\"I'll give her to you.\" I smiled. \"In fact, I've got a twenty-six food Catalina I'll sign over to you tomorrow, if you want her.\"\n\n\"No, I think I can stand to share The Winds if you can.\"\n\n\"So you'll do it? You'll move to Miami?\"\n\n\"If I can find a position.\"\n\n\"You'll find one, I'll see to it.\"\n\n\"No,\" she said firmly. \"If I can't do this on my own, then it isn't meant to be.\"\n\n\"As you wish.\" I smiled. \"In your interviews, mention you have a rich boyfriend that's looking for good cause to contribute to.\"\n\nShe giggled. \"Okay, maybe I'll do that.\" She was serious when she asked, \"Are you sure about this?\"\n\nI swallowed. \"As sure as anyone can be about anything in life. You?\"\n\n\"Yes, but I'm nervous. It's a big leap for me.\"\n\n\"For me too. I'm offering to put my heart in your hands.\"\n\n\"Promise me, Heston, promise me you're serious about this and I'm not making a mistake.\"\n\n\"I can't promise this will work out between us, but I promise you, Chloe, I won't intentionally hurt you.\"\n\nShe was quiet for a long moment. \"I can accept that.\"\n\n\"I love you, Chloe,\" I said, trying the words on for size. They were surprisingly easy to say.\n\n\"Do you mean that?\"\n\n\"Yes, I think I do.\"\n\n\"But you're not sure?\"\n\n\"It's what we're going to find out, isn't it?\"\n\n\"Yes, I suppose it is.\" There was a long moment of silence. \"I should go. I guess I need to start a job search.\"\n\n\"Then I won't keep you.\"\n\n\"Love you,\" she murmured, as if she were trying the words out.\n\n\"I love you too.\" I smiled. It was even easier to say the second time. Did I love Chloe Meyer? Maybe, maybe not, but saying the words made me realize I was starting to fall for her, and I was falling hard. \"I'm looking forward to seeing you again.\"\n\n\"And I, you.\"\n\n\"Goodnight,\" I whispered.\n\n\"Love you,\" she said again, this time with more authority.\n\n\"Love you too.\"\n\n\"See you soon.\"\n\nI wouldn't have been able to wipe the smile from my face if my life depended on it. \"Looking forward to it.\"\n\n\"So am I,\" she said, and I could hear her smile from half a country away.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Brooklyn</center>\n\n\"Heston.\"\n\n\"Mr. Mallard. Brooklyn Lancaster. How are you?\"\n\n\"I'm doing great, Brooklyn!\"\n\nI heard a female voice in the background, too faint for me to understand, before the phone was placed on speaker. There was some kind of hissing along with some wind noise in the background. \"Brooklyn, is that you?\"\n\n\"This is Brooklyn Lancaster. To whom am I speaking?\"\n\n\"Brooklyn, this is Chloe, Chloe Meyers.\"\n\n\"Oh! Hello, Dr. Meyers! I didn't recognize your voice.\"\n\nShe giggled. \"Because I don't sound like Eeyore anymore?\"\n\nI smiled. \"You do sound more exuberant that when I spoke to you last.\"\n\n\"Yes, well, that's because a lot has changed in the last three months.\"\n\n\"Oh?\" I asked.",
        "\"She's learning to sail, for one thing,\" Heston commented.\n\n\"Yes, and I'm changing jobs. I'm starting at Bascom Palmer, here in Miami, in a couple of weeks.\"\n\n\"You moved to Miami?\" I asked, my voice carefully neutral.\n\n\"Not yet, but my house is on the market. I'll be staying at Duck's until it sells.\"\n\nIt took me a moment to put two and two together and realize that Duck was Heston. I smiled. Mallard. Duck. It was a perfect pet name. \"That's good to hear. Are you excited?\"\n\n\"More than you can know! Like Duck said, I'm learning to sail, and I got a pretty nice increase in my salary to boot. I owe you my thanks. This is all because of you.\"\n\n\"I had little to do with it, Dr. Meyer.\"\n\n\"Call me Chloe. You had everything to do with it. If it weren't for you, I wouldn't have met Duck. If I hadn't met Duck, I wouldn't have realized that I was missing life.\"\n\n\"So you're happy?\"\n\n\"Happier than I've ever been in my life! Thank you! Thank you so much!\"\n\n\"And you, Mr. Mallard? Are you happy with my services?\"\n\n\"Totally.\"\n\n\"May I count on you for a reference if required?\"\n\n\"Absolutely! Anything I can do, anything\u2014Chloe, the wind is shifting, so you need trim out the sail\u2014sorry, we're on the boat. Anyway, I'll be happy to do anything I can to help you.\"\n\n\"Thank you, Mr. Mallard.\"\n\n\"Call me Heston.\"\n\n\"Very well, Heston.\"\n\n\"Brooklyn,\" Heston said, taking the phone off speaker, \"I also want to thank you. I don't know how you did it, but... well...\" just thank you. You found something, someone, I didn't even know I was looking for.\"\n\n\"It's why people come to me for help.\"\n\n\"I was looking for a friend, and you found... someone special.\"\n\nI smiled. \"Sometimes, the right friend is just what you need.\"\n\n\"Yes, I guess that's right. Chloe's that, and so much more.\"\n\n\"Then I wish you the absolute best of luck... Duck.\"\n\nHe chuckled. \"Thank you.\"\n\n\"You're welcome.\"\n\nI placed the phone's handset back in its cradle and leaned back in my chair. I smiled, remembering the life in Chloe's voice. On the phone she sounded like a different woman, her voice full verve and enthusiasm that had been lacking when I interviewed her.\n\nMy smile grew. Love did that to people."
    ],
    "authorname": "SanityCheck",
    "tags": [
        "bahama",
        "billionaire",
        "holiday",
        "millionaire",
        "romance",
        "romantic",
        "sailing",
        "yacht"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/matchmaker-03-march"
}