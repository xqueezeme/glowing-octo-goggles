{
    "title": "Bonding Party",
    "pages": [
        "I was recruited for soccer. It wasn't the college I wanted. It was a party school in the deep South, but it was decent academically, it had good sports, and importantly, I got in. So of course I went. \n\nThe college, which for good reason will remain nameless, always held a pre-season soccer camp to give the teams a chance to practice together and bond. It succeeded.\n\n**** \n\nCollege life and Southern culture were both new to me. I was on my own and I knew no one, but Southerners were creepily friendly, even if you might be an axe murderer. The girls all dressed too nicely and wore makeup for lunch. Whenever a cute waitress called me 'darlin' I thought she was trying to pick me up, so it sent chills down my spine. It was weird, but not all bad when you got used to it.\n\nOur team was temporarily assigned to a single dorm, and our evenings together were fun because training regimens were not always scrupulously observed. The upperclassmen seemed to know what we could get away with, and that's what we did. They also knew players on the girls' varsity squad and thought we should do some bonding with them. They somehow persuaded the coaches to give us time off to watch the girls' first full scrimmage.\n\nEveryone was talking about the girls' left back, a Spanish girl named Isabella, and when we settled onto the sidelines it was easy to see why. She was gorgeous and extremely fit, but she had a big, muscular ass and really big boobs that bounced around enchantingly in her sports bra. The rowdier guys would cheer whenever she got a touch, and sometimes when she just ran by. It wasn't PC, but she was a secure senior who just flipped off her harassers or gave them a patronizing 'you should be so lucky' smile. I found it embarrassing, but very amusing. \n\nMy position was outside right midfielder. I wished I were still playing forward, but I was tall and fast rather than super-quick, and at the college level I was a better fit for an outside spot. I had been studying tactics for the position, so naturally the other player I wanted to see was the girls' right mid. \n\nShe was a freshman too. After the first few minutes, all I could say was that she was a tall, slender and graceful athlete with long brown hair and fabulous legs. When the ball came to her, she would one-touch it away. It's a safe option because coaches love it. It's unselfish and it develops plays fast. I thought she might be a walk-on trying to look good, but after a while she got bolder and started to assert herself. The interesting thing was that she never looked like she was really hurrying or trying hard. On the other hand, she would sometimes blow by defenders so fast that they looked bewildered, defending empty air. Her relaxed appearance was apparently a kind of trap. She looked like she was loafing, and then she was gone.\n\nI asked around and learned she was a prize recruit who carried high expectations. Her name was Tanya. During the game she got two assists and slammed a long shot off the frame. It rebounded about 30 yards. She looked like she was just out for a stroll and a ball got in her way.\n\nAfter the scrimmage we met the girls on the sidelines, as planned, at least by us. I tried to speak to Tanya but a thicket of excited teammates followed her right into the girls' locker. I didn't want to seem uncool, so I didn't push it. Actually, I was kind of in awe. I was just hoping for a spot high on the bench, and she could reasonably expect to start as a freshman, after a decent interval.\n\n**** \n\nThe meetup had apparently been a success for some of us, because the upperclassmen of each squad were already arranging the annual pre-season party. I didn't know what to expect. I'd been to jock parties before, of course, but only in high school and even then they usually weren't my style. You could say I'm not a loud and obnoxious drunk, but you could also say I'm a little too reserved for my own good. Still, I wanted to be in on the bonding process, and it seemed like a good time to meet Tanya. \n\nAs the day of the party approached, though, some of the arrangements seemed a little ominous by high school standards. I wasn't part of the planning process, of course. A committee of upperclassmen handled that, but a few details leaked. The location was going to be the basement of our dorm, a dimly lit dungeon famously filled with old couches and mattresses left by departing seniors. We were all going to wear our soccer uniforms, because someone thought the girls looked hot in their silky short-shorts. Cups being out of the question, some the guys were laughing about coming commando. There were rumors about hooking up with the other team in previous years.\n\nIt was beginning to seem like this would be a quick introduction to college culture rather than a good chance to discuss midfield tactics, but since many of us had never met, how rowdy could it get? I figured that at worst, if college came at me too fast, I could always bail out.\n\n**** \n\nThe day of the big event, the ad hoc committee handed out invitations with final details. There would be introductions to familiarize us with each other quickly, so everyone was told to bring a brief resume describing their soccer career. It said our soccer uniforms were mandatory to help with identification. Right.\n\nSo it began. Rock music was playing too loudly. Drinks were a punch mixed in a plastic trash barrel. We all wore our soccer uniforms, except that some of the girls could not resist heels and it appeared not all of them considered their sports bras to be part of the uniform.\n\nAfter we had all had some time to get buzzed, the team captains banged on a bare pipe for attention and stood under one of the dim lightbulbs to make announcements. We were here to get to know each other, they proclaimed. Our captain, Steve, said we should mingle, have a good time and get a good feel for the other team. Muffled snickers abounded. The girls' captain, the lovely Lola, said that each player would now be formally introduced. Obviously the captains knew each other pretty well, since Steve had his arm slung over Lola's shoulders and was dangling his hand over her boob, maybe even brushing it lightly. She seemed OK with that. Anyway, they were going to introduce the players at each position together, by reading their resumes and then, to promote bonding, . . . having them kiss for as long as the crowd kept clapping. \n\nThat meant I would get to meet Tanya up close and personal. It also meant our first contact would not be a handshake.\n\nTo demonstrate, the captains grabbed each other and commenced a full-body kiss. Lola threw her elbows around Steve's neck and hung herself on him. The crowd started to applaud. When it didn't seem inclined to stop, Steve lowered his hands and grabbed her ass. After a minute someone yelled \"Grab her boob!\" and the clapping got louder and more rhythmic. She seemed willing enough because she was squirming subtly against him with no obvious reservations, and so after a bit he did indeed grab a boob and openly started to fondle it through her silky jersey. The crowd broke into cheers, the clapping died down, and the captains stepped aside, picked up their piles of r\u00e9sum\u00e9s and started the other introductions. Steve looked a little flushed. Lola seemed totally cool.\n\nThe starting goalies were next. It was reasonably apparent the girl was gay. The kiss seemed clinical and the clapping lasted just long enough not to be insulting. No one got pregnant.\n\nThe starting left backs were up next. Isabella with the big boobs and uninhibited manner pretty clearly was not wearing a bra, because her swinging nipples were obvious in the clingy material of her jersey. By now everyone knew she was a senior with a dominant, intimidating personality. While she and our team's starting left back stood there in the cone of light, their resumes -- names, home towns, and soccer highlights and awards -- were read. She seemed impatient, as though the introductions were a waste of her time. Our guy, a well-built sophomore, was looking nervously at the older hottie out of the corner of his eye and gnawing his lower lip. He seemed a little outmatched in every way. She was openly staring at him like a bag of Cheetos. When the introductions were done he walked under the light and just stood there. She walked right up to him, locked him in a death grip and waited confidently for a kiss. He haltingly lowered his head. As soon as the kiss began, she started undulating slowly against him like she couldn't wait to get screwed. The crowd clapped enthusiastically and soon she was frankly humping him. Everyone knew she had to be grinding on his stiffy because there was no way he didn't have one. She was basically lap dancing him right there in front of us. \n\nNo one seemed to want to stop clapping, including me, until I realized I was getting aroused too and my turn would be coming soon enough. In a sudden panic I looked around for Tanya. I finally located her standing in a crowd of quieter players at the back of the room, in a dim corner. She wasn't clapping, so I stopped, too. She suddenly looked my way and our eyes met. I was still smiling from the little sex show, but she wasn't, so I stopped that, too. She quickly looked away.\n\nNow I was even more worried. Maybe she was shy, or gay, or moralistic, or in a serious relationship, or just awkward. I knew only social pressure was keeping her here, but mob expectations can be a forceful motivator. I was feeling sensationally awkward myself. If we both acted that way it would be a nightmare. The clapping would last forever. As a freshman I couldn't afford to chicken, but I was anticipating being mortified as soon as my boner hit her pussy. \n\nThe amateur sex show ended and it remained the high point of the evening for quite a while. The crowd didn't let anyone off too fast, especially when one of the pair was a freshman, I noticed. But no one matched the left backs until our center mid appeared with his girlfriend. She was only a backup, but they were a popular, well-known couple of party animals in a long relationship, so special treatment was to be expected. Their r\u00e9sum\u00e9s were read, and then he held out his arms to her. She seemed to be flowing comfortably into them, but at the last minute she ducked and his arms closed hilariously on empty air. Less hilariously, she was on her knees, ripping down his shorts and sucking his dick into her mouth.\n\nThe crowd went wild. The clapping was overwhelmed by hooting and screaming and stomping. He was obviously startled, but she was already bobbing at speed and fondling his balls without any evident inhibition. I wondered how many copies of this would end up on the internet. Then a girl's voice called out, \"Grab her hair!\"\n\nThe guy didn't know what to do, but the clapping intensified and a couple of guys repeated the call, so he lamely put a hand on her ponytail. There was obviously no real pressure, but it seemed to satisfy the crowd.\n\nThis was getting out of control, and my turn was only three away. I looked for Tanya again, but this time she wasn't looking at me at all. She was watching the show intensely, mouth slightly open. Maybe she was aroused. Or aghast.\n\nFinally the girlfriend pulled off, kissed the tip of his dick, stood while yanking his pants up, did a little bow and walked off, smiling and beckoning for applause. The clapping petered out. He had to tuck his dick back in, but being a cool upper classman, he did a pretty good job of keeping his dignity. I wondered whether this happened a lot in college.\n\nThe show went on. My time was running out. I figured we were in for a slaughter. We were both freshmen, and she seemed pretty cute. I really didn't have a plan if the crowd didn't mercifully let us off with just a long kiss. \n\nThe starting right-inside mids were well known and got off with a comic impression of a sensuous embrace. The starting right mids (not us, obvs) were serious but respected, and they just played it down the middle with a classic, exaggeratedly romantic kiss that got boring fast. The clapping petered out quickly. I thought we could try that. I looked around for Tanya, unsuccessfully.\n\nSteve called us, the reserve right mids, out into the light. I stepped forward but Tanya didn't seem to be around. After a few cries of 'Tanya, Tanya!\" she finally emerged, looking down at her feet. Everyone else was looking at the rest of her. She was barely recognizable. The crowd was enthusiastic. Guys were yelling \"Fuck!\" \"Damn!\" and \"Suuuuuuck!\"\n\nShe cleaned up well. Her long, slender, fit legs were made even longer by wedge heels. Her boobs, the size of large oranges, were high on her slender chest. With a little makeup and long, lustrous hair, she somehow moved into movie star territory. She was blushing bright red, a fawn in the headlights with a sex machine body that seemed to embarrass her. I'm sure all the guys were thinking she was supremely fuckable. I couldn't stop myself from staring. The team unexpectedly had a new top hottie, and I was supposed to introduce myself by molesting her right there in the spotlight. \n\nSome guy helpfully shouted at the top of his lungs, \"Rooooookies!!\" There was more hooting.\n\nWhen the noise had died a little, Steve introduced me and read my resume. Being new, I had written down only team accomplishments. Lola read Tanya's, which was basically her name and home town. Then she paused. \"I know for a fact you guys have more to say than that.\"\n\nI was about to admit I might have won an award last year, but I decided to wait for Tanya. She was the prodigy. She shyly demurred, silently waving off the invitation while staying focused firmly on the floor, so I did too. \n\nThere being nothing left to say, the clapping started in an enthusiastic, demanding way. I got harder just thinking about docking our bodies. We edged toward each other until we were toe to toe. She was going to be the hottest girl I had ever kissed, by miles. I looked at those big, high boobs, which were about to be pressed against me, projecting over her slender waist, and the soft red lips that were about to kiss me. She was still looking down. I followed her gaze. My pants extended a good six inches toward her. We were almost touching already. \n\nThe clapping was starting to sound impatient. Here goes, I thought. I put my hands on her hips, and she gently put hers on my arms. I bent forward, being careful to avoid body contact. I tilted one way and waited. She gently applied her lips to mine. Then we froze, not wanting to imply anything sexual. \n\nFrom the guys, I first heard a \"Yeow!\" and a \"Suuuuuuck!\" Then there was only clapping.\n\nIt turns out it's hard to freeze a light kiss for very long. For one thing, it's physically difficult to keep standing there with your lips just touching lightly while you're trying to breathe and your mind is racing and adrenaline is coursing through your body. After a while it even turns out to be hard to keep your lips still. Who knew? I suppose the main problem was that my brainstem really wanted to fuck her. \n\nAfter a few seconds of nearly motionless kissing, there was a collective groan. Then a girl yelled, \"Grab his ass!\" The clapping intensified.\n\nI figured we had to do something, so I slowly started to let a hand drift lower. But there was a problem. I couldn't reach her ass without pulling her toward me and squashing our shorts together. \n\nSuddenly Tanya dropped her hands to my ass cheeks and pulled herself hard against me. My cock in my stretchy shorts smashed right into her silky ones. We froze again, nearly breaking lip lock. But then she started to grind on me and French me passionately.\n\nI felt her firm breasts pressed against my chest. Her tongue was exploring. Her crotch was rocking rhythmically against my hard cock. She pressed a knee between mine, got her pussy up on top of my thigh and started to rub it enthusiastically against me. She threw her arms around my neck, and I took over the job of pressing our crotches together. It felt exactly like we were screwing. The crowd exploded. I almost did too. In fact, the crowd liked it so much that instead of fading, the clapping and hooting intensified. We were already virtually fucking, and the clapping wasn't going to stop. What the hell did they expect?\n\nJust as I was losing hope, Tanya took one arm from around my neck and shoved her hand down my shorts. She grabbed my boner and made exaggerated stroking motions for the crowd. There were screams! I was so startled I couldn't react, except to reflexively hump her hand, of course. After a few seconds I could tell I was getting pre-cum all over her. In about thirty seconds the din was unbearable and it still wasn't stopping. I was sure I was going to come explosively in her hand, but apparently Tanya figured the crowd had had its money's worth. She broke off and walked back to her corner, wiping her hand on her shorts. I was left standing there, weak and shaking. \n\nWhen I rejoined my team I got lots of pats on the back, but I was feeling slow and foolish. My pants still stood out, and I was still in awe. \n\n*** \n\nThe rest of the introductions were anticlimactic, and soon we were all drinking and mingling and bonding. I was getting a lot of interest from my teammates. They all thought Tanya was white hot, which was pretty gratifying. I broke away as soon as I could and went to find her. \n\nShe was still focused on the floor. \"Hope I didn't give you a heart attack.\"\n\n\"You gave me something, all right. Thanks for getting us out of the limelight, though. I thought two rookies would be there forever, and I didn't want to hit on you . . . .\" I didn't know where to go from there. \"You're gorgeous, by the way. And your soccer....\"\n\n\"I'm sneaky fast, right? It's always better not to show your cards. Let's get a drink.\"\n\nWe visited the trash barrel and scooped up some more punch. It was mostly cheap vodka. We took our sticky plastic tumblers to a dilapidated couch in a corner where we had a half a chance of hearing every other word. I asked how her camp was going.\n\n\"Fine. Are you here with anyone?\"\n\n\"If you mean anyone outside of that ultra-hot rookie midfielder, the answer is 'no.'\"\n\n\"Okay...\" She seemed gratified and settled back into the couch. We small-talked and filled in some blanks. She was from a small town. She had played soccer as long as she could remember. We compared notes on the college-level game, our teammates, and college insecurities. I asked about her 'sneaky fast' strategy, and after a long pause she said she had a tiger mom who would shame her into promising to succeed and then criticize her brutally when she didn't. She had learned to be modest and stay under the radar. She could still hear her mother in her head, scolding her for doing something less than perfectly. It was obviously quite a hang up. \n\n\"Did you hear any rumors about this party?\" she suddenly asked. I had to think how much to say. Sitting side by side with her, I had been dreamily lost in the view of her short shorts creeping up toward her pussy as she slouched on the couch, not to mention her pushed-up looking, handful-sized boobs right next to me. \n\n\"Nothing official.\"\n\n\"Yeah, I suppose not. But some of the girls have been saying we are expected to hook up tonight.\" She kept her eyes forward.\n\n\"That was going around our dorm too, but it was about last year. And it's just a rumor.\"\n\n\"I was told it's every year, and anyone who doesn't is kind of an outcast.\"\n\n\"Nothing wrong with that,\" I said. \n\n\"No, nothing wrong with that....\"\n\nWe chatted some more and then joined a beer pong game. Actually it was vodka pong. There was lots of laughing. We were a hot team and owned the table for a while, until we got too smashed. Then we circulated and talked to other teammates. Tanya excused herself to talk to Lola while I met some of the other girls. They were generally fit, confident and outgoing, and a lot of them were pretty hot. ",
        "By this time it was late and the party was getting quieter. I noticed some older couples getting physical and thought it was almost time for me to head upstairs, but Tanya found me again. She grabbed my hand, led me back to our couch, sat me down and put a hand on my thigh. She was looking tense, checking around the room. No one was watching us. She suddenly shifted. Our thighs were touching.\n\n\"Do you like me? Did you like our kiss?\"\n\n\"I would have thought I made that pretty clear. I think you're fantastic. And hot. I thought that was obvious.\" \n\nShe seemed pleased and sat back, still scanning the room. She contemplatively ran the edge of her thumbnail up the length of my thigh. I have long legs. \"Let me see your hand.\" I held up a hand and she pressed her own against it, palm to palm, so that the size difference was evident. She folded her fingers through mine and squeezed a little. She licked her lips nervously. She leaned in close. There was a pause. \"I think we should do it.\"\n\n\"Do it?\"\n\nShe rolled her eyes. \"Yeah, it. So we don't get off on the wrong foot here.\"\n\nI suddenly got it. \"Is it really that important to be part of the in crowd?\"\n\n\"It is to me. Soccer is important to me. I'd like to be captain someday. And, I've decided that doing it with you would be fun anyway. I know it's short notice....\" She nervously ran her hand up my thigh again, slightly inside. \"Are you . . . OK with that?\"\n\n\"If you want. But we could just tell them we did it, you know? I would never rat you out.\"\n\n\"That won't work. There has to be proof. There are rules. Besides, I promised them.\"\n\nShe had promised them, so now she had to do it. Now I got it. \"Well, then, . . . do you want to go to my room?\" Something was off, though. Rules? Them?\n\n\"No, there has to be proof. It's all set up.\" She ran her eyes around the room again and peered into a dark area of the basement. I could see a couple emerging from a dimly lit corner behind some stacked shelving. My imagination stirred, not all happily. Tanya suddenly stood and pulled me up. Holding hands, we walked over toward the shelving. \"Remember, there are rules,\" she whispered. We were behind the shelving before I could ask. \n\nIn the corner was a dim, shaded bulb casting a cone of yellow light over a grungy mattress. Also there were Steve, Lola, and the party animal midfielders, sitting on a decrepit couch. All four were groping and kissing, but they focused on us as soon as we came around the corner of the shelving. \n\nNo one spoke. The only sound was faint chatter and music wafting in from the other end of the basement.\n\nTanya, still holding my hand, looked at me. It took me a minute to grasp the situation, but while I was adjusting Tanya took a deep breath and nodded seriously to the apparent party committee. They nodded at her. They still had their hands full, but they were paying rapt attention.\n\nTanya wordlessly pulled me onto the mattress. We were still standing. She let go of my hand and pulled off her soccer jersey in one quick, nervous motion. She dropped it next to her, then shimmied out of her shorts and stepped out of them. She was wearing tiny black lace underthings. Her boobs looked sensational, high and round and trying their best to overflow some delicate half cups. Her panties were barely visible, rising just past her pussy. She kept her wedges on. She waited. She was all muscle, tendon, rib and boob, and the boobs were beckoning. She was hotter than hot.\n\nThe committee turned its attention to me. Steve was fondling Lola's tits under her shirt. The center mid had a hand in his girlfriend's pants. She was flushed and mouth-breathing. \n\nIt suddenly occurred to me what everyone was waiting for. I hurriedly stripped off my jersey. Tanya was already looking lower, where there was a big, embarrassingly sideways bulge in my soccer shorts. I kicked off my shoes and decided to drop my shorts and underwear together, since mine didn't look as fancy as Tanya's. My dick was already explosively hard, so there was no way to avoid it bouncing as it cleared my pants. Tanya stared at it and licked her lips. The committee turned its attention back to her. So did I.\n\nWithout saying a word, Tanya walked to a spot at the center of the mattress above a small hole and stood over it, facing the committee. She motioned for me to step behind her and whispered that I should strip her. She faced the committee again and held her arms forward.\n\nI unhooked her bra, helped it slide down her arms, and dropped it, exposing her tits. She widened her stance a bit to indicate the next step, and I hooked a thumb in each side of her panties and slid them down, getting a good view from behind of her rounded, muscular butt and her pussy as she bent to step out of them. She already looked wet; even the insides of her thighs seemed damp. As I rose, my stiffy contacted her ass crack. She pressed back against it a bit.\n\nWe looked at the committee for direction. Steve now had one hand around Lola's shoulders and over a tit. With the other he was languidly stroking her pussy. The animals were further along. The girl was red-faced and humping her bf's hand while enthusiastically jerking him off. \n\nLola said something indistinguishable. Tanya nodded and backed up until her delectable ass was firmly docked against me. Reaching underneath her legs, she bent over and inserted my cock into herself. It slid right in. She reached behind her and gripped my hips as far back as she could reach. \n\nI knew what to do. I grabbed Tanya above the elbows. She bent forward a bit more. I started to fuck her, slowly at first. Her boobs swung gently. As we heated up she started whimpering, and I went faster and faster until her tits were bounding around and her ass flesh was rippling in waves as I slapped against it. She was squeaking so loudly that I thought we might be heard over the music. I was going to come in no time. The committee stopped their groping, transfixed. I pumped and pumped. Tanya seemed almost out of it. We both had a sweaty sheen. Her long brown hair was hanging in front of her on one side, swinging and whipping around wildly. \n\nI was about to blow a huge load into the hottest soccer player ever, but even in my sexual haze I saw Lola waving a hand in my peripheral vision. We both looked up. Lola made a circle in the air around her face.\n\nTanya immediately escaped my grasp and went down on her knees. She hurriedly grabbed my cock, aimed it squarely at the bridge of her nose and started licking the underside and pumping the shaft. I stood watching, practically hypnotized, and almost immediately exploded all over her. She painted herself with ropes of cum.\n\nShe rose and kissed me. We grabbed our clothes and looked for a place to dress. There was nowhere to go, so we started dressing right there on the mattress. Then we obviously had to clean up Tanya's face before we went back to the party, so we wiped her clean with our fingers. She grabbed my hand and licked my fingers off. On the couch, the girl midfielder orgasmed loudly. Tanya hugged my arm weakly as we walked out. \n\nWe left the party immediately. We didn't want to be around for any post-mortems and we were vibrating with alcohol and adrenaline. Also, Tanya said she hadn't fully enjoyed herself yet and would like an after party.\n\n**** \n\nWe were smashed, but that night was the best. She was by far the hottest girl I'd ever been with, and I kept feeling I had better enjoy it while it lasted. Sure enough, in the early hours she grabbed her stuff and sneaked out in the dark. I noticed but didn't make a scene. I hoped Miss Perfect wasn't ashamed. I thought she was fantastic. Whatever the result for her, the bonding exercise had been highly effective for me.\n\n**** \n\nShe didn't contact me, nor I her, for days. It was hard to assess the situation. I was wild about her but we certainly weren't lovers in any romantic sense. We weren't even friends. We were strangers who had been randomly paired for a night. So, not even up to the level of Tinder dates, I supposed. \n\nFinally that got too weird and I went to one of her games thinking that the only way to reestablish communications was in person. This time she waited for me after the game and we walked toward her locker together, mostly in silence. I suspected her of wanting to put the whole bonding thing behind her, so my presence might be repulsive. I decided not to press it, and the conversation didn't get far beyond 'good game'. Still, I thought she had to feel my interest. I said I'd like to take her out for a cola or something after she changed and she didn't say 'no,' so I waited.\n\nWe went to a bar just off campus and had iced coffee, drink of clear-headed people. I was ready with an unstructured question: how was she feeling? \n\nShe shrugged. \"Like a slut.\" She acted casual but couldn't look at me.\n\n\"That was a tough situation for you. You had to make some quick decisions. I'm sorry if I . . . .\"\n\n\"No, no . . . don't apologize,\" she said wearily. \"I did it to myself. It may have been a bad decision, but it's behind me now and it served a purpose. I'm glad I did it. That's not what's bugging me.\"\n\nI waited.\n\n\"Problem is....I kind of liked it. To be honest, I can hardly stop thinking about it. I'm losing sleep. I can practically get off just re-living it in my head. It's perverted.\"\n\nI didn't know what to say. My psych classes hadn't covered this. I took the safest course.\n\n\"I have to get a grip on myself,\" she continued. \"I suppose someone would say this is because I've been repressed at home. Little Miss Perfect finally met the real world, and she got schooled.\"\n\n\"I still think you're terrific.\"\n\n\"You're a guyyyyyyyyy,\" she said with a comic whine. \"I'm a girrrrrrrrrl. What's OK for you isn't, for me. We're supposed to have evolved different reproductive strategies.\"\n\n\"Aren't we past the point where evolution controls us? Look at birth control. Eyeglasses.\"\n\n\"I have a reputation to protect, though. I can't be doing stuff like that.\"\n\n\"Yes, but that situation was really unusual. You were helping your reputation within the team. That's why you did it, right? So you wouldn't be an outcast? You want to be a team leader. No situation like that is likely to come up in real life, so just call it a one-off and keep trusting your instincts. From what you told me, your mother is probably what's really bothering you. You're worried she would be screaming at you.\" \n\nShe shrugged again, seeming annoyed with either herself or me. We talked a little, and we split. She was a tough cookie. A tiger baby. \n\n*** \n\nA week later Tanya was sidelined with a serious calf strain. She did PT and came to games to support the team, but she also disappeared for a few days. My phone buzzed a few days after she returned, right after practice. The message said, \"Ready.\" We agreed to meet in the bar again. \n\nThis time she ordered beers for both of us. Her coach had allowed her a few days off to go home. She had gone with fresh eyes and seen how pushy and controlling her mother really was. She didn't pick a fight, but she had renewed her determination to make her own decisions now that she was going to be away from home. Her first decisions were that we were going to date, and I was going to help her stop feeling guilty about the party. \n\nI gave it some thought over the next few days and decided that her feelings probably weren't all that hard to understand on a common sense basis. So several nights later, while we were sitting in my room doing homework together, I brought up the party again. \"I understand why you did it, but the question is, why did you like it, right?\" \n\n\"Right. I've been thinking. Why was it so hot? I don't have rape fantasies, but it seems pretty kinked, doesn't it?\n\nI took a long breath. \"Well, you can have my amateur read-out, if you want it. I bet you like feeling slutty because it's pushback against your mom and her perfectionism. What she did to you was probably child abuse, so wanting to defy her seems justified. You liked doing it with watchers only because that seemed much more slutty, and you actually like the fact that it was voluntary, because that made it real pushback rather than just circumstance. So it pushed a bunch of buttons for you.\" \n\nShe thought. \" . . . .Well, it's nice that you're giving me some justification. Thanks for that. Fuck my mom anyway. She's still crawling around in my skull. She'll probably be there for life. Maybe I needed an exorcism.\" \n\n\"I hear things get better with time.\"\n\n\"Who knows. Why wait. How about trying again? We could have another exorcism .... might be hot.\" She couldn't meet my eyes again.\n\nI thought I had discovered which buttons to push, but since she was my brand new girlfriend, I didn't want to push them too hard. Fortunately, she seemed intent on defying mom at the moment, which was a start. I asked her if she was serious. She was. I asked her if her inner slut was ready, right here and now. She shrugged acceptance.\n\nDoing my best to be commanding with the girl I thought was awesome, I told her to stand in the middle of the room and strip. She complied readily, but of course, it was only me watching so it wasn't much of an ask. You can't tickle yourself.\n\nI stood at arms' length, pinched both her nipples and, holding them tightly, asked whether she really was ready to be a bad girl. She nodded. So I grabbed her by the elbow, marched her over in front of the mirror above my bureau, stood behind her and massaged her slit and tits until I could enter and fuck her from behind, as we had done at the party. I gave her a nice long chance to stare at her reflection jerking up and down as she was being held and fucked before I switched to holding both her elbows with one arm and grabbing a handful of her long brown hair with the other, pulling her head back and banging her harder and harder so that her whole body was practically lifting off the floor. I whispered that I was just using her to get off, and that I needed a slut like her who had big bouncy tits and would take a big facial. Her knees started to go after just a few seconds. I had to hold her up while her legs shook and she braced herself against the bureau, still staring at her own reflection lurching up and down, impaled on me and helpless.\n\nAfterwards I carried her to my bed and we had a long cuddle session. I thought I had been pretty clever, but hoped I wasn't associating myself with something she would rather leave behind. \n\n**** \n\nEventually she said our exorcism had been really hot, but we both thought the concept had been proved and we didn't need to hold any more of them. Not much else changed. In public she still was Miss Perfect. She practiced hard and studied hard and worked to make friends on both teams. Lola in particular was warm and open, if highly sexual. Isabella was the holdout. I thought she might see Tanya as a rival, but they couldn't have been more different. Word was out that Isabella had slept with half of both teams during the course of the season. Tanya was attached to me, and of course I was attached to her. But I wondered what was going on in her head.\n\n**** \n\nThe end-of-season party was announced for late fall. The air was cool, even here in the South, and the trees were working on a poor imitation of New England foliage. The committee laid their plans and emailed the invitations. The party was going to be in one of the frat houses, but some players got a second invitation to an after-party in the same basement we had used before, ostensibly to discuss nominations for next year's captains. Any illusions about the real theme were dispensed with early, when Lola circulated word that the dress code called for soccer uniforms again. Lola told Tanya there would be no mandatory events. Everything would be completely voluntary. \"Like last time?\" I asked. I wondered how Tanya would choose to handle it.\n\nShe had no hesitation. \"This seems like a good chance to have another exorcism! I'm going for it, OK? Let's have a few extra pops and just do whatever we're told. Are you in?\"\n\nI was.\n\n**** \n\nThe evening of the party we pre-gamed a bit and then got pleasantly buzzed at the frat house. Everyone had a good time replaying the season and congratulating each other. But a certain number of us were more focused on, and apprehensive about, the after party. \n\nTanya and I walked over to the basement together, a little on the late side. She hugged my arm as we got closer. Anticipation hung in the air. Her silky top was clinging to her tits and nipples as they jiggled gently around, unstayed. My semi-boner was painfully obvious in only my polyester team shorts. She wanted us to be party-ready. \n\nInside, the music was already playing. The trashcan of punch was back, sticky as ever. Someone had brought a laptop and a projector and was streaming professionally edited season highlights on a whitewashed wall. Steve and Lola were already there, as were the party animals. Isabella the hot left back was slumped on a couch facing away from us, doing something I couldn't see with our super-quick striker. Her hair, in a high, thick, braid, was draped over the back of the couch. All it needed was a sign saying 'Pull Me.' Three other couples I knew were sitting together, drinking and chatting. We went around greeting everyone. I glimpsed Tanya surreptitiously stealing a glance behind the shelving. She came back looking disappointed. One last couple arrived a few minutes later, and then Lola and Steve paused the projector and made some announcements. \n\nSteve toasted our winning seasons and said that our first bonding party had clearly been a big success. He invited us to drink, mingle and watch the season highlights. They might help us with the choice of captains later in the evening. Rude commentary was encouraged.\n\nWe pulled up some couches in front of the video and started cheering our favorite plays and players as we drank ourselves silly. Everyone was feeling great. I had my arm around Tanya, who in her new persona was surreptitiously running her fingers over my boner whenever I was on the screen. Other couples were getting even more affectionate, but everyone was still able to scream \"gooooooooooooooallllll\" and take another drink whenever we scored. The video went through the whole season, and there were lots of goals, but the biggest cheers were for a slo-mo of Isabella's big, loosely constrained tits flying around under her jersey as she ran up the sideline. I could see the bonding process at work. \n\nThen the scene suddenly changed. It was a dark, fairly static indoor shot. It was a porn clip, actually. Some girl with a cute ass, in a thong and shot from behind, was giving head to a guy whose face was out of frame. There was shocked silence. In the background, I suddenly recognized the stacked shelving at the far end of the basement.\n\nSteve talked over the clip. \"We also have videos of some other highlights that Lola and I thought you'd all enjoy. You know we encourage bonding. I'm glad to say that all of you here tonight engaged in our little bonding exercise this Fall. We hope you'll be the heart of next year's teams, and I'm pretty sure that somewhere in this room are next year's captains. Enjoy the show. Don't forget that rude commentary!\" \n\nI listened to this ridiculous justification half-heartedly while watching the girls' head bob faster and faster. The guy had his arms dangling awkwardly at his sides, like he didn't know what to do with them, but eventually he stopped thinking so hard and grabbed her head in his hands. To stop him from choking her, the girl grabbed the base of his shaft and held on as she sucked. The guy was tensing up and arching his back in an effort to penetrate deeper into her. Apparently he came, because the girl choked and then spent a minute wiping off her chin and breasts. Then she turned to pick up her clothes, and we could all see it was the goalie, who was either bi or a great actress taking one for the team. We all applauded enthusiastically and looked over at her. She laughed and hid her head in her hands. She was leaning against a sub from the girls' team, who jokingly pushed her away before they put their arms around each other and kissed passionately.",
        "The next clip showed a couple just beginning to strip. The camera was aimed too low to identify them, but their obvious embarrassment somehow made the scene hot, tense and more relatable. They hunted around for places to put their clothes before just dropping them on the mattress. Then, naked and still standing, they kissed. He looked catatonic. His boner was pushed to the side. The girl, who looked extra fit and muscular, stroked it while he held a small, girlish boob. Then she got down on her back right in the center of the camera coverage. He inserted himself and initially just lay on top of her while he fucked her, but after looking off camera for a moment he raised himself up on his arms and started banging her hard. She started moaning and begging and writhing and screaming \"fuck me fuck me fuck me\" so loud I wondered no one had heard her. Her performance was incredibly hot, so it was interesting to see that she was the very quiet, timid, reserved freshman center back. Everyone gave her a standing ovation and there was lots of hooting while she put her hands to her face and slumped in her seat with a ruefully mortified grin.\n\nIt went on. Not everyone had been called on for the same performance. A thin girl with an extraordinarily beautiful face had given a bj and taken a facial. Girls with big tits had fucked cowboy. One with a nice ass had done doggy and been slapped a few times. Everyone was transfixed seeing their friends and perhaps flames doing porn. No one seemed to object. Complaining now would seem a little late and un-cool, since we hadn't exactly been forced into it. \n\nThe crowd was getting more and more smashed, enthusiastic, uninhibited, and horny. In fact, looking around the roomful of players who had nothing left to hide, I saw that many of them were getting it on. The party animals were having their own party. In their video, she had been looking right into the camera from inches away, panting and jerking while her boyfriend banged her doggy and her big tits gyrated wildly beneath her, so she really had no possibility of any pretense of dignity. Now she had had her jersey pulled up above her tits, her hand was in her boyfriend's shorts, and they were stroking each other's equipment while they kissed and fondled heatedly. The goalie and her girlfriend had their hands in each other's pants. Behind us all, a couple had moved across the room to one of the mattresses in a dim corner and were kissing and wrestling in their lightweight soccer outfits. Tanya was clearly aroused, based on the front of her shirt. She was lightly and rhythmically squeezing my cock through my shorts as she dreamily watched the show and massaged her own pussy through her pants.\n\nEveryone was getting their turn in the videos except, I noticed, Isabella the hot left back, and Tanya. Apparently they were being saved for last. The crowd noticed too, and there were occasional chants of \"Isabella, Isabella!\" and \"Tanya!\" Isabella would, I assumed, be the grand finale.\n\nBut Isabella was next up on the wall. There was a group murmur and we all suspended our private activities to watch. She was standing next to the forward, a small, dark, wiry guy, and calmly holding his stiff dick in her hand while they both looked off camera. He raised both hands to her big boobs, scooped them up from below, and shook them. Then he tweaked and teased her nipples with his mouth. All the while she was calmly stroking his cock, which was obviously stiff as a board, and pretty clearly waiting impatiently to get fucked. \n\nAfter looking off set again, the guy lay down on his back with his feet toward the camera while she mounted him facing it. He gripped her wrists from behind. Resting on her knees, she experimentally raised and lowered herself on his cock. Tanya gripped my dick tightly. Isabella did it again, faster, and suddenly the video switched to a split screen, one side showing her face and her jiggling tits, and the other showing his cock sliding in and out of her pussy. As her bounces increased she grimaced in ecstasy and began to moan sexily. The audience was quiet, entranced, watching her become more and more aroused. After a while she was bouncing as hard as she could and parts were flying everywhere. Her big ass cheeks were wobbling wildly and she was flinging her head back, panting and moaning. The forward kept a death grip on her arms but she kept bouncing, lost in wild abandon, until she obviously came with a series of loud moans and shudders. The basement erupted with cheers. We all looked for Isabella. She was leaning casually against a wall with a drink in her hand, ankles crossed and seeming unimpressed.\n\nOf all the people in the room, that left only us.\n\nThe screen faded to black. Then, slowly, bit by bit, a still picture resolved itself. It was of Tanya, standing, shot from directly below through that hole in the mattress. There was her pussy. There was my dick in it. There was her fit, muscular abdomen. There were her tits, clearly excited with nipples erect, and between them, looking down, her fantastically gorgeous face, frowning in concentration, her fashionable eyebrows scrunched down over half shut eyes, her mouth open, her tongue licking her upper lip. The picture lingered. The room was silent. I was in awe again. In the silence, someone went \"Yeeeeoooowwwww!\" \n\nTanya shoved my hand down her pants. She was completely wet. I inserted a finger.\n\nThen the screen dissolved into our video, picking up where Tanya began to remove her clothes. I remembered that well, of course, but I didn't realize that I had been so obvious about ogling her butt and pussy as I pulled her tiny panties down. Nor had I seen the expression of pure lust on her face as I held her elbows and pumped her from behind while the committee watched in silent fascination. Nor had I seen her tits jiggling wildly, or her eyes rolling back, or the tremors in her shaking abs. Nor, in the heat of the moment, had I realized she was humping back, straining against me and bending to take in more and more of my cock. When it looked like she was flushed, breathless and just about to orgasm, she suddenly wheeled and knelt before me, hands on my thighs, and tilted her head back to receive my cum. The video went slo-mo, and from a side angle I saw her lick the underside of my shaft before she grabbed it and pointed it at her own face, and I saw her flinch slightly as each rope of cum flew through the air and landed on her. I re-lived our joint effort to clean up her face and our hands before we went back to the party. And finally, the original still picture returned and zoomed slowly until it showed only her fantastic face framed by her boobs and erect nipples, with her tongue licking her upper lip in arousal. Then the screen faded back to black. \n\nThere was stunned silence. I kept fingering Tanya. Then slowly, the chant built: \"Tan-ya! Tan-ya! TAN-YA!!\" People were standing and applauding. From somewhere a guy's voice called out \"Cap-tain Tan-ya!\" It might have been mine; in any event, I got a good sharp elbow in the ribs. Tanya waved to her fans as coolly as possible with my finger still in her.\n\nIsabella got up in front of the darkened wall and looked disdainfully at her date. He was slumped on the couch. His pants were open and there was a dark patch right above his crotch. The excited nipples on Isabella's enormous boobs were straining hard against her full jersey as she addressed the group. \"I'm horny. Who wants to do some bonding?\" She looked pointedly at Tanya, and at me quite obviously fingering her.\n\nStill in the process of being finger-fucked, Tanya whispered, \"You should do it. You haven't had any variety all season.\" Considerate.\n\nBut Isabella was already headed our way. She firmly took Tanya's hand, said \"C'mon!\" and turned to march off toward a mattress. Tanya, though, resisted and looked beseechingly at me. She grabbed my wrist out of her waistband and held on for dear life.\n\n\"Hey, you're the one who wanted to do whatever you're told!\" I reminded her.\n\nBut the thought of doing Isabella was roughly as attractive as having a porn star at my disposal, plus a hot fudge sundae big enough to wrestle her in. When Tanya nervously pulled me up with them I didn't resist, even though, after seeing Tanya's video, I was sure that Isabella was really after her.\n\nIsabella marched us over to a mattress a few feet away and confidently enfolded Tanya in a boob-to-boob embrace and a lengthy kiss. This was new. As far as I was aware, Tanya was 100% straight, but she briefly seemed to appreciate the affection, or the novelty, or maybe just the sensation of Isabella running a hand into her pants and fondling her pussy. But after just a second Tanya abruptly jerked away, acting like she just woke up, and pleadingly looked toward me. \n\nSeeming slightly disappointed, Isabella changed her focus. She strolled over to me and stood inches away with her boobs touching my chest. There was no kiss; this was all business. Reaching down with both hands, she felt around for my dick through my shorts. Satisfied, she reached into my pants and started to fondle and stroke me. I seized the opportunity to grab and mash her boobs, pretty much a lifelong desire. Then, abruptly, she got down on her knees, jerked my shorts down, dodged the inevitable, and started bonding with me. Tanya looked unsure how to take it but she came around behind me and stood looking over my shoulder while running her hands over my chest. Isabella looked up at both of us with my cock firmly jammed in her mouth. Then, perhaps for Tanya's benefit, she gave me an exaggeratedly slow and lascivious tongue bath all up and down my shaft and around the head, all the time staring over my shoulder at the transfixed Tanya. She let my rigid cock rest on her face and flicked her wet, warm tongue underneath. She was a master. Tanya kept watching.\n\nI felt Tanya press her pelvis against my ass, and push. Isabella had to take in more of my cock. \n\nIsabella's tits were swaying loosely under her jersey as she sucked me. Reaching down, I got a grip on the jersey and pulled it over her head, interrupting the hard vacuum on my cock only briefly. Her enormous tits bounced free and swayed to a stop. She continued running her lips back and forth over my shaft.\n\nI wasn't going to last this way and I could tell Isabella wanted more from me than a mouthful, so I twisted a bit, put an arm around Tanya's neck, and gave her a soulful look and a meaningful kiss while my dick was being sucked. She released me and backed away. Her eyes were still on Isabella, who was now reaching for something up between my thighs. Tanya reached for her own pussy.\n\nI picked Isabella up, remembering not to kiss her, and dropped her face down over the back of a dilapidated velvet couch. Her butt stuck up and her pussy was aimed right at me. I inserted my cock. Her ass was fantastic -- large, rounded, and tight. But before I could do much, Isabella reached around and gave herself a couple of sharp smacks on the ass. I got the message and slapped her lightly. She looked annoyed. I grabbed her wrists, pulled, and started to fuck her. Tanya suddenly was at my side. She reached over and slapped Isabella's ass cheek really hard. It reddened and wobbled enticingly. Isabella, who was suddenly looking intently back at Tanya, went \"huuuuhhh!\" and wiggled her ass. Tanya smiled and smacked her again, even harder, as I stroked in and out of her tight pussy.\n\nIsabella suddenly went ballistic, grunting and trying to hump my dick. Tanya was startled and briefly stopped slapping, but then she grabbed Isabella's braid, pulled it hard, and slapped her some more. Isabella's head bent back and her back arched. She tried futilely to hump my dick, rocking her pelvis against me, but she was limited by her posture. I increased my fucking speed, Tanya slapped again, and Isabella groaned \"Uuuuuuuunnhhhhhh!\" as she came.\n\nThere was silence. And then, raucous cheering. I'd forgotten about the entire rest of the in crowd, who appeared to have been gathered around in the shadows, silently watching the team hotties perform. Isabella righted herself and coolly strolled over to the trash can for a fresh drink. She was naked and her thighs were dripping. Tanya flowed into my arms and gave me a deep, passionate kiss. \n\nBut something was nagging me. The clapping was still going on, too long, much too long. Tanya's kiss was getting more intense, and now she was squirming against me. The clapping was getting louder and rhythmic. Apparently the show was still starting. \n\nTanya took her lips off mine and whispered into my ear. \"Use me!\"\n\n\"Really?\" I'm so clueless.\n\n\"Do it!\" She wrapped a leg around me, stuck her tongue in my ear and pressed herself harder against my cock.\n\nI picked her up and laid her down on the mattress. There was cheering.\n\nI rolled us over and pushed her up so she was on her knees astride me, and together we inserted my cock in her pussy. It slid in frictionlessly. I grabbed her wrists and started to fuck her. She cooperated by bouncing on me, head back, eyes closed and mouth half open, making little sounds of arousal. Beads of sweat were joining and running down her fit, flexing stomach, and her tits jiggled each time she landed on me. It reminded me of Isabella's video, only hotter because she was my girl, and she was sexier by a mile. After seconds she was bouncing on me furiously, whimpering and moaning and writhing on my cock like a girl possessed. I couldn't hold back. She was impossibly hot. Straining against her, arching my back and trying to bury every inch of myself in her, I came, and suddenly she was shaking and falling on me, limp and sweaty and the applause went on and on and on.\n\n**** \n\nWe held the vote on captains. The center-mid party animal was nominated as the men's team captain. I knew we played well together, so that was good. Tanya was nominated as the girls' captain and gave a little speech wearing only her shirt. It almost came down far enough. No one complained. \n\n**** \n\nWe staggered out of the party right after nominations. Adrenaline was still coursing through us, but we were smashed and Tanya was still carrying her shorts. \n\n\"That was fun,\" she said hazily, \"Especially smacking Isabella. That girl needs to be taken down a notch, and nobody likes her anyway. Plus, Mom would be totally scandalized. It was nice to exorcise her again.\"\"\n\n\"I can't wait to find out what you'll organize next year, Captain!\"\n\n\"Oooohhhh -- wow, good point. But, it may be different. I really enjoyed getting it on when I wasn't the victim just now. Maybe I've turned a corner.\"\n\nI swatted her semi-naked bottom affectionately as we walked. \"That's great. Of course, if you find yourself backsliding, I'm happy to help.\"\n\nShe giggled. \"Take that, too, Mom! \n\n\"Seriously, though, maybe this time we could have an after-after party with no sneaking out?\"\n\n\"Just what I was thinking. I'm not going anywhere.\"\n\nI decided that I was really glad to be playing right mid."
    ],
    "authorname": "Fervid",
    "tags": [
        "young",
        "college",
        "partying",
        "voyeur",
        "outdoors",
        "group",
        "handjob"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/bonding-party"
}