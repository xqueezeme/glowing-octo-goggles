{
    "title": "A Shepherd Afield Pt. 03",
    "pages": [
        "Author's Notes: \n\n'A Shepherd Afield' is a continuation of 'A Shepherd in France' which continued the story of 'The Shepherd of Ashburn Court'. Minimal effort is made in this tale to explain the backstory so please read the other stories first. \n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n******** \n\nChapter 17 \n\nIt was Sunday morning, just the day after he'd returned from beautiful Costa Rica but Ben's vacation already felt like a lifetime ago. The weather at home was cold and wet so staying inside was the game plan today. \n\nNews of his court summons had reached his circle of friends and they'd come to see him. \n\nTrish and Rochelle were there because they'd been with him when he received the summons. Trish had called Hannah the night before to fill her in so she'd come over. Rochelle had spoken with Catherine but she had an appointment she couldn't break in the morning so would be coming over later. \n\nBen sat on his living room couch fidgeting with his finger brace as he waited for Hannah to finish reading. Tina was quietly cuddled up against his right side and Lucy was cuddled up against his left, also silent. Truthfully it was only their calm confidence in him that was keeping his nerves from completely fraying. He was badly shaken by the reappearance of Wendy in his life after all this time. \n\nTrish was fuming as she paced behind the couch. She'd had her moment to vent her outrage and was probably just recharging her batteries for another go. \n\nHannah was sitting across from Ben reading the document he'd been served at the airport the day before. Her expression kept jumping between anger and incredulity. Finally she looked up at Ben. \n\n\"The woman is certifiable if she thinks this will fly in a court of law! She can file for the divorce but she has no grounds to go after your money! She abandoned you! It's been, what, ten years?\" \n\n\"Twelve,\" Rochelle corrected. \n\n\"Fucking FUCK! Twelve fucking years she's been gone and NOW she's back?!?\" Trish exploded. \n\n\"Trish!\" Ben called out to get her to calm down. He turned to the beauty tucked under his left arm and gave her a quick kiss on the temple. \"Lucy, could I ask you to make us some tea please? And maybe a plate of those cookies Karen made?\" he asked and she slipped off the couch with a smile to go into the kitchen. He caught Tina fidgeting as she wanted to help but he just gave her a hug and a kiss on the temple as well. \"Stay put!\" he growled quietly for only her ears and felt her settle in. \n\nHis daughters Karen and Penny were sitting on the love seat watching the drama unfold. They had plans to have lunch at his place with the McKellan twins then they were all going bowling afterwards but for now they listened. The night before Ben had filled them in on who Wendy was and what was happening. They were both a little worried it would disrupt their new life with Ben and their new family but he assured them everything would be ok. \n\n\"Trish, please come here. Please calm down.\" He pulled her down to sit in Lucy's spot and gave her a squeeze. He felt her trembling settle a little and she let a breath out in a huff. Then he turned back to Hannah. \n\n\"I don't know how she is going to justify it. I did some research and her lawyer's name pops up all over the Internet. He's a real dirtbag, known for his sleazy tactics, but he seems to be a successful lawyer,\" he sighed. He'd immediately contacted his lawyer the night before and sent him a scan of the document. \n\n\"The court date is a month away. Is there any way for you to reach out to Wendy directly to see if this can be resolved without the lawyers,\" Rochelle asked. \n\n\"Ben needs to let his lawyer deal with this and stay as far away from that bitch as he can!\" Trish piped up. \n\n\"What did Gabriella say?\" Hannah asked. \n\nBen looked at her, pleased to hear Hannah speaking of Gabriella in a positive way. \"I haven't told her.\" \n\n\"WHAT?\" gasped four women, including Tina this time. Penny and Karen just watched, wide eyed. \n\n\"She has enough on her plate right now. I don't want her worrying about me,\" he grumbled. \n\n\"Ben, more than any of us, she was there for you after Wendy abandoned you. She deserves to know!\" Hannah blurted. \n\nLucy returned with a tray of mugs, a tea service, and the plate of cookies. She set it down on the coffee table and poured for everyone. \n\nOnce everyone had a mug in their hands, sipping their tea, and a cookie Ben addressed them. \n\n\"I'm going to be flying to Australia to deliver a prototype. I was going to stop in Milan on the way there to spend a couple of days with Gabriella. I thought I'd tell her then.\" \n\n\"Ben, you should tell her now,\" Tina said gently. \n\n\"But she's trying so hard to save that company! I don't want to distract her with this news. It's a month away!\" Ben exclaimed. \n\nTina just looked up at him with her lovely brown eyes and Ben crumbled. \"OK, fine. I'll call her later.\" Tina continued to look into his eyes. Ben sighed and Trish snorted in amusement as she looked around Ben at Tina. \n\nHe sighed. \"Lucy, would you please bring me my ce-\" She was already standing before him with his cell phone held out to him. \n\nTrish barked a laugh and he had to grin as he took the phone from her hand. \n\nHe dialed Gabriella's number. It rang four times before she picked up. \n\n\"Ben!\" Her voice was so full of happiness he glanced at the others and they waited. \n\n\"Hi Gabriella! How's it going?\" \n\n\"Ahhh, so busy! We're back on track though! Thanks to you! Your name has leant the company a great deal of respect with our suppliers!\" she gushed. \n\n\"My name? Never mind, we can talk about that when I visit you,\" he said and heard her squeal in excitement. He grinned. \"Listen, can I put you on hands free? I have a few people here with me. Tina, Lucy, Karen, Penny, Trish, Rochelle, and Hannah.\" \n\n\"What's happened? Where's Catherine?\" she said, immediately picking up his tension. \n\n\"Catherine will be over later. Hands free?\" \n\n\"Sure.\" \n\n\"OK, you're on the speaker. \n\n\"Ben, what's happened,\" she asked, serious once more. \n\n\"When Trish, Rochelle and I arrived at the airport yesterday I was served with a court summons.\" Ben took a breath and let it out. \"Wendy is suing me for divorce and she wants ten million in the settlement.\" \n\n\"Wendy?!? Oh my god, Ben! Are you ok?\" Gabriella gasped. \n\nHis heart immediately ached wishing she was here for him to take into his arms. The concern in her voice choked him up. He cleared his throat which was threatening to close up. \n\n\"Yes, I'm doing ok,\" he finally managed, voice rough with emotion. \n\n\"I- I can be on a plane-\" she began. \n\n\"NO! No, it's fine! The case won't be for a month. There's plenty of time. You have important things to do there. I will come visit, we can talk then. I just wanted to let you know.\" \n\nHannah leaned forward. She'd noted Gabriella's immediate worry about Ben's peace of mind and the last vestige of her unease with Gabriella fell away. \n\n\"Gabriella? This is Hannah.\" \n\n\"Hi Hannah!\" \n\n\"I wanted to let you know that I've read the court summons and there is no legal ground to anything in it aside from the dissolution of the marriage. I think that is something they both want.\" She looked at Ben and he nodded. \"I think it would be better to leave this to the lawyers and avoid any contact prior to the actual court date. What do you think?\" \n\n\"I completely agree. Thank you for looking into this Hannah! Ben, please step back from this and let the lawyers deal with it. There is a danger she or her lawyer will try to manipulate you emotionally.\" \n\n\"Understood. Thanks Gabriella,\" Ben said quietly, still wishing she was here to hold. \n\nThere were some muffled voices on the cell then Gabriella came back. \"Sorry, I have to get back to the meeting. Ben, as soon as you know please let me know when you'll be visiting. I love you!\" \n\n\"I love you too Gabriella. Bye.\" \n\nHe disconnected the call and forced a smile onto his face and looked around at his guests. \n\nHe saw they weren't buying his smile so he let it drop. \n\n\"If you miss her that much you should tell her,\" Hannah said. \n\n\"And risk having her give up her dream? No. I won't do that. I'll visit her and that's that!\" He scowled and got reluctant nods from the others. \n\nHannah glanced at her watch then stood and nodded to Trish. \"We have to go if we are going to make it to that movie with our boys.\" \n\nTrish reached up and turned Ben's face in her direction. She tilted her face up and he kissed her. After, she pushed herself up to her feet and joined Hannah. Ben got up and followed them to the front door as Rochelle joined them. \n\n\"I have to go too. I have some arrangements to make for setting up my new restaurant in California,\" she said with a look of excitement on her face. Ben gave her a hug and she slipped on her jacket and slipped out the door first. \n\nBen hugged Trish next and as she put on her coat he pulled Hannah against him for a warm hug. He felt her body relax against his and she was blushing with a smile as she pulled on her coat. \"When will we be able to have a group therapy session? Beth is keen on participating as well.\" \n\n\"Tuesday night is open. Wednesday night I have to pick up Rain Palomo. Depending on what the milling shop tells me on Monday I might be on my way to Europe on Thursday or Friday,\" he explained. \n\n\"Let's say Tuesday then! 8PM?\" Hannah said with a smile. \"I'll let Beth know.\" Ben nodded and saw the two ladies out the door. As they departed he saw the McKellan twins coming up his steps so he stood back and let them in. \n\nIdentical brilliant smiles beamed at him from the two gorgeous redheads. Today they were wearing their hair loose and it cascaded down to mid-back. They slipped their coats off and hung them on the hooks by the front door. They turned to face him. \n\n\"Good afternoon Ben!\" \n\n\"Lisa. Lori. Dazzlingly beautiful as ever,\" he said with a smile and they glowed under his praise. \n\n\"It's good you're here. I have a friend coming to live with Karen and Penny in the house next to yours. Her name is Rain Palomo and she's from California. She's going to need warm clothes to see her through our winter. I don't think she's even seen snow so she won't know how to dress for it. Are you two available this week to take her shopping for a winter wardrobe?\" \n\nLori moved closer until she was gently resting her tits against his chest. \"Are you going to come shopping with us?\" \n\nBen felt himself react to the beauty's soft body. \n\n\"Uh, no. Not this time. I'll get you a preloaded debit card to pay for the purchases,\" he said and swallowed as Lisa joined her sister to rub her tits against him as well. \n\n\"Will you have time for us this week, Ben?\" she asked looking up at him through her long lashes. \n\nHis body wanted them RIGHT NOW but he knew that couldn't happen. The only potentially open night was tomorrow. \n\n\"We could go dancing again.\" Lisa suggested. \n\n\"At Club Eon! They're connected to the Eon hotel. We could get a room for afterwards.\" Lori sucked in a breath as she felt his cock which was pressing against her thigh surge at the idea. \n\n\"Tomorrow night,\" he growled deep in his chest and their eyes widened with excitement. \n\nHe slid his fingers into their thick, soft hair and took a grip as he pressed his body against theirs. It was a little awkward with the splint on one finger but he made due. He felt them begin to tremble so he kissed Lori, his mouth demanding on hers and she moaned into his kiss. He pulled back from her and her eyes were closed as she tried to catch her breath. He kissed Lisa, aggressively sucking on her bold tongue. Her face was flushed when he pulled back. \n\nHe ran his fingers through their hair to loosen the waves he'd gripped and they leaned into the caress. \n\n\"Tomorrow night,\" he said again, voice rough with need. They nodded to him and bit their lips. He gestured for them to precede him into the living room and turned to spot four sets of eyes peeking at them from the doorway. Three sets ducked back but Tina was on crutches so she couldn't move as quickly. \n\nBen's face flushed in embarrassment and frustration. He moved towards the awkwardly moving woman, scooped her up in his arms and let the crutches fall with a loud thump. As the others watched he carried her away down the hallway to the bedroom and she watched him with wide, shining eyes. Closing the door behind them he gently laid her down on the bed and looked down at her with heat in his eyes. She burst into a grin as he began to strip for her. \n\nHe moved slowly and deliberately, sliding his clothes off to expose his body to her gradually as he moved around the bed. He disguised picking up a packet of lube from his end table with a dramatic yanking down of his shirt off of his shoulders. She was really enjoying the show, watching him excitedly, as he walked back around the bed to her while undoing his pants. When he shimmied them down his hips she sighed quietly as he was tenting his boxers. He inched the boxers down while she bit her lip. Finally he was standing naked before her and she reached for him. \n\nBen moved closer to the bed and she reached out to hold his thick shaft. A tremor ran through her frame as she wrapped her small hand around his throbbing cock. \n\n\"Oh Ben, it is so hot and so hard.\" \n\nHe quickly unbuttoned her top and exposed her tits. He leaned down to kiss her and gently squeezed her tits in his hands. \n\n\"Mmmm!\" Tina moaned. \n\nHe unzipped her skirt and gently tugged it down careful of her cast. Then he slipped her panties down as well. She was glistening with wetness and he grinned at her shy embarrassment. He kissed his way randomly along the insides of both of her thighs making her gasp and coo until he boldly ran his tongue over her wet pussy. \n\n\"Ben! Oh Ben!\" she cried out. \n\nHe fucked her with his tongue until she was dripping wet. He quickly opened the lube packet and spread the slick stuff over the top of his hard cock and rubbed it over the top few inches. He wouldn't be going very deep as it was uncomfortable for Tina at the time. He carefully lifted Tina's legs and pulled her down to the bottom of the bed. He rested her legs against his chest as he slowly pushed the head of his cock against her wet lips. \n\nWhen the head forced its way inside her Tina's eyes rolled back and her mouth dropped open. It felt pretty awesome to Ben as well. \n\nHe began to slowly pump himself in and out of her body as he ran his thumb in circles over her clit. She was so incredibly tight in this position he didn't think he would last much longer. \n\nTina was whispering to herself in Korean and he thought that was so sweet. He increased his speed but refrained from going too deep. It felt like an incredible tease for him but he was getting close. \n\n\"Ben! I- I am going to cum!\" she gasped. \n\nHe looked down at her in surprise. She was normally so quiet when they made love. He wondered at the change but not for long as her orgasm struck. Her body's clamping down on him was just the trigger he needed to push himself over the top. He crested through his own orgasm and he felt Tina pulling his hand away from her clit. They rested and he pulled himself from Tina whose eyes were closed. She had a beautiful smile on her lips. He gently lifted her up and rested her further up on the bed. She was nodding off so he pulled the blanket over her and she slipped into slumber. \n\nBen was still stiff but there wasn't anything he could do about it now. He went into the bathroom and cleaned himself off. He tucked his erection into his pants when he got dressed once more. He let himself out of the bedroom and noticed Tina's crutches leaning against the wall outside the room. He carried them in quietly and left them next to the bed for Tina when she woke. He left and walked back to the kitchen as he was hungry. \n\nLucy smiled at him as he entered. \n\n\"Where are the others?\" he asked. \n\n\"I convinced them to grab a lunch at the bowling alley so they left shortly after you carried Tina away,\" she said with a grin. \"Karen was looking pretty flustered. I think you're going to have to approve of a boyfriend for her pretty soon!\" \n\nHer eyes caught sight of Ben's bulge and she stepped over to him slowly and pressed her big soft tits against his chest as she looked up into his eyes. Her hands found his bulge and she rubbed it up and down. \n\n\"Is this reserved for someone?\" she breathed as she felt his cock getting stiffer. \"How you behave with the McKellan twins is so hot! If you wanted to treat me that way, I wouldn't mi-\" \n\nBen silenced her words with his mouth as he took her face between his hands and kissed her deeply. She squeaked then moaned as his tongue caressed hers. He broke the kiss and she gasped. Her head was spinning and she licked her lips. He unzipped his pants as he looked into her eyes fiercely. \n\n\"Take me in your mouth.\" \n\nLucy immediately sunk to her knees before him and reached into his fly to pull out his thick cock. She gasped at its heat and rested it against her cheek. \n\nShe ran her tongue along the underside and moaned when she felt him throb in response. Looking up she saw Ben watching her. She kissed the shaft and made her way up towards the thick head. She felt him tremble and a feeling of power rushed through her body. \n\nShe took the head into her mouth and ran her tongue all around it. Ben moaned and she felt that thrill again. She dipped forward and took half of his length into her hot mouth. \n\n\"Fuck!\" Ben gasped. \n\nShe pulled back then sucked him into her mouth, once more to the half way point. \n\n\"Oh Geezus!\" \n\nBack to the head then down to the base driving his cock deep into her throat. \n\n\"FUCK! OH GOD, LUCY!\" Ben cried out. \n\nShe pumped his cock into her throat three more times and each time Ben's body shook with the intensity of the sensations. \n\nHe pulled himself from her mouth before she could take him in her throat a fourth time and effortlessly lifted her body up to rest on the marble island. He pulled her yoga pants and panties down her legs as she gasped at his rough handling. \n\nPushing her legs up to expose her to him he stroked her pussy with his tongue and she gasped as he lashed and fucked her with his wet appendage. She clung to his head as she felt herself getting closer and closer to a delicious release. \n\nSuddenly he flipped her onto her stomach with her ass hanging over the edge of the counter. He dropped his pants and underwear, stepping clear of them. Slapping the thick head of his cock against her wet flesh he gave her no time to prepare before driving himself into her. She howled with her hands over her mouth to stifle the noise. \n\nLucy was in heaven. He was fucking her so hard and each time his pelvis slammed into her ass her mound hit the surface of the counter. Her pleasure was racing up at her and she was losing control. Ben squeezed her ass as he hammered his cock into her and she lost the ability to talk as the sensations were flooding her mind. Ben reached forward and squeezed her heavy tits in his big hands as he picked up the pace, driving his cock deep faster and faster. She felt like she was leaving her body. \n\n\"MmmBen! Fuh! Mmm! Ben! Fuck! MmmnnnGOD! Fuck! OhFuck!\" She crashed through her first set of orgasms and still his pounding continued. She was beginning to white out as the bliss was becoming too much. \n\nHe leaned over her body bringing his face down next to hers. His hips were still driving his cock into her but now he was grinding her down against the countertop as well. Her pleasure spiked and she screamed soundlessly as her body felt like it was coming apart. \n\nBen growled deeply as his orgasm finally took him and he held himself deep inside her, luxuriating in the heat wrapped around his slowly shrinking cock. He felt her trembling under him. ",
        "When he pulled himself from her body she was only able to make a weak squeaking noise. He grabbed some paper towels and wiped himself as best he could. He gently dabbed her clean but she was still too sensitive. He gently lifted her into his arms. He carried her down the hall and got her inside the bedroom and onto the bed. He kissed her and she tried to respond but she was too far gone. He pulled the sheet over her as well and closed the door on the way out. He rinsed off in the guest bathroom then made his way into the kitchen to clean up the mess they'd made. Tina would be pleased with how clean he left the counters and floor. \n\nThat done Ben made himself lunch as he was ravenous. He made himself some sandwiches from the roast beef he found in the fridge and ate them in less time than it took to make them. Hunger appeased he looked at the clock and frowned. Catherine should have come over by now. He decided to go over to her place to see what was up. He jotted down a note for Tina and Lucy on the pad stuck to the fridge. \n\nHe pulled on his jacket and slipped his boots on. Then he locked up behind himself and walked over to Catherine's place. He rang the bell and waited. Almost thirty seconds later the door opened and there was Catherine, her eyes were red from crying and she had a wad of tissues clutched in her hand. \n\nShe stepped back and he stepped in, closing the door behind himself. He pulled off his jacket and stepped out of his boots and when he turned back Catherine crushed herself against his chest, clinging to him as she wept. He wrapped his arms around her and let her cry. \n\nWhen the tears finally began to taper off he guided her into her living room and sat next to her on the couch. He snagged the box of tissues and let her take some fresh ones. \n\n\"What happened?\" he asked gently. \n\n\"She- she... broke up... with me,\" Catherine hiccupped. \n\n\"Who- oh! Chanel?\" Ben's mind made the leap to the only woman he knew Catherine had seen romantically... aside from Gabriella. \n\nCatherine's bottom lip began to tremble once more as she nodded dabbing her eyes with a tissue. \n\n\"Maybe if you started at the beginning?\" \n\nShe collected herself and nodded once more. \"Gabriella and I flew on that wonderful jet to Milan and arrived in the morning hours. We were expecting to be met by the CEO but he was already in custody by the time we arrived. One of the financial controllers met us instead and took us directly to the office. It all exploded into a mess from that point. Gabriella was so apologetic to me as she had to do what she could to save the company and that meant no time for me. She gave me the key to the apartment the fashion house held for visitors and I told her I understood and would keep myself entertained in the lovely city.\" \n\nBen smiled at her as she paused to blow her nose and gather her thoughts. \n\n\"I decided to send Chanel a teasing email telling her I was in Milan and why wasn't she here too. I got a response from her almost immediately saying she was on her way to the airport and would be there at 3PM. I told her I would meet her there.\" She smiled as she remembered the day. \n\nCatherine stood in the busy terminal watching the arriving passengers until she saw Chanel's beautiful face above the other shorter passengers. She, like Catherine, was close to 6' barefoot and while Chanel refused to wear high heels her current ankle boots gave her an additional inch and a half. Tall, svelte and exquisitely beautiful, Chanel had been destined for the runways of Paris until she'd broken away from her mother's dreams to follow her own. She made detective working for the police in Paris. Catherine's face lit up with joy as Chanel caught sight of her as well. Chanel's smile sent a burst of happiness through the blond and she rushed forward to pull the other woman into her arms. Then her lips were on Chanel's, their tongues met and everything else disappeared. \n\nWhen she eventually pulled back from the kiss Chanel was gasping for breath. \"Oh my god Catherine, I've missed you.\" \n\n\"I've missed you too,\" she replied leaning her forehead against her lover's. \"Let's get you back to the apartment to drop off your bag and we'll go from there,\" she said with a mischievous smile. \n\nThey found a cab and Catherine gave the driver the address. Chanel perked up. \"Via Monte Napoleone? That's a very posh shopping district!\" she exclaimed. \n\n\"The apartment is rented out by the Fashion House Gabriella is working with. We have it for the next few days. I'll text Gabriella and ask if she wants to meet for dinner,\" Catherine said, tapping out a quick message to her friend. They rode on in silence just enjoying each other's touch until Catherine's phone pinged. She read the message and frowned. \"It looks like Gabriella won't be joining us for dinner or staying at the apartment after all. She's going to stay at a suite in the office as she's still working with the finance people of the two companies she came here to be the CEO for.\" \n\nChanel leaned back and looked at Catherine in surprise. \"Gabriella is moving to Milan? How does the big man feel about that?\" \n\nCatherine had a sad smile on her face. \"Ben is doing his best to keep smiling. He wouldn't do anything to jeopardize Gabriella's dreams so he's said that he will visit her as often as he can... but I can tell he's hurting.\" \n\n\"He is not the only one hurting from the absence of a loved one,\" Chanel said quietly but Catherine heard it. \n\nHer eyes flew wide and she looked deeply into Chanel's dark eyes, full of need. \"You... love me?\" she asked softly. \n\nPearly white teeth bit a deep, wine red lower lip as Chanel nodded. \n\nCatherine smiled as tears ran down her cheeks. \"I love you too,\" she whispered to her lover. \n\nThey held hands, bodies trembling, eager to get to the apartment. The scenery was lovely but they really only wanted to be alone. \n\nThe taxi finally pulled up to the address and Chanel paid the driver cash and they got her bag from the trunk. Catherine opened the front door and they climbed the stairs to the top floor. They found the apartment and let themselves in. Chanel slipped off her boots and Catherine kicked off her pumps before they noticed her suitcase was in the foyer but Gabriella's was not. The staff had already picked it up for her since her change in plans. Hand in hand they walked through the apartment admiring the d\u00e9cor until they found the bedroom. Catherine threw back the bedspread. \n\nChanel's hands were in Catherine's soft white blond hair and their mouths came together in a deep, soul affirming kiss. Catherine moaned and wrapped her arms around the other woman, moving one hand up to grip the brunette's shorter hair and the other down to squeeze her firm ass muscles. Chanel's tongue became more aggressive when she felt the hand on her ass. \n\nThey pulled back from the kiss and held each other's eyes for a moment before they began frantically pulling off their clothes in a race to strip down before the other. \n\nChanel once more had the advantage as she was wearing jeans and a t-shirt under her short leather jacket. These items hit the floor as Catherine was struggling to reach the zipper on her dress. Chanel took her shoulders and spun her to face the bed. She unclasped and unzipped the dress, letting it fall to her feet. \n\nBefore Catherine could prepare Chanel pushed her forward onto the mattress and crawled up her body to press her down to the bed. She ground her mound into the blonde's ass causing the woman to moan. \n\nChanel popped the clasp on Cat's bra and began pushing the straps down her arms until Catherine took over. She undid her own bra and pressed her tits against the blonde's back. She moved her hands under them to cup Cat's lovely tits which fit her so well. \n\n\"Oh fuck Chanel!\" Cat gasped as the woman squeezed her breasts and ground against her ass. Her face flushed with desire and she grabbed and tugged at the sheets. \n\nGrinning, Chanel slid a hand down Catherine's firm stomach to the top of her silky panties. \n\n\"Ah! Oh god! Chanel!\" the blonde whimpered. \n\nThe brunette in question lowered her head and nibbled on the pretty ear poking through the white locks as her fingers slid under the panties to run over the tender flesh underneath. She felt Catherine's body jolt and tremble under her. One finger slipped into the woman as her palm ground against Cat's stiff clit. \n\n\"FUCK! Oh fuck! Chanel! OH! OH GOD!\" Catherine cried out. She was so wet! \n\nChanel stroked the earlobe with the tip of her tongue as she tugged and squeezed a nipple and pumped her finger in and out of the wet channel as she rubbed and ground against her clit. She also ground her own pussy against Catherine's ass which felt so good! She kept this up as she felt the woman writhing under her deliciously. She could tell Catherine was getting close. \n\n\"Ah! AH! Ah! AHH! OHFUCKOHFUCKOHFUCKOHFUCKOHFUCKOHFUCK! FFFUUUCCKKKK!!\" Catherine screamed as her body trembled under the multi-point attack from the brunette. It was too much and she came hard. \n\nWhen Cat's cries became whimpers Chanel eased herself off onto the mattress beside the panting blonde. Cat weakly turned her head to look at her lover and smiled. Her smile faltered when she saw the sadness in the brunette's eyes. \n\n\"What's wrong?\" she asked but Chanel just shook her head and looked away. \n\n\"Chanel, please speak to me. Tell me what's wrong.\" \n\n\"I- I missed you terribly,\" Chanel whispered. \n\n\"I missed you too!\" \n\nChanel's eyes flared with emotion but she pressed her face into the bed to hide it. \n\n\"What- what was that?\" Catherine gasped. She'd just caught the edge of what looked like anger in that glance. \n\nChanel gave her head a shake but refused to lift her face from the mattress. \n\nCatherine quickly got up on her knees and flipped Chanel over onto her back, surprising a squeak from the other woman. Cat straddled the brunette's svelte body, took her face between her hands and held Chanel's dark eyes with her blue ones. \n\n\"Speak to me. Are you mad at me?\" she asked carefully. \n\nChanel tried to look away in shame. \"No... I am jealous.\" \n\nCat blinked. \"Jealous?\" \n\nGrimacing with the pain of feeling such negative but powerful emotions she could not shake, Chanel squirmed under Catherine's body. \"I- I am alone. You are surrounded by love but I only want you.\" \n\n\"You're jealous of me?\" Cat whispered, looking down at her lover. \n\n\"NO! I am jealous of THEM!\" Chanel shouted and began to cry as she closed her eyes tight. \n\nCatherine didn't know what to do. She stretched out over Chanel's body and hugged her until the woman wrapped her arms around her in return. She held her lover until the tears finally slowed then stopped. \n\n\"I am sorry,\" Chanel whispered, deeply ashamed of her jealousy. \n\n\"Shhh. There is nothing to apologize for. I wish there was something I could say or do to take this pain away.\" \n\n\"Move to Paris! Live with me!\" Chanel blurted and Cat looked at her in surprise. \n\n\"I- I can't. My girls... they lost their father less than a year ago. I couldn't leave them,\" Cat said, her voice sticking in her throat as she watched the desperation and despair in Chanel's eyes. \n\n\"I thought of moving to the states but I've spent my whole life fighting to get where I am now. I dream of one day becoming Chief Inspector. I'm on track. And Paris is my home,\" Chanel said quietly. \n\nTears ran down Catherine's cheeks. They were in a no win situation. Separated by a vast distance and embedded in their own lives neither could see a solution. They just knew they loved each other. \n\nChanel gently took her face in her hands and kissed her tenderly. When she pulled back she touched her forehead to the blonde's. \"Let's enjoy the time we have. We can talk about the other... later.\" \n\nCatherine nodded then slipped down to take Chanel's wonderful nipples between her lips. The brunette arched her back with a gasp as the sensitive flesh stiffened in response to the caress of Cat's tongue and lips. She slid her fingers through the silky white strands. \n\n\"Catherine! Oh fuck! Your lips are so...\" \n\nLoving blue eyes looked up at her as she kissed her way down Chanel's tight stomach muscles. She felt herself becoming wet in anticipation of Catherine's kisses. When the woman's mouth finally reached her tender spot Chanel cried out in bliss. \n\n\"OOOOHHHH CATHERINE! My sweet, sweet Catherine! OH FUCK!\" \n\nTongue stroking and dipping deeply into her wetness Catherine was enjoying bringing pleasure to her lover. When Chanel's hands pulled her face tighter against her trembling pussy and gasped loudly Cat smiled and sucked and licked more aggressively until she heard Chanel's cries of ecstasy. The brunette's muscles tightened and she shook through a colossal release. \n\n\"AAAAAAAAHHHHHH!! FUCKFUCKFUCKFUCKFUCK! AAAAAAAAAHHHHHH!!\" \n\nSpent, Chanel's body slumped to the mattress and she panted as her eyes closed. \n\nCat surprised her by moving up to kiss her deeply. She could taste herself on the blonde's tongue. Her body went through one more surge as the pure sexiness of the kiss flared her body's tingling response. Her arms went around the woman and they held each other tight. \n\nAs they rested, enjoying the feel of each other's bodies Chanel's stomach took that moment to remind all those in listening distance that it was empty and did not approve. \n\nCatherine giggled at the embarrassed expression that flitted across her lover's face. \"I think we'd better feed that beast,\" she teased. \n\nThey slipped their clothes back on and made their way back out to street level to look for a restaurant. \n\nThey found a wonderful little restaurant in a small side street and enjoyed an intimate dinner for two. Afterwards they went for a long walk winding up back at their apartment where they sensually explored each other's bodies until they both fell into a deep sleep. \n\nThe following day Catherine heard from Gabriella that things weren't going well and she was expecting she'd have to stay in Milan for longer than intended. They made plans to meet for lunch. \n\nNoon found Catherine and Chanel sitting side by side at a table in a restaurant with a lovely view of the Duomo di Milano and its plaza. They'd ordered and were enjoying some white wine when Gabriella walked over to their table. Catherine leapt to her feet and gave her best friend a warm hug. \n\nChanel could see the woman taking strength from the embrace and this brought a smile to her lips. She stood and hugged the lovely brunette as well. She was surprised by how very nice it was to feel those full breasts pressed against her. \n\nGabriella took no notice of Chanel's slight blush and had a happy smile when they all took their seats once more. She actually seemed to have relaxed a little. \n\n\"May I pour you some wine?\" Chanel asked. \n\n\"Yes please but I'll have to restrict it to just the one glass. I have several meetings lined up this afternoon and I need to be sharp,\" Gabriella responded. \"I'm sorry to say I won't have much time to enjoy lunch.\" \n\nCatherine reached across the table to hold Gabriella's hand. \"Are you ok? Is there anything I can do?\" \n\nGabriella smiled. \"Can you convince those bastards to give back the money they embezzled?\" \n\n\"Given some time alone with them, I might.\" Chanel said with a wicked smile. \n\n\"Oh I wish I had the authority to order that!\" Gabriella gasped then chuckled. \"If you don't mind we should order our meals. I missed breakfast and I don't want to pass out during my meetings. Do you know what you want?\" She received nods. She caught the eye of the waiter and let Catherine and Chanel order first. She ordered the same meal Cat was having. \n\n\"What's your plan for the day?\" Gabriella asked. \n\nCat looked at Chanel and tilted her head. \"Window shopping? Visit the Cathedral? Dinner and dancing tonight?\" Chanel gave her a wide smile and nodded. \"Will you be able to join us later?\" Cat asked Gabriella. \n\n\"Unfortunately no. Tonight I'll be going over the books with the financial controllers from both companies to see what we can sell off to salvage the merger deal.\" \n\nCatherine pouted but Gabriella saw the compassion in her eyes. \n\n\"Are you going to take the CEO position? Is it still an option?\" Cat asked. \n\n\"They're still offering it but there's just too much to do to ensure the companies survive before I'll consider taking on that role.\" Gabriella insisted. \n\nThey talked about Chanel's return to her job after her mandated medical leave. She'd spent some time being desk bound but was back to her detective work. \n\nLunch arrived and they enjoyed their meals with some small talk. Gabriella glanced at her watch and realized she had to run. Catherine insisted she would cover the lunch then she and Chanel both gave Gabriella hugs and kisses on the cheek and she was off. \n\n\"Your friend is very sweet!\" Chanel said with a smile. \n\nCatherine smiled and nodded, feeling a twinge of sadness at the idea of Gabriella living in Milan. She glanced at Chanel and saw her pain reflected there. They looked out at the cathedral so they could avoid the reality of their situation just a little longer. \n\nThey saw the sights, had a lovely dinner then found a high energy dance club to lose themselves in the music. While the men in the club tried futilely to entice them out onto the floor they only danced with each other. \n\nBack in the apartment their lovemaking was hard, raw, and a little desperate. Exhaustion took them under, bodies entwined. \n\nWhen Catherine awoke the next morning she was alone. Chanel had gone back to Paris, leaving behind a note which said she could not bear the pain of saying goodbye to Catherine again. It said that life had dealt them both an unfair hand and she begged Catherine not to come looking for her. \n\nGabriella called Catherine in the afternoon then rushed over when she heard the anguish in her voice. She stayed with her friend that night and put her on the jet for home the next morning. \n\nThere had been no further word from Chanel. Their love affair was over. \n\nCatherine had fresh tears in her eyes when she finished. \n\n\"I'm so sorry Catherine. I wish there was something I could do or say to take the pain away. Have- have you considered moving-\" \n\nShe closed her eyes and shook her head firmly. \"I can't live that far away from my daughters. I won't live that far away from you! I may be in love with Chanel but I also love you Ben! I need you!\" \n\nBen tried to keep his relief from his face but she saw it and leapt onto his lap to kiss him. She crushed herself against his chest and thrust her tongue deeply into his mouth. He sucked on it and ran his hands down to her ass to give it a firm squeeze. \n\nWhen she pulled back from the kiss her blue eyes were full of need. She desperately wanted him physically but she also needed to connect to him emotionally, to renew and affirm their bond. \n\nBen pulled his shirt up and off and Catherine immediately ran her hands over his chest. She leaned in and kissed his nipples until she had to move back to lift her arms as Ben tugged her blouse off. He popped the clasp on her bra and slipped it off over her arms. \n\nCatherine's face was flushed with her need and Ben took another deep kiss as he leaned her back on the cushions. He undid her slacks and pulled them off as he lifted her ass from the couch. Before she could prepare he ducked down and ran his tongue roughly over the soft flesh of her pussy. \n\n\"FUCK! Oh Ben! Ben!\" she squealed. She was very wet. \n\nHe tugged his own pants and boxers down then slipped two fingers deep into her body as his tongue danced over her clit. \n\n\"FFFFFAAAAAAHHHHH!\" Cat screamed. \n\nBen ran his slippery fingers over the thick head of his cock then slapped it against her wet lower lips. \n\n\"YES! Give it to me Ben! I need you!\" she cried out. ",
        "He pushed forward and the heavy flesh drove into Cat's body deeper and deeper. Her eyes opened wide and her mouth dropped open as he stretched her open to accept him inside. When their bodies met he was as deep as he could go and he could feel Cat's body pulsing and squeezing as she tried to get accustomed to him. \n\nBen kissed her mouth tenderly and she moaned at his sensual touch. \"I love you Catherine. I don't want to lose you,\" he whispered to her. \n\nHer eyes widened then happy tears pooled in her thick lashes as she smiled with her love showing all over her face. \"Oh Ben, I love you so much! You're never going to lose me!\" \n\nHe kissed her again as he slowly pulled his cock out to just the tip. She whimpered into the kiss then gasped as he drove himself back into her body. He began to pump himself into her pussy in long hard strokes. \n\n\"Oh Ben! Oh Ben! Oh Ben! Oh Ben! Oh Ben!\" She gasped out his name with each stroke. \n\nHe slowly increased his pace and felt himself getting closer to his release. He felt Catherine's body begin to jerk and tremble as she approached her own climax. She clung to him tightly and wrapped her legs around his ass as he began to rapidly slap their pelvises together. \n\n\"YES! YES! LIKE THAT! YES! OH GOD BEN, I'M GOING TO CUM! I- I- CUMMINGGGGG!!\" she cried out. \n\nBen ground himself against Catherine as she gasped, moaned, and shook through her release. He came in surges, ropes of hot cum firing into her depths and Catherine moaned at the pure sensual pleasure of feeling his heat filling her. \n\nWhen his body finally relaxed he kissed her temple and she smiled tenderly. \n\n\"I love you so much Ben. Thank you!\" she whispered. \n\n\"What are you thanking me for?\" he asked, with a small grin. \n\nShe traced his strong jawline with a finger. \"For loving me so strongly you'd think of my happiness even at the risk of your own. Please know my happiness needs you to make it complete.\" \n\nBen kissed Catherine's sensual mouth and felt his heart swelling with love for this beautiful lady in his arms. \n\nBen moved to lie beside Catherine and caught her yawning widely, being emotionally drained from her ordeal with Chanel. He glanced out the window and it was only late afternoon but Catherine was slipping into sleep. He scooped her up in his arms and carried her upstairs. She purred in his arms as he got her into her bedroom and under the sheets. \n\n\"Could you stay with me until I fall asleep?\" she asked plaintively. \n\n\"Of course!\" He gave her a tender kiss and she sighed happily. He got under the sheets and she snuggled up against him. He felt her relaxing and it didn't take long before she slipped into a deep sleep. Ben closed his eyes and allowed himself to drift. It was so nice to rest here with Catherine. She loved and needed him and for some reason he really needed to know that. He wasn't sure why it seemed so critical at the moment but he snuggled a little closer to her as he slipped under. \n\nChapter 18 \n\nBen was sitting on a lawn chair in his driveway, the warm buzz of scotch disconnecting him from feeling... anything. He watched the court as he'd done for countless days. Kids playing in the park, riding their bikes around the circular court, and the parents moving about their business in their active, fulfilling lives. \n\nAll of this was separate from Ben who remained a silent sentinel. He sipped from a flask each time he became aware that he'd begun to feel. \n\nHe'd lost hope a long time ago. She'd never returned. Now, he was just a living corpse. No one noticed him anymore. As it should be. \n\nBen's breath caught in his throat as his eyes picked up the gleam of sunlight on a windshield. Someone was driving up the court! He watched the older model BMW sedan coming around the circle. He struggled to breathe and felt his heart pounding in his chest as he recognized the car which drove out of the restaurant parking lot with his wife so many years before. The car slowed to a stop at the end of his driveway. \n\nThe driver got out and looked over the hood at him. Derek LaRue. Tall, slim, with no expression on his bland face. Wearing a grey suit and shiny black leather shoes, he walked around the car to open the passenger door. \n\nBen cried out when he saw Wendy's happy smile. Her eyes were twinkling as they did when she was truly happy. \n\nExcept that happiness wasn't for Ben. \n\nShe was looking at Derek who hadn't stopped looking at Ben and showed no sign of even being aware of Wendy. \n\nShe stepped from the car and took Derek's hand, keeping her eyes on the man as they began to walk closer to Ben. \n\nHe wanted to leap up from his chair to take her in his arms but the scotch had numbed him too much. He had no control over his body. He could only sit and watch them approach. \n\nWendy looked lovely, like the day he'd married her. Ben's heart was breaking all over again. \n\nThe couple stood before Ben but still Wendy wouldn't look at him. Then she spoke. \n\n\"Derek, I want to leave. Let's go. There's nothing for me here,\" she said, her voice dripping with sweetness. \n\nThe man finally took notice of her and turned his impassive look in her direction. \n\n\"One moment my love,\" Derek spoke, his voice like sandpaper against glass. He turned his dull eyes towards Ben. He reached into his suit jacket and pulled out a five foot long pin. \"You don't need this anymore,\" he said as he stabbed Ben in the chest and drove the pin through his heart until the point stabbed into the ground behind him. \n\nWendy's laughter filled Ben's ears and the pain went on and on. \n\nHe heard car doors closing and he struggled to get to his feet but he was literally pinned to the ground. \n\nHer laughter echoing oddly as the car started up and pulled away, continuing around the court to head back down the road. She was almost gone and he had to stop her, he had to tell her not to go, he had to- \n\n\"NOOO!!\" Ben woke screaming. \n\n\"BEN! Shhh. It was just a dream! Just a dream. Shhh,\" Catherine said to calm him as he sat up panting and wide eyed. \n\n\"Wha- Catherine?\" \n\n\"Yes, Ben. You just had a bad dream.\" She eased him back down to the mattress as he tried to catch his breath. \"Do you remember what it was about?\" \n\nHe didn't want to think about it so he just shook his head as he looked away. He saw the clock on the end table and it was almost 7AM. He couldn't get over how long he'd slept. He'd missed dinner. His note hadn't said anything about sleeping overnight as he expected to come home after his visit. \n\n\"How are you feeling?\" he asked. \n\nShe slowly stretched her entire body in satisfied bliss like a cat. \"I haven't slept that good in... a very long time. Thank you Ben,\" she said with a smile. She caught sight of the clock. \"Oh my god! I have to get moving!\" \n\nShe leaned over Ben's face and gave him a tender kiss. Then she spun off the bed and dashed for the bathroom. \n\nBen threw back the sheets and rubbed at his scalp. That dream had taken a lot out of him. He looked around for his clothes and realized they were still in the living room. He went to the bathroom door. \n\n\"My clothes are downstairs. Are any of your girls home this week?\" he said through the door. \n\n\"No, you're safe to make a naked dash,\" Cat's amused voice said through the door. \n\n\"I'll let myself out. You have a good day! If you start feeling blue you give me a call, alright?\" \n\n\"I love you Ben!\" she called out. \n\n\"I love you too Catherine!\" \n\nHe smiled and made his way downstairs to the living room and sure enough there they were. He slipped on his clothes and glanced out the windows. The sheers were drawn, thankfully, but he could see Ashley Beaumont standing on her front steps. Someone was standing on the path in front of her shaking something at her. He couldn't really make out what it was but he had his boots on and was out the door before that person could hit her with whatever he was shaking. \n\nHe marched across the lawn and turned up Ashley's driveway as she caught sight of him. He saw her immediate relief then nervousness flash across her face in quick order. The man standing on her path still had his back to Ben but he looked like a large heavyset fellow. \n\n\"Good morning Ashley,\" Ben said loudly to catch the attention of the man who was still shaking... a book, he saw. \n\nFinally the man turned and Ben could see his face, flushed from arguing. He was probably in his forties and had a large frame like Ben's but his carried mostly fat. His features seemed squeezed towards the center of his face by the surrounding fat. Small eyes, small upturned nose, pinched mouth and... jowls. \n\nHe stared at Ben then recognition flared and he looked down his nose at Ben. \"The immoral degenerate makes an appearance!\" \n\n\"Excuse me?\" Ben blinked. \n\n\"Come to take your perverted pleasures from the whore?\" the fat man sneered, gesturing to Ashley over his shoulder. \n\nBen looked around the man to Ashley. \"Do you know this pitiful inbreed?\" \n\nAshley's eyes flew wide and her eyebrows rose to her hairline as she clapped a hand over her mouth to stifle the shocked, but delighted, gasp that burst forth. \n\nThe man's face went deep red and he took a step closer to Ben. \"You are the filth that desecrates all that is virtuous and good in the world!\" A little spittle flew from his tight, angry lips. \n\nBen suddenly saw his collar and realized he was facing a man of the cloth. He sighed and glanced at Ashley. He knew she was trying to find a church she was comfortable in. Obviously this one wasn't a winner. \n\n\"And you are a sad little man. Small in intellect, small in spirit, and worst of all, small in heart. Likely you collect other small minded followers so you can pretend not to be lonely. You will find no comfort here. Be gone,\" Ben said, gesturing down the driveway to the beat up Chrysler K car with the fake wood paneling. \n\nLivid, the man swung his bible at Ben's head. Ben was expecting it and just leaned back to avoid the swing. And the second. On the third swing he plucked the book from the man's hands. The preacher flinched back fully expecting to be beaten in return. When the blows didn't come he looked cautiously at Ben. \n\n\"This is a bible. Not a weapon. The words inside should be used for spreading love not hate. You're a poor excuse for a man of God.\" He saw the man's eyes flare with hate. \"Now, before you do something colossally stupid you should know that your actions are being caught by the camera I installed by Ashley's front door. I've already got you trying to hit me with a bible. Would you like me to release that movie online, linked to your name? Or should I just send it to the police?\" \n\nThe man's little eyes shot to the camera above the door and he looked back with doubt on his face. \"If you leave and never return that footage will remain in a safe place. Show your face again or disturb Ashley or her children and all bets are off. Is that understood?\" Ben growled. \n\nLooking like he was holding something vile in his mouth he nodded. Ben handed the bible back but didn't let go when he took it. \n\n\"Read the passages about love. You might learn something useful,\" Ben said as he released the book. The preacher stiffly marched down the driveway until he reached his car. He yanked the door open with a squeak then dropped himself inside. He drove away without looking back. \n\n\"I'm sorry about that Ben,\" Ashley said quietly. \n\n\"Not your fault. There are a lot of people just like him out there. It's just sad when they hide behind the collar,\" he said. \n\n\"Would you like to come in for some breakfast?\" she asked hopefully. \n\n\"Thanks but I should be getting home. Take care,\" he said turning to leave. \n\n\"Didn't you want to get the video of the attack?\" she asked. \n\nBen looked back with a grin. \"The camera doesn't record. It just shows on the monitor inside.\" He held up a finger over his lips and winked. \n\nHer smile widened into a broad grin as she shook her head at Ben's retreating back. \n\nHe let himself in his front door and Penny zipped out of the hallway sliding on her socks. She squeaked with glee and rushed over to get a hug. Karen rushed out of the kitchen and got a hug too. \n\n\"Getting ready for school?\" he asked and got nods. \n\n\"We missed you at dinner last night,\" Karen said with a pout. \n\n\"Sorry about that. Catherine was pretty upset. We talked for a long time and fell asleep. I just woke up. I missed dinner. Did I miss breakfast?\" Ben asked. \n\n\"No, Karen is just making it now,\" Penny smiled. She headed back to her bedroom to finish getting dressed. \n\nThey entered the kitchen and Karen rushed back to the stove where Lucy had taken over. Lucy handed the spatula back to the blonde and moved around the island to get a kiss and hug from Ben. \n\nLucy left the kitchen to finish getting ready as he went to Tina and gave her a kiss. \n\n\"How is Catherine?\" Tina asked quietly for Ben's ears. \n\nBen glanced at her but Tina just had a concerned look on her face. \"She was pretty upset about breaking up with Chanel. They love each other but the distance was too much. Catherine won't leave her girls and Chanel's whole life is in Paris. It's a bad situation.\" He looked over a Karen but she was humming happily to herself as she prepared the meals for everyone. \n\nHe sat next to Tina and took her hand. \"I'd intended to come home last night but I fell asleep and we didn't wake up until close to 7AM.\" He didn't share the fact of his nightmare with her. \n\n\"You needed the sleep,\" she said with a coy smile on her face. \n\nKaren glanced over to see Tina's expression and something like longing flitted across her face. Time to change the subject. \"When are you seeing the doctor?\" he asked. \n\n\"Tomorrow at 2pm. Will you be able to take me?\" \n\n\"Yes, that should not be a problem.\" Ben placed his big hands on Tina's baby bump and they both smiled. \"I'm going to be out tonight. Overnight apparently but I'll be back in the morning. The twins need to get back in time for their daycare shifts. \n\n\"Papa!\" Christopher screeched from Lucy's hip. \n\n\"Look who's finally awake!\" Lucy smiled as she handed the boy to Ben who immediately pretended to gobble up his stomach, sending the boy into a fit of giggles. \n\nLucy poured herself a coffee and made some herbal tea for Tina. She placed them on the table and looked at Ben. \n\n\"Me and my boy will have apple juice, please,\" he said making a silly face at Christopher who watched him with delight. \n\nTina's smile was also one of delight and Lucy's heart swelled for her new family. She rushed over and got two juice boxes from the fridge and returned. \n\nBen pretended to be unable to figure out how to get the straw into the box and Christopher showed him how to do it. Ben grinned at Tina. Smart lad. \n\nPenny arrived just as Karen began serving the plates. \n\nSoon they were all enjoying their meals. Conversation revolved around plans for the day. Tina was the only one who didn't have a full itinerary and looked a little blue so Ben told her he would take her out to lunch, any place she desired, when he got back from the milling shop. That brought a smile to her face. \n\nBen helped clean up then began the frenzy to get ready and out the door for their lift to school. Ben and Tina just stood back and watched with amusement as the others rushed to and fro. Then the ladies were out of the house. \n\n\"I'm worried about Karen. She seems a little lonely,\" Ben said to Tina. \n\n\"She wants a boyfriend,\" Tina replied and Ben nodded with a sigh. \n\n\"I'm going to speak with Jayden today when I check on the progress of the house. I promise not to get involved!\" he stated as her eyebrows went up. \"I've been really good and my finger is feeling so much better. All the tingles are gone and I have sensation right down to the tip.\" \n\n\"Good!\" Tina said with a smile. \n\nHe gave her another kiss and scooped up Christopher who was playing with his toys on the floor. \n\n\"DayDay!\" the boy cheered. \n\n\"Yes! Kiss your Mama!\" Ben said, holding Christopher sideways. The child kissed Tina's cheek and she kissed his then Ben carried him to the front door. He and Christopher put on their shoes and jackets then Ben carried him over to the daycare. \n\nDaphne was speaking with a woman and smiled when she spotted him. The woman turned and Ben saw it was Dawn Liston, the woman whose husband came at him with a tire iron due to her sex dream about Ben. \n\n\"Hi Daphne! Dawn,\" he said with a nod to the woman. \n\nDawn's face turned a lovely shade of pink as she looked at him. \"Hello Ben.\" \n\n\"Everything ok with Mike?\" Ben asked, holding her eyes. He didn't want to have another incident with the man. \n\n\"Mmmhmm,\" she nodded then quickly turned her head to say goodbye to Daphne and made her way outside. \n\nDaphne was grinning at Ben. \"Tease.\" \n\n\"What? I just wanted to avoid another confrontation.\" \n\nThe woman just smiled and nodded as she took the squirming boy from Ben's arms. She set him down and he raced away into the back. Squealing laughter was heard from the playroom. \n\nMoments later Lisa and Lori poked their heads out to see if Ben was there and squealed a little themselves when they spotted him. They were wearing soft sweaters and slacks to tone down their svelte curves for the daycare environment. It didn't diminish in the least their beauty which always stunned him whenever they entered the room. They rushed out to give him a hug. Daphne rolled her eyes with a smile and went back into the playroom. \n\nOnce the twins settled down a little he smiled down into their happy expressions. He could feel them trembling with excitement. \"Looking forward to going dancing?\" he asked. \n\n\"Yes!\" they said in unison. \n\n\"What time do I pick you up?\" \n\n\"9:30PM\" Lori said. \"It takes about half an hour to get there.\" \n\n\"We booked a room for afterwards,\" Lisa chimed in and bit her lip. \n\nThey tilted their faces up and closed their eyes making him grin. He kissed Lisa and she trembled when their lips parted. Lori gasped when his mouth took hers. He kept the kisses short as they were in the entrance of the daycare and someone might enter or one of the kids might come looking for the twins. \n\nHe stepped back and they smiled as their eyes opened. \"Until tonight,\" he said and their faces lit up with brilliant smiles. \n\nBen stepped outside into the cold air which snapped him out of the warm tingling he was feeling. He saw Dominic driving up to the house next door and walked over to greet him. He looked back at the house and saw the second story was on, the roof was in place and they'd gotten the windows in as well. The exterior insulation was in place and they'd begun the stonework on the outer fa\u00e7ade. He was really pleased with how quickly this house was coming together. \n\n\"You're back!\" Dominic boomed happily. \n\nBen grinned at the man's exuberance. He really was larger than life. He shook his hand. \n\n\"How are the grand kids?\" he asked and the big man's face lit up. \n\n\"Wonderful! We got to babysit this weekend and it was so much fun! Speaking of babies though, how is Tina?\" \n\n\"She's great!\" Ben grinned. He turned to look at the house. \"I see you've made great progress on the house!\" \n\n\"Yup! It's a sweet home! The inspectors have been by and everything passed. We'll be finishing up the interior walls and trim work this week and it will be ready for painting next week. Move in date, the following weekend.\" \n\nBen looked at the man with a huge smile. \"That's amazing!\" \n\n\"You have a lot of really nice big rooms to furnish!\" Dominic said. \n\n\"Yeah, I'll get started on that now that I know when the stuff will be going in. The girls are going to be very excited about that.\" He looked around at the other workers arriving and waved to a few. \"How has Jayden been?\" \n\n\"I have to thank you for sending him my way. He's really fitting in with the team well and he really seems to enjoy the work. Hard worker too! He's an excellent drywall installer!\" ",
        "\"That's great to hear!\" Ben said, a feeling of relief sinking in. \n\n\"He's been asking when you would be back. Said he needed to talk to you. I'm hoping he's not going to ask you how to tell me he's leaving.\" Dominic said honestly. \n\nBen raised his eyebrows then spotted the young man in question. The eyebrows stayed up as he saw the shiner. \n\n\"Who gave you that?\" Ben asked him and Jayden ducked his head with embarrassment. \n\n\"The brother of one of the girls I dated... before,\" he said quietly. \"I went to the houses of the girls I... dated and apologized. A few had brothers that decided a beating was in order. After the first one,\" he pointed to his eye, \"I started bringing along some friends,\" he pointed to the crew walking past, \"who waited for me on the sidewalk and kept an eye out for angry family members. I took the slaps from the girls if they needed it.\" \n\nBen looked at the young man standing before him, seriously impressed. \"What brought this on?\" \n\n\"You said I had to ask myself what kind of man I had been and to be honest. I thought a lot about that. When I was honest with myself I could see how self centered and callous I'd been. I knew I couldn't take back what I'd done but I could apologize. I could see it made a difference for them. I also learned that slaps from angry women hurt. The guys I had with me started rating the slaps after we left.\" \n\n\"How many...\" \n\n\"Five. Just five but that was enough,\" the young man said looking ashamed. \n\nBen nodded. \n\n\"I was hoping that if I could be a better man... I might be good enough to date Karen,\" he said looking hopefully at Ben. \n\n\"Let's go inside where it's warmer so we can talk,\" Ben said. \n\nThey made their way into the house and Ben was very happy with the open layout of the living room, dining area and kitchen. They went into the living room by the huge picture window. \n\nBefore they began Jayden lifted his pant leg and Ben saw the ankle monitor was gone. \n\n\"How?\" Ben asked. \n\n\"Mr. Selleni went with me to my interview with the judge last week and said some really nice things about me and how integral I'd become to his team. He really impressed the judge.\" \n\n\"You must have done a little of that as well or he wouldn't have trusted you.\" Ben admitted. \n\n\"Well, you did say they weren't the enemy.\" \n\nBen paused to look at the young man, surprised. That felt good! \n\nHe collected himself then looked back at the nervous expression on Jayden's face. \"Karen is a special woman. What she's been through... no one should have been treated like that. She's just now learning she has value, her place in the world, and how she's good at something real. Her culinary skills are very good and I want her to expand upon them by going to school to learn more. She's really excited about that.\" Jayden was beginning to look a little deflated. He was starting to hear a 'no' in Ben's words. \n\n\"She's also lonely. I think it would be very healthy if she were to have a boyfriend in her life right now. Someone who could show her what it is to have someone who truly appreciates her as a person. Someone to be proud of her accomplishments to help build her confidence in herself. She's going to need patience and to be patient herself, even if that means her boyfriend controls the pace. She doesn't know what it means to be treated as a person. Dating, flirting, first kisses, holding hands, taking the time to build a relationship. Then and only then should sex be introduced. She needs to learn these things. Do you think you can be that kind of boyfriend?\" \n\nJayden was vibrating with excitement. \"Yes, sir.\" \n\nBen gave him one more critical look. \"Then I'm ok with you dating my daughter.\" \n\nJayden's smile was brilliant. \"Thank you! I won't let you down. And I won't let her down!\" he finished when he saw Ben's eyebrow go up. \n\nBen nodded with a smile. \"I'm still learning what it means to be Karen's dad. Being her boyfriend will have its own challenges. Please know you can talk to me about anything.\" \n\n\"Thank you.\" Jayden actually looked like he was about to hug Ben but settled with shaking his hand. \n\n\"I'll let you get back to it then. Dominic said you wanted to speak to me about something. Was that it?\" Ben received a nod so he patted Jayden shoulder as he turned to go. As Ben was leaving the room he heard cheering behind him and glanced back to see some of the crew coming in to congratulate Jayden. \n\nHe smiled and continued out to see Dominic. He filled him in and saw the big man sag with relief. That made Ben feel even better about his decision. They said their goodbyes as Dominic went inside. \n\nBen looked down the street and saw Luis Hernandez pulling into his driveway. When he last spoke with the man there had been some issue with the wedding of his son so Ben wasn't sure when he should do the renovations on Tina's house. He wanted to be able to finish the updates to the bathrooms and the kitchen before the newlyweds moved in. He walked down the block and knocked on the man's door. \n\nJaclyn Hernandez opened the door and a wide smile burst onto her face. \"Mr. Shepherd! How nice of you to visit! Please come in!\" She was a short woman with a happy round face and a plump body. Curly black hair reached her shoulders and she wore an abundance of gold. He'd never been able to get her to call him Ben. \n\nShe led him into the living room where Luis was just getting up from his chair. He was grimacing in pain. \n\n\"What happened?\" Ben asked in concern. \n\nThe older man just waved it off and shook Ben's hand. \"Just a sore back from moving some things at Bianca's parent's home.\" Ben recognized the name of their son's fianc\u00e9. \n\nJuan was just a little taller than his wife and had the stocky build of someone used to heavy labor. Greying hair and square jawed he still looked very fit. He owned a chain of autobody shops and liked to get his own hands dirty working on the more challenging jobs. Seeing Ben's eyebrows go up he smiled. \"Books. So many boxes of books. Terrible things for the back!\" Everyone took seats, Juan back in his chair and Ben next to Jaclyn on the couch facing the chair. \n\n\"What can I do for you Ben?\" Luis asked. \n\n\"I was just following up on our last conversation. You mentioned there was an issue with the wedding?\" he asked gently. \n\nLuis and Jaclyn shared a sad look. \"There was a tragedy in Bianca's family. Her father suddenly passed away. Rita has no other family in the States and her friends moved to a retirement home two streets west of here but far from her home. She's all alone. Bianca is still living at home and leaving now is not a good idea,\" Juan said. \n\n\"How does Ramon get along with Rita?\" Ben asked. \n\n\"Very well! The woman is very sweet and quiet. Her husband was the loud and commanding one in the family.\" Jaclyn said. \n\n\"Have they considered a mother-in-law suite in the house?\" Ben suggested. \n\n\"Rita's house is too small for the three of them especially if they start a family,\" Juan explained. \n\n\"No, I mean in the new house. There is a lovely room at the back of the house that's currently set up as an office. It could easily he redone as a bedroom. It already has a private three piece washroom with a toilet, sink and shower. I could replace some of the built-ins with wardrobes for clothes. \n\nThe couple blinked at him. \n\n\"Bad idea?\" \n\n\"No! No, it is a very good idea! We did not think of it! We were keeping the house as a surprise but this solves everything! Would it be alright if I called Rita to ask?\" Jaclyn asked excitedly. \n\n\"Of course! I'll need a week to do the renovations on the place. When was the wedding going to be again?\" \n\n\"November the twenty-third.\" Luis said. \n\n\"That's do-able. I will talk with my contractor friends to see if they are willing to make a little extra money,\" Ben said with a grin. \n\nLuis looked uncomfortable. \"You have been too generous Ben. I feel like I should-\" \n\n\"Please. Let me do this. To be able to keep our little neighborhood filled with good people brings me a tremendous sense of satisfaction! The idea of more kids coming to the street makes me especially happy!\" Ben said and the couple grinned at him. \n\n\"They will pay rent!\" Luis said with a firm voice. \n\n\"And I will be very fair. I don't need to make a profit from these homes. As long as the tenants are taking care of the home and the rent covers the utilities and property taxes. I'm good,\" he replied. \"As a young couple they need to save as much as they can. Especially if they plan on starting a family.\" \n\n\"You are such a good man, Mr. Shepherd!\" Jaclyn gushed and leaned over to hug Ben on the couch. \n\n\"Woman, you are embarrassing the man!\" Luis exclaimed but his eyes held only amusement and love for his wife. \n\nShe sat up from the couch with a broad smile and a blush as she rushed away to make the phone call. \n\n\"How many homes do you own in the neighborhood now?\" Luis asked. \n\nBen thought about it. \"Five? First mine, then Trish's, Tina's, Ashley Beaumont's, then Barry Walker's place.\" \n\nThe older man nodded thoughtfully. \"I'm surprised you didn't buy the White's home.\" \n\n\"I put in a bid but the bidding war got crazy. I hope she got a good price for it. I haven't seen the new owner yet,\" Ben said. \n\nLuis smiled. \"You haven't seen them because every winning bid failed to arrange their financing. Three failed deals so far. The home remains unsold.\" \n\n\"Really? Huh. Give me a second.\" Ben tapped out a quick note to Joanne to see if she was still entertaining offers. He indicated his offer of 1.15 million was still on the table. He hit send and looked back at Luis. \n\nThe man struggled to get out of his chair. Ben moved forward to pull him to the edge. \n\n\"Ah. May I suggest a soak in a hot tub?\" \n\n\"That sounds lovely but we do not have one.\" Luis said with a smile and a small shrug which tweaked his back. \n\n\"I do and I insist you come use it to heal your strained muscles,\" Ben said with a smile. Luis looked like he wanted to say no but his back really was bothering him. He finally nodded with a grateful smile. \n\nJaclyn returned with a huge grin on her face. \"You have made many people very happy today Mr. Shepherd. Ramon and Bianca are overjoyed with your offer and Rita gladly accepts. The wedding will proceed and we will have a special blessing to her father during the ceremony!\" \n\nBen grinned happily. \"That sounds lovely! \n\n\"They would like to come see the home if that is alright with you?\" she asked. \n\nBen unhooked the key and handed it to Jaclyn. \"I'll come back for it later. Luis and I will be heading to my place so he can soak his muscles in my hot tub. Of course you are welcome to join us.\" \n\nJaclyn burst into a fit of giggles. \"No, I could never get into a hot tub with others!\" \n\nLuis leered at his wife and said something that made her shriek and burst into laughter. She swatted at her husband and headed back to the kitchen. \"I expect to see my husband back in full working condition Mr. Shepherd,\" she said smiling over her shoulder. \n\n\"Will do!\" \n\nLuis retrieved a pair of swim trunks and followed Ben back to his place. He greeted Tina and Ben explained they were going to soak their muscles in the hot tub and handed Luis a guest robe. \n\nHe pointed Luis to the guest bathroom in the hall and Ben got his trunks on in his bedroom. Pulling his robe over his shoulders he grabbed a couple of towels from the linen closet and led Luis to the deck off the kitchen. While the air outside was chilly the water was nice and hot and soon the two men were easing their bodies into the steamy waters. \n\n\"Ah, this is wonderful! I must get one of these for my deck!\" Luis sighed as he felt the knots in his back relaxing. He slowly stretched his muscles and they were definitely loosening. \n\n\"Ramon's house has one. Seems like a good reason to visit,\" Ben said with a smile. Luis nodded thoughtfully. \n\nThe two men settled back and enjoyed the heat. Luis brought him up to speed on the plans for the wedding and how Rita and Jaclyn had struck it off so well. \"Unfortunately I cannot say the same about me and Bianca's father, Rafael. I will not speak ill of the dead but I will say we did not see eye to eye on many things. I am sorry his parting brought pain to his wife and daughter but it might have also relieved them of... other pain.\" Luis was holding Ben's eye as he said this and Ben nodded grimly. \n\nAfter they'd soaked for a while the timer on Ben's phone chimed and he looked over at the man. \"That's our signal to get out. How are your muscles feeling?\" \n\nLuis smiled. \"So much better!\" \n\nThey climbed out and dried off with the towels and put on their robes which had been on the heating rack. They went back inside and Ben said he could use the shower to rinse off if he wanted. He also pointed out that the shower stall was similar to what he intended to upgrade Ramon and Bianca's house with. \n\nBen quickly rinsed off in the master bathroom and got dressed again. He checked the time and saw he just had enough to go over to the milling shop and get back to take Tina to lunch. He met Luis coming out of the bathroom and accepted his towel and robe. He put them in the basket in the laundry room in the hall then walked the man to the door. They could see a car in the driveway of Tina's place so the tour was going on. Luis shook his hand and hustled away to join his family in looking at the new place. \n\nHe closed the front door and went into the living room where Tina was typing on her tablet. She shut down the app as he sat next to her. \n\n\"A less trusting man would be suspicious and jealous right about now,\" Ben said looking down into Tina's mischievous smile. \n\n\"I am glad you are not that kind of man,\" she said sweetly. Ben couldn't stop himself from smiling. \n\n\"Why don't you come with me when I go to the milling shop? It won't take me more than fifteen minutes then we can go directly to wherever you'd like to go for lunch. Where are we going by the way?\" \n\n\"I'd like to go to the mall,\" she said. \n\n\"The mall? There's a restaurant you want to try there?\" he said with raised eyebrows. \n\nShe shook her head with a smile. \"There is a Korean take out booth in the food court. You can get what you like from one of the other booths. We can eat in the food court and watch the people go by.\" \n\nBen grinned. He liked that idea, a lot. He nodded. \n\n\"Are you ready to go?\" he asked and the doorbell rang. \"Hang on a second.\" \n\nHe got up from the couch and made his way to the front door. When it opened a petite, dark haired young woman with large teary eyes stepped in and hugged him tightly. She began to cry. Ben looked down in surprise then looked over her head at Ramon who was smiling lovingly at his fianc\u00e9's emotional display. Standing next to him was another brunette, older but equally petite with shorter hair that only reached the top of her shoulders. She also had happy tears in her eyes. This must be Rita. Behind them, smiling at Ben's expression, were Juan and Jaclyn. \n\n\"Come in from the cold, please!\" Ben said and gently moved himself backwards, the crying woman moving with him as he guided her with a gentle hand on her back. \n\nFinally Bianca got control of herself and pulled back from Ben's chest. Large eyes looked up at him and he smiled gently at her. Her bottom lip was trembling. Ben looked to Ramon for assistance and he came to collect his fianc\u00e9. \n\nThey all went into the living room and Ben introduced Tina to the group. Eyes widened when they saw her baby bump and the cast on her leg. Bianca and Rita suddenly froze and glanced at Ben. \n\nTina picked up their unease immediately. \"A reporter trying to get a story on Ben attacked me at the grocery store. He knocked me down over a display and I broke my ankle. Luckily the baby was not hurt in the attack,\" she said and the two women immediately relaxed once more. Ben shared a look with Luis. \n\nRamon was taller than his father and slimmer. Luis had explained to Ben that he was studying to be a lawyer and working as a paralegal at a small firm downtown. He came forward and shook Ben's hand. \n\n\"I cannot begin to tell you how grateful I am for your generosity. It is a rare thing in the world today and it could not have come at a better time. I had lost all hope of ever finding a place we could afford to live. Then Rafael was taken from us and all our plans had to be put on hold. This house will not only give us room for us but for Rita as well.\" \n\n\"And children!\" Jaclyn added. \n\n\"Mom!\" Ramon groaned. \"Please let us get married first!\" \n\nThe parents chuckled at this. Ben smiled. \"As I said to your father, I'm happy to be able to bring and keep good people in our neighborhood.\" That earned him smiles. \n\n\"The house is currently furnished.\" Ramon said. \n\nBen winced. \"Yeah, probably not to your style. That's how Tina's mother-in-law decorated it. You are welcome to keep anything you want and the rest can be taken away to a charity we use.\" \n\nBianca looked like she was going to cry again and Ramon gave her a squeeze as he could see this was distressing their benefactor. \n\nBen tore his eyes away from her large teary eyes to look at Ramon. \"I'll talk to my contractors and see when we can schedule in the renovations. I'll need to pass some ideas of what you'd like to see in Rita's room. I also plan on upgrading the kitchen and bathrooms. If you want to see what I'm talking about you can take a look at my kitchen and the guest washroom in the hall,\" he said pointing to the two rooms. \n\nBianca and her mother walked off in the direction of the kitchen while the others followed Juan to the guest washroom he'd just showered in. Tina smiled at Ben at the excited sounds coming from the kitchen. He smiled in return. The groups switched rooms and more excited noises issued from both directions. \n\nJuan had a resigned look on his face when they all rejoined Ben and Tina in the living room. \"Do you think I might be able to hire these contractors to upgrade our kitchen as well?\" Ben glanced over at Jaclyn and saw the hopeful look on her face as she clasped her hands together before her mouth. \n\nHe smiled. \"Yes, I'll ask him about that as well.\" Jaclyn's face lit up with a smile and Juan rolled his eyes but kissed her cheek. \n\n\"Our kitchen is going to look like that?\" Bianca said wide eyed. \n\n\"Close to that. I think the shape of the rooms is a little different. It will have the same quality fit and finishes and appliances.\" \n\n\"New appliances? What happens to the existing ones?\" Rita asked timidly. \n\n\"They go to charity or a reclamation center if they don't work,\" Ben answered. \"I'll get in touch with you once I speak with the contractor.\" \n\nRamon shook his hand again and Bianca gave him a hug. Rita gave him a hug too though it looked like her face was going to burst into flames. Juan shook his hand and Jaclyn gave him a hug and giggled as she followed her husband outside. Then it was just Tina and Ben. He carried her to the garage and sat her in the passenger seat of his truck then went back for her crutches. Once they were settled he opened the garage door and got them on their way. \n\nThe drive to the custom milling shop didn't take too long and Tina used her crutches to go inside with Ben. The staff made a big fuss over Tina as it was the first time their long-time customer showed up with someone from his life outside. Tina was secretly pleased with the attention but kept her eye on Ben. If he started to feel uncomfortable she would put an end to it. \n\nBen sat down with the machining tech and they went over the specs. Ben was conscious of Tina's presence so he made sure he kept them on track and they were done in twenty minutes. The tech was sure they had the raw materials in stock and would be able to machine the piece he wanted by Friday at the latest. Ben thanked him and he led Tina back out to the truck. He helped her in and drove them to the mall. He parked by the entrance near the food court. There was an info kiosk inside the doors and Ben signed out a wheelchair for Tina. She sat and he wheeled her down the hall towards the food court. ",
        "He took her to the Korean restaurant and she was able to order some favorites. She was also able to use her Korean to order and the staff treated her very well. Ben ordered some rice and some beef dish in a sweet sauce. \n\nThey found a table near the edge of the food court so he and Tina could people watch. \n\nBen was pleased to discover that eyes were sliding past him to gaze at Tina. He looked at her too and saw she really was glowing with health and happiness. It warmed his heart. \n\n\"It's good?\" he asked as she devoured her food. \n\n\"I have such a craving for this dish. I do not know why,\" she said perplexed. \n\nBen smiled. \"I believe food cravings are a normal thing for pregnancies. \n\nTina looked up in surprise and grinned at him. \n\nThey finished their meal undisturbed which was a relief for Ben. He thought they were going to actually make it out alive as he wheeled Tina back to the exit when he heard a commotion behind him. \n\n\"It's him!\" \n\n\"The Bronze Man!\" \n\n\"OMIGOD!\" \n\n\"-autograph!\" \n\n\"Selfie!\" \n\nBen sighed and Tina looked up at him in concern. The voices were definitely female and didn't sound young. \n\nThey managed to reach the info kiosk to return the wheelchair and he was helping Tina to her feet when the two women swooped in. \n\n\"Mr. Shepherd?\" \n\nBen turned to see two women, probably in their thirties, fresh from the salon, dressed very well with maybe a few too many designer labels on display, eagerly waiting for him to acknowledge them. \n\n\"Yes?\" \n\nHuge smiles blossomed on their faces. \"Could I have your autograph?\" one woman pleaded. \n\n\"You know, I'm not a celebrity. I don't give autographs,\" he said, trying to be civil. \n\n\"A picture then?\" the other stepped forward holding up her cell and Tina wobbled back on her crutches. \n\nBen braced Tina with a hand on her back and his other hand protectively touching her tummy. The cell's flash went off and the two women suddenly seemed to realize Ben wasn't alone. \n\n\"Who's this?\" the autograph chaser blurted. \n\n\"OMIGOD! She's having your baby?\" the photographer exclaimed. Ben scowled and they took that as confirmation. \n\n\"But- but she said you were sterile!\" responded the first. \n\n\"WHAT?!?\" Ben growled as he reeled back. \n\nThe women leaned away but their eyes were twinkling with the excitement of a shared discovery. \n\n\"The woman claiming to be your wife told the reporter that you were sterile! In Peeps magazine!\" \n\nTina tugged on his sleeve and Ben came back to the moment. Ears and cheeks burning with humiliation, he turned and walked with Tina out of the Mall. He could hear the excited giggles of the two women behind him and he trembled with undirected rage. \n\nHe got Tina back into the truck and got them driving back to the house. Ben was silent, his jaw clenched, as Tina watched him from her seat. \n\n\"I had a lovely lunch Ben,\" she said quietly. \n\nHer words seemed to snap Ben out of his funk and he glanced apologetically towards her. \"Oh, I'm sorry Tina. I did too! It was really nice to just be two people out for lunch in the food court. I really missed that.\" His brow furrowed once more as a troubled look stole back onto his face. \n\nHis cell began to ring so he passed it over to Tina to answer. \n\n\"Hello?\" \n\n\"Hi, is this Tina?\" asked a voice. \n\n\"Yes, who is this?\" \n\n\"It's Joanne White. May I speak with Ben?\" \n\n\"Ah, hello Joanne! May I put you on speaker? Ben is driving,\" Tina explained. \n\n\"Oh, sure.\" \n\n\"Go ahead,\" Tina prompted as the phone went on speaker mode. \n\n\"Ben? It's Joanne White.\" \n\n\"Hi Joanne! How is Florida?\" \n\n\"Hot! But I'm not complaining!\" she said and Ben heard the smile in her voice. \"I- I'm calling about your offer. It's still on the table?\" \n\n\"Yes.\" \n\n\"You're not going to lower it or tell me I told you so?\" \n\n\"Joanne! I wouldn't do that! I'm sorry your other bids fell through,\" Ben said sincerely. \n\n\"Thank you Ben. I'd like to take you up on your offer then. I was going to contact you after the last buyer backed out but I was so embarrassed.\" \n\n\"Joanne, please! There is no need to be embarrassed. Listen, I'm going to give Trish's cousin Shelly a call. She's a realtor. You give her a call and she'll make all the arrangements. Here's her number.\" Ben gave her the number and Joanne repeated it back. \"Just give me a few minutes to fill her in, ok?\" \n\n\"Perfect! Thank you Ben!\" \n\n\"Good doing business with you Joanne! Take care!\" \n\n\"Bye!\" she said and hung up. Tina dialed Shelly. \n\n\"Shelly Spencer, how may I help you today?\" \n\n\"Hi Shelly, it's Ben Shepherd with Tina Lee on speakerphone.\" \n\n\"Hi Ben! Hi Tina!\" \n\n\"Hello!\" Tina answered. \n\n\"You are about to get a call from one of my previous neighbors, Joanne White. I've agreed to buy her home for 1.15 million. Can I ask you to take care of that for me?\" \n\n\"Of course you can! You know you're my favorite buyer!\" the woman said. \n\n\"Thanks Shelly! Let me know when you need my signature.\" \n\n\"Will do! Thanks again!\" \n\nOnce she hung up Ben had Tina dial the bank to speak to the manager. Ben spoke with him to let him know he was going to need another check. \n\nThat taken care of they pulled into a gas station and while Ben pumped the gas, Tina made her way inside the little store to pick up snacks for her cravings. She returned with a bag and Ben's eyebrows rose. Tina stuck out her tongue and Ben smiled. She managed to get in by herself and Ben drove them home. \n\n\"I can get myself into the house on my own,\" Tina insisted and Ben wasn't even allowed to carry her bag of snacks. \n\nHe closed the garage and held the door for her but she made it in on her own and shooed him away once they were inside. He gave her a kiss and made his way downstairs to his office. \n\nBen stopped once more before the panic room door and stared at the dented surface. He was desperate to find something to occupy his mind, something to distract him from the incident in the mall. Examining the structure of the door he decided he was going to design a new one himself. He would work from the existing door's design but add gusseting to its back to stiffen the surface so it wouldn't bend under the pounding of a hammer. As that would increase its weight he'd improve the guides, the bearings and the hydraulics on the closer to bear the extra load as well as allow it to close faster. \n\nBrain happily stimulated, he sat at his drafting table and got to work. \n\nTina sat in her favorite spot in the living room and listened for Ben. He was in his office so she knew she had a few hours at least. She pulled the magazine from her shopping bag. She'd grabbed an issue of Peeps and turned to the page with Wendy's story. Tina looked at the image of the woman. Greying blonde hair, sad eyes, tight thin lips, lines on her face, and very plump. She did not look like a happy woman. \n\nTina read the story which was only two pages. Aside from the picture of Wendy at the beginning of the article the only other photo was a wedding picture of Ben with Wendy. Attached as proof she supposed. \n\nWendy didn't paint a very flattering picture of her marriage to Ben or of Ben himself. She spoke of his disappointment when he discovered he was sterile and his subsequent loss of interest in her. By the end of the article Tina wanted to strangle the woman. \n\nShe flipped on her tablet and started a new email. She addressed it to Gabriella, Catherine, Trish, and Hannah and filled them in on the latest development with Wendy. She added the pertinent information Wendy had disclosed in the story and let them know how upset Ben had been when he'd been confronted by the two women in the mall. She snapped a picture of Wendy's face with the tablet and added it to the email. That done she sent it off. \n\nFirst to respond to the message was Trish but that was no surprise. The language was very colorful but the message was clear, Trish loved Ben and would defend him to her dying breath. She offered to be at his side when the court case happened. Tina was sure all of the women in Ben's life would be there. She wasn't sure if that would be a good or bad thing to sway the judge's opinion. Something to speak to Gabriella about. \n\nSpeaking of the woman, Tina's tablet chirped with a video call request. Looking towards the stairs there was no sign of Ben. She dug her earphone out of the end table drawer and answered the call as she plugged it in. \n\nGabriella's concerned face popped up on the screen. \n\n\"Hi Tina! Is Ben there?\" \n\nShe looked and the coast was still clear. She kept her voice quiet just in case. \"Hi Gabriella! No, he went down to his office.\" \n\nGabriella's expression relaxed. She knew he'd be working on some engineering puzzle. \"How are you doing?\" \n\n\"Very well! I enjoyed very much my lunch with Ben today until the two rude women showed up,\" she said with a shrug. \n\n\"Tina, be honest with me. Does Ben need me to come back?\" Gabriella asked. \n\n\"Does Ben miss you? Yes, but he will be coming to see you very soon. Would he ever forgive himself if he was the cause of your giving up your dream? I believe you know the answer to that question. We will keep him as happy as we can between his visits to see you. Tonight Lisa and Lori will be distracting Ben very much I believe,\" Tina said with a wicked grin. \n\nGabriella held up her hands in surrender. \"That's ok, I don't need to know the details.\" A phone rang in the background and Gabriella looked away distractedly. She looked back at the camera. \"Thank you Tina for being there for him. I miss him terribly too. Take care!\" \n\n\"You as well!\" Tina said and disconnected. She wondered when Gabriella got to sleep. \n\nShe saw a message from Hannah saying she would see how Ben was feeling in their group discussion session the following night. \n\nA message from Catherine arrived and in it she asked if she should come over tonight. Tina let her know that Ben was ok for now and would be going out tonight. That made her think about dinner. Was Ben going to be home for dinner? It was almost time for her to begin preparing the food. She would have to ask Ben to put the roast into the oven but she could do everything else. She sent him a text. Moments later he replied he would be home for dinner but would be going out at 9:30PM. \n\nTina tucked her earphones away and put the magazine in the drawer. At the back, just in case. \n\nShe made her way into the kitchen to begin the prep work for dinner. She loved cooking for her man. \n\nBen was feeling pleasantly full from yet another amazing meal. Tina spoiled him terribly! He grinned happily as he scrubbed the roasting pan. He could hear the sounds of happy conversation behind him as Penny and Karen teased each other about something or other. He caught Karen saying the words 'your boyfriend' and he turned to look at Penny in surprise. \n\nThe doorbell rang and Penny leapt to her feet. \"I'll get it.\" \n\nBen looked over at Karen who had a guilty look on her face. He sighed. Being a dad was harder than he thought it would be. He knew Tina had arranged for them to get birth control pills and they were technically adults but his instinct was to protect them. Penny's grades were still very good so he wasn't as concerned as he might have been. He wasn't happy that she had kept this new development a secret from him though. \n\nPenny reappeared in the door with a strange grin on her face. Behind her was Jayden. Ben's eyebrows went up. He hadn't expected him to move quite this quickly but he supposed he should have. \n\nBen leaned back against the counter as he dried the roasting pan and watched Jayden nervously enter the kitchen. All eyes turned to him as Penny rejoined her sister at the kitchen table. This meant the young man was facing the curious eyes of Tina, Lucy, Penny, and Karen while under Ben's scrutiny as well. Christopher wasn't paying any attention at all as his toys kept him occupied on the floor. \n\n\"Good evening,\" he said, clearly nervous. \n\nThe women returned the greeting and Karen glanced quickly at Ben. \n\n\"Karen, I was wondering if you'd like to go see a movie with me on Friday. We could have dinner first then see that new Katherine Heigl movie.\" \n\nKaren's eyes were wide with surprise and she quickly looked over at Ben to see if he was going to protest. Her eyes got even wider when she saw he was just smiling at her. Her face split into a wide grin as she looked back at Jayden. \n\n\"YES! I mean I'd love to. Could- could we see that Fast and Ferocious movie instead though. I don't like rom-coms. I like action movies!\" Karen blurted excitedly. Jayden's smile got wider as he realized he'd hit the jackpot. \n\n\"Apparently Penny has a boyfriend too. Maybe you could double date,\" Ben suggested. \n\nJayden nodded and Penny looked even guiltier but nodded as well. \n\nLucy and Tina were all smiles. \n\n\"I'll pick you up at six on Friday?\" Jayden asked. \n\nKaren nodded excitedly and her smile was priceless. Jayden returned it and nodded to the group. \n\nHe looked over at Ben. \"Goodnight Ben.\" \n\n\"Goodnight Jayden.\" \n\nKaren got up and walked him to the door. She locked up when he left then came racing back into the kitchen to hug Ben. \"Thank you!\" she gasped into his chest. \n\nBen kissed the top of her head as he hugged her. \"All I'm going to say is take your time. Enjoy the whole experience of dating and courting.\" \n\n\"Courting?\" she asked looking up at him with big blue eyes. \n\n\"Getting to know each other before... it gets physical,\" he said uncomfortably. \n\nShe hugged him tighter and he hugged her in return. \n\n\"Do you have homework?\" he asked and she released him to rush off to her bedroom to get started. \n\n\"Not so fast young lady,\" Ben called out to Penny as she tried to follow her sister. \n\nPenny returned looking sheepish. \n\n\"What's the thing I've asked for in this household?\" he said firmly. \n\nPenny looked up at him through her thick lashes. \"Honesty,\" she said quietly. \"I'm sorry.\" \n\n\"I'd like to meet him. Have him meet you here Friday night. I also want you to keep an eye on your sister.\" Ben sighed. \"And the same goes for you about taking it slow!\" Ben growled. \n\nPenny crushed herself against Ben's chest and hugged him. \"Thank you!\" \n\nHe kissed the top of her head then shooed her to go do her homework too. \n\nBen looked back at the kitchen table to see two very happy faces. \"What?\" \n\n\"Such a good dad!\" Lucy said with a grin. \n\nBen snorted and went back to cleaning up. \n\n\"Please join us in the living room when you are done.\" Lucy said as she assisted Tina up and onto her crutches. Tina told Christopher to bring his toys into the living room and the boy quickly gathered them up and rushed into the next room. \n\nAfter wiping down the countertops Ben walked into the living room and saw Lucy snuggled up on the couch with Tina and he smiled. Lucy moved over and the ladies patted the cushion between them. \n\nBen carefully sat between them and they moved closer to him. Christopher thought they were playing a game and crawled up on Ben's lap, giggling the whole time. \n\nBen gave the boy some kisses and pretended to eat his ear causing an explosion of giggles. He caught sight of Penny as she walked down the hall. \n\n\"Penny, I think it's time for this young man to brush his teeth and get ready for bed. Could I ask you to help him with that?\" \n\n\"Sure! Come here little man!\" she said scooping him up. He clung to her and more giggles could be heard as she swooped him back down the hall. \n\nWhen they were alone once more Tina tapped on Ben's arm and he lifted it over her so she could lean against his side. Lucy did the same and the two ladies sighed with happiness. \n\nTina looked up at Ben. \"I was texting Lisa and Lori today and they told me you were taking them to Club Eon tonight.\" He nodded. \"They also told me it's not the usual kind of dance club you are used to.\" Ben's face took on a worried expression. \"I would very much like you to take Lucy and me to this club after I have had our baby. You did say you would take me dancing.\" \n\n\"Yes I did and I will. What's special about Club Eon?\" Ben asked cautiously. \n\nLucy looked up at Ben's face and caught his attention. \"I did some research when Tina told me about it and I completely agree. I would love to go there with you! It caters to Doms and their Subs. You don't have to be in that kind of relationship to be admitted but there are strict rules of conduct to protect the patrons. It is very civilized so it's very freeing for us subs. Everyone wears two glowing pins except tourists, those not involved in the lifestyle, who wear a single yellow pin. Wearing the blue pin means you are a Dom. A red pin means you are a sub. An Orange pin means you can be both. The color of the second pin tells people your intent. White means you are there just to dance with your partner, or partners in your case, and aren't seeking additional relationships. A green pin means you are open to being approached by those seeking a relationship.\" \n\n\"I thought we were just going dancing!\" Ben complained. \n\n\"You are but it is very nice for us to be able to show our appreciation of our Dom in a public way. An extra element of excitement,\" Tina explained and Lucy nodded emphatically. \n\n\"So I get to wear a blue and white pin and the twins will wear a red and- what, green?\" he asked. \n\nTina and Lucy gave him a frank look and he realized he was still avoiding the truth. The twins were both subs and had claimed him as their Dom. He closed his eyes and took a deep breath. Honestly, as much as he fought the idea of them 'settling', deep inside he desperately wanted them for himself. He opened his eyes and felt the truth of it bitch slap him. It was time to man up and finally accept it. They needed a Dom and he would let them know tonight that they were his. He'd strung them along long enough, left them in this uneasy limbo for too long. He owed them that much. \n\nHe looked into Tina's eyes and saw they were practically twinkling with joy as she understood he'd figured it out. He kissed her and felt her melt against him. She knew she was his but that still left the question of Lucy. He pulled back from Tina's soft mouth and looked at the beautiful tattooed woman under his other arm and saw her eyes were filled with a desperate need. He felt something open in his heart as his resistance broke. \n\n\"You're mine,\" he growled as a wave of emotion almost overwhelmed him. He took her mouth with his and she squeaked. \n\nWhen he pulled back from the kiss she had tears of joy in her eyes. \"I love you Ben!\" she gasped. \n\n\"I love you too Lucy. I love you both. I'm sorry I haven't been a better Dom for you. I will do better,\" he said, emotion making his voice rough. \n\n\"Ben, you're a better Dom than you realize,\" Tina said gently. \n\nBen still seemed a little unsettled. \"What's wrong?\" Lucy asked. \n\n\"I- I feel... uncomfortable with how possessive I am with you, Tina, and the twins. I consider myself rather progressive but my behavior with you four feels rather primitive, primal.\" He was struggling to verbalize his instinctive reaction to their submissiveness. \n\n\"Do you think we are your possessions?\" Tina asked. \n\n\"No! That's not it-\" \n\n\"Are we not women in your eyes?\" she continued calmly, ignoring Ben's agitation. \n\n\"Of course you're women! You're all intelligent, strong, loving, beautiful women-\" \n\n\"Ben, what you want to possess is our love, body and soul. This is what we want more than anything to give to you. It may be primal but for us it is exactly what we need. We feel safe being submissive with you because you still see us as women and not as objects,\" Tina explained. Ben paused to think about that. \n\n\"You'll tell Lisa and Lori tonight as well?\" Lucy asked. \n\n\"Yes,\" he replied, his throat tight with emotion. \n\nTina gently pulled Ben's face down to hers and kissed him tenderly. ",
        "\"Thank you Tina. I'll need you to guide me-\" \n\n\"Ben,\" she shook her head, \"you need no guidance in how to love us.\" She placed her small hand over his heart. \"It comes from here and it's perfect.\" \n\nThey relaxed back on the couch and just enjoyed the closeness. \n\nIt was Lucy who noticed the time. \"Ben you need to get ready to go. I suggest you wear that amazing charcoal grey shirt under your black blazer and slacks. The pins will glow nicely on black and you'll look fierce in that outfit!\" \n\n\"Mmmm! Remember you have to take us there too one day!\" Tina smiled. \n\n\"With pleasure!\" he replied. \n\nHe got up and made his way to the master bedroom. Tina and Lucy followed and watched him dress. Once he was done they both smiled and made hungry noises. He gave them both passionate kisses and they rested on the bed, heads spinning as they giggled happily. He smiled over at them as he put together an overnight bag. \n\nThey followed him to the garage door and locked up behind him. He drove over to the twin's house and they rushed out to get into the back seat of his truck. They put their overnight cases over the seat into the back. \n\n\"No one is going to ride up front with me?\" he asked in surprise. \n\n\"Did Tina tell you about the dance club?\" Lisa asked cautiously. \n\n\"Ah. Never mind.\" He glanced in the mirror and saw two identical brilliant smiles. They were trembling with excitement and held hands. \n\nThey gave him directions and thirty-five minutes later they pulled up to the entrance of the Eon Hotel. The valet jogged around to the driver's door and opened it for Ben. The man handed him a chit for the car and Ben opened the rear door for the ladies as a second man collected their bags from the back. \n\nBen offered his hand and got his first good look at the twins as he guided them out. Both were wearing ankle length, light cream colored faux fur coats which covered their bodies completely. Their shining red hair was teased up on their heads and gold hoops dangled from their earlobes amongst the many other piercings. Ben led them to the reception desk and with a glance at Lisa he gave his name. The reception clerk took his information with a smile. \n\n\"Ah! Mr. Shepherd! It is indeed an honor to have you grace our establishment!\" the night manager said as he overheard the name and rushed forward. \"My name is Henry. Please let me know if there is anything we can do to make your experience with us better in any way!\" \n\nBen smiled and hid his unease at how they man had emphasized the 'any'. He gave his credit card and signed for the room. \n\nThe reception clerk asked to see the ID from Lisa and Lori and nodded once she'd read them. \n\n\"Will you be going directly to the club? We can take your bags up to the room with your coats if you'd like,\" Henry asked. \n\nUnderstanding his role for the night, Ben made the decision for them and nodded to the man. He took off his overcoat and handed it over. Then he turned to Lori who was drinking in his dark, powerful presence with a satisfied smile. He gestured for her to come closer. He looked into her eyes as he unbuttoned her coat and slipped it back from her shoulders. He allowed his eyes to roam down her body. \n\nThe first thing he noticed was the snug red leather collar around her neck with the small silver 'O' ring at the front. Below this was a lot of bare skin until Ben's eyes reached the tops of Lori's tits squeezed together and upwards in a short red leather bustier. Lori's tight tummy muscles were visible below the bustier and above a tight red leather skirt which covered her ass but ended at mid-thigh. Long toned legs stretched down to her red leather pumps. Ben was momentarily stunned by the raw sensuality Lori was presenting. He looked back into her eyes and saw she was biting her lip nervously. His eyes told her he was seconds away from taking her right there over the reception counter. \n\nLori suddenly felt her knees go weak as he devoured her with his eyes. His need and how fucking hot he looked in his suit were making her tingle madly and she almost couldn't wait for the fun they had planned for later. \n\nBen turned to Lisa and gestured her forward. She moved quickly to him and he removed her coat as well. He discovered she was dressed identically to her sister and he subconsciously growled as he took in her provocative attire. Her tits were almost begging to be kissed. Lisa's eyes were twinkling with excitement as she smiled up at him. \n\n\"You both look... delicious,\" he said for their ears only and they grinned widely. \n\n\"Let's save that for later!\" Lisa whispered and squirmed as her body reacted to his hungry look. \n\nHenry bowed to them with their coats over his arm and gestured the way to the club. Ben led them down the hall to an ornate doorway. Two men in leather straps opened the doors for them. Inside was a hostess desk. Another couple was currently speaking with the woman behind the desk and Ben saw she was explaining the glowing pins. He saw they were actually small glowing loops and there seemed to be a number of different ways they could be worn. He supposed that made sense as the wide range of outfits people wore to a place like this might make pinning the loop to an article of clothing impossible. \n\nIt was time to man up. He turned to the twins and once more gazed in awe at their beauty. He gave himself a shake and took their hands in his. \n\n\"First off I want to tell you how incredible you both look tonight.\" Smiles beamed back at him. \"Second I want to apologize for the way I've been treating you since we... became intimate.\" Their smiles slipped into looks of confusion. \"You've both been abundantly clear that you desired to take our intimacy to a higher level and I've been struggling to maintain a distance with the thought that you might reconsider spending time with me and find someone... younger or closer to your age at the very least.\" When they made to protest he held up a finger and they waited but he could tell they were on edge now. \n\n\"With the help of a very wise young woman I've come to the realization that I've been lying to myself. The man who claims to hold honesty as the highest quality failed to apply that standard to himself.\" He ensured he had their undivided attention. \"I don't want you to find another Dom. I want you both for myself. If you'll have me I want to be your Dom. I love you. You're mine.\" He found himself growling the last words and once more he was shaken by how strong his emotional upheaval was as he expressed the truth he'd been denying to himself. \n\nThe ladies looked back at him in shock. Lori found her voice first. \"Yes Ben, oh my god yes! I love you too!\" This triggered Lisa. \"Yes! Oh yes! We love you so much!\" \n\nBoth looked on the verge of tears and they were here to dance so Ben exerted some control. \"Good! No tears. It's time to dance. We're here to show our love and respect for each other. Let's go enjoy ourselves.\" \n\nHe looked at their collars and used the rings to pull them in close to kiss them, first Lisa then Lori. They smiled up at him as they trembled with joy. Ben straightened out his jacket which they'd wrinkled with their grips as he kissed them. He raised an eyebrow and they grinned as he turned to face the hostess who was waiting patiently for them. \n\nThe woman was wearing a complex outfit of leather straps and knotted rope. Nothing intimate was exposed. She was in her thirties and pleasantly full figured. Her long black hair was pulled back tightly and fell down her back in a long ponytail. \n\nHer pale skin made her black eye shadow and lipstick very dramatic. Pale grey eyes looked at him with a hint of a smile on her lips. \n\nThen her eyes widened in recognition. \"Mr. Shepherd! You... here, in our club!\" \n\n\"The last time we attended a club we ended up on the news. That isn't going to happen here is it?\" Ben asked with a commanding tone. \n\nThe woman looked flustered. \"No! We are the model of discretion! No cameras are allowed inside the club aside from the security cameras and that footage will never be used outside of its intended purpose. I would like to say though that it is a profound honor to have you visit us. I had no idea... oh, perhaps I've gotten ahead of myself. My apologies.\" She blushed. Gesturing to the display she continued. \"We wear pins in the club to identify the roles we play in the Dom/Sub lifestyle. If you are not-\" she was gesturing to the yellow rings. \n\n\"I'll wear the blue and the white. My women will be wearing the red and white,\" he said clearly and heard a faint squeak of excitement from the twins. \n\nThe woman's eyes lit up with delighted approval. \"Very good, Mr. Shepherd.\" She fastened a blue ring and a white ring on the lapel of his jacket. She looked up through her thick lashes at him. \"Should you choose to switch out the white for a green I know of many inside who might wish to entertain a relationship with you.\" \n\nLooking back at the beautiful happy faces of his partners he shook his head. \"The white is fine.\" \n\nHe gestured for Lisa and Lori to step forward and the woman hung the red ring from the silver rings on their collars. Then she connected the white to the red. Ben nodded in approval. The rings glowed nicely against their skin. \n\nHe couldn't stop himself from reaching out to both of them to cup the rings in his hands while he rested his knuckles against the tops of their breasts. Both sucked in a breath at the feel of his hand on their skin. He nodded like he was satisfied with the rings, released them and turned back to the woman who hadn't missed their reaction. She was struggling to hide her own smile. \n\n\"Please enjoy yourself at Club Eon and I hope you will return again!\" she said. \n\n\"I definitely will. I've promised two others a visit.\" Ben replied and the woman's face showed her surprise. \n\nBen made his way into the club with Lisa and Lori close behind. \n\nThe room was quite large with a bar along the back wall and a large dance floor to the right and tables and booths straight ahead and to the left. Fairly standard layout for a bar. The difference was the sea of colored rings. It was pretty easy to see the yellow rings of the 'tourists'. It made them easier to spot. The white rings were fairly numerous. What he was most surprised by were the number of green rings. There were a lot of people looking for relationships in the club. \n\nBen tried to find other parties of three or more and that seemed to be a rare thing. Shrugging he led Lisa and Lori out onto the dancefloor and pulled them in tight as the song was a slow one but it was winding down. He kissed Lori and she clung to him tighter and moaned into the kiss. When he pulled back her eyes were slightly glazed so he kept his arm around her as he kissed Lisa. Her tongue boldly thrust into his mouth as she pressed herself against him. She smiled happily at him when he pulled back. \n\nThe next piece of music was starting and while he didn't recognize it the beat was driving and they moved apart to move to the music. \n\nThey danced for over an hour straight before Ben decided he'd like to sit down for a bit. He led them back to the tables and found and empty curved booth. He guided the twins in and heard a voice behind him. \n\n\"Hey! That's my booth!\" \n\nBen turned to see a young man wearing a lot of leather and an angry expression on his face. He had the blue loop and a green loop though he appeared to be with an older woman dangling a red and a white loop from a wide slave collar. So she wasn't looking for a relationship but he was? That seemed rude but Ben was new to this so... \n\n\"It was empty with no reserved sign so it's ours now,\" Ben replied. \n\n\"Like fuck it is- AAAIIEEE!\" The man squealed as Ben gripped the hand he'd been grabbed with and bent the wrist back painfully. He continued to fold it back until the squealing man was down on his knees and crying. \n\n\"Did I say you could touch me? The white ring means leave me alone, I'm here to dance. You should have heeded that warning.\" Ben said calmly. \"I think it's time for an apology.\" \n\n\"FUCK Y-EEEEEEE!!\" The wrist was moving back further and the tears were flowing. \n\n\"I'M SORRY! I'M SORRY!\" he screamed. \n\nTwo men in leather straps arrived and Ben nodded to them. \"This one was a little too aggressive and tried to pick a fight,\" he explained. \n\n\"Yes sir, we'll take it from here.\" \n\nBen released the wrist and stood back. The bouncers gripped the man under his arms and dragged him away as he whimpered. His partner glanced back at Ben as she followed them away. He turned his attention back to his ladies. \n\nHe slid into the booth across from them. \"Lori, put your feet up on my lap.\" \n\nLori's eyes lit up and she glanced around furtively. She slipped off her shoes and stretched out her long legs to lay her feet on Ben's lap. Before she could move them he took a grip on them and began to massage them in his strong hands. \n\n\"Ohhhh Ben! That feels sooooo goooood!\" Lori whimpered. \n\n\"I assume those shoes are more for looks than for comfort, especially when dancing,\" he replied. \n\nLori couldn't respond as his thumbs were working magic on her aching feet and all she could feel was bliss. \n\nHe worked his way through all of her toes, moved to the ball, then the arch, the bridge and finally the heels. Lori was purring by the time he was done. \n\n\"Lisa, your turn,\" he said as he moved Lori's feet over onto the bench next to him. \n\nHer feet were immediately resting on his lap and Lisa had a broad smile on her face which quickly melted into a look of ecstasy as Ben worked the aches out of her feet. Once he'd reached her heels Lisa looked spent. She leaned back against the backrest and drifted on the warm buzz her feet were giving off. \n\nA waitress arrived at their table. She was wearing red and purple rings. She was also wearing form fitting black latex, the impression of her nipple rings visible against the tight surface, complete with a mask exposing her lovely brown eyes and wide full lips, her blond hair sprouting out the back in a ponytail. Ben hoped she didn't have to wear that outfit for too long. \n\n\"Would you care for some drinks?\" she asked. \n\n\"I'd like a bottle of still spring water,\" Ben said and looked over at the ladies. He didn't know what drink to order for them so he nodded to them. \n\n\"Dirty Martini,\" Lisa ordered. \n\n\"Same,\" her sister said. \n\nBen leaned forward. \"Excuse me. What does the purple ring mean?\" \n\nThe woman smiled at Ben's interest. \"It means 'Do not touch'.\" She passed her eyes over his wide shoulders and powerful arms. \"For you I might reconsider that.\" \n\nBen blinked in surprise and the woman walked away with a smile and an extra sway to her hips. He looked over at the twins and they were smiling back at him. \n\n\"Have you been to this club before?\" he asked. \n\n\"No, not this club but we have been to others like it. This one is far more civilized about its approach to the lifestyle,\" Lisa volunteered. \n\nBen looked over at the area before the bar and saw that at least half of the patrons appeared to be circulating there. He looked back at the twins curiously. \n\n\"Once we've had our drinks we should make an appearance. This will be the first time we've exposed our submissive sides in public and it's a pretty big deal for us. We should warn you though, some take their dominance and submission to extreme levels. You will see people gleefully giving and gratefully accepting pain. We're at the other end of the spectrum. Pain isn't completely necessary to satisfy our submissiveness,\" Lori explained. Lisa glanced at her sister and looked troubled. \n\n\"Lisa, say what you want to say,\" Ben said firmly. \n\n\"I- I need the pain... sometimes,\" she said looking desperately at Ben. Lori was giving her sister a surprised look. \n\n\"I know,\" Ben rumbled and she squirmed as she looked at him hungrily. \n\nThe waitress returned with their drinks and her eyes were on Ben the entire time she served them. \n\n\"Shall I add the charges to your room Mr. Shepherd?\" she said breathily, an odd catch in her voice. \n\nBen sighed. Damn his name was getting around. He nodded then he noticed her purple ring was missing. He looked up and saw her eyes were locked onto his. She was biting her lip and squirming as her body visibly trembled. Was she... touching herself? No, her hands were at her sides. \n\nBen scowled as she began to lean towards him, her knees giving out. \n\n\"What the fuck!\" Ben growled, his hands automatically moving to catch her fall. They landed on her torso just under her tits and she threw her head back with a loud gasp as his rough grip sent her over the edge. The strength in her legs abandoned her as her body shook through her climax, making her lean more heavily against Ben's hands, the undersides of her tits rubbing on his hands. \n\n\"So... sorry!\" she grovelled but her humiliation just seemed to make her gasp harder. \n\nSuddenly the men in the leather strap outfits arrived to gently lift and guide the waitress away. She moaned unhappily as they left. \n\n\"What the hell was that about?\" Ben asked Lisa who was staring at the retreating staff with wide eyes. \n\n\"She must have been a fan. I think she turned her toys on when she discovered who you were,\" she guessed. \n\nBen blinked in confusion at Lisa. \n\n\"The remote controlled vibrators she was wearing... internally,\" she explained. \n\n\"Geezus!\" Ben gasped and shook his head. Now he'd heard everything. He tried to put it behind him. \n\nThey sipped at their drinks and watched the crowd in front of the bar. \n\nOnce they'd finished, the twins slipped their shoes back on and they stood up. Ben joined them and gave them a kiss for luck. Lisa gestured for Ben to lead them. \n\nHe walked towards the bar and Lisa and Lori walked side by side a step behind Ben. He didn't look back at them as he assumed they would know how to present themselves. Ben didn't avert his eyes from the others but looked in interest at how they were publicly presenting their relationships to their partners. \n\nHe saw a trim man, hair silvering at his temples, wearing the blue ring of a Dom on the lapel of his elegantly tailored suit. He also had a white pin. His partner was a muscular young man with long straight blonde hair whose attire was a pair of translucent latex briefs, a ball gag, a slave collar with red and white loops dangling from it, and a silk blindfold. The collar had a slim silver chain which lead to the leather loop around the wrist of his partner. The Dom nodded to Ben so he tipped his head in return. \n\nThere was a heavy set woman dressed completely in black leather who had another slimmer woman wearing minimal leather garments and a leash. Their blue and red rings were evident. Ben caught the cruel smile on the Dom's face as she yanked her sub closer to pinch the woman's nipple. The slim woman squealed and whimpered but the way she bit her lip afterwards gave away her true feelings. \n\nAs they made their way closer to the bar Ben saw a man almost as large and muscular as he was. He was only wearing a series of leather straps with chrome rings and what looked like a loin cloth. He had a ball gag jammed in his mouth and his hands were bound behind his back with black ropes. He growled menacingly at Ben as they approached. The red and white rings hanging from his slave collar swayed as his Mistress pulled his chain tight. \n\nBen looked to the woman holding the chain and saw she was busy undressing him with her eyes. Tall and voluptuous the black beauty's huge tits looked like they were about to escape from the daringly low neckline of her tight green dress. The blue and green rings on her necklace were on the verge of disappearing into her cleavage. Her hair was shaved close to her scalp on the sides of her head but along the top it was bound into many slim braids each ending with a small silver ball. She seemed to be considering him as an addition to her harem regardless of his blue pin when recognition suddenly flared in her eyes. She smiled hungrily and her eyes dropped to his groin as she licked her lips. "
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "domination",
        "anal",
        "cunnilingus",
        "blowjob",
        "romance",
        "submission"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-afield-pt-03"
}