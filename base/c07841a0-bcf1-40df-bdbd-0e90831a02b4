{
    "title": "Vision Ch. 08",
    "pages": [
        " A sincere and Heartfelt Thank You to everyone who encouraged me on this crazy ride. Damned Enablers the lot of you!! But seriously, I could not have finished without your honest feedback and encouragement. Even the tart remarks, I have saved & treasure them all, everything counts in small amounts. Believe it or not, this is the first thing I've ever written and I think I might be hooked! You've not seen the last of Dax and Lulu, but I am working on bringing new characters to life. Much love & thanks!!  \n\nR.\n\n*****\n\nThe last day of the conference has been cancelled and I am very relieved. I book another flight and get a cab home Hoping that I'll be able to cook and surprise her with a good meal on a Friday evening, but her car is there.\n\n\"B\u00e9b\u00e9? Where Y'at?\"\n\n\"Back here.\"\n\nIn her bathroom lying on the chaise looking wrung out but glad to see me.\n\n\"I'd kiss you but I have vomit breath. I can't keep anything down and I've not been eating bad, I swear, though right now I'm living on saltines and Ginger Ale. Maybe I need some cream of wheat, but I don't have diarrhea.\"\n\nI go over and hug her. She winces and pulls away saying her breasts are sore. I feel her forehead she's not hot or feverish. But her breasts are sore. Her breasts are sore, she's been moody as hell, and I can't remember when she last had her period.\n\n\"Poor baby I can run to the store for you, what can I bring you?\" She gives me a list asking for saltines, ginger ale, Cream of Wheat and Electrolyte water. She lies back down on the chaise. I leave quickly. \n\nI can't believe it! She doesn't even realize what's going on. What should I do? Should I call Lili, Eddie or Arlene or all three? No, Lou wouldn't want that. Damn! What to do? \n\nI should definitely call Eddie. Breathe Dax Breathe, a little Lulu or Dax, a cousin for little Jackson, possibly even twins, they do run in my family. I come back with a few groceries and 3 home pregnancy tests, damned things are expensive, but we need to be sure. \n\nDamn, I dread this. I wish there were a way to test without her knowing, but it's not possible and would be pointless besides. Lulu is going to freak and there is no avoiding it. I take a deep breath, brace myself and walk in the front door. \n\nShe is in the kitchen, smelling the contents of something in the fridge.\n\n\"Everything smells funny. Smell that?\" She sticks some smoked salmon cream cheese spread under my nose.\n\n\"It smells like fish.\" This earns me an annoyed look as she continues digging through the fridge.\n\n\"There must be something of substance I can eat in here that doesn't smell funny and will stay down.\"\n\n\"B\u00e9b\u00e9 we need to talk.\" Standing upright she narrows her eyes. \"You had a fling in New York, didn't you?\"\n\nI smile at that and shake my head. \"Come here Lulu.\" \n\nI sit her on the stool and start taking things out of the bag, her eyes pop when she sees the pregnancy tests and she swallows and comes off the stool and braces her arms against the counter and looks up into a corner of the kitchen and I can see she's doing the math and actually takes her hands off the counter starts to count on her fingers. \n\nSighing heavily she takes one of the tests in her hands and glances at me as she walks out of the room. I wait and wait and wait. That particular test takes 3 minutes. She's been gone for 20. I walk to the bathroom door and knock. It's closed and locked.\n\n\"Let me in.\"\n\nThe lock clicks. I go in. She's clearly wrecked. My stomach falls.\n\n\"You don't want this baby, do you?\"\n\nShe can't or won't look at me. \"I'm trying to wrap my head around it. I've only just accepted the fact of us and now there's this. Again! In what sick universe does a compromised uterus and Rh negative blood equal pregnancy? Twice! Suppose I can't bring it to term? I could get sick again. I could be sick right now! Any number of things could happen and go wrong.\"\n\n\"Nausea aside, how do you feel?\"\n\n\"No, bleeding or pain.\"\n\nShe processes that but can I sense her increasing dread.\n\n\"You won't do anything will you Lou?\"\n\nClosing her eyes her lips tighten for the first time in weeks as she struggles for balance.\n\n\"I understand how much you want this. But children represent oppression. You do realize that the nuclear family is a joke. Why should women, because they are naturally predisposed to have children be inclined to do so and stuck with the majority of the parenting duties. If I could I'd let you carry it, that's what seahorses do. \n\nIt's egotistical and cruel as hell when you think about it to bring another being into this world to possibly suffer god knows what. Parents  die  Dax! I had help but even for the little time I raised Lili and Lenny it was hard as hell.\"\n\nShe's on the verge.\n\n\"Not all parents die, and god forbid something did happen, they'd have Lili and Lenny, they'd step up in a heartbeat. And should we live to tell, you'd have me Lulu, you both would. Just stop and think about it.\"\n\nThat face of hers is hardening as she deeply sighs. \"I'm going for a drive. I need some air.\" She leaves the room and gets her bag, and a jacket and scarf, it's gotten cold out.\n\n\"Where are you going?\"\n\n\"Out.\"\n\n\"Are you coming back?\"\n\n\"Stop Dax! I'm coming back, just give me a fucking minute alright?\"\n\nI back off and let her leave, figuring it won't be long since she looks positively green with nausea. She's gone all night. She does send a text message including me with everyone saying she's ok, just trying to work some things out. \n\nNot answering her phone. I can't even trace her. Her last known location is here at home. Most likely she's turned it off. I call Lenny and he and Lili come over.\n\n\"Hopefully she hasn't gone walkabout.\"\n\n\"What the hell does that mean, walkabout?\"\n\n\"Her rolling out without notice for unspecified periods of time. I'm surprised she sent a text message. For her, that's progress.\"\n\n\"Lulu is just strange, man\", Lenny says. \n\n\"How long is she usually gone on these walkabouts?\" \n\n\"They exchange looks.\"\n\n\"The first time wasn't so bad, just a few weeks\", Lenny says. \n\n\"But she was gone for almost half a year after . . . , \" says Lili. \"We were surprised when you bought her home after just two months. What happened Dax?\" \n\nI don't want to betray her privacy, but I am beyond angry and she's not here to answer for herself.\n\nI sigh.\n\n\"Lulu's pregnant, we found out last night.\" \n\nLili jerks her head back and Lenny's initial look of wonder slowly fades until he looks as grim as Lili. \n\n\"I asked her not to do anything.\" \n\nLenny goes, \"Oh I can just bet her response was special. \" He holds up both hands. \"You don't even have to tell us. The spiel of women's oppression, how egotistical procreation is and how unfair it is to women. We know it quite well. All true. Also total bullshit and a flimsy cover for someone who's scared as hell.\"\n\n\"Exactly.\" I can't believe someone else finally said it. Lili looks at him accusingly. \n\n\"She's got morning sickness something fierce I think. I can't believe she's even rolling around.\" \n\nLili shakes her head. \"Probably can't even think straight right now, she needs ginger and lots of it. The motion of a car will not help. I was pulling over every 5 blocks to puke for a good portion of my first trimester.\"\n\nLenny goes, \"They let Lou read too much literature at too young an age if you ask me.\" \n\nHe turns to Lili. \"Remember her Marxist phase? Girl is brilliant, but batshit crazy, eccentric as hell.\"\n\n\"I should check Eddie's place.\"\n\n\"She's not at Ed's.\" Says Lenny distractedly shaking his head.\n\nI can barely keep down the exasperation. \"So, when she leaves like this what do you do? No one has any idea where she's gone?\" I'm starting to be anxious. I don't like it. It's making me angry.\n\nLili says, \"When Lou wants to disappear, Lou disappears. Hell every other person we know is a cop, and even they couldn't find her, just a glimpse or two of her on CCTV, but once you hit the highway that's pretty much it and Lulu knows where all the camera's are & how to drive to avoid them.\n\nI'm hanging on to one of the dining room chairs so hard it starts to crack under the strain. Lenny comes over and pries my hands away; he looks at me softly and shakes his head. \n\n\"Damn, I should have used oak,\" he says mildly agitated.\n\nI stand. They're not the only ones that know people. I make a call. \n\n\"Max I need a favor, a real favor. I'm getting on the road now and will meet you at Marvin's on U street.\"\n\n\"My brother works in intelligence. I mean to bring her back. Kicking and screaming if I have to.\" I quietly add. \n\nLenny looks at me with admiration and smiles a little. \"Call us when you know anything.\n\nI've not slept in days I'm exhausted and now I have to drive to DC, if there's nothing wrong with her when I find her I might just kill her. I get in my truck and head out.\n\n--\n\nMy brother looks good. We've not seen each other or talked much since last Christmas but we're always glad to see each other, things have been moving so fast I've not had a chance to tell him much about her. I give him a rundown. When I'm done he sits back in his chair and takes a deep breath and whistles.\n\n\"She's a little hellion, that one. This is the second time you've called about her.\"\n\n\"Yes, the SS Lulu leaves a mighty path of destruction in her wake. Lovely, brilliant, curious, mischievous, opinionated. Infuriating. Delicate one minute, foul-mouthed the next. She drives me crazy, and the masochist in me keeps coming back for more.\"\n\nMax shakes his head. \"That pocket must be a perfect fit.\"\n\n\"Don't get me started. That pocket is so good I can't even talk about it.\"\n\nRare is the woman I've not talked about to Max. This might be a first.\n\n\"Man! She fucked your shit up big time.\"\n\nI take out my iPhone and hand it to him, so many pictures of Lulu, at the beach, at the dance, asleep on the sofa, splattered in paint-ball paint, draped over me both of us looking smugly at the camera. Too late I remember the one of her toplessly sunning herself on the deck chair. I watch as his eyes nearly bug out of his head. I snatch my phone back.\n\n\"Ok, that's enough of that.\n\nHe looks at me and smiles. \"I see your problem. She's beautiful. She looks real familiar.\" He squints at the photo.\n\n\"Well she's pregnant. So don't start with that she looks familiar bullshit.\"\n\n\"PREGNANT! Shit man! You didn't waste any time did you?\"\n\n\"You're one to talk Max. We are going to have a serious talk once I sort this mess out.\"\n\n\"Talk? What did I do?\"\n\n\"You're more involved than you know. I would avoid our parents for a bit if I were you.\"\n\nWe pause and look at each other, he nods and rubs his chin thoughtfully.\n\n\"I thought she looked familiar. Man.\" He rubs the back of his neck, looking like I feel. Troubled.\n\n\"Exactly, you don't know the half of it. But one thing at a time here. Lou is scared and I'm not sure what she'll do. I knocked her up before and it didn't end well. I accused her of having an abortion but there were complications, it was more of a miscarriage really. We had a hell of a fight and she bailed on me then too. I need to find her if for nothing else than to make sure she's ok. Before I wring her little neck.\"\n\nHe switches into interrogation mode, how long has she been gone, what's she driving, height, weight build. \"You say she's traveled internationally, is her passport current?\"\n\n\"Gone 36 hours and 42 minutes as of right now, I think she's driving a red Fiat. She travels constantly, her passport is current. She's 5'5 and 135 pounds I think, at least she was when last I snuck a peek at her number. Small, curvy a bit of muscle to her, I sigh. I love every bit of her.\"\n\nHe nods writing it all down; he takes a long look at me. \"Let's go over to the office.\" \n\nWe grab our jackets and head out in his car and before I know it we're on government property. \n\n\"Ok they're going to take some prints from you and do a scan and then we'll go on back.\" I pass through security and we go to his office.\n\n\"Give me your phone. I'm going to need some photos of her.\"\n\nHe uploads a few and runs the face recognition software. Lou's picture gets turned into millions of pixels, which start combining and recombining into faces that look like her, don't look like her, looking for a match. 100% identification match.\n\n\"That your girl?\" He asks.\n\nI nod once.\n\n\"She pops up once in France as a person of interest.\"\n\nHe looks at me with a serious expression.\n\nI tell him about her cursing out an airport person in Paris for being rude. He runs her passport ID#. He quickly gets another hit and looks at me.\n\n\"She's actually close by. There was a hit on a Danish passport at Dulles international yesterday. There was an altercation with a TSA agent, that's all it says.\"\n\nWhat's she done now?\n\n\"Danish passport? I've seen her passport and it says United States of America.\" What the hell is she up to?\n\n\"Your girl was born in Denmark so she's got dual citizenship and thus two passports. Clever.\"\n\nUnbelievable and typical.\n\n\"Her grandmother lives in Denmark.\"\n\n\"Let's head over.\" Says Max.\n\nUpon arrival, Max badges us by the various checkpoints and asks around and finds the agent that encountered Lou. Officer Thompson steps over.\n\n\"I pulled her for questioning because she seemed a little off. She wasn't carrying luggage and refused to go through the scanner, saying we could search her, suspect as hell. Said she was going to visit friends in Portugal and had just decided last minute to go. \n\nAsked if she could go to the bathroom said she wasn't feeling well. I asked her to wait a moment while I found someone to escort her, one second she's looking at me like she wants to slap me and then she's projectile vomiting all over me. We always get a few women sick like that, but this was like something from the Exorcist. \n\nNot a drop landed on her I might add. It was unbelievable. She apologized and was escorted to the bathroom, where she explained to Judy that she was pregnant. Judy asked where the father was and she evidently broke down crying. Judy soothed her and offered to let her stay at her place, but she said she had a friend close by she could stay with. Judith made her leave an address of where she'd be staying.\"\n\nHe hands us a slip of paper in Lulu's neatly slanting script.\n\nHenry T. Walters\n\n135 Canal Path\n\nWashington DC\n\n\"Georgetown.\" Says Max.\n\n\"Thanks man. I owe you one, keep up the good work.\"\n\n\"She yours?\" He asks. \n\n\"Nope, his.\" Max points at me.\n\nHe shakes his head. \"Good luck with that.\" I hear him muttering something like 'poor bastard' as we walk away.\n\nI'm somewhat relieved but feeling more murderously angry by the second.\n\n\"Who is this Henry?\"\n\nI grit my teeth. \"Henry as in Harry, her ex.\" Max looks at me and I know he knows what I'm thinking of doing and I know he'll back me every step of the way.\n\n\"We'll go over together.\"\n\n\"I can handle this.\" \n\n\"I know you can, but let me just tag along for moral support.\" \n\nI nod. \"Fine.\"\n\n\"Besides, I can get us there faster. I've always wanted to ride with my big brother on a mission and tonight I am living the dream, let's go get your lady.\"\n\nHe puts the siren on.\n\n8 hair raising minutes later and we are at the Georgetown address, he and Lou definitely should meet. They have a lot in common. Max rings the bell and motions to me to say nothing.\n\nHarry opens the door. \n\n\"FBI.\" Max doesn't give his name just flashes the badge and pushes in all official badass cool.\n\n\"We're looking for Lou James and we'd like to ask you some questions.\" \n\n\"Do you have a warrant?\" \n\n\"This is just a fact-finding mission at present, we'd appreciate your cooperation.\"\n\nHarry invites us in to take a seat. We sit down in his living room. He doesn't sit, just smiles dryly and leans against a wall and crosses his arms over his chest\n\n\"The FBI. Some things never change.\" \n\nLooking past him into his dining room I see an eye-popping sight hanging on his wall - a framed painting of a woman's back with two sacral dimples that are all too familiar. Following my gaze Harry says.\n\n\"I painted that. From the original.\" He smirks.\n\nBefore I can launch myself at him and finally go to jail for murder, I see a scarf I know hanging over the back of a chair and a little hand reaches out and snatches it out of sight. I stand.\n\nHarry turns his head. \"Come on out Lulu.\"\n\nThe little mess won't look at me. Clutching a box of crackers and a jar of candied ginger and her scarf she's so wretched looking, the anger just leaves me.\n\n\"Right, you two should talk.\"\n\nLulu sinks into a chair and stares at the floor.\n\n\"You ran out on me, again.\"\n\nHer chin starts quivering. \"I just wanted to go away to think for a while that's all. I would've called you, I swear.\"\n\nI don't buy it. She was trying to leave the country. \"Why didn't you just say that Lou?\"\n\n\"Because you wouldn't have let me go! You'd have done your usual thing of going all dark, deranged and predacious on me and tried to fuck me half to death. Which is probably how I got into this situation in the first place.\" \n\nShe finally looks up at me belligerently. \n\nShe's got a point. \"Do you still need time to think?\"\n\n\"I do, but I can do that at home. I don't think I'll be in flying condition for a long time to come. I was too paranoid to go through the airport scanner. Damned kid is already slowing me down.\" She touches her stomach lightly.\n\n\"Are you ok? How do you feel? We should go straight to the doctor.\"\n\n\"More tired and nauseous than anything, the ginger helps a bit though. I just want to go home and sleep. I'll go see Ed on Monday.\"\n\n\"You're going to come quietly?\"\n\n\"Yes, if you'll have me.\"\n\nI get up and hug her tightly crushing her and her crackers. \n\n\"You're killing me Lou.\" \n\nI kiss her long and hard and at the end I have a piece of candied ginger in my mouth, we smile at each other. We find Max and Harry in the library. I introduce Max and Lulu, he looks at her and smiles and they shake hands.\n\n\"The Charmin man! So this is your little brother. He's got a dimple too.\"\n\nShe cocks her head to the side and looks at him hard. \n\n\"Once I'm feeling better, you and I are going to talk.\"\n\n\"I look forward to it.\" He nods at her. Those two squaring off should be fun to watch.\n\nShe looks him up and down again. \"He doesn't look so little.\" He's an inch shorter and smidge broader and has our father's eyes.\n\n\"Well he's not little by much, just by 8 minutes. Fraternal twins. I came before midnight and he came after so technically I am the oldest.\"\n\nShe's stunned. \"Twins? You never said.\"\n\n\"Twins run in my family b\u00e9b\u00e9.\"\n\nShe swallows hard looking nervous.\n\nHarry booms with laughter at the look on her face.\n\n\"Lulu,\" he says, \"I think you've met your match.\"\n\n--\n\nWhen I finally get us home and call Lili, Lenny and Uncle Jack to let them know she's ok, its 8:30 am on a Sunday morning, and we're exhausted. I follow her from room to room. She doesn't say anything just lets me.\n\nWe shower together. She washes and blow dries her hair and puts on a pretty pale pink silk slip to lounge in. I slip on some Pajama bottoms and a t-shirt. \n\nWe cuddle on the bed quietly and drift off to sleep, when I wake three hours later, she's on top of me, back where she belongs.\n\nI smile and kiss her forehead. She opens her eyes and blinks at me slowly before kissing me very softly. She still tastes of ginger; spicy, sharp and sweet, it suits her. Ginger for morning sickness. Morning sickness. Pregnancy. Pregnant. Pregnant with my baby. Our baby. My woman, mine. You are now mine. You both are. A primitive feeling sweeps me as I clutch at her flesh and caress her little belly, not even a hint of an outward sign yet but it's there waiting dividing, growing. ",
        "Wriggling into me and sliding tender little arms around my neck, I feel her hot breasts against me, there are some changes going on there already. It slowly dawns on me we've not really talked yet and I am still mad as hell. I stop and she looks at me.\n\n\"What?\"\n\n\"You tell me what? I want you to talk to me.\"\n\n\"Ok.\" \n\n\"Talk.\" \n\n\"What do you want to hear?\" \n\nI'm not having it from her right now. \n\n\"Let's get up.\"\n\nWrapping up in a throw blanket she follows me into the living room and sits down.\n\n\"Talk to me woman. What's going on with you?\" \n\n\"I'm pregnant. Or didn't you catch that part?\"\n\nI stand. \"You can drop the attitude. I am not taking your shit right now.\"\n\nShe looks at me like I've slapped her. I'd like to spank and then fuck the hell out of her, but it's not an option. \n\n\"Look, if you're scared I can understand that, but you are really going to have to work on those verbal skills and express yourself. I don't want the tantrums and the crying and the running away. Run on me again and I will bring you back in shackles. It's not just you now you know.\"\n\nShe hangs her head. I squat down to look in her eyes.\n\n\"You're wearing me out woman. I've got more gray hairs in my beard than ever.\"\n\nLooking closely and tilting her head she says, \"They look blond.\" Her eyes light up a little. \n\n\"You have a beard.\" She leans forward to kiss me. I let her, but back away.\n\n\"No, it's not going to be that easy this time. I want some answers from you.\"\n\n\"I don't know what you want. I'm here. I'm pregnant. Like you wanted. What?\" \n\n\"Like I wanted? Do you not want the baby? Are you that unhappy about it?\"\n\nShe touches her stomach. \"I want to try.\"\n\n\"Do you love me Lou? Are you sure?\"\n\n\"Yes, I'm sure. \"\n\n\"Well that's a start. But you have issues. We all do, there's nothing wrong with that. But the running away, the anger, those nightmares of yours which are getting worse and worse. . . I'm surprised no one made you when your parents died but your butt is going for therapy or counseling somewhere, you need help. Someone should have done this for you a long time ago.\" \n\n\"WHAT?\" \n\n\"You heard me. There will be no more sex until we do.\"\n\nShe stands. \"You're not serious?\"? \n\n\"As serious as death and taxes. Dead Serious. No more fucking until we find out how you're feeling.\" \n\nShe scowls at me and I scowl right back.\n\n\"You've got some nerve mister, all things considered. You go on a Viagra fueled testosterone revenge sex bender and practically rape me and then have the nerve to preach at me about fucking and feeling! Are you kidding me?\"\n\nRape? I ravished her and fucked her harder than I should have, a few times maybe. But rape? I do not like the sound of that.\n\nDax looked stricken for a moment, possibly even guilty. \n\n\"Dax, black people don't go to shrinks. It's frivolous nonsense.\"\n\n\"You're right. Black people go to church or they pray about it, but you don't do those things.\"\n\n\"Religion! Because it's solved all the world's problems.\"\n\n\"Or at the very least a concept that can penetrate your thick ego driven mind, it would be a lot easier on you if you could see yourself as part of something larger for a change, something higher than your high and mighty self.\"\n\n\"You're the one that's high. Clearly you've smacked your head.\" She grunts.\n\n\"Church or counseling. What's it gonna be?\" She's gaping at me like I've lost my mind but it seems to be sinking in how serious I am.\n\n\"If I'm so mentally challenged why in the hell do you want to be with me? I definitely shouldn't be passing on such damaged genes.\"\n\n\"Don't go there. I did not call you mentally challenged or damaged; I said, you need help. Be reasonable.\"\n\n\"Well I guess you'd better find someone to see us tomorrow then.\"\n\nOh? That was easy.\n\n\"Why so eager?\"\n\nShe swallows hard and looks at me. \"Because . . . \"\n\nHer chin is quivering. Highly emotional these days, the next 8 months or so should be interesting. I kiss her nose.\n\n\"A day or two more won't kill us. Besides, we've got to get some help here and get a handle on things before Lulu, Jr. gets here, and we need to see how far along you are too don't you think?\"\n\nShe nods reluctantly. \"So you still love me?\"\n\nI sigh. \"It defies all known logic but, yes.\"\n\n\"Even though I've been bad?\"\n\n\"When aren't you bad Lulu?\"\n\nShe scoffs indignantly.\n\nI laugh at her. \"I love you because you are bad. You're a complete nut job, but I like you anyway.\"\n\n\"Gee thanks for not judging.\" She pouts. \"Well if you won't fuck me, the least you can do is feed me. I want cake Dax and I want it now.\"\n\nI laugh at her. \"Is this going to be my life for the next 8 months, demands for cake and sex? \"\n\nShe slides her arms around my neck and nods. \"Yes, and if you're really lucky, cake and sex at the same time.\" She goes up on her toes and kisses me.\n\n--\n\nI make chicken stir-fry and a little quick cake and under Lili's instruction, a particularly strong ginger-lemon tea. Lou keeps the food down but is still dog-tired so we turn in early. Of course halfway through the night I wake up and she's laying half on top of me as per usual. But she seems to be having a bad dream because she's saying something and crying. \n\nAlarmed, I turn on the light and wake her up. After a few seconds she remembers where she is and who I am and relaxes.\n\n\"B\u00e9b\u00e9 what's wrong?\" \n\nShe shakes her head and shivers. She never tells me about these nightmares so I'm shocked when she starts talking.\n\n\"Always the same. The crush of bricks and debris, the eight days it took to find their bodies. I still wonder how long they laid there and whether or not they were conscious. I can hear them calling, but I can't dig fast enough. I can never reach them. Lili and Lenny, Lenny was so little. His little face. \n\nAnd it was me, it was my fault they were with me Dax, in New York City looking at colleges up there because I wanted bigger and better. Can you imagine your parents dying exactly a month to the day after your 17th birthday? My parents gone because I just couldn't stay in bum fuck Richmond.\"\n\nShe weeps bitterly for many minutes.\n\nWhoa! I never knew all that. The nightmares have been coming with increasing frequency. I hug her, trying to quell her trembling. I'd absorb it all if I could. This cannot be good for the baby. \n\nOnce she's cried out, I massage her neck and shoulders. After a while she sighs a shuddery sigh and lies back pulling me down for a slow kiss and slowly runs her hands down my back and under the waistband of my pjs. I grab her hand.\n\n\"We should wait Lulu. I don't want to hurt you two.\" She's pregnant and delicate.\n\n\"I know, but . . . \" She touches my face and my eyes slowly focus on her again. \"Please?\"\n\nGod she's adorable. She kisses my dimple, my eyes and my nose and starts moving those hot little hands all over me again. She takes off her slip. I groan, letting her push down my pjs and guide me into her. \n\nOh sweet heaven. I'm trying to be gentle but she's got her hands on the back of my thighs urging me on, putting my hands on her body, her breasts just the tiniest bit larger already, the skin taut, the nipples sensitive, it floats through my mind to wonder how far along she really is but then she starts to buck a little harder under me and all thoughts vanish. \n\nHolding back and refusing to really thrust into her, I'm letting her work herself off on me and when I feel she's close I give up and come with her, she's still pulsating when I pull out of her and gently roll away. \n\nHmmmm the next few months should be interesting. I can't help but shake my head at her as she grins, and starts to giggle shamelessly.\n\nOh that's it! I give her bottom a good pinch, and she squeals, slapping at my hand. \n\nShe sighs contentedly. \"That was amazing. Mmmmm I don't know Dax,\" she says stroking my chest, \"I think I want more, let's do it again.\"\n\nI laugh at her. \"You've gotten away with enough tonight. I'm starting to think you're a bit of a brat.\"\n\n\"Well if I am spoiled it's your fault.\" She snuggles against me impenitently.\n\n\"I'll have to be much stricter with you.\"\n\n\"I certainly hope so.\" She kisses me until she gets her way again.\n\nIn the morning I commandeer her phone and call Eddie, who bumps someone and schedules us at 10:30 am.\n\nShe puts on a cashmere sweater dress; socks and boots and leather jacket and we head out with me driving and her looking anxious. They take us in quickly at the women's pavilion and since Lulu doesn't let go of my hand, we enter the exam room together. \n\nShe strips down and puts on the cotton gown and sits on the side of the table swinging her legs in her socks. An assistant comes in to weigh her and take blood.\n\nThe assistant turns to me and asks me to roll up my sleeve. \"The doctor asked me to get a blood sample from you as well sir, if you don't mind.\"\n\n\"Ok?\" I roll up my sleeve and watch as the rubber is strapped around me and the assistant taps up a vein and quickly extracts two long tubes of blood.\n\nI look at Lulu but she shrugs and shakes her head as clueless as me as they rush the samples off to the lab. We wait quietly looking around the room as we wait for the Eddie who finally comes in with a hearty Hello. Without preamble she asks,\n\n\"So Lou, what happened to your 'hell no' policy? As per our agreement I want that ribeye steak cooked medium rare and I want you to cook it. I want creamy mashed potatoes, the Paris butter the works, and I want dessert.\" \n\nShe taps her lip thoughtfully. \"Pecan pie I think, with Chantilly cream flavored with the good liquor mind you.\"\n\nLou rolls her eyes. \"Fucking witch doctor.\"\n\n\"Look at you, all knocked up and scared.\"\n\nDespite Eddie's crusty manner, she's very gentle. Examining Lou's breasts again she's looking carefully at the nipples, weighing the breasts with her hands. Live girl on girl action covered by insurance. God Bless America!\n\n\"Lou? How far along do you think you are?\"\n\n\"Not far, three or four weeks?\" I know what she's thinking. Damn. She gives her last period date.\n\n\"It was a light period, a few days of spotting and that was it. I thought it was normal after . . . or maybe something was wrong or off somehow. You know my period's never been what you'd call trustworthy.\"\n\n\"God damn it woman! Again withholding information. You thought something was wrong and you didn't say anything?\" I want to scream in frustration.\n\n\"Don't yell at me right now Dax. It's not like I got myself pregnant!\"\n\nEddie looks at Lou's folder, mildly perplexed.\n\n\"What's wrong?\" asks Lou.\n\n\"Well you just seem a little more pregnant than what your dates would appear to confirm.\"\n\n\"Something's wrong?\" She asks in a small voice. She's starts to shake. \"Again. I knew it.\" Tears are standing in her eyes.\n\n\"I don't think anything's really wrong but your pregnancy hormone levels are high, but I think there's a reasonable answer for that. Lie back and put your feet up. Relax yourself.\" \n\nEd adjusts a screening sheet over Lou's thighs. She picks up a rather long pointy wand and Lulu groans. \n\n\"Relax, just relax.\" Eddie soothes. She slides a condom and some jelly on the wand and asks me hold Lulu's hand.\n\n\"Dax she says you must be a happy happy man. Lou here has some of the strongest pelvic floor muscles I've ever come across.\"\n\nLulu frowns at her. Eddie is a pistol. She inserts the wand and gently probes around as she looks at the screen.\n\nLulu grips my hand tightly. \"Is everything ok? This feels different than last time, I've been a little tired but there's no pain and except for the nausea, I feel fine.\"\n\nConcentrating on the screen and very gently and carefully moving the wand Eddie says quietly as she focuses carefully on the screen, \n\n\"Different is good. Just keep calm and still. Everything looks just fine. I just wanna see . . . Yep, I thought so, there it is. You see those two blotches? Look?\" \n\nEddie points at the screen and grins widely.\n\n\"Those are babies, twins. You're 7 weeks along, give or take a day or two.\" She prints out a screen shot and hands it to us. \"Congratulations little girl.\" She smiles at Lou.\n\n\"Twins?\"\n\n\"Yep. Get dressed, I'll be right back to talk to you two.\"\n\nLulu sits up looking dazed and confused. She seems to be having problems moving. I help her clean up and put her clothes on. I am looking at her and trying to imagine her in a few months and I'm starting to be a little panicked myself. \n\nTwins. I feel a little guilty I should have told Lulu about my brother and me sooner. \n\nShe's silently looking at me accusingly through narrowed eyes and her nostrils are almost flaring by the time Eddie walks back in. \n\n\"Ah yes, right on schedule with the accusations, I see.\" Her gimlet eye misses nothing.\n\n\"Lou love, don't give him the stink eye. This is all you. Remember that episode you thought was mittleschmerz only it wasn't? I think you've been hyper-ovulating for the last few years now and releasing extra eggs. Which made for very painful ovulation sometimes. Most women trying to get knocked up pay big money for HcG shots to artificially induce this state in the hopes of getting just one baby but I suspect you have the gene that naturally causes it. He's not necessarily the culprit here. Hell you even ovulate aggressively, I'm not even surprised.\"\n\n\"My brother and I are twins, they tend to run in my family.\n\n\"Having a twin brother has nothing to do with it, Dax. But you more than did your part. Your blood type is O-, which not only makes you a universal donor but highly compatible with Lou's AB- blood. It's rare but you're both rh negative. I suspected as much, which is why I decided to test you. I don't even have to give you the rhogram shot, it's perfect, like someone handpicked him!\" \n\nClapping her hands Ed goes on excitedly. \"Two very rare blood types. Rare and compatible.\" Great, now we are some sort of successful science experiment. \n\nWith an ironic twist to her lips, Ed continues. \"The penicillin could be a factor too. I think it created a perfect storm of fertility, knocked down your meager defenses since you weren't on the pill long enough to have built up a resistance. The elevated levels of HcG are what bought on such severe morning sickness, the ginger should help but don't overdo it. \n\nYour iron levels are a little low, I want to keep an eye on that but it should level out once we start you on a prenatal vitamin regimen. I'll recommend a prenatal nutritionist; with the idiopathic hypoglycemia I am going to want to monitor you carefully.\"\n\n\"The penicillin you two insisted I take?\" Says Lou looking daggers at her friend.\n\nStanding tall Eddie says, \"You were sick. Your green tea and hot shower routine wasn't cutting it. I made the right call and I'd do it again.\" Crossing her arms she stares her friend down.\n\nLou sighs, relaxes a beat and then turns to me with murder in her eyes. \"I turned 30 exactly seven weeks ago.\" Eddie looks at the two of us and quickly excuses herself.\n\n\"Did you plan this? That night I was passed out. Did you use a condom? You didn't, did you?\" Ah hell. She's shaking with anger. \"What the hell did you do to me!?\"\n\n\"You need to calm down.\"\n\n\"Calm down? Don't tell me to calm down! I should kick your ass!\" She hops down from the table and steps towards me.\n\nEddie comes back, talking as if she never left. I'm grateful. Lou is killing me with her eyes.\n\n\"You're in excellent health and if you follow instructions and take care of yourself, there's no reason you can't bring these babies to term just fine. We'll talk delivery options later, with twins I prefer C-section. Though it can do the babies a disservice as far as allergies as they don't get all the protective bacteria from the birth canal. I'm seeing a lot of that these days. \n\nI can see you're about to bug out. I'll see you in two weeks for a checkup. Make sure you stop at the front desk as you check out so that you can pick up your prescription. \n\nI'll call you when I'm ready for my steak dinner. \n\nOh, and as far as what landed you two here . . . you can keep doing it, it's not like she can possibly get anymore pregnant just be careful, and no biking and boxing for a while.\" \n\nShe pats her friend's back gently and leaves.\n\nRisking a glance, I find her face still twisted with rage. \"You heard the woman, no boxing.\"\n\nStruggling to calm herself she says, \"You're lucky I'm going to need all the help I can get and happen to believe children need both parents, because I have an almost overwhelming urge to shoot you right now and as hormonal as I am I pretty sure I could get away with it.\" She looks completely serious.\n\n\"I'm sorry.\"\n\n\"Sorry? Don't stand there and tell that lie. You've never been so happy in your life, it's all over you.\"\n\n\"Yes, I'm happy. Happy that I had you that night you were lying there looking like a centerfold - all tits and temptation and passed out. Shit - happy doesn't even begin to cover it. I am overjoyed that the most beautiful and brilliant woman I ever met and can't keep my hands off of for more than two minutes is pregnant by me and I now get to be a permanent part of her life one way or another. Thrilled that you're standing there looking at me like I've lost my mind, when you're the one that made me lose it, because you drive me crazy. So shoot me, or kick my ass. You're goddamned right I'm happy. Happy enough to put you in those stirrups and do things to you in this very room, if you don't pipe down.\"\n\nReaching out I draw her to me and kiss her forehead and cheek and finally her stiff lips. Slowly and reluctantly she relaxes and sort of gives in. Grinding her head against my chest until her shoulders fall.\n\nLooking up slowly she finally smiles. \"Babies.\"\n\n--\n\nThanksgiving, our favorite holiday, is two weeks away. Lou is having everyone over. The invitations are mailed complete with menu's printed on parchment. Turkey Cordon Bleu, Smoked ham, Smoked Salmon, Crowned rack of lamb, mustard greens, French green beans, fried buttered Brussels sprouts, creamed collard greens, cheese and macaroni, candied yams and sweet potato pie, pecan pie, apple pie, antipasto, chocolate cake, cookies just on and on. \n\nIn typical hardheaded fashion she's overdoing it and ignoring my advice. She can't ignore her body though and about 8:15 every night now she starts to slow down and I usually find her in her office chair nodding off and have to lead her away. She needs to start napping during the day.\n\nWe've been going to counseling on Wednesday nights and though she was angry as hell the first time, I can tell it's good for her to be able to get some things out. The nightmares have just about stopped. The pregnancy hormones initially threw her emotions into overdrive, which makes sense, as the nightmares would always come before her period. Though the therapist believes it stemmed from her growing attachment to and her fear of losing me. \n\nI'm trying to work up the nerve to ask her to marry me. For now it's enough that she's agreed that children need two parents so we will be living here together. \n\nWe've discussed turning the attic into her new office so that we have more room for the twins and are able to maintain a spare bedroom. I am dying to spread out and expand, but she is full of reasons not to. The dust, the mess, the noise, the time, valid reasons. But we are going to eventually need more space.\n\n\"There are people in China who live with less space and more children, we'll manage. \"\n\nI remind her that this is not China. Her bathroom and closet take up too much space.\n\n\"You like my bathroom as much as I do. Where would you be if you couldn't watch the game from the tub sometimes? Admit it? You love it!\"\n\nI do love it.\n\n\"Besides this monster closet is about to come in handy.\" \n\nWeeding out old clothes and shoes she makes space for me, very generously giving me exactly half the closet. Looking through her side of the closet I see a clear bag containing a long dress of dark white satin, it still has the tags on.",
        "\"What's that?\"\n\n\"A gown bought for a winter ball I never went to. It was so beautiful I couldn't bring myself to get rid of it.\"\n\nI'm dying to see her in it.\n\n\"Let's see that on.\"\n\nShe rolls her eyes looking mildly perturbed. \"I doubt it even still fits as boobalicious as I am right now.\"\n\n\"C'mon. You're barely pregnant. Just try it on. Please?\"\n\nShe sucks her teeth \"You're such a girl sometimes, I swear. Ok fine, but just the dress, there are layers and layers of stuff to this thing, I'm not doing all that. Come on and help me.\"\n\nShe takes it off the rack and I follow her into the bedroom, watching as she strips off her clothes. She catches me staring at her breasts and shakes her head. I help slip the dress overhead and pull up the side zip, which goes up easily, she adjusts the bodice, tucking everything in place and I gasp to look at her. \n\nThe dress is strapless, and tightly holding her in place. The skirt starting just under her breasts is very full, her shoulders and neck look creamy and lovely. The bottom falls in gentle gathers. With her hair tied back today with gold leather ribbon and in her bare feet she's the bohemian princess of my dreams. \n\nIt's been on my mind since our first bath together. The Paris ring is burning a hole in my pocket. We're watching each other in the mirror. Watching me she seems to be quietly working something out. \n\n\"Dax?\"\n\nShe looks unsure but when she opens her mouth to speak her stomach chooses that moment to growl insistently. \n\n\"Something you want to tell me?\"\n\nShe giggles. \"I guess we're hungry.\" She pats her stomach.\n\n\"We can't have that. Come on you three. What are you in the mood for?\"\n\n\"Remember that place we found in Pigalle? I have been dreaming about that fettuccine.\"\n\nI am quite relieved to hear that, better that than the nightmares.\n\n\"Well let's see if we can make your dream come true.\"\n\nAll the makings for the sauce are there but unfortunately there's no pasta. She frowns and turns to make do with something else.\n\n\"My babies want pasta? My babies get pasta. Here have a bit of cheese and an apple. Let me handle this.\"\n\n\"Don't tell me your going to make pasta? We don't have your fancy kitchen aid machine to do that.\"\n\n\"Don't doubt me woman.\"\n\nI have never made homemade pasta, but I have seen it done. She's got flour, fresh eggs courtesy of Eddie, sea salt and olive oil. \n\nI mix the dough make a ball and put it aside in the fridge to rest. \n\nLulu is looking at me with trepidation. Which she voices out loud. \n\n\"That ball of dough is going to transform itself into pasta?\"\n\n\"Have a little faith woman.\"\n\nShe gives me that soft and perfect look. Still in her finery, I've been careful to keep my hands off her, but she comes over and kisses me and it goes on for some minutes before it sit her back on the stool while I start on the sauce. \n\nNot much Parmesan available, but grana padano she has in abundance. A little half & half, a little nutmeg, a lot of fresh cracked pepper, a bit of garlic.\n\nMy baby is watching everything with great interest. She hops off the stool and comes back with chanterelles. Which I add to the sauce and let her taste.\n\n\"Mmmm. Yes.\"\n\n\"Stop it. That face and those sounds are what have us here today, little girl.\"\n\n\"Hurry up and feed me Dax. So that you can fuck me.\"\n\nIt's been about thirty minutes, hopefully the dough is rested enough. I roll it out, cut it and par boil it before saucing it in the pan and plating it.\n\nLulu digs in and her eyes roll in pleasure. She eats quickly but savors each bite.\n\nI may have to add this to my repertoire. This is damned tasty if I do say so myself.\n\n\"As good as Pigalle?\"\n\n\"Better. Damn Dax. You . . . I swear.\"\n\nHer face takes a slow journey through several emotions from triumphantly radiant to amused, settling on naughty.\n\nShe comes over and sits on my lap and kisses me several times looking at me carefully as she touches my arms chest and shoulders squeezing as if she's not quite sure I'm solid.\n\n\"Are you trying to get something started?\"\n\n\"I am.\" She says smiling at me before sliding her arms around my neck. Leaning forward she whispers, \"Marry me?\" \n\nMy heart is doing that tripping thing again. I feel oddly lightheaded.\n\n\"Don't joke Lou.\"\n\nShe's grinning. \"I'm serious. Completely, serious, I know I must look like a lunatic right now but, Dax Junie Wilde I adore you and never want to be away from you, even when you piss me off I still really like you, be my friend, be with me, be my husband?\"\n\n\"You're asking me to marry you?\" That pasta must have done a number on her.\n\n\"I am.\" Looking at me expectantly she seems to be holding her breath.\n\n\"No.\"\n\n\"No.\"\n\nHer face falls. I can see her mind working overtime. I let her suffer for a bit. But when her arms fall to her lap and her head drops I know it's time to stop. She looks crushed.\n\nI sit her on the stool take her hand and slide the ring on her finger.\n\n\"Remember when we saw this?\"\n\nHer head jerks up.\n\n\"Yes, Lou James I will be your husband, if you'll be my wife?\"\n\nWe kiss each other very softly and smile at each other for what seems like an eternity. She's shivering as I hold her.\n\n\"What's wrong 'lil bit? Cold feet already?\"\n\n\"No, I'm just very happy.\"\n\n\"What made you ask? Is this some sort of hormonal spike? I don't want you waking up 10 months from now like what on earth have I done.\"\n\n\"My hormones are off the chain. It's like everything is magnified and illuminated, especially the fact that I am completely and madly in love with you. I don't think marriage will make me anymore yours than I already am. I can feel it every time you look at me. I really felt it when you looked at me in this dress. \n\nBut the way you go out of your way to not only take care of me but please me. Homemade pasta is the least of it. You have felt like home from the moment I met you. I can't seem to get enough of you, and miracle of miracles you feel the same. I like who I am now because of you. I am tired of trying to fight the fit of us, especially as you seem bound and determined to have me in spite of myself. I am forever changed. You've totally jacked me up man!\" \n\nShe laughs and punches me on the shoulder. Ow!\n\n\"I love you, simply, truly, deeply.\"\n\nThat's quite a declaration. I wonder how long she's been holding all this in. It's wonderfully strange to see her this expressive.\n\nShe laughs.\n\n\"So you like the ring?\"\n\n\"Like it? I love it! But Dax it's huge! I don't know if I can wear this every day. It does remind me of . . .\"\n\n\"Paris.\" I finish for her.\n\nShe looks down shyly. \"It reminds me of your eyes - that was the reason I was so taken with it in the first place.\" Oh man, is she blushing! Of course I'll never let her live this down.\n\n\"So, my eyes look like diamonds?\" I bat my eyes as best I can.\n\nShe rolls her eyes and fidgets, too cute. A lifetime of teasing her is what I have to look forward to.\n\n\"I want you to wear this dress for the ceremony.\"\n\n\"No can do. You've already seen it. It'll be bad luck.\"\n\nI look at her in disbelief.\n\n\"Blame yourself. You and your superstitious voodoo ways have finally rubbed off.\"\n\n\"It won't be bad luck. Not if you wearing it is my dream come true. Besides, you don't have on all the layers and the shoes so technically, I've not even seen the whole thing. It's what I want.\"\n\nShe smiles tenderly. \n\n\"I'll try Dax, but there's no telling what my body will be like after the babies come in May, and you can forget a June wedding. This material is too heavy for summer weather. \n\nAnyway, I probably won't be in shape for it. I saw what Lili went through with just one. It took almost 2 years to get her body back. I warn you now,\" She looks at me with narrowed eyes.\n\n\"I will get fat and you had better still love me.\" She mutters something about making me sign a contract to that effect.\n\n\"You are allowed to go up to 250 pounds, and not a pound more, that's all I can comfortably dead lift.\"\n\nThis earns me a light punch and giggles. I really don't care. I've been trying to fatten her on the sly for months anyway, just to see how round her bottom can get. \n\nBut two years? I can't wait two years! Hell, I can't wait two months. I want her and I want her right now. I decide to go for it. \n\n\"Marry me next week then?\"\n\nShe laughs nervously. \"Whoa! Slow down cowboy. Next week is Thanksgiving, that's 11 days?\"\n\n\"We'll combine the two, it'll save time, and you're already cooking up a storm. A house wedding, here, just a small one. I'll make the arrangements. I'll make the cake? Please Lulu? Say yes?\"\n\n\"It's a wonder you drive as slow as you do. I like speed, but this is batshit crazy fast! We met in March and the year's not out and here I am pregnant.  Again . With twins no less and now you want to get married next week!\" \n\nShe looks mildly horrified.\n\n\"Come on 'lil bit, don't get scared now.\"\n\nShe looks at me and falls back on the bed and throwing up her arms and shaking her head.\n\n\"I give up! I give in! Yes, fine whatever you want, because eventually you seem to get it all anyway.\" I take her hands.\n\n\"Don't worry, I've got you.\"\n\n\"You finally do, and then some.\" She pats her stomach and stands. Giving me the side eye she goes, \"Did you plan this?\"\n\n\"Nope, you were just an easy mark.\" I grab her and kiss her good and long. Lulu at last. My blood is moving so fast through my veins I feel high.\n\n\"Easy? I must have done it wrong. Fine, since you insist on 'now' this is your affair to plan, manage and execute. Because I'm telling you, I've gone as crazy as I ever plan to go behind you. I know good and damned well that this place is nowhere near big enough for a wedding, but that's your headache to deal with. I have my Thanksgiving dinner to cook. Good Luck!\"\n\nI've heard about her and Thanksgiving, it's like blood sport to her. She takes the food seriously.\n\n\"Please woman, I've got this.\" Everyone's been waiting for the other shoe to fall and I know I'll have an army of willing help.\n\n\"Help me out of this.\" She winces and grabs her breasts as we get her out of it. \"These things are getting bigger by the day, you'd better hope that dress fits, or I may have to get married in a sheet.\"\n\n\"It will fit, it's not like you'll wake up 8 months pregnant next week. I don't care if you wear a paper bag, we are getting married.\"\n\nShe laughs and yawns at the same time. \"Naptime.\"\n\n\"Bored with me already?\"\n\n\"I know right? Doesn't bode well for the future.\" She smiles cheekily and yawns again.\n\nI kiss her and give a light squeeze. \"Go rest, I have errands.\"\n\nIt's dark by the time I get back, but all the arrangements have been made. Between my parents, Uncle Jack and Arlene, Matt, Lili and Lenny and June and Eddie I don't have to do a thing but bake cake, buy a suit and be here. We're trying to arrange a few surprises here and there but we'll see. \n\nWhen I return at 7 she's in the kitchen just pulling out a roast chicken, with apples, fennel, red peppers parsnips and potatoes and onions she started earlier, it smells amazing. \n\nLook at her: barefoot, pregnant and in the kitchen. I love it but not know not to say it.\n\nShe smiles. \"I know you've been up to no good. Lenny can't keep a secret to save his life.\n\n\"Damn that Lenny.\"\n\nShe laughs. \"Welcome to the rest of your life.\"\n\nShe yawns again.\n\n\"I'm glad to be off a few weeks. Pregnancy is no joke. The morning sickness is somewhat under control, but I'm starting to feel a bit like a narcoleptic. Thank god I have a couch in my office.\" She yawns again and chuckles tiredly. \"I'm going to need it.\" \n\nI drag her over to me and hug her gently and kiss her. \"You know, we're going to have to tell people at work.\"\n\nShe groans. \"It'd be easier to just quit.\"\n\nUh oh here we go.\n\n\"Baby, I know there are some major projects nearing completion but I thought you'd take a few years off. I mean it's what my mom did and yours as well so I just assumed . . . \"\n\nShe leans away slowly, looking at me incredulously. \"Are you going 1950's on me?\"\n\nI laugh at her. \"June Cleaver you are definitely not.\"\n\nHer face-hardens slightly as she gives me the eye. Oh shit. \n\n\"Your next home cooked meal is in serious jeopardy Dax Wilde, just keep it up. You'll be riding the sofa.\"\n\n\"I didn't mean it like that, Lulu. But I've already got quite a bit saved and with the deal you helped broker, we and everyone we know and love are set for life and you know that. Neither of us has to work again ever, but I know you love it. If I'm living here I expect to contribute. There's nothing wrong with taking care of each other. I'm just saying, if you want to quit working for a while it's fine.\n\nShe backs completely out of my arms. \"If you think you're going to stick me in this house all day with kids while you go off and do whatever, with dinner on the table each night, you are genuinely mistaken. I knew it! I just knew this would happen. I think you did put a curse on me. This all started the night you put this damned anklet on me.\" \n\nShe's looking angry and panicked.\n\n\"Damn it Lou, I'm not demanding you quit working. Not that we need the money. I'm just saying I'm here if you need to take some time. I'm here to help you and I mean to be a hands-on father, diaper changes, midnight feedings, the works. \n\nWe're both in for some major changes here. We are going to have to work at it. I am not trying to trap and cage you I swear.\"\n\nI pull her back into my arms. She looks upset still. I rub her arms up and down and massage her shoulders until her head falls against my chest.\n\n\"Don't mess me over Dax.\"\n\n\"Oh, come on now. You just need a little kissing.\"\n\nI've discovered if she's kissed long enough and if I stroke her back just the right way she calms right down, it's pre-empted many a would be argument at this point.\n\nShe shakes her head as she looks at me and kisses my dimple. \"You know I'm on to you, you panty charmer.\"\n\n--\n\nI get home early as my final wedding fitting and pickup game were both cancelled. They are calling for snow and people are preparing for the holiday, everyone's hard pressed for time. \n\nWe must have company, there's a truck in my spot in the driveway. I park on the street and go in. All the lights are on. It smells of good cooking. \n\nThank god I made it up with her, she's made another of my favorites - short ribs with mushrooms, Parisian carrots, pearl onions and red wine and roasted garlic mashed potatoes and creamed spinach. \n\nShe balked about it big time. But hell who wouldn't want her at home barefoot, pregnant and in the kitchen? The woman cooks all the time now and damned well too. We'll both weigh 300 pounds if this keeps up. \n\nBut where are they? I look outside again. Both her cars are in the garage, she must be round here somewhere. I hear voices from the basement. I slowly go down the stairs.\n\n\"Thanks for the quickie Harry. It's hard to get it like I want it around here these days. If he knew what we've been doing he'd kill us both. Help me out of this, these stains are a dead give away.\"\n\n\"Happy to help. Besides I kinda owe the guy. I'll always be here if you need me, just because you're getting married doesn't mean we're over you know, you can still call me, for anything, always. We're forever Lulu.\"\n\nShe takes his hand and kisses his cheek. \"I know that you big softie.\n\n\"What in the hell is going on here?!\"\n\nLulu jumps and steps back looking at me in alarm.\n\n\"What are you doing home?\" She looks at her watch.\n\n\"Did you hear what I asked you Lou? What are you two doing?\"\n\nI'm shouting, but someone had better answer me.\n\nHarry holds up his hands. \"Hey, it's not even like that.\"\n\n\"Well just how is it exactly?\" I'm ready to finally kill him and go to jail already.\n\nPositively bristling hostility, she comes over and grabs my hand and takes me to a door on the other side of the basement and opens it and shoves me in and turns on the lights.\n\n\"This was supposed to be a gift for you. You Jackass!\" She hisses.\n\nThe concrete walls have been painted in soft white, there's a wide plush carpet down the center of the room, low tufted brown leather sofas surround the perimeter of the room and at one end of the room there's a large mahogany desk with a large leather chair and two computers a Mac and a PC, a mini-bar, a fireplace and at the other end a large flat screen television, a navy blue felted card table with chairs, a glass case with some childhood mementos of mine trophies, pictures of me from my childhood playing baseball with my brother and a wedding picture of my parents, pictures of me and Lulu.\n\n\"Harry helped me because that damned Lenny can't keep a fucking secret to save his life. He was concerned about me being around paint, even low VOC paint, and didn't want me doing any lifting. We are working on completing renovations upstairs and he was here to finish up down here and help me. You owe us an apology, right now.\"\n\nI do feel like a jackass.\n\n\"Man, I'm sorry, thanks so much for doing this for Lulu and me, for us.\"\n\n\"It's really no problem, no problem at all. Congratulations.\"\n\nHe glances at Lulu, who stares at me steadily as if she'd like to do me serious bodily harm.\n\n\"Best of Luck Dax. I left a little something that belongs to you.\" He points to a large flat package, shakes my hand and leaves looking amused.\n\nLulu's standing with her arms crossed. I take a deep breath.\n\n\"I'm sorry.\"\n\n\"Sorry? What the actual fuck Dax?! I know you don't trust Harry, but I'm supposed to be your wife. In 3 days! If you don't trust me then we have a serious problem and should not be getting married.\"\n\nI feel the air leave the room.\n\n\"I would never be with anyone else, especially in this condition. You think so little of me?\" \n\nHer chin starts to quiver.\n\n\"I'm sorry. But you know it kills me when you call him.\"\n\n\"He understands we're getting married. This is his way of atoning. You have me Dax. I'm pregnant. I asked you to marry me. I chose you. I choose you. I'm marrying you. I adore you. I don't know what else to do for you.\" \n\nShe shakes her head sadly and looks at me and sighs.\n\n\"You'll still marry me?\"\n\n\"Might as well. We aren't going to change and it is what it is. This is us.\" She shrugs. \n\n\"But dude, you are testing the friendship. You're going to have to step up your talking game too during our counseling sessions. Because we can't both be crazy. What'll happen to the kids? I thought we established that I am the crazy one in this relationship. I am counting on you to be the sane one.\" She chuckles.\n\nI sigh with relief. \"I love my gift. I'm sorry I ruined the surprise. But hey, now when I'm working your nerves you can simply send me to my room.\"\n\nSighing deeply she hugs me hard. \"Oh you'll be spending plenty of time here.\"\n\n--\n\nWe signed the legal papers and technically it's all over but the shouting at this point. She's my wife. True to her word, she's taken my name. Lou Lou Wilde. \n\nAt Lulu's insistence, we met with financial advisors to establish trusts for the children. Lou is a pretty cool customer when it comes to business dealings, but her jaw dropped when she got a look at my everyday savings account. \n\nExcept for the house and a plot of land back home I'm completely liquid and somewhere along the line with careful saving and investing hit the seven figure mark a couple of times. Not to mention 401K and pension savings from my younger days on the oil rig.\n\n\"Well shit Dax! Aren't you the dark horse?\"\n\n\"Yes, I can afford to keep you in all the fancy $200 coffee and tea and all the Brittany butter your little heart can take.\"\n\n\"I can buy my own coffee, tea and butter thank you very much. You just worry about taking care of our children.\"\n\n\"And what pray tell does that mean?\"\n\n\"You do you and I'll do me. No need to entangle every thing just because we signed papers.\"",
        "I realize this is another neurotic panicky spell of hers perhaps bought on by hormones but really.\n\n\"You are my wife.\"\n\n\"Yes, and you are my husband.\"\n\n\"Exactly, so don't sit there and act like this is some goddamned business transaction Lou. Are you planning on us failing?\"\n\n\"No, but . . . be rational.\"\n\n\"No buts. Either we are or aren't. I am not having any halfway maybe bullshit. End of discussion.\"\n\nHer eyes start to well up. It's just as well we're doing an intense marriage counseling session as well as her weekly therapy, we've more than a few kinks to work out.\n\n\"Ah Shit, don't you dare start crying. These people are going to think I've done something to you.\"\n\n\"I c-can't h-help it.\"\n\nHiccups? That's new. Pregnancy changes everything.\n\nI get her some water and wipe her eyes and make her blow her nose. A few kisses later and she's fine, just the slightest tinge of red on her nose. And of course now I want her. \n\nShe's smiling as she rubs the back of my neck before kissing me. I can feel the heat of her through my pants. Damn.\n\n\"You are getting a spanking when we get home, Lulu.\"\n\n\"Why?\"\n\n\"Because I want you right now and can't have you, so sit your little self in that chair and behave. When they come back in here we are a united front.\"\n\n---\n\nIt's the night before Thanksgiving and the cooking is finished. The house smells of good food and wood smoke, the fireplaces are all dying down, it's so cozy and quiet in here. I'm crashing in the red and blue guest-room for one night only with my little brother Max.\n\nThe sound of the front door opening wakes me @ 7:30 am. It's Lili and Lenny and Arlene. I see others pulling up too. They all spring into action. Lili and Arlene go to tend Lulu. \n\nArlene's bought a large basket of breakfast biscuits, scones and muffins for everyone to eat on the go. \n\nUncle Junie has Lenny and Harry crack open the round table and add 2 leaves to stretch it out to seat 20 and then bring in more chairs and push the furniture back to the walls to make a dance floor. \n\nJune and Eddie raid Lou's linen closet and find the tablecloths and napkins and they set the table. \n\nI think Uncle Jack's purchased every yellow and white rose in the city of Richmond, he pulls up with a van full of flowers. \n\nMy parents arrive. Mom has bought dozens of her handmade beeswax candles, most are for the table, some light the rooms and others serve as wedding favors with little jars of her honey; she's been cooking up a storm as well and there's porchetta de lait, gumbo, red beans and rice, stuffed hatch chiles some of my favorites. \n\nThey've decided to stay in town for the night. Lulu offered to let them have the spare bedroom, but mom insisted we need our first married night together alone. Lenny won the coin toss over Lili and is happily hosting them at his place. \n\nMost guests won't be able to stay long as they have their own families to attend to this day, but we wanted to make sure there was plenty of room and space.\n\nUnder Pops and Uncle Jack's stern direction, everyone is boisterously efficient, by 11:30 am everything and everyone is in place, my brother has the ring, and I can't wait to see it on her finger.\n\nThe ceremony is to take place at 1:30, but around noon Lili comes to find me. She's shaking her head.\n\n\"I've seen her angry, sad and pissed; but emotional pregnant Lulu is a different animal. I'd rather have back the control freak. There's a problem with the dress. She's upset that she can't wear it for you. Very upset. I sent Lenny for your 'surprise' but you need to go talk to her. I love her dearly but have got problems of my own right now.\" Lili seems distracted as she walks away.\n\nI go the bedroom door. \"Baby, what's wrong? Talk to me.\"\n\n\"I know you wanted to see me in it but it's not fitting and there's no way to get it altered. 3 months and I'm already too fat.\" \n\nShe sounds so sad I can't stand it.\n\n\"Well then put something else. Anything is fine.\"\n\nMore howling. \n\n\"Come on b\u00e9b\u00e9. Let me in?\"\n\n\"No!\" She wails. \n\n\"There's bad luck already because you saw it. I'll figure it out.\" \n\nShe sniffles. She is in a state - it's not like her to be so superstitious.\n\n\"It's ok Lulu, you could come out in jeans and a t-shirt.\" \n\nThe front door opens and here's my main wedding surprise coming down the hallway looking very stately in a lavender silk gown, with her hair braided in an elaborate crown-like bun, the pure white stripe woven elegantly throughout. \n\nLenny is trailing her with a box. \n\nShe gently moves me aside and speaks through the door.\n\n\"Lulu? Liebchen? Open the door.\"\n\n\"MM?\" The door cracks and then is thrown wide as she reaches out to hug her grandmother, pulling her inside. \"MM! what are you doing here?\"\n\n\"Your Dax sent for me last week.\"\n\n\"You've been here all this time? Where've you been? Where are you staying? Why didn't you come to see me?\"\n\n\"I had a life before you. I had people to see, things to put right.\" Same sharpish tone. \n\n\"Quit crying, you'll make circles.\"\n\nPulling out a handkerchief she makes Lulu blow her nose. \n\n\"Come, we're going to fix the dress.\" \n\nTrailing a hand down Lulu's neck and looking directly at her bosom she says, \"From the look of you, there's you have something to tell me. Yes? You have had a . . . growth spurt and now there is a second pulse in your neck.\"\n\nMM leans back to smile at me and wink and nod approvingly.\n\n--\n\nThe masses of roses and beeswax candles have the place smelling magical. \n\nBefore I know it Arlene and Lili are coming down the hall. Uncle Jack is guiding my bride forward, and in her haste she's all but pulling him down the aisle completely out of step with the music, which garners laughter. She's too focused on me to hear it though. \n\nWas she always this beautiful? We've not told anyone besides immediate family but to me she looks tellingly radiant. She's left her hair natural, thousands of tiny curls and spirals held back with ivory ribbons. MM's worked some magic with the dress and there's now lace where there wasn't before. \n\nLulu trembles the entire ceremony but grins like a little girl on Christmas Day. \n\nGod bless Uncle Jack for finding a Unitarian minister on such short notice. I wanted a priest, but 48 hours ago my bride-to-be balked and put her foot down and I wasn't about to mess us up this close to the finish line. \n\nWe are promising to love honor protect cherish and listen to each other. Her eyes bug at the sight of the wedding band. Lili said Lulu didn't much go in for jewelry but that she loved a certain Italian jewelry designer. I managed to find one of those wide filigree cigar band rings sprinkled with yellow sapphires and have it shipped in time. \n\nShe looks to me, smiling and frowning at the same time.\n\n\"How'd you do this?\"\n\n\"That would be telling.\"\n\n\"Well, it's just about the prettiest little handcuff I think I've ever seen.\" \n\nShe looks entranced and I'm glad because that means she'll wear it. I know that she loves her engagement ring but the size makes her a nervous. Though in French fashion she's already taken to wearing it on her right hand, so we'll see.\n\nWe're seated first for pictures with all the food and flowers and silverware and glasses that Louelle started collecting and Lulu and Lili finished, it all looks seamless. \n\nA long grace/prayer is said by Uncle Jack before we all dig in. There are many oohs and ahs over the Turkey Cordon Bleu, porchetta de lait and crowned rack of lamb and the potatoes and Brussels sprouts, even the little ones are eating the sprouts and green beans and my Almond torte cake is a big hit at the end.\n\n\"He bakes too? Damn, you lead a charmed life.\" Says Lili.\n\nTruthfully I didn't have much to do with the cakes. I whipped up the batter and June baked, frosted, dusted them with edible gold and set them on pedestals of varying heights with fresh flowers at the base of each. \n\nI catch Lulu sneaking sips of champagne and both Eddie and I take her to task. I take it from her.\n\n\"Champagne will not hurt the babies. Women in France drink while pregnant.\"\n\n\"Yeah? Well this is not France Lulu.\" I polish off her drink for her.\n\n\"I am starting to think you married me for the sole purpose of bossing me around.\" She grouses good naturally.\n\n\"Yep! What of it?\" I say, kissing her surprised lips.\n\nOurs is a wedding party with a Thanksgiving twist. Lulu even puts on the game. She and the ladies have a particularly vicious game of cutthroat poker going in the dining room, and the kids are running around and playing on the computer. \n\nIt's louder in here than I've ever known it to be and I think we're both alarmed and charmed. Someone's playing the Chipmunk Christmas song on an iPad and the kids are going a little crazy. Little man, breaks a vase and starts to cry and Lulu pulls him on her lap.\n\n\"That's ok I still like you.\" \n\nShe's stolen my line. \n\nAs she cuddles and kisses him, I can see she's got the touch after all and there's no need for her to be as nervous as she is about motherhood. \n\nShe dances with everyone. Most touching was watching her with Uncle Jack, who held her like she might break during the father daughter dance.\n\nI watch her dance with Harry and manage not to cringe. Besides he's bought a date, the same long legged beauty I met as we were leaving his place in DC, she seems quite spirited herself.\n\nI notice Max and Lili are doing a lot of dancing and talking. I can only wish him luck.\n\nAn early snowfall starts around 4:30 pm and Eddie begins to insist that Lulu take a break and have a nap. \n\n\"No, not yet, just a little longer.\" \n\nShe's talking excitedly to Antreas' wife Ariadne who's holding a charm of some sort over her stomach and watching it swing. Some sort of Greek voodoo I'm sure. \n\nI finally get her to come away.\n\n\"30 minutes and then I want to go back to my party Dax.\"\n\n\"Yes, whatever you want, now come along.\" \n\nShe needs at least two hours and I mean to make sure she gets it. I accompany her down the hall to the bedroom eager to see the look on her face when she opens the door. There are smooth silk cotton sateen sheets on the bed and a large silk down comforter, the fireplace is lit and the candles are burning and there are rose petals on the bed and floor. Turning to look at me I can see she's delighted. Her grin dies into a slow smile as she gives me that sleepy eyed blink of hers. I shake my head at her \n\n\"Lulu, \" I whisper, \"we have a house full of guests.\"\n\n\"Most of the people out there know what married people do.\" She nods in the affirmative. Arching that little brow she unfastens her dress and lets it fall revealing herself in a corset almost bursting at the seams. Well maybe just an appetizer. It's been days since. I lock the door. \n\nShe's climbing on the bed and lying back on the petals on the pillows and watching me intently. I loosen my tie and take off my jacket and throw it over a chair and go to my wife. \n\n\"You look mighty fine Mrs. Wilde.\"\n\n\"I feel mighty fine Mr. Wilde.\" She says.\n\n\"I'm going to take this off now so that you have a pleasant nap.\" \n\nI undo the laces and the garters and stockings. I stop at the panties and just look at her. If I take those panties off its all over, I'm never going back to the party and that would scandalize us both. \n\nPicking up the silky yellow slip, I carefully pull it over her head, smoothing the silk over her. \n\nI stop to marvel. At three months and a few days there's already delicate but decided curve to her stomach, a tightly packed bud. Her breasts strain against the material, her nipples are changing already they're noticeably larger, darker, visible through the thin silk. \n\nAll of it; the rapidly expanding breasts, the little curved belly; the spreading hips are changes I've wrought. I sigh and try to remind myself that there will be plenty of time to properly relish my wife later, it's hard though when she's trying to take off my shirt.\n\nI gently restrain her. She's making little whimpering sounds. It's been days. We decided to wait until our wedding night. But it seems she can't wait a moment longer. Baby needs to come. \n\nI pull her panties aside and lick her and find her clit which in her excitement is a hard little nubbin. I alternately enter her with my tongue and gently flick at her until she comes, her face turned to the side, a scream muffled in a pillow.\n\n\"More, I want more. Stay with me? Please?\" She kisses me and slides her hands over my back and under my shirt pressing me to her.\n\n\"Lulu there's to be no more of that until you take your nap. You have to rest now baby. Just for a little while. Ok?\" She pouts but I massage her back a little and as she's tired she eventually lies back and sighs and turns onto her side and drifts off.\n\nWhen I get back Eddie goes \"Just what have you been doing Dax? You look guilty.\"\n\nI blush. \"I was putting Lulu down for a nap.\" They all laugh at me.\n\nSnow is steadily falling thick and fast as the last of the guests leave. MM, Uncle Junius and Uncle Jack had the family and guests marching to a military drum step insisting everyone take some flowers and food home as this place was filled to the rafters with both, except for the flowers and candles it's like they were never there, that's some magic trick.\n\n_______________________________\n\nShe's awake and waiting. Kneeling on the bed her impatient hands take my shirt off, two buttons go flying, someone's anxious. She undoes my fly and squeezes me, making anxious whimpering sounds.\n\n\"Goddamnit Dax, you let me sleep too long. I missed the rest of the party. You are going to make it up to me husband mine.\"\n\nShe sounds stern and I barely get my pants and shoes off before she's dragging me to the bed, pushing me back and trying to get on top of me.\n\n\"Slow down love, there's no hurry.\"\n\nTrying to master herself she takes a deep breath. She's mine. And I'm hers. We have forever. She's touching me and trying to bring me inside her and I gently take her hands and hold them over her head and stroke her with my fingers. She's pure sensation. I stroke my shaft across her clit not entering her just rubbing the both of us.\n\n\"Stop teasing me Dax.\"\n\n\"You are now mine to have and to hold and to do with as I please.\"\n\nShe makes a noise between a growl and a whine and bites me. Soft, luscious and oh so wet just on the verge of coming and when I slip inside her she does, hotly and wetly. I kiss her and roll her on top of me.\n\n\"Take me.\"\n\nShe slides on me and bends back and supports herself on my shins and slowly slides back and forth on me swirling her hips around and around me. I can see her whole body, including my dick wetly sliding in and out of her. I can feel her coming again which she does with a shout. I gather her to me and roll her beneath me and as she still spasms around me I kiss her rocking inside her until I let go too.\n\nEPILOGUE\n\nAsleep on the vast golden bed in the mid-April sunlight pouring through the windows. Nude, hair barely contained by the silver leather ribbons. Her left arm and hand curved protectively around the bottom of her very pregnant stomach, the sunlight glinting off the ring now being worn high on her middle finger just below the first joint, casts rainbows on her thighs, anklet glittering on her little ankle. Dark green vein running up the back center of her right calf. \n\nThe Edward seam her sister called it. Her lips are lightly parted, she breathes much faster these days. \n\nHer brow is slightly knit as if in deep concentration. Altogether rounded, so many curves now, so much more of Lulu to love. In full bloom, she's never looked more beautiful. \n\nI can't stand it. I know it will land me in trouble when I'm caught and catch me she will, she always does, but I whip out my phone anyway and take several shots. \n\nHer stomach moves. I can actually see the outline of a little foot. How does she sleep through that? They know I'm here. I gently sit on the bed and lightly splay my hands and am immediately rewarded with a flurry of soft strong kicks. Not much longer now. I kiss her stomach.\n\nShe opens her eyes smiles sleepily and touches my face. I quickly strip down and lie down beside her as she drifts off again. This is much better than Saturday when all the ladies were here.\n\n-- \n\n\"I am a hot, itchy, bloated mess.\" Says Lulu.\n\nEddie takes a melon and smells it, thumps and shakes it before bringing it down hard on a sharp stone, bursting it into uneven jagged pieces. The ladies dig in with their bare hands, juice and seeds running down their arms onto the table.\n\n\"I feel like one of these watermelons. Just fat round and overripe. Like if I sit down too hard I will just split wide open and there will be babies like seeds all over the place. \n\nNothing fits and I'm starting to doubt anything ever will again. I've given up yet another of my favorite things, pants. Hell, I've even given up underwear as nothing stays put on this itchy mountainous stomach. Even granny panties just slide down and end up looking crazy.\n\nOf course Dax couldn't be happier about that development - his sick idea of a joke was to get me a t-shirt reading 'Adios pantalones!' \n\nAnd where is he now? Somewhere playing. I rub and rub and still I just itch all the time now and I'm trying not to scratch, but if he brings me one more jar of any kind of belly butter I'm going to fucking murder him. I finally understand why pregnancy and marriage go hand in hand because it should be required by law that someone has to sleep with you in this condition. I feel and look like a monster and he's never looked better! \n\nAnd I have never been so horny in my life, started the moment the nausea subsided! \n\nWe're going at it like we're living in the last days man. Fucking like there's no tomorrow & once these two get here there won't be. And even though it gets ever more awkward by the day, the sex is off the chain, its so good. \n\nWhat kind of sick shit is this?! Pregnancy is a twisted business.\"\n\n\"Your blood volume's increased almost three-fold at this point, makes everything more sensitive and intense.\" says Eddie. \n\n\"Well that explains it I guess.\" She grunts.\n\n\"I know what you mean,\" says Lili. \"I'd forgotten how truly uncomfortable pregnancy can be. That goddamned Max actually has the nerve to claim since he missed the first one he wants an extra baby after this one. I think NOT. This is it. Damned if I'll ever do this shit again.\" She looks perturbed.\n\n\"Hell Lulu, at least you're in the homestretch. Eddie and I will be 7 months pregnant in the heat of August! If Dax is anything like Max I don't know how you stand it. I mean it's fun but he's huge! Between me being so small we effectively squeezed the condom off. Which we didn't notice until it was all over. Damned thing got lodged inside me, took me hours to reach up there and grasp it and pull it out. \n\nHaving heard Eddies cackling tales of the things they pull out in the emergency room there was no way I was going for that and now look at me. I can't say I'm looking forward to pushing this sucker out. Jackson is super excited though, he's looking forward to having a brother to play with.\"\n\n\"Speaking of head size,\" says Eddie, \"I am not looking forward to it either. I'm trying to look at it scientifically and it's definitely given me a deeper understanding, but it's hell being the one on the table. Lenny's head is large. Lenny himself is large. He dislodged the damned IUD twice.\"\n\n\"Eeew! Gross!\" Go Lulu and Lili in unison.\n\n\"Please, as grossed out as we're all about to be I'd say this is the least of it. All these guys are pretty large though from what I'm hearing here at this table. I wonder if there's an academic call for papers on penis size of men born between 1973 and 1983? Was there something special women were doing or eating during that time?\"",
        "\"I don't care what you say Eddie. I think this can all be traced to Dax. He put this damned Irish voodoo anklet on me and it just all blew up from there. I mean think about it? What were the odds of this happening at the same time? You two getting knocked up the night of my wedding? All those hot baths? Heat from a tub that hot should have been enough to knock that sperm count down to just about zero and yet here I sit. \n\nI can't get this damned chain off either. I asked Dax to do it and he laughed took it off long enough to add a charm to it and put it right back on me. I'd ask one of you to do it, but honestly I can't lift my leg that high. I feel and look positively medieval. \n\nMy hair is out of control. He won't let me cut it and actually went to the salon and begged them not to either. I had the scissors in my hand to do it myself the other night and he took them from my hand and hid them, scolding me for having them near my belly. I've searched and all the scissors in the house seem to be missing. And since I can no longer reach the steering wheel, I can't drive anywhere for more. There's always the kitchen shears though. \n\nOh, and I almost slipped and fell in the bathroom the other day. \n\nAdmittedly, I'm glad he was there. But now I'm not allowed to even bathe alone. I haven't waxed in months and now I have all that hair down there, which he freakishly loves. He's a leg shaving, toenail painting, cake-feeding, control freak and he's driving me crazy! \n\nHe's enjoying this to no end. He just rubs me to sleep every time I'm irritable and being practically narcoleptic these days, I just keel the fuck over. I want to just be angry for one god damned minute! But he won't allow it.\"\n\nLenny drops his bottle in the trash carelessly and it clinks against something. We turn as one to look at him. What the hell man. He shrugs and smiles.\n\n\"Dax! I hear you in that kitchen, you may as well come on in here!\"\n\nWe enter the room, me Lenny and Max to face 3 angry very pregnant women. They've whipped themselves into a frenzy. Lenny and Max are unwisely smirking.\n\n\"Hey Baby.\"\n\n\"Don't you 'Hey Baby' me? You three have been gone for almost 5 hours, anything could have happened to us here in this house.\"\n\nI'm hardly fazed. Those three could take over the world if left alone long enough. \n\nBesides, she told me to get out of her hair for a few hours, maybe I should have asked her to specify how long. I go over and rub her shoulders and she immediately relaxes and yawns and then looks at Lili and Eddie.\n\n\"See what I mean?\"\n\nWe've returned prepared. \"Ladies, we bought a treat.\"\n\nMax goes to the kitchen and returns with a familiar box.\n\n\"Lemon Butter cake!\"\n\nThey push what's left of the melon aside and have 3 tall glasses of milk and cake served on frilly pink glass dessert plates. They allow themselves a weekend indulgence of either cake or gelato but this week we've chosen for them and they seem to like it. \n\nMay 5th\n\n\"Put that cup down!\"\n\n\"Yell at me again Dax and I swear to god!\"\n\n\"You know better Lou.\"\n\n\"Oh for fucks sake man, I'm not going to drink a keg I just want a few sips of beer, it's a michelada - more lime juice than anything, not a vodka shot! I am past tired of everyone telling me what to do. Now pass the chips and guac and lay off, all of you.\"\n\n\"I thought that was for the party?\"\n\n\"Get your own damned bowl and leave me alone!\" Muttering to herself in Spanish, she looks like she'd like to do away with all of us.\n\n\"Man she is getting more evil by the minute.\" Says Lenny.\n\nShe takes the bowl of guacamole and chips and slowly goes into the house.\n\n\"Tell me about it, she's sleep deprived and hasn't been able to get comfortable these past few nights. Not much longer now though thank god. She's moving pretty slow today.\"\n\n\"No. No more empanadas. It could be from the huevos rancheros as well but I've got terrible indigestion right now. It's been circling my whole stomach and chest, like these babies are sitting on my heart. It comes in waves, it's not a totally bad thing though, I just had another fit of 'regularity' and feel 5 pounds lighter.\"\n\nEddie and Aurelia exchange looks.\n\n\"What?\"\n\n\"You might be in the beginning stages of labor Lou.\"\n\n\"Labor?\"\n\n\"Yes.\"\n\n\"This is indigestion, I can feel it right here\", she rubs the space between the bottom of her breasts, \"feels nothing like last week's false labor.\"\n\n\"Have it your way.\" Eddie lies back in her lounge chair and puts her feet up.\n\n\"I am so sick of this I can't stand it. Everyone seems to be a fucking expert on my pregnancy. Not much longer now and I can guaran-goddamn-tee you I will never do this again.\" She lies back and closes her eyes as I rub her feet and takes a deep breath. \n\n\"Oh that's good. Maybe I'll sleep here tonight. You can get a lounger and join me; it'll be like camping out.\" \n\n\"You sound sleepy b\u00e9b\u00e9.\"\n\n\"I sound comfy is what. Comfy for the first time in what seems like forever.\"\n\n\"Have a little nap.\"\n\n\"It's bad form to fall asleep at your own party, but I don't think I can help it.\" She sighs and closes her eyes and true to form is asleep in seconds.\n\n\"Eddie help me out in the house for a moment, please. Somebody find Harry have him meet us inside.\"\n\n\"She's in labor. What's the plan?\"\n\n\"I called ahead and have staff waiting. If need be you and Harry are to pick her up and put her in the damned truck and take her to the hospital.\"\n\nLou appears in the doorway. \"Either I've pissed myself or my water just broke. Grab my purse and bag please. Lenny tend to the guests and clean up as best you can. As soon as I change clothes, we go. Eddie, help me get ready.\" She sounds a little breathless but seems calm. \n\nWe barely make it to the hospital before August Junius Wilde 7 pounds 3 oz. 23 inches is born, May 5th at 8:45 in the evening. Quick and seamless. Actually asleep when he came out, had to wake him up. He screams heartily as they quickly clean, weigh, and tag him and put him in Lulu's arms. She smells him and quickly counts the fingers and toes and looks him over. \n\n\"Oh my god Dax, look what we did. \"\n\nShe spares me a quick glance but mainly has eyes only for our son. I have a son.\n\nHer face bends in pain.\n\n\"That was another contraction Lou, it's time for round two I think, says Eddie. She's reluctant to let go but we pass the baby off to a nurse. Our baby girl's entrance was a drastically different, 3 hours of hard labor.\n\n\"Little girl's got shoulders like a line backer but she's coming on down.\" Say's Eddie.\n\nEddie leans back and looks down at her own stomach,\n\n\"Man, I am not looking forward to this in a few months.\" She has that what in the hell was I thinking look on her face. Which I find comical.\n\n\"Come on Lulu, she's almost here.\"\n\n\"I'm so fucking tired. I want to sleep. I want my mom. I want a beer. I want a divorce.\" \n\nLulu's ranting between breaths and groans. Eddie looks at me and shakes her head and waves her hand dismissively and mouths 'she doesn't mean it.'\n\nShoulders shaking with sobs and looking beyond miserable, she falls back exhaustedly.\n\n\"Everything looks good Lou. One or two more big pushes and she'll be here.\" \n\nSays Eddie excitedly.\n\n\"I can't do anymore Ed. I can't. Is it absolutely too late for a C-section and drugs?\"\n\n\"It's almost over, just a little bit more.\"\n\n\"Just think how easy it'll be when we have next two.\"\n\nStruggling to sit up further she says, \"Are you high? You must be if you think I'm letting you touch me ever again.\" \n\nShe looks at me in disgust.\n\nI've heard about this but still, I'm hoping it's just the exhaustion talking. I decide to push her a buttons. \"I want at least five, enough for a basketball team.\"\n\n\"I don't have time for your bullshit right now!\" If she could kick my ass I think she would.\n\n\"At least one more, so we can have a proper ripop\u00e9e.\"\n\n\"I so do not have time or patience for your crazy-assed Cajun speak right now Dax Wilde.\"\n\nA contraction comes and she takes my hand and bears down hard folding my fingers under and with a grunt our daughter April Annelle Aurelia 6 pounds 4 ounces, 20 inches is finally born 8 minutes after midnight May 6th. Determined to have her own day I guess. Good for her."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "romance",
        "thanksgiving",
        "love",
        "family",
        "interracial",
        "black woman",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vision-ch-08"
}