{
    "title": "Abusive Friendships",
    "pages": [
        "I don't want to talk about the kind of abusive relationship that we all immediately think of - that being of an abusive man who hits a woman or girl that he has some kind of relationship with, whether it be romantic or familial. We all know and can recognize that kind of abuse, and get out of it quickly. \n\nBut there are other kinds of abusive relationships which can be just as detrimental and are harder to recognize. They're also often harder to get out of, because you aren't sure if you really have a reason or not... Emotional and verbal abuse are harder to recognize than physical. People can be verbally abusive without even meaning to, or emotionally abusive without really knowing what they're doing. And it's something any of us are capable of. \n\nSome verbal abuse can be considered teasing, my friends and i constantly say that we have a mutually abusive relationship and it's only because we love each other. In fact, you can tell if we don't like you very much because we will never make fun of you. Those whom we love, we tease... but NEVER about something that would hurt the other person. \n\nTeasing is such an acceptable form of caring that it can very easily get out of control. Teasing between friends or partners means that neither party has hurt feelings about it, the topics are clear-cut and defined as things that are ok to tease each other about. As soon as you cross into territory where the other person is getting upset, it can become verbally abusive. The reason this is hard to recognize is that the perpetrator does not always realize what they are doing. However, if someone says to you, \"Hey, that's not funny, that actually really hurt my feelings\" the acceptable response should NOT be \"Oh come on, I was just teasing, get over it.\". What should happen is a response of \"Oh I'm sorry, I didn't mean to hurt your feelings, I won't do it again.\" and go back to teasing on acceptable topics.\n\nToo often people brush off verbally abusing someone as just teasing, they don't even realize what an effect their words can have. This happens most often between friends, someone you trust, and it's hard to stand up to them because they ARE your friend and you want to trust them. But it does not make it ok. If someone makes you feel bad about yourself, with things that they are saying, and they do not acknowledge your feelings about it or ignore you when you ask them to stop, they have become verbally abusive. And it doesn't not necessarily mean that they are an abusive person, but if they don't stop then it is still a relationship that you need to get out of.\n\nEmotional abuse is even harder to recognize. It's a kind of twisting and manipulation to make you doubt yourself, doubt your down decisions. It's a way for someone else to gain control of your life, usually by making you feel bad about yourself. Emotional abuse is more than that, it's hard to define though and it's slippery. But if you are around someone and you notice that you are constantly feeling bad about yourself, less confident or insecure around them then it's a good chance something is going on that is not right. Friends and people that we care about are not supposed to make us feel that way, we're supposed to feel good around them, good about ourselves and about our lives. \n\nSadly, our friends know us best and it's often very easy for friends to become emotionally or verbally abusive, often without even meaning to. But that doesn't mean that you should put up with it, because - as with any abusive relationship - it will not get better if you don't take steps to make it better. And, sadly, one of those steps may ending the friendship if they do not respond to anything else.\n\nYou can always try to tell your friend how they're making you feel, if they are a true friend then they won't want to be like that. But if they ignore you, mock you for it, or quickly return to their old ways, then you might not have a choice but to leave the friendship, no matter how close you once were with them. These \"friends\" are toxic, to our lives, to our other friendships and to ourselves.\n\nFor an example, I found myself in a relationship with a friend of many years - almost 6 - who I felt stopped being a good friend. She never seemed to have anything nice to say about me, EVERYTHING she said was an insult. No matter how nice or complimentary I was to her, she never returned it. Every decision I made about my life she questioned and tried to get me to do what she wanted to. It was hard, because my friends and I DO tease each other, but when I told her that something was hurtful she just laughed at me and said I was being too sensitive. When I wanted to make my own decisions and told her I thought she was being too nosy she just said that she was worried about me and wanted to help me make the right decisions for my life. It was all to my benefit.\n\nBut I was becoming more unsure of myself, less confident, I was unhappy with my life, my personality and even my looks. \n\nI am a size 8. I have an athlete's body. I would probably be a smaller size if it weren't for my shoulders, which are very wide because I swam competitively for 16 years. I have the little stomach roll like most people, and a very defined hourglass figure. When I was out shopping with her we went to Frederick's of Hollywood and I found a beautiful woven shawl which I held up for her to see.\n\nShe said, \"Oh honey, No. I've seen your body and No.\"\n\nI think that was when I realized that there was a serious problem with our friendship. I was depressed for the rest of the day because of what she had said to me; assuming that I would be wearing nothing underneath it for one, and for another making me feel like I was fat and unattractive. Before that I didn't think of myself as fat. I hadn't thought of 99% of the world as fat, I rarely think about size at all... but when her little size 2 said THAT... It shot my confidence straight to hell. Me, who was very proud of my curves and my hourglass.\n\nIt finally came to a head when she basically came out and said that she wanted to make my decisions for me. She was just a very controlling person, controlling, cold, judgmental, and getting worse throughout the years. For me, it became an emotionally and sometimes verbally abusive friendship that I stayed in because on occasion she would be a very good friend. And because no one ever tells you that good friendships can go the same way as romantic relationships.\n\nSo I'm telling you now. It is just as important that you stand up for yourself with your friends as with a partner. It's important that you not allow them to get away with behavior that hurts you. It's important that they recognize you as your own person and as their friend. And it's important that you not take abuse from ANYONE. Friend, partner, family member... because abuse is not just delegated to certain kinds of relationships. It happens anywhere and everywhere."
    ],
    "authorname": "Goldeniangel",
    "tags": [],
    "category": "How To",
    "url": "https://www.literotica.com/s/abusive-friendships"
}