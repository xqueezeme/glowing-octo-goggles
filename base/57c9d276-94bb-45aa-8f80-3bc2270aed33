{
    "title": "The Smell of Horse and Leather",
    "pages": [
        "The characters in this story would have all spoken either Norman French or Old English, and a bit of Latin. But I don't speak any of those, and be honest: you don't either.\n\nSo? I'm having them speak colloquially. You'll just need to imagine something a little more guttural. A lot of the folks mentioned here were real, historical people living through a rough time in real, historical places. And yes, St Valentine really is the patron saint of beekeepers. At this time, and in this place, he wasn't yet associated with love.\n\nEnjoy. Make sure you read all the Valentine's Day Contest entries and vote up your favorites!\n\n* * *\n\nI came down from my climax, panting, slowly aware that the birds were chirping outside. Seeking mates, I giggled to myself. Birds always find love in February.\n\nSteam rose off my legs. It was easy to forget, here in the hen coop, sweating like a pig under Thurgis' enthusiastically thrusting body, that it was still the cold, hard dead-end of January. It wasn't cold enough today for the ice to form, but the wind made it feel that way. And inside the coop, with the chickens all outside squawking, my overheated body smoked like Godmer's forge when the smith came by. \"Wow!\" I sighed, my pussy still a-flutter, \"that was exactly what I needed.\"\n\n\"That makes two of us.\" Thurgis hadn't even bothered to take his shoes off, meaning his leggings were still down around his ankles. He'd already been hard when he'd arrived and made eye contact with me, nodding toward the coop. \"I've been horny all week.\" He went to help at his uncle's mill in Biggleswade every Thursday, and I was normally happy to entertain him on the way. It made a long two days for him, in addition to his other work, but his uncle paid him a quarter of a silver penny each time.\n\nI contemplated what he'd left on my stomach, a large splatter of thick white cum frosting my bush and extending all the way up to where we'd pushed my shift up under my chin. Shit. The shift would be smelling like dried seed until laundry day, I reflected with a frown. It had been worth it, though; Thurgis knew just what to do with my tits, but he needed to get at them first. They floated on my chest now, taut and pale, my dark nipples almost painfully hard with the cold and my arousal.\n\nI'd need to wait a bit before I put myself back together. Hard nipples don't feel all that well against my linen. He sat up on the old, shit-speckled straw, looking down between his legs at where his cock still wavered half-hard, covered with my juices. \"I could almost go again, Little Bird,\" he sighed at me.\n\nLittle Bird.\n\nAs always, I bristled at that, even if my scorn was tempered a bit by the joy his plunging cock had given me this morning. He was a hopeless romantic, with emphasis on hopeless; he thought he and I were in love, but this was no time to be talking about love. Marriage. Certainly not babies, I chuckled to myself, running an idle finger through the cum I'd made him leave on my belly instead of inside my cunt.\n\nThree kings we'd had in just the past year, since he'd turned eighteen. Three!\n\nNo time to be talking about love, indeed, in a world so uncertain. We needed to take our pleasures where we could find them. I stirred, lifting my finger to my mouth, licking his thick spunk off it. He tasted good, better than Edmer had. But then Edmer was married; I wondered whether that made a difference. I set to work with a handful of straw, sloughing it off me, wondering whether the hens would notice the damp patch as they pecked around in here.\n\nYep. I'd found my pleasure, all right. I still tingled along the edges of my pussy, where he'd so vigorously driven into me. It made me smile.\n\nWe'd become less furtive about our fucking lately, which was only to be expected. By now, I reflected, the entire manor probably knew what we were up to. But apparently we no longer had a thegn, nor even a priest, so what was the point in worrying about getting caught?\n\nA new thegn would arrive eventually, a Norman. Maybe he'd kill us all, probably not, but who could say? To be sure, Thegn Godmer hadn't been all that great. But at least he'd grown up here and spoken our language. Over in Dunton, where one of the new men had already arrived, they were saying these people spoke some weird tongue from over the seas. They had odd names, too: the man who'd taken Dunton was called Walter, and what the fuck kind of name was that? They said the same man was the new thegn of Stratton now, too.\n\nDunton was not happy. They'd had no thegn there at all under King Edward, and none under King Harold either. They reckoned they'd done just fine, and could keep on doing just fine under the new king, this man they called the Bastard. But apparently, the Bastard had other ideas. Not having a master, it seemed, was not an option in the new England.\n\nNothing was certain, right enough. I wasn't Thurgis' little bird, nor his big one. I knew I could be, though. He walked two miles out of his way just to fuck me. I knew I could have him whenever I wanted him, and I didn't.\n\nHe wasn't getting the message, though. His lips were a warm tickle at the hollow of my neck. \"I'm just saying, Mer, it's February now. That's when we should choose a mate, surely.\" He kissed me again. \"Like the birds.\"\n\n\"And I'm your mate,\" I mocked him. It occurred to me I might hurt his feelings by refusing, but it couldn't be helped. He lived in Morden. I wasn't about to move there. My parents would kill me. I shivered, the breeze finding its way through the coop's flimsy door. \"Are you not freezing?\" I demanded, cross.\n\n\"What?\" He was squatting, his glistening penis flexing as he stared absently at my bush, and instinctively I pulled my shift down. He blinked.\n\n\"Nothing.\" I swatted at my hair, knowing there was straw in there and wanting to beat most of it out. I sighed, smoothing my shift over my chest: yep. The nipples chafed already. \"Listen, I need a favor.\"\n\n\"Name it,\" he came back immediately, as well he should; I'd just relieved him of about a week's worth of his seed. It never occurred to him to take care of himself between his visits to me, with his hand, and I wasn't about to suggest it... even though he'd just left himself smeared on my belly. Leaving it on his own? That would have been different, and a grievous sin. God had killed Onan for that, after all, or so Father Felix had said.\n\nThough I reckoned God hadn't killed him for cumming on Tamar's thigh. He'd killed him for not pleasuring her before he did that. So I decided Thurgis and I were fine. Besides, God had not killed Thurgis yet. So.\n\nHe lay back in the straw, the only way he could get his legs straight enough to pull his leggings up in the low space. I let myself admire his prick once more before he began lacing up. \"Well. Father Felix has disappeared.\" He and Thegn Godmer had vanished a few days ago, and nobody had realized it until we all went wassailing there and found his house empty. A quick look inside had shown his chest left unlocked, all his charters missing. \"I hope he'll be back by the ides, but it sure looked like he wasn't returning.\"\n\n\"Father who?\"\n\n\"Felix.\" It was an unusual name, obviously, but then he was an unusual man. He came from Somewhere Else, maybe even Rome itself, and claimed to have once met a Pope! \"Godmer's priest?\"\n\n\"Oh.\" Thurgis shrugged; he had little use for God, like most boys his age. Eighteen years he had, and I remembered my older brother at that age. He'd never gone to church either, not until that memorable day when, shamefaced, he'd confessed that he'd cum in a woman's mouth instead of her vagina. My parents had rolled their eyes, but Felix had assured him everything was fine as long as he paid an indulgence; he accepted a pair of eggs, one for each of Osgar's ballocks, and everyone laughed.\n\nWell. Everyone except Mildrith. She'd been the owner of the mouth he'd spewed into. She'd just sat there, humiliated.\n\n\"So yes. He's gone,\" I sighed, twisting my body into my dress. Fuck, it was cold! \"Which is really a problem, because I need a blessing.\"\n\n\"A what?\" He blinked over at me.\n\n\"The priest says a prayer, idiot. It's how you get saints to help you out.\"\n\n\"Well, I know that,\" he scowled. \"I'm just wondering what you'd need a blessing for.\" His eyes flickered down to my belly. \"Umm. I really did try to pull out, Mer...\"\n\n\"No, not that,\" I giggled. He was a sweetheart, really. But so dumb. \"Trust me. It's not that.\"\n\n\"Because, if it was...\" He smiled a little wistfully. \"I mean, if God wills it, Little Bird...\"\n\n\"Shut up.\" I know I rolled my eyes. \"No. Nothing like that. This is about my bees.\"\n\nIt had been the most important thing Grandfather had taught me as a little girl: you had to get the bees out of the hive before March, and you had to get St Valentine's blessing first. It was the only way to make sure they'd yield good honey all year, and if they didn't? Then no mead. Nothing sweet. No poultices. The manor needed honey, and I was the beekeeper. So the manor needed me, and I needed St Valentine.\n\nAnd to get him, I needed a damned priest. Well, actually, no; a damned priest would do me no good. I needed a priest that God liked. I let Thurgis admire my ass as I stooped toward the coop's little plank door and peered out into the chilly morning. We tried never to be seen crawling out after fucking. Sure, everybody knew... but I had no wish to be a spectacle, like poor Mildrith. People talked about me enough already, I knew: twenty years old and still not married. It wasn't my fault my father couldn't afford to marry me off, though, and besides? I was happier this way.\n\nWe straightened into the late-morning sunshine, the manor quiet around us with the men in the fields, or milling. Or whatever they did while I tended my skeps and worked my spindle. We started trudging toward the silent little chapel, the frost crunching beneath our shoes. \"I know her ladyship left, over there in the Mordens,\" I told him, drawing my cloak about me. \"I was hoping you still had a priest?\"\n\n\"Lady Gode? She didn't leave,\" he shrugged, kicking at a tussock. \"Well, not yet anyway. She's just living in Woolley right now. It's where she holds court. You could always go find her,\" he added doubtfully. \"When did you say your priest went?\"\n\n\"Few nights ago? No earlier than Monday. He was preaching on Sunday, like normal.\" I frowned. Well, not normal. I was dimly aware that most priests gave their services by daylight. Felix never did. In fact, I couldn't remember ever seeing him abroad by day.\n\n\"Well then Gode's priests might have left by now too. I don't know.\" He squinted at my hair. \"You've got elflocks.\"\n\n\"Don't untangle them,\" I squeaked, alarmed. \"That's bad luck. God hates that.\"\n\n\"Oh. Well, there's straw in there as well.\" I confess, I wasn't prepared for how delicately he raised his hand to my hair, plucking me clean. It made my cunt tingle a bit. \"I think her priests travel with her? So they're in Woolley too. Sometimes there's a guy who travels around our hundred, but I think he's all the way down south? Like, in Hoddesdon or something.\" He spat on the hard ground. \"He's just a wanderer, a friar. He doesn't work for my Lady.\"\n\n\"Fuck.\" I saw my father way beyond the treeline, leading one of the oxen with my younger brother Sibald. My family's little house, and the chapel, and Godmer's deserted manor house, all were empty this morning. The air did not seem peaceful, though; the cold breeze brought uncertainty, not cleansing. I sighed. \"Well. Too much to hope for. It's bound to be a bad year in a million ways; why should my honey be any different?\" He looked at me uncertainly. \"You'd better go. I know you're off to Biggleswade. Um,\" I added quietly, \"are you coming back through here tomorrow?\"\n\n\"I could,\" Thurgis smiled slowly, \"if I had a reason...\"\n\nI swiveled my head quickly around, then reached down and cupped his balls with harsh, fierce fingers. \"I'll give you a reason. Come find me.\"\n\n\"Well. If you put it that way?\" He winked at me, his cock spasming in my palm as he turned away, and I felt that glow of power my cunt always gave me as I watched him walk west.\n\nYes. You had to take your pleasure where you found it, in times like these.\n\n* * *\n\nEarly afternoon found me making a skep until I got tired of the branches and went back to my spindle, which I spun until I got tired of that. So then it was back to the skep. All. Day. Long. Soon I'd need to mix up some ash and cowshit for the outsides of my skeps, my least favorite chore of the year, but before that loomed the pressing need for a priest.\n\nBecause without St Valentine's favor, none of it would matter much.\n\nBad honey harvests happened sometimes, and that was even with the Saint's blessing. I shuddered when I thought about what would happen if I didn't have it; maybe my Queens would die. Or a fire would take all my bees. Or worse. Father Felix had always been gracious about asking the Saint's blessing, though in my most secret heart I wondered whether he really believed it mattered.\n\nGod knew, though, and so did Valentine. The saint hadn't ever failed Grandfather, and I hoped he'd do me the same service. Nice, straight combs, Merewyn my girl, he'd told me proudly when I was little. We'd been out by the skeps, turning them over, the very air around us throbbing with the bees. That's St Valentine's doing, it is. He'd taught me how to take out the combs, leaving enough for the bees to grow on. How to smear myself with mallow to keep them from stinging me, though to be honest it never seemed to help. If they wanted to sting, they stung.\n\nFather Felix had said Grandfather's prayers and blessings too, though back then Godmer had been little more than a boy and his father had been thegn. I wondered how old Felix must be. Certainly, he didn't look very old. I sighed and put aside my withies, closing my eyes in the thin sun of the cold afternoon, my hand going blindly out and landing on my spindle again. For this was life: skep. Spindle. Feed the bees. Spin. More skeps. More spinning. Check the bees. Spin. Cut out the combs. Squeeze out the honey. Spin some more. Dry the wax. Spin. Herd the bees. Spin.\n\nOver and over again, my life rolling out before me, measured and constant, all the same. Like the thread from my spindle, and my mother's, and Mildreth's, and young Winfled's. Always the same, and only the kings changed. More rapidly, of late, and with a sudden mix of apprehension and comfort I realized that when the new man came, this famous Bastard or one of his friends? Well, those men would need honey, too.\n\nI'd be all right, eventually. And in the meantime, I'd take my pleasures where I could.\n\nMy eyes opened to a sound I'd not heard in months, not since Godmer marched away to York last September, when King Harold had swept along the old Roman Road with his carls: the sound of hooves. Hooves on the lane, pounding along toward our manor.\n\nI put aside my spindle and shot to my feet in a sudden gout of alarm.\n\nHooves didn't usually mean good things. Only rich people rode horses, and poor people usually do best when they avoid rich people. Not Godmer: he wasn't really rich, I knew, though he had a lot more than my family did. His whole manor was worth just half a pound of gold, and maybe less now. Godmer hadn't even owned a horse, though his own overlord Alstan of Boscombe was said to own several. I wondered briefly whether this was Alstan, coming toward us along the lane, but then I realized it couldn't be. We'd heard nothing of him since the big battle in October, the one down south; he had to be dead.\n\nI whirled toward the fields, wondering how long it would be before my father heard the horses and came running, but by then it was too late for him to come: the hooves were already in the thicket before me, the shapes of two riders now drifting through the shadows of the trees. I knew they'd reach the yard in seconds. Behind me I heard my stepmother stirring in the house, but she was pregnant again and I willed her to stay in bed.\n\nAnd so it was that I, Merewyn the Beekeeper, became the first to welcome the Normans to the manor of Millow.\n\nI pulled my cloak tight about me and ran a hand through my hair, being careful to let my fingers skip over the elflocks, then hoisted my shawl all the way up over my head. I strode into the courtyard and made myself stay still as the tall horses burst into the yard: two men on four horses, the unladen ones uncommonly big and strong. They reined up at once, way over by the well, the riders' heads whipping around, and as I squinted I could see that one of them was much younger and better-mounted than the other. It was the older one that leaned in for a low, fast discussion with his companion before he nudged his horse toward Godmer's empty house.\n\nI watched the older man carefully. He rode well, as far as I could tell, tall in the saddle with heavy, well-fitting clothes and a spear across his back. I'd never seen a man without a mustache before, and his hair seemed quite short too, though it was hard to tell under a fur-lined leather cap. He rode forward slowly, openly curious and not looking particularly brutal, taking it all in. I couldn't tell whether he'd seen me, but I thought about that spear and realized the last thing I wanted to do was surprise these men.\n\nSo I tugged my shawl more firmly over my hair, stepped out from in front of my dad's house, and cleared my throat. \"Hello?\" I called uncertainly.\n\nHe didn't seem startled, turning his horse slowly toward me and then cocking his head. I could see now that he was probably about my father's age. His face looked grim, with more than just a hint of cruelty about his dark eyes, but when he suddenly smiled it seemed genuine enough. He walked the horse to within a few feet of me, until I could smell its saddle sores. \"Hi there.\" He spoke slowly and with a strange accent. \"Who the fuck are you?\"\n\nThe noise of my stepmother in the house grew louder at once; shit. She was going to come out. I raised a finger toward the horseman and half-turned toward the door. \"Stay inside, Mother Elfrith.\" The rest of the manor would be arriving soon, I reckoned, drawn back by the horses, and I thought it was unlikely that just two Normans would slaughter us all. I turned back toward the man. \"Uh, I'm Merewyn?\"\n\n\"Right,\" he shrugged, \"but what I meant was, why are you here waiting for us? Are you the lady of the manor? And what's the name of this place?\"\n\n\"This is Millow.\" I wondered whether I should bow, or kneel, or call this man 'my lord,' or anything like that. \"We don't have a lady of the manor. We have a thegn, but he's not here.\"\n\n\"Thegn!\" The man snapped his fingers. \"Right! That's what you people call your overlords. You're his wife, then?\"\n\nI couldn't hold in a laugh. \"Oh god, no. No, I'm just a beekeeper.\"\n\n\"Well. Beekeepers are important, too.\" He was still staring all around him, now nodding slightly. \"Nice place. So, listen,\" he went on, still speaking slowly but clearly, \"that man over there? On the horse? The young guy? I suppose he's sort of like a thegn too.\"\n\n\"Do these lands belong to him now?\" I blurted. I could hear Sibald thrashing through the bushes behind me, over the brook. Good. My father would be here soon. \"We just... we don't really know what's going on...\"\n\nHis smile did not leave his face, but he did stiffen a bit as he caught sight of my brother at the brook. He slowly showed both his hands. \"That makes two of us,\" he muttered. \"They don't tell me much.\" He nodded behind me. \"Is that your husband?\"\n\n\"I'm not married.\" I spun around and saw that Sibald had a billhook in his hand and a scowl on his face. \"That's my brother. And he's not going to do anything stupid,\" I added.",
        "\"Good. I'm not in the mood to fight today.\" He showed no fear at all as he stared pleasantly at my incoming brother. \"This manor belongs to the son of the Count of Eu now.\"\n\n\"Eu?\" I blinked. \"Like a sheep?\" I cocked my head. \"And what's a count?\"\n\nHe seemed to look fully at me for the first time, his eyes sweeping up and down my body as his smile grew again. \"No,\" he laughed. \"Not like a sheep.\" He waved over at his friend just as Sibald drew up, breathless from his run across the fields.\n\n\"Father's coming!\" He glared up at the horseman. \"Are you a Norman?\"\n\n\"No!\" The man spat. \"I'm from Brittany.\" He stared balefully down at the billhook until, with a guilty start, Sibald dropped it.\n\n\"I don't know what that means,\" Sibald frowned. He was sixteen, and it was rare for him to admit that he didn't know everything. \"I thought you were all Normans.\"\n\n\"Me too,\" I put in. I could hear our door creak behind me; stepmom would be peeking out.\n\n\"Yeah, well, Sir Geoffrey is a Norman.\" He tossed his head toward the approaching rider. Sibald and I looked at each other, spellbound.\n\n\"Was the whole world against us?\" I muttered. I'd thought all the invaders had been Normans.\n\n\"Well,\" the man on the horse shrugged, \"when Duke William sailed, he did have the blessing of the Pope. So.\"\n\n\"Fuck,\" Sibald sighed. \"I wonder what we did? Like, to deserve this.\"\n\nThe younger man, this Geoffrey, looked curiously down at us and said something in what sounded like a very odd language. The older man listened, then nodded. \"He wants to know where your lord is. Your, uh, thegn.\"\n\nWe looked at each other again, then back at our stepmother. She promptly vomited on the threshold. \"Um, sir?\" I said, facing the young horseman but looking at the old one, \"I have no idea where Thegn Godmer is, and neither does anybody else here.\"\n\nThe old guy nodded and spat something in that weird language to his companion, who eyed the three of us and said nothing, staring with distaste at the steamy pile of my stepmother's puke. The older man cleared his throat. \"So, is your father here? Is he living?\"\n\n\"He is.\" Sibald nodded. \"He's on his way from the fields. I was faster,\" he added breathlessly.\n\n\"Great. We'll wait for him, I suppose.\" He gibbered something else, and then he took the younger man's bridle as they both swung off the horses. \"Sir Geoffrey wants wine. Do you have any?\"\n\nMy stepmom threw up again and then shrank back into our house. I sighed. She was always like this when she was pregnant. \"I think there's some mead? Or ale?\" I wasn't sure whether dad and Osgar had gotten around to brewing any, but I was certain we had no wine. \"Or, I suppose we could fetch some water from the well...\" I trailed off doubtfully.\n\nThe men looked blankly at me, then the older one tried another smile. \"Why don't you bring us whatever you have. We'll wait for your father.\" He nodded toward my doorway. \"Your mother? She is ill?\"\n\n\"She's pregnant.\" He didn't seem to understand the word, so I mounded my hands over my belly. \"You know. With child? Like the Virgin Mary?\"\n\n\"Oh.\" He shrugged, glancing down at me. His younger companion said something, and the man nodded. \"That bigger house over there, with the second storey? That's your thegn's house?\"\n\n\"Yes.\" And that was it, the entire manor: his house, our house, the outbuildings, and nothing else until the Bishop of Durham took over nearby. \"He's not coming back,\" I added, feeling very certain. \"Thegn Godmer.\"\n\n\"You're sure?\"\n\n\"He took our priest with him,\" I explained, thinking with a twinge about my bees. \"They went everywhere together, just about. All his charters are missing, and the chapel money. They knew you guys were coming.\" I gulped. \"He's gone.\"\n\nThey conferred in low-voiced gibberish, then the older guy found his smile again. \"Sir Geoffrey and I will be living in his house, then, until William can arrive.\"\n\n\"When will that be?\"\n\n\"We'll discuss it with your father, I suppose.\" The young guy was already heading for Godmer's house. \"You can take these horses. See to it they're fed.\"\n\n\"Excuse me?\" Sibald and I blinked incredulously. \"Do we work for you now?\"\n\n\"No,\" he sighed. He took my hand in his rough, big fingers and pressed the reins into my palm. \"Nobody works for me. We all work for William of Eu, and Duke William the King as well. And they want you to care for the horses,\" he chuckled, \"so care for the horses, girl.\" He glanced around. \"Where do you people shit? I mean, you obviously don't go far to puke, but I assume you've got someplace else where you do your business?\"\n\n\"Yes,\" I sighed. \"Sibald? Why don't you show him where the privy is.\"\n\n* * *\n\nDad gave them the lie of the land: he told them where the Bishop's people lived on the next manor, of the ten freemen with no thegn on the other side of the brook, of what little we could offer to our new rulers. \"They seem fine,\" he mused that night, staring into the smoke. \"They're not interested in hurting us. They know they need us in order to make money, and I think being a knight is expensive.\" He hesitated. \"They won't hurt us, but they'll tax us. And we'll work.\"\n\n\"Fuck.\" I sat on my mat on the dirt floor, staring into the flames, suddenly preoccupied.\n\n\"Sir Geoffrey told me how much it cost him to come here. I'm sure it's worse for his lord, this William guy.\" He leaned back against the bed. \"They need us to produce.\"\n\n\"Will we need to give up more in taxes now than we did to Godmer?\" Osgar was worried, as well he should be: Mildrith was pregnant, and they'd been looking to move out on their own. \"Godmer told me in the summer that he'd think about letting us have our own fields.\" They lived in a little hut next to the hedge.\n\n\"Well, I don't think I'd count on that.\" Dad was not one to panic, which was just as well. I felt like putting my shoes on and fleeing as far away as I could. I was having trouble holding it together. The two horsemen had badly unsettled me, and now they were in Godmer's house less than a furlong away. Eating our food. I wasn't sure what made me so skittish about them; probably because I'd expected so much worse, I suppose.\n\n\"Um, do they have a priest anywhere nearby?\" My voice sounded very small in my ears. I was deeply worried that St Valentine would forget about my honey. \"I mean, you know... it's almost time to get the bees going...\"\n\n\"I'm sure Father Felix will be back soon,\" my stepmother quavered. She looked like death, poor thing.\n\n\"I'm not,\" Sibald muttered. I knew what she was saying, though. She needed his prayers too, for the baby. She had to believe he'd be back.\n\nDad glanced back and forth between us both, his eyes squinting in the smoke. \"It didn't come up,\" he shrugged. \"We spent a lot of time talking about rents.\" He nibbled on a lump of my cheese. \"They tell me Earl Gyrth died in October. The new King picked Radulf as Earl, him that used to be one of the stallers for old King Edward. So at least he's English.\" He spat. \"Our new thegn will be William, the son of some important Norman with an odd name. This William will have almost eighty manors to manage.\"\n\n\"Eighty!\" Osgar's eyes shone. \"What the fuck!\"\n\n\"We'll never see him,\" I said softly. I stirred. \"We've ten shillings' value. Less, probably.\" Everyone was looking at me. \"He'll leave those two here, or someone just like them. Who are they, again?\"\n\n\"One is a warrior, like a housecarl. The other his servant, but also a warrior. That one speaks our language.\" His face twisted into a scowl. \"I better not have to learn their Norman shit.\"\n\n\"The servant. I spoke to him.\" I licked my lips quickly, the smoke making me drowsy.\n\n\"What are we going to do with his horses?\" Dad asked me quickly. \"They love their horses. I believe there are more coming, too.\"\n\n\"The servant can cope with them, no?\" Nobody in our family understood how to care for a horse. \"I'll talk to him. What's his name?\"\n\nIt was a hard glance I got back from my father, shrewd. \"Did you not ask him when he came here this afternoon? Before I reached you?\"\n\n\"Father,\" I tutted, putting on my smile, \"who am I, to ask a horseman his name? I am but a blushing maid who keeps bees.\"\n\n\"Interesting,\" he cocked his head, \"because he asked me about you.\"\n\n\"Wait. What?\"\n\n\"He did. He seemed quite curious about you.\"\n\n\"The... the young one? Or the old one?\" Every eye in the house was on me, but my father only smiled.\n\n\"The servant, you idiot,\" he sighed. \"Don't get ideas above your station, and don't you dare jeopardize our position here.\" He glanced around the little house. \"The world is fragile enough.\"\n\n\"Father...\"\n\n\"He says his name is Bernard.\" He chewed the last of the cheese. \"He says he's known the boy's father for many years.\"\n\n\"The boy's father...\" Sibald leaned in, the fire full on his face where he'd just started growing his little wisp of a mustache. \"Is he also some kind of rich warrior?\"\n\n\"I don't know,\" Dad yawned, irritated. \"We didn't discuss each other's family trees, son.\"\n\n\"Well,\" Mildrith sniffed, \"except for Merewyn here.\" I felt a surge of heat to my face as I flushed. Bitch sounded jealous. We'd known each other all our lives, and now she was taking my brother's cock; I wondered whether I should tell him about her tryst last year with Edmer. I glared meaningfully over at her as I thought about it, and she seemed to get the idea.\n\nWhich is to say, she shut her cocksucking mouth.\n\n\"Bedtime,\" Dad said firmly, and as I stole out into the chilly star-lined darkness to use the privy before bed, I glanced over at Godmer's house across the way.\n\nNo. Not Godmer's house. Sir Geoffrey's house, now.\n\n* * *\n\nI was up early the next morning, squeezing out from under my mother's old blanket between my brothers and sisters. I had withies to gather, and Thurgis was due back through sometime. He usually left Biggleswade before the sun, and it was only an hour's walk. I normally offered him some bread for breakfast and, when I felt like it, my pussy if there was nothing more pressing to do.\n\nThurgis was not the sort of fellow to turn down either free bread, or free pussy.\n\nI was also hoping to catch him before he came stumbling down the lane. He wouldn't know about Bernard and Sir Geoffrey and, more to the point, they would not know about him. It occurred to me, as I pulled my cloak about me and stepped out into the grey morning, that I had no idea when they'd be up, what they'd want for breakfast, or what they'd think about a millboy stumbling uninvited into their new manor. Although, I did notice that the two little windows of the thegn's house were still dark as I crept along the lane toward the nearly stripped-out willow copse down by the stream.\n\nSure enough, as I teetered on the crusty, frosted mud a couple of hours later with Sibald's billhook, hacking away at my branches, I heard Thurgis' shoes on the path from Biggleswade. \"Hey!\" I called through the bushes as soon as I was sure it was him, \"looking for something?\"\n\nHe pulled up short, peering back toward me in the light of the low sun, his teeth flashing in a grin. \"Is that my Little Bird I hear chirping in the bushes?\" he chuckled.\n\nI felt a sudden warm surge; for once, his endearment didn't piss me off. Instead, it sounded almost poignant now, a reminder of how much was changing, and how quickly. Just five months ago! Me, just turned twenty, and life going along as it always had, and then King Harold had taken Godmer off to York with his army and now? Here we were.\n\nI licked my lips, stepping through the thinned copse with my bundle laid aside. I'd come back and keep working a bit later, after I was through with Thurgis. Because, see, you had to take your pleasure where you could find it in these days.\n\nHe grinned at me and put his sack down. \"Ready to choose a mate, Little Bird?\"\n\n\"Stop that.\" I drew closer, the mist rising off my breath as I tossed the billhook to the path. \"I'm glad I found you. The Normans have come.\"\n\n\"To Millow?\" I nodded. \"Yeah. They're in Biggleswade, too.\" He scratched at his nose and looked greedily at my chest. \"Well. What's to be done about it?\"\n\n\"I felt bad,\" I confessed, stepping into his arms. \"I didn't want them to catch you or anything, if you came for breakfast.\"\n\n\"Yeah,\" he said again, looking down at me. He smelled of sweat and dirt and all those comforting things I'd always associated with men, those things that went straight to my vagina. I leaned into his chest, feeling the warmth off his body. \"That's too bad. I was looking forward to some food.\"\n\n\"Well, I didn't say I wouldn't feed you...\" I lifted my chin, smiling now, feeling that familiar intensifying flutter at my pussy. He was grinning back, that devilish little gleam in his eye that he'd had ever since the day he'd realized he could have me, back during those long lazy summer days when I tended my bees. Back when Father Felix had prayed for them. \"Want to eat?\" I whispered, my eyes going coy and mischievous as I nodded toward the copse.\n\n\"You know I do.\" He took my hand and led me boldly back over the crusted mud, past my bundle, to where the bank curved down toward our icy little stream. \"How do they seem? Your Normans?\" he called back to me as we picked our way through. \"The ones in Biggleswade look more afraid of us than we are of them!\"\n\n\"I'm not even thinking about them. Especially not now,\" I told him pointedly, and he took the hint as we neared the big ash tree by the water. He'd taken me here a couple times before, but I wasn't interested in being fucked right away; I stopped, glancing down at the ice melting slowly in the stream with my hand on the grey ash trunk, then turned slowly back to face him with the deserted forest path behind. \"You hungry?\" I asked him, my throat dry with excitement as I leaned back against the tree.\n\nHe still had that big dumb grin pushing up on the corners of his mustache as he glanced down at me. \"Why? What do you have for me?\"\n\n\"Look under my skirts,\" I urged, feeling warm despite the cool of the morning. My ears buzzed, the blood pumping hard through my body, the chuckle of the stream behind me merging with a soft, high breeze that rattled the willow. \"You'll find something nice and warm.\"\n\n\"Let's just see about that,\" he nodded, his voice strained with his lust for me, and once again I felt my strength, the power of my body wrapping him up and taking him captive, pushing him to his knees with a force he craved in spite of himself. \"Your dress? Or your shift?\" he asked, playing out the charade, but I was no longer in the mood to flirt.\n\nI needed release. I needed to leave my mind.\n\n\"Get the fuck under there,\" I commanded, glaring wildly down at him as his hands found the thick wool of my dress, then the linen beneath, and then lifted them both high. I hadn't worn leggings that morning, thinking I'd probably be getting into the puddles; few things are worse than being stuck in wet leggings at the beginning of February, especially when the morning wasn't all that warm.\n\nIt paid off now, anyway, his hands running up my bare legs as he ducked low to get inside my skirts in the quiet morning air. He was game, I always had to give Thurgis that: it had been nearly a week since I'd bathed properly, though of course that hadn't stopped him yesterday in the hen coop. I felt his breath on my skin, my hands moving automatically to where his head made a rising lump up the inside of my shift, my breathing getting faster, deeper, and then his hands were burrowing up the backs of my legs to grip the flesh of my ass.\n\nI arched instinctively, at just the same moment that his face smashed into my bush. \"Ohh..oh...\" I heard, low and guttural from my own throat, and now when my eyes rolled down I saw that the lump of his head was right there, where I needed it, straight in front of a slit that had gone dangerously overheated, My hand, feeling like somebody else's, clamped onto Thurgis to pull him closer to me.\n\nHe breathed first, his mouth blowing hot, moist air between my thighs, across my cunt as my hips moved slowly against him. I felt his nose dig into my bush, then, burying itself as he strained to bring his lips to my slash, his hands still greedy behind me where I sagged against the ash tree. I closed my eyes and let my face go slack, feeling my lips mold themselves into an ecstatic grin, mouth open, ready to start gasping.\n\nIt was then, as Thurgis started to work his tongue inside me, that I flickered my eyes open and caught the shadow of the horseman coming from the east, from our manor.\n\nThere were only two people it could possibly be, and even then, even as Thurgis' mouth began to pick me up off the ground and lift me far, far away, my widening eyes glanced again, taking it all in: the rider was Bernard the squire, still tall in the saddle, of the roguish smile and the slow, accented speech. He led a second horse on a bridle behind, perhaps... what? Giving them exercise? Searching for fodder? Visiting a comrade in Biggleswade? Whatever. His head swiveled from side to side as he rode, alert to the sounds of the forest.\n\nI didn't mean to whimper. At all.\n\nBut Thurgis, ignorant, eager Thurgis, chose that moment to sweep his tongue up through the musky folds of my vagina, to the top where he knew he'd find the trembling, anxious bud nestling like a pearl under its hood, and suck.\n\nBernard stopped at once, leaning forward, his eyes searching, and too late I understood my problem: this old ash, where Thurgis and I had indulged our lusts before, where generations of Millow youth had probably done likewise, was fairly well-shielded from the path. To a person walking along it. I hadn't planned for a man on horseback, because until yesterday nobody in Millow owned a horse; even Thegn Godmer had needed to borrow one when he'd gone to York in September, a large docile cart-beast from Alwin the Reeve, up in Sutton.\n\nMy hand flew up to my mouth, my eyes alive and shining, as the squire swung his face straight toward me. I saw him squint, then cock his head, but by that time the fires behind my belly were starting to spark and crackle and I was able to do nothing at all except stare back at him, my mouth still wide.\n\nBernard smiled at me.\n\nI was already arching rhythmically against Thurgis, grinding his face into my pussy. I was much, much too far gone to stop just because the squire was watching me. Instead I took my hand off my mouth and swept it down, flourishing my heavy dress up and out of the way so that I could swing my leg up onto Thurgis' stout shoulder, my heel on his back while I let my leg pull him in. I was wide open to him now, willing him to take me away, my body humping eagerly up and down.\n\nAnd still, Bernard smiled at me.\n\nMy head rapped sharply on the ash bark behind me, my eyes screwing closed as Thurgis bore down hard, sucking, even biting, the sting as his teeth pulled my hair adding to the way he was destroying my senses, controlling my mind, until the wrenching tightness in my belly and thighs suddenly, abruptly, deliciously, collapsed in blessed ear-buzzing release.\n\nBernard watched it all as I melted abruptly onto Thurgis' face and neck, bearing him down as, with a cracked wail, I lost all control. My mind burst in my skull, all my limbs convulsing in a tremble that had nothing to do with the cold and everything to do with the joy he was giving me, the joy I felt strangely, obscurely proud to show the tall squire. I was grinning, ecstatic, the laughter rising breathlessly from deep within me to cough out in barking gasps as I eased slowly back to earth, feeling like a foot sinking slowly into a marsh.\n\nIt was over with a dragging slowness that left me twitching and sweaty in the cold morning. Dimly, then, I saw the back of Sir Geoffrey's riderless horse loping calmly west along the path, led by squire Bernard; I was panting hard, the cold air gusting from my lungs as he turned in his saddle and gave me a jaunty parting wave. But by then Thurgis was fumbling out from under my skirts, his mustache glossy with the juices he'd sucked out of me. He squatted before me, looking up at me with a feral gleam in his dark eyes. \"You're welcome,\" he snarled, one hand trailing off my naked leg to fumble at his leggings.",
        "I could still see those disappearing horses, so faint in the distance as I twisted my head to look away from the rising sun, holding tight to the ash trunk while, with his usual swollen exuberance, Thurgis drove his ready prick deep inside me and began, urgently, to rut.\n\n* * *\n\nThe early afternoon found me heading home, only the best withies in the bundle at my back, my brain still whirling. The fuck with Thugis had been like getting drunk on strong mead: it had taken me somewhere else for awhile, my troubled mind soothed, but as always there was the next day, or in this case the noon hour as my feet found the path and turned toward Millow.\n\nThere was horse-shit in the path. I'd never seen that before.\n\nOn cue, too, I now heard the steady, calm clop of hooves behind me. I cursed in my mind as I stopped and swung around, thinking of the billhook. Horses on the lane, all my life, had always meant excitement: Godmer being summoned to the hundred court, or to service with Earl Gyrth. Now, since hearing of dead King Harold and the new King Bastard, the sound meant fear.\n\nI found that the fear was not lessened by the memory of Bernard watching me from his horse a couple hours ago.\n\nSo it was a wary, furtive beekeeper that the squire found as he rounded the corner by the copse, riding easy with his usual satisfied smile. He was still leading the knight's horse behind him, and now I could see a dead deer heaped across that horse's back.\n\nI got the clear impression that he'd been aware of me long before I'd been aware of him. \"Not easy to find game in February,\" he said cheerfully, seeing my eyes on the deer. \"It'll be a month or so, yet, before the animals wake up and wander about. Right now, they're still choosing their mates. Like the birds.\"\n\nI thought about Thurgis. \"That's what February's for, right enough.\" He reined in, which I thought was polite. But I didn't really want to talk to him, not after he'd watched me cum. \"You'd best get back and deal with your meat.\"\n\nHe laughed easily. \"Our meat, beekeeper. Sir Geoffrey and I can't possibly eat all this ourselves, and besides? You're vassals. We owe you a few obligations, here and there.\" I frowned, and he laughed again. He seemed so comfortable, so at ease. I felt rustic. Young. \"Throw your sticks back with the deer,\" he added, nodding casually behind him. \"Why carry it when the horse can do it?\"\n\nI cocked my head suspiciously, but felt my cheeks warming. Reddening. I wasn't ready for this man to be kind to me, I realized, not after what my father had said about rents and taxes. \"Because... I've always carried it?\" I shrugged. \"It's not my horse.\"\n\n\"It's not mine, either,\" he pointed out, and it slowly dawned on me that he wasn't planning on moving again until I'd thrown my bundle onto the damn horse. So I did, the deer still warm with a little speckle of blood beside its neck. It stared reproachfully at me with one big, dead, glassy eye.\n\n\"Thank you, uh, Bernard,\" I ventured.\n\n\"You found out my name! Good.\" He looked down at me as I patted the deer. \"I asked your father about you last night. I guess you asked him about me.\"\n\nI shrugged. \"Why would that surprise you? I'm powerless. You're powerful. Of course I'm curious.\"\n\nHe laughed again. \"I'm not powerful. I'm just a squire.\" He peered ahead, toward home. \"I'd offer to put you on my horse with me, but your family might get the wrong idea.\" He winked. \"I'd assume, too, that you've done enough riding for one morning?\"\n\n\"I beg your pardon?\" It burst out of me, whatever dignity I had in this sudden, strange new world whisked away by his earthy chuckle. \"I haven't the faintest idea what you're talking about!\" But my face gave me away, I knew, feeling that tingly warmth grow there. I looked down, making sure my shawl was tight about my face.\n\n\"I know what I saw,\" he replied calmly. \"No need to get uptight about it. You're a young woman whose life's been turned upside-down, then shaken.\" He patted his horse's neck. \"You've got to take your pleasures where you can in this world, beekeeper.\"\n\nShocked, I looked back up at him. Apparently, being a Norman meant you could read minds. No wonder King Harold had lost his battle with these people. \"Merewyn,\" I corrected automatically.\n\n\"Merewyn he beekeeper,\" he repeated with a courteous nod. \"I'd forgotten. Walk with me,\" he said suddenly, jumping off the far side of his horse. \"My mount could probably use a rest, anyway, after carrying my fat ass around all morning.\"\n\nI giggled, still nervous. \"Looks like he's more than capable.\" I could see a small bow, unstrung now, strapped beneath his saddle. No spear, though, and no sword. I hesitated. \"I'm sorry you saw me. Earlier,\" I told him, my face burning.\n\n\"I'm not,\" he replied candidly. He shrugged. \"This has been a strange autumn. It's been awhile since I saw someone just letting go and enjoying themselves.\" He winked again. \"Don't worry. I won't tell.\"\n\nI sighed. \"This is Millow. As you'll soon find out, everyone knows everything here.\" I brushed a stray hair back under my shawl. Fucking elflocks. \"Thurgis and I have been fucking since he turned eighteen. I imagine everyone knows by now. Why shouldn't you?\"\n\n\"You've been married?\" He glanced swiftly over at me. \"Pardon me for asking; in my land, you'd probably be someone's wife by now.\"\n\n\"My father can't afford to marry me off,\" I explained, my blush stubborn on my cheeks. \"And I'm not in the mood to settle for the likes of the men around here, anyway.\"\n\n\"But children?\" I wasn't sure if he was needling me. \"You don't want your own little beekeeper to raise?\"\n\nI felt my usual mulishness rise, the mulishness that people were always saying would get me into trouble someday. \"I've got sisters, a step-mother. My brother's wife. They can shit out babies. I'm not in a hurry.\" I glanced sidelong at him. \"You? You're older than my father, probably. I wonder how many little beekeepers you've left scattered around.\" I should have felt nervous; I was daring much, talking to him this way. But I sensed that I had nothing to worry about, really.\n\nIt was hard to see him murdering me in the woods.\n\n\"Perhaps, perhaps not,\" he admitted with a carefree shrug. \"Honestly? It's not something I worry about much. When you've moved around as much as I have, it's not like you grow too... too... attached? To anyplace.\" He laughed again. \"If Bernard the squire has left bastards in Brittany, or Normandy, or back south in London even? Nobody would know.\"\n\n\"So noplace feels like home?\" It was a strange concept to me. I'd never been more than ten miles from Millow in all my life. \"My father says you're here to stay, you Normans.\"\n\n\"But I told you, I'm not a Norman.\" He nodded as I shrugged; that wasn't the point, and he knew it. \"Sir Geoffrey is here to stay, yes. Lord William of Eu, maybe even his father the Count. Me? Maybe. Maybe not.\" He glanced shrewdly at me. \"Probably, I should just take what I can from your country, and then go on somewhere else and take what I can from there.\"\n\n\"Probably,\" I snapped, hoping I didn't sound too bitter, \"but if you were planning that, why share your deer with us?\"\n\n\"Why, indeed.\" He spat in the path. I could see the smoke rising now above the trees in front of us. \"Perhaps not every Norman is as kind as Sir Geoffrey? Or even his father? Perhaps there's a chance I can find a place to stay? Maybe even produce little beekeepers?\" When I shot him a withering look, he winked once more. The man had confidence, at least, and it was difficult to argue that he didn't enjoy himself. \"Or little farmers, little soldiers, whatever. You're right, though. At a certain point, I'll be too old to fight wars anymore.\" He crossed himself, for luck. \"Perhaps I already am.\"\n\n\"How old are you?\"\n\n\"As you said, old enough to be your father, girl.\" He pondered. \"I'm forty, more or less.\"\n\nI paused, wondering how far I should push this. Whether I even wanted to. Why I wanted to. Ribaldry had always been a part of my life, though, so in the end I couldn't stop myself. \"And your horse is sick of carrying your fat ass. Obviously.\"\n\nHe sighed, but his smile never left him. \"See? It is as I feared. I am too old already to be a soldier. I should leave it to younger men, like the one you were entertaining earlier, by the tree.\" I flushed hard, but this time I didn't look down. I even managed a smile for him. He patted the horse again. \"I should teach you French. You're amusing. You'd be even more amusing in my own language.\"\n\n\"If it's amusement you're looking for, Millow might not be to your liking,\" I sighed. \"Truly, the most exciting thing that ever happens here is when I get stung.\"\n\n\"In my language,\" he nodded, \"sting is the same word for prick. So, yes. I'm sure it's exciting when you're pricked.\"\n\n\"Shame!\" I cried, but I knew I was smiling. In a sudden warm flush, I began to think he liked me. Enjoyed my company, anyway; I smiled. \"You're not teaching me your language, squire. It has made you into a pervert, I'm afraid.\"\n\nHe shrugged. \"We're all perverts, probably. I meant no offense, beekeeper, but I can see that you took none.\"\n\nI considered that and realized he was right. The manor was in sight now, our little houses awake and smoking through the thatch. \"If you do stay around here,\" I muttered at last, \"you'll find I'm difficult to offend.\"\n\nHe tutted at the horses as we turned out of the lane and into the manor. \"I'll remember that.\" He nodded down at me. \"It's been an eventful morning, Mademoiselle Merewyn. We'll see each other again soon, but it might not be as interesting.\"\n\nAgain, I found I could not resist. I thought about how he'd looked at me, that warm flush I'd felt as I'd decided he wanted me to flirt with him. \"Might not, might be.\" I smiled. \"Good day.\"\n\n* * *\n\nDad seemed pleased after talking again to Sir Geoffrey. \"He told me he was going to give us some venison for supper!\" I hid my smile as I twisted my withies for the new skep, listening for what my stepmother needed. \"I just wish he hadn't taken me out of the fields to tell me so.\"\n\n\"I'm not sure they quite understand the lives of normal people,\" I mused, arching an eyebrow. I watched him as he took a drink of beer. \"Are you still worried? About how things are going to be?\"\n\nHe shrugged. \"I'm going to try to go over and talk to Aldmer tomorrow or the next day.\" Aldmer was one of Dad's friends. He'd been a free man under King Harold, but like Dad had said last night, it seemed nobody was all that free anymore under the Normans. \"This Geoffrey seems all right. The other man too; he seems steady.\" He glanced at me. \"You need to watch out for Winfled. She's only thirteen, and I want her protected.\"\n\n\"I do too, Dad.\" I smiled. Elfrith was the lady of the house, of course, but I'd been there longer. And my father knew me better. \"I agree with you. I don't fear these two.\" I hesitated, the throb of my bees never far away. \"Can you ask Aldmer if he knows where there's a priest? I'm really worried.\"\n\n\"Yeah. Our souls are all in danger,\" he sighed, biting his lower lip. \"I think these Normans are Christians too. They must have priests?\" He shrugged. \"Too bad about Godmer and Felix leaving, but I guess I'm not surprised.\"\n\nI spat. \"I expected better, honestly.\"\n\n\"He was wounded, up at York just a few months ago. I don't blame him for not wanting to fight. And Felix was always close to him.\"\n\n\"Godmer was our thegn. He was supposed to protect us,\" I pointed out. I wasn't ready to feel okay about being abandoned. \"Now we have to rely on these foreigners to do it. That's not right.\"\n\n\"Maybe so,\" he shrugged, \"but if they keep bringing us meat? I won't complain.\" He nudged me with his toe. \"Cheer up, Mer. We'll take each day as it comes. We'll work hard. We'll survive.\"\n\nI watched him go back out to the fields, stopping to piss on his way, before I sighed and went back to my skep.\n\n* * *\n\nHe came to me the next morning after breakfast, after I finished. \"Good morning,\" he nodded, pleasantly enough.\n\n\"Hi.\" I was sitting on the new skep, a test I did to make sure it was sturdy enough. If it could take my weight, I figured the bees would be safe. He watched, amused, as I lifted my feet off the ground and balanced my butt on the wickerwork. I glanced up at him. \"What is it? Are you hoping today will be as interesting as yesterday, maybe?\" I felt a flutter in my cunt as I remembered how he'd smiled watching me with Thurgis.\n\n\"Hard to imagine how.\" He yawned, stretching high. The Normans dressed almost like us, but with shorter tunics. And they seemed to use a lot more leather than wool. Thick leather, too: his boots and leggings alone looked like they'd used half a cow. I glanced idly at them, my eyes stopping at his groin. Where a bulge pushed at the dirty leather. I must have done something with my eyes or my face, because he laughed. \"What are you looking at, beekeeper?\"\n\n\"Merewyn,\" I corrected, blinking as I looked away. I nearly tumbled off the skep, my head moved so fast, but I glared up in no mood for games. \"You know quite well what I'm looking at, squire.\"\n\nHe didn't stop laughing. \"Well. Maybe today will be as interesting as yesterday.\" Behind me I heard Elfrith moan in the house.\n\n\"What do you want, Bernard? I'm busy today.\" My blush, damn thing, faded slowly as he stood there.\n\nHis laughter faded just as slowly. \"I need you to tell me where your old lord got his sand from.\"\n\n\"How the hell would I know?\" I was feeling cross now, and I was also trying to avoid looking back up his legs. I scrambled off my skep, summoning every shred of dignity I could find. \"He didn't regularly consult me about sources of sand,\" I muttered, brushing at my dress. \"Why do you need sand, anyway?\"\n\n\"For cleaning Sir Geoffrey's chainmail,\" he replied, his tone suggesting I should already know something so basic. \"We found Godmer's cleaning barrel, but I need sand for it. Oh, and a shovel. To get the sand.\"\n\nI laughed in his face. \"So demanding.\"\n\nHe arched a shaggy eyebrow. \"I mean, we are your lords now...\"\n\n\"You're not,\" I retorted, but once again I felt that warning fire flash through my mind: be careful how much license you take, Mer. \"My dad has the best shovel, but I don't know about sand. Usually, you find that shit down at streams? Right?\"\n\n\"Usually.\" He sniffed. \"Where Sir Geoffrey and I live, the sea is about... five miles distant? A bit less?\" He shrugged. \"Sand is not much of a problem.\"\n\nI nodded, thinking. \"How much do you need?\"\n\n\"As much as possible.\"\n\n\"Then I suppose you'll need to go to the river,\" I shrugged. It was a mile away, at least, past Biggleswade. \"With the barrel on a horse; our cart is broken.\"\n\nHe said something in French that sounded like a curse, then saw my confusion and clarified. \"Shit,\" he offered helpfully.\n\n\"It's Godmer's cart,\" I added, watching him. \"Thegns do things for their tenants. Like provide carts. And fix them.\"\n\n\"Then he should have fixed your cart,\" Bernard said diffidently.\n\n\"He would have,\" I grated, \"if he hadn't had to go to York to fight for King Harold.\"\n\nHe shrugged, a hard shrug for a hard world. \"Bad timing.\" We stared at each other a moment, then he sighed. \"I'll add that to my list of chores,\" he muttered at last, \"fixing the lord's cart for the vassals.\"\n\nI chuckled. \"No. There's a man who does that, over in Biggleswade. A cartwright. Your Sir Geoffrey will simply need to pay for it.\" I yawned. \"You can go see him while you're down at the river, collecting your master's sand.\"\n\n\"Our master's sand,\" he said softly, and something about the way he said it made me shudder. There was insistence there, backed by force. By menace, even.\n\nI'd found how far I should go, apparently. \"Our master's sand,\" I nodded, my voice small, and he grudged me a short nod.\n\n\"I'll need someone to introduce me to the cartwright,\" he went on. \"You may join me.\"\n\n\"Oh, may I?\" My lip curled, saucy, but it wasn't the worst idea in the world. I'd not been out to the town in weeks.\n\n\"Yes.\" He was already walking away. \"I'll get the horses ready. Can you ride?\"\n\n\"No!\" I snorted. Me? Ride? \"Your horses will simply have to keep it slow.\"\n\n\"They can do that.\"\n\nAnd so it was that my footsteps haunted the depleted willow copse again, walking the frost-hard path, my nose wrinkling at the smell of the horse dung. It was different from what I was used to, with our oxen, and so was walking alongside this tall, leather invader. A part of me hoped I wouldn't see anyone as we walked, but a wilder part of me hoped I would. Seeing me, lanky Merewyn the Beekeeper, abroad with an actual Norman!\n\nEspecially that slut Cyndred, from Langford.\n\n\"Your mother makes good bread,\" he offered as we trudged past the stream. His horses seemed happy enough to be out, and I was even happier he hadn't insisted on me being on one of them. He led them both, his handling of both animals confident. Gentle.\n\nI hesitated, never quite sure what to say at these times. \"She's not my mother. Elfrith.\" I glanced over at him. \"My father married her when I was young. My mother... well, she died. Bringing forth Winfled.\"\n\n\"Ah.\" He didn't need to say any more. Mothers died in childbirth in Brittany too, it seemed.\n\n\"I was seven.\" My first grief. \"Elfrith has always been good to us, but... well. She's not my mother.\"\n\n\"Indeed.\" Even now, alone with me on a quiet path in midmorning, Bernard's eyes moved constantly. Intent. This was a man, I reminded myself, who'd spent his life learning to be cautious when on the move. \"So she's the youngest? Your sister?\"\n\n\"Winfled?\" Had he not noticed my half-brothers rolling around in the fields with Dad? \"Elfrith has two sons, and another child coming. God willing.\"\n\n\"God willing,\" he agreed.\n\n\"Winfled is thirteen.\" I darted a sudden scowl toward him, my mind going suddenly dark. \"Thirteen, Bernard. Don't get any ideas.\"\n\nHe laughed then, his usual bubbling chortle. \"She's at no risk from me.\" He glanced down at me.\n\n\"I've heard that some soldiers aren't particular,\" I pressed.\n\n\"Some soldiers are assholes.\" He shrugged. \"War is awful enough. It doesn't need to involve children. Nor women, either,\" he added with a meaningful nod at me. \"I've never needed to worry about rape, in any case.\"\n\n\"Most men don't,\" I snapped.\n\n\"That's not what I mean, Merewyn. I mean I've never needed to take a woman by force.\"\n\nI felt myself blush again, but held my tongue as we walked. Finally I felt I had to speak, simply to fill the silence. \"I'll bet,\" I muttered, thinking about the lump beneath his leather.\n\n\"Well, thank you,\" he chuckled. \"And Sir Geoffrey?\" He paused, thinking about what he should say. \"Sir Geoffrey and his father are very, very religious men. I think he's probably not too interested in fucking.\"\n\n\"He's religious?\" I felt my heart pump fast, and hoped I didn't sound desperate as I laid an instinctive hand on Bernard's arm. \"Does he have a priest? I mean, he must. Right? Nearby?\"\n\nWhen Bernard reached his other hand over to pat my fingers, he did it naturally. So naturally I barely noticed, though it comforted me. \"His father brought a chaplain,\" he nodded, \"but I don't know where the father is, you see.\" He looked curiously at me. \"Why?\"\n\nI felt myself frown. \"I need a priest,\" I sighed.\n\nHe nodded. \"Who are you marrying?\"\n\n\"Very funny, squire,\" I frumped, taking my hand out from under his.\n\n\"Well, I mean, I assumed... your young man from yesterday, at the tree...\"\n\n\"Shut up!\" I was smiling despite myself, though, because so was he, that wide grin in his weathered face. \"He's a boy. Only a bit younger than me,\" I clarified hastily, \"but he doesn't really act like a man, yet. He's not the sort you'd marry, that's certain.\"\n\n\"So? Why does such a clever woman waste her time with him?\" He was still grinning when I looked up at him, wondering whether I should lie.",
        "\"He's... um, he's enthusiastic? And... well.\" I surprised myself when I winked. \"I like his, uh, his...\" I trailed off pointedly, meeting his eyes, and we both laughed this time.\n\n\"His spear.\"\n\n\"His spear!\" I shook my head and smiled, nudging his arm with my shoulder. \"He's fun.\"\n\n\"Then you are not as religious as our Sir Geoffrey, obviously.\" We turned, the path winding down the long slope toward the village now.\n\n\"I am far from a godly woman,\" I admitted. \"Quite a sinner, actually.\"\n\n\"We all are. Even Sir Geoffrey. But then, your sinful ways are why you are so eager to find a priest?\" he prodded. Gentle but confident, like how he handled the horses. Wise. Again, I felt like a reckless child. I stayed close to him, the smell of leather in my nose. Leather and horses.\n\n\"I need a prayer. For my bees.\" I shrugged. \"It's not really anything to do with me, personally. We always need a good honey harvest, so the manor can prosper. So I need a priest to ask St Valentine for his favor to make that happen.\" He nodded, needing no convincing; everyone understood saints. They made the world work. \"So. That's why I need a priest,\" I finished, a little hopelessly.\n\n\"I'll ask Sir Geoffrey for you, if you wish.\" He said it gravely. He knew this mattered. \"When is the day? For St Valentine?\"\n\n\"Around the Ides.\" I shook my head. \"Father Felix knew. He always took care of it. He, too, thought St Valentine was important, somehow.\" An Englishman was coming the other way, up out of the valley, glaring suspiciously over at our horses. \"Thank you,\" I added, \"for asking.\"\n\n\"There's nothing to thank me for,\" he shrugged, his laughter returning. \"It's easy. It's nothing as difficult as, say, fixing a cart.\"\n\n* * *\n\nI had my blood a few days later when I went out to take a piss, so when Thurgis came back through for his weekly trip to the mill I had to fend him off. \"Come on,\" he moaned. \"I've been looking forward to this!\"\n\n\"Trust me,\" I snapped, \"you don't want to put your cock anywhere near there right now.\" My linen hung heavy between my thighs, the whole monthly ritual so very unpleasant. \"Don't you dare complain. It's worse for me.\"\n\n\"Well, shit.\" We stood together on the lane, just past the hedge around the manor, both of us frowning down at where his penis made an obvious tent behind his tunic. \"I mean, look at that. It's a disgrace!\"\n\n\"You'll just need to cope with it.\" I was in no mood for his whining. \"You'll be back tomorrow. I think I might be able to fuck then.\" This was a lie, but I had a headache and wanted him to get moving. \"I'm telling you, just take care of it yourself. God probably won't mind, after all we've done already.\"\n\n\"It's a sin.\" He looked so mournful, his prick so clearly hard, that I couldn't help but smile sadly. \"I can't do that to myself.\"\n\nI rolled my eyes, charmed in spite of myself, and reached out to cup his crotch. He gave off heat, actual heat, through his wool leggings, his erection strong and firm in my palm. He groaned at my touch. \"You know Edmer?\" Thurgis' eyes narrowed. He didn't like to be reminded that he hadn't been my first, but my headache was so bad that I didn't care about his feelings. \"He used to do it himself when his wife or I couldn't service him. Or Mildrith. It's easy,\" I wheedled, my wrist beginning to pivot. His leggings were loose, but he was filling them anyway. Filling my fingers, too. I brought my other hand up and tugged at his knot. \"So easy.\" This boy was so predictable.\n\nSuddenly, unbidden, a thought crashed into my mind: I wondered what an older man would be like. Say, Bernard...\n\n\"Grr.\" He was panting already, like Osgar's hound after a brisk run, but he didn't stop me as I pulled the strings and then reached inside, my hand feeling the firm sweaty warmth of his long cock. I could tell he was almost there already. His little coin-purse fell to the ground at my feet, the silver scraps tinkling inside.\n\n\"God doesn't care,\" I whispered, \"and even if he does? Bernard is finding me a priest.\" I stepped aside slightly, pulling harder, both of us looking down mesmerized at the way my nimble fingers moved his veiny flesh. \"You can tell him all about it and he'll wipe the sin away.\" I was murmuring now, my lips at his ear; I did not want to get his spunk on my dress.\n\nI'd just washed it yesterday.\n\n\"Merewyn.\" It came out as a stuttered, broken whisper. \"We're right here in the lane...\"\n\n\"You don't care,\" I gloated, my hand moving faster now: long, even strokes, my excitement rising almost high enough to make me forget my sluggish body. \"Besides, you and I both know this won't take but a moment.\"\n\n\"Fuck.\" His leggings had drooped to his knees, his balls swinging with the rhythm of my hand, and I barely even noticed when his desperate fingers reached around to grip my ass.\n\n\"Go ahead.\" I hissed it in his ear. \"Let it go.\"\n\n\"Ughh!\" He gave that strangled, gaspy groan he always did when he came, and then both of us watched as his cum went arcing far out onto the mud, spewing out in four long, powerful spurts I could feel as twinges in my hand.\n\n\"That's it.\" My lips closed around his earlobe. \"Get it all out.\" He needed no more urging though, obviously, his whole body sagging against mine as I finished him. A harsh, eager breath heaved out of him as I took my hand from his spent cock and wiped it affectionately on his tunic. \"Now pull your pants up,\" I scolded, smiling. \"You're indecent.\"\n\n\"Oh god,\" he quavered, though whether it was a curse or a prayer I couldn't tell. I turned away from him and stubbed his white seed into the thawing ground, Thurgis scrambling to put himself back together. \"Merewyn...\"\n\n\"You're welcome,\" I told him evenly. I kissed his cheek and stooped to pick up his silver. \"Tomorrow,\" I added, tucking some loose hair underneath my shawl.\n\n\"Another elflock,\" he told me shyly. \"You just smoothed it.\"\n\n\"Oh. Shit.\" I shrugged; bad luck. But there was nothing to be done about it now.\n\n* * *\n\nIt was late the next morning, the sun high on one of those late-winter days when you can feel spring on your skin and in your bones, when Bernard returned early from his hunt. Not just early: in a hurry, his horse cantering out of the lane and onto the manor with none of his usual good cheer. As usual, everyone but myself and my stepmother was out working, the two of us doing our best to chat as we worked our spindles; well, ourselves and Sir Geoffrey, who usually stayed in Godmer's house, doing... whatever young knights did. Praying? Charters? Writing? I had no idea.\n\nThe knight seemed to want almost nothing to do with us. There were times, maybe twice a week, that he took his horse and disappeared, perhaps to meet with his fellow Normans someplace. There were other times, of course, when I saw him come out of the big house to take a shit down behind the wattle by the brook. But more often than not, Sir Geoffrey was a mystery, a light in the window, or a contemplative glance out from his gatehouse with his weird Norman haircut.\n\nI was planning on going out that afternoon to find wild mushrooms, but I was also a bit nervy. Because Thurgis had not come back through.\n\nThere had been times, in helping his uncle, that he'd taken two days in Biggleswade, even three. Or times that he'd gone straight home to Morden without passing our home, for whatever reason. But I remembered how eagerly he'd cum the day before, and I thought about how uncertain the times were, and I? I was a bit nervy.\n\nI'd expected him to come through, to find his pleasure where he could. Because I liked being that pleasure.\n\nBernard's fast arrival, leading Sir Geoffrey's horse for its daily exercise, gave me a start. We watched silently from the side of our house as, without looking at us, he drove the horses quickly toward Godmer's house. And I began to run then, for what I'd first taken to be a large deer slung over the knight's horse, I realized with a sickening dread, was not a large deer.\n\nThe squire pulled up on the far side of the manor house, out of my sight, and I heard him bellow for my father. Sir Geoffrey had already heard the horses and sprang down the steps into his little courtyard, and when I arrived he was already helping Bernard unload Thurgis from the back of the horse.\n\nThe wound was an awful, vile hack along the side of his neck, his skin pale with all its blood gone. \"Oh Jesus!\" I blurted when I saw his loose, lifeless body, and the only thing that stopped me from vomiting was that my step-mother, scuttling up behind me as best she could, did it first.\n\nI'd seen plenty of death. Death is a part of life. But I'd never seen anyone killed.\n\nI raised unwilling eyes to Bernard and Sir Geoffrey, who stood frowning down, speaking in voluble French as my father led the rest of the family in from the fields. The squire caught sight of me, and something in my expression must have troubled him; he raised both hands at once. \"He was dead when I found him.\" He nodded down. \"A sword did that.\"\n\nI shook my head in disbelief. Sir Geoffrey had a sword, and Godmer had owned an old one; I assumed the other thegns had theirs, but I'd never laid eyes on another one in the entire hundred. \"Where was he?\" I sounded shrill in my own ears.\n\n\"Toward the village. Where the path starts down to the river, behind a tree.\" The knight looked very upset, and Bernard soothed him in quiet French. My father looked down at the corpse, examining the wound.\n\n\"He was out overnight.\" Dad fingered cold, dead flesh I'd had in my arms a week ago. That I'd kissed just yesterday. \"He feels like this happened yesterday.\" He glanced up at me with a curiously detached expression. \"It's that millboy, yes? From Morden?\" His eyebrow rose. \"Your friend, Merewyn?\" Normally, Dad was already out working whenever Thurgis came through for breakfast. And pussy.\n\n\"Thurgis. Yes.\" I was finding some calmness now, my mind racing, comforting myself: he'd not died with full balls, at least. But he'd died without a priest, in a state of some sort of sin, and he'd made that sin with me. I thought about the disentangled elflock. Every eye was on me now, except Sir Geoffrey's, and I drew myself up as tall as I could. \"His purse is missing,\" I said quietly; I'd picked it up off the ground and handed it back to him, and it had been perhaps half-full. \"His uncle in Biggleswade paid him in silver for helping at the mill there.\"\n\nMy father nodded, eyes widening, and glanced up at the two foreigners. \"Shame. There's no law now. People are doing as they please.\" He looked away. \"No blame to Sir Geoffrey's countrymen, I suppose, but it's a sad thing that it's taking so long to make order here.\"\n\n\"We have no wish for this. At all,\" Bernard said quietly. \"I agree with you.\" He muttered to Sir Geoffrey, who raised a stricken face and nodded. \"What is the custom here? When people are killed?\"\n\n\"Custom?\" My dad reached out a calloused hand and closed Thurgis' sightless eyes. His dead face wore an expression of mild confusion, as if he couldn't understand what had happened; the closed eyes made him look much better. \"There is none. I do not recall a manslaughter in all my days, hereabouts. Few thieves, either. Thegns take care of that sort of thing: we raise the hue and cry, and the people turn out to catch the felon. Too late now.\" He got back to his feet. \"We should send to his people in Morden, of course. So they can bury him.\"\n\nI cleared my throat. \"If... if he died yesterday? Then his uncle never saw him.\" I shuddered to think of him lying dead out there during the cold, unquiet night. \"There might already be a party out, searching from Biggleswade.\"\n\n\"We should send to Morden,\" my father repeated slowly, looking at Bernard. What he meant was that Sir Geoffrey should get on his damned horse and take word to Thurgis' people, but of course it was not Dad's place to say so. \"Now.\"\n\n\"And a priest. We should find one.\" My voice had found its usual strength. He looked like he was sleeping now, if not for that cruel white flesh and that long, angry red slash halfway across his neck. I swallowed. \"Very, very soon, squire. His old thegn is Lady Gode, and she might be living in Woolley. Might have her priest with her, too,\" I added to Bernard, but I was looking at Sir Geoffrey.\n\nI wasn't even thinking about St Valentine, either. For once.\n\n* * *\n\nI was sitting listlessly outside the manor house's crude gate that afternoon when Thurgis' uncle arrived from down near the river, heading an assortment of whatever villagers could be spared. By that time, Winfled and I had washed the body and done our best to close up the wreck of his neck, so when they found him the two of us stole off back to our spindles. That was the last I saw of Thurgis of Morden, I who'd at least given him earthly pleasure, for awhile.\n\nAs for his immortal soul? I was trying not to think about it.\n\n\"A word, Merewyn?\" I turned, tired out, to see Bernard unsaddling his horse. By that time, Sir Geoffrey still had not returned from Morden. He'd taken the hint at last and gone off with Sibald riding pillion on his big war-horse to show him the way, my brother's face an odd mix of elation and terror, for what Saxon boy truly feels comfortable riding behind a Norman knight? He'd come walking back an hour later, over the fields from the crossroad where he'd guided Sir Geoffrey.\n\nI sighed and yawned. \"Just a moment.\" I wanted to go and sit on the bed in my house, and be alone for a moment... or as alone as I could be with Elfrith and Winfled in there. Just for a little bit, just a little peace. But this was the squire of the man our new lord had sent, and simply refusing him was not easy, so I patted Winfled on the shoulder. \"Go in and sit with Elfrith, Win. She's not well.\"\n\n\"She's annoying.\"\n\n\"So are you.\" I shoved her toward the house and found, from somewhere, a wistful smile for the squire. \"Bernard?\" I yawned as I walked back to him. It was amazing how quickly I'd become accustomed to his smells, the horse and the leather, the man standing there looking uncharacteristically subdued.\n\n\"I am going to ride to Morden. I need to make sure Sir Geoffrey can return here.\" He shook his head, exasperated. \"I can't figure out why he sent your brother back here, but even knights are wrong sometimes, I suppose.\" Now he did give a faint smile, tired like mine, and I was almost overpowered by the impulse to take his hand.\n\nAlmost.\n\n\"When... when you found him...\" I swallowed. \"Did it look like it had been, you know, slow?\"\n\nHe pursed his lips and looked away. \"In my life, I have seen many men slain by swords, Merewyn. Sometimes I can tell how they died.\" He hesitated, then nodded toward where Thurgis' uncle waited. \"You saw his face. It wasn't a grimace of pain.\"\n\n\"Good.\" It came out as a sob, the day's tension finally aching out of me, and then? I did seize Bernard's hand. It was warm and rough, calloused from years holding reins. His fingers pulsed on mine. \"I'm glad you're who found him. So that he could be... cared for.\"\n\nHe nodded, pensive, and when he spoke he had even more trouble with English than usual. \"I realized who it was. That it was your friend.\" He swallowed. \"My first thought was that you would be afraid we had done it, I or Sir Geoffrey.\"\n\n\"You didn't,\" I protested, and truly, the thought hadn't entered my mind.\n\n\"No. But it probably was a Norman.\" He looked down. \"Who else here has swords?\"\n\n\"Shush.\" I shook my head. \"We'll never know, unless someone suddenly has a bunch of silver they didn't have before.\" I sighed. \"I'll miss him. This year has had such loss. It makes me wonder whether I'll still be here to gather my honey.\"\n\n\"You won't, unless I can find you a priest.\" It took me a moment to realize he was trying to make a joke, though a very awkward one under the circumstances. I smiled up at him anyway. \"This other thegn? The one you think might have a priest? Is she far?\"\n\n\"Woolley? I have no good idea. I've never been there.\" I frowned. \"Two days, perhaps? It's north of here, like in the next shire.\"\n\n\"What's a shire?\"\n\n\"Never mind.\" I wasn't really sure myself; I'd heard Dad say something like that once. \"Just... it might even be over the river; I wouldn't know.\"\n\n\"Who would?\"\n\n\"Nobody.\" I thought a moment. \"Wait. You're saying you'll go there?\"\n\nHe shrugged. \"My lord is your lord.\" He let my hand go, leaving it tingly, then spun around to mount. \"You need a priest, and... well. So does the boy over there.\" He swung his horse around. \"Morden?\"\n\n\"Straight east. A mile or more.\" I managed another smile. \"I'm sure you'll have no trouble finding one young Norman in a sea of Saxons.\"\n\n\"I am perhaps not as good a finder as you think I am,\" he said ruefully.\n\nI licked my lips. \"You seemed observant enough the other day,\" I told him, blushing, and he just smiled as he kicked the horse past the gate.\n\n* * *\n\n\"So. Once we find the priest, what happens? He says the prayer for your bees, and then off we go?\"\n\n\"I don't know,\" I confessed, gulping slightly every time the horse sprang over a puddle. \"Father Felix always knew what to do.\"\n\n\"Then why did you bring that... basket? That hive?\" He turned in his high saddle, up on the big grand war-horse, and smiled back at me.\n\n\"It's a skep,\" I grated, my hips and thighs aching already. We were on the verge beside the old Roman Road, my teeth gritted hard against the lurching sway of the horse, my mind scrambling as it tried to figure out for the fiftieth time what the fuck I was doing on Bernard's riding-horse, heading into the unknown with a bee-skep behind me.\n\n\"Yes,\" he nodded patiently, his own body moving smoothly with the motion of his stallion while mine bounced helplessly in the oversized saddle behind, \"but your Father Felix is gone. That's why I told you to come: so that you could tell the priest what he needs to say about your... your skip?\"\n\n\"Skep.\"\n\n\"Whatever.\" He shrugged and turned back around. \"I would suggest, beekeeper, that you should perhaps think of something to tell this priest? Once we find him?\"\n\n\"He'll be a priest!\" I wailed, my tits bouncing high with the motion of the beast beneath me. I'd be hurting everywhere tonight. How the hell did people like Bernard do this every day, living in the saddle? \"He'll know what to do,\" I insisted. \"Lady Gode's people keep bees too; surely they've asked him about St Valentine before.\"\n\n\"Why? I never had,\" he pointed out reasonably, \"and Sir Geoffrey's father has people who keep bees. I'm quite sure they never paid for prayers around this time of year.\"\n\n\"Well, they're Norman,\" I hissed. \"What the hell do they know?\"\n\n\"Maybe nothing,\" he laughed, \"but their honey always tastes just fine!\"\n\nI scowled at his back, mindful of my legs; we'd only been riding half a day, and I could see no possibility I'd be able to keep this up until night. And then again tomorrow, to Woolley. And then the next day, back home. The thought made me want to curl up in a little ball on the hard saddle.\n\nThe plan had sounded well enough: find Lady Gode, pay an indulgence for poor Thurgis' soul (a silver penny and a half, given up by his uncle the Biggleswade miller), get my new skep blessed, and then back again by the day of St Ermengild Queen of Mercia on Wednesday, the day before St Valentine's. Or later, if it took longer to find Gode's priest: as long as Sir Geoffrey's silver lasted. He'd given Bernard ten pennies of King Edward, and Bernard wouldn't tell me where the knight had found them. \"There was money aplenty, after the battle in October,\" was all he'd say. We'd found a manor just north of Biggleswade, where one of the people had heard of Woolley and pointed the way north. Past Buckden, he'd said; you can ask people up there. It'll be simple!\n\nSimple, yes. If it weren't for the need to ride ten leagues up into the unknown on a horse that seemed not at all disposed to make my life comfortable, though the thing clearly knew I had no business being on the back of it, but was kind enough to walk gamely along beside its master.",
        "I looked away as he dropped back to join me. All around me was England, my land. Even though this was a part of it I had never yet seen, it looked exactly like Millow: flat, pleasant country now resting fallow at the tail-end of winter, scattered here and there with manors and churches. The people looked just like me, but they gazed curiously at us as we rode. Bernard cleared his throat. \"They must not be used to seeing beautiful young women on horseback.\"\n\nI giggled despite my discomfort, my eyes swinging around to look up at him. \"Beautiful? You're a flatterer, Bernard.\" He gave an ironic half-bow in the saddle and said something in that tangled, vaguely mocking language of his. My smile disappeared. \"That better have been something else flattering,\" I flared.\n\nHe threw his head back and chortled. \"You would know,\" he teased, \"if you spoke French. I'm telling you, you should learn it.\"\n\n\"And make me a pervert like you? We've had this conversation. Why would I wish to learn French?\"\n\n\"Because your England is not your England anymore. It belongs to Duke William now, and people who know French will be more important than people who do not.\"\n\nI laughed. \"I'm not important.\"\n\n\"You will be. If you learn French.\" He flicked his reins toward me, raising dust where it brushed my thigh. \"I'll teach you.\"\n\nI rolled my eyes. \"An elderly servant to one of the Count of Eu's knights, teaching a sweet, innocent local beekeeper the secrets of how to be Norman. After stealing her home.\" I treated him to my most withering stare, then smiled to remove any offense. \"I'm sure your motives are entirely pure and godly, Squire Bernard.\"\n\n\"As pure and godly as you are, Mademoiselle Merewyn, as you while away your mornings at the ash tree by the stream.\" He snickered at my blush. \"I mean no offense, though. We live in a world where you need to take your pleasures as you find them.\"\n\n\"You've said that.\"\n\n\"Because I believe it.\" He looked keenly at me, and once more I felt that warm wash, his eyes roving over me.\n\nI sighed. \"I think it would be too hard to learn French,\" I said after a moment. I was remembering that ash tree. Poor Thurgis. In my mind's eye I saw his last load, trodden into the mud, wasted.\n\n\"It's not that hard.\" He looked off across the water; we'd forded the river at Biggleswade, my first time crossing with dry feet. The horse had come in handy then, at least. \"I had to learn it when I was younger than you.\"\n\n\"Oh?\" I blinked up at him.\n\n\"I was captured.\" He shrugged, the details unimportant now. \"I was just a boy, really, fighting against the Normans. Sir Geoffrey's father is the Sieur of Guerville, which makes him a bit powerful? I soon figured out that if I didn't speak French in his home, I didn't eat.\" He spat off the side of his great horse. \"I grew up speaking Breton.\"\n\nI nodded, having no idea where Guerville was, or what Breton might be. \"Have you ever been back there? To where your home was?\"\n\nHe glanced back at me, his expression curiously blank. \"Two years ago, in fact. Duke William went there, and I with him. We burnt the whole manor.\"\n\n\"No!\"\n\n\"My parents were already dead,\" he shrugged, \"and my memories of the place were in the mind of a child. It was like burning someplace else.\"\n\nI shifted in the saddle, my leggings dragging across my inner thighs beneath. He'd shortened his stirrups for me, but my legs were so tired they were scarcely doing any good. \"And you learned English... when? When you came over here with the Bastard of Normandy?\"\n\n\"Not the way you mean,\" he smiled. \"The Duke came here to King Edward's court more than fifteen years ago. I was here as a guard to the Sieur.\" He thought for a moment. \"Geoffrey was too young, I remember. Five years old, perhaps six. He was already a page, then, with the lord of Lisieux.\"\n\n\"You were in London?\" I'd heard of the King's great minster there, his palace, tales of a river so broad it took an hour to cross.\n\n\"I was all over. I lived here almost a year.\" He sighed, his eyes filled with happy memories. \"It was like coming to Normandy. If I didn't learn the language, I didn't eat.\" He winked. \"I was looking to eat something other than food by that time, though,\" he muttered, leaning down, \"if you know what I mean.\" He nodded toward where my sore legs sat astride his horse, then laughed as I blushed. \"Yes. You know what I mean.\"\n\n\"How old were you?\"\n\nHe paused, frowning, looking back into the past as he pondered. \"This was... 1051, I think? So I was twenty-six or twenty-seven.\"\n\n\"Oh my god,\" I blurted, \"older than I am now! And I was... five years old at that time.\"\n\nHe nodded. \"I told you. Old, with a fat ass.\"\n\n\"Yes, so you said.\" I hesitated, taking my mind off my pains, leaning back to study his saddle. \"It's not fat, Squire Bernard.\"\n\n\"You're a bad liar, beekeeper.\" We both smiled. He scanned the fields, his habit never changing. \"I have not yet told you I was sorry about the boy's death, on your behalf.\" He made that little bow again. \"It must have been a shock.\"\n\n\"Death is a part of life,\" I replied quickly. Too quickly, probably; I did not want to think about Thurgis. Even though we were going to find a priest to pray for him. I didn't want to remember him slain in the manor house yard; I had other memories I preferred. Against the ash tree. Inside the hen coop. Behind the hedge. Next to the disused smithy. Over the table in my house, quickly, while everyone else worked one frantic morning.\n\nI had a lot of good memories of Thurgis of Morden. I wished I hadn't cleared that elflock.\n\nBernard seemed to understand; he stopped talking about it, at least, telling me stories to while away the flat hours. Stories of Brittany, and Lorraine, and France. Stories of war. Of something called \"castles.\" Of the sea, and the breathless overnight trip in the boats to invade my land. \"I never once stopped praying,\" he sighed, \"but Sir Geoffrey prayed even harder.\"\n\n\"And God heard you.\" I hoped I didn't sound bitter. It was nothing but the truth. I'd liked my life, and I did not want it to change; Thegn Godmer had been a distant, awkward man, but I hadn't wanted him to leave. Sir Geoffrey was, so far, a fair and decent man, but I didn't want him to stay. And none of that mattered. God had decided that he fancied Duke William over King Harold, and that was all anyone needed to know.\n\nI didn't really mind Bernard, however. And his horses had kept my feet dry. So he could stay.\n\n* * *\n\nI'd never felt so grateful in my life as I did when Bernard shaded his eyes with his long hand and gazed ahead into the early afternoon distance. \"There's a village down there across the river. A big one. We should ask their hospitality.\"\n\n\"Thank God,\" I whimpered, unable any longer to pretend I wasn't in agony. We'd just forded the river again, and it now ran on my left hand as it always had. It was different, though, much broader. I wondered idly whether it was even my own River Ivel. I'd expected my first day on a horse to be pretty difficult, but not like this. My hips and thighs felt like they were on fire. All morning, as the pain mounted, I'd been worried about chafing my inner thighs, maybe even bruising my cunt... but no. That part felt okay. It was the outside of my legs I was whining about as we pulled up to the village gate just past the ford, a rather impressive stone arch. I blinked; I'd never seen a manor with a stone gatehouse. \"Look,\" I added urgently, my eyes wide as I grabbed Bernard's hand and pointed through the gate, up the muddy little lane that led away from the slow, thoughtful river.\n\nThey had a church up there, a big stone one. And the church had an open gate.\n\nBernard seized my reins and held back the horse, his face serious. He stood up in his stirrups, his head pivoting across the horizon. When we'd left that morning he hadn't brought his spear, but instead he had at his side a big, fearsome axe that I hadn't seen before. He'd seen my look and smiled. \"For firewood,\" he'd said, but it didn't look like it was for cutting firewood.\n\nNow he looked carefully around with none of his usual lightheartedness, while I sat gloomily shifting my weight and trying to see the place as he saw it. There were the usual farms and fields stretching along the river, the usual forges and glassmakers and salterers, just like a Biggleswade. But this place was bigger, and from the number of stone buildings around, it was far wealthier. All the people had clean clothes and oiled hair, though they looked a bit suspiciously at my watchful Breton companion.\n\nBecause he had no mustache, the only man without one.\n\nAnd that was the first thing I noticed. In just a week I'd become so accustomed to the presence of the invaders that it already seemed odd to me not to see any Normans. The village looked busy enough in the late-afternoon light, its fields and houses unspoilt, with no sign that they knew or cared that their new king was a bastard with a short haircut and a smooth face.\n\nI licked my lips, hips screaming, and debated about whether I should ask why we weren't simply riding down to that big stone church and smiling our way into the gate to find a priest, but before I could open my mouth Bernard settled back onto his saddle and glanced at me. \"I will do the talking, Merewyn.\"\n\nI arched an eyebrow. \"You people just took over the whole country,\" I pointed out. \"Of course you will.\" He favored me with a tight smile and then led me between the tall stone piers of the gate, past the little milling knot of curious Englishmen beyond. They looked a bit doubtfully at us, and I wasn't sure whether it was because of Bernard's obvious un-English-ness or because we were not walking.\n\nThe idea that they might have been looking at me, the beautiful young woman on horseback? I didn't take it seriously, mostly because it was hard for me to believe Bernard had actually called me \"beautiful.\" But regardless, as we neared the big church with its low wall stretching back up the gentle slope before us, I tugged my shawl further over my head and hoped I looked safely anonymous. The church had low huts within those walls, looking almost like little houses, and I wondered what sort of place this was.\n\nBernard swung easily off his horse as we neared the church gate, holding my reins and nodding up at me. \"Can you dismount?\" he asked with a small smile.\n\n\"Can I what?\"\n\n\"Dismount. Get off the horse.\"\n\nI nearly shrieked with delight. \"Gladly!\"\n\n\"Don't say that unless you try it,\" he muttered, still with that small smile.\n\n\"What?\" I was already swinging my leg, sliding off, assuming I'd be able to land like the nimble young farm maiden I was... but no. Nothing responded, my numb legs dangling like frayed yarn, as with a shriek the earth pulled me straight down off my patient horse.\n\nHe was there to catch me, his hands quick and sure along my hips as he kept me more or less upright, my body wedged gratefully between him and the horse. \"Shit,\" I gasped as blood flowed back into my wrecked thighs. I'd never felt so sore. My fingers scrambled for anything that would hold me up, finding the saddle in one hand and the mane in the other while the horse just stood there mournfully.\n\n\"You okay?\" I trembled in his arms, his low laughter in my ears. \"People don't move very well after their very first ride, beekeeper.\"\n\n\"Now you tell me,\" I moaned. My legs were fire now, and not just the hips; I could feel them shake as they slowly bore my weight. \"Perhaps we should have walked.\"\n\n\"We will, now,\" he chuckled. His hands finally released me, though bizarrely I did not want them to. \"We'll ride no further today. This is a priory? Maybe an abbey.\" He stepped slowly back and I straightened, in pain, my head swiveling madly to see whether the townsfolk had seen me. I saw buildings everywhere, and not just wood or wattle: there was stone in every direction, even some foundations of brick, left here ages ago by the men of Rome. \"I'm sure we'll find priests aplenty here, without having to search further for your Lady Gode.\" He patted my shoulder. \"Cheer up, Merewyn. Our journey is over.\"\n\n\"Until I have to get back onto that beast and ride home,\" I sniped.\n\n\"Quit whining.\" He handed me both sets of reins and reached high onto his war-horse, digging for the coins Sir Geoffrey had given him. Over his shoulder I could see a pair of priests coming out the open gate, gazing at us with frank curiosity. \"Remember, I shall talk.\"\n\n\"Yes,\" I gasped, still in pain. \"You shall.\"\n\nHe smiled brightly at the oncoming priests, both of whom glared back with an air of faint disapproval. \"My lords!\" he began with a flourish in his voice; his English had been speeding up every day, his accent sinking like a frog into the water. \"Good afternoon. We've ridden far to find you, and to beg your hospitality and your help.\"\n\n\"You're a Norman,\" one of them sniffed. He was tall, and looked just like any other Englishman except for the cross around his neck. Father Felix had never worn one, I reflected. \"Tell the truth. You're not here to beg.\" He eyed Bernard's axe. \"Plunder seems more likely.\"\n\n\"We're not in the habit of helping Normans,\" the other said primly. He was dressed more plainly but spoke more surely, his words rolling out from deep within a long, wild beard. \"The last one who came here got nothing from us, and you'll undoubtedly follow that example.\" He noticed me at last, frowning at me. His tone sharpened. \"Who are you, woman?\"\n\nI cleared my throat. \"Merewyn of Millow.\"\n\n\"And are you consorting with this Norman?\" he sneered.\n\nI pulled myself up straight, not liking his attitude. \"If you mean fucking? No. And he's a Breton, not a Norman.\"\n\nThe priest flickered a glance at Bernard, then back to me. \"You'll swear to that?\"\n\nI arched an eyebrow. \"Have I given you reason to doubt me, Father?\" I was used to Felix, to his quick, quiet intelligence, his dry humor. He was nothing like this man. \"We need your help. He's right: we've ridden far.\"\n\n\"He'll get no help from us,\" the priest repeated stupidly. The taller one had never once stopped glaring at Bernard, who now seemed as wary as he'd been before we'd ridden in. He gazed alertly around, that old habit of his; I'd thought of it as imperious, even offensive, but right now I was glad he was there. \"Why are you with him?\"\n\nI opened my mouth, but Bernard raised his hand and I said nothing. \"She is under my protection,\" he explained quietly. \"Her manor now belongs to my lord, under King William.\" I glanced up at him; I'd never heard that before. King William. It sounded wrong, the foreign name paired with the comforting old title, but I still held my tongue. He bowed slightly. \"And I am merely a servant of my lord. If I could be permitted to explain...\"\n\n\"She is English,\" the smaller priest hissed, \"and you could be a Breton (whatever that is), or a Frenchman or a man from Calais or Rome or Byzantium or Jerusalem itself, and none of that matters as long as you serve a Norman.\"\n\nBernard nodded calmly, taking no offense. \"Yes, Father, Normans are often stupid and cruel. I know it well. But they are godly. They pray and they build abbeys just like this one,\" he beamed, gesturing vaguely at their church.\n\n\"I've traveled over the Sea,\" the taller one rumbled, \"and I've seen no priories like this one.\"\n\n\"Well, of course, most of them are not so grand as yours,\" Bernard agreed swiftly. \"But soon the Normans will be here, Fathers, just as surely as the sun rises in the morning. And then you will see. My lord, the Sieur de Guerville? His lord, the Count of Eu? And our new King William himself?\" He smiled, his arms outstretched. \"All of them will show you how just they can be, how deeply they love and fear God.\"\n\n\"Count of Ewe?\" the larger priest barked, suspicious. \"Like, a sheep?\"\n\n\"It is just a city, good Father, a town on a river over the Sea,\" Bernard soothed, \"and none of them are here yet. While we? We are here, now. And we beg your help, as I said.\"\n\n\"We will not help the Normans or their slaves,\" the smaller priest insisted. \"Now, fuck off.\"\n\n\"We have money,\" I blurted.\n\n\"So do we,\" the taller priest snapped. He was already turning away. \"Look around you, wench. We house the relics of St Neot. Pilgrims come here from far and wide, bringing offerings aplenty. We have no need of your filthy money.\"\n\n\"It's silver, yes?\" A gleam had entered the smaller man's eye, and Bernard nodded, uncertain for the first time. The priest spat at our feet. \"Well. We already have gold. So I'll say it again: fuck off.\"\n\nBernard looked down, his mouth set in a grim line. \"God's blessings be upon you, Father,\" he said slowly. \"I... may I ask? How far is it to Woolley?\"\n\n\"You may ask,\" the priest gloated, \"but I won't reply. Now go away, Norman. Or slave of Normans. We don't want your kind here.\"\n\n\"I can tell.\" He took my arm tightly, my mouth still open. \"Well. God give you a good day then, Father.\" He was already pulling me aside, gently but firmly, and I brought the reins with me as we turned away from the church and looked back down the hill toward the wide, sluggish river, so much bigger than it was when it flowed through Biggleswade.\n\n\"Well,\" I began awkwardly.\n\n\"Come,\" was all he said, the two of us trudging down the lane toward the town gate. People still stared at us, even more boldly than before: they'd seen us go up to the church, then come back down. Bernard halted by the river, chewing on his lower lip, glancing about. \"We need to find a place to spend the night.\"\n\n\"I need to pee,\" I replied crossly. Part of me was thinking we should go back up there and grovel until the priests blessed my skep, but then I realized they'd only laugh at me. My honey was of no concern to them. Something told me poor Thurgis' soul would be no more important. \"And don't the horses need... something? Some food? A stable?\"\n\n\"I do not think we'll find a stable here for us,\" he said at length. \"The Normans have not yet come here, not to stay. I wonder who the lord will be here.\" He glanced up and down the river. \"He'll have a difficult time of it, I think. Norman lords do not like impertinence. I fear it may go badly for those priests.\"\n\nI couldn't help the mockery in my voice. \"So, you're saying they might forget 'how just they can be, how deeply they love and fear God?'\"\n\nBernard shrugged. \"Those were lies, of course. Duke William has been known to skin his enemies alive. But the lies were of no consequence: those men would not help us, no matter what.\"\n\n\"You're right there, son.\" The voice came from behind us with more than a hint of teasing mirth in it. When I turned, tightening my grip on the reins, the man I found was a bent little creature carrying a sack, smiling up at us both. I blinked; I was not used to looking down at men. \"The priests up there are assholes. Being kind to them is not a favor they deserve.\"\n\nBernard stepped between me and the man. \"Good afternoon,\" he nodded pleasantly.\n\nThe man eyed us. \"I've got a burden,\" he pointed out, nodding at the sack across his back, \"and you've got horses.\"\n\nBernard understood, nodding, his smile growing. \"You want the bag up there, or did you just want to get up there yourself?\"\n\n\"The sack is fine. Sand gets heavy.\" I watched as Bernard took the sack, which indeed seemed to be heavier than it looked. I cleared my throat.\n\n\"I'm Merewyn of Millow,\" I nodded down to him, \"and I need a place to piss.\"\n\nHe shrugged. \"There's a whole river for you, Merewyn of Millow.\" We watched as Bernard swung the bag high over his saddle. \"Unless your Norman friend has spoiled you. I suppose you need a place to sit? A wall? Perhaps lead pipes and a sponge for afterward?\"\n\n\"I'd squat right here,\" I snapped, \"but I think we're in trouble enough in this place already. I don't think the locals need to see me watering the street.\"",
        "The man nodded. \"You're carrying my burden, good lady, so I shall relieve you of yours.\" He smiled, broken teeth in a wrinkled face. \"Follow me. It's not far.\"\n\nBernard and I traded a glance as we meandered along the riverbanks behind the stooped little man, the squire at last striding up alongside him. \"So. We need a place to rest tonight. I don't suppose you know of anyone who has room?\" The man glanced up at Bernard. \"We've got a little money,\" he lied.\n\n\"What brings you here to Eyensbury with money?\" he asked with a braying laugh. \"There's money enough here, as your Norman friends will find out well enough once they decide to stir themselves from Coventry and come take us over.\"\n\n\"Where is Coventry?\" I asked.\n\n\"It's up thataway,\" he shrugged, waving his arm vaguely west. \"I was born there, but I've been here most of my life.\"\n\n\"I am Bernard of Guerville,\" the squire said quietly, obviously deciding it was time we found out who we were speaking to.\n\n\"Godric.\" They nodded at each other. \"Godric of nowhere, son of no one. I make glass down along Hen Brook.\" He jerked his chin ahead of us, to where the little river-lane sloped down a gentle slope. \"You can pee in the brook instead of the river, girl,\" he added over his shoulder.\n\n\"Whatever. I'm not particular.\"\n\nHe chuckled. \"I saw you two arrive, over the river. I'm no rider myself, but I will say this: you stood out a bit.\"\n\n\"See? I told you.\" Bernard had half-turned to give me a smirk. \"People always notice a beautiful young woman on a horse.\"\n\n\"It's not because she's pretty,\" the little man snorted, \"it's because my sack sits that horse better than she does.\" The two men laughed, my face reddening.\n\n\"You can both go fuck a sheep,\" I snapped, in no mood for mockery.\n\n\"I remember a time before I left Coventry,\" he sighed, looking wistfully down across the river, \"when I saw a really pretty girl on a horse. She was the wife of Earl Leofric. She stripped all her clothes off one day and rode a big cart-horse through the town.\" He shrugged. \"I forget what it was all about, but it certainly was fun to watch.\"\n\n\"The Earl's wife?\" I asked, suspicious. This couldn't be true. Word of an Earl's wife riding nude through a town should have spread far and wide. \"When was this?\"\n\n\"Oh... awhile ago. Godeve, she was called. She's still there, a thegn up that way, though I'm sure she's gotten quite old by now. And obviously, she won't be a thegn for long, now that your folk have come.\" He nodded at Bernard, though not unkindly.\n\n\"I don't know.\" Bernard glanced back at me. \"Most of the Normans are interested in profit. If she can help them make money, and doesn't make trouble for herself, they might not bother her much.\" He paused. \"Some of us are quite happy to be friends with you.\"\n\nHe shrugged as if it all had nothing to do with him. \"Leofric died, oh, perhaps ten years ago now, but she was quite a bit younger than he, as is often the way.\" He shook his head. \"Yes. She could certainly sit a horse that day,\" he cackled.\n\n\"A Norman lord is unlikely to have let his wife do such a thing,\" Bernard observed with a laugh, \"and I feel sure he'd have put out the eyes of any man who watched it.\"\n\n\"Well, I heard it was on his account that she did it.\" We stepped past a small hedge, enclosing a little smallholding: house, coop, and a curious skep-shaped building with a tall stone chimney. \"I don't know the details, but she was trying to spite him somehow. They say she was certain nobody would look at her, but of course we all turned out with wide eyes.\" He sighed. \"Great tits on her. Well. Welcome.\" He nodded toward a line of bushes and low trees at the far side of the holding. \"There you are, Merewyn of Millow,\" he grinned. \"Go on into those bushes and piss as much as you like.\"\n\n\"Thank you,\" I said dryly, dropping the reins as I hauled my skirts up to hurry across the bare yard. \"Most kind.\" Every part of me ached, yes, but nothing so much as my straining bladder.\n\nOn the whole, finding Godric seemed to be a lucky break. But Godric or no, I'd have pissed in that brook regardless.\n\n* * *\n\nThe men were sitting on benches around a fresh fire when I made my way into his low house. Night was already falling outside, and they seemed to be haggling over lodging for the night. As I sat down on the ground beside Bernard's bench, gathering my skirts about me, I frowned as I realized they were both speaking another language. I craned my neck irritably up at Bernard. \"Wait. What the fuck? Latin, too?\"\n\n\"A wise man knows many tongues,\" Godric chuckled, and once again Bernard gave me that I told you so look. \"A wise woman, too. You should learn, Merewyn of Millow. Your friend here says he's offered to teach you Norman, and the way things are going?\" He shrugged. \"I might just take him up on that myself.\"\n\n\"I insist you take our money,\" Bernard said in English now. He seemed a bit troubled. \"My horses will destroy your grass, so even if you say we're even because we hauled your sand, I still think we owe you. To be fair.\"\n\nGodric waved all this away. \"Your horses won't do anything my sheep aren't doing already. I'm telling you you're welcome in my home. Take it or leave it, Bernard of Guerville; either way, I'm working late in my shop anyhow. I've slept there before.\"\n\n\"Oh no!\" I protested. \"We'd never presume to take your whole house...\"\n\n\"I'm telling you, it's even warmer in there, once I get a fire laid. I have to sort out my sand and my ash for work tomorrow. The monks at the priory need their colored glass windows and their chalices,\" he went on, his voice going ironic, \"and I'm happy to take their money. So. It's settled.\" He spread his arms. \"My home, such as it is, is yours tonight. You can cook breakfast tomorrow, if you still feel you've a debt to pay.\"\n\nBernard sighed heavily. \"You're too kind, Godric,\" he said heavily, \"but I thank you.\" He glanced down at me. \"How're your legs feeling?\"\n\n\"Like shit.\"\n\nHe chuckled. \"I'll go care for the horses, then. You try to get some rest. I'd suggest lying on your back, on the ground, and trying to stretch.\" He shrugged at Godric, who nodded. \"She's a new rider,\" he explained.\n\n\"It showed,\" the little man snickered.\n\n\"That's not nice,\" I scowled.\n\n\"I don't have much to eat,\" he warned, \"but I'll share what I have.\"\n\n\"So will we.\" Bernard got to his feet beside me. \"We brought provision as well.\" He nudged my hip with his foot. \"You heard me, beekeeper. Lie down by the fire and stretch out.\"\n\n\"Kicking me is not a way to make me feel better,\" I sniffed up at him. He just laughed as he went out to see to the horses.\n\n* * *\n\n\"You're being silly,\" I told Bernard. \"Get into the fucking bed.\"\n\n\"I'm fine on the floor.\" He spoke with the stilted dignity of a man unhappy to be making a sacrifice, but wanting to be seen to be happy about it. \"I'm a squire. I'm used to nights without a bed.\"\n\nI sighed loudly. Godric had left us half an hour before, insisting we were to treat his house as our own, and ever since then we'd been bickering about stupid shit. So, in other words, treating his house as our own; my father was always bickering with his wife, I was always bickering with my sisters and brothers, and I was not about to let Squire Bernard make me feel guilty about lying on Godric's bed.\n\nThe house was smaller than my family's, but then six people shared the two beds in Millow. Here, there was (presumably) no one but Godric. And me, alone in a bed for the first time in my life. \"Come on. Don't be a martyr.\"\n\n\"You need your rest, beekeeper. Your body needs to recover from the ride. Stretch out.\" He sniffed from the darkness of the floor, the fire at its lowest sullen crackle. \"Besides, I have no wish for our host to come in and find us in bed together.\"\n\nI snorted. \"What does that mean?\"\n\n\"I think you know.\" He sighed and then I heard his blankets shift in the dirt. \"Men and women, sharing beds. Do I need to explain it to you in a community like this?\"\n\nI laughed. \"Spoken like a man who's grown up with more beds than I did. A 'community like this' is full of people who grew up cramming in with their brothers and sisters.\" I sat up, my hips feeling much better after my careful stretching by the fire. \"Look, Bernard, if you don't come up here, I'll come down there. It's silly for you to be uncomfortable. And cold, too. Nobody cares if you and I share a bed, least of all me. Remember when you were so worried about you and me coming back out of the forest together, when you shot that deer?\" When you saw me cum? \"I told you: nobody cares.\" I patted Godric's thick blankets on the straw mattress. \"So. Get into the fucking bed.\"\n\nHe sat up in his blankets, his eyes shining in the coals of the fire. We'd gotten ready swiftly once Godric had left us, me hesitating just a moment before I'd taken off my dress and leggings and smoothed my shift over my body in the low firelight. He'd lain down fully dressed but for his shoes, not without a curious glance at me as I'd taken off my shawl. But of course: it was the first time he'd seen my hair. \"You're sure?\"\n\n\"Don't make me come down there, Squire Bernard.\"\n\nIt came then, that smile of his that was never very far away. \"If I was as devious as those priests up the hill thought I was,\" he reflected, \"that's exactly what I'd do. Then I'd leave you down here and take the bed for myself.\"\n\n\"When, in fact,\" I muttered, smiling back despite myself, \"you just want to help me. To live at peace with me. Like the way you took England.\" I rolled my eyes, hoping he could see it in the low glow. \"Start by coming to bed, Bernard. I insist.\" I scooted over in the blankets, pressing my body against the wood of Godric's wall. Most of his buildings were wattle, but this one was stout and snug and as comfortable as he could make it.\n\nHe scrambled to his feet and stood there in shadows, looking uncertainly down at me. \"I suppose I should take my leggings off?\"\n\n\"I'm so tired it's not going to matter,\" I yawned. \"Don't you want them to air out by the fire?\" I frowned. \"I mean, you people do stink, but if you're sharing a bed with me, I'd rather you at least make an effort.\" I was enjoying this. He had always been so very easy to needle, the fun of talking to him spiced by the nagging awareness at the back of my mind that there was something somehow wrong with me flirting with an invader.\n\nI was quite certain I should not be inviting him to my bed. And I didn't care.\n\nI watched as he reached under his worn tunic and fumbled with his leggings, undoing the ties. The Normans wore tunics a bit shorter than Englishmen did, and cut closer to the body; I wondered darkly, wickedly, if his falling leggings would show me the head of his Breton penis dangling beneath the tunic hem.\n\nThey did not.\n\nHis bare legs flickering in the coal-glow, Bernard sank down onto the mattress. \"You don't have to scrunch all the way over,\" he said somewhat reproachfully. \"You've insisted I join you; the least you can do is not treat me like a leper.\"\n\n\"Calm down,\" I snapped, wondering if he could tell that my heart was beating faster; for, whether I'd been lying to myself or not, this was not just another time sharing a bed with someone. This was all so unexpected and, perhaps, even sinful. Definitely it was more than a little naughty. I resisted looking to his legs, or between them. \"I'll let you get settled, then I'll adjust. You're an old man; you need your rest. I can make myself comfortable almost anywhere.\"\n\n\"Yeah,\" he muttered, pulling the blankets over himself. He'd left his own on the packed earth of the floor. \"So?\" he asked lightly, the bedropes creaking beneath us. \"Do I stink?\"\n\n\"Like leather and horse,\" I sighed, \"but I've gotten used to it.\" I shifted, settling myself on my side a bit closer to him. Godric's bed was not terribly wide, but it was wide enough; as a girl, three of us had squeezed into something even smaller. I could feel the heat off his body under the blankets. \"I'm sure I smell almost as bad,\" I allowed.\n\n\"Worse,\" he said, after a pause.\n\n\"No.\" I hesitated, then pushed gently against him. The bed was big enough that I didn't need to. But I wanted to, and that surprised me a great deal. I decided in that moment that I shouldn't think too hard about it; I wanted it, and that was enough. So I curled my body against his, because you have to take your pleasure where you can find it in this world. His smell swirled around me now. \"Almost.\" When he chuckled in reply, I could feel it rumbling through his ribs and into mine. Shyly, I looked up at his shadowed face. \"You were smart to come up into the bed.\"\n\n\"I'm not as sure as you seem to be.\" His arm, pressed against the mattress under my body, gave a convulsive push; I understood he wanted to put it around me, so I let him. His hand found my hair, my face resting on his upper arm. \"I'm not sure I was smart to even take you with me on this errand, to tell the truth.\"\n\n\"No,\" I agreed after a few seconds, for I was starting to feel the same way, \"but yet here we are.\"\n\nI felt his fingers in my hair, twirling it. Making elflocks. \"I was impressed by you today, beekeeper,\" he admitted.\n\n\"It's Merewyn.\" I was almost whispering now, we were so close. His breath smelled like the cheese we'd brought, which we'd shared with Godric. It was cheese I'd made myself, and when the men had praised it, I'd glowed. It thrilled me now to smell it on his breath, to know I'd fed him. \"As you well know.\"\n\n\"Merewyn.\"\n\n\"What could I possibly do that would impress such a seasoned soldier?\" I teased. My hand flexed on my hip, impatient: I wanted very badly to touch him. The time wasn't yet quite right, but it soon would be. I could feel it.\n\n\"You rode all day without complaining,\" he smiled. \"Most new riders complain.\"\n\n\"I never complain,\" I murmured back, \"unless my bees sting me.\"\n\n\"Yes?\" The low light showed his eyebrows rising. \"They sting you?\"\n\n\"I told you they do. Then we had a long discussion about French, and you made a pun about me being pricked.\" I listened for his reaction, for a scoff or a gasp or a sigh, and I heard nothing. So I pressed on. \"As you know, I've been pricked before.\"\n\n\"You're a sinful girl,\" he agreed mournfully, his fingers raking more quickly though my hair. \"And with no priest to keep you in line. Nor any husband.\"\n\n\"I told you.\" I could hear the huskiness in my voice, and I knew that now was the time: my hand found his chest through the fine wool of his tunic. \"I don't wish to settle for men around Millow, squire.\"\n\n\"But there are new men around Millow now, beekeeper.\" I could hear the smile in his voice even without the orange glow on his teeth.\n\n\"Merewyn,\" I whispered, my hand slipping over his belly. Lower. We were both breathing deeper now, and in unison, but his hand locked suddenly around my wrist. \"What is it?\" I asked into the sudden, heavy silence.\n\n\"We shouldn't,\" he whispered, but he still smiled.\n\n\"No,\" I agreed, \"but we are sinners.\"\n\n\"Still.\" He paused, his chest rising and falling; I could actually hear the air there, we were so close. \"I shouldn't.\"\n\n\"Shouldn't... what?\" I felt my own lips curl up, my grin triumphant. I was too far along now, growing determined instead of simply curious. \"Shouldn't... be getting hard for a young English beekeeper?\" I giggled, my fingers twitching at his tunic, down near his navel. \"Is that it?\"\n\n\"I knew, that day by the ash tree,\" he nodded, \"that you'd be a problem for me.\"\n\n\"Someone recently told me I'm a sinful woman,\" I murmured back. There was a roughness now at the edge of my voice, the same way I'd gotten with Thurgis and with Edmer before him, when my body could no longer handle the way I was holding it back. \"That I need a priest. Or a husband.\" My hand wanted to continue, to reach down and hold him: I knew exactly what I would find down there.\n\nAnd, God help me, I wanted it.\n\n\"This is unwise,\" he mumbled back, but without any real conviction.\n\n\"Then move my hand, Squire Bernard.\" His fingers still twined themselves in my hair, comforting. \"Move yours, too, while you're at it.\"\n\nHe laughed now, a low gurgle. \"Which way?\"\n\n\"That's for you to decide,\" I whispered. \"You're my overlord now, right? Sort of?\"\n\n\"I'm lord of nothing,\" he insisted. \"Not even my own body, apparently.\" He decided then, pushing my hand where I wanted it: down along the corded muscles of his groin, to where I felt his long, hard penis pressing up under his tunic. My fingers closed around it as if it was made for them. \"As you'd have found out, eventually.\"\n\n\"Yes indeed,\" I gloated, \"so why were you waiting?\" I took the lead now, reaching low to pull up his tunic, desperate to feel his flesh. He groaned as my hand closed firmly around his warm, hairy balls. \"See? Isn't this better than lying on the cold floor?\"\n\nHis fingers had tightened on my scalp. \"I should listen to you more,\" he sighed. \"I am new to your country and its customs. And its rather eager women.\"\n\nI giggled. \"It appears, squire, that a cock works the same way in France as it does here.\" He was already trembling as my fingers trailed up along his length, feeling taut flesh and thick, eager veins. \"How long has it been, Bernard?\" I wasn't giggling now; I'd gone serious, my hand enjoying him, thrilled that he was enjoying me too.\n\n\"Since I've had a woman?\" He stared up at the thatch, pondering. \"It was here in England. Before the big battle, down by the coast.\" He shrugged. \"October. A maid we'd brought with us from Normandy.\"\n\nI raised my eyebrows, my hand never stopping its slow, feathery travels up and down his cock, flitting over his balls. He'd opened his legs slightly. \"So you've never had an English girl?\"\n\n\"You forget,\" he chided gently, \"I spent almost a year here, before. When I learned your language.\" He gasped as I jerked him, just below the swollen head, working by feel. He was a thick one, girthy. Brutal. \"I learned other things, too.\"\n\n\"Not enough, apparently,\" I giggled, \"or you wouldn't have even thought about the floor.\" I closed my palm completely around him, squeezing hard. \"So. Since October.\"\n\n\"Since October,\" he groaned. His hips had begun moving, almost imperceptibly, fingers still tightly woven in my hair. \"You're going to make Godric's blankets all messy, beekeeper.\"\n\n\"No I won't,\" I purred confidently. I loved this, this power I had. It was what I'd loved about Edmer too, and poor Thurgis. I was Bernard's world now. I was everything to him, and it made me feel good. If it felt like sin, it wasn't the sin of lust: it was the sin of pride. And I didn't mind it any more than he did. I released him, my touches gentle again, like a feather once more. \"I would never be so rude to our host.\" I pulled his tunic high, my hand running over his abdomen now, the hair of his chest. \"I have a plan.\"\n\nI'd never touched such a hairy man. It reminded me he wasn't young, that he was a man of experience. That he deserved the pleasure I longed to give him. I leaned up, my face moving to his chest, entranced by his warmth, his strength, his smell; the low orange firelight showed me scarred skin as my lips reached out, kissing his nipples. He groaned again, his body sagging against the mattress as, again, my hand crept down to cup his balls. \"Fuck,\" he sighed, and there was a warning in it.\n\nHe would not last long.\n\nI thought about stopping, pulling back, teasing him. Letting him enjoy me as I was enjoying him, but my brain was melting by then, my lips tasting his sweat. I was too far gone. Quickly my fingers curled around the hairy nest where his cock pulsed, rooted to his body, squeezing him there as I swept tongue and lips downward, underneath Godric's blankets, my hair a veil across his body.\n\nI huddled over him in the close, warm darkness, ignoring the ache in my thighs, my tongue darting out by feel to finally, wondrously, taste the head of his penis. I came away salty, the thick fluid there coating my tongue, and he groaned once more as I went back down onto him, around him, engulfing him, my mouth opening wide to devour him.",
        "I sucked hard at once, my hand creeping again over those balls, toying with the skin there as his erection trembled majestically against my flattened tongue. He tasted rich, manly, altogether delicious as he arched his hips more, driving up against the back of my mouth: God, he was thick! I worked my throat, swallowing desperately, hoping he'd feel it against that smooth, tasty head I strained to wedge deeper, my throat bobbing.\n\nI gave him everything I could. Everything I hoped he needed.\n\n\"Fuck!\" It was a cracked, seething moan this time, the warning even clearer, and I left a sheen of spit along his shaft as I backed off, my lips tightly sealed around his penis just below his head, his flavor filling me as I waited under the blankets until he could hold back no longer.\n\nAnd when he came, he came with a power and force I never would have imagined. I'd never drank Thurgis' seed, and only once with Edmer, so when he spurted hard into my mouth I struggled to keep up with the sudden cloying thickness of it. He jerked hard against my tongue, his balls dancing between my fingers as I choked down the strongly jetting spurts that filled my mouth again and again, but I was overjoyed to find that once the first crisis passed, I could handle it.\n\nHis splendid, taut body relaxed slowly, so slowly, beneath my hands and my tongue, and I felt that wave of giddy pleasure that came whenever I pleased a man. I was exultant. I was what he needed. I was his, for that time.\n\nAnd so it was that I, Merewyn of Millow, sucked Bernard's cock dry like some dirty little fucking harlot.\n\n* * *\n\n\"Father Felix once said it was all right, for a woman to suck a man's penis,\" I assured him. He paused, his hand drowsy on my back.\n\n\"This... Father Felix. He sounds like no priest I've ever met.\"\n\n\"Well. He was answering a question from my brother at the time.\" I felt so tired now, whispering in the shadows from my cum-scented mouth as the fire burned low and the squire held me against him. \"Osgar. He wanted to make sure he wouldn't go to hell if Mildrith sucked him. She was mortified,\" I giggled, \"but they apparently didn't listen, for she's pregnant now.\"\n\n\"Pricked.\" He was gentle with me now. Affectionate, even. \"You said it's never more exciting than when you get pricked.\"\n\nI felt warmth rise in me, and not the warmth of the blankets, nor even of his body. I took a deep breath before I answered. \"As you might find out for yourself, Squire Bernard.\"\n\n\"I'll pray for that,\" he replied coyly.\n\n\"God,\" I snapped, \"won't have anything to do with whether you get my pussy.\" We both chuckled at the blasphemy, low and comfortable, the chuckle of lovers falling slowly, inexorably, into sleep.\n\n* * *\n\nI ran into Godric as dawn broke the next morning, him walking toward the brook as I returned up the slope with two full buckets of water. \"Good morning, Merewyn of Millow,\" he nodded. \"I trust you passed a pleasant night?\"\n\n\"Of course I did, Master Godric,\" I nodded courteously. \"Your generosity is much appreciated. Are there more pails? I'll fetch more water.\"\n\n\"That's good of you!\" he beamed. \"My workshop has some, in the nook by the furnace. Only,\" he grinned, cupping his groin crudely, \"mind you get the water from upstream. I've a need to take a rare piss.\"\n\nI laughed. \"Don't let me stop you then.\" I shivered slightly, tightening my shawl around my hair. I'd left my leggings inside. \"I'll make Squire Bernard prepare breakfast for us, and then I suppose we should ride away soon.\"\n\nHe nodded sagely, watching me walk. \"You're in agony.\"\n\n\"I am,\" I smiled, \"but such is God's plan, I guess.\" We shared a secret smile at that. It was the sort of thing you said when you were mad at God, which of course you couldn't say.\n\n\"I spoke with Bernard just now,\" he called over his shoulder. \"He might have something to discuss with you.\"\n\n\"Oh, I'm sure he will.\" I'd woken with a sore body and the taste of Bernard's cum in my mouth. Sometime in the night his hand had found its way beneath my shift, and when I opened my eyes I felt his fingers on my bare ass. I let myself smile now, wondering whether he'd touched anything else as I slept.\n\nThe thought thrilled me, darkly. Sinfully.\n\nUp the slope the big church already had lights in the gateway, the whole village bustling awake. It promised to be a warmer day: there'd been no ice in the brook when I'd filled the buckets, anyway. It was Monday, the feast day of St I-Cannot-Remember, certainly nobody important enough for Felix to have taught me. Tomorrow was St Ethelwald, I thought, and then Ermengild, and finally Valentine; I glanced at my unblessed skep as I trudged to the house with my pails, sighing. I set them down and knocked on the door. \"Are you decent?\" I asked loudly, not bothering to wait for an answer before barging in.\n\n\"Not that you'd mind.\" He grinned up at me from down among the ashes, stoking the fire back up. \"Good morning.\"\n\n\"Good morning, Squire Bernard.\" I dragged the buckets inside and kicked the door shut. I leaned back against it, looking down at him with a slow, knowing smile. We stayed that way a few moments, remembering, thinking about our new reality. \"I trust you passed a pleasant night?\" I mocked.\n\nHe laughed as he poked at the fuel. \"Very interesting.\" He glanced back up. \"Godric had a suggestion. He said we should stay through the morning, that there's no need for us to go all the way to Woolley. That there are priests much closer.\" He hesitated. \"He did not suggest we go back up to that church again.\"\n\n\"Ah.\" I squatted down, my hips screeching, and poured some of the water into a basin. I started to wash. \"He mentioned you might have something to discuss with me. So... how are we supposed to pass the morning?\" I looked back at him, spluttering, my eyebrows raised.\n\n\"Well, he made the suggestion after I asked him some questions about his shop. The glass, you know.\" He shrugged as the fire blazed up. \"He's invited me to see what he does.\"\n\nI chuckled. \"While I lie about like the lady of the manor?\" It had never occurred to me that I could spend a morning lying in bed, ever. \"God hates idleness and sloth, Bernard.\"\n\n\"God hates a great many things, I notice.\" He hopped to his feet, dusting his hands on his pants. I saw his glance shift toward the bed. \"Your, um, your plan? It worked.\"\n\nI peered up from my basin. \"What the fuck are you talking about? It's still early. I can't handle hints yet, Bernard.\"\n\nHe winked. \"Godric's blankets. I did not make a mess.\" He looked at me quietly until I got it, at which point I felt myself flush. \"Well done, beekeeper.\"\n\n\"Thank you, squire.\" I once again felt that sense of pride, that awareness that I'd pleased him. \"My plans usually work.\" I held his gaze as I reached beneath my skirts and lifted a palmful of water to my cunt, gasping as the cold liquid hit my skin. He rolled his eyes as I scrubbed with my fingers. \"Toss me my leggings, when you get a chance?\"\n\n\"You went out without them?\" He gave a low whistle. \"Merewyn, you needn't learn my language to be a pervert. I fear it has already happened.\"\n\nI giggled. \"It's not very cold this morning, and I had to pee anyway.\" He knelt by the fire to prepare breakfast as I stepped into my pants, pulling them up beneath the skirts.\n\n* * *\n\nBy noontime, I was getting apprehensive.\n\nIt was a fine day, clear and lovely and not very cold at all, and I was experiencing an unfamiliar sensation: I was bored.\n\nThe lot of a manor girl in Millow is that there is always, always something to do. You are mucking out the pigpen. You are gathering eggs. You are repairing bee-skeps. You are tending the kitchen garden. You are spinning, always spinning, forever spinning to make the yarn to weave your clothes, your hats, your bedstead.\n\nBut I had not brought my spindle. In my mind, my errand with Bernard would be a dramatic dashing gallop over hill and dale, dawn to dusk, with no time for anything except haste. What I did not expect was to be cooling my heels in the prime of the morning at the quiet holding of an odd little glassmaker.\n\nI did what I could, certainly. I made sure his sheep and our horses weren't wallowing in their own filth, and I scattered grain for Godric's chickens, and I plucked some turnips that looked ready. I tended the fire and I kept fetching water. I sponged off his house, the bed and the chest and the walls. And still, I was bored.\n\nNow I sat on a bench outside Godric's door and gazed out at the afternoon. Men and women passed to and fro along the river lane below. At one point a trio of horsemen rode by, obviously Normans, but they didn't stop and no one seemed interested in them. Other than that, it was a lazy English February morning: the birds continued to search for their mates, the broad river rolled past, and always and forever my thoughts went back to my bees, stirring at Millow, needing St Valentine's blessing.\n\nI sighed. This was not going quite as planned. I stretched my arms high, feeling my hips and thighs un-knot, still not looking forward to riding any further today. Even if Woolley was further off than we needed to go, Godric had mentioned a place called Buckden. \"There's another priory there,\" he shrugged, \"or there used to be. Should be crawling with priests.\" He'd looked up from his bread at breakfast. \"If you don't mind my asking, why do you need a priest anyway?\" He'd nodded once I explained about the bees. Thurgis. \"So. All you need are some prayers? An indulgence?\" His face had taken on an odd, faraway look. \"Sounds simple enough. You barely need a priest at all,\" he'd chuckled.\n\nNow I heard that chuckle again, coming closer, so I turned to catch Bernard and Godric coming from the furnace. \"We leaving soon?\" I asked pointedly.\n\n\"Look what your squire made!\" Godric held out his arm as he reached me, holding a little palm cup with an uneven shape and an odd bulge on one side. I arched my eyebrow.\n\n\"I don't have much to do with glass,\" I admitted, being more of a horn-and-wood kind of girl, \"but from what I've seen? This looks like shit.\"\n\nThe glassmaker chuckled again, leaving a prim Bernard to sniff down his nose at me. \"I don't claim to be any good, Merewyn,\" he muttered.\n\n\"Mmhm.\" I took the cup, still warm from the fire. \"That's just as well,\" I told him at last, \"because you're not.\"\n\n\"See?\" Godric winked. \"English women are honest.\"\n\n\"We leaving?\" I asked again. \"I didn't like riding yesterday; I suspect I'll like riding in the dark even less.\"\n\n\"See, I think he has a certain talent,\" Godric burbled on, ignoring me. He took the cup back. \"You should have seen my first piece of work. It came out all scorched, and my hair caught fire.\" He sighed and took a seat beside me. \"It's going to be a good time to make glass,\" he observed, squinting down at the river lane. \"I've been in Normandy, long ago. As your Bernard will tell you, they build a lot of churches.\"\n\n\"A lot of churches.\" The squire took an unceremonious seat on the ground on the other side of me, his back to Godric's house. \"They sin a lot, so they build churches to pretend the sins don't matter.\"\n\n\"Maybe they don't,\" I muttered, glancing down at him in mute appeal. I wanted to get going. This place was nice enough, but it wasn't where we were going to find what we sought.\n\n\"Oh, they do, you little heretic,\" Godric assured me. \"God sees everything. He weighs every sin. But his churches also use a lot of glass, so... Normans? Churches? Glass?\" He clicked his tongue. \"Good business ahead. A man could do worse than to become a glassmaker, especially if he's all done with other things.\" He leaned down to glance across me at Bernard. \"Soldiering, say.\"\n\nThe squire laughed. \"I don't think my lord of Eu is going to build a cathedral in Millow.\" He yawned. \"And I might be too old to take up a new trade.\"\n\n\"Nonsense.\" Godric stretched out his short legs. \"I was almost fifty when I took this up. Just a few years ago now, no more than ten.\" He laid a finger alongside his nose. \"This isn't my first trade, either.\"\n\nCurious, I looked over at him. \"You don't say.\" I wagged my head back to glance at Bernard, who simply returned a smug smile. \"What else have you done, Godric?\"\n\n\"You've not wondered why I'm so happy to take money from those assholes up the hill?\" the little man replied, jerking his head back toward the church. \"Or why I know Latin? Or why your Squire Bernard here is not really in a rush to leave?\" I felt my pulse quicken, my throat go dry. \"There was a time when I was Brother Godric, of St Neot's.\" He patted my hand as I felt my mouth fall open. \"You don't need to go find a priest any longer, Merewyn of Millow. You already have, you see.\"\n\n* * *\n\nIn the end, we needed to force him to take our silver. \"This is why I didn't make a good monk,\" he sighed. \"The important thing is the prayer, not the silver. Priests, not God, sell indulgences.\"\n\n\"But it's not God I need,\" I told him, pressing one of Sir Geoffrey's pennies into the man's palm, \"it's St Valentine. And I'm sure he could use the money for something?\"\n\nHe'd laughed at that, saying he'd use our silver as alms for the poor. \"At the chapel by the river,\" he'd added firmly, \"not up at St Neot's. They'd just keep it.\"\n\n\"They didn't want it yesterday,\" Bernard said sourly.\n\n\"No, not from the likes of you.\" Godric shrugged. \"That's the thing with the priests there: they've developed some queer ideas about God. They owe allegiance to the Bishop of Ely, and he's a very long way away. And some people do better when their thegns are nearby. You know?\" He studied my skep, frowning. \"Fascinating. You made this?\"\n\n\"Yes.\" I handled myself less casually around Godric now that I knew who he'd been: hands clasped chastely at my waist, shawl pulled tight. Head bowed. \"It's my humble offering to God.\"\n\n\"It's nothing of the kind. It's a way for your family to survive,\" he shot back, \"and that's honorable enough.\" He stroked it, running his fingers over my wickerwork. \"I'd dare say, Merewyn, that if the bees in here do well, it will be thanks to your hands, and not my prayers.\"\n\nI flushed. \"Thank you.\"\n\n\"Still. You asked for a prayer, and a prayer you shall get.\" He eyed us both shrewdly. \"This other matter, of the murdered boy... Well. It's less simple, you understand.\" He shook his head sadly. \"Many priests will tell you that an indulgence would buy the lad's way to the side of God, but I don't believe it. The best I can do, and will do, is pray for the peace of his soul.\" He smiled. \"And I will take his uncle's silver for that too, though not as an indulgence. I'll give that as alms, too, and then his spirit will know some good came of his death.\"\n\nI felt tears start, and fell at once to my knees. I had no way to thank this man. \"Father...\"\n\n\"No,\" he said gently, \"just Godric.\" He nodded up at Bernard. \"And you shall both stay the night here too, then be on your way tomorrow with a lighter heart and all your prayers said. And in good Latin, too, though it's been awhile.\"\n\nHe nodded, beaming. I felt his firm hand on my shoulder. \"We're very grateful, Godric,\" he murmured. \"His family will be pleased.\"\n\n\"If not blessed.\" Godric smiled ruefully. \"Well. Why don't we get this overwith. What did you want me to say to St Valentine?\"\n\n* * *\n\nBernard, predictably, needed no convincing to join me in Godric's bed that night.\n\nHe stretched his arm out toward me, this time naturally, taking it for granted that I would curl back up into the crook of his armpit. And, to be fair to him, he wasn't wrong: I moved smoothly against him, breathing him in. Feeling his warmth. My own hand found his chest, bare tonight: he'd come to bed naked. \"Your hand was on my butt when I woke up this morning.\"\n\n\"Well. It's a nice butt, young and pert.\" His chest hair in the low, flickering firelight enthralled me as my fingers toyed with it. \"Surely, you can't blame me.\"\n\nI giggled. \"The woman you had. Down south, before the battle? The one who came with you from Normandy?\" Shyly, I pressed my cheek against his ribs. \"Was her ass young and pert? Or was she an elderly, worn-out bag of bones like you are?\"\n\n\"She was young. But not like you.\" He leaned across and kissed my forehead, sighing. \"I enjoyed this morning. With the glass. I... would like you to have been there. Sharing it.\"\n\n\"Really?\" I perched myself up on my elbow, grinning down at him. \"What's this? A brave, scarred warrior from Brittany, thinking about settling down by the river and messing around with glass?\" I tweaked his nipple. \"Raising little glassmakers?\"\n\n\"Or?\" He raised an eyebrow. \"Little beekeepers, perhaps...\" and a surge seemed to lift my whole body, warm, even euphoric. It felt better than the pride I'd taken as he'd cum last night, better than poor Thurgis' mouth on my pussy. Even better than Edmer, fingering my asshole that one time... I felt my lips purse into a new kind of smile, a sharp possessive little smirk.\n\n\"My,\" I winked, \"you're saying all sorts of interesting things these days,\" and then my smirk was melting softly onto his mouth. Our lips opened and, without warning, his insistent tongue invaded my mouth. I sucked it eagerly in, tasting him, loving the closeness I'd found with him.\n\nIt was, I realized suddenly, a closeness I didn't want to lose.\n\nHis arm pulled me close, crushing my body against his as his other hand found my shift, pulling it up. He caught a faint look of surprise on my face as I pulled back, my chin coated with his spit. \"What is it?\" he whispered, working on my shift.\n\n\"It's just... I've never kissed a man without a mustache before,\" I confessed. \"It feels odd.\" He kept pulling and I let him, wanting him to have me, longing to give myself to him. \"Good, though.\"\n\n\"Well. I should hope so,\" he muttered as I raised my arms. It felt like the most natural thing in the world to be naked with this man, my body preening along his as I surrendered to a powerful urge to make every part of me touch every part of him. I was still feeling the giddiness of my flesh touching his when he turned toward me and kissed me again, passionately, deeply, with his legs touching mine and his hand grappling my bare breast, his cock a solid, hard bar against my belly as we met and folded our arms around each other.\n\nFrom the start, he was different: snoother, gentler, calmer than the starving Edmer or the enthusiastic Thurgis. He was confident, with a sense of control I'd never known before, a sense brought by his age and his obvious desire for me; the fire swam in eyes that looked hard at me, penetrating me as his tongue had penetrated my mouth. Looking into my heart and wanting what he found there.\n\nI trembled. Like a virgin maiden, I shook in his arms, violently, overwhelmed by my need as he clasped me to him, my face buried in his neck. He was muttering to me in French, words meant to soothe, to calm me, and I smiled without even knowing what he was saying. I raised my leg onto his, my foot slithering up past his calf, over his knee, to hook behind his thigh with our bodies tightly woven.\n\nAnd all the while, we breathed together. His eyes were waiting for mine when I looked up at him at last, our fingers caressing each other. I felt scars along his back, his sides, and I know he felt none of that on my own skin. I was struck, suddenly, that all the wisdom and experience I thought I'd collected was nothing compared to his.\n\nI kissed him again, my lips darting up, and then his fingers were curving around my thigh, up to my butt, digging underneath.\n\nHe plunged so easily inside me, my cunt wet and swollen for him, his fingers reaching deep. We shared a gasp, my hips already swinging along his body as my foot clamped his ass. He backed away slightly, angling out away from me for an instant, and then there it was.\n\nThat thick, hot penis of his was suddenly dipping low between my legs, his smooth head nudging inside my cunt already. I giggled into his mouth. \"You aren't wasting time, Bernard,\" I cooed, that ragged huskiness around my throat yet again. I shifted slightly, hiking myself up his body, seeking him, that ultimate contact. I wanted his cock inside me.",
        "He nodded, his thumb plucking at my nipple, sending ripples of lust through my mind. \"I take my pleasure where I can get it, beekeeper,\" he grated.\n\nI laughed at that, and I'm not sure what came over me: for the last time I took over, pushing him to his back while I pivoted up on top of him, letting my breasts graze his chest as I poised myself over him with his head still wedged just inside. \"I've told you,\" I chided, \"call me Merewyn.\"\n\n\"I'll call you what I wish.\" His hands found my hips, both of us teasing ourselves, feeling our bodies crave each other.\n\n\"You'll call me Merewyn before this night is done,\" I promised him, my eyes wide and wild as I pushed myself up off his chest, driving myself back and down; I sank smoothly onto the thick pole of his cock like it was made for me, its girth filling me, profoundly tight. Endlessly satisfying. When I looked down in wonder I saw his hairs and my hairs merge, tangling as I took him fully inside. I let out a long, ragged sigh. \"I swear it.\"\n\n\"Fuck,\" he grunted, his head sinking into Godric's pillow. I saw his eyes flutter back into his head a moment, and once again my heart felt that triumphal pang as I knew I could give him what he wanted. I settled onto him, my fingers resting on his belly, feeling him flex inside me. His eyes devoured me, so I reached high, my hands tossing my hair aside, arching back. \"Merewyn,\" he gasped.\n\n\"That's right, Bernard.\" I hardly recognized my voice, my hips hunching; there was still a bit of soreness there, but the day's rest had done me a world of good. \"That's my name.\" He said something in French then, his face transformed: he was no longer a squire to a Norman knight, invading my home. He was just a man, carried by his lusts deep inside a willing young woman, and I could see he was besotted. \"Oh God!\" I almost sobbed it as he bucked suddenly, the bed-ropes protesting, jabbing deep inside me.\n\nIn an instant I was collapsing onto the hard mattress, shoved roughly off onto my back as my squire scrambled between my open thighs and held himself above me, staring down with a feral lust that shocked and thrilled me in equal parts; I'd barely had time to become aware of my empty cunt before he filled it once more, drilling hard and far, his muscles straining as he pierced me.\n\nI surrendered at once, spreading wide, willing him to plunge deep. I was his, completely, his to plunder and possess, and I hoped my eyes were telling him so. He gasped into my face, bestial, his body sawing into mine with long, eager strokes, both of us flying far away on our lusts.\n\nNever had I felt such a splendid cock, perfect for my greedy hole: he filled me perfectly, stoking the fires inside me like never before. I felt myself losing control of my mind and body, and I embraced that, seeking that release. I didn't want control: I wanted him to have me, and in the moment I understood that? I felt his sweat and smelled his skin and took his cock and let myself go, my nails tearing into his back as my hips thrust mindlessly upward to meet his.\n\nIt was going to happen. I was going to cum.\n\nHe pulled my climax out of me like a man pulling a well-bucket, only mine was a bucket that never seemed to empty no matter how much he pulled. I heard a sick, wild moan from my throat, more of a sob really, my body catching fire from within and burning me out with a white-hot fire that left me deliciously, gloriously empty, cunt in spasm, mouth panting sharply. I felt my whole body tense around his smoothly thrusting cock, then relax in a bliss that left me dreamy and loose beneath him.\n\nHis eyes sharpened when he saw what he'd done to me, and he sped up, pinning me to Godric's bed, driving hard toward his own release. I was nodding wildly, still moaning, and there was one clear thought remaining in my brain:\n\nI wanted Bernard, the squire from Brittany, to give me his seed.\n\nI locked my heels around his ass, dimly feeling the muscles there, my back curling to angle my hips up, to take him deeply. He was gasping into my face now, his mouth grimacing, so I laid my long fingers on his cheek and held him there, staring into his eyes, wanting to see what he looked like in the moment he made me his own.\n\nFor the first time, I let a man empty himself inside me. I craved it in the moment and I did not regret it afterward, the quick surge and lift as his cock went rigid and then twitched, wondrously, the warmth of him flooding my cunt. I watched his face go slack, a man captive to what my body was giving him, and as I craned my neck up to kiss him once more he was still thrusting, slick now, our bodies' motions greased with his cum. We breathed hard and deep, faces overjoyed as we slowly, so slowly, relaxed.\n\nMy hair stuck to his sweat as he rolled wearily off me, our faces and bodies coated with each other. I looked shyly down at my bush, seeing the drooling line of white he'd left there as he pulled out. I found myself laughing, and after an instant, he joined in. \"So.\" I lay back, panting, my pale slim body blotched and mottled with the flushes of the pleasure he'd given me. \"Glassmaking...\"\n\n\"I'm sure this place could use a beekeeper, too,\" he mused, kissing me again. Still odd with no mustache, but I knew I could get used to it.\n\n* * *\n\nAnd so it was that I rode south with Squire Bernard of Brittany, back to the land I knew. For a little while longer, at least. Above me, as the horse sloshed along the spring-spated river lane, I spotted a bird. It flapped over to a tree while I watched, hopped along a branch, and stood there as if waiting; and, indeed, just as the horse carried me past the tree, a second bird landed.\n\nThey'd found each other.\n\n* * *\n\nI hope you enjoyed reading this; I certainly did enjoy writing it. Anna Powell-Smith's Open Domesday website was of inestimable value to me, and I spent many happy hours using the site to tour 11<sup>th</sup>-century England.\n\nAnd yes. Godeve of Coventry is Lady Godiva. She was real, and she was indeed alive at the time this story takes place. I've also updated many (but not all) of the place names from how they're written in Domesday, so that you can street-view these places if you've a mind.\n\nMake sure you read all the Valentine's Day contest entries, and vote up your favorites!"
    ],
    "authorname": "Voboy",
    "tags": [
        "saxon",
        "medieval",
        "older man",
        "younger woman",
        "england",
        "knights",
        "priests",
        "norman conquest"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-smell-of-horse-and-leather"
}