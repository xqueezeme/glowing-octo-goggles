{
    "title": "Egg Ch. 05",
    "pages": [
        "Jacob sat on the edge of his parent's bed trying to understand everything in his world. The pod was gone now, dissipated into dust just like Billy and the tentacles that once spread across the room. In fact, now the room looked no different than before she had shown up. And he did mean she now. \n\nHer sex was undeniable now. A difference cemented by the full female form with body. Her curves screamed \"milf\" and he had trouble understanding why she chose such a voluptuous form. Not that he found her unattractive, but it seemed to be unmatched to women his age. \n\nRight now, she was using the shower in his parents room. Only god knew the last time the bathroom had been used. All he knew, is that after she had asked to take one, she had freaked out over the soaps he had gotten and the clothes. The clothes sat on the bed near him, still tagged and new. He had thought to wash them, but refrained from such things. The last items he bought for her from his earlier trip to the store were some hair care products, lotions and food. The last item was downstairs. \n\n\"Jacob.\"\n\nHe heard his voice being called out. A melody that dripped with honeyed promises. It made his head swim as he relaxed with his name being spoken in such a way. \n\n\"Jacob.\"\n\n\"Yeah,\" he replied to her. \n\n\"I'm hungry.\"\n\n\"No problem,\" he said before getting up off the bed and leaving the bedroom. \n\nJacob was glad to have something to do. Sitting around and waiting in anticipation of whatever would come had been plaguing him. Plus, he had been constantly checking his phone for some sort of sign from Grace that she was okay. After leaving her earlier passed out in the building on the fields at his school, he worried the sex had done something bad to her. \n\nThen there were the cops. The lights from the emergency vehicles outside still flashed through the windows. It reminded him now of the female cop who had stopped him twice that day trying to enter his home. The last stop had been when he had returned with a shopping cart full of the stuff for his visitor. He stopped in the hall to sigh. \n\n\"So much going on,\" he spoke to himself, before heading down the stairs and to the kitchen. He turned on some lights and began pulling food out to cook. Being that Jacob cooked often for himself and his father, the task itself took little to accomplish. By the time he finished and turned to set the table, she was standing there and leaning against the door frame of the kitchen. \n\n\"Gah,\" Jacob exclaimed almost dropping the food to the floor. \n\n\"That smells good,\" she said before moving over to him. He noticed then that she had a more petite form now. \n\n\"You can change your form?\" he asked. \n\n\"No talk, just eat.\"\n\nShe grabbed the plate of food from him and sat at the table. The chair creaked as she sat down, something that Jacob automatically attributed to being his fault. She had sat in the chair he often did, but he smiled knowing that within the next few days, new furniture would be here. His thoughts were interrupted suddenly by slurping noises. \n\nJacob had cooked a few different vegetables, a couple of steaks and some baked potatoes for their meal. As he watched her, he saw that he wouldn't be eating anything he fixed as already most of the food looked devoured. \n\n\"Is it good?\" he asked. \n\nShe mumbled some sort of reply. It was incomprehensible with the slurping and smacking sounds. For a being of sex, she sure seemed to be one of gluttony instead. That thought made him chuckle to himself. \n\n\"I'm done,\" she said leaning back in the chair. She let out a burp and he remembered there wasn't a drink. Turning quickly, he brought her a glass of sweet tea. She took it and drank it enthusiastically. Feeling dismissed, he walked away from her and headed back upstairs in amazement of what happened. \n\nGranted, he registered that she had put on some clothes at least. They looked a bit big on her, but he did think she looked cute. With the black hair and freckled light skin, she seemed to have found the perfect human form. \n\nJacob went back to his parents bedroom to check on everything. Much to his surprise, the room look untouched. Even looking in the bathroom, he noticed that nothing had been left for discovery. \n\n\"I moved it all into your room,\" she said, making him once again jump in surprise. \"You seem to worry too much.\"\n\n\"Jesus,\" he hissed turning to her. \n\n\"I know you have problems with your father,\" she spoke as a matter of fact. \"I don't like how anxious it makes you.\"\n\n\"Well, I did order new furniture for the place to help out, but this room belonged to both him and my mother.\"\n\n\"Where is she?\"\n\nThe woman, as he didn't know what else to call her, asked hard questions fast. He sat on the toilet while she leaned against the door frame of the bathroom.\n\n\"She died.\"\n\n\"I'm sorry to hear that,\" she spoke. \"Based on the memories of the one I absorbed, it explains your physical and emotional state when we met.\"\n\nJacob looked at her and cocked his head in astonishment. \n\n\"I knew it was too good to be true,\" he sat looking away in shame. \n\n\"What was?\"\n\nHe looked back over to her, tears stinging his eyes. \n\n\"You took that as a mean comment?\"\n\n\"Well, you chose me out of pity right?\"\n\nHer eyes shot up. \n\n\"That is what I can say, an unfortunate way of looking at it. I chose you because for one, you were a loner with few ties to society and for two, I actually liked you.\"\n\nJacob got up and brushed passed her on his way by. He barely heard the queer sounding growl before he found himself landing roughly onto the soft top of the bed. It groaned loudly in protest under weight it hadn't experienced in years. He had his eyes closed, bracing himself for the inevitable blows headed his way. When they didn't land, he opened his eyes.\n\n\"What are you doing?\" She asked him while her face hovered inches above his. Her eyes, dark black eyes, locked with him.\n\n\"I heard a growl and thought you were gonna punish me,\" he replied not\n\nknowing why he felt so ashamed saying that.\n\nHer head cocked. \n\n\"I do not, and I wouldn't know why. You walked by and I caught a whiff of you,\" She told him. \"A whiff that smelled so tantalizing.\"\n\n\"Oh.\"\n\nJacob didn't know what else to say at the moment. Other than mentioning his parent's room. \n\n\"What better way to consummate our partnership and love than on the very thing that heralded you into the world.\"\n\n\"I uh.\"\n\nJacob never got to finish his thought. He may have been ready to protest or even talk of his uncomfortability. As soon as her lips pressed against his, soft lips that promised future pleasures with a hot probing tongue, all of it went out the window.\n\nHe instinctively placed his hands on her hips, noting how soft they felt and almost gel like. She moaned into him, hot tongue continually dancing in his mouth. She suddenly broke the kiss and he locked eyes with her. They were a solid magenta now and he understood then that eye color would be important.\n\n\"I've waited so long for the pleasures of flesh,\" she murmured to him. Magenta shifted to a pink. A long tongue fell out of her mouth. \"There is so much to experience that I don't know where to begin.\"\n\nHe thought it odd that she could talk without sounding like her mouth was full. The tongue pulled back in.\n\n\"Taking clothes off is a start,\" Jacob offered. Right now, the drive for sex had kicked in. Like a switch, there was a growing surge of confidence suddenly present. \n\n\"Clothes would be fine,\" she said. \n\nShe got off him and stood at the foot of the bed. He sat up and looked at her.\n\n\"You first,\" she told him.\n\n\"You've already seen me naked,\" he said to her. \n\n\"My body holds untold and unexperienced pleasures,\" she countered. Her eyes narrowed and she licked her lips. \"And besides, I know how horny I am, I want to see that throbbing cock before letting you see how wet I am.\"\n\nAt the mention of throbbing, he experienced that exact sensation. He felt embarrassed, but peeled his shirt off. \n\n\"So how can you tell if your actually turned on now?\" He asked while undoing his pants. They pulled down leaving him in boxers and socks. \n\n\"I have the equipment now to enjoy such things.\"\n\nHe didn't reply feeling altogether satisfied with the answer. Though he wanted to believe in more of devout blindness. Socks joined the pile of clothe and underwear did too. A look over to her, and he realized a problem. \n\n\"What is your name?\" \n\n\"I don't have one. As a worshipper of our Goddess, I have never been granted one before.\"\n\n\"Can I name you?\"\n\nShe took off her shirt, leaving her chest bared for him to look at. Her breasts were nice and round, but only looked to him to be comparable to d-cups. Just over a handful, but he was no expert on the mammaries of women. The shirt dropped to the floor, and he barely got to notice that her upper torso and shoulders were freckled. Her breasts also had no nipples, but each one sported an area that looked like pursed lips. \n\n\"Why is that important right now? All you should be is focused on me stripping for you,\" she said as a matter of fact. \"Does this form not please you?\"\n\n\"No,\" he replied holding his arms up in defense. Her eyes narrowed at him. A dangerous looking form of yellow appearing. \"I love the way you look but a name would add a level of familiarity that would make this better.\"\n\n\"Oh Jacob,\" she exhaled in excitement before moving over to him and hugging him. \"I knew I chose right when I chose you.\"\n\nHe breathed a huge sigh of relief in his mind at saving the situation. \n\n\"So what do you want to call me?\" \n\nJacob looked past her in a panic. A question he didn't actually expect to answer. In his sudden anxiety, he spied a picture of his mother. \n\n\"Aurora,\" he stuttered out, and almost immediately wished he hadn't. \n\n\"I love it,\" she cried out, showering him in kisses. \"Keep saying it.\"\n\nHe repeated the name, and hands grabbed his cock. Jerking him off made the guilt of the name dissipate a bit. \n\n\"That's right, just keep it up.\"\n\nHe had no idea where she was going with everything, but sat on the edge of the bed still, as she kissed his chest. Quite suddenly, his cock was buried down her throat. No warning given, just a vacuum of suction on his entire length. The feeling was much more intense as she sucked him off. \n\n\"Oh god,\" he cried out, shaking as she drank down his length. Nothing in life prepared him for it. Not even the two women before had provided such sensations. It just felt right. \n\nHe looked down at her, only to find colored eyes watching him. Their eyes locked, an unspoken bond as her fuchsia bored into him. That look made him feel as if his soul had become exposed. She slurped and he tensed. \n\n\"I'm coming,\" he cried out and unleashed himself down her throat. The vacuum didn't let up and she closed her eyes as she drank him down. That was the sight he saw as he closed his eyes and enjoyed the intense orgasm. Still, as he tapered off, she didn't stop sucking and while he anticipated being oversensitive to the orgasm, that feeling never came. \n\n\"Are you gonna stop?\" he asked worried and opening his eyes. \n\nShe slurped once or twice more before allowing his spent cock to slide out of her mouth. A smacking noise filled the air and she moaned. When her eyes opened, they were icy blue. \n\n\"That was tasty,\" she said after a moment. \"So thick and sweet.\"\n\nJacob had always thought cum was supposed to be salty, but he didn't want to correct her. Instead, he tried to stay lucid as a wave of relaxation washed over him. \n\n\"So, for our first worship, I feel this was productive,\" she spoked, nodding her head in agreement with herself. It left Jacob bothered that there actually hadn't been any sex. Feeling a bit slighted, he came out of the relaxing fog. \n\n\"We aren't done,\" he said. \n\n\"I think so for now, your tool isn't hard for the occasion.\"\n\n\"Suck on it again,\" he commanded. \n\nShe cocked her head in confusion. \n\n\"Why would I want to do that, you already gave a more than adequate offering?\"\n\n\"Because you haven't gotten to experience the pleasure of the flesh yet.\"\n\nShe stood up and stretched. He saw that the front of her shorts were wet with moisture. He knew that meant she was hornier than all hell. So why did she not want to be pleasured? Maybe she worried, but he took it as a sign he should make the move. Reaching out, he ripped her shorts down. \n\n\"What are you doing?\" She cried out. There was some resistance, but Jacob managed to pull her sopping cunt against his face. A few licks and she began cooing. \n\nJacob found her taste phenomenal on his tongue. There wasn't time to look at what she looked like, but he could tell that by the way her sex cushioned his face, that her sex was swollen and plump.\n\nAss firm in his hands, he pulled her hips forward. When the heat suddenly got cool, he barely registered that she had lifted a leg up to put on the bed next to him. That action spread her legs and drove the heat of her ass into his fingers. He thought he could barely even feel the different flesh of her anus on a few of his fingers, but his mind quickly went to the grinding against his face. \n\n\"Oh this feels good,\" she moaned. Jacob just continued to lap her up and hold her ass in his hands. Honey flowed out of her, and he sloppily licked up everything he could while it freely flowed out. \"I need more.\"\n\nThe bed felt soft under his shoulders and he didn't mind the weight on his face as she straddled his head. Soon, pussy juices smeared across every inch of his face being that he could no longer drink them fast enough. He remarked to himself under her, that the other two women hadn't produced as much. \n\nThere were words being sad, but he couldn't hear them. Underneath her and with all the frantic grinding, the only thing he could hear was the slippery sounds of her cunt rubbing on his face. He did try still to continue eating her out, but his tongue moved blindly through folds of pussy lips and labia. Then a rumbling sounded, feint at first, but then it grew. \n\nJacob had no warning but then, he surmised that neither did she. When her thighs clamped hard around him, he closed his eyes. The shaking of flesh was immense and then the spray of intense liquid almost burned his face as it hosed him down. When all was done, she fell off him and onto the bed face first. \n\n\"Wow,\" he commented loudly. \"That was something else.\"\n\nHer breaths come laboriously and heavy. He scooted out from underneath her and stood up at the edge of the bed. Turning around he noted that she had fallen in a way that presented her ass and pussy to his hungry gaze. \n\nEverything that could have been described as female genitals were red and swollen. It even took him a back to see that strings of juice flowed slowly from the hole. Her anus looked ridged and what not, but didn't gape or anything. Not that it mattered to Jacob. What mattered is how sopping wet and inviting her pussy looked. \n\nA cock, his cock, rose to meet the occasion. Announcing its willingness in powerful throbs as it grew into length. He hoped she was ready to continue their worship, but he still didn't know who or what they worshipped. Some unnamed goddess, but being that worship only meant sex in the long run, he wasn't going to complain not knowing. Somehow, getting up behind her and positioning himself to fuck her felt right. After all, she had presented her sex. A signal for more than ogling as he did feel the heat. \n\n\"Are you ready?\" he called out to her. She moaned in response to him. Pushing his hips forward, he tried a few times to enter only to understand that he did lack experience. \n\n\"Wait,\" the priestess call out suddenly. \"I want to face you for my first time.\"\n\nWithin seconds, Jacob found himself between her legs now as she lay before him. Much to his delight, he felt more comfortable too in this position.\n\n\"You seem to have changed your idea of stopping,\" he said to her, locking eyes now with pink.\n\n\"I want more of this pleasure,\" she replied. \"Now fuck me.\"\n\n\"You sure you want to be fucked?\"\n\n\"We are worshipping, what else is there?\"\n\nNothing at all to Jacob. He reached down and rubbed the head of his cock up and down her slit. The smooth lubed skin hidden between the folds of her ginormous swollen labia that she sported. It sent a shudder through him, and she had gone back to huffing her horniness. With a smile, he suddenly pushed himself into what he could only feel was mind-numbing heaven. \n\n\"Oh,\" she cooed. He would have joined her, but without deep concentration on the task of sinking into her, he felt stopping would be as far as he made it. Eventually, their pubis met and there wasn't any way her could push himself further into her. \n\n\"How does it feel to lose your virginity,\" he said to her. \n\n\"Is that what you call sex for the first time?\"\n\n\"Yeah,\" he said trying to keep himself from cumming. He couldn't believe that her sex possessed such a different feeling than the other two women. It was tight, hot and slippery for sure, but it seems to mold right to his cock, like it was specifically designed for him alone. \n\n\"Well, the woman I took the human form from happened to have a lot of sex. You chose well, as this body is sensitive beyond measure with my maticulations and changes.\"\n\n\"Just like me?\"\n\n\"You're not inhuman like me in many ways. Granted, I may have been able to choose your sex as opposed to the female, I think in my own conclusions, women on your planet wield far more power.\"\n\n\"How do you figure?\" Jacob asked, genuinely meaning the question as a logical one rather than one of defiance to her statement. The conversation also helped him lose his focus on how sensitive his own cock had been buried in her. \n\n\"Look at you, you're helpless right now.\"\n\nJacob look down and he wished he hadn't. Where her outer labia should have been instead they weren't. They were pulled upwards like how a spider would raise its front legs in defense. He could also see small tendrils snaking out from the maw. \n\n\"What is that?\"\n\n\"My sex, and if you know what's best for you, you should try to escape.\"\n\nHe looked up at her and saw red mixed with the pink. Red always meant anger, and he figured he should. As such, he yanked his hips back in an attempt to free himself. Cock slid through her love tunnel to exit, but it stopped. He looked up at her in horror. \n\n\"Now really look at what you have sunk yourself into,\" she commanded.\n\nHesitating, he looked down. It looked like a bunch of spaghetti noodles had latched themselves to his cock. They moved, spreading themselves evenly to cover it in juices. \n\n\"I said inhuman, which also means I possess many abilities. I wanted to find out before we went on, but your eagerness is pleasing to me.\"\n\n\"What's gonna happen to me?\" Jacob asked, completely terrified that the red in her eyes meant. \n\n\"Sex Jacob,\" she replied her eyes shift now\n\nto complete pink once more. \"sex is gonna happen to you.\"\n\nHe didn't understand how a moment ago he was in charge of the situation and how it now, had swapped to her authority. A look of concentration came across her face and he felt a pull on his loins.\n\n\"Sex and more love than you can ever imagine,\" she replied. \"You and I will be harbingers to this world.\"\n\nSuddenly he bottomed out in her once again. He groaned in conflicting emotions. \n\n\"You've embraced me thus far, all you need to do is really feel the vision I bring.\"\n\n\"Vision?\" Jacob said gaining somewhat of an ounce of composure. \"I don't care about a vision. I'll do whatever you want, just let me have this forever.\"\n\nHe could have screamed the words, but she moaned loudly and like a pop, Jacob went from being docile to an aggressive beast. Slamming himself forward heavily, he thrust harder with each stroke of his cock. \n\n\"Yes,\" she hissed into a moan. \n",
        "Legs wrapped around him. Nails dig into his back. Teeth sunk into his shoulder. She gasped, cooed, and cried out. It egged him on. So much so that he boiled out an eruption of cum and still thrust like a mad man. \n\n\"Give me more,\" she cried out. \n\nAnd he did. Not stopping for the cramp in his side. For how thirsty he felt. Not even for the fact that right now, the numbness of his cock had appeared but did nothing to abate how deep it penetrated. If anything, Jacob felt that he reached deeper now than he did a minute ago. Still, the inevitability of the flesh reached her. \n\nShe let out a harrowing screech before having a pleasure seizure underneath him. Flesh quivered and he leaned back a bit as he couldn't thrust or even move anymore. Her sex gripped and milked his cock and he joined her in orgasm with a powerful grunt. He collapsed onto her, feeling himself completely drained of strength. A warm feeling spread over him. \n\n\"That was amazing,\" he said between breathes. \n\n\"I agree,\" she moaned into his ear. It tickled, but he didn't make a move to show it. Instead, he let out a breath of contentment while he tried to fight off the wave of exhaustion washing over him. He failed and darkness soon swallowed his consciousness. \n\nBlack. \n\nIt is a color Jacob had grown to hate. His whole life had been black. From the blinding pains of being verbally hurt to the physical pains of a heavy fist. Black swallowed love completely out of his life. There was nothing and Jacob had felt like there was something. \n\nThen a light appeared, bringing him once more into salvation. There, the throne in front of him, but she wasn't there. No, instead she stood next to him. \n\n\"I haven't seen that throne before from this perspective,\" she commented. \n\n\"It's intimidating with all the stairs.\"\n\n\"All you have to do is go up them.\"\n\n\"Is it worth seizing?\" \n\n\"Was bringing me here worth it?\"\n\n\"Yes.\"\n\nJacob took a step forward towards the set of stairs. He felt invigorated with that one step.\n\n\"You normally step back,\" she commented. \"Is it because you want to go forward now?\"\n\nHe took another step. A sudden heavy weight stopped him. \n\n\"Why can't I move anymore?\"\n\n\"You aren't ready for more yet.\"\n\n\"When will I be?\"\n\n\"When you are.\"\n\nJacob awoke suddenly with a startle. He was alone on the bed. His stomach growled and he yawned to it. Getting up, he wandered to the bathroom to relieve himself. He thought he needed a shower, but instead stopped by his room to dress. \n\nMoving through the house, he went down stairs to find the priestess in the kitchen. The fridge was open and she was currently going through it. \n\n\"What are you doing?\" he asked her, not minding that he got a full view of her back side as she bent over in the fridge. Her fat pussy lips looked tantalizing as he stared at her sex. \n\n\"I'm hungry,\" she said. \n\n\"I can cook something,\" he offered as his cock twitched. Honestly he wanted to bury his face into her sex right then and there, but both of them were hungry. \"Or order something.\"\n\nShe came out the fridge. Her form had changed again. This time, she sported herself with a petite figure. Barely any curved or breasts. \n\n\"Why do you keep changing your frame?\"\n\n\"Because I'm trying to find a perfect form for myself that I like. There are many different body types and I want to find the perfect one for my sexuality.\"\n\n\"Oh,\" he said noticing her eyes were a white color. \n\n\"So what can we order?\"\n\nHe smiled and picked the phone up. \n\n\"Pizza sound good?\"\n\nShe cocked her head at him. \n\n\"Order it.\"\n\nAnd she turned away from him before going back into the fridge. With a shake of his head, he ordered a few pizzas. Being modest at first with the order and hearing her munch away in the fridge, he called back and added a few more to the order. By the time he finished that, he ass wiggling while she rooted round got to him. \n\n\"I can't take it anymore,\" he yelled out grabbing his now throbbing cock. Jacob hoped the priestess remained unaware of him as he positioned himself behind her. Granted, she probably was aware, but he liked the fantasy that she was teasing him on purpose. Much to his delight, she responded as he slid into her. \n\n\"About time,\" she sighed. \"I like the cold in the fridge and its made my nipples delightfully hard.\"\n\nJacob took her word for it, to engross on the suction of her cunt on his cock. The way the lips rolled over his phallus made him coo to himself in pleasure. Before long, he heard a cracking sound. \n\n\"Fuck me harder.\"\n\n\"I hear cracking,\" he responded not stopping even from a moment in concern for it really. \n\nSuddenly, there was a splitting crack and she fell into the fridge. \n\n\"We have to stop,\" he said knowing that they had broken the shelves in the fridge. \n\n\"Don't you dare,\" she said, a growl coming from what felt like the depths of her pussy. That sound made him double his efforts on her. Desentitized with the third time of sex, Jacob marveled and smiled to himself wth the sweat rolling above his brow. That was until a ringing door bell. \n\n\"Shit, pizza is here.\"\n\nJacob peeled out of her and moved quickly pulling his shorts up. The door bell rang again and he ran to the front door. Opening it up, Jacob let out a gasp of surprise. \n\n\"Kenny?\"\n\n\"Jacob? Back to eating whatever whenever?\" \n\nKenny was a small bully, not even apart of Billy's gang that tormented Jacob at school. No, Kenny was a bully that hunted the neighborhood and often looked for Jacob to hurt. \n\n\"Look man, just let me buy the pizza,\" Jacob replied. \n\n\"Oh you will, plus extra. I want a big tip.\"\n\n\"I'll pay what you deserve.\"\n\nJacob was shoved back into the house. \n\n\"No, you'll pay what I say you will.\"\n\nKenny put the pizza down n the floor and closed the house door. \n\n\"Jacob is that the pizza?\"\n\nJacob looked back to see the priestess. \n\n\"What is going on?\" She asked standing naked in the doorway of the kitchen. \n\n\"Well, well Jacob, what a surprise man.\u2028\n\n\"Get back,\" Jacob said to her. Suddenly a fist landed on his face. \n\n\"No one said to talk,\" Kenny yelled at him. Jacob heard a growl, but he blinked heavily through painful tears. \n\n\"Hey now there babe,\" Kenny said. \"What's a fine looking woman like you doing with a freak like him.\"\n\n\"You hurt him.\"\n\n\"Yeah, what of it.\"\n\n\"He can't be hurt.\"\n\n\"Yeah well, make it worth my while and I won't hurt him anymore.\"\n\n\"Okay.\"\n\nJacob knew already what was gonna happen. Even as the sounds of pants being dropped he new whatever she did, it wouldn't end well for Kenny. \n\n\"Yeah that's right, open your mouth slut.\"\n\nThe sounds of slurping filed the air. \n\n\"Jesus Jacob, this bitch suck dome like a porn star.\"\n\nEven though the comment made Jacob smile a bit and dulled the pain, he knew Kenny's joy would be short lived. After all, Billy had a fun end after he hurt Jacob. Able to open his eyes now, he opened them to her sucking him off. \n\nShe was on the balls of her feet, knelt in front of him. His dick didn't appear at all. Her form had changed once again and now she was voluptuous. The thickness of her thighs made him want her again. Then he locked eyes with her, pink mixed with red. A finger held up and then Kenny began to scream. \n\nA spray of blood erupted from Kenny's crotch, showering her with its blood. Kenny fell back against the door. \n\n\"Come on lover,\" she said to him. \"Don't you want me still?\"\n\n\"Get away from me you monster,\" Kenny screamed in utter terror at her. \n\n\"Well, I want more,\" she said looking over to Jacob. \n\nIt was a look of nightmares. Her chin had split at the bottom revealing rows of teeth. Teeth dripping with blood as it pooled to the floor below. The front of her was covered in it too. She held a hand up and her fingers elongated into tentacles. Kenny was whimpering by now. \n\n\"So much more.\"\n\nJacob didn't even see her move, but he heard the the sickening sound of flesh being punctured. Kenny had fallen silent. \n\n\"More.\"\n\nHe watched an morbid fascination as she moved over to Kenny. The sounds of flesh tearing and eating morbidly fascinated. He heard her groan and moan and at that moment a thought came to him. \n\n\"Aurora,\" he said. She stopped tearing at flesh to look over to him. \n\n\"Your name is Aurora.\"\n\n\"Why?\" she asked.\n\n\"Such beauty but so deadly.\"\n\n\"And?\"\n\n\"It was my mother's name.\"\n\nShe went back to tearing at the flesh. What started as a night of sex and love had turned to one of murder. Sure a few hours had passed, but by whatever god they worshipped, she looked erotically monstrous. He got up and walked over to a box of pizza. \n\nAfter he moved over to sit against a wall, he sat down and began to eat himself in earnest. All the while listening to Aurora eat away. He wondered if naming her that particular name was a good fit. \n\nAurora had approached him as a motherly figure and quickly as an actual lover. Probably the most honest entity in his life, she had oozed sex at him from there first meeting. As he ate slice after slice of pizza, he felt happier with life now. Two bullies gone and his dad out of the picture for however long he decided to be, Jacob felt at peace. \n\nAnd not because of the pizza he ate either. Food would always bring him happiness, but now, he had Aurora. Who now was munching on bones. A fact he asserted with the cracking sounds from her. \n\n\"Is it necessary to eat the bones?\"\n\nShe stopped to look at him, a bone hanging out of her mouth. It dropped to the floor. \n\n\"What am I supposed to do with it?\"\n\n\"Leave it, we can dispose of it later, why not have some pizza instead?\"\n\nJacob pointed at the boxes next to the corpse of Kenny. \n\n\"I'll dispose of it now.\"\n\nShe squeezed her breasts and much to his astonishment and enjoyment, black liquid shot out from her nipples. Immediately upon touching the flesh, a hissing sound filled the room as steam rose off the corpse. Squeeze after hard squeeze went until she turned to him. \n\n\"That should do it, now let me eat some of this pizza.\"\n\nAurora grabbed the five other boxes and sat next to Jacob on the wall. She began eating one of the pizzas before commenting. \n\n\"So this is pizza,\"she said. \n\n\"Yeah, good huh?\"\n\n\"Better than the flesh,\" she said. \"Who knew sex gave one such an appetite?\"\n\n\"Burns a lot of calories.\"\n\n\"You really weren't all that popular huh?\"\n\n\"Life has been hard,\" Jacob replied finishing off the current slice he was eating before starting on another. She had picked up a second box to begin eating. Jacob contemplated while he ate his current slice. \n\n\"Do you like it here?\"\n\n\"Its okay so far. I really can't wait to see what you have planned for this place.\"\n\n\"It's gonna be difficult with my father.\"\n\nShe fell silent as she chewed on pizza.\n\n\"Maybe, but what if you bought me a place to stay?\"\n\n\"Would you want that? Being away from me all the time?\"\n\nThird box going, he saw how fast she ate. \n\n\"You will visit everyday,\" she said as a matter of fact. \n\n\"I can afford it, let me look. We are safe until my dad shows back up anyways.\"\n\n\"Or I can find a girl that can entice your dad into being so busy he wouldn't have time to worry about you.\"\n\n\"I don't know if I would want to reward my father with something like that.\"\n\n\"Oh it doesn't have to be a reward, more of a breaking. He's the worst to you right?\"\n\n\"Yeah,\" Jacob replied getting up. He didn't particularly find himself interested anymore discussing plans. Especially those revolving on getting his dad laid. That man was a monster. \n\nMoving through the house, he went up to his bedroom. By now, the night had gotten late and he did know he needed to rest up. Starting up his computer, he looked at delivery dates and saw many of the new ordered household items would be arriving tomorrow. Smiling, he got up to shower. After seeing the death and having sex multiple time that day, he needed another. \n\nGetting into the shower, Jacob let the day wash off him. He was using an arm to support himself with great relief when the shower curtain ripped open. \n\n\"What are you doing?\" he cried out with a jump. \n\n\"I'm covered in blood.\"\n\nShe got in the shower with him, and Jacob moved out of her way while she rinsed the blood of herself. The smell almost made him wretch. He looked away from her until he caught the scent of flowers. Opening his eyes, he realized at some point her soaps had been moved to his bathroom. \n\n\"You had to kill him?\"\n\n\"Word gets out that you're fucking the hottest piece of ass in this material world and we will have more problems than you can count.\"\n\n\"He delivered pizza here.\"\n\nShe was silent for a moment. \n\n\"He did, and someone will come to visit. We will act normal. There is nothing they can find.\"\n\nJacob wasn't so sure. There was a record of the guy delivering. He was thinking when suddenly she had pushed her backside up against him and used her ass to press him back. Cold shower wall stopped him.\n\n\"What are you doing?\"\n\n\"Getting closer and needing you to wash my breasts down.\"\n\nShe pulled his hands out and squirted some soap into them. \n\n\"Now, lather me up.\"\n\nBreasts, as everything with women, were new to Jacob. Even though they had been sported by the three women he had the pleasure of being with, none had thus far offered there mammaries to him. He took to the task with tentative enthusiasm. Being slow to act with such enthusiasm thus far had seemed to serve him well. \n\nThe breast were heavy and firm in his hands. Their form was bigger than when she had gotten into the shower with him. As he massaged the flesh, she moaned softly to him. Throughout everything though, he did notice she had inverted nippled. \n\n\"Why do you keep you nipples hidden?\" he asked hotly into her ear. \n\n\"Not a big reason, but mostly because they are super sensitive and dangerous. I can swap between body fluids and to do that, I need protection for the nozzles.\"\n\n\"Nozzles?\" Jacob asked. He knew what she meant, but he did know that his wanted to find out exactly what her actual nipples were like. While she explained to him the different ones she sported. He lost interest quick as he pushed fingers into the pouched that hid her nipples. \n\n\"What are you doing?\"\n\n\"Washing.\"\n\nShe was panting and soon enough, he had the hard nubs of her nipples poking out of the mammaries. They were hard and felt like firm rubber in his hands. Hissing and gasps filled the air. He became aware of his hard cock pressing between the cheeks of her ass. \n\n\"Want to do something with that?\" she asked with a throaty moan. \n\n\"If you want it, have at it.\"\n\nHer hands fell away from his and he felt her pull her ass cheeks apart. His cock found itself buried back into her. \n\n\"You don't need to move,\" she said. \"I can handle the work, but don't stop what you're doing with my breasts.\"\n\nHe said nothing and instead did relax. Quickly, he learned what she meant was that she planned on grinding on him. Ass pressed up against him and cushioning them as she groaned, her heat slick as it molded itself around his length.\n\nIn moments she was spasming heavily in his arms. A surge of adrenaline hit Jacob and he took advantage of her weakened control and shoved her forward. Aurora let out a gasp of surprise as she fell into the torrent of rain water, but Jacob stifled that into moans as he gripped her hips and drove himself relentlessly\n\ninto her. \n\nTheir slapping bodies meeting with his thrusts seemed to echo in the bathroom. To the point that it almost deafened him. Eventually the water got to him and he slung the shower curtain. \n\n\"Get your ass on the counter,\" Jacob said pulling himself out of her sex. She let out a protest but he slapped her ass. \"Get on the counter faster and you can have it back.\"\n\nShe stood up in the shower, her eyes burning pink. A loom of astonishment hung on her face but she licked her lips.\n\n\"I like commands,\" she said moving out of the shower. Steam rolled off her and clung on the bathroom mirror. He throbbed in impatience as she got on the sink counter. Legs spread she told him to come get it.\n\n\"Aren't you gonna pull you lips apart like before?\" he asked. \n\n\"That was only to keep you in me for worship. Do you plan on pulling your cock out again?\"\n\n\"No.\"\n\n\"Then stop fucking around and get that log of manmeat back in me and rail may ass.\"\n\n\"Do you mean the figuratively or literally, cause I would like to fuck your ass soon,\" Jacob said before moving up to her. They happened to be at the perfect height for his cock to go into her eagerly waiting cunt. Their sex joined and even if he tried not to shove his cock as deep as he could immediately, he doubted her vaginal muscles would have allowed for him to. Not that there was a complaint to have. Except maybe how sticky he was getting fucking her in the steam of the bathroom. Either way, he wasn't going to complain with his new found fucktoy. \n\nAurora pulled him slowly to her and the change gave Jacob a naughty idea. He lifted her up off the counter and found himself straining a bit from the effort. He lifted her up and stepped back. In reaction, she wrapped her legs around him. \n\n\"Oh Jacob, you're strong,\" she cried out. He drove himself into her still and became aware how slick the cunt had become. Moments more, she began shaking and he felt a warmness spread down his legs. \n\n\"Yeah and now I am really gonna need another shower.\"\n\n\"Sorry,\" she giggled. \" I think that's only gonna get worse with the bodily fluids the longer you take to empty your balls into me.\"\n\n\"I have ben trying, but they keep filling up fast than I can get it out.\"\n\n\"So much,\" she said digging nails into his shoulder. \"Pent up energy hasn't been good for you.\"\n\n\"I know, but your pussy is milking it any chance it feels like it.\"\n\n\"I do so love having sex,\" she said unwrapping herself from him and pulling away. \"As much as I didn't want you cock out of me, I am gonna bend over the sink.\"\n\nAnd she did. Even reached back and pulled her ass apart showing her dripping sex to him. \n\n\"Come on Jacob, you make me wait too much.\"\n\nWith a smile, Jacob went a plunged his worries away, not caring anymore how long it took to finish. What mattered to him, is that her cries for more never stopped and neither did her encouragement."
    ],
    "authorname": "destodes777",
    "tags": [
        "horror",
        "monster",
        "sex",
        "erotic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/egg-ch-05"
}