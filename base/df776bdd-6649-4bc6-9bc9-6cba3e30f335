{
    "title": "Succubus Pt. 01",
    "pages": [
        "Chapter 1: The Witch's Assistant\n\n\"I'm serious. I can't stop thinking about her. I don't know what to do.\"\n\nI hadn't even sat down in the car and Olivia had already picked up where our text conversation had just left off. \n\nI had to laugh. \"Olivia, seriously?\" I climbed into the car and tossed my book bag on the floor.\n\n\"I'm serious, I can't get her out of my head, she's all I can think about, she's like a cold I can't get rid of.\" She was a little wild-eyed, like she hadn't slept well or had already had too much espresso for 8 o'clock in the morning. \n\n\"Hey,\" I reached out and touched her cheek. She stopped talking and looked me in the eye. \"Do you wanna just go back inside and fuck so you can get it out of your system?\" My tone was a little mocking, but I was only half-kidding. I would have happily taken her inside and watched her orgasm two or three times and she knew it.\n\nWe had been friends since grade school. We used to spend the night at each other's house almost every week when we were little. We were as close as two friends could be. We were like sisters. \n\nNothing had ever come between us. And once our hormones kicked-in, puberty was like everything else - we shared our experiences, played with each other's bodies, and just sort of figured it out. It had never been weird or strange, maybe because we were so close, but we were what guys called \"fuck buddies\". We took care of each other with no strings attached.\n\nSo, having known her since our hair was in braided pigtails and plastic, blue barrettes, I knew how she could get when she was all worked up - and she was definitely worked up.\n\n\"What is it about this girl?\" She tilted her hand into my touch and I ran my fingers through her hair.\n\nI didn't like the fact that she was obsessed, but it happened to the best of us, right? I mean, the heart wants what the heart wants. \n\nThe girl Olivia couldn't stop obsessing about was a transfer student who had arrived in her advanced biology class the Tuesday before. \n\nI had met her during lunch the following day when she had walked past Olivia and I, and Olivia had jumped out of her seat, shouted hello, and then proceeded to awkwardly introduce us. \n\nEver since, Olivia had been on about Katie non-stop.\n\nAnd I understood. I mean Katie was exactly what Olivia liked. She had a volleyball player's body - tall and fit with small breasts and a tight little ass. Her brown hair was cut short, with one side shaved close and bangs that looked as sharp as a razor. She was one of those girls you could mistake for a lesbian, but you could also be making a horrible mistake. \n\nBut from the first day I had met her, it had been painfully obvious. Katie wasn't hitting for Olivia's team. Kate was into guys. On her second day, we saw her around campus with one of the football players and a crew of his friends.\n\nI had known it right then. You know how you can just tell?\n\nBut Olivia didn't care. She fell in love quick.\n\n\"I think I'm going to do it.\" She bit her lip and stared out the windshield like Kate was walking in front of the car, like she was watching her ass move in a tight pair of jeans. \n\n\"Do what?\" I could tell she wasn't talking about going back upstairs.\n\n\"I'm going to bind her.\" She looked at me with a twinkle in her eye.\n\nI rolled my eyes. \"Are you serious?\"\n\nOlivia's mom was a pagan, a practicing witch, always had been. It was no big deal. I mean, she didn't have a broom and a long nose. She simply believed in magic, and that all things had energy, and there were a lot of candles in their house. \n\nI remember our mom's sitting around the kitchen table talking about magic and religion when we were six or seven. My mom thought it was interesting, you know, like someone might think anything is interesting. \n\nAnd maybe that was one of the reasons our sexuality wasn't an issue. Olivia was taught to be open and honest about everything. It was different, but not in a crazy way. My dad always said Olivia's mom was an old hippie. Peace and love. And being her friend, maybe some of that rubbed off on me too.\n\nOver the years, Olivia had adopted more and more of her mother's beliefs. When we were little, she began calling herself a witch. She kept an amulet around her neck and practiced writing \"spells\". Honestly, I had always just humored her fascination with magic and paganism. It all seemed silly to me, like play pretend. Nothing ever came of it, but I always did whatever Olivia instructed me when it was time to cast a spell or ask for something from the mother earth. I remember once, when we were in junior high, I even helped her with a love spell that didn't work. \n\nAnd so, it had gone. From the time we had been kids, just running around doing nothing, Olivia had been a witch and I had been her best friend - the witch's assistant. \n\nBut I had never really believed in much of anything. My parents hadn't been religious. I think I went to church once when I was a kid, maybe a Christmas. I remember snow. \n\nAs far as I was concerned, I had never had a use for gods or devils and I was absolutely positive that magic wasn't real. The idea that my friend believed in it made me happy. She loved magic, the idea of it. But no matter what, in the end, we were best friends.\n\nSo, I was used to being a part of Olivia's magic, her beliefs. I didn't understand much of it, most of it seemed silly to me. I mean, how was lighting a blue candle under a full moon, after burning daisy and dropping it in holy water supposed to protect someone on their vacation? But it never stopped me from helping in any way she needed me to even though she knew I didn't believe.\n\nBut the look on her face in the car that Tuesday, made me wonder. She had always talked about the things magic could do, but she had never used the word binding before. It sounded serious, and she seemed super serious, like she more determined somehow. I didn't think much of it though, I mean, in all the years we had grown up together, I had never seen anything about magic that made me believe it was real. Not from Olivia or her mother.\n\n\"No,\" Olivia looked over as we started off toward school. \"I'm serious.\"\n\nFor some reason, I believed her. \n\n***\n\nThat Friday morning, when Olivia came to pick me up for school. I got into the car and almost choked. She was looking good, like really good. \n\nShe caught me staring at her tits and laughed out loud. \"You like them?\" \n\nShe was wearing her favorite blue jeans with wide open tears along the knees and frayed pockets along with a black camisole that had a sweeping neckline. It was cleavage for miles. \n\n\"New bra?\" I hoped my checks weren't as red as they felt.\n\nOlivia already had nice breasts, I had been jealous of her since we were thirteen when she moved to a B cup and I was still stuck in a training bra. \"Yeah, actually,\" she chuckled, and I wondered if there was more to the story. \n\nWe stopped at a red light and she pulled the cap off a red marker she grabbed from the console. \"Give me your hand,\" she said, rushed.\n\nI gave it to her and she scribbled a cool little symbol along the underside of my wrist, it was kind of like one of the Irish symbols but different too. It was strange, about the size of a nicotine patch. \n\n\"What's this?\" I asked as she let go and the light turned green.\n\n\"Can you spend the night at my house tonight?\" \n\n\"Sure,\" I said. I had a test on Monday, but I figured I would have plenty of time to study on Saturday. I was also in between boyfriends at the time, so there were no extracurricular plans. \n\n\"I found a binding spell,\" she looked over at me and I could tell she was holding something back, like she wanted to ask me something, but she was embarrassed or afraid to talk about it.\n\nI had no idea what could be wrong. I figured she was probably afraid that I wouldn't want to help or something. \"What is it?\" I asked.\n\n\"It's sex magic.\" She said and stared straight ahead her face serious.\n\nI thought about her words. I looked at the weird symbol she had drawn in permanent marker. It was always an adventure with Olivia. \"Sex magic?\" I said the words out loud because I had absolutely no idea what she was talking about.\n\n\"Yeah,\" she nodded.\n\nI waited but she didn't say anything else for like ten seconds. \"What does that mean?\" I finally asked.\n\n\"Remember when we cast that love spell on Becky Fromm when we were little?\"\n\nI remembered the night. The weird words she had given me to say over and over again. I remember how afraid she was her mom was going to find us in the garage, sitting in a circle of table salt and burning her black and red candles without permission. \n\nIt had been a strange couple of hours, but harmless. Nothing had happened to Becky Fromm. She liked boys. And Olivia had gotten over it and moved on. I don't think we had ever really talked about it after that.\n\nBut now I was curious. \n\nI took a long sip of my coffee and stared out the window. \"Of course, I remember Becky Fromm.\"\n\n\"Well, it's a little like that.\"\n\n\"Like that but called sex magic?\" I emphasized the words.\n\n\"Well, it's kind of like that,\" Olivia shrugged. \"I need your help.\"\n\nI raised my hand when she looked at me. \"That's what this is?\" I looked down at her chest. The new bra was amazing, her breasts looked bigger, a lot bigger. \n\n\"I think you're going to like it,\" she grinned.\n\nI remembered the last time we had cuddled, exhausted and covered in sweat. The last time we had fucked, I had lost count of the orgasms I had had. \n\n\"Of course, I'm here to help.\" I laughed. \"Tell me all about it. Are we going to have sex? Should I wear something sexy?\"\n\nOlivia pulled into the school parking lot. \"Yes,\" she said. Then she put the car in park and looked over at me. \"I'm serious,\" she said, \"like for real.\"\n\n\"Nothing happened to Becky Fromm,\" I rolled my eyes and reached for the door handle, smiling.\n\n\"This is different. I've been practicing.\" There was a seriousness in her voice that sent butterflies through my stomach.\n\nWe both got out of the car and started for the front door. \"Practicing what?\" I just wanted to hear her say it again.\n\n\"Sex magic,\" she whispered as a couple of students passed us on the sidewalk. \"I can do it. I can't believe you don't believe me,\" she shook her head. \n\n\"I believe you believe?\" I didn't know what else to say.\n\nOlivia arched her back showing off what her new bra could do.\n\nI stared down at the cleavage just like the two guys that brushed past us on the sidewalk.\n\n\"Wait, I assumed it was a new bra.\" I reached over and pulled the shoulder strap, so I could see it. \n\n\"It is,\" Olivia giggled and pulled away. \"And a little magic.\"\n\nI looked over and realized that she was serious. Very serious. But class was about to start, and we were both running a little late. I wrapped an arm around her waist and squeezed her close. \"Well, I hope so,\" I gave her a little kiss on the cheek. \"See you tonight?\"\n\nA few boys moving around us laughed; one whistled.\n\nOlivia smiled, a little embarrassed and turned toward her building.\n\nI wondered about what she had said, about sex magic and it being real. My first reaction had been that it, like every other kind of magic Olivia and her mom had ever talked about, was complete bullshit. Nothing ever happened with their magic, they felt better for practicing it, but that seemed to be about it. I mean, to me it was like any other religion, you felt better because you believed in something bigger than yourself.\n\nThen I got to my first class, picked a seat in the back row, and pulled out my laptop. I probably looked like I was getting ready for class, but that was the opposite of the truth. Had she made her breasts bigger with magic? Is that what she was saying? Why did I believe it or want to?\n\nI looked down at the little symbol she had drawn and remembered the way she had held my wrist while she doodled. \n\nI loved the feel of her hands. Her fingers were so long and thin. \n\nWe were going to have sex. \n\nThe idea made me smile.\n\nIt had been a few weeks since someone else, besides me, had given me an orgasm. And I loved the way Olivia's mouth felt when we sixty-nined. \n\nI clicked on the search bar and typed: sex magic.\n\nI was curious.\n\nThe first few tabs were what you would expect, like buy a red candle and say these specific words under a full moon. Stuff I had been doing with Olivia for years. There were a few others that were hawking spells for a few dollars apiece. It all seemed just like I thought, a bunch of nonsense. A fool's game.\n\nI kept researching, flipping through the pages and pages of entries marked sex magic.\n\nIt took half the class lecture, but I finally found some interesting things. \n\nOne site went had a long explanation on the history of sex magic and how it was like most other magic, how it concentrated on using energy and focused desire to get what you wanted. \n\nAnother talked about the power of ejaculate and menstrual blood.\n\nIt was all so weird. \n\nI mean, I wanted to believe that it could be real, but it also seemed so ridiculously far-fetched. I mean, magic? Really?\n\nBut then, I had never seen Olivia so serious. And her tits were definitely bigger. Like overnight.\n\nThen I thought of the relationship Olivia and I had, how close we were. How we had discovered our bodies together, how we had casual sex whenever one of us needed to blow off some steam or got all worked-up over someone.\n\nIt was strange, but maybe that was a kind of magic. Maybe the way we were connected, almost like sisters, was a bit of magic.\n\nI remembered the last time we had been together. \n\nIt had been earlier in the school year. We had gone out to see a movie together, a romcom with a hunky lead. \n\nThen we had gone for dinner and a bottle of wine. Then she had come up to my place because she had wanted to borrow a black dress for a work thing. And then I had opened another bottle. And we had sat down and drank and then we had laughed and told old stories like we always did, remembering our lives together. \n\nAnd then, I remember, Olivia had leaned back and said her pussy was wet. \n\nAnd that had been enough.\n\nThe next thing I knew, I was buried in her glistening lips and with her tongue buried in mine. \n\nI looked up from my laptop just as the teacher was writing next week's assignment on the whiteboard. My heart was racing; the memory had gotten me all excited. I ran a hand across my forehead. \n\nI saw the little doodle on my wrist. What was that thing?\n\nMy head felt hot. \n\nI reached down and grabbed the water bottle out of my bag. I couldn't figure it out. I felt like I had just been making out. Like I had just been mashing up against something hard and satisfying. \n\nThe water was cold, and I gulped it down. What had happened?\n\nStudents started to get up and make their out of the room. Grabbing my bag, I started to follow. \n\nMy pussy was soaked. The wet spot on my Batgirl underwear was cold.\n\nWhat the fuck was wrong with me?\n\nI was hot, like crazy horny hot. My eyes were glued to the ass of the guy walking in front of me. I watched the seams along the edges of his pockets move. He had a tight ass, all muscle, and every step I could see the dimples move under the denim. \n\nHis shoulders were broad too, his whole upper body was square like a swimmer's physique. \n\nI liked to fuck boys and girls, but I like my boys strong, really strong. I liked to feel tiny in their arms.\n\nMore warmth moved through me.\n\nWhoever the guy in front of me was, turned off to the right and my next class was to the left, so I let him go with a little frown.\n\nIt didn't make sense how turned on I was. It was like I was on fire. My pussy ached to be touched. My nipples were as stiff as stones, rubbed against my blouse and I had to bite my lower lip and take a breath to keep from letting go. \n\nIt had gotten on top of me. I was losing control. I had to orgasm.\n\nI looked around for a bathroom.\n\nIt didn't matter what was happening anymore. My pussy demanded attention. My clit felt like it was on fire.\n\nI stepped through the door, ignored the two women standing at the mirror and began looking for a stall with no visible feet.\n\nI took the one on the end. \n\nI took a breath as I latched the door. \n\nMy body spasmed, my knees locked, and a wave of bliss moved through me.\n\nI held onto the top of the door as my whole body shivered like I had been splashed with a bucket of ice water. It was intense. \n\nWith my eyes clenched shut, I tried to relax. \n\nI wasn't panicked, but I was close. I reached down, unbuttoned, my jeans and shimmied everything to my ankles. \n\nA warm bead of my love juice tickled me as it rolled down my inner thigh. \n\nI sat down and looked between my legs. \n\nAgain, I noticed the scribble again, the red lines interwoven like a complicated knot.\n\nMy cunt was swollen, my pussy lips glistened, and I could see my clit, engorged and begging to be touched.\n\nI ran my hands over my mound, then slid in a finger up and down my crease.\n\nI caressed the outside. My wet fingers moving around my button sent shockwaves pleasure through me. \n\nI held my breath and dipped inside before bringing the juices back to my little button.\n\nMy toes curled against my shoes and I pulled my knees back and spread my legs wide. \n\nI rocked my hips forward, my fingers dipped inside again. I curled my fingers and found the most sensitive part of me. \n\nI melted and then began to fuck my fingers.\n\nFull and empty, full and empty, I stretched around my own fingers until I gasped and froze.\n\nMy body tightened as a wave of pleasure rose from my stomach and seemed to wash over my chest and then down to my toes.\n\nMy vagina pulsed and squeezed my fingers. \n\nAnd then it was over.\n\nI took a breath.\n\n\"You alright in there?\" \n\nI looked up. The door was still locked. \n\nBut I saw someone standing near the door. The woman's shoes started across the floor, closer to me.\n\n\"Yeah,\" I sighed, \"sorry, long day already.\"\n\n\"Sounds like it.\" The shoes stopped, turned around, and started back toward the door.\n\nI rubbed my eyes. I must have completely gone blank while I came. Did I moan? I felt like there was a real chance I had been moaning. \n\nOh, god, what other sounds did I make?\n\nI slipped my fingers into my mouth and wiped my tongue along them. \n\nIt was over. Whatever it was, it had passed like thunderstorm. \n\nBut what was happening to me? \n\nI had never experienced such raw desire, such sudden and undeniable need.\n\nDid this have something to do with Olivia? How? What the fuck was wrong with me?\n\nI got to Olivia's house around 7. Dad dropped me off at the end of the driveway and I stared up at the house like it was the first time I had ever been there. Before I took two steps, Olivia opened the door in a bathrobe and her long, dark hair wrapped in a bath towel on top of her head. \"I thought you were never going to get here,\" she said as she opened the door for me.\n\n\"I had a bunch of stuff to do.\" I slipped past her and looked around for her mom. The place was oddly quiet. \"Where's your mom?\"\n\n\"She's at a conference in Chicago.\" \n\nThe door clicked closed behind me. No mom, meant we were alone. That's why she had been so adamant and excited.\n\n\"See, I already started,\" Olivia held out her arms. On the underside of both were ten or twenty of the strange shapes like she had drawn on me. And they were all different but connected. \n\nI stared at the symbols. To me they were meaningless. I mean they were just strange symbols or diagrams or something. It looked like Olivia had been doodling on herself all day. \n\n\"What do they mean?\" I sat my bag down. \n\n\"Spells,\" she laughed, \"you can't read them, yet.\" She leaned forward and kissed me. \n\nIt was just a peck on the lips, quick, but her lips were soft and hot. I couldn't help it, I instantly reacted.",
        "Olivia stepped back with a broad smile. \n\nI looked around the place. It was neat and quiet. The lights were out in the living room and it looked like she had closed every blind.\n\n\"Come on,\" She grabbed my hand and turned me back toward the stairs to her room. \"The moon will be up soon.\" Olivia ran ahead of me as we went, and I stared at the curves of her ass under the thin, red robe. \n\nThe warmth started in my belly again. I watched her hips rise and fall as she trotted up the steps in front of me. \n\nI smiled. \n\nI remember the way the orgasm had broken across me. This time I wouldn't have to settle for a bathroom stall. I thought back to the frantic moments, the inescapable urge to orgasm, it had been like my life depended on it.\n\n\"Hey,\" we were almost at the top of the stairs, \"did you do something weird to me?\"\n\nOlivia stopped and glanced over her shoulder, her face looked confused. \"What do you mean?\"\n\nI thought for a second. \"This!\" I held up my wrist. How was I supposed to explain what had happened at school? It honestly didn't make any sense, it was like I had taken a drug. \"Nothing,\" I said, \"I just had a really weird day.\" I smiled and pretended to blow it off. I had a feeling my curiosity would be satisfied. Between Olivia's luscious curves, the strange symbols drawn across her skin, and the fact that her mother was away on business - I had a feeling the evening might just live up to Olivia's expectations.\n\nWe walked down the hall over the breezeway and into her room, which was above the garage. \n\nI had always been jealous of her room, detached, separate. It was more like an apartment than a bedroom. She even had her own bathroom and a little refrigerator.\n\nI tossed my bag into the usual corner and then looked around. The room had been transformed since the last time I had seen it. \n\nThe rug from the middle of the room was rolled up and under the bed which had been pushed up against the wall long ways. \n\nThe blinds were all closed, and the room was lit by candles.\n\nBut the center of the floor was the masterpiece. Where everything had been moved away, Olivia had drawn two intricate circles in what looked like salt and sand. The circles were only a hands width apart but in between them were more of the symbols like she had drawn on my wrist.\n\nAll the way around the circumference, Olivia had painstakingly drawn this intricate design in salt and sand. One white, one gray, alternating symbols. It was almost hypnotic just looking at it.\n\nA couple candles were on either side. There was a small cloth-wrapped item in the circle.\n\nThe entire setup was more intricate than anything I had ever seen Olivia try. I mean, we had fucked around with candles and spells and sitting in a circle, but this was different.\n\n\"It's beautiful.\" It was all I could say.\n\n\"I did it,\" she smiled, \"it's real, Abi, it's all real.\"\n\nWe looked at each other for a moment. Neither one of us said a word.\n\n\"How?\"\n\n\"I don't know,\" she shook her head like she still couldn't believe it. \"I just tried a thing in a book and it did a thing and I kind of understood how that worked.\"\n\n\"What do you mean it did a thing?\"\n\nOlivia grinned. \"How many times did you cum today?\"\n\nI slapped her arm and looked down at the symbol on my wrist. I had been right, it had been her, but that meant that what she had drawn, a seemingly meaningless symbol in marker. \"Wait.\" I sat down on the edge of the bed.\n\nThe feeling, no, the need had been so intense. I could still remember the way my body quivered after the first orgasm.\n\n\"I needed to begin the process,\" Olivia said, \"you know, I had to get our chemistry right for tonight.\" She pulled open the gap in her robe to show off a little more cleavage while she waggled her eyebrows playfully. \"Sex magic is tricky.\"\n\nShe stood up and looked around for something. \"I've been working on this for like three weeks.\"\n\nI noticed the piles of books and clothes on every surface that wasn't the floor.\n\n\"I think I understand how it all works.\"\n\n\"You can really make someone fall in love with you?\"\n\n\"Yeah,\" Olivia smirked, but I apparently need a lot of energy, like you and me, we need to, wow, I think it's a lot. I mean, everything I can read.\"\n\nI caught the tone even before I caught the words. She was sure but not sure. I had known her long enough to know when it was just a lack of confidence or when Olivia had someone skirted the obvious and jumped to some crazy conclusion about how we could totally just take a road trip across the country in her dad's old jeep for like a few hundred dollars.\n\n\"Everything you can read?\"\n\n\"Some of it's really old. I found a website that can translate some old stuff, but like the main spell, I don't, you know, I mean. I know what it is.\" She found the marker she had been looking around for and sat back down on the bed.\n\nI shook my head. I didn't really care. Whatever had happened at school had been irritatingly mistimed, but it had been incredible. Besides, I was horny, and I needed a good fuck and I knew after a few glasses of wine and whatever spells Olivia wanted to try, the evening was going to end with the two of us exhausted. \"We're not in any danger, right?\"\n\n\"Danger?\" Oliva pulled the cap off the marker and flipped my arm over. \"No, it's a love spell, I made sure.\"\n\nI wondered what it was like to believe in something like magic, something you couldn't see or touch. But then again, could she be right? Could everything that had happened at school, be because of the magic symbol she drew on my arm? How could that be?\n\nAnd then one symbol became three and I liked the way they looked, like an intricate lace sleeve.\n\n\"Sl\u00f8rets bef\u00f8jelser viser hende vejen.\" Olivia said the words slowly.\n\n\"What is that?\" I whispered like I was worried I was going to interrupt her.\n\n\"It's the beginning of the spell.\" The pen moved across my skin. The black ink drew another line. \"What does it mean?\" I was more curious than I cared to admit.\n\nOlivia smiled. \"Something about the veil, a veil, it's the first line. Say it with me.\" She finished one symbol, drew a thin line between the two and started on another, this one was almost to my shoulder. \"Sl\u00f8rets bef\u00f8jelser viser hende vejen.\"\n\nI said it, but I didn't know why or what it meant. \n\n\"Here's the next. sl\u00f8rets kr\u00e6fter beder vi om hj\u00e6lp.\"\n\nI repeated the phrase with her. \n\nI kept wanting something to happen. I kept wanting to feel something, to see something.\n\nOlivia finished the symbol and then sat back. \n\nShe looked my arms over. \"The runes will bind our energy,\" She reached out and traced one symbol with her fingertip. It felt like a feather moving across my skin.\n\nI wanted to kiss her. \n\n\"Can you feel it?\" She leaned forward and touched her lips to mine.\n\nThe feeling I had had at school, returned. \n\nHer lips were soft and warm.\n\nI kissed her and began to reach for her, but she leaned back.\n\nShe pointed to a symbol near her elbow. \"See, mine matches yours. What you feel I feel.\"\n\n\"Are you serious?\" I licked my finger and slid it into my ear.\n\n\"Oh my god!\" Olivia laughed and swung the marker like a sword. \"Stop it!\" She laughed.\n\nI laughed too, but I couldn't believe what was happening. She hadn't really just felt that, had she? My heart began to race.\n\n\"Here,\" she pulled a bottle of wine from nightstand, \"we can drink out of the bottle. Light the candles,\" she pointed toward the lighter on the floor.\n\nI wanted more. I wanted to tackle her to the floor and kiss her. I wanted to grind my hips into hers. But I picked up the lighter and lit the candles she pointed to.\n\n\"Take a few gulps. It'll help focus our energy.\" \n\nI laughed. \"It always has in the past,\" I grinned and tipped the bottle back. \n\nThe wine was broad and sweet. A red she had added honey and spices to. One sip only made you want more. The alcohol seemed like a myth.\n\n\"Where did you find the spell?\" I looked around the room again. It wasn't like her to be messy, but she had been busy. There were books in piles all over the place. Scraps of paper. A box of weird things - leaves, candles, a mushroom of some kind.\n\n\"A cool little bookstore out in the suburbs, over by Piney Ridge.\"\n\n\"Oh, cool.\" I took another long gulp. \n\nOlivia leaned over, and her robe fell open slightly. \n\nI couldn't help myself, I stole a quick peek. Her breasts were much larger than they had been. They were round and firm. The stood off of her body proudly. The tops of her breasts were covered in more runes and symbols. \n\nI couldn't believe it. Even more runes rose up along her sides of her chest, all about the same size, all in black ink, and each connected to the next by single line.\n\n\"Do they each mean something or do something?\" I asked.\n\n\"Kind of, she said and stood up. \"Come over to the circle. Bring the wine.\" \n\nI took her hand and followed her over to the masterpiece she had created. The symbols she had drawn in sand were amazing. The detail she had achieved.\n\n\"It's beautiful,\" I said.\n\n\"It's got so many symbols I have never seen.\"\n\n\"What do they do?\"\n\nOlivia shrugged. \"I can't really figure it all out. All I know is it works. Anything I have tried inside has worked, but I don't really know why yet.\" She stopped and looked at me seriously. \"You don't have to do this, Abi. I know you don't believe in all of this.\"\n\n\"I totally want to.\" I took her hands in mine and squeezed. \"I love you,\" I kissed her cheek and stepped carefully over the circle's border. \"What's that?\" I pointed to the package on the floor.\"\n\n\"A surprise.\" She chuckled and pulled her robe up around her thighs before she stepped inside. \n\n\"Do you think it will work?\" I asked looking at the symbols around us. \"What happens if it does?\"\n\n\"She'll fall in love with me.\" Olivia pulled the towel off her head and let her long, dark hair free. \"And then I will fuck her brains out, like constantly.\" She stuck out her tongue and gave me a silly face.\n\nI laughed. She never ceased to amaze me. \n\nAll this work for a straight girl. Sometimes, I wished we could be together, but we both knew it would never work. I liked to swing back and forth. I liked pussy, but I also liked cock. I liked the softness of a woman but sometimes I wanted the strength of a man. \n\nOlivia was gay through and through. And she liked a woman like Kate, a strong woman. But she never stopped following her heart. Whatever she wanted, she chased.\n\n\"And you think this will work,\" I reached out and pulled one end of her robe's belt. The cloth fell open and revealed her new, larger breasts.\n\n\"It worked on these,\" she pressed her upper arms on either side and squished them together. \n\nJealousy burned through me. I couldn't believe how large and perfectly round they were. \"They're huge.\"\n\n\"I couldn't help myself,\" she wriggled her shoulders and made the supple flesh jiggle. \"I was working on this,\" she pointed toward the circle, \"and I got really horny, and then I kind of got in this like zone. I mean, I was working on the symbols and I was so horny. And so, I stopped, and I was, you know, kind of feeling myself up, and then I thought. God, I wish my tits were bigger.\" She laughed, \"you know, we always want bigger tits, right?\"\n\nI stared at her new curves. \n\n\"It felt so weird, like they were being molded, pulled from me like a potter pulls on clay. It was strange.\"\n\nI wrapped my hand around her left breast and gave it a squeeze. It felt as real as my own, just bigger, and heavier, and better. \"So, you didn't cast like a spell or something?\" I looked at the runes she had drawn across the pale flesh of her chest.\n\n\"No, it wasn't a spell. I just kind of asked for them and the next thing I know.\" \n\nOlivia sighed as I fondled her breasts. \"I love the way you touch me.\"\n\nI leaned forward and kissed her again. \n\nThis time she sucked my lower lip in between hers and moaned softly before she pulled back and laughed. \"Eager, are we?\" She pushed me away playfully. \"Give me the wine.\"\n\nI handed it to her and sat back.\n\n\"Don't get comfortable, you need to get undressed,\" she took a quick gulp or two of the wine.\n\n\"Oh, really?\" I stood up. \"Want me to do a little dance too?\" I moved my hips back and forth while I lifted my shirt over my head. \n\n\"I like that bra,\" Olivia said as I bent over to slip off my shoes. \n\n\"I thought you would.\" I slipped off my shirt and pants. Then my underwear and bra. \n\nOlivia watched me, smiling like a hungry cat. She reached out and touched my wrists.\n\nI took a breath. I wanted her. The desire I had experienced earlier in the day, was creeping up on me.\n\n\"Can you feel it?\" Olivia took a deep breath and closed her eyes. \"It's already building.\"\n\n\"What?\" I sat down on my knees careful not to get to close to the circle that surrounded us. \"What is it?\"\n\n\"The energy,\" she opened her eyes and I swear, they were a little greener than they had been. \"The circle I wish I understood what it was, what was happening. You can feel it too though, right?\" She looked at my breasts, my hardened nipples. The goosebumps that rose along my flesh.\n\n\"I can.\" And I could. There was something there between us, something more than the just the physical attraction we had shared since we were younger. This was something else. Something I couldn't quite put my finger on. But it was thrilling. Like nothing I had ever experienced before.\n\n\"Kom til os og giv os din velsignelse.\" Olivia recited the words from memory. She took my hands in hers. \"Smil p\u00e5 vores enkle anmodning.\" \n\nThe room around us seemed to grow darker, like the lights had dimmed or we were in shadow. \n\nI watched Olivia, spellbound as it were by what she was doing. Her hands were hot. \n\nI wanted to kiss her, take her in my arms. I wanted to feel the weight of her body on mine, her breasts pressing against me. \n\nI reached up and grazed my fingertips along the stiff flesh of my nipple.\n\nDesire burned through me. But I had to sit still. Had to be patient. Something was happening.\n\nI bit my lower lip and closed my eyes. What was happening?\n\n\"Smil p\u00e5 vores enkle anmodning.\" \n\nShe let go of my hands and traced the symbol she had drawn over her heart. \n\nI could feel her fingertip along my skin but looking down, there was nothing there. \n\nShe moved her hands around her breasts, and I felt the warm curve of her palms along the underside of my breasts.\n\nI jumped, startled.\n\n\"Don't be afraid.\" Olivia said softly. \"They said we would become one.\"\n\nShe bit her lip and I crawled toward her. I couldn't help myself. I had to touch her, had to kiss her. \n\nI crawled up to her. Our noses brushed. Her breath flowed across my lips just before our mouths met. There was arousal and urgency.\n\nI moved my body between her legs as I kissed her, like I was a dog trying to crawl into her lap. \n\nOlivia's tongue was warm. \n\nWe kissed, and my body was on fire. \n\nBut Olivia only pushed me away again. \"Not yet, my dear.\" She wiped her already puffy lips with back of her wrist. \"Sit,\" she pointed.\n\nI turned over and got on my hands and knees. I aimed my wanton pussy right at Olivia's face. \"Are you sure?\" I looked over my shoulder, down my body, to where she was staring at what I had to offer.\n\nShe bit her lower lip. Her hands clenched into fists and then back open. I could tell she was weighing it, so I swayed my hips back and forth, a little extra temptation. \n\n\"You have the sexiest pussy,\" she reached out.\n\nI felt a finger slide between my folds. Instinctively, I pressed back toward the sensation.\n\n\"It's so perfect, the way it hangs between your legs, a peach.\" \n\nI looked back and watched as she licked her finger clean of my anticipation.\n\n\"But no, we're not done.\" She slapped my ass cheek and I crawled back to my side of the circle.\n\n\"Besides, we still need one more thing.\" She reached over and unfolded the little cloth parcel that sat beside her. \n\nI watched. I had no idea what would be inside, I knew next to nothing about any of this. Was it going to be like a voodoo doll? A little trinket of some kind? A strange herb?\n\nThe cloth folded back, and I saw what looked like wood grain. Round but there was a curve near the center. \n\nOlivia folded another side back and more came into view. The wood was dark with bright yellow grain. It was smooth and polished to a shine. I wondered if it wasn't the handle to some kind of tool. \n\nThen she finished unfolding it and I was staring at an eighteen-inch, wooden dildo.\n\nI stared down at the apparatus in shock. The piece was long and thick with a slight bow in the center. Each end was carved like the flared, mushroom-head of a real cock, a thick one. \n\nOlivia picked it up, lovingly, and then glanced up at me. \"This is the vessel, the conduit.\" She held it up for me to see.\n\nI had no idea what she was talking about. I didn't know what she meant by vessel or conduit. All I knew was my mouth was watering. My cunt was suddenly soaked, and all I wanted in the entire world was to feel the piece of dark, polished wood, spread my nether lips.\n\n\"This will link us,\" she chuckled, \"literally.\"\n\nOlivia and I had gotten our hands-on toys over the years. When we were young, it was fingers and whatever else we could find that fit - kitchen spoon handles were nice. Olivia's mom had boxes of tapered candles we were both fond of.\n\nLater I had purchased a vibrator and Olivia had gotten a dildo made of purple rubber. Those two things became our favorite toys during sleep overs.\n\nNow we both had all kinds of toys in our nightstands. \n\nBut this we different. \n\n\"Touch it,\" Olivia held one end toward me, \"hold onto it.\"\n\nAs soon as I touched it, I felt it. \n\nIt's difficult to explain what it felt like. It was cool, not cold, like electricity mixed with fire, and it flowed through me like it was being moved in my blood, pumping through every vessel and vein. \n\nI yanked my hand away, surprised like I had touched the burner on the stove without knowing it was hot. \"What was that?\" I asked.\n\nOlivia chuckled. \"It's magic.\" Her eyes were wide. \"This is the key. I made it.\" She was so excited. \n\n\"Made it?\" I looked at the thing again. It was beautiful.\n\n\"I ordered the wood from Europe, a piece of an altar from like medieval times or something. Then I just used a knife and sandpaper.\" She held it up in her hands admiring it. \"I came so many times just imagining what it would feel like, what it would be like to do it with you.\" She ran her hands around the wood lovingly. \"I imbued it last night. It's ready.\" She smiled over at me.\n\n\"It is?\" I asked. I could barely concentrate on what she had been saying. There was something about the phallus, it was like it was calling to me, like I was attracted to it. I had never felt anything like it. I couldn't believe it. \n\n\"Finally,\" Olivia said, seriously. \"Here, hold onto to it. It's amazing.\" She pointed the phallus at me.\n\nI reached out and wrapped my fingers around the shaft.\n\nThe energy moved up my fingers, across the back of my hand and then up my arm. I took a breath as it crossed my chest and seemed to melt into me. I closed my eyes as it moved through me. \n\nIt felt amazing like the warmth of skin on skin. \n\n\"Vi tilbyder dette skib til dig.\" Olivia said and then looked at me. \"You say it too. Vi tilbyder dette skib til dig\" \n\nI stumbled through the words, but somehow, I knew it didn't matter.\n\nThe energy moved through me, into me and then back through my fingertips and into the wood. It was like the tide, the gently back and forth. \"Can you feel it too?\" I asked Olivia.\n\n\"Yes,\" Olivia stammered. \"It's...amazing.\"\n\nOlivia tossed her robe open and lowered the dildo. \"Now here.\" She spread her legs and brought the dildo between her thighs. \n\nI did the same, mimicking her motions.\n\nShe said the phrase again and I tried to keep up.",
        "The energy moved into me again, this time faster and with more force. I felt it moved through me. It washed across my brain, it felt like every nerve tingling all at once. \n\nThen it washed out of me, leaving me empty for a moment, a half a breath, before it bounced back and broke across me like a wave.\n\nI gasped and then moaned as the sensation made my clit ache.\n\nI didn't know what was about to happen. I didn't understand any of what was happening. All I knew was it felt good. \n\nAll of it. \n\nOlivia pulled the wood toward her swollen pussy lips. \n\nShe rubbed the head up and down. \n\nThe pink flesh of her insides opened and closed as the smooth head rolled over her clit and made her moan.\n\nI shifted my hips until the wood touched me.\n\nThe energy flowed into me again, stronger still.\n\nI lifted the hardwood along my gash and across my own little nub of anxious flesh.\n\n\"Oh!\" My body shuttered. \n\n\"Yes,\" Olivia moved the head through her labial folds and then the tip disappeared. She pulled the wood in my hands toward her and I help feed into her waiting cunt.\n\nI felt the stirring in my body. It was like I was more alive. It was a high unlike anything I had ever experienced.\n\nMy hand brushed across my nipple and I thought I was going to cum.\n\nThere was an ache of desire deep within me. I wanted to give myself to the wood in my hand. I wanted to please it. \n\nMy pussy quivered as I watched it slide into my friend. \n\nI waited until Olivia's head rolled back and her lips parted silently. I reached down and rubbed three fingers through the wet mess my vagina had become. It felt so good. \n\nI moaned as the heat coursing through me intensified. \n\nThe totem in my hand, I caressed the smooth curve along my moistened treasure box again, teasing it almost. Then my hips moved forward, and the tip spread me, opened me. \n\nAnother moan escaped.\n\n\"Gl\u00e6d dig i vores tilbedelse.\" Olivia said, her voice strained.\n\nI rocked my hips back and then forward, scooting my ass as I did. The wood slid into me, filled me. \n\nI stared down at where my hand touched Olivia's while we both held shaft of our Impaler.\n\nI kissed her passionately. \n\nOur tongues danced between our lips.\n\nI wrapped Olivia in my arms as we both fucked the wooden conduit in and out.\n\nShe reached between our bodies with her free hand and toyed with my clit before she smeared my nectar across my nipples.\n\nI leaned back, and she sucked my right nipple into her mouth.\n\nHer tongue was rough as it moved around the stiff flesh.\n\nAn orgasm started to build.\n\nI leaned back and focused on the wooden cock. It felt like it was alive, like a real cock fucking me. I ground my hips against every thrust, deeper and faster. Every time it moved into me, more energy seemed to fill me. \n\nI looked up at Olivia, but her eyes were closed in ecstasy.\n\nI looked around. \n\nThe room was dark or gone, I couldn't tell, but there was definitely something else. Something I couldn't see, like a presence, like someone watching. \n\n\"Giv mig kvinden, Kate, og jeg vil tilbede dig for evigt.\" Olivia's voice was hoarse as she kept driving the phallus in and out of both of us.\n\nMy orgasm grew closer. \n\nThe cock in her hand changed. Symbols blazed across the surface. They looked like they were lit with fire for a moment and then they faded.\n\nOlivia gasped and let go of the moving shaft.\n\nNow it was just us, our bodies moving against the tool between us. My hips moved back, and the wood slid deep inside. Then I shifted.\n\nI spread my legs and thrust forward, meeting the assault. I wanted more. I couldn't believe how good it felt. I had never been fucked so well. My hips moved on their own, meeting every opposing thrust.\n\nI ground the head of the cock into my spot as it slid back and forth, banging against me depths, sucking my breath away.\n\n\"Don't stop,\" I screamed as the room began to spin.\n\n\"Vi er dine, gl\u00e6der os, vi er dine, tager vores forn\u00f8jelse og giver os vores \u00f8nsker.\"\n\nOlivia sat up. Her eyes were wide and glazed. \n\n\"Oh!\" She cried out, her face a mask of ecstasy \"Oh, fuuuuuuuck!\" \n\nEvery muscle in her body went rigid. She convulsed and arched her back. \n\nI watched, the dildo frozen inside me, my own pussy clamping down on the hardwood, the muscles milking the length, wishing it would let go, show me it's pleasure. \n\nOlivia climaxed.\n\nI felt the flood of warmth go straight from Olivia's swollen cunt to my own. The phallus seemed to pulse - not physically, but in waves of pleasure and lust, like it was transmitting Olivia's euphoria into me.\n\nI shook my head. I gasped. My own orgasm was close, closer than I had thought. \n\nI bit my lower lips and held my breath. Ripples of pleasure were increasing, concentrating, building. \n\nWaves of heat built in my stomach and then broke across me like waves during a storm. \n\nI fucked myself against the dildo's assault as I shivered, overcome\n\n\"Yessss...\" A voice echoed through my thoughts. \n\nIt was strange. It wasn't mine, but it was like I knew it. And it was so close, like she was right beside me almost, but somehow also impossibly far. And it felt like she was watching, like every move I made excited her.\n\nA strange satisfaction came over me. I smiled and ground my hips against the phallus that impaled us both.\n\nOlivia leaned forward, the cock still firmly ensconced between us, and kissed me. Cold sweat dotted her forehead. \n\n\"Oh my God, that was unbelievable,\" she panted.\n\n\"Yes,\" I sighed as my pussy spasmed around the hardwood. \"I can't believe it's real.\" I said between breaths. I felt like I had just run a 5k. I was winded.\n\n\"It's amazing isn't it?\"\n\nI shifted my hips a bit and a little sliver of an orgasm tickled through me. \"Did you hear a voice?\" I asked. \n\n\"What voice?\" Olivia looked at me like I was ridiculous. \"You heard a voice?\"\n\nI thought about it. Had I? I was sure I had. \"I did. A woman's voice. It was sweet and seductive.\"\n\n\"What did she say?\" Olivia sounded serious.\n\n\"She just said, yes, but it was...\" I didn't know how to finish what I was saying. \"It was like she was watching me, us, like everything we did made her more and more excited and happy. \n\n\"It could be a spirit?\" Olivia said without hesitation.\n\n\"A spirit?\" I looked around but not out of fear, more like fascination. \n\n\"I mean, magic involves spirits sometimes.\"\n\n\"Did this?\" I asked.\n\nOlivia looked away, obviously embarrassed. \"I mean, I don't really know.\"\n\n\"Okay,\" I said, \"Did it, at least, work?\"\n\n\"It had to, I could feel the energy moving around us, waiting for my request.\"\n\n\"I wonder what will happen?\"\n\nOlivia slipped her hand around the dildo and gently pulled herself free.\n\nWhen she touched it, I felt it move inside me. God, it felt so good. I moaned. \n\nWe freed ourselves and carefully stepped out of the circle. It took me a few minutes to get myself stabilized. My body was weak. It felt like I had been working out for hours. My muscles were stretched and sore. But it felt good. It felt really good.\n\nI looked over at the clock. It was almost three in the morning. I couldn't believe how many hours had passed. It had felt like a lot less, like it should have been ten or eleven, three in the morning seemed impossible. \n\n\"I know,\" Olivia saw me looking at the clock. \"Strange, huh?\"\n\n\"It passed so quickly.\" I said walking over to a stack of books under the windowsill. \n\nMy curiosity was alive. After all the years of hearing Olivia ramble on about magic, now I understood. It was real. I had just experienced it and now I wanted more. Lots more. \n\nBelief. I had no idea what had just happened, but I knew that it had been more than just sex with a dildo and Olivia. \n\nNo, the spell and the circle and symbols - all of it was real. \n\nSex magic was real. What we had just done, what we had just experienced was beyond anything I had ever imagined.\n\nCuriosity was an understatement. \n\nI picked up an old book with a worn leather cover. It was a notebook, an old one that smelled like earth and dust and time. \n\nI stared down at the ink stained first page. The word Lexicon was scrawled across the center.\n\n\"That's some of the symbols. The lady at the store said she didn't know how old it was.\" Olivia pulled out her phone. \"I want to text her.\"\n\n\"Text who?\" I asked.\n\n\"Katie.\"\n\n\"Oh, fuck me with your new toy and then all you can think about is some other girl?\" I playfully pouted as I ran my finger along the ink.\n\n\"Don't you worry, that was just round 1.\" Olivia smiled. \"Have some more wine.\"\n\nI grabbed the bottle and took a long sip. I was so thirsty. \n\nThe flavor of the wine coated my mouth and tongue. I savored it for a moment. My brain was still wrestling with the fact that make believe pretend was now real. \n\nBut I couldn't deny what had just happened or how it felt. \n\nI wanted to ask a million questions, but I also just wanted to get back in the circle with Olivia and try again. God, I wanted that feeling again. I chuckled and licked my lips."
    ],
    "authorname": "gabrielleprevot",
    "tags": [
        "futanari",
        "magic",
        "lesbian",
        "trans",
        "dildo",
        "lesbian sex",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/succubus-pt-01"
}