{
    "title": "Transformations - The Farm Ch. 05",
    "pages": [
        "Comments welcome! \n\n***** \n\nBreakfast was forgotten as they all rushed downstairs to the lab. Alex scooped up Heather and made his way to the basement door. \n\nBear caught up. \"I'll take her.\" \n\nAlex's eyes flashed angrily. \n\n\"No, let him, please?\" Heather whispered. \n\nAlex sighed and passed her into Bear's arms. \n\n\"I need to talk to you,\" Heather said into Bear's chest. \n\n\"Later. Right now is about making you well.\" \n\nDemona nodded. \"Listen to Sasquatch, honey. He's right.\" \n\n\"Doc, I feel okay, really,\" Heather said as Bear descended the stairs with her. \n\n\"Yeah, that's the problem with being amped up on all the hormones - you don't know when you're hurt.\" \n\nBear reached the basement and carried her to the nearest operating table. \n\n\"I'll get the surgical kit,\" Karen said as she rushed past them. \n\nDemona looked at the cute coed running, muscles churning in her tight little ass. \"Well, fuck me,\" she whispered. \"Didn't even have to give her an order. Kid's a natural.\" \n\nGwen winked. \n\nDemona hugged her. \"Goddamn, tits, you're good. Nice choice.\" \n\nDemona leaned up and turned on the bright light over the table. \n\n\"Sasquatch, get her out of that halter and those Daisy Dukes. Time to get naked, beautiful.\" \n\n\"Is this going to hurt?\" Heather whispered, her calm finally breaking. \n\nRebecca rushed to her side and took her hand. \n\nBear looked from Heather to Rebecca, unsure of what he was seeing. \n\n\"Now, have I ever hurt you, baby doll?\" Demona asked. \n\n\"No. I guess not.\" \n\n\"Damn right, I haven't.\" She stroked Heather's forehead. \"Just relax. We got you.\" \n\nKaren rolled a heavy cart to the operating table. \"Laser scalpel is charged, and I have Propofol and Insta-Heal...\" \n\nAll the color drained from Heather's face. \"Oh... fuck...\" \n\n\"Lesson number one, dummy? You never tell them what's on the cart,\" Demona growled. \n\n\"Oh... shit, I'm sorry,\" Karen whispered. \n\n\"Yeah, yeah... Propofol is an IV anesthetic. Get me an IV kit. But, first, bring me a syringe of Knock-Out. I don't even want her awake during the IV insertion.\" \n\n\"Yes, Doctor,\" Karen said as she ran away toward the medicine cabinet. \n\n\"Bear?\" Heather said. \"I need to tell you something.\" \n\nBear took her other hand. He leaned close. \"What is it?\" \n\n\"I will always, always be in love with you. Forever. I mean that.\" \n\n\"Shh, I know. I love you too.\" \n\n\"I told you I wasn't bound. It turns out I am. To Alex. That doesn't change anything about you and me, do you understand? I am still in love with you. I'm just in love with the coven too.\" \n\n\"Okay, okay, stop worrying about any of that,\" Bear said as he held her hand in his big paw of a right hand. \n\n\"I just need you to know.\" \n\n\"I do. I know.\" He kissed her fingers. \n\nRebecca smiled at him and Bear smiled back. \n\n\"Okay, enough soap opera,\" Demona said as she held up a syringe. \"I need you to go nighty night now, okay?\" \n\nHeather smiled and nodded. \n\n\"Little stick.\" Demona maneuvered the needle deftly into Heather's arm. \n\nA moment later, Heather was unconscious. \n\n\"Okay, all you motherfuckers out of my surgery,\" Demona growled. \"Alex, I left some supplies in the van. Need to get them in out of the hot sun.\" \n\n\"Sure thing,\" Alex said. \n\nEverybody walked toward the stairs, including Karen. \n\n\"Where the fuck are you going, dumbass?\" \n\n\"Uh, you said...\" \n\n\"Surgical staff stays. Honestly, do you need me to tell you everything? Scrub up. You know how to do that, don't you?\" \n\n\"Uh...\" \n\n\"For fuck's sake.\" \n\n*** \n\nEveryone else went upstairs, but Gwen led Lisa and Mikaela down to the sub-basement. \n\n\"You think she'll be okay?\" Lisa asked as they reached the bottom of the stairs. \n\n\"Yes, sweetie. Demona is brilliant. I've seen her bring people back from the brink countless times,\" Gwen said. She led them past the cage where Mikaela and the other cheerleaders had been incarcerated. \n\nOn the far wall was a bank of computer monitors. \n\n\"Slutz-Net, are the latex items complete?\" Gwen asked. \n\n\"Latex outfits complete,\" the computer announced. \n\n\"We print most of our outfits. Fetish clothing stores never get our proportions correct. Slutz-Net is always accurate. \n\nA panel slid open. \n\nGwen reached in and took out a shiny, white latex garment. \"Lisa. This is yours.\" \n\n\"What is it?\" \n\n\"A leotard of sorts. Take off those rags.\" \n\nLisa began taking off the track suit. \n\nGwen smiled. Any traces of the girl's former modesty were fading away. And, why not? She was amazon perfection. \n\nShe took the garment from Gwen's hands. \n\n\"It's precoated inside with a lubricant, no need for powder,\" Gwen said. \n\nLisa turned it over and over. \"How does it... I mean, I can't figure out how it goes on.\" \n\n\"The front is open, from just above your crotch to the bottom of your breasts. It's to show off your flat tummy.\" \n\n\"Oh, I see.\" She found the leg holes and began to slide it up her long legs. \n\nMikaela leaned close to Gwen. \"Gwen, will I look like that? I mean, she's perfect.\" \n\nGwen smiled and caressed Mikaela's face. \"Yes. You're going to have breasts just like that. And, a hard muscled stomach and those luscious long legs.\" \n\n\"Mikaela,\" Lisa said as she struggled to pull the bottom of the suit over her hips. \"Have you looked in a mirror? You're built as fuck already!\" \n\n\"Thank you,\" Mikaela said. \n\nLisa stretched her arms, finally finding the arm holes. \n\n\"Go on, it will stretch,\" Gwen said. \n\nShe pulled the back of the suit up and over. \n\nIt was a unitard with a high neck that reached almost to the top of her throat. \n\nBut, the front had an oval cut out that stretched from just above her mound almost to her nipples! The bottom of her big breasts was bare. \n\n\"Holy fuck,\" Lisa whispered as she looked at herself in the mirror. \n\nHer inverted pentagram tattoo below her navel was displayed prominently on her washboard tummy. \n\n\"I can't wear this in public.\" \n\nMikaela caressed her back through the latex. \"Why not? Shit, if I looked like that I'd wear a micro bikini to the grocery store.\" \n\nLisa hugged her. \n\nGwen pulled a pair of boots out of the compartment. \"These go with it.\" \n\nThey were thigh high white latex boots with seven inch spike heels. \n\n\"Those are fucking hot,\" Mikaela breathed. \n\nLisa sat down on the floor and pulled them slowly up her legs. \n\nShe stood up, nearly seven feet tall. She looked in the mirror. \"Is that me?\" \n\nGwen hugged her. \"Yes, baby, that's you.\" \n\nLisa blinked tears from her big gray eyes. \n\n\"Now, for you, Mikaela,\" Gwen said as she opened a second compartment. \n\nShe held up a translucent white rubber bra. \"The beauty of latex? It's going to stretch. You're a C cup now, but this will still work even when you're a G cup later today.\" \n\nMikaela's eyes widened. \"Today?! Really?\" \n\n\"That's the main reason Demona came - to do mods on you and the other girls. Heather's injury takes priority, but when she's done, she'll start on you.\" \n\nLisa stood behind Mikaela. She leaned down and kissed the girl's neck as she began unzipping the cheerleader outfit. \n\n\"Oh,\" Mikaela said softly. \n\nGwen smiled. \n\nLisa slowly lowered the suit, leaving Mikaela naked. \n\nShe ran her hands up the cheerleader's sides. \"Is it okay? If I do this? Do you mind?\" \n\n\"No, God no. I don't mind.\" \n\nLisa's hand slid down Mikaela's tummy. \n\nMikaela shivered. \"God, I feel fat next to you.\" \n\n\"What?! No! Silly,\" Lisa whispered as she kissed her way up Mikaela's neck to her earlobe. \n\nGwen stepped forward with the bra. \"Those feelings? Judging yourself? Comparing yourself? Those will go away when you take Ambrosia. Those feelings are for normals, and you are not going to be a normal, Mikaela. You'll see a beautiful woman or man and you'll just appreciate the beauty. Feel the lust. No more finding yourself wanting. You'll just find yourself wanting... them.\" \n\nMikaela laughed at that. \n\nAnd, then Gwen kissed her. Deep and soulful. \n\nShe didn't even notice when Gwen broke the kiss. She just stood with her eyes closed. \n\n\"See?\" Gwen said. \"Just like that.\" She gently lifted Mikaela's arms and Sid the bra on. It hooked in the back. \n\nMikaela opened her eyes as Gwen stepped to the side. \n\nShe smiled at her reflection in the mirror wearing nothing but the translucent latex bra that lifted her breasts and held them beautifully. \"Wow.\" \n\n\"Yeah,\" Lisa whispered in her ear. \"Very wow.\" \n\nTogether, Lisa and Gwen helped her pull a latex mini dress up her body. It showed off her skinny waist and thick breasts and hips. \n\nThe hem came just below her crotch and it clung to her like a second skin. \n\nWhite latex high heels completed the look. \n\nMikaela was crying. \n\n\"Darling,\" Gwen whispered as Lisa held her tight from behind. \"Why are you crying? Didn't you know how beautiful you were?\" \n\n\"It's not that,\" Mikaela whispered. \n\n\"What then?\" Lisa whispered. \n\n\"Nobody ever treated me like this. Ever. I was a really mean person.\" \n\n\"Shh,\" Gwen soothed. \n\n\"No, I was. You know I was. I'm not going to be like that anymore. I'm going to be like you.\" \n\nGwen turned and put her hands on both their faces, caressing their cheeks. She turned to another compartment. \n\nReaching inside, she pulled out two brooch's. They were platinum colored and about two inches across. Inverted pentagrams. \n\nOne had a white latex choker. She kissed Mikaela's lips and then wrapped the choker around her throat and snapped it closed. \n\nThen she pressed the second pentagram to the high throat of Lisa's unitard. It stuck fast. \n\nShe held their hands. \"This is the symbol of Morpheus. It is the emblem of the White Witches. No matter what you wear, white latex or white jeans, bodysuits or dresses, you always wear this symbol at your throat. We are the hand of Morpheus. We are the most powerful individuals to ever walk this earth. But, we are not just individuals, we are a sisterhood. And, we are here to save this world from itself.\" \n\n*** \n\nBear got to the top of the stairs and began pacing. \"I should have stayed.\" \n\n\"No,\" Alex said. \"Demona wanted us out of there, so out we are.\" \n\nAlex put a hand on Bear's shoulder. \"She's going to be okay.\" \n\nBear jerked away. \"Fuck off.\" \n\nAlex sighed. \"She is still in love with you, Bear.\" \n\nBear nodded. \"I'm not used to this shit.\" \n\n\"I know. When she's better, she'll explain.\" Alex nodded toward the front door. \"For now, take care of the stock until she's back on her feet?\" \n\nAlex turned to Rebecca. \"Can you go with him?\" \n\nRebecca nodded and followed. \n\nBear gritted his teeth. He nodded and walked to the door. He turned as he reached it. \n\nAlex nodded. \"Yeah, I'll tell you as soon as I hear something.\" \n\nBear turned quickly and headed for the barn with Rebecca trailing behind him. \n\n\"She will be alright, won't she?\" Jason asked. \n\n\"Sure, kid. She's in the best hands possible.\" \n\nHailey, Mary, and Belynda were a few feet behind Alex. \"I love your boobies,\" Hailey said to Mary. She reached up and squeezed Mary's big tits through the thin t-shirt she was wearing. \n\nMary laughed. \"Seriously? All this going on, and you're thinking about my tits?\" \n\n\"They are amazing,\" Belynda said. \"And, that cock is beautiful.\" \n\nMary shook her head. \n\n\"Can I get a hand?\" Alex asked as he headed toward the door. \"Demona wants those supplies moved into the house.\" \n\nThey followed Alex outside. \n\nA white van marked \"Stallion's Adult Novelties\" sat on the white grave drive. \n\nAlex punched in a code - the back door had a numeric keypad instead of a lock. \n\nHe started to open the door, but instead it exploded open. \n\nA small figure leaped out and landed on Alex's shoulders, beating and screaming. \n\nAlex staggered back, not from the force of the blows being delivered by the diminutive woman who was now attempting to scratch at his eyes, but from the sheer, sudden brutality of the attack. \n\nTwo other figures rolled out of the back: a fat man in jeans and a t-shirt and a skinny man wearing bicycle pants and a tight t-shirt. \n\nBoth had their hands zip tied behind their back and red rubber ball gags in their mouths. They ran off in different directions. \n\nThe fat man ran face first into Belynda, who effortlessly bent backward, throwing him into the air in an Aikido move that slammed him to the ground. \n\nTwo women tried to climb out next: a woman in an expensive skirt and blouse and a thinner version of her wearing short shorts. Obviously they were mother and daughter. \n\nThey were both zip tied with their hands behind their backs and red rubber ball gags, but they had evidently not been able to get the zip ties off their ankles. \n\nJason rushed to the back of the van. \"Wait! Stop! You're going to fall...\" \n\nMom lowered her head and hopped out, head butting Jason and sending him sprawling. \n\nMother and daughter began hopping toward the barn. \n\nJason tried to get to his feet, but Mary was quicker. She grabbed the daughter by the collar and yanked her back, causing her to land on her ass in the white gravel. \n\nMom turned to help and Mary socked her in the stomach. The woman fell backward, falling on her own ass facing her daughter. \n\n\"Hit my son again, whore. I fucking dare you,\" Mary hissed. \n\nAlex was spinning, trying to throw off the petite woman who was wrapped around the back of his neck and trying desperately to bite off his left ear. \"Goddamn it! I'm going to fucking hurt you if you don't stop!\" \n\nHe slammed his body backward, and the woman was caught between Alex and the side of the van. \n\nThe air whooshed out of her lungs and she fell off, blood from Alex's ear staining her lips and teeth. \n\nShe lay moaning on her back. \n\nAlex balled up his fist as he touched his ear with the other hand. He looked at the blood. \"You little bitch.\" \n\n\"Hey,\" Jason laughed. \"I thought we weren't supposed to hurt them.\" \n\nAlex sighed. \"Yeah. I guess not.\" He reached down and put his arm under the petite brunette's waist and lifted her up. \n\nShe was limp in his arms. \n\nThen she suddenly came to life and head butted him. \n\nAlex smiled. \"My turn.\" He head butted her back. \n\nHer eyes rolled back in her head and she passed out in his arms. \n\n\"Dumb ass,\" Alex whispered. \n\n\"Hey, where'd the bicycle guy go?\" Mary asked. She was dragging mother and daughter back from the barn by the hair. \n\n\"Fuck!\" Alex yelled as he turned. \n\nThe bicyclist was running like a track star down the long driveway. \n\n\"I got him,\" Belynda announced. She ran past them, a blur of black jeans. \n\n\"Goddamn,\" Mary said. \n\nBicycle boy was 200 yards away and running fast. \n\nBut, Belynda was faster. Olympic sprinter fast. \n\nDust and gravel puffed up from her running shoes as she gained on him. \n\nAlex just shook his head as he stood with the little brunette folded over the crook in his muscled arm. \n\nBelynda was still five feet behind the man when she left the ground. She leaped forward, turning sideways and tumbling. Her back struck the man behind the knees and he tumbled backward, doing a somersault and landing on his back on the gravel. \n\nBelynda flipped end over end and came down in a crouch, sliding backward, smiling. \n\n\"Fucking A!\" Jason yelled and jumped in the air. \"Did you see that? Super hero landing! Goddamn! She just did a superhero landing. I have never wanted to fuck someone's brains out so bad in my life!\" \n\nBelynda smiled and winked, obviously hearing his yelled comment. \n\nBut, she had a problem: bicycle boy was up, and he was no longer running. \n\nHe came up in a boxer's stance. \n\n\"Oh, this is going to be ugly,\" Alex said. \n\nBicycle boy moved toward her. \n\nShe was still smiling, raising her fists to mimic him. \n\nHe stepped forward again. \n\nBelynda did a backward somersault, her long right leg going straight up. \n\nThe toe of her sneaker caught the man under the chin and sent him tumbling backward. \n\nShe came down on her feet with a smile and a pirouette. \n\n\"And, that, ladies and gentlemen, is why I love her,\" Jason laughed. \n\nBicycle boy began to stir, but Belynda must have been tired of the game. She drew back and kicked him in the nuts. \n\nHe pulled himself into a fetal position and Belynda dragged him back toward the house by his ankle as he moaned. \n\n*** \n\nRebecca watched with mixed emotions through the monitors in the barn as the people who burst from the van were subdued. \n\nThe part of her that was still human, still with compassion, was hoping they would escape. \n\nBut, that part was diminishing rapidly. The new, alien part of her wondered what kinky things the others would do to the captives. \n\nWorse yet: she hoped she would be able to participate. \n\nBear hardly glanced at the goings on outside. His mind was elsewhere. \"I don't understand.\" \n\nRebecca sighed. She now realized why she and Bear only worked as fuck buddies: he was possessive. \"It's love. I don't know how else to describe it. We're bound together, all of Alex's coven. Part comraderie, part lust... I don't know, Bear. It just is.\" \n\n\"But, she loves me, how can she love him? How can she love you?\" He was sulking, sitting in the desk chair with his big face in his hands. \n\nShe knelt in front of him, feeling like she was consoling a child. \"Bear, we're capable of loving more than one person. It's not that she loves you less now, she just loves us as well.\" She stroked his scruffy beard. \"You saw her face down there. Bear, that woman fucking loves you. That hasn't changed. We all just have to share now. It's how we're wired. Even you.\" \n\nHe nodded. \"You're right. I'm just terrified. God, what if she doesn't make it?\" \n\n\"Look, all I can tell you is they think that Dr. Demona is a surgical god. Gwen and Alex have complete faith in her, and that means I do too.\" She hunkered down and stared up at him. \"Now, don't we have to milk those 'hucows' or whatever they're called?\" \n\n*** \n\nDemona stripped off her bloody gloves and dropped them in the trash. \n\nKaren was washing her hands. \"She'll be okay?\" \n\n\"Yes. I got here in time. A normal like you would have been dead sometime last night,\" Demona said as she began washing her hands in the big trough sink. \"We're better than you, inside and out.\" \n\n\"Did I do okay?\" \n\n\"No, you were sloppy. You need to move quicker when I ask you for something. Learn what each of those instruments are. Know them by heart.\" \n\n\"Yes, Doctor.\" Karen couldn't look up. She had failed and she was embarrassed. \n\n\"Look at me.\" \n\nKaren looked up shyly. \n\nDemona fixed her with a cold stare. The piercings in the goth doctor's eyebrow, nose, and lip glimmered in the overhead lights. \"Where were you in school?\" \n\n\"Junior, pre-med.\" \n\n\"Grades?\" \n\n\"Very good. A...\" \n\n\"Don't you dare fucking lie to me,\" Demona growled, eyes flashing. \n\nKaren's lip quivered. \"My grades don't count. When I was in a hard class, I'd sleep with the professor to get a better grade.\" \n\n\"You proud of that?\" \n\n\"No.\" \n\n\"You too stupid to get a good grade in those classes, or are you just lazy?\" \n\nKaren sniffled. \"Lazy.\" \n\nDemona smiled and nodded. \"Better.\" She turned back to washing her hands. \"When you go back to school - Ithaca, right?\" \n\n\"Yes, Doctor.\" \n\n\"Good. When you go back, you work. No partying, no boys, no fucking cheerleading. You sit your ass down and you study. You don't fuck any more professors - fuck that, you don't fuck anybody without my permission. Understood?\" \n\n\"Yes, Doctor.\" \n\n\"You flunk out, I'll personally see to it that your dumb ass is working the street in Havana as a Street Whore before the sun sets. Got it?\" \n\nHer eyes grew wide. \"Yes, Doctor.\" \n\nDemona dried her hands. \"Strip.\" \n\n\"What?\" \n\n\"I said fucking strip. I'm not used to repeating myself.\" \n\nShe took off the green scrubs she had put on for the surgery followed by the cheerleader outfit she had been wearing under it. ",
        "Demona looked at her admiringly. \"Get on your knees.\" \n\nKaren swallowed hard but got on her knees. \n\n\"You're going to graduate from Ithaca College with your medical degree. And, you're going to spend all your free time with me at Stallion's - that's where you're going to get your advanced studies. My girlfriend is already my apprentice. You'll be my second apprentice. Do you understand, Karen?\" \n\nKaren smiled. \"I'm going to be your apprentice?\" \n\n\"What? Are you a parrot? Yes, my apprentice. You're going to clean up my messes, keep my lab clean, help me with transformations, eat my pussy, do my filing, basically anything I want like a motherfucking slave until I decide you're a fucking doctor. Until then, you're a nurse no matter what the state of New York says. Understood?\" \n\nKaren nodded. \"Wait. Did you say 'eat my pussy'?\" \n\n\"Wow, you were listening. Not as stupid as you look. Yes, slut, you're going to eat me out like a motherfucking lesbian pornstar. Whenever I'm horny, and, bitch, I am always fucking horny.\" Demona smiled. \"Just remember, in the Church of Morpheus, the word harass is actually two words: 'her' and 'ass'.\" \n\nKaren just stared at her wide eyed. \n\nDemona burst out laughing. She got down on her knees in front of Karen. \"God, the look on your face.\" She reached out and took her hand. \"Karen, honey. You have to be transformed. We're going to go do that now. When we're done, you're going to be horny all the time. What I'm telling you is that you won't have to take care of that slutty little hole on your own - you're going to sleep with me and my girlfriend, and we'll make sure you stay satisfied so you can concentrate. We'll be our own little coven, now boys allowed. I'm going to help you get through school. You did great in there, by the way. You have real potential. It's going to be okay.\" \n\nKaren burst into tears and threw her arms around Demona's neck. \"You mean I don't have to become a whore?\" \n\nDemona shook her head. \"Silly bitch. No. You're going to be a doctor - a slutty one, but a doctor nonetheless. Someday. And, I'm going to be a real hard ass, but, it's not because I don't like you, it's because I need you to be the best you can be. Get me?\" \n\nKaren trembled in her arms. \"Yes, Doctor.\" \n\nDemona rocked her gently. \n\n\"Doctor?\" \n\n\"Yes, honey?\" \n\n\"You can diddle me if you want,\" she whispered. \n\nDemona giggled and slid her hand down the naked girl's back. \"Good, because I am seriously horny as fuck.\" She cupped the cheerleader's bottom and caressed her slit gently. \n\nKaren moaned into her neck. \n\nDemona leaned back and kissed her. \"Come on. Let me finish scrubbing up and I'll get started on your transformation. Right after I call and tell that Sasquatch guy the love of his life is going to make it.\" \n\n*** \n\n\"Supplies?\" Jason asked with a chuckle. \"This is Demona's idea of supplies?\" \n\nThe five captives sat side by side on the big living room couch, their wrists and ankles freshly bound with zip ties and their ball gags firmly in place. \n\nAlex, Jason, Belynda, and Mary stood over them and smiled. \n\n\"Well, to Demona? Humans are supplies,\" Alex said as he gingerly touched the bite on his ear. \n\nHailey was kneeling in front of bicycle man and gently washing his scratched and bruised face with a damp cloth. She had already placed an ice pack on his swelling balls. \n\nShe held up two boxes of band aids. \"We got Hello Kitty and we got Sponge Bob. Which will it be?\" She batted her long, curled lashes. \n\nBicycle man just stared at her in mute terror. \n\n\"Hello Kitty it is. I mean, Hello Kitty ain't butch, but neither are you,\" Hailey said as she took out the pink, Kitty emblazoned bandage and applied it to the cut on his chin. She whispered, \"You got beat up by a girl.\" \n\nThe man rolled his eyes and then winced as the band-aid went on. \n\nThe living room was fairly large, with two long couches facing one another. \n\nWhile Hailey continued washing booboos and applying band-aids, the captors sat down on the opposite couch. \n\nAlex looked the abductees over. \n\nBicycle man looked to be in his mid-twenties, tall and lean with brown hair. \n\nBeside him was fat guy, who couldn't have been more than twenty with long, curly and greasy black hair and a scruffy beard. \n\nNext came Mom, and Mom was a knock out: forty-ish with an aristocratic air. Expensive pearls still hung around her neck. She had a dynamite figure, plump in all the right places and bright blue eyes under a mane of blonde hair. \n\nDaughter was a skinny version of Mom. About nineteen with small, pert boobs and a skinny ass. She sat with her head on Mom's shoulder. \n\nFinally, there was the demon. Five foot nothing with stringy brown hair and deceptively healthy looking boobs. She smiled at Alex around the ball gag leaking a slow dribble of blood - Alex's blood. \n\nAnd, she looked ready for round two. \n\nMary seemed to be enjoying everything immensely. \"So, where you guys from? What brings you here?\" \n\nDemon woman began cursing behind her gag, blood spraying out. \n\n\"Eww,\" Hailey said. \"That's gross.\" She started washing Demon's face with a fresh rag. \n\nDemon jerked her head from side to side and raged behind the rubber ball. \n\n\"Hey, quit it, you,\" Hailey complained. Then she reached down, pulled the front of the woman's yoga pants out and slid her hand inside. \n\nDemon's eyes went wide in surprise. She squirmed against the invasion as Hailey found something sensitive. \n\n\"I'll pinch yer clitty if ya don't stand still!\" \n\nDemon stared at her in disbelief. \n\nBut, she stood still and let Hailey wash her face. \n\n\"Take it from me,\" Hailey said as she finished up. \"It's totes better if ya don't fight.\" \n\nMary got up and then knelt in front of Mom. She nodded at the girl beside her. \"Your daughter?\" \n\nMom stared at Mary for a moment, and then she nodded. \n\n\"I didn't hurt you, did I?\" \n\nMom slowly shook her head. \n\n\"Good. Sorry - you know how it is when you're afraid someone hurt your kid? That handsome stud you hit is my son. Lost control for a second. But, I'm glad you're okay.\" \n\nMom just blinked and finally nodded. \n\nAlex stood up and knelt beside Mary. He caressed Mom's cheek. \n\nDaughter squealed in terror and fought to get closer to her mother. \n\n\"Shh, it's okay, little one. I won't hurt her, or you for that matter.\" \n\nDaughter tried to kick out with her tethered legs but it had little effect. \n\n\"It's okay, baby. I just want to take her over to the other couch and talk to her. You're not going to lose her. I promise,\" Alex said softly. \n\nDaughter was still fighting as Alex reached around behind Mom and pulled the older woman to her feet. \n\nStanding up, he scooped up Mom and carried her to the other couch. \n\nDaughter was in hysterics, but Mary sat down between her and the fat man and spoke to her in soothing tones. \n\nAlex sat Mom on the couch beside Jason as Belynda got up and sat on the arm of the couch. \n\nJason was on Mom's right side as Alex sat on her left. \n\nShe looked frantic, her eyes darting from the fit young man to the muscle bound giant. \n\nAlex put his arm around her, in comparison, tiny shoulders. \"Now, now. It's okay. Just relax.\" He looked over at Jason. \"We can make them do anything we want - you have strong mental powers, a lot stronger than mine. And, of course, we can overpower them if need be by brute force.\" \n\nHe stroked Mom's hair. \"But this is much better. Just be gentle. Let the pheromones do the work.\" \n\nMom was still looking like a panicked animal between them. \n\n\"She's breathing them in. Her body is starting to react.\" Alex put two fingers against the woman's throat. \"Slowing down. That's good. That Adrenalin is starting to dissipate.\" \n\nJason reached up and pulled a lock of blonde hair away from her supple neck. \"She's very beautiful.\" \n\n\"Yes, you are,\" Alex agreed. He reached behind her on the couch. There was a snap, and the woman jumped. \n\nHer hands were free, the zip tie snapped in two. \n\nShe tried to lunge forward. \n\n\"Shh, no. Don't try to leave. In a minute, you won't want to. Just be calm,\" Alex soothed as he gently pulled her back between them. He reached behind her head and gently unbuckled the ball gag. \"Now, no yelling and no biting, okay?\" \n\nThe woman moaned as Alex pulled the big red ball out of her mouth. \n\n\"Slow,\" Alex whispered. \"Just move your jaw slowly. You're cramped up.\" \n\nThe woman moved her jaw slowly. \n\n\"What's your name?\" Alex asked. \n\n\"L... Lorraine. My name is Lorraine.\" \n\n\"Lorraine, I'm Alex. This good looking college boy on your other side is Jason. And, that's Belynda, the superhero, on the chair arm.\" \n\nBelynda laughed. \"You're loco.\" \n\n\"You're awesome,\" Jason whispered. \n\n\"And, the lady beside your daughter is Mary.\" \n\nHailey blinked expectantly from where she knelt on the floor. \n\n\"Oh, and the little cutie on the floor is Hailey.\" \n\n\"Hi,\" Hailey said quietly with a wave. \n\nLorraine's eyes darted around the room. \"That's my daughter, Kim. Please let us go...\" She burst into tears. \n\n\"Shh, don't get all worked up again. Please believe me: nobody is going to hurt you.\" \n\nHe moved his face closer to hers. \"Just breathe Lorraine. That's it. Nice and slow. Deep breaths.\" \n\nAlex threw Jason a quick smile and then motioned with his eyes to the woman's lap. \n\nAlex was slowly sliding his hand up the inside of her creamy white thigh. \n\nAnd, she was subconsciously spreading her legs. \n\n\"Feel... strange,\" Lorraine whispered. Her eyelids looked heavy. \n\n\"Mmmph!\" Her daughter Kim grunted, her face a mask of alarm. \n\n\"Shh,\" Mary soothed the girl. \"They're seducing her. Watch. It's going to be beautiful. Like watching a butterfly emerge from a cocoon.\" \n\nAlex hid his smile - Mary's own pheromones were having an effect on the young woman. She was spreading her own legs without realizing it even though her attention was completely focused on her mother's impending hypnosis. Kim was breathing hard, her cheeks flushed, and she was thrusting out her breasts - the animal within her was displaying her charms. \n\nMary smiled and looked over at Lorraine's crotch. \"Those are beautiful panties, Lorraine.\" \n\nLorraine blushed. She tried to close her thighs, but Alex's hand was firm on her inner thigh. \n\nShe could have resisted, but instead Alex felt her relax. \n\nJason gently stroked the woman's other thigh, working his way up till he was holding her leg firmly in his grasp. \n\nTogether, the two men eased her thighs further apart. The skirt slid up to her crotch, further exposing her black lace panties. All the while, her eyes closed more and more till she almost appeared asleep. Her breath was steady and deep. \n\n\"Where did you get your panties, Lorraine?\" Alex whispered. \n\n\"Victoria's... Secret.\" \n\n\"Did you buy them to get your husband's attention, Lorraine?\" \n\n\"Yesss...\" \n\n\"That's very good, Lorraine. A woman should always feel special to her husband. Loved. Desired. Lusted after.\" \n\nShe nodded slowly. \n\nOn the other sofa, Kim was finally silent. \n\nMary was gently stroking the girl's firm thigh with her finger. \n\nAlex whispered even softer. \"Were you on our way to meet your husband when you were taken, Lorraine?\" \n\nLorraine shook her head. \"Kim wanted to go to the mall. We had to stop for gas. That nurse or doctor, whatever she is, she did... something.\" \n\nAlex could sense the anxiety in Lorraine's voice. \"That's all over now, Lorraine. It's not important. All that matters is my voice. Just listen to my voice and everything will be just fine.\" \n\n\"Okay,\" Lorraine whispered from a million miles away. \n\nAlex looked up at Jason. \"She's in our control now. The pheromones have turned on her instincts to reproduce. She wants to be taken now. We won't have to force her - the animal part of her brain is going to do all the work.\" \n\nJason looked confused. \"But, I mean, I could have just blasted her brain, like I did with Mama Jugs back at the motel.\" \n\n\"Yeah, sure, but when we do that, we end up with something we created from scratch. This way, we just turn them in the direction we want and they go there on their own. Seduction. We show them something that is going to make them happier. Just listen.\" \n\nHe leaned back closer to Lorraine and whispered. \"Why did you wear your little see through panties if you weren't on your way to meet your husband?\" \n\nLorraine's brow furrowed. \"Uh... huh?\" \n\n\"Your panties, Lorraine. Why did you wear sexy panties to go to the mall?\" \n\n\"I... I don't...\" \n\n\"Yes, you do. You want to feel special. Loved. Desired. Lusted after. Not just by your husband, but by other men as well.\" \n\n\"N... No... I don't.\" \n\n\"Yes, Lorraine, and it's okay. That's normal. It's natural. It's right.\" He gently began unbuttoning her blouse, revealing a matching black lace bra. \n\n\"Mmmph,\" Kim moaned from the other couch. \n\nAlex looked up, but Mary shook her head. She had eased a finger into the leg of the darling little coed's short shorts and had found her tight pussy. \n\nAlex winked at Jason. \"See? Mary knows what to do and she only has pheromones to help her.\" \n\nJason smiled and nodded. He gently caressed Lorraine's full breast through the lace. \"You're very beautiful, Lorraine. You like it when I touch you, don't you?\" \n\nLorraine looked at the younger man with sleepy eyes. \"You're... so young. You shouldn't.\" \n\n\"But, I want to. I want you, Lorraine.\" \n\nAlex whispered in her other ear. \"See? Everyone wants you, Lorraine. You're so beautiful. That makes you feel warm and happy inside. That's your whole purpose in life, isn't it? To be desired? To please. Of course it is - you're very good at pleasing aren't you?\" \n\nA slight smile crossed her lips and she leaned her head back. \n\nJason smiled. He unfastened her bra's front closure and let it open. \n\nHer breasts were creamy white and topped with rose colored nipples. \n\n\"They're beautiful,\" Jason whispered. \n\nAt the same time, Alex stroked the MILF's soaked panties. \"You're so wet, Lorraine. Do you want us like we want you?\" \n\n\"Unnh... No. Wait. I can't.\" She struggled a little, not against them, but against herself. She tried to raise her head. \n\n\"Can't? Why can't you?\" Alex whispered. \n\n\"Married. I'm married. And, Kim is watching.\" \n\nAlex looked over at the other couch. \n\nKim's head was tilted down, staring at Mary's fingers as they worked in and out of her crotch, completely oblivious to what the men were doing to her mother. \n\n\"She's not watching, Lorraine. It's okay,\" Alex whispered. \"You love your husband?\" \n\n\"Yes,\" she whispered hesitantly. \n\n\"He makes you feel like this? He makes you feel desired like Jason and I do?\" \n\nHer eyes fluttered shut. \"No. Not anymore.\" A tear leaked from the corner of her eye. \n\n\"Then he doesn't matter. You have needs, Lorraine.\" \n\n\"No, he's my husband.\" \n\n\"Not anymore, Lorraine. He doesn't take care of you. Jason and I are going to take care of you much better than he ever could. We're going to take you to a much better world, Lorraine. One where you exist for pleasure, where nothing is forbidden. You're going to be so free and happy. Doesn't that sound like heaven, Lorraine?\" \n\n\"Yes,\" she whispered. \n\nAlex smiled. He looked at Jason. \"She's completely under. Very suggestible. A seduction isn't permanent, unfortunately. I'd need a White Witch or the SlutzNet computer to make it permanent - evidently your brain blast is permanent as well. But, she's ours for the moment without blanking her mind.\" \n\nJason nodded. \n\n\"Lorraine, listen to my words.\" \n\n\"Yes.\" \n\n\"You are beautiful and loved. There is no wrong, only right. Anything you want to do is right and just and good. There is no morality. There is only your pleasure and taking it is your priority. Nothing is taboo. As a matter of fact, the kinkier the better. Do you understand?\" \n\nShe giggled. \"Yes.\" \n\n\"Think about when you masturbate - when you're really into it. Remember how your mind just flies then? All the thoughts, all the beautiful, twisted, kinky thoughts that come just before you orgasm? That's truth, Lorraine. Listen to me and trust me and I will make those beautiful ideas real.\" \n\nShe moaned and finally rocked her hips forward, trying to grind against Alex's hand. \n\n\"Mmm, you want this, don't you?\" Alex whispered. \n\n\"Yes,\" she whispered back. \n\nAlex nodded and gently pulled the filmy lace fabric to the side, exposing her little pink pussy with a neatly trimmed bush. \n\nHe gently massaged her erect clit with his middle and index fingers. Slow, gentle circles. \"So wet, Lorraine. You're little pussy is opening up for me.\" \n\n\"Unnh,\" she moaned. Her eyes fluttered open. \"Kim... don't let her see.\" \n\nAlex smiled. \"She isn't looking at us. It's okay.\" \n\nOn the other couch, Mary had slid the short shorts down the girl's long legs. With her pink panty crotch pulled to the side, Mary was fucking her gently with two fingers. \n\nAlex compared the two women: Kim's pussy hair was lighter and sparser, but her mother's pussy lips were pinker. Both clits were thick and long. \n\nAnd, both women's holes were dripping onto their respective couches. \n\nAlex switched to pushing his index and middle fingers into Lorraine's warm depths, stroking her clit with each penetration. \n\nHe felt fingers on his thigh. \n\nHe looked down: the MILF's fingers were probing at the bulge along his inner thigh. \n\nLorraine was staring intently as she explored. \n\nAs her fingers touched further and further down the bulge, her eyes grew wider. \"Uh... Wha... How can it be so big?\" She asked sleepily \n\nAlex could see anxiety returning to her pretty face. \n\nThat was the problem of having godlike proportions: he was frightening. He wished that Morpheus had made the whoremasters twelve or thirteen inches - seventeen would send most women running. Even ten inches would have been enough. \n\n\"It's okay,\" Alex whispered. \n\n\"But, I can't... I mean, how can I? I can't please you.\" She was near tears in her hypnotized state. \n\nAlex laughed gently. \"Of course you can.\" The poor thing: he had planted that overwhelming desire to please in her, and now she felt inadequate. \"We're going to change you, Lorraine. You'll be able to please any man. Or, woman for that matter.\" \n\n\"Woman?\" She asked. Her eyes fluttered, but the anxiety was going away. \n\n\"Shh... that's not important right now. Just relax.\" \n\nShe smiled now, openly, no hesitation. \n\n\"You're pleasing me right now, Lorraine,\" Alex said. \"Feel how hard you're making me?\" \n\n\"I'm doing that?\" She whispered. \n\nAlex kissed her neck gently. \"Yes.\" \n\nJason took her other hand and laid it on the thick bulge in his own jeans. \"You want to please me too, don't you?\" \n\nLorraine blushed. \"Oh! I'm sorry! I don't know what's wrong with me. Of course, I do.\" \n\nJason was trying hard not to laugh as she began to squeeze and knead his hard cock through his jeans. \n\n\"You're amazing, Lorraine,\" Alex whispered in her ear. \"You're pleasing both of us. So special.\" \n\n\"Mmm,\" Jason groaned. \"Wow, Lorraine, I can feel lube leaking out of my cock. You have magic hands.\" \n\nLorraine leaned her head back and smiled contentedly as she massaged both thick cocks. \n\nAlex continued to finger fuck her while Jason squeezed her breasts gently. \n\nAlex caught movement out of the corner of his eye. \n\nLisa and Gwen were standing in the hallway, locked in an embrace, rubbing each other's breasts. \n\nGwen looked at him with a look of unbridled lust. \"I love you,\" she mouthed silently. \n\nAlex grinned. \"I love you too,\" he mouthed back. \n\nMikaela was leaning against the wall, fingers furiously massaging her own clit. \n\nHailey caught sight of her and moved silently across the room. She dropped to her knees in front of Mikaela and replaced the woman's fingers with her lips and tongue. ",
        "\"Yes, baby, so good,\" Mikaela whispered. \n\nAlex turned back to Gwen. \"Is she okay?\" He mouthed. \n\nGwen smiled and nodded. \n\nHe breathed a sigh of relief - not that he had any doubts about Demona's ability. But, it was hard not to be afraid when someone you love is under the knife, no matter how skilled the hand of the person holding it. \n\nOn the couch, Kim looked almost asleep as Mary massaged her pussy. \n\nBicycle man and Fat guy looked entranced by what was going on - Fat guy especially, considering he was right next to Mary and receiving a full dose of futanari hormones. \n\nHis jeans were tenting from his erection. \n\nEveryone looked happy... except the Demon girl who stared daggers at him. The ball gag made it impossible to talk, but her meaning came through from her eyes: Fuck You. \n\nAlex smiled back and winked. \n\n*** \n\nKaren lay back on the operating table. It was slightly inclined so she was almost sitting up. She was naked. \n\nAnd nervous. \n\nDemona worked away at a small surgical table nearby. \n\nKaren was trying not to hyperventilate. \"How... how big are you going...\" \n\n\"G cups, honey. I like my nurses with healthy tits.\" \n\nKaren looked down at her pert breasts: B cups. G? Five cc's of Titty Grow! \"But...\" \n\n\"Shh,\" Demona said as she rolled the cart to the panicked girl. She had put a sheet over the instruments to hide them from view. \"I know. That's too much Titty Grow.\" \n\n\"I'd be an idiot,\" Karen said and shivered. \"That much Titty Grow would make me an imbecile.\" \n\n\"Well, not quite. Give yourself a little credit. But, we need you smart - honestly, honey, I wish I had something to give you to make you smarter.\" \n\n\"So, how...\" \n\nDemona pulled back one corner of the sheet. Two liquid filled bladders quivered on the table. \n\n\"No... fuck, no!\" Karen whined. Breast implants? Surgery!? \n\n\"Calm down.\" \n\n\"Demona, Jesus! How the fuck big are those things?\" \n\n\"1200 cc. Not the biggest I've put in, but...\" \n\nKaren burst into tears. \n\n\"Hey!\" Demona said as she kissed away her tears. \"It's not so bad. You've seen me operate. There won't even be a scar - I'd like to see those fuckers in Beverly Hills pull that off.\" \n\nKaren shivered in her arms as she stared at the huge bags Demona was going to stuff inside her. \n\nDemona knelt beside her. \"Now, now - listen to me. You won't feel an ounce of pain, not even after. Those puppies are 100% safe - I designed them myself. And, sweetheart, I'm going to sculpt you the most perfect nipples anyone ever topped their tata's with.\" \n\nKaren laughed a little at that despite her terror. \n\n\"I'm going to slut up your hormones, fix you so you don't have to worry about babies, give you a pussy long enough to take a monster cock - and, I'm going to make you so fucking sensitive down there you'll squirt when you sneeze.\" \n\nNow Karen was laughing out loud. \n\nDemona smiled at her. \"That's my girl. Babe, you're going to be hot as fuck. You'll be kissing my feet when I'm done. I promise.\" \n\nKaren sniffled. \"And, it won't hurt?\" \n\n\"Not one bit. You'll be completely healed and dancing around with volleyballs on your chest an hour after you wake up - oh, and I'm totally making you tall as fuck with legs for miles. Seriously, I'm dripping just thinking about you.\" She winked at Karen. Then she squeezed her hand. \"Honey, you are mine. I will never do anything to you to hurt you.\" \n\nKaren bit her lower lip. \"That... reminds me. You're going to give me Ambrosia when you're finished, right?\" \n\n\"Only if you want to live forever as a beautiful demi-goddess hyper-babe.\" Demona smiled. \n\n\"I do. I really do. I understand all of it - I studied everything I could. I want to be what you make me.\" \n\n\"Good.\" \n\n\"I'd be unbound, right?\" \n\n\"Processed Ambrosia. You'll be your own boss.\" \n\nKaren's lip trembled. \"What if I don't want that?\" \n\n\"Huh?\" She stroked the girl's strawberry blonde hair. \n\n\"I... I don't know how to ask this... and you can say no, if you want to.\" She was blinking away tears. \n\nDemona drew in a breath. \"You want to be mine? I mean truly mine. Bound to me forever?\" \n\n\"I'm sorry,\" she said and quickly looked away. \"It was a bad idea. You don't want to be tied to me forever, I mean...\" \n\n\"Yes.\" \n\n\"Huh?\" \n\nDemona teared up. \"Yes, Karen. I will bind you to me. Forever. I'd be honored.\" \n\n*** \n\nLorraine was happy. \n\nNo, she corrected herself. I'm ecstatic! \n\nAnd, this day had started out so horribly. First, her husband Kevin had completely ignored her this morning, though she had done her best to entice him, first by coming to bed in a lace camisole, and then by making sure she let him see her nude as she showered. She had wanted him to come into the master bathroom and take her, there on the bathroom floor. On her knees, using her to satisfy his lust. \n\nShe knew men wanted that - they wanted animal sex. Kevin had wanted it when they were younger. He was all over her when they were dating. Even after three children, he was insatiable. \n\nBut, after baby number four, he seemed to drift away. \n\nThis morning he had barely grunted at her before leaving for work. \n\nThen Kim had practically begged her to take her to the mall. She wanted a mother/daughter day in the worst way. But, Lorraine just wanted to be alone with her thoughts. \n\nAlone to do other things. \n\nA woman hits her prime in her mid thirties, and Lorraine was no exception. At thirty-seven, Lorraine felt like she had the libido of a teenage boy. She was masturbating regularly for the first time in her life. All she wanted was for nineteen year old Kim to go somewhere, anywhere and leave her alone. She was so horny, it hurt. \n\nBut, Kim had been insistent, so Lorraine had gotten ready. \n\nShe had picked out a simple sundress to begin with, but the longer she had looked at herself in the mirror, the angrier she had gotten. \"Fuck this,\" she had whispered. She got out her sexiest bra and panties - a filmy black lace number that always made her feel hot. And, then she had put on her tightest, shortest skirt, a thin blouse, and heels. \n\nSomebody was going to notice her today, goddamn it. \n\nOf course, somebody did. She had filled up the car at a roadside gas station. On the other side of the pump, a strange woman wearing a pink nurse's outfit smiled at her. \n\n\"Fucking A, babe, you will do just fine,\" the woman said with a smile. \n\nA moment later, Lorraine smelled something sickly sweet and the lights went out. \n\nAbduction is fucking scary. Lying in the van with your daughter and a bunch of strangers. Wearing a ball gag. She knew what they were. She had read about bondage. She shivered and shook, afraid of what was going to happen to her daughter and herself. \n\nThe petite woman who was tossed in the van later on wasn't frightened at all. When she came to, she began moving around in the van. She scooted up behind the man in the bicycling outfit, lowered her teeth to the zip tie on his wrists, and started chewing. \n\nMost of them were free when the doors to the van opened. \n\nIt was absolutely terrifying - the people outside the van were tall and very frightening looking, especially the bald giant. \n\nOf course, she had gotten it all wrong. She felt silly now. Why would she be afraid of Alex? \n\nHe had a way of explaining things that made her feel better. \n\nShe sat between Alex and Jason and stroked their long, hard cocks. So big! Even Jason was three times bigger than her husband. \n\nAnd, Alex was a god! \n\nShe bit her lip looking at the dark spot of cock lube on the fabric of his track pants - a spot almost at his knee! \n\nHe was smiling at her and she felt warm inside, giddy. She felt twenty years younger. \n\n\"What are you thinking about?\" Alex whispered. \n\nHe was always whispering, calm and gentle and sexy and it made her wet everytime he talked! \n\nHer words came, but they sounded sleepy and slurred to her own ears. \"Cock... so big... Can I?\" \n\nHe stood up and she felt a momentary panic. She felt better when he was close, touching her. \n\nHe pulled off his t-shirt, revealing a beautiful sculpted body. \n\nOh, God, and then the pants. \n\nShe was actually frightened. It was the biggest she had ever seen. \n\nSomewhere nearby, she heard Kim mumbling. But, Alex said Kim couldn't see what she was doing - she didn't want Kim to see. This was private. It was for Lorraine alone. \n\nShe leaned forward, feeling Alex's thick fingers touch her long blonde hair. He grasped her hair and held her firmly. He was taking charge of her! He was going to teach her, show her what she had been missing. \n\nHis dick's piss slit was so big she could have stuck her pinky inside! \n\nInstead she opened her lips, wet them with her tongue, and then touched the tip of her tongue to the dripping hole in his cock. \n\nHer whole body shook! His lube tasted warm and salty and it quickly coated her tongue. Lorraine practically lunged forward, taking as much of the thick purple head between her lips as she could - which wasn't a lot, her mouth was far too small to take him in. \n\nThe lube filled her mouth and she swallowed. \n\nHer entire body was warm at first, and then on fire. An aphrodisiac! His juice was an aphrodisiac and she groaned, sucking and swallowing. She wanted to coat herself in it, make herself oily and slick with it. \n\nKim moaned again. Someone was struggling nearby. Kim? She didn't know. \n\nWhat was left of her clothing was being pulled off her. \n\nJason! He was undressing her. Making her ready. \n\nReady to fuck! \n\nShe wriggled her hips to help him take down her skirt, leaving her in her pretty lace panties. \n\nShe arched her back, wanting to scream in joy as the panties slid down in the back. \n\nA boy no older than my daughter just exposed my pussy, she thought. He was behind her. Was he stroking his thick cock and aiming it at her cunt? \n\nShe felt guilt and shame. He was so young! This was dirty. \n\nAnd, so hot. \n\n\"Dirty sex is the best kind,\" a woman's voice said. \n\n\"Mmm, yeah,\" she moaned around the cockhead between her lips. \n\nAnd, then she giggled as she felt Jason's thick head probing at her pussy lips. \n\n*** \n\n\"Mmm, Ssstttppp,\" Kim screamed behind the ball gag. \n\nHer mother was naked on her knees. Alex had his hand wrapped in her hair, pushing his thick cock into Lorraine's mouth. \n\nBehind her, Jason was slowly fitting his long cock in her mother's tight hole. \n\nAnd, the blonde woman in white latex was gently massaging her mother's temples. \n\nThe blonde looked up at her and smiled sweetly. \"Kim, look at your mother's face. Can't you see she actually wants this?\" \n\n\"No!\" Kim screamed. \n\n\"Yes. Kim, she's been so frustrated. You're young, you don't understand. She has needs.\" \n\nKim glared at her. She tried to jerk forward, but Mary held her fast by the arm. Her mind had been cloudy just a few moments before, but then the big dyke had stopped diddling her. And, just like that, whatever spell she had cast was broken. \n\nShe came to her senses in time to see her mother becoming a slut. \n\n\"No,\" the blonde said. \"She was always a slut. Everyone is a slut, Kim. Even you. But, the world makes us hide it. Your mother is really enjoying herself for the first time in years - maybe for the first time ever. Look at her - she's being serviced by two gorgeous hunks. She feels loved and lusted after.\" \n\nKim blinked. The blonde could read her mind! \n\n\"Yes. I can,\" the woman said. \"I'm Gwen by the way.\" She closed her eyes and gasped. \"Oh! Jason, Jesus, that's the biggest thing she's had in her cunt since the last time she gave birth! Go slow, she wants to feel every beautiful inch.\" \n\nJason smiled and nodded, stroking Lorraine's full hips. \"Hard to hold back. She's such a wonderful lay. Your mother is one fine piece of ass, Kim.\" \n\nFuck you! Kim screamed in her head. \n\n\"Momentarily, dear,\" Gwen said with a smile. \n\nKim heard laughter in her head. It seemed to come from behind her, then it moved to her left ear, and then her right. \n\n\"Don't torture her,\" Mary said. \n\nGwen smiled at her and nodded. The laughter stopped. \n\nMary leaned close. \"Sweetheart, I'm very sorry about all this. You just landed in a nightmare, and I'm afraid you're not going to wake up. But, if it's any consolation, it gets easier.\" \n\nShe was so confused! How could her mother, her feminist mother who baked cookies for the PTA, have been turned into a slut in just a few minutes? \n\nThe younger guy's huge cock was sliding slowly in and out of her Mother's stretched hole, and she moaned around the giant's cock in her mouth on each stroke. \n\nShe was smiling and drooling, her eyes half closed. \n\n\"Jason, don't cum,\" Gwen said. \n\n\"I... know. Fuck, this is hard,\" Jason groaned. \n\n\"You have to learn control,\" the tall brunette in white latex said. She walked silently across the floor in the stiletto boots and knelt beside him as he fucked Lorraine, his thick balls slapping against her on each thrust. \n\n\"Yeah... if you don't want... me to cum? Better... not parade around in that outfit,\" Jason said. \n\nThe brunette in the latex body suit that was somehow missing all the rubber from her pussy up to the bottom of her tits, laughed. She cupped his left ass cheek as he fucked. \"Pull out when you're ready. I'll make it worth your while.\" \n\nThey were monsters. They were making jokes while her mother was violated! \n\nThe giant groaned. \n\n\"And, don't you cum either,\" Gwen laughed. \n\n*** \n\nOut in the barn, Diane lay entwined with Regina on the padded floor. They had just showered after the first milking of the day, and the women were in a dazed afterglow from the procedure. \n\nRegina gently stroked Diane's hair as she stared into her eyes. \"Second day, how do you feel?\" \n\nDiane laughed. \"Confused, turned on, exhausted, intoxicated...\" \n\nRegina laughed with her. \"Best vacation you ever had?\" \n\n\"Mmm,\" Diane whispered. \"As crazy as it would have seemed two days ago? Yes. God, yes. Is it just the drugs or is it what they did to us when we were under anesthesia?\" \n\n\"They've reduced us to our animal nature. Freed us to make love without worries about relationships, without a care in the world.\" \n\nDiane stared at her for a moment. \n\n\"What?\" Regina asked. \n\n\"You. Sometimes you have a hard time talking... like me. But, other... times...\" \n\nA slow grin crossed Regina's lips. \"Wow. You really are smart, aren't you?\" \n\n\"What they did... doesn't really effect you. Does it?\" Diane asked sleepily. \n\n\"No, sweetness. It doesn't, because I've gone all the way.\" She reached down and found Diane's swollen clit. \n\n\"Mmmph!\" Diane squeaked. \"N... No... we were talking.\" \n\n\"I know,\" Regina whispered. \"It's okay. I want to please you. Try to stay with me?\" \n\nDiane nodded, her eyelids heavy. \n\n\"I'm the CEO of Lady Lace Cosmetics.\" \n\nRegina tried to concentrate. For some reason, the clit stimulation was helping that. \"Lady Lace? They're like the third biggest cosmetics company on earth...\" \n\n\"Second, actually,\" Regina said. \"Thirty-seven billion dollars in revenue this year. Next year, we'll be number one.\" \n\n\"Wow... that's amazing.\" \n\n\"Thanks, but I can't take all the credit. My partners have helped me grow the company.\" \n\n\"Partners?\" \n\nRegina smiled and looked around the room. \"This place? It's owned by the Church of Morpheus. They're my partners. They now own 49% of Lady Lace.\" \n\n\"Okay...\" \n\n\"All those new products Lady Lace has released over the last few years? Breasts in a Bottle? Baby Face Skin Toner? Those came from the Church.\" \n\n\"The Church? They... make cosmetics?\" \n\n\"Yes, excellent makeup. Our wrinkle cream makes women look ten years younger, and that's because it's actually making them younger.\" \n\nDiane squeezed her thighs together and tried to concentrate. \"That's... not possible.\" \n\n\"You mean impossible like giving women breasts the size of basketballs and making them lactate?\" Regina asked with a wink. \n\n\"Why would they...\" \n\n\"Control, dear. Lady Lace makeup is slowly turning women into mind controlled sex toys.\" \n\n*** \n\nIn the basement, Karen's eyes fluttered. \n\nShe was groggy from the anesthesia. She smacked her lips together. They felt swollen. \n\nWait. They were swollen! \n\nShe opened her eyes. \n\nHer lips weren't the only things swollen! \n\nTwin mountains had sprouted on her chest. \n\n\"Fuck...\" Karen whispered. The word came out slowly like a recording played back at the wrong speed. \n\nShe tried to sit up. \n\n\"No, you don't, babe,\" Demona said. She put a hand under Karen's big breasts and pushed her back down. \"You're four inches taller than you were. You sit up too fast and you are likely to hit the floor. Especially being top heavy as you are.\" \n\n\"What... Jesus! They're fucking huge!\" \n\n\"G cups. Like them?\" Demona asked. She reached down and tweaked one of Karen's thick, turgid nipples with a shiny black lacquered nail. \n\nKaren whimpered and felt something wet spread across the operating table under her butt. \"Oh, God! Did I pee?\" \n\nDemona laughed gently. \"Jury's out on that one. You squirted, that's the way I look at it.\" \n\nKaren began to hyperventilate. \n\n\"Shh, calm down. It's okay. Waking up in a tranformed body can be a shock. Just relax. Let me show you something beautiful.\" She held a small mirror in front of Karen's face. \n\nThe reflection looked like her for the most part - like an idealized version of her from a Snapchat filter. Her skin was tanned and flawless without a blemish. Her pores were tiny. Her makeup was perfect, eye shadow and blush matching her strawberry blonde hair which now had highlights that gave it a color like flames. \n\nHer green eyes were three shades lighter, and they looked enormous. Her nose was smaller and upturned, lips full and glossy red. She batted her eyelashes that looked false but were most definitely her own. \n\nKaren burst into tears. \n\nDemona grabbed her hand and squeezed. \"Sweetheart!? What is it? If you need me to change anything, I will. I took some artistic liberties - sorry, I get carried away. I'm so drawn to beautiful girls I can't help myself.\" \n\nKaren squeezed her eyes shut and shook her head, sobbing. \"N... No... not that.\" \n\n\"What then, honey?\" \n\n\"You made me so beautiful,\" she sobbed uncontrollably and put her arms around Demona's neck, lifting herself off the table. \n\nDemona laughed and hugged her tight. \"Didn't you know how pretty you were before? All I did was make a few tweaks...\" \n\n\"More than that. You made me beautiful.\" She leaned back. \"I love you. God, I am totally in love with you!\" \n\nDemona nodded. \"Of course you are, you're bonded to me. And, I am to you too, kiddo.\" \n\nShe hugged Demona tight again. All she wanted to do was hold on. \n\nSlowly, she became aware of other voices in the room. \n\nShe glanced past Demona. \n\nBear was kneeling by Heather's table, holding the cowgirl's hand and smiling. \n\n\"He's been here about twenty minutes. Took the stairs about three at a time getting down here,\" Demona said. She kissed Karen's neck. \"He says there's quite a little orgy going on upstairs. How does that make you feel?\" \n\nA tremor of lust went through Karen. \"God, that sounds amazing! I could fuck a dozen people right now.\" Her libido was in overdrive. She could literally feel her skin heating up with desire. \n\n\"Good. All your mods are working then. Let's get you dressed for the party.\" \n\n*** \n\nDiane felt like she was dreaming. Regina had told her a story about a multi-national syndicate that was taking over the world through mind control and sex. Human traffickers who were attacking the very fabric of modern civilization, remolding it into a vision of the future for immortal gods and goddesses. \n\nAnd, Regina was one of those immortals. \n\n\"It's a lot to take in,\" Regina whispered as she stroked Diane's big left breast. ",
        "\"Wrong... it's wrong. It's slavery. Regina, why?\" She wanted to cry. The news that this monstrous group existed was eclipsed by the knowledge Regina was part of it. \n\nBecause Diane was madly in love with the blonde bombshell. For the first time in her life, Diane was in love. \n\nRegina frowned. \"I know it is. They're monsters. And, now I am too.\" \n\n\"Why? Why would you...\" \n\n\"Oh, Diane, what do you want me to say? They showed me a blueprint of what was going to happen. Darling, they are playing chess a dozen moves ahead of anyone trying to stop them. They're playing with the world governments like a cat plays with a mouse. Honest to God, they could reduce the civilized world to chaos overnight if they wanted. They are everywhere, and they have technologies we can't even imagine. When it comes, it won't be a war. It will be over in an hour and everyone... everyone will be under their control.\" \n\n\"That's not a reason to go along with it!\" \n\n\"Really? It is to me. The Church is like a huge asteroid hurtling toward the earth. There's no place to run, no place to hide. You are either going to join the Church willingly or they will decide your fate without your input.\" She frowned. \"I don't know about you, but I'd rather be the fucker than the fuckee.\" \n\n\"There has to be a way to stop them.\" \n\nRegina laughed and shook her head. \"How? Everyone that they abduct will gleefully tell you they love it. Trust me, I've met some of the whore caste and they are the biggest fans of the Church. You remember that town down in Florida where everyone just disappeared overnight back in the nineties? Latigo Key?\" \n\nDiane tried to think. Finally it came to her. \"Yeah, I remember.\" \n\n\"That was the Church testing their techniques for abducting large numbers of people. What did the government do about that? Nothing,\" Regina said. \"And, have you ever been in the Air Cuba terminal at JFK?\" \n\n\"No. But, I've seen it.\" Diane remembered the terminal. She hadn't set foot inside it. A sign at the boundary announced the terminal was Cuban soil. There were wild rumors about the goings on there - public nudity, orgies, all happening right there in the airport. Just the sight of the flight attendants for Air Cuba was unsettling: towering bimbo goddesses in micro skirts with breasts like basketballs and dopey smiles. \n\nDiane sighed. \"Why did you tell me this?\" \n\n\"Because I love you. I care about you.\" She held Diane's hand tight. \"And, I want you to join us.\" \n\n*** \n\n\"Fuck, Doctor, I can't wear this!\" Karen said. She frowned at her reflection in the mirror. \n\n\"Hey, toots, you wanted the job, you have to wear the uniform,\" Demona said. She was staring at the back of Karen's new ultra-long legs. \n\n\"But... it's so demeaning.\" Her reflection told a story and that story was slut. First there was the white latex boots with high platform heels. They ran almost to her knees and were adorned with latex red crosses on the side. Next came a garter belt and fishnet stockings in hot red. The dress was also made of bright white latex with red piping. It barely fell below her ass cheeks, had ridiculous small ruffles, and was open almost to her naval. Her big tits were squeezed into a transparent red latex bra - the dress showed this prominently and barely stretched to cover her thick nipples. \n\nTopping it off was an old fashioned nurse's hat made of white latex with a big red cross. \n\nA red inverted pentagram medalion hung from a red latex choker around her throat. \n\nShe wasn't wearing panties, which she probably would have found uncomfortable anyway - she seemed to be lubricating non-stop and any panties she wore would have quickly turned into hormone filled swamps. \n\nDemona traced the line where her bra ended and her tit flesh began. \"If it's any consolation, you're completely, fuckably hot.\" \n\nKaren looked down at her toes, which she could no longer do because of the volleyballs glued to her chest. \"Thank you,\" she said softly. \n\n\"Come on, it's orgy time.\" \n\nKaren laughed a little. What the hell? She did look hot. Ridiculous, but hot. \n\nHeather turned and tried to get off the table. \n\n\"Where the fuck do you think you're going?\" Demona asked. \n\nShe groggily pointed at the ceiling. \"Orgy. Upstairs. Got my name on it. Gonna get all my holes stuffed.\" \n\nBear scrambled and caught her in his big arms before she could fall. \n\n\"You got two choices, bitch. One, you can lay down here like a good cowgirl and rest, or two, Sasquatch there can carry you to the barn and put you to bed. No orgy for you,\" Demona said with a scowl. \n\n\"Fuck,\" Heather grumbled. \n\n\"Honestly? I just cut you open and repaired your innards and you want to go fuck? Jesus... keep your knees together for a few hours at least? Bad enough I have to take this trollop upstairs after her cosmetic surgery, but if I don't she'll probably diddle herself to death.\" She shook her finger at Heather. \"No fucking, I mean it.\" \n\n\"Fine. Killjoy.\" She nuzzled Bear's neck. \"Barn, please?\" \n\n\"Anything you want.\" \n\n*** \n\nSomething wonderful had happened to Lorraine, and it went beyond the incredible orgasms the boy, Jason, was giving her with that power tool of his. She had lost all her inhibitions. \n\nThis was wrong on so many levels. She was naked on her knees, sucking her abductor's cock while a boy half her age was fucking her from behind. She was surrounded by spectators, most of whom were touching themselves. \n\nWorst of all, they had lied to her: her daughter was watching her from a few feet away with terror in her eyes. What would this do to her? To see her own mother reduced to a wanton slut right before her eyes? \n\nKim was far from a virgin, but this was so extreme. So wrong. \n\nSo unbelievably hot. \n\nFloodgates had been opened inside her and lust she hadn't experienced since college was gushing out of her. It was a tidal wave, sweeping away the bullshit. \n\nShe was never going back to her husband - of that she was sure. He could never satisfy her like these two studs. \n\nLorraine heard the voice of the pretty blonde woman who massaged her as she was fucked. She couldn't actually understand the words, but she loved to hear the woman's voice! It was smooth and sexy and it seemed to come from inside her head. \n\nLorraine blushed - she wanted to have sex with the woman speaking in her head! She had never even considered touching another woman, but now it seemed as natural as breathing. \n\nThe studs fucking her would love that! All men wanted to watch women make love to each other. And, why wouldn't they? Two beautiful women touching, caressing, kissing? \n\nOf course they do, the woman's voice whispered in her head. \n\nLorraine smiled. \n\nAnd, then she forgot the words injected into her brain by the woman. \n\nThe words were her own words. She wasn't being controlled. She wasn't being brainwashed. \n\nEverything was okay. Everything was wonderful! Her new life was about to begin and everything else before that was just a dream. \n\nThe only thing that remained of her old life was Kim and her three other children. \n\n*** \n\n\"Don't worry. They will join you soon,\" Gwen whispered into Lorraine's mind. \"We have plans for you, Lorraine. So many beautiful plans. You'll understand soon.\" \n\nJason was thrusting away at Lorraine's upturned cunt. Their combined lube dripped onto the floor, keeping both of them from becoming sore. \n\nGwen smiled at Jason. He was maximizing Lorraine's pleasure while taking care not to hit her cervix hard enough to hurt her. Of course, that meant he only had half his thick cock inside her. The boy was such a fast learner! \n\n\"G... God, Lisa, she's so tight,\" Jason groaned to the statuesque brunette who nuzzled his cheek as he fucked the MILF. \n\n\"Fuck her harder, Jason. Just remember, your cum is mine,\" Lisa whispered. She reached down and wrapped her thumb and index finger in a ring around the base of his sack. \n\n\"Unnh!\" Jason moaned. \n\nGwen stood up. \n\nThe room was full now. Demona had brought Karen up - and, the doctor in training was breathtakingly beautiful. \n\nShe was standing with Mikaela and Kailey, the three of them giggling like school girls as they caressed Karen's huge latex covered globes and watched the floor show. \n\nDemona was beaming at them like a proud artist whose creation was a massive hit at its showing. \n\nBelynda was standing with her back to the wall, legs spread wide, unable to stop masturbating. \n\nMary sat on the couch between Kim and the fat guy. She had stopped diddling Karen and was instead giving the fat guy a hand job. His cock was small, but they both appeared to be enjoying themselves. \n\nThe other three denizens of the couch were not so enthused. \n\nThe man in the bicycling outfit was staring in wide eyed shock at the sex going on around him. \n\nKim was perpetually screaming behind her ball gag. \n\nAnd, that left the demon woman. \n\nThe diminutive little monster's eyes darted back and forth. \n\nLooking for an opening, Gwen thought. The little imp was dangerous. She reached out with her mind to see what was going on behind the woman's tiny eyes. \n\n\"Holy shit,\" Rebecca said as she appeared in the living room doorway. \n\nGwen laughed, the imp forgotten at the sight of her wife. \n\nGwen walked over to her and took her hands. \"Things got interesting while you were helping with the stock.\" \n\n\"Jesus... Gwen?\" She leaned close and whispered. \"Are these abductees?\" \n\n\"Yes, honey. Come over here, let me show you,\" Gwen said and led her by the hand to stand over the woman being fucked doggy style on the floor. \"We've been so cruel to this one. We're truly monsters, aren't we?\" She giggled sarcastically. \n\nLorraine was moaning as she slathered Alex's cock with her lips and tongue. Her tits swayed under the constant assault on her cunt by Jason, who looked ready to explode. \n\nLorraine's face was a mask of pure bliss. \n\nRebecca was breathing hard and biting her lower lip. \n\nGwen hugged her. \"I don't need to be able to read your mind to know what you're thinking about.\" \n\nRebecca laughed. \"I never dreamed it would be like this.\" \n\n\"Sometimes it is. Sometimes we unlock who they really are inside. She's been so starved for attention. This isn't something we turned Lorraine into, this is who she truly is.\" Gwen twisted a lock of Rebecca's curly blonde hair. \"This is the best part of being the monsters we are.\" \n\nRebecca began to smile slowly. \n\n\"Though I don't think Lorraine's daughter feels the same about it.\" Gwen said and pointed at Kim who looked ready to launch herself off the couch and stomp someone. \n\nGwen nodded at the demon. \"And, whatever the hell that is.\" \n\nJason groaned. \"Gonna cum! Can't hold it.\" \n\nHe pulled out of Lorraine's tight pussy, drawing a groan of displeasure from the woman. \n\nLisa pulled Jason upright and knelt in front of him. \n\nThe head of his cock was barely to her lips before he began to spurt cum into her mouth. \n\nShe stroked him gently, coaxing longer and longer jets of white cream into her mouth. \n\n\"Fuck! Gaah!\" Jason roared with his fingers twisting in Lisa's long, black hair. \n\nShe smiled, mouth open and filling with cum. \n\nLorraine was almost in tears with need. \n\n\"Finally ready for me,\" Alex whispered as he turned her around. \n\nShe arched her back, pushing her ass as high as she could. \n\nThe muscled hunk knelt behind her and placed the thick knob of his dick at her entrance. \n\n\"Big! Big! Oh, God, so...\" \n\nHe pushed forward gently. \n\nKim screamed and thrashed watching the impossibly big head wedge into her mother's obscenely stretching hole. \n\nLorraine screamed. \"Fuck! Fuck! Goddamn it, yes! More! Give me more!\" She tried to thrust her ass back and impale herself. \n\nGwen leaned down and stroked her hair. \"Easy. Gently. You have to go slow. Alex won't hurt you, but if you don't slow down, you'll hurt yourself.\" \n\nLorraine was crying. \"Want it... God, I want it so bad. Don't care if it hurts!\" \n\nGwen laughed and winked at Kim. \"Bet you never thought you'd see your mother do this, huh?\" \n\n\"Fnnh Ooo!\" Kim screamed around the gag. She tried to launch herself off the couch, but Mary held her back by her hair. \n\n\"Baby, I'm telling you, you don't want to do that. She'll wipe the floor with you,\" Mary laughed as she continued to stroke the fat man's small cock. \n\nGwen leaned down and kissed Lorraine's ass. \"That's right. Pace yourself, honey. We'll fix you so you can take the whole thing soon.\" \n\nGwen stood up and took a step toward Kim, who cringed. \n\nGwen looked over her shoulder. \"Rebecca, Mommy there is very bi-curious. Mind giving her a lesson in how to please a woman?\" \n\n\"Nnnn!\" Kim screamed from the couch. \n\nRebecca's eyes grew wide. She pulled her skirt up to her waist. \n\nRebecca sat own on the floor in front of Lorraine and spread her legs. \"Here, baby, you really need this.\" \n\nLorraine looked down at Rebecca's spread open pussy. \"I... I don't...\" \n\nRebecca laughed. \"You know you want to. Stop fighting it.\" \n\nAlex ran a thick middle finger down Lorraine's spine as he sank deeper and deeper into her pussy. \"I think it would be beautiful to watch you please my wife, Lorraine.\" \n\n\"W... Wife?\" Lorraine mumbled. \n\n\"Kiss her pussy, Lorraine. You'll like it, I promise,\" Alex said. His finger trailed between Lorraine's buttocks, found her pucker, and slid gently inside her asshole to the first knuckle. \n\n\"Mmm! Fuck!\" She literally growled like an animal and engulfed a woman's pussy with her lips for the first time. \n\nRebecca drew in a sharp breath and laughed softly. \"Yes! Just like that!\" \n\nGwen smiled at her husband and wife as they made love to the MILF. \n\nThat left her able to focus on the daughter. \n\nShe turned and knelt in front of Kim. \"I'm sorry I've been so cruel to you... well, that's not quite true. I kind of like your distress. But, it's only because I know how happy I'm going to make you. In the end, I mean.\" \n\nKim was screaming and crying, but Mary held her fast. \n\nGwen touched her index finger to the middle of the girl's forehead. \"Shh, enough of that.\" \n\nKim's screams stopped as slobber ran down around the gag. Her eyes went unfocused. \n\nGwen smiled as she felt the tension drain from the dear thing's body. She reached into the tender young brain with invisible fingers of thought. \n\nGwen closed her eyes. \"A boyfriend, huh? Thad? Mmm, wow! That is a very big cock. Really turns you on when he fucks you, huh?\" \n\nKim stared straight ahead, her eyes relaxed. \n\nBut, her hands were straining against the bonds behind her back. \n\n\"Mary, be a dear and release her hands,\" Gwen said, eyes still closed. \n\n\"You sure?\" Mary asked. \n\n\"Yes. She's not going to give us any more trouble.\" \n\nThe bonds on Kim snapped under Mary's firm hand. \n\nKim's hands swept forward. \n\nBut, they stopped inches from Gwen's face. \n\nThe blonde smiled and never opened her eyes. \"I am in total control of you now, Kim. You can only do what I allow. You're not going to hurt me, no matter how much you want to.\" \n\nKim's face was emotionless as her hands slowly drifted down to her lap. \n\n\"There, that's better. Calm. You're very sweet, aren't you?\" Gwen giggled. \"Like a sugar coated treat.\" \n\nKim's eyes closed a little more. \n\n\"I love how excited you get over your boyfriend's cock. That's a very good sign. You're a natural born slut like your mother,\" Gwen said. \"Look at Mommy, Kim. She loves the new life I've given her.\" \n\nKim's eyes stirred and she looked at Lorraine as she ate out Rebecca while being fucked by the impossibly huge cock. \n\n\"She's beautiful, Kim, and so are you.\" \n\nKim grinned a little before her eyes closed again. \n\n\"That's good. We'll get rid of all those worries, won't we?\" Gwen whispered. \"Where to start? Well, I think you'll be hotter if you're more innocent. So, let's forget about the boyfriend.\" \n\nKim whimpered. \n\n\"I know. You love his big cock, but he just doesn't fit my new narrative. So, let's just make him disappear. Poof!\" \n\nKim's body jerked. \n\n\"There. Sweet Kim, nineteen years old and never been kissed. Mommy's very good girl, aren't you?\" \n\nKim nodded slowly. \n\n\"But, you like to play with your tight little pussy in bed and in the tub, don't you?\" \n\nKim blushed and smiled. \n\n\"You've never seen a cock before today. You avoided porn the other girls tried to show you. Such a good girl. Open your eyes and look at what real men's cocks look like.\" \n\nKim's eyes opened. She looked at Alex studding her mother like a stallion while Jason was slowly going flaccid in Lisa's mouth. \n\n\"Isn't it the most beautiful thing you've ever seen, Kim?\" \n\n\"Y... Yuh,\" Kim mumbled behind the gag. \n\nGwen giggled. \"Gag please, Mary?\" \n\nMary stopped stroking fat boy long enough to unbuckle the gag. \n\nKim was panting and slobbering as Mary gently pulled the ball from her clenched teeth. \n\n\"Just watch Mommy fuck. This is what girls need. They need hot studs to fuck them. They need to please and be pleased. Watch Mommy. She even makes women feel good.\" \n\nKim moaned. \"N... no... Stop, please.\" \n\n\"Shh, Kim, don't fight me. It's so much nicer if you don't. I promise you - you'll thank me for this soon.\" Gwen whispered. \"Now, watch Mommy eat the pretty blonde woman's pussy. Watch her taking that big, big cock. Doesn't she look happy, Kim?\" \n\n\"Y... Yes. It's... beautiful.\" \n\nGwen smiled. \"So many things you want Mommy to show you, aren't there, Kim?\" \n\nHer head nodded slowly as she watched her mother's distended pussy stretch even wider to accept the giant's cock. \n\nGwen reached down and broke the zip tie around Kim's ankles. She took the girl's hand and helped her to her feet. \n\nKim never took her eyes off the threesome. \n\nRebecca was moaning, curling her fingers in Lorraine's golden hair and pulling her deeper into her pussy. \n\nGwen led Kim to her Mother's side. \"Everything you've been taught? All those things about what good girls do and don't do? All lies, Kim. Just fairy tales to make you behave. You are free to do anything you want. There are no taboos, nothing is forbidden.\" \n\nKim trembled as Gwen coaxed her to her knees beside her mother. \n\n\"We are meant for this, Kim. This is our natural state. Don't you want to be like your mother? A hot, sexy slut pleasing and being pleased?\" \n\nKim nodded slowly. \n\nGwen guided Kim toward the hard cock thrusting into her mother. \"Don't you wish that was you?\" \n\n\"Y... Yes... I... wait, no, please stop.\" \n\nGwen sighed. \"Well, if you won't take my word for it.\" She leaned down and whispered in Lorraine's ear as she licked and sucked Rebecca. \n\nShe stopped her cunnilingus and raised her head. Her lips and chin were slick with Rebecca's juices. She looked at Kim with a dazed, drowsy expression. \"It's okay, baby. I love it. I've never felt so good.\" \n\nGwen sat down and began stroking Rebecca's clit gently. \n\n\"N... No... This isn't happening,\" Kim whined, her voice soft and weak. \n\nLorraine smiled. \"Touch him, Kim. Touch his thick cock.\" \n\nKim timidly reached out and brushed a fingertip on the thick veined shaft just before it entered her mother's pussy. \"It... doesn't hurt?\" \n\nLorraine moaned and laughed. \"Just a little, but he's being so careful.\" \n\nKim leaned closer and wrapped her small hand around the base of Alex's thick cock - even grasping him, she was still almost five inches from her mother's pussy! \n\nHe was so big her fingers wouldn't touch. \n\nAlex continued thrusting, his slick cock sliding through Kim's little fist and into her mother's tight cunt. \"Mmm, thank you, Kim. Just like that. You can squeeze harder.\" \n\n\"Jack him, honey,\" Lorraine moaned. \"Just slide your hand back and forth on his cock.\" \n\nKim watched wide-eyed as she stroked the monster cock embedded in her mother. \n\n\"So good,\" Lorraine whispered. \"I can feel his lube gushing into me each time you stroke.\" ",
        "\"Does it feel good?\" Kim whispered. \n\n\"Yes! Oh, honey, I've never been so wet. Don't be afraid - we're meant to be sluts.\" \n\nKim smiled and leaned closer. \n\n\"That's right, Kim. Go on. You know you want to,\" Gwen said with a smile. \n\nKim opened her mouth and let her tongue caress Alex's shaft where it emerged from her hand. \n\nShe stopped abruptly and leaned back. \n\nGwen read the girl's thoughts: Mom's juices! On his cock! I tasted them! \n\nGwen said, \"Of course. There is no taboo, Kim. Only pleasure.\" \n\nLorraine smiled. \"It's okay, baby. I know how good it tastes. Don't stop.\" \n\nKim was hyperventilating. She swallowed hard. \n\nAnd, then she leaned forward and began kissing and sucking Alex's thrusting shaft. \n\n\"Yeah, goddamn!\" Alex groaned. \n\nGwen almost laughed. Her husband was being squeezed by Kim's stroking hand, licked by her tongue, and probing deep in the mother's tight cunt. \"Don't you dare cum, Alex.\" \n\n\"F... Fuck you...\" Alex breathed and laughed. \"You have no idea what these two are capable of.\" \n\n\"No cum, I mean it. I have plans for these two.\" \n\n*** \n\n\"I'm an officer of the court,\" Diane said. It came out harsher than she wanted, but she remained defiant even as she saw the look of despair in Regina's eyes. \n\nThe woman wanted her to join her in treason against the United States - fuck that, she wanted her to join her in betraying the entire human race! \n\nTears welled up in Regina's eyes. \n\nDiane wanted nothing more than to kiss her and embrace her and tell her that she was sorry - anything, anything to take away that sadness! \n\nWhat the fuck was wrong with her?! This place had changed her. The physical changes to her body, the constant mind bending sex. \n\nTears were now flowing down Regina's cheeks. \n\nAnd, Diane was crying herself. \n\n\"Please, don't...\" Diane whispered. \n\n\"I'm sorry. I'm so sorry,\" Regina sniffled. \"I thought when I explained all this that you would understand. Oh, God, Gwen told me not to tell you all at once like this. Stupid. My own stupid fault.\" \n\nDiane sighed. Fuck this. She pulled the crying blonde bombshell into her arms. \"No. You were right. Truth is better.\" She kissed her face, kissed away the tears. \"But, I can't... do this. It's monstrous. Immoral.\" \n\nRegina sniffed and nodded. \"I know. I do. We're all damned. And, I tried to damn you too.\" \n\nDiane drew in a deep breath. \"It's not too late. I'll play along. When I get out of here, I'll go to the FBI. They'll put you under witness protection. You'll get out of this. I'm really good, Regina. By the time I'm done, you'll be a...\" She searched for the word. This hucow fog she was in was fucking annoying. \n\n\"Hero,\" Regina said, completing her sentence. She looked depressed. \"No. No, that isn't what will happen. They know what you think, Diane. They can read your mind. You can't lie to them. You can't defeat them. Either you join them, or they take you. There isn't an in between.\" \n\n\"Read my mind? That's...\" \n\nRegina gestured at the room around them. \"You're not in Kansas anymore, Dorothy.\" \n\nThe reality sunk in. Checkmate. \n\nDiane looked deep into Regina's watery eyes. A lifeline. She's throwing me a lifeline. \n\nBecause, she loves me. She wants to be with me. \n\nShe had fallen in love with Diane, and, knowing what was to come, wanted to save her. \n\nAnd, more than anything, Diane wanted to be with her. \n\nMore than anything. \n\n\"Oh, fuck... Jesus... I don't know,\" Diane sobbed. \n\nRegina smiled. \"Be a monster with me. Please. I love you.\" \n\n*** \n\n\"Come here, honey,\" Lorraine whispered to her daughter. \n\nKim opened her eyes. \n\nAlex's shaft was dripping now with his own lube, Lorraine's girl cum, and Kim's spit. He rubbed her hair as she slid forward to look into her mother's eyes. \n\nLorraine was breathing hard, her body trembling with every stroke of Alex's cock. \"I want to teach you something.\" She turned her head and looked down at Rebecca's open pussy. \n\nKim's eyes grew wide. \"But, I'm not gay.\" \n\nLorraine laughed. \"No, you're bi, just like me. All women are. Gwen taught me that. We're supposed to be like this.\" \n\nGwen stood up and Rebecca reached down and opened her dripping pussy wide with her fingers, beckoning to mother and daughter. \n\n\"Come on, you'll like it,\" Lorraine whispered as she lowered her lips to Rebecca's sopping quim. \n\n\"Unnh! Oh, God!\" Rebecca moaned as Lorraine began to pleasure her. \n\nLorraine reached out with her left hand and curled her fingers in Kim's blonde hair. \n\nShe pulled Kim down until their cheeks touched between the blonde's legs. \n\nLorraine leaned back. \"You want this, baby. I know you do.\" \n\nRebecca smelled warm and wet and musky with sex. Rebecca shook her head slowly. \"Mom, I don't know.\" \n\n\"Shh, baby, this is who we are now. We make people feel good. Now, service her.\" She applied gentle pressure to the back of Kim's head. \n\nKim stared into her mother's eyes as she allowed herself to be pushed closer to Rebecca's pussy. \n\nLorraine smiled and nodded. \n\nKim opened her mouth and let her tongue slide out. \n\nShe touched the hood of Rebecca's thick clit. \n\nRebecca trembled, her breath catching in her chest. \n\nThe taste was different! Her mother's juices were lighter, these were thicker. \n\nAnd, Kim wanted more! How silly she had been to resist this! \n\nShe opened her mouth and engulfed Rebecca's cunt. \n\n\"God!\" Rebecca cried. She ground her crotch against Kim's mouth. \n\n\"Ahh!\" Lorraine giggled. \"So good, baby! Feel how she's reacting! You're making her feel amazing!\" \n\nPride. Kim felt proud of herself. Her mother was proud of her! \n\nShe wanted to be just like her. \n\nA slut. \n\nThe word went through her mind. She was a slut! Just like her mother! Gwen was right, this was natural and beautiful. \n\nMorality was a fucking lie. \n\nShe moaned into the beautiful pussy, her lips and chin now dripping with the blonde's juices. \n\nShe felt hands on her backside and something hard probing at her cunt. \n\nShe squealed into Rebecca's pussy as she felt a thick cock head push against her hole. \n\nJason! He was hard again, and he was sliding gently into her pussy! \n\nLorraine pushed her tongue into Rebecca's pussy while Kim suckled the woman's clit. \n\nWe're being fucked while we eat a woman's pussy! The thought went through her mind, turning her on almost as much as being used by both Rebecca and Jason. \n\n\"God, God! Going to cum!\" Rebecca cried out. \n\nSomething gushed out of Rebecca's pussy - she was squirting on Kim and Lorraine! \n\nRebecca's pussy clenched and spasmed. \"Ahh, shit! Fuck!\" \n\nA minute later, the tremors died down. \n\nKim raised up to find her mother smiling at her. \n\nJason's cock was pounding her as Alex continued banging her mother. \n\nKim smiled back. \n\nAnd, then she kissed Lorraine, pushing her tongue deep in her mother's mouth. \n\n*** \n\nMary jumped when the fat guy started to cum. Thin jets of jizz shot toward the ceiling as she jacked him. \n\nHonestly, she had forgotten about him - the sight of the mother / daughter team on the floor had taken all her attention. \n\nCum coated her hand as she continued to stroke him firmly. \n\nHe moaned behind his gag - clearly, the sight of the incestuous kiss was exactly what he needed to get off. \n\nHis cock went limp quickly. \n\nShe smiled at him as she raised her cum coated hand and gently licked his cream off her digits. \n\nSalty and a little sweet. He wasn't her type, exactly. Fat, hairy, greasy guys were generally not her cup of tea - but, it was a fucking orgy, so why not? \n\nSuddenly, the foursome on the floor broke up. \n\nAlex pulled out of the mother and staggered backward. \n\nGwen tried to get to him, but Lisa was faster. \n\nLisa pulled her unitard crotch to the side and lifted her long left leg in one smooth motion, balancing on the one stiletto heel. \n\nAlex looked enthralled as the leggy brunette curled her left leg around his muscled waist. \n\nWith one hand, she guided the monster cock into her pussy and drew him close. \n\n\"Goddamn, that's impossible!\" Mary whispered. \n\nSeventeen inches of hard cock slid up and up until he was balls deep in the beautiful brunette. \n\nThey really did modify us! Mary marveled. \n\n\"I... I wanted to know,\" Lisa said as she stared into Alex's eyes. \n\nHe reached down with his big hands and grabbed the woman's latex encased ass cheeks. \"Well, now you do.\" He smiled and lifted her. \n\nLisa kissed his neck as he lifted her off the floor. \n\nShe raised her right leg and wrapped it behind him as well. \n\nHe lifted her effortlessly, sliding her up his cock, and then bringing her down. \n\nShe moaned and thrashed against him. \n\nJason watched in amazement as his girlfriend took the giant's cock. \n\n\"Oh, Jesus!\" Jason groaned as he was pounding into Kim's stretched pussy. \n\nGwen grabbed his hips and pulled him backward. \n\nHe turned over as Gwen pulled him down on top of her, taking his cock to the hilt in her pussy. \n\nShe smiled up at him. \"Don't hold back. I want it all. Everything you can give me, Jason. Fill me.\" \n\nThe youth was thrusting like mad. \n\nKim and Lorraine were busy making out on the floor, taking no notice of the impossible sex acts going on around them. \n\nNurse Karen knelt in front of bicycle shorts guy. \n\nHe looked at her with a mixture of confusion and terror. \n\nShe was nearly panting, her latex encased bosom rising and falling. \"I... I need you. I hope you don't mind. But, I really need you.\" She hooked her fingers in the waistband of his bicycle shorts and drew them down his thighs. \n\nHis average sized cock sprang up from a tangle of brown pubes. \n\nHe was already slick with precum from watching the others fuck. \n\nKaren traced her finger around the purple head. \n\nWrapping her fingers around him, she lowered her lips and kissed his cock. \n\nThe man groaned behind the ball gag. \n\nMary smiled and slid onto the floor beside the young nurse. \"You're gorgeous. She really did a wonderful job on you.\" \n\nKaren pulled her lips away from the man's cock long enough to smile. \"Thank you.\" Then she engulfed his head and slid him into her mouth. \n\nMary reached down and cupped the girl's ass under the short dress. \n\n\"You're so wet, honey.\" She ran her finger from the girl's pucker down her slit. \n\nKaren moaned with the cock in her mouth and pushed back against Mary's hand. \n\nMary felt lips on the back of her neck. \n\nHailey was keeling behind her. \"Can I play too?\" \n\nMary laughed. \"Yes, I...\" \n\nShe trailed off as the sweet girl reached under Mary's skirt from behind. \n\nHer hand wrapped around Mary's cock and squeezed. \"I really thought I gave you this,\" she whispered. \n\nMary laughed and moaned as Hailey began to stroke her. \n\n*** \n\nAlex nuzzled Lisa's neck as he fucked her. He was holding her against the living room wall, thrusting in and up. \n\nShe orgasmed, her body squeezing him with muscles no human woman had inside her. \n\nHer eyes were closed and she was lost in whatever orgasmic fantasy played out in her mind. \n\nAlex smiled, feeling his own orgasm rising inside him. \n\nShe wasn't just beautiful, she was breathtaking. \n\nThey all were - the White Witches. He felt clumsy around them. Every move they made, every smile that crossed their lips - everything was perfection. \n\nJason was lucky she was bound to him, because if she were free, Alex would want her with him forever. \n\nAnd, that was their true power: they made you want to be with them. \n\nMikaela moved to his side, running her hand up his spine as he thrust against Lisa. \n\nShe smiled up at him and he kissed her, wrapping an arm around her narrow waist and pulling her against him. \n\nHe couldn't fuck her - not yet. He had to wait until her procedures, but there was longing in the woman's ebony eyes - those eyes would serve her well. Men and women alike would fall under her spell. \n\nRebecca walked up behind them and began rubbing Mikaela's hair and caressing her latex encased body. \n\n\"Please her?\" Alex asked. \n\n\"Of course,\" Rebecca whispered. She took Mikaela's hand and led her toward the couch where Belynda was masturbating, her eyes closed, strong fingers moving in and out of her pussy. \n\nTogether they knelt and began kissing Belynda's body. \n\nThe Amazon jumped, startled b the touch. \n\nBut, then she smiled and rolled off the couch. \n\nThe three of them became a tangle of arms and legs on the floor. \n\n*** \n\nThrough it all, Demona watched. Most of the room was her work to a certain extent. The transformation drugs came from Havana, but she had perfected them, working for days at a time without rest in her subterranean lab. \n\nLisa was moaning and thrashing in Alex's arms, her body pushed beyond even her endurance. \n\nAlex lowered her gently to the floor beside Gwen. \n\nGwen held Lisa's hand as the two men made love to them. \n\nJason abruptly froze and arched his back. \n\nGwen laughed. \"Yes, oh, God, yes! All of it, Jason. I want it all!\" \n\nHe groaned as he pumped into her. \n\nA moment later, Alex came deep inside Lisa. \n\nThe four of them collapsed together. \n\nAfter a while, Alex drew Gwen into his arms and cradled her as Jason and Lisa spooned. \n\nKaren was moaning loudly as she rode Bicycle Man's prick reverse cowgirl. \n\nHe looked stunned, his head thrown back on the couch. \n\nMary was tonguing Karen's clit and his sack as they fucked. \n\nHailey was behind Mary, stroking the futanari's long cock in practiced firm strokes. She giggled and pushed two fingers into Mary's pussy and another two up her ass. \n\n\"Fuck!\" Mary groaned. \n\nI wonder if I should give myself a dick? Demona thought. Was she being selfish denying her girlfriend, Courtney, a hard cock? It was a thought. Maybe one of the retractable ones - she liked her mini skirts and she didn't want a big ol' futa cock hanging down between her thighs. \n\nShe wished they would hurry up - not that she had anything against orgies. She fucking loved them. But, there was a lot of work to do. \n\n\"Jesus! Oh, fuck!\" Karen was cumming again. \n\nGood. She needed the girl relaxed and focused. \n\nShe admired the coed's firm thighs as she rode the guy for all he was worth. Once she got a real cock inside her she was going to be too spoiled for the average human male. \n\nThe girl was completely bi, and that made Demona a little sad - not that Courtney wasn't more than enough for her. But, seeing Karen, who could have been a perfectly happy lesbian, thirsting for cock just went against her nature. \n\nStraight people were so weird. \n\n*** \n\nThe boys were still passed out on their backs, but Gwen and Lisa were fully recovered. \n\nThey helped each other up - stiletto heels looked hot, but getting up off the floor could be an ordeal. \n\nGwen tapped her lips with a long, manicured nail. \"Hmm, what now?\" She looked around. \n\nRebecca, Mikaela, and Belynda were in a mouth to pussy daisy chain. \n\nLorraine and Kim had also discovered the joys of 69. \n\nHot Nurse Karen was fucking bicycle guy and Mary and Hailey were occupied as well. \n\nThat left fat guy and... the demon. \n\n\"Which one do you want?\" Gwen asked nodding toward the bound captives. \n\n\"I think I want the little mean one,\" Lisa said with a slight laugh. \n\n\"Okay - careful with that one. She doesn't seem quite right.\" Gwen said as she walked around behind the couch and began massaging fat guy's temples. \"Hmm, lives in his parents' basement. Who'd have guessed that?\" \n\nLisa laughed. \"Be nice.\" She knelt in front of Demon girl. \"Hi, my name is Lisa. Let's take a look under the hood and find out why you're so mean?\" \n\nLisa's eyes floated up in their sockets. \n\nDemon girl just stared at her. \n\nLisa started to frown. \"Gwen?\" \n\n\"Yeah,\" Gwen said. She was deep inside Fat Guy's fantasies. Most involved cartoon girls with big eyes. \n\n\"Should she be... blank?\" \n\n\"Huh?\" \n\n\"I can't see anything in her head.\" \n\n\"Try harder.\" \n\n\"I... am...\" Lisa's brow furrowed from effort. \n\nAnd, then the demon leapt off the sofa and knocked Lisa backward on the floor. \n\nGwen jumped, losing her link to Fat Guy. \n\nThe Demon girl's hands were free! Her fingernails were ragged and bloody from tearing through the zip tie. \n\nGwen started to move, afraid the woman would scratch Lisa's eyes out with her bloody digits. \n\nInstead, the demon drove her knee into Lisa's stomach, driving the wind out of her in a whoosh. She undid the rubber ball gag and yelled into Lisa's astonished face. \"Fucking whore!\" \n\nShe rolled off Lisa and Gwen thought she was trying to get to her feet. \n\nWrong again. She threw herself on Alex. \n\nGwen screamed as the demon sank her teeth into the base of Alex's cock. Blood sprayed two feet in the air. \n\n***"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "body modification",
        "latex",
        "medical fetish",
        "oral sex",
        "orgy",
        "seduction",
        "slut",
        "taboo",
        "fetish",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-the-farm-ch-05"
}