{
    "title": "Ghost Lightning - A Halloween Story",
    "pages": [
        "David - a ghost - attends a Halloween party that will change his life forever... or maybe that should be his after-life forever.\n\n= = = = = = = = = = = = = = = = = = = =\n\nWARNING! This warning is possibly not needed for this particular story, but I am including it because it is needed for most of my stories. If you decide to read other of my stories make sure that you read the disclosures and warnings at the beginning of each story.\n\nAll of my writing is intended for adults over the age of 18 ONLY. Stories may contain strong or even extreme sexual content. All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nAll characters involved in sexual activity in this story are over the age of 18. If you are under the age of 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article. This story is copyright (c) 2020 by The Technician.\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use. Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n= = = = = = = = = = = = = = = = = = = =\n\n* * * * * * * * * * * * \n\nDavid Chamber approached the Halloween party very carefully. After all, he wasn't invited and he wasn't sure what kind of party this would be. It might be a bunch of young kids, in which case he would leave immediately. It might be a bunch of really old people, perhaps even people as old as his grandparents, in which case he would also leave immediately. If they were only as old as his parents, he might stay a little while. He had been at old people's parties before. They weren't always bad. It depended on what kind of people were there. If they weren't all really old, he would walk through the party to see what kind of bodies were present and gauge whether or not anything... interesting... might be happening. David wasn't against sex with older women. They just had to be fit and attractive... and not look like his mother.\n\nHe once stayed for an all girl sleepover Halloween party at an apartment near the local college. The eight girls drank wine and watched scary movies all night... well not all night. He hadn't realized how turned on girls can get by getting really scared. If he had been able to materialize-- or more exactly corporealize-- he could have spent the night fucking them all. Instead he spent the night watching some very interesting girl on girl action. One girl, whom the others called Sari, said she didn't want to do \"that,\" but the bottoms of her teddy, when she took them off, were so soaked it looked like she had pissed herself.\n\nFor some reason... well for the obvious reason... the girls decided that the movies would be even scarier if they were naked. Sari agreed, but she was the last one to get naked as they got ready to watch the next slasher film. Unlike the others who casually lay naked on the blanket-covered floor or sat cross-legged eating popcorn or sweets, she sat with her legs carefully tucked in to the side and almost beneath her so that her sex was basically hidden.\n\nWhen the movie got to a really scary part... just as the witless movie ingenue began screaming her head off because the masked villain had popped out of the bushes in front of her... the other seven girls jumped over at Sari and held her down. She screamed louder than the girl in the film as everyone found someplace to tongue or suck. But pretty soon the poor girl's screams changed and she began screaming in orgasm. Her friends didn't stop just because she had lost control. They kept licking her cunt and ass and sucking on her titties and toes until Sari was flailing around senseless on the floor.\n\nThat bothered David-- a little. Sari had said she didn't want to. But her words of protest didn't sound all that convincing. If she truly didn't want to, why did she get naked? And once her friends started suckling her nipples and lapping at her love bud, her cries of protest sounded even less sincere.\n\nThat night, Nancy's protests had sounded much more convincing. She had willingly gone to Lover's Loop with David. She willingly walked out onto the grassy hillside with David carrying a carefully-folded blanket. She had willingly lay on the blanket with him \"to watch the stars.\" She had even willingly let him take off her blouse and her skirt. It wasn't until he started fumbling with the clasp on her brassiere that she said, \"I don't think we should be doing this here.\"\n\nDave hadn't really listened to her. Besides, he wasn't sure if she meant they shouldn't be doing THIS, or they shouldn't be doing this HERE. He continued kissing her and rubbing her breasts through the fabric of her pale blue bra and even rubbing her pussy through the gusset fabric of her matching blue panties. For some reason the feel of those panties-- or perhaps the feel of her labia and the bud of her clit through those panties-- was still vivid in his memory.\n\nHe kept waiting for her to say \"Stop,\" or whatever, but she didn't. After a while she was apparently too turned on to object so he once again fumbled with the clasp of her bra-- this time successfully-- and then slipped his fingers in the sides of her panties. He was somewhat surprised that she lifted her hips slightly as he attempted to pull them down. \n\nSoon they were both naked and after a short period of more rubbing-- this time on her naked breasts and cunt-- he was inside her pumping away. She must have been on the pill because she didn't tell him to put on a rubber or ask him to pull out. After he finished, they lay there for several minutes. She was looking up into the sky. Maybe she was actually watching the stars. After a while, she said, \"I think we should go before somebody else drives up here.\"\n\nThey dressed silently. David refolded the blanket and tucked it under one arm. He held her hand as they walked back to the car. While they were walking, he wondered if she would hate him in the morning.\n\nDavid would never know the answer to that because they died on the way back into town. The driver of the other car was drunk. He was going at a high rate of speed and didn't even slow down at the stop sign where the side road crossed the highway. Dave didn't see him until just an instant before the crash. At first he thought that he had somehow miraculously survived because he was standing next to the wreckage. Nancy was partially out of the car. Her eyes were staring vacantly at him. The other car had rolled after hitting them and was sitting upside down in the ditch burning. Then he saw his own body still behind the wheel of his car.\n\nThat's when he knew that they were all dead. And that's when a terrible tsunami of guilt overwhelmed him. This was all his fault. He had killed them all. He had forced Nancy to have sex with him and the Karma punishment was immediate and indiscriminate. They were all dead.\n\nStanding next to the bodies, David knew that he no longer belonged in this world. He could feel in the depth of his now ethereal being that he should move on to... ... somewhere. But the guilt that covered his body like a thick layer of tar weighed him down. It made him heavy. It made him unable to move on. \n\nDavid was stuck in a state of nothingness, unable to touch or feel or experience anything. He was no longer a part of this world, but he was unable to leave it. And so he roamed the earth, desolate and alone.\n\nHis one respite was on Halloween. At first he thought that it was because it was the anniversary of his death, but then he finally realized that it was somehow part of Halloween itself. On Halloween night, things were different. He still could not touch or feel or experience anything directly, but he could seek out someone else and temporarily possess them, and thus through them feel something... anything.\n\nHe tried possessing people on other days, but except in the rare case where someone was particularly vulnerable, he was never successful. After a few years he realized that only on Halloween were people in the right state of mind. Because of all that Halloween is-- especially at Halloween parties-- people lower their natural defenses and believe and accept many things that on any other day they would say was ridiculous. And as David discovered, it is much, much easier to possess someone who already believes that it is possible.\n\nDavid followed the noise of the party and passed through the wall of the house into what was apparently a large family room. He smiled. Things looked very promising. It was a young party... but not too young. Everyone there looked like high school seniors or perhaps young college students. Most were about the age David was when he died. He had been eighteen. Nancy had just celebrated her birthday the week before and was also eighteen. Now they were both eighteen forever.\n\nSeveral couples were already chatting privately in the corners. David walked rapidly around the room trying to listen in on several conversations at the same time. Once he accidentally walked right through a young man who was passing out glasses of soft drinks. If the glasses had been full the young man would probably have spilled all of them as he cried out in surprise and nearly dropped the tray.\n\n\"What happened?\" a young woman asked.\n\nThe young man shivered almost theatrically and answered, \"A ghost must have walked over my grave.\" He sounded serious as he said it, like he believed what he was saying. Maybe he did.\n\nA few moments later, David found out why the soft drink glasses weren't full. The girl who had asked the question reached under the couch and brought out a bottle from which she finished filling her glass. \"Nothing like the old favorite, rum and Coke,\" she said with a smile as she put the bottle back in place.\n\n\"Yes,\" David thought, \"this party has possibilities.\" He decided to stay... at least for now.\n\nHis first target was a jock type over in the corner. Dave didn't normally enter jock types, but one of his thirsts on this Halloween night was for the taste of beer, and Mister Football was already well into his third or fourth can of beer. Sliding in was easy. Mister Football didn't even notice the extra presence within him. He did, however, notice his sudden intense need for another beer... and then another and another.\n\nDavid felt guilt once again-- but only a little-- as he left Mister Football slumped over unconscious on the couch. One of the advantages of being a ghost was that you never passed out from too much alcohol. The slight buzz was probably all in Dave's mind, but there were never any of the bad effects... passing out, puking, the terrible morning after headaches. David left those things with Mister Football as he returned to the center of the room.\n\nFeeling refreshed, Dave decided to work on satisfying his second, much more carnal thirst. He looked around for a couple that might be getting it on before the night was through. He smiled again. From the looks of this party, he might find several couples. \n\nFor a moment, he thought that the tall pale, blonde woman with the darker-complected, shorter man might be an opportunity. She was sitting in his lap and nibbling on his neck and ear. But listening to what she was saying and the tone of her voice, it soon became obvious she was just teasing him. No need to go into him. If he did that, both of them would go home frustrated and unhappy.\n\nThe African-American couple in the corner also looked promising. They were obviously attracted to each other. But after listening in for just a short while, it became apparent that she was on her period. It also became very apparent that she was not at all interested in oral or anal. David moved on.\n\nHe had been ignoring the nerdy-looking couple who sat primly on the couch sipping on soft drinks and eating nachos... until he heard the young man say, \"Would you like to go for a walk in the woods in the moonlight?\"\n\nAny girl who thought that what he actually wanted was a walk in the moonlight had to have been born yesterday. When the young woman replied, \"That sounds nice,\" David immediately zoomed in on them and followed them out the back door of the house, down off the patio, and into the yard behind.\n\nHe quickly learned that the nerd's name was Walter and the nerdette was Wendy. Upon hearing that, he almost changed his mind and went back into the party. Wendy and Walter? Was it possible to get any more nerdy? He had even turned to go back to the house, but something stopped him. \"Sometimes the shy, quiet ones in the corner have really surprised me in the past,\" he thought as he turned to watch Walter and Wendy walk side by side toward the darkness of the woods. \"Why not?\" he said aloud as he returned to tagging along with the nerd couple as they walked across the back yard and into the darkness of the woods beyond.\n\nThere was a cleared path which wound through the woods and eventually came out into a park. The woods were evidently intended to be a buffer between the park and the houses in the subdivision. As the nerd couple walked through the woods, Walter told Wendy, \"Let me hold your hand so no monsters can grab you in the dark.\"\n\nDavid shook his head at such an inept line, but Wendy just giggled and took Walter's hand. They walked slowly, not saying anything until they came to the park. There were lights along the roadway in the park, and the picnic tables which dotted the grassy area near the road were clearly visible. In the area between the woods and the picnic tables, the well-lit grass slowly blended into a thick bed of fallen leaves which appeared to get thicker-- and darker-- as the ground approached the woods. The open area at the edge of the woods, itself, seemed to be even darker than the woods themselves. \n\n\"Do you want to sit down and watch the stars?\" Walter asked hopefully, pointing out into the park at one of the picnic tables. \n\n\"Worked for me,\" David said with a smile. Sometimes he was really glad that no one could actually hear him.\n\n\"Out there,\" Wendy said matter-of-factly, \"the light will get in our eyes and wash out the stars.\" She lowered herself down and patted the dry leaves next to her legs. \"We can sit here,\" she said in her totally nerdette tone of voice.\n\nSoon they were sitting side by side on the dry leaves. David could see the possibilities, but he could also see that Walter was going to need a little encouragement. He drifted over and lowered himself down right over Walter's body.\n\nThat's when something went wrong. Rather than slowly sliding into Walter's body, David felt himself being pulled almost violently into Wendy's. He tried to pull away and escape, but could not. Something much stronger than himself was pulling or pushing him deeper into Wendy's body and mind, and there was nothing he could do. He was powerless against it. Suddenly he felt the merging happening around him. Then it was over. He was inside Wendy looking out at Walter.\n\nDavid was overwhelmed. He had never possessed a female before. Her mind was so... different. She saw the world differently than he did. She was thinking about a hundred different things at the same time. Would he still respect her if she let him? What if she got pregnant? Should she have brought along some condoms?.. no, that would make her look like a slut. If they did it, should she let him keep her panties as a trophy? She would if he insisted, but they were an expensive, almost new set that matched her bra and she had only worn them once before. Was he a virgin like she was? And if so, did he know what to do? She did, or at least she had watched enough porn to know what went where.\n\nDavid was about to force his way out of Wendy when Walter suddenly leaned in and kissed her fully on the lips. She was surprised, but at the same time pleased. There was a flood of hormones and emotions which overwhelmed and confused David. He knew what it was like to get turned on as a man. And he knew that it was slightly different for every person. He had experienced being turned on a hundred times in different men. But never-- ever-- in a woman.\n\nThis was different. For a man, getting turned on created a desire to conquer... to overwhelm... to penetrate. For a woman-- or at least, for Wendy-- it was a longing to be held... to be protected... to open herself up and allow another to become one with her.\n\nThings were starting to become a blur for David. There were hands sliding up and down his-- her-- legs and the movement of those hand created intense pleasure in the depth of his abdomen. As the hands slid up and down, he could feel his-- Wendy's-- breath getting deeper and longer.\n\nThen Wendy said those terrible words, \"I don't think we should be doing this here.\"\n\nDavid felt the pain and guilt of that night so long ago crushing down on him. He now wanted to leave more than ever. He frantically tried to push out of Wendy but whatever had pulled him into her was still there and it was very strong and still holding him back.\n\nDavid tried even harder, and it felt like he was just about to break free. Then Wendy pressed her mouth more intensely against Walter's lips and began to move her breasts back and forth against his chest. A totally different flood of thoughts and hormones and emotions washed over him. He could only watch helplessly as Walter reached up under Wendy's blouse and fumbled one-handed with her brassiere latch.\n\nDavid was extremely surprised that Walter didn't notice that Wendy reached behind herself and pushed the clasp open beneath his fingers. David didn't have time to think about what that meant because Walter's hands immediately went back to the front and up under the bra cups. The new flood of hormones and emotions was totally overwhelming. David felt like he was drowning and struggled mightily to leave, but whatever had put him inside Wendy was holding him firmly in place.\n\nWalter's left hand continued to rub Wendy's breasts while his right hand began dipping into the front of Wendy's panties. His fingers were sliding over her rapidly engorging clit and slipping between her labia into her cunt.. The pleasure was becoming almost unbearable for David. He again tried to leave Wendy's body, but something wanted to keep him trapped there and he was just not powerful enough to overcome whatever it was that was holding him in place.\n\nWendy had been using her hands to rub and slide over Walter's chest and back under his shirt. She suddenly pushed up on his shirt, forcing his hands away from her breasts and cunt. Once his shirt was up over his head and out of the way, Wendy's hands began pushing downward, trying to take off his pants.\n\nWalter quickly released his belt and opened the latch and fly of his pants. Then, as Wendy was sliding his pants down his legs and pulling them over his feet, his hands were sliding her skirt and panties down her legs. Again, the flood of emotions and hormones was mind-boggling to David... as was the electric thrill which accompanied Walter's prick first touching Wendy's cunt.\n\nWalter was now poised above Wendy who was lying flat on the ground, naked. His prick was lightly rubbing against Wendy's clit and with each rub, she would arch her hips and push herself upward, trying to catch that elusive spear.\n\nFinally, Walter shifted himself slightly downward with respect to Wendy's body and again moved in to rub his prick against Wendy's cunt. This time, however, his prick was properly aligned with the opening and he slid in. He pushed only halfway in and then stopped to let Wendy's body catch up.",
        "Wendy gasped, took in a very deep breath, and then arched up against David driving him fully inside her. In the new flood of emotions, David lost track of what was going on around him. By the time he regained his senses, Walter was thrusting deeply into Wendy at a steady pace. Wendy was pushing back against him and grunting and gasping with each thrust. After a little while, her grunts started getting higher-pitched until suddenly she screamed out and thrashed her legs while pushing her arms hard against the ground.\n\nDavid was somewhat prepared for the orgasm, but he was totally unprepared for its strength and duration. When he was alive, an orgasm was a sudden thing. That was also true for all of the men he had possessed in the years since then. A man's orgasm was there and then gone. But Wendy's orgasm seemed to keep going on and on almost forever.\n\nFinally the orgasm began to fade and as it did David felt like he was regaining control... of everything. He drifted up out of Wendy and stood alongside the couple as they snuggled and murmured in postcoital bliss.\n\nA soft voice next to him said, \"Do you think we looked like that on the hillside that night?\"\n\nDavid spun to see Nancy standing alongside him. She, like him, was naked. David had always thought that ghosts were clothed just as they were when they died. He thought that he was an unusual ghost because he had left his clothes behind long ago.\n\nNancy saw his shock and laughed lightly. Then she said, \"Ghosts have no need of clothes. Most of the others I have met are also naked. Some want clothes and so they have them. Whatever their mind wants, they have.\" She paused and added, \"I didn't see the need.\"\n\nDavid had to force himself to talk. \"Are you... are you... are you trapped here too?\" he asked fearfully.\n\n\"I'm not trapped anywhere,\" Nancy said softly. \"And nothing is trapping you here either. It is just your guilt that keeps you from moving on.\"\n\n\"If you're not trapped, then why are you here?\" David said incredulously.\n\n\"I've been looking for you,\" she replied. She gave him a withering smile and said, \"It's been a really long, really boring search.\" She held up her nearly transparent arm. \"Being a ghost is terrible,\" she said glumly, \"You can't feel. You can't touch others. It took me the longest time to figure out how to possess someone, but that isn't really feeling or touching. It's more like watching.\"\n\nDavid looked into her eyes. \"Believe me,\" he said, \"sometimes you can feel. What I felt tonight was... unbelievable.\"\n\n\"That was me,\" Nancy said slowly. \"I was inside of her with you. What she could feel, I could feel even though I was only watching from inside her. But because we were... overlapped... you could feel what I was feeling.\"\n\n\"Oh,\" David said, looking down at the ground, \"I've never possessed a girl before. And I didn't intend to tonight. I just suddenly got pulled into her.\"\n\nNancy laughed. \"That was me, too. I found you at the party. And I knew that she was going to have sex tonight. So I sort of directed you to them. I wanted you to experience her mind before... and during... and afterwards.\"\n\n\"How did you know that she was going to have sex?\" David asked incredulously. \"Can you read minds? Can you travel in time? ... Or have you been in her for a long time?\"\n\n\"I can't read minds,\" Nancy said. \"And I can't travel in time. But I can see through clothing... as can you.\"\n\n\"Yeah, well,\" David said, blushing and looking down at the ground. \"I don't do that... ... very much.\"\n\n\"I do it all the time,\" Nancy said. \"You'd be amazed what is under some people's clothes.\"\n\n\"OK,\" David said, turning once again to face Nancy, \"but how does looking under her clothes tell you that Wendy was going to have sex?\"\n\n\"Silly boy,\" Nancy said, \"didn't anyone ever tell you that when a girl's bra and panties are new and match exactly on a date, it's not the boy who decided that they were going to have sex that night.\"\n\n\"Oh,\" David said, wrinkling up his face as he tried to remember, \"that's right. Her bra and panties were the same color and they did look pretty new.\"\n\nHe stood perfectly still with a very strange expression on his face. Then he looked away from Nancy and then looked back to face her. He repeated that several times before finally speaking. \"That night...\" he began. \"That night we died... That Halloween when we had sex for the first time... for the only time... on that night, your bra and panties matched. And they were new and soft and shiny. Does that mean?...\"\n\n\"It means that you have nothing to feel guilty about,\" Nancy said softly but firmly.\n\n\"I think maybe it's time we moved on,\" David said, taking Nancy's hand.\n\n\"There's something I want to do first,\" Nancy said, \"... something we both need to do first.\"\n\n\"What's that?\" David replied.\n\n\"Have you realized yet that you are holding my hand?\" Nancy asked. \"We can touch each other. You can feel my hand in yours. And I can feel your hand in mine. And...\"\n\n\"And what?\" David said, again turning to fully face Nancy.\n\n\"Notice anything?\" Nancy asked, giving David a slight smile.\n\nDavid looked around. \"Uh,\" he said. \"Nothing seems to have changed. We're in the same place. We're standing next to each other. Both of us are still...\" His mouth suddenly opened into a perfect circle and his eyes opened very, very wide. \"You... uh... are...\" He stammered out. \"You are... uh... wearing a bra and panties.\"\n\n\"They're new,\" Nancy said. \"I just thought them up.\"\n\n\"And they match,\" she said with a smile as she pulled David deeper into the darkness alongside the woods.\n\n***\n\nAs Walter and Wendy were walking back to the house, there was a sudden bright flash of light as if lightning had struck one of the trees in the woods. They both cringed slightly and braced for the blast of pressure and sound that was sure to follow. But there was no sound. No wave of thunder accompanied the lightning.\n\n\"What in the hell was that?\" Walter exclaimed.\n\n\"That must have been ghost lightning,\" Wendy said breathlessly. \"My grandmother told me about it. She said that if you see a light like that on Halloween, it means that two ghosts were making love. She said that the light is caused by both of them having an orgasm and then moving on.\"\n\nWalter started laughing. \"You mean that two ghosts were out in the woods getting it on while we were out there?\"\n\n\"Only after they came out of me,\" Wendy said very softly as they walked back up onto the deck. \"I'll definitely have to tell grandma about this,\" she added with a smile as she pulled Walter back into the party.\n\n = = = = = = = = = = = = = = = = = = = = \n\nEND OF STORY\n\nPlease remember to vote \n\nby clicking on one of the stars at the end of the story. \n\nIf you really liked it, click 5. \n\nIf you really hated it, click 1, but please click something.\n\n= = = = = = = = = = = = = = = = = = = ="
    ],
    "authorname": "The_Technician",
    "tags": [
        "consensual sex",
        "fantasy",
        "ghost",
        "halloween",
        "lesbian"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ghost-lightning-a-halloween-story"
}