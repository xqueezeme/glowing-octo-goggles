{
    "title": "The New Principal Ch. 15",
    "pages": [
        "The first week of the summer session was exhausting, but by and large, it was also a success. Anyone could tell that there was a new energy on campus. The majority of students seemed excited about the changes that were going on, and the staff and faculty were riding that energy. \n\nHowever, there were quite a few complaints, mostly from male students who were confused about the single-gender direction of the school, but their worries were generally assuaged once they understood that no one was being kicked out. And the prospect of men being rare on campus seemed to dawn on them. \n\nI also fielded several concerns from faculty and staff. Their worries were mostly vague, and I wrote them off as simply not being comfortable with change, but there was also something else behind their discontent. Perhaps lingering loyalty to the previous principal? I really didn't see much option but to move forward and hope to win them over time. \n\nI was also neck deep in work for my own class. As we were still low on staffing in history, I was handling an introductory Early History course. I hadn't taught post-secondary since grad school, and there it took much more time to set everything up than I had originally budgeted. The classroom dynamics were also slightly disconcerting. Perhaps because they were worried about having the principal as their teacher, or maybe just from the general student attitude on campus, the students were even more reticent in class than I was prepared for. I was going to need to find some way to shake things up and get them engaged, but there wasn't time for it at the beginning of class.\n\nAll this meant that there also wasn't much time for following up on my adventures with Jennifer and Kimberly. Everyone was putting all their time and effort into making sure that the beginning of the semester went well. I was really proud of the effort I saw, but even though I was deeply tired, I was a bit surprised at how horny I still was, and I was without any partner to help alleviate the problem except for my own hand. \n\nI didn't even have time to reconnect with Veronica beyond grabbing a cup of coffee at the awful campus caf\u00e9. I shouldn't have been surprised, but she continued to lean slightly into her goth librarian fantasy look. Her hair was brought up tight in a bun, and she had jet-black form-fitting skirts, and every day a different shade of bold lickable lipstick. Because of her natural dark skin tone, she couldn't pull off the chalky powdered white makeup, but that only made her look hotter and more exotic in my eyes. On the day we had coffee, she wore black silk opera gloves for crying out loud. It would have been absurd if I weren't so turned on. \n\nI did also notice that Kimberly's outfits continued to change, if only slightly. The temperature was kept fairly cool in the office, but outside it was quite warm, and she started leaving the heavy jackets at home. Her skirts remained ankle-length, but she was moving away from the dark blues and browns at least. I might have been mistaken, but it seemed that she was also calling me 'sir' more often, and putting herself into poses that showed her body off to the best effect when we were working together. In any case, she was as efficient and effective as she ever was, but with a little more bounce in her step. She also let her accent slip more than in the past. \n\nWhen I came in to the office on that first Friday, I found Kimberly already hard at work as usual. I had told her over and over that she needed to make sure she wasn't going to burn out, but there was just so much paperwork to push, I understood why she wanted to get it all taken care of. \n\n\"Good morning, Principal Lee. I've got a few things for you to take a look at if you have a moment.\"\n\n\"Morning, Kimberly. Sure. Give me a sec to grab some tea and I'll meet you in my office.\"\n\nMost of what she had was just papers to sign, students transferring around, teachers changing policies and nothing of big import. But then she brought something new.\n\n\"Ok. So, with that all done, we can get to the good stuff.\"\n\n\"Good stuff? It's about time!\"\n\n\"Students have started putting together proposals for clubs. Recently, we did not allow clubs, but I think it would be a good idea to reconsider. I've got a few completed proposals for you to look at.\"\n\n\"Do I even want to know why we didn't allow clubs?\"\n\n\"It was mainly a money issue. Each club proposes a budget, and most are quite reasonable, but some do require a bit of an outlay.\"\n\n\"Well, that's not as nefarious as I thought it would be. Ok, this could be fun, what are the proposals you have ready?\"\n\nShe handed over the first few of a stack of manila folders.\n\n\"The first few are all basically similar. There's Dance Club, Film Club, Hiking Club, Anime and Manga Club, and Swim Club. They basically don't need much funding, maybe just a minimum for snacks and posters and such. They only really need a place to hold their meetings and activities. And you would need to approve their advisors.\"\n\n\"I don't see any trouble with the advisors as long as they are willing. Let's see... Swim club will need the pool, obviously. Jennifer's signed on, that's perfect. We would need to make sure one of the members is a certified lifeguard. Hiking Club... we'd need to make sure they've got some basic first aid training. Dance Club, Anime and Manga, and Film Club could use the theater once that's cleaned up, but for now we could put them in one of the bigger classrooms... Yeah, and these budgets are totally doable. Wait, what is the line here for sewing machine and fabric for the Anime Club?\"\n\n\"Oh, right. She said they were going to be making costumes based on the shows.\"\n\n\"Oh. That's kind of cool. We should bring down that number for fabric, and see if they can make so with second-hand sewing machines. Alright, that's fine. These are great.\"\n\n\"Good. Now this one.\" \n\nShe handed over another folder.\n\n\"Ah, Journalism Club. Of course. That's a no brainer. I don't think we can do a print paper, but I'm sure Veronica can find space online for a campus paper. Oh, they don't have an advisor listed. One of the English teachers would be best. Have them get an advisor, but they can move forward. What else?\"\n\n\"Here's one that might be expensive.\"\n\n\"Video Game Club? Oh, wow. That budget is high. Would they really need that many computers?\"\n\n\"They say they want to field an esports team.\"\n\n\"Ah. Well, we can't do all of that at once. Fund them at half of what they are asking, but the computer purchases have to go through Veronica and the computers have to be available for campus use when the club isn't using them.\"\n\n\"Ok.\" Kimberly made some notes. \"And here's the last one.\"\n\n\"Cooking club?\"\n\n\"The reason I saved this one for last is that, A: it's pretty expensive to start up, and B: I think it might be a bigger thing than they have proposed.\"\n\n\"I think I might know where you are going with this.\"\n\n\"What if we approved the cooking club, but put them in charge of the caf\u00e9? They could make snacks to sell.\"\n\n\"And we could have them run things out of the theater kitchen. Once we open up that main door, we could move the caf\u00e9 tables over there, but they could also use the audience area as well.\"\n\n\"Exactly.\"\n\n\"Ok. You're right. That will be more complicated, and of course, they would need to agree. They'd also need an advisor from the cafeteria staff. I assume you have someone in mind?\"\n\n\"Well, I think I know someone who would be perfect.\"\n\n\"The other upside is that they'd get experience running and business, and at least eventually, if they ran it well, they could make a profit and get paid. Ok. Make sure we wouldn't be running afoul of any employment laws, and approve conditionally. Get the advisor on board and make sure the club leaders are willing.\"\n\n\"Ok, great. I'll get things moving.\"\n\n\"What's that last folder?\"\n\n\"Oh, this one? I don't think it's ready. The Xu twins want a club, but their proposal is vague. I'm not sure exactly that they know what they want.\"\n\n\"The Xu twins?\"\n\n\"Do you know them? They are a little... odd. Maybe it's just the twin thing. Anyway, they say they want a club that's some kind of cross between a drama club and a sorority. It's full of all sorts of stuff about 'sisterhood' and performance and I don't know what all else. I'm going to have them rewrite and resubmit.\"\n\n\"Huh. Okay. Oh, that reminds me. One condition of the clubs' approval is that everyone who will be using the theater is going to be drafted to help clean everything up in there. Can we do that this weekend? Is that too fast?\"\n\n\"I don't think so. Things are pretty light on the first weekend of the semester. I think they would be willing if it means they get their club. If you want to do it, let me know and I'll get a hold of everyone. We'll need to notify everyone immediately though.\"\n\n\"Ok. Let's do it. Sooner is better. Cleaning party tomorrow, all related club members attend, including the Xu sisters and their crew. We may need Sunday, too, but at least Saturday.\"\n\n\"Who is going to organize everything?\"\n\n\"I'll take care of it. I'll put them into groups and get the place fit.\"\n\n\"Do you need any help?\"\n\n\"I don't want to take over your weekend, Kimberly. Remember, you are under strict orders to not over-work.\"\n\nLater that afternoon, after my last class of the day, I made a point of dropping by the library to check in on Veronica and touch base about the clubs.\n\nShe was down in the basement finishing off her class, so I slid in as the students filed out. There was a small circle of students around her asking questions about a weekend assignment, so I just hung back and enjoyed the view.\n\nShe was in full teacher mode, fierce and strict, dealing with their questions with precision. She obviously cared a great deal about them, but the expressions they had were something between terror and worship. I could see how those emotions might be related for them. She was like an ancient goddess, avatar of both sex and doom.\n\nWhen they finally got the answers they needed and left, she saw me and her fa\u00e7ade utterly faded away.\n\n\"Ben! Oh, it's great to see you. Are you done for the day?\"\n\nWe started to walk toward her office. \"Done teaching anyway. You?\"\n\n\"Yeah, lots still to do, but no teaching.\" She looked at me and smiled sweetly. \"It's amazing how much things have already changed here. The students are really excited about the new classes.\"\n\n\"They're excited about you.\"\n\nShe rolled her eyes. \"Oh, come on.\"\n\n\"Really? Ok, fair. They may be scared of you too, but that blonde girl with the question about the coding thing? She is crushing hard on you.\"\n\nVeronica's smile turned from sweet to something with a little more heat.\n\n\"Well, maybe...\"\n\n\"And the tall guy who is already asking about extra credit?\"\n\n\"Ok! Ok, stop it!\" She laughed. \"I forgot how high their libidos idle. He actually had to wait to stand up at the end of class, but I could totally see why even with him holding his books like that!\"\n\n\"And I'm sure the tightness of your skirt and the height of those heels have nothing to do with it, eh?\" \n\nBy this time, we had made it to her office. She ushered me in and followed, closing the door behind her.\n\nShe turned around and leaned back on her desk.\n\n\"Maybe what I'm wearing isn't for them.\"\n\n\"Well, I know it's not for me. It's for you. And you do look hot.\" I started to move toward her then stopped. I glanced over to where the camera was, only to see that the whole area was blocked off with cardboard boxes. I looked back at her and pointed to my ear.\n\nShe crossed to me and leaned onto me, one hand on my shoulder and the other running down my back. She raised her head up to my neck and nipped at my ear lightly. Then she whispered, \"The camera's blocked, but I can't be sure there isn't audio. But if you've got some time tonight, maybe I could drop by your place?\" She squeezed my ass lightly. \"It's been a long dry break, you know?\"\n\nI brushed her hair away, so I could lean into her ear. \n\n\"I'll make time.\"\n\nI was moving my arms around her, but she spun away, sliding aside out of my grasp.\n\nShe looked back at me with a big grin. \"So, Principal Lee, what did you need to talk about?\"\n\nRealizing that any hope of a little entertainment was dashed, I went over the club plans. Most of what we wanted was easy. She could put together an online portal for the Journalism Club, and they could start up immediately. The Video Game Club could set up in one of the classrooms that we were planning to make a dedicated computer lab. She would need a few days to spec out the computers, but thought using some spare pieces she had lying around she could get them a handful of decent rigs with the budget we had in mind. \n\nSoon enough we had out work out of the way, but we both had a few things to wrap up for the week. So, I headed back to the office. \n\nKimberly was closing up shop as I walked in. \n\n\"Oh, I thought you might have already gone home.\" She followed me into my office. \"I got in touch with just about everyone, and you should have a good turnout for your theater clean up. I also thought it might be good to arrange for a few pizzas to be delivered. Best thing to do when you want students to help out is to feed them.\"\n\n\"Brilliant. As always, you are three steps ahead.\"\n\nShe smiled at the compliment. \"Do you need anything else? I was wanting to get home in time to clean up... for... well...\"\n\nShe blushed, but didn't look away.\n\n\"What? Big plans tonight?\"\n\n\"Ms Lashgari and I are going to... ah... go out for dinner and come back to her place and... watch a movie together.\"\n\n\"That's great!\" Her shyness was adorable, especially considering what had gone on in this office just a few days ago. I could tell that she was already thinking of how the night would progress. I wondered if they would even finish the movie.\n\n\"I... I mean... I just wanted to make sure that it was okay with you. It's... I really loved when we were all together, but I don't know how all of this is supposed to work out.\"\n\n\"Don't you worry at all. We're all just having fun. I loved playing around with you two, too, and I really hope we get another chance, soon. But I don't ever want to stand in your way. You go get what you want.\"\n\n\"But,\" her blush deepened and her voice dropped. \"I kind of like it when you and Ms Lashgari tell me what to do. When she just took over and told me...\" Her gaze seemed to lose focus.\n\n\"I understand. When we're together, we can explore that. I think I would like that a whole lot. But for now, I'll tell you one thing that you have to do. Tonight, I want you surprise Jennifer, ok? Are you ready to obey me?\"\n\nHer eyes came back into focus and looked right at me. She was a bit surprised, but I could tell she was more than a little turned on.\n\nI wasn't sure if this would work, but I looked into her eyes to reinforce my orders, focusing on her desire to obey with my trick.\n\n\"You are going to go home and clean up, but when you get dressed for tonight, you aren't going to wear panties or a bra. And you are going to wear a shorter skirt. You've got a shorter skirt, don't you?\"\n\nShe nodded slowly.\n\n\"Good. No panties, no bra, short skirt, and a tight blouse. Also, one more thing.\"\n\nShe leaned forward, nearly trembling with urgency, thinking of what she was going to have to do.\n\n\"You are going to have to kiss her first. You are going to have to kiss her during dinner. On the lips.\"\n\nHer eyes widened, and she almost shook her head, but then held still.\n\n\"You can find a time to do it so no one sees you, but you have to kiss her first. Do you understand? If she kisses you before...\"\n\n\"No, sir.\" She broke me off with surprising force. \"I understand. I will... kiss her tonight before she kisses me. I... won't wear underwear.\"\n\nI confirmed with the trick that even though she was genuinely scared about the prospect, she was incredibly turned on. She was thinking how short her shortest skirt was. It was about knee-length. She never wore it because she thought it wasn't professional enough, but it would be perfect for this. Ms Lashgari wouldn't know what happened. She would be able to tell she wasn't wearing a bra. Anyone would be able to tell. Her nipples always got so hard. Just like they were right then. That thought sent her deeper into fantasy, and I slid out of her mind.\n\n\"Good girl. I can't wait to hear about your date. You'll have to tell me everything, you know. Now go on. Get out of here.\"\n\nI had a few more things to take care of, so I got home a bit later than I had hoped. And I was only home for what seemed like a few minutes when the doorbell rang. \n\nI must have looked pretty ragged when I opened the door because Veronica seemed a bit sheepish as she quickly slid into the foyer.\n\n\"Oh, man. You look beat. Are you sure this is okay? We could totally do this another time.\"\n\nI wrapped her up in my arms and kissed her with some heat.\n\n\"No way. You are exactly what I need right now. But, if you could give me a few minutes for a quick shower, that would perk me up and I could spend all my attention on you.\"\n\n\"Aw, you're sweet. Fine. Run off and leave your randy lover all by her lonesome while you lather yourself up.\" She sighed in exaggerated mock exasperation. \n\n\"I'll make it up to you, I promise! Feel free to poke around. The TV's hooked up through that laptop, or you can dig through my books or whatever.\"\n\nI jogged up the stairs aiming to take the quickest shower known to man. \n\nWhen I came back down, she was sitting on my bed, working on my laptop, typing away and looking serious. \n\nI came up behind her and wrapped my arms around her, nuzzling through her flowing hair into the nape of her neck.\n\nShe jumped a bit at the surprise, then settled back against me. \n\n\"Mmmmm... You do smell better now.\"\n\nI nipped at her shoulder. \"And you taste very good. I wonder if all of you tastes this good.\"\n\n\"I'm happy to let you find out, but first let me be boring and geeky and serious for a sec.\" She turned around. \"You know you should never let a geek play with your tech, right?\"\n\n\"Are you that dangerous?\"\n\n\"More than you know. But first, do you leave this laptop here in the house all the time?\"\n\n\"Yeah... Well, I take it with me sometimes if I'm going to be away from the office, off at the caf\u00e9 or something. I'm going to bring it to the theater tomorrow. Is there a problem?\"\n\n\"Maybe. You've got a keylogger and a couple of other questionable things going on in here. It's really not that uncommon, especially if you are downloading sketchy porn. And by the way, hiding your porn in nested folders named 'data' doesn't hide it well enough from people like me. You do have pretty good taste in porn though.\"\n\n\"Wait, wait, keyloggers? Is my data compromised?\"\n\n\"Yeah, probably, but it's not really a huge deal. You don't have that much sensitive stuff here except your bank stuff, and that's probably been stolen a dozen times already. And to be honest, you aren't rich enough for that to be worth much to anyone.\"\n\n\"What the hell?\"\n\n\"Don't worry. I've shut them down as well as I can right now, and there doesn't seem to be anything accessing the microphone or camera, which is what I was worried about. Let me see your phone.\"\n\nI reached over to the nightstand and picked up my phone to hand it over to her.\n\n\"Lesson one, put a password on this thing.\" She looked at me disapprovingly, then tapped through the phone for a while. \"This looks okay. I think we're in decent shape, but I'll want to do a deeper scan on all of your tech over then next couple of days.\"\n\n\"Do you think I'm being targeted by the guy who did the cameras?\"\n\n\"That's what I was thinking about. It's possible. Your security is so sloppy though, it could just be random crud. Hello, what's this?\" He eyes lit up, and she blew out a long breath. \"Oooo... So maybe your break wasn't as dry as mine, eh?\"",
        "She turned the screen to me and showed me my own photo stream. The last photo was a picture of me, sitting on a blanket, totally nude, with my tie wrapped around my eyes.\n\n\"I warned you not to hand over your phone to just anyone. Who was the lucky lady?\"\n\nShe swiped to the next photo, which was also of me, but now there was a nude Asian girl curled up beside me. Her long jet-black hair was splayed all over and she had the most erotic freshly fucked look on her face. Her wide goofy smile showed that she was still buzzing in orgasmic aftershock. You could even see the light sheen of sweat all over her tight body.\n\n\"Holy fuck, that is so hot. Who is that? Oh, god, who took the photo?\" She swiped onto the next photo, and I could tell tech support time was over. I closed the laptop and slid it off the bed, taking my place behind her again, so I could see over her shoulder as she flipped through the remaining photos.\n\nShe settled on one photo, this time I was only barely in the frame. The focus was on another girl's face, this one with short hair. Her hand was held out to take the photo selfie style, but her face was turned to the side, and her tongue stuck out an almost impossible length. The tip of her tongue was delicately nestled in the long-haired girl's labia right under her clit. She was focused on the pose rather than exciting her partner, but there was no hiding the obvious arousal of the close-up pussy. Her pubic hair was full, but you could still see the angry red stimulation that comes from good long fucking. And of course, there were our mingled juices covering everything, including the face of the short-haired girl.\n\nWhile Veronica was taking all this in, my hands were getting involved, roving up her sides and then down her thighs. She came over knowing exactly what she wanted, dressing in a sweatshirt and loose workout pants. This made it easy for me to slip my hands under her waistband and down her smooth thighs.\n\nShe leaned back into me. \"Tell me about it. Tell me about your little playthings. Naughty, naughty, you've been,\" her voice dropped into a husky growl, \"fucking our students...\" \n\nBy that point my hands were under her shirt, moving up to the bottom of her tits. No bra? I traced my fingers over her nipples.\n\n\"You should have waited to fuck our students... You should have waited to share them with me... Wait. Are they twins!?\"\n\n\"Keep looking at them. Slide your pants off and keep looking at the pictures. I'll tell you all about the twins.\"\n\n\"Oh, fuck me. Twins? That's so hot. They're gorgeous. I can't imagine having the two of them right there... Do you think you... Are you going to have them again? Could I watch?\"\n\n\"I hope so. But I want you to join us next time. I want to share them with you.\"\n\nI continued to caress her as I told the story briefly, watching her zoom in on the faces and boobs and pussies of the twins, as I told her about Cynthia and Deborah and how they found me in the theater and had their way with me. \n\nI didn't even get to the point of talking about the mysterious applause when she tossed my phone to the ground and spun around. Her hands shot out into my robe and she grabbed me tight around the shoulders. Her lips rose up to meet mine with passion.\n\nI slowly let her push me back down onto the bed as we kissed longer. Her hands were trapped under me, but I was able to start working on her clothes. I couldn't get her top off, but those workout pants were half down, and slid off easily. We both kicked them to the side so she could rub her legs over mine. Her skin was so smooth, gliding over my legs as she straddled on top of me. \n\nWithout any pretense of display, seemingly unaware at how sexy her casual movements were, she leaned back, still sitting on top of me, and whipped off her sweatshirt, throwing it over into the darkness.\n\nWith that she paused, slightly panting with her sudden desire.\n\n\"God, I don't know what you do to me.\" She looked down at me with a conflicted expression. \"I feel like those kids in my class. I'm just entirely need... entirely desire... There's no room in my mind for anything but you... kissing you... sucking... taking you inside of me... God, can you feel how hot I am?\"\n\nI could. She sat above me like a glorious avatar of sex. Her dark, flawless skin flowed up into those beautiful tits, peaked with even darker nipples. And her face, god, I couldn't believe I was with such a gorgeous woman, and and her expression, even with a fleeting glimpse of concern, it was just glowing with hunger. She was looking down at me like a predator, and I never wanted to be prey more.\n\nI felt that she was getting ready to pounce, but I moved first, flipping her over on to her back. \n\nShe moaned with frustration and anticipation.\n\n\"Are you going to fuck me now? Are you going to fuck me like your little twins?\"\n\nI dove down to her neck, licking and nibbling down to her shoulder blade.\n\n\"Not yet.\" Slowly down further, teasingly close to her aching sensitive nipples. \"I don't think you're... hmm... ready quite yet.\"\n\n\"Oh, fuck... You don't have to... I'm ready... Ohshit... don't bite so haarr... fuckfuck...\" \n\nShe pulled my head down onto her chest with unexpected strength as I started running my hands lower, toward her panties. I ran my fingers under the waistband as I started licking lower, but I didn't peel them off yet. It was so hard to keep my pace slow. I wanted to tease her. I wanted her to beg for my touch, but I could smell her desire, and I was nearly drooling. I couldn't wait to taste her. \n\nWhen I finally got my mouth down to her panties, she was twisting back and forth, trying to scoot up to bring me to me goal faster. I had already swatted her hands away when she tried to peel her panties off too soon, and now they were on the back of my head, pushing me down as much as she could.\n\n\"Damnyou... get down there. You're killing me.\"\n\nEven though she hadn't worn a bra, her panties were well-chosen, nice silky dark blue with lace trim. But right now, they were a total mess. She had been gushing and the panties were soaked through. \n\nI pulled my face off of her and lightly came back with a delicate lick, tracing the edges of the fabric, up and out on the inside of her thigh. Her moans had stopped, and I realized she was holding her breath.\n\nI lined myself up at the center, as the darkest part of the wet spot, right above her pussy, with only that silky layer between my tongue and her most sensitive skin.\n\nBarely touching my tongue to the fabric, I licked up, tasting the juices that saturated through. I was going to take this as slow as I could.\n\nBut then suddenly she gasped and pulled my face hard into her. \n\n\"OHFUCK... HOW... ohfuckfuck... get that... shit... eat me godammit!\"\n\nInstinct took over and I whipped her panties down and off one leg before diving back in. Did she just come? Her legs were writhing all over and her hands brought me back to my job.\n\nHer hair was trimmed in a nice tidy triangle directing me downward. Her pussy was open and engorged and glistening with her juices, and her labia were pasted to the sides with cream. I took care to lick up and down each side, sucking her lips into my mouth from every angle.\n\n\"Ohgod you've got me... fuck... suck me in... lick me...ughn... shitshitshiiiiii...\"\n\nAfter than she was pretty much incoherent, just moaning and crying out every so often when I got to an especially sensitive spot.\n\nI added in my fingers, pushing inside her and trying to hit that mystical spot, curling them forward. At the same time, I finally licked upward, making contact with her clit. I licked around in in a circle, trying to follow the rising and falling of her moans.\n\nShe clearly was rolling into a massive full-body orgasm, but she was also trying to hold off, trying to keep herself on the other side.\n\nI took it as a challenge and redoubled my efforts, pumping my fingers into her, lapping up everything that was sluicing out of her and then sucking her clit and lips into my mouth, as her hips shot up and her legs wrapped around me, beating against my back. Her hands grabbed my head tight and then started slipping off to the side.\n\nThe sounds coming out of her mouth stopped as her breath caught again, then an animal cry was ripped out of her as her entire body went rigid, then was wracked with spasms as the orgasm rolled through her body like a tidal wave.\n\nI was only just able to hold on, but I wanted to keep my mouth on her as long as I could, licking and sucking as she rolled to one side, then the other. \n\nHer hands started grasping for anything, my robe, the sheets, anything she could hold onto. \n\nHer cry devolved into raspy incomprehensibility, then slowly into words.\n\n\"Hnnnnnngh... ugh ugh ugh... ooooh... god... ghuh... ohfuck... don't... god... dontstop... keep... I can... keep hngh... fuuuck... yeahyeahyeah... fuck that's good... Get up here. Kiss me... Let me taste... Kiss...\"\n\nI moved up quickly and was getting ready to kiss her, but I couldn't help taking in her face, tortured with ecstasy, her mouth open wide as she panted exhaustion. She eyes were active, though glittering with lusty energy. \n\nI didn't want to break the momentum, so I peeked into her eyes quickly, just to see her mind slowly coming down from her orgasm.\n\nWhat the hell, I pushed lust hard into her mind, making sure she wasn't too sensitive, but that she was feeling and enjoying every touch and every lick, every ripple of her orgasms. I watched her desire build.\n\nWhen I brought my lips down to hers, I felt her trip over again.\n\nShe moaned into my mouth in shock. \"OHfuck I'm cumming again.\" Then she focused in on our kiss, ravenous as if she were trying to suck back everything I had licked up from her pussy.\n\nShe was still short of breath, so she broke away to the side, leaving me to kiss her neck.\n\nShe reached down to grab ahold of my cock, rock hard and dripping with precum. In between gasps and moans, she urged me on. \n\n\"I need this in me... god I'm going... fuck me... if you stick that in me I'm going to cum again...\"\n\nShe lined me up to her sopping pussy and turned back to look me in the eye as I started to push, ever so slowly, into her. \n\nHer eyebrows came together as I started to slide past her entrance, then her eyes opened wider as there was more, and more.\n\nI pulled back and she groaned at the exquisite absence.\n\n\"C'mon... come back... fill me up...Oooooohh.\"\n\nI pushed slightly into her again, still holding back, then as slow as my self-control would allow, I pulled back.\n\n\"Nono... no... you've got to fuck me... Get back...\"\n\nI looked into her eyes. She was still riding the edge of the earlier waves of her orgasms, worried that she was going to come down from that peak. I pushed lust and arousal into her, feeding her with the ecstasy that I was feeling as her pussy tightened around my cock. As I fed her, I could feel her pleasure rising even higher.\n\n\"Ohfuck, how?... more, more... fuck... Fuck ME! AANNGGHHHH!\"\n\nI had pushed back into her, without the slow gentleness of before. Her eye rolled back in her head but stayed open as she shouted out her new peak.\n\nI kept drilling into her as her twitched under me. Her cries spurred me on, my rhythm quickening as I felt her cum, spasmodically grabbing, tightening her already snug pussy around my dick. \n\nHer eyes found focus again and locked onto me as I kept fucking into her. She was wild and urgent, pushing back up as I drilled down. Her hands ran streaks on my shoulder and back.\n\nAs I started to feel my cum rising, she must had seen it in my expression. She smiled wide and started working harder.\n\n\"Ohfuck, god you're good... Hmm... you're going to cum, aren't you? You're gonna... hgnnm... oh yeah... yeah...\"\n\n\"Shit.. I'm almost there... damn you're so hot... so... so fucking tight... I'm gonna...\"\n\nI lost the power of speech and my legs went rigid as I felt myself lose control.\n\n\"OH FUCK... I'm cumming! Ughhnn...\" I pumped my cum into her in streams and saw her eyes sparkle again, glistening in the pleasure and power, the pride of being able to bring me to such a powerful orgasm. \n\nMy body was on automatic as I kept sliding in and out of her, our juices flowing all over the both of us.\n\nHer right hand reached down and grabbed my ass, pushing me deep and holding me there.\n\n\"Stay there... Stay inside me... God you feel so good. Just... don't move...\"\n\n\"Holy fuck... I've never cum like that before... You have a magical pussy, you know that?\"\n\nShe laughed. \"This from the man that had me cumming for like thirty minutes solid? I fucking nearly passed out. Nearly killed me with that fucking monster. Magic dick, more like...\"\n\n\"Magic sex... god... I'm so drained... Can you stay?\" I kissed her lightly on the nose.\n\n\"I couldn't move if I wanted to.\"\n\nShe wiggled her hips and I slipped out of her, causing a small flood to flow out of her.\n\nWe both giggled again. I struggled out of my robe, which had somehow stayed on the whole time. I pushed it down between us to towel up some of the mess.\n\nI ended up on my back, and she curled up next to me, resting her head on my shoulder.\n\nWe both drifted off into a happy slumber.\n\nSometime in the night, I woke up to find Veronica putting her clothes on next to the bed.\n\n\"Gotta go home. That way I won't be seen here in the morning.\"\n\n\"Mmmph,\" was about as eloquent as I was able to be.\"\n\n\"But we need to have a talk, you and I. You are more than just ordinary strange, Principal Ben Lee. Shared dreams and all sorts of women dropping panties at your feet, these are not normal, and more than a little bit concerning. You're hot, but you're not that hot.\" She smiled warmly, taking the edge off of her words. \n\nI was still far from awake, answering with another \"mmmm,\" and a weak swiping grab for her leg.\n\n\"And there's another thing we need to talk about. That's how to get those twins of yours into this bed.\"\n\nShe leaned over me and kissed me gently, almost sweetly.\n\n\"Maybe I'll drop by your theater party tomorrow.\"\n\nWith that, she turned away and left my bedroom with a delicious exaggerated sway of her hips.\n\nThat morning started early. I was still keeping to my running, and that morning, like most mornings, I ran into Jennifer on the trail in the forest. And like most mornings, she took great pleasure in passing me by and lapping me on the looped part of the trail. I was getting in much better shape, but there was no way I was going to match her. So, as usual I tried to stay close behind her as long as I could just to enjoy the view. I made to attempt to disguise my perving, and she always made sure to give me a good show in her skin-tight workout clothes, slowing down to let me worship that firm athletic ass. That day, I do remember her giving me an extra wink as she shot off onto the longer trail, but I didn't know what that was about yet.\n\nAfter a quick shower, I made my way to the campus theater. The main entrance had been unblocked, so there was now an entry door on the other side of the building from the classroom entrance. It led into a small lobby that had the box office. I walked through that main door, only to find that Kimberly was already there setting up for the day's work.\n\n\"What happened to staying home and keeping well rested?\"\n\nShe turned around from the table where she was arranging clipboards and watched me come in.\n\nShe looked different. Her clothes were wrinkled and she wasn't wearing makeup. Her hair, normally a bravely tamed mass of bright red curls while at work, was now only partially tamed, with strands peeking out all over. Then I noticed her skirt.\n\nIt fell just above her knees. It was a nice light blue color, a good summer weight skirt, but what brought me up short was that I had seen it before. It was the skirt that Kimberly was thinking of when I told her to wear something short to her date with Jennifer. She hadn't changed clothes.\n\n\"Good morning Principal Lee.\" Her voice was raspy and thick with her southern drawl. \"I thought I would come in and set things up for you.\"\n\nI walked right up to her and stood just a little too close, making sure to not touch her.\n\n\"Kimberly, are you ok?\"\n\n\"Yes sir, I...\"\n\n\"Kimberly, are you wearing the same clothes you wore last night?\"\n\n\"Sir!\" Her eyes widened and I could see the beginnings of dark circles underneath them.\n\n\"Kimberly, did you even sleep at all last night?\"\n\n\"Sir...\" Her eyes darted around as she decided if she should try to lie.\n\n\"So. Kimberly. Kimmytoy.\" Her knees almost buckled when she heard the pet name Jennifer had given her. \"Have you spent the entire night with Ms Lashgari?\"\n\n\"Yes, sir.\"\n\n\"Watching movies?\"\n\n\"Well, we did watch some videos...\"\n\n\"So, you were watching porn with Ms Lashgari all night?\" She blushed hard at the truth of this. \"What else did you do?\"\n\n\"Sir...\"\n\nThings were becoming clear, but I knew my job was to draw this out and tease her.\n\n\"Is this why you are here in yesterday's clothes? They aren't clean. I can see some stains, too. I wonder what made that stain there. And you are still so hot. No bra yesterday, so no bra today? I can see your nipples. Are they as hard as they look? I guess no panties either. Are you wearing underwear, Ms Adams?\"\n\n\"No, sir.\"\n\nI wonder how turned on you are right now. Are you wet already? Jennifer must have worked you over all night, and here you are with those smoky eyes and perky nipples. You're still so turned on, aren't you? Oh, Kimberly, the students will be arriving soon. Do you want them to see you like this?\"\n\n\"Ms Lashgari said...\"\n\n\"I'm sorry, I didn't hear that.\"\n\n\"Ms Lashgari told me I had a job to do. I had to come here...\"\n\nI wanted to make her work for this. \"And help with the cleanup?\"\n\n\"No.\"\n\n\"Ah. I see. What are you supposed to help with?\"\n\n\"She's going to be waiting for me back at her place.\"\n\nI took a step closer. Her breasts pressed softly into my chest as I backed her up into the table. \n\n\"Did Ms Lashgari say what you were supposed to do?\"\n\n\"Yes, sir. I have to bring her something.\"\n\nI put my hands on her hips and leaned into her, whispering in her ear. \"What does she want you to bring her?\"\n\n\"Your...\" Her voice was trembling, with embarrassment and lust.\n\n\"My what, Kimmytoy?\" I licked up her neck to her ear.\n\n\"Your cum, sir. I need your cum. You have to cum in me, and I have to get back to her, so she can lick it out of my... my... cunt. I have to call it my cunt, Ms Lashgari says.\" \n\nAll this rushed out of her in one breath, like she couldn't hold it all in anymore.\n\nI looked at her to make sure the game hadn't gone too far, but she was turned on like I had never seen her before, and she loved everything about this. She was clearly petrified at having to say all that out loud, but even more petrified that I might turn her down. I actually thought about that for a moment. What sort of punishment would Jennifer enact on poor Kimberly?\n\nShe was looking at me, face flushed nearly the color of her hair, eyes begging for a way to fulfil her task.\n\n\"Well, I'm not really ready at all, Kimberly.\" She could feel the lie of that pressing against her hip. \"I think you'll have to get down on your knees and get working on me. \n\n\"Here?!\" \n\nWe were in the middle of that box office lobby. The students were due to come through the main door any minute.\n\n\"It would be best to hurry, Kimmytoy.\"\n\nAlmost as if that name had physical force, she dropped to her knees at the sound of it. She fumbled with my belt and fly with frantic fingers, and soon, despite her nerves, had freed my cock into the cool air. It was already perfectly hard and ready for action, but she was a good girl, and she knew what her job was.\n\nShe paused for a moment, struck again at the size and perhaps wondering how much she would be able to take. Then right as she was getting ready to suck in the tip, I tapped her on the top of the head. ",
        "\"Good girl. You passed the test. Now let's find somewhere a bit more out-of-the-way, okay?\"\n\nShe smiled at the praise, but was clearly relieved at the possibility of getting out of the middle of the lobby. \n\nI held my pants up with one hand and lifted Kimmy off her knees with the other. I guided her into the theater. Right as we passed into the outer house, I heard the main door opening behind us and students coming in. A lot of students. \n\nOk, change of plans. Any chance at a leisurely fuck was over. We need to go for a quickie.\n\n\"Kimberly. Stall them. Get them to stay in the lobby for a bit, and then meet me in the main dressing doom. Double quick, Kimmytoy.\" I gave her a light swat on the butt.\n\n\"Yes, sir.\"\n\nShe spun around and headed back to the lobby, and I made my way to the dressing room.\n\nAs efficient as always, it was only a few moments before Kimberly joined me in the dressing room. If anything, she looked even more ragged. Her hair was completely undone in a wild halo around her head, and her skirt was askew, but the most obvious thing was in her twinkling eyes. \n\nI slipped into her mind like it was prepared and opened for me. Her entire self was glowing with lust. It was like she was in heat. The controls that she relied on to preserve her professional mien were still there, but they were struggling in vain to hold her together. But her lust regularly overcame those controls: a darted glance to my crotch, a hopefully discrete brush of her hands across her chest, a moment of fantasy, a memory of Jennifer between her legs that took over her conscious thought. And each time her lust took over, she thrilled at the success and the failure, doubling down on her attempts to control her lust at the same time she embraced the shuddering thrill of her surrender and arousal.\n\nBut she was nearing the end of her control. She was breathless, almost gasping for air as she entered the room. Her breathing was so deep that her breasts rose and fell, her very visible hard nipples describing a hypnotic line in the air. Her tongue repeatedly slid over her lips, which were already shiny with saliva. With a supreme effort of will, she stopped in the middle of the room and looked at me, obviously waiting for instructions. \n\n\"Lift your skirt.\"\n\nShe obeyed, pulling the hem of her skirt slowly up over her thighs, gradually exposing more and more alabaster flesh.\n\n\"Higher. Tuck it in the waistband.\"\n\nThe 'O' of her mouth widened into a grimace, something between shame and joy, but she did as told. As the skirt slipped over her hips, I could see that indeed, she was not wearing underwear. I could also see that her inner thighs were already coated with her excitement. Even her bush, wild and red like the hair on her head, was matted wet. \n\n\"You are already so wet. Did you not shower this morning?\"\n\nShe didn't answer, still panting.\n\n\"Kimberly did you wash yourself this morning?\"\n\nIn a tiny voice: \"No, sir.\"\n\n\"Why didn't you clean yourself, Kimberly?\"\n\n\"J- Ms Lashgari said I couldn't. She was going to go out on a run, but I had to come here 'as I am.' She wanted you to see me like this.\"\n\n\"Well, I would be unkind to Jennifer if I didn't at least take a quick taste of the treat she's giving me, even if we are on a tight schedule. Hands above your head, Kimberly.\"\n\nShe raised her hands over her head, elbows bent so she could squeeze her head in an attempt to keep control.\n\nI dropped down to get a closeup view of her sloppy pussy. The aroma was strong and rich, an arousing bouquet of lust. \n\n\"Is this all you, Kimmytoy, or is some of this her, too? You smell so good. I remember how much fun we had last time. Pity we won't have time to linger today.\"\n\nI placed my tongue at the very bottom of her slit and she twitched nearly hard enough to lose her balance. I pulled back immediately.\n\n\"If you can't control yourself, I'll have to send you back with an empty pussy.\"\n\n\"Please, sir.\" Her voice trembled. \"I'll do better.\"\n\n\"See that you do.\"\n\nI started my lick again. She reacted almost as strongly as before, but held her ground. Slowly I licked up through, over and around her labia, nibbling lightly for a moment, then up to right below her clit, poking out hard and proud.\n\n\"Please, sir,\" she begged.\n\nI moved in hard and fast, sucking her clit between my lips and licking circles around it and pulling on it with force.\n\n\"AAAHhhhohfuck!\"\n\nIn the middle of her cry I pulled back again, causing her to whimper in frustration. I stood up and took her by the shoulders, spinning her around and pushing her toward the wall opposite the door.\n\nShe moved her hands in front of her head and stumbled to the wall, which was covered in that heavy curtain fabric. \n\n\"Stay there. Lean into the wall and stick your ass out. I'm afraid with the time we have, I'm just going to have to fuck you hard and fast. Are you ready for me?\"\n\nShe stepped back, still leaning forward.\n\n\"Are you ready, Kimmytoy?\"\n\n\"Ohgodyes. Fuck me, sir!\"\n\nI moved behind her and placed my hands delicately on her hips. I bent at the knees slightly to line myself up. Without my hands, I maneuvered my cock toward the heat that seemed to be coming off her in waves. Her lubrication coated my cock as I slid forward under her pussy.\n\nShe was already making little moaning grunts as she rocked her hips back and forth, trying to get more contact.\n\nDespite what I said, I wanted to make sure this wasn't going to hurt, so I angled myself up and gently popped the head of my cock into her.\n\nShe responded audibly and pushed back with force, causing me to slide in more.\n\n\"Unnngh... damn Kimberly, you are so tight.\"\n\nResponding to her begging whimpers, I pushed in further, nearly sheathing my cock all the way in her. \n\n\"Ohgod... that's it... gimme one sec... ugh... you're so good right there... Ok... I'm ok... now... Please fuck me, sir.\"\n\nRight as I pulled out and made my first full thrust into her, I saw something out of the corner of my eye. In the mirror, I could see a face reflected from the doorway. It was Deborah. Her eyes were opened wide and her smile was ear to ear.\n\nThe shock wore off and she saw me looking at her. Without any hesitation, she smiled even wider and brought her finger to her lips. \n\nI could make out her lips as she mouthed the words, \"Fuck her hard, Principal Lee.\"\n\nSo I did. \n\nI slammed back into her and she cried out in ecstasy. I reached up to put part of the curtain into her mouth to try and muffle her exclamations. Now that I knew the door was open, the sounds would carry.\n\nShe was already so close to cumming before we even started that it was no surprise when she started shaking in orgasm after only a few thrusts. I was going for speed, trying to get to my orgasm as fast as possible, pounding as hard and as fast as I thought she could take it. And she was taking it all, and loving every minute.\n\n\"God... Kimberly... fuck... ugh... ugh... you are so slick... You are pouring out. God... so tight...\"\n\nAfter the first waves of her orgasm crested, she brought her hips back under control and rocked back into me in rhythm. \n\nThat was exactly what I needed. I could feel my legs tighten up and I knew I wasn't going to last. I didn't need to hold off, didn't need to worry about her at all. I focused on my own lust and the image of my cock pumping cum deep into her pussy. I could feel the lust emanating from me. Kimberly was taking most of it, but I got the feeling that it was also heading toward the twins at the door. Wait, both of them?\n\nI glanced back to the door and now saw both Xu girls looking in, watching me drill Kimberly as hard as I could. Their faces were masks of desire, and Deborah was hugging Cynthia tight.\n\n\"Ahhh... I'm... I'm right there... fuck... Kimberly I'm close... fuckfuckfuckfuck...\"\n\nRight as I started shooting off, she leaned back off the wall, grabbing my hands from her hips and pulling them onto her tits.\n\nShe screamed through gritted teeth as I squeezed tight, pinching one nipple through my fingers.\n\nI kept pumping into her, shot after shot, then nothing but the sensation and instinct driving me into her as her cries deteriorated into moans and then back to breathless panting.\n\nFinally, her legs gave out and she collapsed to the ground. I almost followed her down, but caught myself at the last minute. \n\nI shot a glance back to the door to find it closed again. Then I remembered my role in this little game. \n\n\"Kimberly. Did you get enough cum?\"\n\n\"ahhh... ahh... I... fuck... I came again... still... cumming?\"\n\n\"Kimberly. Remember what Ms Lashgari ordered you to do.\"\n\n\"Ah... yes... yes, sir... I... ah... have your cum... inside...my... my cunt...\" She swallowed deeply and tried to gather herself. She pulled a scarf out of a pocket and put it between her legs. She looked up at me and smiled with a girlish glee. \"I've got to save as much as I can!\"\n\n\"Good girl. Now get yourself together and get out of here. The students probably heard you, so you'll need to get out of here before they figure out what has been going on.\"\n\nThat thought hadn't crossed her mind, and she took a moment to consider it.\n\nI was going to leave, but I thought there was one more thing I could do that would give her a story to tell Jennifer. I walked over to her as she sat on the floor next to the wall. My pants were still undone, so I moved over and put my dripping deflated cock in front of her face.\n\n\"Kimmytoy, you wouldn't want...\"\n\nI couldn't even get out my stupid line before she dove at me and inhaled my cock. \n\n\"Ohgod damn...\" I was so sensitive, it was hard to endure her enthusiasm. \n\nWe had to get moving though or else it wouldn't just be the Xu sisters poking their heads in here. So, I pulled back out of her mouth, and with a pop I was free.\n\nShe looked up at me with a huge smile. She knew the game we were all playing and was just luxuriating in her role.\n\n\"Oh, yeah, Principal Lee? I kissed her first. I kissed her in the restaurant. I think maybe people saw me. She looked so hot, but she wasn't ready for that. I don't think I've ever been so turned on.\"\n\nI smiled back, gave her a wink, zipped up, and left the dressing room. \n\nBack in the lobby, there was a good number of students from all the clubs awaiting orders. They were looking over the clipboards that Kimberly had laid out. Each clipboard was marked with a club and the tasks they needed to complete to get the theater up and running. Even while getting fucked all night by Jennifer and planning to take my load this morning, she found time to organize this better than I ever could. Thank god for Kimberly Adams. \n\nI started out by trying to figure out who was in what club group and see if anyone might need an extra hand. It looked like we had a good number, so all I really needed to do was point them toward the cleaning supplies and set them loose.\n\nOne surprise was that even though they had a clipboard assigned to them and their club members were there, there was no sign of the Xu sisters. I sent the members off to get started without their leaders.\n\nAs we were all getting started, I saw a quick flash of movement coming from the dressing room. Kimberly was waddling out awkwardly toward the entrance. She passed by a group from the Journalism Club and I strained to hear her make her muttered excuses.\n\n\"Sorry... not feeling well...\"\n\nShe tried to move quickly away with the fewest number of people seeing her, but as she got to the doorway that led to the lobby, someone from the Journalism Club called out.\n\n\"Get better Ms Adams!\"\n\nAnd the whole room turned to look at her. \n\nAnd she was in quite a state. She had pulled her skirt down a bit lower, but that meant her blouse wasn't completely tucked in, and it looked like she was missing a button. That must have come off as I squeezed her tits in that last orgasmic spasm.\n\nLuckily for her, the way her hair was splayed out and the haggard look on her face was powerful, if misleading, evidence of her being perhaps a bit under the weather. Or simply recovering from a hard and fast fucking.\n\nShe smiled in total embarrassment and waved quickly. \n\n\"Thanks! I'll try to stay in bed.\"\n\nI tied to change my staccato laugh into a cough.\n\nAs everyone called out good wishes, she turned and headed out.\n\n\"Ok, everyone let's get to work! If we work smart, we can get this all done today, and you can start using the space next week.\"\n\nI was happily surprised by the modest cheer that echoed back to me."
    ],
    "authorname": "shudai",
    "tags": [
        "mf",
        "voyeurism",
        "school",
        "bed",
        "orders",
        "public",
        "clubs",
        "teacher",
        "librarian",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-15"
}