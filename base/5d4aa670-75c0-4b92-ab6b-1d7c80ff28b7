{
    "title": "Just a Friend",
    "pages": [
        "As he slammed the passenger seat door of the taxi shut, Mark hunched his shoulders as the wind howled and the rain swirled around him. With luck, there was only a few metres of ground to cover before his group of friends reached the entrance to the bar.\n\nIt was a nod to their determination to have a few drinks after work on a Friday evening that they even ventured out into such horrible weather. Mark hadn't sprinted since he was a high school student, but he made his way through the puddles at an impressive pace. He caught up with his group just as they made their way through the entrance, each of them relieved to be free of the elements.\n\nThe group was six-strong, with Mark and his girlfriend, Jess, joined by four of her closest friends she'd kept since childhood.\n\nHe'd long since grown comfortable in their company and each of the girls had forged lasting friendships with him. So much so that their collective social life had settled into a familiar groove. Each Friday night, they'd frequent their favourite pub in the city and stay there until last orders.\n\nBut this evening had already forced a change to their well-established routine. The group's favourite bar was undergoing renovations so they had to decide on an alternative. After trying a few other venues, the capacity had already been reached in each of them. Each time, the group returned to their seven-seater taxi and drove off to continue their search. It was after the third different pub couldn't accommodate them that the taxi driver suggested a small rock bar on the outskirts of the City Centre. The group didn't take much convincing as their search had become frustrating and instructed the driver to take them there.\n\nJess was the first to make her way into the bar and took in the sights around her. There was a real bustling atmosphere with the queue for the bar at least three rows deep. All of the tables and booths were occupied, but there was a significant amount of space for the group to stand at the furthest end of the bar. Jess realised that the area afforded them close proximity to the bar, so seized the opportunity to lead her troops across to it. Their usual haunt was much better lit, this bar was dark and more than a little grubby. The walls were adorned with old posters promoting live music and events from over a year ago, with the paint on the wall having started to flake.\n\nThe majority of the customers were sporting jeans and t-shirts, to Jess they seemed to be mainly students. Plenty were tattooed, pierced and quite boisterous. Turning her head to scan the room, there was plenty of raucous laughter from the different tables and booths which dominated the sound of guitar and drums that was playing through the speakers. But it was fine, she figured, they'd be back at their regular venue as soon as it reopened in a few weeks.\n\nMark used both hands to brush the heaviest raindrops from the chest and sleeves of his coat, reaching to the strap of his shoulder bag and lifting it above his head and sitting it on the floor pressed against the wall. He stood 6'1\" tall and was in reasonably good shape. His short brown hair sported a longer fringe which he swept back, offering a clear view of his piercing blue eyes. He rarely worked out as he preferred to focus his energies on his office job, but he remained slim. It was Mark's face that garnered the most attention, with a cheeky smile that women had always complimented. Indeed, it was that smile coupled with a cheesy pick-up line that secured his first date with Jess four years prior. Their relationship had reached the point where his friends and family were starting to anticipate news of a potential engagement.\n\nTheir discomfort didn't last for long as they slipped their coats off and gathered their bags in a little pile on the floor with Mark's. Jess and their friend, Anella, snuck into a small gap in the queue for the bar and managed to get served their first round of drinks. Before long, they had settled and started catching up with events of the last week since they last met together.\n\nAn hour had passed before Mark noticed the time on his phone when queuing at the bar, it was just after 7:00 pm. He quite liked the change in venue even if it was a bit louder than he was accustomed to. It was then that he noticed that there was a theme to how the bar staff were dressed. There were four of them tending the bar, two guys and two girls. The guys were wearing a black t-shirt with the bar's name and logo on the chest, while the girls wore matching black hoodies with a far smaller logo on the upper left sleeve. Both of the guys were busy serving customers but he couldn't get a good look at the girls as they had their backs to the bar as they restocked trays of glasses.\n\nJess had kept her eye on Mark at the bar as she grew impatient waiting on her next drink. From the corner of her eye, she was relieved to spot Mark getting served and resumed her conversation with her friends. It was at that point that a stranger went to lift his bag from close to the group's pile, before Jess spoke up.\n\n\"Oh, be careful, that's my boyfriend's bag. Sorry...\", she chirped. Trying to thread the needle between being helpful and overbearing.\n\nImmediately, her friends Anella and Lucy started to giggle and roll their eyes. Lucy even dug an elbow into Pauline's side and repeated what Jess said in a mocking manner. After a few seconds, the stranger had retrieved his own bag from the floor and wandered off, allowing Anella to speak freely.\n\n\"Jesus, Jess. Can you even go one night without telling random people about your boyfriend?\" Anella's tone was playful and it wasn't the first time that she'd poked fun at Jess' seeming overenthusiasm to bring up her relationship with Mark.\n\nAs her friends gleefully piled-in on top of Anella's joke, Jess felt a familiar tinge of embarrassment in her chest as she realised that she'd been caught out once more. \"Come on, I just didn't want him walking away with the wrong bag, I can hardly see in the dark of this place.\" Jess took a sip of her vodka and lemonade and sat her drink on a thin wooden shelf that ran along the length of the wall.\n\nPauline smiled, sensing the opportunity to stir the pot. \"Yeah, yeah. We know. You just love telling any random stranger all about your perfect man, don't you?\" Before glancing towards Anella and Emily and hoping that they'd jump in too.\n\nJess allowed a smile to form across her face before setting the group straight. \"Shut up, Pauline. I don't do it anywhere near as often as you guys say.\"\n\nWhile the group were all close, it was Anella who Jess would consider to be her best friend. She was the one she'd known the longest and they had so much in common. Both short, slim, petite 25-year-old blondes. They worked at the same accounting firm and studied at university together having went to the same high school. Jess and Anella were good girls, high achievers who rarely ever got into trouble and retained a laser focus on their careers. Each was pretty, but they weren't ringers for one another. Anella was the more confident of the two and, prior to Jess meeting Mark, enjoyed the more active love life. But if there was a habit of Jess' that got on Anella's nerves, it was her eagerness to drop hints as to how perfect her life was.\n\nBut Jess was everything to Mark. When he met her, he was blown away by the way she smiled with her shoulder length blonde hair and stunning green eyes. The first time they had sex, Mark couldn't get enough of the way she rode him with her lithe, supple body. She didn't have a thick, heart-shaped ass, but it was small and tight. Any frustration that he harboured concerning her small breasts were always appeased by how attractive her nipples were. Hard pink buds that never required much touch before they'd stand to attention. Her thighs were perhaps his favourite of Jess' assets. For a slim girl, they were thick and juicy. He loved nothing more than spending an evening softly kissing and biting them as Jess would plead with him to stop teasing her.\n\nAnella stirred her vodka and coke with her short straw, took a small sip from the glass and retorted. \"It was only last weekend that you told the guy who served us our food that you were in a relationship, when he only asked if you were waiting on someone!\"\n\nThat revelation drew howls of laughter from the four girls stood huddled around Jess as Mark made his way back to the group. He made two short journeys from the bar and handed each of the girls their drinks in turn, before returning to his spot by Jess' side.\n\n\"What did I miss, you guys are having a ball over here.\" Mark enquired, curiously. The fact that the others were laughing while Jess sported an awkward grin tipped him off that she was being teased.\n\nLucy spoke above the laughter. \"Just reminding Jess that she doesn't need to tell every Tom, Dick & Harry that she's practically wifed-up to her amaaaaazing boyfriend.\"\n\nJess playfully stuck her right foot out and softly kicked Lucy's foot. \"You know that's not true; I was just trying to help the guy find his bag when he couldn't see his hand in front of his face.\"\n\nIt was at this point that Emily leaned into Anella's right ear and started whispering, at length, eventually soliciting an excited gasp from her lips. Anella's eyes widened and couldn't swallow the sip of her drink fast enough before speaking up.\n\n\"That's such a great idea. Emily was just saying that we should celebrate our first Friday night away from our usual bar with a new resolution...a chance to get rid of some of our worst habits.\" Anella took a further sip and scanned the faces of the rest of the group.\n\nMeanwhile, the two girls working the bar had finished stacking the glasses and returned to serving customers. By chance, Jess was stood amongst her group facing the bar and instantly noticed the brunette who came over to serve the customers queued only a few feet away.\n\nThe girl looked so out of place in such a grimy little bar like this. Jess reckoned that she must only have been about 5'2\", with gorgeous straight black hair that ran all the way down to the small of her back. Every feature on her face was flawless. Stunning brown eyes accentuated by her dark, smoky eyeshadow. Enviable lips with a perfect jawline and immaculate eyebrows. She looked like she was in her early twenties, maybe she was a student, working here part-time at the weekends?\n\nWhat made Jess take a sharp intake of breath was her body. The girl's black hoodie was hardly zipped, allowing a healthy view of her unbelievable cleavage. As she bent forward slightly, the black lace of her bra was clearly visible to the customers in the queue at the bar. It was a bold, confident display that there was nothing under that hoodie but her underwear. Her breasts hardly jiggled at all as she moved, which for their apparent size, prompted Jess to wonder if her incredible bust was natural. As Anella was talking, Jess had only zoned out for a few seconds taking this girl in as she moved to serve another customer.\n\nAnella continued. \"In fact, Emily and I have a proposal to make. We don't think you're capable of lasting the rest of the night without telling another stranger about your relationship.\"\n\nJess shook the cobwebs and focused back on Anella's jibes. \"Don't exaggerate, Anella. Of course, I could last the next few hours without putting my foot in my mouth again. Please, that's hardly a challenge.\" She smiled with the sense that she'd shot down their angle and sucked the momentum from it.\n\nMark's eyes were drawn to Emily who had a cheekier smile on her face than usual as she prepared to assert herself.\n\nEmily sat her drink on the shelf to the side and took a half step forward. \"Well let's forget about a new resolution, let's make this a challenge that you don't think is so easy.\" Turning to Anella with a glint in her eye, Emily turned back to face Jess. \"How about a friendly bet?\"\n\nJess shook her head almost as soon as the words had left her friend's mouth, but Pauline pressed a finger to her own lips and gestured to Jess to remain silent.\n\n\"Yes! A bet, that's exactly what you need. No better way to kick that silly habit, Jess, if you know there's a forfeit waiting for you if you fuck it up.\" Pauline was overjoyed at the idea as the girls took turns reinforcing the idea amongst themselves.\n\nAnella took the opportunity to seal the deal. \"We need to come up with the perfect way to frame this. Seeing as you're only too happy to volunteer the information to random strangers...how about we turn the issue on its head?\n\nThis wasn't the first time Mark had heard the girls give Jess some grief about how she brought him up in conversation. He didn't mind, if anything he thought it was endearing that his girlfriend was still so demonstrably enthused about him after four years of being together. On that basis, he was always content to let the girls have their fun. Especially as Jess was normally so accurate when slapping the criticism down.\n\nEmily whispered into Anella's ear once again, laughing mischievously as she did. Anella clutched Emily's arm with glee. \"That's it, oh my God, Emily. That's it, you've nailed it.\n\nThe sound of Anella's voice carried the short distance to the brunette behind the bar, who was taking a moment to dry a glass with a small dish cloth. She'd only worked as a barmaid for a few months, but she'd perfected the ability to eavesdrop without making it obvious.\n\nAfter a deliberate glance around the rest of the group, seeking their fullest attention, Anella blurted out the details. \"I bet...for the rest of the night...that every time you introduce Mark to a stranger...\" Anella let the moment stretch out as if to add strength to the proposal. \"You have to introduce him as just a friend...\"\n\nMark let out a groan as if to imply that the terms of the bet were a dud. \"Are you serious, Anella? Emily? That's the best you've got? The way you were acting it was as if you'd come up with something much, much better than that.\"\n\nSomething about the proposal caught Jess off guard and she felt her lips starting to get dry. She thought about what Anella had said and told herself two things. That the bet was going to be easy and harmless...and that it was fucking stupid. But something about it was eating at her and she felt it in her chest. After listening to Mark's dismissal, she decided to bring this to a head.\n\n\"Well, I'm not gonna lie, that sounds like a piece of cake. Which is a nice way of saying that it'll be easy as fuck.\" Jess took a longer sip this time. \"But I'm curious, what's in it for me? What do I get when I make this look simple?\"\n\nPauline almost fell over herself to be heard. Focusing on her own idea for Jess' forfeit first. \"You told us about that bonus you received last month, if you can't get through the rest of the night without a slip up...you should pay for all our drinks next Friday night.\"\n\nJess knew that the forfeit meant that she'd be out of pocket to the tune of at least \u00a3200, and likely to be more. There was no way she had any interest in risking her bonus, but the terms of the bet were so innocuous. So easy. Where was the room for her to make a mistake?\n\nSeeing the quizzical look on Jess' face, Pauline continued. \"And if you think it's so easy, and you introduce Mark as Anella stipulated...as just a friend...then the four of us will pay for both you and Mark's drinks for the next month.\"\n\nLucy, Anella and Emily looked at one another and nodded agreeably. The bet did seem a little on the light side, if anything they could have some fun at Jess' expense tonight and buy them their drinks in the future to make up for it.\n\nOnce Jess had taken a moment to size up the terms, she had an addition of her own to make. \"Ok...but if I win, neither of you can bring this up ever again. No more teasing about this, and you know I don't do it as often as you've suggested.\"\n\nAnella stuck her tongue out and sighed, suggesting that she knew that little adjustment was coming. Smiling once more, she made sure everyone in the group was paying attention before slowly offering her hand to Jess. \"That seems fine...then you're prepared to shake on it?\"\n\nIt wasn't often that Jess placed herself into socially awkward situations, at least on purpose. But the beating in her chest had gotten a little stronger and peaked when Anella offered her hand. It was going to be so straightforward, wasn't it? She looked Anella in the eye and bit the bullet, meeting her hand with her own and shaking it, with Mark and the three girls bearing witness.\n\n\"I am, you've got yourself a bet.\"\n\nPauline and Lucy offered an excited little clap and started whispering to each other, before hurriedly turning to queue for more drinks at the bar. Jess felt some pride after she shook Anella's hand and told herself that she and Mark would be drinking for free for the next month.\n\nMark allowed himself a chuckle and addressed Emily and Anella. \"You two are so childish, I swear to God.\" He shifted his hip and offered a supporting nudge to Jess, before turning to her. \"These morons will be buying our drinks and they're clapping like seals.\"\n\nAs the music played and the different groups all tried to be heard over the sound, the atmosphere in the bar remained good as the night went by. The conversation started to shift as Emily filled the rest of the group in on the latest guy she'd been seeing and how tired she was of him after only a few weeks. Jess was telling Anella about a new flat that she wanted her and Mark to move into and all she was waiting on was a promotion that she felt she was overdue.\n\nOnly a half-hour had passed since Jess shook Anella's hand when Jess and Mark joined Pauline at the jukebox. Indie rock wasn't ideal for either of them and the playlists were almost exclusively guitar bands. Mark was critiquing the lack of dance tracks when Pauline took a step back and inadvertently bumped into a girl standing behind her. Pauline was quick to apologise and the girl laughed it off. After seeing her smile, Pauline felt relieved but then remembered the bet and decided to test the waters.\n\n\"I'm so sorry, honestly. I'm amazed I don't fall over my own feet more often. I'm Pauline and this is one of my best friends, Jess.\" Pauline turned to face Jess and couldn't conceal her grin. The girl nodded to them both as an acknowledgement, but turned to face Mark and sensed the awkwardness of why she didn't introduce him too.\n\n\"Yeah, I'm Michelle, it's nice to meet you.\" Now staring at Mark. \"And...you are?\"\n\nThe sharp grab at Jess' wrist was from Pauline, who was doing her best to remind her of the bet while not bursting into laughter. Jess looked at the girl, the stranger, and took a sharp intake of breath.\n\n\"...this is Mark...and we're...just friends...\"\n\nMichelle raised an eyebrow at the mention of being just friends and sensed it was a little off. A little unnecessary. It was extra. She felt herself offering an exaggerated nod.\n\n\"Cool, well...I didn't mean anything by it. I'm going to get another drink; it was nice to meet you guys.\" Taking the opportunity to slip away, Pauline waited until Michelle had left before allowing an exaggerated gasp.\n\n\"I can't believe you actually did it! See...how hard was that? You were right...this is going to be easy.\"\n\nIt didn't take long for the pang of apprehension to return to Jess' chest. She didn't find that easy at all. Michelle was a few years younger, seemingly, but she was cute. Attractive. Did she really just tell a cute girl that Mark was just her friend? She realised just how fucking stupid and pointless this bet was going to be.\n\nAfter returning to the group, Pauline filled the other girls in and they were whipped into a relative frenzy. Lucy, Anella and Emily each took turns asking Pauline for the details on just how awkward it was for Jess, while Mark and Jess mocked them.",
        "The mutual taunting was interrupted when one of the guys working the bar came to their area to collect their empty glasses. Anella was speaking to him as he did so, and after they exchanged a sentence or two, Anella seized the opportunity to get involved.\n\n\"Thanks very much for clearing those away, I'm Anella. And these are my friends Emily, Pauline, Lucy...and Jess...\" Leaving Jess to last, Anella then shifted her gaze to Mark and left him out. Again, the barman was prompted to look in Mark's direction and picked up on the lack of introduction.\n\n\"Yeah, I've never seen you girls in here before. Nice to meet you, I'm Chris.\" While looking at Mark, he felt compelled to ask. \"And you, mate? Are you with them?\"\n\nEach of the girls immediately turned to face Jess, eyes bulging, desperate to see if she'll keep her word. Jess took a nervous sip of her drink and sized the guy up. Chris was good looking, rough around the edges but undeniably good looking. Once again, she tried to quash her internal objections and pushed through with her obligation.\n\nShe spoke on Mark's behalf. \"This is Mark, and...we're just friends.\" She felt a little catch in her throat as she attempted to say the word friends which was audible. So, she had the embarrassment of the girls knowing that this was getting to her to contend with too.\n\nChris, like Michelle earlier, wasn't expecting the clarification from Jess and sensed the awkwardness. But Jess was a pretty girl, and he contemplated if that was her way of telling him she was interested. Facing Jess, he replied.\n\n\"Ok...cool. Well, I'll just be over there at the bar if you need anything. Nice to meet you girls...and you, mate.\" Then Chris took the opportunity to fill his tray with empty glasses and returned to serve more customers.\n\nAnella and Lucy grabbed each other once Chris left and recited the entire exchange to one another. It was Emily who was the first to address the apparent consequences.\n\n\"Holy fuck, that guy thought you were sending him a signal. That was fucking hilarious! But, my God...how awkward was that?\" Jess glared at Emily, knowing every word she said was true. That random barman did get a signal, all because of this ridiculous bet. Jess lifted a hand to flick a strand of blonde hair out of her eyes. Whatever fun the girls were having with this was starting to grate on her. She was getting annoyed. Pissed off.\n\nThe next few hours whizzed by, but Jess was forced to interact with more strangers. She had to introduce Mark to a young couple at the bar, then to another couple of guys when she returned from the bathroom. As the night was winding to a close, Jess fulfilled the terms of the bet each and every time she was challenged. The last few occasions saw her almost bark the introduction through gritted teeth, but she did so audibly and was clear.\n\nAs the clock moved past 12:00pm, last orders were only a half-hour away. They never went clubbing after a Friday night in the pub, at least not together. Mark & Jess always preferred getting home and having the rest of the weekend to themselves, While Emily and Lucy were the two who'd sometimes break away and enjoy a night out dancing in a club. The bar had started to empty as the larger groups had moved on to whatever was next for them. The table closest to the bar had opened up and the six of them had seized it as their own, appreciating the chance to sit.\n\nThey decided that one final round of drinks would be the end of their evening, and it was Mark's turn to go to the bar. There was no queue at this stage and anyone venturing to the bar was being served immediately. The girls had largely forgotten about the bet as Jess had met the terms at every turn, and they wound the evening down laughing about some of the girls' ex-boyfriends.\n\nJust as Mark was reaching the bar, he reached into the front pocket of his black trousers and got his wallet ready. As he did so, he looked up and was greeted by a sight he wasn't at all prepared for. The brunette, that only hours earlier had momentarily transfixed Jess, was standing right in front of him. Her head tilted slightly to the side as she leaned forward across the bar, her deep brown eyes locked on his as her cleavage was almost presented for him to appraise.\n\n\"Hey...what can I get you?\" Letting the words slip softly from her lips.\n\nHer voice was mesmeric. Mark was momentarily frozen in place; all he was capable of was the sharp intake of breath which gave away exactly what he thought of what stood before him. The bar was a dive, but this girl was flawless. The smell of her perfume simultaneously pulled him deeper into her gaze, while snapping him back to his senses. She held his gaze, making him painfully aware that he didn't want his eyes to wander. The zipper of the hoodie which she sported, which Jess had observed earlier, had been lowered slightly as the night wore on. Mark felt his lips part as he pulled himself together.\n\nJust as he did, his eyes betrayed him and glanced down at her chest. His eyes lingered for only a second, maybe two, before he summoned the strength to pull them back towards hers. Mark held his breath as he tried to gauge her reaction to his momentary lapse.\n\nHer expression never changed, instead she tilted her head slowly to the other side. \"You need a little help there? I'm Lana...\"\n\nHe tried to flick his tongue across his lips to moisten them but it was bone dry. He resorted to taking a noticeable gulp, again, offering her another compliment without saying a word.\n\n\"I'm Mark, thanks...sorry, I don't know what that was just now. I didn't mean to...\"\n\nA slight smile formed across her lips. \"That little glance?\" She exhaled audibly while arching her back and leaning slightly further across the bar. The sound of the metallic zipper of her hoodie scraping across the varnished wood of the counter was soft, but noticeable. Whilst holding his gaze, she looked down at her own chest, enticing him to follow her there. Looking up after a few extended moments, she was pleased to see his stare was locked once again onto her considerable assets. Lana had only recently celebrated her 21st birthday, but her breasts were only a year old. Enhanced to a smouldering 32DD, the way they sat firmly, proudly, on her small frame was enough to make anyone melt. The best investment she ever made, they opened plenty of doors for her when she pursued her numerous side-hustles in modelling. When Mark managed to look her back in the eye, he knew he was caught red-handed once again.\n\n\"Don't worry about it, they help with the tips...\" She spoke barely above a whisper, the words drawling from the back of her throat. With that, Lana stood a little taller, lifting her chest from the counter but he was still afforded a full view of every inch of skin she was showing. \"They help really, really good...with the tips...\"\n\nMark had only glanced twice, but something inside him compelled him to attempt to burn every single detail to his memory. He'd never met any girl that was even remotely like her. It was almost unfair to him that she was working in such a dive when there wasn't a magazine cover on the planet which she couldn't grace. The fact that she had just made a remark about her own breasts had him flummoxed, he had no idea how to respond to it.\n\nSlowly, Lana lifted both hands from the bar and folded her arms below her chest. The impact on her cleavage was a sight to see. As Jess had observed earlier, her chest barely jiggled as she lifted her breasts higher and pressed closer together. Her tanned skin was so smooth with little flashes of the black lace of her bra becoming more visible.\n\n\"So, have you any idea how many guys come in here...and just stare at these tits...\" Maintaining her posture with her arms folded under her chest. \"...and how many girls?\"\n\nLooking her in the eye, Mark had no idea what was happening. Was she flirting with him? She couldn't be. There was no way. Before he could respond, his defence reflex kicked in and he offered a smile. A precursor to laughing it off.\n\nAll the while, she'd been making her mind up about him. He was well dressed, nice shirt and trousers. Clearly, he'd come straight from the office but he stood out amongst the regular clientele she served every weekend. She'd only been working there for a few months at the weekends, but she'd seen enough young guys in dirty jeans and obscure metal band t-shirts to last a lifetime. And she really liked his smile and those blue eyes of his.\n\nBut the explicit nature of her question almost floored Mark. His mind flooded with images of various emo girls, clad in their fishnets and plaid skirts, entranced by Lana's breasts. He felt like he'd almost have to slap himself to bring him back to reality. This had to be a dream, or he was drunk...likely both.\n\nHe summoned the best response he could. \"Well, I can only hope that those girls tip better than the guys...\"\n\nShe swivelled her head, arms still folded tight under her chest, before a wicked smile formed across her face. Normally, when she was playing with guys like this, their minds crumbled into gloop and they became, essentially, mute. She hadn't expected there to be a mind at work with this one, not after she was so direct.\n\nLana let her gaze slowly, deliberately, look him up and down before looking him in the eye. \"Wouldn't you like to know?\" Taking a moment to sweep a hand through her smooth dark hair.\n\nMark couldn't quite believe the hint that she'd left hanging out there. As soon as she'd said it, the stirring in his groin gave way to a swelling that was thankfully disguised by the bar. But she had to be joking, probably just teasing him to pass the time before her shift ended. She simply had to be.\n\nAs he shuffled just enough in his stance, Lana knew that she had him in the palm of her hand. Leaning forward slightly, whispering to him across the bar. \"What if I told you...that just last weekend...I took one of those girls out back...\" Her whisper had slowed, every word emphatic and dripping with intent. \"What if I told you...that she pressed me against a dirty chain-link fence...and she tipped me...and tipped me...until my knees buckled...\"\n\nHe felt himself slip his wallet back into his front pocket as the image of what she'd described almost swept him away. \"And here I was just going to order a round of drinks. Now you're making me feel that my...tip...has got a lot to live up to. I was just going to ask you to keep the change.\"\n\nLana giggled at his attempt to diffuse the situation as she took a breath. \"The guys watching the CCTV got such a treat that night...at least, that's what they told me.\" Her whispered boasts were relentless, Mark couldn't get enough. \"Do you think that they would have enjoyed that?\"\n\nMark's head had started to nod softly before the words made themselves available. \"Oh, you are...you're fucking with me, Lana. I've got to give you credit, honestly. If these little suggestions, these hints, are how you make your tips...then you're the best I've ever seen.\" By pushing back against her seemingly well-practiced recital, he felt a little more confident and flashed his smile to show he wasn't being confrontational.\n\nGently pushing a freshly cleaned glass a few inches to the side, Lana was undeterred. \"Is that right, Mark? I'm fucking with you?\". Her playful smile never even flickered nor lost an ounce of its effect on him. \"You don't think that every guy that's standing where you are right now...you don't think they want to tip me?\"\n\nAs the time had passed, Mark knew she was just toying with him and he felt emboldened to play along. There was no risk, they weren't going to be coming back here once their regular pub reopened. But he didn't want to insult this girl. Even though he was in a relationship with a girl in the same room, this had the makings of a great story he could tell his friends about. Her question, once again, had to be rhetorical. She was a smokeshow. Every guy's type. Every single one.\n\nHer eyes locked on his, she pressed on. \"And the girls? After staring at these tits all night...you don't think they want to fuck me?\"\n\nMark pressed both of his palms against the surface of the bar and steadied himself, mind racing with images of the different girls he'd seen in the bar that night. Before long, those girls were replaced in his mind with the sight of Anella, Lucy, Pauline and Emily. All completely straight, but powerless to resist as Lana swooped in and pressed her lips against theirs.\n\nBut those images quickly melted away. Then it was Jess...outside in the dark behind the bar...Lana's hands pressing Jess back strongly against the same chain-link fence Lana just described. Lana's hands dropped to Jess' firm ass over the top of her tight work skirt, before lifting both legs and allowing Jess to wrap them around Lana's enviably slim waist. Back pressed tight against the fence as the chain-link only offered a slight amount of give.\n\nAs Jess turned her head slightly, Lana followed it with her own and her lips pressed hungrily against Jess'. There was nothing soft about the exchange, the kiss was long, hard and frenzied. Lana dropped one hand back to Jess' firm butt and every grope drew gasps from Mark's wholesome partner. The moment Lana's tongue pressed past Jess' lips, her free hand rose to the zipper on her hoodie and yanked it open.\n\nMark pulled himself back to reality but a few drops of sweat had formed on his forehead. His dick was throbbing and he pressed it against the bar in a desperate need to hide his current state of arousal.\n\nLana was more than content with the effect she'd had on him. The longer he went without responding, she knew he was struggling to deal with the barrage of innuendo she'd tossed at him. \"Well...spit it out...\"\n\nHer whispered response made him realise that he'd left her hanging. In as clear a voice as he could muster, he rose to the bait. \"Like I said earlier, you are the...yes. You are...sensational.\" The compliment made him feel a pang of guilt, but it wasn't unsolicited. He accepted that she'd practically assaulted his senses with her seductive routine and, essentially, sucked the compliment out of him.\n\nAnella and Jess were both immersed in conversation when Anella's attention was caught by the bar area. Jess was sat facing Anella with her back to the bar, oblivious to Mark, when Anella realised Mark hadn't brought their final drinks.\n\n\"Uhm, Jess. Mark's been at the bar for nearly ten minutes now.\"\n\nAs Jess turned to survey the scene, immediately, her eyes settled back on the brunette. Hours had passed since she'd first noticed her but she remained, almost impossibly, gorgeous. However, the somewhat cold and distant demeanour she demonstrated throughout her shift had been replaced as she leant teasingly across the bar, smiling at Mark, with that chest of hers on full display.\n\nJess wasn't the jealous type as she and Mark didn't have separate social lives. Not really. As a result, there weren't any situations where she or Mark were meeting other people. Plus, she told herself that she was never the paranoid, insecure type who'd freak out every time she saw Mark talking to another girl. But this girl was so attractive it was virtually implausible.\n\nThen it hit her. Watching them, unable to hear what they were saying, the sight of the brunette presenting her cleavage to the love of her life led to an unmistakable heat between her legs. For a microsecond, Jess panicked and reasoned that she'd been drinking and had to have short-circuited. But the colour soon drained from her face as the realisation clarified itself within her mind.\n\nJess knew her pussy was dripping wet.\n\nShe rose to her feet on autopilot, leaning down to Anella. \"Hey, come over to the bar with me. Let's see what's holding up our drinks.\"\n\nAnella nodded and as the two walked the short distance to the bar, Lucy, Pauline and Emily shuffled across behind them. All three were still mired in their own conversation, only paying scant attention to Jess and Anella. Jess reached the bar to Mark's right hand side, while Anella stood to his left. As the pair flanked Mark, Lana maintained her posture leaning across the bar while allowing herself to flick her gaze across both girls.\n\nStill confused at her own body's reaction to the sight of them together, Jess intruded upon them. \"Hey, just wondering what happened to our drinks?\" As she went to slip an arm around Mark's, Anella glanced at the barmaid and, while just the wrong side of tipsy, sensed the opportunity to mess with Jess one final time that night.\n\nAnella immediately spoke above the others and greeted the brunette. \"Hi, I'm Anella and this is my friend Jess.\" Her arm had only halfway risen to wrap around Mark's, but hearing Anella bring up that stupid bet again made her retreat and stand up straight.\n\nLana had heard the girls make their bet earlier and couldn't resist forming her lips into a teasing, seductive pout. An eyebrow raised; she knew this was her opportunity. Having already introduced herself to Mark minutes ago, she smiled when nodding to each of the girls before casting her eyes back to Mark.\n\n\"Nice to meet you girls, I'm Lana. I was just talking to Mark; we must have lost track of time.\" Sharply, suddenly, Lana turned her head to meet Jess and looked her right in the eye. Her gaze was intense, almost looking right through Jess as if she were an obstacle, not a customer.\n\nAddressing only Jess, she stirred the pot. \"Tell me, how do you know Mark?\" As the question left her lips, even Lana felt a flutter in her chest. She loved playing games, but this moment was delicious.\n\nThe question itself felt to Jess like a searing hot bullet fired directly at her. The little colour left in her cheeks drained as if someone had pulled a plug and let it drain away. Her hands felt light and she placed them on her hips and dug the fingers in deep, knuckles completely white. It was unmistakable. Her pussy was so wet. Jess took a long look around her, Anella was smiling triumphantly. Delighted that she'd put Jess on the spot once again, while Lucy, Pauline and Emily were huddled near, each on cloud nine that she was being put to the test again.\n\nSlowly, Jess turned back to face Lana and sensed she'd let the question remain unanswered for too long to remain comfortable. With her heart beating out of her chest, still highly confused about her reaction to seeing them together, she parsed her lips and dug deep to find the words.\n\n\"We're...we're just...friends...\"\n\nBarely a few seconds had ticked by before Emily and Lucy turned their backs to disguise their cackling. Jess couldn't take her eyes off Lana, desperate for some kind of acknowledgement that could free her from the dread of this moment. Anella took a short breath before raising a hand to her mouth to stifle her own giggle, while Mark stood in the centre of the group having spent the duration of the girls' conversation trying to scrub his earlier indecent thoughts from his mind.\n\nLana sucked a deep breath inward before pressing ahead. Just hearing the words from Jess was like music to her ears. She was loving every second of this. \"Just friends, huh?\" She stood up straighter, but again folded her arms under her chest. \"Mark, you didn't tell me that you were out with five pretty girls...but you're not seeing any of them?\"\n\nIt was now the group's turn to receive a blast of Lana's seductive, confident...wicked tone straight to the senses. Each of the girls were almost floored by just how confident this barmaid was. They'd barely exchanged two words with her and she was already completely unfazed by their presence.\n\nMark's erection had started to soften so he leaned slightly away from the bar, but acknowledged that Jess had stuck to the terms of the bet. Would it be weird if he spoke up and clarified this? Yes, it definitely would, plus he didn't want to come across as rude. Was that it? Yes, it had to be.",
        "\"I...yeah...Jess and I. We're...just friends. Good friends...good friends.\" The embarrassment at barely constructing the sentence made him feel like a moron, but it was the best he could muster.\n\nSuddenly, Lana reached into her back right jeans pocket and retrieved her phone. Swiping to open the screen lock, she looked back up and scanned the six faces across from her, before lingering on Jess' gaze. \"I was just saying to Mark that it's just so refreshing to have someone so well dressed, someone so pretty, come in at the weekend.\" She almost smirked as she kept her glare focused on Jess's colourless face. \"So many scruffy boys come in here and it's just so...frustrating...\"\n\nThe girls each looked at one another, no one had the first idea how to react. Jess just told her they were just friends, but was this girl really hitting on Mark in front of them? The giggling and chuckling at the bet gave way to short deep breaths and awkward silence. Only one person held court and she was standing across the bar from them.\n\nSensing her moment, Lana struck. \"So, you'll have no problem giving me your number?\" Her fingertip tracing the screen of her smartphone aimlessly before looking to Mark. \"We can't have you surrounded by so many pretty girls...but no one to take care of you...\"\n\nAnella almost dropped her glass on the floor, she felt it slip an inch out of her grasp and reflexively clutched it in her fist. Emily's lips were wide, eyes bulging. Pauline and Lucy looked at each other and held their breath. The energy of surprise and bewilderment was palpable and almost ran Jess over like a truck.\n\nStanding right next to Mark, Jess felt like a completely different person. Did she just ask for her boyfriend's number...while she's standing right there? She felt herself rock back on her heels when it hit her again. Her clit pulsing, desperate for attention. Her pussy drenched. There was no short-circuit. No mistake. Something inside her, it saw what was happening and craved it. Jess pleaded with herself; it simply couldn't be true.\n\nMark turned to face Jess, completely shocked. Only he had previously been exposed to Lana's particular charm and he'd reasoned that she was just stirring the pot. Searchingly, he stared into Jess' eyes for some kind of signal of how to proceed. Surely, she'd speak up and put this to bed, even if it meant apologising to Lana for being dishonest.\n\nAs he did, Jess met his gaze and was trapped in her own mind. The stupid fucking bet. That's why she, willingly, told this girl they were just friends. What logical grounds could she, as just a friend, stop Mark from giving her his number? What could she say without coming across as a vindictive liar? She knew the answer, there was nothing.\n\nThe terms of the bet couldn't matter less to Jess, the thought of paying for drinks never entered her reckoning. It came down to the bet having went too far. She told this stranger, this flawless, voluptuous stranger, that her boyfriend was fair game. Unable to speak, she felt her head slowly start to nod giving Mark the answer he needed.\n\nWhen her nod registered, Mark turned back to Lana and immediately started to rationalise what was happening. It was only a phone number. They can be deleted. Blocked. That this was all the result of a silly bet that distorted far beyond what was intended. And it was happening in front of their friends.\n\nNervously, Mark responded. \"Yeah...I mean, of course. Let me read it to you.\" He shook his head a little to comprehend what was actually happening.\n\nLana stood there, phone in hand, had a different idea. \"No, no. Just pass me your phone and I'll enter the number myself.\"\n\nSlowly extending his hand, with the phone clutched tightly, Mark passed his phone to Lana with his number on the screen for her to access. Lana swiped it, letting her fingertips scrape softly against his palm and let a teasing noise escape her throat as she punched Mark's number into her own phone. As she saved it, Lana took another glance towards Jess and felt her nipples start to stiffen.\n\nIt was only hours ago that Lana eavesdropped on the bet and everything was going perfectly. But something was off, unexpected. Lana had spent the last few minutes deliberately looking into Jess' eyes, eager to see how the scenario was affecting her. As she stood there with both her own and Mark's phones in hand, she watched Jess intently. Pale cheeks with the odd rush of colour, lips parted, breathless. Almost panting. Lana was loving the fact that Jess never stepped in at any point to correct the record. It was then that Lana's eyes lowered and flicked her gaze at her groin, as Jess' thighs were clenching together so tightly. Immediately, it dawned upon her.\n\nLana knew, she just knew...Jess was into this.\n\nHanding Mark's phone back, she teased. \"Excellent, then I'll be in touch.\" Lana took a step back and turned to walk away behind the bar to resume her duties. As she did, she glanced over her shoulder and looked toward Jess. \"Your friends are so beautiful, Mark...I'm amazed you haven't been tempted...\"\n\nAs Lana slipped through a door to leave the bar area, each of the group stood there in stunned silence. Jess closed her eyes and felt the familiar twitching that signalled her tears were coming. She bit down on the tip of her tongue and fought the tears with everything she had. Her friends had just watched her get humiliated in such a deeply personal manner, the last thing she wanted was to cry.\n\nLucy was the first to break the silence. \"You know, that last drink...I think it's best we save it for next week.\"\n\nAnella and Pauline couldn't agree fast enough and clutched at their coats and bags. Soon, each of the four girls gave Jess a short, uncomfortable hug and a kiss on the cheek as they made their excuses and left. Soon, the bar was almost empty as the bell rang for last orders. Mark and Jess stood there, facing one another, with no idea what to say. Both had demons from tonight to battle, but Jess' were completely new and unfamiliar...and considerably different than his.\n\nWhat was it about that girl? Jess wasn't a lesbian, but she could appreciate the female form. She had her own celebrity style icons and had no qualms about discussing which famous faces, and bodies, she found to be beautiful. But she knew she wasn't gay, so what the hell was it about this encounter that got her so wet...so fucking fast? Now wasn't the time, or the place, to have that discussion with Mark and she wanted to get the hell out of there. Like zombies, both grabbed their bags and coats and headed out of the bar towards the taxi queue.\n\nThe two made their way home in near silence, with the only sound in the taxi coming from the driver's radio. Soon, just after 1:00 am, they returned to their ground floor flat and got ready for bed. When Jess was able to, she entered the bathroom and locked the door. Her back slumped against the door and she sunk until she was sat on the floor. Alone, she combed through her memories of the night. Jess cursed the fact that it had to happen in front of her friends, how was she going to explain this away?\n\nShe couldn't focus. The embarrassment of her friends' reactions just dragged her back to the bar to relive it, but the memories wouldn't settle. She gritted her teeth and tried to remember accurately, but her mind raced out of control.\n\nSoon she saw herself standing on the dark side of a dancefloor in a club she didn't recognise. Pauline, Anella, Lucy and Emily all watched on as Jess was stood facing Mark and Lana just feet away. Mark was dancing slowly, his hands on Lana's hips as she pressed her back tight against his chest and her tight cheeks into his groin. All Lana wore was a tiny white vest from which she'd fashioned into a tight knot under her perfect breasts, showing off her toned, flat stomach. The vest was paired with a short denim skirt that barely covered the bottom of her ass. Her legs, completely bared, glistened with sweat in the heat of the club. There was no bra, but her breasts were standing so proudly on her chest they were practically holding the vest up. As she perspired, the sweat gathered and dampened the thin white fabric, allowing a healthy view of her hard, bullet nipples, desperate to be freed.\n\nSat on her bathroom floor, in an unfamiliar position, Jess practically growled as she yanked her work skirt down past her knees and kicked it off. Her white thong panties met a similar fate, the crotch containing evidence of her intense arousal from the bar. With her legs spread, her bare ass cheeks sat on the cold bathroom floor as Jess barely traced the length of her dripping wet slit before the fantasy rolled onwards.\n\nHer mind painted an all-too vivid picture. Lana's right arm snaked upwards around Mark's neck as she started to dance down him, then slowly back up. In her mind, Jess glanced around the dancefloor and saw Anella and Pauline looking at her, which caused her to plunge a solitary finger deep inside herself. Jess pressed her head back against her bathroom door and couldn't catch her breath, while her forehead and back were covered in sweat.\n\nShe imagined glancing back to Lana, who this time was staring right at her. Wickedly, as the beat in the club got faster, Lana slipped her hands onto Mark's and lifted them up onto her tits. Her eyes still locked on Jess'; Lana bit her bottom lip as Mark groped them both so forcefully. As he did, Jess almost erupted there on the bathroom floor, her finger now pumping frantically in her own pussy.\n\nBack in her mind, Jess couldn't move as Lana ground her ass into Mark's rock-hard dick through his jeans. His hands still groping her firm breasts over her vest, Lana kept staring into Jess' eyes and winked seductively. Then, her right arm that had slipped around Mark's neck pulled his head down closer to meet hers. She broke the gaze with Jess, turned to Mark and slipped her tongue straight past his parted lips.\n\nWhen Mark's tongue slowly lashed against hers, Jess let out a muffled scream as she had the hardest orgasm she'd ever had up to that point. The back of her head hit against the bathroom door as she raised her ass and hips up off the cold tiles of the bathroom floor. Her finger pumped in and out of her dripping pussy as hard as she could, as the waves of ecstasy engulfed her. Desperate not to be heard, she held her breath to stifle her moans and soon crashed back down onto the floor. Her face was covered in sweat and the back of her shirt was coated in it.\n\nIt was inexplicable to her. Sitting there, struggling to breathe, she tried to understand. Was there something wrong with her? She had kinks, everyone did. She just wasn't an overtly sexual person. Mark was more than enough for her and she was happy, so how the fuck did this concept get lodged in her brain? Was it the girl? She knew that she was incredible to look at, but there was something else about her. An aura, her attitude. That confidence, almost malevolence. Was it that? Jess wasn't close to gaining an understanding of the situation when she eventually rose and got cleaned up.\n\nReturning to bed, Mark had already gotten there and was fast asleep. Jess pulled back the duvet and lay down. Her exploits in the bathroom had left her completely drained and, despite her mind being overloaded, she fell asleep almost instantly.\n\nBoth Jess and Mark were early risers at the weekend, but this Saturday morning saw both rise just after 10:00 am. Significantly later than normal. Jess was first to wake and was confronted with the immediate dread of what had occurred the night before. Seeing Mark still asleep, she noted the relatively late hour and crawled out of bed, pacing towards the kitchen to make some coffee.\n\nWhen Jess closed the door behind her, it stirred Mark awake and he stretched his arms out while yawning. He, too, was burdened by the events of the night before and made a first attempt to comprehend it free of alcohol. It struck him that it was really just a misunderstanding. Besides, no one had a gun to his head to make him do anything else. He even allowed himself a chuckle and shake of his head as he realised, he could just blame Anella and the girls for putting them in that situation to begin with. Smiling as he reached for his phone, he planned to check the sports news in bed and get up within the next ten minutes.\n\nAfter rubbing his eyes, he swiped and saw that there was a message from an unknown number. It was received just after 3:00 am as he slept. Mark took a short breath and paused, there was no way that she actually got in touch with him. When they spoke last night, alone, he convinced himself she was just fishing for tips. For attention. There was no credible reason, to him at least, why Lana would've had any reason to make contact once they left the bar. His right thumb hovered over the screen while he tried to predict who it was from, and what had been sent. Carefully, Mark pressed on the messages icon and went into the menu.\n\nHe didn't have a massive contact list in his phone, but the unknown sender was the most recent message and rested at the top of the list. He glanced to the side where the small message preview sat and that's when he knew for sure. It was Lana. Hurriedly, he pressed his thumb on the message and accessed its contents. A short message, but there was a media clip attached. Looking at the clip, there was no preview and it was only six seconds in length.\n\n-----\n\nHey you...it's Lana,\n\nI can't tell you how much fun it was to meet you tonight.\n\nNow that I'm home from work, I realised that I wasn't playing fair with you earlier.\n\nYou were sat with those beautiful friends of yours all night, I had no idea!\n\nI think...the least I can do...is help you with all that pent-up tension...\n\nLike I said earlier, so many guys come into the bar and are desperate to find out...exactly what's under this hoodie...\n\nSeeing as you were so fun to play with, I think...you deserve a little treat. Just to get us started...\n\nI know you'll enjoy the clip that's attached...try not to wear it out. xx\n\n-----\n\nMark sat up straight in the bed and couldn't help the rush of excitement that washed over him. The message was detailed, pretty long and he felt her personality screaming out from the phone in his hand. There was something about it that seemed authentic. Immediately, his thoughts turned to the attached clip. No one sent him media via a text so he wasn't even sure if he could open it on his phone. Would he need to upload it to his laptop to watch it? Those worries were eased as his thumb double-tapped the thumbnail and held his breath as the phone's media player loaded the clip.\n\nUnmistakably, it was Lana. Standing in a well-lit room, Mark could make out various pieces of furniture in the background. A full-length mirror over her left shoulder and what seemed like the bottom of her bed over her right. She was still dressed in her work clothes, with the fingertips of her right hand lightly clutching the zipper of her hoodie. Sporting a sultry, concentrated look on her face, Lana slowly started pulling the zipper and the hoodie opened. She closed her eyes and arched her back as the hoodie fell from her shoulders and dropped to the floor.\n\nThere she stood, biting her bottom lip as she was clad in the tight black lace of her push-up bra. Her cleavage was hypnotising as she wiggled her hips and gently shook her chest. Lana lifted her hands and ran them across both breasts, over her bra, and gave both a firm squeeze. Dropping her hands to give him a clearer view of her chest, she stared into the camera and offered an exaggerated, almost theatrical, moan.\n\nBefore he knew it, the clip ended and restarted in a loop. Mark was incredulous as she was soon letting the hoodie slip from her shoulders again and she was back in that tight black bra. As his cock hardened, he drew his knees up to his chest as he watched. The second time he heard Lana moan, he knew he wouldn't be able to resist. Frantically, he pulled the duvet down and kicked it to the side with such vigour that it landed on the bedroom floor. He slept in just his boxers, but he clutched the phone in his left hand, holding it within view, as his right hand plunged beneath his waistband and clutched his hard dick within his grasp.\n\nAfter everything the night before, his initial touch was already teasing a droplet or two of precum and Mark was in desperate need of release. After the first few loops, Mark was completely lost in the act. He strained to try and see a hint of her nipples through the black lace, but was soon drawn back to the mounds of her cleavage and her scorching bite of her bottom lip. He hadn't even lasted a full minute before he watched Lana's hands grope her own tits for one time too many and his orgasm rocked him to the core. Twitching over and over, Mark shot thick ropes of his cum all over his right hand. All over the sheets and onto the hardwood of the bedroom floor. Tossing his head back to meet the pillow, he dropped the phone and sucked in as much of the stale bedroom air that he could.\n\nWhen he caught his breath and composed himself, he closed his eyes and tried to make sense of what was happening. What would Jess think if she knew he was in here jerking off to Lana after only meeting her the night before? He had to get a grip, but he couldn't shake the realisation, the undeniable truth, that he was intoxicated by Lana.\n\nAfter slipping into the shower, Mark tried to scrub his guilt away before returning to the living room where Jess was sat on the couch. They'd barely said a word to one another since the bar, but Mark wanted to kill the tension.\n\n\"Listen, Jess. I know how awkward things got last night.\" Mark started pacing the middle of the living room as he addressed her. \"But it's over. The girls got their kicks and it's over.\"\n\nJess sat forward, rubbing the side of her head as she searched for the words. Since waking, she'd been trying to make sense of how she completely lost control of herself on the bathroom floor. There was no way she could bring herself to tell Mark, she wasn't even sure how she'd go about it. Her head was a mess and she wasn't sure what she wanted.\n\nJess looked to Mark and tried to put it all behind her. Behind them. \"I know, I know. Look, we'd all been drinking and that stupid bet just went way too far. The girls couldn't let it go and just kept putting me in those awkward situations all night. If Anella was here, I could strangle her.\"\n\nMark enjoyed a slight sigh of relief. He knew he'd done nothing wrong, but that wouldn't have stopped Jess from holding him responsible if her mood demanded it. \"As for the girl...Lana...she's out of our hair and we didn't make a scene. We didn't embarrass her, we just...played along.\"\n\nHis words went some way to reassure her, but he had no idea just what kind of sexual dilemma Jess was wrestling with. And in truth, that's what Jess was struggling to get past. She knew Mark hadn't done anything wrong and they could cut Lana off with minimal effort. But she couldn't comprehend what was going on in her own mind. Was it an isolated incident or a sign of something deeper?\n\nJess stood up and stretched, her pink pyjama bottoms and plain black t-shirt clung to her figure as she did so. \"Babe, if you're wondering...the only reason I nodded to you...to give her your number...was because I didn't want her to think we were psychopaths who were pretending to be friends for no reason...\"\n\nMark exhaled and was delighted to hear it. He felt the same. \"Yeah, yeah...exactly! Can you imagine how stupid we would have looked...if you said we were together after saying we were just friends? I mean, my God! What if we ever wanted to go back to that bar...they'd all think we were crazy.\"\n\nThe two looked at one another and were heartened that they were on the same page. And together, they'd put the incident in their rear-view mirror. Jess snuck forward and gave Mark a playful hug and let it linger. Just as she pulled away, Mark wanted to set the record straight about something else.",
        "He put his hands on her shoulders for a second before letting them drop to his sides. \"Ok, now there's something else you need to know. Lana...she sent me a message...\"\n\nJess' eyes almost bulged out of her head, stepping back from him as her arms defensively folded atop her waist. Instantly she heard a faint ringing in her ear as a strong recollection of her fantasy from the bathroom floor resurfaced. \"She actually messaged you? What do you mean? When? What?\" Stammering, she took a second to compose herself. \"What did she say? Did you answer her?\"\n\nMark stepped in urgently to try and soothe her. \"Don't freak out, please. It's nothing. She...she doesn't know about us, so...it's not her fault. She was just, I don't know...she was just flirting?\" Sensing that there was no way to explain it, he thought honesty was the best policy. \"Look, let me show it to you...and of course I haven't responded!\"\n\nShe had no idea if she was ready for this, but Jess knew that she'd need to see the message or the curiosity would consume her. \"Flirting? Didn't you hear her last night? She doesn't give a fuck, Mark. She's...I can't explain it...she's just so...\"\n\nMark felt the same way, and tried to finish her sentence for her. \"Direct. She's just so direct.\"\n\nArms still folded atop her waist; Jess felt herself lowering her voice. \"Uhm, yeah! She's not exactly backwards about coming forward. You think someone like her...you think she's used to rejection?\" Blowing the air from her lungs, Jess appreciated his honesty about the message. \"Ok, thank you for telling me about the message. You know I would never demand to see your phone...but, yeah. I think it's best...if we look at the message together.\"\n\nAfter a quick second to retrieve his phone from their bedroom cabinet, Mark returned and they both sat on the couch shoulder-to-shoulder. Jess had no idea what to expect as Mark hadn't exactly been articulate. Mark swiped open the menu, accessed the message and there it was. And Jess was rocked.\n\nShe read the full body of the message, over and over, and felt her brain melting. It was dripping with heat. If she was flirting, then Jess couldn't imagine anyone being able to resist. This girl was offering her boyfriend a treat and that he shouldn't \"wear it out\"? The two little kisses at the end were the most innocuous part of the message, but they just reminded Jess of her fantasy...watching the way Lana slipped her tongue into Mark's mouth on that smoky dancefloor...\n\nThroat dry, she knew she had to see the clip. \"I...I don't know why she's being so forward. Is this, is this what girls are like these days? No...no, it's her. This must just be her thing. Fuck!\" She tossed a couch cushion onto the floor before asking herself if she was ready for this. \"Babe, play the video. Please.\"\n\nMark had settled into a mindset where he couldn't get in trouble if he complied with every one of Jess' requests. He responded, decisively, by double tapping the thumbnail and Jess was reintroduced to Lana. Intimately.\n\nSat tightly next to Mark on the couch, the moment the clip started was as if Mark had vanished from the room. Lana's face was so beautiful, with the absence of alcohol and seeing her with better light, she was incredible. Her full lips and deep brown eyes were captivating. Those same brown eyes that winked at her so seductively in her fantasy. As the clip played, her zipper was tugged and the hoodie slipped from her shoulders. Even Jess couldn't help but admire her body. Her black lace bra was at least a size too small, purposefully, and looked like it had to be peeled off. Her cleavage teased by her own hands as she grasped her perfect tits and moaned like a wanton slut.\n\nImmediately, Jess started to get wet. She cursed the fact that she'd thrown the cushion to the floor as she wanted it positioned squarely on her lap as the video started to loop. Every part of it was simple, but scalding hot. Jess realised that Lana didn't free her bare breasts, which she viewed as a positive. After all, if she was turned on watching it, what was Mark thinking?\n\nThe loop snapped back to the start and Jess stared into her brown eyes. All Jess could think of was them pressed together on that dancefloor as Lana winked towards her. Taunting her. Knowingly. Picturing their heads turn to meet and their lips getting closer, Jess had to stop looking at this.\n\nJumping to her feet suddenly and bending down to retrieve the cushion, Jess looked down at Mark and tried to think out loud. \"I've seen enough...ok. She's a flirt. She's a fucking tease. But...it's not like she got her tits out...and as you said, babe...you didn't reply?\"\n\nMark was incredibly eager to clarify the situation. \"No way would I respond, I can show you my activity log...\"\n\nJess recoiled at the suggestion, determined to not become a bitter, jealous, paranoid shell of herself. If she started checking his call logs, what kind of slippery slope would she be on? \"No way, babe. I'm not going to violate our trust in one another. I trust you and I believe you. A hundred percent. And I'm so thankful you were honest with me about...that fucking video.\"\n\nJess leant her head back slightly. Yet again, the very sight of Lana was enough to trigger the kinkiest, most fucked-up fantasy she'd ever had. And she knew, if she succumbed to it, as she did on her bathroom floor, she could make herself cum like never before. What was wrong with her? She was in love with a great guy who did nothing but treasure her. Yet only hours ago, she plunged her finger into her soaking wet pussy and exploded at the very idea of Lana kissing Mark...the way she kissed him...so confidently...her tongue dancing across his...her firm breasts trapped tightly within his grasp...\n\nShe had to snap out of it. Still tormented by fragments of her fantasy, and the desperate need to get herself off, she tried to bring this matter to a close. Glancing to Mark, she explained. \"My only concern is that we're messing her around. Lana. After all, she did nothing wrong...and neither did you. This was my fuck-up with that stupid bet.\"\n\nMark looked at her quizzically, her stance on Lana had taken him by surprise. By this point, after watching her strip to her underwear, he'd have sworn blind that Jess would have declared her a blood enemy.\n\nJess looked down, arms folded and continued. \"I feel bad that she's reached out...under the impression that...you're available.\" She heard herself saying the words and took convincing that they were coming from her. But her instincts had taken over. Whatever this kink was, she was in awe of its impact upon her. It could bring her to the boil almost instantly, to say nothing of the power and force of last night's orgasm.\n\nLana's video had reached into her head and dug her kinky fantasy out with dirty hands, dumping it at the front and centre of her mind. And it wasn't going anywhere. Jess continued. \"Look, babe, no one likes it when girls get messed around by guys. I think...what's best...is if you respond to her...\"\n\nStaring at her in disbelief, Mark couldn't believe the suggestion she'd made. \"Respond to her? Jess...she sent one message. If I don't respond...if I just fucking ghost her...where's the harm?\n\nShe knew he was right, but whatever itch she needed to scratch wasn't going to get the attention she needed if Lana was allowed to fade into obscurity. No, whatever she went through last night...Jess knew she had to feel it again. In the privacy of her own thoughts, she started to accept the truth...she'd never been more turned on in her life.\n\nThe specifics eluded Jess...she couldn't pinpoint precisely what it was about the scenario that was lighting her on fire. And that's why she knew she needed to explore it. Jess desperately rationalised it by assuming once she worked out what it was, she'd get over it. But she'd never let it go further than a few messages. Was she hoping if Mark responded that she'd send another video? The thought almost made her lose her footing.\n\nJess expanded. \"Hear me out, babe. Look, we both know it. Getting ghosted sucks...it fucking sucks. You don't get any closure, any reason...you just get let down. I think...if you respond to her...over the next few days...maybe she'll decide for herself that she wants to move on? Maybe...you can let her down gently...but we can't...you can't...just ghost her. I don't think that's right.\"\n\nMark had only just had a furious orgasm to Lana's video within the last hour, and here was his girlfriend, the woman he loved, asking him to keep in touch with her. A seemingly ruthless seductress with a flawless body and a relentless tease. While he knew that he'd never let it go further, if he was being given permission to flirt with Lana, he didn't want to have to be asked twice.\n\nHe responded. \"I mean...I understand what you're saying. And I think...I think it's really considerate of you to not want her feelings to get hurt. And...I know that the bet you girls made is the reason for it...so...ok. I'll respond and see if she loses interest.\"\n\nLooking at each other, Jess swallowed noticeably as she opened the door to their relationship. A door that she was swinging open to the hottest girl she'd ever met, with an attitude and confidence that made Jess breathless. And all because she can't stop fantasising about her seducing her boyfriend.\n\nJess dug her heels into the living room floor and told herself she was in control.\n\nThe rest of the weekend flew by in a blur. They hadn't made plans together and stayed in on both Saturday and Sunday nights. It didn't take long for them to get past the awkward conversation and spent both evenings cuddled on the couch watching movies. Jess dealt with the messages from Anella and the other girls by downplaying the situation and blaming the bet for the awkwardness. After watching a movie with Mark on Sunday night, Jess was relieved that the girls had dropped the issue and she looked forward to setting the record straight when they met the next Friday night.\n\nJust after 10:00 pm on that Sunday night, Mark was in their bedroom ironing some shirts for the work week ahead. As he liked to do, he listened to some music on his Spotify playlist as he ironed each individual shirt with care. He didn't want to disturb Jess in the living room, so he had the music playing through his Bluetooth headphones connected to his phone. Just as he had slipped a coat hanger into a shirt and hung it in his wardrobe, he heard a text beep coming through his headphones.\n\nHe never received texts at this time on a Sunday night, so he was surprised as he walked over to the phone. Swiping it open, it was the same unknown number. Lana's number.\n\nDespite Jess' instructions, he never brought himself to formally save Lana's number in his contact list. Part of him didn't like the idea, but then again, parts of him didn't feel comfortable masturbating to Lana's video. And that happened, as long as it lasted. Mark thumbed into the messages tab and accessed the message.\n\n------\n\nHey...\n\nI've spent all weekend wondering just how much you enjoyed my message?\n\nPerhaps you haven't responded because you're still busy enjoying it?\n\nThat bra was so tight...what a shame the video had to end before it hit the floor...\n\nBut you can't keep a girl in suspense like this.\n\nTell me...\n\nJust how bad...just how hard you wanna tip me...xx\n\n------\n\nStanding next to his bed, Mark slowly sat on the edge of the bed and read the message again and again. All the while scarcely believing his eyes. After an instinctive look over his shoulder, the bedroom door was closed. He knew from the moment he met Lana at the bar, he would have killed to see those naked breasts and here she was...teasing him with that very idea. After catching his breath, he sat back and took stock of the situation. The thought of him tearing that bra off was chipping away at his resolve.\n\nAfter reading her sign-off, it was clear she wanted him to respond. This time was different though, Jess had been clear with her thoughts, however inexplicable they were to him. Jess wanted him to respond. He had permission to respond.\n\nMark had no idea what to say, all he knew that every part of his essence was screaming to say something. Quickly, he let his fingers dance across the keys and composed a short reply. He found that once he got started, it was easier to slip back into an old routine. Before meeting Jess, he'd dated often and his text game was still there. He was just rusty. His first draft was a rather benign reply. After surveying it, Mark groaned and instantly deleted it. The fact that he was so concerned about being at the top of his game induced a significant pang of guilt.\n\nEventually, he decided that the moment was too powerful to do anything but be honest. He was attracted to her, so much of him wanted her. Hardly anyone gets the opportunity to even talk to a woman like Lana, let alone enjoy some flirtatious texts with one. Mark told himself to flirt, but not to get carried away. After letting his fingers tap at a frantic pace, he barely evaluated it before hitting the send button.\n\nMark told her that he couldn't stop himself from enjoying the message and that he couldn't get it out of his mind. He pointed out that he knew, he just knew, she was playing with him, but he was sure he could withstand her teasing. As for the tips, he asked just how well the girl from the bar had tipped her against the fence.\n\nOnce the message was sent it became part of the world. It was reality. Irretrievable. Even he was surprised at how little desire he had to stop it from happening. Jess giving him the green light had done wonders for removing most of his nagging doubts.\n\nLying back on his bed, every bit of energy was devoted to anticipating her reply. But his text went unanswered. As soon as the clock ticked past 11:00 pm, he got ready for bed and snuggled up next to Jess. As they engaged in light conversation before falling asleep, he decided now wasn't the time to break the news of he and Lana's conversation.\n\nSeveral days passed and both Mark and Jess slipped back into their familiar routines at work. Each night they'd have a nice home cooked dinner and catch up with how the other's day had gone. Mark never brought up Lana, or her recent message, while Jess was sat with him always desperate to ask.\n\nJess wasn't sure what to expect when she asked Mark to keep in touch with Lana. Were they immediately going to start bombarding each other with messages? Would Mark spend all night on his phone talking to her? Flirting with her? Any time the thought creeped into her head; Jess felt the same heat between her legs. Each weeknight, around an hour before she went to bed, thoughts like those drove Jess to the bathroom where she'd bring herself to an explosive climax in as discreet a manner as possible. As a cover, Jess started taking a shower at the same time every night to avoid getting caught. Every night, Jess told herself she was fighting her kink as her fantasy started playing out a little longer every time, until she had the entire scene burned in her memory.\n\nBefore long, it was the following Friday. One week after the night which was turning Jess' life upside-down. Jess thought it was strange that she hadn't heard anything about drinks with the group all week, so she checked in with Anella. They exchanged texts where Anella revealed that the other girls were going on dates that night, and that they suggested the group drinks be put back to the following week. But Anella said she was free the next night, on Saturday, and invited Jess over for a few glasses of wine. Jess agreed and looked forward to it. She hadn't seen Anella in person since the previous weekend and was eager to make sure there were no uncomfortable questions about letting Mark give Lana his number.\n\nThat Friday night was an outlier for Mark and Jess, they spent it together in their flat. Mark had popped out for a nice Chinese takeaway for them both and Jess got comfortable in an oversized shirt and pyjama shorts. Jess had gone since Saturday without hearing a peep about Lana and was aching for something to happen. In her mind, because Mark hadn't mentioned her that meant she hadn't been in touch. Seeing as almost a full week had went past, she started considering the reality that Lana had moved on. She really didn't know how to react to the thought. Despite Jess struggling to understand what was going on in her own head, the one thing she was certain of was that Lana wouldn't be starving for attention. Jess felt it in her soul...Lana could have anyone. Overwhelmingly, Jess was frustrated.\n\nIt was just after midnight when Jess said she was going for a quick shower before bed. Mark acknowledged her as she'd been doing so all week, albeit not quite this late. He was in the middle of watching some highlights of that night's Friday Night Football broadcast when he felt his phone vibrate in his hand. Puzzled, he swiped it open and there was a message from a different unknown number. Raising an eyebrow he felt a strong twinge of disappointment, realising just how much he wanted it to be Lana.\n\nAfter tabbing into his messages tab, he thumbed the new message and was even more confused at how short it was. It simply said \"Get headphones\".\n\nMark's eyes flicked to the bottom of the screen and there was another video clip attached. There was a preview thumbnail, but it was far too blurry to get an idea of what it contained. His thoughts turned to Lana, was she somehow behind this? Was this some kind of burner phone she was using? As he didn't know for sure, he rose to his feet and felt himself tiptoe into his bedroom and unplugged his Bluetooth headphones from their charger. After holding down the power button for a few seconds to turn them on, he slipped them over his ears and connected them to his phone. Mark heard the jets of water running from the bathroom where Jess was still showering, so he quietly closed the bedroom door and sat on the edge of the bed. He hadn't turned the bedroom light on, so the only light in the room came from the backlight of his smartphone. After a deep breath, his thumb double tapped the thumbnail to open it.\n\nThe footage was shaky, but the sight of what the camera was filming made his heart jump into his throat. There she was, Lana, in what appeared to be a busy nightclub. She was being filmed dancing with another girl but they were over to the side of the dancefloor. This time, she wasn't wearing her work clothes and Mark's jaw almost hit the floor.\n\nHer long, smooth, straight dark hair was lifted up into a ponytail and she was wearing a pair of glasses with thick black frames, almost as if she was wearing them as an accessory. Lana's unbelievable figure was wrapped in a tight, black, long-sleeved sweater dress that made it as far as her upper thighs and no further. The neckline of the dress was in stark contrast to her work hoodie, as the dress had a crew neck with an additional foldable collar reaching a few inches up Lana's neck. Her arms were covered by the long sleeves and the dress clung to every single curve. More than a glimpse of her legs was visible beneath the hem of the dress, showcasing her thighs, but a pair of black suede boots reached up just over Lana's knees to complete her outfit.\n\nDespite not showing an inch of skin through her tight dress, Lana was dressed for sin. Her tits were straining against the thin dress, which was tight enough to clearly show a matching black bra holding them tightly in place. Mark couldn't take his eyes off the way the dress was pushed out so far by her chest, but ran so tightly against her flat stomach and slender waist. She looked like she had been poured into the dress.\n\nMark couldn't absorb the details quickly enough. As the first few seconds of the clip played, the shaking of the camera steadied considerably as whoever held the phone walked closer to the two. Lana never looked at the camera as she faced the other girl and kept her movements slow and deliberate.",
        "He didn't recognise who she was dancing with, but she was stunning. Another brunette, she was a similar height to Lana and was suggestively looking into her eyes. Her hair was also long and straight, but it hung freely down her back. Lana's friend wore a black top which had a plunging neckline and the two thin shoulder straps displayed plenty of skin. The top looked like lingerie at first, but it was black satin and extended down past her belly button. The girl's chest was impressive in its own right, but had a more genuine, vigorous bounce and jiggle as she danced with Lana. In her right hand was a drink with a pink straw, which was almost empty, with her outfit rounded off by a pair of tight blue jeans.\n\nSuddenly Mark realised that he couldn't hear anything. But that concern faded as the girls danced. They were smiling at one another as they got closer, eventually letting their tits press hard against one another's. Lana kept dancing slow, maintaining eye contact as her tight sweater dress gave an incredible sideways view of her curves to the camera. Suddenly the other girl started talking to Lana and started to laugh. They were exchanging words as they danced, pressed scandalously close.\n\nAfter a few seconds of this, the brunette girl started to laugh quite hard but Mark couldn't hear a thing. Suddenly, the girl turned to the camera while still laughing and mouthed something. Lana, hearing what she said, burst out laughing too and they stopped dancing. Lana playfully shoved the girl in the shoulder, as if to chastise her for what she said. Mark sat there in the near dark of his bedroom studying the clip wondering what was wrong with the audio before what followed killed his interest in that problem.\n\nHe watched as Lana placed hands on both of the girl's shoulders and assertively repositioned her before pushing her back into a nearby wall. Whoever held the camera quickly took a few steps, causing the footage to shake, before standing to the side and focusing back on the two. With her hands now softly pinning the girl's shoulders to the wall, Lana brought her body closer until her breasts were once again pressed hard into the brunette's. Slowly, Lana leaned in until the tip of her nose was touching the brunette's and then let her hands slip down from her shoulders.\n\nMark's dick had swollen as he sat there in the dark, desperate to see where this was leading. Was this going to be another clip that cut off too soon? Lana's right hand dropped to the girl's chest and she brushed a fingertip absently across her exposed cleavage before her lips swooped in and pressed against the girl's. As their lips met, Lana took a long, slow squeeze of the girl's breast as the kiss almost melted the camera. Both their lips parted and their tongues met, Lana's chest still pressed into the girl's so tightly that her own breast was pressing against the back of her hand as she groped her friend with unbridled want. As they kissed, Lana lifted her right leg and the girl reached down and clutched Lana's exposed thigh just above her knee-high suede boot.\n\nThe clip had run for just over half a minute when Lana softly broke the kiss, with both she and her friend starting to laugh once more. Stepping back, Lana turned to face the camera and mouthed something which Mark couldn't hear. And with that, the clip ended and looped back to the start. Mark found himself watching the two girls dancing with one another again, but this time knew where the clip was headed. Every move Lana made in that tight dress, and those boots, was smouldering. He gasped as the clip moved to Lana pinning her friend to the wall and waited for the kiss.\n\nWith Jess in the shower, Mark couldn't help himself. His dick was straining against his jeans, so he snapped the top button open and pulled them down around his ankles with his phone clutched tightly in his left hand. As he watched Lana press her amazing breasts into the girl's chest and swoop in for the kiss, he knew he couldn't last very long. With a loud grunt, the full length of his cock was being stretched and pulled as his eyes were locked on his phone. The way Lana kissed her was spellbinding, slipping her tongue past the girl's lips in a way that left no doubt that she'd done this before. Once Lana's hand tightened around her friend's breast, Mark pumped as hard as he could and shot his load into the darkness of his bedroom. Sat on the edge of his bed with his jeans around his ankles, Mark's cum had been shot all over the floor reaching as far as the bedroom door.\n\nMinutes passed and Mark heard the shower still running, so he seized the opportunity to clean his mess. As he did, the short accompanying text re-entered his mind. What were they saying in the clip? Who was holding the camera? Were they out doing this tonight in a club somewhere? Once he was satisfied that his mess had been adequately cleaned, he removed his shirt and jeans and sat there in his boxers as he normally did before bed. He slipped his headphones off and double-checked they were switched on and weren't broken. Then, after checking the volume settings on his phone he couldn't work out the problem. Then he noticed a small muted volume icon in the corner of the phone's media player, which he only had to use when Lana previously text him, which he quickly pressed and the volume flooded into his ears.\n\nTriumphantly, Mark restarted the clip and listened for what was being said. The RnB music in the club was loud, but it wasn't impossible to hear them speak. Soon enough, he reached the part where the girls were talking as they danced.\n\nLana's friend, Sophie, asked her \"Should I tell him?\" then started to laugh. Lana never responded and kept dancing with her eyes locked onto Sophie's. A few seconds later, Sophie turned to the camera and yelled out \"She knows!\" Then burst into a loud fit of laughter.\n\nMark was only too happy to watch through the rest of the clip despite having emptied his balls just minutes earlier. He sat through the kiss in awe before watching Lana pull away then turn to the camera herself. This time, Mark heard every word.\n\nLana looked teasingly into the camera through her thick black frames. \"I told you...the girls I like...they tip me really, really good.\"\n\nBefore stopping the clip, it had started on yet another loop. With the mystery of the missing audio solved, Mark digested what they'd said. What did her friend mean by that? Should she tell him? And she knows?\n\nThe girl had to be talking about Lana, but what, exactly, did she know? Mark racked his brains and thought about that night at the bar. He met Lana for the first time about ten minutes before Jess and their friends did. Nonetheless, they didn't talk about anything specific. Lana was teasing him hard before Jess came over, but they hardly got into a conversation about their lives. He couldn't understand it. But what about Jess? Together, they risked looking like fools when Jess played along with the bet. But nothing was said, or done, that could have given away that Mark and Jess were together. And Lana was hitting on him from the moment they met. She was confident, direct...assertive...but would she really be hitting on him if she knew he was with Jess?\n\nNo, she had to be referring to something else...but what?\n\nThe thought had barely had time to form in his mind when his phone rumbled once more as it sat atop the duvet. Snatching it up into his right hand, Mark swiped it open and it was from the original unknown number, Lana's. He didn't pause for a moment as he opened the message to feast his eyes upon it.\n\n------\n\nDon't let me disturb you while you're...enjoying...that message.\n\nYour friends in the bar were so beautiful...\n\nAs for my friends?\n\nAs you saw...I just can't keep my hands...or my lips...off them...\n\nIt's time for us to play...xx\n\n------\n\nFor the second week in a row, Mark overslept on Saturday morning and felt physically drained, but mentally he was hyperactive. He and Jess hadn't touched each other all week but he'd spent so much sexual energy thinking about Lana. The orgasms he'd been having were intense and explosive, so he felt like he needed the extra rest. Jess had already risen and was out running errands when Mark eventually crawled out of bed well past 12:00 pm.\n\nMark was pondering what to do about Lana's text. It was only a few days earlier that he told himself, sincerely, that he'd allowed himself to flirt but anything further was an obvious non-starter. He hadn't answered her message before he went to sleep as he was completely out of his depth.\n\nLater that afternoon, Jess had proposed that they have an early dinner as she wanted to arrive at Anella's for drinks around 6:00 pm. Mark had planned to devote no more than an hour of his evening towards a work presentation he was due to make the following week for a high priority client. Knowing Anella would likely be out most of the night, he knew it was the perfect window to get the work done. As they sat at their small kitchen table, Jess had let her curiosity build all week and was struggling to retain her discipline. Sensing that she'd be spending the night away from Mark, she didn't want to wait any longer. Jess simply had to know.\n\nPlacing her fork to the side of her plate, having only eaten a few forkfuls of rice, she looked up to face Mark and rolled the dice. \"So, you haven't mentioned anything about her...about Lana...all week.\"\n\nHearing her name from Jess' mouth made Mark hold his breath. Taking care to swallow his food, he placed a hand on the edge of the table and addressed her. \"Yeah...I mean, what you said last weekend...about not cutting her off.\" Dropping his fork down and placing both hands under his chin with elbows on the table. \"I...I did what you asked...\"\n\nThe words slipped into Jess' head and felt like they'd set off a nuclear explosion. She didn't know what thread to pull on first. That he just suggested that he'd responded to her? That he hadn't told her until now? Until she asked him about it? These were rational, logical questions to ask, but Jess hadn't been able to focus on the rational or the logical since she first saw Lana leaning across the bar towards Mark.\n\nJess had been starved of any thread to pull upon all week regarding the Lana situation, but now Mark had delivered a fistful of them all at once. Her lips parsed to speak up, but then the twisted thoughts that had plagued her all week came flooding back, like a river that burst its banks. Sat at her kitchen table, she felt like that river was threatening to sweep her away.\n\nMark sensed the pause and felt like he needed to clarify the situation. \"We haven't talked much...it's been...I wanted it to be like how we handled it last Saturday. You know...she sent that video....and I told you straight away.\"\n\nSat across their small kitchen table, Jess listened to every word with equal parts dread and desperation. She wanted to interject and ask the right questions, but she was busy trying to get the images of them together out of her mind.\n\nMark looked down briefly before continuing. \"Look, I know you told me to keep in touch with her...But it's not always easy to just come and show you...what she's said...\" He then looked up and tried to hold her gaze. \"Or what's she's sent...\"\n\nImmediately, the words took Jess tightly within their grasp. What she's sent? Not just words? The possibilities were limitless to Jess, she'd already sent a video of herself in her underwear. Coupled with that attitude of hers, and that confidence, Jess knew Lana was capable of anything. Still dressed in her black jeans from running errands earlier in the day, they did an admirable job of disguising her, now dripping wet, crotch.\n\nJess hadn't planned to respond but heard herself doing so. \"What...what she's sent?\"\n\nFrom where Mark sat, Jess had a look on her face that he'd rarely seen before. Standing quickly, he reached into his pocket and dug out his phone. \"Please, don't worry about it. It's nothing, Jess. You know...you know what she's like...\" After accessing the second video, he double tapped the thumbnail and opened it. Quickly pausing at the start, he turned to Jess. \"She sent this...last night...when I was asleep and you were showering. I'd have responded...like you said...but I just don't know what to say...\"\n\nJess went to stand, but Mark slid his phone across the small surface of the table to her. She positioned it on the table in front of her and looked up at him. \"This...she sent this?\"\n\nHe shrugged his shoulders slightly to feign ignorance at how much he knew about the situation, and the state that it had worked him into the night before. \"Just watch it...and you'll see why I have no fucking idea what to say to her.\"\n\nShe felt like she was standing on the edge of a cliff, staring down at endless waves crashing against a cluster of jagged rocks. Just over a week ago, her life with Mark was perfect. Their relationship had barely been tested in four long years. Her confidence had been unshakable in their ability to overcome any obstacle that presented itself. But these last eight days felt like she was being slowly dragged through a trapdoor in her own subconscious. Yet there she sat, ready to take in another of Lana's performances.\n\nLooking down, Jess had already pressed the play button before she could ask herself if she was ready. Soon, the beat of the music that was so familiar to Mark played freely in their small kitchen. As the girls danced, Jess couldn't help but stare at Lana's figure in awe. Mark stood looking down with no clear view of the phone, but could hear the audio clearly. Jess was offering no obvious reaction as the clip played, if anything she seemed to be studying it intently.\n\nThen, Jess heard the same words that Mark had the night before. \"She knows!\" It shocked Jess and she snapped out of her daze, but kept her eyes squarely on the video as it continued to play. What was she talking about? What did she know? Was she talking about them? Jess had barely been able to consider the meaning before Lana had pressed the brunette girl against the wall and commenced the kiss.\n\nMark watched on, eager for some kind of signal that Jess wasn't mad at him. After all, while he hadn't been entirely honest, he was being truthful when he said he hadn't responded. To this message, at least. But he had no idea of the scene that had barged into Jess' mind and taken her captive.\n\nAs Jess watched the girls kiss, with Lana's hand roaming intently across her chest, she allowed the image of her brunette friend to fade away. Within a split second, Jess had tuned out of the video and was focused on the scene which her mind had painted for itself.\n\nStood in her place, back pinned against the wall, was the love of her life. As the music pumped, Lana's chest was digging into Mark's so tightly. Instead of grabbing her friend's breast, Lana's right hand had snuck around and taken a long, firm squeeze of his ass as she let her tongue slip teasingly into his mouth.\n\nJess cursed the fact that she wasn't alone as she craved to rip her jeans off, by any means possible, and satisfy her aching need. Her fantasy kept playing even as she closed her eyes, with Mark reaching down and clamping both hands onto Lana's tight ass through her implausibly tight dress. He lifted her up just enough and stepped forward, giving Lana enough room to snake both legs around his waist, her thighs tensed and begging for his touch. The kiss almost broke Jess as she felt the incredible urge to completely surrender to the fantasy. Mark took a hand from Lana's firm cheeks to slip behind her head and wrench her ponytail back, yanking Lana's head free from the kiss, as he slipped the tip of his tongue against the base of her neck. Slowly, maddeningly, Jess' boyfriend let his tongue slip upwards, tracing the length of Lana's neck before continuing onward and slipping back past her lips.\n\nJess closed her thighs together as tightly as she could while sat at the kitchen table, desperately praying that the effect the video was having on her wouldn't make itself known. But her mind wasn't finished with her yet. She pictured Mark release his tight grip on Lana's ponytail as their kiss broke and Lana turned to face Jess. Her thick black glasses made her look like a world class centrefold with an office job, but Jess was almost paralysed by the deep brown eyes which lay beneath. With her legs wrapped around Mark's waist, his hand's gripping her thighs to stabilise her, Jess pictured Lana staring at her as she slipped the glasses off. After an agonising moment, Lana smiled wickedly and winked as Jess before Mark's tight grip of her tensed thighs caused Lana to toss her head back, thrust her chest forwards and offer a loud moan.\n\nJess paid almost no attention to the actual video itself as it ended with Lana speaking to the camera before looping back to the start. Her thighs were clenched together so tightly and felt if she even touched herself with a fingertip, it would be enough to make her distract her neighbours as she came. Without thinking, Jess slapped both hands on the table. \"That fucking bitch!\"\n\nMark wasn't sure what emotions Jess was expressing, but hearing her curse with such conviction meant that she had to be angry. He took a step towards her. \"I know, yeah. You're right. You're right, Jess. You're right...\" He placed a hand on her shoulder. \"That's what she sent...I think, it's her thing. Maybe she's an attention seeker...or a fucking exhibitionist...\"\n\nJess jolted and finished his sentence. \"She's a tease. She's a fucking cock-tease, babe.\" She lifted both hands from the table and ran them through her hair, knowing that she needed to get ready to visit Anella shortly. \"And to send you that? I swear to God...she wants you.\"\n\nHaving heard enough, having witnessed how tormented Jess seemed, Mark started to feel the same pangs of guilt he'd felt throughout the week. \"Well let's do what we should have done last week...let's just cut her off cold. Cut the tie right now. I can just...I can just block her number and we can just...forget about her...\"\n\nThe disappointment swelled in Mark's chest as he proposed the idea. Never had he ever been as turned on by anyone, even Jess when they started dating. Having been given permission to respond to Lana, he was desperate to keep their texts exchanging as long as he could. But he was a grown man. One with responsibilities and a long-term relationship. He had to put that first.\n\nShe listened to Mark's suggestion and knew that it made sense, but she'd only went a week without hearing about Lana and it was driving her crazy. Just seeing her in that video amplified her torrent of kinky fantasies that she'd been almost enslaved by. With a soft growl in her throat, Jess didn't want to get into a debate with Mark. Cutting Lana off was the last thing she wanted.\n\n\"Babe, no...no we can't. We agreed...\" Jess let her fingers tap against Mark's phone as she spoke. \"Look, babe, I promise you, any girl that sends a video like that to a guy...acting like a fucking slut in the club...she's trying to seduce you.\" She pushed the phone back across the table to Mark. \"But...it's just a video...I think you should let her have her fun...let her get bored...and, eventually...she'll find someone else. To cut her off would still be so mean.\"\n\nMark was dumbstruck, he couldn't believe that after watching that clip Jess was still so insistent. He understood that she was compassionate and didn't want Lana to get hurt, but that clip was scorching hot. \"Jess, I hear what you're saying, I honestly do. But to encourage her to keep sending those kind of clips...It's not easy for me to keep running to you and showing you what she's sent.\"\n\nIn her current state, the last thing Jess wanted was a discussion. All she wanted was for Mark to agree to keep the train on the tracks. And she really didn't like the idea of having to wait another full week for another hit. Gritting her teeth, Jess went straight into appeasement mode.",
        "\"I know, it's...it's weird. I don't need to see her flaunting her tits...\" Her bottom lip hung a little as she wasn't entirely sure if that was true. \"You can just...tell me when she gets in touch...and we can talk about it.\"\n\nFacing Jess, Mark slipped his phone back into his pocket and considered the situation. Of course, it was awkward to show Jess what Lana had sent, each time he did he was convinced that he was setting up his own downfall. But the largest part of him was elated, once again Jess had told him to keep in touch with her and Jess' only concern was that Lana didn't end up ghosted.\n\nMark sighed. \"Babe, of course I'll tell you when she reaches out. But I need you to know, I haven't been asking her to send me anything...she's doing it on her own.\" He shuffled anxiously as he searched for a reaction. \"If she goes further...I don't know. If she's fucking naked, Jess...I'll tell you...but that kind of thing...I just can't put that shit in front of your face.\"\n\nJust hearing Mark describe that possibility kept Jess teetering at the edge of orgasm. Hearing the words come from his mouth just made them more real, a genuine possibility. She slipped her right hand against the edge of the table to steady herself as she pondered it. If Mark wasn't going to show her the messages, would he be masturbating to them in private? Jess knew it, there wasn't a man who wouldn't get hard watching her in those clips. That body, that attitude...those eyes. She turned her head to the side, desperate to conceal any evidence of her arousal.\n\nMark was oblivious, he was too busy focusing on his role in this scenario. \"Jess, if she sends any more...clips...I'll tell you and I'll...I'll do my best to describe them to you...\"\n\nJess didn't just love that idea, she needed it. If she could have stopped time itself and chiselled it into reality, she'd have begged for the chance. Her eyes almost bulged as she kept her head turned, but didn't want to miss the chance to solidify that agreement. \"Yes...yes, that's exactly what to do. If she sends you any more of those fucking videos...just...\" She took a second to clear her throat, her voice a little raspy. \"We'll sit down and you can just...describe them to me. And that way...I won't be in the dark...\"\n\nThey looked at one another and tried their best to accept that it was a normal situation, but it was anything but. After seeing the latest video, Jess was certain that Lana wanted Mark. And she just gave him a free pass to keep in touch with her. Jess had just spent every day of the last week ravaged by thoughts of them together, and her best response was to retreat to the shower and plunge her fingers into her pussy. As Mark turned and walked away, Jess never felt so alive.\n\nRunning late after her talk with Mark, Jess spent the next hour getting ready and headed to Anella's. As she left, she told Mark that she'd text him later when she needed a lift. Anella's house was outside the City Centre, so a taxi home would have been needlessly expensive. Once Jess left, Mark allowed himself some time to work out why Jess was so insistent on protecting Lana's feelings. Knowing he was picking up Jess later on, he didn't drink any of the beers in the fridge and worked on his corporate presentation.\n\nIt was just after 11:00 pm when Mark was only half watching some videos on YouTube when his phone rumbled. Immediately he thought of Jess and remembered that she needed a lift. Scooping the phone up, it was the same unknown number. Even seeing the number on the screen was enough to make his cock twitch at this point. With great anticipation, he clicked into the message.\n\n------\n\nHey you...it's Lana.\n\nHope it's not too late, but I've just finished my shift at the bar and my friend isn't able to take me home.\n\nI know it's super short notice...but could you come pick me up?\n\nThere's a small car park behind the bar, you can't miss it. I'll be there.\n\nIt's surrounded by a certain fence I might have mentioned...I know you remember that...xx\n\n------\n\nMark stood up so fast his head was spinning. On one hand, he didn't want Lana to be stuck on her own with no way to get home, but there was no way he could justify going to meet her. Could he?\n\nHis brain betrayed him, bringing various excuses to his attention. It was a cold, dark Saturday night in the city, and he certainly didn't like the idea of any girl being stranded in a run-down car park at that time of night. He even felt complimented that he was the one she'd reached out to. Then he remembered, she was there right now and needed an answer. He just didn't have time to think clearly...\n\nHaving sent the message, Lana wore a wicked smile as she sat in the front passenger seat of her friend's car. She turned to face her friend, Sophie, the brunette she'd been filmed with in the club the night before, and the two started giggling.\n\nThe car park was small, but deserted. It only had a maximum capacity of 15 spaces and Sophie's car was the only one there at that time of night. An eight-foot tall, green chain-link fence wrapped around three sides of the car park as the staff entrance from Lana's bar opened directly onto it. There were two separate street lights but both were broken. One permanently, while the other's bulb was dimmed and flashed intermittently. Hardly any part of the car park was well-lit and there was a solitary CCTV camera above the staff entrance to the bar, which only offered a sliver of coverage.\n\nLana was wearing her usual work clothes, choosing to match her bar hoodie with some tight black jeans and a simple pair of white Converse trainers. As she sat there in Sophie's car, she'd pulled the zipper on the hoodie all the way up to protect from the cold when she left the bar. As she giggled, Lana allowed her phone to drop into her lap.\n\nSophie turned to face her. \"Did you send it?\"\n\nWith a glint in her eye, Lana looked back and nodded. \"Yeah, I even mentioned the fence...He thinks I'm sitting here stranded, there's no way he doesn't show up.\"\n\n\"You fucking tease!\" Sophie playfully slapped Lana on the wrist over the sleeve of her hoodie, before tossing her head back and laughing. \"Oh my God, you've got your hooks in so deep. That poor guy, you're going to make him explode...\"\n\nLeaning back in the passenger seat, Lana softly bit her lower lip and nodded. \"He still hasn't text me back after you sent him that video of us last night...I'm worried that he might already have exploded...\"\n\nSophie parted her lips. \"Are you kidding me? After that, I'd be amazed if he could make it over here and his dick wasn't still hard as fuck. If he crashes the car, it's your fault.\"\n\nLana started laughing which prompted Sophie to burst into a fit of her own. Above them, the only working street light continued to flicker as a strong, steady wind whipped across the roof of the car.\n\nSophie unclipped her seat belt and turned fully to face her friend. \"But what if you're wrong about his girlfriend? I mean...if you are, she's going to go fucking ballistic...\"\n\nLana had a knowing look in her eye as she swept a lock of hair from the side of her face. \"Oh, you had to be there, Sophie. I mean, my God...the way she just stood there...and watched...\" Lana's words were almost drawling out of her mouth. \"If you saw them together...you'd know. They're young, but they look like they've been together for years. Their mannerisms, the way they're so comfortable touching each other...\" She sat up from the back of the chair. \"So, there's no way...and I mean no way...she would just stand there and take it.\"\n\nLeaning forward, Sophie wanted more. \"Why would she even have agreed to go along with a bet like that anyway? She had to have noticed you. Jesus, Lana, every fucking girl we meet tries to hide their man from you. And she's busy making bets with her friends?\"\n\nLetting her phone slide through her fingers, Lana beamed. \"Noticed me? I couldn't dry the glasses without her eyes all over me. I thought one of those girls she was with would have to slap her...\"\n\nSophie reached across and took the zipper of Lana's hoodie in her fingers and started to tug it down slowly. The zipper had only just reached her cleavage when Sophie paused. \"That's where I think you've got this wrong.\" Taking a second to appreciate the skin that she'd started to reveal. \"You know how much I love these...\" Sophie tugged a little further until Lana's usual work cleavage was almost fully restored. \"Isn't it more likely...that she just wants to fuck you?\"\n\nLana made an exaggerated shocked face before reaching a hand up to meet Sophie's. Her feigned shock gave way to a more authentic, sultry glare as she held Sophie's hand in place, whose fingers still held Lana's zipper. \"That's the thing though. At first, that's what I thought. They way she'd been ogling me...\" Lana's hand pulled downwards, bringing Sophie's with it, exposing another inch of Lana's firm chest. \"Her eyes were just glued to these...\" With that, Lana closed her hand around Sophie's and encouraged her to take a firm grope of her right breast.\n\nSophie exhaled and was only too happy to indulge, before lifting her hand away. \"He's going to lose his fucking mind...when you finally put those in his face...\" Leaning back slightly. \"Just like I lost mine...\"\n\nLana slithered back deeper into her passenger seat and giggled. \"I must have heard her tell at least four different people that Mark was just a friend, and every time she was just...annoyed. Like it was a chore, but no big deal. But I swear, Sophie, when she said it to me, I knew something...something else...was going on.\" Looking up, she caught Sophie's gaze. \"The look on her face when I asked for his number...and how tightly she clenched her thighs together...it was as if I was sucking her clit in front of everyone....\"\n\nSophie gasped and held her jaw open for a second. \"Jesus...\"\n\nEmboldened by Sophie's reaction, Lana kept Sophie's gaze. \"And when he handed me his phone...in front of their whole group...I stared into her eyes for so long, and I could almost taste how badly she wanted it.\" Sitting forward slightly, Lana whispered. \"I could have crawled over that bar with his phone in my hand...dropped to my knees in front of him and wrapped my lips around his hard cock...\" She almost moaned at the thought. \"And I would bet my life...that she'd have came before he did...\"\n\nSophie reached out and grabbed Lana's hand. \"Wow! Oh my...oh that's it! You were right. What a...kinky little bitch she is.\"\n\nLana let Sophie clutch her hand in excitement. \"That's what I've been telling you!\" Lana dragged her fingertips softly against the palm of Sophie's hand. \"But you know me, she isn't the only kinky one...\" She whispered, confidently. \"When he handed me his phone...I was standing behind that bar and I couldn't believe how fucking turned on I was.\" Excitedly, Lana turned and sank back into the seat and raised her knees a little closer to her chest, before letting her feet rest back upon the floor. \"The longer she just stood there just staring back into my eyes...honestly, my nipples could have cut glass.\"\n\nSophie sat there under her friend's spell, feasting on every little detail. \"Holy shit...\"\n\nLana's eyes were almost closed. \"I'm so used to other girls keeping their men under lock and key when I'm just passing through...\" Lana's whisper became throatier as the recollection took hold. \"That night when I got home, after I sent him that first video which I showed you...I was just lying there in bed...dripping wet...\" Her eyes opened and saw that Sophie was engrossed. \"I couldn't stop thinking about how she didn't stop me...wouldn't stop me...couldn't stop me...all those chances she had to stop me...\"\n\nSat in the driver's seat, Sophie had a close enough relationship with Lana where she never even attempted to hide her own arousal. \"You...never! You never get carried away like this. Lana, what the fuck? Baby, I love it...\"\n\nHunching her shoulders as she curled up in the passenger's seat, Lana couldn't settle in place. She was a bundle of energy that couldn't sit at rest. \"Sophie, I stuck my favourite dildo to the base of my mirror...got down on and my hands and knees...and I fucked it so hard the mirror cracked...\"\n\nAs Sophie's face stretched outwards in shock and appreciation, Lana wriggled back up her seat and turned to face Sophie head on. \"And I've been like this all week! It's like she was daring me to make a move...daring me to ask for his number...\"\n\nSophie slipped forward to close the distance and purred. \"Daring you to ride him...\"\n\nThe words made Lana close her eyes and groan. \"One thing's for sure...if that was her way of asking me...\" She let her eyes flutter open. \"She won't have to ask twice.\"\n\nSophie released a small yelp. \"Fuck, I can't get enough of you when you're like this...so this must be why you've been so handsy with me this week?\"\n\nLana started laughing at Sophie's question which brought her back to her senses. Tilting her head softly. \"You know I never need an excuse for that...\"\n\nAs the brief silence hung in the air, Lana's phone rumbled in her lap. She opened the messages tab and it was from Mark. After a telling glance towards Sophie, she scanned the contents.\n\n------\n\nHey,\n\nIt's ok, I'm just chilling at home.\n\nDon't worry about it, I'm jumping into the car now. I can be there in 15 minutes.\n\nI'll try not to run any red lights...\n\nI'll see you in the car park.\n\n------\n\nSophie glanced into Lana's hand. \"Is that him? Is he coming?\"\n\nLana nodded while still staring at the screen. \"What a nice boy he is...\" She allowed herself a chuckle. \"Kinda funny too, that is when he can actually form a sentence when he's looking at me.\"\n\nSophie raised both hands and softly, but excitedly, clapped as she sat in the driver's seat. \"How long will he be?\"\n\nLana looked across at her. \"He'll be here in 15 minutes.\" Looking back down at her hoodie, Lana confidently played with the zipper. She pulled down the mirror above the passenger's seat and used it to help adjust her cleavage until she was satisfied. Confidently, she turned to Sophie. \"How do I look?\"\n\nSophie laughed. \"He has no idea...\"\n\nLana opened her passenger side door and stuck her head out to look around. She knew the bar was closing soon, but also knew that no one but the staff would be exiting into car park. She sat back down in her seat, closed the door and turned to Sophie. \"If you're staying to watch...no lights...no engine...no music. I don't want to spook him.\"\n\nSophie formed a seductive look of her own and shot it directly back at Lana. She pulled her own phone out her bag, which sat on the floor between the two seats, and wiggled it in Lana's face while making little camera sounds. \"I wouldn't miss this for anything...\"\n\nMark had already been driving for five minutes before he allowed himself to recognise what was happening. He felt like half his brain had deliberately switched itself off. His chest was heaving as he sucked down as much air as he could as he wove his way through the streets. He didn't have to worry about the red lights as every single traffic light was green on the barely occupied roads.\n\nIt was approaching 11:30 pm, when Mark's journey came to an end. He pulled around the front of the bar and followed the sign advising a left-hand turn to enter the car park. As he did, he went over his options once more. Jess was at Anella's and she'd be reaching out when she wanted to come home. But he was here, pulling into the car park when he noticed the two street lights above him were seemingly broken. There was a single parked car which Mark crept past as he made his way closer to the staff entrance to the bar. He didn't feel the need to pull into a space as he anticipated Lana would just jump into his car. The only problem was he couldn't see much of what was around him and he certainly didn't see Lana.\n\nSuddenly, the flickering street lamp overhead kicked into gear and shone a weak flickering light down around him. With that, he got his bearings and there she was. Definitely, it was her.\n\nMark stopped the car from its crawling pace and turned off the engine. Straight in front of him, standing with her back against the fence...Lana stood with her arms by her sides as fingers on each hand were reaching through the holes in the fence next to her hips and gripping onto the chains. The wind was strong enough for her long dark hair to blow around wildly, with the zipper of her hoodie pulled just as tantalisingly low as it was when he first met her. The hoodie was short enough that an inch, or two, of her midriff was visible, and he remembered how her tight dress in the club just clung around her toned stomach.\n\nMark sat there still clutching the wheel of the, now stationary, vehicle with both hands, staring as Lana didn't take a single step forward. With the engine off, he could hear the faint noise of the fence clinking and squeaking as Lana softly rocked against it. She was maybe twenty feet away, but he saw her staring right at him...almost staring a hole through him. And still, she refused to take a step forward. Mark let his hands fall from the steering wheel as he contemplated what was happening.\n\nAfter a few moments of standing her ground, Lana's right hand released its playful grip on the fence and pulled her phone from her pocket. She only pressed her finger to her phone twice before she slipped her phone back inside her pocket and let her right arm snake upwards. As Mark watched it rise, Lana's arm rose above her chest and let her fingers slip through some holes next to her right shoulder and she yanked hard on the fence and let her head tilt back. Mark could barely register anything but the sight before him when he felt his phone rumble in his pocket. Reaching for it, it was the same unknown number that had bewitched him all week.\n\n------\n\nIt's time for you to tip me...xx\n\n------\n\nThe enormity of Lana's text hit him but he'd already stepped out of the car and swung the door shut before his brain started working. Achingly, his cock was rock-hard and was experiencing none of the dilemmas curtailing his ability to resist. He paced towards her until she was close enough to touch. Staring at him, Lana tightened her grip on the fence, theatrically, and let a teasing moan escape her lips. She had an almost hypnotic look in her stunning brown eyes and Mark shot his hands out and clutched both of her hips. Lana squeezed her hands around the chains of the fence as Mark pushed her back into it with need.\n\nShe whispered huskily to him. \"When I told you about what I got up to...right here...against this fence...\" Lana took a short breath as she felt Mark's clutches grope her hips with intent. \"And the way you fought to keep your eyes off these tits...that's when I knew...I was going to play with you...\"\n\nMark took a half step back with his hands clenching her hips so tightly. He tried to compose himself and keep them right there, unsure that if they wandered that he'd be able to stop them. If he would even want to stop them. He whispered back to her. \"You've played with me for over a week...those texts...those clips...the way that dress clung to you in that club...\"\n\nLana hissed with glee as Mark's hands were groping and releasing her hips methodically, firmly. As the chains of the fence pressed into her back, she pressed her lips to his ear. \"There isn't a man alive that I can't have in that dress...\" Lana held her breath for a moment as she craved for Mark's hands to roam. \"That was my good friend Sophie...I told her all about you...she loves it when I get so worked up and I just can't keep my hands off her...\"\n\nWith a jolt, Mark tugged Lana's hips towards him before pushing her back into the fence. Lana let out a slight groan as she felt her feet leaving the ground for a brief moment before whispering back into his ear. \"I knew that little kiss was going to drive you crazy...\" Still gripping the fence, Lana pressed herself forward until her groin pressed against the bulge in Mark's jeans. \"Tell me, Mark...when you watched me pin her to that wall...and slip my tongue into her mouth...was your dick as hard as it is now?\" Lana tossed her head back and giggled as she stood there clutching the fence.",
        "Mark was slack-jawed as her words started to overpower him. He took a deep breath but her perfume smelt divine. Releasing her grip on the fence, Lana pressed her hands on his chest and spun Mark around, his back pressing softly into the fence and Lana stepped in front of him. With a firm, but playful, push, she shoved him back into the fence and let him spring back towards her. Slowly, teasingly, she turned her back to him and pressed her ass stiffly against his groin. Her cheeks were almost implausibly tight and pert, while her tight black jeans did nothing to dampen the effect as Lana started to slowly grind against his hard dick. Following her lead, Mark dropped his hands to his sides, let his fingers slip through the holes of the fence and gripped tightly.\n\nWith her back to him, Lana let her eyes roll upwards and gasped as she felt him press against her. She felt every inch of him begging to be set free as she ground her cheeks so slowly against him. Mark pulled tighter on the fence as he tried to pace himself. Her grinding was so slow, but so hard and her rhythm was starting to settle.\n\nMark whispered. \"Is this how you normally like to play...make me watch as you danced with that girl...groped her...kissed her...knowing how hard I'd get?\" Relaxing his grip on the fence slightly as Lana's grinding got slower. \"...or am I special?\"\n\nPlayfully, Lana pressed her back tighter into his chest and tilted her head back. Her left arm snaked upwards and tilted his head downward to stare directly at her barely covered breasts. \"What was special...was when that girl had me pressed so tightly against this fence...the way she dropped to her knees...\" Lana slipped her right hand up onto her chest and teasingly groped her right breast as she trapped his swollen dick against her tight ass. \"What was special was the way she slowly ran that tongue of hers across this tight little pussy...sucking so softly on my clit...until I fucking exploded...\"\n\nPicturing the scene as best he could, Mark started thrusting his hips forward and grinding back into her ass. As soon as Lana felt him, she was elated as she sensed he was starting to losing control. Lana hissed. \"I wonder...just how badly...those hot friends of yours...would want to switch places with me right now?\" Lana lifted her right hand to the zipper on her hoodie and let it hover. \"Pressing their tight little asses into that rock-hard cock...I can't believe they've never tried...but it's their loss...\"\n\nHe watched intently as her hand hovered teasingly over the zipper before she let her hand fall back to her side. Mark's groan was a mixture of exasperation and pleasure as her ass kept rocking searchingly back and forth across his groin. Lana whispered over her shoulder. \"Oh yeah...I remember meeting them all...but one of the blondes...there was something about her...those green eyes of hers...and that ass...\" Lana thrust her chest out and made sure Mark's eyes followed its every move. \"Was it...Anella? No, no...how could I forget...\" Lana felt her eyes close tight as she prepared to utter her name. Taking care to slowly scrape her ass across Mark's dick as she said it. \"It was Jess...\"\n\nAs the name popped out her mouth, Mark gritted his teeth as he realised how close he was to throwing his relationship away. He sucked in a deep breath as he pressed his head back against the fence and he pulled and squeezed at the fence with both hands. As he did, Lana kept up her slow assault with her ass. Her nipples were so stiff as her pussy grew moist. \"Imagine if I met Jess just an hour earlier that night...maybe it would have been Jess...who would have been pressed against that fence you're clutching...\"\n\nMark couldn't believe what he was hearing, he'd pictured it momentarily that night in the bar and almost blew his load at the idea. Lana drove the idea home; she couldn't resist it. \"Imagine her watching me with those stunning green eyes...as she dropped to her knees...right here in this spot...\" Mark released his grip on the fence and shot his left hand to her hip and clutched it tight, letting it ride with her hips as she continued her grind. His right hand had ended up on her ass and he closed his hand firmly, hungrily around her cheek. Giggling seductively, Lana continued. \"How long do you think I could last...with my thighs wrapped around that pretty face...\"\n\nThe image was so sharp it was, momentarily, numbing. His hands trapped on Lana's hip and her ass as he saw Jess in his mind. He saw Jess dropping slowly to her knees as her back scraped against the fence. Mark pictured Lana wickedly slipping her panties down and firmly pulled Jess's head between her legs. In reality, he pressed his back harder into the fence as his mind showed him the sinful image of Lana's legs wrapping around Jess' head.\n\nIt was too much. Lana's words had broken him. Mark shot his right hand up from her ass to the zipper she'd been mercilessly teasing him with. Clutching it in his fingers, he yanked it down as far as it would go until the hoodie flew open. Lana yelled from the back of her throat as her white lace bra was fully exposed. Arching her back, she felt the strong, cold wind whip across her chest until Mark reached up and grasped both breasts in his hands. They were firm, but as he groped longingly at them, they responded to his clutches and allowed his fingers to sink deep into them. Lana couldn't get enough of it and held his hands in place, moaning as his dick remained trapped against her denim-covered ass.\n\nShe groaned out. \"Yes! That's it...just like that...oh, squeeze them just like that, babe. Grind back into my ass...feel how tight this ass is against that big cock...\" Lana's chest was rising and falling much faster, he could hear her sucking in the cold air as he felt each breast so tightly. \"Now I wonder...what is it about that little fantasy...that's got you so hot and bothered?\"\n\nAfter a few seconds of ecstasy, Lana stepped forward quickly and spun to face him. She clutched at his t-shirt and pulled him forwards to create space. Hopping upwards off her feet, she jumped into his lap and Mark shot his hands under her ass to support her weight. Lana responded by wrapping her legs tightly around his waist, when Mark spun holding her and pushed her back into the fence. Biting her lip, both Lana's hands gripped the fence just below her shoulders. With her steadied, Mark lifted both hands from her ass and slammed them onto her wrists, pinning them tightly to the fence.\n\nWhen Lana felt her wrists get pinned, she almost purred with delight. \"You've got no fucking idea how much I love that...I can assure you, my collection of stainless-steel handcuffs...is absolutely stellar...\" Their lips were so close to one another's as Mark's erection was demanding her touch. Lana whispered at him. \"Or do you still think I'm fucking with you?\"\n\nMark felt goaded, teased half to death, and he'd had enough. Pulling his hands from her wrists, Lana kept her hands clutching the fence as she felt his hands return to her chest. Mark's fingers slowly pulled the cups of her lace bra downwards, eventually freeing her hard nipples to the cool evening air. With a final squeeze of her thighs around his waist, Lana knew she'd broken him. She'd taken him.\n\nWith her nipples exposed, she felt his hands close around her breasts once more. With her back against the fence, her mind fed her thoughts that just made her wetter. She'd heard them make that innocuous bet and here they were. All because Jess said they were just friends. All because Jess didn't stop her. For a brief moment, Lana visualised Jess standing there watching them. Close enough to reach out and touch them. Jess standing there as she did when Mark handed Lana his phone in the bar...thighs clenched...dripping wet...panting with need. Lana's wicked mind painted a further picture, as Jess slowly lifted her hand and let her fingertips dip below the waist of her skirt as Mark teased Lana's hard nipples.\n\nLana couldn't help it and let out a guttural roar before leaning forward and crashing her lips against Mark's. The kiss was so intense they struggled to find each other's rhythm, with Lana's moans yet to calm from a moment earlier. Her breasts were trapped in his clutches as her hard nipples scraped pleasingly against his palms, as Lana's lips parted and she swept her tongue forwards until it met Mark's lips. After she flicked the tip of her tongue across his lips, Mark groaned as he allowed her to slip her tongue into his mouth. Her hands clutched the fence as if her life depended on it, thighs squeezing his waist so hard she could have sworn that he'd break clean in half. After the frenetic start to the kiss, Lana finally managed to slow the pace and caught Mark's bottom lip between hers, teasingly allowing to break free before her tongue slipped back against his. Every time he slowly groped at her breasts, he would thrust his hard cock hard against her groin, drawing moans and gasps from the seductress wrapped so tightly around his waist.\n\nShe was in heaven, but Lana broke the kiss as Mark's hold on her breasts was driving her close to the edge. She tilted her head back until it pressed against the fence, prompting Mark to lean down and wrap his lips around her left nipple. As she felt the tip of his tongue lightly dance against her bud, she moaned as he applied more pressure and let his tongue run firmly back and forth across it. As both lips surrounded her engorged nipple, she squeezed the fence for dear life as he sucked slowly and longingly at the same breasts which she used to place him firmly under her spell.\n\nLana let him suck and caress both breasts in turn as she felt herself being rocked back into the fence. Sensing he was lost in the moment, she whispered to him. \"I told you...I needed a lift home...\" Biting her lip as she felt her nipple being teased firmly by his tongue. \"Take me home...I promise you baby, you're so close...you're so close. All you have to do...is play with me...\"\n\nAs the clock ticked past midnight, Jess took a long sip of her favourite cheap red wine from the glass in her hand. Anella was sat on the couch with Jess and they'd embarked upon their second bottle of wine by this point. Anella's one-bedroom flat was cosy, but there was hardly any living space. Despite that, Jess' best friend had done an admirable job of making it feel like home.\n\nAnella glanced at Jess. \"I just don't understand where she gets so much confidence from? I mean, Jess, she's...she's something else. I get it. But, did she have to act so fucking...arrogantly?\"\n\nJess gulped her sip of wine after swirling it around her mouth to savour it. \"I know, I could never be so...forward...if I was talking to a guy for the first time. When I met Mark, I just felt so shy talking to him.\"\n\nAnella nodded. \"It must have something to do with working in a bar. Maybe she just meets guys every night and is so used to them hitting on her. And no wonder, she's practically putting those tits in everyone's face all night. Jess, there's no way those things are real. Her frame's so slender, but those tits are just...\"\n\nJess reached across and grabbed Anella's arm. \"Definitely. I'm not throwing shade at her for getting them done, but when you told me Mark was talking to her, and I looked around, the way she was leaning over that bar at Mark...\" Jess brought her wine glass to her lips and took another sip. \"I just...I just...Anella, it was that fucking bet you guys came up with!\"\n\nAnella placed a hand atop Jess' as they sat on the couch. \"Jess, it's like you said earlier, we were just trying to have a little banter, have a little fun with it. I know it seems stupid now, but when I introduced us to her, to Lana, I never thought...I mean, I never thought...you'd tell someone like that...\"\n\nJess listened as every word chipped away at her. Having her best friend spell out the obvious to her wasn't exactly doing wonders to reinforce her confidence in her own version of events.\n\nShaking at Jess' arm, Anella finished her thought. \"Come on, Jess! She's fucking gorgeous! Yes, she's arrogant, and direct...and confident...and there's something about her...but come on! There's no way I'd tell a girl like that my fucking boyfriend was just a friend...to win a bet?\"\n\nSat on the couch, Jess squirmed a little as she ground the cheeks of her ass into the cushion before leaning forward. \"Don't worry, don't worry...Anella, it's fine. I get it, I know it was cringe as fuck to go along with it, but once we left the bar, that was it. There's no reason for him...for us...to humour her...and it's not like we're going back there again.\" Jess took a breath and looked into Anella's face. \"I told Mark that I felt bad that we basically lied to her...and that we've led her on...It's not her fault for asking...she didn't know.\"\n\nAnella shuffled closer. \"All the years I've known you, I'm your best friend in the world. And I'd have bet everything I've got that you would have told her the truth.\" Anella took a quick sip from her own glass. \"Jess...I'm completely straight and even I'd have kissed that girl! Lucy and Emily said the same thing...\" She softly swirled the glass in her hand. \"If she's had that kind of impact on me after five fucking minutes, can you imagine what the guys are thinking? Letting someone like that...just take Mark's number...to me...it's like tossing your relationship up into the wind...and seeing if it'll come back to you...\"\n\nJess pondered the idea as Anella laid it out and it scared her, for a moment, before she pictured her relationship floating away and felt the heat between her legs. Each and every time this kink had taken a hold of her, Jess' felt a brief cloud of shame descend around her. Sat with Anella, that shame lingered for a little longer than it had when she'd been bringing herself to orgasm every night in her shower.\n\nAfter a moment lost in her thoughts, Jess stirred and responded. \"Speaking of coming back to me...I'm gonna text Mark and ask him to pick me up.\" Lifting her phone, Jess tried to lighten the mood. \"Besides, I don't think there's a wind strong enough to blow Mark away!\"\n\nSwiping the phone open, Jess punched in a short message asking to be picked up and sent it without thought. Placing her phone back into her pocket, Jess leaned over to the table and opened the bottle of wine and topped-up her glass. The two continued talking as the minutes ticked past which went from minutes to an hour.\n\nWhen Mark hadn't replied, the girls theorised that he'd likely fallen asleep as it was late. Instead of paying for an expensive taxi, Anella offered Jess the chance to sleep on the couch and they'd have a nice breakfast together the following morning. Having agreed, Jess was preoccupied as Mark was incredibly reliable. If he said that he'd be there to pick her up, invariably, he did exactly that. But Anella's assurances that it was late and that he'd be asleep took hold and Jess accepted it.\n\nWith a fumble, Lana shook the key to her front door around the lock as she held lightly onto Mark's hand. As she pressed the front door open, she glanced over her shoulder and shot Mark a smouldering glance before she stepped inside and led him by the hand into her living room. Bending to flick a small lamp on, her living room was immaculate. There wasn't so much as a couch cushion out of place. Mark glanced around but couldn't take anything in. He was standing in her living room...he'd went home with her...and there was no turning back.\n\nLana almost slithered back to him as they stood in the middle of the room. Her hoodie had been zipped back up in Mark's car, but she stared him dead in the eye as she pulled the zipper down and slipped it off her shoulders. Clad in just her white lace bra, she leaned in and peppered Mark's lips with small, slow, teasing kisses as she let her hands grip the base of his black t-shirt. Lifting upwards, Mark raised his arms and allowed her to lift it up and off, tossing it to the side with her hoodie. She leaned in again and pressed her chest into his, letting the fabric of her bra tease his skin, and flicked her tongue across his lips. She stood back and reached to the top button of his jeans and skilfully freed it open.\n\nLana stepped further back and appreciated the sight. Looking to him, she spoke, confidently. \"Take the jeans off...the trainers...the socks...\" Still looking into her eyes, Mark pressed a foot into each opposing heel and prised each of his black trainers off, before reaching down to yank each sock free and letting them fall to the floor. Straightening back up, Lana watched as he put his hands to his jeans and quickly pulled them down before stepping out of them. All Mark had left were his black Calvin Klein boxers, as his blue eyes were locked on Lana's chest. Lana couldn't help but appreciate the bulge in his tight boxer shorts as Mark's dick was fully erect and straining to be released.\n\nQuickly, Lana lunged forward and took Mark's hand, before turning and leading him towards her bedroom door. Her other hand slipped onto the handle and she pressed downwards to open the door, before stepping inside and pulling Mark in. It was dark inside and the only light that helped Mark get his bearings came from the lamp in the living room. As he squinted, he could see the arrangement of her bedroom and saw he was standing next to a double bed. He'd barely started taking a look around when two firm hands pushed his chest, leading him to fall back onto her mattress that was covered with an expensive feeling bedsheet, with no duvet cover in sight. Instinctively, Mark shuffled backwards until his head was positioned by her headboard and he lay there staring at Lana, propping himself up with his elbows. Lana crept slowly onto the bed and ran a hand across his bare chest, before leaning in and running her tongue across his stomach. Her lips puckered and she trailed small kisses up his chest and neck before she crawled into his lap and straddled him.\n\nStill in her black jeans and tight white push-up bra, Lana felt the hardness of his cock press against her as she allowed herself a slow grind. Slowly, Lana leant forwards and pressed the tip of her nose against Mark's as she reached out and placed her left hand on his right wrist. With a glint in her eye, she lifted Mark's wrist to meet the headboard and he watched as she reached with her other hand into the darkness. His curiosity was answered as he felt the cold, stainless-steel of her handcuff wrap tightly around his wrist. Reflexively, Mark tested the bond and there wasn't much leeway. Lana's headboard was comprised of various vertical metallic bars and Mark was cuffed tightly against it.\n\nAs she slipped the steel around him, the clicks of the handcuff locking into place caused Lana to groan as she bent down and slipped her tongue back into his mouth. Mark's desire had peaked, as soon as she mentioned the handcuffs in the car park, he had longed for it to be true. He kissed Lana back as he felt her slowly grinding into his lap. Breaking the kiss, Lana reached for his other wrist and slowly raised it to the headboard, before Mark closed his eyes and felt the cold steel trap his other wrist in place.\n\nWhen both cuffs were applied, Lana looked down as she straddled his lap and continued to grind painfully slowly. \"If you knew...what I know...\" She bit her lip as she found the perfect spot to grind on his dick. \"You'd understand...just how badly...I need you to play with me...\"\n\nMark tried to sit up but the cuffs were so tight and Lana's weight in his lap kept him in place. Lana looked like she was in a trance through the darkness, like a strong breeze would be enough to bring her to orgasm. Suddenly, she wriggled her hips and slipped off his lap, slithering further down the bed as she placed both hands on the waistband of his boxers. She let him ponder her next move before she offered a single, firm tug and pulled them a significant way down his thighs.",
        "As soon as he felt the tug, the full length of his raging hard dick was freed and throbbing with need. It stood straight up in the air as he felt his boxers still in place just above his knees. The moment had come and he cried out. \"Fuck...oh fuck...\" The hard steel surrounding Mark's wrists clanged against her headboard. \"Oh, babe. Please, Lana...\"\n\nLana knelt there and stared as his cock was an inch away from her face. Every single fibre of her being demanded that she wrapped her lips around it right there and then, but she closed her eyes and took a breath. Mark's dick must have been over seven inches in length, but was thick, it had girth. She knew, instantly, that it was perfect. Lana reached for his boxers and teasingly slipped them down his legs, slowly, then tossed them aside. Mark was thrusting his hips against thin air, when Lana slipped off the bed and tiptoed to other side of the room. He squinted to make her out when, suddenly, he heard a switch and the room became filled with light.\n\nLana was standing next to a lengthy tripod that was holding up a small DSLR camera, which Lana was tracing a fingertip across. With her eyes feasting upon his hard cock in the now well-lit room, she purred. \"When it's time to play...I record...every...single...thing...\" Just saying the words caused her to take a deep breath as she felt the need between her legs.\n\nMark struggled harder against the steel as his heart nearly burst out of chest. But he couldn't think straight, he didn't care if the world was ending around him, he needed release. Again, his hips began to buck against thin air as his dick throbbed at its absolute peak. Lana revelled in his struggle and returned to the bed. Slowly, she reached out and took his cock in her hand for the first time and felt the heat. She felt it throbbing, pulsing with desire. Looking up at him as she slowly started to stroke it, she whispered. \"Do you still want to play?\"\n\nThe sensation of Lana finally giving his dick what it needed made Mark cry out and moan, however slowly she was doing it. \"Fuck! Oh my God...yes! Do it...please...do it...I'll play...I'll play.\"\n\nLana lifted her hand from his cock and stood slowly from the bed. Mark was grunting in frustration and bucking his hips wildly against nothing. All the while, the sound of the steel cuffs battering against her headboard were pure bliss to Lana. Stepping backwards to her bedroom door, Lana whispered. \"Sit right there...I'll give you a moment to cool down and I'll slip into something...more appropriate...\"\n\nAs she slipped outside the room, Mark gave his cuffs an almighty tug and they didn't budge. The steel was clasped tightly against his wrists and they were only fanning the flames of his arousal. After only a few seconds, he was tempted to call out for her but bit his tongue. Mark's dick was so hard, he'd never known anything like it. After a few short, but agonising, minutes, Mark had barely begun to consider why she'd left before she crept slowly back into the bedroom.\n\nThe sight would have floored him if he wasn't lying there tied to her bed. Lana's perfect breasts were pouring over the top of a tight black lace bra, the cups barely containing her breasts were an alluring deep purple satin. Mark's eyes dropped down her taut, tanned stomach and saw a tiny matching pair of black satin panties that barely covered a thing. The sides of the panties were so thin he was convinced he could snap them clean off her hips. Lana's stunning lingerie set was rounded off with a pair of black thighs with no suspender belt. The bare skin of her upper thighs was so inviting and he longed to press his lips against them. As she glanced to the side, Mark was in awe as her hair was tied back up in the same slutty ponytail she wore in the club. Mark knew it, from head to toe, Lana was perfection.\n\nHe rattled the cuffs in desperation but he was going nowhere fast. Lana had built his need well past breaking point and she smiled as she slipped across to her DSLR camera and set it to record. With a final press of the buttons and a confirming stare through the viewfinder, the camera started recording.\n\nA few hours later, the clock ticked past 4:00 am as Jess lay sleeping on Anella's couch. The previous week hadn't really yielded much sleep for Jess as every time she tried, she couldn't shake the same tortured fantasies that had plagued her each night. Jess slept in her own white t-shirt, but had borrowed a comfortable pair of pink pyjama shorts and was sleeping off the glasses of wine she'd enjoyed that night. With a thin cotton blanket draped over her, Jess' head rested on Anella's spare pillow as her chest rose and fell slowly. Her sleep hadn't been deep, so when the rumble of her phone vibrated on Anella's coffee table it woke her immediately.\n\nAfter taking a second to get her bearings, Jess realised where she was and grabbed her phone. As she lifted it, she anticipated it was Mark apologising for not picking her up. Swiping with her right thumb to open the menu, Jess was shocked to see the text was from an unknown number. Suddenly, Jess sat bolt upright on the couch and she pieced the answer together in her mind. It had to be her, but it couldn't be...how did she get her number?\n\nAgitatedly, Jess tapped into the messages tab and clicked on the message. There was no text itself, but there was a video clip attached. Jess almost yelped, but she battled to keep her voice down with Anella in the other room. She stared at the preview thumbnail but it was pitch black, it didn't contain a single clue of what Jess was holding in her hand. With her mind racing far too quickly to keep up with it, Jess felt she couldn't breathe as she tried to work it out. Terrified to view the clip, Jess took a deep breath and realised...Mark...she must have got her number from him...which meant he had to be with her...\n\nLeaning forward, Jess felt herself slip down off the seat of the couch and her butt hit the hardwood floor of the living room. Her back was pressed against Anella's couch as her shock started to morph into something far more sinister. She never felt that she could be turned on more than that night in the bar, but just the idea that this was real...that she wasn't dreaming...was cranking things to an unimaginable level. As her wetness built suddenly, Jess felt her nipples harden under her shirt and she clenched her thighs together. She couldn't do it here, not in her best friend's living room. It simply wasn't an option. Panting, desperately, Jess summoned the strength to open the video.\n\nSuddenly, Jess was looking straight at Lana. She was standing in a fairly well-lit room and looking directly at the camera. It looked to Jess like she was standing in her living room as she glimpsed the edge of a black leather couch in the background. Lana's long, dark hair hung freely down her back but was noticeably ruffled. There was a glow to her skin, as if she'd been perspiring. As if she'd been working out. Except she was stood there in a skimpy white lace bra that looked like it was part of an expensive lingerie set. Jess had a clear view of those wicked breasts held tightly in the bra, threatening to spill out and into full view. Her bottom half was clad in a tight pair of grey pyjama bottoms, with a white drawstring dangling from her waistband. Jess was confused, but she never fought the idea that Lana looked absolutely sensational.\n\nEvery frame of the video had Jess feeling that Lana was staring into her eyes. It was after five, maybe six, full seconds before Lana spoke. \"Hello, Jess...\" Hearing her name, Jess clenched her thighs as tightly as she could and stared at the video.\n\nLana stood in front of the camera and continued. \"The time's come for me to tell you...that I know all about your little secret. You know...at first...I thought, with the way you were staring at me that night, that you were just into me.\" Lana's right hand slowly crawled up her flat stomach as she softly caressed her breast over the bra. \"But the way you stood there...watching me...as Mark handed me his phone...I could practically smell how turned on you were...\"\n\nLana's breath started to quicken as her hand fondling her breast took a long, slow grope. \"I have to tell you...all week long...I can't get it out of my mind.\" Lana bit her bottom lip and purred. \"And I loved every fucking second of it...To think, I was standing right there when your friends made that silly bet...and I heard every word. Every detail of it. Oh, I love...I just love to play games...\"\n\nAs Lana systematically brought Jess' secret...her kink...out of her head and into the world, Jess was convinced her heart had stopped. All she could feel was her pussy commanding her to bring herself back to orgasm. She stared achingly at the screen.\n\nLana stood there, allowing her fingers to clench and squeeze around her breast as she spoke. \"It's been over a week and I've been dying to know...are you still telling yourself that you were just sticking to the bet?\" A soft, wicked, giggle burst free from Lana's full lips. \"But I know the truth...I knew it the moment you stood there...watching me take your boyfriend's number...clenching those thighs...staring at me...trying so, so hard...not to cum...\" Lana let her eyes close tightly for a brief moment as she struggled to get through her own message knowing how wet her own pussy was. \"That's the moment I knew...you wanted it so fucking bad...\"\n\nAfter slowing her breathing, Lana continued. \"Just how long do you think that any man...your man...could've held out...when I started hitting on them...so fucking hard...\" Lana gave her breast a firm squeeze and softly pulled the cup of her bra down to reveal just how hard her nipple was. Holding the position for a moment, Lana let her fingers snap upwards and tug slowly, but firmly, at the erect bullet. \"You're such...such a kinky bitch, Jess...\"\n\nLana moaned as she tugged at her nipple and fought to regain her focus. \"Let me tell you what's gotten me off all week...When you said those words to me, Jess...that Mark...was just a friend...It was as if, you were daring me to do it...daring me to take him...daring me to fuck him...\"\n\nLana could barely say it without taking a long, hard tug of her sensitive nipple before groping the full breast in her palm. \"Well...as I said to my friend...you won't have to ask twice...Mark's a little tied up right now...But I wanted to send you something...that I know...deep in my fucking bones...that you need to see...\" With that, the video ended and looped back to the beginning.\n\nJess sat there on Anella's floor audibly whimpering with pure, unbridled lust. She felt her head start to drift from side to side as she tried to take it all in. Lana knew. She knew about them. She knew about the bet...but at that moment, all Jess could think about was that Lana knew about her...and that she wanted this...\n\nAs the video started to play for a second time, Jess was pulled back in by that sultry voice and those stunning brown eyes. Jess tried to analyse every word, frantically hoping that she'd missed something. But the same clip played and Jess sat there listening to Lana's teases, watching as Lana toyed with her breast and jerked and pulled at her own nipple. Desperately, Jess glanced towards Anella's bedroom door and saw it was closed tightly. Before she could succumb to her urges, the phone rumbled in her hand and the same unknown number had sent a follow-up message.\n\nWas it true? Lana had all but outright said that Mark was with her. That he was a little tied-up? She couldn't take it. Jess had to know and she hungrily swiped at her phone and opened the message. Once more, there was no accompanying text...just a video clip. Panting, Jess double tapped and the video played.\n\nThe camera was pointed directly at a double bed and the sight of Mark lying there, completely naked, his dick throbbing hard and twitching against thin air...Jess couldn't take it and grabbed the side of her borrowed pink shorts. With her left hand holding the phone close to her face, Jess tried to lift her ass to pull the shorts, but it was a struggle. The shorts only made it halfway down her right thigh before her eyes were pulled back to Mark, writhing, bucking, on the bed alone as Jess heard the cold steel of the handcuffs rattling against the metallic bars of the headboard. Her eyes were drawn to the thin bands of shiny steel clamped so tight around both of his wrists and her mind burst into pieces. Mark was moaning softly; scratchy little groans were coming from the back of his throat. Suddenly the clip ended after only ten seconds and looped back to the start.\n\nJess groaned out in frustration. \"No...no...fuck...don't stop there. Fuck! Don't stop...there...\"\n\nAs the same short clip played, Jess sat up just enough to get the shorts down to her ankles and she kicked them off, violently. Immediately, without hesitation, Jess plunged her right hand into her black panties and let her fingers slip down to the base of her dripping pussy, before dragging them roughly all the way back up to her clit. With her back to Anella's couch, she flung her head back for a moment with her eyes closed as Jess started to rub at her clit. It felt incredible and she was on the verge of orgasm after barely touching herself. Lifting her head, she studied the clip as it played in her hand, over and over. The love of her life lying there, handcuffed, desperate to cum. And she knew who was there with him.\n\nThe short clip had looped over ten times before Jess felt the rumble in her hand. Her eyes widened, knowing, that in that moment she'd have killed to see more. She had to see more. Again, the text was from the same unknown number. Jess double tapped and the next video played.\n\nThe camera hadn't moved, and neither had Mark. He lay there writhing, but this time, Lana was there. Jess watched with her jaw open, panting, as Lana was clad in that stunning black lingerie set. Lana's eyes were locked on Mark's as she crept onto the bottom of the bed and slowly, agonisingly, made her way up to his lap. Mark's moaning grew louder and Jess could hear the clanging of the steel. Slowly, with her hair tied up in that ponytail, Lana reached out and took Mark's cock lightly into her grip. Looking up the bed at her plaything's wrists trapped against her headboard, Lana took a deep breath and slipped the tip of her tongue against the base of his cock. After a long, torturous delay, Lana let her tongue slowly lick the full length of Mark's dick, allowing the tip to rest on his bulging head.\n\nWatching as Lana's tongue tormented her boyfriend's cock, Jess clutched two fingers together and pressed them deeply into her wet opening. She opened her legs wide, with her knees pulled up to her chest, and started pumping those fingers in and out of her wet pussy at a breakneck pace. Jess squealed, desperate for her own orgasm, knowing once and for all that it was happening. Mark was cheating on her...and she was sitting there like a kinky slut who couldn't get enough of it.\n\nOnce more, the clip ended well before Jess was ready. She withdrew the fingers from her hole and started teasing her own clit as the clip replayed. Lana creeping onto the bottom of the bed as that lingerie accentuated her flawless body. All Jess could do was moan, alone in the dark.\n\nThe clip was longer than the first, so only replayed a few times before she felt the same rumble in her hand. Jess felt cursed as her craving for more appeared to be satisfied. She was hitting the buttons on the screen so fast she almost loaded the preceding clip by accident, before chastising herself and loading the new video.\n\nSuddenly, Lana was straddling Mark's lap in her lingerie. The lace of her black thigh-highs was pressing into Mark's hips as her legs had closed on either side of him. Slowly, as Lana looked into Mark's eyes, she reached behind her back with both hands. Tellingly, Jess watched as she saw Lana grinding slowly, but so hard, onto Mark's rock-hard cock with just those thin panties keeping him at bay. Time seemed to stop for both Mark and Jess as Lana unhooked her cleavage bra and, finally, freed her breasts. They were mesmerising. Stunning, 32DDs standing proudly on Lana's chest. They barely sagged as Lana freed them from the bra and her nipples were enticingly erect. Slowly, Lana leant down and slipped a hand to his cheek, before bringing her lips against his and trapping him in a smouldering kiss. As Mark's lips parted, Lana's tongue slipped past them and into his mouth, letting her hard nipples drag lightly across his chest before pressing them hard against him as their tongues met. Lana's headboard started to shake as Mark strained with all his might to get free.\n\nJess sat there furiously rubbing her enflamed clit as she watched Lana drop her black lace bra on the floor, but called out, whimpering, as she saw their lips close upon one another's. The moment Lana's tongue slipped into his mouth; Jess throatily begged. \"That's my...that's my fucking boyfriend...fuck...oh fuck...\"\n\nJess tried to pull her panties down, but they got stuck on her thighs as the shorts did moments ago. She didn't have a second to waste as she watched their tongues roll around, so softly, and grabbed the side of the panties and pulled them with such force that they tore free, leaving a red welt on her hip. As the cool air of Anella's living room greeted Jess's dripping wet pussy, she plunged two fingers back inside herself and called out softly. \"She's kissing him...oh fuck...she's kissing him...stop fucking kissing him...\"\n\nMomentarily, Lana did stop the kiss as the video ended and looped back to the start. Suddenly, Jess is watching Lana straddling his lap once more as she reaches behind her back and unhooks the bra. Jess took the time to look at Mark's face as he saw Lana's breasts fully exposed for the first time, and all she saw was his furious desire. Jess' hand was coated in her juices as she watched Lana swoop back in to repeat the kiss.\n\nStaring at the phone as the same clip looped over and over again, Jess was trying so hard not to erupt all over Anella's floor. Dreading the fact that her best friend could walk in on her, but also, Jess knew what she wanted to see. She knew what she wanted to push herself over the edge.\n\nAfter a maddeningly slow few minutes, the phone rumbled once again in Jess' left hand and she pulled her hand from her pussy to concentrate. Biting hard on her bottom lip, she saw the new message sit atop the messages tab and accessed it. As soon as she saw the video thumbnail, she double tapped, craving to see what was next.\n\nThe video played and Mark lay there still bound so tightly to Lana's headboard. Now, Lana had freed herself from his lap and was standing at the side of the bed. Her tight, pert cheeks were facing the camera as Lana turned her head to stare at Mark's hard cock. Jess watched, enthralled, as Lana slipped her hands to her tiny black panties and slowly slipped them down her thighs, past her knees and kicked them off. Jess was furiously rubbing her fingertips across her hard clit as she contemplated what was about to happen. Jess had pulled her t-shirt up and bitten down on the fabric to try and stifle her moans, but it was ineffective. She couldn't stop herself from crying out, \"Ugh...please...oh my God...please...do it...do it...\"\n\nHearing the words from her own mouth made Jess think she was a monster as Lana climbed to the top of the bed, before turning and facing down towards that throbbing hard cock. With a seductive wiggle of her hips, Lana positioned her own wet pussy directly above Mark's lips and dropped down hard. Jess heard Lana groan like a slut as she slowly rode her boyfriend's face, but Jess couldn't see from that angle just how Mark was pleasuring her. The sound of the handcuffs clanging against the headboard was starting to take a backseat to Lana's moans as Mark's lips started to suck softly against her clit. Opening her eyes, Lana allowed herself to lean forwards as she gyrated on Mark's tongue and came face-to-face with his hard dick. Teasingly, she slowly wrapped her plump lips around his swollen head and Mark let out a huge groan with Lana's pussy grinding against his face.",
        "Spurred on, Lana let her lips drop while sucking on Mark's cock until they made it half way down his shaft. Mark's groan gave way as he called out. \"Fuck...yes! Please...Lana, baby...please...I need it...I need it...\" Lana held her lips in place as she sucked devilishly on his cock, then let them slither tightly back up to the head before plunging down the full length of his cock to let it crash against the back of her throat.\n\nThe blowjob had barely begun before the clip ended and Jess shrieked with frustration. The sight of her man's cock disappearing past those sexy lips had Jess fucking herself like a maniac. Now she was watching the beginning of the same clip as it repeated and Lana's panties were being peeled from her thighs and kicked to the side. Jess had plunged both fingers back into her opening, right up to the knuckle, and was almost delirious as her face was flushed red and dripping with sweat. She was almost incoherent as she teetered on the brink. \"You fucking tease...you bitch...what the fuck is happening to me?\"\n\nWhen Jess felt the rumble in her hand, she thanked all that was holy that she'd have the chance to see more. Even if it was just a single solitary second more of the footage, she needed to see it with all her being. There were no panties left to retrieve her hand from as they lay ripped to the side. Jess sat up a little straighter with the couch digging into her back and saw the new message. Quickly, Jess opened it and double tapped to play it.\n\nThis time Lana was back in Mark's lap, straddling his waist, clad in only her thigh-highs. Both firm, huge breasts were fully exposed and she was staring down at Mark as he writhed in the handcuffs. Lana teasingly let her hands cup and caress her breasts and tossed her head back as she pinched and tugged at her nipples. Her hips were slowly bucking as the camera showed a clear view of Lana's wet pussy dragging along the length of Mark's hardness as it was pinned under her groin. Mark's writhing had become almost crazed, his wrists were pulling hard against the cuffs only to be trapped tightly by the thin, cold steel.\n\nThen, Lana slowly turned to face the camera for the first time. Her stare was so committed, Jess felt like she was looking straight into her soul. For a moment, Jess stopped playing with her pussy as she sat there frozen by Lana's stare. Slowly, deliberately, Lana lifted her naked hips and reached down for Mark's cock. She stood it up straight, intently, and positioned the bulging head right at her soaked entrance. Holding her hips right there, Mark tensed his entire body sensing what was coming. Lana looked into the camera and softly puckered her lips before blowing a small kiss at Jess, then offered a teasing, taunting wink, before she dropped her hips and impaled herself on Mark's rock-hard dick.\n\nThat hard drop of Lana's hips caused absolute pandemonium. Lana let out a primal roar as she felt every inch of Mark's cock press deeply inside of her. Jess sat there watching Lana as she slammed her left hand onto Mark's chest to steady herself, while her right hand shot up to her breast and pulled furiously at her own nipple. After a long week of teasing, Mark lost all control as he felt Lana slam hard down onto him, his eyes locked on her as she played with her chest. He tried to sit up with all his power, but Lana's hand on his chest pushed him roughly back down onto the bed. Still not raising her hips, Lana leaned down with Mark's throbbing dick inside her and swarmed her tongue against Mark's as her breasts pounded against his chest. As the kiss threatened to set the room alight, Lana finally let her hips rise. Her tight, hot, wet pussy slithered back up Mark's length as their lips smacked before Lana slammed her hips back down on Mark's cock for a second time and the clip suddenly ended.\n\nWhen Lana winked at Jess and dropped her hips on Mark's cock, it pushed Jess so far over the edge she was out of sight. It felt like her eruption had ripped Jess out of the world itself, as she watched that teasing minx ride Mark, the man she loved. Her orgasm was off the charts as Jess bit down on her t-shirt and screamed from the back of her throat. Her fingers were pumping so fast and deep in her pussy, she gushed all over the living room floor as her moan reverberated around Anella's small flat. The camera had captured every single inch of Mark's dick, disappearing into her wet pussy as Lana's wicked hips dropped and swallowed it whole. Jess's scream was curdled, rasping, and raw as her teeth bit down on her shirt as she kept thrusting her fingers inside herself as the orgasm coursed through her. Jess never thought it would end as she rode every wave of the pleasure as hard as she was practically riding her own fingers. Her eyes were wide, locked on the video as she watched the passionate kiss. Hearing Lana roar out as she rode him, seemingly on the verge of her own eruption, just reinforced in Jess' mind how badly she must have wanted this. And Jess sat there, helplessly, watching the tease finally claim her prize.\n\nJess whimpered, anguished, as the clip looped back to the start. Pleading with herself, Jess was silently begging for more. The way Lana had just slithered up and down Mark's cock in those thigh highs, Jess was completely entranced. As the clip repeated, Jess relished every sound as Mark's cuffs scraped so hard against the steel of the headboard, Mark's moans and groans were so filthy as he finally felt Lana's tight pussy trap his hard cock inside her. Jess needed more, she simply had to watch her fuck him...watch her ride him...as he lay there thrashing under her...handcuffed so fucking tightly...\n\nNo sooner had the first explosion between Jess' legs started to fade before she fucked herself back to the brink. Letting her fingers dance back and forth, hard, on her clit, Jess watched the video over and over again before she came all over hand once more. There was so much in the clip that lit her on fire, but the way Lana would turn to the camera and stare right at her, knowing how Jess would react, was like pouring a gallon of petrol all over the fire between her legs. The little blown kiss and that wink with her stunning brown eyes, Jess felt like Lana was taunting her, letting her know that it was time to take him. Psychologically, Jess knew she had so many opportunities to stop this, but she also knew that this was exactly the kinky fantasy that had crippled her as she fucked herself in her shower every night.\n\nThe next 15 minutes that passed saw Jess sit there, her bare ass cheeks on Anella's floor, legs spread, as she rubbed her clit and plunged her fingers deep inside herself. With eyes glued to the video as it played and repeated, Jess had no idea how many orgasms she endured as they came in a short, frenetic cluster that rendered her powerless to resist. Bemoaning the fact that no further texts arrived, she threw herself entirely into the final clip where Lana had, finally, rode Mark's hard dick, even was if it was only for a brief moment. Her t-shirt was soaked in sweat as she felt a thick bead trickle down her temple, matched by the slick glistening of her thighs that had smeared all over her hand. Eventually, her focus on the video was snapped as she felt the phone vibrate again in her hand.\n\nHoping, desperately, that she'd get to see Lana ride Mark close to death, she fumbled with the menu and opened the message. With a groan, Jess double tapped and let the video start.\n\nBut the tryst atop the bed was gone as there stood Lana, as she did in the first video, clad in her white lace bra and her tight grey pyjama bottoms. Standing there, silently, but staring straight at Jess through the camera. Seconds passed with her just standing there, before she raised her right hand and dangled a pair of stainless-steel handcuffs on her fingertip. Lana took a second to glance at the cuffs as they swayed, before glancing back at the camera and letting her hand dangling the cuffs to fall to her side.\n\n\"Now...I can only hope...that you enjoyed that little treat...half as much as I did...\" Lana's voice was husky, her throat rasping. \"I have to apologise, sending such a tiny preview of what we got up to...I guess you'll just have to use your imagination to fill in the gaps...\" Lana's smouldering look turned to a wicked smirk.\n\nJess bit down on her bottom lip as she listened, her fingers trapped atop her burning clit as they ground back and forth across it.\n\nWhispering, Lana continued. \"My imagination's been running wild too. The moment I dropped these hips and crashed down on your boyfriend's amazing cock for the very first time...the first of many, many times...\" Lana's free hand slipped up her flat tummy from her hip and groped her heaving breast as the bra struggled to contain it. \"As I took every inch of him inside me...all I could think about...was the way you stood there in the bar that night. Trembling with need...refusing to stop me...\"\n\nJess wore a suffering look as she furrowed her brow and slipped her two fingers deep back inside her tormented, tight entrance.\n\nLana took a slow half-step forward towards the camera. \"How long do you think I lasted, Jess? Bouncing up and down on Mark's hard dick...picturing you just standing there...refusing to stop me...daring me to do it...\" Lana's hand clenched tightly around her breast and drew a sultry groan. \"How long do you think I held on...before I came so hard all over it?\"\n\nJess bucked as her hips shook and another short, intense orgasm pulsed through her body as she sucked a deep breath into her lungs and struggled to hold it.\n\nLana let the question hang in the air, before dropping her hand from her breast and started to giggle. \"I told you earlier...just as I told Mark...I simply love to play games...\" Lana's giggle faded as she stared at the camera. \"And this game, well...it only has one rule. If I've got it wrong, and you really, truly...want this to stop...then all you have to do... is tell Mark...to delete my number. And neither of you will ever see me again...\"\n\nWith her ass pressed hard into Anella's floor, trails of her juices and sweat pooled on the floor where she sat, Jess desperately tried to comprehend the offer. It was simple, just tell Mark. Tell him to delete her number. The idea almost angered the heat between her own legs and she closed her eyes tightly for a moment to curse herself. What in God's name was happening to her? What was she? As her mind raced, Jess felt how her fingers were still bringing her wet pussy to attention.\n\nWith a malevolent stare, Lana softly arched her back. \"That poor boy...Mark's been teased so hard all week...Even I was surprised at how just how...much...he needs to release.\" Still staring at the camera, Lana lifted the handcuffs back up, dangling temptingly on her fingertip. \"I can't stay, Jess...looks like I'm ready for round two...or is it round three?\" Lana's own wicked taunt made her bite down hard on her bottom lip as her nipples strained hard, tightly, under her bra.\n\nJess was simply slamming her two fingers, relentlessly, deep inside her slit. She could barely keep herself together at the teasing preview of their first encounter on the bed, but to think that they'd been fucking all night as she slept on Anella's couch had Jess about to explode.\n\nLana's confident whisper continued as she turned her head to glance at the cuffs she was dangling. \"You saw how fucking tight those cuffs were around his wrists...I guess...Mark's just gonna have to stay the night...\" And with that, Lana offered a teasing wink and the video ended, then looped back to the start.\n\nJess could only consider Lana's final words for a microsecond before she roared out in orgasm once more, deep from the pit of her stomach. Her fingers were pumping like pistons as she imagined what was happening. What had been happening. All night long.\n\nMark, lying there in Lana's bed, wrists cuffed so tightly to the headboard, as Lana would do as she did in the videos. Jess pictured her as she was in the last video, straddling Mark in those tight grey pyjama bottoms, her perfect cheeks showcased wonderfully by the tight grey fabric surrounding them. Before slowly peeling them off and, as she showed Jess in reality, methodically positioning Mark's throbbing cock for her wet pussy to slither down.\n\nBefore long, Jess contemplated the brazen audacity of Lana to boast that she was keeping him there until the morning. Jess asked herself what she would do to put a stop to this and bring Mark back to her, but the kink had metastasised, having grown far beyond her control. It was a full half-hour after Lana's final video before Jess achieved a final orgasm before slipping down to lie on Anella's floor, with her pink shorts and torn panties lying to her side. As she stared at the ceiling, Jess tightly closed her eyes as she regained her breath and pondered the only rule to Lana's game. All she had to do was tell Mark to delete Lana's number and it would all come to a screeching halt, and they'd never see that bitch again...\n\nAnd in that very moment, Jess knew the answer. She needed more."
    ],
    "authorname": "Vautour",
    "tags": [
        "reluctance",
        "cuckquean",
        "seduction",
        "teasing",
        "handcuffs",
        "cheating",
        "exhibitionist",
        "female submissive",
        "drama",
        "big tits"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/just-a-friend-5"
}