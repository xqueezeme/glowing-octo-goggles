{
    "title": "Without a Whisper",
    "pages": [
        "I wanted this story out sooner, but I went through so many rewrites and drafts, and my day job decided to take all my spare time.\n\nThis story marks a soft reboot of the series. All of the events of the previous stories still happened, I've just shifted the timeline back ten years, so nothing of consequence has changed.\n\n--\n\nThis I would like to thank Francois101 for the editing. It is a tremendous help.\n\nFor newcomers, this is the 8th installment of what I'm calling the Criminal Affair Series, which started with the ten-part Criminal Affair. Order of stories for continuity is as follows.\n\nCriminal Affair (ten-part series)\n\nThe Sorority\n\nThe Irishman at the End of the Bar\n\nA Shoulder to Cry On\n\nA Perfect Match\n\nThe Second Booth at Horseshoe Diner\n\nIf You'll Believe In Me\n\nWithout a Whisper\n\nFriday -- April 10, 2020: The Morning Of\n\n-Chase Kramner-\n\nDarkness greets me when I open my eyes. Darkness so profound, for a moment, I believe my eyes are still closed. My head is throbbing, like I was struck on it. While it probably was, I know this feeling and what it's from. This is the headache you get when you get taken down by a carotid choke hold. My late friend Nathan White demonstrated this restraining technique during a combatives class. If done correctly, the suspect will be unconscious in seconds.\n\nI notice my wrists are restrained behind my back, but my feet are free. Not like you can tie down a man with one leg. I'm in a tight, dark space. And I'm moving. Tires are running over a road. I hear the vibration and rumble of an engine that kicks a little from not being driven for so long. I'm in the trunk of a car.\n\nIs it my car? I roll and kick to size up my space. Not my car, this trunk is too small. There is a small lip to the back of the back seats. A narrow space barely large enough to crawl through. Something circular shaped it near my face. It's where the spare tire goes. After establishing a few basic dimensions of my confinement, I know exactly where I am.\n\nI'm in the trunk of a 1964 Buick Skylark.\n\nThe ropes at my wrists are tied well enough to contain me. I'm confident I can free my hands if given enough time, but I don't know how much time I have. My fingertips can touch them, so I feel the texture. Nylon. Deck rope. It has some give, but not enough to tug my wrists through even after rotating them back and forth several times.\n\nThe terrain changes, and I feel us driving uphill, steep, and I roll backwards. We're not on a road anymore. I hear crunching and small rocks flying up and hitting the under carriage. The car levels off, and I slide back to the center. The brakes screech to a stop, and the driver's door opens. I hear a second car come to a stop behind me.\n\n\"Put it in neutral and push,\" a voice says. My head is still fuzzy, and the speaker is muffled from the barrier between us. \"You kept the car like a dumbass for a decade, don't care why. Clean up your mess. Then get his car out of here. Don't fuck it up this time.\"\n\nWhat the hell happened? My brain is still buffering back to life. I can hear the gears shift and the door close. Hands slap the top of the trunk, and I feel movement again. It starts going down a slight downgrade.\n\nThe car goes faster, and faster, then suddenly, I feel like I'm floating. Oh shit.\n\nThe car slams into the water, and I bounce around like a pinball. The car drops the rear hard, staying wheels up, and I'm throttled again. I groan in pain from the collision that knocked the sense back into me. I remember how I get here. I don't have time to celebrate as the car sinks beneath the surface.\n\nMonday - April 13, 2020: Three Days Gone\n\n~Midge Appletree~\n\nThis morning I am jolted awake by my four-year-old body-slamming me. I grunt from the force of him landing on my back and pressing all the air from my lungs. It takes me a moment to realize what is happening before he starts laughing. Adjusting my head so the other cheek is on the pillow, I see my alarm isn't scheduled to go off for another twenty minutes. Who needs an alarm clock when you have a hyperactive toddler?\n\n\"Battle!\" he declares.\n\n\"Cease fire,\" I say, and pull the blanket over my face. Shawn pushes against me when he jumps to land between Gianna and me. He pulls at the blanket to find my face, but I hold it firm.\n\n\"Mommy, battle,\" he says in the voice only a disappointed child has.\n\n\"I surrender. The war is over,\" I mumble. I blame Shane for his persistence. Shane gets him all riled up, and the first few days after spending a week with his father is this. Shane has the energy to engage in battle. I don't. At least not without coffee. Daddy is fun, but Mommy is tired.\n\n\"Battle!\" I hear from the door of our room. I pull the blanket down enough to see Wendy at the door. Shawn stands up on the bed, and I feel him jump off to tackle his sister who catches him. I hear them leaving the room to resume the war elsewhere.\n\n\"That woman is a goddamn lifesaver,\" I say to Gianna, who I assume is also awake after that display of childhood.\n\n\"She's still my little girl,\" Gianna says, sitting up in the bed. She puts her elbow on the pillow, propping her head upright. Her gorgeous eyes blinking the sleep away.\n\n\"Keep telling yourself that,\" I tease, and finally submit to the day. \"I'm up.\"\n\n\"You wanted a baby. I warned you,\" she says with a cheeky grin.\n\n\"I know,\" I say. I am wholly responsible for my sleep being disrupted.\n\nI cancel my alarm, and then stand up to stretch life into my body. A shower is first, so I undress with the bathroom door ajar. While the water warms up, I look at myself in the mirror. Since having a baby, my body has changed, because that tends to happen when you're pregnant. My weight snapped back like a rubber band, which pisses Gianna off. It took her nearly a full year to lose her baby fat each time. Not me. Back to one hundred and ten pounds, and I even got some boobs out of the deal. I'm not a cutting board anymore. Now I'm a cutting board with two grapes on it.\n\nThe water runs over my body for a few minutes before I grab the loofa and bodywash. Lather and rinse, and then my hair is cleaned with a dual shampoo/conditioner, which my wife says is heresy. Because my hair is short, I don't have to worry about the lengthy process of drying it off while styling it. I wrap a towel around my body, tucked into my newfound cleavage, and I enter the bedroom.\n\nGianna is now sitting up while doing something on her phone. Her long crimson hair is resting on her shoulders like a bonfire. The morning sun is pouring in from the window, and her hair glows. My wife is so sexy in the morning.\n\n\"What's your day looking like?\" Gianna asks, putting down her phone to talk to me.\n\n\"Still teaching the operational security class at the academy,\" I reply while rummaging through my drawer for my boy shorts. I've always preferred them over normal panties.\n\nThe shorts are pulled up to my waist from under the towel. My shirts and pants are on the same hanger, so I take a set off the pole and lay it on the bed. My breasts still don't justify a full bra, but I have invested in sports bras. The towel drops to the floor so I can continue getting dressed.\n\n\"Don't get dressed too fast,\" Gianna teases me.\n\n\"What's on the schedule for you?\" I ask.\n\n\"Hopefully not fishing a condom out of a guy's ass,\" Gianna says. The glamorous life of an ER nurse. \"Not the weirdest thing I've had to dig out of someone's rectum.\"\n\n\"Just don't ask me to smell your finger,\" I say, making her laugh. I cover my breasts in the sports bra and then slip my undershirt on. I remove the dress shirt from the hanger. The bottom of the shirt cuts off at my upper thighs. If I lift my arms, my shorts are visible.\n\n\"Don't move, that's the look,\" Gianna says. She is now biting her lip and suppressing an antsy giggle. I wish I had the time to do something with that.\n\n\"I'll have to remember that,\" I say. I step over to her, leaning over her body to kiss her. Gianna grabs the collar of my shirt and pulls me closer. I climb on the bed and straddle her.\n\nMy hands hold her face as we kiss. Her hands touch my sides and glide up my shirt and over the bra. She slips her thumbs under the bra and pops my tits out. Our lips disengage, and I feel her warm lips on my nipple.\n\n\"We don't have time,\" I wince.\n\n\"Make time. You're the teacher,\" she says as her mouth moves to my other breast. Her fingers start rubbing the outside of my shorts, and I grab her hand. \"You okay?\"\n\n\"It's not that,\" I say, making sure she knows it's not my boundaries. \"I need to be on time because I'm the teacher.\"\n\n\"I hate how responsible you are,\" Gianna says in faux pouty voice.\n\n\"One of us has to be,\" I say, then tilt her head back to kiss her before I resume getting ready. I button up the shirt and then tuck them into the pants after I pull them up my legs.\n\n\"Locked door tonight,\" Gianna declares as I sit down to put my socks on.\n\n\"They can knock all they want,\" I say, and then kiss her one last time before leaving the room.\n\nIt sounds like all the kids are up already. Shawn typically wakes up first because that's just what a four-year-old does. Wendy is home for her college's spring break. Preston and Wesley are fighting over something stupid by the sound of it. I trot down the stairs and look at the commotion from the third step. Wendy is playfully being chased by Shawn around the island cabinet while Wesley and Preston are going at it.\n\n\"Midge,\" Wesley says, and I turn toward the living room. \"Tell him he needs to give it back.\"\n\n\"I don't have your stupid retainer,\" Preston says. Wesley got a retainer last year rather than braces. He's somewhat indifferent and not self-conscious about it. He's just self-conscious about everything else.\n\n\"Someone took it. Only you would,\" Wesley snaps back.\n\n\"Why would I take something you drool on?\" Preston asks. Fair question.\n\n\"It wasn't in the upstairs bathroom. That's where I always put it. Just give it back,\" Wesley says, nearly in tears.\n\n\"Where's the last place you saw it?\" I ask to calm him down. He's still sensitive and cries easily. I don't have the heart to tell him junior high is going to be rough unless he phases out of that.\n\n\"In the bathroom,\" he says.\n\n\"Which bathroom? I remember you cleaning it after dinner last night,\" I say, and a lightbulb turns on above his head. Wesley runs into the downstairs bathroom, and low and behold.\n\n\"Found it!\" he shouts to us.\n\n\"Told you I didn't take it,\" Preston says, annoyed at the accusation. Wesley comes back with his retainer in his mouth and puts its case into his backpack. Their spring break is next week unlike their sister. She already told us she'd happily watch Shawn for us. Saves us a lot on daycare.\n\n\"Wes,\" I say after I finish coming down the stairs. \"You accused your brother, and you were wrong.\" I don't have to tell him anything more than that.\n\n\"I'm sorry,\" Wesley says.\n\n\"Whatever,\" Preston says, and I grab his arm as he walks by me. He exhales and faces his brother. \"Apology accepted.\"\n\n\"Thank you,\" I say, and let him go. Preston may tower over me now, my forehead being to his chin, but he knows who is in charge.\n\nWith that dispute settled, I go to the kitchen to prepare my coffee. I remember when Wesley used to have a cup ready for me. He doesn't love me any less, but the manner of which he chooses to express it isn't as obvious.\n\n\"Remember when I was the troublemaker?\" Wendy asks. I place my tumbler under the dispenser and close the machine on a new K-cup.\n\n\"When exactly did you stop?\" I ask, and she laughs.\n\nWendy turned out incredible in the end. Preston is the moody one now. Wesley is just older and grew out of always trying to be my favorite. I knew it would happen, but I certainly miss not having to make my own coffee.\n\n\"You sure you want to watch him?\" I ask Wendy as my coffee starts pouring. \"I can still drop him off in daycare and you can enjoy spring break like a normal girl.\"\n\n\"He's my brother, I don't mind,\" Wendy says, picking him up and resting him on her hip. \"All my old friends aren't on spring break, and Jesse is still in New York.\"\n\n\"I thought you two broke up,\" I say.\n\n\"We keep telling ourselves that, but every time we try to just be friends,\" she says, using finger quotes with the hand not holding her brother. \"We still end up sleeping together.\"\n\n\"Anyone else you're into?\" I ask.\n\n\"At school?\" Wendy asks, and I shrug. \"No, not really. It's still just Jesse. I just...I don't know if I'm wasting my time with him.\"\n\n\"Jesse is a good guy,\" I say, and she sighs.\n\n\"He's not the only good guy though,\" she says.\n\n\"Good guys are few and far apart. That's why I'm trying to raise three more of them,\" I say, and playfully bop Shawn on the nose. He giggles and reaches for me to hold him. Wendy hands off my little guy, and I raspberry the meat of his neck, making him laugh while trying to stop me. \"Battle's on little dude.\"\n\n\"Stop,\" Shawn laughs.\n\n\"Never,\" I say and make a sound like a dog while pretending to bite his neck. I'm already tired. Shane is the kind of guy who can do this all day. He was born to be a dad. Some days, I feel like I was born to be an aunt. \"You gonna have fun with your sister today?\"\n\n\"Mmhmm,\" Shawn says with childlike rapid head nods.\n\n\"What are you guys gonna do?\" I ask.\n\n\"Umm...I dunno,\" he says with his shoulders hiked up.\n\n\"We have a day planned, don't you worry about that,\" Wendy says, and he tilts his head all the way back to look at her upside down. She then bops his nose too. My coffee finishes, so it's time for mommy to tag out.\n\n\"Hand off,\" I say, and Wendy takes him for me. I kiss his cheeks before I step onto the stool next to the fridge to reach the gun safe on top of it. I type in my pin and get my gun, badge, and a discretely hidden pack of cigarettes and lighter. In the process of putting my gun and badge on my belt, I absent mindedly place the pack of cigarettes on the counter. Wendy exaggerates a fake cough, and I look at her. She had grabbed the pack, so her brothers didn't see it.\n\n\"Thanks,\" I say, putting them in my pants pocket. She gives me the same disappointed look I used to give her. \"I know.\"\n\n\"I get it. Stressful job, plus being a cop,\" Wendy said, and I grin at her. \"Just tell me you're trying.\"\n\n\"I'm trying,\" I say.\n\nWho the hell starts smoking when they're almost forty? This dumb bitch, that's who. One day I got it from every angle. Shawn being a toddler, seeing our budget include daycare again, work being work, and someone asked if I wanted a cigarette and I said, 'fuck it'. I felt instantly better. For a minute. I wanted that minute again, and here I am.\n\n\"I need to go. Last hug,\" I say, and Shawn extended himself across to me and wraps his arms. I make a sound like I'm being squeezed too tight and kiss him one last time. \"Love you dude.\"\n\n\"Love you mommy,\" Shawn says.\n\n\"Bye mom,\" Wendy says, kissing my cheek before I go to force it out of her brothers. I kiss Wesley's forehead, and Preston kisses mine. The inequity of height is real in this family.\n\nI get to my car parked at the curb, and successfully resist the urge to light the first cigarette. What stops me is looking in the rearview and seeing Shawn's car seat. Shawn is sacred, so this car is sacred. There is no smoking at home, or in my car. Wendy is old enough to shame me for it. The boys are way too impressionable.\n\nBefore I even start the ignition, my phone rings. I arch my back to extend my leg straight so I can pull the phone from my pocket. It's Lieutenant Eastland. I press answer and put the phone to my ear.\n\n\"Morning boss,\" I say.\n\n\"Where are you right now?\" she asks.\n\n\"In my car about to leave my house. What's up?\"\n\n\"I'm covering your class today. You've been summoned. Eighth floor,\" she says. That's code for the office of the Chief of Police. I've done plenty to deserve that, but I don't know what it was recently.\n\n\"They say what for?\" I ask.\n\n\"Only that you were summoned. No later than nine,\" she says.\n\n\"I'll be there,\" I say, and we end the call. I start the ignition and check my mirrors before merging with traffic.\n\n--\n\nThe elevator drops me off at the eighth floor. To the left is executive staff offices. To the right are the deputies. Straight ahead is the big man. Also straight ahead is an FBI agent. An angelic princess with a Glock strapped to her hip.\n\nYvonne Grimsdotter, an FBI agent I met while working one of the most unusual cases of my entire career. I'm openly antagonistic to the Feds, having had more than one of my cases taken by them while I was sitting at the Fraud desk at Property Crimes. I did all the work and they swept in at the eleventh hour to make a federal case out of it. My closure rate suffered for it, and I blame them for my career stagnating before I transferred to Homicide.\n\nYvonne was different. Once I got over her being a Fed we stayed in contact after the case. I don't hold the fact she's an FBI agent against her. No one's perfect.\n\n\"Special Agent Yvonne Fucking Grimsdotter,\" I say to get her attention. She turns to me and smiles.\n\n\"Sergeant Midge Fucking Appletree,\" she says.\n\nAnd together we say, \"And that's not my middle name.\"\n\n\"My favorite freakishly tall bitch,\" I say. We hug it out, and I burrow my face into her cleavage.\n\n\"My favorite...damn momma's thirsty,\" Yvonne says with a laugh. I tilt my head back, so my eyes look up at her, but my lips are still hidden.\n\n\"The only thing momma has motorboated in the last month is the belly button of a four-year-old. Do not take this from me,\" I say, my voice muffled from her supple bosom.\n\n\"You get one good one,\" she says.\n\n\"Brace yourself. I'm making this count,\" I say, and motorboat the shit out of her boobs. Don't tell her boyfriend. All kidding aside, it's awesome to see her. I never imagined I'd be friends with a Fed. Let alone such good friends she understands my need for warm feminine flesh.\n\n\"What brings you here?\" I ask.\n\n\"Not sure yet. They're talking about a task force right now. For what, who knows,\" Yvonne says. Even she doesn't know yet.\n\n\"Who's in there?\" I ask.\n\n\"Chief of Police, the Mayor, and my ASAC,\" she says, pronounced like the letter a, and the word sack. Assistant Special Agent in Charge.\n\n\"Sounds big,\" I say. They're either talking logistics or arguing jurisdiction. I don't hear screaming so it's likely logistics. \"I'm eager to work with someone who understands that if I go longer than a minute without profanity, I'm liable to spontaneously combust.\"\n\n\"Don't you curse in front of your kids?\" Yvonne asks. When it comes to my bad language around the kids, I'm pretty much do as I say, not as I do.\n\n\"I used too. But then my son's third word was 'fucknugget', so I toned it down a notch.\"\n\n\"Isn't that two words?\"\n\n\"Not if you say it fast. Especially after stubbing your toe on the coffee table,\" I explain.\n\n\"That warrants a fucknugget.\"\n\n\"Stubbing your toe is hell. My podium of horrific shit was getting raped, then stubbing my toe on the coffee table,\" I say. Yvonne is never sure on how to process most of the things I say. She just understands my need to say them.\n\n\"Well, that escalated quickly,\" Yvonne says. The door to the Chief's Office opens. We have been summoned. Yvonne enters the room ahead of me, and as advertised three men are already present.\n\nThe Mayor Derek Whitaker is standing with his arms folded over his chest. Four years ago, he was the Chief of Police, so walking into this office and still seeing him is like I stepped through a time machine. His very presence exudes authority. He still looks like a cop and has a well-manicured appearance with salted hair not present four years ago. Like a President after his first term.\n\nTo Derek's left is the current Chief of Police Dean Wu. My friend Jill, who is Derek's wife, used to work with him back in the day, and he has a reputation of being somewhat of a hard ass. I've only met him in passing, but his sense of humor is as spicy as a glass of milk. A short, muscular Asian man pulled straight from a Hong Kong crime drama.",
        "The third man I don't know, but I'll assume he's the FBI guy. He's wearing a grey suit that just screams he's a federal agent. He's trying to match Derek's intensity, but only looks like a little brother standing next to his older sibling.\n\n\"Let's get introductions out of the way. I know you two are acquainted, so I'll skip that,\" Chief Wu says, referring to Yvonne and myself. \"This is Sergeant Appletree. She's second in command of our special investigations squad.\" Special Investigations used to just be a handful of officers. A glorified escort service for federal agencies and an overworked case audit unit. We've expanded thanks to a generous budget increase from our former Chief of Police Mayor.\n\n\"Assistant Special Agent in Charge Charles Levin,\" he says, and I shake his hand. \"You and Yvonne have worked together in the past?\"\n\n\"The Fredrick Aimer case,\" I say, and he nods. That case made some headlines. Destroyed the reputation of the former Mayor so thoroughly Derek won the election so soundly there wasn't even a runoff. You're welcome.\n\n\"I remember that one. Not every day the police find a case and get two men out of prison,\" Levin says.\n\n\"It was the strangest case I've ever had to work on,\" I say.\n\n\"It's going to get stranger today. Derek, do you want to take the lead?\" Levin asks. Derek nods and unfolds his arms.\n\n\"I bet you two are wondering what's going on?\" Derek asks. Neither of us reply. \"We're working a missing person case. He's been gone nearly three-days.\"\n\n\"Statistically, he's dead,\" I say.\n\n\"I hope not,\" Derek says.\n\n\"I do too, but that's the cold numbers,\" I say, and he slowly nods. \"So why isn't Missing Persons here? Why am I here and not Kaiser?\" My old partner is currently dual hatting as a missing persons detective and the Sergeant for the Homicide section.\n\n\"It's one of our own. Chase Kramner is missing,\" Derek says. My predecessor in Special Investigations. He ran the lead on the Fredrick Aimer case after noticing something wrong with several investigations going back nearly fifteen years. Turns out five murders closed separately were committed by the same person. He lost his leg during a different case, medically retired, and married my half-Asian lieutenant before moving to the country with their son.\n\n\"I like Chase as much as anyone else,\" I say, knowing full well Chase is a hard person to like. I'm one to talk. \"But why does he warrant an FBI task force?\"\n\n\"Mr. Kramner's father is a federal appellate judge for the DC court of appeals,\" Levin replies. They're treating it like a potential kidnapping. \"And we have reason to believe the circumstances of his disappearance travel through multiple states. State lines grants us jurisdiction. Derek and I go back a few years, I'm roping you in as a person who knows how Mr. Kramner operated.\"\n\n\"Alright, that makes sense,\" I say. \"What was he doing when he vanished?\"\n\n\"Working for me,\" Derek says, and the room turns to him. \"I have an old file of missing person cases that went cold. I hired Chase to put his PI license to work.\"\n\n\"Since when is Chase a private investigator?\" I ask.\n\n\"About six months ago he got his license. Last I knew he was working the disappearance of a teenaged girl named Katie Grossman. He called me last week to tell me he may have found some leads and was pursuing them. There was a trail I missed, back when I initially investigated it. Cases pile up, pressure is applied, and you know what it's like when your Captain tells you to let it go cold.\" Damn right I do. \"New evidence came up in the case. A gun.\"\n\n\"A gun?\" I ask.\n\n\"Katie Grossman stole some valuables from her parents before she disappeared. I recovered all of it at various pawn shops across the city, but the only item I never found was the gun. Didn't figure I would either, not exactly easy to fence, and no one would admit they bought it. A few months ago, that gun was discovered in an artificial pond that was drained for property development. Nearly ten years later.\"\n\n\"That's not cold: that's absolute zero,\" I say.\n\n\"Chase was looking into it. Searching for a missing person only to become a missing person himself. I don't like that kind of coincidence,\" Derek says. Neither would Chase. He would say he believed in coincidences, just not a dozen of them.\n\n\"Let me speculate,\" I say to begin, and watch Levin posture like he's about to listen. \"Because of his dad, you're treating it like a ransom situation? You got audio techs, calls tracers, whatever, at his house, his dad's office?\"\n\n\"All correct. A team of investigators are also going through his father's cases for the last few years for any leads. We also have an HRT unit on standby,\" he says. Hostage and Rescue Team. They are not fucking around.\n\n\"Where is the task force going to be situated?\" I ask.\n\n\"Right next door. You guys have the entire conference room. Techs have already forwarded all calls to that room. There is already a team in there,\" Chief Wu says. \"What I need for you to do right away, is head to Chase's house. Clear out his office, find out what he had found on the Katie Grossman case. His wife should be cooperative, but we got a warrant to cover all our bases.\"\n\nI follow Chase's case, I follow his movements. I follow his movements, I find Chase.\n\n\"I got a child seat in the back of my car...\"\n\n\"...take a van in case you're carrying more than you expect,\" Chief Wu says, reading my mind.\n\n\"Special Agent Grimsdotter is your partner on this. Play nice,\" Derek says, and looks at Chief Wu. \"Sorry.\"\n\n\"What he said,\" Chief Wu says. He looks mildly irritated Derek forgot what his job was for a moment.\n\n--\n\nFriday - March 27, 2020: Two Weeks Before\n\n-Chase Kramner-\n\nIt's a strange feeling to be on the hunt again. The feeling when I start closing in on something. When all the pieces start coming together, and the image of the puzzle begins to take shape.\n\nThere is no correct way to build a puzzle. The strategies are merely different. I like to start with the frame. The easy pieces first. The facts you know. The things that will hold the rest of it in place. From the frame, you can extend inward, until you reach the middle. At the middle is the truth.\n\nI've been building the frame since October, when Derek gave me the puzzle. I retraced his steps, starting when the case landed in his inbox, and what he would have known from the start. Katie Grossman was a sixteen-year-old girl who stole her mother's jewelry, some electronics, other items of varying value, and her father's gun. Derek had found the missing valuables at three pawn shops throughout the city. In total, she could have had around $3000. A necklace from her mother was worth $700 by itself. The gun was not found at the time. Katie Grossman then simply vanished.\n\nThe gun was found in October of last year. Ten years after her disappearance. A Smith &amp; Wesson Model 442 with a satin nickel finish and an ergonomic rosewood grip. A five-round revolver loaded with four rounds of .38 police special, and one shell. It had been fired at least once. There must be a story behind that.\n\nThe components of the gun were somewhat eroded due to being submerged. Even rust resistant materials are not rust immune. The nickel plating, aluminum alloy frame, stainless steel barrel, and carbon steel cylinder, are all relatively resistant. This helped preserve the serial number, even after someone tried to file it off. The different rates of corrosion due to the differing materials was beneficial for comparative analysis. The gun was sent to a metallurgist to determine how long ago it was thrown into the pond. Katie Grossman went missing on 10 July 2009, and they said the gun could have been in there for ten years. Not long after Katie went missing.\n\nCovering my bases, I took a road trip out to the where the gun was found. The land was being used to build houses, and when I arrive, I see a new neighborhood taking shape. Various houses at different levels of construction. Some complete with families already moved in. Some marked only by a slap of freshly dried concrete. An artificial pond was here just a few months ago, where a gun had been hidden for ten years.\n\nEarly in my reinvestigation of the case, I was convinced I was looking for a body.\n\nAfter the information on the gun came back, I dug into the available information on the rest of the stolen goods. One of the three pawn shops was no longer open, the former owner of another was deceased, and the third unsurprisingly didn't remember. He spoke to the police nearly every day about stolen items for years. Derek coming in about a stolen cellphone wouldn't even register in his short-term memory.\n\nOne interesting thing of note was that the pawn shops never reported anything suspicious about the items. Katie provided the shops with evidence of purchase in the form of receipts. Interviews with her parents revealed that her mother had retained nearly every receipt from every purchase going back over a decade. Katie simply found the correct receipts. Derek highlighted in his notes that this suggested Katie had been planning to runaway for some time. I agreed with him.\n\nDerek had dug into her school and personal life as much as he could. Katie had a friend named Angela Dobbs who stated she didn't know why Katie would have run away. Derek had written in his notes about her demeanor being defensive and withholding. He was never able to go back and re-interview her because he was ordered to let the case go cold. Another friend named Leland Bach stated the same and she was also evasive. After the first interview, her parents hid her behind a lawyer. The girls knew something, so I looked deeper into them.\n\nAfter Missing Persons shelved the case, an interesting development Derek wouldn't have had any sight on occurred; Leland's father filed a grand theft auto report to the police. Vincent 'Vinny' Bach is the owner of a used car dealership named Your Cousin Vinny. Vinny had reported one of his cars missing from the lot in September 2009. On the lot he had a refurbished 1964 Buick Skylark with metallic mint-green paint and a white convertible top. The same car from the film My Cousin Vinny, hence the name of his business, though the man isn't Italian. The car was proudly displayed in the front of the lot, but not for sale. Not only was it missing, it had been replaced by a refurbished 1963 Pontiac Tempest, also with metallic mint-green paint and a white convertible top. Another car featured in the film whose similar appearance causes the misidentification of Joe Pesci's cousins for a murder trial. Vinny Bach claimed he noticed immediately, but I believe he was saving face.\n\nThe Pontiac was eventually found to have been owned by Angela Dobbs's father, Alvin Dobbs, who had purchased the car from Mr. Bach some years prior. The investigator for the case was Detective Frank Blanchard, the old partner of my ex-girlfriend Lauren Hill. The investigation never found a hard connection, mostly due to Mr. Bach's insistence he noticed immediately. Because the timeline was so scrambled, no one could make heads or tails of it. My theory is simple: Angela Dobbs and Leland Bach helped their friend runaway by getting her a car. Whether they intentionally planned on creating a clusterfuck surrounding that aid, is up to speculation.\n\nLocal press, where most of my information came from, got a hold of the theft and it had developed into something of a local legend. The thief has never been identified. It is still known as the My Cousin Caper. Joshua Winters had written the original story and follow-ups when it happened but could never reach Frank Blanchard for comment.\n\nMy deal with Jenn was that this PI thing isn't a full-time job. I'm always to be a husband and a father first. Holding myself to that deal is why my progress on this case has been slow. After nearly six months, I've gathered enough facts to start asking the right questions to the right people.\n\n--\n\nThe first thing I do in the morning is get my miles in. It's almost exactly a mile and a half to an intersection at the end of my street. Three miles round trip. I take the long walk up my dirt driveway to the house. We went with a ranch style home because stairs and a lower limb amputee does not mix. The only stairs are the porch. My water bottle is where I left it at the top of the stairs. I sit on the top step, and drink while catching my breath.\n\nI look over my shoulder, and don't see Nathan. My son usually wakes up about this time, and knows he'll find me on the porch after my run. Not today. I finish the water and enter the house. Curious, I peek my head into his bedroom and see Nathan soundly asleep. He's named after my friend who died the same day I lost my leg.\n\nBefore showering I start cooking breakfast for Jenn and Nathan. I started cooking to stave off the boredom of my medical retirement from the police. I learned to love it and do it more for fun now. Jenn asked me to keep the menu a surprise, and I change it up every so often. I'm always on the lookout for interesting new recipes.\n\nI feel Jenn behind me. Her belly pokes into the small of my back, and her lips kiss my neck. Turning around, I kiss her, and hold my hand over her pregnant stomach. When we were trying for Nathan, we had ovulation calendars and other aids. We got pregnant so fast we had a false negative. We would occasionally discuss a second baby and concluded maybe another year or two. Oops.\n\n\"Good run?\" Jenn asks.\n\n\"Gets the day started,\" I reply. I would hand her a cup of coffee, but Jenn avoided caffeine when pregnant with Nathan, and is going through her old program. She has instructed me to not tempt her.\n\n\"You hear that?\" Jenn asks, and I listen. All I hear is the sound of cooking, so shake my head. \"Exactly.\" Nathan isn't awake. He's what I don't hear. \"I don't remember the last quiet morning.\"\n\n\"We should wake him up, he's grumpy when he oversleeps,\" I say. Jenn closes her eyes to enjoy the silence, but nods to agree.\n\n\"You still planning on going into the city?\" Jenn asks.\n\n\"Yeah. Starting to get some headway on that case. I've got a few people to interview. They didn't reply to calls, hoping to do some ambushing,\" I say, and she nods.\n\n\"We'll all ride up together, make a day of it. I'll hang out with some friends and do some shopping I can't do out here,\" Jenn says. Jenn loves living here, but she does miss some things about living in a city. The shopping choices being one of them.\n\n--\n\nNathan is plenty grumpy when we wake him up for breakfast. So grumpy, he refuses to eat. He then complains about being hungry ten minutes after breakfast. I counted on that happening so kept his plate in the microwave for when he was ready. I shower before Jenn and soon the family is ready for a trip to the city. Jenn drops me off in front of the police HQ, and I kiss them both before she departs.\n\nIt's a professional courtesy for a private investigator to inform the local police that they are investigating in their jurisdiction. I report to the front desk to let the officer know, and while I'm there I feel a slap on my back.\n\n\"What are you doing here?\" William Kaiser asks. My old partner. He finally lost his battle with hair loss and decided to shave it bald. Still has the mustache goatee. Everyone calls him The Kaiser like the old German kings. Cops are often endowed with a nickname, for good or bad. I was assigned Ivy League back in the day because my alma mater was Dartmouth.\n\n\"Working,\" I say, and we knocked knuckles. \"You wouldn't happen to know if Frank Blanchard still works here?\"\n\n\"Blanchard? Property Crimes?\" The Kaiser asks, and I nod. \"Nah, he retired a few years ago. I'll ask around on my way up, see if I can get you a number. What's it about?\"\n\n\"Old case he investigated might be related to a case I'm working,\" I say.\n\n\"PI stuff?\" he asks, and I nod. \"I'll look into it. How's Jenn?\"\n\n\"Pregnant,\" I say.\n\n\"Congrats man,\" he says with a smile. \"Three girls between Abigail and I, we're done.\" I laugh. \"You in town just for the day?\"\n\n\"Gathering what I can, then heading home.\"\n\n\"Let's get some dinner. I know Abigail would love to see Jenn again.\"\n\n\"Definitely. I'll call you later,\" I say. We knock knuckles one more time before he heads to the elevators.\n\nAfter checking in with the police, I take a moment to walk the line of heroes. A collection of retired badges to honor the service of officers who died in the line of duty, though dying isn't a requirement, it's just the most common reason. It takes only a minute to find the one I'm looking for. SWAT Sergeant Nathan White. My son's namesake.\n\n\"Looking good paratrooper,\" I say, and gentle touch my knuckles to his badge. He was Air Force Pararescue. I just called him a paratrooper to bust his balls.\n\nI exit the building and look at my phone. I saved the last known work and home addresses for Angela Dobbs and Leland Bach and tried calling them again. It goes to voicemail for both. I leave messages and decide to go to their places of work. Both still live in the city, and according to social media, have remained in contact with each other.\n\nI take the bus over to the financial district where Leland works at a brokerage firm. I'm the lone casually dressed man in a sea of young professionals. Her building is easy to find, and I approach the security at the front desk. They know by looking at me that I don't have an appointment with anyone.\n\n\"Looking for someone. Leland Bach. She should work here,\" I say. The receptionist states she cannot provide me with information about employees. I ask if she could make a call to see if she was willing to come down and meet me here. She asks me to have a seat, and that she will try.\n\nThe lobby has several couches and chairs to maximize the comfort of guests waiting on appointments. The magazines are up to date. The television is playing the news, and I watch it for a minute before my phone chimes. The Kaiser got me Blanchard's number.\n\n\"Yes?\" I hear a voice ask, and I turn to it. I recognize her from social media. Leland Bach. She's somewhat overweight but is cute. Straight blonde hair that hangs just over her shoulders. Business professional clothing.\n\n\"Leland Bach?\" I ask.\n\n\"Yes.\"\n\n\"Chase Kramner. I'm a private investigator,\" I say, handing her one of the cards I had made up. Chase Kramner, Investigator. I wanted to put my rate of a cup of coffee and a handshake on the card, but Jenn told me not to.\n\n\"Are you the one who has been calling me?\" she asks, and I nod. \"What about?\"\n\n\"Katie Grossman,\" I say, and she flinches back. That name hit her like a bolt of electricity. \"You got a minute?\"\n\n\"I don't know where she is,\" Leland says.\n\n\"I didn't figure you would, but could I have a few minutes of your time?\" I ask.\n\n\"Why are you looking into it? That was ten years ago.\"\n\n\"Someone asked me to,\" I say, and she blinks. She's deciding whether it's too suspicious if she doesn't talk to me. She wants to talk, because she doesn't know where she is, and wants to know what happened to her friend. Katie wasn't supposed to completely vanish.\n\n\"I got a minute,\" Leland says. I gesture for a chair, but she shakes her head. \"Not here. There's a coffee place next door. I want to get someone else there too.\" Who could that be? A lawyer?\n\nLeland noticed my leg as we walked to the caf\u00e9 next door. She said she'd order so I could sit down. I wear modified pants where the bottom half is removed so my prosthetic doesn't get caught in the fabric. I tried to wear normal pants and jeans, but after too many faceplants, Jenn went full wife on me.\n\nLeland returns with three drinks, and says the person joining us will be here soon. She asks if I've learned anything about Katie, and I shake my head, holding onto the gun being found for now. The reason I'm here is to hopefully get a few more pieces of the puzzle. The third person arrives within ten minutes. A woman with dyed platinum hair. She introduces herself as Angela Hertzberg, maiden name Dobbs.",
        "I have always preferred to interview people independently. When people are together, they can take cues from each other and hold a fake story easier than me picking them apart separately. I'm not a cop anymore. The two don't show reluctance in speaking with me. Quite the opposite. They seem somewhat overjoyed that someone finally cares about what happened to their friend.\n\n\"Was something about Katie found?\" Angela asks first. I nod.\n\n\"Her gun,\" I say, and they look at each other. They knew about it. \"Did you know she brought one with her?\" I know they know, but I still need to ask.\n\n\"We did,\" Angela says for the two of them.\n\n\"Why did she run away?\" I ask. They look to each other again. Not to psychically discuss how much they tell me, but what to start with. \"I'm not a cop. Any crime that was committed is likely well past statute of limitations anyway.\"\n\n\"Katie was pregnant,\" Leland says. Nothing in the original case had any indication of that. Her parents never mentioned it. Not even the women sitting across from me.\n\n\"Was she leaving to get an abortion?\" I ask. It's a dumb question, because in this state it wouldn't have mattered. Dumb questions need to be asked right along with the smart ones.\n\n\"No, her parents were trying to force her to get one,\" Angela says. \"She didn't want that. I even told her to get one, but she was adamant for some reason. I wasn't even aware she was dating someone or was with someone just one time. I believed she would have told me something about that, but she never did. She never told me who the father was.\"\n\n\"Me neither,\" Leland says while shaking her head.\n\n\"So, you helped her run away?\" I ask, and they look at each other, then nod in unison. \"Why didn't you help the police?\"\n\n\"She didn't want to be found. We helped because it sounded more like she was asking us to help her run away from someone in particular. Her parents maybe, but she never told us who. It was like she was ashamed of it.\"\n\n\"That sounds like a better reason to help the police,\" I say, and they look down into their laps. They were teenagers in over their heads, and now realize what I just said was what they should have done in retrospect. \"That aside, how'd you guys pull off the My Cousin Caper?\"\n\nTheir heads snap upright. They don't have to say they did it for me to know they did. They're trying to hold back smiles now. It is a little funny to finally get caught.\n\n\"What prompted that flash of brilliance?\" I ask, matching their smiles. If I show it's funny too, they're more likely to brag about it.\n\n\"That was my idea,\" Angela says after a moment to remember what I said about statute of limitations. \"Katie didn't have her own car, and she couldn't take her parents because it would have been noticed right away. Her parent's cars were expensive. They had a tracker in them in case someone stole it.\"\n\n\"Why the Buick?\" I ask. \"Why not just take the Pontiac? Why take the chance with the swap?\"\n\n\"Because only the exterior of the Pontiac was finished. It could handle around the block, but not an extended drive,\" Angela explained. \"My dad was a reservist in the Army at the time. He was on active orders deployed to the Middle East, and my mother never went in the garage. No one would notice the car was stolen for at least six months. I worked on the car with my dad, so I knew my fingerprints would be incidental. I'd be a suspect, but they could never prove it. Who'd pursue charges if they could? My dad?\"\n\n\"You swapped the Pontiac with the Buick, because the latter could make the drive?\" I ask, and they nod in unison again.\n\n\"That was the plan,\" Leland said. \"I figured my dad would notice eventually. Maybe a week but give Katie a decent head start. We didn't figure it'd take him two months.\"\n\n\"But because he swears up and down he noticed immediately, the police could never figure it out because Katie was two months gone. A detective did talk to us, but he was trying to make us admit it was a prank. When the Buick never turned up, he started to believe something else and never spoke to us again,\" Angela says. \"I had never even heard of the movie My Cousin Vinny until the detective brought it up.\"\n\n\"You should watch it, it's great,\" I say, and she lets me know she did shortly afterwards. \"Katie stole some stuff from her parents to finance the trip?\" I ask, and they do their nodding routine again. \"What about the gun?\"\n\n\"Young girl, pregnant, traveling alone. Likely running away from someone she feared,\" Leland explains, and I nod. Makes sense. It was more of a comfort. Better to have it and not need to use it, than do need it and not have it.\n\n\"How far along was she?\" I ask.\n\n\"Not sure, she never really told us much about it. She was starting to show a little. So, maybe, two and a half, three months,\" Angela guesses.\n\n\"Now I have the how she did it. I still need the why and where,\" I say, and they look at each other, then shrug. \"Come on.\"\n\n\"She didn't tell us. She said she'd contact us after she got there. Let us know she arrived safely. She probably assumed we'd be asked, so never told us,\" Angela says. Katie wanted them to have plausible deniability. Her eyes start to moisten with tears. \"She never called.\"\n\n\"What else did she bring with her?\" I ask. I don't let myself get hung up on certain questions. I can always come back. \"Besides the gun and the money from the pawn shops?\"\n\n\"Some clothes,\" Leland says, trying to think.\n\n\"Records,\" Angela says, and sniffs hard to clear her snot.\n\n\"Records?\" I ask.\n\n\"Like music. Vinyl. Katie collected them.\"\n\n\"How many?\"\n\n\"A dozen maybe. She carried them in a plastic milk crate,\" Angela says, the last part of her sentence distorted from her phlegm.\n\n\"If you had to guess where she would go,\" I say, circling back around to repeat questions I don't have satisfactory answers for.\n\n\"Maybe her real dad who lived in upstate New York,\" Angela said.\n\n\"Wait...\" I say, and they thankfully get ahead of me.\n\n\"She lived with her mom and step-dad Tom. She kept her father's last name, but their last name was Hollinger,\" Leland said to help fill in my gaps. I'm really losing my edge if I overlooked Tom being her stepfather. I'm curious on who she was scared of, and a stepfather usually fits the bill.\n\n\"What was Tom like?\" I ask.\n\n\"A fucking dick,\" Leland says, her eyes narrowing as she said it. \"He was more concerned with getting his stuff back than looking for Katie. He was super strict and controlling. Never let her go out. Sometimes he would pick her up at school and Katie would just...\" Leland pauses, taking a deep breath, \"...she'd be fucking petrified. Not embarrassed your-dad-is-goofy petrified either. I mean fucking terrified to get into the car with him.\" Leland is now crying too.\n\n\"You never told the police this?\" I ask, and they shake their heads, and then hang them in shame.\n\n\"I almost didn't want them to find her. If they found her, they'd bring her back. And then what?\" Angela asks.\n\nI think I have all I need from them. I now have much more to work from than I did at the start. All I wanted was leads, and I have plenty of those now.\n\nThe women ask me to let them know if I find her. Regardless of what that means. I thank them for their time and apologize for tearing open the wound. After leaving the caf\u00e9, I call Frank Blanchard. It rings twice and he answers. I explain the reason for the call, and he says he's got the time to meet in person at his work. I only have a few questions, so it won't take long.\n\n--\n\nFrank Blanchard pulled the pin at exactly twenty years for the pension, and now works as an insurance investigator. He originally had a security supervisor job, but someone offered him a little more money to use his detective skills, so he jumped ship for a bigger paycheck. He's certainly an opportunist, but Lauren held the guy in high regard. Lauren called him 'lazy but honorable'.\n\nI take a cab to his work, and when I walk up to the front, he's outside smoking. He offers me one, but I decline.\n\n\"Which one of my illustrious cases did you want to talk about?\" Franks asks as we shake hands. I see his body tilt to look at my leg, and a lightbulb goes off. \"You're the dude who got his leg blown off by the Russian Mob.\"\n\nIt wasn't exactly blown off. We were transporting a suspect and got ambushed. The van rolled over, and my shin was snapped in the crash. I aggravated it beyond repair in the ensuing shootout in which my friend SWAT Sergeant Nathan White was killed. The suspect got away too, and no one has seen her since.\n\n\"Sorry,\" Frank says after I don't reply to the comment. \"Anyway, which case?\"\n\n\"I solved the My Cousin Caper for you,\" I say. Frank keels over in laughter, and then coughs from the cigarette smoke.\n\n\"That fucking case. That's an oldie. Before you tell me, let me guess,\" he says, and I raise my eyebrows. \"It was the daughters.\" I figured he knew it the whole time. The father just made it impossible to close.\n\n\"Yup,\" I say, and he laughs himself into a coughing fit again.\n\n\"I fucking knew it,\" he says while slapping his leg. \"How'd you figure it out?\" he asks like he honestly believes I did.\n\n\"They straight up told me less than an hour ago,\" I say.\n\n\"Statute of fucking limitations,\" he says, and I nod. \"Where the fuck is the Buick? That's the shit that always bothered me. I thought it was a fantastic prank until the car never materialized. After that, I had to lean on it like it was an insurance scam.\" I figured that's the reason he stopped talking to the girls. The suspect had shifted to Vincent Bach himself.\n\n\"I don't know where the car is now,\" I say, and he shrugs.\n\n\"Last lead I had, was in Pennsylvania,\" Frank says.\n\n\"Pennsylvania?\" I ask.\n\n\"After the car was reported stolen, the VIN number was distributed to neighboring states and added to a BOLO list. I thought it was an insurance scam, because the VIN for the Buick pinged in a repair shop in Pennsylvania. The date when it entered the shop was in fucking July. Two months before the owner reported it. I checked it out, they said some girl owned it, and drove out of town when the repairs were done. I showed the guy the picture of the daughters, but no go.\"\n\n\"Did you get a name of the girl?\" I ask.\n\n\"I probably wrote it down, but I don't remember,\" he says. \"The owner said he noticed it gone immediately. I figured the girls were pranking him, but his timeline of the theft gave the girls an alibi. They were with the pep rally squad for the first away game for the high school. They stayed overnight. After I couldn't find it in Pennsylvania, I handed it off to fraud. At that point I was only handling GTA.\"\n\n\"Anything else about the case stand out?\" I ask.\n\n\"Not really. It was just funny,\" he said with a laugh.\n\n\"Where in Pennsylvania?\" I ask.\n\n\"Not far over the border. I could ask my old colleagues if they can pull up the case file. Bare minimum give you the name of the town.\"\n\n\"Anything you can do to help.\"\n\nWe bullshit for a minute, and he asks me how Lauren is doing. Last I knew she's still working for the ECTF out in D.C. We tried to get together when I was visiting my dad last Christmas, but she was working. He kills the cigarette under his heel and goes into his building. I clean up his litter and hail another cab, hoping the address for the Hollinger residence is still accurate.\n\n--\n\nMonday - April 13, 2020: Three Days Gone\n\n~Midge Appletree~\n\nI sign out a van from the motor pool and Yvonne and I drive up to Chase's home in bumblefuck nowhere. Yvonne demands to play Michael Jackson on the ride up, and I eventually agree to alternate songs so we're both happy. The King of Pop is just not my style. If shuffled into a mix, he's tolerable. To punish me for the slight against her idol, Yvonne is mouthy during my songs, and won't talk during her own.\n\nThe one instance she talks during her music time is when 'You Rock My World' starts playing. She dances in her seat like it was a club and casually states, \"I'm pretty sure my second baby was made to this song.\" Her two sons are named Michael and Jackson. God help this world.\n\n\"You fuck to this?\" I ask.\n\n\"I dance to this. I sing to this...\"\n\n\"...please don't...\" Yvonne has the body of an angel, not the voice. Karaoke plus four Irish car bombs is not a good mixture.\n\n\"...I do laundry to this. I clean dishes to this. And I fuck to this.\"\n\n\"Part of me still believes the accusations against him,\" I say. Having a son reinforced that belief.\n\n\"All of me doesn't care. Believe what you want. I've read thousands of pages of court documents, transcripts, affidavits, sworn declarations, the FBI vault release, everything. You've read retracted tabloids,\" Yvonne says. Yvonne believes Michael Jackson is innocent, but I'm not sure. Too much weird shit. She makes a compelling case though. Everything I had heard she shot down in exhaustive detail last time we spoke about it. When she says she's read everything, she means it.\n\n\"What do you fuck to?\" she asks.\n\n\"I don't really bone to music,\" I say. It's not something Gianna and I do. I think a little more and remember that's not entirely true; it was a thing for Shane and me. Back when we 'kind of' happened. We'd put on some Rolling Stones, Queen, AC/DC, whatever, in the background. We'd make out more than we'd do anything else because he helped me redevelop my boundaries after I was raped. We never had sex, but we did everything just short of that. Even though I still proudly say I'm a lesbian, I don't regret a moment I spent with him.\n\nYvonne is a profiler, so she sees I'm leaving something out. I'm so used to her doing that, I just say it.\n\n\"Shane and I used to play music,\" I say. She knows about Shane. So does my wife. \"Stones, AC/DC, Queen. You know what I jam to.\"\n\n\"Fun fact, without Michael Jackson, there is no 'Another One Bites the Dust' as we know it. He talked the band into releasing it as a single,\" Yvonne says. I love her little factoids. \"Queen I get, but I can't do AC/DC. Middle of getting hot and heavy, then bam, big balls!\" Yvonne says, and I laugh out loud. I laugh because it happened. Shane's dick was halfway down my throat and my chin hit his nuts the moment it started playing.\n\n\"It's a left up ahead,\" Yvonne says. She's the one following the directions on her phone. I drive past a local sheriff's deputy who is parked in a position to watch the entrance of Chase's driveway. They're taking this seriously.\n\nChase's house stands at the end of a long dirt road. There are two cars in front, and I pull the van to the right. I park with the side door of the van facing his front door, so it'll be easier to load. I step out of the van and stretch. With the minute I have, I dig into my pockets for the cigarettes.\n\n\"Midge, we got a wife worried about her husband. Talk to her before you light up,\" Yvonne says from the other side of the van. I turn and see her over the hood. I can only see her because she's so tall.\n\n\"Fuck. Fine,\" I say, and shove the pack and lighter back into my pocket.\n\nJenn walks out onto the porch as we walk up the steps. I didn't know she was pregnant. Before she retired, she was briefly my Lieutenant. A strong empathetic leader. Half-Japanese, but you'd be forgiven for believing she was full. We hug for a moment, then she leads us inside. An FBI technician is sitting in her living room monitoring call equipment. It's all routed to our task force room next to the Chief's office, but someone must be present to make sure the equipment is running properly. Nathan sees me and requests a high five. I taught him that.\n\n\"What do you know?\" Jenn asks us.\n\n\"Not much of anything yet,\" I say.\n\n\"Chase was starting to make some progress on that case Derek gave him. An old missing person case,\" Jenn says. She takes us to Chase's office. I'm not surprised they chose a one-story ranch style. His office is the last room down a hallway. There is plastic sheeting over part of the house for renovation. \"We're building an addition for the baby.\"\n\nIf I didn't know in advance this was Chase's workspace, I still would have known by looking at it. A large whiteboard with information overload. His timeline is stretched across the board with articles and notes written to fill in gaps. He has question marks to annotate things he speculates rather than having evidence to prove. Chase is the master of organizing chaos. In the corner of the room is a large gun safe. Beside my service pistol, there is only one other gun in my house. Their safe is taller than me, and wider than two of me standing side by side.\n\n\"This looks like Chase,\" I say. Jenn nods in agreeance, as does Yvonne. She remembers his addiction to whiteboards to help him streamline his thoughts. Yvonne takes a picture of the board so we can put it back together the same way after we take it apart and move it.\n\n\"I have to give this to you,\" I say. I hand Jenn the warrant, and she nods, understanding the need even if we have her permission. Do it by the book so if we get a suspect, the defense lawyer can't pick apart this search.\n\n\"When was the last time you saw Chase?\" I ask. Yvonne starts the evidence collection while I conduct the interview. We agreed to this during the drive. Jenn would be more responsive to me asking the questions.\n\n\"He started driving to New York five days ago. He got caught up after his tires blew out in Pennsylvania, so had to stay in a town while new tires were being shipped in from Pittsburg,\" she explains, and write that down.\n\n\"New York City?\" I ask, and she shakes her head.\n\n\"Upstate New York. Katie Grossman's biological father lives there. Chase concluded after interviewing her old friends that Katie could have been going to her father's.\"\n\n\"Okay,\" I say, then jot that down as well. My eyes scan over the board, and I see a photograph of a car held by a magnet. I recognize the car: 1964 Buick Skylark. Underneath the picture he wrote My Cousin Caper. \"He solved that case?\" I was in Property Crimes for years, so I know that case. It's a legend in unsolved oddities.\n\n\"He thinks he did,\" Jenn says. \"Her friends swapped the cars so Katie could get a vehicle. Father claims he noticed it missing right away, but the girls told him the car was taken months before he realized. The VIN number popped up in a town called Whisper, which is where his tires blew out.\"\n\n\"I'll be damned,\" I say, then continue the purpose of the interview. \"When was the last time you guys spoke?\"\n\n\"Three days ago. He stopped calling, and now his phone is dead.\"\n\n\"What did you guys talk about?\" I ask.\n\n\"He mentioned something about Katie getting stuck in that town too. They both hit a pothole on the way in and needed repairs.\"\n\n\"Where was he stuck again?\" I ask.\n\n\"A town called Whisper in Pennsylvania,\" Jenn says. \"Local police there are looking, but they're saying he drove out of the town three days ago.\"\n\n\"Then nothing?\"\n\n\"Yes.\"\n\n\"Did he sound worried?\" I ask.\n\n\"Nothing like that. He said he was staying an extra day, because like I said, he found something that pointed to Katie Grossman also getting stuck in that town ten years ago,\" she says. That's a hell of a coincidence. The happenstance of their disappearances is far too suspicious.\n\n\"Did he take a gun with him?\" I ask, pointing to the safe.\n\n\"Probably, let me check,\" she says. I patiently wait for her to open the safe. I hear bars snap and watch her pull the door open. I stop counting their weapons when I finish the fingers on both hands.\n\n\"Jesus. How much would you wager you two have spent on guns?\" I ask.\n\n\"I don't want to know,\" Jenn says, managing a small laugh. \"Some girls collect purses and shoes. I collect guns.\"\n\n\"Anything missing?\"\n\n\"Glock44,\" Jenn says, pointing to an empty slot on her line of semi-auto pistols and revolvers. \"It's his favorite for conceal carry.\" I've looked at that gun as a training gun for the boys and Wendy. It's a .22 about the same size as a Glock19. Concealable, but only just.",
        "\"Caliber?\" I ask, just to make sure I'm thinking of the right gun.\n\n\".22,\" she says. I never figured him for a .22 guy.\n\nChase's collection of notes is packed into four boxes. We leave the whiteboard after deciding it's just easier using the pictures to rewrite his handwritten notes. After everything is loaded up, I finally light a cigarette.\n\n\"Whatcha thinking?\" Yvonne asks me. After a moment, she puts her hand out for a cigarette. I toss her the pack and she lights up as well. She's a former smoker, but still smokes socially. \"We going to this town? Whisper?\"\n\n\"If we go, we need someone working the case here. You remember Kaiser?\"\n\n\"Of course.\"\n\n\"He's MP now, he could run down everything Chase did. Maybe find some stuff he missed,\" I say, then flick the ash. MP is shorthand for Missing Persons.\n\n\"Flying or driving?\" Yvonne asks.\n\n\"I'd say drive. That's what Chase did. Pick up his trail the same way he got there,\" I suggest. Her thoughts exactly. \"Let's drop this stuff off. Head out first thing tomorrow.\"\n\n\"Sounds like a plan,\" Yvonne says.\n\nWe finish the cigarettes and toss the butts into the trashcan outside next to Chase's porch.\n\n--\n\nFriday - March 27, 2020: Two Weeks Before\n\n-Chase Kramner-\n\nThomas and Ruth Hollinger's address hasn't changed since Katie Grossman ran away from home. It's a large three-story townhouse in a more affluent part of town. At the door I provide my information, and Ruth invites me inside to talk in the living room without reservation when I explain why I'm here.\n\nRuth's once raven black hair has lost all color. This middle-aged woman looks like a sickly grandmother. She is only in her mid-fifties. The skin on her face sags like an oversized mask. Her clothing dangles off her body, her skeletal frame displaying her shirt as if it were held up on a hanger.\n\n\"I heard they found the gun she took. I was told the police couldn't do anything with that,\" she says after offering me water or some other beverage. She is drinking wine. It's the early afternoon.\n\n\"Any evidence on it would have degraded beyond use. It might not even have been her who put it there,\" I say. Ruth nods along and takes a long drink.\n\n\"You said you're a private investigator,\" she asks. I nod. \"Who hired you?\"\n\n\"An old detective who worked her disappearance initially,\" I say. \"The gun was the only new piece of evidence in ten years. When a case like this goes cold, it often stays cold. He asked me to explore the recent discovery.\"\n\n\"I think I remember the detective. A Wilson, or something. Whitesman?\"\n\n\"Whitaker,\" I say.\n\n\"That's the one,\" she says. She doesn't appear to know he's the Mayor now.\n\n\"Why did you never tell the police your daughter was pregnant?\" I ask. Sometimes you must ease in. Today I'm going in without lube.\n\n\"She was pregnant? Are you sure? I think I would have known that.\"\n\n\"Her friends say you were trying to force her to have an abortion,\" I say. She looks even more confused.\n\n\"Those two? Lisa and Ashley?\" she asks.\n\n\"Leland and Angela.\"\n\n\"Those two were trouble,\" she says dismissively.\n\n\"They said she was about two, maybe three months when she left,\" I say, and she takes another long drink, finishing her glass. She excuses herself to get more wine. I take the chance to stand up and look around the living room.\n\nExpensive and artistic furniture fills the room. On the table between us was a vase with fresh white lilies. When I examine the walls, I see no pictures of her missing daughter. A few pictures with her and Tom. Their wedding day, a few out with friends. Any happy days they might have had, are long behind them. In these pictures Ruth is a vibrant beauty. Tom looks like he wants everyone to know he can afford things.\n\nThe front door opens, and a man freezes when he sees me. Unlike the woman, he looks the same as he did ten years ago. Tailored suit, Rolex, and other indicators of wealth. Salon quality blonde hair, a strong and bulky build, and crisp skin from a tanning bed.\n\n\"Who are you?\" the man asks.\n\n\"Tom, this is an investigator. Talking about Katie,\" Ruth says while walking back into the room with her wine.\n\n\"Can I finally get my gun back?\" he asks.\n\n\"I have no control over that. Private investigator,\" I clarify.\n\n\"Ten years later? Now you care?\" he asks.\n\n\"It wasn't my case then. It is now,\" I say. Tom keeps his shoes on and walks toward me, his steps thudding as he approaches with the subtlety of a bull charging.\n\n\"Do you know something they don't?\" he asks.\n\n\"Katie's friends helped her steal a car. A Buick Skylark,\" I say.\n\n\"Like I said. Trouble,\" Ruth says from the chair.\n\n\"Whatever those girls say, you can't trust them. They lied before, they'll keep lying,\" Tom says, then steps toward his wife.\n\n\"Did you know Katie was pregnant?\" I ask. Tom hesitates a moment, then slowly sits down in his chair. He debates with himself for a moment, and nods.\n\n\"I knew,\" he says. His wife turns her entire body to him.\n\n\"You knew?\" I was thinking she knew but was denying it. That was a sharp response, showing genuine surprise.\n\n\"That's what I said. I told Katie she needed to have an abortion, or she wasn't going to live here,\" Tom says. He's the one who pressured her.\n\n\"You kicked my daughter out?\" Ruth says. I had seen enough domestic cases when I was a uniform, and these two certainly fit the bill. Tom is careful not to display his aggravation to her tone, but not careful enough.\n\n\"It was her choice,\" Tom says, and his wife turns her body away. \"It was also her choice to steal from us. Likely with the help of those so-called friends who helped her, what did you say? Steal a car? Jesus.\"\n\n\"What else did she steal?\" I ask.\n\n\"It's in the report.\"\n\n\"I'm not a police officer; I'm a private investigator. I don't have a full report. Just consider me a fresh pair of eyes,\" I say. Tom leans back into the couch and crosses his arms. He points his chin to the ceiling in thought.\n\n\"Some cash. A DVD player. A lot of electronics. A laptop, my video recording equipment, cellphone,\" he says, then huffs. \"I had to pay to get most of it back. The law is backwards as fuck. I was the victim twice.\"\n\nThe girls were right; he's more concerned about his belongings than Katie. I jot down his abridged list of goods and proceed.\n\n\"She managed to sell the items so easily because you kept receipts?\" I ask Ruth in particular. Ruth nods in response. \"It's a good habit to get into. What inspired it?\"\n\n\"Big ticket items I keep receipts for insurance and returns,\" Ruth says.\n\n\"What was her relationship with her father Roger?\" I ask.\n\n\"Fine. The only problem they had was distance,\" Ruth says.\n\n\"What about your relationship with him?\" I ask. The reason for their divorce could shed light on the motivation for Katie's departure.\n\n\"I divorced him when I found out he had another child with a different woman,\" she says while shaking her head. Her face holds an expression of contempt. \"Why are you asking about her father?\"\n\n\"The girls think she may have left to go to her father's,\" I say.\n\n\"The police checked with him. She didn't contact him before or after her disappearance,\" Ruth says.\n\n\"Does he still live in upstate New York?\" I ask, and she nods. \"Why would Katie run away? Aside from disagreeing with you on the baby?\" I ask while looking directly at Tom.\n\n\"That's the only reason I fathomed,\" Tom said. He didn't even care she left.\n\n\"Why didn't you tell the police she was pregnant?\"\n\n\"They never asked.\"\n\n\"Detective Whitaker never asked you to speculate why she would run?\" I ask, and he shakes his head. Bullshit. Absolute garbage. I don't need to pick a fight right away and get thrown out. I do note his demeanor, however.\n\n\"Why would she feel a need to take a gun with her?\" I ask.\n\n\"Figured she tried selling that too. It's a collector's piece,\" Tom says. Nickel plated with a rosewood grip. That's believable. \"Saved my life once too. I had a home invasion twelve years ago. Shot the intruder with it.\"\n\nI will look into that.\n\n\"Any more questions?\" he asks.\n\nI spend an hour in the house conducting the interview. If Katie had a boyfriend. Her academic history. What clubs or hobbies she had in school. I circle back to the relationship with her father. I want to have an accurate picture of Katie, and cross verify it with other people I will talk to later.\n\nKatie was polite and passive, didn't have a boyfriend that anyone seemed to know about, and was the most active in band. She played saxophone in the regular band for school, and in jazz band. It didn't appear she had many hobbies outside of a narrow musical niche, but she did have a large collection of vinyl records from the sixties and onward. Her mother said her favorite was Wham! and that she had a small crush on George Michael in general.\n\nI don't only take notes of what the two say. I also capture the way they say it, and their mannerisms. Ruth is clearly a distraught alcoholic who never leaves the house. She has no makeup and is dressed in clothes I'd wager she wore yesterday. Talking about Katie makes her smile, but the warmth of the memories is fleeting. The curl of her lips buckles under the weight of her grief. Tom is purely standoffish, daring me to accuse him of something.\n\nRuth notices her husband's anger, so leads me up the stairs to look at Katie's room. Maybe something will jump out at me, that hadn't for her. Katie certainly had a love for eighties music by indications of the posters. The room isn't overtly girly, but it was clearly a girl's room. Teddy bear on a floral bedspread. Posters of boys. Cork board with photos of her friends Leland and Angela. Under her bed are several milkcrates filled with vinyl records. Mostly pop music from the 80s and 90s. Michael Jackson. George Michael and Wham!. Madonna. NKOTB. She had personally written Katie on the back of each album in purple sharpie over the track listing. Another vase of white lilies in on her desk, and I ask her mother. They were Katie's favorite.\n\nI look the best I can, but I don't see a saxophone, or even the case for one.\n\n\"Where is her saxophone?\" I ask Ruth who is loitering at her door.\n\n\"Her saxophone?\" she repeats, and I nod. \"I don't know. I always assumed she took it with her.\" No saxophone or music records were sold at pawn shops when she sold the other valuables. She didn't part with those. She sold only the things that belonged to Tom and her mother.\n\n\"Maybe she sold that shit too,\" Tom says from the door. I sigh and turn to the man who is so broad shouldered he would need to turn sideways to step through the door.\n\n\"I can't help but notice, you and Katie don't appear to have gotten along,\" I say. His body takes a forceful lean into the bedroom, but Ruth touches his shoulder and coaxes him back.\n\n\"She was a teenager, and I was the evil stepfather,\" Tom says.\n\n\"Did you argue?\" I ask.\n\n\"Of course, we did. I got her a car, and she crashed it. Clothing, electronics, gift cards. It was never enough for her. I'd cut off her allowance for bad grades, or lying, or breaking curfew. Bottomless pit of entitlement. When I cut back on her, it's like I stole directly from the pocket of the pants I bought her in the first place. Her final thank you? Stealing more of my shit and running away with a stolen car.\" There is no grief toward her disappearance. No emotion. Nothing. His wife says nothing in the defense of her daughter.\n\nI jot my final notes down and close my notebook.\n\n\"Thank you for your time. If I discover anything, I'll keep you informed,\" I say. Neither of them see me out of their home. I walk down the stairs to the ground floor and exit the house without escort.\n\n--\n\nMonday - April 13, 2020: Three Days Gone\n\n~Midge Appletree~\n\nMy promise of a locked door with my wife is broken well before I manage to get home. It's eleven when I put my gun in the safe. Before I do anything else, I pack for the road trip with Yvonne. We are going to drive to Whisper, Pennsylvania tomorrow morning.\n\nMy old partner Sergeant William Kaiser is brought onto the case with his partner Detective Ingrid Hazel. They're covering for both Homicide and Missing Persons. Will and Ingrid will handle the local portion of the case, interview Katie Grossman's family, friends, etc. Retrace Chase's steps locally, evaluate all of Chase's work on the case to see if he missed anything. While Kaiser finds his trail in the city, Yvonne and I will go to the last place we can confirm his presence.\n\nGianna does not hide her irritation as I pack my suitcase. The last time we slept together was three months ago. Our marriage has been hit with a deadly combination of work and kids. If the kids are gone, she or I have offset shifts. If we manage to align our work schedules and thus our sleeping schedules, we catch Preston sneaking inside from a place he shouldn't have been, and he thinks I don't know what marijuana smells like. We have the drug talk, and by the time we handle that, I don't fuck my wife.\n\nI place my neatly folded shirts in the bag while Gianna sits up with her arms folded over her chest. Laying in the bed next to her is Shawn. Shawn being in our bed isn't new, but it is frustrating when we had plans to be physical.\n\n\"Shawn had that nightmare again,\" Gianna says. I pause to look at her, then resume packing. \"You even gonna ask?\"\n\n\"Is it the nightmare where he's alone, and can't find me in a crowd?\" I ask. Shawn gets separation anxiety. He panics if someone he trusts isn't nearby. That list of people he trusts is low. His nightmares reflect that fear, but thankfully he doesn't get them often. Every time he has had the nightmare, was when I wasn't at home. Not exactly subtle.\n\n\"When you said you wanted a baby, your own baby, I was okay with that. I was thrilled because I thought it showed a level of commitment from you, I hadn't seen before. When you had post-partum, I understood. I had it with Wendy, it's terrifying, so I'm never going to judge you for that...\"\n\n\"...get to the fucking point,\" I say. Gianna talks like this, when she doesn't want to piss me off before the fight even starts. The fight is still coming.\n\n\"I'm a married single mother right now,\" Gianna says. \"I've been one before.\"\n\n\"I don't have any say when I catch a case...\"\n\n\"...you fucking promised you were at the academy for three months, and that was barely a week ago.\"\n\n\"This case took priority.\"\n\n\"I try my hardest to have our schedules overlap so we can be married, and not roommates. It's starting to feel like you're my roommate,\" Gianna says. I stop packing and try to bottle it down for a moment. \"I've been pretty patient with everything. The hours, the nightmares, the smoking.\"\n\nGianna is an ex-smoker herself. I think she's pissed that I'm making it harder for her to still be an ex-smoker.\n\n\"What do you want from me?\" I ask. \"Promotions come with more work, not less. I took a shitty duty at the academy, for you, and they still found a way to fuck me over. I'm sorry about Shawn, if my son's too much trouble, I'll send him to his father's for...\"\n\n\"...why? Why do you do that? Have I ever spoken to or about Shawn, like he was anything less than my own son?\" Gianna asks. She is nearly crying. I didn't mean to hit that hard. Shawn is my son in the literal sense, but he is every bit as much her son as he is mine. Once I start verbally swinging, I don't always know when enough is enough. I sometimes forget I'm a trained interrogator, and my jabs are designed to get a response.\n\n\"I'm sorry,\" I say. Damn I really want a cigarette right now. \"You were his mother for the first six months, not me.\"\n\n\"No, Wendy was his mother for the first six months. She took such good care of him when I couldn't, and you were recovering,\" Gianna says.\n\nI wanted to be a mother. Not just a stepmother. I wanted my own baby. My best friend Shane gave me some sperm, and we made a baby together. Throughout the pregnancy, I was stoked. I counted the days. For some odd reason, I even enjoyed the kicking. Then I gave birth, and I shut down.\n\nI knew what post-partum depression was in the abstract. I had read articles on it and had seen it in the news. Hell, I had a case where a mother received a reduced sentence for drowning her baby, the defense using post-partum as a special circumstance. Never occurred to me that it could inflict me. Until it did.\n\nThe best way to describe it, is that it's scary. It doesn't make sense to yourself at an emotional level. Your baby shares the same level of attachment as a toaster. Only a toaster doesn't cry all night and shit its pants. Your mind tricks itself into viewing your baby as an object. A broken object.\n\nWhen Shawn was two months old, Gianna came home to me having left Shawn in the bath alone crying while I was sulking in the closet. The water left him red with a fever, but not burned. Thankfully, he had bath floaties. Shane took care of him for a few months, as I slowly acclimated myself to my son. During her summer vacation, Wendy helped me the most. Instead of being a teenaged girl, she helped me bond with Shawn.\n\n\"Look at me,\" Gianna says. I take a few breaths and do as she asks. \"I'm sorry for picking a fight. I know it's not you. You would love to be here for the nightmares.\"\n\n\"I would,\" I say. I walk around the bed and use my finger to move the hair from my son's face. He's an angel who wakes you up by pile driving your spine. \"How about I take him to his room, and we try to lock a door?\"\n\n\"You look beat. I'm okay. Really. Besides, he always wakes up on a nightmare night,\" Gianna says.\n\n\"If he cries, he cries. We'll handle it then,\" I say.\n\nI carry Shawn to his room and softly lower him to his bed. I pull the covers to his chest and kiss his forehead. He doesn't even squirm. As quiet as I can, I tiptoe back to my room, and lock my door.\n\nAs tired as I rightfully am, I don't want to rush it. I need it too much to cheapen it that way. Gianna needs this more than I do, so I focus on her orgasm first. I kiss my way across her body. Toys buzz her clit while I work other places. She climaxes, but I don't stop so she can breathe. She tends to lose the ability to exhale when she has an orgasm.\n\nThe sex is about to focus on me when Shawn decides it's nightmare time. I knew it was coming, and I'm okay with it. My robe is on a hook on the bathroom door. Shawn sounds like he settles down before I leave my room. Walking down the hall, I look into his room and see Wendy sitting on his bed. She's incredible, and I stand at the doorway to admire her.\n\n\"I'll stay here until you fall asleep again. I won't go anywhere. Promise,\" she says. Wendy knows I'm there and looks over her shoulder at me. She gestures to let me know she's got it. I mouth 'thank you' and return to my room to fuck my wife.\n\n--\n\nTuesday - April 14, 2020: Four Days Gone\n\n~Midge Appletree~\n\nWill and Ingrid had been up all-night making Yvonne and me a case book for travel. Something for us to review as we drive to Whisper, Pennsylvania. Chase had used his phone for directions, and the trip had synced on Jenn's devices as well. We have his exact route. He only took two pictures that automatically uploaded into his cloud. One was a photo of a photo, showing what looks like Katie Grossman standing next to the car in question. The other is a voyeuristic photo through a window, but the flash from his phone obscured the shot when it reflected off the glass.\n\nWe know he made two stops along the way. Likely for gas, food, or the bathroom. Without stops it was a four-hour drive. He took I71 until it reached I271. From there he took I90. He planned on staying on I90 all the way New York state, once he was done in Whisper off exit 4C. Not long after he took the exit, his tires blew out. Three tires in fact. The tow truck took him to Whisper, which was about twenty miles down the road.",
        "Jenn gave us his credit card receipts so we know exactly where he got gas and refreshments along the way. An hour into the drive we show his picture to the cashier of the gas station who shakes his head. Didn't expect him to remember. We called the state troopers in advance, so an officer met us there to help leverage them into giving us the surveillance video absent a warrant. Chase came about the time his receipt said, bought a coffee, paid for his gas, and drove north without incident.\n\nYvonne and I continue to I271 and turn off at the same place Chase did. Story is the same. Cashier didn't remember him. State Troopers helped get us the tape. Chase went to the bathroom and paid for coffee. No gas at this stop.\n\nBefore we resume the final leg of our drive, I stop to smoke. Yvonne resists this time. Apparently, her boyfriend smelled it on her yesterday, and she left her home with an incomplete argument. I admire she isn't using the chance to smoke more to spite him.\n\n\"Looks like he got this far without incident,\" Yvonne says, standing five feet away, and up wind from me.\n\n\"Let's get to ninety, then take the exit,\" I say, flicking the ash away from myself.\n\n\"You think he's dead?\" Yvonne asks. Someone needed to ask the question.\n\n\"I don't know. Stats tell me yes, but I know the guy. Chase is not a lightweight. If someone did get him, he left a mark somewhere. He's not going down without swinging,\" I say.\n\nChase once entered a motel room and was ambushed by two assailants. He was stabbed, but in the fight still managed to kill one and force the other to retreat. I've seen him run down a decathlete and spear tackle him onto the hood of a police car. The last thing he did as a cop was survive a shoot-out with the Russian Mob and lose his leg. He lost the leg because he carried a downed officer to another vehicle after it was already broken in six places. Chase doesn't look like he could, which is why it always catches people off guard.\n\nNow the statistics are telling me Chase is dead. Something in my gut doesn't buy it. I trust my gut more than statistics.\n\nYvonne is behind the wheel as we cross into the state of Pennsylvania. When the exit is close, I let her know with a mile of foreknowledge. Michael Jackson's 'Bad' starts playing as I direct her to exit 4C.\n\n\"Just up ahead,\" I say pointing at the exit sign. Yvonne is dancing rather than driving. It's a small miracle she makes the turn. \"You scare the shit out of me when you drive.\"\n\n\"You know it...\" she sings. Whisper is about twenty-three miles off the exit. According to receipts, Chase came off the highway to investigate the stolen car, but blew out his tires before he got there. I read his receipts from the case book, and then I look up at the road and see a motherfucker of a pothole coming up fast. Yvonne is dancing, so I know she doesn't see it, so I yank the steering wheel toward myself. \"Fucking Christ!\" The car slides onto the shoulder, and Yvonne swerves it back to the road before we hit the guard rail. We fishtail, and the car whips to a screeching halt facing the opposite direction.\n\nYvonne hands are white knuckling the steering wheel. Her fingers slowly relax their death grip. My angel's icy pale skin is thawing from a red glow.\n\n\"What. The. Fuck, was that?\" Yvonne asks in slow, bubbling anger.\n\n\"Look,\" I say, pointing to the pothole. Yvonne turns to the road and sees what I see. She drives toward it and pulls to the shoulder. We both remove our seatbelts and exit the car to get a closer look at the hole. It's a good foot deep, two feet long, and extends a full car length wide.\n\n\"Good looking out. Trading paint on the guardrail was the better option,\" Yvonne says. She takes a catcher's squat next to the hole. A car takes the exit, and we direct them around it before continuing our examination.\n\n\"This doesn't look like natural erosion,\" Yvonne says. She points to an observable pattern of digging. Like a pickaxe was used starting in the middle of the road and dragged backward toward the right shoulder. The rest was completed with a shovel.\n\n\"I think I know how Chase blew out his tires,\" I say. Yvonne agrees and stands upright from her squat. \"Call a tow.\"\n\n\"What?\" she asks. \"Why?\"\n\n\"Just do it. I bet you anything, they take the car to a shop in Whisper.\"\n\n--\n\nWednesday - April 8, 2020: Two Days Before\n\n-Chase Kramner-\n\nMy seatbelt stops my face from slamming into the steering wheel. Still hurt like a bitch and knocked the wind out of my lungs. I can hear hissing from air leaving my tires. The front right tire feels like the only one that was spared because the car slumps down to the rims at the others.\n\nWhat the hell just happened? I took the exit to Whisper, looked at my messages for a second, and bam! Three tires down to the rim.\n\nMy car screeches like metal grinding as I pull it to the shoulder with the momentum I have left to move. I take a moment to get my heartrate down, because that scared the shit out of me. Once calm, I stop the motor and open the car door. Before I step out, I check the straps of my prosthetic.\n\nI take a slow lap around my car and see that three of my tires are shredded. With one gone I could limp to a station on a donut, but three tires are totaled. What the hell did I hit? I turn toward the way I came from and start walking.\n\n\"You gotta be shitting me,\" I say out loud to myself. There is an unnaturally large pothole in the road. I take a knee on my real leg and pull at the road with my bare hand. It's so loose I pull a piece off. I growl in frustration and throw the piece into the hole. \"Goddammit.\"\n\nAAA tells me only one shop is within the radius of my wreck, and it just so happens to be in Whisper just down the road. I sit on the hood of my car with my foot on the bumper while I wait. I call Jenn as well to update her and hang up when I see the tow arrive. Good Knight Towing and Repair is decaled on the side of the flatbed truck. That's the same shop that fixed the Buick Skylark ten years ago. Blanchard couldn't get me everything, but he got me enough.\n\n\"That's some serious damage,\" the driver says as he climbs out of his truck. He's in mechanic coveralls he likely bought before significant weight gain. Long greasy black hair with uneven stubble on his cheeks and upper lip. Letters stitched onto his shirt say his name is Mort. The last person I want near my car.\n\n\"Just didn't see it,\" I say. He looks at the pothole and laughs at me. A blind man could have seen that pothole. I deserve to be mocked for this.\n\n\"That's what you get for being on your phone,\" he says while walking around my car to assess the damage. \"Least you still got one. Only problem is, newer models, the tires get more and more custom. We probably don't have it on hand. Need to order it.\"\n\nNow I must call Katie's father and let him know I won't make our meeting. I had him scheduled for later today. I would have crashed at a hotel in New York, and spent the next day driving back home but that plan hit a pothole.\n\nMort puts my car on the truck, and I drive in the cab with him after securing my gun in my concealed holster. It's twenty minutes of single lane roads flanked by trees and foliage. Every so often there is a driveway to a rural residence. Dirt driveways and wire fences to keep the livestock in.\n\nA sign on the side of the road is larger than the others, and it catches my attention. In cursive font, it says Welcome to Whisper. Population 317 and established in 1715.\n\nWithin five minutes, we're downtown. A two-way road wedged between two rows of single and two-story structures. Some buildings have maintained the fa\u00e7ade of colonial red brick. Some buildings take a more colonial French aesthetic. I believe in 1715 this part of Pennsylvania would have been French territory. I count eleven on one side, so I'll guess twenty-two separate structures. A quarter of the buildings are shuttered businesses. Pulled into the parking spots are an odd collage of old trucks, dented cars, with new models sprinkled here or there. Not too different from where I live. The generational rural population augmented by city dwellers who retire or are fed up with high taxes. The city dwellers often don't leave their politics behind, lacking any sense of self-awareness as they wonder why the rural folks don't have the political sensibilities of the city they left because of the politics.\n\n\"Town has seen some rough times?\" I ask.\n\n\"Booming actually. Just a few years ago this entire side of the street was gone,\" Mort says, pointing to the right of us. I see a bakery/coffee shop. The name of the bakery makes me laugh. Careless Whisker. Their logo is a cup of coffee with a cat in a chef hat with a paw over its mouth.\n\n\"Garage is just up ahead,\" Mort says. I turn to where he is directing me. A short drive from downtown is an auto repair garage. The sign above the building has the same logo as the truck. Good Knight Towing and Repair. There is a fenced-off lot to the right with a dozen cars. Mort puts the truck into park and jumps out to open the fence. I jump out as well, and as I'm climbing out, part of my prosthetic comes loose, and I'm completely off balance when I reach the ground. I stumble forward into the fence, barely managing to not fall on my face.\n\n\"You good?\" Mort says as he works the key into the lock. \"I didn't want to say anything, but you a vet or something? Lose the leg in Iraq or Afghanistan?\"\n\n\"Former police officer. Lost it in a shootout,\" I say.\n\n\"Service is service. Thank you,\" Mort says. He opens the gate by dragging it back, parts of the fence scratching against the asphalt. It's been pulled open so many times over so many years, there are valleys underneath the gate that match the swing. \"You can head in. I'll see you in a minute.\"\n\nA bell above the door rings loudly as I open the door. It's an old building with a long counter made with the skill of a first-year trade school student. Behind the counter are shelves advertising small components for cars like bulbs, gas caps, oil filters, tire caps, etc. The wall next to the doors is lined with photos from an instant polaroid camera, showing customers with their cars.\n\nThe owner appears to be an accomplished hunter if the pictures of him posing with a dead buck is any indication. He's kneeling with the rifle butt on the ground, the barrel pointed straight up. It was dragged to a hunting shack with naked trees in the background.\n\nAnother man emerges from an office. Looks like Mort, only older with a powerful moustache. I'd like the man to fix my car before I piss him off with questions about Katie.\n\n\"You the guy Junior went to pick up?\" he asks. His name tag also says Mort.\n\n\"I'm the guy,\" I say. He sees my leg, and tilts across the counter for a better look.\n\n\"Iraq or Afghanistan?\" he asks.\n\n\"Ohio,\" I say. \"It's looking like three tires. 2018 Ford Focus.\"\n\n\"The SE model?\" he asks. I'm surprised he knows to ask.\n\n\"Titanium. Four-door hatchback,\" I reply.\n\nMort types into a computer to look up the car. I'm surprised he has a computer... I don't know why I just assume a small town is full of country bumpkins who don't know what computers are. Born an elitist prick, always an elitist prick.\n\n\"Ohio a city in Iraq or something?\" he jokes.\n\n\"Feels like that sometimes,\" I say, and he chuckles.\n\n\"We'll need to order the tires. We got nothing in stock.\" For a Ford Fucking Focus? \"We don't even have a loaner right now,\" he says.\n\n\"How soon could I get back on the road?\" I ask.\n\n\"A day. Two tops. I'll put in a rush order to Pittsburg,\" Mort says.\n\n\"Fuck,\" I say and step away from the counter to make some calls. I update Jenn and call Roger Grossman. After I make the calls, I start looking up any hotels I can stay in for the next few nights. Looking like only one is nearby, and Uber doesn't exist out here.\n\n\"You hit a bike or something?\" Senior askes. Junior walks in from the door leading to the garage.\n\n\"He hit that pothole right off exit four.\"\n\n\"The state needs to do something about that. That's government for you. Liberals keep arguing, 'without the government, who'd build roads?'. Gotta wonder if they've ever seen a road let alone drove on one. We get at least two people a month who don't see that hole. Been there for years.\"\n\nI wonder if the reason the hole has been there for years, is because someone keeps it there. Great way to keep business coming if you're a small-town repair shop. Probably helps the one bed &amp; breakfast I need to stay at, too.\n\n\"I'll put on a police and military discount. They got a few models, ranging from about $190 to $250 a tire before discount. Junior said the tires you had were the Blizzak WS90. Might be why they went so easy because those are winter tires, so I'd recommend a complete set.\" I never would have noticed. Cars are not my thing. \"I'd recommend the Potenza. All season, and relatively cheap compared to some of the others. $190 apiece, times four, work and taxes, run you about $800 after the computer does the math for the discount.\" Not like I have a choice.\n\n\"You need a deposit?\" I ask.\n\n\"You can check out when the work is done. Just give me your number, I'll give you a call when the tires arrive,\" Senior says. I leave him my number and wait for him to print out the estimate. While he's doing that, I look around the shop again, and decide to give the wall of customers a gander. Senior looks like a creepy old man. His son must have taken the pictures because it's only himself with female customers in front of their cars.\n\n\"Satisfied customers,\" Senior says over the printer. Sure thing.\n\nI was coming to this shop regardless because I know the Buick Skylark was here. Katie was here. My eyes scan the pictures left and right, up and down. I slow my search, spending a few seconds on each picture. I hide my smile when I find it.\n\nKatie Grossman is posing in front of a metallic mint-green 1964 Buick Skylark with a white convertible top. I pull off the picture held onto the wall by a piece of tape folded onto itself. \"Careful...\"\n\n\"...when was this?\" I ask.\n\n\"When was what?\"\n\n\"This girl,\" I say, pointing at Katie. \"When did she come in?\"\n\n\"Hmm,\" he says, giving it a good look. \"Can't say for sure. Honestly, I remember the car more than the girl. Buick Skylark,\" he says with whistle. \"She came by during hunting season some time ago.\"\n\n\"I'd hope you'd remember because the car was reported stolen,\" I say. He is instantly defensive, crossing his arms over his chest. He's also suspicious that I know about the car.\n\n\"Yeah, and a cop with two legs showed up asking. I gave him what I had, and he left. Why do you care? You're not a cop,\" Senior says.\n\n\"I don't remember nothing either...\" Junior begins but is cut off by his father.\n\n\"No one was asking you. Go work on some cars boy.\"\n\n\"Can I keep this?\" I ask.\n\n\"No,\" Senior says flatly.\n\n\"Ten bucks.\"\n\n\"Not for sale,\" he says. He extends his hand out for the photo. Before I give it back, I use my phone to take a picture of the picture. \"Really?\" I hand it back to him. \"That's the same as keeping it.\"\n\n\"Should have taken the ten bucks then. What do you remember about the girl?\"\n\n\"Like I said, I remember the car more than the girl. We fixed her up, and she drove off.\"\n\n\"You got records? A copy of a driver's license? Insurance? Registration...\"\n\n\"You got a warrant? Or a badge, Mr. Used to Be a Cop.\"\n\n\"Look man...\"\n\n\"...we don't remember...\" Junior tries to chime in again.\n\n\"...shut your fucking mouth Junior!\" Senior snaps, and turns to me, placing a finger directly into my chest. \"I get you got things you need to do. Where this girl comes in ain't my business, don't know, don't care. But this business, is my business if you catch my drift. You want to start going through my receipts, you better come with at me with a judge's blessing.\"\n\nSenior won't back down, so I show him my hands in momentary surrender. I need to get my ducks in a row and regroup before I come at him again. The first thing to do is talk to the local law.\n\n--\n\nTuesday -- April 14, 2020: Four Days Gone\n\n~Midge Appletree~\n\nA man in a mechanics suit two sizes too small and greasy hair arrives to give us a tow. I flick the cherry off my cigarette and slide the butt into an empty pack filled with other butts. His name is stitched onto the coveralls and says Mort. We let him take a walk around the car until he realizes there isn't anything wrong with it. He is too confused to ask why we called.\n\n\"We just wanted to see who'd show up,\" I say. He sees we're both armed and takes a cautious step back. \"Relax, this isn't a shakedown. I'm Detective Appletree, my compatriot is FBI Special Agent Grimsdotter. Just want to ask a few questions.\"\n\nWe take a moment to show our badges. \"What about?\" he asks.\n\n\"A few days ago, did you see this guy?\" I ask. I prepared some pictures before he got here and show him one of Chase. \"Chase Kramner. Likely hit that pothole and called you on the eighth.\"\n\n\"Don't recognize him,\" he says. He's a bad liar. His eyes bulged, and his voice dropped sharply. He doesn't even want to look at me or the picture.\n\n\"2018 Ford Focus sound familiar?\" Yvonne asks.\n\n\"Common car.\"\n\n\"You telling me you don't remember a guy hobbling around on a fake leg less than a week ago?\" I ask. \"Small towns, everyone knows everyone. Everyone also knows when someone is not from round here,\" I say with exaggeration. He looks somewhat insulted by my drawl.\n\n\"I was off last week. Wasn't working. Tows were done by the other guy,\" Mort stammers out.\n\n\"What's the other guy's name?\"\n\n\"Mort,\" he says.\n\n\"Your name is Mort.\"\n\n\"So is the other guy. I work the shop with my father, he's also Mort. He's Senior, I'm Junior.\" Who refers to their own father, as the other guy? Someone who didn't expect someone to come sniffing so soon.\n\n\"Well Mort, we need to talk to the other guy then,\" Yvonne says, and walks past him to the car. She retakes the driver's seat, and I slide into the passenger side.\n\n\"We have to press him more. He remembered Chase. That guy is lying through his teeth,\" I say.\n\n\"I know, but let's get him nice and scared,\" Yvonne says.\n\n\"Why? He'll call the other guy so he has time to prepare his answers,\" I say.\n\n\"You have to know which questions I'm going to ask to prepare the answers for them,\" Yvonne says and pulls away from the tow truck. I watch Mort stare at us from the rear view. He's already pulling out his phone.\n\n--\n\nGood Knight Towing and Repair is just past the main street of Whisper. A structure with two garage bays and a fenced in lot I will assume is for the people who get towed within twenty-five miles of the town. The same logo that was on Mort's truck is above the door. It's a knight in grease-stained armor repairing a car that looks like an armored horse.\n\n\"Cute sign,\" Yvonne says before she shuts the car door.\n\n\"What's the strategy? Good cop?\"\n\n\"Nah. I'm thinking hot cop, obvious lesbian,\" she says and walks toward the door.\n\n\"I don't know what that means,\" I say, scrambling to follow her. The door chimes loudly from a bell above the door.\n\n\"Be right there,\" a voice says from an office. \"I gotta go. I think they're here,\" he says, but I imagine he thinks he was quieter. \"Sorry about that. Taking a call.\" He's older, looks a lot like the other guy, and sure enough, his name tag says Mort.\n\n\"From Junior I take it, giving you a heads up two cops are looking for the guy you claim you don't remember.\" Yvonne digs right in. I'd be a little more subtle, but that's just me.\n\n\"I don't remember him.\"\n\n\"You haven't even looked at a picture. Please, get the continuity of the lie prepared first. Ready?\" Yvonne says, and slides the picture across the counter. \"Remember him now. Nice hair, tall, personality as comforting as a Brillo pad tampon?\" I need to write that one down.",
        "\"He's never been here.\"\n\n\"First rule of interviews Mort,\" Yvonne says, and snaps toward me without looking. Bitch, we didn't talk this plan through, what does a snap mean? \"File.\" I know what's she's doing now. I open the file under my arm and pull-out Chase's receipts for the auto repair. \"First rule, is if you can help it, never ask a question when you don't already know the answer.\"\n\nChase's receipts for the repair are placed in front of him. Mort's posture implodes into himself. He rapidly looks down at the evidence, and up at her eyes. He's trying to think of a way this makes sense without having to admit he remembers.\n\n\"Last chance before the bad cop takes over,\" Yvonne says, and points at me with her thumb over her shoulder. \"You think I'm bad? I actually like the occasional dick.\" Is she alluding to me being a man-hating, angry lesbian, bad cop?\n\nMort sighs and hunches over the counter on both palms. \"He came in a few days ago.\"\n\n\"I know he did. Where the hell is he?\"\n\n\"He drove out of town after the repairs.\"\n\n\"I don't believe you,\" Yvonne says, and Mort's sigh is deeper. \"Because if he just drove out of town, you'd say he drove out of town without telling me you never saw him. Now that we've established you can tell the truth occasionally, let's improve your batting average for candor. Where the fuck, is he?\" Verbal escalation. She didn't start at fuck, but she let it get there organically.\n\n\"I'm just saying what I was told to say...\"\n\n\"...what the hell does that mean?\" I ask, and his head whips to me. His chin drops because of the height disparity. \"Who told you to lie in the event someone comes asking?\"\n\n\"I'm not looking for trouble.\"\n\n\"Neither are we. We're looking for something else entirely, but we're finding trouble,\" I say and step up to the counter. It's time for the man-hating, angry lesbian, bad cop. And damn that's a lot of adjectives. \"Mr. Kramner hit that pothole. You, or Junior, or someone else, don't care, towed him here and fixed him up. A few short days later, he up and disappears like your balls in a pool. What was he doing while you were fixing his car, and who doesn't want me to know?\"\n\n\"The Sheriff said if someone asked, don't answer questions, just send them his way. He was investigating someone, or something like that,\" Senior says.\n\n\"Was he investigating this girl?\" Yvonne asks, and shows him a picture of Katie Grossman. I want to talk about this Sheriff more, but all color fades from his face so I let Yvonne keep going. \"Chase told his wife he thinks she got stuck here too. Why would he think that?\"\n\n\"Don't know,\" he lies. These guys are amateur liars. I scan the room and see a wall of pictures. I watch him become uncomfortable when he sees me look at it. Getting warmer.\n\n\"Customers?\" I ask.\n\n\"Yeah...all satisfied customers,\" he says in a trembling voice.\n\nNothing is standing out. Granted most of them look annoyed they asked for a picture, but besides that, it's innocent advertisement. I count four complete rows of five, and two incomplete rows of four. The man loves to take pictures with girls. He seems to have a thing for brunettes. Sometimes it isn't about what's there; it's about what's missing. Whoever puts the photos on the wall is mildly compulsive. No picture overlaps with another, forming even rows with only small tilts, but nothing distracting. They removed a picture, and didn't replace it with another, leaving an eye twitch inducing gap in the collage.\n\n\"Wait a minute,\" I say, and scan through the files. Jenn had provided all the pictures that went to Chase's cloud. Amongst them is a photo of a photo, showing Katie Grossman posing next to a Buick Skylark with a thinner version of Senior.\n\n\"What was here?\" I ask, pointing to the space. His face is panic. Pure panic.\n\n\"Umm...must of...must of fell off,\" he says. I look at the floor, and do not see a photo. \"Probably swept up.\"\n\n\"What did my partner say about us not asking questions we don't know the answer to?\" I ask, and then show him the picture of the picture. \"Katie Grossman was here, wasn't she?\" I ask. Yvonne doesn't look at me, but she doesn't need to, to back my play. She knows what I'm doing and postures to add pressure on him. \"July 2009.\"\n\n\"I couldn't tell you the girl's name. I don't remember that far back.\"\n\n\"1964 Buick Skylark,\" Yvonne says, and he gulps. \"You think I got a problem getting a warrant from a federal judge? I'm FBI. I can get one today.\" She can absolutely have a problem getting a warrant. He doesn't need to know that, so I dog pile.\n\n\"Better yet, let's add a few agencies. EPA gonna like your waste disposal practices? Are your business licenses up to date? You keep separate books for unneeded work and pocket the difference? IRS frowns on that,\" I say, and I watch each threat land like Mike Tyson swung at him. \"Or you let us see your receipts.\"\n\n\"Alright,\" he says with his hands up. \"She was here.\"\n\n\"When and why?\" I ask.\n\n\"Why what?\" he asks.\n\n\"Why was Katie Grossman here?\" Yvonne asks for me. He's getting whiplash from our back and forth. That's a strategy we get trained to use, and we landed on it by our mutual instinct and experience. Talking to a cop is like walking into a ring to box a pro with a 50-0 record, and there are two of us. Just don't do it. That's what lawyers are for.\n\n\"She hit that pothole, same as the other guy.\"\n\n\"How the fuck do they hit the same pothole, ten years apart?\" I ask. I know the answer, but I want him to say it.\n\n\"Because...we...uhh...\"\n\n\"You go out there with a pickaxe and shovel to bring business to town,\" Yvonne says. Mort slowly nods. \"You fixed the cars. Then what?\"\n\n\"Then they leave. Honest to God.\"\n\n\"What about the Sheriff?\" I ask. \"Did the Sheriff say send them his way, or to lie to whomever comes looking?\" I ask, and he goes silent. There is a long pause, and he doesn't reply, but his face is contorting like he's trying. \"Where's the Sheriff?\"\n\n\"At the station.\"\n\n\"No shit,\" I say, then contain myself before I continue. \"Where is the station?\"\n\n\"Take main street north until it turns into Foret street. Only building for five miles, can't miss it,\" he says.\n\n\"We're going to go talk to the Sheriff. We will be back. When we get back, I want everything you have regarding Mr. Kramner and Ms. Grossman,\" Yvonne says and hands him her card. \"This number calls you, you answer the phone, or some three letter agencies will be called next. You understand?\" Mort's shaky hand takes the card, and he confirms he understands.\n\nYvonne scoops up the evidence we put on the counter and gestures for me to lead our exit. I don't enjoy how I look like her lackey and not her partner, but I get it. She's much more intimidating than me, and FBI scares people more than my badge does. Best we maintain the perceived hierarchy of authority between us.\n\n\"Woo,\" Yvonne says when we're at the car. She shivers her work persona off her body and gestures like she has a cigarette in her mouth. I toss her the pack and lighter. \"Fuuuuuck that feels good. Been a minute since I dug a dick that deep.\" In practice, she's attached to the Behavioral Science Unit of the FBI as a profiler. Lot of desk work and research. It's not often she's pulled for something like this.\n\n\"You're the type who actually enjoys it,\" I say, and light up as well. \"I thought interviewing suspects was cool, until I was doing it in homicide. You get a few guys who have no shame in their actions and decide they want to explain every grisly detail just to watch you squirm.\"\n\n\"Not me. I love it. Better than sex,\" she says, then exhales a cloud of cancer. \"Way to follow my lead in there.\"\n\n\"Hot cop, obvious lesbian,\" I say between puffs. \"I'm not that obvious.\"\n\n\"You had a baby, and people went from thinking you had a dick to wondering if you like them,\" Yvonne says. She's not wrong. I was more androgynous before I had Shawn. Now I have something resembling boobs and my hair is to my ear lobes.\n\n\"Sheriff or hotel first?\" I ask.\n\n\"It's a bed &amp; breakfast actually...\"\n\n\"...same thing...\"\n\n\"...our check in isn't for a few hours, we got time.\" Her eyes catch something, and I follow. \"Looks like the Sheriff found us,\" Yvonne says, and points with the hand the cigarette is in.\n\nA forest green Ford Bronco approaches us and turns into the gravel lot two car lengths away. Decaled on the side of the truck is Sheriff Patrol and the badge for the town. A seven-point star extending out from under a circle that says Township of Whisper. A man steps out of the truck and places a brown wide brimmed sheriff's hat on a shiny bald head. He's wearing a tan, long sleeved shirt with forest green pants and tie. His badge matches the one on the truck, and his golden name plate with black lettering says Knight. The man in the uniform is well groomed and carries it with swagger, even with a cane to help him walk. If I needed to guess, I'd say late fifties.\n\n\"Nice face,\" Yvonne says, and the man lets out an embarrassed laugh. He has a mostly healed bruise on his face from God knows what.\n\n\"Face planted off a curb, cane missed it. Ladies,\" he says, tipping his hat to us. Small-town manners. I already hate this place.\n\n\"Special Agent Grimsdotter, FBI. Detective Appletree,\" Yvonne says to introduce us. \"We're looking for the Sheriff. Could you help us?\"\n\n\"You're looking at him. Sheriff Arthur Knight. I go by Art. Wondering when someone would show up,\" he says. He extends his hand for a shake, which Yvonne returns. Yvonne looks over her shoulder at the sign for the auto shop. \"Mort is my cousin.\"\n\n\"Why did you tell Mort to say he never saw a man named Chase Kramner?\" Yvonne asks. His face snaps into confusion.\n\n\"Mr. Kramner?\" he asks, and Yvonne gestures something I can't see, so I start to walk around the car. \"I didn't say that exactly. I said send them my way. Small towns like two things; spreading gossip and spreading it wrong. I wanted it coming from me, so the information wasn't diluted through a game of telephone.\"\n\nYvonne played that wrong. She made him aware of what Mort told us he told him, allowing him to walk it back without making it look like he was hiding something. Assuming Mort was being honest regarding what he was told, which is certainly in question.\n\n\"Where is he?\" I ask. He offers me a handshake once I'm in arms reach.\n\n\"As far as I know, he drove out of town, let's say, a few days ago. Said he was moving on to New York,\" Art says after a moment of thought. I don't know if it's the uniform, but Art comes off less deceptive than his cousins. When I say less deceptive, I just mean a more rehearsed liar.\n\n\"Let me get this straight. You told Mort, to tell anyone who came looking for Mr. Kramner, to talk to you first?\" Yvonne asked.\n\n\"That's right,\" Art says. \"Mr. Kramner was looking for a girl who went missing some years ago. Some people in town remembered her, I helped him ask around. He left for New York, and a few days later I'm getting calls he's up and vanished too. I did my part of the looking and was told the Feds may send someone. I told Mort if someone came, send them to me.\"\n\nYvonne pauses, and I try to figure out my next question as well. He appears on the level, and his answers are making sense.\n\n\"Three days ago, his phone went dark,\" Yvonne says. No, Chase went missing four days ago. Yvonne usually has a plan, so I'll assume she did that on purpose for reason I haven't caught onto yet.\n\n\"I think Mr. Kramner left on...I want to say the tenth. So, he called a day after he left, but this is the last place you know he was?\" Art asks. Yvonne looks flustered.\n\n\"I'll have to double check my timeline, only had the chance to read it on the drive. Hasn't fully absorbed yet,\" Yvonne says to salvage. \"Could we rely on you to fill in the missing pieces?\"\n\n\"Sure can. Happy to help,\" Art says with a grin. \"I'd recommend starting at the local coffee place. I know Mr. Kramner talked to the owners.\"\n\n\"Lead the way,\" Yvonne says.\n\n--\n\nWednesday -- April 8, 2020: Two Days Before\n\n-Chase Kramner-\n\nThe Morts refuse to give me a ride to the Sheriff, so I take my backpack with my one change of clothes, files, and notes, and I limp down the road cursing. My concealed carry is chaffing my leg something fierce. A good hour later, Sheriff Arthur Knight looks at me from his desk after I'm directed to him by a deputy named Randall. The Sheriff is an older man with a shiny bald head but can still play with the young bucks. Trophies from his youth suggest he was an accomplished wrestler in college up to the collegiate level. Also a hunter when I see other pictures with game kills.\n\n\"Can I help you?\" he asks. Arthur interlocks his fingers and puts his elbows down on the desktop. I must look like a sweaty and disgruntled pile of shit at this point.\n\n\"Chase Kramner, private investigator,\" I say. He notices my struggle to get to his desk for the handshake.\n\n\"Iraq or Afghanistan,\" he asks when he sees the leg.\n\n\"Neither. Lost it during my time as a police officer,\" I say. He holds up his cane, letting me know he likewise has mobility issues.\n\n\"One of my old deputies accidently discharged into my leg cleaning his weapon. He's not employed anymore. Not important. Glad to help a former officer regardless,\" he says. \"Why's a PI in my township?\"\n\n\"I came to town to talk with Mort about a stolen car and its driver from ten years ago. Now I'm stranded,\" I say.\n\n\"Let me guess; you hit that pothole at exit four?\" he asks, and I nod. \"Motherfuckers. I know Morton and his son keep digging the hole, I just can't catch them. I've set up cameras, everything. Elusive little shits. Sorry about that.\" I had a feeling that's what was going on.\n\n\"I was on my way to upstate New York to interview the father of the driver who went missing over ten years ago. I know she got stranded in town because the car she took was reported stolen by the Good Knight,\" I say. At that moment, the name clicks. Sheriff Knight. \"Related?\"\n\n\"Unfortunately. They're my cousins.\"\n\n\"Sorry to hear that,\" I joke, and he smiles. \"This girl was here, so this is officially her last known whereabouts. He wouldn't let me keep the photo, but I took a picture on my phone,\" I say, pulling my phone from my pocket and opening the picture. I also place down the picture of her I already had to show it's the same person. \"Katie Grossman. Disappeared July 2009.\"\n\n\"Cute girl,\" he says.\n\n\"Cute enough to remember?\" I ask.\n\n\"I was still married in o'nine.\"\n\n\"They don't stop being pretty just because you're married,\" I say, and he laughs. \"My wife is plenty gorgeous, and I still get slapped for looking now and again.\"\n\n\"I believe you. So was mine. Too pretty for me though,\" he says. \"Irish redhead with a black ass. Always wanted to take my stepdaughter hunting, but never got the chance before we got divorced. Real shame.\"\n\n\"Mine's half Asian,\" I say.\n\n\"Damn. I bet that pussy tastes like pineapple,\" he says. That veered into a level of awkward I wasn't ready for. \"This girl was in town but must have been behaved because I don't remember her. Ten years ago. Not a whole lot to work with.\"\n\n\"More than I had a few hours ago,\" I say, and he nods in understanding. \"Mort Senior is sitting on records I could use to answer a few questions. If she drove out of town, it means they fixed her car. That means receipts.\"\n\n\"Depends on the business practices, I doubt he keeps receipts that far. Something tells me a guy who is willing to dig holes to bring business, is also doing some fishy shit with his receipts. Mort doesn't keep any loaners on purpose. Forces people to stay in town at the bed &amp; breakfast which just so happens to be owned by his sister.\"\n\n\"The coincidences are astounding,\" I say sarcastically. Arthur seems to be genuinely annoyed at his cousin, and I might be able to use that. \"Can you help?\"\n\n\"I'll take a shot at Mort. Not the first time I've had to. What's her name again?\" he asks.\n\n\"Katie Grossman. Driving a Buick Skylark. She'd have been here in July 2009,\" I say.\n\n\"I'll see what I can get out of him. I'd recommend going to the B&amp;B, rest up. Head down this street, take a left on Lac...you don't have a car,\" he says, and calls a deputy named Lionel into the office. \"Get a car ready. The B&amp;B is called Whisper Lake Lodge, named because it's near Lake Mur. Shocking, I know. It's one of the oldest buildings in the town. You'll be looking for Morgan or her boy Lance. They run the place. Get settled in, we can reconvene in the morning.\"\n\n\"Sounds like a plan,\" I say.\n\n\"For my own SA, are you strapped?\" he asks, SA meaning situational awareness.\n\n\"Want to see my CC?\" Conceal carry license. \"It has state reciprocity.\"\n\n\"Nah. You'd look out of place not armed around here. You ain't supposed to bring it in a police station but seeing how you don't have a car to put it in, I'll let it slide,\" he says, not even asking to see if I can legally carry my gun. I guess he figures I wouldn't be that stupid.\n\nI don't know if I can trust him to do anything for me, but I don't really have a choice. Considering how easily he dimed out his cousin on the pothole matter, I imagine there isn't much love lost between the two men. For now, Sheriff Knight will handle the Morts, and I'll head down to the B&amp;B.\n\n--\n\nDeputy Lionel is my personal driver for the time being. He's young, quiet, and appears annoyed to be a babysitter. Slick black hair with long bangs almost touching his chin. Structurally impressive with biceps so large it looks somewhat difficult for him to steer the car. Maybe he took up wrestling like the Sheriff.\n\nLac street is over two miles long and dead ends at the Whisper Lake Lodge. I have noticed many of the names in the town are French. Foret being forest or woods, Lac being lake. Even mur is likely short for murmur, which is rooted in French for whisper. Lake Whisper in the Whisper Woods.\n\nLionel pulls us to a gravel parking lot at the dead end. Signage directs foot traffic down a paved path to the lodge. Only one vehicle is parked when we arrive: an older SUV with handicap plates.\n\n\"Lance had an accident years ago. Lower spine injury. He's confined to a wheelchair,\" Lionel says when he spots me checking out the plate on the SUV. \"Feel free to ask him, he's a good sport.\"\n\nLionel says he'll pick me up in the morning, and I walk up the path to the lodge alone with my bag. It's a good quarter mile before the lodge is even visible. The path crests at a hill and on the other side is the lake and the lodge. Once I get up the hill, I have to stretch my right leg because I was compensating for my lack of a left leg. While I loosen my muscle, I gaze down at the lodge.\n\nHistorically for me, a lodge is a ski resort in Vermont or New Hampshire. It has lifts to the mountain peak, a massive lodge with a log cabin aesthetic and private bungalows that can comfortably house five people. That is not this place. While nice to look at, it's a humble lodge that can maybe shelter ten guests at a time. I can see a few houses with private docks at different points around the lake, but it doesn't seem like the Lodge has its own in walking distance. The trees are a combination of deciduous and evergreen, lush and green. The wildlife is loud in every direction; birds, bugs, and whatever is making the bushes rattle.\n\n\"Not bad,\" I say, and continue to down the hill.\n\nThe front of the lodge is two heavy wooden doors. I readjust my footing to pull it open. I take a step inside and almost immediately flinch back when I look to my left and see a stuffed black bear. More taxidermy decorates the space, including the mounted head of a seven-point buck and a boar. Part of the hallway on the second floor is a balcony overlooking the atrium."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "crime",
        "drama",
        "straight",
        "criminal affair",
        "lesbian",
        "police",
        "novella",
        "novel"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/without-a-whisper"
}