{
    "title": "Jennifer's Foot Job",
    "pages": [
        "Authors Note:\n\nThis is a story written by Jennifer, one of my dedicated female readers (as if I have a lot of those). She has asked that I edit and submit her story for her. Since her feedback, and feedback from readers like her keep me going, I felt it would be a nice gesture on my part to grant her this request. Besides, I have noticed most foot fetish stories are written from the receiver's point of view and thought it would be nice to post one written from the givers viewpoint. Based on this alone I felt it was worth submitting. Those of you into this stuff I hope you enjoy the read, and feel free to email me your feedback. I will be sure to pass any and all feedback on to her.\n\n* * * * \n\nFirst I would like to describe what I look like and give a general description of what my interests are. On occasion men and women have told me that I am attractive. My name is Jennifer but I go by Jen. I am a 22-year-old straight female and stand approximately 5'8\". My weight fluctuates between 130 and 135 pounds. I have shoulder length brown hair. I have been told my skin is olive in complexion (never understood what that is) I have size 8 feet, which I feel are too big. My legs are long and I have been complimented on them as being shapely and sexy. I am extremely active. I enjoy jogging and playing sports (volleyball, softball, and basketball.) Yes, I was quite a tomboy as a teenager and continue to keep myself in what I would like to consider fairly good shape. \n\nMy first experience with foot sex was with a boy I was dating in High School. I was in my junior year and active in sports as was he. Looking back now I was amazed at how quickly into our relationship he admitted he was attracted to my feet. I thought it odd, especially since I was self-conscious about my feet, feeling they were much too large. I gave my first foot job that night. After witnessing the affect my feet had on him and the end result of bringing him to complete orgasm as well as the feel of his hot seed on my feet and lower legs I was became hooked. I never missed an opportunity to get him off with my feet and toes. His infatuation with my feet was so great he never denied me the opportunity. We had regular sex as well, but it seemed we both preferred my giving him foot-jobs. Just the feel of his warm hard cock between my soles and toes excited me and made me hot. Watching the state of sexual bliss contort his face and how his body would lose control just before bringing him to orgasm with my feet gave me a sense of pleasure and control I never knew I could feel. Over time I had gotten so adept at recognizing his little body sounds and reactions that I was somewhat able to use my feet and toes to prolong his feeling of pleasure just before Cumming. I have to admit at times one could argue it bordered on torture as he created quite the commotion while pleading with me to finish him off. As sadistic as it sounds, I got a lot of pleasure out of it, as did he because it always resulted in a copious amount of cum covering my toes and feet. We remained together up until graduation and then parted ways. Since that time I have not been able to find such a sole-mate. I have no problem getting dates and I have a good time on most of them. However, I long for another guy who is into my feet. The feel of a cock between my feet and against my soles is something I greatly miss and long for again. Recently I came to the realization that I have to be more assertive and to take action if I am going to find such a mate. The following story illustrates my actions. \n\nI was really hoping Joe would turn out to be the one. I had dated others, mostly pretty boys, I picked up or who picked me up during a hot night on the town. Most of them I wasted little time with. We would either end up at their place or mine, and during a session of heavy petting I would begin to work my feet into their cock and balls. They normally viewed it as a normal part of the petting and in essence not pay much attention to my actions. I figured someone who was into feet would immediately catch on to my obvious desire and waste little time locking my size eights around their cock and go to town pumping their rod between my arches to my hearts content. Ahhh, but such was never the case as the heavy petting usually ended up in a session of routine sex. Don't get me wrong I enjoyed this a great deal and my sexual desires were usually satiated, just not my fetish desire. The latter of which always left me feeling not quite full. \n\nI really liked Joe. We had been dating for close to 9 months and I felt the time was quickly approaching for us to take it to a new level. Joe was not the best looking guy I had ever dated but what he lacked in looks he made up for in character and style. For starters he is older than I. At thirty-five he impressed me with his youthful outlook on life. Not to mention he had what I like to call a beautiful cock. By that I mean it was just the right size for me in width and in length. He was nicely circumcised and the head swelled to a smooth bulbous look when he got excited. His cock length (when fully hard) I would guess to be six inches, which I found to be just right for me. I often fantasized about using my feet to play with his beautiful cock. \n\nJoe and I have been living together for the last 3 months of our relationship and we have pretty much settled into a routine. It was Friday night and we finished up the evening with a dinner and a movie out on the town. I had planned for this night several weeks ahead of time. I had pampered my feet and toes by soaking them and applying lotion to them every chance I got. I then capped it off with a pedicure earlier that day. My feet were silky smooth and supple. My legs were smooth as silk. I knew my legs turned Joe on and I hoped they would serve me well tonight. \n\nWhen we arrived back at our apartment it was only 10:30 in the evening and so I went to the bedroom and took off my clothes. I threw on my bathrobe leaving just my panties on underneath and then made my way to the bar to fix us a nightcap. \n\nWhen I returned I noticed Joe had taken his normal position in his leather chair and had begun to watch TV.\n\nI walked over and handed Joe his drink. He looked at me quizzically asking, \"Okaaay? Why the drink. What's the occasion sweetie?\n\nPlaying along I smiled and sat down on the thick leather armrest to his left. Facing him I placed my feet between his legs. \n\nI ran my fingers through his hair as I leaned down and gave him a long kiss saying, \"Nothing dear, just feeling frisky is all. Besides, looks like you could use a drink.\" \n\nJoe leaned back and smiled asking, \"So you want to fool around kitten?\" \n\n\"Kitten\" was what he called me when he was in the mood. I giggled and began to unbutton his shirt, \"What ever gave you that idea?\" \n\nJoe leaned forward and raised his arms over his head as I pulled off his shirt tossing it on the floor behind the chair. I took of my robe tossing it behind the chair as well. He reached over and began to rub my legs pulling them into his bare chest. I began to slowly flex my ankles rising up on my toes and back down again pressing my feet deep into his crotch. Joe closed his eyes and continued to rub my thighs and calves occasionally kissing them. It did not take long before I could feel his cock growing and pressing through his pants against my right ankle. I raised my right foot slightly and began to press my toes onto his cock, rubbing them into the head of his cock. After a while I could tell this was getting him hot as I could feel his chest rapidly rise and fall against the side of my legs. \n\nBy the feel of his cock I could tell he was at full length and it was straining inside his pants to be set free. I reached down and unzipped Joe's fly and undid his belt. Joe did not waste any time in pulling off his pants. He began to pull his boxer briefs off but I stopped him by saying, \"No let me.\" \n\nI slid the toes of my left foot into the slit at the front of his trunks and my right foot underneath the front of the waistband and began to pull them down slowly. \n\nI smiled at Joe's expression as he watched my feet. I whispered, \"I like using my feet for this.\" \n\nHe said, \"So I noticed.\" \n\nHe reached down and began to rub my ankles and instep. I couldn't have asked for a better opportunity as I began to fondle the head of his cock with the toes of my left foot. I heard Joe release a soft moan in response to my toes. I looked over at him and could see his eyes were closed. His grip on my lower legs became slightly firmer as he lowered his head and began to kiss and suck hard on the side of my right calf muscle. I could feel he was working on giving me a hickey. \n\nHe raised his head briefly saying, \"I am marking this spot.\" \n\nI smiled and said, \"In more ways than one as I nodded toward his crotch.\" I flexed my left toes up inside his shorts lifting up his trunks in a tent-like fashion showing him a wet spot the size of a quarter. \n\nI smiled back at Joe teasingly, \"Oh look at what my toes made you do.\"\n\nJoe giggled and resumed giving my leg, which after all was said and done, turned out to be a very dark hickey. I slowly finished sliding his shorts off using my feet and once I got them down to his ankles Joe kicked them off. \n\nI slid my feet back in between his legs ensuring to keep his cock hard. \n\nJoe responded by hugging my lower legs into his chest saying, \"Those are some talented feet you have there kitten.\" \n\nI smiled down at him saying, \"Honey, you don't know the half of it.\" \n\nJoe continued to rub my legs saying, \"Your legs are so smooth and sexy.\" \n\nWe remained like this for several minutes. I began to feel his heat rising as his excitement grew and it was making me noticeably excited as well as I felt myself getting wet. His breathing increased and I decided it was now or never for me to take full control. I placed both my feet in his lap sandwiching his stiff member between my insteps. I locked my big toes and slowly began to stroke him from the base of his shaft to his bulbous head. Joe immediately responded by throwing his head back and moaning softly with each of my slow deliberate strokes. Feeling his hard member between my feet sent a wave of excitement that ran from my feet up into my thighs. A feeling I had not felt in a long time. \n\nI released a small sigh and reached over running my fingers through his hair asking, \"Are you enjoying this honey?\" \n\nJoe opened his eyes and responded immediately, \"Are you kidding, your feet feel amazing, they are so soft and your legs are amazing.\" \n\nI smiled at him, \"So would you like me to continue?\" \n\nJoe closed his eyes again and moaned, \"God yes.\" \n\nI stopped stroking him saying, \"Okay, I have to get something I will be right back.\" I jumped off the chair and came back with a bottle of oil. \n\nI placed my feet on either side of his cock, and began to soak his cock and my feet with the oil. I ran my fingers between my toes ensuring they were fully covered as well. \n\nJoe looked up at me and smiled, \"You have done this before haven't you.\" \n\nI smiled back down at him, \"A long time ago when I was in High School.\" \n\nJoe looked at my oily feet and then took a deep breath saying, \"Don't stop kitten. Show me what those feet can do. It feels soooo good right now.\" \n\nThat was all I needed to hear. I became excited and clamped my insteps around his cock forcing it to point straight up and down. I began to pump my legs up and down in a slow rhythm. I leaned my legs to the right pressing my legs against his abdomen and chest pulling his cock along as well. I continued to pump my feet, stroking his cock and sliding my legs along his torso as well. I knew Joe would enjoy the feel of my smooth legs sliding along his stomach and chest as much as he would the feel of my soft feet on his cock. I slowly let my body slide off the armrest and leaned into him resting the right side of my body partly on the chair and on him. I slipped my arm under his neck as I continued to slide my legs against him and pump his hard cock with my feet. I watched as his cock slid between my feet and each time the head of his cock rubbed against my ankles I felt it twitch with excitement eliciting a soft grunt from Joe as well. I smiled realizing how sensitive his cock head was becoming. In the past I played with it enough in my hands and loved flicking it with my tongue when I gave him head so I knew just where those sensitive glands were under the head. Those same glands were brushing against my right ankle with each stroke and I knew he was enjoying what I was doing to him. I pumped him some more with my feet and then reached in between them with my left hand grabbing the head of his cock with my fingers I began to rub the sensitive glands underneath the head with my thumb and index finger while I pumped his shaft between my feet. As soon as I began to rub the head of his cock between my fingers, I felt every muscle in Joe's body tighten as he threw his hips up in the air responding to my touch. He kept his back arched as I relentlessly continued to rub his cock head and pump is shaft between my soft insteps without a reprieve. I relished the immediate control I was having on him as I controlled his reaction. I sighed and slid my body further into him pressing my face into his neck giggling at his body's predictable response to my fingers and feet. Joe's breathing came in short gasps with each pumping of my legs and feet and torturous twirling of my finger and thumb around his sensitive cock head. His lower back remained arched off the chair and I thought how his muscles must have been growing weary and surely he could not hold this position much longer. He gripped my legs tightly pulling them into his chest. His moans became longer and drawn out as I kissed and licked his neck moaning in response to his body movements saying, \"Oh Yesssss, oh Yesssss I love this.\" \n\nJoe gasped, \"Oh I love your fingers and soft feet...don't stop.\"\n\nIt did not take very long before Joe worked himself into a sweat. I loved the feel of his moist body against mine and the feel of my legs sliding against it. After several minutes he began to lower his hips as the strain was more than what his muscles could sustain. \n\nBy his verbal sounds and breathing I could tell he was quickly becoming more excited. I pulled my face out of the crux of his hot neck and looked down at his hard member sandwiched between my feet. I whispered into Joe's ear, \"Would you like me to run your cock between my toes?\"\n\nJoe opened his eyes and said, \"That would feel nice.\" \n\nI smiled and sat back up on the armrest of the chair. I threw my hair to one side and leaned forward grabbing his stiff throbbing member with the fingers of my right hand and held it upright as I spread the toes of my left foot and guided the shaft between the big toe and second toe. I have fairly long toes and since this was the first time I had his member between my toes I was surprised at how tight a fit it was, especially since I was gripping it from the side where it was not so wide. I did the same with the toes of the right foot placing them on top of the other toes. As I did this I could see Joe's body move beneath me as my toes locked in place. I smile down at Joe saying, \"Are you sure your ready for this foot job honey?\" \n\nJoe did not take is eyes off my feet, \"Oh yes this feels so good.\" \n\nKeeping my toe lock on his shaft just below the head I slowly began to turn both ankles out creating a club footed affect. As I did this I could feel the width of his cock increase as my toes circled around his cock forcing them to spread apart even wider. Were it not for the length of my toes I would be hard pressed to fully accept his cock between them in this manner. Joe was feeling the tight sensation between my toes as well as he grunted and gasped feeling my toes tighten even further around the shaft of his cock. I looked at Joe who was watching what I was doing and could see a hint of pain shoot across his face. Soon I had my feet turned out as far as they would go. I smiled down at Joe brushed the hair from my face and said, \"Whew! Glad that is over with. It's a nice tight fit so I don't think your cock is going anywhere.\" I wiggle my toes up and down getting use to the feel. After a while of this I recognized the slightly glazed look in Joe's eyes and how the muscles in his jaw slackened allowing his mouth to become slightly ajar. I giggled saying, \"You're really enjoying this.\" \n\nJoe reached out cupping the lower part of my right leg in his hands saying, \"Your legs and feet are beautiful Jen.\" \n\nBy holding his cock in such a manner between my toes with my ankles turned out, it caused my knees to touch in a knock-kneed fashion above his cock, forcing the lower part of my legs to angle out with my heels pointing in opposite directions; my left heel towards his feet and the right heel towards his head. I had to admit it was a strange position, however, past experience with my High School sweetheart told me it would increase his arousal a great deal. \n\nI could tell it was working as Joe's state of excitement increased. This position accentuated my long slender calves and Joe, being the legman he is, immediately began to rub my right lower leg. It did not take long before I felt his cock begin to throb between my toes.\n\nI laughed, \"I can feel your heart beat through your cock between my toes. I am going to make you cum hard honey.\" \n\nI leaned to the left to make sure I had my left toes lined up properly. I had to ensure the webbed skin between my toes would make contact with those \"Oh so important\" glands at the head of his cock when I jerked them up. At the same time the webbed skin between the toes of my right foot would rub the rim of his cock head on the opposite side. I knew he was going to go crazy as soon as he felt this sensation. \n\nI reached down in the chair for the bottle of oil and squirted a liberal amount over my toes and the tops of my feet. The oil, combined with the soft light in the room created a gentle glow off my skin. I commented, \"That should make it much smoother.\"\n\nPlacing my hands under my knees I began to pull my toes up his cock towards the head in a slow deliberate manner. As my tightly clenched toes slowly squeezed up his cock shaft I could feel the small ring-like ridges along the walls of his shaft rub against the inside of my toes. Joe began to moan softly as he felt my toes making their way up toward his sensitive swollen head. Joe rubbed the long flexing slender muscles in my lower legs, running his hands from my ankles to my upper calves. I smiled realizing from experience what was about to happen as I felt the web of skin between my left toes catch on the head of his cock and those sensitive glands beneath it. I turned to watch his facial expression; it was like a bolt of electricity shot through his body and I thought he was going to cum right then. His body shook uncontrollably and he grunted loudly. \n\nI could not help but let out a short giggle as I slowly slid my toes back down offering him some relief. Joe quickly attempted to regain his composure while I did this by taking quick short breaths as I started the process all over again slowly pulling my toes back up his throbbing shaft. \n\nI smiled and ran my fingers through his hair asking playfully, \"You doing alright down there honey?\" \n\nJoe laughed, gasping excitedly, \"Oh my God Jen, oh my God I never felt anything like that. Your toes are amazing and you know how your legs turn me on. This is incredible, your feet are incredible.\" \n\nThat's what I needed to hear from him. I leaned over and kissed him saying, \"The pleasure is all mine. Do me a favor and hold on as long as you can. I can go on all night. My legs are strong, I doubt they will tire before I make you cum.\" ",
        "Just as I finished saying that my toes reached his bulbous cock head again, it's raised ridge caught against the webbing between my toes. This time I ran it past the sensitive nerves along the ridge of his cock head and back down again. Joe responded with several quick thrusts of his hips and some more grunts as his cock head jerked several times between my long oily toes. I could feel the sensitive glands catch the skin between my toes with each thrust. \n\nPlayfully I scolded him saying, \"Hey! I am the one doing the jerking here you just lean back and enjoy for now and let me have my fun. You will get your turn later, and only when I say you can.\" \n\nJoe, partly out of breath, gasped, \"I will try Jen, but I couldn't help it. Your toes feel so good.\"\n\nI smiled wickedly saying, \"Oh? Is this what you mean,\" and keeping the head of his cock between both sets of my toes I began to flex my ankles up and down in rapid succession. With each upward stroke I could feel those sensitive glands catching and rubbing against the webbed skin of my toes. I watched as Joe came out of his skin with excitement as he flopped forward and tossed from side to side. Since his cock filled the gap between my toes so tightly there was no fear he was going to slip out. Nor was he able to move out of reach of my long legs as they tracked him all over the chair. I was amazed at his uncontrolled response as I continued to flex my toes up and down for a minute or so. Joe clenched my right leg, which was nearest to him, groaning long and loud as I continued to apply the pressure. I watched as the head of his cock grew even more purple and after a minute or so I stopped and slid my toes back down to the throbbing base of his shaft. Joe immediately fell back into the chair exhausted and breathing like he just got down running a Marathon. \n\nI smiled down at him saying, \"Now shall we do it your way and go for round two or will it be the way I want it to be.\"\n\nJoe gasped, barely audible, \"Oh God no, no second round. Lets do it your way.\" \n\nI winked at him saying, \"Okay, but don't let it happen again, at least not until I say you can.\"\n\nI began to jerk his cock faster and just short of the head. I knew if I wanted to I could get him to cum in a matter of minutes. This way I was able to get him to last longer by giving his cock head a break. As I jerked his shaft I leaned forward and began to fondle his balls with the fingers of my left hand. I lifted his nuts slightly allowing for my left foot to press onto them with each down-stroke. His balls were fully swollen from the excitement and I was enjoying their heavy feel. Each time my foot came down I prodded my slender fingertips into their fullness and wiggled them about pressing his nuts into the ball of my foot. I could tell Joe was enjoying this as his moans came more frequently. At the same time I began to fondle the base of his shaft with the fingers of my right hand. I encircled the base of his shaft with my thumb and index finger gently pinching the fat vein that runs along the bottom length of his shaft and milking it up and down while I used the remaining fingers of that hand to knead the soft pubic region surrounding his cock. I also began to work my toes over the head of his cock again. So there I was in my natural element so to speak; my legs, feet and body hunched over my lovers groin. All my efforts engaged in stimulating him to a heavenly orgasm. I was really working his groin region now applying all kinds stimulation to his cock and balls. Joe immediately responded to all this as he leaned forward gripping my right lower leg and pulling it into his chest. He rubbed it lovingly, pulling himself up into my leg so close that I could feel the heel of my right foot jabbing slightly into his stomach with each stroke.\n\nI laughed lightly and responded by increasing the pace of my toe jerks and finger stimuli around his cock. I concentrated my toe jerks over the head of his cock and my finger fondling in his nuts and on his lower shaft. I could feel my calf muscles getting a good work out as they smoothly flexed beneath his stroking hands and against his heaving chest. I could tell he was enjoying the sensation as the excitement that overtook him caused his body to shake even more as he desperately tried to hold on below me. I raised my head slightly to get a better look at the scene our bodies created. The sight reminded me why I enjoyed giving foot-jobs. As I looked down at the tangled web of legs, feet, toes, hands, fingers and Joe's sweaty body, the warm feeling of being in control flooded over me. I felt a flash of heat swell inside my stomach and rush to my legs and feet. The fact of having this man in such a tense state of sexual excitement at my feet and in my control with such relaxed ease on my part thrilled me to no end. I slid my toes over the head of his cock and began to flex my ankles again causing my toes to move vigorously up and down. Joe shook like never before as he lowered his head pressing his lips against my upper right calf. I could feel his lips move against my skin as he used my leg to smother a long drawn out moan. Using my probing fingers I pulled on his swollen nuts and began to roll them through my fingertips. \n\nI knew I was really pushing it and did not want him to cum just yet as I was enjoying this as much as he was. I leaned over to him and whispered into his ear, \"God you are making me sooooo hot.\" \n\nMy hot breath on his ear elicited a wave of excitement in him as I watched his body shiver at the sound of my voice. At this point I could tell he must be totally out of his mind with pleasure. His body felt like it was on fire. I thought how all his senses must be on the verge of overload as he watched and felt all the pleasure I was giving him; working my legs, fingers, feet and toes into his crotch all at once. That's why it came as no surprise that as soon as I whispered into his ear his body showed the first sign of betrayal as I felt his hot precum oozing out from the hole at the end of his now purple cock head. My verbal stimulus was the last bit of excitement, causing his self-control to weaken. The warmth of it began to fill the webbed skin between my left big toe and second toe. I watched as that space between my toes filled up with each pull of my toes on his cock head and quickly began to overflow creating shiny clear rivulets of his precum to run down the top of my foot and onto my ankle. Feeling the heat of his precum between my toes and watching it slowly run down the top of my foot really got me hot. I could feel my own heat spread between my legs and I knew I was getting wet with excitement as well. The knowledge that I had coaxed his fluid out from inside his body using my feet and legs gave me a feeling of pleasure and self-satisfaction I had not had in a long time. \n\nI turned to Joe who was staring at my feet and legs. His mouth was open even further now as he struggled to catch his breath. His eyes were completely glazed over and partly rolled back into his head. Sweat was dripping off his brow as he was exhibiting signs of losing the struggle to hold on. He was working hard beneath my relentless pumping feet and wiggling fingers. \n\nI could not help but smirk at the sight. My efforts were so easily performed on him and yet he struggled desperately in response to what I was doing to him. His body was now a bundle of raw nerves and tense muscles. We had only been going at it for ten minutes, if that. I smiled, leaned over and kissed his moist forehead saying, \"Honey, hold on for me now you're starting to precum. I need you to last a bit longer, okay?\" \n\nJoe grit his teeth saying, \"God it is so hard, this is amazing! Your feet are beautiful. I am trying Jen. \" \n\nI laughed, realizing he was only moments away from Cumming. I calmly ran my fingers through his hair as I continued to pump the head of his cock with my toes and fondling his nether region with my fingers saying, \"Its alright your doing fine.\" \n\nI leaned in further and dug my fingertips deep into his full nut-sack grasping his nuts and gently pulling on them while I continued to work my toes over his cock head. I continued the pressure a bit longer. This caused a steady flow of his precum running from between my toes down the high arch of my foot. \n\nI clenched my toes and pulled a few more tugs on his swollen cock head causing tiny spurts of his precum to squirt out. I'd never seen that happen before as I felt it sprinkle across my toes. Taken by surprised I giggled covering my mouth saying, \"Oh my.\" \n\nJoe grunted loud saying, \"Oh my God Jen\", as he felt my toes pinch his cock head and he desperately tried to hold off the urge to spew his load right then and there. I knew by his sounds and shaking body he was on the edge. I had to feel the control I was having on him; up close and personal, I had to get in close and feel his body shake for me. I turned my ankles back into a normal position keeping his cock lodged between my toes and leaned my legs to the right resting them against his chest forcing him to rest back into the leather chair. I then slid the right side of my body against the chair and leaned partly onto Joe resting the right side of my head on his chest as I had done in the beginning. I was positioned in such a way that I was almost resting my entire body on top of his. I was curled up into a small ball on my right side my knees pulled up just under my chin. I could hear his heartbeat racing with excitement. His hot sweaty body felt good against mine. Sliding my legs up and down I began to stroke his cock smoothly between my toes. This time the second toe of my left foot rubbed against the sensitive glands under the head of his cock, where before the skin between my toes had rubbed earlier. I knew those sensitive glands were the key to his tense state of arousal and I would not relent from keeping contact with them using my toes. I wanted to keep him at a tense level of arousal. The new feel of my toe on this sensitive region provided a slightly different sensation for him. After several pumps of my sliding legs Joe became fully engaged as he began to moan and grunt with each jerking of my toes. Each time my toes ran across his cock head Joe's body shook uncontrollably and I knew it was only seconds now before he blew. \n\nFrom experience I knew how Joe liked to finish off his orgasms. I have been with him long enough to know that the moment before he orgasmed he wants me to stop what I am doing and to remain perfectly still while he continued to thrust his cock. When he first let me know about this I thought it was odd but then I realized how excited it made him, and I enjoyed going along with it. When I gave him blowjobs right before he would cum I stopped my head bobbing and remained still. Joe would pull his cock partly out leaving only the head between my lips. I would tighten my lips around it and Joe would go to town by quickly thrusting his cock between my tight lips in short quick jabs. He told me he was enjoying the sensation of my lower lip constantly rubbing across the bottom of the head of his cock. I added to his pleasure by sliding the tip of my tongue forward in my mouth so that it also made contact with the head of his cock. I enjoyed this as it made it easier on me to swallow his load and felt quite nice to have it explode inside my mouth instead of directly down my throat. It was the same with a hand job. When I jerked him off he asked me to stop. I kept my hand still sliding it up around the head of his cock, as he began to thrust just the head into my hot little hand asking me to slowly open and close my fingers just before he exploded.\n\nSo, in order to make it complete for him this time, I planned on doing the same with my toes. I raised my head up from his chest keeping my face inches from his and looked for that familiar sign of expression I know so well. That sign that would tell me he was about to blow his load. I could feel the muscles in my legs getting a good work out like they do when I reach the halfway point in a run. I continued to pump his cock between my toes at a maddening pace while at the same time staring down at him verbally coaxing him over and over again, saying, \"Come on honey, cum for me. Cum into my toes.\"\n\nI ran my fingers through his hair and in a matter of moments his body responded with increased excitement. His mouth open slightly as his breathing became much more rapid and labored than ever before. My long legs were moving like pistons against his torso and glistened as the sheen of sweat began to bead up on them. Joe began to moan in unison with each pump of my legs as they pressed into his diaphragm forcing the breath from his lungs and out of his mouth. His hot excited breath on my face excited me as well. I increased the pace with no problem, causing his body to rock back and forth in the chair. I continued to stare into his face running my fingers up and down the side of his hot sweaty cheeks and coaxing him verbally to cum for me between my toes. Joe kept his eyes closed as he concentrated on what I was doing to him. Slowly I could feel the muscles in his body giving way due to exhaustion and became more relaxed. I smiled, \"That's it honey relax and let it cum now.\" \n\nI felt his grip on my pumping legs begin to relax along with the rest of his body. His body felt like a wet dishrag beneath me and I knew he was only functioning on instinct. \n\nI knew it was time. I stopped jerking his cock and slid my toes up to the head. I said, \"Fuck my toes honey, fuck my toes now.\" \n\nJoe began to thrust his cock between my toes grunting with each thrust, \"Oh yes, oh yes, oh yes.\" \n\nI remained in position staring into his face and keeping my toes still, his eyes closed with pleasure as he fucked my toes thrusting his member in full length between them. I continued to moan and whisper to him as I ran my fingers through his hair and around his face while he pumped his cock between my toes. The look on his face was priceless and almost comical as I felt his pace quicken and his cock strokes became increasingly shorter and deliberate as he concentrated the sensitive head of his cock on my toes. \n\nI giggled as I realized what he was doing and I saw his mouth open even wider as a small trickle of drool ran down the side of his chin. I coaxed him on saying, \"That's it honey rub that head faster between my toes.\" \n\nJoe responded to the sound of my voice by shortening his thrusts even more pounding the head of his cock between my toes enjoying the friction this created against his glands which by now had to feel like a ball of raw nerves at the end of his shaft. I turned and watched with pleasure as his purple swollen cock head jerked in and out between my toes, peaking barely out over the top then back down again in rapid succession. I smiled thinking how he did the same when I gave him a blowjob or hand job. I giggled and relaxed my somewhat tired legs reveling in how I could relax my entire weight on top of his pumping squirming body while still providing him incredible sexual satisfaction with just my toes. I curled my toes clenching the head of his cock adding to his pleasure. Feeling this he pumped even faster. \n\nI turned to face him just as I did this and smiled saying, \"Ooooh, you like that huh?\" and squeezed my toes even tighter. As he shoved his cock in and out between them I felt like my toes could pluck his round cock head right off the end of his cock if I wanted to. \n\nJoe in total sexual bliss opened his mouth and incoherently mumbled something. I gave a deep-throated Laugh as I clenched and unclenched my toes the whole time watching his facial expressions change. I said, \"Cum for me now.\" \n\nFor the first time in a long time Joe opened his eyes to my smiling face. I giggled seeing the other worldly look in his eyes and asked, \"How are you doing honey? You going to cum nice and big for me?\" \n\nJoe grunted a few more times and in uncontrolled spasms shoved his cock a few more times between my toes saying, \"I'm Cumming.\" I smiled saying, \"That's it let it go and cum between my toes.\"\n\nI did not remove my eyes from his face as I watched his lips quiver uncontrollably and felt his chest and stomach heave beneath my legs. Then I felt it as his cock swell and spasm between my toes, and the big vein that runs under his cock swelled between them as his cum shot up his cock. Feeling his cock swell, I curled my toes clenching the head between my toes causing Joe to release a loud grunt. I smiled down at him noticing the look of surprise in his eyes as he felt my toes squeezing his cock head just before his orgasm. I released the grip on his cock head slightly letting him shove it between them.\n\nAs the powerful urge to cum overtook his body Joe released short snorting sounds between his normal grunts of passion. A sound I never heard from him before and it caused me to bite my lip and snicker ever so slightly. Immediately, I felt the first load of his seed shoot out and land on the inside part of my right calf. Joe pulled his cock head back and shoved it through my toes again, releasing another load that landed partly on my left shin and the upper ankle of my right leg. I closed my eyes and moaned softly feeling his hot cum on my legs and feet. The heat rushed up my legs again and in between my thighs. \n\nI relaxed my toes as I felt another shove of his cock slide between them resulting in a load landing on my right shin and ankle. Joe moaned softly, \"Oh yesssssss.\"\n\nSeveral more thrusts of his cock resulted in a trickle of cum running across my toes and feet. Joe's body continued to shiver with each release of cum as the orgasm shook his entire body against my legs and feet. I moaned with contentment and curled up into a tighter ball resting the side of my head on his heaving chest. The sensation of his trembling hard cock moving slowly in long strokes between my toes overtook me and caused my legs to tremble ever so slightly. \n\nJoe was beside himself as he grunted and moaned in pleasure with each orgasmic rush that rocked his mind and body. I reached down with my hands and began to slowly rub his sticky thick semen into my legs, ankles and feet. The feel of it on my skin and the thought of how it had come from deep inside him excited me even further. I tilted my face up and began to kiss his sweaty neck feeling his pulse move against my lips. After several minutes I could feel Joe's breathing slowly returning to normal. His cock strokes slowed as well and I began to slowly milk his cock between my toes by flexing my ankles up and down. I felt Joe's body shiver slightly as I did this. Joe relented as I felt his body sink into the leather chair while my toes continued to finish him off squeezing out the last drops of cum from his member. After several more minutes his cock shriveled to a complete state of flaccidity between my toes.\n\nWe remained glued to each other in the chair for several minutes afterward. Joe's heartbeat returned to normal, as did his breathing. I raised my head saying, \"I really enjoyed that honey.\" \n\nJoe laughed, \"For me to say that would be an understatement. I never ever felt anything so amazing as that.\" \n\nEven though I knew what the answer would be I still wanted to hear him say it so I asked, \"So we can do this again sometime?\" \n\nJoe said, \"Anytime and every time is what I say.\" \n\nI smiled, \"You don't know how happy I am to hear you say that Joe. This is something I have missed in my life and really needed to fill that void.\"\n\nJoe laughed lightly, \"You're a kinky little beast aren't you.\"\n\nI giggled with excitement and curled my toes on final time around Joe's completely flaccid member causing him to lurch slightly forward and grunt loudly, \"Hey easy there honey, I am sore and exhausted. Your feet wore me out.\" \n\nI teased him some more with my toes saying, \"Ahhh c'mon old man you can take it.\" ",
        "Joe laughed, \"Key word being old honey.\" \n\nAfter a minute or so I released him and got up from the chair. Joe got up as well and staggered to the bedroom where he fell to sleep immediately. I stayed up and watched a late show and then crawled into bed with my man. How I was going to give him my next foot-job filled my final thoughts before falling to sleep. \n\n[End]\n\n-Kessler "
    ],
    "authorname": "Kessler",
    "tags": [
        "slid toes",
        "joe opened",
        "joe immediately",
        "joe body",
        "pulling chest",
        "pumping legs",
        "joe gasped",
        "running toes",
        "joe breathing",
        "skin left"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/jennifers-foot-job"
}