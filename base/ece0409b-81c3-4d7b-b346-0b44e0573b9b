{
    "title": "Sofia",
    "pages": [
        "The normal disclaimers apply, anyone engaged in sexual activity is above 18 years of age. \n\n***\n\nI don't like stories that begin with the words *this is a true story* because they generally aren't. Since I believe honesty is important I will state this story is semi-true, I say semi because of course I was not privy to their sex life, Dave talked about different aspects of it, but I was never in the bedroom so to speak. I've chosen to use a fictitious name for myself, (Ed) Dave and I grew up together, ran together, graduated and went into the military together ultimately being discharged within a few months of each other. Returning to our small city in fly over country we married hometown sweethearts and spent the rest of our lives as close friends, this story is about Dave and his amazing abilities as a husband and father. I tell it from his point of view considering he's no longer around to tell it and since we remained close throughout our lives I know most of the details, the love scenes are a byproduct of my imagination. Dave's wife Sofia was indeed learning disabled, they did raise five kids, she did die in 2011, all their kids are successful and have families of their own. \n\nI wrestled with writing this story for a long time, it's so close to my heart that I had a difficult time writing it without feeling maudlin. I realize this is a delicate theme, I've attempted to be sensitive while telling it as it happened, if a story about a person with learning disabilities might offend you, please pass it by. Otherwise I hope it strikes a chord in your heart, one of simple love and lifelong devotion. For those who will want to criticize how I've described Sofia's speech and mannerism's, let me say this, I was there, you weren't.\n\nSofia \n\nDave's story:\n\nAnother Memorial Day, another weekly trip to put fresh flowers on Sofia's gravesite at Button Cemetery, this Memorial Day would be different, all five kids and their families are going to meet me here followed by a bar be que at my house. Tears ran down my face as I stood looking at the two head stones, Camila Ortiz 1936 - 1976, right next to it Sofia Stephenson 1952 - 2011, both headstones inscribed with Loving Mother. Two rows ahead and about thirty feet to the right was a headstone engraved with Ada-Mae Stephenson 1944 - 1961, my older sister who had died when I was eleven. She had been born severely retarded, in a wheelchair or in bed all her struggling life, she never knew any of us kid's names, but we loved her with all our hearts. Anytime we could make her smile or laugh was monumental to us, she succumbed to pneumonia at the tender age of seventeen. \n\nLooking at the headstones in front of me what wasn't apparent unless you knew them is that they were mother and daughter. How I became a relevant part of this story began in 1962 when I first met Sofia on the playground at the end of our street, we neighborhood kids called it a playground, the adults called it a vacant lot. \n\nFor all intents and purposes, it was as our parents described it, nothing more than a vacant lot, but to young minds with adventurous souls it was a fantasy land, mostly sand with a smattering of weeds and crab grass here or there bordered on one end by a bunch of mature maples. We made a haphazard ball field using discarded pieces of board for bases and a two by four as pitcher's mound, the treasure in our eyes though was the fort we managed to build in one of the trees. We scrounged boards and scraps of plywood anywhere we could, we pulled and straightened nails from old boards, sneaked our dad's tools and cobbled that thing together. \n\nIt was in no way fancy, and by today's standards we'd have been attacked by the wacko environmentalists for hammering nails into a tree, but that was 1959, another time, another era entirely. Living in the lower mid-west we played outside nearly year round, it was when I was twelve that I, David Stephenson, officially met Sofia, who at that time was four months away from her tenth birthday, and her mother Camilla. I knew of Sofia, at the same time I really didn't know her, she lived three doors down from us, had moved in just five years earlier and didn't have a dad, beyond that my knowledge of her was sketchy at best. \n\nShe didn't go on the same bus that I did, a smaller bus picked her up in front of her house and though she went to our school she was never in any of my classes. Mom told me she went to special classes, I would soon learn that she was what was referred to in that day as mildly retarded, as educable as she was, in this day and age she would be regarded as learning disabled. Her mom told my mom that even though she would age and mature physically like the rest of us, she would always be behind socially and mentally. \n\nIt was late on a Sunday afternoon when most of the guys were home doing their household chores that I met Sophia and her mom, I had stayed to play longer in the tree house, Mrs. Ortiz and Sofia were walking when Sophia began to point and tell her mom she wanted to climb the tree. As her mom was telling her no, I stuck my head out an opening we called a window and told her it was okay, I would help Sofia climb the rickety ladder and make sure she didn't fall. \n\nHer mom responded in a heavy Spanish accent, \"You would do that? You would help her into your tree house?\" I nodded. \"You are the boy a few houses away from me aren't you, I've seen you playing.\"\n\nI had been climbing down as she was talking, by the time my feet hit the ground Sofia and her mom were at the base of the tree, Sofia smiling ear to ear, she acted differently than I expected, more like a little girl than someone her size and obvious age. I climbed behind her encouraging her with each step, once we crawled into the tree house she was all giggles and excitement, looking out the opening saying *mama* loudly over and over. We were up there probably ten minutes when her mother told her it was time to come down, I went before her staying a step below in case she might lose her footing.\n\nOnce on the ground with Sofia at her side she beckoned me to where they stood, in an accent I almost didn't understand she looked at me and said, \"You are a good boy, I tell your mother.\"\n\nI thought *tell my mother, I didn't do anything wrong* before realizing she was saying she would tell my mother I'm a good boy. We three walked toward our homes, as they peeled off into their front yard Mrs. Ortiz thanked me again and Sofia kept saying *goodbye David*. I snuck the tools that had once been my dad's back into the garage, entering the back door I began to tell mom what had occurred earlier. \n\n\"Yes, I know, I just got off the phone with Sofia's mom, you make me smile Davey, your daddy would be so proud of you. You didn't have to be nice to that little retarded girl, but you were, you'll probably be teased by some of the other kids but pay them no mind, just keep being nice to that girl.\"\n\nLike Sofia, I was without a dad, mine having died when I was too little to remember, I didn't worry about the other kids picking at me, I wasn't the biggest kid in our group, but I was the scrappiest. Growing up without a dad I had a chip on my shoulder and damn near dared anyone to try and knock it off, I had gotten my butt kicked many times, I had also earned the respect of every guy I went up against, they may have won but they knew they'd been in a fight. \n\nIt was as my mom had said, I was teased and made fun of because I was friends with Sofia, in the beginning I smiled and sluffed it off, that is until Tom Weatherly called her a retard during recess. By the time I was through with him I was facing a week's expulsion and an ass whipping from mother when I got home. When the principal heard my version of the story my sentence was reduced to a three day expulsion and two weeks of detention after school with Mrs. Berton the librarian, shit, I'd have rather had a week's expulsion. There was no way to avoid the ass whooping from my mom. \n\nIn my mind it was worth it, Sofia and I weren't all that close, but I was her only real friend and he had no call to be mean like that. I will say it never happened again, not by him or anyone else, as the year progressed, I found myself being her protector and friend. By the next summer I had convinced the others that she was cool enough to play ball with us once in a while, she didn't quite grasp the nuances of the game, we made sure she got to hit the ball and run the bases, she had fun and that was all that counted, by summers end all but Vinny Carlino had accepted her as one of the gang. \n\nAs we all grew and progressed, I noticed more than ever that Sofia wasn't keeping pace, she was a pretty young lady with a bubbling personality, but she was still a little girl in her mind. Puberty was probably the hardest for her to understand, guys would tease her about her quickly developing body, because she was so gullible and trusting a few tried taking advantage of her which pissed me off greatly. It soon became common knowledge that if anyone tried messing with her, they would answer to me, from that point forward she became like a little sister to me.\n\nIn my senior year she began attending a different school, one designed to help kids with learning disabilities. I didn't see her much that year, I dated a few girls off and on, the relationship usually went okay until they'd bring up my friendship with the *handicapped girl* as they called her, that was always my cue to exit stage left. They never seemed to know what her name was, instead they would utter hurtful words they'd heard others say, I would see her on weekends at times, or I would walk down the street and pay a short visit to she and her mom. \n\nVietnam and the draft were in full swing when I graduated, my number came up within three months of graduation, which meant basically one thing, if drafted I'd be a grunt and probably nothing more, Tom Jenkins and I thought *what the hell* and enlisted for a two year hitch the next day. Sofia was fifteen when I left for basics, I'd stopped in to say my goodbyes, Sofia couldn't understand why I was leaving and cried throughout my twenty minute visit. I wrote her a few times while in Nam, she had written back each time, the content was always simple and innocent, yet heartfelt. \n\nBeing in Nam was anything but favorable, returning back to the states was almost worse, once the protesters found out you were infantry they were merciless pricks. We had animal urine and feces thrown on us, under orders from my CO I had to stand my ground in the airport and not retaliate while some smelly hippy love child spit in my face. I wanted to strangle the bastard on the spot, to this day I still want to, no group of veterans before or after Vietnam has ever been treated with such disdain. It was and will remain a blemish on this great nation. \n\nWith six months of my two year enlistment remaining they stuck me in some worthless job at Fort Bragg, upon discharge I flipped them the bird and claimed my bus ticket home, they were too f-ing cheap to get me a plane ticket. I was a few months shy of twenty one when I walked into my old home, I hadn't told mother I was coming home and she nearly wet herself with excitement, then slapped me on the side of the head for not letting her know I was out of the Army. I think my final kick in the balls concerning my combat time was when the VFW decided they weren't going to allow Vietnam vets into the organization because as they put it, it was only a police action, not a war. \n\nI remember thinking, *tell that to the thousands who have come home in body bags*, from that point forward I thought of my time and the service to my country as no more than a wasted season of my life. Within two days of being home I walked down to the Ortiz's on a pleasant autumn evening, I stood on the stoop after ringing the bell, as Mrs. Ortiz opened the door her jaw dropped and tears began to fall as she called out. \n\n\"Sofie, Sofie come here, right away.\"\n\nMrs. Ortiz looked frail, as though she'd been sickly. When Sofia saw me, she ran and jumped just as her mother stepped aside, with her rams tight around my neck and her feet dangling in mid-air she said my name over and over. We moved into the living room where Sofia sat next to her mother while we talked, Sofia's greatest concern was if I had to go away again, when I reassured her I didn't she seemed to relax. I noticed that her speech was more articulate than when I'd left, she had matured not only mentally but physically as well. Even in a baggy sweatshirt and sweatpants it was obvious she had a nice figure, nothing overwhelming, average for her age I suppose. \n\nI asked Mrs. Ortiz if I might take her with me for pizza on Friday, sort of like a homecoming party, after pondering it a few minutes she agreed, Sofia was beside herself with excitement. Friday evening I walked to her house to collect her, we were only five blocks from the pizza place so I suggested we walk. I wasn't ready for what came out the front door as I walked up to the house, she was radiantly beautiful, her hair was softly curled, her makeup was light but flattering, and she was sporting a lovely floral dress with a light wrap over her arm. She was neither buxom nor flat, had slender sloping hips and a cuter than imaginable butt. \n\nWalking side by side into town we laughed and joked, she continuously thanked me for taking her along for pizza telling me she felt like all the other girls she knew that went to pizza with friends. While at the pizza joint she kept looking around at different groups of people, it made me wonder what was going through her mind, I finally asked.\n\n\"What's wrong Sofie, why do you keep looking around at all these people?\" Her response broke my heart. \n\n\"Those people say I'm a retard, those over there call me stupid, those boys keep trying to lift my dress up, I don't like those people, I'm afraid can we go?'\n\nI gently took her hand in mine and reassured her, \"Those people won't hurt you anymore Sofia, I'm back home now and I'll protect you. You don't need to be afraid, let's have our pizza and talk, never mind them, tell me all about your school, oh, my mom says you work at the grocery store now.\"\n\nThose words seemed to wipe away her fear as she excitedly told me about her school, she was reading and knew arithmetic, her job at the grocery store was stocking shelves mostly at night from four thirty after school until nine when it closed. She hung her head when she told me her mom had to walk her home after dark because the boys kept trying to get her to go behind the store and take her clothes off. \n\n\"I know that isn't right, I know I can't let boys see my underwear, if mom is late Mr. Jerrod stays behind until she gets there. I like Mr. Jerrod he's a nice man.\"\n\nI had all I could do to contain my anger and still be polite as we ate. I knew who those guys probably were trying to rob her of her virginity, they were guys I'd gone to school with, I wanted to take her home, find them and hurt them. I determined I would deal with them soon enough, tonight was about Sofia having fun and feeling as though she fit in for a change. After pizza we walked another few blocks to a small malt shop and shared a malted milk, something she'd never had prior, I knew it would be huge so I had them pour it into two glasses. \n\nIt was dark by the time we were headed home I could tell she was afraid as she kept leaning into my side and looking around like a small child would. As we walked, I asked if she would like to hold onto my hand which she did instantly, from that point on she seemed to be more relaxed. Mrs. Ortiz was looking out the living room windows as we neared the house, Sofia saw her and waved ... she was like a child in so many ways, like an adult in many others. \n\nMrs. Ortiz smiled as she hugged Sofia, \"Thank you for taking Sofie with you David, you've always been so good to her and I trust you completely. I was worried at first, she's never been out after supper without me, then I remembered she was with you and I was okay.\"\n\nI had some things I needed to talk with her about, \"Mrs. Ortiz can I come visit tomorrow, there are some things I need to ask. Is it possible to speak with you privately?\"\n\n\"Yes of course, her class is going on a field trip to a horse stable in the morning, why don't you stop by after nine.\"\n\nBidding them goodnight I walked toward home, just before I reached the edge of my yard a car pulled up next to me and stopped at the curb, Tom Weatherly the local draft dodger got out of the passenger side walking like he was mister somebody special. I greeted him but didn't shake his hand as he tried to stare me down.\n\n\"Home from the Army huh? I suppose you think you're a big man now, I don't care if you do have a purple heart, you're nobody. By the way I'm gonna fuck your little retard friend real soon, now that she's 18 and no longer jailbait I'm gonna ram my cock in her so far she chokes.\"\n\nWe had drifted to the side of the car next to the fender of his relatively new Camaro, before he could move I had him by the back of the neck and slammed his face into the hood, pulled him back and slammed it down again. As his brother John was opening the driver side door I yelled. \n\n\"Sit motherfucker or you'll get worse.\" \n\nDragging Tommie boy to the open passenger door I told him if I ever heard of him touching Sofia, I'd put him in the ground, then I threw him into the car. The door wasn't even closed as John sped off, an hour later mother woke me, the police were at the door wanting to talk with me. It was Mike Mensing, one of the old sandlot gang, we talked a minute and exchanged pleasantries, then his face stiffened. \n\n\"Dave, we got a complaint from the Weatherly boys that you assaulted them. Is that true?\"\n\n\"No, not at all. I had taken Sofia to pizza with me, they had seen us there and as I walked back from her house they stopped to tell me since Sofie was eighteen they were gonna fuck her. When Frank got out of the car he slipped on the curb and hit his face, I tried to help him up, but he slipped a second time. John was too drunk to help so I pushed Tom inside the car and they raced off.\"\n\nMike looked down then back at me, \"That son of a bitch, I knew he was lying, but in the future, you need to make sure they don't slip off the curb with so much force. I really am glad you're home safe and whole, I'm sure Mrs. Ortiz is as well.\"\n\n\"Don't know how whole I am, my stomach is still messed up but thankfully the bullet missed my liver. Now that I'm home I'll keep a close eye on Sofia.\"\n\nThe next morning I was sipping coffee with Mrs. Ortiz and enjoying a warm autumn morning on her backyard patio. I wanted to know more about Sofie, how she was doing in school, did she have friends outside classes, I wanted to know more about who Sofia had become. \n\n\"Well David let me start at the beginning. My parents emigrated here right after world war one, papa was a physician, my mama a nurse, I was born in 1936 and orphaned at the age of fourteen when my parents were killed in a car crash. I went to live with my Uncle who wasn't very nice, he didn't hurt or molest me, he just didn't care, I think the only reason he took me was for the money. I got pregnant by a schoolteacher when I was fifteen, he knew I was lonely and gullible, I was like putty in his hands.\"\n\nA few more sips of coffee and she continued. \"He went to prison for statutory rape, my uncle got a huge settlement because he was my immediate guardian, I was a mother at sixteen, had it not been for my kind and loving aunt he would have probably put me on the streets. It was apparent that Sofie wasn't advancing normally within her first year, I decided she would be my priority in life, which she has been.\"\n\n\"You don't work though, how do you support her how do you make a living?\"\n\n\"Ah, that. When my parents died I was left with a large sum of money, while I lived with my aunt and uncle a monthly stipend was paid to them, the entire trust became mine at the age of twenty one, that's when I left and moved here. The first thing I did was talk with a lawyer who steered me to his brother in law, he set up investments for me and I have lived off the trust ever since. As it is, I receive forty thousand a year which isn't a mountain of money, but it supports us just fine, if the cost of living doesn't go up too badly the trust will last at least another forty five years.\"",
        "After listening I needed to hear more about Sofia. \"I've noticed sometimes you call her Sofia and other times Sofie. Why is that?\"\n\nShe laughed, \"It's Sofia, I call her Sof or Sofie at times like a nickname. She prefers I call her Sofia in public.\"\n\n\"Having been away these past few years I have no idea how she's doing. Will you tell me, and please be completely honest.\"\n\n\"Since she started at the new school she's done very well. She's with kids who are just like her, kids who grow up physically but not mentally like others. She is smart and applies herself, she's learned proper hygiene, some cooking skills, simple arithmetic, she reads at a sixth or seventh grade level and has fair comprehension. Once she learns something she remembers, her biggest issue is that she doesn't know how to think things through and make decisions, once she's told what needs to be done and is shown how to do it, she's fine.\"\n\n\"Thank you for being up front with me Mrs. Ortiz. If you don't have a problem with the idea, I would like to include her in some of my activities, maybe being in public with somebody she trusts will help her develop better social skills.\"\n\nAnd so it was, I would take her with me from time to time, she always held onto my hand like a child does with a parent, more for protection than anything. Our small city of thirteen thousand had two major industries for employment, both were manufacturing facilities that required a large number of skilled welders. I used my GI Bill and attended a one year course for welding at our local tech, I was hired upon graduation, at the age of nearly twenty two I was not only working a full time well paying job, I was looking forward to a good life. \n\nNow that Sofia was over eighteen I was taking her with me somewhere once a week on average, they weren't dates, we were close friends and nothing more. I thoroughly enjoyed my time with her, though she was a Latina knockout with raven black hair cascading down her back and had a nice figure, seeing her as a romantic partner was something I wouldn't allow my mind to entertain. When I needed sex, I would venture into a larger city twenty-six miles away and find someone in a bar, I used condoms every time, the thought of bareback was tempting, the thought of disease or an unwanted child was daunting. \n\nBetween our town and the city was a small blip on the map that had once been a village until the timber market stopped and people simply moved away, the population was under two hundred and most of those were city people living in the numerous four-plex apartments. I'd met Bethany one Friday night on the prowl for pussy, turns out she was on the prowl for a cock, we ended up at her apartment in that little burb, she was what we called then *big boned* nowadays she'd have been referred to as *plus size*. \n\nShe wasn't flabby in the least, just thick and to her credit she loved to fuck. She had no qualms which hole you chose to use, she was one of those gals who climaxed from anal, many don't, they simply do it because it pleases their husband or lover. I don't have a ten-inch cock that's two and a half inches wide, my normal thick six inches has always managed to satisfy whomever I was with. Bethany was a pre-med student with two years to go, she wasn't looking for a husband and I wasn't looking for a wife, we fit each other's purpose quite well.\n\nShe had large breasts she loved to be manhandled and sucked and a nice thick vulva that seemed to literally swallow my cock as it slid in, those were the days before shaving was popular and to be frank, I liked her thick bush. When we would finish it would be caked with her girl juices, matted and hugging to her labia, if she had cum hard enough there would be droplets on the few errant hairs across her opening. I know because my spunk went into a condom and not inside her, so from time to time I would lick her clean, the taste of her arousal was something I actually liked. I was seeing her almost every Saturday night which kept the hounds at bay in regard to my libido, in our case it was sex and sex only, no emotional ties. Bethany had seen me with Sofia at the mall one Saturday and asked about her that night. When I had explained my relationship with Sofia she smiled and made a comment I wouldn't have expected. \n\n\"She really likes you, you know that, right? I know you think you're just friends, but she doesn't see it that way, if you ever reach the point where you want to get married you could do far worse than her, she's gorgeous ... I'd do her.\"\n\nIt made me take stock of my situation, sure we went out for pizza, I took her to the county fair, we shopped together once in a while in the city and took in the occasional movie, but I never saw it as a romantic thing. When Sofia finished her schooling, she had been trained on a cash register at the grocery store and was no longer stocking shelves, she had been a checker almost two years and was so proud. Mrs. Ortiz seemed to be in failing health so I made it a point to make sure Sof got home safe after each shift, Sofia was a few months away from her twenty first birthday when her mom asked me to stop by on an evening when Sofia was working. \n\nTelling mom where I would be, she sat me down. \"She's a very sick woman Dave, let her take the time she needs to tell you whatever it is she wants to talk about.\"\n\nI knew she didn't look well but I didn't realize she was very sick as my mom had said. I could see Mrs. Ortiz curled up in a blanket on the couch as I walked onto the stoop, I knocked and stuck my head in the door announcing myself. She beckoned me to come in and sit, after a few minutes of chit chat she looked at me sternly before she spoke. \n\n\"David, I'm dying. I have been since just before you came home, I have stage four bone cancer, the doctors say I have a year, maybe two to live, I have a huge favor to ask, I don't need an answer tonight, I want you to think about it and get back to me please.\"\n\n\"Sure Mrs. Ortiz, whatever I can do to help.\"\n\n\"David, I want you to marry Sofia. She knows and trusts you implicitly, not to mention that you're one of the few people who actually know her and treat her with dignity. If she doesn't marry, they want to move her to a group home in the city within six months, so she'll have time to get used to me not being around. I understand what they want to do and why, I'm grateful for that, but she'll do better if she stays here in our little town with a man who loves her. I know you don't see her in that light now, but I believe you could. Will you give it some thought?\"\n\nAs they say in England, I was gobsmacked. Talk about a curve ball, never in all my days had I considered such a thing. Yes, she was very pretty, she would be a devoted and loyal spouse, but what about kids and such? It was time to ask.\n\n\"What about kids, can she have kids? I've always wanted a large family. If we had kids would she be able to take care of them?\"\n\n\"She's been through the childcare courses and did very well, in fact she was the top girl of eleven. David, like I said before, when she learns something she doesn't forget. She's also learned to sew and loves making things, she has a hope chest full of little girl dresses, and numerous other items that she's sewn. As for raising them, that's why she has your mom and me, your aunts and cousins, close neighbors, that's how we learned. Why would it be any different with her? Your gentle with her so I wouldn't be worried about the sex part and she would be a good wife to you, she would never stray, you don't know it but she talks about you every day.\"\n\nI asked if I could have a few days to think about it and get back to her. In the dark I walked to the store and waited for Sofia, as we walked home she again reached for my hand, only this time it meant more to me than her needing to feel safe, I held her hand a bit more firmly than I usually did. She told me all about her day and how Mrs. Connell yelled at her because she thought the price of the hamburger was too high. Then she laughed softly, \"Mr. Jerrod told her that I don't set the prices.\"\n\nI stood at the end of the sidewalk and watched as he went through the front door. It was just after ten when I got home, mother was already in bed, but I needed to talk, I needed my mother's words of age and wisdom. I was sitting at the foot of her bed, she was propped against the headboard with pillows behind her as I divulged everything Mrs. Ortiz had told me. I spoke of my concerns and apprehension, was I ready for marriage, would I be a good husband to Sofie? It seemed as though my brain was mush. \n\nFollowing a thirty second or more lull mother spoke, \"I think you need to consider who you are to her David. I agree with Camila, Sofia would be a loyal and devoted wife. She isn't illiterate son, she's only ignorant of some things, with you to help her make wise decisions she would flourish as a mother and housewife. I know it sounds like I'm on her side, but what I'm trying to say is you could do so much worse, like you said, she's a very pretty girl, the fact that she's simple minded in some ways shouldn't really be an issue Dave.\"\n\n\"But mom, even though Mrs. O said you guys can help her raise babies you won't be around forever. That scares me, how do I even know if she will like sex?\"\n\n\"Son, you're a bright lad but you have much to learn about women. If you take your time with her, be loving and attentive, she'll enjoy sex, I can guarantee it. It isn't so much the physical with women, it's more the emotional, feeling wanted, feeling loved, sharing intimacy with her life partner. She won't want to share that with anyone but her husband David, I'll say it again, you could do far worse.\"\n\nLying in bed Bethany's words flooded my mind, I recalled her saying she could see the love for me in Sofia's eyes, she'd also said what mother had, I could do far worse than Sofia. The more I pondered it the more I realized I was coming to a point in my life where I was ready to settle down, at the age of twenty four I had a skill and good paying job with a bright outlook for future advancement. \n\nAs I began to think of her beauty and sex appeal the head between my legs took over, the skimpiest outfit I'd ever seen her in was a one piece bathing suit, to say she rocked it would be an understatement. I could only imagine what she would look like naked, her arms holding me tight to her chest as we kissed, her long legs behind my thighs pulling me in as I stroked her sweet pussy, my dick was stiffening as I imagined my face buried between her legs. Mother was right, just because she didn't have the same deductive skills most folks her age did wasn't a reason to not consider her as a wife. I needed more time to think it through, but I was certainly considering it. \n\nI thought of nothing but the situation before me the entire week, on Friday I suggested I take the mom's and Sofia for supper. When Sofie got up to use the girl's room I leaned over the table and took both mothers hands.\n\n\"I did nothing but think about this all week and I've made a decision, I want to marry Sofia, not that I need to because of your illness Mrs. Ortiz, I want to.\"\n\nTears fell liberally until they saw Sofie walking back, as she sat her mom patted her hand and smiled, when Sofie asked what was going on she told her softly she would know soon enough. When I dropped the mom's at home I asked Sofia if she'd like to get a sundae with me, as we sat eating the treat I looked in her eyes and saw nothing but admiration and affection. I decided it was time to take the leap. \n\n\"Sofia, do you like me?\"\n\n\"You know I do David you've always been my hero. You always treat me nice, some other people don't but you do.\"\n\n\"I have another question to ask Sof, do you have a boyfriend?\"\n\n\"Mom says I can't yet, she says boys only want to have sex with me and I shouldn't have sex before I'm married.\"\n\nI smiled, \"Sofie, would you go out with me on a date tomorrow night? I've talked with your mom and she said it's okay.\"\n\n\"My mom said it was okay. You mean like a real date with a boy and girl? Not just like I'm your sister?\"\n\n\"I mean a real date Sofia, I want to take you to the stock car races, if you want to go out with me.\"\n\n\"Oh the stock car races, I like those, they're noisy but I like them. Yes, I want to go out with you, will I be your girlfriend then?\"\n\n\"Do you want to be my girlfriend?\"\n\n\"I do, can we kiss then? Mama says I can't let boys touch my privates, but that's different than kissing. I've never been kissed by a boy before, I don't know how, will you show me?\"\n\nWhen we left the ice cream shop I dropped the car at my house and walked her home, she held my hand tight as she entwined her fingers in mine, a perpetual smile on her lips. At the end of the walk to her door I drew her into my arms, her head went back with her lips puckered up in a crinkled circle. I put my finger on her lips which made her open her eyes.\n\n\"Soften your lips, don't scrunch them so tight, put them against mine lightly, I'll show you how to do the rest.\"\n\nAfter five or six kisses she was getting the gist of things, her lips were soft, warm and full. It was too soon to French, that would be another lesson on another night. As I broke our kiss and stood back saying goodnight she grabbed my arms.\n\n\"No, you have to walk me to my front door and kiss me there. That's how it's supposed to be, I read it in a book.\"\n\nWith my arm around her shoulders and her arm around my waist I walked her to the door, kissed her another five or six times and told her goodnight. As she reached for the doorknob, she smiled and uttered, \"I love you David\", then slipped inside. Walking back to the sidewalk I glanced back to see her mom peeking through the living room curtains smiling. Our romance grew steadily, word got around that I was dating her, suddenly the guys trying to talk her out of her clothes seemed to disappear. On her twenty first birthday I met her at the door with roses, took her to an upscale restaurant in the city, to a night club dancing and headed home. \n\nSitting in her driveway necking I pushed back, as of late we'd been kissing more heavily, I had introduced Frenching, something she seemed to love, I looked at her and smiled. \n\n\"Sofia, I need to ask you something.\" \n\n\"Are you gonna ask me to marry you? Mama said you might, and I made up my mind ... Yes, yes, yes. I'll be the best wife, mama says when I'm married that I can let you touch my body, oh I want that so much David. I've read so many books about it and now I want to know what it's like.\"\n\nThe little brat, she knew what was in my mind the whole night. I opened the ring box, she squealed, put it on and clamped her arms around my neck. We didn't kiss as usual at the door, she burst inside dragging me along, putting her hand in front of her mother's face she bubbled with pride. \n\n\"David is going to marry me mama, can I let him touch me now?\"\n\nHer mom looked at me with a questioning look, I shook my head as she spoke.\n\n\"Honey we'll talk about that later when it's just you and me. Congratulations you two, I'm so happy for you. Any thoughts about when it'll happen David?\"\n\n\"I need to give it some thought but I think sooner rather than later. I'm gonna go now, Sofie I'll see you tomorrow, walk me to the door.\"\n\nAs we stood kissing, she was different, no she wasn't supposed to let me touch her but that didn't stop her from pressing her chest into mine and pushing her lower body against mine before I broke the kiss. My cock was at full attention when I walked away, damn that girl could light my fire quickly. My relationship with Belinda had ended just before Mrs. O had talked with me, she was transferring to another school with better prospects of getting into a med school after graduation. It had been several months since I'd had any pussy, it was beginning to have an effect on me. \n\nI thought news of our engagement around town would put the wolves at bay, not for Tom Weatherly though, it only seemed to spur him on. He was stupid enough to say in the tavern that he was going to fuck Sofia before I married her, he either didn't care or was too stupid to realize the two guys to his right worked with me every day. It was all smoke and bravado to me until I got a call from Burt Jerrod the store owner two nights later. Tom and his brother John had snuck into the back room and were waiting when Sofie took her break, as she walked from the bathroom they tried to force her back in. \n\nShe kicked and screamed and fought for all she was worth until other store employees intervened to subdue the brothers while waiting for the cops. When I got to Sofie her dress was torn revealing much of her chest, they had grabbed her breasts through the dress before ripping it open, then had pulled her bra up where all could see her bare breasts. She was hysterical and wouldn't allow anyone to touch her until I arrived, I put her bra back in place and closed her dress as much as possible. She told me they grabbed her between her leg's but she kicked hard so they couldn't take her panties off. I hurt inside, my sweet innocent Sofie knew what they were trying to do was wrong but had no idea why. \n\nThe brothers were face down on the floor cuffed and being searched as I led Sofie out of the room. I stared at Tom the longest, made a gun with my fingers and went POW as I grabbed Sofie. Mike the former deputy now a sergeant stopped me afterward while Mr. Jerrod helped get her coat on. \n\n\"Dave don't go after these pieces of shit when they bail out. Let the system put these fuckers away, this isn't the first complaint we've had, but it's the first we've had witnesses. Before that it was, he said she said, along with claims of consensual sex. This time they'll go away for a long while.\"\n\nOnce she finished with statements and I got her home it took my mom, Camila and me more than an hour to get her calmed down. She blubbered over and over about wanting me to be the one to touch her body, not those mean boys, it was finally my mom who intervened with what seemed to put her mind at rest.\n\n\"Did they touch your boobs or just tear your bra? If they didn't touch your bare skin, then David can still be the one to touch you first.\"\n\n\"No, no, they didn't touch my boobs, can David touch me now so he knows they didn't?\"\n\nCamila stepped in to save me from absolute embarrassment, \"No sweetheart, that needs to be done in private, just you and David. It will happen soon enough baby, I promise.\"\n\nI was relieved, I wanted to take those tender looking delicacies into my mouth and molest them with my tongue, but not with our mothers watching. It was late and I needed to get in bed, I held and kissed my sweet angel promising I would see her the next evening after work. Mom wanted to stay a bit longer telling me she'd see me at breakfast. She woke me a half hour earlier than my normal alarm setting telling me to get ready, then to meet her in the kitchen for breakfast. With the pancakes and sausage eaten I ask why the early schedule.\n\n\"Camila and I had a long talk after you left and she got Sofie in bed. We both think it's time for you kids to take a step in a new direction, while neither of us are for sex before marriage, we both feel like you need to know if you make each other's motor run. Camila is comfortable with some light petting, and I say Camila because Sofia is going to do as her mother says, if mama says it's okay for you to touch her breasts, then it'll be okay in Sofie's mind. She asked that you don't take her virginity until after you're married and please nothing below the waist right now.\"\n\nI must have looked like a cow at a new gate as she slapped my arm, \"Can you do that David? Can you respect her wishes? We also need to discuss how long before you marry. Camila doesn't have a long time and she'd like to see your first child before she dies if at all possible.\"",
        "Now I was in a flurry of thought, \"Children, mom we aren't even married.\"\n\n\"Then you better get that way, what is it you're waiting for anyhow? Get married, have babies, that's what Sofia has told her mom she wants most in life, to be married to you and be a mommy to her babies. You kids can have the entire back wing of the house, we'll install a doorway so you have privacy, Camila wants Sofie to have the house along with the trust when she dies. When you think about it that will work nicely, you'll only be three houses away if she needs help with the kids. Think about it David, it's what your dad would have done.\"\n\nFriday when I brought her home we sat in the driveway necking when she sat back and began unbuttoning her blouse. \n\n\"Sof, what are you doing?\"\n\n\"Mama said it's okay if you touch my boobs so I'm taking my blouse off.\"\n\n\"No baby, you let me do that, let me kiss and caress you. It'll be okay, you need to trust me.\"\n\n\"I do David, I love you. Mama says lovers can do things other people can't.\"\n\nWith our lips locked, my tongue tangling with hers and the hormones raging I slowly unbuttoned her blouse, stopping to kiss along her neck and shoulders, it was the dead of summer and her body was shivering with excitement. I kissed her lips, her cheeks, her eyes, the bridge of her nose and then along the top of her cute frilly bra. She mumbled she'd worn it just for me, I made sure I paid attention to it. She moaned when my hand covered her bra cup, pushing into my hand and whimpering into my mouth as I squeezed, lightly pinching her nipple which was now hard. Lifting her bra she gasped and looked down when I put the nipple into my mouth, moving the other cup out of the way my hands played with her soft warm flesh. \n\nWe had been in the driveway a solid half hour when I felt we'd gone far enough for the first night. I helped put her bra back in place and button her blouse when she told me she had wet herself. \n\n\"My panties are wet David, but it doesn't feel like pee, it feels thick and sticky. What is that David?\"\n\n\"That's called being aroused, it happens when you are being passionate with your lover.\"\n\n\"Do you have the same thing?\"\n\n\"Not exactly, similar but not the same. Honey we'll talk about this next time we're together, will that be alright?\"\n\n\"Yes David, I love you, mama says you'll never hurt me.\"\n\nAfter talking with our mothers, we decided that we would be married in two months, just before the trial for the Weatherly boys was scheduled to begin. Sofie wanted to be married on the old sand lot with all the old guys we'd played ball with, sadly it no longer existed as it had been, there was but a small amount of it that didn't have buildings on it. Her second choice was to have the ceremony in the park next to the duck pond where she and I had spent many a Sunday afternoon talking. \n\nIt was a warm sunny day with a slight breeze as I watched my bride walk toward the minister and I, my best friend Ed and his new bride were standing up for us, there were about fifty people in attendance, more than enough as far as we were concerned. Our wedding was late afternoon, we simply moved the reception into the open sided pavilion, we had a catered meal but not a dance, instead we spent our time moving from table to table until it was time to leave. \n\nI had booked a hotel room for us in the city, as I was taking Sofie's bags from her house into the car both mothers pulled me aside, it was Camila who spoke with my mom at her side. \n\n\"Be gentle with her Dave, she and I have talked and she knows some of what to expect, I've also told her you won't hurt her and to let you show her what to do. She knows it will hurt a little when her hymen breaks, I told her you'll take extra time at that point so she can relax and actually enjoy sex with her husband.\"\n\n\"Don't worry Mrs. Ortiz, I'll take my time, she and I have talked about this as well, she's told me her mama says it's okay for her to let me do whatever I want, I won't abuse that Mrs. Ortiz, I'm not into weird or kinky. She'll be fine, I'll make sure she feels safe and cared for.\"\n\nIt was my mom's turn, \"The three of us picked out her honeymoon ensemble, she's so proud of it, it's a sexy little thing, make sure you compliment her. Remember, she's going to be in an entirely different world when you get to Hawaii, make sure you look out for her, she looks like a lady, but inside she's still sixteen, protect her.\"\n\nShe had changed out of her wedding dress into a lovely white cotton dress with a cute yellow bow around her tiny waist, as we checked in she showed the lady her rings three times telling her each time we had just been married that afternoon. The older gal was sweet and understanding telling us to have an enjoyable evening, and congratulations on our marriage. We were alone on the elevator, I turned her to me, cupped her butt cheeks, pulled her tight to me and kissed her, I felt her push her hips into my rapidly growing cock. \n\nAs the elevator dinged she pulled back, \"Did I do that right Dave? Is that a wife does? I hope so because I sure liked it.\"\n\nHolding her hand as we stepped out I whispered that she had done exactly what wives do and that she was smart to wait until we were not around other people. She informed me very quietly that her mama had told her we could do anything we wanted to if we were by ourselves. I was glad she and Camila had talked so much, her mother had been her protector all her life, she did or didn't do things based upon what mama had told her, the significance of Camila passing that distinction over to me became very clear. I would protect this girl with my life. \n\nIn the room I suggested that I shower quickly while she got out her ensemble, then she could shower and change, I would be on the bed waiting. Before I could turn away she took my hand and put it directly on her mound over her dress, on tip toes he raised up and kissed me, then rubbed a hand across my rapidly stiffening dick. With a smile she pulled away and walked into the bathroom. I knew the moms had been giving her pointers, that was obviously one of them. \n\nI lit some scented candles and doused the lights while I waited with a raging hardon, when the bathroom door opened she smiled as she made her way to me. I whistled and told her how sexy she looked in her yellow baby doll top, half cup bra, skimpy panties, a belt and sheer yellow stockings. I met her halfway to the bed, my dick standing straight as an arrow, picking her up she looked confused. \n\n\"You're hard, I thought I was supposed to do that for you.\"\n\n\"You did angel, just thinking about you made me hard, then seeing you dressed like this made me even harder. I'm going to set you down and take off the top, then we're going to lay down while I finish undressing you.\"\n\n\"Will we have sex then? Some of the ladies at work call it fucking and that I have a pussy and you have a cock. Is that right?\"\n\n\"Those are words used in sex, but they shouldn't be used in public places. We can call what your mother has always referred to as your peach a pussy if you want to.\"\n\n\"Do you like when I use that word? Because it isn't a peach, it's my pussy and I want to call it that. And I want to call your thing a cock.\"\n\n\"That's what we'll do then angel, come lay with me.\"\n\nKissing and nuzzling her I untied the bow at her neck and let the top fall open, her tight nipples were above the half bra, I softly kissed her upper breast before I sucked first one then the other hardened nipple. Her back was arched and her hand on the back of my neck, she was trying to shove her entire tit into my mouth. I sat her up, slipped off the robe, unclipped the bra and slid it off her body, she never flinched or showed any apprehension at all. \n\nAs I sucked on her breasts my hand lowered to the front of her panties, my finger found the delicate groove, as it did her legs opened slightly and her hand wrapped around my aching dick. Moving from her breasts to kiss her lips we stayed in that position a few minutes, me rubbing up and down her vulva over her panties, her hand moving up and down my cock slowly. I began my descent as I kissed down her body, sucking and softly biting her nipples, leaving a bright red hickie on the side of her left breast, as my mouth moved toward her panties she stopped me. \n\n\"No, mama says you don't have to do that unless you want to. Do you want to?\"\n\nAs I nodded she smiled, hooked her thumbs into her panties and yanked them off. I could smell her arousal instantly, my dick was twitching, leaking pre-cum all over the bed and wanting to be sheathed in that tight tender pussy. With the same smile on her face she lay back opening her legs nice and wide, with my mouth above her pussy I asked how she knew what to do.\n\n\"Mama gave me a book to read that showed lots of different drawings, I want you to do all those things to me Davey.\"\n\nI'm thinking to myself, *thank you Camila* I had a hot nymph on my hands and I intended to make her mine. The days of a shaved pussy was not yet common, you might see it in a porn flick but not much else. She had a nice patch of silky down, not very wide, in fact it wasn't more than a few inches wide at the top, making an almost perfect V as it narrowed above her clit. The hair was long and while not thick, it was also not sparse, in the past I'd had my fingers in pubic hair aplenty but had never felt any as soft as hers. \n\nShe was up on elbows looking down as I rested in between her legs, she watched intently as I softly kissed her inner thighs, then placing a gentle kiss directly on her labia, my eyes never leaving hers. My hands were under her butt, as I lifted her into my face pushing my tongue through the outer labia sucking gently she flopped onto the bed, head thrown back, mouth open and yet silent. I watched the lovely mounds of pleasure rise and fall with her rapid breathing, breasts that would one day nurse our children. \n\nLicking the labia without touching her clit I watched her squeeze her breasts and pull the nipples, head back, soft moans and guttural sounds filling the room, the moment my tongue swiped over her love bud she let out a soft squeal, squeezing her breasts much harder, not only pulling but pinching her nipples as well. Her hips began rocking back and forth, as though passion had overtaken her body, it was then I came to the realization that passion and desire would be as normal for her as any other girl, it was up to me to channel it and let her know she was safe to let loose. I continued to lick and suck her clit, her hips were bucking up and down as her climax approached, suddenly she cried out, \"Dave stop, I'm gonna pee.\" \n\nLooking up I waited until she looked at me, \"You aren't going to pee Sofie, you're going to do something called a climax, just let it go sweetheart, it will feel wonderful.\"\n\nI proceeded to eat her tangy little cunt, her tender small pussy lips hugging my tongue as I swiped up and down, when the momentum of her hips returned I latched onto her clit and sucked lightly. Her body lifted off the bed, her hands were at the back of my head and she screamed as she pushed her pussy tight into my face, she didn't squirt, but she certainly gushed. My face was full of cream, tangy clear liquid, her body flopped back onto the bed, I kept my tongue stiff and pressed against her clit, her hips would slowly move until her clit touched my tongue and then jump. I stayed this way a minute or so letting her take herself wherever it was she wanted to go, finally moving away from me.\n\nMoving up the bed to lying next to her I cradled her in my arms as she regained some semblance of order in her breathing and body composure, I hadn't bothered to wipe my face, I felt it more important to make sure she felt comfortable. Looking at me she kissed my lips and quickly pulled back. \n\n\"Your face is sticky, is that me?\" I nodded. \"I thought it would smell nasty and be yucky, but it isn't. Are you upset with me because I did that to your face? I couldn't stop it, it made me tingle all over my body, even in my toes.\"\n\n\"I'm not upset, in fact it's exactly what I hoped would happen. Was that your first climax Sofie?\"\n\nThough it was dark in the room I could tell she was blushing as she hung her head. \"Well, sort of, I did it to myself once in the shower but it scared me and when I told mama she said I shouldn't do it anymore. Will you do that to me again?\"\n\n\"I will my love, not tonight though, tonight I'm going to make love to you.\"\n\n\"Is that when you put your cock in my pussy and we fuck?\"\n\n\"I will be inside you, but tonight I'm going to go slow and make love to you. Are you rested enough to do it now?\"\n\nHer answer was to bend her legs at the knees and open herself completely to anything I wanted to do. I pushed her legs flat onto the mattress as I kissed, caressed and stroked her body, whispering her name between kisses, bringing her to a point of arousal where her lower body was twisting and undulating, almost begging to be invaded. Rising above her with arms extended I told her to watch my eyes and listen as I explained things, with her eyes burning holes in mine and her pelvis pushing upward looking for attention I began. \n\n\"I'm going to put the tip of my cock against your pussy, you will feel pressure as I push, that's normal so try and relax. Once I'm inside you I'll stop so you can get used to it.\" As I was talking she was listening intently. \"After I'm inside I'll go slowly, it will feel odd, like you're being split apart but your body will adjust so try to relax if you can. Sofie, if you want me to stop push against my chest.\"\n\nHer eyes were wide as I began to push against the tightest pussy I'd ever encountered, pulling back I swiped the head up and down the wet crevice a few more times before trying again, I could feel the labia begin to yield and continued pushing until I felt the head break through. She let out a small yelp as her body stiffened, her hands against my chest pushing hard, I remained still until she opened her eyes. \n\n\"Are you okay baby? I don't want to hurt you.\"\n\n\"I'm not hurt, it surprised me, I knew it would go inside me but I didn't know it would be so big.\"\n\nI'm not *hung* as they say, the six I have is nice and fat and has never seemed to leave a woman wanting, then again she's never had anything inside her before, not even a tampon. I whispered *okay* she nodded and closed her eyes as I worked it in and out slowly, advancing a small amount with each stroke stopping when I hit her maidenhead. Her eyes opened as if to wonder why I stopped. \n\n\"Sofie, now is when it will hurt a little, I'll as gentle as I can.\"\n\n\"You mean you aren't all the way in?\" She raised up and looked at four inches of my dick still not inside her. \"Dave I'm scared.\"\n\n\"Do you want me to stop Sofie, we can do this tomorrow.\"\n\n\"No Davey, we made it this far I want to be a woman, mama told me it would hurt a few minutes and then feel better. Go ahead, I'll be strong.\"\n\nNot wanting to drag the discomfort out with a slow penetration I pulled back and slammed past the hymen. Her body tensed, she let out a cry and immediately fainted. I wasn't sure what to do so I stayed as I was, in seconds her eyes were opening as she whimpered my name repeatedly, laying forward I kissed the tears from her cheeks, I kissed her lips softly and told her the worst was over. \n\n\"I'll go real slow baby you tell me when it feels a little better.\"\n\nIt took several minutes of short stroking before I could say I was all the way inside her tight hot pussy, she was so tight it made my dick hurt. Using slow deeper strokes, she began to relax, her breathing wasn't so choppy and she'd begun to make little noises of what I assumed were pleasure. Leaning up to watch I saw her smile as I slid in and out of her, putting her arms around my neck she drew me down for a kiss, at the same time she raised her hips into me for the first time. It wasn't much, but it was a beginning. \n\nI'd like to say I sent her into orgasmic nirvana, except that would be a lie, she did cum with me but not very hard. Her body shook a bit and she stopped breathing momentarily, nothing like when I'd eaten her, then again I hadn't ripped her little pussy apart when I ate her. I ran a bath for her and then helped her wash, when I tried to wash her nether area she cringed and whimpered, I could see through the water that she was red and swollen. I handed her the cloth and told her I'd get a towel, as she stood I wrapped the towel around her, carried her to bed and laid her down. \n\nHer stockings, belt, half bra and panties were in a heap on the floor, after drying her I asked what she wanted to sleep in, she told me there were panties and a large t-shirt in her bag. Putting them on her I pulled the covers up over her and told her to sleep while I took a quick bath. With our flight leaving at ten I wanted to make sure we were up soon enough for her to get ready, she winced as she got out of bed and walked gingerly but within ten minutes she was showing no external signs of discomfort. \n\nSitting next to me on the 727 she gripped my hand like it was the last vestige of reality known to her. Once at altitude she relaxed and became calm, when I asked if she hurt down there she whispered, *just a little*. Our flight landed just after three, after checking in to our beach bungalow we opted for a nap before the evening meal. As we woke she asked if we could do it again, when I explained she might not be able to do it again that night she said she didn't care, she wanted to do it then. \n\nWho was I to argue, we took our time and eased into full penetration, once I'd hit bottom she wanted the pace to increase, I'm not saying I hammered her tender vulva, we certainly went at it harder than the night before which resulted in a long and strong climax for her. My nuts had been boiling, when she let loose so did I, it felt like my cock wasn't going to stop spasming, I could feel it twitch and push out a little bit more. When I began to soften I pulled out lying next to her out of breath. \n\nHer soft voice invaded my state of fogginess, \"I could feel you this time, I mean your stuff inside me, I liked that Davey, it felt hot and thick, like the way my panties do when we kiss and you feel my tits. It sure was a lot, I can feel it running out.\" \n\nI jumped up, got some tissues and helped wipe away the residue dribbling from her swollen puffy vulva. We dressed and went for dinner, ever notice how there's at least one lecherous vulture in every bar setting? We chose to be seated on the open patio with the sun still high in the sky, as I went to get us a drink at the bar across the room, I noticed a guy moving toward our table. I watched carefully while I waited for my beer and her soda, as I approached our table he rose and extended his hand, I looked at it and moved past. \n\nSetting the drinks down I asked Sofie what he had said to her. \"He said I'm pretty and tomorrow he'll show us where we can go without clothes on, but I don't want to do that.\"\n\nI turned, grabbed his arm and led him away, \"Listen asshole, stay away from my wife. It's obvious she's learning disabled and you think you're going to take advantage of that, if you as much as talk to her again I will end your time on this beach. Understand?\"\n\nI wasn't much bigger than he was, but there's something about when you know you've met your match and he'd met his. He nodded and scurried off not to be seen again the entire time we were there. Whether he put the word out or there were no more predators, he was the first and last I had to protect her from. Our sex life expanded rapidly in that first week, she wanted to try it from behind and loved it, then riding me, on her side, ankles on shoulders, bent over the couch and once on the kitchen table after she had sat in front of me with her dress up, no panties and my face buried in her pussy. ",
        "By weeks end she wanted to try a blow job, I let her go for a while to get used to it, I didn't think she would be able to finish, but it gave her an idea of what it was like, she did learn to give me a very satisfying hand job one afternoon on a secluded area of the beach. By the time we were headed home I had a horny little vixen on my hands, she wanted sex at least once a day, a few times twice. I was hoping we might be home for a short season before she called for cock three times in a day, I was worn out. \n\nPrior to our marriage we decided we didn't want to live with either parent and had rented a two-bedroom apartment a block down from where Sofie lived, by the time we got back the moms had it cleaned and set up, all we needed to do was move in. They'd stocked the kitchen with no longer used pots, pans and cooking utensils from their homes, neither of us cared, it was less we had to buy. Sofia's cedar chest with all her embroidered and earthly treasures sat at the end of our bed, when I first saw it, I envisioned my minx sitting on it, the perfect height for her to suck my cock. Little did I know that within the next two months that's exactly what she was doing, never letting a drop escape her lips. \n\nWith Camila so sick we decided to try and get pregnant right away, by our sixth month of marriage she had not one but two growing inside her, apparently twins were prevalent on my dad's side of the family. My dad was an only child, so it came from somewhere way back. Once we found out she was pregnant I asked her to no longer work, which she was fine with, she spent more hours with the moms learning to cook more items, learning how to care for herself while pregnant and sewing maternity outfits. \n\nBy the time Sofia was seven months and big as a barn as they say, Camila took a turn for the worse, which presented us with a new dilemma. Should we move in and take care of her mother or stay where we were? Following much conversation with both mothers we reached a decision, we would move in with Camila and my mom would visit daily to make sure Sofie wasn't overwhelmed during the day. Somehow being where she had grown up seemed to help her, Sofia was more relaxed, more confident and secure. \n\nAs soon as the maternity ward would allow it both mothers were in the recovery room oooing and ahhhing over our fraternal twins, we had named them Frank and Francine, I'm not sure where those names came from, we simply liked them. Sofia was prepared to breast feed and took to it as quickly as the babies did, the county nurse checked in the first month or so reaching the decision that with all our help Sofia was becoming a great mother. \n\nThe kids were just over a year old when Camila died, she'd been alert for their birthday party and seemed to go downhill rapidly afterward. Sofia took it in stride, she cried and missed her mother, but it was as though she had a better grasp on the fact that we all live and die than so many others. With Camila's death Sofia inherited everything, the house, the trust and the car. We left the trust alone, my wages were sufficient to live on, Sofie had learned to drive, having her mother's car meant we didn't have to buy one. \n\nNot knowing if Sofia would ever marry Camila had bought two plots side by side decades ago, when we laid her to rest Sofie asked where she would be buried, when I pointed next to her mom she smiled. Our next child was a girl (Abagail) born almost two years to the day after the twins. The kids were getting old enough to have different issues Sofie didn't always know how to evaluate, she and I would talk about them after supper, once she knew what she should do it was no longer an issue. We thought we were done having kids after Abby, somehow, we made a mistake, low and behold she had a second pair of twins growing in her tummy, this time both boys.\n\nAs the kids aged and began school it didn't take them long to figure out they were smarter than mom in some areas, being normal children they figured out they could often put one over on her. When that began I sat the older twins down and explained that their mother was learning disabled and they would likely always be smarter than she was, but what a travesty it would be to take advantage of one who loved them so much. It was as though they made it their mission to make sure their mother wasn't messed with or over, oh sure, they had their moments but in the end it was always the same, protect mom and never ever make fun of her. That attitude was adopted by the younger ones and prevailed until the second set of twins left for college. \n\nBy that time Sofia was settled in her routines, comfortable in and out of her house, people at the stores knew her and made sure she was not taken advantage of. I'm not going to pretend we had a perfect marriage with no issues, we had our ups and downs as all couples do, and though we didn't always agree we were never disagreeable about it. I learned early on that Sofie believed every word I said and made damned sure I didn't mislead her or take advantage of that trust. \n\nWhen we had first returned from our honeymoon she was worried about having to testify against the Weatherly boys, thankfully they pled guilty, in return they got a lesser sentence, two years in the penitentiary, when released they moved to another state, Sofie never had to see them again. \n\nPlacing the flower's I'd brought at her headstone tears filled my eyes, why had my Sofie left me too soon in life? I didn't have the answers, no one did, as I stood staring at her plot, I heard the sound of children getting louder and louder, the kids were present with all of their brood. I couldn't be with my Sofia on this day, but I could see her in each and every person standing next me. \n\nEpilogue:\n\nDave only lived another six years before he succumbed to pancreatic cancer, I personally think his broken heart allowed his body to accept the dreaded disease, but that's just me. Their girl Abby bought the house, she has two of her own running in the neighborhood, the oldest twins have families and still live and work in our town, the two younger twins now live three states away married to twin sisters. My wife and I had been present for every one of the kid's weddings, though I'm not blood related I'm still referred to as Uncle. \n\nDave and I had spent many a day together since our early childhood, our wives had become close and our respective children were close friends growing up. I wept during full military honors for my lifelong friend, sadly he would no longer be with me to solve life's problems over a beer. After Sofia died Dave never looked at another woman in a desirous way, Sofia had been his everything, in his mind she could never be replaced. \n\nWith my wife now gone I'm on my own, well sort of, my kids and grands come to see Papa often, in my heart is a special place for not only my bride, but Dave and Sofia as well. I may be lonesome at times but as long as I have memories, I will never be alone."
    ],
    "authorname": "R410a",
    "tags": [
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/sofia-1"
}