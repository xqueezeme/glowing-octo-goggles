{
    "title": "Leap of Faith",
    "pages": [
        "Author's note: It's been a long time since I wrote any fanfiction, but I couldn't pass up the opportunity to collaborate with Rube, an artist whose work I very much enjoy. This story takes place during the events of Halo 3: ODST, and features his character Alba. I'm a long-time Halo fan, too, and so this was kind of a match made in Heaven for me. \n\nYou don't have to be at all familiar with the Halo setting to follow the plot, but if you are, please proceed feet-first. \n\n***** \n\nThe Rookie - five minutes before drop, aboard the UNSC heavy cruiser Say My Name in high orbit above New Mombasa. \n\nThe Rookie was jolted awake as his comrade gave him a less than gentle tap with the butt of his sniper rifle. His nap interrupted, he opened his eyes to see his fellow ODST peering down at him with a wry smile on his face. It was Romeo, the blue coloration on his BDU's chest piece giving him away. \n\n\"Wake up, buttercup,\" he said as the Rookie reached up to adjust his helmet. Dutch appeared to his right, shoving his rowdy comrade out of the way, Romeo stumbling off in the direction of his drop pod. Dutch's battle dress was adorned with a skull and crossbones that had been etched into his orange chest piece, and a skull motif that decorated his helmet. Many of the more experienced ODSTs sported such decorations, they were a tough bunch, and they had seen a lot of action during the war against the Covenant. UNSC dress standards had gone out of the window lately, there were more important things to worry about. \n\n\"Relax, Rookie,\" he began. \"He don't mean nothin' by it. Besides,\" he continued as he appraised the submachine gun that he was holding in his hand. It was an M7S, the suppressed variety, the flashlight that was mounted on its barrel already lit. He thrust the weapon into the Rookie's hands as the glass on his helmet's visor went opaque. \"Now's one of those times when it pays to be the strong, silent type...\" \n\nThe Rookie stowed the weapon beside him in his drop pod, slotting it into place next to his seat with a mechanical click. The last thing that you wanted when you were hurtling towards the ground in a metal coffin was your gear bouncing around and hitting you in the face. \n\nWas it already time to drop? He hadn't been paying much attention to the briefing, he had learned to take every opportunity for sleep that presented itself. You never knew when you might be forced to spend seventy-two hours wide-awake behind enemy lines. He knew their mission, however. \n\nThe Covvies had invaded Earth. Fuck knows how they had located it, the Cole Protocol had seen the ODSTs running from ship to ship, scrubbing navigation data to protect that secret for years now. Either way, they were here, and they had made landfall in New Mombasa, a Kenyan port city. There was a big-ass Covenant assault carrier hovering right next to the city's orbital elevator, and intel reported that it was the Prophet of Regret's personal ship. If they could board the carrier and kill a Covenant Prophet, that would certainly give the ugly split-jaws something to regret. Better yet, capture the bastard and use him as a bargaining chip to broker an end to the war. The Prophets were holy figures in Covenant society. They were like an Admiral, a President, and a Pope all rolled into one. Who knew what he was doing on Earth, but the UNSC wasn't about to look a gift horse in the mouth. \n\nHe leaned back in his padded crash seat and strapped in, the windowed door of his drop pod closing to seal him inside with a loud clunk. The SOEIVs, colloquially known as eggs, were single-person vehicles that could rapidly deploy a soldier and his equipment to the surface of a planet from orbit. They were angular, teardrop-shaped pods, about five meters tall and weighing half a ton. The rapid part came from the fact that the pods would drop feet-first at terminal velocity, literally falling into battle. They had limited maneuvering capabilities that would allow the occupant to make small corrections, but they were pretty much fire-and-forget. If command sent you down into a blanket of anti-aircraft fire, then there wasn't much that you could do about it besides grit your teeth and try not to piss yourself. \n\nAs he secured the straps, the thirty-second countdown began, the comms equipment that was built into the pod coming to life as it slowly rotated to face space. Two monitors to either side of the narrow window flickered on, showing the helmeted faces of two of his superiors, along with readouts displaying navigational and tactical data. \n\n\"Latest intel reports that Covenant troops are massing beneath the carrier,\" he heard over the radio. Dare was speaking, the Naval Intelligence operative who had been assigned to their unit. He could see her name stenciled across the brow of her Recon helmet. \n\n\"They're pulling back?\" Buck asked, his commanding officer's helmeted head appearing on the leftmost monitor. \"Why?\" \n\n\"We're not gonna find out way up here,\" Dare replied tersely. \n\n\"Troopers!\" Buck continued, the Rookie's heart beginning to race as the countdown neared its end. \"We are green and very, very mean!\" \n\nThe pods that were nestled along the ship's underside began to drop, streaking towards the clouds below, trailing plumes of smoke as their main engines fired. The Rookie's stomach lurched as his own pod detached from the heavy cruiser, a brief moment of weightlessness making him feel like he was floating before the engine kicked in and sent him hurtling towards the ground. He gripped the twin control sticks for all the good that it would do, his knuckles white. \n\nBeyond the window, he could see the remnants of the orbital battle with the Covenant. There were the burnt-out hulks of damaged UNSC ships floating amidst a field of debris, some of the larger ones still burning, pieces of scrap metal tumbling through low orbit like a floating scrapyard. They'd be lucky if their pods didn't slam into that junk like billiard balls. The orbital elevator penetrated the layer of grey clouds, rising up into the darkness above, where it was joined to an orbiting station. It was made up of massive concentric rings that were supported by kilometers of thick cables. The Mombasa Tether's job was to provide an inexpensive way to ferry supplies and ordnance into space, it was the economic heart of the city, and it was a relief to see that it was still standing. \n\n\"The Navy got its butt kicked,\" Romeo muttered over the comms, the Rookie watching as they passed by a frigate that had been all but cleaved in two. It hung there in the microgravity, like time had stopped for it, its exposed decks burning. \n\n\"Hey Romeo, remember when I told you to shut your mouth?\" Buck asked. \n\n\"Yeah?\" \n\n\"Consider that a standing order...\" \n\nEverything went white as the pod passed through the clouds, turbulence buffeting it. When he emerged, the Rookie could see the city beneath him. The Covenant cruiser was floating serenely beside the tether, looming over the artificial island at its base, the silver water of the ocean sparkling in the African sun. The alien vessel had a long, rounded hull, the midship flared outward almost like a pair of stubby wings. He could make out odd lights glittering along its surface, its design contrasting sharply with the more angular UNSC ships that he was accustomed to. It was massive, over three miles long, its armor plating a shimmering grey-blue in color. \n\n\"Captain? We're fifteen klicks off the deck,\" Buck said as the ground rushed up towards them. \n\n\"Stand by to adjust trajectory,\" Dare added, \"on my mark.\" \n\n\"What'd she just say?\" Romeo asked, struggling to hear her over the sound of the rushing wind. \n\n\"Mark!\" she added. The Rookie gripped his control sticks and followed the other pods as they made a correction, their engines flaring a brilliant blue. \n\n\"We're way off course!\" Mickey complained, another of the ODSTs assigned to their squad. He was right, there was no way that they were going to land on the carrier. Even with a course correction, it was too far away. Had someone made a mistake? \n\n\"We're heading exactly where I need to go,\" Dare replied cryptically. \n\n\"But we're gonna miss the carrier!\" Mickey protested. \n\n\"Radiation!\" Dutch shouted, the Rookie looking at his display to see the Geiger counter spiking. \n\n\"Did the Covenant just set off a nuke?\" Mickey asked in disbelief. \n\n\"No. The carrier's going to jump!\" Dare replied, the wavering in her voice betraying her alarm. The Rookie looked past the reinforced glass of his pod's canopy, watching as a brilliant ball of light engulfed the carrier's rounded nose, crackling with energy as it began to spread. \"It's a slip-space rupture! You need to-\" \n\nThe spreading ball of mesmerizing light suddenly collapsed into a bright point, sucking the three-mile-long carrier and a few nearby buildings into it in the blink of an eye. There was a brief moment of eerie stillness, and then the singularity released all of its energy in a monumental explosion. It engulfed the city beneath it, erasing entire blocks like they were nothing, impacting the orbital tether and rocking the great structure like a sapling in a hurricane. \n\n\"EMP!\" Dutch warned, his voice crackling with static. \"Losing power!\" \n\n\"Stabilize, then pop your chutes,\" Buck ordered. \"We're going in hard!\" \n\nThe other pods began to brake, panels on the tops of the teardrop-shaped vehicles popping off to release their drag-chutes, slowing their descent and keeping them upright. Before the Rookie could pop his own chute, the shockwave from the slip-space rupture reached them, catching the pod directly in front of his own and slamming it into him like a wrecking ball. His canopy cracked, sparks showering him, his displays flashing with red warning symbols as collision alarms blared. His pod began to spin out of control, and he reached over to grab one of the handholds for purchase, desperately yanking at his control stick in a futile attempt to right his doomed pod. He was spinning like a top, the scenery beyond his shattered window flashing like a strobe as it caught the sunlight that reflected off the water. \n\nHe fought back the nausea and the dizziness, feeling like he had left his stomach behind a few thousand feet above him, every muscle in his body tensing as he prepared for the impact. \n\nAlba - fifteen minutes before the slip-space rupture, aboard the Covenant assault carrier Solemn Penance. \n\nAlba fiddled with her power armor, the skin-tight, rubbery underclothes that she wore beneath it doing little to prevent the chafing. It was made with males in mind, and it was uncomfortably tight around her chest. There were few females serving in Jiralhanae packs, only the strongest and most resilient managed to rise through the ranks, and she was one of those few. \n\nAgainst the odds, and in spite of her chauvinistic superiors, she had risen to the rank of Captain in the Covenant military. Her status afforded her command over her own pack, although it was comprised entirely of aliens, rather than Jiralhanae of lesser merit. As she made her way across the assault carrier's cavernous hangar bay, a gaggle of yapping Kig-yar and waddling Unggoy trailed behind her. \n\nThe Kig-yar were avian creatures, pirates and scavengers, for the most part. They stood a little over six-feet tall, their long, scaly snouts full of razor-sharp teeth. They had large eyes, and a crest of quills on their heads, their fingers and toes tipped with wicked claws. They walked on a pair of digitigrade legs, bobbing their heads with every step, examining their surroundings with a jerking motion that Alba always found off-putting. They were wielding point-defense gauntlets and needle rifles, clad in form-fitting jumpsuits that provided little protection for their slim frames. \n\nThe Unggoy were the runts of the Covenant litter, little more than cannon fodder, less than half her size at four feet. They were methane-breathers, carrying tanks of the foul-smelling gas on their backs, which were connected to their helmets via snaking tubes. They were arthropods, resembling large crustaceans, encased in a tough exoskeleton. The diminutive creatures struggled to keep up with their longer-legged comrades, clasping plasma pistols in their hands with their stubby fingers. They made poor warriors, but as someone who knew what it felt like to suffer the disdain of her superiors, Alba did not mistreat them as many of her peers did. \n\n\"Make your way to the troop carriers, runts!\" she heard one of the more senior Jiralhanae yell over the noise of the bay. He growled at a passing Unggoy, raising his imposing gravity hammer as if threatening to crush the creature, the little alien hurrying along to join the rest of its group. He was a Captain Major, his golden power armor catching the light, his shaggy fur a mature shade of silver. Alba preferred to keep hers shaved, the armor was uncomfortable enough without it snagging on her hair, and it wasn't as if the males would afford her any more or less respect because of it. \n\nThere were packs of Jiralhanae wearing their brightly colored armor loading into the transports, the ornate designs of their helmets displaying their respective ranks. Alba was just one of many Captains leading her pack to their assigned dropships today, the High Prophet of Regret had ordered them to occupy the Human city below. They were searching for something here, something important. They hadn't told her what, she didn't need to know, her only orders were to suppress any resistance that she met down on the surface. \n\nShe missed Doisac sometimes, things had seemed so much simpler on the homeworld. Out here, everything was shades of grey, war was not as black and white as the preachers had led her to believe. She'd had faith in the Covenant, at least for a time. They had offered her something that her own people had been reluctant to give her, status, respect. Although there was a great deal of animosity between the Jiralhanea and the Sangheili, the reptilian warriors that made up the bulk of the Covenant's elite troops, they had always afforded her a modicum of dignity that had earned them her respect in return. Many of the Elites, as they were known, had already deployed to the ground. She couldn't see any among the troops in the bay. \n\nShe mounted one of the dropships, its curved, purple chassis shining under the bright hangar lights. Her pack hopped in behind her, gripping handholds on the walls and ceiling as their pilot prepared for takeoff, the deck humming beneath her feet as the engines spooled. She selected a carbine from the weapon rack beside her, checking its payload of radioactive ammunition, glimpsing the city beyond the hangar bay as the ventral doors of the dropship began to close. The skyline was jagged, the native buildings blocky and strange. Fires were already raging, black smoke rising into the air in thick plumes. At least it wasn't cold here, that was usually her first complaint. \n\nThe Phantom rose from the deck, flying out over the city, the alien landscape now obscured from view behind the ventral doors. Almost immediately, the dropship began to shake as it sustained anti-aircraft fire from the city below, human shells exploding beneath it and hammering it with shrapnel. They were primitive weapons, they didn't pose much of a threat. The Unggoy whimpered all the same, huddling together, the Kig-yar jeering at them and snapping their jaws. \n\nThere was a dull thunk sound as the gunner returned fire with the nose cannon, spraying a stream of plasma at the enemies below. Alba gripped one of the handholds in the ceiling as the craft dodged and weaved, avoiding the worst of the flak, one of the Unggoy bumping into the far bulkhead as the Phantom came to an abrupt stop. The ventral doors began to open, the wind rushing in. Alba was blasted in the face by a stream of hot air, the smell of baking asphalt, and the scent of acrid smoke stinging her nose. \n\nShe gripped her carbine and stepped towards the edge of the troop bay, looking down at the street below. There were odd, colorful vehicles that looked like beetles scattered about, their metal carapaces shining in the harsh sunlight. They didn't look like military vehicles, they had no obvious armaments, no armored plating. Their occupants were long gone, many of them leaving doors ajar and engines idling, as though they had left in a hurry. Besides that, the city seemed deserted, there wasn't a soul in sight. There hadn't been any fighting in this area, there were no signs of combat, no bullet holes or plasma burns, no charred corpses. Alien trees in planters blew gently in the breeze, angular structures made from metal and glass rising to either side of the pathway below like the walls of an artificial canyon. \n\nHer pack crowded behind her as she prepared to jump. It was a long drop, twenty feet at least, but the gravity on this planet was half that of her own. She steeled herself, then leapt from the Phantom, landing on one of the colorful vehicles and denting the metal roof like it was made from tin. She stepped down onto the path below, the black surface pleasantly warm beneath her feet. It was patterned with regular, white markings, glowing lighting strips barely visible in the sunlight. She shouldered her carbine and covered her pack as they dropped down behind her, the Kig-yar scrambling up onto higher ground, and the Unggoy spreading out to form a defensive perimeter as they had been trained to do. There was a rush of air as the Phantom above them moved away, soaring off over the tops of the spire-like buildings and vanishing from view. \n\nAfter a moment, Alba lowered her weapon, noting that there were no Human soldiers here to meet them. The natives had fled, or perhaps they were hiding in their dwellings. The shadow of a Covenant assault carrier looming over their city might have put the fear of the Great Journey in them. \n\nShe looked up to see one of her Kig-yar marksmen perched atop a tall, metal bar that overhung the street with his needle rifle in hand, jerking his head from side to side as he searched for targets. The pole was adorned with glowing signs written in an alien script that she couldn't read, and a trio of lights that flickered randomly between green, red, and orange. The rest of the Kig-yar had taken up similar positions, scrambling up onto balconies that protruded from the faces of the buildings, or hopping atop some of the larger derelict vehicles. These Jackals had keen eyes and a good nose, they made fine scouts and snipers. \n\n\"What do you see?\" she demanded, the Kig-yar who was standing atop the lighting pole turning his snout in her direction. \n\n\"Nothing, Captain,\" he hissed. \"There were Humans here before, but no longer.\" \n\n\"H-Humans all gone!\" one of the shrill Unggoy added, perhaps relieved that they had not dropped down into the midst of a firefight. The little creatures were cowardly at the best of times, always glad to shirk their duties. \n\n\"What are your orders, Captain?\" another of the Kig-yar asked from its vantage point in the fronds of a nearby tree. \n\n\"We begin our patrol,\" Alba replied gruffly, setting off along the asphalt path. \"The Prophets want to take control of this place, and it is not our station to ask why. Spread out in a loose formation, and keep your wits about you. We have orders to suppress any resistance that we meet.\" \n\nThe Jackals yapped and hissed gleefully, flanking her to either side of the street, leaping gracefully between perches as if they were afraid of touching the ground. The Unggoy waddled along behind her, wheezing as they sucked in gulps of methane from their packs. Some of them dropped to a three-legged gait, supporting themselves with one of their long forelimbs as they shambled along, grasping their pistols in the other. As much as Alba disliked working with the bloodthirsty Kig-yar and the useless Unggoy, at least they respected her authority, which was more than she could say for her own kind. ",
        "They made their way along the winding streets, the Human buildings breaking up the lines of sight. It was confusing, in a way. Everything looked the same to Alba, there was little to distinguish one building or one plaza from another. The clues might be in the flickering, scrolling signs that seemed to adorn every surface, but the strange glyphs and pictures that decorated them were a mystery to her. \n\nAs they rounded a corner, the smog-choked sky was lit by a brilliant flash of light, Alba shielding her eyes reflexively as the Unggoy turned to look back in alarm. Everything around them was cast into deep shadow for a moment, and then it was gone. When she turned to look back in the direction of the carrier, it was no longer there. In its place was a spreading shockwave in the distance, the crackling energy tearing up the buildings around it, the massive space elevator that dominated the skyline swaying as it weathered the impact. \n\nAlba considered giving the order to take cover, but the blast was a good distance away, dissipating long before it reached them. The same could not be said of any Covenant troops that had been closer to the assault carrier. There was a sudden blast of air, sending debris and foliage flying, knocking the Unggoy down as Alba braced herself against the howling gale. It rushed between the buildings, rocking the trees, one of the Kig-yar losing its footing and toppling to the street from atop a nearby pole. It abated almost as soon as it had arrived, a secondary effect of the explosion that she had witnessed, no doubt. \n\n\"Has the Solemn Penance been destroyed?\" she asked in disbelief, watching as the fallen Unggoy picked themselves up off the ground. One of them cast aside a leafy frond from one of the trees that had been blown into it, looking about nervously as it tried to get its bearings. \n\nThe Kig-yar who had been blown from its perch rose to his feet and brushed himself off, snarling at a nearby Unggoy as if it had somehow been the creature's fault, sending it scurrying away. \n\n\"No, Captain,\" he replied in his tinny voice. \"That was a slip-space rupture. The carrier, she has jumped away.\" Alba was inclined to take the Kig-yar's word for it. Their people were pirates, they had a lot of experience when it came to ships and their operation. \"To initiate such a slip-space jump in atmosphere...there must have been great danger.\" \n\n\"Many of our troops were stationed below the Penance,\" Alba snarled, her brow furrowing beneath her ornate helmet. \"How many were just killed in the blast?\" \n\n\"It is not wise to question the Prophets,\" the Kig-yar replied, glancing about nervously as though someone might overhear her. \"Not over open channels, at least...\" \n\nMore of the Kig-yar descended from their vantage points, the Unggoy scurrying over and grouping up in front of her, looking to her for leadership and reassurance. \n\n\"T-they've left us behind!\" one of the little crustaceans wailed. They were on the verge of panic, she had to rally them before they scurried off like frightened hatchlings. \n\n\"Calm yourselves,\" Alba replied tersely, \"I'm sure that they have some kind of plan. For now, we continue the mission that we were assigned. What is it that the Sangheili tell you when your courage falters?\" she asked, the little aliens pausing for a moment to consider. \n\n\"When in doubt, shoot,\" they chorused. \n\n\"Good, now move out.\" \n\nThe nearest Kig-yar glanced between her and the Unggoy, perhaps not approving of her methods. Most Jiralhanae would have threatened them, keeping them in line through fear. He held his tongue, brushing himself off and resuming his patrol. \n\nAlba was lying, of course. She had no idea if the Prophets had a plan or not, if they intended to send reinforcements, or if they had merely abandoned their troops out of simple convenience. If they were willing to sacrifice the soldiers that had been staging an invasion from beneath the carrier, then why would they care about what patrols were still roaming the city? \n\nWorrying about it right now was pointless, but it might be wise to meet up with some of the other patrols and coordinate. She allowed herself a worried glance at the space elevator, still standing, but visibly weakened by the blast. The last thing that she wanted was to be caught beneath that thing when its supports gave out, and it came down... \n\nThe Rookie - Occupied city center, six hours after drop. \n\nThe distinctive sound of a Phantom soaring by overhead greeted the Rookie as he opened his eyes groggily, his head pounding as he looked around the interior of his battered pod. It took him a moment to remember where he was, and what had happened, the memories coming flooding back to him. The slip-space rupture, the crash...where was the rest of his squad? The monitors and readouts were all either too damaged to make out, or hissing with static, and his comms were completely shot. \n\nThrough the cracked glass of his canopy, he could see the street a good distance below him. He was high off the ground, had his drop pod somehow embedded itself into the side of a building? He was almost afraid to move lest he dislodge it. He needed to get clear of the crashed pod as soon as possible, both because it would draw the Covenant to him, and because he wasn't sure that he would survive a second fall. There was a worrying creak as he tried the manual release on the door, finding that it was jammed shut. \n\nHe reached out and armed the explosive bolts that were spaced about the inside of his pod, initiating an emergency hatch release. There was a hiss of escaping air, and then the door blew away with a bang, the force of the ejection sending it careening away to land on the hood of a derelict police car on the road below. The Rookie fumbled for his SMG, finding it mercifully intact, and then peered down at the sheer drop beneath him. \n\nAs he had suspected, it seemed that the drop pod had ended up lodged into the side of one of New Mombasa's buildings, suspending him high in the air. It was a miracle that he wasn't painted all over the inside of his SOEIV, the chances are surviving a botched drop were slim to none. \n\nThe Rookie clutched his weapon in his hand, bracing himself for the jump. It was going to be rough, but there was no other way down... \n\nHe dropped from the wreck of his pod, the asphalt rushing up to meet him. He tried to roll when he impacted the ground, but it didn't do much good, a damage warning flashing on his helmet's HUD as he felt something give. The landing was hard, and he struggled to his feet, one of his legs almost buckling. Something felt...wrong, broken, or maybe sprained. \n\nFor the first time, he took a good look at his environment, turning his helmeted head as he took in his surroundings. He had landed on a city street, it was impossible to estimate precisely where, and it was completely deserted. It was unnerving in a way, to see a metropolitan area that should be bustling with traffic and pedestrians as quiet as a grave, as if its inhabitants had just up and vanished. \n\nNight had fallen, hours must have passed since the initial drop. The sky above him was overcast with dark, ominous clouds, the crack of distant thunder echoing. The empty streets were lit only by the eerie glow of the street lamps, the neon glare of electronic billboards, and the LED lights that helped drivers to make out road markings in the dark. He reached up and tapped at the side of his helmet, turning on VISR mode. The world around him took on a slightly brighter quality, his onboard computer outlining nearby objects in yellow, helping him navigate in the gloom. If he came across any friendlies, they would be outlined in green, while any enemies that the algorithm recognized would appear in red. \n\nHe could see plenty of cars, although their drivers were nowhere to be found. The vehicles had been abandoned, their doors left ajar, some of their engines still idling as if the occupants had fled them in a panic. There were police vehicles too, their flashing lights illuminating the area around them. Some of the cars were billowing plumes of dark smoke, and it looked as though the emergency barricades that rose from the street had been erected in some places, perhaps in a futile attempt to control panicked drivers or to impede the progress of the Covenant. \n\nHe stumbled along, keeping a careful eye out for signs of the enemy. As he made his way past the burnt-out wreckage of a bus, he wondered what had happened to its occupants. It was difficult to ascertain whether there had been fighting here or not. There were wrecked and abandoned vehicles everywhere, litter and debris all over the street, but he couldn't see any bodies or any telltale signs of a gunfight. The damage might well have been caused by the slip-space rupture. Even miles from the epicenter of the explosion, the blast wave would have ripped through the city streets like a tornado. \n\nThe Rookie winced as he put weight on his injured leg, the pain making him dizzy. He shuffled over to a nearby public bench, leaning on it as he caught his breath. Right now, he had more to worry about than the Covenant. First, he needed to find a health kit, or maybe a can of biofoam so that he could patch himself up. After that, he needed to figure out where the hell in New Mombasa he was, and where he needed to be. He wouldn't get anything done if he was wandering aimlessly with a busted leg, he needed to meet up with his squad. \n\nThere had to be a first-aid station around here somewhere, they were all over the place in most cities, self-serve kiosks that dispensed medkits. He limped along for a few minutes longer, taking in the devastation around him. Even if he couldn't determine whether there had been fighting in this area of the city, the smoke that rose into the cloudy sky, and the glow of fires on the horizon told him that not all areas of New Mombasa had been so lucky. There were pieces of jagged metal resting atop some of the buildings and blocking areas of the street. Could they be fragments from the orbital elevator? \n\n\"Need immediate medical assistance? Choose Optican!\" \n\nThe Rookie almost jumped out of his skin as the robotic voice blared, and he turned his head to see one of the kiosks that he had been searching for. He hobbled over to it, the company's logo flashing on the built-in monitors. There were two health kits in sockets on the front of the machine, and he snatched one, sitting down beside the kiosk as he opened the container and disgorged its contents onto the ground. He had expected to see a green canister of biofoam that resembled a grenade, a stitch kit, adhesive dressings, and a few doses of painkillers. Instead, there was only a transparent packet of what looked like green gel. He turned it over in his hands, reading off the label and the included instructions. It was MediGel, some kind of proprietary alternative to biofoam that was produced by the company that operated the kiosks. The instructions said that it had to be applied locally. \n\nThe Rookie removed his boot gingerly and detached his shinguard, rolling up the leg of his BDU to inspect the damage. His ankle was already red and swollen, even the gentle breeze that was blowing the dust and litter felt like a thousand tiny knives against the tender flesh. He tore open the packet and began to rub the gluey gel on the swelling, wincing as a jolt of pain shot through him. \n\nThe MediGel was already doing its work, however. It must include a local anesthetic because the skin was quickly going numb, and it was pleasantly cool. He applied more of it, leaning back against the wall and breathing a sigh of relief. There was no way for him to know if his ankle was broken, but he could still move his toes, and the gel was taking the edge off the pain. \n\nAfter waiting a few minutes for the painkiller to do its job, he put his gear back on and rose to his feet, noting that he could walk well enough. It didn't hurt too much anymore, the sharp pain had been replaced with a dull ache, and the swelling had already gone down considerably. He stashed the rest of the gel packet in his pocket and made his way out into the street. Time for step two... \n\nThere must be a terminal around here somewhere that would let him connect to the Superintendent, the dumb-AI that managed the city's infrastructure, and download a map of the area. With that, he could start figuring out where he was and how to find his way back to friendly lines. \n\nA flash of lightning illuminated the roiling clouds above him, followed by the far-off echo of thunder. As he looked up at the sky, droplets of rain began to fall, rolling down his visor. Great, just what he needed. \n\nThe Rookie set off along the street, dodging past traffic cones and bollards, his boots splashing in the growing puddles. The rain gave everything a shiny, slick quality, the bright neon of the city's lights reflecting off the wet asphalt. He hugged the overhang of a nearby building, staying undercover, seeing the world through shades of yellow as his VISR picked out the details of derelict vehicles and palm trees that had lost most of their fronds in the blast. He leaned into the windows of nearby cars and chanced a look through the open doors of the buildings that he passed, searching for bodies or survivors, and finding neither. It was looking more and more like there had been a moderately successful evacuation, which was his hope. \n\nA sudden splash of red gave him pause as he rounded a corner, and he took cover behind one of the ever-present planters, peering through the foliage of a shrub as the droplets of rain made its leaves bounce. His VISR was picking something up, and as he focused on the red outline, he recognized it. \n\nPerhaps a hundred feet down the road was a Covenant patrol, the aliens emerging from behind an abandoned semi-trailer. There were three squat Grunts waddling along at the front of the group, he could make out the triangular shape of the methane tanks that they carried on their backs, and they were tailed by a hulking Brute. \n\nThe creature was nine feet tall, resembling a cross between a rhinoceros and a gorilla, the blue power armor that it wore glinting beneath the streetlamps. Between the ornate armored plates, and the rubbery underclothes that it was wearing beneath them, he could make out its skin. Its hide was tough and leathery like that of an elephant, grey in color, the creature shaved almost clean save for a scruffy beard that reminded him of a goatee that protruded beneath its helmet. Its tusk-like teeth jutted from between its thick lips, its face contorted into a perpetual snarl. It was broad-shouldered, with long, powerful arms that held a wicked looking weapon that was adorned with bayonet-like blades. The Rookie recognized it as a Spiker, a carbine that fired super-heated, metal nails. \n\nAs he watched, the Brute gave one of the slower Grunts a kick in the back with its two-toed foot, sending its subordinate tumbling into a puddle. It huffed beneath its helmet, appearing to laugh at the creature's plight, gesturing and waving its bladed weapon as if giving it orders. The Grunt picked itself up and hurried along to join its fellows, dropping to a three-legged gait, using one of its arms to run as a chimp might as it clutched a plasma pistol in the other. \n\nThe Rookie ducked back into cover, checking the magazine on his SMG and thumbing the safety. He ensured that it was properly synced with his helmet's HUD, his loaded and reserve ammunition displayed down in the right corner. Facing off against Elites or Jackals was one thing, but Brutes were downright sadistic. If he engaged that thing and lost, it wouldn't give him a quick death, and it would probably make a meal of him once it was finished. \n\nThey were heading his way, he didn't stand much of a chance if he confronted them head-on, he was no Spartan. He had to be smart about this... \n\nThe SMG was equipped with a suppressor, as was his sidearm, and the rain should help to cover the sound of his footsteps. He didn't know how good Brute hearing was, but he'd have to find out the hard way. There was a fragmentation grenade on his belt too, but he'd have to be very careful how he used it, as there was no telling when he would be able to resupply. \n\nHe hopped up into the planter, the leaves rustling as he obscured himself inside the bush, where he lay in wait with his weapon at the ready. All that he could hear was his own labored breathing from inside his helmet, and he tried to calm himself, trusting his VISR to keep track of the aliens through the foliage. \n\nThe trio of four-foot tall Grunts hobbled past him in single-file as he watched, making their way back up the road in the direction that he had come. Their faces were obscured behind rebreathers, snaking tubes connecting the masks to the unwieldy tanks that they carried on their backs. Their exposed bodies were a blue-grey in color, their carapaces the same texture as a lobster's shell. Behind them lumbered the Brute, even more massive up close, its muscles rippling beneath its form-fitting suit. It was heavy enough that he could feel the vibrations of its footsteps through the concrete planter, its already superhuman strength further enhanced by the powered armor that it wore. It was equipped with a shield generator that could absorb a lot of damage, even before the assailant reached the inch-thick plating beneath it. \n\nThere was no reason to engage them if he could just let them pass him by, he wasn't about to save New Mombasa by taking out a single Covenant patrol. The Rookie controlled his breathing, keeping as still as a statue as they made their way around one of the abandoned police cruisers. \n\nOne of the Grunts stopped abruptly, raising its head and seeming to sniff the air like a dog. Its comrades did the same, pausing to sniff at the ground, their beady eyes scanning the gloom. The Brute growled at them, its voice low and gravelly, the smaller aliens responding with high-pitched voices that were filtered through their rebreathers. Could the little creatures smell him through their masks? \n\nThe three Grunts spread out, their noses to the ground like bloodhounds, the Brute watching them as he gripped his bladed weapon in his hands. The Rookie clutched the forward grip on his SMG, his mind racing. Should he stay still and try to hide, knowing that the Grunts might sniff him out, or should he use the element of surprise while he still had it? \n\nHis hand roamed down to his belt, his fingers brushing the metal of his grenade through his fingerless gloves. He slowly detached it, trying not to make a sound, even the rustling of leaves could give him away. He gently pulled the pin and then tossed it out of the bush. The grenade bounced on the wet asphalt, then rolled, arriving at the feet of the lead Brute. By the time the alien was looking down to see what had just rolled into it, the Rookie was diving for cover behind the concrete planter, the sound alerting the Grunts. \n\n\"Heretic!\" he heard one of them shout in its shrill voice. It was speaking English for his benefit, apparently. The Brute realized what had just happened, bellowing a guttural roar, which was drowned out by the deafening crack of the grenade exploding. Shrapnel tore through the air, digging deep into the concrete, shattering the windows of nearby cars and buildings. One of the Grunts was caught in the blast, the debris rupturing its tank. The methane ignited, sending the pressurized container flying off the creature's back, spiraling into the air on a plume of green gas before exploding like a firework. The two remaining Grunts were sent into a blind panic, screeching as they fled in random directions, green bolts of plasma reflecting in the puddles and lighting up the gloom as they fired their pistols randomly. ",
        "The Rookie took advantage of the chaos, leaning out from behind his planter and loosing a burst of muffled gunfire at one of them, the squat alien falling on its face as the caseless rounds tore through it. He couldn't see the second one, his VISR had lost track of it. \n\nThe Brute came back into view as the smoke cleared, and to the Rookie's horror, he saw that the beast was still standing. The grenade had collapsed its energy shield and had stripped away some of its armor plating, but the shrapnel hadn't penetrated deep enough to bring the thing down. It glared at him with its yellow eyes, its thick lips pulling back in a snarl to expose its tusk-like teeth, its brow and its stunted snout wrinkling like an angry wolf. \n\nIt loosed a bestial war cry that shook his bones, throwing aside its Spiker and charging towards him like an enraged animal. It had lost all reason, coming at him like a freight train made of leathery skin and muscle, hunched over as though it was preparing to tackle him like a nine-foot linebacker. He began to fall back, putting as many miscellaneous obstructions between him and the alien as possible, watching as it knocked aside cars and plowed through barricades like they were made of paper. The Rookie unloaded at it with his SMG, the rounds sparking against its damaged armor, the hail of bullets doing nothing to slow it down. \n\nHe emptied his magazine, fumbling as he tried to reload his weapon, the beast swiping an errant traffic cone aside with such force that it bounced off the second story of a nearby apartment complex like it was made of rubber. When he succeeded in slamming in a new mag, he once again turned the suppressed weapon on the alien, it was so close to him now that he could see the red sclera around its yellow pupils. \n\nAs it climbed over a wrecked car to get to him, the vehicle's chassis buckling under its weight, his rounds found their way through its armor. More of the damaged plating fell away, dark blood spraying. Even as he riddled its exposed chest with bullets, it kept coming, finally faltering as his second magazine ran empty. The Brute swayed drunkenly, then fell sideways, landing on the hood of the car and denting it inward. \n\nThe Rookie edged closer, reaching out and giving the limp creature a prod with his suppressor. It didn't react, its eyes were glassy, and blood was oozing from its nose and mouth. \n\n\"T-take this, heretic!\" \n\nA bolt of green plasma impacted the door of the car about an inch to his left, slagging the bodywork, the metal glowing as it sank inward. He spun around to see the remaining Grunt. It had clambered atop a nearby car, and it was aiming its weapon at him, the pistol flashing as it sent another shot wide. The Rookie let his SMG fall to hang from its sling and drew his sidearm, putting two rounds through its rebreather. The Grunt slumped over and tumbled to the road below, wheezing as it exhaled its last breath of methane. \n\nHe stowed his pistol, breathing hard inside his helmet, taking a moment to calm his racing heart. That had been close, too close, and now he was down a grenade and two SMG mags. That grenade blast would have echoed through the streets, alerting any nearby patrols to his presence. He had to get out of here quickly, before they came to investigate. \n\nHe reached across the sagging hood of the car, checking the Brute's limp body for gear, and found a Covenant plasma grenade that he stowed on his belt. He made his way back over to where his frag grenade had detonated, noting the jagged shrapnel that had pocked the nearby vehicles, stooping to retrieve the Brute's discarded Spiker. It was far heavier than it looked, it felt like a solid lump of lead. The Rookie had to wield it with two hands, despite the Brute being strong enough to aim it like a handgun, and he turned it over as he examined it. He had expended a lot of ammunition, and it was better than letting his SMG run dry if he found himself in another fight. \n\nThe Rookie stowed the weapon on his back and set off again in search of an uplink to the Superintendent. \n\nAlba - Occupied city center, seven hours after slip-space rupture. \n\nThe rain was coming down hard, pouring off Alba's armor in sheets, seeping beneath her helmet and making her short-cropped hair damp. It wasn't doing much to lighten her already sour mood. They had been patrolling until sunset, and there had been no sign of Human resistance. The streets were empty, and the defenders were long gone. The Unggoy were pleased, but the Kig-yar were becoming even more restless than she was. They were bloodthirsty creatures, spoiling for the hunt, eager to sink their claws into whatever hapless native might cross their path. \n\nShe had been able to link up with a couple of other patrols, it seemed that there was still a substantial Covenant presence in the city. What's more, after the High Prophet of Regret had withdrawn aboard the Solemn Penance, the High Prophet of Truth had dispatched a large fleet to reinforce them, engaging the Humans in orbit and deploying more troops to the ground. That, at least, was some good news. The Prophet of Truth was a friend to the Jiralhanae, and his fleet was crewed primarily by her kin. \n\nShe glanced up as the whine of a Phantom's engines drew her attention, watching as the craft floated over the city, the bright beam of its searchlight aimed at the ground as it scanned the ruins for the enemy. The fleet was up there somewhere, probably tearing into the defenders in orbit, but she couldn't see them from the ground. \n\nA crackling in her earpiece distracted her, and she paused, listening as the gravelly voice of a Jiralhanae Chieftain came through on her communicator. \n\n\"This is the Shipmaster of the Sacred Fury, calling all Jiralhanae forces. Rejoice, for today is a day that will go down in our people's history. With the blessing of the High Prophet of Truth, we have been made the sole protectors of the Covenant. The Sangheili are disgraced, ex-communicated by order of the Prophets. We have slaughtered them aboard their ships and taken control, our hour has finally arrived. Kill those that you find on the ground, show them no mercy, their reckoning is at hand.\" \n\nShe turned to see the Kig-yar and the Unggoy staring at her expectantly, the Jackals watching her like hawks from their high perches as a flash of lightning illuminated the roiling clouds above. \n\n\"What is it, Captain?\" one of them asked as he clicked his jaws impatiently. \"Do we have new orders from the fleet?\" \n\n\"We do,\" she replied, still trying to get her head around what she had just been told. \"The...Sangheili have been declared...traitors. Our new orders are to kill any that we encounter. It is the will of the Prophets.\" \n\n\"The High Prophets wish that we should...slay the Sangheili?\" the Kig-yar repeated in disbelief. \"There has been no mistake?\" \n\n\"Those are our orders,\" she replied solemnly. \n\nWhy were the Prophets decreeing that the Sangheili be slain? She had fought alongside them in battle, and while the Sangheili and the Jiralhanae had always had an antagonistic relationship, she could think of no one less likely to betray the Covenant than the Elites. They were zealous and honorable, they would never go back on their sworn oaths. It was the Writ of Union, the battle-cry of the Sangheili. On the blood of our fathers, on the blood of our sons. They alone had shown her respect when no Jiralhanae would, they alone had treated her as their equal in combat, affording her a dignity that she was unaccustomed to. \n\n\"Fight t-the Elites?\" one of the Unggoy stammered, trembling where he stood. \"As if the Demons and the Imps weren't bad enough, now they want us to fight the Elites!?\" \n\nThe Unggoy were almost in hysterics, but the Kig-yar seemed to find the situation amusing. They chattered to one another in their native dialect of hisses and shrieks, seemingly energized by the news. They didn't care who they were fighting, and they were no great believers in the faith, they cared only that their pockets were full and that their magazines were empty. \n\n\"Perhaps you will eat of Sangheili meat before the day is through, Captain,\" one of the Jackals laughed. His comrades joined in, whistling and barking as they continued on their way. Many of her kin devoured the flesh of their fallen foes, a practice that Alba had always found distasteful. \n\nThe comment brought her back to a scene that she had witnessed while serving alongside the Sangheili during the invasion of a Human colony planet. The fleet had crippled the orbital defenses in less than an hour, and then she had been deployed to the surface as part of the invasion force to secure sacred artifacts before the glassing could begin. On the ground, the Humans had fought like demons, delaying the Covenant advance for days. They had eventually quelled the resistance, but it had been a hard-fought victory. \n\nThe Elites had held a ceremony after the battle had been won to honor their dead, saying prayers for their fallen comrades, and showing respect for the defenders. The Sangheili had a weakness for the Humans that some in the Covenant found inappropriate, they admired their bravery and praised the way that the aliens would continue to fight even when their cause was futile. While the Sangheili had been praying, her fellow Jiralhanae had been eating their fill... \n\nThe Rookie - Occupied city center, eight hours after drop. \n\nThe crack of thunder echoed through the empty streets as the Rookie pressed on, dodging beneath the cover of a bus stop for a moment as a Phantom passed by overhead, its searchlight scanning the ground below for signs of life. There were more and more of the ships clogging the skies, perhaps more of the Covenant fleet had jumped into orbit to reinforce their armies. He needed to get out of here, and fast. He hadn't encountered any more patrols yet, but it was only a matter of time. \n\nAs he entered the foyer of a public building, his sidearm drawn, he finally found what he was looking for. There was a public data terminal mounted on the wall, shaped vaguely like a payphone. It would allow the user to access information such as bus schedules, emergency services, and maps of the city. He activated it, relieved to see that it was still functional, and apparently still connected to the municipal intranet. \n\nThe city was managed by a dumb-AI known as the Superintendent. It was responsible for keeping the trains running on time, making sure that there were no traffic jams, plotting garbage collection routes, that kind of thing. After the slip-space rupture, he wasn't even sure if it was still online, but he needed access to it if he was going to lower the blast doors that were blocking his path. He had come across a few of them while exploring, massive, reinforced doors that blocked off entire streets. The AI must have activated them to box in the Covenant, or perhaps to cover the evacuation. Unfortunately, the Rookie was on the wrong side of them. \n\nAn icon flashed on the screen, and suddenly, he had a wireless connection. His onboard systems interfaced with the terminal, and data began to stream. Access codes, evacuation routes, a map of New Mombasa. Everything that he needed was here. In moments, he had a complete database, and he pulled up a three-dimensional map of the city on his visor. It was like a maze, winding streets and plazas creating a complex, interlocking web. That was to say nothing of the underground metro lines, and the above-ground walkways that weren't shown here. \n\nHe needed to either join up with his squad, if they were even alive, or he needed to exfiltrate. He wouldn't last long if he remained in the city center while the build-up of Covenant troops continued. There was no GPS connection, the satellites might have been victims of the invasion fleet, but he plotted a course through the city all the same. He had to hope that there weren't too many obstructions that didn't appear on the map. \n\nThe Rookie returned to the street, hearing the rain pattering on his helmet. It had been hours, and the storm still hadn't let up. Fortunately, his BDU was rated for vacuum, and so there was no chance of him getting wet. \n\nHe darted back inside the cover of the building as a Phantom made a low pass overhead, blocking the rain for a moment as it hovered directly above him, the bright circle that its searchlight cast on the wet street very nearly catching him. Perhaps it would be wiser to avoid open ground, for the time being. He should try to make his way along the route that he had plotted through the buildings where possible. He turned, and headed inside, pausing to check his map for a moment. He could make his way through this structure, cross a walkway on the third floor, and then proceed towards the nearest blast door that he needed to open. \n\n*** \n\nThe Rookie explored the hallways of the abandoned building as he made his way towards his destination, using the flashlight that was mounted on his SMG in addition to his VISR. It was extremely dark inside, very few lights were turned on. He saw a few flickering monitors through open doorways that led into apartments and offices, but that was about it. \n\nThere had been little evidence of fighting between the Covenant and the UNSC in the street, but the more he explored, the more evidence of something far stranger began to emerge. There was what could only be described as Covenant graffiti drawn on the walls in many places, glowing eerily when viewed through his VISR, like fluorescent paint beneath a blacklight. There were messages left by the evacuees too, taunts for the invaders, or instructions that had been scrawled in marker in the faint hope that it might help reconnect lost family members. \n\nIt was as he had suspected, the civilians had left in a hurry. He passed by one apartment where there was still dinner laid out on a dining table, the television flickering with static. People must have grabbed whatever essentials that they needed, and hauled ass before the worst of the fighting reached them. \n\nThe Rookie crossed a sky bridge into an adjacent building, New Mombasa was remarkably navigable without even having to touch the ground, and he came upon the strangest sight yet. Something very odd had gone down in this corridor. He was up on the third floor of an upscale office complex, a drab carpet lining the floor, office cubicles and computer terminals visible through automatic doors that were stuck open due to a lack of power. \n\nThere was dried blood staining the carpet, not Human. It glowed through his VISR, splashed on the walls, and even on the ceiling. There were plasma burns too, and spikes from Brute weapons embedded in the dividers between the cubicles, along with little circular objects that he recognized as spent magazines from Covenant carbines. \n\nAs he explored deeper, his flashlight beam waving between the cubicles, he came across the source of the blood. There was a dead Grunt here. He knelt beside it, checking the body. It was cold, it had been dead for some time, but what had killed it? There were no bullet holes in its carapace, it hadn't been bludgeoned. The only evidence that he could find was a curious, two-pronged burn mark in its chest... \n\nA plasma sword. \n\nHe rose to his feet, his mouth dry and his heart quickening as he scanned the cubicles around him for movement. Plasma swords meant Elites, and Elites were bad news. He wouldn't be able to take one down as easily as he had the Brute, and that fight had been close enough. Elites were the shock troops of the Covenant army, seven-foot-tall reptilians that were as fast as they were powerful. Unlike the Brutes, they were master tacticians, able to outwit as well as out-fight. For all he knew, he could be surrounded right now, the aliens using cloaking devices to remain hidden while they prepared to skewer him. \n\nBut why had a Grunt been killed with an Elite weapon? Had a human somehow stolen it from its original owner? That seemed unlikely. \n\nHe pressed on, and as he rounded a corner, he got his answer. Lying in a heap at the end of a corridor was a pile of bodies. The Rookie recognized the telltale design of their armor and the strange, finger-like mandibles that they had instead of jaws. They were Elites. He edged closer, stepping over another dead Grunt, and avoiding the hulking mass of a felled Brute. There had been a firefight here, the Elites had been cornered and killed. Their armor was charred by plasma rounds, perforated by metal spikes, and stuck with pink needles. It looked like an execution to him, like they had been corralled here, and then gunned down. The wall to their rear was splattered with blood and charred by plasma. Covenant were fighting Covenant, that much was obvious, but why? \n\nHe wouldn't find out by waiting around for the Covvies to stumble across him, he needed to keep moving. This couldn't have happened very long ago, the perpetrators could still be in the immediate area. The Rookie discarded the unwieldy Spiker that he had retrieved after his encounter with the patrol, exchanging it for an Elite's plasma rifle. The weapon was much lighter and more ergonomic, a vaguely horseshoe-shaped firearm that was made from shiny polymer, and which fired a stream of super-heated plasma. He checked that the battery had a charge, then stowed it on his belt, making his way to the nearby stairwell. \n\nAlba - Occupied city center, eight hours after slip-space rupture. \n\nThe Kig-yar snapped their jaws gleefully as the patrol emerged onto an open plaza, surrounded on all sides by native buildings wrought from glass and steel. There were fewer derelict vehicles here, it seemed to be reserved for pedestrians, and the ground was covered with regular patches of alien grass in places. The center of the open space was occupied by a group of Covenant and a deployable watchtower, there was enough room here for the Phantoms to land so that they could deliver gear and supplies. Beams of energy suspended the circular platform in the air, the Kig-yar snipers that were perched on top of it peering down at the newcomers with their large eyes, an Unggoy manning a mounted plasma cannon beside them. There were weapons crates stacked at its base, some of them open to expose the racks of carbines and plasma rifles within. It looked as though they had fashioned a kind of makeshift forward operating base here. \n\nWhat had the Jackals so excited was not the presence of friendly troops, but the pile of dead Sangheili that occupied one corner of the plaza. There were maybe a dozen Brutes and twice as many auxiliaries, and they had clearly been hard at work. Alba hadn't even come across a single Human yet, had the Covenant traveled all the way to this remote planet for the sole purpose of killing one another? \n\nAlba and her procession of aliens were greeted by a Captain Major, a Jiralhanae wearing golden armor, and wielding a grenade launcher with a wicked bayonet on one end. His demeanor changed when he realized that she was female, seeming more amused by her presence than anything. \n\n\"Report,\" he said gruffly. He outranked her, and so it would be wise to obey. \n\n\"No contacts along our route,\" she replied, \"no sign of any Humans.\" \n\n\"The Heretics are lying low,\" he huffed in reply, shifting his considerable weight from foot to foot as he readjusted his weapon. \"At least the Sangheili are making for better sport.\" \n\nThe Kig-yar laughed at his comment, Alba looking past him, appraising the corpse pile as the aliens jeered. There were at least a dozen dead, maybe more. She couldn't help but think that the Sangheili had exacted a similar price on the opposing side, but those bodies had probably been left where they had dropped. These were trophies, proof of the Major's accomplishments to his Chieftain. ",
        "\"Have we received any new orders from the fleet?\" Alba asked. \n\n\"We are to push deeper into the city, there are still pockets of Human resistance remaining. These cursed barriers are impeding the progress of our patrols,\" he grumbled as he gestured to a nearby blast door that had closed over the street, crushing one of the colorful vehicles between its interlocking jaws. \"They are too thick to burn through, not without a Scarab, at least. We are using the Phantoms to hop between these large plazas.\" \n\n\"There are still Humans who remain?\" she repeated. \n\n\"Hungry, perhaps?\" he chuckled in his gravelly baritone, glancing over his shoulder at the pile of bodies. \"I waited a long time to taste Sangheili, and I must admit, it did not live up to my expectations. It's tough, chewy. Now, Human, that's a tender meat that pulls right off the bone...\" \n\n\"What is our new patrol route?\" Alba asked, ignoring his comment. \n\n\"Eager to do the will of the Prophets?\" he chuckled, \"if only my mate back on Doisac were so obedient.\" \n\nAlba tried not to visibly snarl at him as he checked in with the assault carrier, a few of the other Brutes who were sitting on the ground nearby turning their heads in her direction, perhaps picking up her scent. She could certainly smell their musk. \n\n\"Your patrol is ordered to board the next Phantom, it will drop you off in the next plaza over,\" he said as he gestured in the general direction. \"Scout the area for Humans, and call in backup if you come across any Sangheili, little sister. They are formidable, despite their small stature. Do not underestimate them.\" \n\n\"I can handle myself,\" she replied gruffly. \n\n\"I'm sure you can,\" he replied, looking her up and down conspicuously. \"Rearm if you need to, then await the incoming dropship. Eat, if you wish, but the meat is starting to spoil.\" \n\nShe made her way to a quiet corner of the plaza, the Unggoy tailing behind her, where she sat with the intent to catch some sleep before her Phantom arrived. She sat cross-legged, her carbine resting in her lap, the Kig-yar wandering off to join their fellows on the watchtower as the Unggoy settled in beside her. One of them picked up a rock and began to play with it idly, the others sitting with their heads bowed as they rested. \n\nAlmost as soon as she had closed her eyes, the musk of a pack of males roused her, and she opened them to see a trio of Jiralhanae lumbering over to her. She sighed in exasperation, knowing what was coming next, preparing herself mentally for their clumsy advances. \n\nThe one at the head of the pack was clearly the ringleader. He was a Jiralhanae Minor, identifiable by the color and the design of his armor. He was lower ranked than she was, a member of a larger squad that would be led by a more senior warrior, perhaps the Major that she had met earlier. He had the musk of a male who was just coming out of adolescence, not yet mature enough to control his pheromones, his roiling hormones imbuing him with the brashness that would let him approach a superior in this way. \n\nHis shadow loomed over her, and she looked up to see him peering down at her from beneath his helmet, his unshaven fur protruding between the joints in his power armor. \n\n\"A female serving in the military is a rare sight indeed,\" he began, crossing his massive arms across his chest piece. \"Come, celebrate with us. The age of the Brutes begins tonight, we shall be the escorts of the Prophets as they tread the path of the Great Journey. We have finally put the filthy Sangheili in their place, I slew a number of them myself,\" he added in an obvious attempt to impress her. \"We have meat to share, none too fresh, but the company of such a...fecund female would satisfy more than a growling stomach.\" \n\nHis two companions huffed with amusement at that, and he exposed his tusk-like teeth in a grin. Alba had suffered this kind of crude proposition before, it was commonplace while serving on a carrier where there might only be a handful of females, leaving the males frustrated for months on end. She had learned to restrain her anger, as some of those who approached her were sometimes her commanding officers, not above trying to leverage their status to get some time alone with her. \n\n\"I must decline,\" she replied through gritted teeth, \"I have but a short while to rest before my next deployment.\" \n\nShe waited to see whether he would accept her reply, or try to press the issue, rolling her eyes when he didn't turn about. The young male had been so sure of himself that he almost seemed offended by her rejection. \n\n\"We won't keep you occupied for too long,\" he complained. \n\n\"I'm sure that you wouldn't,\" she replied sarcastically, his brow furrowing. He began to snarl, the stink that he put off growing stronger as he geared up for a fight, and Alba gestured to her helmet. \"Now leave me be, that's an order, Minor. Or perhaps you'd like me to call over your Captain Major so that he might correct your insubordination?\" \n\nThe rowdy male seemed to get the picture, snapping his jaws as he turned about, walking back in the direction that he had come in a far less agreeable mood than he had arrived. \n\n*** \n\nThe Phantom skimmed the spires of the native buildings, its searchlight scanning the streets below, the ventral doors open so that Alba could appreciate the view this time. The endless downpour of rain had not managed to quell the fires that were still raging inside the city, there were dark plumes of smoke rising to join the ominous clouds everywhere that she looked, their red glow illuminating the facades of the alien structures around them like giant bonfires. They seemed to stoke the storm, the rumbling thunder audible even over the noise of the engines. \n\nThe fighting had intensified, every so often she would see plasma or tracer fire rise up in the distance, painting glowing trails in the darkness. Covenant Phantoms and Banshees dominated the skies, but they were not unchallenged. More than once, she saw the flash of human craft breaching the cloud layer above, delivering reinforcements to the surface. This planet was more heavily defended than any that she had seen before, how was it possible that the Humans still had access to space? \n\nThere were two door guns on her Phantom, plasma cannons manned by a pair of Jiralhanae, ready to provide ground support should they encounter any resistance while landing. She shared the dropship with another patrol this time, a fellow Brute who was leading a similar squad of Kig-yar and Unggoy. The larger pack that had been led by the Captain Major had remained behind, possibly because they had been ordered to keep the area secure so that it could be used as a staging point for future operations.  \n\nShe gripped a handhold in the ceiling as the dropship banked, their landing site coming into view. It was another large, open plaza, this one occupied by odd stone structures that might be monoliths or memorials of some kind. There were four of them set up in a square configuration, planted in green grass, raised off the ground slightly such that steps were needed to reach them. It might be some kind of Human holy site, perhaps the natives worshiped their heathen Gods here, or it might be purely decorative. It was so hard to tell. \n\nThe ship came to a hover maybe ten feet off the ground, and everyone dismounted, dropping down amidst the alien monuments. Alba took cover behind one of the stout rocks, her troops scattering to take up defensive positions, the Phantom hovering for a minute longer to provide them with cover. When he saw that the coast was clear, the pilot rose into the sky, off to his next assignment. \n\nThe two patrols split up, Alba heading down a street that led away from the plaza to the East, and the other going West. Her Kig-yar took up their usual positions, flanking her to the left and right as they clambered up onto overhanging balconies in search of vantage points, and mounted the metal poles that lit the street below. The Unggoy trailed behind her, dropping to all fours every so often as they struggled to keep up with her longer strides. \n\nHer orders were to seek out Sangheili as well as Humans, but she had no intention of doing so. Whatever turmoil was currently devouring the Covenant from within, she wanted no part in it. She had never been much of a believer in the faith, and the Prophets were not as noble, nor as infallible as they made themselves out to be. The Prophet of Regret leaving in the way that he had smacked of cowardice to her, of panic. Then there was the Prophet of Truth labeling the Sangheili heretics and traitors, calling for their genocide. There was nothing divine about it, it was a purely political move by the scheming San'Shyuum. If the Prophets would abandon their loyal troops, and betray their staunchest supporters, then how could they be trusted? Honor, loyalty, service. These concepts clearly meant nothing to them. \n\nNo, Alba would not obey this decree. In the spirit of the Unggoy, she would waste time, and avoid the worst of the fighting. Hopefully, things would have died down by the time she returned to the carrier. But what then? There was no guarantee that the Jiralhanae would not be discarded once they had outlived their usefulness, just as their Sangheili counterparts had, and it might be Alba who was killed by her own assault carrier's slip-space rupture next time a Shipmaster lost their nerve. \n\n\"We should search the interiors of some of the buildings,\" she said, \"make sure that there are no Humans hiding out inside.\" \n\n\"Would we not stand a better chance of meeting the heretics in the street?\" one of her Kig-yar asked. \n\n\"Perhaps,\" she replied, \"but I want to be thorough. Do as you wish with those that we find.\" \n\nThe Jackals yapped excitedly at that, no doubt imagining huddling, defenseless prey. In reality, she doubted very much that there was anyone left in the Human dwellings, all signs pointed to them having evacuated long before they had arrived. Either way, it gave the Kig-yar something to occupy themselves with. \n\nThe Rookie - Tayari Plaza, nine hours after drop. \n\nThe Rookie crept through an automatic door and emerged into what looked like a courtyard, surrounded on all sides by buildings, a garden area with trees and grass occupying the center. The sky above was still overcast, the rain coming down heavy, a vaguely blue glow still lingering in the air from the slip-space event. That was ionizing radiation, he'd need to get his damned chromosomes scrubbed clean after this was all over if he didn't want to contract ten different varieties of cancer. \n\nHe was following the route that he had plotted to exfil, but there was something else. The Superintendent had placed a beacon on his map, the last known location of one of his squadmates. Why the AI was helping him, and what capabilities it even had were unclear, but he would take any help that he could get at this point. The waypoint was some distance ahead, near an area named Tayari Plaza. \n\nHe made his way through another foyer and out onto the street, seeing the plaza before him. It was recessed into the ground, overlooked by balconies and walkways, four stone monuments arranged on the grass in the center of the space. After searching for a moment, he noticed that the beacon wasn't coming from the plaza, but from a building just across the street. It was up on one of the higher floors. \n\nThere were no Covenant in sight, and so he took a minute to rest, sitting on a public bench that overlooked the plaza and tending to his swollen ankle. The anesthetic from the MediGel was starting to wear off, and his limp was returning. Fortunately, he had thought to bring more. He removed his boot, and then retrieved the packet from his pocket, rubbing some more of the soothing substance on the swelling. After giving it a moment to do its work, he put his boot back on and stood up, testing his leg by putting some weight on it gingerly. It seemed good to go, at least for the time being. \n\nThe sound of his boots splashing in puddles echoed through the deserted street as he crossed the road, on his way to the ominous building that loomed in front of him. He weaved between abandoned cars, his SMG shouldered. The readout on his HUD showed that he had one magazine left, and while it might be more prudent to ready the plasma rifle that he had recovered, the SMG at least was suppressed. He didn't want to draw any more attention to himself than necessary. \n\nHis thoughts were popped like a bubble as a crystalline, pink spike the size of a knitting needle embedded itself in the chassis of a nearby car with a dull thud. It passed so close to his head that he heard it whistle, missing him by less than an inch. Its pink glow slowly faded as he dove into cover, a trio of follow-up shots shattering the glass of a car door where he had just been standing. \n\nNot knowing where the fire was coming from, he huddled behind one of the cars, peeking out and praying that his VISR would pick out enemies that he couldn't see with the naked eye through the gloom and the rain. \n\nThere, in an open window on the third floor, the red outline of a Jackal sniper. If it had been wielding a beam rifle rather than a needle rifle, the Rookie's brains would be cooking inside his skull right now. He popped out of cover above the hood of a car and returned fire with a burst from his SMG, debris spraying around the window frame as the bullets dug into the concrete. He hadn't intended to hit the alien, not at this distance, only to force it into cover. Where there was one Jackal, there would be more. \n\nHe took the opportunity to examine his surroundings more closely, searching both for more hostiles and for anything that might provide him with better cover. To his dismay, besides for the wrecked cars that clogged the street, there was nothing within reach. The Jackals had prepared their kill zone well, if he tried to run for the cover of the buildings, he'd be gunned down in the open. \n\nAnother volley of needles embedded themselves in the other side of the car that he was hiding behind, he could hear the report of more than one rifle firing at him. His VISR spied movement, and he saw a red blob leap up onto a traffic light to his right, aiming its rifle in his direction. It was perched on the metal pole like a giant parrot, the pink glow of the needles that protruded from the weapon's ammo compartment illuminating its reptilian face. \n\nInstinct kicked in, he needed to act fast, and he wasn't going to get anything done by hanging around and letting them close the jaws of the trap that they had set for him. He stayed low, keeping the cars between him and the building, running in a hunched position as though he was navigating a trench. Fortunately, the vehicles were completely gridlocked, stacked bumper to bumper to provide him with enough cover to move. He couldn't cross the open areas between him and the buildings to either side of the street, but he could make his way along the road. He rushed in the direction of the traffic light, the alien in the window popping off more shots. The one on the traffic light fired too, as did more unseen assailants, pink needles whizzing through the air. They impacted alarmingly close, the dull thunk sound of them penetrating the metal making his heart skip. \n\nHe had one advantage over the aliens, his helmet was equipped with the VISR, and they had to rely on their eyes. As good as their vision might be, it was pouring with rain, and it was an overcast night. The harsh shadows cast by the working street lamps and the electronic billboards hindered visibility more than they helped it, the flashing logos and scrolling text purposefully distracting. Without his helmet, the Rookie would scarcely have been able to see ten feet in any direction. \n\nHe felt something hit his shoulder, a stab of sharp pain flaring, but he ignored it as he moved into position. He dove behind an abandoned van, leaning around it to get a bead on the Jackal that was sitting atop the traffic light, his HUD providing a targeting reticle on his visor. He aimed carefully, the smart-linked scope allowing him to zoom in on his target, loosing a well-placed burst of gunfire that caught the alien in its chest. \n\nIt crumpled, dropping from the light like a lead weight, falling to the roof of a car below where it lay still. The Rookie wasted no time, making for the pink glow, sliding into cover as another barrage of needles missed him by a hair's breadth. He snatched the Jackal's rifle, casting his near-empty SMG aside, looking it over briefly. \n\nIt was a long, streamlined weapon, the metal barrel protruding from a purple housing that was made from some kind of shiny polymer. Crystalline needles protruded from the receiver, glowing as though they were radioactive, and there was a two-times magnification scope mounted on the top. This was a Type-31, ODSTs were familiar with Covenant armaments and their operation. \n\nThere was no smart-link on this weapon, and so he had to rely on the built-in scope, resting the rifle atop the hood of a car as he aimed it at the window from which one of the Jackals had been harassing him. It would have been hard to see through the sheets of rain under normal circumstances, but his VISR highlighted the Jackal's outline in red, allowing him to put a needle the length a railroad spike straight through its head. \n\nThe creature dropped out of view, and then the Rookie was forced to duck back into cover to avoid a hail of return fire. He counted two more rifles, but that wasn't his only problem right now. From the door of the same building emerged a trio of Grunts, he could just make out the triangle-shaped points of their methane tanks rising above the traffic jam, outlined in red. They were pushing him, trying to flush him out of cover so that the snipers could finish the job. They clambered over the cars to reach him, the green glow of their plasma pistols reflecting off the wet bodywork, pointing and jeering as they made their way towards him. \n\nWithout even thinking, he reached down to his belt, priming the plasma grenade that he had taken from the dead Brute. He tossed it like he was pitching a softball, watching as it stuck to one of the aliens like glue, the creature beginning to screech and wave its arms in the air as the explosive lit up in a brilliant shade of blue. Its comrades fled, throwing themselves between the cars as they sought cover, the unfortunate creature erupting into a fiery explosion. An expanding ball of white-hot plasma incinerated the Grunt and slagged the car that it had been standing on, the methane in its pack igniting, creating a secondary blast that shattered the windows of the nearby vehicles and sent shrapnel hurtling through the air. \n\nThe Rookie took advantage of the chaos to scope in on another Jackal, this one firing from a balcony on an upper floor, given away by the VISR. His shot went a little wide this time, hitting the thing in the shoulder, and he heard it trill in an oddly bird-like voice as it leapt out of view. He couldn't be sure that it was dead, but it wouldn't be returning fire. \n\nThe needle rifle didn't have much ammo left, and so he ditched it, reaching for the Elite plasma rifle that he had picked up at the scene of the execution. He slid across the hood of the car that he had been using as cover, dodging and weaving as he made for the building on the far side of the street. He had no idea where the last shooter was, but if he stayed in one place and tried to hunker down, the remaining Grunts would corner him. \n\nAs if on cue, a masked face appeared from behind a derelict vehicle in front of him, a ball of green plasma shooting from its pistol. The bolt hit the Rookie right in the chest, it was an admirable shot for a Grunt, but it stood little chance of getting through his armor. It splashed against his chest piece, leaving a dark smear as it singed the protective coating, but it didn't have the power to penetrate. ",
        "He returned fire with his plasma rifle, a stream of blue projectiles spraying from the conductive rails in an almost unbroken line, felling the Grunt as they burned through its suit. They melted the metal of the vehicle behind it, leaving glowing holes in the chassis, sending flecks of molten metal spraying like sparks. \n\nThe last remaining Grunt turned to flee in a panic, and he hosed it with plasma, the weapon overheating in his hands as two cooling vents to either side of the receiver opened up with a hiss. The rifle became almost too hot to hold for a few moments, and he let the excess heat dissipate as he moved towards the door to the building. \n\nThere was at least one Jackal still in fighting condition, and the Rookie suspected that a more senior alien was likely commanding their squad. Could be a Brute, could be an Elite, there was no way to know for sure. Whatever it was, it was probably inside the building, that was where they had attacked from. He eyed the dark hallway beyond the open door warily. The last thing that he wanted was to take on one of the more dangerous Covenant species in such close quarters, but he had little choice. If he let them live, they would certainly call in backup, assuming that they hadn't already done so. Besides, one of his squadmates had been here, and he had to follow up on that lead. They might be injured, or just as lost as he was. \n\nNow that he had a moment to breathe, he noticed the needle that was embedded deep in his shoulder. He had been so high on adrenaline, so focused on the battle that he hadn't even noticed it. The pain seemed to come flooding back all at once, as though his awareness of it had brought it into being, and he lowered his weapon for a moment as he took the needle in his hand. Fortunately, it hadn't exploded into jagged shards as the projectiles sometimes did, but it had punched right through his BDU and had embedded itself a good inch into his flesh. He tugged at it, trying to stifle a cry of pain and failing, agony blurring his vision. He took a tighter grip, then gave it another tug, succeeding it dislodging it. It fell to the sidewalk with the delicate tinkle of shattering glass, breaking into a million tiny fragments. He wanted to apply some of the MediGel to the wound, but there was no time right now. \n\nHe braced himself, then entered the building. \n\nAlba - Tayari Plaza, nine hours after slip-space rupture. \n\nAlba heard the shot while she was searching one of the cramped rooms in the Human structure, the telltale sound of a needle rifle echoing through the corridors. She rushed to the source of the gunshot as more followed it, her carbine at the ready. When she pushed her way through one of the narrow doorways, she found one of the Kig-yar firing out of a window that overlooked the street below, his fellow Jackals rushing to get into position. One of them leapt out of a nearby window, making his way down to the street below, another perching on a balcony as he fired into the vehicles that clogged the road. \n\n\"What's happening?\" Alba demanded, not making any attempt to hide her displeasure. The damned Jackals were so bloodthirsty, they never stopped to think about what they were doing. \n\n\"Human below,\" the alien replied, keeping his scope on his target. The weapon kicked back against his shoulder as he popped off a couple more rounds, the barrel of his rifle flashing with pink residue. \n\n\"So you took the first shot, and missed?\" she snarled. \"If you had alerted me, we could all have fired on it at once. Use your tiny bird brain next time you want to bag yourself a prize. How many?\" \n\n\"One in sight,\" the Kig-yar replied, \"an Imp.\" \n\n\"An Imp?\" Alba repeated, her brow furrowing. \"What were you thinking? Imps are shock troopers, they work in packs. Where there is one, there will be more. Keep the pressure on it, make sure it doesn't escape. It may have already called in its packmates.\" \n\nShe heard the patter of feet behind her, turning to see the trio of Unggoy waiting nervously in the doorway. \n\n\"Captain?\" one of them asked, \"what's happening?\" \n\n\"Head down to the street below and drive the Imp from cover,\" she replied with a commanding wave of her hand. \n\n\"A-an Imp!?\" one of them exclaimed in its shrill voice. \n\n\"Yes, an Imp. Flush it out into the open, do not delay!\" \n\nThe squat aliens exchanged alarmed glances, but they did as she asked, hurrying towards the stairwell that led down to the entrance. Damn those Jackals, they should have coordinated with their team. Imps were not the lightly armored, inexperienced soldiers that made up the bulk of the Human forces. They were second only to the dreaded Demons, equipped with advanced armor and equipment. More than that, they were hardened soldiers, easily a match for lower-ranked Jiralhanae and Sangheili in a firefight. \n\nShe was distracted by the muffled chatter of a Human weapon, the Kig-yar at the window snarling. \n\n\"It killed one of ours,\" he muttered, snapping his jaws as he loosed more shots. \n\n\"Where is it now?\" Alba demanded. She didn't want to get close to the windows, she had seen what the large-caliber rifles that the Humans wielded could do, they punched through shields and armor alike with the ease of a bayonet through a ripe fruit. \n\n\"I can't see it anymore,\" the Jackal replied, \"it moved to the far end of the-\" \n\nHis head snapped back as a pink needle embedded itself deep into his skull, the Kig-yar swaying for a moment, dead before his body had even hit the ground. The Imp had recovered the needle rifle from the felled Kig-yar that had moved down to the street, they were resourceful little bastards. The Sangheili wouldn't even touch a Human weapon, as if they were worried that the heresy might somehow rub off on them, but she had seen Humans pick up everything from plasma pistols to fuel rod cannons. \n\nThere was another crack, and then the Kig-yar that had made his way out onto the balcony came rushing back inside, throwing himself through the open door and onto the carpeted floor. There was a pink needle jutting from his shoulder, protruding from his back where it had passed most of the way through his body and then gotten stuck. The alien squealed, purple blood oozing from the wound, his hand hovering over the projectile as if he was afraid to touch it. \n\n\"Pull it out before it pops!\" Alba bellowed, but it was too late. The needle glowed in a brilliant rose hue, and then exploded, sending razor-sharp shards of shattered crystal tearing through the Kig-yar's flesh. He slumped to the ground, a wisp of smoke rising from the torn meat of his shoulder, now a crater the size of Alba's fist. \n\nShe cursed in her native tongue, had she really just lost three Kig-yar to a single Imp? Where was the fourth? There was another racket from down in the street, it sounded as if the Unggoy had finally made their move. With the Imp distracted, she chanced a look out of the window, shouldering her carbine. Through the pouring rain, she saw the alien, clad in black armor and wielding an Elite's plasma rifle. Had he killed a Sangheili before arriving here? Surely not. \n\nShe watched him stick one of the Unggoy with a plasma grenade, then vault over one of the abandoned vehicles in pursuit of the others, hosing them with streams of glowing plasma. The Imp moved between the vehicles like a river winding through the rocks, never so much as faltering as he cut down his foes. \n\nAlba scoped in on him, her carbine's reticle hovering over his angular helmet, but something gave her pause. There was a needle lodged in his shoulder, its pink glow reflecting off his visor, the Kig-yar had not missed after all. It hadn't exploded, it must not have penetrated very far, but she could see that a good inch must be embedded in his flesh all the same. A similar wound had seen her Kig-yar writhing on the ground and screeching, but this Human scarcely seemed to notice that he had been wounded. \n\nShe had hesitated for too long, and her target slipped beneath her angle of view, heading towards the entrance to the building below her. She took a look at the street beyond, but she couldn't see any other Humans. Whenever she had fought the black-armored Imps before, they had been part of a pack, working in concert with at least half a dozen squadmates. They coordinated closely, fighting as one entity, their battlefield tactics putting pressure on even the most experienced Sangheili Majors. Why was this one alone? Had the Imp become separated from his pack? Had they been killed? \n\nShe lowered her weapon, turning towards the corridor. Whatever the Imp's story was, he seemed to be coming this way. \n\nThe Rookie - Tayari Plaza, nine hours after drop. \n\nThe Rookie moved into the building, the waypoint on his HUD leading him towards the nearest stairwell. He checked his corners, sweeping his plasma rifle across open doorways and pockets of shadow. This place was still crawling with Covvies, but he didn't have time to clear every room. He mounted the stairs, trying to ignore the pain in his shoulder, passing the first floor, and then emerging onto the second. \n\nA sudden screech from somewhere above him almost made him jump out of his skin, and he raised his head just in time to see a Jackal drop from the stairwell above him. The alien landed on him, grappling with him as it knocked him to the floor. The thing was far heavier than it looked, two hundred pounds at least, its sharp claws tearing at his BDU and glancing off his armor plating. He found himself on the floor with the alien on top of him, scrabbling at his belly with its taloned toes like a cat trying to disembowel its prey. Fortunately, there was too much armor and gear in the way, and its claws couldn't penetrate. He tried to aim his plasma rifle at its chest, but it swiped the weapon out of his hand, sending it bouncing along the carpeted floor. \n\nHe managed to throw it off him, the creature darting away as he rose to his feet unsteadily. The two of them squared off, the Jackal snapping its jaws, its bulbous eyes fixed on him intently. The sharp quills that protruded from its head were standing erect, its rows of needle-like teeth bared in a snarl. These things looked small and frail at a distance, but their slim frames were packed with sinewy muscle, and they stood a head taller than the average Human when they weren't crouching on their digitigrade legs. \n\nIt had obviously been hoping that its initial ambush would finish him off, and it very well could have if it had managed to penetrate his BDU. The alien lunged at him again, alarmingly fast, swiping with the claws on his three-fingered hand. He raised his arms to protect his face reflexively, exposing the unarmored areas of his forearms. The alien's claws tore through the padded fabric and the Kevlar weave beneath, biting into his flesh and drawing red blood. \n\nThe alien drew a plasma pistol from its belt with the speed of a gunslinger and activated the point-defense gauntlet on its wrist, the Rookie reaching for his handgun in kind. He fired off a shot, but the round simply bounced off the glowing barrier of wavering plasma that the alien had erected, ricocheting into the ceiling and raining debris down on them. The alien poked its weapon through a convenient cut-out in the edge of the shield, the Rookie diving to the ground as a plasma bolt shot a burning hole in the wall where he had just been standing. \n\nScarcely taking the time to aim, he emptied his mag into the creature's feet and ankles, firing beneath its round shield. The alien screeched in pain, its legs cut out from under it, joining him on the floor as its shield collapsed back into its projector. His handgun now empty, the Rookie reached for his weapon of last resort, drawing a combat knife from his boot. As the Jackal struggled to right itself, he plunged the blade into its skull from above, feeling it sink up to the hilt. The alien went limp, the Rookie climbing to a kneeling position, breathing hard as he struggled to pull the knife free. \n\nHe stumbled to his feet, wiping the purple blood that soaked the blade on his sleeve as he retrieved his plasma rifle, then turned back towards the stairs that led to the third floor. With a bloody knife in one hand and the compact rifle in the other, he pressed onward. \n\nAlba - Tayari Plaza, nine hours after slip-space rupture. \n\nAlba heard the scuffle as the remaining Jackal launched its ambush on the Imp, along with the squeal that informed her of its outcome. She readied her carbine, aiming the reticle at the shadowy stairwell down the corridor. There was only one way that the Imp could come, and the radioactive rounds from her carbine would punch straight through his jet-black armor with ease. \n\nHis helmeted head emerged, but she hesitated once again as he mounted the steps and came into full view. There was a slight limp in one of his legs, his black chest armor was scarred by plasma, and crimson blood was seeping from wounds on his shoulder and forearm. In one hand, he held a tiny knife, its blade wet with Kig-yar blood. In the other, he held the Elite's plasma rifle, the red glow of its ammo counter indicating that the charge was almost depleted. \n\nHe had torn through her squad like a Zealot, and how many more before it? Where else could he have obtained the rifle and the plasma grenade? He was injured and alone, he should be hiding in some dark corner somewhere, waiting out the invasion. Yet he kept coming, never faltering. This was the tenacity that the Sangheili so respected. \n\nThe Imp aimed his weapon and fired, the shields on Alba's power armor absorbing the bolts harmlessly, flickering waves of energy passing over her body. She knew that he didn't have the charge left to collapse them, it would take half a battery at least to overload her shielding. She let him have his moment, the projectiles growing weaker and less precise as the weapon sputtered and died. He glanced at it for a moment, perhaps not understanding what had happened, then let it fall to the ground. It seemed that the little kleptomaniac had run out of stolen weapons, now all that was left was his knife. What would he do next? \n\nTo her surprise, he swiveled the knife in his hand so that the blade was facing downwards, taking up a fighting stance. She had three feet over him, and she weighed several times what he did, but that didn't seem to faze him. \n\nAlba considered simply cutting him down with her carbine, he was defenseless now, but something about him stayed her hand. There was no fear in him, no hesitation, and he was ignoring the wounds that peppered his body. He was injured, no doubt exhausted, separated from his allies, but he stared at her unflinchingly through that angular visor. \n\nThe Imp charged at her, sprinting down the corridor, racing headlong into certain death. His knife was scarcely long enough to penetrate her thick hide, but he was going to try all the same. He covered the distance quickly, and there was a flash of sparks as his dagger met her armored forearm, glancing off the blue material harmlessly. Undeterred, he tried again, his strike easily deflected. Her power armor could stand up to some of the most powerful Human firearms, there was no way that he was going to penetrate it with just a combat knife. \n\nThat said, her shields would not deflect a blade as it would a bullet, and there were joints in her armor where the underlying suit and her naked skin was exposed. Was she in danger? \n\nAs if to answer her question, the little alien darted in under her arms, planting one hand on the pommel of his blade for leverage as he drove it towards her ribs. It sank deep into the rubbery vest that she wore beneath her blue armor, slipping between the protective plates, the sting of its point penetrating her skin. \n\nShe reacted reflexively, catching him with her forearm, lifting him off his feet and throwing him across the corridor. He flew through the air like a doll, hitting the adjacent wall hard enough that the plaster cracked, dust raining on his limp body as he settled onto the floor. \n\nAlba cocked her helmeted head at him as he struggled back to his feet, his knife still clutched in his hand. He took up another stance, the knife flashing as it caught the light from the street outside that bled in through the windows. Incredible, he still wanted to fight. \n\n\"Have it your way,\" she muttered in her native tongue, stepping forward and throwing a punch at him. Her fist was as large as his head, and it impacted the wall where he had just been, sinking up to the wrist in the flimsy material and sending a cloud of white dust billowing into the air. \n\nThe Imp had dodged out of the way, he was a fast little creature, and she felt the bite of his blade as it cut into the unarmored area of her thigh. She wheeled around with the intent of catching him with her elbow, but he slipped through her grasp once again. She searched for him through the lingering dust and the darkness, wondering how he was able to see so well, when she felt him stab her just above the rump. \n\nEnough, she was no longer amused by his antics. \n\nAlba bellowed, spinning and charging down the hallway, her arms outstretched. They were easily the span of the corridor, and she snagged him, picking him up and carrying him with her as she barreled into the far wall. There was another puff of dust as she pinned the Imp against the surface, his boots dangling off the carpet, the blow dazing the creature for a moment. \n\nIt didn't last for long, and she soon felt his blade glance off her helmet, bouncing off her mouth guard. He tried to get it into the joint between her pauldron and her neck guard, but she reached up and enclosed his hand in her fist, squeezing until he dropped the weapon. It bounced off her armored shoulder, falling to the floor below. \n\nThe dust began to clear, and his helmeted face came into view. She had put him at head-height to her, their eyes level, Alba pressing him against the wall with one forearm across his chest. He was disarmed now, Humans didn't have talons or sharp teeth, there was no way for him to hurt her. \n\nThey stared each other down, Alba seeing the reflection of her own eyes in his opaque visor, her breath misting it. Just when she was starting to think that his bloodrage might have faded, he headbutted her, slamming his helmet into hers and making the metal ring. It was a futile gesture, but she found it somehow endearing. This Imp just didn't give up. \n\nAn idea crossed her mind, one that she would never have entertained even hours ago. She didn't want to kill this creature, he didn't deserve it. Nor did she want to return to the Covenant, not after they had betrayed the Sangheili, and the Prophet of Regret had abandoned her to her fate in the city. Perhaps there was a way that they could help one another... \n\n\"Enough, tiny man,\" she said in her gravelly voice. That seemed to surprise him, and he stopped his struggling abruptly. Alba knew their tongue, as did many of the lower-ranked members of the Covenant. It was commonplace for the Unggoy to learn the language so that they might translate for their superiors, and even some of the Jiralhanae and Sangheili could speak a fair bit of it. \n\nAlba waited for some kind of response, but she didn't get one, the alien just stared at her silently. \n\n\"Alba has proposition for you,\" she said, hoping that her English was as good as she had thought. \"My pack is dead, you are alone. Alba wants no part in this any longer, San'Shyuum are not my allies, the Covenant wars with itself. Tiny man must know how to get through gates that block the way, and Alba knows where the patrols go, knows how to avoid them.\" She tapped at her helmet with her free hand, hoping that he understood the reference to the Covenant communications network. \"You will help Alba, Alba will help you. Both walk out of here, yes?\" ",
        "She kept him pinned, watching for any sign of life from his featureless visor. Had he even understood her? Should she try again? \n\n\"A'ight,\" he replied, shrugging his shoulders. Was that really his only response? He seemed to be agreeing to her proposal, and so she gradually lowered him to the floor, taking a few steps back and watching him cautiously. He had proven himself to be far more dangerous than his diminutive appearance would suggest. \n\nHe knelt to pick up his knife, returning it to his boot, craning his neck to peer up at her. \n\n\"If I arm you, you will not betray me, yes?\" \n\nThe Imp nodded his head, an affirmative gesture, and so Alba thrust her carbine into his arms. She almost knocked him over, she sometimes had trouble gauging her strength in his low-gravity environment, and the alien turned the weapon over in his hands as he examined it. To her relief, he kept his finger off the trigger, aiming the barrel at the floor. \n\n\"Wait here,\" she said, \"I must arm myself.\" \n\nThe Rookie - Tayari Plaza, nine hours after drop. \n\nThe Brute spoke. It opened its mouth, its breath misting his visor, its tusk-like teeth and its long tongue on display as he practically looked down its throat. Its voice was coarse and gravelly, but the deep contralto unmistakably feminine, the rumbling speech shaking his bones. There must be female Brutes, but he had never heard of such a thing. Its yellow eyes peered at him from beneath its blue, horned helmet, its features obscured by the gleaming material. \n\nHe had expected it to kill him, he was out of ammo, hopelessly outmatched against the hulking mass of armor and muscle. And yet he was still breathing. The thing was pinning him against the wall, but not applying enough pressure to crush him. It could have pulled his arms off like a child playing with a rag doll, but instead, it was bargaining with him. \n\n\"You will help Alba, Alba will help you. Both walk out of here, yes?\" \n\nAlba? Was that the Brute's name? \n\nThe Rookie had no idea where his squad was right now. He was deep behind enemy lines, completely out of contact with command, and he had no hope of rescue. He was going to have to walk out of here under his own power, and if this alien really did know the Covenant's patrol routes, then she might be his only ticket out of his mess. Besides, if he said no, she'd probably just crush him like a soda can. \n\n\"A'ight,\" he replied. Her yellow eyes seemed to widen beneath the brim of her helmet, and then she slowly lowered him to the floor. He paused to pick up his trusty knife, stowing it in his boot, then waited for her to make the next move. \n\n\"If I arm you, you will not betray me, yes?\" \n\nHe nodded, he had no intention of shooting her in the back. On a normal day, he'd kill a Brute with a rusty spoon if that was what it took for him and his friends to make it home, but this one was...different somehow. Brutes were never reasonable, it wouldn't have surprised him in the least to learn that they were kept in cages on their carriers, and unleashed like attack dogs when the need arose. But this Alba was willing to have a conversation with him, and that alone was reason enough not to just plug her and move on. \n\nShe shoved the carbine that she was holding into his hands, knocking him off-balance, then vanished into a side room. Now that he was paying attention, her figure and her gait were different from that of a regular Brute, too. There was a flare to her hips that was visible even beneath her armor, and she carried her weight differently from the males, an ass the size of a beanbag chair swaying left and right as she walked. If she really was a female, then that was a whole lot of woman, even for a Brute to handle. \n\nWhen she returned, she was carrying a needle rifle, and he had to resist the urge to aim his carbine at her. Every instinct in his body, all his years of training and combat experience screamed danger like an air raid siren going off in his head, but he suppressed it. This was an opportunity that he would not get a second time, not in a million years... \n\nHer footsteps made the floor beneath his boots shake as she came to a stop in front of him, peering down at him as if she was waiting for something. \n\n\"Well?\" she asked, gesturing down the corridor. \"You lead.\" \n\nThe Rookie made his way past her, checking his map. If his squadmates had been here, then they weren't here now, and there was no indication that the Brute had killed them. The aliens tended to leave a rather conspicuous mess. It was time to continue along the exfil route that he had originally planned. If the Superintendent wanted to add any more waypoints, then he would deal with them as they came. \n\nThey made their way down the stairs, the Brute's weight making them creak worryingly, emerging onto the street again. The Rookie paused for a moment as he checked his map, his companion waiting impatiently. \n\nThe dead Grunts were nearby, their fluorescent blood was splattered all over the cars, and it was pooling on the asphalt like spilled motor oil. The rain didn't seem able to wash it away, it was oddly viscous. If the Brute was in any way angry with him for slaughtering her squad, then she didn't show it. What was it that she had said when she had been pinning him against the wall? That the Covenant were fighting each other. He had surmised as much from the pile of dead Elites that he had come across, but it was nice to have his theory confirmed. He didn't know anything about the political makeup of the Covenant save for the fact that the Prophets were the head honchos, and that the different races were arranged in a hierarchy from most dangerous to least. Were two of the member species having a spat, or were two of the Prophets fighting each other with their private fleets? Perhaps he should ask the Brute, but he wasn't in the mood for conversation right now. \n\nThe path on his map sent him down the East road that led away from the plaza, but as he turned in that direction, he felt the alien's hand on his shoulder. It was as large as a dinner plate, heavy, too. He bristled, resisting the urge to wheel around and shoot her. \n\n\"We must not go that way,\" she said, her low voice making the hairs on his arm stand on end. \"Patrols are that way. We go that way,\" she added, pointing down the Western road. \n\n\"Alright,\" he mumbled, taking a moment to reconfigure his map marker. It wasn't much of a detour. They made their way down the street, sticking to the sidewalk this time, as the Brute was too large to fit between the cars. At least she was fulfilling her part of the bargain. What bargain was that, exactly? They were going to cooperate to make it out of the city, but for how long? What would the reaction be when he eventually linked up with UNSC forces? Perhaps she would claim asylum, or offer information in exchange for her safety. It wasn't a trick, he knew that for certain. She could have crushed the life out of him without so much as breaking a sweat if she had wanted to, and he didn't have any useful information to accidentally reveal to her, he was completely lost. \n\nThey arrived at one of the massive blast doors that had closed over the street, creating an impenetrable wall between two buildings. The Brute, or Alba as she had referred to herself, watched as he walked up to the small control panel that was built into the middle of the door. He accessed the files that he had downloaded from the city's Superintendent, cross-referencing the correct codes, then tapped in the sequence. There was a mechanical crunching sound as the two doors parted, sliding back into recesses in the buildings to either side of the road, their way clear. \n\nAlmost as soon as they were on the other side of the barrier, it began to close again of its own accord, no doubt the Superintendent's doing. \n\n\"So you can open doors, tiny man,\" Alba muttered. \"They have been thorn in our side since we make landfall. Which way now?\" \n\nHe pointed down the street, and they pressed on, the Brute lumbering along beside him. It was hard to keep his eyes off her, the only Brutes that he had ever seen up close like this before were either dead or viewed through a scope. They moved with such ease that it kind of downplayed their sheer mass. She must weigh at least a thousand pounds, and she had the figure to carry all of that weight. Her thighs were as thick around as his torso, packed with muscle, and sheathed in a layer of fat that shook with every step of her two-toed feet. Her hips were wider than the span of his shoulders, and her ass was similarly scaled up, her copious cheeks wobbling with the impact from within her skin-tight suit as she walked. Apparently, the Covenant was not too concerned about its soldiers being shot in the butt because there was minimal armor plating there. \n\nHer skin was varying shades of grey, as was the rubbery jumpsuit that she wore beneath her blue armor, making it difficult to ascertain where one ended, and the other began. What he could be sure was exposed skin was leathery and thick, reminding him of a rhinoceros, and he noted that there wasn't a hair on her. Some of the Brutes looked like a Sasquatch, while others were shaved clean, save for their beards. If Alba had any fur, then it was out of view. Her facial features were obscured behind her helmet, and he wondered whether they would be any different from those of the male Brutes. \n\n\"You do not talk much, tiny man,\" Alba said as he peered up at her through his helmet's visor. He shrugged in response, eliciting a rumbling chuckle from her. \"Most talk too much, I find it refreshing.\" \n\n\"What would we chat about?\" he replied, \"the weather?\" \n\nShe chuckled at that, a huffing sound that shook his bones. \n\nThey walked for a little while longer, and then the Rookie led his unusual companion into the shelter of a bus stop, the alien waiting outside as he sat down on the bench beneath the awning. She was far too large to fit inside it without crouching. The rain pounded on the curved, transparent roof, an animated advertisement illuminating him as he began to remove one of his boots. \n\n\"What are you doing?\" Alba asked, cocking her head at him as he rolled up the leg of his BDU. He retrieved the pack of MediGel from his pocket, opening the bag and smearing some of the green-tinted gel on his swollen ankle. \n\n\"Healing,\" he replied, the anesthetic soothing his growing discomfort. He had more injuries to deal with now that he had a moment of peace, and he examined his forearm where the Jackal had scratched him. Its bird-like talons had gone straight through the material, leaving him with a trio of nasty cuts. He rolled up his sleeve to expose his forearm as best he could, the material was padded and protected by Kevlar, then began to smear some of the goo on the wounds. This time it stung, but the pain-killing property of the mysterious gel soon put a stop to that. \n\nNext was his shoulder, where the needle had embedded itself a good inch into his flesh. The bleeding had stopped by this point, but it was so sore that it hurt to lift his arm. It hadn't reached his bone, or it would hurt a hell of a lot more, but it was a deep wound that needed to be disinfected. He also needed to remove any fabric or debris that the projectile had carried into his body. Even a single strand of fabric from his BDU could cause a potentially lethal infection. \n\nThe Rookie exhaled, bracing himself as he smeared some of the green gel on his index finger. It was a good job that he was wearing fingerless gloves. Alba watched without comment as he pushed the digit into the open wound up to the first joint, stifling a groan of pain. It began to bleed again almost immediately, crimson blood oozing past his finger and soaking his clothes as he fought back a sudden wave of lightheadedness. Feeling something that wasn't wet meat, he tried to pull it out, succeeding in retrieving a small fragment of his BDU that the needle had dragged in with it. \n\nCertain now that he had done all that he could to sanitize the wound, he squeezed more MediGel onto his finger like toothpaste onto a brush, pushing it into the hole. He sagged back into his seat as he took a moment to collect himself, willing his hands to stop shaking. What he wouldn't give for an actual UNSC trauma kit right now, he could stitch himself up and apply an adhesive pad. Optican's finest would have to do for the time being. \n\nThe Brute was looking at him strangely, peering at him with her yellow eyes from beneath the shadow of her helmet. He didn't know what she was thinking, he couldn't see her expression. \n\n\"We should move,\" she said. \"If we linger too long, Phantoms will spot us. Come.\" \n\nHe rose to his feet unsteadily, wishing that he had some polypseudomorphine to take the edge off. \n\n*** \n\nThey walked for a while longer, passing through several more of the large gates. The Rookie was starting to see how much of hindrance they must have been to the Covenant, the aliens couldn't go a block without encountering one of them. The only way to get past them without the access codes would be to mount a dropship and play an endless game of leapfrog. \n\nThey came across a few more of the Phantoms, the ships scanning the streets with their searchlights from above, but he and Alba were able to stay out of sight beneath balconies and inside the foyers of public buildings. \n\nThey didn't talk much, there was nothing to talk about, really. One might have expected the Rookie to quiz the Brute at length about her culture, her home planet, or the day to day life of being a soldier in the Covenant. After all, how often did a Human get to have a conversation with an alien that wasn't being held down the barrel of a gun? But the situation was tense, and the Rookie didn't want to be distracted by small talk, not when he was miles behind enemy lines. Besides, she might be a turncoat, but she was still a Covvie. It wasn't exactly easy for him to brush off years of conflict. He had killed Brutes, and she had no doubt killed her share of Humans. \n\nEventually, his alien companion stopped, and he turned to look back at her. \n\n\"Wassup?\" he asked. \n\nShe reached a four-fingered hand down to her stomach, and he heard a growl that didn't come from her mouth. \n\n\"Alba must eat,\" she replied, \"I have been too long without food.\" \n\n\"What do Brutes eat?\" he asked, \"besides people.\" \n\nShe scowled at him from beneath her blue helmet, not taking kindly to his jibe. \n\n\"What you can eat, I can eat. Show me where there is food in this city.\" \n\nHe shrugged his shoulders, then waved for her to follow him. He was getting rather hungry himself, he hadn't eaten for about twelve hours, and he had been burning calories with all the fighting and walking. But where might they find food? Unfortunately, the Covenant would have driven off all of the street vendors, there would be no Nyama Choma or Mandazis for him today. The safest bet might be the vending machines, it was just a matter of finding one. \n\nHe brought up his map and checked the immediate area. There were no supermarkets in this part of the city, it was more geared towards finance and tourism. There were a few restaurants nearby, but that food would need to be prepared, and anything that needed to be refrigerated would be inedible after so many hours without power. Where might there be vending machines? Perhaps a sports center, or some kind of gym? They wouldn't have power either, but warm soda and shrink-wrapped sandwiches wouldn't do them any harm. \n\n\"This way,\" he said, marking a nearby gym on his map and setting off in that direction. It wasn't more than a block away, and the skies seemed clear of Phantoms for the moment. When they arrived at the building, the windows that lined the facade and overlooked the street beyond were dark, and the lights in the interior were all off. The streetlamps were on in most places, as were the electronic billboards, but it seemed that the private buildings were all cut off. Perhaps there was a municipal power grid that had a backup system, or perhaps only some areas had been affected by the fighting and the slip-space rupture. The Rookie stood in front of a pair of sliding glass doors at the entrance, but the sensor was offline, and they were jammed shut. \n\nHe pulled out his knife and pushed the blade between them, attempting to pry them open without much luck, Alba growing increasingly impatient as she waited behind him. After a minute, she uncrossed her arms and marched towards the doors, the Rookie dodging out of the way as she walked straight through the glass. It shattered into tiny shards, making a terrible racket, and he glanced around nervously before following her inside. \n\n\"What is this place?\" Alba asked, pausing by a side door to examine a row of treadmills that faced out onto the street. \n\n\"A gym,\" the Rookie replied, searching the foyer. \n\n\"And what is a gym for?\" she asked tersely, irritated by his curt reply. \n\n\"Exercise,\" he said, finally finding what he was looking for. There were three vending machines lined up against the far wall next to the entrance to the locker room. There was one for drinks, one for sandwiches, and another for snacks. He felt the floor shake beneath his feet as Alba sidled up beside him, leaning down to examine the contents through the transparent windows. Her eyes played over the rows of colorful, plastic packaging, the Rookie wondering what she must make of them. \n\n\"Do you have codes for this too?\" she asked, noting the numeric keypads on the machines. The Rookie shook his head. \"Then stand clear, tiny man.\" \n\nHe took a few steps back as Alba set down her needle rifle, then reached out and dragged one of the machines away from the wall, tearing the cord out of its power socket and throwing it violently to the floor. She must have expected the glass window to shatter like the doors had, but it was made from some kind of reinforced plastic, intended to be tamper-proof. It clearly wasn't Brute-proof, however. Alba flipped it over onto its back and dented the window with her fist, pounding on it until it bent enough that it came away from its metal frame. She tossed the glass aside, and gestured to the now windowless vending machine, the contents strewn all over the interior. \n\nThe Rookie knelt beside it and picked out a few choice items, tossing a shrink-wrapped sandwich to Alba. It was a spicy chicken burger, not exactly the most sophisticated cuisine that Earth had to offer, but it was better than going hungry. She snatched it out of the air, the packet so small in her giant hand that it fit snugly in her palm. She sniffed it experimentally, then cocked her head at him. He retrieved a similar packet and mimed opening it, Alba mimicking him with her oversized fingers. The Brute could be surprisingly delicate when she wanted to be. She tore the plastic wrapper open, then brought the sandwich to her mouth, lifting off her horned helmet in the process. \n\nFor the first time, the Rookie got a look at her face. Her features were indeed softer than those of a male Brute, with a less pronounced brow, and a smaller jaw with no beard. She had a dull snout, and her thick lips were tinted pink, the upper one split slightly in a way that reminded him of a cat. Her thick, dark hair was cropped short in what almost resembled a pixie cut, Alba shaking it out as though glad to be free of the stifling armor. Rather than the jutting, yellowed teeth of the males, the two tusks that protruded from her lower jaw were white and symmetrical. She had a couple of prominent, pink scars on her grey skin, but nothing disfiguring. Her eyelashes were just as thick and as dark as her hair, framing a pair of yellow eyes that almost seemed to glow in the low light, her sclera red instead of white. "
    ],
    "authorname": "Snekguy",
    "tags": [
        "alba",
        "alien",
        "blowjob",
        "brute",
        "kissing",
        "large breasts",
        "long tongue",
        "science fiction",
        "size difference"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/leap-of-faith-5"
}