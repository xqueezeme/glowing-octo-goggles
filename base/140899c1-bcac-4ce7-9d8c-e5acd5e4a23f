{
    "title": "An Indispensable Woman Ch. 05",
    "pages": [
        "Note:\n\nWelcome to the final chapter in the saga of Dani and Amara! The first thing I want to say is THANK YOU to my readers. This was my first foray into this genre and I didn't know what kind of feedback to expect. I was absolutely blown away by your generosity, so a very sincere thanks for the comments, votes and emails! \n\nMy goal in the story was to describe a period of change and growth for two characters. I hope I succeeded in a way that was entertaining and fun, and that you consider the time spent reading this story to be worthwhile.\n\nThis is a story about fictional consenting adults. \n\n*****\n\n\"Bill let the balloon go and it went up in the air. It went higher than the birds and higher than the trees. Bill watched it get smaller and smaller until he couldn't see it anymore,\" Dani said, then paused in the story. Sometimes Anne liked to ask questions or point to different pictures, but this time she was silent. Dani took it as a sign that the little girl was enjoying the story. Or maybe she'd fallen asleep on Dani's lap. \n\nReading to Anne was still the most challenging part of the day - Dani had never learned to read - but over the last two months Dani had developed three ways to make it easier. \n\nFor starters, Dani had studied all of Anne's favourite books. Some of the easy words she could recognize on sight, and the more difficult ones she'd memorized with Amara's help so she could read the stories the way Anne liked.\n\nSecond, Dani made frequent trips to the library in search of new children's books that only had easy words in them. Anne liked some of the new stories almost as much as those in her own collection.\n\nThird, and most difficult of all: Dani was teaching herself to read better. Amara had found some websites and Dani was slowly working her way through the lessons. It was slow going - it was hard to learn online. Dani wished she could learn faster but there were only so many hours in a day.\n\nIt was a lot of effort to go through just to read some books to a three-year-old. But Dani had learned growing up that she could mask a lot of flaws with extra effort and attention. And it made her feel good to be able to read a proper story to the kid; it was kind of like being a real parent.\n\nAt first it had been pretty embarrassing to ask Amara to help her with some of the online exercises - Dani hated the idea of looking stupid in front of her partner. But Amara never made her FEEL stupid and was always cool about helping whenever Dani asked. She loved that about the other woman - even though Amara was busy she always tried to make time for Dani. \n\nAnd the last couple of months had been even busier than normal.\n\nAmara's sister Katie had come with her three boys and stayed for two weeks. Dani and Katie had hit it off, although trying to keep three boys in line was a lot harder than she could have imagined. In the end, Katie had invited Dani to visit her in Edmonton after things with Katie's soon-to-be ex-husband got sorted out. \n\nThen Amara's estranged husband Henry had started stirring the pot, getting more vocal about shared custody of Anne and about selling off the marital home. That had been rough for Amara - she was forced to juggle her hectic work schedule along with meeting lawyers and, later, realtors. \n\nIt had been a rough time for Dani too - she'd wanted to help Amara, to support her in some real way, but in the end all she could do was make sure Anne was looked after, the place was clean, the meals were cooked and Amara felt emotionally secure. Not glamorous, but better than nothing. Amara had been appreciative of even that much. \n\nTo help with the extra expenses, Dani had tried to refuse the seven-hundred a month Amara was paying her. After all, Dani was getting free room and board and free use of Amara's car - it didn't seem right to be taking Amara's money, too. At first Amara wouldn't consider it, but after Dani insisted they compromised on three hundred a month instead. Still too much, in Dani's view, but Amara could be pretty stubborn when she made up her mind.\n\nSo now they were dealing with the 'new normal'. They lived in a much smaller fifth-floor condo. Reluctantly, on her lawyer's advice, Amara had negotiated a shared custody arrangement that saw Henry taking Anne from Wednesday to Sunday every second week - five days in every fourteen. That arrangement was only three weeks old and it was rough on mother and daughter both. But they were making the best of it. They were coping.\n\nSometimes, that was all you could do.\n\nDani turned the page and continued reading. \"Later, Bill asked his mother where the balloon had gone. 'there is a special place in the sky where all balloons go' his mother said.\"\n\n\"I think there are a lot of balloons up there,\" Anne said, obviously not asleep.\n\n\"Yeah - probably thousands.\"\n\n\"I lost my balloon at the teddy bear picnic.\"\n\n\"I remember,\" Dani said, giving Anne a gentle hug. The kid had cried for an entire hour! \n\nDani was about to continue to the next page when she heard a key in the front door. Anne heard it too, and with a shriek the little girl ran to greet her mom. Dani rose from the couch and checked on the chili in the kitchen, then poured Amara half a glass of her favourite Riesling. \n\n\"Soooo good to be home,\" Amara said with a sigh as she appeared in the kitchen doorway.\n\nDani pressed the wine glass into her hand and got a kiss on the lips in return. \"At least tomorrow's Friday.\"\n\n\"Thank God. This week has felt like a year.\"\n\n\"Well, dinner's ready to go. Chili, tonight.\"\n\n\"I didn't know you could make that.\"\n\nDani shrugged. \"Trying something new.\"\n\n\"Let me change into clothes that won't need to be dry-cleaned when I spill chili on them,\" Amara said, then took another hit from the wine glass before heading to the bedroom.\n\n\"Anne? Wash up for dinner, sweetie,\" Dani shouted.\n\nIt was perfect. The whole arrangement was everything Dani dreamed of. She was in a loving relationship with a quality partner. She had respect and trust, and there were no games being played or high drama flaring up every few days. Dani was making a difference. \n\nAmara loved her - she'd actually used that word, all on her own, with no prompting.\n\nDani had stumbled into the relationship of her dreams with a woman who was WAY too good for her. She knew from painful experience not to let her guard down or to take anything for granted. Constant effort and diligence was the surest way to safeguard the best thing that had ever happened to her.\n\n**\n\n\"Are you ready for tomorrow?\" Amara asked as she carefully spooned leftover chili into single-portion, freezer-safe containers.\n\nDani was at the sink finishing the dishes. There was a dishwasher in the new place, but for just three people it was faster just to do them by hand.\n\n\"You know, I was thinking...we've never left Anne with a sitter before. And we don't know a whole lot about Elaine - I mean, she's still in high school and we only met her a couple of weeks ago. It's a big risk, when you think about it. I'd feel better if I stayed and-\"\n\n\"And I'd feel better if you would just relax about the get-together tomorrow,\" Amara said. Dani could hear the irritation underneath Amara's patient tone. \"It's going to be really informal. There's nothing to worry about.\"\n\n\"It's your senior management team,\" Dani said. \"I'll be in way over my head. I'd die if I embarrassed you in front of your boss and co-workers.\"\n\n\"It's the senior team AND spouses,\" Amara countered. \"Just drinks and dinner. We're not going to be discussing work. Well...maybe a little bit...but it's just an informal team-building type of thing. You won't embarrass me - I'm keen to have you there. PLEASE just relax.\"\n\nDani sighed but didn't argue any further. She'd been trying to weasel out of the dinner ever since Amara had invited her and she could tell Amara was getting tired of it. \n\nThe whole idea terrified her. It wouldn't be her crowd, for one thing - a bunch of educated, professional, rich people with their educated, professional spouses. They be talking about...the stock market, or real estate in China, or politics...or something like that, anyway. And what could Dani contribute? Bowling? Colouring? Adult literacy lessons? Come on!\n\nBut more than that, Dani's performance at the dinner would reflect on Amara. If Dani said something stupid or - God forbid - unintentionally offensive, it would make Amara look bad in front of her boss and the important people in the company - maybe even damage her career. Dani had worked her ass off for a few months to be a real asset to Amara and knew how easily it could be ruined by a badly-chosen word at the get-together.\n\nDani realized again that Vancouver had been a double-edged sword. On one hand it had strengthened and deepened their relationship and assured Dani that Amara was thinking and planning long-term. On the other hand, Amara had largely \"gone public\" with their relationship since getting back, which meant that Dani was under a ton of pressure to reflect well on Amara at all times. As devoted as she was to being Amara's partner, sometimes Dani wished she could go back to being 'only' a housekeeper, child-minder and lover!\n\n\"Hey,\" Amara said, sliding her arms around Dani from behind and kissing her ear. \"I love you. You're an important part of my life and I'm proud to be able to introduce you. If I thought you wouldn't be well-received, I wouldn't have invited you. It'll be great. You'll have a good time.\"\n\nI love you. You're important. I'm proud of you. How long had Dani wanted to hear those words? How many past relationships had suffered and died from their absence?\n\n\"Okay, okay, I'm going. I mean, I already bought a dress, right?\" \n\n\"And you look lovely in it. Royal blue is your colour.\"\n\n\"You think everything is my colour.\"\n\n\"That's because you look great in everything,\" Amara said, licking the rim of Dani's ear and sending a tingle down her neck. Dani turned her head and got a kiss on the lips and a tighter squeeze from Amara.\n\n\"That reminds me - you got a package today. Courier,\" Dani said.\n\n\"Did you look inside?\"\n\n\"It was addressed to you. Figured I'd better leave it. I didn't recognize any of the words on the mailing sticker.\"\n\n\"Mmm. It must be from LaConda's Erotic Boutique,\" Amara said, and the tone of mischief in her voice was hard to miss.\n\n\"I'm afraid to ask.\"\n\n\"Oh, be afraid. Be VERY afraid.\" Amara's chuckle was cartoonishly evil.\n\n**\n\n\"Wow...this is bigger than I'd expected,\" Amara said, brandishing the neon green phallus they'd received in nondescript packaging from the courier.\n\n\"I hope that's for you, because I don't have any openings big enough,\" Dani said, eyeing the sex toy dubiously. The two of them sat across from one another on the bed, Dani in her cotton nightshirt and Amara topless in a pair of boyshort panties.\n\n\"It looked smaller on the website. Whoever was holding it in the photo must have enormous hands.\" Amara handed it to Dani. Her fantastic breasts shook enticingly when she moved her arms. Her nipples practically cried out for Dani's fingers...or mouth. \n\n\"Geez, it weighs a ton.\"\n\n\"Well, it's got heating coils and it vibrates, too. Three-speed.\" Amara was reading from the tiny booklet that came in the package. \"Introducing Jade Wang: the 'Rolls-Royce of pleasure devices'. Better than the 'real thing', apparently.\" \n\n\"Jade Wang? Seriously?\"\n\n\"Yeah, they could have worked a bit harder on the name,\" Amara conceded.\n\n\"This power cord is only three feet long. We'll have to move the bed closer to the wall outlet.\"\n\nAmara continued to page through the booklet. \"It has a battery. A full charge provides two hours of continuous action.\"\n\nDani turned the sex toy over in her hands, locating the power switch and speed setting.\n\n\"Does this mean you're itching for the 'real thing'?\" Dani said.\n\n\"Well...not 'itching' exactly,\" Amara's cheeks flushed a pulse-quickening shade of red. The woman was damn-near irresistible when she had her blush working. \"It's just...I like the feeling of being...full. I do kind of miss that part.\"\n\n\"Oh, you'll be full, alright. And then some.\"\n\n\"Yes, this is a little more than I had in mind. We have to charge it first anyway, so we won't be able to use it tonight.\"\n\nDani gathered up the sex toy and the packaging from the bed and put it on the dresser. \"Looks like you dodged a bullet for now.\"\n\n\"More like a torpedo.\"\n\nDani crawled back onto the bed, pushed Amara down onto the mattress and remained on her hands and knees above her. Dani loved looking down into Amara's eyes and seeing the eagerness and trust reflected there.\n\n\"So for tonight you're stuck with me and my boring girl-parts,\" Dani said.\n\n\"Hard to see those girl-parts under your night shirt.\"\n\nDani knelt up and pulled her shirt up and over her head, then tossed it aside. Amara's warm palms found Dani's bare breasts almost immediately, cupping them and stroking her nipples with the pads of her thumbs. Her touch felt heavenly. Dani remained upright, straddling Amara's waist, and caressed the other woman's breasts with her fingertips - first the soft skin on the sides and undersides, then the stiff nipples. Amara's breasts were made to be touched.\n\n\"What are you in the mood for tonight?\" Dani asked.\n\n\"Can I pick anything?\"\n\n\"I guess so.\"\n\n\"Mmm. Well, I was on my feet doing a presentation most of the day, and the heels made my feet tired and awfully sore.\"\n\n\"Poor baby.\"\n\n\"I know! And by two o'clock this afternoon I was fantasizing about one of your incredible foot rubs.\"\n\n\"Yeah? What's it worth to you?\"\n\n\"I'm willing to beg,\" Amara said.\n\n\"You'd throw away your pride just for a foot rub? How high were those heels?\"\n\n\"Please? Pleasepleaseplease? Pretty please, ma'am?\"\n\nDani laughed. \"You're such a ham. Fine. Roll onto your stomach.\" Dani raised up to allow Amara to shift. Amara moaned in anticipation and flipped over.\n\nDani spun around so she faced the foot of the bed, grabbed Amara's left foot and started rubbing the sole and instep. \"I hope you realize I don't do this for just anyone.\"\n\n\"I'm glad I have a special place in your heart.\"\n\n\"More than you can imagine,\" Dani said.\n\n\"Aww. That's sweet. I love you too.\"\n\n\"That's the foot rub talking.\"\n\n\"Mmm. You can go a bit harder. \n\nDani obliged, digging her thumbs in and pulling an appreciative groan out of Amara.\n\n\"So...how man people are going to be at this thing tomorrow?\" Dani asked, returning to the topic that had weighed on her mind for most of the week. She tried to keep her tone light and conversational.\n\n\"Could be as many as twenty. Ten members of the executive team, plus spouses.\"\n\n\"Anyone I should steer clear of?\"\n\n\"They're all nice people, I promise.\"\n\nDani left it at that, rather than ruin a relaxing evening with too many questions. One way or the other, it would all be over by tomorrow night, and then she could relax.\n\nDani lapsed into silence and focused on the massage. By the time she'd finished the left foot and moved on to the right one she could hear the deep, regular breathing of Amara sleeping. \n\n**\n\n\"How are you doing?\" Amara asked, glancing over at Dani in the passenger seat.\n\n\"Huh? Oh...fine. Why do you ask?\" \n\nThe two of them were on the way to Fiddleheads to meet the rest of Amara's senior team. Amara was in a black-and-floral print cocktail dress that showed just enough skin to be interesting. \n\nDani, on the other hand, worried she was going to cold-sweat all the way through her royal blue halter dress. She'd put the antiperspirant on extra-thick but even so her skin felt moist, clammy and gross from head to toe. She fussed with her dress, picking at tiny flecks of lint.\n\n\"You sound like you're hyper-ventilating,\" Amara said, then rested a hand on Dani's reassuringly. \"You're ice-cold!\"\n\nDani realized it was true and tried to slow her breathing down. It was hard to get enough air.\n\n\"I'm fine,\" Dani repeated. \"Just, you know, excited. How about you? Ready for the big night?\"\n\nAmara squeezed Dani's hand. \"I'm looking forward to spending the evening with you.\"\n\n\"Yeah. Dinner and drinks. A first for us. Kind of like a real date,\" Dani said with a halfhearted smile. \n\nShe didn't want to ruin the evening for Amara by complaining or making a big fuss. This was an important get-together. Amara's boss and co-workers would be there. Amara would be judged on everything Dani said and did. Dani wiped the sweat off her top lip. At this rate she'd be leaving salt stains on the car seat!\n\n\"I hadn't thought of that. I guess we've never been out without Anne. This is our first childless outing together.\"\n\nDani nodded, then continued to obsessively rid her dress of barely-visible lint.\n\n\"Dani?\"\n\n\"Yeah?\"\n\n\"We can cancel. If you're really not into it, I can call ahead and tell them-\"\n\n\"No! No, no. I'm fine. I'm good. We're going. Just keep driving.\" \n\nCanceling on such short notice would make Amara look unreliable. And it was an important team-building exercise - Amara needed to be there, to show she was part of the team. It was too late to back out - they were locked in. Dani took a deep breath and let it out slowly. Just a few hours. She could hold it together for a few hours!\n\n\"I've never seen you like this.\"\n\n\"I'm fine, really. Totally fine.\" Dani tried a bigger smile, and squeezed Amara's hand in response. \"I mean, just dinner and drinks, right? What could possibly go wrong?\"\n\n\"Just don't have a stroke before we get to the restaurant,\" Amara said, and the tease in her voice was strangely welcome. \n\nDani's smile became stronger. \"I'll wait till after we're seated.\"\n\n\"It's bad manners to die before the appetizers arrive.\"\n\n\"I'm not making any promises,\" Dani said. \n\n**\n\n\"Larry, this is Dani, my partner. Dani, meet Larry Welland, CEO.\"\n\nAmara's boss extended his hand. Dani rubbed her sweaty palm against her thigh to dry it off, then accepted the handshake. \"It's a real honour to meet you, Mr. Welland,\" she said, then immediately regretted her choice of words. He was Amara's boss, not the Pope!\n\nLarry raised an eyebrow. \"An honour?\" He looked at Amara. \"We need to hire this woman right away.\"\n\nAmara grinned at Larry. \"Better not. She'd be running the place inside of a month.\"\n\nLarry chuckled. \"Well, a real pleasure to meet you, Dani. And please call me Larry.\" He gave her a disarming smile, then moved off to the bar to shake some more hands. \n\nDani breathed an audible sigh of relief. She hadn't embarrassed herself - or Amara - too much. And Larry seemed like a pretty easy-going guy, although Dani figured he didn't get to his high-and-mighty position by being TOO nice. She would stay on her toes, just in case.\n\n\"Let me get you a drink,\" Amara said, resting her hand on Dani's shoulder from behind. \"They have a lovely house white here. Interested?\"\n\n\"Maybe just soda water for me,\" Dani said. This would be the worst possible time to get sloppy!\n\nAmara joined her boss at the bar and Dani scanned the area for a quiet corner where she could keep a low profile until dinner. Fiddleheads was half-restaurant, half-cocktail club. There was a bar with a lounge area for mingling, and the tables and chairs for eating ringed the lounge. There was no background music but the lounge area buzzed with the chatter of dozens of people. The whole place oozed money and class.\n\nAnd then she heard it: an obnoxious laugh that rose above the din, and it caused Dani's blood to run cold in her veins. It didn't take long to locate the source of the noise - a big, middle-aged woman in a bright pink, sequinned dress and a plunging neckline drinking a margarita and laughing with three other women. \n\nIt was Reena. Reena Marks. No-filter, drinks-too-much, says-anything Reena Marks. Ex-lover Reena Marks. Dani felt a trickle of sweat creep down the side of her face and she swiped at it with her wrist. Her hands were shaking. How could she be sweating when her skin felt so cold? ",
        "Fiddleheads was in Reena's part of town. It was Friday night. Dani cursed herself for not seeing the danger in advance, then cursed her rotten luck. This was a disaster.\n\nDani took a steadying breath and cast about for a hiding place. No way could Reena meet Amara, or Amara's co-workers. Reena said something embarrassing every time she opened her mouth. Dani was no prude, but Reena's act was too much even for her.\n\nAnother, more terrifying thought occurred: what if Reena was one of Amara's co-workers? Dani's stomach twisted and she felt a brief wave of nausea wash over her. She needed to get out of sight, now!\n\n\"And you must be Dani,\" said a man's voice to her left. She spun to see a forty-something man and woman bearing down on her, the man's hand already extended in greeting. He wore a suit and tie and she was in a black dress.\n\nDani dried her palm again and shook his hand, trying to damp down the rising anxiety and match the relaxed smile the man flashed her. \"Yes...uh...Dani Harrison. It's nice to meet you.\"\n\n\"Connor Perry. This is my wife Wendy.\" \n\nDani shook her hand too.\n\n\"I'm the director of I.T. My office is just down the hall from Amara's\"\n\nDani nodded while trying to think of something - anything - interesting to say. What on earth was 'I.T.', anyway? \n\n\"I guess...you've got a tough job,\" she said, figuring it would be safe enough. After all, most people had tough jobs, right?\n\n\"Ha! And your partner over there doesn't make it any easier. I hope she finishes the HRIS deployment soon. We're waiting to pull the trigger on her on-boarding changes but she's always up to her ass in alligators.\" \n\nHe laughed at his own joke. Dani supposed it was a joke, anyway, and added a belated chuckle of her own. She glanced over to the lounge, to make sure Reena hadn't moved. She hadn't - and it looked like she had a fresh drink.\n\n\"So what do you do?\" Wendy asked.\n\n\"Huh? Oh, I'm...mostly into childcare these days,\" Dani replied, hoping it didn't sound unimportant. \"How about you?\"\n\nWendy beamed. \"We're in the same business, then! I teach grade three and four at Mother Lucia's - it's out in Markham, maybe you've heard of it?\"\n\nDani shook her head and darted a quick glance in Amara's direction. She was still at the bar, entangled in a conversation with her boss. Dani was on her own for a while longer. Wendy just kept on talking.\n\n\"We're running a pilot project on peer mentoring - the first of its kind in the GTA. The idea is that we can improve learning outcomes in at-risk youth by pairing them with high achievers on a year-long basis...\" The woman went on like that on for some time, and Dani tried to nod and smile in the right places. Wendy was a teacher and Connor was a director of...something. Dani made a mental note in case she ever got cornered by them again.\n\n\"I see you've met the main reason my HRIS project was behind schedule,\" Amara said with a wry smile. She pressed a cold drink into Dani's hand and Dani drained half the glass as the rest of them laughed at Amara's comment. After a few minutes of banter between Amara and Connor, the other couple moved off.\n\n'What the hell is I.T.?\" Dani whispered to Amara.\n\n\"Connor handles all the computers and technology at the office,\" Amara whispered back, then gestured at Dani's drink. \"You're making short work of that soda. Want me to get you another one?\"\n\n\"No...I'm good. Maybe we could stay together and you could introduce me to the others?\" \n\nDani's anxiety approached panic levels as she realized how vastly out-classed she was by everyone there. She didn't even understand what the hell they were talking about most of the time! It reinforced how different Amara's world was from her own, and the impossible distance Dani would have to climb to raise herself up to Amara's level.\n\nDani took a few deep breaths and tried to get a grip. Her whole body felt wet and sticky. She quickly swiped her wrist over her sweaty top lip and forehead. She could handle this. She could do this. After all, she didn't need to fit in there, she just needed to get through the next couple of hours without humiliating Amara in front of her peers, and while avoiding Reena's eye. Surely she could accomplish that much, right? \n\nShe and Amara made the rounds, and Dani got introduced to the movers and players at Amara's company. Thankfully, Reena was not among them. Dani tried to remember names and jobs, but beyond that it was smile-and-nod, smile-and-nod. She tried to say as little as possible and to stick as close to Amara as she could, all while keeping a wary eye on the gaudy pink dress out in the lounge.\n\nAfter a far-too-long cocktail hour the server showed them to their seats. Dani hung back and sat down last. There were sixteen people in total, and Dani didn't want to get trapped in the middle of the group. She ended up on the end, with Amara beside her and Roy Something-or-other, the chief financial officer, across the table. Dani tried to summon up all the knowledge she had on financial stuff but came up dry. She hoped the conversation would be sparse.\n\nShe opened the menu at looked for familiar words. Chicken...potato...steak...salad...there were some words she recognized, but they were surrounded by even more words she didn't. \n\n\"What looks good, Dani?\" Roy asked with an engaging smile.\n\n\"Uh...\" Dani's heart was pounding so hard she could hear it in her ears, \"I guess...it depends. Are you a chicken guy or a steak guy?\"\n\n\"Neither. Fully vegan, and have been since my bypass a few years ago.\"\n\n\"Oh...wow. I hope you're doing okay now?\" \n\n\"Yes. I'm glad I stayed away from the vein graft. Let me tell you, Dani, ALWAYS get a second opinion.\"\n\nDani smiled weakly, then buried her nose in her incomprehensible menu. \n\n\"I recommend the Shepherd's pie,\" Amara said to Dani, and Dani appreciated the offhand tone her partner used - it didn't draw attention to the fact that Dani was too stupid to even read a damn menu. \n\n\"Yeah, that sounds perfect.\" \n\nIt took a long time but the server came around to take their order, and then Dani spent the next half-hour trying not to look like an idiot in front of the second-most powerful man in Amara's company. \n\nReena still hadn't moved from the lounge. She was downing yet another drink.\n\n\"So you're into childcare?\" Roy asked, then fished his phone out of his jacket pocket. \"Here are my two girls. This was taken at their gymnastics competition. They're the two on the left.\" Roy passed the phone over and Dani made a show of looking at two of the ten identically-dressed girls.\n\n\"Cute kids,\" Dani said, then fussed with her own phone and handed it to Roy. \"This is Anne on the beach at English Bay, in Vancouver. It was her first sand castle.\" Despite the crushing stress, Dani managed a smile at the memory. It had been a disaster of a sand castle, but Anne had been so proud of it.\n\n\"Aww. What an angel! Let me show you some pictures of our last trip out west. We started in Portland...\" Roy launched into a minute-by-minute replay of his two-week vacation, complete with pictures, and Dani was more than happy to listen. As long as Roy was talking about himself, Dani didn't have to worry about making Amara look bad. Maybe, somehow, she'd survive the evening after all?\n\nThe meal came and that was fine, too. If Dani's mouth was full she didn't have to talk. The Shepherd's pie was good, as Amara had said. Roy continued to talk in between mouthfuls; he was down to the Hoover Dam now, having just overcome a bad fish taco experience in Boulder City. He'd be hard-pressed to make it to El Paso by the end of the meal, at the rate he was going...\n\nAnd then Larry clinked his wine glass with his fork and stood up and made a speech, thanking everyone for coming, talking about what a great team he had, how nice it was to get to know everyone. Everyone drank a toast. Dani was on the home stretch. Dessert, coffee, then she and Amara could...\n\n\"Well, hello again, stranger,\" said...what was her name? Wendy? The woman came up beside her and thrust a cell phone in her direction. \"I know you're an educator too, so I wanted to show you this article and get your thoughts.\" \n\nDani looked at the screen. Words. Hundreds of words. Dani cast a desperate glance at Amara but she was engaged in a conversation with someone further down the table. \n\n\"When I read it, I was outraged. I was thinking we could form an advocacy group, maybe start a letter-writing campaign. What do you think?\" Wendy said.\n\nNothing in the headline was familiar. Dani tried to think of the words to stall, or to politely put the woman off, but it was so hard to think. Stress swelled up and threatened to consume her. The nausea returned and she drew a deep breath. Keep it together...keep it together. Hoping to buy a few seconds, Dani shoveled another fork-full of Shepherd's pie into her mouth.\n\n\"Dani? Is that you, honey-buns?\"\n\nFuck - she'd lost track of Reena! The woman's loud voice made Dani's insides turn to ice. Her eyes went wide. Her throat closed off, making it an effort to swallow the mouthful she'd been working on. She felt her chest constrict - was she having a heart attack? Please, yes...let it be a heart attack. A heart attack would be better. \n\n\"It IS you!\" Reena's alcohol-fueled voice went louder still. Dani was sure it could be heard clear across the restaurant.\n\nDani looked up at the older woman, a terrifying vision in pink. Reena walked up beside Wendy and slapped Dani's shoulder roughly.\n\n\"Well look at you, dressed up all pretty! Finally grew out of your tomboy phase!\" She laughed at her own joke. \"You never call anymore! Don't tell me I scared you off.\"\n\nDani tried to think of what to say, how to salvage the situation in front of Amara and her boss, but her brain had locked up. Conversation at their table had stopped and every eye was on her, but all she could do was stare up at Reena as dread washed over her. \n\n\"You're so quiet now - that's quite a change as well!\" Reena said with a loud guffaw. \n\n\"Uh...hi, Reena. Yeah. Well, I...I met someone, and...uh...\"\n\n\"Oh?\" Reena's gaze fell on Amara. Dani closed her eyes. It was a nightmare.\n\n\"Amara Feldman.\" Dani could feel Amara standing, shaking Reena's hand.\n\n\"Ah, so you're the one who managed to rope my little filly. Can't say I blame you...she's quite a firecracker.\"\n\nDani cringed. What would they be saying at the office on Monday? What gossip would be spreading about her and Amara? Everyone would get a good laugh about how Amara's partner had made a big scene at dinner. A laugh at Amara's expense.\n\n\"She's a wonderful woman, yes,\" Amara said. How could she sound so calm when the world was ending?\n\n\"We go back a long way,\" Reena said. \"Why, when I met her-\"\n\nDani stood suddenly, jostling the table with her leg and spilling Roy's beer. It was over. So over. She needed to get out before she started screaming or crying or...something. \"I need to be excused,\" she mumbled, then threw Wendy's phone onto the table and ran for the washroom.\n\nIt took a super-human effort but she managed to hold it together until she'd locked herself in a stall and sat down, fully-clothed, on the toilet seat. Only then did she start sobbing. Leave it to Reena to deal the death blow to an already-terrible evening.\n\nShe'd been an idiot to think it could ever work with Amara. If her life had taught her anything it was that someone like Amara was too far out of her league. Hard work could mask a lot of flaws, but not the biggest one of all.\n\nShe was unworthy. \n\nUneducated, poor, uncultured, unrefined. No family to vouch for her. Dani knew there was no reason to take her seriously or think she was worthy of a long-term commitment. Time and again she'd find romance, only to have it turn to ash and flake away. Dani was a throw-away girlfriend. A fling. A bit of fun to pass the time. \n\nShe wasn't good enough for Amara. She never would be. If there had been any question, tonight had settled the matter.\n\nShe heard the washroom door open and someone enter. Please, God, not Reena.\n\n\"Dani?\" It was Amara, sounding concerned.\n\nDani sighed and sniffed, wiping her nose on the back of her hand. \"I'm fine, I'm fine. Just...not feeling good. I'll be fine.\" She bent forward and put her face in her hands, trying to stifle another sob.\n\nAmara's footsteps stopped outside Dani's stall.\n\n\"Dani, open the door.\"\n\n\"Just...go back to your people. Your boss and those guys. I'm not feeling well. I'm...just going to take a cab back to the apartment. I'll be fine.\"\n\nThere was a long silence.\n\n\"I'm sorry,\" Amara said. \"I knew you didn't want to come and I forced you into it. I'm really sorry. Please open the door?\"\n\n\"No...it wasn't you! It's me. I'm just...not good enough. I'm too fucking stupid to make it through a simple dinner-\"\n\n\"You're NOT stupid.\"\n\nDani sniffed again. \"Maybe...I could just go back to being your housekeeper? And I could look after Anne? I'm not a good partner for you.\"\n\nAnother silence. \"Are you saying you don't want to be my partner anymore?\" Amara's voice was quiet.\n\nA sob broke through Dani's self-control and she wiped her nose again. \"Partners are equals. I'll never be your equal. I'll never be good enough for someone like you. No matter how hard I work I'll never get up to your level.\"\n\n\"PLEASE open the door.\"\n\n\"I tried my best. I did everything I could. I'd do anything for you and Anne.\" Dani unrolled some bathroom tissue and tried to clean up her face. \n\n\"Look, let's go home now. Together. We need to talk about this.\"\n\n\"No...please, please, please just go back out to the table. I don't want to ruin your office party. I hate that I made you look bad in front of everyone. Just...please go back out.\"\n\nThere was more silence but Amara didn't move. \n\n\"You didn't make me look bad, and you didn't ruin anything,\" Amara said. \"Come on, open the door. Let's talk.\"\n\n\"Please, just go back and-\"\n\n\"No. I love you and I'm not leaving here without you. I'm not going anywhere. Not until you open the door.\"\n\nDani sighed and took some more time to put her face in order. Somehow she'd managed to make a complete shit-show of the entire evening. She'd humiliated Amara, maybe hurt her career. She'd proven beyond any doubt that she was unworthy of being Amara's partner - she couldn't cope in a social situation around Amara's peers. Dani wasn't sure if she could face the other woman after what had happened. But since Amara wouldn't leave...\n\nDani unlocked the door to the stall.\n\nAmara was in front of her immediately, kneeling on the filthy floor in her beautiful dress, stroking Dani's hair, trying to make eye contact. Dani put her face in her hands and wept. She didn't want to hear the soft, supportive words that Amara was murmuring; false hope would only make the inevitable breakup that much more painful.\n\nBut Amara didn't stop. Didn't leave. And the words just kept coming. I love you. You're important. Anne loves you. I need you. You're part of me. I want you with me. You're family. Come home. \n\nBit by bit, the words chipped away at the despair and hopelessness. Cracks started to form in Dani's stubborn doubts.\n\n\"Hey...let's go. I'll drive us home. We'll make some tea and sit down and have a talk,\" Amara said at last. \n\nDani breathed a miserable sigh, then nodded. Amara helped her to her feet, then out to the lobby of the restaurant. After quickly retrieving Dani's purse and their jackets from the table, Amara got them in the car and headed for home.\n\n**\n\nA hot shower made Dani feel better, on the outside at least. Better to be clean than clammy and sticky. She was in her nightshirt, huddled on one side of the couch, knees drawn up to her chest as she waited for Amara to bring the tea. And then would come 'the talk'.\n\nShe'd had 'the talk' many times before, and was already mapping out the future in her mind. There were a few places she could crash until she found her own accommodations. She could get her job back at Marty's pizza - he was always looking for chefs and drivers. She'd saved a lot of money since she'd been working for Amara; that would keep her afloat for several weeks, if she was smart about it. So it wasn't like she'd be starting over from scratch, exactly.\n\n\"Here,\" Amara said, sliding a mug into Dani's hands. Chamomile tea. Amara had seen Elaine out and put on a plush, white bathrobe while Dani had been in the shower. She looked alluring even in that.\n\n\"Thanks.\"\n\nAmara sat sideways on the couch, facing Dani, so close they were almost touching. There was quiet in the apartment. Dani tested the tea with her lips but it was too hot to drink. Finally Amara opened her mouth to speak. Dani braced herself.\n\n\"I love you. You're an incredible partner. Whatever issues are bothering you, we can overcome. I want to hear you say you're committed to working things out with me. The two of us, together.\"\n\nDani was stunned. 'The talk' never started this way. She looked up at Amara in disbelief. Amara met her gaze and didn't back off. For a while Dani couldn't answer, torn between hope and doubt. Was it possible she was getting a second chance? \n\nDani nodded. \"I'm committed. I promise I'll work harder. I won't let you down again.\"\n\n\"Okay, let's start there,\" Amara reached out and stroked her fingertips along the back of Dani's neck. \"First, you have never let me down. Ever. Whatever my expectations were, you've always exceeded them.\"\n\nDani shook her head. \"I know I haven't been-\"\n\n\"Wait. I need you to acknowledge what I just said. I need to know you understood me.\" Amara's voice was gentle but authoritative. Dani had never heard Amara speak like that before.\n\nCaught off guard by the tone, Dani paused, then started again. \"Okay. You said I've never let you down, and that I...exceeded your expectations.\"\n\nSomehow, saying the words out loud made Dani feel a little more confident.\n\n\"Thank you,\" Amara said, then was silent, waiting.\n\n\"It's just, you're...rich and educated and professional. You probably want a partner with the same qualities instead of some idiot who can't read and who worked at a pizza joint. There's a lot of pressure for me to raise my game, and...I'm not sure I'll ever be good enough.\"\n\nDani felt close to tears at the admission. She'd cried so much at the restaurant and in the car on the way home that she doubted there were any tears left.\n\n\"So you think I won't want you if you're less educated or don't have as much money or can't read, and that's causing you a lot of stress. Am I understanding that right?\"\n\n\"Yeah.\" Dani was glad that she was making herself clear to the other woman.\n\nAmara smiled. \"But...I already fell in love with you, didn't I? Just as you are now. You're not wealthy or educated, true, but you're kind and affectionate and honest. And supportive - you've helped me through some brutal patches the last few months. You're gentle and attentive and patient...and you're getting to be a damn good parent for Anne. Don't get me started on how sexy you are!\" Amara finished with a wink.\n\nThe wink brought a half-smile from Dani. She started to feel stronger.\n\n\"You're the best thing that ever happened to me,\" Dani said. \"I'm really nervous about screwing this up. My track record isn't so good.\"\n\n\"What would help you be less nervous?\"\n\nDani thought about the question and came up with a few options, but one rose above the rest.\n\n\"I want to learn to read. I'd feel like less of a moron if I didn't need help to read a picture book to Anne or order from a restaurant menu.\"\n\n\"Dani, would you do me a favour?\" Amara's tone became serious again.\n\n\"What?\"\n\n\"It bothers me to hear you calling yourself stupid, or an idiot or a moron. I don't think that way about you at all. Please stop saying those things?\"\n\nDani tested the tea again, then took a sip and nodded.\n\n\"Yeah, okay. Sorry about that.\"",
        "Amara smiled again. \"As for the reading, let's get you enrolled in those adult literacy classes you mentioned.\"\n\n\"But...we agreed to wait until your work stuff was done so you didn't have to miss any time.\"\n\n\"I didn't realize how much this was affecting you. I'll find some way to accommodate the classes,\" Amara said.\n\n\"No, hold on. That's not what I want. I'm here to make things easier for you, not more of an inconvenience. We agreed to wait, so I'll wait.\"\n\nAmara was quiet as she considered. \"I could teach you. Would that work?\"\n\n\"You're awfully busy.\"\n\n\"There's time in the evenings.\"\n\n\"That's for you to relax,\" Dani said.\n\n\"Then I'll relax while I teach you to read.\"\n\nDani considered, then nodded. \"Maybe that would work.\"\n\n\"Or you could move my bedtime from ten to eleven. Then I could relax AND teach you to read,\" Amara gave a sly smile.\n\n\"No way. Eight hours of sleep every weeknight, young lady.\"\n\n\"So bossy.\" Amara leaned over and kissed Dani's ear, then paused with her lips close. \"I love you,\" she whispered.\n\n\"Love you back,\" Dani said, turning her head to return the kiss. \"Sorry about melting down at the restaurant.\"\n\n\"Sorry for not being a better listener and dragging you there against your will.\"\n\nDani smiled, feeling better than she'd felt in a long time. \"Well, at least we know there's no way Larry will ever invite me to another office party.\"\n\n\"Funny you should say that,\" Amara said. \"The office Christmas party is a 'plus one' affair too. So if you're not busy towards the end of December...\"\n\n\"Oh, God.\"\n\n\"We can invite Reena, if you like. Provided she agrees not to 'rope my little filly',\" Amara said. She ran her hands through Dani's damp hair, and the contact felt reassuring.\n\n\"I'm sure she'd have a dress you could wear,\" Dani countered. \"The pink one was pretty conservative, by her standards.\"\n\nAmara gathered Dani into a tight hug and Dani accepted it gratefully. Pressed against her partner's soft robe and warm body, Dani felt suddenly sleepy. It had been an emotionally exhausting night.\n\n\"Hey,\" Amara said softly, stroking Dani's hair.\n\n\"Yeah?\"\n\n\"We ARE equals, okay? Remember that.\"\n\n\"That's going to take some getting used to.\"\n\n\"I'll always be here to remind you,\" Amara said, then kissed Dani's forehead.\n\n**\n\nEpilogue\n\nDani slid the bright green head of the phallus between Amara's pussy lips, nestling it against the slippery entrance to her vagina. She paused to lower her head and give her partner's swollen clitoris a few long licks. The contact pulled an eager moan from Amara.\n\n\"Ready?\" Dani asked, looking up the length of Amara's body into her beautiful brown eyes.\n\n\"I've been ready for ages,\" Amara said, her voice husky with need. She opened her legs wider in invitation. \"You're an awful tease, you know that?\"\n\nDani's smile was wicked. \"Well I haven't heard the magic word.\"\n\n\"Please!\" It was half-way between a demand and a plea.\n\n\"Okay. I want to see your eyes.\" \n\nDani began to ease the heated shaft into Amara's pussy; slowly, gently penetrating her. Amara's eyes widened and she gasped, her mouth open. The toy was a little too thick, but Amara was wet and ready.\n\nIt had quickly become one of Dani's favourite parts of their lovemaking - the moment where she gave Amara the warm, full penetration she wanted. The dreamy, far-away look in her eyes as the thick sex toy opened and stretched her, the sound of her heavy breathing, the scent and taste of her juices...Dani immersed herself in their shared pleasure. \n\nWhen the shaft was in most of the way Dani dipped down again for another lick over her clit. Amara's hips lifted off the bed, seeking more contact. The licking continued, slowly, lovingly - a delicious torment. \n\n\"That feels incredible,\" Amara breathed.\n\n\"Don't thank me. Thank Jade Wang,\" Dani said between licks.\n\nThe comment drew a giggle. \"Stop it! You're going to ruin the mood.\"\n\nDani chuckled. \"You mean we'd have to start over again from the beginning? I can think of worse things.\"\n\n\"Easy for you to say! You've been teasing me for hours...I can't wait much longer.\"\n\n\"You big baby - it's been twenty minutes, tops.\"\n\n\"I didn't make YOU wait this long.\"\n\n\"Fine, fine.\" Dani resumed licking, making the strokes faster and applying more pressure with her tongue. At the same time, she grabbed the base of the sex toy and began a slow pull-and-push. After six months of practice, Dani knew exactly how Amara liked it. Not fast or rough; she wanted it gentle, smooth and skillful. Dani was more than happy to deliver.\n\n\"Oh, just like that...don't stop...PLEASE don't stop...\"\n\nStill licking, Dani slid her one free hand up to Amara's stomach and rubbed it, delighting in the smooth skin under her palm and knowing that the heat and friction would add to Amara's pleasure, too.\n\n\"I love you...\" Amara said, her voice a harsh whisper. She was there.\n\n\"Mmm. Show me. Let me see.\"\n\nDani locked eyes with her lover and Amara held her gaze. As her orgasm hit, Amara's eyes went even wider and lost focus, no longer seeing, her attention turned inward at the spasms and waves of pleasure Dani was coaxing from her overheated body. \n\nIt was these moments when Dani was most awed the beauty and power of her lover; naked, sweaty, disheveled and primal. Beautiful. Each time Amara came, Dani fell further under her spell. She loved this woman like no other, and wanted nothing more than her eternal happiness, fulfillment and pleasure.\n\n**\n\nAfterwards they lingered in bed, tangled in the sheets, naked bodies pressed together. It was Saturday and Anne was with her father, so there was no pressing need to begin the day.\n\n\"Brunch?\" Amara asked. Her fingers were tracing random patterns over Dani's bare back.\n\n\"I can make pancakes.\"\n\n\"Or we could hit Dino's. I've got a craving for their Cobb salad.\"\n\n\"Dino's, then,\" Dani said.\n\n\"You've got homework?\" \n\nDani sighed. \"I have to read a newspaper article and summarize the main ideas.\"\n\n\"Do you have the article picked out?\"\n\n\"Yeah. It's about a hit-and-run on Bloor.\"\n\n\"Need any help?\"\n\nDani nuzzled her neck and delivered a soft kiss. Amara was always on top of her regarding her schooling. Dani was grateful for the nagging - it was comforting to know her partner refused to let her fail. Amara was a bottomless well of support for Dani's self-improvement efforts. \n\n\"Nah - I think I've got it covered.\"\n\nThey were silent for a few minutes, half-dozing.\n\n\"Sounds windy outside,\" Amara said.\n\n\"Well...February in Toronto.\"\n\n\"It's warm in bed. No reason we have to get up soon, right?\"\n\nDani pressed another kiss into Amara's neck. \"Nope. We've got all the time in the world.\"\n\nThe End."
    ],
    "authorname": "Koot",
    "tags": [
        "consensual",
        "romance",
        "lesbian sex",
        "sex toys",
        "oral sex",
        "love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/an-indispensable-woman-ch-05"
}