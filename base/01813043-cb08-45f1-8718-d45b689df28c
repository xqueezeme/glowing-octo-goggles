{
    "title": "The Shack: The Milk Run",
    "pages": [
        "This is one of the \"Tales from the Shack.\" It is in LW in order to keep the series together. We really, really appreciate the Admin allowing us to keep these tales together in the same category. This story is where \"Needles & Delaney\" and \"The Shack\" series proper intersect, but it can stand on its own. Thanks to Chasten, SleeperyJim, sbrooks103x, and Bebop03 for the beta reads and editing. Special thanks to Doc for the medical advice and guidance. There are many others who I owe thanks to for this -- it has been under construction for at least three years and I have frankly lost track of all the advice I've received. There are some who prefer not to be named; you know who you are; you are very much appreciated.\n\nRun, Maria, Run\n\n*****\n\nI paused for a moment, trying to lean casually against the stone-tiled column, watching the holiday crowd as carefully as I could without being obvious. Clueless, they streamed by me intent on their shopping, flavored coffees, and apparently endless streams of text messages.\n\nI made it another six feet and managed to sit at one of the mall food court tables. I pulled a leftover soda cup in front of me so it'd look like I had a reason to sit here. Any reason other than finding a quiet place to bleed to death. As painful as it was, I kept my purse strap pulled as tight against me as possible, keeping what pressure I could on it. The blood was invisible on my black wool coat, but it wouldn't be for long if I didn't keep the pressure on the bullet wound. I didn't need it to soak through the coat; this wouldn't get any easier if I started to leave a blood trail.\n\nEverything had gone wrong, but I'd left at least one of them dead for sure -- probably two.\n\nSomebody must have forgotten I'd been a field agent for years before climbing the ladder. I'd been a damn good one. I'd left eight perps dead in my career, and now it looked like I might have added two federal agents.\n\nIf they really were FBI, they'd been dirty. They had to have been. Agents don't usually carry armor piercing ammo, and they don't start shooting without identifying themselves.\n\nCertainly not at a deputy director of the FBI.\n\nI fumbled out the cheap pay-by-the-minute smartphone I'd managed to buy at the kiosk. I didn't think the guy had really bought my story about a computer crash at my bank, but two hundred dollars in cash had gotten me an anonymous phone and three hours of time. He'd probably report it up his chain, and I didn't blame him. He could sense something was off, and I doubted an obviously recent immigrant from the Middle East wanted to get caught up in anything suspicious.\n\nLet him call; it didn't matter. The three hours of talk time I'd purchased were probably too much. I doubted I was going to live to use even half of it.\n\nI fumbled with my purse, pulling out a scrap of a business card, then punched the number into the phone.\n\n\"K2 Executive Services.\" A curt clipped woman's voice.\n\nI kept my voice as calm and level as possible. \"I need help. I'm hurt and...\"\n\nA click sounded as the phone cut off. Bitch. I slumped and closed my eyes. Damn it. I couldn't even think of where to go next. This was probably it. I was going to bleed out in front of a goddamn Panda Wok in a mall food court.\n\nMy phone buzzed in my hand; a text from an unknown number. All it had was an internet link.\n\nNothing to lose; I went ahead and pressed it, and the phone promptly replied with \"downloading app.\" A long few seconds later, an icon appeared on the phone. An icon of a stylized \"K2.\"\n\nI pressed it, and the phone dialed.\n\n\"K2 Executive Services.\" The voice sounded muffled and odd, like the speaker was under water. A scrambler code of some kind. \"Please hold your phone at arm's length and look into the screen.\"\n\nI followed the instructions and watched the screen pulse as the phone took my picture. It flashed the image on the screen for a moment. Not particularly flattering. My complexion was pretty gray, but then that was probably shock and blood loss. Almost instantly, the woman on the other end spoke again. \"Name, please.\"\n\n\"Maria Hawthorne.\"\n\nThere was a slight pause. I got the distinct and uncomfortable impression she was checking my credit score. \"Your operational status?\"\n\n\"Unarmed, seriously injured.\"\n\n\"What is the nature of your injury?\"\n\n\"Shot in the upper right chest, three hours ago, I'm losing blood, and it's getting hard to breathe...\"\n\n\"Please hold.\"\n\nThe damn thing actually began playing \"hold\" music. \"The Girl from Ipanema\" of all damn things. I stared at the phone in disbelief for a moment.\n\nThen the voice came back. \"Thank you for waiting. We have no standard assets in the area; I had to negotiate a subcontract with an independent contractor. Move to the south entrance of the mall and wait near the women's restroom. The contractor will probably take thirty minutes to get there.\"\n\n\"I'm not sure I'll be conscious in thirty minutes.\"\n\n\"The contractor will arrange for discreet medical aid if you are still alive when they arrive at your location.\"\n\nThe line clicked with grim finality.\n\nI pushed myself off the table and began to walk as carefully as I could. Trying to look casual, look like another busy holiday shopper. The south entrance was over a quarter mile away through the mall.\n\nAs I turned out of the food court, I glanced back and saw a crimson smear of my blood on the orange chair. A frazzled woman in a bright red coat with a ridiculous number of plastic store bags plopped into the chair without looking at it, just glad to be able to get off her feet.\n\nClothing stores, shoe stores, and restaurants crawled by as I worked my way along the edge of the crowds.\n\nIt took nearly twenty minutes, and I almost made it.\n\nI could see the sign for the restroom and was almost shaking with relief when I felt a hand grip my right elbow tightly. A couple herded four kids in bulky, bright coats past me, using promises of hot chocolate to keep them in line.\n\n\"Keep moving, Director Hawthorne.\" There was an ever-so-slight accent. Eastern Europe, maybe. Maybe Russian.\n\nI looked over at him. Very nice black suit, black wool overcoat; even if I ignored the accent, he didn't feel like FBI. He let me see he was holding a subcompact automatic on me from inside his coat. It took me a moment, but then I remembered seeing him during the ambush outside my apartment. \"It's Deputy Director.\"\n\n\"Very well. Deputy Director. Please keep moving. I'd rather not do this here in front of all these children, but I will if you force me to.\" He fell silent as we passed a teenage girl, pipe-cleaner skinny in a dark coat with a bright purple backpack, hair tucked up under a light purple crew cap, obliviously texting away on her phone.\n\n\"You guys caught up faster than I thought you would.\"\n\n\"Facial recognition programs in the security software for the bridge cameras. We emplaced it in this area months ago for another operation. It was blind luck that it was still in place, and I just happened to be moving in this direction. I found your vehicle in the parking lot.\"\n\nI watched another family struggle past. The two kids were just out of toddler stage and had clearly reached breaking point. Even if I were in better shape and armed, there were way too many innocent bystanders around. \"Lucky me.\"\n\nHe shrugged eloquently. \"Those are the breaks.\"\n\nHe seemed awful polite for a contract killer.\n\nI was just too weak even to begin to fight. He guided me into the utility hallway opposite the bathroom, and we walked down it until we reached a corner. I was out of time. He pushed me around the corner and brought his gun out.\n\nA sound like a dull, heavy bell rang through the tile-lined corridor. He took a single staggering step forward then collapsed in a heap.\n\nThe girl in the light purple crew cap stood behind him, holding an almost comically large crescent wrench, poised for another swing. Face expressionless, she looked at me, then down at him, easily balancing the wrench across her skinny shoulder. Crouching, she checked his breathing and pupil dilation mechanically, then picked up the gun. She cleared it with casual proficiency, tucking it and her wrench into her backpack. Almost as an afterthought, she pulled his wallet from his coat and stuck it in a silvery envelope.\n\nA moment later, she pulled the battery from his cell phone and dropped it into a trash can; then the phone joined his wallet in the envelope.\n\nShe stood and held her hand out with a stony expression. \"Come with me if you want to live.\"\n\nI just stared at her until she smirked, eyes glittering. \"Fuck, I've always wanted to say that. Let's see the wound. Anterior right chest, right?\"\n\n\"Yeah.\" I hated that I could hear the weakness in my voice. I managed to pull my coat off and fumbled my shirt and the top strap of my not-so-bulletproof vest open.\n\nShe reached into her backpack and pulled out a Kotex pad package, tearing it open and pressing the pad against the bullet hole. \"Hold this.\"\n\nI held it in position while she put another pad on top of it and then pulled out duct tape and taped them down tightly. \"This will have to do for now. We don't have much time. I heard what he said; they probably have others on the way, and they'll be sweeping the mall any minute. My K2 contact says she already has someone taking those cameras off-line.\" She gestured to a Bluetooth earpiece almost hidden under her cap.\n\nShe pulled a large, flowered wool shawl out of her backpack along with a truly awful women's hat that I would never have chosen to wear and handed them to me. \"Let's change your profile a bit. Make sure you cover up the bloody shirt.\"\n\nOut of the backpack, she pulled out a couple of those large \"eco-friendly\" cloth shopping bags; both our coats and her backpack and crew cap were stuffed quickly into them. She finally handed me a pair of thick-framed glasses before shrugging on a red fleece jacket and taking my arm. \"Keep your face down and try to look like a grandma.\"\n\nThat wasn't exactly hard given the circumstances; it was easier to walk slightly hunched over. She chatted loudly and excitedly all the way out to the parking lot. Something about being late to pick me up because she'd seen a small black and white cat in her school parking lot that might be hurt and looked all over for it. All the while, I could see her hyper-alert eyes surreptitiously scanning every shadow. I studied her as we walked. Something about her was weirdly familiar, but I couldn't quite put my finger on it.\n\nOut in the parking lot, she led me to a dull black battered sports car in a wheelchair spot. It even had a \"Disabled Parking\" tag hanging from the mirror. I painfully maneuvered into the passenger seat and paused, drawing in a ragged breath of what felt like broken glass. She promptly reached over and began to snap me into a harness more suited for a fighter jet than a car.\n\nShe yanked a strap up between my legs and snapped it in with a slight smile and a soft chuckle. \"Easy there, just getting you strapped in.\"\n\nI waited until she'd buckled herself in. \"This is a Q car, isn't it?\"\n\nThe old term for a tactical vehicle disguised as a harmless civilian car didn't trip her up at all.\n\nShe gave a single nod and cranked the key. The powerplant rumbled awake with an evil, low growl. \"Looks are deceiving. Top of the line engine, top of the line everything. My Billy here is a fucking beast.\"\n\nShe touched the dash softely with a sad look, then glanced over at me. \"If anything goes down, get below the door frame. I have high thermal blast blanket and some light ceramic armor plate in the doors, panels, firewall, floors, and seat backs. Not perfect, but it's better than nothing.\"\n\nDespite her obvious fascination with the power of the car, she pulled out into the holiday traffic smoothly, slipping away from the mall quietly.\n\n\"You'll need to ditch the car as soon as you can...\"\n\n\"Don't sweat it; it'll be tucked away once I get you to the safe house, and the plates are fakes. It will look completely different the next time I take it out. Needles would be fucking pissed if I had to crush it. We've done a lot of work on this.\"\n\nShe shook her head irritably. \"It's the time, not the money.\"\n\nI felt a rush of relief. Needles. That was a name I recognized. Michael knew... had known him. He was associated with K2 somehow. Something about a salvage yard with a convenient car crusher.\n\n\"You work for Needles? Thank God.\"\n\n\"Yeah... He's not here right now. K2 called me in.\" She smoothly slipped the car down road after road, carefully checking for any surveillance. \"You could have trackers...\"\n\nDamn, it was good to be working with an experienced professional. I was impressed as hell at how she pulled off that teenager vibe. \"I found stick-on RFID trackers in the slide and grip of my service gun, so I had to ditch it. I bought new clothes and changed into them a few hours ago. New underwear, purse. Everything. Only thing left is the vest, and that just came out of the armory. It wasn't assigned to me; I pulled it off the shelf myself, and I never took it off. Unless they tagged every vest at the FBI, there's no chance it's hot.\"\n\nShe glanced at me. \"Shoes?\"\n\n\"Those too. Dropped everything in a dumpster in an alley.\"\n\n\"You better be clean. If this blows back on anyone, Needles will absolutely lose his fucking mind. You don't want that. Nobody wants that. That man has serious fucking anger issues.\"\n\nShe sure as hell sounded like she meant it, but she almost sounded proud of it at the same time.\n\n\"No chance.\"\n\n\"In the glove box, there's a bottle of Naprosyn. You better take a couple.\" She reached behind my seat and pulled out a bottle, shoving it into my hand. \"You need some pretty solid swallows of this.\"\n\nI looked at it. A pretty fancy whiskey bottle. Cask Strength. \"Seriously?\"\n\n\"I'm pretty fucking sure open container laws are the least of your problems right now. That should be some pretty good stuff. You wanna get some in you because they think you might have a collapsed lung and when we get where we're going... let's just say it's gonna hurt like fuck. You wanna take the edge off it.\"\n\nIt was pretty damn smooth. Drinking was tough, though. I just couldn't seem to get enough air.\n\nThe houses were starting to get fancier and farther apart as we drove. She glanced over at me. \"Any good?\"\n\n\"If I live through this, I'll hunt some of this down.\"\n\nHer grin flashed in the light from the dash. \"I knew it. That's why he kept it on the top shelf. Hundred dollar a bottle shit up there.\"\n\n\"Needles?\" I shifted and regretted it instantly, wincing in pain.\n\n\"No, Eric, Tiffany's husband.\"\n\n\"Tiffany?\"\n\nShe suddenly fell silent, then sighed. \"If you get rolled up, keep them out of it. They're not supposed to be part of this; I just don't have any other choices right now.\"\n\n\"I don't want to drag any innocent bystanders into this either.\" I had to pull air in with each breath.\n\n\"With that hole in your chest, we have to. But then we get out and get fucking gone.\" She turned down a genteel road lined with massive brick McMansions. \"We're almost there.\"\n\n\"Pretty upscale for a safe house. I was picturing seedy motel rooms or the backroom of some bar.\"\n\nShe pulled into a long drive, reaching up and pressing a button on a remote to open one door of the three-car garage. \"This isn't the safe house; we're just here to get you patched up. She makes me park inside when I visit so I don't bring down her property values.\"\n\nBefore I could ask, she was out of the car and helping me get out. She took me into the main house, into an enormous kitchen, all dark wood and gold-flecked stone counters. Pointing to a center island the size of an aircraft carrier, she gestured for me to get up on it, then handed me the bottle of whiskey again. \"I'll be back in a couple minutes.\"\n\nShe slipped up a broad set of marble stairs just outside the kitchen.\n\nI pulled off the shawl and folded it as best I could, trying to keep blood off the countertop. Probably due to whiskey and blood loss, it took me a moment to notice an intense discussion in hushed tones drifting down the stairs she had gone up. After a long few minutes, my rescuer came back down the stairs, leading a pretty, heavily pregnant woman in a silk nightgown and robe.\n\nThere was enough resemblance to explain why she was helping. They were obviously related.\n\nThe pregnant woman glanced at the operative, then looked over at me with pursed lips, narrowing her eyes. \"Get your vest and shirt off so I can see what we're dealing with here.\"\n\nShe started pulling a bunch of things out of drawers: hand towels, Glad Wrap. \"Get some sheets and a stack of towels out of the linen closet, and go get my emergency bag out of the Lexus.\" She looked at me. \"I'll be right back. Don't fall off.\"\n\nI managed to strip down, dropping the bloody vest to the floor with the shawl and shirt, then settled back onto the broad kitchen island.\n\nThat's when I knew I was dying. Black rimmed my vision as an invisible boulder crushed my chest. I tried to sit up but couldn't get enough air, enough strength, to push up. Clammy sweat was running off of me, and my heart felt like it was spinning out of control. Panicking, I weakly tried to push myself off the island.\n\nSuddenly I was sitting upright, the pregnant woman gripping my hair with surprising strength.\n\n\"That settles that.\"\n\nThe operative was staring at us from the door to the garage. \"What the hell, she's fucking... gray.\"\n\n\"My fault. I should have told her not to lie down.\" The woman shook her head. \"God, I hate this not-drinking-coffee stuff. I'm still waking up. Give me the stethoscope out of the bag.\" She examined the dressing for a second. \"That's good work, Delaney. Kind of full circle. Nurses in World War One used wound dressings as disposable sanitary pads.\"\n\nAt least I had the operative's name. Delaney. Delaney nodded, and I could see her repeating the doctor's words back to herself under her breath. I got the impression she was scribing that into her memory.\n\nTiffany listened to my breathing. \"There's no sound on the right. Sucking chest wound...pneumothorax -- that's a collapsed lung. No other wounds...no exit wound?\" She looked down at the vest. \"If it went through that vest...\"\n\nI patted her arm weakly. \"Ricochet off a stone wall.\"\n\nShe looked over at Delaney. \"I need two Vicodin out of the bottle on the left.\" She handed me the whiskey with the pills. \"Take these; this is going to hurt.\"\n\nPulling a sheet over the island, she laid out a water bottle, a package of plastic tubing, the Glad Wrap and several strips of duct tape. I had no idea what was about to happen, but her self-assurance was comforting. She sterilized the tubing with something from a very medical-looking bottle, then folded and snipped holes into the first six or seven inches of it. While she prepped, the operative made sure I stayed upright on the table. She glanced over at the woman, then took the whiskey out of my hand and took a tiny sip.\n\n\"Wow, that is the good stuff.\"\n\nThe woman spun and snatched the whiskey out of her hand. \"Give me that.\"\n\nI felt a moment of sudden horror as I realized what her reaction meant. \"She's not old enough to drink, is she?\"\n\n\"Hell, Delaney's not old enough to legally drive by herself.\"\n\nShe glared at the suddenly grinning girl who gave a careless shrug. \"I've had a license for over a year. It's just not in my real name.\"\n\n\"Shit.\" I reached my hand out. \"I'll take more of that whiskey.\"\n\n\"Hold on.\" She glanced up at the clock and handed me three more pills. \"It's been five minutes, so you're going to keep it down. Azithromycin and ciprofloxacin. I don't need to do all this work and have you die of infection.\" She shook her head. \"Save me a drink or two of that if you can.\"",
        "Delaney smirked at her. \"Sorry, Tiffany, you're preggers. No booze for you.\"\n\nTiffany gave me a weary smile as she sterilized the wound. \"Once this baby's born, I'm going on a week-long coffee and red wine binge. Eric can take care of the baby until I come out of it.\" She looked over at Delaney. \"And you can help babysit. Get up there and help her; just hold her still the best you can.\"\n\nOnce Delaney settled in behind me, Tiffany taped the unpunctured end of the plastic tubing down into the water bottle, then opened a pack of surgical tools.\n\nTiffany looked me in the eye. \"Okay, 'whoever you are' this is going to be rough.\"\n\nI faded in and out of agonizing reality over the next several minutes as she probed. Delaney's grip never so much as wavered.\n\n\"There it is.\" I felt a sickening tugging sensation, and then she held her forceps up, gripping a deformed chunk of metal. \"Got it.\"\n\nI heard it drop on the table next to me with a dull thud.\n\nShe looked me in the eye. \"Okay, I know that was bad, but this will be worse.\"\n\nI laughed weakly. \"You need to work on your bedside manner.\"\n\n\"That's part of the premium package; you get that when you show up at the ER and not in my kitchen. This is going to sound crazy, but I need you to hold your breath while I do this next part.\"\n\nSearing pain flashed through me; by the time I managed to focus, she was thrusting the free end of plastic tubing deep into my chest; it felt like she was trying to drive it all the way through my body even though I could see she was barely moving it at all. She suddenly stopped, glancing down at the bottle. \"There it is; just hold it for a bit longer.\"\n\nShe pinned the tube down with a looped strip of duct tape, then slapped a square of Glad wrap down and secured that with more duct tape. \"Okay, relax.\"\n\nTiffany studied her work. I could see air bubbling into the water bottle. Despite the excruciating pain, it was easier to breathe. \"We need to wait a bit, make sure this is working.\"\n\nI managed to turn my head enough to look at Delaney. \"Just how old are you?\"\n\n\"Sixteen. Well, sixteen in a month or so.\"\n\n\"Must be one hell of a school you go to.\"\n\n\"The 'Life Skills' class is a real bitch. Pass-fail grading.\"\n\nI shook my head weakly. \"Sounds like it.\"\n\nShe suddenly gave a kind of odd, introspective smile. \"I'm homeschooled. I study stuff I'm good at.\"\n\n\"Like what?\"\n\n\"Welding, metal shop, auto mechanics. I'm better if I can do things instead of reading them.\"\n\nI could see Tiffany's expression out of the corner of my eye. She looked sad and proud at the same time. She caught me watching her and pushed forward. \"Let's check vitals.\"\n\nShe glanced up at Delaney. \"There's a spare curtain liner in the upstairs linen closet, second shelf; put it on the recliner in the great room and cover it with towels. We'll move her there in a couple minutes.\"\n\nAfter Delaney left, I caught Tiffany's eye. \"Sister?\"\n\n\"Half-sister by our mom. But she lives with Needles -- my real dad -- and his girlfriend.\"\n\nBefore I could ask, she shook her head. \"It's even more messed up than it sounds. Mom and Dad absolutely hate each other, but Mom screwed up bad with Delaney. Dad 'gets her' better than anyone else. She'd be dead or worse if it weren't for him. We almost lost her a couple years ago; she was spiraling out of control, and nobody bothered to notice. She ran away and got into real danger; we would have lost her if it wasn't for Dad.\"\n\n\"You're caught in the middle?\"\n\n\"Not really. My twin sister and I sided with Delaney after we found out everything Mom told us about their divorce was lies, and then some other stuff she did that caused problems. We still play along in public so that she doesn't cause any problems for Delaney and Dad.\"\n\n\"Sorry about getting you dragged into this.\"\n\nShe shrugged. \"I don't think you had much choice. I know who you are. Deputy Director of the FBI, Maria Hawthorne. I watch the news, and you're all over it.\"\n\n\"You don't seem as shocked as you should at your sister bringing me here.\"\n\n\"Dad and Delaney have been involved in some pretty grim stuff. And... Delaney... he sends her to stuff besides welding classes. High-performance driving schools, some pretty serious first aid classes, outdoor survival. Other stuff. He has a friend in Texas who runs some kind of bodyguard training school, and she goes down there all the time.\"\n\nThe school had to be run by K2. I knew they operated out of Texas. That explained how the woman at K2 knew to contact her. \"That sounds kind of risky.\"\n\n\"I see kids all the time in the ER who ended up a lot worse off. She's living a dream, doing things she loves doing. Some people are just different. Some girls go to the Olympics at sixteen. She's like that, in a way, doing what she's really good at. There are other issues, too. She really does need to know all this stuff.\" She stopped, obviously unwilling to say more about that.\n\n\"I can't argue with the results, but it sounds dangerous.\"\n\n\"Mom would have stuck her in a private mental ward if Tara and I hadn't threatened to go ballistic and ruin everything. She'll barely even say Delaney's name anymore.\"\n\nTiffany paused, then fixed me with a stare. \"Whatever is going on, make goddamn sure if anything happens to her, you don't live through it. Needles will burn the Hoover Building to the ground just getting started. You really don't want to know what that man is capable of.\"\n\nShe was dead serious, and if Delaney was any indication, he might just be able to do it. \"I'm not sure I wouldn't help right now.\"\n\nTiffany shifted and stretched, then started looking me over again. \"So...murder?\"\n\n\"I know how weak this sounds, but I've been framed.\"\n\nShe gave a chuff of a laugh. \"That does sound pretty damn weak. So who did you supposedly kill, anyway?\"\n\n\"Michael Sandaman. He was my...close friend.\"\n\nShe looked at me sharply. \"From the way you said that, 'friend' might not be the right word.\"\n\nI took as deep a breath as I could, flinching from both kinds of pain. \"He was a lot more than a friend.\"\n\n\"So, what happened?\"\n\n\"I don't know. I wasn't even in town when he was killed, and I'm not sure why I was accused. I got a cryptic voicemail from Michael about a something he needed to give me, then I found out he was gunned down when the DA's office called.\" My voice caught at that.\n\n\"I told them I was coming in to see what was going on. I was ambushed before I even got to my car. I killed one, and the other was unconscious when I left. They both had FBI credentials. Then more cars started showing up, shooting. So I ran. I heard my name on the radio less than 10 minutes later as wanted for Michael's murder.\"\n\nTiffany looked curiously at me for a second. \"The second agent died in the hospital. They've started talking about treason too.\"\n\nThat didn't make any sense at all. \"Who?\"\n\nShe thought for a moment. \"Some tool on C-SPAN, named 'Reasoner' or something like that.\"\n\n\"Reisner?\"\n\n\"She nodded. \"That sounds right.\"\n\n\"Thomas Reisner. He's the Assistant Attorney General for National Security.\"\n\n\"You know him?\"\n\n\"Standard issue corporate drone, he moves back and forth between private industry and government.\" Reisner had always struck me as a typical bureaucrat.\n\n\"Well, he doesn't seem to like you very much. He's been on a lot.\"\n\nI puzzled over that. Reisner was kind of a bland bureaucrat nonentity, but before I could say anything, Delaney came back into the room. \"All set up.\"\n\nIt took about a century for them to get me to the great room and the waiting chair.\n\nDelaney looked me over, then looked at Tiffany. \"How long before I can move her?\"\n\nTiffany shook her head. \"We need to get...\"\n\n\"I'm not getting you and Eric into this any more than I have to. I need to get her out of here, but I don't want to kill her. If you kill the principal, you don't get paid.\"\n\n\"Eric has another twenty hours on shift, so give her at least 12 hours of rest, and we can monitor her. That keeps Eric completely out of it. I've worked with the government; they don't move that fast.\"\n\nI shook my head. \"Not everybody after me is government. The guys that kept catching up to me before I found the trackers weren't. And they don't want me in custody; they want me dead.\"\n\nDelaney nodded. \"I talked to K2 and sent them a picture of the ID I took off the guy I whacked over the head.\"\n\nTiffany shot her a glare, and Delaney held her hands up helplessly. \"What? He's alive. Just has a concussion.\"\n\n\"This isn't the movies. You don't knock people over the head without doing serious damage. Concussions kill people all the time.\"\n\nI held my hand up. \"He was going to kill me.\"\n\nThe wind seemed to go out of Tiffany's sails, but she gave a low look at Delaney before looking back at me. \"I hear that an awful lot. You really wouldn't believe how often.\"\n\nDelaney rolled her eyes and looked very, very sixteen for a second. \"Jesus. The fucker's alive, okay? Anyway. The... uh, contractor ID'd him as a mercenary, former Spetsnatz, who used to work for the Volkov Group. He had a 'falling out' with them.\"\n\nI let my head fall back. \"Damn it.\"\n\n\"What's the Volkov Group?\" Tiffany was lost.\n\n\"It's technically a mercenary group.\" I squeezed my eyes shut. \"But they pretty much only work for the Russian government, so if they're involved, it's the Russian government.\"\n\nDelaney shook her head. \"Ki...K2 doesn't think so; they think he's working for some transnational company.\" She paused. \"I was told to tell you they think this is about 'Reinhardt.' Whoever that is.\"\n\nI don't use foul language, it just isn't my thing, but sometimes nothing else will do.\n\n\"Fuck, I'd rather it was the Russians.\"\n\nI closed my eyes and let the mix of excellent bourbon and even better pills carry me away, thinking about what that likely meant.\n\n*****\n\nRefuge...and Gardening\n\n*****\n\nI blinked awake and stared up into Delaney's eyes. She put a finger to her lips. \"Shhh. We need to move. I know Tiff wanted us to stay longer, but you're my problem. You've had eight hours. I don't want her involved any more than she has to be.\"\n\nThere was an undercurrent of fierce loyalty to all of Howard's associates, no matter how far removed from him they seemed to be. I nodded in agreement. \"I know.\"\n\nWe slowly, painfully slipped out through the kitchen, and she settled me into the car, every movement agonizing until I was fully strapped in.\n\nIt was at least an hour before I asked the obvious question. \"Where are we headed?\"\n\n\"Gotta get you somewhere until I can hand you off. Somewhere nobody would ever look for you.\"\n\n\"Sounds kind of grim.\"\n\nShe snickered. \"I don't know about grim, but it sure as hell won't be what you're used to.\"\n\nThere was no way I was going to try to pry any more information out of her. She was having too much fun, obviously very entertained by whatever the hell she was up to, and I didn't have the energy for those kinds of games. I just closed my eyes.\n\nAt the edge of my mind, I tried to fit things together. Reisner. Evelyn. Reinhardt IG. Michael.\n\nIt was a good two hours before we reached our destination, a small, neatly kept mobile home in what appeared to be the middle of nowhere.\n\nWhen Delaney had me up to the door, she banged loudly and shouted in a harsh voice. \"Open Up! FBI!\"\n\nHer air of authority was immediately destroyed when she fell into a squeaky laughing fit at the sound of somebody inside scrambling in panic.\n\nThe door yanked open, and a pale young disheveled blond guy leaned out, his face unevenly red and blotchy. \"C'mon, man, that's not funny!\"\n\nDelaney descended into soft giggles. \"It's good for you! Besides, you fall for it every fucking time, Mooky.\"\n\n\"It's not funny, Delaney.\"\n\n\"You weren't busy anyway.\" She stopped and cocked her head and eyed him suspiciously. \"Wait, were you skeezin' with a ho in the back?\"\n\nMooky's eyes widened in shock. \"I'm not...\"\n\nHe trailed off to an exasperated head shake.\n\nDelaney made a mock sad face. \"Too bad. We gotta find you a girlfriend. Help me get her inside; she's been hurt.\"\n\n\"Ooh, sorry. Is it like an accident of some kind?\" He jumped down, clumsily helped me up the stairs into the trailer and awkwardly sat me in a rather careworn easy chair.\n\n\"Um, no, she's been shot.\"\n\nThe guy leaned over and looked at my face for a second, then backed away wide-eyed, holding his hands up defensively. \"No, no, no, nono nooo! She can't be here!\"\n\n\"Where's your sense of adventure, Mooky?\"\n\n\"She's on the news, she's, like, the F.B.I. In here!\" He gestured behind him, and I realized that most of the trailer was a collage of lush green marijuana plants, grow lights, and an overly complicated drip irrigation system.\n\nAs soon as he saw me looking past him, he jumped up, waving his arms frantically trying to block my view, sending Delaney into a paroxysm of giggles. I might have even given a weak laugh or two.\n\nDelaney clutched his arm. \"It's okay. I'm pretty sure she isn't going to call you in. She's wanted for murder.\"\n\n\"Mur...murder?\" Mooky stumbled back until he ran into the kitchen counter.\n\n\"And treason, I think.\"\n\nHis jaw dropped open. Then he shut it with an effort. \"Treason?\"\n\nDelaney nodded eagerly. \"This is perfect. They'll never look for her here. She can't report you to the police and...\"\n\nShe trailed off for a second and twisted her mouth in puzzlement. \"Okay, it is kinda hard to find a part of it that works for you, but I'll figure something out.\"\n\n\"Needles is cool with this, right?\"\n\n\"Ummm, yeahhh...sure.\"\n\nMooky suddenly looked far more frightened than when he thought his biggest problem was the FBI kicking in his door for accessory to murder and treason. \"Aww, dude, tell me he's good with this.\"\n\nDelaney shrugged. \"I'll tell him I made you do it.\"\n\nHe weakly grabbed at the countertop, missed and slid down to sit on the floor. \"He doesn't know?!\"\n\nDelaney gave a \"mea culpa\" shrug with a half-smile and shook her head.\n\nHe buried his face in his hands. \"This isn't happening.\"\n\n\"This isn't your fault. I know he talked to you about not getting me involved in stuff, but...\"\n\n\"Talk? Talk is kind of a two-way thing. Needles pinning me up against a wall threatening to kill me is not talking.\" Mooky rubbed his eyes for a second. \"I'll be lucky if the dude just shoots me.\"\n\nDelaney held her hands up helplessly. \"You didn't do anything. I showed up here. He'd be a lot more pissed off if you didn't help me.\"\n\n\"You are NOT making things better.\"\n\n\"Look, this is gonna take a few days, but I'll try to get her out of here as soon as I can. You'll want to be out of here sometimes. Some guy is going to drop by to try to figure out how to help her, but I don't know when.\"\n\nMooky looked up at her for a second. \"I'm working all the time right now. Chris' brother opened a surf shop in Florida, and he moved there to help.\"\n\nHe stared through the wall for a minute. \"My uncle needs me to work extra shifts until he can hire more help.\"\n\nDelaney looked a little relieved. \"As soon as I find out, I'll let you know when to be out of here.\"\n\n\"Yeah. I can't take any more guys like Needles in my life. It's, like, way too intense.\"\n\nAfter several more minutes of discussion, Mooky eventually headed into wherever he worked, clutching a garish shirt and hat combo as he walked out.\n\nAfter he left, Delaney carefully checked my dressing, tubing and the water bottle, snapping pictures on a cheap phone. \"Still looks good. I'm sending pics to Tiffany. I left her a burner phone when we left.\"\n\n\"So you think Mooky is safe? He won't talk?\"\n\nDelaney shook her head. \"He won't say a word. He kinda owes me, and besides...\"\n\nShe paused as she looked over a response on her phone. She sent another flurry of texts and looked over the answers.\n\n\"He doesn't want to piss off Needles, right?\" I watched her reaction to the texts she'd received.\n\nShe shrugged. \"That's just common sense. Like not stepping in front of a train...Tiffany's a little pissed off at me for leaving, but she says the wound looks good, and she told me how to take the tube out.\" She looked at it again. \"She even sent a video. Cool.\"\n\n\"So when does the tube come out?\"\n\n\"Three days or so depends on if your breathing is still good and nothing else has gone wrong. We pull half the tube one day, the other half the next.\"\n\nI looked at her. A fifteen-year-old talking about field surgery like it ranked with fixing a sandwich. \"Maybe we should go back to let her take it out.\"\n\nShe shook her head. \"No. I can't do that. We're staying away from her. Besides, I can do simple medical stuff; I help Needles at the clinic all the time.\"\n\nI didn't have many options, and Tiffany seemed like she thought Delaney was pretty competent. And she'd said something about advanced first aid training.\n\nDelaney pulled up another text and looked at it, her eyes widening suddenly. \"Do you like vodka? I need to see if Mooky can get us some vodka or something.\"\n\n\"Why?\" I had a bad feeling I knew what she was going to say.\n\n\"Cause Tiffany says this is gonna 'hurt like a motherfucker' and she doesn't ever say things like that.\"\n\nI decided Delaney was a bad influence on me. Foul language just isn't my thing, but... \"Fuck.\"\n\n*****\n\nI watched through the window as Delaney pulled up in yet another non-descript compact car. She seemed to have an endless supply of them. She'd apparently shelved the armored powerhouse she'd originally picked me up in.\n\nShe walked in scowling. \"They aren't planning to extract you when they get here. My K2 contact said the problem is a lot bigger than just you. They need some time.\"\n\n\"How long?\"\n\n\"Maybe ten, twelve days.\" She frowned. \"I want to get you out of here before Needles and Sheree get back.\"\n\n\"When is that?\"\n\n\"A couple weeks, right before Christmas. They had a reservation for a place on the beach in Mexico earlier this year, but Needles sort of... got hurt. They delayed it as long as they could without losing the deposit so he could enjoy it.\"\n\nShe gave a slight smile. \"They normally time the vacations with my trips to Texas.\"\n\nI took a stab. \"For training.\"\n\nShe gave a slight shake of her head and a sardonic twitch of a smile. \"If you hadn't worked that out by now, I'd be real fucking worried about the FBI.\"\n\n\"They've put a lot of work into training you.\"\n\nShe ignored that probe. \"What do we have to work with?\"\n\n\"Not much. Michael said he left files for me where we first met.\"\n\n\"That's it?\"\n\n\"That's it. But knowing Michael, it's significant.\"\n\n\"You know where it is?\"\n\nI sighed. \"Yes, I do. That is the problem. It's a park bench on the Smithsonian Mall, just a few blocks south of the Hoover Building.\"\n\n\"The FBI?\"\n\n\"Yes. The FBI. If I were them, I'd be watching the FBI.\"\n\n\"We'll just have to get in and get out before they catch on. After you heal enough.\"\n\n*****\n\nThe second half of the tube coming out hurt like hell, but it was easier on Mooky than the first half. I drank a lot more vodka, and Delaney tied my hands to the chair before doing the second one.\n\nI wasn't sure what Mooky would tell people about how he got the black eye when she pulled the first half out. He pretty much refused to talk to me for a couple of days.\n\nHe was still eyeing me suspiciously whenever I moved around the trailer. Delaney was out again; she was in and out more than I'd have expected. I was concerned until I realized she was spreading out her communications patterns, changing cars constantly. Fifteen or not, she'd had some serious training.\n\nEither way, Mooky was always nervous whenever it was just the two of us in the trailer, and I didn't need him completely losing it, so I decided to try to get him to relax. \"You could really make your lighting more efficient if you could get several old mirrors. You're losing a lot of light here. You can use mirrors to reflect your lost light back onto the plants.\"",
        "He looked startled, but I was starting to suspect that he usually looked like that. \"Really?\"\n\n\"We did a study on grow houses, and that was one of the things we learned. You can reduce your electrical use a bit, get stronger growth and bud production, and keep the plants from getting leggy on you.\"\n\nHe perked up. \"Did you guys try LED lights?\"\n\n\"We did, but it's touchier than you think. You have to get the spectrum just right; LEDs aren't like HPS or some of the others, so you have to use a mix and get it just right, but it will cut down on your electric. But LEDs also reduces heat, so in winter here, that could be a problem.\"\n\nMooky nodded. \"That's what I heard. I'm going to try it someday.\"\n\n\"They're starting to make them commercially. You might want to ask someone who has tried them and see what they think.\"\n\nHe looked down glumly. \"I don't know anybody using them right now.\"\n\nI pulled myself out of the chair, wincing at the pain. \"Your water system, though. I know how to make that a lot better.\"\n\n*****</b\n\nDelaney stared at us with a frankly confused look. \"Are you two going into business together or something?\"\n\n\"We pulled about twenty-five feet of pipe out of his watering system.\" I gestured to the stack of Pvc pipe in the corner. \"Shortening it keeps the pressure higher, and we get a more even distribution of water.\"\n\nMooky, his face pretty much covered in dirt, stuck his head out from behind the racks. \"Dude, she knows, like, everything about this stuff. Did you get my message?\"\n\nShe looked suspiciously between us and settled on me. \"You do remember you work for the FBI, right?\"\n\nI shrugged, then winced in pain. \"I'm not exactly worried about it. Assuming I survive being taken into custody, which is pretty unlikely, I suspect this wouldn't even make the charge list.\"\n\nShe closed her eyes and sighed. \"I don't need you to kill yourself trying to do stuff either.\"\n\n\"I just told him what to do and stood back.\"\n\n\"She even drew this cool diagram; it's like professional-level stuff.\" Mooky waved it around.\n\n\"Jesus. It's drawn on a fucking napkin.\" The pained disbelief on her face gave way to pained acceptance. \"Fuck it. You guys go ahead and do your own Breaking Weird thing. Whatever. I got your message, and I brought something like twenty of those plastic bathroom door mirrors they use in hotels. We had a stack of them from when they renovated the no-tell motel out on Caper Road.\"\n\nMooky stood up. \"Cool! I'll go bring them in.\"\n\nDelaney watched him walk out. \"K2 says they have someone coming by tomorrow evening. It's not really one of their assets, but they'll bring some legal help and try to see what else can be done.\"\n\nI was relieved. I didn't have any doubt that Delaney was competent and well trained, but relying on someone, a teenager, who might think of the whole thing as a game worried me.\n\nAt least I was certain that, in trusting Mooky, Delaney had made a good choice. I'd been worried that she had been just coercing him to cooperate, and coercion isn't as reliable as most people think. As we talked, though, I realized that the ties between him and Delaney were more like close family ties than anything else. And more than that, he had faith in her. He trusted that whatever the hell Delaney was doing was \"righteous\", no matter how it looked to anyone else.\n\nHe was also a lot deeper than I'd thought. He saw marijuana as a real miracle drug, and I found out many of his trips were to a nearby retirement home, where he felt his \"product\" could really help. Maybe it wouldn't always cure, but it could at least ease the pain and make life easier. One of the reasons he liked his job was because his uncle always gave him time off to attend the inevitable funerals and celebrations of life.\n\nI hoped whatever happened, he didn't get burned by this.\n\n*****\n\nMeetings and Options\n\n*****\n\nDelany had pretty much pushed Mooky out the door the night before, making him promise not to come back for at least three days if she didn't contact him. She also told him to bring the sheriff if that happened.\n\nShe growled about keeping amateurs out of the way, but I knew what she was really doing; she was protecting him as best she could. Making contact with other, unknown entities is one of the most dangerous things an operative can be tasked with.\n\nToo many unknowns. Too little certainty. And almost no trust at all.\n\nIt was just at nightfall when the car pulled up in front. Right on time, but that doesn't necessarily mean a damn thing, as my aching injury reminded me.\n\nThe door slowly opened, and I could feel relief as I saw the white-haired form of Pogo lean in. \"Thank God.\"\n\nHe nodded to me. \"Maria.\"\n\n\"Passphrase.\" Delaney's voice was flat and emotionless. I looked over at her.\n\nShe was holding the automatic she'd taken from the hitman leveled at Pogo's chest.\n\nHe rolled his eyes. \"Don't be ridiculous; she obviously knows me.\"\n\n\"I obviously don't. What's the fucking passphrase?\" The gun didn't waiver the slightest bit.\n\nI tried to head everything off. \"Delaney, I know him. If he's compromised, we're screwed no matter what.\"\n\nShe ignored me. \"Passphrase. Asshole.\"\n\nThe worst thing I could think of happened.\n\nA grin split Pogo's face. He was finding this funny, and Pogo's sense of humor was decidedly dark. \"So you're seriously going to shoot me if I try to come in?\"\n\n\"Step in and find out.\" Nothing in her voice even hinted that she might not shoot him.\n\nI tried again. \"Pogo, she's serious as hell; just give her the damn passphrase.\"\n\nHis grin widened. \"Oh, no, this is just too funny. I'm being held at gunpoint by a munchkin.\"\n\nHe looked back at her. \"Okay, so what's your plan? That's what...?\" he paused. \"A Glock 43?\"\n\nShe gave an annoyed sigh. \"So it's a Glock. I didn't buy the damn thing; I just took it off the last asshole who pissed me off.\"\n\nPogo laughed quietly. \"Glocks are reliable as hell, and it's a more-than-decent gun for close work like this, but you've probably got six or six plus one rounds there. You might have time to get another magazine in, if you've got one, but what if I've got four more guys with me, and they have vests?\"\n\nDelaney shrugged. \"That won't matter to you.\"\n\n\"I believe you, but I'm curious. What happens when you run out of rounds?\"\n\n\"Imma pick up a fuckin' rock.\" She spat it out with narrowed eyes, her patience getting low.\n\nPogo squinted at her, then shook his head slowly. \"You're Needles' kid, that's for damn sure.\" He suddenly seemed very serious. \"Crash test dummy. Fourteen minutes 34 seconds.\"\n\n\"Black rum.\" Delaney gave what I assumed was the countersign and lowered her gun but didn't take her guard down.\n\nPogo stepped in, and another form filled the doorway. The man, Hawaiian or Samoan from what I could see, had to be six-and-a-half feet tall and probably weighed about as much as a small truck. A wall of muscle and odd geometric Polynesian tattoos.\n\nDelaney looked at his enormous form and then down at the gun in her hand. \"Shit. I need a bigger fucking gun.\"\n\nShe glared at Pogo. \"How the fuck did you even fit Shrek in a car?\"\n\nPogo just chuckled while the man-mountain did a poor imitation of looking hurt. \"Hey, for your information, kids love me.\"\n\nHe glanced around the grow house and nodded slowly, grinning. \"Nice. A pakalolo house. At least the FBI probably won't look for her here.\"\n\n\"Derek, get what you need and get out of here.\" Pogo's voice held a little gravity. He turned to me. \"This is Derek Keawe; he's going to be your lawyer of record. He's covering Kim's office for a month, she said she had to leave. Some kind of emergency. Sign the forms, and give him a retainer. Attorney-client privilege, he can open a line of communication with the FBI and Justice.\"\n\nI shrugged. \"He'll be taking a big risk. Whoever is after me will probably try to get to me through him.\"\n\nDerek shook his head. \"I have a two man protective detail on me. I also have a full set of K2 phones for comms, so we should be good.\"\n\n\"They aren't shy about it; two men won't be enough.\"\n\nPogo shook his head. \"Monster will be with him. Derek is married to his daughter.\"\n\nThat ended that. If Monster was watching over Derek, anyone unwise or ignorant enough to go after him would probably be dead before they even realized a fight had started.\n\n\"Jesus. They'd need a fucking elephant gun anyway.\" Delaney eyed Derek and gave an exasperated shake of her head.\n\nI held my hand up. \"I don't exactly have access to money right now. Kind of hard to pay a retainer.\"\n\nDelaney pulled a kitchen drawer open and rummaged around for a bit. \"There, seventy-three cents and a Dave & Buster token.\" She stopped abruptly and looked him over suspiciously. \"Seriously, you're a fucking lawyer?\"\n\nDerek peered down at her. \"You have a problem with that?\"\n\nShe scrunched her nose. \"A couple of them have tried to have me killed.\"\n\n\"Didn't work?\" Derek gave her a slightly twisted smile.\n\n\"They're dead. I'm not.\" She looked steadily at him, daring him to challenge her.\n\n\"Well, I don't plan to have you killed, so we should be good.\"\n\nShe handed me her treasure, and I passed it on to Derek, then dutifully signed the forms.\n\nHe started to hand them to Delaney. \"This would be better if it were witnessed.\"\n\nI waved him off. \"Derek, she's fifteen.\"\n\nHis eyes widened, and Delaney cut in. \"Besides, I don't need to get dragged into court over any of this. I'm going to have to tell Needles about this. I won't lie to him, but I don't need to remind him a bunch of times and piss him off.\"\n\nPogo straightened up sharply. \"Needles doesn't know?\"\n\nDelaney shook her head.\n\n\"Shit. I thought Kim had more goddamned sense than that. At least that explains the sudden desire to get the hell out of Virginia.\"\n\nI finally had to ask. \"Everybody I've run into is concerned with pissing him off. Why is everybody so worried about him?\"\n\nPogo scratched his head for a second. \"Needles...\" He shook his head. \"The man just has no sense of proportion. Piss him off, and the sky is the limit. Columns of fire and brimstone. Real Old Testament unto-the-seventh-generation shit.\"\n\nI waited, then noticed Delaney listening with a smug pride as Pogo continued. \"My team was called in to stop a massacre in Mogadishu. A small-time warlord had decided to rob a medical team.\"\n\nDelaney looked at me. \"Needles was a Special Forces medic.\"\n\nPogo nodded tersely. \"I thought we were going to stop the warlord's gang from killing civilians. But when we showed up, there were dead bodies everywhere. Bodies of gunmen. Seems the robbery was going fine until one of the gunmen shot a pregnant woman right in front of Needles for no reason. By the time we got there, the street was empty except for bodies, a deuce-and-a-half was literally parked on top of the warlord's car, and Needles was standing there with a.45 in one hand, a hatchet in the other and a foot-long knife sticking out of his face, looking for somebody else to kill. He had three bullets in him, but he only stopped because he ran out of bad guys.\"\n\nHe paused and looked at Delaney. \"He tell you about it?\"\n\n\"Not all of it, but Sheree found his medal and pried stuff out of him, so she told me. We're tight like that.\"\n\nPogo nodded. \"It was either charge him with a crime or give him a medal with a classified write up and sweep it under the rug. I recruited him to our unit as soon as he got out of the hospital.\"\n\nDerek looked over his papers. \"I'd better get going. I won't be doing you any good here, and it's probably best if I leave before you guys start discussing anything else I don't want to know. Officer of the court and all that.\"\n\nPogo waited until Derek left, then turned to me. \"Do you know why you're being targeted? The guy that tried to take you out in the mall used to work for Reinhardt IG security. Mostly off-the-books stuff.\"\n\n\"I think it's something to do with Michael. When he found out he had cancer, he said he had some things he had to 'finish,' took sick leave and disappeared for almost a month. He never said what it was. I got a voicemail from him saying I had files waiting in the place we first met.\"\n\nPogo nodded. \"I'm sorry to hear about Mike; he was one of the good guys.\"\n\n\"He was.\" I paused, thinking. I know a bit of sadness crept into my voice, despite every effort I made to contain it. \"Maybe he would have preferred this. Dying that way. The cancer was way past any treatment, and he was in more pain every day.\"\n\nI sounded cold, even to me, but I knew that was me trying to suppress and deflect my feelings. It might have been true anyway.\n\nPogo gave a slow nod. \"I didn't know him as well as you did, Maria, but he was the real thing. A real warrior. Dying in a hospital bed, wired to a bunch of machines...he wouldn't have wanted that.\"\n\nWe just waited in reflective silence for a few moments, and then Pogo shook his head. \"We can't help much; there's stuff going on. Maybe it's related, maybe not, but we're sure there's some surveillance in place on Evie and Howard, maybe on the rest. I was already out here on family stuff, Derek was on a business trip, and Monster was wrapping up his semester before this started, but if I delay getting back and they're watching, it will raise alarm bells. They'd start looking, and I'd be a liability. We'll just have to risk Derek and Monster. It works anyway.\"\n\nI leaned back. \"This is just getting better and better.\"\n\n\"Donna can't do anything. This is too high profile; she can't expose her organization like that.\"\n\n\"I figured that, but I was hoping your people might be able to help.\"\n\n\"Derek can help on the legal end. We're pretty sure they weren't keeping tabs on him, so we got him the K2 phones, and they're not likely to have broken that.\"\n\nDelaney shook her head. \"If they could break the K2 phone crypto, we'd already be dead.\"\n\nPogo looked grim. \"You're going to have to depend on K2 and whatever they can put together. Maybe Wendy can extract you.\"\n\n\"No. I need to figure this out and try to fix it. There has to be a reason for all this. Nobody would expend this level of effort for anything minor.\"\n\n\"That's a big risk; you can't hide out in Virginia forever.\"\n\n\"Shit. I was hoping to just hand you off.\" Delaney gave me a decidedly less-than-happy glare. \"I think K2 can send my team up, but it's going to cost you.\"\n\n\"That's a little mercenary.\"\n\n\"That's a little mercenary, or she's a little mercenary?\" Pogo grinned. \"Actually, I have a pretty good line on Thugbunny and her team...\"\n\nDelaney jolted at what was obviously a nickname and brought her gun back up instantly.\n\nHolding his hands up, Pogo let his smile widen. He carefully looked over at me. \"I have it on good authority the Camp Mayhem team isn't cheap, but they're worth every penny.\"\n\nI caught it before Pogo did. Knowing Needles didn't grant automatic trust and immunity. Everything he knew about Needles was old information. The nickname wasn't. She was sure she'd been compromised.\n\nDelaney's eyes shifted over him, and I had a momentary chill as I saw her eyes. She'd said it before, facetiously; her sister had even commented on it. But it was apparent now. The flippant \"treat it as a game\" attitude was all a mask. She'd been hunted and survived. She expected more to come, and she was willing to do whatever it took to stay alive.\n\nBarely controlled anger radiated from her. She'd claw, fight, and bite to the bitter, bloody end.\n\nPogo saw the feral look and realized his use of what she considered sensitive terms had crossed a of line; she saw him as a direct threat to her survival. \"Easy there. Nobody is going to get anything out of me. I know one of your trainers. Spooky told me about you.\"\n\nFor a fraction of a second, I wondered what kind of insanity would bring Donna's most lethal asset in to train a teenage girl. Especially this one. Maybe I would have focused on that more if I wasn't so concerned that Delaney was probably less than a hair's breadth from putting several holes in Pogo.\n\nShe cocked her head at him, eyes coldly lit. \"You know her?\"\n\n\"I'm married to her. We have a son.\"\n\nDelaney lowered the gun again, but not all the way. A muscle twitched in her jaw as she bit back barely harnessed fury. \"No one who knew her name would be stupid enough to lie about that.\"\n\nPogo looked back at her, unblinking. She was no longer amusing or funny; I could see him drop her into the 'very dangerous' category in his head. He slowly looked over at me, his movements more precise and cautious. \"They do occasional work for K2. It's a small team, specialized in surveillance and infiltration, but they've done a contested extraction.\"\n\nDelaney's mouth twitched in quirk of a malevolent smile. Or at least something like a smile. \"Contested extraction? I like that.\"\n\nPogo nodded. \"Sounds a whole lot more professional than 'smashed things and wrecked shit until we got them out,' doesn't it?\"\n\n\"I'm puttin' that on my fuckin' resume. The whole 'wreck shit' thing is pretty much my usual plan.\" A little tension seemed to drain from her, but I already knew she had unending reserves of that tension.\n\n\"I hear it a little differently. I think the words 'unpredictable and prone to violence' are used a lot, but Spooks considers your little team to be professionals. She doesn't do that lightly.\"\n\nI saw a shimmer of pride pass over Delaney's face.\n\nHe switched back to me. \"What about Emma?\"\n\nEmma was my prot\u00e9g\u00e9, an executive assistant director, and the closest thing I had to a daughter. Unfortunately, everyone knew it. And she was married to the head of one Donna's CUMULOUS programs, the slightly more respectable GREEN program, which often worked with us, but it made this worse. \"I'm sure she wouldn't buy off on the charges against me, and I am just as sure that they've got someone all over her and her husband, which is probably why Donna isn't willing to take the risk of exposure.\"\n\nHe glanced over at Delaney for a moment and made a helpless gesture. \"Best advice I can give you is to go with her team. Spooky says she'll try to render some assistance, but her hands are mostly tied, at least in any official capacity. Unless you have something in your back pocket, I don't know about?\"\n\nI shook my head. \"If I did...\"\n\n\"You wouldn't be here.\" He looked down for a moment. \"Then her team is your best bet.\"\n\nWe talked for a few more minutes, but it was pretty clear we had reached the end of the discussion.\n\n*****\n\nA Walk in the Park\n\n*****\n\nThere was nothing for it but to try to find whatever Michael had left for me. We went over maps of the area. I was gaining strength enough to be, well, fairly mobile, if not ready to run my regular five miles.\n\n\"It'd be safer if I did it myself.\" Delaney was less than happy about my decision to go.\n\n\"I can't be sure which bench it is; I'll have to get eyes on it to be sure. Besides, he might have left a sign or signal specific to me that you'd never pick out.\" I wasn't exactly prepared to just hand off whatever it was to a mercenary who worked for a private military company. I might occasionally forget what she really was, but I made a habit to remind myself.\n\nShe frowned. \"The last part is true.\"\n\nA twist of a smile crossed her face. \"The part about being sure it's the right bench is bullshit, though. You'd be a lousy cop if you weren't sure. Still, if I were you, I wouldn't completely trust me or K2 either. I know you can, but how would you know?\"\n\nI sighed. She'd pretty much read my mind. \"I'd say you'd make a good police officer yourself, but I'd never get it out with a straight face.\"\n\nShe rolled her eyes. \"I wouldn't last a week as a cop.\" She took a breath. \"Alright, I figured you'd say that, so we need to make sure you can make the distance from the Metro stop to the bench and back without collapsing...\"",
        "It sucked. She meant it. She figured it out and refused to go until I could go twice the necessary distance.\n\n*****</b\n\nNothing ever goes smoothly. It was four days before Delaney felt I was healthy enough to make the run to the park bench.\n\nFour hours in the car and on the train to reach the station.\n\nFour minutes to reach the open expanse of the Smithsonian Mall.\n\nFour blocks to reach the bench.\n\nFour seconds to realize it had gone wrong.\n\nThe man turned toward me and his face split in a harsh smile of recognition; he hadn't been sure it was me until he got close.\n\n\"Hey, Asshole.\"\n\nHe glanced over at Delaney, freezing for a moment, eyes narrowed. She set her can of soda on the bench and took a step back. \"Wanna see a magic trick?\"\n\nHe looked at her in confusion; he hadn't realized we were together. She'd been following behind me, head down, hoodie pulled up, looking like a standard-issue disgruntled teen.\n\nShe gestured at the can.\n\nIt disintegrated in a shower of soda, the spray of liquid hanging in the air for a surreal moment.\n\nHe blinked, then froze.\n\nA rifle shot of some kind, but it was obviously suppressed. She smiled, but a smile so malevolent it radiated darkness. \"Look down, Dickhead.\"\n\nA red laser dot showed briefly on his shirt, almost motionless in the center of his chest, then flicked off. She glanced around casually. \"I'm starting a collection. It's called 'Guns I took from Assholes.' Thank you for your contribution. Put the gun and your phone on the bench and step the fuck back.\"\n\nHe looked around carefully, but wherever the shooter was, they were well-hidden. He looked at her, and she returned his stare with a slight, absolutely evil smile. He put the gun and phone down wordlessly.\n\n\"Okay, turn around and start walking in that direction for at least five minutes. If you do anything else at all -- turn around, pull another gun, pull out another phone - they'll fucking kill you. The only reason you're not dead already is that I don't want to deal with the fucking mess.\"\n\nDelaney scooped the gun up and dropped it into her jacket pocket, then picked up the phone, tossed the battery into the grass, and dropped the cell into her potato chip bag.\n\nI searched the bench. Nothing. I'd have seen a dead drop from Michael if one had been there.\n\nThe pain in my chest surged as I let my breath out. \"We need to get moving. Odds are they're stretched thin, but I'm sure someone is calling everything they have in on us right now.\"\n\nShe nodded in response. \"We're covered until we get into the Metro station.\"\n\n*****\n\nAn After School Special\n\n*****\n\nWe finally reached the trailer, and I dragged myself up the steps. My confidence that I could just will myself to push through the injury was pretty much gone.\n\nTwo girls were sitting in Mooky's kitchen chairs, eating peanut butter sandwiches and potato chips. The way they were watching the door, it was clear they knew we were coming. One of them, a fairly tall willowy blonde girl with \"high school head cheerleader\" written all over her, stood up and glanced at me before smiling at Delaney. \"Took you long enough.\"\n\nDelaney snorted with disdain. \"We had to take the Metro and make sure we didn't have a tail. All you had to do was wait till we were clear and drive out.\"\n\n\"In DC traffic. It's as bad as Dallas.\" The blonde girl wrinkled her nose cheerfully.\n\n\"It was Saturday traffic; that's not as bad. You should see it on a weekday. I'm glad you made it, though. I thought I was going to have to kill the guy.\"\n\nThe other girl at the table took a sip of her soda. \"We wouldn't leave you hanging.\"\n\n\"I know.\" The way Delaney said that was heavy with meaning, and the three of them just went silent for a second, exchanging glances. It was instantly clear that this was the \"Camp Mayhem\" crew Pogo had talked about.\n\nDelaney broke the silence. \"Maria, this is the team.\" She pointed to the blonde girl. \"This is Mackenzie. And this...\" She walked over and stole a chip from the other girl. \"Is Tess.\"\n\nBoth of the girls gave very polite hand waves.\n\nI gave an equally polite nod and sagged into the easy chair I'd temporarily escaped. My backup consisted of teenage girls.\n\nTess laughed softly. I got the feeling she knew exactly what I was thinking, and she confirmed it almost instantly. \"It's like an after-school special, isn't it?\"\n\nShe pointed at Mackenzie. \"She's the pretty one.\" That earned a scowl from her target.\n\n\"I'm the geeky one.\" She pointed at Delaney with a huge grin. \"And Delaney is the outlaw girl with a heart of gold.\"\n\n\"Oh fucking shoot me now.\" Delany threw her hat at Tess.\n\nTess ducked it easily, and I realized they'd played this scenario out dozens of times. Mackenzie shook her head at the two of them, then looked over at me. \"It's not as bad as it looks.\"\n\nTess straightened up, suddenly serious. \"It isn't. You already know Delaney. Mackenzie is one of the best shooters you've ever met...\"\n\n\"Tess is our tech geek, and she's a ghost when she's following someone.\" Mackenzie obviously didn't want to give Tess a chance to understate her own abilities. \"And she's an awesome spotter.\"\n\nI looked at Mackenzie. \"So what did you use at the Mall? I didn't even hear the shot.\"\n\n\"A heavy-duty air rifle. A pretty heavily modified Benjamin Bulldog.357 with a custom moderator on it. It isn't my favorite gun, but it was the right one for the job. I usually use it for hog hunting.\" She almost seemed to be running numbers in her head. \"Limited range compared to a conventional rifle, but we made the most of it. And with the moderator, the sound is different enough to avoid most automatic shot detection systems; still loud, but it doesn't sound like a gunshot. The Capitol Police have to have shot detectors all around the Mall, so it was an issue.\"\n\nI blinked, thinking back. The hair was different, they must have been wearing wigs, but... \"The art students sketching near the Museum of Modern Art.\"\n\nTess looked unhappy all of a sudden. \"Crap. I thought that was perfect.\"\n\n\"It was; I just figured it out. No vehicles nearby, and I only saw one pair that could be you.\" I focused for a moment. \"You used the sculpture garden as your cover.\"\n\nShe nodded. \"Those ugly granite wall sculptures channeled the sound of the shot straight up. It had the field of view we needed, and it was perfect to stage a normal scene. Two girls drawing the sculptures; obviously working on some kind of school art project, eating a picnic lunch on the mall, reading texts on a phone together, and listening to music. Those easels and the carry tubes made it easy.\"\n\nMackenzie shrugged. \"The bullpup is fairly short. We could shield it long enough to take any shots we needed.\"\n\nMy memory of the two girls looking at the phone together sitting with their easels set up and their long black art carry tubes was suddenly much clearer. They made is sound easy, but the window had to be incredibly narrow.\n\n\"You were ranging the bench when we walked past you, weren't you?\"\n\n\"But you didn't notice it at the time, did you?\" Tess asked the question mostly off-hand, but I realized they were both studying me intently; they were using me as an after-action review. Delaney was fixing herself a sandwich, but she was tracking every word as well. These girls didn't just have some individual skills; K2 had trained them in higher-level stuff. That meant they'd invested a lot of time and effort; post-mission analysis and planning aren't exactly beginner level.\n\nI was pretty sure asking detailed questions about their training would be a bad idea. I shook my head. \"Not at the time.\"\n\nTess shrugged. \"We couldn't exactly bring a vehicle-blind in close enough, even if we could guarantee a good parking position. The DC sniper killings made that tactic obvious to the police.\"\n\n\"And anyone else who might pay attention.\" I paused. \"I'm really concerned that they knew about the bench.\"\n\n\"We think he just caught up to you at the bench; it was facial recognition that found you. Or lack of it. K2 thinks they were surfing the feed off the Internet of Things -- all the cameras, sensors, traffic lights and stuff - around the FBI, the Mall, everything in the area. K2 wasn't sure if they could finesse it enough to get the right ones, so they had their associates use a bigger hammer method and take all the cameras near the Mall offline. Took out the ones in the Metro system too. That might have triggered the tangos to look around the Smithsonian. Or maybe they were already there.\"\n\nTess glanced up at me. \"It looks like an eastern European hacker group called 'GoGoPiggy' was paid to do the facial recognition program and surveillance.\"\n\nI shook my head. \"The damn world is changing too fast.\"\n\n\"The technology for facial recognition has been around a long time. People are fighting it legally, but...\" Tess shrugged.\n\n\"They tried to ban the crossbow too, but it was effective, so it was almost an inevitability. It stayed in use until guns took over.\" Out of the corner of my eye, I saw Mackenzie and Delaney hanging on every word. I didn't get this much focus when I lectured the FBI Academy students at Quantico. \"K2 sounds like they have a pretty good cyber capability.\"\n\nMackenzie shook her head at Tess in a warning, then looked at me. \"Nice try.\"\n\nDelaney gave a lopsided smile. \"Sorry, principals don't get to know everything, just what they need to know.\"\n\nTess glanced at her computer screen. \"GoGoPiggy has other priorities now. They were sloppy, and their bitcoin wallets were taken down. They lost a lot of money on this one, and it has been communicated to them that it can get worse.\"\n\n\"I've always been told that bitcoin wallets are absolutely secure.\"\n\nTess shrugged. \"Nothing is impossible; some things are just really, really expensive.\"\n\nI looked around at them. After school special or not, it was nice to be working with professionals.\n\n*****\n\nLater that evening, well after Delaney had headed out on one of her \"errands,\" Mooky walked through the door and looked around in confusion.\n\nTess gave him a warm smile. \"Hey, Mooky.\"\n\nMackenzie looked up from where she was sitting on the floor in the middle of an equipment layout, examining the seals on her air rifle. \"Hey, Mooky.\"\n\n\"Hey...\" He stopped, blinking in confusion.. \"Who are you?\"\n\nTess pointed at the big carry-out bag Mooky put on the counter. \"Dude! Are those the tacos?\"\n\n\"Yeah, I uh...Delaney called, and...\" He stopped as both girls jumped up and surged past him.\n\nTess dug through the bag and pulled one out. \"Chipotle?\"\n\nMackenzie reached over and took the offered taco. \"Thanks, Mooky!\" She looked back over at Tess. \"Can I get a couple Napalm Sauce?\"\n\nMooky watched, completely lost as they sorted out a couple of tacos each. He finally looked at me.\n\nI shrugged. \"They're Delaney's... friends.\"\n\n\"Yeah, I kinda figured that out, but what are they...\" He ground to a halt as he saw the heavy air rifle. \"Is that some kind of ray gun?\"\n\n\"It's an air rifle.\"\n\nHe blinked twice. \"Like a BB gun?\"\n\nClose enough. \"A really powerful BB gun.\"\n\nHe looked over the equipment laid out on the floor. Low profile protective vests, a couple of handguns, night vision scopes and more. \"I don't want to know, do I?\"\n\n\"Not really.\" I pointed to each of the girls in turn. \"That's Tess, and that one is Mackenzie.\"\n\nEach girl waved cheerfully as I pointed them out.\n\nMackenzie pointed to the counter. \"There's twenty-five bucks there for the tacos. Delaney left it when she had to go check on the salvage yard.\"\n\nNodding slowly, Mooky walked toward his bedroom, dragging his steps and mumbling. \"I'm gonna go clean up.\"\n\nSomething in Tess's face twitched. \"Hey, Mooky? Thanks for letting us crash here for a few days. Really. We'll get out of your hair as soon as we can.\"\n\nHe nodded slowly and trudged into his bedroom.\n\n*****\n\nNo matter how professional they acted at times, it was still disturbing as hell to realize the mercenaries watching over me weren't even old enough to be out of high school. Their conversations flashed dizzyingly from the relative merits of custom rifle loads to the price of lip gloss, to the latest pop song, and then to surveillance tactics without missing a beat.\n\nEven to the glimmerings of teen romance. I had to admit they had a slightly different perspective than when I was a teenage girl.\n\n\"So... Matthew asked me to the Valentine's Dance at school,\" Mackenzie announced with a bit of pride, but I could sense that she wanted some approval.\n\n\"Really? He's cute.\" Tess turned away from her laptop.\n\n\"He's too stupid to live.\" Delaney was lying on her back on the countertop finishing the last of yet another candy bar.\n\n\"Hey! You don't even know him!\" Mackenzie scowled at Delaney.\n\n\"Same Matthew you talked about in chat?\"\n\n\"Yes.\"\n\nDelaney rolled her eyes at the ceiling. \"Too stupid to live.\"\n\n\"Hey!\"\n\n\"He goes to the same school as you and Tess, right?\" Delaney carefully folded her candy wrapper.\n\n\"Yes, but...\"\n\n\"So he has to know you won the Texas State small-bore rifle competition, right?\" She eyed her little wrapper and folded it again.\n\n\"Yes.\" Mackenzie pulled herself up to her full height. \"And HE thinks it's really cool.\"\n\n\"Too stupid to live.\"\n\n\"Stop saying that.\"\n\n\"He wants a torrid summer romance...\"\n\n\"It's not summer.\"\n\n\"It's always summer in Texas. You need to install a damned air conditioner for the whole state.\"\n\nMackenzie just gave her a sour look.\n\nDelaney shrugged. \"He's trying to start a first-love romance with a hormonal...\"\n\n\"I'm not hormonal!\"\n\nTess snickered. \"So, two weeks ago, when the world ended because you couldn't find your pink blouse...\"\n\n\"It was Dreamsicle orange, not pink...\" Mackenzie suddenly caught herself. \"Okay, maybe I'm a little hormonal.\"\n\nDelaney drove on mercilessly. \"Starting a torrid first-love romance with a hormonal teenage girl who can drill a dime at 600 meters. Too... Stupid... To... Live.\"\n\nMackenzie stared at her open-mouthed, then looked at me.\n\nI held my hands up. \"She has a point.\"\n\nMackenzie looked like she was going to say something, but Delaney cut her off. \"Just let me know when it goes wrong; I'll drive down and help bury the body. It'd be easier if you get him up here so I could use the car crusher, though.\"\n\nTess giggled.\n\nI shook my head. \"If it helps any, I'm pretty sure most boys that age are too stupid to live when it comes to pretty girls.\"\n\nI could see Mackenzie trying to work out what I meant by that; I noticed she didn't brighten up when I said \"pretty girls,\" though and remembered her slight annoyance at Tess when she had introduced them.\n\nI waited until Delaney and Tess went out on a communication run to talk to her.\n\n\"I didn't mean to insult you when I called you pretty.\"\n\nShe eyed me for a second. \"It wasn't an insult. I know what I look like. It just isn't... part of this. Everybody at school, everybody at the mall, that's all they see.\" She raised her hands. \"Look, a pretty cheerleader girl! But with K2, with Tess and Delaney... I get to be the badass with a rifle.\"\n\n\"So are you the team leader? I'm having some trouble with your team dynamic. It's odd.\"\n\n\"We don't really have a team leader. I'm more like a spokesman because Tess would rather be invisible and Delaney...\" She laughed. \"Delaney's just not good with people sometimes.\"\n\nI nodded. \"I can see where that could be a problem.\"\n\nShe tilted her head, studying me. \"So are we playing the twenty questions game? We figured it was coming sometime soon. You'd want to do it when only one of us was here, and not Delaney. You had your shot at her and probably didn't get much. So we already decided what we would talk about and what we wouldn't.\"\n\nI blinked. K2 had spent some serious effort training them. \"Okay. Let's do that. How did this happen?\"\n\n\"Mostly by accident. Delaney's dad and my stepfather, Tony, were teammates in the Army, and I kind of dragged Tess into it.\" She looked thoughtful. \"Kim told me you met my stepfather once, a long time ago. His nickname is 'Hollywood.'\"\n\nHollywood. I damn sure knew that name. I remembered him, most women would since he was a walking talking wet dream. He was also an assassin. Or at least we thought he was. Michael had tracked him carefully, just in case he went rogue. He was a sniper, probably one of the best in the world, and he had worked, or maybe was still working, with Pogo and Howard's crew. We weren't certain; Howard could be touchy if we looked too closely at his people. I was pretty sure Hollywood mostly took his occasional contracts from the murkier side of the government. Taking out terrorists, arms traders, that sort of thing.\n\n\"That explains your ability with a rifle.\"\n\nShe nodded.\n\n\"Doesn't school get in the way of all this mercenary stuff?\"\n\n\"Not as much as you'd think. Mom and Tess's mom thinks we're part of a junior law enforcement club; learning from police, doing ride-alongs and all that. We do enough of that to convince anyone, and we've built a pretty convincing legend with K2's help. I'm pretty sure Mom suspects. She's not stupid, and I know Hollywood knows better, but they never say anything. Mom was only a little over a year older than I am now when she joined the Army, so that's probably why she ignores it. Tess's parents are divorced, and she bounces between them, so there's a lot of room to work with there. Delaney... she has some kind of deal about this with her family. Most of the time, we just do courier work, sometimes we do short term surveillance or counter-surveillance, and occasionally we help with plumbing jobs -- infiltration and planting bugs. A lot of it is just a couple days. Sometimes just a few hours. Kim is usually pretty careful about everything. This one is different. We normally don't do babysitting...protection details.\"\n\n\"It's a different kind of work.\"\n\nShe caught my thoughts almost before they were fully formed. \"You're wondering if I could kill someone. We've seen a few dead bodies. I go hunting a lot, and it's all about keeping your focus. I know it will probably happen sooner or later. I'm okay with that.\" She paused. \"Tess would rather not. I'm sure she would if she had to. But that's why it's either Delaney or me with you for now.\"\n\n\"Delaney...\"\n\nMackenzie gave me a cool look. \"I don't think you have to wonder if Delaney would do it.\"\n\n\"I'm not. I'm pretty sure she already has.\"\n\nShe nodded. \"I do this because I want to, so does Tess. I don't think Delaney has a choice. She won't go into it, and she doesn't want to get us involved. All I know is that people keep trying to kill her, and whatever the reason is, they can't just take it to the police.\"\n\nThat fit with what Tiffany had said.\n\n\"Pogo said you've done a contested extraction...\"\n\nHer mouth tightened into a grim line, and she suddenly looked much more like a hardened mercenary than a teenage girl. \"That was supposed to be a simple surveillance job with a protective babysitting team on site, but it went sideways. It turned out that an oil sheikh's daughter ran away with her own daughters. His men killed her escort and snatched them right as we got there. Our backup team was held up.\" She stopped and made a sound dangerously like a snort. \"Did you know Delaney knows how to drive a bulldozer?\"\n\n\"Why am I not surprised.\"\n\nShe shook her head. \"You asked if I was the leader. We all are, sort of. We're good at different things. Kurt calls us a team of experts. We each take the lead when we need to. But when things go really wrong, it's Delaney. She makes decisions even when all the choices suck.\"\n\nI studied her for a second. \"Most of the time, making any decision is better than making none.\"\n",
        "\"Delaney says Needles told her there are an awful lot of flattened squirrels on the road that wouldn't make a decision.\"\n\n\"I think I want to meet Needles one of these days.\"\n\nShe eyed me with a touch of concern. \"You know he's dangerous, right? Like really, really, dangerous. My stepdad told me that, and he doesn't say much about his old unit or the guys in it. He met Delaney, and he told me she has Needles' eyes.\"\n\n\"I thought they weren't related?\"\n\n\"They aren't.\" She stared at me meaningfully.\n\nI took a bite of my sandwich and thought about the simmering rage I'd glimpsed in Delaney. She had it under control; absolute iron-clad control. But it wasn't gone. It was just on a chain. When she needed it, it would always be there. \"A bulldozer?\"\n\n\"A bulldozer.\"\n\nI pictured the trail of destruction an enraged Delaney could wreak with a bulldozer. And Needles thought it was a good idea to teach her that. I needed to think about whether I ever wanted to meet him. \"Sounds a little messy.\"\n\nMackenzie nodded. \"It was messy. But it worked.\"\n\n*****\n\nA Simple Plan\n\n*****\n\n\"So we need to get into the FBI.\" Tess stated it matter-of-factly, like she was talking about buying a hamburger.\n\n\"No, I said the file or whatever it is has to be in the conference room down the hall from my office at the FBI. We can't get in there.\"\n\nI could hear the frustration in my voice. I'd screwed up, and I knew it. The whole damn trip to the Smithsonian Mall had been pointless. I'd been thinking of what amounted to a first date with Michael, not where we'd first met. I hadn't been concentrating enough. The injury, his death, it all had me focused on our relationship, and I'd screwed up. \"The first time I met him, we were both in that conference room for a planning meeting; he was one of about a dozen agents there. I didn't think of it because we were just introduced; we didn't really talk or anything.\"\n\n\"It's not the most secure place in the world. The building is right on the street, not on a separate campus.\" Tess looked over a CAD diagram of the building I was pretty damn sure the FBI security team wouldn't have been happy to know was available. \"If we could get over here... there's a cargo elevator that would take us to the right floor. It's only about 50 feet and a corner from there to the conference room door.\"\n\nShe seemed entirely too comfortable with that. I frowned and shook my head. \"Inside the main security perimeter, up a secure cargo elevator, and into a locked conference room, all secured with key card readers.\"\n\nTess shrugged. \"Could be worse, could be biometric locks, like a fingerprint or retinal scanner.\"\n\nDelaney grinned evilly. \"Oooh. Then we'd have to chop off a finger or pull out an eyeball and take it with us.\"\n\nTess sighed and shook her head. \"It doesn't work that way. An eyeball might be good for a retinal scanner for maybe five hours, if everything goes just right, but the fingerprint scanner wouldn't work. It's not like the movies.\"\n\nDelaney scowled. \"That sucks.\"\n\n\"It's a two-part issue. A severed finger has no electrical field to even activate the sensor and then the RF sensor wouldn't be able to find living tissue to scan. You can't use a dead hand to open a phone either. Same problem.\"\n\nMackenzie stared at her. \"What if you put just put the skin of someone's fingertip over your own? As long as it's fresh, right?\n\nTess shook her head. \"You might be able to trigger the scanner because you do have an electrical field, but would the RF scanner actually read the print? I don't think so. That scanner uses RF to look at the fingerprint so it ignores even the chapped or dry surface of the finger. I think it would probably just read your print, and not the skinned fingerprint. I don't know for sure, not without testing it.\"\n\nThey were taking entirely too much ghoulish glee in the whole discussion, so I cut in. \"Ignoring the fact, just for a moment, that you really are talking about chopping off my finger, I think they frown on that kind of testing.\"\n\nDelaney made a sour face. \"This would be in the name of science, right? Doesn't matter anyway. She said there are none of those kind of locks.\"\n\nI grimaced. \"Not exactly. The conference room has a standalone computer for presentations, and it uses a fingerprint scanner for access. If I had to guess where Michael left me something, it would be on that computer.\"\n\nMackenzie shook her head. \"You'd be locked out. I mean, they can't be stupid enough to leave your computer access turned on.\"\n\nTess shook her head. \"If they do, it's a trap to try to find out where you are accessing the network from.\"\n\n\"On the network, sure, but the stand-alone computers wouldn't be locked up. People on that one are given access individually as needed. Not much chance of anyone even thinking about that one. It isn't used much. But I wouldn't give us good odds on reaching the room.\"\n\nTess gave me a sly look. \"So you're sayin' there's a fuckin' chance.\"\n\nI stared at her with a bit of shock. Not only had the soft-spoken girl never really used foul language before, but she also wasn't using her own voice. If I hadn't been looking right at her when she said it, I'd have never known it was her.\n\nDelaney winged a wadded up candy bar wrapper at her. \"I do NOT sound like that!\"\n\nMackenzie started laughing. \"You do! You sound just like that.\"\n\nTess batted her eyelashes at Delaney. \"You do. You sound just like that.\"\n\nThat wasn't her voice either; it was Mackenzie's. Maybe a spectrum analyzer could tell the difference, but I couldn't hear it.\n\nCandy wrappers snapped back and forth for a couple of minutes until they got the horseplay out of their system.\n\nI looked at Tess. \"You're pretty good at impressions.\"\n\n\"I found out I was good at it when we studied voice imitation in counter-surveillance...\" She stopped abruptly and looked at the other two girls. \"I bet she would tell us a way in.\"\n\nMackenzie shook her head. \"You know her agency can't get involved, Kimmi told us that.\"\n\n\"Maybe they can't, not directly. But she isn't big on being told what she can and can't do; you know that. I'm sure she can at least tell us how to get in.\" Tess sounded convinced.\n\nI had a sick feeling that I knew the answer, but I had to ask. \"Who?\"\n\nDelaney gave a feral grin that amped up my sick feeling. \"Nobody.\"\n\nFuck.\n\nFuck. Fuck. Fuck.\n\nThe Nobody Girl, aka Spooky, aka who-the-hell-even-knew. Donna's operative. I'd tried to look into her, find out who she was, once. I looked until a nicely worded hand-written note card appeared in my office safe, asking me, quite politely, to stop poking around in her business. Spooky was feral, almost rabidly anti-social, and fiercely dedicated to Pogo, her son, and what she saw as her duty. As best I could tell, she'd started as a surveillance asset and graduated to something of a \"removal specialist.\" She hunted people, some of whom were nearly as dangerous as she was.\n\nOn the bright side, she had obviously managed to get into my office on at least one occasion.\n\nTess pulled out her phone. \"All we can do is ask.\"\n\n*****\n\nSomehow or other, it seemed fitting that rain was drumming on the trailer. All three girls were looking out the windows, intense, nerves on edge.\n\nTess had gotten an answer back within a half hour. Spooky wasn't just going to tell them how to get in; she was going to come by to drop off things they needed.\n\nTheir reaction to the news was somewhere between joy and panic. I'd never really thought of Spooky as a possible subject of hero-worship, but there it was.\n\nSomehow or other, she'd not only managed to teach them surveillance and counter-surveillance, she'd managed to make them really like her, if that was even the right word. All of them seemed enthralled with her.\n\nWhen she finally arrived, she simply parked in front of the trailer, pulled a suitcase out of her car, and walked up. As soon as the headlights showed, the girls carefully spaced themselves around the room.\n\nTess let her in wordlessly without waiting for a knock.\n\nSpooky looked around, then gave a slight smile. An actual smile. Like a human would. \"A grow house?\" She focused on Delaney. \"Good choice. Did you consider incidental discovery?\"\n\nDelaney gave a single quick nod. \"The sheriff knows about the grow house and tolerates it. He doesn't consider it worth the effort.\"\n\n\"What about the owner?\"\n\n\"He won't talk.\"\n\nSpooky gave a curt nod, and I barely managed to keep my shock from showing. She'd accepted Delaney's word with no hesitation. From someone like Spooky, that was almost unheard of. Pogo had drastically understated Spooky's opinion of the team. Probably deliberately.\n\nEven as professional as the girls had seemed, the idea of Spooky actually trusting someone was something I'd never even considered possible.\n\nIf I got through this, I needed to put some effort into keeping an eye on these girls.\n\n*****\n\nGirl Scouts on Parade\n\n*****\n\n\"This is BULLSHIT! Tell me you're fucking kidding me?\" Delaney stomped out of the backroom, shaking her head and waving a tan piece of clothing around. \"C'mon, please.\"\n\nTess started to giggle, and Delaney looked helplessly at Mackenzie. \"Mack, please...\"\n\nThe tall blonde girl shook her head and sighed. \"It's the best we can do. It was the only thing we could think of that could get us into the FBI building. There's a classroom that's perfect for us. It's right there near the corner stairway.\"\n\nDelaney unfurled a tan Girl Scout vest with an array of badges on it. She looked over at me. \"Could you just shoot me now? Please?\"\n\nTess was dissolving onto the bed laughing, and Mackenzie wasn't doing much better.\n\nSpooky stopped working on me and looked over her shoulder at Delaney then over at Tess and Mackenzie. \"The second she opens her mouth, I don't think anyone is going to believe she's a Girl Scout; I hope you two are more believable.\"\n\nMackenzie straightened up. \"We really are Girls Scouts; we'll just be wearing our real uniforms. We're Ambassadors.\"\n\nDelaney started to respond, then stopped and stared at me. \"Holy shit. It worked. You don't look like you at all.\"\n\nSpooky nodded. \"Prosthetics, high-end stuff. CIA has a whole department for it for serious undercover work, but there are theatrical supply stores that sell top of the line stuff. With makeup, it works even at close range. I use it a lot on the fly, so I had to learn to apply it myself.\"\n\nTess and Mackenzie got up and came over. Mackenzie leaned in close. \"That's just eerie. When do we get to learn this?\"\n\n\"This summer, maybe.\" Spooky finished, then flipped through a stack of driver's licenses, finally selecting one. \"This will work. Texas license, age and height are close enough, and the picture is close enough to work.\"\n\n\"Where'd you get those?\" Even as I said it, I felt my gut sink.\n\n\"Wendy.\"\n\n\"How much did that cost?\"\n\n\"A favor to be repaid later.\"\n\n\"Damn it. I can't do that. Not in my position.\"\n\nSpooky nodded. \"I owe her, not you.\"\n\n\"Wendy?\" Tess had keyed in on the discussion.\n\n\"She's a smuggler with a lot of connections. Expensive and pretty mercenary, but she's completely reliable as long as she gets paid. You can trust her, but don't ever run out on the bill. She has a lot of reach and a lot of people who owe her favors.\" Spooky pulled a badge out and turned her attention back to me. \"An FBI 'No Escort Required' cleared contractor badge from the Bethesda facility. It'll read right in the system.\"\n\nLike any government agency, the FBI had countless contractors; everything from carpet cleaning to computer support, and technical experts of all kinds: international finance, military equipment, even online gaming systems.\n\nI looked at the badge. \"What is in the system?\"\n\n\"You're listed as a retired agent, working as a contracted consultant on transnational finance issues.\"\n\n\"That's just about perfect.\" That was exactly the type of person who could get tagged with taking a group of Girl Scouts on a tour of FBI headquarters.\n\nShe nodded. \"They'll all be registered in the system, and the tour is on the schedule.\"\n\n\"I'm not sure if I want to know how you did that.\"\n\nShe tweaked a corner of the latex and started lifting it away. \"I'd normally have made a tour request like anyone else and just submit it through a congressional staff office, but that takes a couple of weeks, so I had to expedite this one. I had someone arrange for a short-notice tour.\" She turned and placed the prosthetic piece over the mannequin head. \"You know how to apply the finished piece, right?\"\n\n\"I've done it a couple of times. It's been a while, but I'm familiar with this kind.\"\n\nShe peeled off her surgical gloves and dropped them into her case. \"Good. This is as far as I can go.\"\n\nI leaned back. \"I understand. No suggestions?\"\n\n\"No, they can figure it out.\" She glanced over the girls, then back to me. \"You're in good hands. Just keep Delaney away from construction equipment and breakable things... like buildings and bridges.\"\n\n\"Geez. It was just that one time...\" Delaney rolled her eyes, but she ruined it with a malicious smile.\n\nAs she left, Spooky reached to each of the girls and brushed the fingertips of her free hand to each of theirs.\n\nThey just stood silent until she pulled away, and for a long moment after.\n\nDelaney gave one last glance after her. \"Okay, can someone tell me about this brilliant plan?\"\n\nTess walked over to the computer and flicked it on.\n\n*****\n\nDelaney didn't look much like a Girl Scout. She'd grudgingly put on the white polo shirt and khaki slacks, draping the sash on as well as she could. She'd even traded her steel-toe boots for a pair of plain white tennis shoes. It all fit perfectly, at least physically, but it just looked strange on her.\n\nMackenzie eyed Delaney critically. \"Smile. Girls Scouts are supposed to be friendly.\"\n\nA pained expression somewhere between a grimace and a snarl crossed Delaney's face.\n\n\"Don't smile.\" Tess shook her head and shuddered.\n\nDelaney pasted an even more implausible smile on. \"How-dy-do, Ya-all.\"\n\nTess stifled a giggle, and Mackenzie snorted. \"What is that supposed to be?\"\n\n\"Ah ahm from the Great State of Texas.\" Delaney made an awkward movement that I suspected was supposed to look like a two-step or some other kind of cowboy thing, but it just looked like she had a hurt leg.\n\n\"What if we told everyone she was mute?\" Tess choked it out as she struggled desperately not to laugh out loud.\n\n\"I'm trying.\" Delaney pointed down dolefully. \"I'm even wearing these duck feet shoes instead of my boots. And I don't even know what these badges are.\"\n\nTess walked over. \"I pulled out ones on stuff you'd know, just in case anyone asks.\" She began pointing. \"First Aid, Water, Cyber-Security Basics, Photographer, Dinner Party, and Survival Camper.\" She looked over her shoulder at me. \"Going out camping with Mack is like camping with Davy Crockett. Delaney just starts building stuff until she's comfortable and fed.\"\n\nMackenzie snickered. \"I thought Kurt was going to die laughing. He left us out for three days last summer, and when he came out to check on us, Delaney practically had a small city built.\"\n\nI checked my disguise in the mirror of the van. \"Some of those tents get pretty elaborate these days.\"\n\n\"Tents? All the camping gear we had was the radio, belt knives, a plastic sheet, food, and a flint. Delaney built beds, a table, and stools before the first day was over. By the time Kurt and Katie came to check on us, we had a two-room house. With a barbeque pit, a fireplace, and an outhouse.\" Tess threw her hands up in fake exasperation.\n\n\"It was just a couple of round lodges.\" Delaney looked a bit less unhappy. \"And you can't blame me for the roast pig. Mack shot it.\"\n\nTess nodded. \"That was really good.\"\n\nThey all sat for a moment, apparently fondly remembering delicious roast pig.\n\nFor a second, I wondered why Girl Scouts would carry guns. They sounded so much like ordinary teenage girls at times that I kept losing track of what they really were.\n\nIt should have been clear. They'd spent half the night preparing. They'd gone over the layout of the building, their cover stories, and the plan repeatedly, at a level of detail that would have gotten approval from any deep cover operations planner on the planet.\n\nThey'd quizzed each other over and over. Room numbers, hallway turns, the number of flights of stairs, how many steps in each flight, locations of maintenance closets, parking garage details. Emergency exits, power outlet locations. Escape routes, exfiltration routes.\n\nTess had even chased down the type of capacitor in the stairwell emergency light sets so they \"wouldn't have to wing it like that one time.\"\n\nI didn't ask, and they didn't volunteer details. Tess muttered something about \"if you don't know, you can't testify about it.\"\n\nThey even religiously repeated a mantra I had heard since I was a junior agent. \"Good operations are smoke and mirrors. They aren't easy; they just look easy because the effort and planning are done beforehand.\"\n\nOne last gear check and they loaded up.\n\nI'd frankly rather have had Delaney drive than Mackenzie, even though I was certain Mackenzie was competent and well trained. I'd had enough drivers to recognize that Delaney was one of the extremely rare few with an innate talent and a natural rhythm with machines. You can't train that; it's just wired in the nervous system. Once you've seen a few ugly motorcade incidents, you really start trying to find those rare few.\n\nMakenzie was just more believable; she had height and a naturally closer-to-adult look that would draw less attention as a driver. Delaney still looked like she should be sitting on a telephone book. The Girl Scout uniform made her look even younger.\n\nThe drive into the city seemed to take forever, but Mackenzie handled the insane DC traffic as if she'd been driving in it all her life, eventually pulling into a parking garage a few blocks away from the Hoover Building.\n\n*****\n\nTourists...\n\n*****\n\nWe processed into the FBI at the visitor center along with several other visitors; senior citizens with a case of curiosity, congressman-sponsored tour groups and even a large high school group from Georgia.\n\nThe Girls Scout \"legend\" was a brilliant choice. With cranky senior citizens and deliberately obnoxious high school seniors, a small group of well-behaved Girl Scouts working on an achievement escorted by an actual cleared contractor was practically a breath of fresh air. We slipped through with minimal scrutiny.\n\nWhatever strings Spooky had pulled worked perfectly.\n\nAs the girls' designated escort, I had no trouble taking them in, and while the woman in charge of processing followed every protocol perfectly, there was no reason for her even to suspect a problem.\n\nWe started working our way through the displays. The girls asked carefully thought-out questions about every display, taking careful notes -- even Delaney. While I expected her questions to veer toward the bloody and more graphic displays, she asked several serious questions about the lines of jurisdiction between the FBI, state agencies, and county level law enforcement.\n\nWith the key card, it wasn't particularly difficult to slip from the public access area into the bureau itself.\n\nWe might as well have been invisible. While everybody we passed noticed us, they had no real interest in us. Admittedly, I would have probably reacted the same way except to maybe stop and introduce myself and voice some platitudes about citizenship and community service. Friendly engagement with visitors, after all, was a policy that I had implemented at the Bureau as a form of public relations.",
        "All things considered, that made encountering Emma all the more ironic.\n\nWe'd just rounded the corner to head for the stairs when we walked right into her. And, of course, per policy, she promptly stopped what appeared to be a heated discussion with a White House liaison officer I vaguely knew and began talking with us.\n\nTess's reaction was flawless. \"Ma'am, aren't you the executive assistant director for the National Security branch?\"\n\nEmma gave a perfect smile. \"I take it you've studied the Bureau.\" She looked over at me, apparently with no recognition at all. \"If you have a moment, I can talk with them for a few minutes. I was due at a meeting five minutes ago, but they won't start without me. So we can talk unless you have a schedule to keep.\"\n\nThe White House Liaison gave a sour grimace and did everything but stamp his foot impatiently, which made it easy for me to shake my head. \"We have plenty of time.\"\n\nThat earned me a slight side-eye from Tess when she realized she wasn't the only one with a talent for accents and voices. It'd been a while, but I easily slid into an old Connecticut accent, which oozed good schools and affluence, although not at Emma's Swiss boarding school level. I kept my voice a bit higher, with a slight quaver, the voice of retirement. It was far from my normal central Virginia accent. She showed no sign of recognition at all.\n\nEmma had one of her aides grab an empty briefing room and gave what I, at least, considered an outstanding bit of community engagement, despite the fact that I really wanted to be almost anywhere else.\n\nThe girls played their parts, asking typical questions and mostly looking fascinated. Delaney asked the usual question we get from kids. \"Have you ever had to shoot someone?\"\n\nEmma didn't so much as twitch. It's a common question; it would have been a little unusual if none of the girls had asked it or at least thought of it. Each agent handles it differently. Emma gave a solemn nod. \"When I had to, to save myself or someone else. It isn't something I'm particularly proud of, but it had to be done.\"\n\n\"My Dad was a Soldier; he says the same thing. Sometimes you have to do what has to be done.\" There was a depth to Delaney's voice, perfectly in synch with Emma's solemn tone. For that moment, they sounded eerily alike.\n\nI remembered my conversation with Mackenzie. More than ever, I was sure Delaney had been forced to make those final decisions, probably more than once.\n\n\"We do our best to avoid those situations, but we can't all the time.\" She gave a practiced, slightly sad smile. I doubted she actually regretted pulling the trigger when she had to, any more than I did, but it was the right thing to say; although, perhaps not with these particular young women.\n\n\"It doesn't happen as often as it does in the movies. Most agents go through their whole career without ever having to engage in a firefight with a suspect.\"\n\nDespite the obvious impatience of the White House liaison officer, Emma took her time and talked to the girls for a solid twenty minutes. Part of that was probably to piss off the liaison officer, but most of it was just, well, Emma. She believed in the FBI at a level that was beyond dedication; she fiercely wanted the FBI to be what it should be, what it aspired to be, beyond politics or petty bureaucratic concerns.\n\nShe sent her aide to her office to bring back FBI lapel pins; she solemnly pinned them first on the girls and then on me before making her apologies for having to leave for her meeting.\n\nWe waited until they were out of sight before moving to the stairwell.\n\nI had an almost irresistible urge to break out in a very un-deputy-director-like giggle but managed to bring it up short. The girls chattered loudly and excitedly about how cool it was to meet the EAD for National Security. But the excitement never quite reached their eyes; deadly cold and serious, they scanned relentlessly.\n\nTess did a silent count before checking around the corner and gesturing us into the stairwell.\n\nWe walked up slowly as I lectured about the history of the FBI. If anyone ran into us, we'd just keep going and project that we had every right to be where we were.\n\nMichael used to joke that if you want to be left alone in the Army, carry a clipboard and look busy. Anyone with any sense will stay clear just to avoid getting dragged into whatever task you've been tagged with.\n\nNot everyone in the FBI was as enthusiastic as Emma about the engagement policy I had put into effect. Most would simply walk by an obvious officially sponsored tour and try desperately not to make eye contact to avoid getting pulled in and disrupting their already packed schedules.\n\nI was careful to keep my \"voice\" in character. Regardless of what the movies show, it is extremely difficult to maintain a fake accent or voice pattern over any real length of time, even with professional training. Like Tess, I'd always been a natural mimic, but even with that advantage, I could only push it so far.\n\nThe fact that I was basically giving part of the speech I gave to every FBI Academy class was both good and bad. All too easy to remember, but all too easy to fall back into my natural voice and speech pattern.\n\nIt was also pointless as we didn't run into a single person. I could take some justifiable pride in that; one of my few contributions to the girls' planning process. The FBI, like every other large bureaucracy, has patterns. Work hours, lunch times, external drivers, distribution of subordinate and implied tasks, along with the driving need for internal communications, all work to force most meetings into a relatively narrow band. At times, the halls are crowded with passers-by. There are also times, even inside the FBI, that you'd never know that anyone worked there. Emma running late had been a fluke of timing.\n\nWe reached the door, and I prayed for two things; that the key card would work and that no meeting had been scheduled for the room. It was rarely used, but bad luck happens, and coincidences can kill.\n\nI scanned the card, held my breath and pushed the door open.\n\nEmpty.\n\nThe energy-saving motion-detecting lights kicked on as I stepped in. The room smelled a little musty in that oddly specific way; that peculiar smell of an abandoned room.\n\nIt was the perfect place for Michael to have left me a message. I figured he had probably put it on the shared folders on the computer.\n\nI smiled as I headed for the computer kiosk; all I had to do was figure out the name of the file or folder. We'd shared a lot of secrets, a lot of private thoughts. We practically had our own secret language. I knew it would be something I'd recognize instantly.\n\nLong time lovers can do that. Build those private worlds that only they know.\n\nI... I stopped.\n\nThe kiosk was empty. The various data lines, audio and video cords, USB and other cords were sitting randomly across it, like tentacles of some dead ultra-modern sea creature.\n\nDelaney came up on my left and stared at the empty space where the computer was supposed to be. \"Fuck.\"\n\n\"Fuck.\" I echoed her. She was clearly a bad influence on me. But then, even on reflection, I couldn't think of a better word to use.\n\nMackenzie visibly deflated as she took in the view of the empty kiosk. Tess moved slowly and looked around darkly. \"Was that the only computer?\"\n\n\"Yes.\" I sighed and stared at the ceiling. \"That was it.\"\n\nI felt the walls closing in. I'd been wrong on every count. We'd have to exfiltrate, and then I needed to find a way to get out of the US. I was putting everyone I came in contact with at risk.\n\nWhat the hell was I even thinking? Teenage girls playing bodyguard? Sneaking into the FBI with Girl Scouts? Jesus.\n\nI looked around. Delaney was watching the door, jaws clenched, struggling to keep her annoyance in check. Mackenzie was putting on a brave face, but I could see she'd taken a hit.\n\nTess... Tess wasn't annoyed or disappointed...she was scanning, breaking the room into sections and looking it over methodically. She looked up at me with a calculating, almost machine-like expression. \"Where were you exactly when you met him?\"\n\nI looked over the room. \"Over there at the table, but there's no computer there.\"\n\nShe shook her head. \"There's plenty of dust on the kiosk where the computer used to be, but no outline. That computer was long gone before this ever started. Nobody has been in here for months. He had to know that.\"\n\nShe was already moving to the chair I'd pointed to; she pointed to Delaney. \"Stay on the door. Mack, I need a light.\"\n\nDelaney gave a curt nod and moved closer to the door, in a position to \"accidentally\" temporarily block entry. Mackenzie reached up into her hair and pulled out a hair clip that turned out to be a miniature flashlight. It would have looked like any other hair clip on the backscatter x-ray we'd passed through.\n\nWith one quick look at the door, she was on the floor and scooting under the table.\n\nIt took her about thirty seconds, and only that because either Michael or me had misremembered the precise location. Embarrassingly. It was probably me; I'd been a Special Agent at the time, so I probably hadn't been as far up the table as I \"remembered.\"\n\nShe rolled out with a high capacity flash drive in her hand and gave me a smile with a wry twist as she held it up to me. \"You know anyone named 'Legs?'\"\n\nI felt myself flush red. Michael's nickname for me had only ever been spoken when we were alone. Usually completely undressed.\n\nAll three girls shot me quick, sly looks. Mackenzie smiled knowingly. Delaney glanced down over my legs and snorted. \"Figures.\"\n\nI concentrated on the flash drive for a long moment; right up until Mackenzie plucked it from my hand and tucked it into her hair.\n\nExiting was far easier than I expected. For a change, everything went smoothly -- passing through security on the way out went without a hitch. We even stopped at the gift shop.\n\nA few minutes later, we were on the crowded sidewalk and headed to the parking garage.\n\n*****\n\nWolves in the Darkness\n\n*****\n\nWe made an effort not to look like we were hurried or rushed, but we moved with a definite sense of purpose.\n\nTess pushed me into the van, and we rolled out before I could even get my seat belt buckled.\n\nI looked around. \"Where's Delaney?\"\n\n\"She's meeting up with us later.\"\n\nIt chilled me that I hadn't even noticed her drop out of our group. \"I don't like leaving her...\"\n\n\"We didn't leave her.\" Mackenzie was insulted, but she kept her tone even, if a hair clipped. \"You're paying us to do our job. At least, I hope we're getting paid. Just let us do it.\"\n\nShe moved the van through traffic as smoothly as any driver I'd ever had assigned, and we'd escaped just ahead of the heaviest surge. Rush hour is a kind of obsolete concept in DC, but there are heavier and lighter moments.\n\nWe were well south when I sensed a change in Mackenzie. She hadn't done or said anything, but it felt like the temperature had shifted. Tess caught it too, raising her eyes only slightly from her laptop.\n\nMackenzie finally spoke. \"They are definitely on us. About a half mile back; silver sedan and black SUV closing slowly.\"\n\n\"They'll wait a while. Catch us out where there isn't any traffic. Less chance of police interference.\" Tess had a map up on her laptop, and I could just see the corner.\n\n\"That's what I would do. They have to know this van can't outrun anything.\" Mackenzie scanned the road.\n\nWe were another five miles down the road when Tess spoke. \"Five hundred meters. They're waiting for traffic to clear. Probably another three miles.\"\n\nShe shifted her laptop, and I realized she had activated the backup camera on the van somehow. Mackenzie kept looking straight ahead. \"Got it. Are you buckled in?\"\n\nI realized the last question was for me. \"Yes.\"\n\n\"We have a plan for this. Just hang on.\"\n\nAfter a few more miles, Tess glanced at Mackenzie, then back at the screen.\n\n\"They're moving up. One hundred fifty meters.\" Tess pulled a handgun out of the glove box and passed it back low between the seats to me, followed by two extra extended magazines. \"Hang on to it just in case.\"\n\nI looked down at it for a moment. A Glock, but not one I'd ever handled before. Distinctive, almost unique factory barrel porting. I twisted it and looked at the rear left of the slide. A selector switch for full automatic. \"An 18C.\"\n\nTess didn't blink. \"Twelve hundred rounds per minute with three magazines; armor piercing. If this goes wrong, use it. We'll hold them as long as we can. You get free. Contact K2.\"\n\n\"If you have to fight, fight like you're the third monkey on the ramp to Noah's Ark, and it's starting to rain.\" Mackenzie's laugh sounded all too much like Delaney's, and I had no doubt where that saying had come from.\n\nOur pursuers continued to close quickly as Tess called the distance. \"Fifty meters. Two in the sedan, four, maybe five in the SUV.\"\n\nAt twenty-five meters, Mackenzie took a deep breath. \"Now.\"\n\nTess straightened up and looked directly back over her seat at our pursuers, and sat back down. I choked in shock. It was a completely unprofessional move; there was no way our hunters could have missed her looking back at them through the untinted windows.\n\nTo make matters worse, Mackenzie stomped on the accelerator, pushing the van to its pathetic limit as we pushed past the last of the traffic, an old battered pick-up truck. We sure as hell weren't going to outrun them, but now they knew we'd seen them.\n\nThe blatant amateurishness was so completely out of character I could only sit and watch in horror.\n\nWe pushed ahead, and they followed, leaving the few remaining vehicles behind.\n\nThen I noticed that Tess was smiling. So was Mackenzie. Not normal, happy teenager smiles. A hunter's anticipation.\n\n\"Is it him?\" Mackenzie's voice sounded like a hungry growl, and I wondered for a moment if Delaney's feral nature was contagious.\n\nWhen Tess answered, the predatory sound made me was certain it was. \"It's him.\"\n\nBefore I could ask what the hell they were talking about, Tess went on coolly.\n\n\"Do you think he wants her alive or dead?\" The casual tone in Tess' voice was disturbing, especially if I focused on the fact that I was the \"her\" that Tess was so casually asking about.\n\nGlancing in her mirrors, Mackenzie gave a half frown for a second. \"Dead. All the windows just came down, and I saw a long gun barrel. The sedan gets ahead of us, boxes us in, the crew in the SUV shoots us up and finishes us off after we wreck. Not that it matters.\"\n\n\"Not real creative, are they?\" Tess twisted in her seat, eyes sparkling with something like glee but hungrier. She caught me looking, and her smile widened a bit more. \"Spooky says a friend of hers has a saying.\"\n\nMackenzie gave a soft, almost mocking laugh. \"Wolves are the most dangerous of prey. Because they always hunt you back.\"\n\nI turned to see what she was looking at. The SUV never had a chance. Our pursuers were locked on the van. Realizing we'd seen them and were running, they did what predators instinctively do.\n\nThey chased, trying to close the distance.\n\nThe old farm pickup truck we'd passed suddenly surged from behind, and Tess laughed and spoke in an eerily flawless Russian accent, in a beautiful angelic voice I recognized all too well. \"And there are always more wolves in the darkness.\"\n\nPolice sometimes call it tactical vehicle intervention, although I'd heard the term tactical ramming used. These days, it is usually called a pursuit intervention technique. Or just a PIT maneuver.\n\nThe men in the SUV didn't catch on fast enough, although if they had, it probably wouldn't have made any difference at all; the truck was far quicker and more powerful than it looked. It pulled up until the front bumper was just even with the back of the rear passenger door of the SUV, then seemed to lunge into it, pushing the rear sideways, forcing it to spin out.\n\nA police officer would have backed off as the SUV fishtailed, but the truck pushed harder, and it was both far heavier and more powerful. It forced them onto the shoulder and beyond.\n\nThe SUV driver was good; he tried to pull out of the fishtail, and turn it into a J-turn, but the narrowness of the road, the high center of gravity, the speed and the sheer power of the truck were too much. The SUV went into the ditch and crunched into a hard rollover.\n\nEven if the crew weren't seriously injured, the SUV itself was done.\n\nThe truck neatly evaded the wreck and pushed ahead, far faster and more agile than an old farm truck should have been. The guys in the sedan reacted, but quick as they were, they had nowhere to go. Boxed in from the front by our van, their chance of evading the overpowered truck was near zero. They'd been caught by the same maneuver they'd planned to use on us. Their only chance was to get past us and run for it.\n\nMackenzie twisted the van slightly when the sedan tried to pass us, forcing him to compensate.\n\nIt was only for a fraction of a second but easily long enough for the vicious predator-truck to slam in and force them off the road and into the ditch, where it rolled. I caught a glimpse into the truck and wasn't at all surprised to see Delaney, her rage intensely focused, teeth bared as she slammed her vehicle to a stop next to the still rolling wreck.\n\nMackenzie had the van stopped, into reverse, and was back to the wrecked sedan before I could even react, bumper to bumper with the old farm truck.\n\nTess dropped out the door, moving low and fast, clutching something in her hand. I could see Delaney ahead of her, some kind of gun leveled at the wreck. The girls moved wordlessly in from the front, light and fast. It made sense, as the deployed airbags blocked anyone inside from seeing where they were as they approached.\n\nMackenzie was out, using the corner of the van as a prop to steady a rifle at the ready. They must have had a hide built into the van, as I'd had no idea at all that the heavy, magazine-fed rifle was there. A military nightmare of some kind; I didn't recognize it, but the shark-like profile, large scope and wide magazine all pointed to something that could go through a vehicle from end to end.\n\nDelaney and Tess hit the open windows simultaneously, and I could hear the snap and stutter of police-grade stun guns.\n\n\"Two tangos, two down! Our package is on the passenger side.\" Delaney yanked the door open.\n\nRifle in one hand, dragging a bag in the other, Mackenzie rush to her side while Tess stayed focused on the driver.\n\nAn unbelievably short time later, Delaney and Tess roughly dumped a bagged, handcuffed, and duct-taped figure into the rear of the van while Mackenzie kept the area covered with her rifle. Delaney pulled what looked like silvery survival blankets out of a pocket, and they hurriedly wrapped him in them.\n\nWe pulled away, and Delaney gave a flippant wave as she pushed ahead of us.\n\nA few minutes later, Mackenzie started talking. \"We figured there'd be a good chance they'd acquire us at the FBI. That's what we would do. But we didn't figure it would be more than one or two vehicles because there are too many federal agencies in that area that might notice. They needed to keep a low profile.\"\n\n\"So you gambled. Too much. You didn't need the guy. We probably have what we need, and hired muscle isn't going to know anything useful.\"\n\nA look shot between the two girls before Mackenzie turned to followed Delaney down a dirt road. \"We created an apparent tactical opportunity for them and then exploited it. We know our limits. We had to maximize our advantages.\" She paused for a second. \"And we have our reasons for taking this guy.\"\n\nTess shot her a warning look, and she stopped. I figured that was a pretty clear sign that subject was closed.",
        "We bumped down the road for a few miles until we pulled into a barn. An older Toyota SUV was waiting inside.\n\nDelaney hopped out of the truck. This close, I could see how heavily reinforced the front bumper was; just short of an I-beam -- and it looked like everything else was equally sturdy. \"We'll come back later for the van and the tank.\"\n\nShe caught my expression and answered my questions before I even asked them. \"It's armored, even the glass is good enough to stop most handgun rounds. You can buy anything on the internet. Gets about four miles to the gallon, though, so it doesn't have much range, even with the extra self-sealing tank.\"\n\n\"That limited range is why you had to pre-position it, isn't it?\"\n\n\"Yeah. 'Excuse me while I refuel; I'll be back to PIT you in a few minutes.' It just doesn't work.\"\n\n\"You had to have another vehicle down near the FBI.\"\n\n\"A motorcycle. Best way to get through heavy traffic and get ahead of everyone.\"\n\n\"And you couldn't let me in on this plan because...?\"\n\nThe irritation in my voice caught Delaney's attention. She frowned. \"This is important to you, but it's fucking important to us, too. We're risking a lot, and that means we get to choose how to do this. That's how this works. You pay us to take risks, but we decide how because we know what we can and can't do.\"\n\n\"Like choosing to take them down on the road.\"\n\nDelaney nodded, and tried to bite back her response a bit. \"There were five guys in that SUV, probably all trained and experienced mercenaries, plus the two in the car.\"\n\nShe took a deep breath. \"I've dealt with guys like that before, and they are fucking dangerous.\" She shook her head and shivered. \"These guys weren't ready for us the first couple times because they didn't know what was going on, but by now, they had to have some idea, and they'd have been ready. We wouldn't have had a chance on the ground. We'd have been dead meat.\"\n\n\"I can understand that. Some of these guys may have more years in the field than you've been alive.\"\n\nShe looked a touch mollified. \"We're trained mostly as couriers and surveillance, not combat soldiers, but we can use that. I'm 88 pounds, soaking wet and wearing work boots, but in the tank, I'm a fucking Godzilla. We have tons of driving training, and we've practiced PIT maneuvers hundreds of times, more than most instructors ever get a chance to. If we didn't take them down this time, they might catch up to us later when we didn't have all the advantages. Now their guys are down. They can probably replace them, but that takes time, and if you're right about what's on that jump drive, they just ran out of that.\"\n\nI thought for a second. It was smart, and it made sense, even if I didn't like being used as bait. \"So why did you grab the guy?\"\n\nDelaney gave a short snort. \"We're making the drop in less than two hours, so we have to take you with us anyway.\" She opened the rear door of the van, carefully eyeing the man to make sure the restraints had held before lifting the black hood off his head.\n\nI stared at him for a moment. It took a second since they'd taped gauze bandages over his eyes. \"Is that...?\"\n\n\"Your friend from the mall.\"\n\nTess walked up and stared down at him. \"He's a side quest.\"\n\nI blinked, trying to figure out what she meant, then Mackenzie cut in. \"A target of opportunity.\"\n\nThat, at least, seemed to make more sense.\n\n\"He's cash money; that's what he is.\" Delaney slid the hood back over his head.\n\nThe three girls transferred their equipment and the man to the Toyota. The odd look to the glass and weight of the doors gave away the fact that the Toyota was armored as well.\n\n*****\n\nDelivery Included\n\n*****\n\nAn hour and a half later, we were at a small airfield with only one aircraft on it, a very pricy looking corporate jet with a stylized \"C&W\" on the side. The \"tower\" was a small one-story building that was mostly windows.\n\nThe three girls scanned the airfield with high-end optics and a very nice thermal imaging scope, one that was typically way out of budget for law enforcement.\n\nEventually, Tess called it. \"I have two in the tower, at least one in the plane. None in those open hangers.\"\n\nMackenzie nodded. \"That's what I have.\"\n\nDelaney looked down at her phone. \"K2 says 'site secure, safe to make the drop.'\" She took a deep breath.\n\n\"Let's do this.\" Mackenzie slowly pulled onto the airfield and parked the Toyota some four hundred yards from the aircraft and the tower.\n\nDelaney looked at me. \"You might want to come with us; our contact has some information for you. Kurt says it's safe, but it's up to you.\"\n\nI walked with Tess and Delaney. Mackenzie was leaning on the hood of our vehicle as we walked to the plane, seemingly texting on her phone, but the heavy rifle was right up against her side, out of sight of the aircraft and the tower. Her sunglasses were hiding the fact that she wasn't even looking at the phone. In any case, I was sure her \"cell\" was a rangefinder and ballistic calculator.\n\nThey'd parked so that anyone trying to return fire at Mackenzie would be looking into the bright winter sun, just high enough off the horizon to blind them without backlighting her.\n\nA lone figure stepped gracefully out of the plane and started down the stairs. Somehow I wasn't surprised by the familiar expensive black suit.\n\nShe had a few more grey hairs, but Wendy looked more or less the same as the last few times we'd met. She smiled at me, a smile that would make a wolf check for an exit, if the wolf had any sense. \"Maria. So nice to see you again.\"\n\n\"Wendy.\" The machine pistol was the only comfort I had. I couldn't imagine the girls selling me out, but Wendy's reputation for ruthlessness wasn't something I could completely ignore. \"Nice to see you too. I hope.\"\n\n\"I was in the area when we got the call, so I couldn't pass on the chance to say hello. I was rather expecting you to buy a ticket out. I'd have given you a family discount, you know.\"\n\n\"I decided to try to handle it.\"\n\nShe nodded, then glanced at the girls, noticing they'd moved out and slightly forward, using the body of the plane and the wing to shield themselves from anyone in the tower or the aircraft itself. \"I suppose these two are part of Kurt and Katie's crew.\"\n\nShe stepped down and off the stairs. \"Don't worry, we're clear. I own this airfield. I understand you have a package for me?\"\n\nDelaney stared at her unblinking for a long second and pressed a small bowl-like object onto the aircraft body. \"In the back of the vehicle. He's mummy wrapped in antistatic foil, but we didn't really have time to search him for trackers.\"\n\nWendy nodded. \"Can I send someone to get him?\"\n\nTess signaled to Mackenzie, who popped the back hatch open.\n\nA lone man with a luggage cart headed out of the tower building for the long walk to the Toyota. I looked over at the smuggler. \"Alright, Wendy, I'll ask. Why are you interested in this guy?\"\n\nShe gave a perfectly practiced shrug. \"I'm not. He's just paid cargo as far as I am concerned.\" She gave me a slight smile, just as rehearsed as her shrug. \"The Volkov Group, on the other hand, is most certainly interested in him. The bounty on him is quite substantial, something about a rather large amount of missing money after one of their Syrian operations, or so I hear. If I deliver him, the bounty gets paid with no argument; I subtract my carrying fees and pass the rest to K2. Everybody walks away alive.\" She glanced at the now-loaded luggage cart headed back to the tower building. \"Well, almost everybody.\"\n\n\"Makes sense. Nobody would cross you, not even the Volkov Group. They might try to take delivery then refuse payment to someone else, but not you.\"\n\n\"It's a good deal for everyone.\" She looked at me. \"There's a bounty on you too, very substantial.\" She glanced at Tess and Delaney. Delaney looked back at her laconically. \"But I'm not stupid enough to start anything with K2. It would be bad for business.\"\n\nTess gave a somewhat plastic smile. \"We're glad to hear that.\"\n\n\"Kurt warned me to be on my best behavior. He said any misunderstanding with this particular team is likely to result in... I believe the term he used was 'immediate and substantial property damage.' That doesn't sound very profitable at all.\"\n\nDelaney looked slowly from Wendy to the plane. \"But it'd have been fun. I've never driven a plane before.\"\n\nWendy appraised her for a moment. \"Are you planning on flying it?\"\n\nAn outright evil grin lit Delaney's face as she eyed the distance from the aircraft to the tower. \"I wouldn't have to get it that far. It's got wheels. I'd get it there. I've driven any kinda rig that's ever been made.\"\n\nWhatever I was expecting from Wendy, it wasn't a completely honest answering smile. \"'I've driven the back roads so I wouldn't get weighed.' I haven't heard that in...forever. God, Kurt loves that song.\"\n\nDelaney's grin was suddenly almost friendly. \"He sings it all the time. He was sure you'd remember.\"\n\nCheck and double-check. Delaney and Wendy had just used a secondary pass-phrase and counter-sign. Kurt had told the team they could trust Wendy. The extra layer was a way to ask Wendy if she was under duress. A way to make sure that Mackenzie was the only sniper on the field.\n\nA check set in place decades ago. Damn, it was good to be working with professionals.\n\n\"We used to...\" Wendy stopped and looked down at her red-soled Christian Louboutin high heels for a moment. \"I'm glad he still sings.\"\n\n\"Every week, the training team does a Karaoke night.\" Tess shook her head with a rueful smile.\n\n\"Please tell him that Chip and I would like to try to drop by some time.\" Wendy sighed and looked at them. \"Can I get a moment with your principal?\"\n\nWe walked several feet away.\n\n\"Evelyn said to put your ticket on her tab if you need one.\"\n\n\"No, I think we've just about finished this.\"\n\n\"In that case, she said to let you know that she is covering your K2 bill. She sees this as her responsibility.'\n\nI snorted. \"I'll let her do that. I don't even know how much this will all cost.\"\n\n\"It'd be pretty substantial. Kurt says your team is a premium service.\"\n\nI looked back over at the girls. \"You don't exactly seem surprised by teenage mercenaries.\"\n\n\"One hears things. The fact that they placed sniper cover and put hollow charges on the undercarriage as soon as they walked up makes it pretty clear that at least some of the stories are true.\"\n\n\"I saw that.\"\n\nWendy gave a solemn nod. \"If you can't be sure you'll win, make it clear that there's an unacceptable cost to trying to take you down. It's practically the story of my life.\"\n\n\"Mine too, although it's usually political and not murder attempts.\"\n\n\"There's a difference?\" She looked pointedly at Delaney. \"So that you know. She has a very substantial price on her head, too.\"\n\nI followed her glance. \"One does hear things. Do you know who?\"\n\n\"I haven't pinned that down; it's a rather secretive issue, even by my standards. The rumor is that it's a trap. According to the story, everyone who's tried to collect has ended up quite dead, and the body count is supposed to be very, very high.\"\n\n\"I've spent enough time with her to suspect the body count rumor is probably true. Besides, it'd have to be one hell of a lot of money to risk bringing K2 down on you.\"\n\n\"Kurt and Katie would take it very personally.\"\n\n\"But they're okay with this...?\"\n\n\"It's different. Business is business, Maria. Inherent risk. Kurt doesn't write greeting cards for a living.\"\n\n*****\n\nOphiocordyceps unilateralis\n\n*****\n\nI sat alone in Mooky's bedroom with a brand new laptop. Getting into the flash drive was simple. The passphrase prompt was \"Cabo Bikini.\" Only I knew what the obvious answer to that was. And I have every intention of taking that to my grave.\n\nFor a long while, I paged through document after document. Pay-offs, pay-outs, promises made, promises kept.\n\nWire diagrams outlining a vast conspiracy intended to dig in and spread like a cancer.\n\nI'd seen something like this before on some nature show. There's a horrifying fungus that can infect ants. It takes them over from the inside, growing next to the brain and eventually taking over the central nervous system. When it does, the ant does whatever the fungus programs it to do. It has no resistance and no will. The ant looks the same, but serves to do whatever the fungus needs to grow stronger.\n\nUntil the ant dies, of course.\n\nFolder after folder, document after document.\n\nI clicked on a video in a folder, then just stared at the screen, feeling sick. Michael's thin, ravaged face stared back at me, frozen. I'd paused the video to catch my breath. I'd spent the last several days suppressing this. Not thinking about Michael actually being gone. As much as I had known it was coming with cancer advancing relentlessly, it still hurt almost too much even to feel real.\n\nI pressed \"play\" even as I willed myself not to.\n\nHe'd suspected they were on to him, that they had people inside the Bureau. He wanted to look into one more thing but couldn't risk losing the data. One copy on him, one taped to the underside of the table. One more thing to do. The date on the file was the night before he was killed, the same day this all started.\n\nHe broke the one rule we'd always followed. He talked about the should-have-beens, the could-have-beens, and what we really meant to each other.\n\nEven when the video stopped, I couldn't stop looking at him. I choked and held myself and felt all my internal walls give way.\n\nIt was almost two hours later when I left the room. All three girls took one glance and looked away uncomfortably. With my red puffy eyes and splotchy skin. I might as well have had a sign around my neck that said, \"cried for hours.\"\n\nThe moment he saw me, Mooky got up from the counter and wordlessly gave me a gentle, practiced hug. The kind of perfect hug that someone who has dealt with grief over and over knows how to give. When we finally stepped back, he gave me a soft, understanding, sad half-smile.\n\nAfter a long moment of quiet, Tess spoke up. \"So what do we know, and what do we do next?\"\n\n*****\n\n\"Synarchists, Dude.\"\n\nDelaney stared at Mooky in puzzlement. \"What?\"\n\n\"Super rich guys trying to take over the government. This isn't the first time. It was, like, the 1930s.\"\n\nTess shook her head slowly. \"What are you talking about?\"\n\n\"They've tried this before. There was like this secret cabal of rich guys...\" He raised his eyebrows \"...who wanted to rule the world. Dude named Smedley... Marine dude... Butler, yeah, Smedley Butler. I remember 'cause that's like the coolest name...\"\n\nMackenzie looked doubtful, but Delaney's eyes narrowed. \"Dude. Focus. What did he do?\"\n\n\"He dimed them out. They tried to use him to take over, but he called them out to Congress.\"\n\nDelaney swiveled to look at me. \"Is he right?\"\n\n\"It's been a long time since I took history, but it sounds vaguely familiar.\"\n\nTess looked up from her computer, looking drawn. \"General Smedley Butler. The Business Plot of 1934 to overthrow the US government. Congress just sort of glossed it over, and everybody pretended it hadn't happened. Too many people with too much money and too much power involved.\"\n\nDelaney gave Mooky a suspicious stare. \"Where did you hear about this stuff?\"\n\nHe shrugged. \"I have a friend, Petey, and she does this podcast. Cool stuff, you know. Aliens, weather control machines, she's the real deal.\"\n\nAt a total loss for words, Delaney held her hands up in surrender and looked back at Tess. \"Just stick to the plot; let's not worry about weather control machines for now.\"\n\nWe all moved around next to her and looked at the screen. Tess took a deep breath and put one finger up to the screen. \"Look at the names.\"\n\nDelaney looked at the ones Tess pointed out. \"You have got to be fucking kidding me. It's been a hundred fucking years.\"\n\n\"Almost.\" My voice sounded hollow in my ears. Reisner, McGuire...Reinhardt.\n\nMackenzie's tone came in a whisper. \"It wasn't just the US, was it? France... they really meant it...\"\n\nShe looked up at me. \"Or still mean it.\"\n\n\"They spent three hundred million dollars trying to pull it off in 1934.\" Tess brought up another page briefly. \"That's almost six billion today.\"\n\nDelaney's lip curled in a nasty sneer as she looked at the screen. \"Billionaires. That kind of money does something to people. It rots their brains and makes them think they're fucking gods or something.\"\n\nI shook my head. \"Aren't you the one that called the guy 'cash money' earlier?\"\n\nShe gave me an unblinking stare. \"I don't want money for money's sake. Money is just a tool to stay alive. I've dealt with people with this kind of money before.\" She gestured sharply at the screen. \"They turn into monsters.\"\n\nFor a moment, she stared right through me, her eyes focused on a different time and place. Delaney's lip curled, grim and predatory.\n\nHer jaw twitched and tightened; I could see tension and rage building in her, wire-taut nerves starting to fire, a growing manic glitter beginning to burn in her eyes. Something, maybe hatred, flashed behind the anger. \"We're going after them, right?\"\n\n\"No.\" I waited until she turned her now-unblinking stare on me. \"This is for other people.\"\n\nShe was trying to figure out whether she believed me or not. I continued. \"Part of this goes to the FBI and the White House. They have the resources to do this.\"\n\nTess looked over her computer. \"The government didn't do much with it last time.\"\n\nThey already knew too much to bother hiding the rest, so I continued. \"Some of it will go to Spooky's people, and some to the people Pogo works with. They won't stop. Ever.\"\n\n\"What about us?\" Mackenzie seemed to be doing math in her head.\n\n\"I'd like to keep you and K2 out of it. This isn't your fight.\"\n\nDelaney looked put out. But she smiled when she heard what else I had to say. \"Besides, I'd like to keep you as a really nasty surprise if things go wrong.\"\n\n*****\n\n\"I got a call from the Director of the FBI this morning.\" On the tablet, I saw Derek lean back as he talked.\n\n\"Let them know that once we see Reisner and McGuire in cuffs on the news, we'll talk.\"\n\n\"I already did, but it's not going to happen. They found Reisner hanging in his shower this morning. Deputy Assistant Secretary of Defense McGuire had a fatal one-car accident last night.\"\n\nI shook my head. \"Not very subtle.\"\n\n\"I think that's the point. To me, it looks like somebody has taken this personally.\"\n\nFor a moment, I wondered what he actually knew. Maybe Donna had let Spooky off the leash, maybe Howard was cleaning up, or perhaps the conspiracy was cleaning up after itself. Too many maybes.\n\n\"Maybe.\"\n\nHe flipped a page to check something out. \"The FBI has swept a bunch of the lower level ones on the list, but a little bird told me that they were in it for the money and didn't really know who they were working for. Some in Homeland and Department of Defense, a number in the AG's office, some in the FBI. A fair number of Congressional staffers. A few more scattered across different departments and agencies. Even HUD.\"\n\nA few hours later, I watched on the news as Emma, cane in hand, stood quietly behind the FBI Director as he conducted a press conference regarding a spy ring that had been uncovered \"by hard work and sacrifice.\" He briefly introduced her as the lead on the investigation.\n\nIn the back of my head, I could hear Michael chuckle. Wherever they were, the leaders of the conspiracy had to be taking a very deep breath. Early on, Emma's insane drive had combined with her lack of height to give her the somewhat sneering nickname \"Dangermouse.\" Now that name was only spoken with respect, mostly by members of the Hostage Rescue Team. Emma was a fanatic, the FBI-as-it-should-be was her religion, and she, a Holy Priestess, would fight to the death keep it pure. Worse yet, there was no way to buy her off. As Evelyn's daughter, she was the heir to the almost incomprehensible billions of the Reinhardt fortune. She should have been the conspirators' natural ally; she should have been one of them, as her forbearers had.",
        "But Emma detested that vast fortune and everything it stood for. She saw it as rot, corruption incarnate, a soul-devouring source of evil. Somehow though, I doubted she would hesitate to use it as a weapon against these new Synarchists if she had the chance. They were heretics and apostates in her eyes. I had to smile along with Michael at that.\n\nShe stepped up to the podium, and in terse, diamond-hard words, explained that she was leading the effort across several agencies and the FBI itself. Her tempo stayed precise, synchronized to a metronome, and her inflection was perfectly even. But her hate and fury radiated blindingly. She had the eyes of her father, The Reinhardt, and those eyes blazed with the cold blue fire of her fury. The Heretics had breached the walls and defiled her sacred grove. When she stated levelly that she would use every tool at her disposal to hunt the rest of the conspirators down, it was a clear warning.\n\nThe Reinhardt Apparent was taking up her sword to go to war.\n\n*****\n\nAftershocks\n\n*****\n\nThe White House Chief of Staff leaned back in his chair and looked between the director and me. \"So, we paint this as a planned covert operation. Deputy Director Hawthorne and Michael Sandeman's remarkable work to uncover foreign corruption of senior officials in the government gets publicly lauded, gets noted in the papers and on the Sunday news circuit, and we're covered.\"\n\n\"Point of fact, this wasn't a government action, it was...\" The director showed a bit more spine than I'd expected.\n\nThe chief of staff cut him off. \"As far as the public is concerned, this was the work of a foreign country, details classified. Imagine how the public would react if they knew that some of the companies that make their toothpaste, build their cars, and let them play funny cat videos were buying government officials, planning to put them into higher office, and were willing to kill to do it.\"\n\nI pulled myself a little forward. \"I think you underestimate the public. I honestly doubt they'd be remotely surprised.\"\n\nThe chief of staff studied me for a second, with a glint of malicious humor in his eye. \"You sound a touch cynical, Maria.\"\n\nI just stared back at him. \"Being hung out to dry has that effect. I didn't exactly get the full support of the administration on this.\" He'd been one of the talking heads on the news calling for my immediate arrest. But Emma herself had grudgingly cleared him of any involvement. I wondered if he realized how close he had been to a traffic accident or suicide note.\n\nHe gave a soft chuckle. \"Whatever you think of me, we have common interests here. If the full details of these activities were released, there'd be repercussions that we couldn't predict, much less control. Transnational banking institutions involved in the murder of a very senior FBI agent and the attempted frame and murder of a deputy director? We'll officially set up a task force to figure this out, but I think it would be best if the public just blamed it on the Russians or Chinese.\"\n\nThe finality in his voice was clear. Worse yet, he was probably right. I gave a single unhappy nod.\n\nThe director looked doubtful. \"You think anyone is going buy into the fantasy of a deputy director going on a covert mission?\"\n\nThe Chief chuckled. \"They'll believe it, Jonas. Have faith. This is an Age of Miracles. We have the perfect superhero fantasy. Just picture it: 'One woman puts it all on the line to save her country and avenge her lover.' We have a few conveniently dead foreign mercenaries, a rash of arrests, and three suicides to show results. It also has the advantage of having quite a bit of truth to it.\" He paused. \"The only problem with this is that we're creating a real superhero, and I suspect that may be very dangerous.\"\n\nI had wondered if he had thought it through that far. He was smart and ruthless, so of course he had. I shrugged, trying to look harmless and not pull out any stitches. \"I just want to be left alone to do my job.\"\n\n\"Don't we all. I'm going to take a rather obvious guess here and assume that you see a large part of that as pursuing the line of investigation into these Synarchists, as you so aptly named them in your reports?\"\n\n\"I do.\"\n\nHe stared into the wall for a long moment. \"Do what you have to do but keep it out of the light.\"\n\nThe director shifted uncomfortably. \"This is very risky.\"\n\nThe chief gave a long slow sigh. \"She's already dangerous, Jonas. Think about it. Shot, with a collapsed lung, yet she still manages to escape while taking down several of their assets. With her background as an agent, I can almost understand that. But...the rest, Jonas? Infiltrating the FBI itself? You assured me she had no access to Bureau assets and that her 'unofficial' associates were under observation. I confirmed that with my own sources. She knows how to do this.\"\n\nHe looked at me with one raised eyebrow. \"Satisfy an old man's curiosity, Maria. How did you pull it off?\"\n\n\"I fought fire with fire. They used mercenaries. I hired better ones.\"\n\n*****\n\nMy secretary, Peggy, smiled up at me as I passed her desk. \"Good morning.\"\n\nI nodded and poured myself a cup of coffee. \"Anything I need to know about?\"\n\n\"Remember your meeting with Cyber at two and the preparation meeting for the pre-budget meeting at three.\"\n\n\"It's great to be back,\" I commented wryly. I fingered the FBI lapel pin I'd gotten from Emma and smiled again for the tenth time today. Emma had puzzled over the lapel pin for a couple of days, and then the light had dawned. She'd never said anything, but the sudden smile of amusement had been unmistakable. Emma would never say anything, of course, never risk the compromise, but all the same, the pin made her smile every time.\n\nPeggy chuckled at the despair in my voice, then stopped. \"Oh, maintenance is here to test the air vents. Checking for mold, he already did the outer office.\" She pointed to a blue coverall-clad man in the waiting area.\n\n\"Let me check my desk.\"\n\nAfter making certain there were no classified documents on my desk and the safe was locked, I buzzed her to let him in.\n\nThe slightly rough-cut looking guy came in, nodded to me and wordlessly ran what I assumed was an air sampler over the vents, making notes as he went. I sat down and got to work booting up my computer.\n\nSomething felt slightly off, and I looked up. He was sitting in the chair across from my desk, looking at me contemplatively, smoothing a full mustache. A glance toward the closed door to the outer office told me most of what I needed to know. His eyes told me the rest.\n\nI had my service weapon in my purse, in the bottom drawer of my desk. Not a good idea. I'd never get to it in time. The remarkably illegal machine pistol the girls had left with me was under the dash of my car. That had seemed logical at the time, but now...\n\n\"Mister Dawes.\"\n\nHe nodded once, then kept right on looking at me searchingly, trying to decide something.\n\nI put my hands open on the desk very carefully. \"What can I do for you?\"\n\n\"Kurt is dealing with Kim. He's making her pay Delaney and the girls a triple bonus. Kim would rather be waterboarded than do that. Even with the amount of money you paid her, Kurt says she'll barely clear overhead on this one.\" He paused for a second. \"Mooky's a fucking idiot. Doing anything to him would be like kicking a cocker spaniel puppy for peeing on the floor.\"\n\n\"Mooky's a decent guy. And he didn't really have any choices.\"\n\n\"I know. Delaney told me.\" He gave a low sound like a chuckle. \"It's cute that you got him a federal open research license for his little weed farm.\"\n\n\"I owed him something.\"\n\nHe nodded. \"Probably. Either way, that leaves you.\"\n\n\"It does.\"\n\n\"Delaney won't lie to me. From what she told me, you didn't know anything at all about her or Tiffany before this all kicked off, and that gives you a one-time pass. If you did, I'd expect you to know it'd be a better idea to bleed out than drag any of my girls into shit without my fucking permission.\"\n\n\"Thank you.\" I hoped that sounded as honest as I meant it. His voice was entirely conversational, almost friendly, but I was starting to understand why everybody was so cautious.\n\n\"Problem is, you used her to break into the FBI after you knew. That's not covered by the one-time pass.\"\n\nI waited. There wasn't much to say to that. It was true. Pleading expediency obviously wasn't going to fly with him.\n\n\"If you'd gotten her hurt or gotten her into anything she couldn't handle, we wouldn't be talking.\"\n\nDelaney definitely had his eyes.\n\n\"I'm not sure there's much she can't handle.\"\n\nThere was a flash of pride mixed with a touch of pain in his face, but it was gone in an instant. \"Either way, if this hadn't been such a milk run, I'd have been pissed.\"\n\n\"Breaking into the FBI is a milk run?\"\n\nHe gestured at himself and the office around us, then shrugged. \"Apparently.\"\n\nI couldn't help it; I laughed. \"Okay, you have a point. I really need to have a long talk with our security team. You don't have a problem with the Russian mercenaries, though?\"\n\n\"That's nothing she shouldn't be able to handle. Besides, it was a babysitting gig. Teenage girls babysit. It's a thing. We've seen worse.\"\n\n\"Obviously.\"\n\nHe smoothed his mustache again. \"Here's the deal. Delaney doesn't get asked to do anything without my permission.\"\n\n\"You'll give her permission?\" I could hear the disbelief in my voice.\n\n\"It's complicated. Delaney's life isn't going to ever be normal, at least not for a long time. I haven't been teaching her this shit for no reason. She's had people trying to kill her since she was thirteen, and we can't see the other side of that yet, and we won't for a long time. This... agreement with K2 is a good way to get her the experience and skills she has to have. It's mostly just courier runs. This was a fluke. Bad timing. Kurt's not an idiot. He makes sure I know what I need to know, and he makes sure she has serious backup. This way, she gets practice. She needs that practice for when I'm not there to help. She's also going to need friends and people who owe her.\"\n\n\"So am I a friend or someone who owes her?\"\n\n\"That's for you and Delaney to figure out.\"\n\n\"And Tiffany?\"\n\n\"She's not part of this. Delaney just did the best she could with what was to hand. Tiffany's technically covered by the one-time pass.\" Something that could have been mistaken for a hint of a smile crossed his face. \"Besides, unless I'm wrong, you're the source of that ten grand bearer bond for the baby, along with the bottle of Pappy Van Winkle Family Reserve bourbon and the cases of high-end red wine that showed up at her house. She seems to think you're even.\"\n\nEvelyn had found a bottle of the bourbon and the cases of wine for me to send; I felt an internal sigh of relief. \"Guilty as charged. I owed her, and I'm pretty sure she'd have refused cash.\"\n\n\"She'd have worked just as hard to save you if she'd been sure you were guilty. It's what she is.\" I'm not sure the word \"wistful\" would ever be associated with the man before me, but it was the only word I could think of.\n\nI pondered for a moment. \"K2 may have some hiring competition when those girls are old enough.\"\n\n\"You know Quantico wouldn't work out very well for Delaney. Probably wouldn't be real fucking great for Quantico either.\"\n\nI nodded; he was right. Mackenzie was pretty much tailor-made for the FBI academy. She would probably be the honor graduate of her class. I doubted Tess would have any problems she couldn't overcome. Delaney though...I could already picture the mountain of incident reports and trying to budget for rebuilding the facilities. Maybe Donna had a better place for her. Hell, maybe that was the whole reason Spooky was involved. Still...\"There are other options. We can use help off the books sometimes.\"\n\n\"I've heard that.\"\n\n\"I'll make it easy stuff for now.\"\n\n\"You do that. For now.\"\n\n\"You know, you could have just come by the house.\"\n\n\"I could have.\" He answered it lazily, but I knew what he meant. He wanted, or maybe needed me to know, that there were no hiding places. No safe spaces.\n\n\"Are there any dead bodies I need to clean up?\"\n\n\"Not this time. Don't make me come back.\" He stood up and pulled a tape printout from his mold sampler and handed it to me. \"You need to get maintenance up to your office; you really do have a mold problem.\"\n\nWith that, he quietly walked out.\n\n*****\n\nEpilogue\n\n*****\n\nI stared at the folders on the desk in my study, feeling rather less clever than I had before. Or rather feeling that I'd been a little too clever for my own good. Maybe too clever for anyone's good.\n\nReaching down, I touched the machine pistol in my purse, a religious reflex to a holy icon, a momentary assurance of my ability to be and do true violence as a last desperate, defiant act against the gods.\n\nKnowledge has power. That was the essence of my world. Some knowledge is useful. Some is harmful.\n\nSome, a very, very small percentage, is truly dangerous.\n\nA vanishingly small amount is plutonium.\n\nRadioactive.\n\nDeadly to all who come near it.\n\nI'd had teams of research analysts and information techs pull the information for me, but I'd analyzed it myself. Stacks of itineraries, passport checks, formal event schedules, and hotel registries. Security camera feeds. Charges for limousines. Basic analysis. Nothing exciting, nothing fancy, nothing one hundred per cent certain. It could all be a coincidence. But I had a bad feeling I couldn't be that lucky. The timing was dead perfect.\n\nPulling loose strings on sweaters is risky. Sometimes nothing happens. The string breaks, and everything is fine. Sometimes you get the cartoon result, the one where the sweater falls apart with no warning.\n\nThis felt distinctly like the cartoon scenario.\n\nI nudged the pictures into a neat row.\n\nDelaney resembled her sisters. She shared a lot of features with Tara and Tiffany. Features they shared with their mother.\n\nCheekbones, jawline, nose.\n\nBut she had other features, especially her eyes...\n\nThe smoldering anger in her eyes mirrored Needles. He was truly her father, no matter who'd contributed the DNA.\n\nBut that odd blue topaz color... I'd seen it before.\n\nDelaney resembled her sisters.\n\nAll of them.\n\nTara...Tiffany...\n\nAnd Emma.\n\n******\n\nPost Production Notes:\n\nIt's a relief to finally reveal Delaney's biological father. She will always be Needle's daughter to the core, but she is a Reinhardt by blood. Because Delaney didn't have enough problems already.\n\nThis story has been a long time in the making - the kitchen surgery scene was written with Doc's input and assistance over three years ago. The Missus and I really wanted to get the story done and posted...then we realized it couldn't be released until \"Implacable Man\" and \"Unstoppable Man\" were done and posted. And so it has waited and been revised and revised.\n\nThanks again to the editors who make these tales readable. They aren't just helpful -- they are absolutely necessary. There's no money it and damn little glory, to steal a phrase, but they do it for everyone's benefit. That goes double for Doc this time -- the meatball kitchen counter surgery scene is as accurate as we could make it. *DISCLAIMER* DO NOT USE THIS AS A GUIDELINE TO PROVIDE MEDICAL CARE. IF YOU ARE SHOT IN THE LUNG, SEEK COMPETENT MEDICAL CARE IMMEDIATELY. Seriously, do the Emergency room thing.\n\nThe support from the readers here is always incredible and very, very appreciated. We're storytellers, so knowing we are providing some distraction from daily life, a bit entertainment means a lot to us.\n\nThe Missus was amazing on this one: she went over the dialogue in fine detail -- out loud and in character voices -- to make sure it both rang true and fit the characters. It turns out she was a teenage girl at one time, so that gave her some insight to work with.\n\nWe are working on a St. Clair prequal set in the Ozarks Moonshine wars of the 1970s, \"Luther's War.\" We are also starting to clean up and work the Shack series into an anthology -- no idea of the timeline. We certainly plan to keep posting the stories here; as I said we're storytellers and where else could we reach this many people?\n\nIf this isn't to your liking, there are plenty of excellent writers on Lit -- try Chasten or Saddletramp, maybe Hooked1957 or DFWBeast is more to your liking. There's something here for pretty much anyone, so keep on looking."
    ],
    "authorname": "Todd172",
    "tags": [
        "violent",
        "delaney",
        "needles",
        "the shack",
        "adventure",
        "action",
        "mercenariesl"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-the-milk-run"
}