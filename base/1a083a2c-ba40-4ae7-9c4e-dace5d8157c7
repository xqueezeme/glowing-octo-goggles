{
    "title": "Zeb's First Time Experiences",
    "pages": [
        "There have been many great 'first times' in my sexual life... this story tells some of my more memorable escapades. My first blowjob, first fuck, first threesome, and first exhibition and voyeur, even an unforgettable first orgy.\n\nI'm Zebulon Whistler Bitterberry... yeah I know what a mouthful. My mother was reading a Gideon bible at the hospital just after I was born and evidently Zebulon was mentioned in a passage she read. Whistler, is Celtic for 'son of the wolf'... I was a loud crier when I arrived. And unfortunately Bitterberry was my mother's family name. Thank goodness everyone has just called me Zeb B for as long as I can remember. I'm presently 28 years old, and I design and build small alternative style houses for a living.\n\nI've always lived a bit of a bohemian lifestyle. I love all the arts and find my creativity expresses itself in my design work and attitudes. I'm not a 'greenie' as such and I aren't adverse to wealth, I just don't spent my time and money it in the ways others might. My mantra is... live on half of my income and give the rest away. I have to admit that over the last few years I have managed to live quite comfortably on my half, so I am able to support a few charities and also travel a bit with a group of other like-minded people helping in third world relief programs. There is also nothing better than spontaneously paying for someone's groceries at the store... I get a real kick out of that.\n\nLet me start by giving you some context as to why I'm the way I am. My mother was 15 when she fell pregnant and her rather loose lifestyle at the time meant she had no idea who my father was. Two years after I was born she decided that kids weren't her thing so she left me with her older sister and never came back. Masie my aunt was a 22 year old lesbian hippy who could never say no to a good cause. She was always taking in stray animals... and people! Most of her friends worked for charities or gave their time and money to them. I guess it rubbed off on me and I can't remember a weekend in my youth when I wasn't out volunteering for some worthy cause. Despite having a degree in political science Masie made her income from painting, in the abstract style. It provided a reasonable income and her work was quite sort after for eye catching colorful designs. Private commissions were her main income and she'd worked for a wide range of people.\n\nWe lived in a small two bedroom bungalow which always seemed to have a party on Saturday nights... full on gatherings with a lot of alcohol and drugs involved. My aunt also had a strong sex drive and there was a different woman in her bed almost every night.\n\nSurprisingly, in the midst of all this I grew up fairly normal, attended the local schools and got reasonable grades.\n\nAs I said the house was small and my bedroom backed onto Masie's. I would often wake to the sound of orgasmic cries of delight from the various occupants that shared Masie's bed. Nudity wasn't an issue at home either and by the time I was twelve I must have seen more boobs and pussies than most guys do in a lifetime. I knew it wasn't normal to grow up in a household with so much skin on display but I didn't think of it being sexual... at least not until I was eleven... that's when I started having boners at night and would wake up with a stiff little cock in the mornings. It was on one of these mornings that my new physical capability came to Masie's attention. She had come in to wake me up and was surprised to see the tent in the bedsheets... I was embarrassed knowing she had seen it. Masie just smiled and sat on the side of the bed.\n\n\"I can see it's time we had a talk about some things,\" she said with a sigh.\n\n\"About what?\" I queried while trying to cover my erection.\n\n\"In my day they called it the 'birds and the bees' talk, but I'll just call it what it is.. sex.\"\n\nMasie then spent the next couple of hours explaining the ins and outs of the reproductive system and basic sex. I was amazed and had dozens of questions. We stopped and ate breakfast before continuing with the conversation. I soaked up all the information like a sponge and over the next few weeks Masie told me everything there was to know about sex... and I mean everything.\n\nI remember one of Masie's girlfriends in particular, her name was Celia and she was from Africa, her skin was a dark ebony colour. I was fascinated by the fact that unlike all the other women I had seen this one had no changes of colour in her skin... no tan lines from a bikini or even a darker shade on her legs or face from more exposure to the sun. She was the most beautiful thing I had ever seen.\n\nOne morning I had made a rudimentary breakfast for Masie and Celia... coffee and slightly burnt toast with copious amounts of honey spread on top. I put everything on a tray and slowly walked down the hallway to the bedroom. The door was closed so I put the tray down and opened the door. To my amazement Masie and Celia were having sex in what I had been told was a 'tribbing' position. Masie was lying on the bed and Celia was kneeling on top while their legs rubbed each other's pussies. It was a warm summer morning and there were beads of sweat all over the dark girls skin making it seem like she was covered in translucent glass... like an alien from an x rated Star Trek movie. Her breasts rose and fell slightly as she moved, her head was arched and her long hair flowed out down her back. Both women were breathing deeply and it wasn't long before they started to grunt and shake as orgasm's overtook their bodies. I knew that this uncontrollable shaking was the equivalent of my feelings when I ejaculated from my penis so I guessed they were both really happy at the time. I hadn't been noticed standing in the doorway and was about to leave when Celia suddenly pulled away and started to leak a milky liquid over Masie and the bed. I was spell bound as a small stream of warm liquid shot out from her pussy as she continued to shake and quiver. I thought Masie would be disgusted at being covered in the sticky looking goo but she obviously found it to be enjoyable and grabbed Celia pulling her down kissing her while laughing. I found the whole picture so overwhelmingly hot that I couldn't get it out of my mind for weeks.\n\nNow my best friend lived next door... a skinny red haired freckled girl called Ginny. We were the same age and spent a lot of time together. Being my best friend I naturally shared all my new-found sexual knowledge with her. We felt so grown up with our little secret.\n\nGinny was bullied at school because of her looks... and the fact she was super smart. I mean genius smart, especially in mathematics. I had become her protector over the years and often had to stop kids bullying her with my fists. However the undue taunting stopped abruptly when we were 13 years old. Ginny was in a car crash with her family... she was so severely injured her legs had to be amputated. I was devastated for her and was a constant visitor at the hospital while she recovered. I also helped her with rehab and we became even closer friends. After five months she finally made it back to school and things changed... the bullying stopped, a small silver lining in her big black cloud. The bullies at school had always called her 'Ginger Ginny'... I know, not very original but they were small minded buffoons. For years I had tried to make her feel better by shortening it to Ginz and making it a positive nick name. I was pleased that after the accident my nick name finally caught on and so Ginger Ginny became Ginz and she loved it. Slowly she adapted to her new world of wheel-chairs and limited mobility, it took a long time and I helped as best I could. We even set up a gym in her garage for rehab exercises and worked out daily together.\n\nThree years later things changed at home for me. Masie finally found the love of her life... Wendy, a solo mother with two children aged four and six. When it was announced that they wanted to move in together it seemed as though we would have to shift to a bigger house. That was not what I wanted... my best friend lived next door and our school was close by.\n\nI hatched a plan. My hobby was to design houses using a copy of a computer architect program I had obtained from one of Masie's friends. I was quite proficient at using it and spent hours developing weird and wonderful houses and cabins for my own pleasure. I spent a week on my new plan and presented it to Masie when it was finished. My idea was we build a small cabin on our existing property that I could move in to... the new kids could have my old room. I presented my idea with the design plan and an estimated budget. I knew Masie loved the house we lived in and didn't really want to move so my idea was accepted. I did a lot of the building work myself putting in long days during vacation time, and with a little help from some of Masie's friends we managed to complete the place in less than two months... I ended up with a studio style room with a bed, study area and a couch. A small bathroom was also included.\n\nWhen Ginny came over to see the finished product she was so impressed.\n\n\"Oh Zeb, this is amazing!\" she exclaimed in delight. \"You even made the door wide enough for my wheels.\"\n\n\"Of course! Now I have my own place I wasn't going to hang out here and watch movies by myself.\"\n\n\"You really are my best friend.\" Ginny teared up and I felt a little awkward standing there.\n\n\"You OK Ginz.\"\n\n\"I need a hug.\"\n\nI bent down and we hugged for a long time. When we finally parted she kissed me on the mouth. It wasn't a sexual kind of kiss, it was just a nice friendly kiss. I had never thought about Ginz in a sexual way before, you don't do that with your best friend do you. But as I looked down on her I realised how pretty she had become. Her long reddish brown hair and lightly freckled face were now assets and not a reason for distain, her slightly bucked teeth had been fixed with braces and her smile and big brown eyes made her quite beautiful.\n\n\"You're staring, and it's freaking me out.\" Ginny looked at me frowning.\n\n\"You are beautiful, you know that right?\" I replied.\n\n\" Zeb B, it was only a kiss, it didn't mean anything.\"\n\n\"I know, and it's not the kiss. It's just I don't think I've ever told you how good you look.\" I said smiling.\n\n\"Thank you, but can you stop staring now.\" Her skin was flushed.\n\n\"No... I don't think so. I like looking at beautiful things.\" I responded enjoying her embarrassment.\n\n\"Freaking heck Zeb, keep this up and I'm leaving!\" her voice was raised in frustration.\n\n\"Okay... Okay. Don't throw your shoes in a hissy fit.\" I answered back smiling. I knew the shoe joke would make amends for my actions. It had always been a stupid thing I said when she got upset to release tension. Black humor, she loved it.\n\n\"Yeah well you keep you pecker down.\" Her classic retort. One she had started when I told her about my embarrassing erections seeing Masie's girlfriends naked.\n\nWe both laughed. I grabbed her under the arms and pulled her out of her wheelchair and unceremoniously dumped her on the couch.\n\n\"Movie time!\" I sat beside her and switched on the TV.\n\nMy arm went around her shoulder as we huddled together to watch a movie. Neither of us had had a real boyfriend or girlfriend. I suppose we spent so much time together and enjoyed each-others company that it wasn't a big issue.\n\nA week later we were sitting in her house watching a documentary on the science channel... way out of my league but I enjoyed the experiments they showed. Ginny was of course taking notes in her own version of shorthand... she had books of facts and figures in her room that she'd made over the years. We were suddenly disturbed by her younger sister and friends making a huge lot of noise.\n\n\"Shut up!\" Ginny yelled a number of times. Unfortunately the rebuke only seemed to succeed in increasing their volume. \"I wish I had a room like yours.\" She moaned to me in frustration.\n\nWe ended up leaving the girls to it and went outside.\n\n\"Could you build me a room like yours? Ginny queried as I pushed her chair out into the sunshine.\n\n\"Yeah I suppose I could. I know how to do it now.\" I replied sitting on an upturned wheel-barrow.\n\n\"How much would it cost, remembering I'd need to pay an electrician and a plumber whereas you didn't.\"\n\n\"I guess about five grand for the materials and two grand for the sparky and plumber.\"\n\n\"Okay, I'll get the money. You supply the blood, sweat and tears.\"\n\n\"Are you serious?\" I asked in reply. \"Where are you going to get that sort of money anyway?\"\n\n\"I'm going to win it.\" Ginny replied with a grin.\n\n\"Yeah right.\" I laughed back.\n\n\"Give me two months and I'll have it.\"\n\nShe had that look in her eye that I knew only too well. It was her 'I've got a plan' look.\n\nA month Ginny handed me a thousand dollars on the way home from school.\n\n\"Fuck Ginz! Where did you get this from?\"\n\n\"I've been working on a system to predict winners of horse races. I place bets on outsiders that have the best statistical chance of winning. It's based on a whole lot of data and math.\"\n\n\"And it works?\"\n\n\"I just gave you two weeks winnings,\" she smiled up at me and spun her chair in a circle for added effect. \"I tested the theory for two weeks and refined my parameters and calculations before placing any real bets.\"\n\n\"But how did you even place the bets, you can't do that at seventeen?\"\n\n\"I got my Mum to open up a phone betting account, I tell her what bets to place and she does it.\"\n\n\"Your Mum went along with it?\"\n\n\"I showed her how my predictions went in the two week non betting trial and she was on board. As long as my Dad doesn't find out then all good.\"\n\nGinny's parents were divorced but her father was still around and he was a cop. Even though they weren't breaking any laws he probably wouldn't be impressed at Ginny's scheme.\n\n\"So how much do you bet?\" I was getting really interested in this, especially as I still had the results in my hot little hand.\n\n\"I get Mum to put $100.00 on each horse for the win, and $100.00 for a place. We doubled our money each weekend. The goal is to increase the bets to $200.00 each time.\"\n\n\"And you double your money!\"\n\n\"Yeah it's not a good as I had hoped so I'm still refining the data.\"\n\n\"Shit Ginz, that's unreal... you little genius. How long does all this take to work out each week?\"\n\n\"About five hours of crunching the numbers... I need to know track conditions and log those into the system as well on race day.\"\n\n\"What happens when you get to the seven grand you need?\"\n\n\"I dunno, maybe some university money, a new chair, some clothes for me and Mum. I might even consider a present for my best friend.\" She giggled and wheeled herself off down the sidewalk.\n\nIt took only eight more weeks before I had the rest of the money to start the build. Two months later we had a grand opening and Ginny was the proud owner of her own place. Our two cabins were backed onto each other on either side of our adjoining fence. We were separated by only an arm's length and I took this into account when I did the build. I put a window into the back of Ginny's place facing the fence and before moving her cabin into its final position I cut a hole in the fence and put a matching window it my place. We now had the ability to both slide back our glass and talk to one another through the short space between the cabins. I even put a nice piece of polished wood under the windows so we could use it as a table. It was like living in one apartment.\n\nDuring our last year at high school the race winnings were still coming in and since we had we had both turned eighteen we had opened our own betting accounts, always careful not to bet too much so the little system remained a secret. Both of us had amassed enough money to see us through the first few years of post-high school study... not that Ginz needed it as she was almost assured of a major scholarship to study science at a good university. I was planning to attend a technical college to study design and architectural draughting. I did use some of my cash to buy a small van with a sliding back door that made it easier for Ginny to get in and out of. I removed the back seats so she could roll up a short ramp I'd made while in her chair and then swap out and get into the front passenger seat. Her dad was impressed that I'd bought something with Ginny in mind and offered to pay for the special front swivel seat I'd installed. Being more mobile we went out a lot more and had fun.\n\nNow well into our senior year neither of us had had a serious relationship and we were both still virgins. Ginny had been trying to set me up with one of her girlfriends and a month before graduation I finally relented and said okay. The girls name was Erin. She was the bubbly kind of person who sometimes got on your nerves but I thought one date would shut Ginz up.\n\nI took Erin to the movies and then we got something to eat at a local burger joint. She had made an effort to impress me with her low cut top revealing a fair amount of cleavage and her mini dress also revealed a lot of leg. I was surprised at how much she was flirting as we really didn't know each other that well. After our meal I drove her home. Again I was surprised when she leaned in for a kiss, one that involved a fair amount of tongue. We kissed for a couple of minutes before Erin suggested we park a little down the road. It was a semi-rural area and there were no houses close by.\n\n\"Let's take a walk.\" Erin immediately suggested as soon as I turned off the engine.\n\n\"Ahh. Okay.\" I was more than a little a little confused and disappointed by this development. The night wasn't the warmest outside and I had thought we were going to get back to some physical stuff.\n\n\"Don't look so glum, I've got a surprise for you.\" Erin smiled enthusiastically and grabbed my hand pulling me back down the road towards her house.\n\nWe entered her front yard and then detoured to the side down a driveway. Parked behind the garage was a camper van. Erin opened the door and pulled me inside... seconds later her lips crashed into mine in a passionate kiss. Things were happening fast and our hands were roaming over each other's bodies. I wasn't really used to this sort of thing and felt a little unsure of what to do next. How far do you go on a first date? Erin solved that question by taking a step back as she removed her blouse, then she reached behind her back and unclipped her bra letting it fall between us on the floor. The camper was only lit by the moonlight coming through a large skylight in the roof but it was more than enough for me to see two very nice breasts only inches in front of me.\n\n\"You can feel them if you want.\" Erin arched her back slightly so the twin globes of flesh stuck out proudly.\n\nI didn't need to be told twice and my hands reached out and touched their first pair of breasts. I squeezed them gently and rolled the nipples between my fingers before lowering my head and taking one of the little nubs of flesh in my mouth. I sucked on it greedily!\n\n\"Oh yeah.\" Erin sighed and placed her hands on the back of my head.\n\nI nibbled on each nipple until they stood out like little raspberries. Erin was now trying to get my shirt off by undoing the buttons with limited success as my head was in the way.\n\n\"Fucking buttons!\" she exclaimed in frustration.\n\nI stood and lifted the shirt over my head and dropped it on the floor. We kissed again while stumbling backwards and fell onto the bed at the back of the camper.\n\nIt wasn't long before her skirt and my jeans were also strewn across the floor and our roaming hands had more to skin to explore. Our making out became more intense and our breathing came in gasps as we tried to get air between kisses.\n\nMy hand had slowly descended to the front of Erin's panties and my fingers slightly lifted the elastic.",
        "\"Shit wait, Stop!\" Erin pulled my hand up and away from underwear. \"I can't go that far okay, I missed the pill earlier in the month.\"\n\n\"Okay.\" I replied.\n\n\"Unless you have a condom.\" Her voice almost pleading for a positive response.\n\n\"I don't... I didn't expect us to... you know, first date and all.\"\n\n\"Oh fuck!\" Erin sat up. \"You must think I'm a real slut. I don't do this normally on a first date either... it's just I really like you and I...\"\n\n\"Hey, it's okay. We can just kiss that's cool.\"\n\n\"What about that?\" Erin pointed to the erection tenting my boxers.\n\n\"He'll be fine.\" I grinned.\n\n\"I can blow you if you want?\"\n\n\"Ah, yeah... um okay. Only if you want too.\" I was taken aback by her offer.\n\n\"Do you want me to?\" she replied looking a little uncertain after my hesitant reply.\n\n\"Yeah, I do. That would be nice.\" I smiled reassuringly.\n\n\"Cool,\" she smiled back.\n\nI removed my boxers and lay back on the bed.\n\n\"Wow! It's even bigger than Ginz said it was.\"\n\n\"What?\"\n\n\"Ginz said you were big but not that big. This is going to be fun.\"\n\nErin then leant forward and kissed the top of my cock causing it to jerk. She giggled and licked up my shaft from balls to the tip. It think it was the best sensation I had ever felt... that was until she enveloped me in her mouth and managed to increase the feeling by a thousand percent. I don't know how many blow jobs she'd given but fuck she knew how to do it well.\n\nSuddenly the door of the camper opened and someone entered. Erin sat up her mouth making a popping sound as it released my throbbing cock.\n\n\"Mum! I'm, kind of busy here.\" Erin complained in the direction of the shadowy figure by the door.\n\n\"Your father just came home and he's asking where you are. He saw the car down the road and knows you're up to something, somewhere. You know what he'd be like if he caught you out here.\"\n\n\"Okay, I'll come in.\" Erin said with a sigh. \"Oh this is Zeb by the way.\"\n\n\"Hello Zeb. Nice to meet you.\"\n\nTo my shock Erin's Mum stepped over to the bed and extended her hand for me to shake. This wouldn't have been so bad if it weren't for the fact that Erin was still wanking my cock with her hand.\n\n\" Ah... Hi Mrs Davis.\" I mumbled taking her hand.\n\n\"Call me Jill.\" She said as we continued to shake hands.\n\nI'm sure I was glowing in the dark like a red traffic light from embarrassment.\n\n\"I'll be right in Mum.\" Erin reiterated and stared at her mother, willing her to leave.\n\n\"I hope you're going to finish Zeb off before you do. There's nothing worse for a young man than being left without satisfaction.\"\n\nI couldn't believe she said that.\n\n\"Mum I know what I'm doing!\" Was her daughter's exasperated reply.\n\n\"Alright. I'm going sweetheart. Nice to meet you Zeb and you have a very nice penis by the way.\"\n\nWith that comment she stepped out of the camper and shut the door.\n\n\"Sorry about that.\" Erin apologized and grimaced. \"Bloody parents!\"\n\n\"That was fucking surreal!\" I said shaking my head in astonishment.\n\n\"I better finish you up quick, my Dad has a bit of a temper sometimes.\" With that said Erin bent down and started to blow me again. \n\nWhen I gave her warning that I was going to cum she just kept on at it and let me explode into the back of her throat swallowing the lot without a second thought.\n\n\"Fuck Erin that was amazing!\" I exclaimed when she had finished milking me dry.\n\n\"You're welcome.\" She smiled and kissed me.\n\nI was glad I couldn't taste myself on her lips.\n\n\"We better get dressed, I don't want Dad out here.\"\n\nI didn't need to be told twice and I was dressed in double quick time.\n\nErin complained as she dressed herself. \"I'm frigging eighteen, I can fuck whoever I want. Mum's okay with it but Dad treats me like a little girl. You're lucky you're a boy.\"\n\nI just nodded, still in shock at her mother's reaction to our exploits.\n\n\"I guess I'm out of here then.\" I went to the door and peeked out.\n\n\"Hey, Zeb.\"\n\nI turned to face Erin who was putting on her skirt.\n\n\"Probably best if we didn't have a second date for a while. Dad's probably going to give me the third degree when I get inside.\"\n\n\"Okay.\"\n\n\"I enjoyed this first date though.\" She smiled and stepped toward me and we kissed briefly.\n\n\"Me too.\" I smiled back before slipping out the door and heading through the bushes back to my car.\n\nThe next day I told Ginny all about the date. She laughed so loud that I could see tears in her eyes.\n\n\"Yeah well it wouldn't have been funny if it was her Dad that had found us.\" I griped. \"And by the way what's with you telling her I've got a big dick?\"\n\n\"Well you have.\" Ginny replied with a grin.\n\n\"How the hell would you know?\"\n\n\"You should close your curtain more often.\" She raised her eyebrows and smirked.\n\nI wasn't sure how to reply to that. But my cock gave a twitch at the thought of Ginny spying on me naked.\n\nI didn't get another date with Erin as she got a new boyfriend. I also didn't shut my curtains any more often than before!\n\nI took Ginz to the senior ball and she wore a silver dress that matched the colour of her new metallic light-weight wheelchair. We had some fun at the post ball party and returned home in the early hours of the morning. I had just gotten into bed when I heard a tapping sound on glass. I got up and slid the window open between the two cabins.\n\n\"You do realize it's 2.00am?\" I said wearily to the face opposite.\n\n\"I know, I just don't want this to end.\" Came the quiet reply.\n\n\"What the ball or the after party?\" I joked back.\n\n\"I mean this... us... our windows, our lives here, it's all coming to an end and I don't want it too Zeb.\"\n\nI knew what she meant. We had been friends since before we'd started school and in just over a month we were going to be 600 miles apart.\n\nI reached out across the space between us and took her hand. \"We'll keep in touch. We can talk as much as we want on the phone and then there's the holidays...\"\n\n\"It won't be the same. I just wish we were going together...\" A tear rolled down her face as she choked up.\n\n\"Hey. Want me to come over?\" I asked squeezing her hand.\n\n\"You'd have to get dressed and stuff. Can I come over there?\"\n\n\"Of course you can.\" I replied smiling.\n\nGinny's window to window manoeuvre had been perfected over the last few years.\n\nShe pulled herself out onto the wooden table and held out her hands for me to slide her across the open air space. I then lifted her carefully through my window and onto my desk. She held onto me and we hugged it a tight embrace for a long time. I could tell she was crying and her sobs caused me to tear up as well. I was really going to miss her.\n\n\"Come on, into bed.\" I finally said.\n\n\"Is that a proposition?\" Ginny replied looking up at me with her big brown eyes still wet from tears.\n\n\"Do you want it to be.\" I asked staring at her... my heart beating faster.\n\n\"Maybe.\" Was her quiet reply.\n\nShe looked so beautiful and vulnerable. I lifted her across onto my bed and sat down beside her. We stared at each other for a moment in awkward silence.\n\n\"Let's just lie down.\" I offered as a next step.\n\n\"Can we be naked?\" Ginny asked shyly.\n\n\"Yeah, that would be nice.\"\n\n\"You can undress me if you like.\" Her voice was almost a whisper.\n\nI smiled reassuringly but my hands were trembling as I stated to undo the buttons on her nightshirt. I had never seen Ginny naked before. I slowly opened the shirt and saw her breasts for the first time. They were amazing, milky white and perky with light brown nipples that were growing hard under my watchful eye. Both of us were hardly breathing as I slipped the shirt off and placed it on the desk. She was left wearing a pair of small white panties and her red and white stump stockings that had a festive Christmas look to them. She lay back on the bed as I removed her panties revealing a patch of light red pubic hair that disappeared between her legs leaving only the two strips of her labia showing through. Ginny's eyes were closed and the only movement was the slow rise and fall of her breasts from shallow breaths. I placed my hands on her one of the stockings and was about to pull it off when her eyes shot open.\n\n\"No! Leave them on.\"\n\nI knew she had always been conscious of the scars left from the amputation and you never saw her in public without them covered. I had seen the scars many times before and she had always remarked at how ugly they looked.\n\n\"You said naked.\" I remarked my hands still on her leg.\n\n\"But they aren't nice to look at.\" Ginny responded.\n\n\"All of you is beautiful to me.\" I smiled.\n\n\"Zeb, you don't have to...\"\n\nI put my finger on her lips to interrupt her. \"Do you think my appendix scar makes me any less sexy?\" I smiled again and waited for a reply.\n\n\"It's not the same.\"\n\n\"Hey, our scars are part of us and they just add flavor to who we are.\"\n\n\"Flavor?\"\n\n\"Okay, maybe the wrong word but you know what I mean. So... stockings off?\"\n\n\"Okay, stockings off.\"\n\nI removed them slowly and bent down and kissed each scar as I did.\n\n\"T shirt off, so I can kiss your scar then,\" she demanded.\n\n\"It's lower than what my T shirt covers.\" I grinned.\n\n\"Then you better remove the boxers too.\" Ginny grinned back.\n\nI almost ripped my clothes off before lying down beside her on the bed. \n\nI rolled onto my front as I was aware that my cock was already semi erect.\n\n\"What'a you hiding?\" Ginny said mischievously, obviously having noticed my condition. \n\n\"Nothing.\" I lied unconvincingly.\n\n\"Didn't look like nothing.\" She grinned. \"I want to see it,\" she added with a hint of nervousness.\n\nI turned and lay on my back. My erection grew under her scrutiny.\n\n\"Wow. It looks... pretty.\"\n\n\"Pretty! I don't think I've ever heard anyone call a penis 'pretty' before.\" I laughed.\n\n\"Well I don't know, maybe charming is better.\"\n\n\"It's a cock Ginz, it's supposed to be... magnificent, or imposing... manly, anything but pretty or charming.\" I pleaded in mock offence.\n\n\"Oh I'm so sorry.\" Ginny said a hint of sarcasm. \"I may have hurt your feelings but I certainly didn't hurt his, he's still growing!\"\n\nShe was right my cock was growing fast.\n\n\"Point taken.\" I admitted and we both watched my cock obtain full mast. \"His growth is all your fault you know. He's thinks your body is the sexist thing he's ever seen.\"\n\n\"Well I'm glad I didn't disappoint him.\"\n\nThe light-hearted banter had helped ease the tension and I felt less nervous about our situation.\n\n\"You could never disappoint him or me.\" I turned to face Ginny and leaned in for a kiss.\n\nOur mouths meet... the kiss was long and passionate. I could taste and smell minty toothpaste as our tongues teased each other. We came up for air and stared into each other's eyes.\n\n\"Why didn't we do this years ago.\" Ginny said breathlessly.\n\n\"Because I respected you too much.\" I replied.\n\nGinny started to laugh then suddenly saw the expression on my face. \"Oh sorry, you were being serious,\" she apologized.\n\n\"Nah, I just didn't fancy redheads.\" I said trying to stay serious.\n\n\"What!\"\n\n\"Gottcha!\" I laughed and hugged her.\n\n\"Shit! You bastard.\" She pretended to struggle in my grip but soon gave up and laughed with me.\n\nWe kissed again and our hands started to explore each-other's bodies. Finally I came into contact with her pussy and she let out an audible moan as I ran a finger up her labia and over her clitoris. I tried to remember all the info Massie had shared about fingering and I started a slow rhythmic stroke running up and down her wet pussy lips brushing across her clit each time. In turn Ginny grabbed my cock and started to squeeze and stroke it. We were both breathing hard and I knew if she kept playing with me I was going to cum soon. Not wanting that to happen I removed her hand and placed in on my balls instead. It still felt nice but slowed the desire to shoot my load. Meanwhile I concentrated on the actions of my own hand between her thighs and was rewarded when Ginny orgasmed. She stiffened and moaned loudly as her body started to convulse. I could feel her pussy contracting on the finger I had inside her... it became slick with a new wetness as I continued my movements. Finally the sensitivity became too much and she pushed my hand away and lay back panting for breath.\n\n\"Fuck Zeb! That was so good.\" Ginny's eyes were closed and a huge smile crossed her face. \"Way better than doing it myself.\"\n\n\"You do tend to do it to yourself a lot.\" I said grinning.\n\n\"Yeah, maybe I do... how do you know anyway? Have you been spying on me?\" she asked with a light-hearted tone of accusation.\n\n\"Hey, you leave your window open too and you're not exactly quiet Ginz babe.\" I shrugged and winked.\n\n\"You were listening,\" she tried to sound shocked. \"My best friend's a pervert!\"\n\n\"I seem to remember you like to peek as well.\" I chided playfully.\n\nAll the time we were talking Ginny was still playing with my balls and she once again moved her hand up to my stiff cock. She stoked it a few times.\n\n\"Can you relieve the burden of my virginity with this monster of yours now please.\"\n\n\"Oh, that was so romantic.\" I joked.\n\n\"I don't want romance at the moment, I want to be fucked!\" Ginny pleaded in a husky, sexy voice that made my cock jerk in her hand.\n\n\"You little sweet talker.\" I replied and pulled her close... my cock poking into her thigh. \"Oh shit! What about a condom?\"\n\n\"I'm on the pill.\"\n\n\"Since when?\" I remarked.\n\n\"Does that really matter at the moment.\"\n\n\"No, it does not.\" I declared and kissed her fervidly.\n\nGinny broke the kiss and rolled on top of me steadying herself by placing her hands on my chest. I reached down raised her hips slightly and let my cock line up with her pussy.\n\n\"Slowly,\" she implored her eyes wide with anticipation. \"I want to feel him as he goes all the way in.\"\n\n\"Fuck Ginz... do you know how sexy that sounds.\"\n\nGinny smirked and lowered herself onto my stiff shaft.\n\nShe closed her eyes as I continued to slowly fill her. The look on her face was one of pure pleasure and I had to be careful not to cum then and there.\n\n\"Oh... Zeb. You don't know how good that feels.\" She quietly remarked and smiled.\n\n\"Yeah, I do.\" I replied, enjoying it as much as she was.\n\nI was balls deep, filling her warm, tight cavity and we stayed still for a moment relishing the feeling.\n\nMy hands were still under her butt and I started to lift up and down. Her hands on my chest helped with the weight and we soon got into a rhythm that increased slowly until you could hear the slapping of my balls on her butt cheeks. I was in heaven and the feeling around my cock was something unreal. But being my first time and I knew I wouldn't last long and I didn't. I could actually feel my sperm pulse up my cock before I exploded sending rope after rope of hot cum deep into her pussy. I grunted and groaned, much to Ginny's joy. In turn she squealed in delight as I rammed myself into her milking out every last drop of cum.\n\n\"That was awesome!\" Ginny exclaimed as she collapsed onto my chest. \"We're definitely doing that again!\" she panted between deep breaths.\n\n\"I concur with your profound deduction... but also agree that more research needs to be done to formulate a final synopsis of our copulation success.\" I replied breathing heavily myself.\n\n\"Who's the sweet talker now!\" Ginny giggled as her body slid down beside me on the bed.\n\n\"I feel like I've wet myself!\" She proclaimed glancing down between her legs as my cum and her own juices oozed out leaving a trail of sticky white aftermath that pooled onto the sheets. Ginny dipped a finger into her pussy and raised the wet digit to her lips, licking it tentatively.\n\n\"Not too bad. I guess I might end up being a swallower and not a spitter when I blow you,\" she surmised looking sideways at me for my reaction to the comment.\n\n\"Just give me a couple of minutes and we can test that hypothesis, if you want.\" I replied with wide eyed enthusiasm.\n\n\"I think that can be arranged.\" Her husky sexy voice was back.\n\nWe hugged tightly in the afterglow of our lost virginity. I couldn't help smiling as I lightly kissed Ginny's neck and nibbled on her ear lobe. Her eyes were closed and her mouth was fixed in a huge smile like mine. I could feel my still semi hard cock already rising as if it had a mind of its own.\n\n\"Wow! Ready again!\" Ginny remarked with a laugh as I poked into her side.\n\nWhat remained of the rest of the night was used up in new sexual exploits. We both orgasmed numerous times before finally giving over to exhaustion, falling asleep as the sun rose over the horizon.\n\nOver the next few weeks we continued to explore our desire for each-other's bodies. I discovered, to both our delight, that going down on Ginz was one of my newfound hobbies. The taste of her pussy on my tongue was incredible and her climatic reaction to my dedicated efforts made it even more pleasurable. Her own enthusiasm at perfecting the art of fellatio was greatly appreciated and resulted in many explosive climaxes... and she indeed proved to be an avid swallower.\n\nIt's strange how after knowing someone nearly your whole life you think you know everything about them... but now every time we kissed or touched I learnt something new about my remarkable best friend and now lover.\n\nAll to soon our time together was over and the day arrived for Ginny to leave for university. That morning after a torrid and sweaty session between the sheets we lay in each-other's arms to talk about the future.\n\n\"I think you should see other people while we're separated.\" Ginny stated to my surprise.\n\n\"What, why?\" I replied in shock. \"We can still see each other in the holidays and mid-term breaks. It's not the end just because we're going to be apart for a while. Hell we can have Skype sex and dirty phone calls all the time.\"\n\n\"I know that Zeb, and yeah I'd like that too. But I don't want you to feel like you've missed out on exploring your sexual prime.\"\n\n\"Hey, I'm quite happy exploring my sexual prime with you.\" I replied kissing her on the cheek.\n\n\"Just think about what new things you could learn from being with others though. I mean we're not exactly the most experienced sexual deviants in the world. You could bring all your newfound knowledge back for me to enjoy.\"\n\n\"This seems all about me doing the exploring. What about you?\" I challenged.\n\n\"Come on who's going to want to get it on with a chick who's got a third of her body missing. That's besides those who want to give me a pity fuck or see me as a fetish thing.\"\n\n\"That's bullshit babe. You are beautiful, intelligent, and very sexy. Guys would be all over you... and not as a fetish. But why do we have to worry about all this anyway, aren't you happy as it is.\"\n\n\"Yes and no. It's like if we stay together long term... get married and have kids and do all the whole lifetime thing, then I don't want us to regret not doing more while we were young.\"\n\n\"Married, kids! Is that a proposal.\" I joked back.\n\n\"Zeb, I'm serious. Maybe we will have a long term thing, I hope so, because I love you more than anything. But let's just give each other a bit of freedom for the next few years. Okay.\"\n\n\"Okay, I know what you're saying and I can see your point of view. I just don't like the idea of another guy touching what's mine.\"\n\n\"Oh, I'm yours am I?\" Ginny smiled at me.\n\n\"Fuck yes! Don't you forget that... you're mine for the rest of your life girl.\" I said smiling back.\n\nWe kissed and held each other in a tight embrace.\n\n\"No matter what happens, or who we might or might not get it on with we'll always belong to each other, okay.\" Ginny whispered in my ear.\n\n\"Okay.\" I agreed.\n\nGinny left that afternoon with her father driving her. I missed her the minute she left.\n\nI didn't need to leave for another few days so I tried to keep myself busy by tidying up my room and sorting through my folders of design work, making up a kind of resume for the future.",
        "Ginny phoned me the day after she arrived and we talked for a couple of hours. She was rooming with a girl from Australia and they seemed to hit it off okay. The girl was totally unfazed by Ginny's disability which was good. The room they had been assigned in the dorm had its own bathroom with facilities for wheelchair access. Ginny took the phone into the bathroom and we masturbated together while talking dirty... the conversation caused more laughs than anything, porn talk wasn't as easy as we thought. Still it was fun and we enjoyed hearing each other cum. Our calls became a daily thing... phone sex not always involved.\n\nTwo days before I was due to leave for my own tertiary institution one of Aunt Masie's friends knocked on my door. It was Jack a long haired hippy style dude who ran a small market garden.\n\n\"Hey Zeb, this yours?\"\n\nJack was holding my resume folder that I had left in the main house the night before.\n\n\"Ah yeah, thanks.\" I took the folder from his outstretched hand.\n\n\"This is really good stuff in here. I mean really good. You've got a lot of talent.\" Jack said sincerely.\n\n\"Thanks.\"\n\n\"I know what I'm talking about Zeb. I haven't always grown tomato's you know. In another life I ran an architectural firm with my brother.\"\n\n\"I didn't know that.\"\n\n\"Yeah well, the corporate thing didn't end up being for me. Give me some compost and a shovel and I'm in my element now.\" Jack quipped.\n\n\"Well you grow good tomato's, so it's working for you.\" I joked back.\n\n\"Thanks.\" He smiled. \"Anyway, I want to set up a meeting with you and my brother, his office is in the same area of the city you're headed for. I think he'd be interested in talking with you.\"\n\n\"Really?\" I was surprised.\n\n\"Like I said this is quite exceptional work for an unqualified designer. Here's Doug's card.\" Jack handed me a business card. \"You want me to call him and see if I can set something up for you later this week?\"\n\n\"Yeah... that would be great. Thanks Jack.\"\n\n\"No worries. Hope it all works out for you. Good luck in the city.\" Jack left heading back to the house.\n\nI looked at the card. It had the initials RAD Ltd across the top, which stood for 'Riker Architectural and Design Limited' according to the second line. Below this was 'Doug Riker - Managing Director' followed with the usual phone, and email address at the bottom.\n\nI spent the rest of the day improving my resume... just in case I did get a meeting.\n\nThree days later I was sitting in the up market waiting room of RAD Ltd. Jack had succeeded in his quest and his brother had rung me in person the day before to set up a meeting.\n\nI was ushered into a small boardroom and during a five minute wait I spent time admiring the framed pictures of completed projects on the walls. The images showed some really incredible and innovative designs ranged from multi story buildings to residential properties.\n\n\"We design for a wide range of cliental.\" Came a voice from behind me.\n\nI turned to see a man who looked very much like Jack Riker. Even down to the long greying hair.\n\n\"I'm Doug Riker.\" He approached and we shook hands.\n\n\"Zeb Bitterberry.\"\n\n\"You come highly recommended by my brother Zeb. In fact he said I would be an idiot not to see you.\" Doug smiled.\n\n\"No pressure then.\" I responded with a nervous returned smile.\n\n\"Have a seat. Is that some of your work?\" He indicated to my bulging resume.\n\n\"Yes sir. It's maybe a bit much but I wasn't sure what you would want to see.\" I replied sitting down.\n\n\"First of all, it's Doug not sir. We're pretty informal with that sort of thing around here.\" he smiled. \"So, why don't you tell me about yourself while I take a look at your work.\"\n\nI handed over the folder and explained my long term design hobby and my current intention of studying for proper qualifications. Doug listened while he looked at what I'd brought. He shared about the firm and where he saw it in ten years and he asked a lot of questions about my past and future goals. An hour passed quickly and I found myself relaxing and enjoying his company.\n\nDoug finally handed my resume back... what he said next was quite a shock.\n\n\"It's a pity the course you're doing requires you to do a first year full time study. After looking at this I believe there's nothing they can teach you that you already don't seem to know. Your work is good stuff.\"\n\nI sat dumbfounded at his comment.\n\n\"You know that a job is required for the second and third years of the course you're taking and you get time to do block courses at various periods during those years. Each year you have to pass exams at mid and end of year. Frankly I believe that with a little help from the staff here you would have no problem passing. Your obvious knowledge of using a CAD program and building codes means you are light years ahead of any student starting the course. Hell to tell you the truth some of this work is better than I get from already qualified people I have on staff.\"\n\nI was even more taken aback... and a little confused. \"Wow, thanks... but did you just offer me a job?\"\n\n\"That I did Zeb. If I don't snap you up now I reckon I'll be competing with every firm in town once you finish your first year of study. So here's my deal... I'm willing to pay for your course fees and compliment that with a generous monthly allowance starting straight away if you agree to work here at RAD.\"\n\n\"I'm not sure what to say.\" I truthfully replied still in shock.\n\n\"I don't expect a reply right now. Think about it over the next couple of days. I'll have a contract drawn up with more details and get that to you by tomorrow. In the meantime why don't you have a look around and see if this is the sort of place you might like to contribute your talent too.\"\n\nWith that he excused himself and left to get someone to show me around. I just sat there with a huge smile on my face.\n\nReturning after a few minutes Doug introduced me to Issy.\n\n\"I'll get Issy to show you around that way you can ask any candid questions about the place you might not feel comfortable asking me.\" Doug explained as he shook my hand. \"Issy will give you honest answers,\" he added smiling.\n\nIssy turned out to be a 22 year old third year intern. I thanked Doug again for his offer and said I'd get back to him by the following afternoon, then I followed Issy into the hallway for my tour.\n\nNow Issy wasn't exactly the standard office type... if there is such a thing. She was kind of a collection of some of Masie's friends all rolled into one. Her short pixie cut hair was dyed blue and red. At least five piercings were evident in each ear and one in both her nose and tongue. She had at least three tattoos I could currently see and I was sure there were many more adorning her trim, fit looking body. Clothing wise she wore a tie-dye shirt that somewhat matched her hair and jeans with a number of rips and patches. Black ankle boots with small chains completed the ensemble. Her smile was engaging and her eyes had a mischievous look surrounded by black mascara and eye liner. Unusual... yes. Sexy... definitely!\n\n\"You've made a big impression,\" Issy said with a hint of intrigue as we walked. \"I've been asked to give you the gold standard tour!\n\n\"What does that entail.\" I asked intrigued myself.\n\n\"Well in most places it would probably mean I'd have to give you a blow job to entice you. But thankfully Doug doesn't run that kind of firm,\" she said with a straight face.\n\nI stood silent for a moment before we both laughed.\n\n\"Pity though, you're kind'a cute,\" she added her eyebrows raised above those mischievous eyes. \"Come on this way.\" She turned and headed into a large office space.\n\nPity is right I thought as I watched her tight fitting jeans disappear through the door!\n\nAfter an hour of meeting people and looking at the various projects they were working on I was more than enough convinced that this was a place I wanted be a part of. The atmosphere was relaxed but the professionalism and level of the work was amazing. The banter with Issy had continued throughout the tour and she had seemed to flirt with all the staff in some way, both males and females. It was all received in good humor and I could tell everybody liked her. \n\n\"Well that's us. Have I managed to convince you to join our little band of creative minds or am I going to have to revert to that blow job?\" Issy joked as we stood at the front door.\n\n\"As much as I would enjoy the latter, I don't think it will be necessary.\" I replied smiling.\n\n\"Okay then. Rain check it'll have to be. See you around.\" With that she left me standing alone at the door with pleasant thoughts running through my mind.\n\nThat night I called Ginny and told her of my meeting with Doug and the job offer. She was ecstatic and sent me a pic of her engorged clitoris with the caption, 'All of me is excited for you!'\n\nThe next day I started my course and also accepted the job offer. The terms of the offer were very generous and I was going to get a decent amount each month as a retainer and the only conditions were that I passed the exams and attended a fortnightly staff night out.\n\nThe money from the betting scheme was still flowing in and after a month of renting a room with a family near the collage I decided to look into buying a place and renovating. As luck would have it a place turned up almost immediately... a rather unusual place. It was a piece of real estate attached to the back of a warehouse owned by one of RAD's clients. It had been divided off years before and was supposed to be sold to the local council for a storage unit. The council reneged on the deal as the space proved too small. It was just 3 meters wide and 16 meters long. There was a garage area on the ground floor and a long thin open area on the first floor. I came up with a concept of what I wanted to do and the owner was so impressed he sold the site to me for $30,000.00 plus fees... I think he also just wanted to get rid of the rates bill. I had a $15,000 deposit and managed to get a loan from Massie for the rest. I now owned a two level derelict piece of downtown real estate.\n\nMy course was a breeze and Doug had been right, I already knew almost everything they were teaching so instead of having to study a lot in my own time I poured my energy into the renovation of my new property. Ginny helped out financially with her race winnings and after four months I had my own one bedroom apartment. Doug show-cased it on the company web site and I even got an article in a popular trends magazine for the innovative use of a small space.\n\nGinny and I spent time together on the longer semester breaks, both traveling home to see family. Our sex live was passionate and we ended up in a state of exhaustion each night we were together. Having her warm body next to mine as we drifted off to sleep was the best feeling in the world. We spoke on a number of occasions about extending our sexual lives to include others and were still both open to it. Ginny did mention that she had thought about getting together with someone but it wasn't going to work out... I didn't press her for more info knowing that she'd tell me if anything did happen.\n\nI eventually did hook up with someone... Issy. We had been at one of the RAD staff nights and both had consumed a fair amount of alcohol. Neither of us were drunk but we were happily tipsy. Issy came back to my place and got burgers from a nearby joint on the way. We had been kind of flirting all night... not that it was unusual for Issy. She had been wearing a low cut top that revealed a nice amount of her small breasts. I had joked about the fact that if her top were any lower you would be able to see her nipples. In response she had told me that her nipples would be hard to see as she had nipple shield jewellery on and they covered most of her naughty bits.\n\n\"What the heck is a nipple shield?\" I asked as we sat in my lounge eating.\n\nIssy stood up and pulled her top over her head revealing her small strapless bra. The first thing I noticed was the tattoo just below her breasts. It was a brightly colored butterfly in the center with small flowers on either side that arched under each breast.\n\n\"Wow. That is one great tat Issy.\" I said in awe. Forgetting the fact that she had just stripped off her top.\n\n\"Looks better like this.\" She unhooked the bra at the front and revealed her nicely shaped breasts adorned with two metallic butterfly shaped shields that were pierced through each nipple.\n\nI sat staring as she gently massaged each breast letting them enjoy the unrestrained freedom they now had.\n\n\"Well. What do you think?\" Issy spread her arms wide and displayed herself for inspection.\n\n\"Ah... bloody magnificent!\" I exclaimed in honest reply.\n\n\"I've got more if you want to see.\" Her voice teasingly sexy.\n\nI just nodded my affirmation.\n\nIssy kicked of her shoes and undid the button on her jeans before slowly unzipping the fly. Her eyes never left mine and her mouth had an impish grin.\n\n\"More?\" she teased playfully.\n\n\"Please.\" I responded, my own grin widening.\n\nIssy slowly and very seductively slid the jeans down her legs and removed them with as much dignity as she could hopping on one leg. She spun the jeans above her head then threw them in my direction like a stripper. I caught them and placed them around my shoulders. Issy laughed before turning her back and once again revealed a new tattoo... one that stretched from the top of her spine down across her back under her black cotton panties and out again down her right thigh all the way to her ankle. It was the shape of a naked woman made out of brightly colored patterns and motives.\n\n\"Fuck me Issy that's amazing.\" I said in awe.\n\n\"You have to see it all to appreciate it at its best.\" With that comment she bend over and pulled her panties down.\n\n\"Like it better now?\" Issy asked looking at me over her shoulder.\n\n\"Oh yeah!\" I declared nodding my head while staring her shaved pierced pussy lips and cute puckered ass hole.\n\nIssy stood upright again and turned to face me. \"Your turn, what have you got to show me?\"\n\n\"Nothing as spectacular as that.\" I replied truthfully.\n\n\"What no tats, no piercings? Is Zeb a nice clean boy,\" she taunted and walked over to where I was sitting. \"I've never seen a nice clean boy's body... I think I might like it,\" she added undoing the buttons of my shirt.\n\n\"How sober are you right now?\" I asked grinning.\n\n\"Sober enough to know what I'm doing Zebulon.\" She whispered in my ear before nibbling on the lobe.\n\n\"Good I don't want you to hate yourself in the morning and sneak out for the walk of shame home.\"\n\n\"Oh, are you inviting me to sleep over young man?\" Her tone was one of mock innocence.\n\n\"I may as well since you've already changed for bed.\" I jested back.\n\n\"What, you're not offering pyjamas?\"\n\n\"Not the kind of sleepover I had in mind.\"\n\n\"Glad to hear it.\"\n\nWe kissed, a long gentle sensuous kiss. My hands roamed her warm body pulling her close.\n\nTwo hours later we lay breathless on the damp sheets of my bed. The sex had been fantastic and I was quite proud of my ability to keep her on an orgasmic high for virtually the whole time. Issy was a little firecracker that kept on exploding time and time again. Almost every part of my body ached from the physical excursion... it was an incredibly satisfying ache though.\n\nWe had fucked in over ten positions, some of which I'm sure Issy had found in the Karma Sutra. She just dragged me around the bed and I followed her lead. Her body was supple and toned... also from every angle her tattoos made her look so exotic and sensual.\n\n\"Where the fuck did you learn some of that.\" I finally manged to say after I'd recovered my senses.\n\n\"I had a few experienced boyfriends and girlfriends during college. But you're my first in over a year, so there was a bit of pent up sexual frustration released tonight.\"\n\n\"Glad to be of service, but why the yearly layoff?\"\n\nIssy turned on her side to face me. \"I had a bit of a scare early last year, a cyst on my ovary. It was benign but I had to have it removed. Keyhole surgery.\" She indicated two small scars covered by star tattoos on her abdomen. \"It gave me a real fright and made me think a little bit more about the future. I decided to cut down on a few over-indulgences, sex being the main one. I replaced my sluttish lifestyle with meditation and exercise... until tonight.\"\n\n\"Wow... but why me to break your abstinence?\"\n\n\"Just seemed the right time... and besides I'd already decided I was going to fuck you at some stage the first day I met you.\" Issy smiled.\n\n\"It was my boyish charm right?\"\n\n\"No... you've got a nice arse,\" she joked back.\n\n\"Okay, that works for me.\"\n\nWe lay back on the pillows in silence for a few minutes. I had almost drifted off to sleep when Issy spoke.\n\n\"So going to tell your girlfriend that we bumped naughty bits?\"\n\n\"How did you know I had a girlfriend?\" I asked surprised, and now wide awake.\n\n\"I'm guessing the picture on the bedside table isn't your sister... that would be kind of weird.\"\n\nI glanced at the picture of Ginny. It had been taken at the school ball and she was smiling sitting in her wheelchair.\n\n\"That's Ginny. We've known each other since we were kids.\"\n\n\"How old is she?\"\n\n\"Same age as me nineteen.\"\n\n\"Wow, I forgot that I'm sooo much older than you... I must be like a mother figure eh. What do they call them milf's... mothers I'd like to fuck.\" She smiled.\n\n\"You're twenty three not forty three! I exclaimed. \"Hardly a milf... and you're nothing like anyone's mother that I know.\" I joked back.\n\nIssy was still smiling as she picked up the picture of Ginny. \"Nineteen eh? She's really pretty.\"\n\n\"Yeah, she is.\" I was impressed that Issy didn't feel the need to comment on Ginny's disability.\n\n\"So you think she'd be okay with you fucking an older women?\"\n\n\"Four years older, get over it!\" I shrugged shaking my head. \"And yeah, we agreed that if the opportunity came up then we had the freedom to experiment with others.\"\n\n\"Experiment! What the shit does that mean?\" Issy looked at me questioningly.\n\n\"We've only been with each other and our sexual experience is limited so we decided that maybe it was good to... enjoy life a bit before settling down, maybe learn some new skills.\"\n\n\"So I'm just your second sexual conquest?\" \n\n\"As long as you don't count a blow job interrupted by the girl's mother, then yeah your my second.\"\n\n\"I feel honored. But then I also feel obligated.\"\n\n\"What do you mean obligated?\"\n\n\"Well if I'm supposed to be a learning experience then I hope I lived up to that.\"\n\n\"That's not what I meant. I didn't...\"\n\n\"I know.\" Issy interrupted me. \"I'm just kidding. But I do think I can teach you a few new things in the morning that Ginny might like,\" she added grinning.\n\n\"There's more! I thought we just did everything possible.\"\n\n\"Oh you haven't seen anything yet.\" Issy laughed and planted a kiss on my chest. \"Get some rest because tomorrow we're going to rock baby!\"\n\nIn the morning I was woken up by a wet warm tongue licking the length of my morning boner.\n\n\"Morning.\" Issy looked up as I moaned in pleasure. \"This was already stiff and I thought it would be a shame to waste it.\" Her mouth engulfed me and I lay back enjoying my first wake up blow job.\n\n\"Okay, shower time.\" Issy said ten minutes later as she licked the last of my cum from her fingers. She stood and stretched her arms above her head, the morning sun shone through the window and highlighted that magnificent back tattoo.\n\n\"Do you always look this good in the morning?\" I asked admiringly.\n\n\"Only after good sex!\" She smiled.\n\n\"So you haven't looked this good in a year,\" I joked.\n\n\"Probably not.\" Issy bend down and kissed me, before heading off toward the bathroom, her cute little bottom jiggling nicely.",
        "\"I'll need someone to wash my back... and maybe my front.\" Issy teased as she paused at the bathroom door.\n\nI looked around the room. \"I guess I'll have to do it... seems I'm the only one here.\" I shrugged.\n\n\"Damn, I was hoping for George Clooney!\" Issy pouted.\n\n\"George Clooney! He's old enough to be your father.\"\n\n\"Yeah, but I bet he's experienced in giving body washes... but in his absence you'll do,\" she shrugged and grimaced.\n\nI threw a pillow at her as she ducked inside bathroom laughing.\n\nMy phone went as I got out of bed. It was Ginny.\n\nI lay back on the bed and answered the call.\n\n\"Hey Ginz, how's it going?\" I tried to sound calm and relaxed but my heart was beating fast and I suddenly felt guilty about having another girl in my shower.\n\n\"I'm good. What are you up to?\" Ginny asked.\n\n\"Still in bed.\"\n\n\"Sorry did I wake you?\"\n\n\"No... I was awake just lying in.\"\n\n\"Hey good news. I'm going to be able to spend the whole week with you instead of just three days.\"\n\n\"What. How? I thought you had assignments due.\"\n\n\"Spent the whole week working late each night and I've done them all. So I'll be arriving the day after tomorrow instead. My flight gets in at about 7.00pm, I'll text you the details.\"\n\n\"Hey that's great, I miss you.\" I said sincerely, knowing that I really meant it.\n\n\"I miss you too and I can't wait to see the apartment for real. The photos have been great but it's not the same as seeing it in person.\"\n\n\"I've got some new furniture so it doesn't look so bare. Plus I've got a special surprise for you.\"\n\n\"What kind of surprise?\" Ginny sounded intrigued.\n\n\"Well if I tell you it won't be a surprise will it.\" I chuckled.\n\n\"Okay, I guess I can wait a day to find out, if I have too.\" She put on her cute little girl voice and I could imagine her pouting as she spoke. I smiled.\n\nWe talked for a couple more minutes before hanging up. Issy appeared form the bathroom as I put the phone down. She was drying herself with a towel and had my toothbrush in her mouth.\n\n\"So that was your girlfriend I take it?\" She sat on the edge of the bed and brushed her teeth.\n\n\"Yeah.\"\n\n\"Did you tell her about me?\" Issy asked her mouth full of foam.\n\n\"No, but I guess I will tomorrow when she arrives for the week.\"\n\n\"Cool, I'd like to meet her... if you think that would be okay?\" Issy said as she returned to the bathroom to spit into the basin.\n\n\"Ah, yeah. I suppose it would.\"\n\n\"You said she wouldn't be pissed off that we fucked, right?\"\n\n\"I don't think so... I mean, like I said we agreed that we'd see other people.\"\n\n\"Has she hooked up with anyone?\" Issy asked as she returned and lay beside me on the bed.\n\n\"I don't think so... at least she hasn't mentioned it and we usually tell each other everything.\"\n\n\"But you didn't tell her about me.\"\n\n\"I didn't think with you still being here it was the right time to tell her.\"\n\n\"Probably right. Especially when I'm doing this to you.\" Issy rolled over and straddled me, her pussy lips rubbing up and down on my dick. \"Or this.\" She leaned forward and kissed the side of my neck before nibbling on my ear.\n\nIt didn't take long for my shaft to stiffen.\n\nIt was during this session that Issy introduced me to anal sex. Wow! Her tight little puckered ass hole was something else. I could barely move my dick inside her and if it weren't for the lube I think I would have been stuck in there for eternity. Went I did cum she contracted her sphincter muscles and milked me dry... I swear I almost fainted at the pleasure!\n\nWe spent most of the day in bed only getting up for something to eat and to shower our sweaty bodies. \n\nI dropped Issy off at her flat in the early evening after a stop for dinner at a local seafood restaurant. While we'd eaten we talked about what had happened and both knew it was likely to be a one off thing. I was in love with Ginz and Issy wasn't looking for anything more. We agreed to be friends.\n\nI spent some time the next day tidying up the apartment and making sure everything was in its place. It didn't take long as there wasn't really much space in the 3 x 16 meter space. I also cleaned out the car and gave it a wash... its first wash since I'd arrived in the city six months ago.\n\nAt 6.45pm I arrived at the airport and waited for Ginny's plane to land. We hadn't seen each other for three months and it was the first time we'd get together in my new hometown. I was excited for her to see my apartment but I was a little nervous thinking about how to break the news of my tryst with Issy.\n\nWhen I saw her wheelchair into the arrival area my nerves disappeared and were replaced with a feeling of joy. There was my best friend, my lover, my beautiful Ginz.\n\nWe sat in a caf\u00e9 at the airport for an hour catching up and just enjoying one anothers company. Most of what we talked about we'd already shared on our many phone calls but it didn't matter, just being together was great.\n\nBy the time we got to the apartment it was 9.00pm and the summer sun was disappearing over the horizon. The night was warm and we'd driven with the windows down letting the breeze cool us.\n\nI pulled into the downstairs garage and helped Ginny out of the car and into her chair.\n\n\"I hope you're feeling strong, that's a lot of stairs,\" Ginny remarked as she wheeled over to the old narrow metal staircase.\n\n\"I'm not carrying you... you look too heavy, what have you been eating down there anyway.\" I mused with a half-smile.\n\n\"I'll have you know I'm the same weight as I was last year, thank you very much.\" Ginny replied in mock annoyance. \"Com'on lift me up big boy,\" she held out her arms for me to pick her up.\n\n\"You can take the stairs if you want, I'm going to take the lift!\"\n\n\"The what?\"\n\n\"The lift.\" I repeated and indicated the door beside the stairs.\n\n\"You put in a lift!\" Ginny's eyes were wide with amazement.\n\n\"Just for you Ginz baby. After all this is just as much your place as mine... and you'd soon get a sore bum bouncing up that old metal staircase when I'm not here to help.\"\n\n\"Zebulon Bitterberry, I...\" Ginny didn't finish the sentence instead she burst into tears.\n\n\"Hey. Ginz.\" I knelt down and hugged her. \"It's okay.\"\n\n\"I love you so much!\" she managed to say between sobs.\n\n\"I love you too.\" I held her until she sniffed and wiped her eyes.\n\n\"So, first floor is it madam?\" I quipped as I stood up and opened the lift door.\n\n\"Yes please.\" Ginny sniffed again and smiled.\n\nThe lift had been my surprise and I hadn't told her about it during the renovation. It ran on a water pressure system and had been relatively inexpensive. It was big enough to just fit two people... so up we went.\n\nIt didn't take long for the tour of the small compact apartment. Ginny was suitably impressed with the unique way I had used the space and she gasped with awe and joy as we from room to room.\n\nWhen we got to the bedroom Ginny crawled out of her chair and onto the bed.\n\n\"Comfy.\" She said bouncing slightly. \"But I can't really tell with all these clothes on,\" she added with a shrug.\n\n'All those clothes' consisted of a pair of cargo shorts, a t-shirt, stump stockings and underwear. She pulled off her top and threw it at me smiling. Her shorts followed and then her bra and panties came flying in my direction.\n\n\"That's better.\" She announced and bounced again. \"We should see if it's just as comfortable with two.\" Her wicked smile beaming at me.\n\nIt took me less than ten seconds to shed my own attire and join her naked sexy body.\n\nWe made love passionately in the semi darkness as twilight turned to night. The full moon finally being the only illumination as we lay exhausted on the now damp bed-sheet. I eventually got up and headed for the kitchen, returning with left over pizza and a couple of beers which we had in bed. Ginny was sitting between my legs with her back resting on my chest as we relaxed. I reached around and lazily played with her swollen pussy lips and clit which were still wet from my leaking cum.\n\n\"Hmmm, that feels nice.\" Ginny purred as her hips started to move slightly in unison with my gentle strokes, her bottom pressing against my growing erection.\n\nA few minutes later her breathing started to come in small gasps and she gripped the sheets with tightened fists as a small orgasm sweep over her body.\n\n\"Ohhh, fuck yeah!\" Her voice had a sensuous husky tone as she convulsed in my arms.\n\nHer reaction when combined with the hip movements on my stiff cock turned me on so much I couldn't help but ejaculate, my cum pulsing out and running down her butt crack.\n\nFeeling so content and relaxed afterwards my eyes closed and I drifted off to sleep.\n\nThe next thing I knew it was morning, the heat of the morning sunshine pouring in through the window at the end of the bed. Ginny was still resting on my chest, her cute little breasts rising and falling slightly with each shallow breath as she slept. I managed to ease out from behind and lay her back onto the pillow before heading to the bathroom for a shower.\n\nJust hoped her reaction would be okay. I did feel a little guilty that it had been so recent. I couldn't really tell Ginny that the sex smelling sheets from my last girl were still in the washing machine. Then again I knew I couldn't keep a secret from my best friend either... but maybe I could leave it for a day or two.\n\nAfter my shower I ran Ginny a bath before waking my sleeping angel and carrying her to the tub so she could have a relaxing soak. We started kissing on the short walk between bed and bath and it eventually ended up with both of us in the tub with me washing her back... and her front. After she was suitably clean from my wandering soapy hands we relaxed and talked.\n\n\"You remember we agreed that seeing other people was okay right?\" Ginny asked quietly.\n\nI detected a little nervousness in her voice and hoped that she wasn't about to say that she regretted the agreement.\n\n\"Yeah, of course I remember.\" I answered tentatively.\n\n\"Well... I've kind of meet someone.\"\n\n\"What!\" I exclaimed and was immediately surprised by my reaction... I felt jealous! I had fucked another woman less than 48 hours ago myself but I still felt jealous that another guy might have stuck his cock in my girl.\n\n\"Are you angry?\" Ginny looked at me worried.\n\n\"No, sorry I... it was just a little unexpected. Who is he?\"\n\n\"It's not actually a he... it's a she, and we haven't done anything yet. I mean I'd like to but I don't know how.\"\n\n\"A girl! Wow!\" I paused in shock before continuing. \" Okay, but what do you mean you don't know how?\" I quizzed while continuing to get my head around the fact that Ginny wanted to get together with another girl.\n\n\"Well I'm not exactly experienced in how to seduce someone. I mean you and I just happened naturally. It's not going to be the same with Emma.\"\n\n\"It's okay babe, I'm sure you'll work it out.\" I put my arms around her reassuringly.\n\n\"The more I think about it the more upset I get inside.\" Ginny's voice was full of frustration. \"I know she likes me but I think she's just as scared about making a move as I am.\"\n\n\"Well she's a girl and you're a girl so why not just do what you like... I mean that would probably work on her... wouldn't it?\" I offered.\n\n\"Maybe, I don't know.\" her reply was uncertain. \"Anyway, how do you feel about me wanting to get together with another female?\"\n\n\"Actually I'm glad it's a female... I honestly don't know how I'd feel if it was a guy.\" I replied candidly.\n\n\"Is that why you sounded upset... you thought I was talking about a guy?\"\n\n\"Yep. Sorry it shouldn't matter but I don't think I'm ready to have my girl poked by another guys cock yet.\"\n\n\"Actually neither am I. So for now you can rest assured that your charming little guy is the only one that's going to be doing any poking.\"\n\n\"Big guy... and remember he's imposing and manly.\" I joked hugging her.\n\n\"So you're okay with a girl doing some poking around?\"\n\n\"Hey, I like that idea way more than the alternative. Girls are just more soft and sexy than guys... in my opinion.\"\n\n\"Yeah I forgot. Every guys dream is a threesome with two girls.\" She smirked at me.\n\n\"Are you saying a threesome is on offer!\" I teased back.\n\n\"How can there be a threesome when there's not even a twosome to start with.\" Ginny sighed.\n\n\"I know someone else who might be able to give you some tips on girl on girl stuff.\"\n\n\"Who? Not Masie! Masie's lovely but it would just be really weird.\"\n\n\"No not Masie.\" I laughed.\n\n\"Then who?\"\n\nI took a deep breath and decided to let out my own secret. \"A girl who works at the design office, her name is Issy and she's bi. She's been with a few girls before.\"\n\n\"How do you know that.\" Ginny glanced at me questioningly.\n\n\"She told me the other night... before I slept with her.\" I half smiled, half grimaced as I waited for a reaction.\n\n\"What's she like.\" Her tone was non comital... no negative emotion.\n\n\"What's she like? That's all you have to say. You're not upset or shocked?\"\n\n\"No, I don't think so... I'm processing. In the meantime answer the question, what's she like?\"\n\n\"Com'on Ginz, really... that's all you have to say?\"\n\n\"Just tell me this... would I like her?\"\n\nI thought for a second before answering. \"Yeah, I think you would. I mean she's different and a little older but I think you'd get on really well.\" I responded honestly.\n\n\"So it's just started then? You said the other night... and I know that you would have told me on the phone if it had been going on for a while?\"\n\n\"First and last. I felt bad about it, especially with you coming. It just happened kind of spontaneously, we'd had a bit to drink at the office get together.\"\n\n\"So you didn't enjoy it?\" Ginny looked confused.\n\n\"No, I'd be lying if I said I didn't.\" I shrugged.\n\n\"I'm glad. I think I'd feel depressed if you'd told me that it wasn't good. I mean it would suck if you'd not enjoyed it. We made our agreement so we could have some fun and learn.\" She turned to face me with her wicked grin. \"So did you learn anything while you had fun?\"\n\n\"Well, if you remember last night, that stroking of your butt hole while we were fucking.\"\n\n\"Yeah, that felt real good.\"\n\n\"Issy taught me that... and some other stuff I'm sure you're going to enjoy.\"\n\n\"I think I might like this Issy.\" Ginny smiled.\n\nI was relieved at her openness and returned the smile.\n\n\"So you said she was different and older?\"\n\n\"Yeah, well not too much older, twenty three. But she is quite different looking. Her hair is two colors, she's got a lot of piercings and her tattoos have got to be seen to be believed.\"\n\n\"You're joking right.\"\n\n\"Nope.\"\n\n\"Fuck, I really want to meet her now.\" Ginny said enthusiastically.\n\nI related the whole story of Issy and our night together. Afterwards I felt like a weight had been lifted off my shoulders especially when Ginny reassured me that all was good between us and she really did want to meet and talk to Issy about how to further her own possible relationship with Emma. I said I'd try and arrange it.\n\nWe spent the next 48 hours touring around the city seeing the sites during the day and enjoying each other's bodies at night. It was good spending time together after being apart for so long.\n\nI had called Issy and she had agreed to join us for a picnic supper at one of the local beaches. She was just as keen to meet Ginny as Ginny was to meet her. On the other hand I wondered whether it was the right decision to get them together... time would tell!\n\nThe beach was a short drive from my place and we arrived about 6.00pm. The day had been warm and the sea breeze helped to ease the temperature. I found a spot of grass overlooking the water and parked nearby.\n\nEven after all these years it still amazed me how quick Ginny could move around just using her hands for propulsion. She scooted over and sat on the picnic rug leaving her wheelchair in the van.\n\n\"Oh my God!\" Ginny exclaimed quietly a few minutes later.\n\nI turned in the direction she was looking and saw Issy walking towards us. She was a sight to behold with just a short summer dress that buttoned up in the front, it was sleeveless and revealed not only her trim toned body but also a lot of tattoo artwork. It was the first time I had seen her in a dress and it made her look much more feminine than her usual black jeans and t shirts... 'wow' was my own reaction!\n\nI glanced at Ginny to judge her ongoing reaction to the approaching 'other woman'. To my relief she was smiling broadly.\n\nI introduced the girls as Issy sat down.\n\n\"You are even more stunning than Zeb described.\" Ginny remarked.\n\n\"Ditto for you.\" Issy replied smiling back. \"Zeb you need to take a new photo of your gorgeous lady here, that one in your bedroom doesn't do her justice,\" she added looking over at me.\n\nI didn't reply as I glanced between them both. I must have looked a little nervous.\n\n\"Hey Zeb, all's good. I don't feel awkward. What about you Ginny?\" Issy asked my still smiling girlfriend.\n\n\"Nope me neither.\" Ginny replied.\n\n\"Why not?\" I remarked in a confused voice. \"I mean it's great... but you know.\"\n\n\"Zeb we fucked, it was great and we agreed to be friends... I take it that you've told Ginny about it and she was cool... you are cool about it right.\" Issy asked Ginny.\n\n\"Totally. I mean he was honest about it and we said we were okay with other people. So yeah I'm cool. But man he really went top shelf with you, you're amazing... what a body, you're awesome.\"\n\n\"Thanks. But like I said you look pretty great yourself. I'd give anything to have arms as toned as yours.\"\n\nI sat listening to this mutual praise fest in pleasant shock. I finally starting to unpack the picnic as the girls continued to talk. They chatted like old friends and covered topics from piercings to science. It must have been fifteen minutes before they even noticed me again.\n\nWe ate supper and I opened the bottle of wine that Issy had brought. It was a good time and by the sundown we were more than comfortable around each other. Issy was already calling Ginny by her nick name Ginz.\n\n\"Want to come back to our place for a coffee?\" Ginny asked as we finished packing up the leftover food.\n\n\"Yeah that would be great,\" was the reply.\n\nIssy followed us home in her car and soon we were sitting in the lounge... the coffee idea relegated to another time and replaced with a bottle of Pinot Gris.\n\nI could tell that Ginny was plucking up the courage to ask Issy about her experience with other women. It was clear she was trying to steer the conversation in that direction but didn't quite know how to broach the subject. I decided to take the bull by the horns on her behalf.\n\n\"Ginz has some questions for you on how to approach a relationship with a friend of hers.\" I stated and looked at them both.\n\n\"Well that was subtle Zeb!\" Ginny looked at me and rolled her eyes.\n\n\"Oh, okay. What do you want to know?\" Issy asked totally unfazed by the new thread of conversation.\n\nGinny explained her situation with Emma, their lack of experience and nervousness at making a move.\n\n\"You know showing is better than telling.\" Issy remarked with a wry smile.\n\n\"What do you mean?\" Ginny replied confused.\n\n\"Well I could tell you what to do but I'd rather show you... it would be way more fun and I have really got the hots for your beautiful little body.\"\n\nGinny blushed and gasped at the proposition. I too sat quietly wide eyed.\n\n\"Com'on it's not that outrageous is it?\" Issy exclaimed grinning. \"You are one hot woman and I think that you would be just as turned on seeing my body as I would seeing yours. Am I right?\" Issy looked at Ginny seductively.\n\n\"Ah... I... \" Ginny stuttered then looked at me. \"Zeb?\"\n\n\"Hey, not my call babe. But I don't have a problem with it.\" I offered in reply shrugging.\n\n\"What do you say Ginz? Want to see what else I've got under these clothes and what I can do with what's there?\" Issy's voice was alluring and sexy. She got off the couch and knelt in front of Ginny, their faces only inches away.",
        "Issy tilted her head slightly in an inquiring way. She smiled. \n\nI realized that Issy was waiting for Ginny to make the first move. The atmosphere in the room was intense as they girls stared into each other's eyes. I could see Ginny's breasts rise and fall as she as drew short sharp nervous breaths. Then a remarkable thing happened, her eyes changed from a look of uncertainly to a look of lust... I could see the change happen before me.\n\nShe leaned forward and kissed Issy. \n\nIt was an incredible moment of seduction and I sat in awe of Issy technique. If Ginny wanted to know how to seduce Emma she simply had to remember what had just happened.\n\nThe two girls continued to kiss on the couch and their hands gently touched each other's faces and necks as tongues began to explore mouths. When they finally parted after what must have been five minutes of French kissing both girls smiled.\n\n\"Wow!\" Was all Ginny could muster in response to what had happened.\n\n\"Wow, is right.\" Issy said her breathing slightly ragged.\n\n\"Now what?\" Ginny asked expectantly.\n\n\"Now we ask Zeb to carry you through to the bedroom where I plan to ravish this beautiful body of yours for the rest of the evening.\"\n\n\"I think I'd like that.\"\n\nOn the bed, Issy slowly took off Ginny's blouse and jean shorts, followed by her bra, panties, and stockings. It was like she was savoring every moment of new naked skin as it was revealed. I sat back on the chair by the window and did my own bit of savoring. The undressing was so sexy... lesson two on seduction I thought smiling.\n\nOnce Ginny was naked Issy leaned forward and they kissed, a long deep tongue probing kiss. I noted that Issy kept her hands on the bed and it was only their lips touching, I realized she was waiting for Ginny to make the next move... which she did! Without breaking the kiss I watched as my girlfriend raised her hands and started to undo the buttons of her new lovers dress.\n\nIssy stood and faced Ginny as the remaining lower buttons were undone and the dress dropped to the floor. Issy wasn't wearing a bra or panties.\n\n\"Oh wow!\" Ginny gasped as she saw more tattoos and piercings come into view. \n\nIssy smiled and turned slowly revealing her back. Ginny sat with her mouth open staring at the vivid naked woman tattoo as it scythed across the naked skin from neck to heel.\n\n\"Fuck that is totally awesome!\" Ginny finally managed to say as Issy turned to face her again.\n\nIssy still smiling knelt down and kissed the small perfect shaped breasts in front of her lightly nibbling on each taut little nipple in turn. She then popped out her tongue and licked down between Ginny's breasts across her stomach and onto her thighs.\n\nA look of slight apprehension appeared in Ginny's eyes as Issy's mouth neared the scar on her exposed stump. Issy kissed the scar gently and repeated the action on the other leg. The tension immediately disappeared from Ginny's face and she relaxed back onto the bed, her head turned towards me and she smiled.\n\nIssy slowly lowered her head and started licking and nibbling on Ginny's inside thigh, she went slowly and lovingly upwards toward her goal.\n\n\"Oh shit yeah!\" Ginny exclaimed as a warm tongue licked up her pussy and over her clit.\n\nSoon the room echoed to the sound of both girls, one extolling the taste and smell of the slit she was devouring, the other swept away by the results of that tongue lashing.\n\nI sat back with cock in hand and enjoyed the exhibition before me.\n\n\"Oh God, I'm going to come!\" Came the inevitable cry of rapture.\n\nAnd come she did! Ginny's hands gripped the bed sheets as she thrashed about, bucking and bouncing on her butt cheeks.\n\nIssy peeked over at me and smiled, her face was wet from pussy juice and she poked her tongue out and licked her lips seductively. I grinned back. I realized I had cum all over my cock and hand and I shrugged sheepishly as the last drops of the sticky white liquid dribbled down my still stiff shaft.\n\nOnce Ginny had recovered her overloaded senses she lay basking in the aftermath of her first glorious female induced climax. Issy slid up the bed and lay down beside her satisfied conquest.\n\n\"And that is how you seduce your roommate.\" she said still grinning.\n\n\"I didn't take any notes.\" Ginny replied smiling back.\n\n\"Then we may have to do it again so you remember better.\" Issy replied, her voice sounding very alluring.\n\n\"If all else fails I have the whole scene permanently etched in my memory baby... I'm sure I can describe it in every detail if you need.\" I added jokingly.\n\n\"Will your memorial come with copious amounts of man-cum like it did today?\" Ginny asked looking at my post wank condition.\n\nAs if on cue a large glob of cum dropped onto the floor between my legs, setting the two girls off in a fit of laughter.\n\nThe three of us showered together, I had put a second level in the shower just for Ginny so she wasn't on the floor. We soaped up and fooled around under the stream of water before drying each other. I was amazed at how natural it all seemed... later we drifted off to sleep in each other's arms.\n\nThe following day Issy had to leave early for work. She got out of bed showered and then made coffee, bringing cups for Ginny and I who were still in bed. Without a word she kissed us both and left.\n\n\"How do you feel about last night?\" I finally asked after finishing my coffee.\n\nGinny placed her empty cup on the bedside table and shuffled around to face me.\n\n\"I'm still so horny I want to fuck your brains out right now,\" was her candid reply. Her eyes and smile gave credence to her words and she licked her lips seductively for even added affirmation.\n\nSo we fucked! It was fast and furious with Ginny bouncing atop of my hard cock, her fingers dug into the flesh of my chest as she tried to keep her balance. My hands were glued to her breasts as I squeezed the twin globes and pinched the hard protruding nipples. I was surprised by the noise we made both goading each other on with cries of passion and words of encouragement... none of which we could use in normal conversation! Generally in the past we had been quite subdued in the vocal department when fucking but not this day... and it definitely enhanced our excitement as we both came to euphoric orgasms that left our sweat covered bodies convulsing with rapturous delight.\n\nIssy was back in our bed that night... we had waited until lunchtime to ask her over again... not wanting to sound too needy or pushy!\n\nThe lessons in girl on girl continued with Ginny having her first taste of another woman's pussy... a very enjoyable experience by all accounts. This time I participated in the activities and ended up fucking Issy in front of Ginny. It was a true threesome as all holes were enjoyed by all involved.\n\nIt was Ginny's first anal and after Issy had licked the rookie asshole with her saliva covered tongue and inserted a lube covered finger I got to butt fuck my girl. It took awhile for Ginny to relax her sphincter muscles so I could get inside but finally the head of my cock slipped in... I waited for her to relax more before slowly inching in. If anal with Issy had been a 'ten' then Ginny took it off the scale! She declared over and over again how good it felt and with Issy's finger rubbing her clit she came before I did. I held out until a second climax racked her body but that was as long as I could last. I reckon I shot eight spurts into that virgin ass grunting as each one disappeared into her bowels. Fuck I love anal!\n\nBy the end of the week we were so comfortable being around each other that I was happy to let the girls have a couple of hours alone in bed while I went out to a movie. Not a thought of jealousy crossed my mind... although I did get a boner thinking about them together, thank goodness the cinema was in darkness!\n\nGinny left at the end of the week and we had spent the final night alone, a meal out and then a not so quiet night at home. We talked non-stop on the way to the airport and I confirmed to her that I was OK with her pursuing the relationship with Emma at college.\n\n\"I have more than enough experience now that's for sure.\" Ginny laughed in response.\n\nI told her to keep me posted on all the developments and she promised to do that... and more.\n\nI wasn't sure what 'and more' meant but my cock twitched at the thought of it!\n\nTo be continued?... if you want more let me know in your comments!"
    ],
    "authorname": "silverfern",
    "tags": [
        "anal",
        "blowjob",
        "first time",
        "seduction",
        "teens",
        "threesome",
        "virgins",
        "group sex"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/zebs-first-time-experiences"
}