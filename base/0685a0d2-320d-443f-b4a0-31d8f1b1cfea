{
    "title": "Senior Year Memories Ch. 31",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I hope you are all healthy and happy and responsible and doing well in quarantineland out there; it's rough going these days, but at least we have the wide, wonderful world of erotica to help distract from time to time. I hope this brings some joy into your world, if just for a little while. On top of everything else, I want to give special thanks to fellow Literotica author and SYM reader Lil_kitty for many excellent ideas and acting as a second set of eyes on this chapter, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories. Thank you very much! And, oh yeah, fair warning, for those of you who complain about there being too many girls with gifted chests in Senior Year Memories? Yeah, you'll probably not like this chapter.)\n\nPreviously, on Senior Year Memories: After a busy and confusing January, 18-year-old Ryan Collins and bubbly cheerleader Brooke King admitted their love for each other. This became a problem when Ryan's girlfriend, the goth princess Josie Wong, returned from a long family trip to find out what had happened. Instead of a fight, the three of them sat down for a nice long conversation and agreed to give a polyamorous relationship a try, celebrating this new arrangement quite naturally with some hot sex. While letting Josie and Brooke get to know each other better, Ryan and his neighbor/regular flirt, Alice Talbot, finally consummated their long-simmering sexual tension, before things got down and dirty with all four of them. With a new status quo having been established, it's a brand new year for Ryan Collins...\n\n***\n\nI'm not an expert on the subject, but I've seen enough 90s comedies to know that if you see a character striding down a hall with \"Walkin' on Sunshine\" or \"I Feel Good\" (or if they're feeling like a played-out, retro reference, \"Stayin' Alive\") playing in the background, something really good happened to them. They got the girl, they won the big game, maybe they just got a new car, but whatever happened they feel the need to strut and let the whole world know that they're a brand-new person who's got every reason to strut.\n\nI may not have had music that corny, but going back to school after the weekend where Josie, Brooke and I had decided to forge a polyamorous relationship, I definitely had that spring in my step.\n\nDad noticed it, actually looking up from the repairs he was making to his kiln as I walked out the door. He didn't say anything, as he so rarely did, but he definitely shot me a proud smile.\n\nAlice definitely noticed it on our bike ride on the way to school, though to be fair she was there for the foursome we'd decided to celebrate the new arrangement with, so she didn't have to guess at much.\n\nIt was walking in to school, though, where I felt like a fucking god.\n\nI started my senior year as a sexless, nearly friendless nerd.\n\nBy late January, I had friends, all the sex an army of men could want, and two girlfriends I was in love with, with all three of us in an understanding and loving polyamorous relationship. There had been a lot of fear and worry at first when I realized I was in love with both Brooke and Josie, but now that we'd sorted things out and they were not only cool with this arrangement, but each other...\n\nYeah, I felt like a fucking god, and I may have let it show a little. I walked with a sublime confidence, no longer fearing school as I so often had before and feeling, well, a little like one of those popular kids I'd envied so much back in the day. I mean, I still viewed myself as unpopular, I was still a nerd at heart and it was difficult to shake a lot of those old perceptions of myself, but I couldn't argue with how things had changed, either.\n\nOld Ryan wouldn't have a group of big-titted cheerleaders as hot as Addison Gonzalez, Gwen Savage and Haley Campbell look at him like they were about to swoon.\n\nOld Ryan wouldn't have gotten a high five from popular football player Peter Nixon as he walked down the hall.\n\nOld Ryan wouldn't have gotten a lusty look from his hot history teacher, Mrs. Lynn, one that held equal parts want and promise for what would come.\n\nOld Ryan was gone, and New Ryan was here to stay. All hail New Ryan.\n\nWell, okay, I felt like hailing New Ryan, at least. I didn't ask for worship, I didn't want worship, but I was loving the attention and even more how I felt about myself. I didn't think I'd ever felt this good being me, which for the life I'd lead before where self-esteem was an improbable concept was a welcome change.\n\nI loved waking up every day. I loved life. I loved my girlfriends. I loved *me*.\n\nWhat a difference a few months could make.\n\nSpeaking of...\n\n\"Hi, Ryan!\"\n\nThe voice was perky, and friendly, and thoroughly welcome in my current mood.\n\n\"Hello, Brianna,\" I said, turning to face the unusually hot Brianna Roth.\n\nAt 5'4\", 18-year-old Brianna may have been short and quite fit, but she had some insane curves that seemed to exist in pure defiance of her frame. Her F-cup tits strained any top, and her matching ass was suitably epic (and having already had a delightful encounter with her twin sister Mia back in December, I knew that every inch of her was as mouth-watering as it looked). With dirty-blonde hair, tanned skin, sultry brown eyes and a pair of the fullest, most delicious-looking lips around, she looked like walking sex. I'd thought this for a long time, and her reputation as one of the biggest flirts at Regan Hills High School did little to dissuade me from this thought.\n\nAs usual, it took a nice conversation to make me realize there was more to her than met the eye, and that I'd judged a really nice girl too hastily. Lewdly dressed and utterly luscious, she'd caught up to me and propositioned me the Friday before, a tempting offer usually had I not needed to make an urgent run to the Puma Press offices. We'd gotten to chatting a little, though, and I got to understand that she was a kind person who liked to have fun, but was looking for a guy who could treat her decently instead of the jerks who usually came after a girl like her. That a girl like her could so plainly admit that to a guy like me was something I hadn't expected, and was something I meant to address over the weekend.\n\nOf course, it's difficult to remember to text someone when you're having marathon sex with Josie Wong, Brooke King, and Alice Talbot for most of the weekend. She'd texted me a couple times, and I meant to get back to her, but whenever I thought about doing it one of the others distracted me easily, and... well, you know how it goes.\n\nI meant to fix that now.\n\n\"You're looking in a good mood today,\" she said, smiling at me prettily.\n\n\"Probably because I am in a good mood today. You're looking gorgeous, as always,\" I said.\n\nBrianna smiled at me, maybe even blushing a little. I knew it was a line she'd heard more times than she could count from probably more guys than she could count, but I hoped my sincerity counted for something. She was looking good today, even if her outfit wasn't nearly as lewd as the one she'd worn on Friday. With a comfortable, knee-length skirt, blue top, light button up sweater and a hairband holding her shoulder-length hair back, she looked well within the school's dress code and still stunning.\n\n\"That was smoother than I expected,\" she said.\n\n\"Like I said, I'm in a good mood today,\" I replied.\n\n\"Send some of that good mood my way when you get a sec?\" Brianna teased.\n\n\"Bad weekend?\" I asked.\n\n\"No, just long and boring. Homework, temple, putting up with Mia, and today's a Monday, so...\" she explained.\n\n\"So, yeah, it's a Monday,\" I replied.\n\n\"You got it,\" she replied. \"I was hoping to get to talk to you some this weekend like we'd discussed, but I got the idea that after the first few texts didn't get responded to that you were probably busy.\"\n\n\"Uh, yeah,\" I said, running a hand through my hair guiltily. \"You could say that.\"\n\n\"It's okay,\" she said.\n\n\"No, it isn't, but thank you for saying it,\" I replied. \"You opened up to me, wanting a guy you could talk to and have a good time with without losing on the respect, and I got off to a pretty lousy start.\"\n\n\"Ryan, it's cool. I wasn't expecting you to throw your life to the side just so I could have a shoulder to cry on; you got your things to do, I got mine. I was hoping we could get them to intersect sometimes, but I wasn't expecting it to be right away. I *might* have been hopeful that we could manage it right away, but I didn't expect anything,\" she said, so honest and sweet that I felt like even more of a dick for leaving her without at least an explanation of why I wasn't getting back to her.\n\nBriefly, I pulled out my phone and checked the time. Both of us had gotten to school fairly early. Not too early, not so early that we had a lot of time before school, but early enough that it was still fairly empty. There was time... wasn't there?\n\nFuck it.\n\n\"Well, I still feel the need to make it up to you,\" I said.\n\n\"You don't have to,\" Brianna replied.\n\n\"But I want to. So, I know it's spur of the moment, and a little crazy, but I'm having a good day, and I want you to have a good day too, so I was wondering if you'd like an orgasm,\" I said.\n\nBrianna laughed. \"You're joking.\"\n\nI said nothing. Her eyes widened. \"You're not joking.\"\n\n\"I'm not joking,\" I echoed.\n\nShe bit her beautiful lower lip, seriously considering my offer. To sweeten the deal, I said, \"I'm pretty good at it, but if you don't want to take my word for it, I'm sure Kaitlyn and some of your other friends have told you about my skills, and could back me up again should you want to check my references. This isn't a limited time offer, if you don't want one now but still want to have some fun later, I'm definitely down, but if a good orgasm will help make your Monday even that much better, the offer sta-\"\n\n\"YES!\" Brianna blurted out. \"I mean, yes, I'd like that a lot.\"\n\n\"Good,\" I said, looking up and down the hall. \"I know a couple good spots, but...\"\n\nGently, she took my hand in hers and tugged. \"I know the perfect place.\"\n\nI followed her a fair distance down a nearby hall, around a corner and to one of the school's art rooms.\n\n\"Ever since Mr. Downes retired, this art room's been left abandoned,\" she said, fiddling with the handle. \"They leave it locked, but I know a bunch of the art students still like to sneak in to get some practice, and maintenance hasn't tried fixing the door in ages. If you shake the handle just the right way, you can pop the lock and-\"\n\nWith a clattering click, the door swung open. Eagerly, Brianna guided me inside, locking the door behind both of us.\n\nThe room was a mess, smelling of old clay and dry paint. Like other abandoned portions of the school, it appeared to have fallen into disuse and been adjusted more to work for storage of furniture nobody had any idea of what to do with than any serious hope that it might be a usable classroom again one day.\n\nHonestly, none of that really mattered when Brianna turned and looked at me with what had to be one of the greatest \"come fuck me\" looks I'd ever seen.\n\nShe dropped her backpack first. I followed her example. We both closed the distance, approaching each other slowly, neither wanting to rush but knowing that we had to, at least a little, if we wanted to eventually get to class. Brianna reached out to me confidently, if a bit slowly, pulling me in close and guiding my hands to her. She ran them up her sides, helping me trace the curves of her hips, up her stomach and closer to the swell of her massive breasts.\n\n\"Feel free to admit it or not, but you noticed me before you became the secret stud of this school, right?\" Brianna asked me.\n\n\"It'd be pretty hard not to notice you. Did you like me noticing you?\" I said, throwing her line of questioning back at her.\n\nShe bit her lip again, answering in a voice that was innocent and a shade toward the husky. \"Yeah.\"\n\nI ran my hands over her breasts, finally taking in their shape, their heft, feeling her hardening nipples beneath the palms of my hands as I squeezed their perfection. They were as heavy as they looked, but were utterly welcoming. Brianna moaned softly, a high, pleased sound I cut off with a kiss. Her lips were as soft and moist as I'd hoped, tasting of raspberry lip gloss and promises of what that mouth could do to my cock if I let it near. Tentatively our tongues grazed each other, but that tentativeness was short-lived as we realized our urgency. Our tongues began to explore each other as if we wanted to devour every square inch of each other.\n\nWe were both breathing heavily when I broke this kiss and said, \"God, I want to make you cum like you've never cum before. I want you walking out of here (or barely walking out of here) ready to have the greatest Monday anyone's ever had.\"\n\nFor emphasis, I gently, dropped a hand beneath her skirt, pressing my fingers against the fabric of her panties. I could already feel a moist heat growing, and I had designs for it.\n\nBrianna moaned softly as I ran light circles on her sex through the thin fabric. She replied, \"You can say the right words, but can you back them up?\"\n\n\"With these hands, I can,\" I said.\n\n\"But what can you do with those hands?\" Brianna asked, feigning innocence.\n\n\"I'll show you,\" I said, running both hands under her skirt and pulling her panties free. They dropped to the floor around her ankles, and Brianna stepped out of them. I guided her to a nearby stool, and with the slightest hop she sat up on it. Kissing her, I pulled her skirt up until it was around her waist.\n\nHer pussy was shaved, and completely and obscenely beautiful. Her lips were damp and slightly full, definitely ready for fun but not all the way ready.\n\nI could fix that.\n\n\"Well, this looks like fun,\" I said, slowly fingering her, running two fingers over her folds and exploring every millimeter of her sex. She groaned as I explored, looking at me with a sense of what felt like desperation as I played with her moist, hot folds.\n\n\"It is when you do it... fuck...\" she moaned, leaning back against the high table next to the stool. She reached one arm back for stability, but squeezed one of her tits with the other, pinching her nipple through the fabric of her top. If we had all the time in the world, this would be the time we'd strip down and have a nice and truly nasty fuck, but with time of the essence we stayed dressed, both of us focusing on her pleasure. I slipped my fingers inside of her eager pussy, probing, curling, reaching until I found that one elusive spot...\n\n\"OH!\" she cried out.\n\nFound it.\n\n\"Oh, this is good, this is so fucking good,\" Brianna groaned, reaching for me and holding on with her one free arm as I massaged her g-spot. I soon pressed my thumb against her clit, rubbing it in small, firm circles in time with the pressure from my fingers.\n\n\"So, Kaitlyn didn't exaggerate?\" I teased slightly, fingering her more urgently and punctuating with a kiss.\n\nBreathily, she replied, \"Not in the slightest. This is... fuck... you're a fucking artist... don't think a boy's ever found my... G-spot!\"\n\n\"I aim to please,\" I said.\n\n\"You're doing a good job of it!\" she almost shouted back, before biting her lip and holding back in pleasure as I fingered her.\n\nI smiled. \"If you think that of my fingers, wait until you see me on my knees...\"\n\nLost in her own haze of pleasure, Brianna only managed to say, \"Hwuh?\"\n\nShe didn't need words, not when I had her where I wanted her, and certainly not when I was really hoping to get a taste of her pussy. Without taking my fingers from her sex, I dropped to my knees between her spread legs, redoubling my efforts to bring her to a greater peak of ecstasy. I loved looking up at her, the swell of her breasts, the pure pleasure on her face as I continued to vigorously finger-fuck her. She was close, and as it was I could give her a great orgasm from this position.\n\nI wanted to give her better than great, though.\n\n\"It's on my knees where I do my best work,\" I said, pulling my fingers from her pussy and quickly replacing them with my mouth.\n\n\"Oh shit! Oh, fucking hell!\" she groaned, running a hand through my hair as I did my absolute best to worship her pussy as it was meant to be worshipped. I liked her taste, a distinct savory sweetness, a flavor that makes you keep searching and wanting to taste more. I lapped at her pussy with a distinct urgency, wanting to stretch this out and simultaneously wanting to make her cum. We were uniquely pressed for time, but it's on occasions like this where I've done some of my best work.\n\nBrianna seemed to agree, anyway. \"Oh goddamn, oh fuck, fuck, oh yes, like that, keep going, like that, right there... oh fuck... you're the best guy... best guy who's ever eaten my pussy... too few do, and they don't know, fuck, they don't know shit... you know... fuck, you know...\"\n\nIf we'd had more time, I would've come up with a quippy one-liner and dove back in. Instead, this time I just closed my lips over her clit, licking and sucking on it intently as she squealed and swore above me.\n\nI was merciless, and she was ready. The dam breaking was only a matter of time.\n\n\"MOTHERFUCKER, YES, FUCK ME WITH YOUR MOUTH, I'M CUMMING, FUCKING... YEEEEEEEEEEEEEES!\" Brianna cried out. She came against my face hard, so hard I feared that she'd soon fall off the stool. I held her up as best I could, lapping up the flood of delicious juices she unleashed upon my waiting mouth, and enjoying the sounds she made as she rode out her orgasm.\n\n\"Fuuuuuuuuuuuuck...\" she groaned, running her fingers through my hair and holding on tight, grinding her pussy against my face as the last few shakes and spasms took her body.\n\nOnce I was content that she was content, I gave her clit one last, firm kiss that sent her shaking.\n\n\"Fuck!\" she exclaimed. \"I wasn't ready for that!\"\n\n\"Sorry,\" I said, looking down at her juicy pink button, \"but it was just so tempting!\"\n\nUnsteadily, she dropped down off the stool and wobbled on her feet. \"I'm going to have trouble walking to class after this.\"\n\n\"That was kind of my plan. Was it worth it?\" I asked, getting back to my feet.\n\n\"Oh yeah, very, very much worth it,\" she said, pulling me in for a kiss. We lingered on the kiss for a good, long moment, but both of us understood rather well that we had to be getting on with it sooner instead of later. She gathered up her panties, and the both of us picked up our backpacks, walking for the door.\n\n\"So, I know you're often busy these days, but if you could find the time soon, I'd appreciate returning the favor...\" Brianna said, running a finger up the bulge in my jeans.\n\n\"Would you, now?\" I said.\n\n\"Uh huh,\" she said, her voice giddy and innocent again. She leaned into me, pressing her tits against my chest. The feel of her hard, fabric-covered nipples against my chest made me shiver.\n\nLeaning in, she whispered, still in that sweet, innocent voice, \"I want to take you into my room and feel that cock all my friends are talking about inside of me. I want to taste it. I want to give you the same kind of pleasure you gave me, and I want to see if it'll destroy my tight little holes like everyone says it will. I want it soon, and I want you to know that I'm a needy little bitch who's willing to do whatever it takes to make this happen very soon. This. Isn't. Over.\"",
        "\"That a fact?\" I asked, loving her sweet voice talking such foulness.\n\n\"Yes,\" Brianna nodded, pulling me down for another deep, sultry kiss. This was a kiss that promised all that she had in words and more, and made me sincerely wish we had more time.\n\nAlas, we did not.\n\nBrianna swung the art room door inwards, causing the girl who'd been reaching for it originally to yelp.\n\n\"Oh, hi, sorry!\" Brianna giggled, walking past the girl.\n\n\"It's okay...\" the girl said meekly. As soon as Brianna walked past her, I recognized the other girl as 18-year-old Jennifer Cage, a nerdy art student. She had glasses, dark hair pulled back in a ponytail, and overalls with paint stains on them, and even though she was kinda cute I had to say I was pretty sure she was about as invisible to most of the school as I used to be back at the beginning of the year.\n\nShe looked at me with a hint of confusion, maybe even wonder as I passed. Trying for a pleasantry, I said, \"Sorry for the scare.\"\n\n\"Uh, don't be...\" Jennifer replied with her quiet, mousy voice, before looking up at me and adding. \"You should probably go to the bathroom before class and wash your face. You're, you know, glistening?\"\n\nTo emphasize, Jennifer waved a hand in front of the lower part of her mouth and chin. I brought a hand up to my own chin, almost mirroring her.\n\nOh shit. Right.\n\n\"Thanks!\" I exclaimed, jogging down the hall.\n\nAll in all, not a bad start to a Monday, at all. Getting to please a hot, sweet girl with huge tits was a pretty good way to start the day, and if that were all the fun I'd have, I'd have been content with the day.\n\nWhat I was about to find out was that making Brianna cum was only the beginning.\n\n***\n\nThe rest of the day went quite well, and only got better at lunch time when I finally got the time to sit down with both Brooke and Josie. If anyone knew that the three of us were in a relationship together, they didn't say anything, but they probably knew something was amiss with a nerd, a bubbly blonde cheerleader dressed all in pink, and the school's reigning goth princess sitting together for lunch.\n\n\"Well, your timing was good for once if she didn't walk in on you,\" Josie said.\n\n\"Yeah. Sexy girls, like, have an improbable chance at walkin' in on you when you're doin' it in this school. Great for impromptu threesomes, though,\" Brooke replied.\n\n\"I got lucky,\" I admitted.\n\n\"Actually, I'd say Brianna was the lucky one here,\" Josie replied.\n\n\"I heard that,\" Brooke replied, holding out her hand to Josie. They performed a quick, elaborate little ritual with their hands, ending with both of them laughing.\n\n\"Oh, so you've a secret handshake now?\" I asked.\n\n\"Yes,\" Josie replied bluntly.\n\n\"Us girlfriends of Ryan and each other gotta, like, have a way of knowin' each other,\" Brooke replied.\n\n\"Damn straight,\" Josie replied.\n\nBrooke's eyes widened and she almost shrieked giddily. \"Speakin' of which! We gotta talk about recruitment and expansion of the whole throuple thing we got going on!\"\n\n\"Still don't like the word throuple,\" Josie replied.\n\n\"Well if we add someone else into the mix, it wouldn't be a throuple anymore, would it? And you totally wouldn't have to hear it anymore from me!\" Brooke exclaimed.\n\nJosie looked at her wide-eyed. \"I hate it when you make this kind of sense.\"\n\n\"And you love it!\" Brooke replied.\n\n\"I'm not saying I don't,\" Josie admitted.\n\n\"I'm not saying *I* love it. Aren't we just figuring out how to make this... trio, work?\" I said, trying to find a better word than throuple. A tingle went up the back of my neck, the distinct feeling that there were eyes on me. I quickly looked over my shoulder in search of them, but couldn't be sure who it was in this crowded lunch room.\n\n\"Oh yeah, totally, but, this is for, like, dreaming, like, a fantasy football thing but for girls we'd like to bring into our fold and fuck and kiss and love and all that, and we totally don't have to do anything right away I think, just once we've got everything figured out and that's only if we really want to try anything. Give it a month or three and we'll, like, be ready for expansion, and when we're ready I just wanted to, like, have some prospects in mind,\" Brooke said.\n\n\"Again with the logic,\" Josie replied.\n\n\"I think you wanna say that I'm totally incorrigible,\" Brooke said, blinking cutely at Josie.\n\n\"You're totally something, I'll say that,\" Josie admitted.\n\nI interrupted, \"Not that I'm fully on board or anything, but it sounds like you had some ideas?\"\n\n\"Well...\" Brooke trailed off, twirling one of her pigtails around her finger, \"I was thinking, like, I'd be totally fucking remiss if I didn't throw Alice out first being that's how we all decided to kick things off.\"\n\n\"I like Alice,\" Josie admitted, \"but I don't know her that well. Ryan?\"\n\n\"Are we actually talking about this?\" I asked.\n\n\"Yes,\" Josie replied.\n\nI sighed. I didn't want to be pro-conning the women I liked with the women I loved, but if that's what we were doing, I was going to be honest. \"We all like Alice. She's nice, and smart, and a lot of fun, and really hot, but there's definite room to get to know her more, for all of us.\"\n\n\"Much as I love what she does with my cunt, I gotta agree. Keep her as a maybe, though?\" Brooke proposed.\n\n\"Sure,\" Josie replied.\n\n\"Cool, 'cause then I got another name: Kaitlyn,\" Brooke proposed.\n\nJosie wrinkled her nose. Brooke asked, \"Not a big fan of Kaitlyn?\"\n\n\"I'm not a big Kaitlyn fan,\" Josie replied. Not a lot of people were. Though Kaitlyn and I were friends when we were much younger, until recently she'd been one of the biggest bitches at Regan Hills High School. We'd only reconnected once she seduced me in an attempt to get out of tutoring, and instead of an easy way out, we'd not only rekindled our friendship but found a way for her to ease up some from her mean girl ways. True, she was definitely still a bitch, but the kind of bitch who was fun to be around.\n\n\"But she should get some points for discovering Ryan for all of us, and she's been waaaaaaaay less of a bitch this year than usual. Some good dick from a nicer class of guy than she's used to has been good for her,\" Brooke said.\n\nJosie grumbled. \"I concede this point, however begrudgingly.\"\n\n\"Yeah... if we can't all agree on someone wholeheartedly, maybe we should table that name for now?\" I suggested.\n\n\"Then I've got a name I think might pass,\" Josie said.\n\n\"Yeah?\" I asked.\n\n\"Sarah Kent,\" Josie suggested.\n\nBrooke's eyes lit up. \"Sarah Kent? I frickin' love Sarah! She's so cute and nice and sexy and a really good lay and I totally forgot you were friends first and we should all get together and have fun with her sometime even if she doesn't want to be all our girlfriend because holyfuckingshitballs that would be, like, totally amazing!!!\"\n\nI thought fondly of Sarah Kent, the petite, former band geek and current cheerleader. I'd watched her come into her own a lot since Josie introduced me to her as one of her friends a few months back, and I really did like her. I knew that both Josie and Brooke knew her and liked her, and she was one of my favorite people to hang around.\n\n\"I like Sarah,\" I admitted, \"but she's on a bit of a self-discovery journey at the moment, figuring out her identity after making such a huge change? I wouldn't want to change her course in a stage like this. New relationships can change everything.\"\n\n\"Truth,\" Josie admitted. \"But if we were to expand our group, I think we should at least make the offer and let her choose rather than speculating on what she might or might not want?\"\n\n\"Also fair,\" I replied.\n\nBrooke squealed. \"See? This is how people should talk about things! I fucking love this relationship. I love you guys.\"\n\nJosie smiled, squeezing Brooke's shoulder affectionately. \"Love ya too, Blondie.\"\n\nSweetly, Brooke pecked Josie on the cheek. \"Good. 'cause I got more names to throw out! Like, I know this'll totally sound crazy, but how about...\"\n\nThere it was, that feeling of being watched again.\n\nI scanned the busy cafeteria again, and though there were definitely some eyes on us, these weren't the ones I felt. It was a strange instinct, knowing that I was being watched, but one I'd become accustomed to around here.\n\nEver since Kaitlyn had started spreading the word about me, a lot of the girls at school had been eying me differently.\n\nEver since Mrs. Lynn had let slip what we'd been doing to her book club, most of the teachers had started watching me as well.\n\nIt was rough to pick out one pair of eyes among many, but as I finally drifted my eyes toward the nearest wall, I finally knew whose eyes I'd felt.\n\nMrs. Wanda Harker, our school's 28-year-old drama teacher, was hanging flyers for auditions for the school's spring musical. It was more a formality than anything else, everyone knew that she'd mostly cherry-pick people from her almost cult-like drama club, but she walked with a supreme confidence that had a way of drawing the attention of every boy and a large number of girls. She had a commanding presence and had a way about her that made it feel like she thought she owned the place, with deep brown eyes and a sultry voice that could terrify just as easily as arouse.\n\nWith her jaw-dropping curves, though, she could've owned the place if she wanted to. A pale woman with shortly bobbed, jet-black hair and lips painted ruby red, she dressed conservatively enough in a long-sleeved purple blouse and a knee-length black skirt that might almost make her look a normal and completely respectable teacher. That she had very likely the biggest tits I'd ever seen (and I'd seen some very, very big ones), and an ass to match on her otherwise tight frame made her look more like a piece of exaggerated pinup art from a World War II bomber's nosecone than a human being who could possibly exist in reality. Her legs, while not long, looked firm and confident in her dark stockings. This was a woman who knew exactly what she wanted, and she wanted our eyes on her, knowing that we couldn't touch her even though we all wanted to.\n\nI'd overheard her talking about what she'd do to me if she'd gotten the chance last Friday, and... well, I couldn't say I was uninterested in her imagination, but the part of me that still believed in a rational world that worked on rules I used to knew felt that was an impossibility.\n\nAnd yet, there she was putting up the flyers, her eyes darting to me with a piercing gaze. Not for terribly long, not to distract from the fact that she was keeping busy with her task, but when they locked onto mine, I felt like she was not just looking at me but into me. It was a fairly intimidating gaze, almost as intimidating as she was, but it had its own allure.\n\n\"Ryan?\"\n\n\"Ryan?\"\n\n\"Earth to Ryan!\"\n\n\"Awww, he's just looking at Mrs. Harker, like, don't blame him, she's stacked!\"\n\n\"I've got eyes too, and I know he's not wrong, but...\"\n\nJosie snapped her fingers in front of my face, bringing me back to reality.\n\n\"Huh, uh, wha?\" I said.\n\n\"I know our school's fair drama teacher is more than fairly hypnotic, but we've gotta talk about tonight,\" Josie replied.\n\n\"Tonight?\" I said, everything coming back to me slowly.\n\n\"Yeah. Movie night?\" Josie said.\n\n\"Movie night?\" I said, trying to remember what words were.\n\n\"Wow, Ryan looks like he really got the whammy dropped on him,\" Brooke said, looking over at Mrs. Harker. \"I get it.\"\n\nOh, right, movie night!\n\n\"Right!\" I exclaimed. \"You're both down?\"\n\n\"Totally,\" Brooke replied, now a little hypnotized by Mrs. Harker herself.\n\n\"I'm in,\" Josie replied. \"We gotta get Brooke here properly introduced into some horror movies.\"\n\n\"I know *some* scary movies, I'm not, like, a total virgin,\" Brooke said.\n\n\"You and the word virgin haven't been familiar with each other for a while,\" Josie quipped.\n\n\"Darn tootin'!\" Brooke replied gleefully, exchanging another of their trademark secret handshakes.\n\n\"But they still scare you?\" I asked, trying to steer the conversation back on course.\n\n\"Eh, a little. I just need... you know, some work? I'm not a total fraidy-cat, but I watch a lot through my fingers. And a pillow fort, should one be provided,\" Brooke said.\n\nJosie and I had initially bonded and become friends over our mutual love for horror movies, and knowing this, Brooke said she was willing to dip her toes in and maybe give them a try. I knew she had something of a stomach for it with how readily she jumped in to help out on Halloween, but clearly it was one we needed to develop.\n\n\"We'll start you off easy,\" I said.\n\n\"Hellraiser?\" Josie suggested.\n\n\"A... uh, little easier than that. I was thinking some horror comedies and working our way out from there?\" I replied.\n\nJosie rolled her eyes. \"Fine, let's go into the shallow end.\"\n\n\"I like the shallow end, it's an easy entry point into any new discipline of study. And in a pool it's way easier to stand in so you can fuck,\" Brooke replied, squeezing my hand gratefully.\n\nIt was a nice moment between Brooke and me, and Josie's wry smile told me that her ribbing Brooke was all in good humor. It was a sweet moment, one that could've lasted forever and left me a very happy man.\n\nThe hand slapping a piece of paper down on the table next to me, though, was an intense interruption.\n\n\"B-FUCKING-MINUS, BITCHES!\" Jess Garza proudly proclaimed. The 18-year-old Latina skater was one of my tutoring subjects, and dressed in her usual hoodie, knit cap and torn jeans, she disguised quite well how surprisingly hot she was. The one thing she didn't disguise, though, was her lack of boundaries, sliding onto the bench next to me.\n\n\"B-minus?\" I asked. \"Nice!\"\n\n\"B-minus is nice?\" Josie asked.\n\n\"Fuck yeah, it is!\" Jess shot back.\n\n\"Like, then, congratulations!\" Brooke replied, gently kicking Josie beneath the table.\n\n\"Thanks!\" Jess exclaimed, playfully punching me in the shoulder. \"I owe it to Ryan here. Guy's a miracle worker as a tutor, and if it wasn't for him this history quiz wouldn't have this beautiful B-minus on it!\"\n\n\"You did the work,\" I replied.\n\n\"Yeah, but you motivated me. And your motivation got me a B-fucking-minus! Now I'm gonna try for even higher before the month's out, and it's gonna happen,\" Jess replied.\n\n\"What happens at the end of the month?\" Josie asked, amused. I'd already told her of the arrangement Jess and I had made, but I think she wanted to tease it out of Jess.\n\n\"Oh, Ryan didn't tell ya?\" Jess proclaimed proudly. \"If I get my grades in History up by the end of January, me and him are gonna fuck! And the way I'm goin, I'm gonna get some!\"\n\nProudly, Jess pulled me in and kissed me on the cheek, before jumping out of her seat and running across the cafeteria.\n\n\"B-FUCKING-MINUS!\" Jess shouted proudly as she ran.\n\n\"Jessica, slow down and ease up on the profanity!\" one of the lunchroom monitors called after her.\n\n\"Why should I do that when I got a B-FUCKING-MINUS! I'M GONNA BE SMARTER, BITCHES!\" she shouted, darting out of the room to a fair bit of laughs and cheers.\n\nLooking on at her departure, I said, \"I really want to think she's cheering purely for the thrill and satisfaction of academic accomplishment.\"\n\n\"I honestly think some of it was,\" Josie replied.\n\n\"Yeah, but the rest was Ryan's cock,\" Brooke replied.\n\n\"That was my thinking,\" I replied. \"Still, success is success.\"\n\n\"Yup!\" Brooke replied perkily.\n\nLooking at both of my girlfriends with a feeling of great love, I couldn't have been happier. Josie Wong, Brooke King and I might have been three of the most different people at Regan Hills High School, but deep down it really felt like we were made for each other.\n\nDamn was I having a good day!\n\n\"So,\" I said, leaning onto the table. \"Let's talk movie night...\"\n\n***\n\nThe rest of the school day wasn't nearly as fun as talking about movie night with my girlfriends, but it was mercifully brief, so it had that going for it. The entire senior class got out of our second-to-last period early to be taken to the auditorium for an assembly about what we were going to do with our lives after we graduated from Regan Hills High School. Since I already had a reasonable idea of what I was going to do, this assembly didn't really interest me terribly much, but hey, I wasn't going to complain about getting out of class early.\n\nEspecially when I had such wonderful voices whispering in my ear while we all filed down the hallway toward the auditorium.\n\n\"Tell me, Ryan, do you know what you want to do with your life?\" she asked.\n\nI smiled. \"I've got a fair idea, but not entirely. Isn't that half the adventure?\"\n\n\"Ah, so the brave acolyte of Odysseus will continue to wander the Mediterranean with knowledge of his one, far-off goal, but will allow the winds and whims of the gods to determine his course until the day he finds his ultimate destination?\" she proposed.\n\n\"Not quite. I'd use Google Maps to get there sooner, and then figure out what I wanted to do with my life from the comfort of home,\" I said.\n\nShe laughed. \"And what of the 108 suitors?\"\n\nThis gave me pause. \"Hadn't thought about them.\"\n\n\"Few do,\" she replied. \"You better think about such obstacles in life, lest you find yourself in a position you can't fuck your way out of.\"\n\nOnce we all stopped in line outside of the auditorium, I turned so I could finally get a good look at Dakota Lewis. The usually icy cheer captain held a wry, amused smile that lit up her face in a way I quite liked. With a tall, lean body dressed in a preppy-chic pearl necklace, sweater and knee-length skirt, her shoulder-length brown hair pulled back by a hairband, she looked like she was ready to run for office. While most people in school were afraid of her, I liked her, and not just because we'd had some pretty crazy sex at the cheerleaders New Year's orgy. She was hands down one of the smartest and most self-aware girls I knew, and once you got through the barriers she put up to be feared and respected, was actually a lot of fun to be around.\n\nAdmittedly, our flirtations based around classical texts were unconventional, but we could make it work.\n\n\"I'll keep that in mind,\" I said.\n\n\"See that you do. The world is a more interesting place with you in it, Ryan, and I'd hate to see what might happen should you screw anything up and somehow anger Poseidon,\" Dakota replied. Though there was a distinct tone of joking to her words, I knew that it wasn't all a joke to her either. I'd only put some thought to my future, but with my future creeping up on me on a daily basis, I couldn't turn a blind eye to it.\n\n\"Thanks,\" I said. \"Way to make my day more serious.\"\n\n\"Oh, don't tell me that I ruined a good day,\" Dakota chided.\n\n\"Ruined? No,\" I said.\n\n\"But it was definitely negatively affected?\" Dakota replied.\n\n\"Maybe,\" I admitted.\n\n\"It wasn't my intention,\" she replied. \"I have a difficult time remembering sometimes that not everybody is as precise in their lives as I am. We all must live our lives as we see fit, and enjoy what we can while it's available, for life is not all sunshine and rainbows. Would it make matters simpler if I just told you why I sought you out today?\"\n\nAlright, it seemed safe enough to bite. \"Why did you come looking for me?\"\n\nShe leaned in close enough to whisper in my ear. \"Because I know that neither of us truly needs the banalities they'll be talking about in there, and I am well and truly horny, and no, this is not just me trying to improve your day. I would like, very much, to escape with you and find a nice, quiet place where the two of us can fuck like crazy and where we can use our considerable skills and sexual compatibility to give me at least two screaming orgasms and you to fill me with cum wherever you please. Does it sound like something you would enjoy doing?\"\n\nThis wasn't one of those questions that required a lot of debate. \"Yes. Got any nice, quiet place in mind?\"",
        "Dakota grinned devilishly. \"As a matter of fact, I do.\"\n\n***\n\nDakota swung the door to the little theatre open, peering inside and, once content that it was empty, pulled me in afterward and locked the door behind her. It was a small, dimly-lit 99 seat theatre with a small, brightly-lit stage cluttered with bits of furniture and props. Only a short jog from the main auditorium (and an easy escape with how many people were there), it was a room I wasn't terribly familiar with. I knew our school's drama department used it for plays that were too small or weird to put on the main stage, but hadn't been to any of those shows myself, well, because the drama kids kinda weirded me out a little. They kinda weirded most kids at school out a little. They were intense, and oddballs among oddballs, and had a sort of cult-like following under Mrs. Harker because she actually had some acting credits under her name a while back and they thought she could get them into the business.\n\nI had nothing against the drama kids, but knew well enough to give them their distance. So, yes, it was a little unsettling to be in one of their chief domains.\n\nA kiss from Dakota Lewis has a way of fixing that, though. With her tight cheerleader's body, C-cup tits and firm butt, she could get pretty much any guy to do anything, I wagered.\n\n\"Why'd you pick in here?\" I asked, a little better off than I was before, but still feeling a little strange for being here.\n\n\"Why not? I'm horny, and it's closer than any of the most easily broken into classrooms, it has a lock, and I know it well. Come on, there should be something comfortable on that stage to fuck upon,\" Dakota said, kissing me again and leading me down the rows of seats toward the stage.\n\nThat answered some of my questions, but not all of them. \"You've spent time in here?\"\n\n\"I hooked up with a guy in stage tech a few times earlier this year; he could barely handle me, but he had a cute butt and could talk dirty in Latin, so I gave him a pass until I bored of him. Feel free to get naked whenever you want,\" Dakota replied, taking a step up onto the stage and dropping her backpack on the floor.\n\nI followed her lead, jumping up and taking off my backpack. Though the stage was positively cluttered with more props and old pieces of furniture than I could count, there was a reasonably clean-looking loveseat that looked like it'd do.\n\n\"So, a guy who's good with his tongue isn't good enough for you?\" I said as I stripped down, piling my clothes and shoes in a small stack at the front edge of the stage. I had to admit, with the stage lights on it was a disorienting position to be in. I could see the stage and Dakota well, but I couldn't see the audience for the life of me. I was just glad that Dakota had locked up behind us.\n\nI was now naked before her, but Dakota seemed to take some great amusement at being dressed. If I didn't know her better, I'd say I was on the receiving end of a pretty twisted prank, but the way she came for me, I knew she was telling the truth about being turned on.\n\n\"He was a master of a dead tongue, when I much prefer a live one,\" Dakota purred, reaching beneath her skirt and dropping her black panties to the floor. I was hoping to see more of her than this, but at the same time enjoying how naughty she looked lusting after me in her preppy clothes. She played with the hem of her skirt, teasing, pulling it up slightly to show me an extra hint of leg without getting too close to showing me her pussy.\n\n\"So, that's what you want?\" I said, sitting down on the love seat.\n\n\"It's a fine start, but you know me; that's *only* a start,\" Dakota replied.\n\n\"I agree,\" I said, reaching out to pull her in closer. Even from here, even with her skirt on, I could smell her sex. Dakota definitely wasn't lying about how horny she was, and with all ten inches of my thick cock standing at attention, I'd have been more than happy to help her with her state.\n\nDakota stepped away from me, though, my fingers lightly grazing her skirt but not getting any purchase. I growled in frustration and want, but she merely smiled.\n\n\"Relax, Ryan; you'll be feasting upon my delicious and well-educated cunt momentarily. I was curious, however, to try something a little different...\" she said, stepping slightly away.\n\n\"Oh?\" I asked.\n\n\"Oh, yes,\" she replied, turning around, with her back facing me. \"I know that our time together was hot, but limited, and I wanted to show you that I am every bit as flexible as the other girls in the squad, and in some ways possibly a little more.\"\n\n\"It sounds like you're getting ready to show off,\" I challenged.\n\n\"I am,\" she said, arching her back into a perfect bridge with her hands flat on the floor, then kicking off the ground until she was in a handstand facing me. Quite naturally, this caused her skirt to fall up around her stomach, revealing her pussy and its dark, thick bush in all its glory to me. Readjusting slightly, she took a step closer to me on her hands, and then spread her legs in an expert center split. Her sex was displayed for me lewdly, almost perfectly served up on a platter for my hungry mouth.\n\n\"That's definitely showing off,\" I said.\n\n\"I told you,\" Dakota replied. \"Now, I can hold this for a while, but not forever. I would like to quite urgently request that you start eating my fucking pussy, right now.\"\n\n\"Oh, yeah, of course,\" I said, wrapping my arms around her waist, hopefully helping her support some of her weight as I leaned in and began eating her pussy.\n\n\"Mmmm, fuck yeah,\" she moaned. \"I've been needing that today. I've been needing that for a while. I love dominating, I do, but sometimes it's just... better, to cut loose and be crazy.\"\n\nThis was definitely crazy, I gave her that. I've had some creative sex with some flexible women (some of the positions I'd managed with Brooke, Sarah and Cleo still haunted my dreams rather deliciously), but this one was entirely new to me. I didn't know how she had the upper body strength to keep this up, nor if she would be able to for much longer, but I didn't care. She'd let me know when she was done, and I was going to give her the pussy eating she craved.\n\nThankfully, I knew Dakota's pussy quite well after our days of debauchery at New Year's, and was adept at bringing her both to and past the edge quickly. With a little extra attention to her clit, and a finger slid up her ass, I soon had her shaking and crying out in orgasm. I felt her arms start to buckle and gripped her tighter, leaning back onto the love seat so she wouldn't crack her head on the floor. I held on for dear life as she quivered and shook against me, and then she began laughing.\n\n\"Okay, that was definitely interesting, but dangerous. I probably should not do that again anytime soon,\" Dakota said, disentangling herself from me and sitting next to me. Her face was flush and her hair was a mess, but damn if she didn't look completely satisfied.\n\n\"If you're going to do it, do it with Cleo; she's got the muscle,\" I joked.\n\nDakota laughed, massaging her temples and flexing her wrists after the long handstand. \"That she does. So... would you like a blowjob?\"\n\n\"I won't say no,\" I replied. \"But I was hoping to fuck you before we finished here.\n\n\"Nothing says we can't do both,\" Dakota said, pushing me against the seat and leaning over. She teasingly licked the underside of my cock, running her tongue around the head and spreading my precum freely. Dakota stretched her lips, wrapping them around the head of my cock and slowly taking my length into her.\n\nI hissed, savoring the feel of her mouth. Fuck, I hadn't made enough time to be with Dakota. She was that perfect mix of prim and proper, a preppy-looking bitch, and an absolute sex freak. She may not have had the same level of assets as a lot of the girls on the team, but with a mind and confidence like hers, she didn't need anything else to be one of the sexiest girls on the cheer squad.\n\nI wanted her. Fuck, I needed her. I needed to cum after the day I'd had, and I needed to cum bad. I was expecting that to happen from my evening with Brooke and Josie, but if Dakota wanted to claim my cum first, she could have it. She sucked me with gusto, seemingly enjoying my reactions almost as much as the fact that she was almost fully clothed while I was quite naked. While I loved seeing Dakota in the nude, I was enjoying the blowjob too much to want to change anything.\n\n\"Oh fuck... you're good at sucking cock,\" I groaned.\n\n\"I know,\" Dakota replied, before quickly deepthroating me.\n\n\"You know a lot,\" I said with admiration, running my hands through her soft hair as she bobbed up and down on my cock.\n\n\"I do,\" Dakota said when she came up for air, \"but so do you. I wouldn't be doing this with you if you hadn't a brain, even with your endowments. If I only wanted those, I'd have gone with as much of the football team as everyone claims I have.\"\n\nTaking that in, I smiled with pride and said, \"Thanks.\"\n\nSlurping at the head of my cock, she gave it one nice kiss and said, \"You're welcome. Shall we?\"\n\n\"Yes,\" I replied instantly. \"We shall.\"\n\n\"Good,\" she said, climbing up onto the seat next to me and getting on her hands and knees. Dakota explained, \"I can't do anything too messy, not when I must meet some of the other girls later and play the leader they respect and fear, but I could definitely use some cock.\"\n\n\"Well, thankfully I've got more than some,\" I said, smiling as I knelt behind her. I flipped her skirt up over her impressive and bare ass, lined up my cock with her pussy lips and pressed inside, feeling the familiar part of her sex as I slid inside.\n\n\"That you most definitely... DO!\" Dakota squealed as I bottomed out inside of her with one quick, firm thrust. Groaning, she added, \"You caught me by surprise. That won't happen again.\"\n\n\"Awww, but where's the fun if I can't surprise you every once in a while?\" I said, beginning to thrust in and out of her in earnest.\n\n\"It would be non-existent... fuck yeah, keep it up like that... but some of your surprises can be a bit more... inconvenient... than others,\" Dakota said.\n\n\"Oh?\" I asked, savoring the way her pussy tightly gripped my cock. I was horny, grabbing her hips and starting to build up a pretty swift rhythm, and thankfully Dakota didn't mind a good hard fuck in the slightest.\n\n\"Mmmm... you make it hard to talk sometimes... but never too hard... fuckfuckfuck...\" Dakota whined, shaking her head and turning to look back at me. \"Good surprises... being this amazing at sex... slamming it home in one thrust... inconvenient surprises... what you've done to Brooke this year...\"\n\n\"And what have I done to Brooke?\" I asked, spanking her swiftly while I thrust into her. I knew Dakota liked things rough and enjoyed her ass, so I thought it would get her nice and hot. The way she cooed, I knew I'd done the right thing.\n\n\"You've made her happy... and I'm happy she's happy... but Brooke's never had a steady boyfriend before... anytime she was with a guy... oh fuck... she'd gladly drop anything when I called... but now that you've entered her life, the team's not her biggest priority... I'm not complaining because I adore Brooke and am truly happy she's happy... it's just... inconvenient for me...\" Dakota groaned as I fucked her.\n\nI smiled with no small amount of pride. Dakota was one of the proudest people I knew, and few people could put her in a position like this. She was no tyrant, much as she wanted everyone to think she was, but she did love her control. That Brooke and I falling in love could disrupt things this much for her, well, it was the kind of small thrill I could have a little power trip over.\n\nI smacked Dakota's ass again before grabbing her hips, fucking her even harder.\n\n\"Awww, you're just jealous that she's getting this cock all the time and you aren't?\" I growled, leaning over to grab one of her bouncing tits through her top.\n\n\"A little... but you're making it very hard to lead the team when you've got most of them all hot and bothered and more than one of my girls all googly-eyed for you. We've still gotta train, cheer, and compete, and all that, you know, and distractions like you are... inconvenient...\" Dakota moaned, dropping her head. Her body was tensing with another orgasm, which made things a lot easier for me with how close I was.\n\nSmiling, I wrapped my arms around her and pulled her up to me. I knelt behind her, fucking in and out of her tight cunt as best I could from this angle, squeezing her tits and whispering into her ear, \"Well, then it's my pleasure to be your... inconvenience.\"\n\nAt that word, I reached between her legs and gently squeezed her clit. This set Dakota off, cumming once again with a cry, her entire body shuddering and quaking against mine. I could only fuck her so hard when her pussy squeezed me as exquisitely as it did here, and after Brianna this morning I was nice and ready for a good cum. Overwhelmed by the pleasure, I started firing off inside of her, a full day of fun and teasing and looking at sexy teachers from across the cafeteria just hitting me at once and emptying inside of our school's tight-bodied cheer captain.\n\nWe rode this out together, me thrusting into Dakota with increasingly slower pumps while she shook and went slack, her face dropping down into the seat as she groaned and rode it out.\n\nTired and satisfied, I pulled out of Dakota and sat next to her and, well, this is about where I should have realized how packed the stage was, as my foot collided with a tall, standing lamp. The lamp fell over, and though I couldn't see it, I could hear the domino effect as one after another it hit things on the stage, knocking them over one at a time until seemingly most of the items that had been stored here had fallen over.\n\nIn the shockingly loud silence that followed, Dakota sat up. The two of us looked at each other, then burst out laughing. Yeah, we'd have to get out of here soon in case anyone heard, but when what we'd done had felt so good, we could take a moment to enjoy ourselves.\n\n***\n\nThe one downside of basking in the afterglow of amazing sex is that it is very possible to bask for too long. Now, I've mostly avoided any major consequences in life from basking a little too long, but sometimes it has led to its close calls. And its closer-than-close calls. It's a bad habit, I know, but sometimes when you have good sex and are coming down from that orgasm high, you just want to kick back for a moment and enjoy it.\n\nAt times like this, I recommend checking your surroundings first and remembering whether or not you're in a public school during school hours.\n\nAfter a brief moment of making out after we'd had our fun and knocked over half the stage, Dakota made a quick exit to meet up with some of the squad, walking with a nice sway in her steps that showed off her ass nicely on her way out. I stayed sitting in the love seat, enjoying a good bask under the lights and happy to have had a very, very nice encounter with a girl whose company I enjoyed. I closed my eyes, stretching out and feeling oh so comfortable...\n\nFor a few seconds, anyway. Then I heard keys at the little theater's front door. I panicked, hoping for a moment that it was Dakota, but no, I'd already heard her leave.\n\nSomeone was coming in.\n\nI hopped to my feet faster than I'd ever hopped to my feet, jumping over various bits of furniture and other things we'd knocked over before darting for the edge of the stage where I'd left my backpack and clothes.\n\nFuck.\n\nHad Dakota taken them? No, I saw everything she'd done. Maybe she was setting me up for a prank and had a friend sneak in and take my stuff? It wasn't impossible, but it was unlikely; I didn't know Dakota well, but I knew she wasn't the kind of person to do that. Had they fallen over the edge, knocked over by something I'd knocked over? I couldn't see for the lights in my eyes, but that seemed very possible.\n\nI heard the door click as it began to open.\n\n\"Fuck,\" I said, darting to the side of the stage. Acting on pure instinct, I hopped over and dodged through various obstacles toward the first door I saw. It looked like a closet, the kind of place I could hide away in easily and wait for this to pass. Hopefully, it was unlocked.\n\nWrapping my hand around the knob, I found it was and threw myself inside the darkened room, closing the door behind me.\n\nI fumbled around, reaching for a light switch and illuminated a small, cramped office. There was a desk and a couch against the wall, and some racks of costumes and props, and no other doors that I could see. This could be worse, so long as whoever it was wasn't coming directly here, I could wait them out and then go about finding my clothes. I waited a moment, listening, hearing heeled shoes clicking on their way...\n\n\"Fuck!\" I exclaimed in a harsh whisper, desperately looking for somewhere I could hide in this room. The only real options were behind the costume racks, and I actually managed a good, frightened leap toward them before the door opened.\n\n\"Well, well, well, has Christmas come early this year?\" a low, husky voice said.\n\nMy hands darted to cover my now soft cock. At my size, this wasn't the easiest task, but I did somehow pull it off.\n\n\"Hi... Mrs. Harker,\" I said, keeping my body half-turned to neither show her my ass or my crotch. I couldn't meet her eye, not like this, not with this level of embarrassment.\n\n\"Hello, Mr. Collins. Are you the one who destroyed my stage?\" she asked, her voice somehow stern and amused at the same time.\n\nWhat the fuck do you say when you're stuck in a position like this, naked in the office of an unbearably hot teacher you barely know with your hands full of cock that still had the head cheerleader's pussy juice on it?\n\n\"This isn't what it looks like,\" I said.\n\nThis was not the thing to say in a moment like this.\n\n\"It isn't, is it? Then what, pray-tell, is it then, Mr. Collins? Because it's not every day I come in and discover half my stage knocked over. It's not every day I've found a naked young man hiding in my office. Were you someone else, I might have handed your ass to you and called security by now, but you and I share certain friends that I've no interest in angering, so we're left with something of a unique situation,\" she said.\n\n\"I... I... I...\" I stammered, watching my academic life flashing before my eyes and imagining it all falling apart in this instance. I knew that Mrs. Lynn had told Mrs. Harker about us, and I got the feeling she was interested in me, but suddenly appearing like this in her office, well, that was very easy to read as an uninvited come-on and I didn't want that kind of trouble.\n\n\"You what, Mr. Collins? Please, get out of that costume rack and face me. Look me in the eye when you're talking to me,\" Mrs. Harker ordered.\n\nSighing nervously, I did as she said, stepping before her and looking over her. She still wore the same tight, stunning purple sweater and black skirt that showed off her incredible curves, but her face, gorgeous that it was, was that of a strict and unhappy disciplinarian. She tapped one of her heels on the ground expectantly, forcing me to look down.\n\nIn its perhaps greatest moment of betrayal, I could feel my cock growing behind my hands.\n\nNot now, please...\n\n\"Did you honestly think, Mr. Collins, that you could just show up in my office unannounced after wrecking my stage, naked and... what, have your way with me? I don't have the most precise window into the mind of a teenage boy, but I must admit that that's certainly what it looks like here. And I'd heard such good things about you...\" Mrs. Harker said sternly.\n\n\"It's not that,\" I said, looking away. \"When I said it wasn't what it looked like, this is exactly what I meant! I swear! I was...\"\n\n\"Yes?\" Mrs. Harker said.\n\nFine, the truth, then. I took a breath, \"Well...\"",
        "I told her a short version of what had happened between Dakota and me, leaving out Dakota's name and the exact nature of what I'd done. Mrs. Harker nodded quietly, but gave no indication of where she stood on this matter until I finished.\n\n\"That would explain your effects at the base of the stage,\" she said quietly.\n\n\"So, they did fall?\" I asked, relieved that none of my stuff had been stolen.\n\n\"That's correct,\" she said appraisingly. \"I gathered them and put them aside, in case they were lost. I guess now they're found.\"\n\n\"Thank you,\" I said, my eyes drifting away from her as my cock swelled even further in my hands.\n\n\"You're not looking at me, Mr. Collins,\" she said.\n\n\"I'm not?\" I replied, lamely.\n\n\"You're not and you know it. What's the matter? Spit it out,\" she demanded.\n\n\"I've just... I'm trying not to embarrass myself even further here, and it's really har... *difficult*, right now, and it's easier if I don't look at you, okay?\" I said quickly, hoping that would be enough.\n\nIt wasn't, of course. Mrs. Harker had a reputation for being something of a force of nature with her drama students, and it wasn't any different with me. Probably even worse, since I wasn't one of her students.\n\n\"You can't even have a brief conversation with me without... sprouting?\" Mrs. Harker asked, her voice implying a raised eyebrow that I dared not look at.\n\nSilently, I nodded.\n\n\"And you just had fun with another girl, and it's already happening again,\" she said, sounding more impressed than angry. Silently, I nodded again. She considered this. \"Take a seat, Ryan. I'd like to talk with you.\"\n\n\"Do I have to?\" I asked.\n\n\"No. If I had fewer scruples, I'd have no problem holding you here and enjoying your discomfort to its maximum extent, but that's not how I play. Your effects are just outside the door, and if you wish to dress and leave, they're right there. If, however, you are game for a friendly conversation, as Brenda indicated you might be, I would greatly appreciate a word with you,\" Mrs. Harker said.\n\nI thought about this for a moment, still nervous and more than fairly embarrassed by the whole situation, but even with her stern voice, there was a hint of kindness to it that I couldn't ignore.\n\nAfter a brief pause, she looked up at me with much less harsh eyes and added, \"Please?\"\n\nI was still naked, but her asking as nicely as she could had a way of overriding some of my more typical instincts and common sense. Hands still covering my disobedient, but thankfully not fully hard cock, I sat down on one side of her couch.\n\nWhile I might have expected her to take a seat at her desk, I wasn't surprised when she took a seat on the couch next to me. She was respectful enough to leave a gap between the two of us so I wouldn't be too uncomfortable. It didn't help the cock situation, but it didn't make it as bad as I might have been. What did guys normally do to take care of this, think of baseball? I didn't know shit about baseball. I could've tried focusing on something other than Mrs. Harker, but when she kept demanding I look her in the eye...\n\nThis would be a challenge.\n\n\"I understand why we've never had a moment to talk before; you hardly travel in the drama students' circle, but when you've been working your way so handily through my book club friends, I have a difficult time understanding why you haven't tried to talk to me sooner, Mr. Collins,\" she said sternly, pursing her deep red lips.\n\nSo, we were talking about this directly now. Fuck. Also great, but also, fuck.\n\n\"It's, uh, not like that, Mrs. Harker, honestly,\" I said, trying to funnel as much willpower as anyone ever had into making sure my cock stayed down.\n\n\"It isn't? Then what is it like? Don't get me wrong, I know that Brenda, Janelle and Lauren are all gorgeous and very capable women, but let's face it: none of them have quite my assets, do they?\" Mrs. Harker asked, leaning slightly to give me a slightly better view of her clothed tits. Was I imagining it, or were her nipples hard beneath her blouse?\n\nThis wasn't helping my current predicament. Her eyes didn't look downward, but I trust she knew what was going on, and the slight curl at the corner of her lips had the playful edge of a cat toying with its prey.\n\n\"It's... those others just sort of happened... I'm not going around on the hunt or anything for teachers and moms, I've just kind of, you know, been going with the flow,\" I defended, my breathing a little more ragged for my containment efforts.\n\n\"Oh, don't sell yourself so short. I've heard you've had quite the eventful year, and I can see why. Remove your clothes and you transform from shy nerd to capable-looking young man, and from what I've heard you're more than capable *looking*. You've had more sexual experience this past year than most men have in a lifetime, and you still have a sense of modesty,\" she stated.\n\nI couldn't keep looking at her like this, darting my eyes across the room.\n\n\"Ryan, I told you to look at me while we're talking,\" she said.\n\n\"It's...\" I started, really trying to avoid the word 'hard', \"...difficult.\"\n\n\"Watching me doesn't seem that *difficult* for you usually,\" she said confidently.\n\nOops. I said, \"You've seen me look at you?\"\n\n\"Oh, please, Ryan; I would be offended if you weren't looking at me. I was an early bloomer; I'm used to people looking at me. At first, I hated it; boys and girls were cruel as they can be to those who develop early, but as I grew older and wiser, I realized the power that could come with it. I grew to enjoy the attention, and how much control I could have over who could look, and who could touch. That's what first brought me to acting, and when that went nowhere, to teaching. Do you know what a joy it is to wander the halls of a high school and being eyed like a goddess when only a decade ago those same sorts of boys and girls called me a slut and a whore?\" Mrs. Harker said confidently.\n\n\"Uh...\" I said, first thinking I couldn't have anything in common with her particular issues before realizing, yeah, I knew something of what she was saying. I didn't know what it was like to be a busty young woman, but I did know that new feeling of power after feeling powerless quite well.\n\n\"Actually, a little. Not entirely, but a little,\" I said.\n\n\"Good. Because I like being seen. Especially after my pregnancy; I was dealing with a G-cup before, but these monsters are practically exploding now,\" she said, turning in profile to me to better give me a view of what she was rocking. Yeah, they were impressive, and yeah, her nipples were definitely hard.\n\nThis was definitely a surreal conversation, but one I was willing to see through. It didn't stop me from trying to cover my cock, but I was definitely less nervous. Still stumbling over my words because I was talking about sex with Mrs. Harker, but definitely less nervous.\n\nI stumbled, \"How... uh...?\"\n\n\"J-cup. If you're wondering. My lower back will hate me when I'm an old woman and these are sagging to my knees, but for now, I will enjoy every moment of joy these magnificent tits bring me, infrequent as that may be in practice,\" she said.\n\nI glanced down at her wedding ring, and remembered something I overheard her saying in the library the other day. \"Let me guess... your husband isn't being very attentive?\"\n\n\"A good guess,\" Mrs. Harker replied, her lips curling into a smile.\n\nRather than admit that I'd accidentally eavesdropped on her, I replied, \"From my experience, husbands in this town can be quite foolish when it comes to the most beautiful women.\"\n\n\"Well, your experience isn't far from correct. He's barely touched me ever since our baby was born last year, and not for a lack of my trying on my part. I've had to find my outlets, the book club among them, but I've been aching for the touch of some nice, thick cock, and since I can see Brenda told the truth... I believe that you and me might be able to come to an arrangement,\" she said.\n\nThe battle to conceal my cock was, at this point, completely lost. My hands may still have held in place by habit, but what I was packing was fairly plain to see at this point.\n\n\"What kind of arrangement did you have in mind?\" I asked, confident I knew exactly what kind of arrangement she was talking about.\n\nI was mostly right. Mrs. Harker said, \"I need some cock like you wouldn't believe...\"\n\nTo say this raised my hopes would be an understatement. Then she finished, \"...but more than that... I need a pet.\"\n\nThis was far from the word I was expecting. Confused, and maybe a little alarmed, I replied, \"A, uh, pet? What do you mean by a pet? Like with a leash and a collar and... I mean, I'm not one to kink-shame, it's just, I've never...\"\n\nShe laughed. \"Nothing like that, not unless you're really bad and force the matter. No, what I need is, well... maybe more of an errand boy, if that term suits better. I occasionally have need of some outside assistance to get tasks done and grease the wheels, and all of my drama students are too far up their own asses to ever get things done; talented, certainly, but quite focused. Meanwhile, I've heard that it was your wheeling and dealing that led you and the Puma Press to beat my drama club at the Halloween Scream this year. Help me out from time to time, submit to me and fulfill my needs when I need you like a good boy, and you will have access to this body that so many have lusted after and few have ever had. Tell me... what do you think of that?\" Mrs. Harker asked.\n\nNow, crazy as it sounds, I actually had a slight moment of pause. I'd signed on to a lot of commitments this year, and one more would stretch my time immensely. On the other hand, this was Mrs. Harker, so that pause was easily less than a second.\n\n\"YES!\" I exclaimed, definitely too loud.\n\n\"Oh, I like your enthusiasm, Mr. Collins. What fun we'll have,\" she said, eying me up and down. \"Now, remove your hands from your cock and show me what we're working with.\"\n\nThis wasn't a request; it was a demand. Still a little hesitant, I did as she commanded, slowly pulling my hands from my cock. It had already thoroughly betrayed all my efforts, standing tall and proud, already with a bead of precum on the tip.\n\n\"That's... not bad,\" Mrs. Harker admitted, looking me up and down appraisingly. \"Stand up, in front of me.\"\n\nI did, standing awkwardly before her as she stayed seated on the couch, looking me over but saying nothing. \"Tell me, Mr. Collins, would you like me to touch your cock?\"\n\n\"Yes,\" I admitted, more than a little meek.\n\n\"In due time,\" she said. \"Before I touch you, I want you to touch yourself. Stroke yourself for me, Mr. Collins, jack that cock and we'll see when I touch you.\"\n\nIt was strange, standing naked in front of this fully clothed, stacked teacher and jacking off, but I was too far past the point of no return at this point. So, I took myself in my hand, spreading the precum over the head of my cock, and slowly began to jack off.\n\nMrs. Harker nodded slightly, approvingly. \"Tell me, Mr. Collins, you've touched yourself thinking about these tits, haven't you?\"\n\n\"Yes,\" I admitted, jacking myself a little more intensely.\n\nAgain, she gave a slight nod, a slight curl of her lips into a smile. She slowly reached up her blouse and undid the top button, giving me more of a look at her creamy skin. Mrs. Harker said, \"You've fantasized about what would happen if the two of us were ever alone together, haven't you?\"\n\n\"Yes,\" I said, jacking a little faster once she undid another button on her blouse. I could now see a fair bit of her epic cleavage in the gap of her blouse, the swell of her pale and enormous tits intoxicating to me.\n\n\"What *precisely* have you fantasized about, Mr. Collins? And I want details. Tell me what you've thought of doing with me while you touch yourself,\" Mrs. Harker said sternly, crossing her hands in her lap tauntingly, letting me know I wouldn't see any more of her if I wasn't completely honest.\n\n\"I've thought about your tits...\" I said, groaning softly.\n\n\"Ha! Who hasn't? I asked for details, Mr. Collins, not feature,\" Mrs. Harker replied.\n\nI added, \"I've thought about squeezing them. Licking them. Sucking them. Running my tongue over your nipples and making them hard, making you moan...\"\n\nShe shifted in her seat, a faint pleased look crossing her face. \"Come now, Ryan, are you sure that's all you've thought about? You've never thought about sliding your cock between these tits? Squeezing my tits around you and fucking them until you exploded all over my creamy flesh and face?\"\n\nI groaned. The precum was flowing, making it too easy to move my hand faster. \"I've... definitely imagined that.\"\n\n\"Who wouldn't? My tits are epic, and magnificent, and deserve the proper worship like that. I'm quite familiar with my tits, though. What else have you imagined doing with me?\" she pushed, pursing her full lips together.\n\nThough right now I was wondering what those lips would feel like wrapped around my cock, and how it would feel to have her throat massage the head, my next answer didn't follow this path. \"Your ass. You've got an amazing ass.\"\n\n\"I do have an amazing ass, and it does love to be treated well. So, you like big asses then, don't you?\" Mrs. Harker asked.\n\n\"Obviously,\" I replied, trying to keep a respectable rhythm without forcing myself over the edge. It would have been so easy to cum so soon, but I did not want to disappoint her or ruin this unique opportunity. \"I want to bend you over and worship your ass with my mouth, squeezing and kissing it, spreading the cheeks and licking your tight hole, maybe even fucking it if you deem me worthy.\"\n\nAgain, she laughed. \"If I deem you worthy? Oh, I like that wording. We're going to have so much fun... and it's been a while since my ass was properly worshipped. Many men have tried in the past, my husband included, but none could handle me. Do you honestly think you could handle my ass? Fuck, do you think you could handle *me*?\"\n\nHonestly, I answered, \"I don't know, but I want to try if you'd allow me.\"\n\nMrs. Harker raised a hand to her chin, stroking it with one of her long fingers thoughtfully. She then grazed the finger beneath her lips, smiling at me wolfishly.\n\n\"Let's see if you pass your audition first. Stop stroking yourself and get down on your knees, pet,\" she demanded, spreading her legs and raising her skirt slightly. Getting to see more of her stocking-clad legs was enough to get me even harder, but the promise of what was soon to come had my mouth water.\n\nI licked my lips and got down on my knees, crawling between her legs. She inched her skirt higher and higher as I approached, revealing some lacy black panties beneath her skirt. Between this and her stockings, it seemed that Mrs. Harker had a taste for some nice lingerie, which I wasn't going to complain about for a second.\n\n\"Your reputation precedes you when it comes to your cunnilingus skills, pet, and I want you to prove that for me. Eat my pussy, make me cum, and we'll see what you're ready for,\" Mrs. Harker said, reaching down between her thighs and pulling the crotch of her panties aside. She had a nice, full, dark bush, and full pussy lips that glistened with arousal. I was a foot away and I could smell her musky sex, spurring me on to get closer.\n\n\"Eat me... fucking eat me out... make me cum, pet,\" Mrs. Harker ordered, looking down at me over the mountainous peaks of her breasts.\n\nIf this was an audition, I meant to pass it with flying colors, so you can bet your ass I dove in enthusiastically. My tongue eagerly lapped at her warm, moist folds, running up and down to find where she was most sensitive before I closed my lips over her engorged clit. I suckled at her warm button, running my tongue over it in quick, firm circles that soon had her moaning. She squeezed her thighs around my head, running her hands through my hair.\n\n\"Ooh, that's a good pet, I'm not going to have to train you much, am I? You're already nice and housebroken. Too many guys think they know how to please a woman, but they don't... mmm, fuck... my husband is useless at this... he's nice, he was good enough to knock me up when he had to, but he can't handle me, can't fuck me like I need to be fucked... but you can, can't you... yes, like that...\" Mrs. Harker groaned as I continued to eat her out.\n\nHer taste was intoxicating, and her dirty talk spurred me on to greater heights, eating her more vigorously and bringing my fingers into the mix, sliding two into her pussy that I thrust in and out of her while I pleasured her lips with my mouth and tongue.\n\n\"Oh, that's it, fuck, eat that fucking pussy, like that, right there... fuck yes... you're not a boy, not yet a man, but you're good... they were right... you're better than all the other pussy men out there who think they know what they're doing but couldn't get a woman off without directions... fuck that mouth is nice, like that, keep going, keep going... gonna make me cum... gonna make me cum better than any of the other asshole men out there who thought they could... none of them could handle me, but you just might, you just... fuckfuckfuckfuckfuckfuCKFUCKFUCK YEESSSSSSSSSSSSS, I'M CUMMING, I'M CUMMING IN YOUR MOUTH, DRINK IT ALL UP LIKE ALL THOSE OTHER ASSHOLES COULDN'T, FUCKING PET!\" Mrs. Harker shouted as she came, hard.\n\nShe came like a fucking waterfall, and I drank it up as quickly as I could. With her hands forcing my face into her cunt and her legs squeezing around me, this was easier said than done, forcing a fair amount of her juices all over my face, my chin, and running down my neck, but I drank her intoxicating nectar and continued lapping at and fingering her pussy until her body relaxed, and she came down.\n\n\"Such a good pet... such a good, hungry pet,\" she said, running her fingers through my hair and smiling at me with that drunken look so many women get after a good, hard cum. \"Are you still hungry, pet?\"\n\nSmiling up at her, I nodded.\n\nMrs. Harker smiled back. \"Good. Because so am I. Be gentle at first, and make me cum again even better this time, or there will be consequences, and you don't want to fuck with me. Understood, pet?\"\n\nAgain, I nodded. \"I wouldn't dream of it.\"\n\nWhile I may have been hungry, and she lusty when I first dove in, this time I took it slow, not wanting to overwhelm her as I slowly ate her out. She groaned, slowly running her fingers through my hair as I continued to pleasure her pussy.\n\n\"Ooooooooooh, fuck... it's so good. You make it seem easy, and it should be, but not enough care. I have to beg my husband to eat my pussy, as if this body should need to beg, and he'll just do the barest minimum. He'll get me close, but then he'll just ask if he can fuck me like he's asking if we're there yet on a car trip. It's fucking pitiful,\" she groaned, gently squeezing my head with her thighs.\n\nFrom my experience, it sounded like there were a lot of shit husbands in Regan Hills, and though I couldn't explain how they all got and stayed with as many unbelievably hot wives as they seemed to have, I had no problem helping make up the difference. That being said, it also helped me understand that I didn't want to be the kind of husband who'd let a wife like that go.\n\nI kept eating Mrs. Harker's pussy, building in speed and intensity as it felt like she was becoming more accustomed to my mouth this second time. I took my time this time, not caring that school was letting out and that I should be heading home in the near future, thoroughly lost in fucking Mrs. Harker with my mouth. When she came again, she came with a cry, her body going rigid and shaking as another flow of her sweet nectar gushed into my mouth. I was becoming quite accustomed to her taste, savoring it and drinking it down as if it were the finest of wines, only slowing when she pushed my head away.\n",
        "I ended with a kiss to her pussy lips, looking up at her expectantly and hoping that I'd been a good pet for her.\n\n\"That was... you did well,\" Mrs. Harker said, straightening herself out and trying to sit up straight on the couch, difficult as it was. She patted the seat next to her and said, \"Now, sit with me.\"\n\nI did, because I wasn't stupid.\n\n\"Now... Mr. Collins, you lived up to the hype rather exceptionally, I'll say that. More than exceptionally, if I'm to be honest. Exceptionally enough that I feel you've earned a certain reward. Do you feel that you've earned a reward?\" Mrs. Harker asked.\n\n\"If you think I have,\" I replied.\n\n\"Such a good pet,\" she said, smiling, wrapping an arm around me and pulling me in close for a kiss. Her lips were just as full and soft as I'd have hoped, and she was a good kisser, very enthusiastic, and as hungry to taste herself on me as I was in making out with her. We kissed like this for a little while, unmindful of one of us being a basically fully clothed teacher and the other a completely naked student, having a good time feeling each other.\n\nEnding the kiss, Mrs. Harker said, \"That was only the appetizer. I think it's about time you had the main course.\"\n\nBefore I could ask what that was, she pulled open the rest of her blouse dramatically, spilling her massive tits out before my eyes. For all intents and purposes, she was wearing a bra, but it was the type of bra I'd learned was called a shelf bra, in that it only really supported her tits without really covering them up. Somehow, I wasn't surprised at all that she wore some risqu\u00e9 lingerie beneath her conservative clothes; it seemed to fit how things went around here.\n\nMrs. Harker's breasts were bigger than anything I'd ever seen, creamy and pale and beautifully round. Her areolas were pale pink and about the size of the palm of my hand, with perfectly suckable, bullet-shaped nipples sticking out.\n\n\"Well, what are you waiting for? Take your reward and fucking worship my tits, pet!\" Mrs. Harker demanded, the kindness in our kissing completely gone as she took her dominant tone again. It was a little harsh, but it made my cock twitch.\n\nAnd those tits... my god.\n\nIt took a lot to completely hypnotize me, but seeing these massive tits up close for the first time had a way of doing that. I was frozen in anticipation, in overstimulated desire. I couldn't do anything because I wanted to do everything.\n\nMrs. Harker snapped her fingers at me. \"Mr. Collins?\"\n\nThat snapped me out of it. My hands dove forward almost on their own, grabbing Mrs. Harker's amazing tits and squeezing. They were so soft, so full and heavy, and so fucking huge. No one was touching my cock, but even still it felt stimulated for the simple act of groping her boobs. I rolled her nipples under my thumbs, loving how it made her groan pleasurably.\n\nBefore she could command me to use my mouth, I leaned in and took a nipple in my mouth, suckling and licking at it, teasing it gently with my teeth while I continued to worship them with my hands. I looked up at her expectantly, hoping that she was enjoying what I was doing, and thoroughly enjoying how she looked down at me.\n\n\"Mmm, such a good boy... you don't need to be told how to treat a lady, do you? You don't need an instruction manual or correction, you just know right where to go and what to do...\" she purred, stroking my hair with her hands.\n\nI didn't answer her, but instead leaned further so I could focus on suckling at her other tit, savoring her groans. She shuddered and quaked under my mouth's efforts; she must have been very sensitive. Experimentally, I dropped one of my hands between her thighs, beneath her skirt. She parted her thighs for me slightly, enough that I could reach in underneath her soaked, utterly ruined panties and once again please her hot, dripping sex.\n\n\"Oh FUCK! Keep going, fuck, my nipples are so sensitive, so hard, keep going, keep making me feel good, keep doing that... please...\" Mrs. Harker groaned, dropping her head back as she held my face to her massive tits.\n\nI was practically smothered by them at this point, but I didn't care one bit; if I had to be smothered to death by the biggest tits I'd ever seen, well, I could think of worse ways to go out. I fingered her harder, in time with my worship of her tits, playing her as I would a musical instrument. Her groans and moans were my notes, the way her body responded to my touch, to my mouth, my guide for where to go next.\n\nI couldn't tell you how long I was there, lost in her tits, but I didn't care. Stuck in the pillowy pale softness of her mammoth breasts, suckling on her nipples with my fingers buried deep in her cunt, I was well and close to heaven I'd say. We could have kept this going on for quite a while I wagered, and when she finally came again, shaking harder and jerking heavily against the couch as she cried out and gushed on my hand, I felt proud that I had pleased her so well.\n\n\"Oh fuck... oh you motherfucker...\" she groaned, then laughing. \"Literally. Fuck. Haven't done that with a man since... fuck I need to have a talk with my husband, make him fucking man up and do what he's supposed to do instead of treating me like a fragile piece of glass that'll break if he even looks at me...\"\n\nHungrily, she looked down at my cock, then added, \"Until he does, though, I'll make my own fun. Yes. That's much better.\"\n\nOn wobbly legs, she stood up before me and pulled off her juice-stained skirt, revealing her massive, curvy ass to me, then turned back to face me as she slipped her panties to the floor.\n\n\"I'll have you know that that skirt and panties weren't cheap. And you made me make a nice fucking mess all over them. If you weren't so good at making me cum, I'd fucking bend you over my knee and punish that ass like there was no tomorrow,\" Mrs. Harker said, standing before me in near-naked glory. Though she still wore her blouse and bra, the blouse was wide open and her tits beautifully displayed. A fancy garter belt held up her stockings, and her heels gave her a nice extra bit of height and stuck her ass out.\n\n\"But I have been good, haven't I? I've made you cum rather exceptionally, it seems, haven't I, Mrs. Harker?\" I asked, keeping my voice demure and playing the game she wanted to play.\n\n\"You have. But let's cut the crap, and get down to it. I am in desperate need of some serious cock, and if my sweet but weak husband isn't willing to give it to me, then I'll find someone who will. What do you say, Mr. Collins? Are you ready for your married teacher to bury your magnificent cock in her top-shelf cunt and have her ride you until you fill her exceptional slit deep with your thick, young cum?\" Mrs. Harker purred, crossing her arms under her tits and giving them a slight lift.\n\nDo I really have to illustrate how easy it was to answer her?\n\nI nodded. Mrs. Harker smirked.\n\nCocky, she walked up to me, kneeling onto the couch and straddling my legs. My cock bounced up against her pussy lips, and she hissed pleasurably. I looked up at her in awe of this sex goddess straddling my cock, eyeing me hungrily. She knelt down over me, sliding her soaked pussy lips up and down my shaft, making me groan.\n\n\"You know I've been with some women since my husband stopped touching me. I have a high sex drive and it needs to be fed, it felt natural to seek an outlet,\" Mrs. Harker monologued as she tantalizingly continued gliding up and down on my cock. \"I lied to myself, saying that it wasn't cheating, it was just fun, because it was with other women and he'd be titillated if I were ever with another woman and that would be a thrill. It was only cheating if it was with another man, cock buried in cunt, but no, I wasn't doing that. As much as I needed that, I was still that good.\"\n\nReaching the head of my cock, she stopped, reaching down and grabbing hold of me, lining me up with her pussy lips. Kissing me once, she said, \"I'm not going to be that good anymore.\"\n\nShe forced herself down onto me, the head of my cock slipping inside of her tight, hot cunt. It wasn't the tightest I'd ever been in, but that didn't make me moan in pleasure any less, because Mrs. Harker's body was a work of art that I was only too lucky to experience.\n\nWordlessly she shrieked, forcing herself down another inch. I grabbed hold of her ass, helping pull her down as I sunk into her a little at a time. She looked down at me, her eyes wide, her mouth hanging open in a perfect circle as soft sounds of pleasure occasionally arose from her throat. She settled down, forcing herself onto me a little bit at a time before biting her lip and shoving the last couple inches inside.\n\nAs the entirety of my length settled inside of her, Mrs. Harker's eyes nearly bugged out, her mouth dropping open silently again. Was it in pleasure? Shock? Her breaths were shallow, as if she fully didn't know what she wanted to feel. A groan, one from deep within and far beyond her control, came out just as her eyes nearly rolled back into her head and trembled with pleasure.\n\nSqueezing my cock with her pussy, she then looked down at me, at us, and smiled drunkenly with pleasure. \"I'm a... I'm a... GOD, FUCK! Fuck, I'm a cheating bitch now, fuck, I'm a cheating bitch and it feels so good... fuck, Mr. Collins, your cock and my body were made for each other, this is perfection, this is amazing, god, FUCK ME YOU MOTHERFUCKER!\"\n\nShe announced this with a pride and such a pure sense of triumphant joy that I couldn't help but smile with her. How she wanted to live her life was her choice, but if she was enjoying herself and I was enjoying it while buried ten inches with her, well, I wasn't one to argue.\n\nMrs. Harker rose, pulling a few inches out of my cock out of her before settling back down again. Her eyes bugged out and her mouth opened in a wild, lusty scream that promised quite a bit of fun. I might have joined her, it was hard to be sure for the intense pleasure that nearly blinded me. My cock was buried to the hilt in the cunt of the bustiest teacher in school, and soon we would be fucking. If what she said was true, this would likely happen again, and again, and again, the two of us fucking while she gave me tasks as her errand boy. It wouldn't take much to learn to enjoy that.\n\nShe trembled against me, and so I wrapped my arms around her, pulling her onto me and letting her tremble. Her insane tits crushed against my chest, I let a hand drop to squeeze her ass again while she got accustomed to my size. Wanting my mouth on her somewhere, anywhere, I soon began kissing and gently licking her neck, causing her to only tremble harder.\n\n\"Holy fuck...\" she groaned. \"Wow...\"\n\n\"It's... amazing...\" I replied, both meaning it and wanting to bring her back to where she wanted to be. She'd started this encounter nice and dominant, but had lost a lot of that rigidity and bluster as she collapsed against me. For a moment, I knew I felt *her*, the Mrs. Harker stripped of any pretense and pontificating, and found myself buried inside of a lonely woman who needed some attention.\n\nMy efforts, though, seemed to work. She looked up at me, blinking and returning her confident sneer. \"Of course... of course it's amazing. I'm amazing. You... holyfuck... you knew that already. Is it everything you dreamed of? Am I every bit as tight and soft and perfect as you imagined me being while you jacked off thinking about my curves?\"\n\n\"Better,\" I replied.\n\n\"Such a good pet,\" she said, kissing me deeply and squeezing my cock with her pussy. \"Such a very, very good pet. I knew this was the right choice to make. I knew trusting my friends about you was the right move. You're a very good boy, with a very nice mouth and an even better cock.\"\n\nSlowly, she raised herself up, then slid back down onto my cock. Mrs. Harker's eyes snapped closed and she shivered, her hands digging into my chest as she pushed off of me and began to ride.\n\n\"Wow,\" I murmured, looking down to where my cock spread her pussy open in awe as it disappeared into her, only to reappear as she pushed off of me.\n\n\"Yeah, you've been with a lot of other bitches, but none with a body like mine, have you?\" Mrs. Harker said, hissing as she started to ride me properly.\n\n\"No, none of them have ever been quite like you,\" I admitted, ducking my head down so I could suck on her tits while she rode me.\n\nMrs. Harker moaned, running her nails down my chest pleasurably as she fucked me. \"And you'll never find one like me. Let's face it, there's a lot of hot bodied girls and women in this town, but none of them like me. I'm one-of-a-fucking kind, and I was made for this cock like you were made for me. We fit together, and we're fucking magic, and... god, keep fucking me!\"\n\nI thrust up into her, matching her rhythm and trying my best not to lose it.\n\nIt wasn't easy. Her pussy felt every bit as magical as she claimed we were, and her insane tits bouncing before my eyes were practically hypnotic. I could barely remember my own name, let alone anything else that happened today as her body slammed down into me with a sexual intensity I didn't know a body like hers could handle.\n\nIt took every last ounce of self-restraint I had and a little more past that to avoid cumming as she really began to fuck me, but I pulled it together. Thank god, I pulled it together.\n\nThough our seating on the couch was awkward, I was able to plant my feet on the floor and fuck up into her every bit as hard as she fucked down onto me, transforming us from two people with exceptional assets into one writhing, grunting, sweating body. Flesh slapped against flesh, and I couldn't tell you where I ended and she began as we fucked into each other with an impressive savagery. Her eyes bored down into mine, staring me down with a superiority she had well-earned, while I looked up at her grateful and horny and doing everything in my power not to fuck up and cum too soon.\n\nFocusing on sucking her tits helped, slightly, but her lips were the easiest way to lose me. I don't know what kind of lipstick she wore, but its staying power was marvelous, keeping her lips bright red, smear free and utterly begging to be kissed. I leaned up and made out with her, our tongues exploring each other as our bodies fought to find a sexual peak.\n\n\"Tell me... tell me... tell me what I need to hear...\" Mrs. Harker groaned as she fucked me savagely, holding on tight as her hips became a blur, pleasuring my cock with unfathomable speed. With her this close to me, I looked over her shoulder at the intoxicating sight of her jiggling, amazing ass slamming down onto me. I might have been past words before, but when she called for them, I felt inspired.\n\nI held her, painfully slowing her down so I could say what I needed to say while still being able to breathe. It didn't stop her from grinding down on top of me, but I had enough to say what I needed to say, and what she needed to hear. \"You're so fucking hot, and I am so fucking lucky. Every square inch of your body is so fucking amazing, made to fuck, to please and be pleased and I want to please you. Your husband's a fucking fool for not fucking you like the goddess you are, but I'll fuck you whenever, and however you need, worship you with everything I got until you're full and satisfied, because you're right, our bodies were made for each other. This big cock and your perfect fucking body... fuck, we were designed to make each other cum.\"\n\nSmiling slyly, she kissed me long and hard, then began rocking her hips faster. \"Fuck me, pet. Fuck me hard, and make me cum again, and then cum for me. I'm not letting you go until you've filled this pussy with cum...\"\n\nShe sat up on me, riding me hard again, her massive tits bouncing and colliding. I reached up to grab them, steadying them, squeezing her nipples as she savagely fucked me. I did what I could to meet her, but Mrs. Harker was on another plane of sexual need. She looked down at me with such a look of confidence and sexual superiority that I could only seek to match as I thrust up into her, holding on with every ounce of will I had against her onslaught.\n\n\"Oh fuck, you're gonna make me cum... I'm gonna cum like the cheating whore I am on top of your big fucking cock and you're gonna fill this married cunt... fuck it feels so damn good, it feels good to be bad, feels good to be bad on your thick, fucking cock...\" she intoned.\n\n\"God you feel so good, Mrs. Harker... fuck... I've never seen any body like this... never fucked anyone like you... god...\" I groaned, leaning back into the couch and closing my eyes as I fucked up into her as hard as I could.\n\n\"I'm gonna cum soon...\" Mrs. Harker groaned.\n\n\"Me too...\" I replied.\n\n\"Cum for me, pet. Cum for me hard and set me off... cum for me FUCKING! NOW!\" Mrs. Harker roared.\n\nShe didn't need to ask twice. I felt my balls clench and my body overwhelmed by pleasure as I came deep inside Mrs. Harker's pussy. My body was calling on reserves I didn't even know I had as I thrust into her, overpowered by sensation that set my body alight with pleasure. Fucking hell, it felt like I was having sex for the first time again for the pleasure I felt (except this time, I was good at it), and the torrent felt endless.\n\nMy own orgasm was easily beaten by Mrs. Harker's, screaming and clenching down on me as her hips slowly jerked up and down on my cock, milking every last drop from my cock. Her face, so expressive, was completely lost to the pleasure, her mouth wide open as she wailed, haltingly, her eyes rolled back as she shook and bucked against me. Her pussy squeezed me, pulling even more cum from me deep inside of her. It felt like if I let go, her pussy might well have pulled my cock off, so I hung on for the ride, thrusting gently inside of her in slow, spasmodic jerks.\n\nAfter what felt like an hour of this, she finally collapsed against me. My cock still buried in her pussy, we held onto each other for a good long moment, the both of us just sitting here intertwined, catching our breaths and coming back to earth. Again, my mouth needed something to do, so I leaned into the crook of her neck and began slowly kissing it. With a sound very much like purring, she curled against me.\n\nWe sat there, still conjoined and holding onto each other. Mrs. Harker did look up at me once, planting her lips on mine for a long, deep kiss before climbing off and sitting next to me on the couch still trying to catch her breath. Her pussy was obscene, with swollen, stretched-out lips leaking a positive river of cum. It felt in that moment that I had never seen anything hotter in my life.\n\n\"Would you mind... would it please you if I got a picture?\" I asked.\n\n\"As long as it doesn't get shared around, shoot away. I left your stuff right outside the office door,\" Mrs. Harker replied, her deep breathing making her tits rise and fall in epic fashion.\n\nTrue to her word, she had piled my stuff right outside the door. I pulled them all inside, making sure to once again lock the door behind us and pulling out my phone. Mrs. Harker sat on the couch, looking up at me with the same intensity she'd had when she seduced me, her legs still spread apart lewdly and showing exactly what I had done to her. She let me take a few pictures before I put the phone away, then I sat down next to her again.\n\n\"I'll imagine you've some exciting pictures stashed away in that phone,\" she said.\n\n\"That's... putting it lightly,\" I admitted.\n\n\"Well, enjoy them while you can. You've still got a fair amount of time to enjoy your irresponsibility, have fun with it, and never forget the good times you've had,\" she said knowingly.\n\n\"I know responsibility. I've done a lot this year, with the paper and Halloween, and Christmas, and... well, I've got a lot going on, but if you need an errand boy, I'll help you the best I can.\"\n\n\"Good, because I'll need it,\" Mrs. Harker said, sighing.",
        "\"How?\" I asked.\n\n\"If you're asking if I've got anything concrete for you, my answer is not yet, but almost certainly quite soon. I need someone who can get things done, and after the Halloween Scream, I know you're the kind of person who can get things done when properly motivated. We're beginning prep for our spring musical in March, and with the egos of my students all colliding with one another, if I'm to get anything done, I'm going to need someone who works outside of their social hierarchy. That, and someone with friends in a lot of different places who also are unattached to the stupid student and parent power struggles would be incredibly helpful,\" she said.\n\nBeing thoroughly unaware of what it took to put on a school play, this all took me by surprise. \"Sounds very Game of Thrones.\"\n\n\"It can be, but hopefully this will have a better ending,\" Mrs. Harker replied.\n\nI didn't think the final season of Game of Thrones was that bad, but I didn't press her on that. \"What kind of problems are you having?\"\n\n\"The kind I don't really want to think about too much right now,\" she said, sliding onto the floor on her knees.\n\nI had a good idea of some of the issues she was having, after overhearing her talking about dealing with the PTA's issues with the selection of the next musical, but I didn't know what I could do to help her with that. I did like the view of her I had from here, though.\n\n\"Tell me, Mr. Collins, you had sex right before I discovered you, and you just came deep in my cunt again. Can I trust that you have a good recovery time based on this?\" Mrs. Harker asked, looking at my now mostly-limp cock. Reaching behind herself, she pulled off her blouse and tossed it on her desk, then sending her bra on the same path. Watching those massive tits finally freed was enough to make me twitch a little. Briefly, I saw her take hold of her wedding ring as if she meant to take it off, before deciding to leave it on.\n\n\"It takes a bit longer between each try. But I can make it happen,\" I replied.\n\n\"Good. Because you'll soon find out how demanding I am, and we are definitely not done for the day,\" Mrs. Harker replied, reaching for and stroking my cock. I hissed at her touch, enjoying the smile it got from her.\n\n\"I'm glad to see I've still got your attention,\" she replied.\n\n\"It's kind of hard for you to lose my attention,\" I said.\n\n\"That's not the only thing I want hard,\" Mrs. Harker quipped, taking my stiffening cock into her mouth. Her ruby-red lips stretched around the swollen head, slurping and messily swallowing a fair length of my cock. She bobbed up and down slowly, getting me harder with every stroke from her perfectly plush lips.\n\n\"Wow... I don't know how long it's been... but you're really good at that, Mrs. Harker!\" I moaned.\n\n\"I know,\" she said, suddenly taking my entire length into her mouth, down her throat and holding it there, gagging. She held it there for a moment, her fingers stroking, massaging my balls and trying to will them back to life, before she came up for air coughing and smiling arrogantly.\n\n\"It's been a while, and I've never had a cock this big,\" Mrs. Harker explained. \"But I've still had some fun with some sizable toys. And the girls from my book club know how to use their toys.\"\n\nBeyond words, all I could do was moan.\n\n\"Oh, you like that image, don't you?\" Mrs. Harker said, taking her mouth from my now very hard cock and then wrapping her massive tits around it. She squeezed them together, her saliva and my precum lubing the space between her massive, fleshy globes.\n\nYes, as it turned out, getting tittyfucked by Mrs. Harker felt every bit as awesome as I'd imagined it might be, and more.\n\nShe could have gotten me to agree to anything at this point, so I nodded. Mrs. Harker smirked. \"It started with books and wine and all of us wanting to bitch, but then Viola had to go and start selling her toys to us, and after we got them we wanted to try them and... well, we'd split off two at a time and have the fun our husbands didn't care to have. Me, Brenda, Lauren, Janelle... Valerie Chan, Ana Lopez, and a whole lot more of what I wager you boys would call MILFs. Our needs weren't being fulfilled, so we sought out fulfillment on our own. You like that, don't you, pet?\"\n\n\"Honestly, that's incredibly fucking hot... and I'd love to talk about and fantasize about it with you, but... fuck, I'm really kinda past all rational thought... and going more than a little crazy right now the way you're tittyfucking me, so if you want a complete and... well thought out answer, I'm afraid I won't be able to give it to you until you stop, which I really, really, *really* don't want you to do,\" I said quickly, my voice high and rapid and barely a whimper by the end for the pleasure I was feeling.\n\n\"I'll tell you when I'm going to stop, pet. Don't forget about who's in charge here,\" she answered, her voice completely stern once more. She slowed her tittyfuck down, but not enough to make me lose any sensation. It was enough to make me moan, a pitiful, begging sound under the power of her massive tits.\n\n\"Yes, Mrs. Harker, I didn't mean any disrespect,\" I said quickly.\n\n\"Good. Because I don't fuck disrespectful boys,\" Mrs. Harker said, standing back up. Now only wearing her garter belt, stockings and heels, and with her cunt dripping a copious amount of both of our juices, she was completely awe-inspiring. She sat next to me on the couch again, pushing me to the side so there was more distance between us, allowing her to lie on her back. There wasn't a ton of space for us, but enough for her to spread her legs some, with one foot on the ground for stability.\n\n\"I want you to fuck me,\" Mrs. Harker said, her voice almost threatening as she pointed one finger at her pussy invitingly, \"This is your job, Mr. Collins, but rest assured I will kick your ass through the door if you don't show me the reverence I demand.\"\n\nI meant no disrespect, and I definitely didn't want to turn down more hot sex with Mrs. Harker. Silently, I knelt between her legs, then lay on top of her, sliding my cock once again inside of her tight cunt until I was fully sheathed inside of her. It felt different, being on top of her, but I had no illusions that I was in control. Even with her eyes staring into mine and her massive tits crushed into my chest, my entire weight holding her to the couch, I was absolutely aware that Mrs. Harker was in complete and utter control of this fuck.\n\nI wouldn't have had it any other way.\n\nSlowly, I thrust in and out of her, enjoying the pleasurable sounds it brought from deep in her core, the way it changed her breathing and how she looked up at me with eyes that were simultaneously dominant and pleading.\n\n\"Is this... respectful enough... for you?\" I grunted as I thrust into her deeply.\n\n\"It's... ohgod... it's a start, Mr. Collins. As my new pet... I will have to put you through some training... when we're together... so you... fuck... know how I deserve, and need, to be treated... but for someone who is making it up as he goes... you're not bad...\" Mrs. Harker groaned, her eyes lidding over as she leaned up, wrapped her arms around my neck and kissed me. I kissed her back, letting her suck my tongue into her mouth as I continued slowly fucking into her. She wrapped her legs around my ass, pulling me in deeper, harder, making me fill her.\n\nThis would have been an ideal place for me to hold her, but Mrs. Harker soon opened her eyes, staring deep into me and said, \"We've had a change in plans. Get off me, pet.\"\n\nDisgruntled and needy, I whimpered, continuing to slowly thrust into her in the hopes that I could change her mind. Mrs. Harker looked at me crossly, pushing me harshly and making me pull out of her. Apologetic, sat further down the couch from her while she sat up and looked at me with a punishing look in her eye.\n\n\"I shouldn't have had to ask twice,\" she said.\n\n\"I'm sorry, Mrs. Harker,\" I replied, hanging my head in apology and looking at her with the best puppy-dog eyes I could muster.\n\n\"You're lucky I'm not done cumming,\" Mrs. Harker said, getting up on her knees and turning away from me. She leaned over, presenting her amazingly round ass. Her hands reached out, each grabbing a pale, creamy ass cheek and spreading them apart, showing me her tight, pink asshole, still glazed with our mutual juices from earlier.\n\n\"You said you wanted to worship my ass? Well, it's time to make good on that promise. Eat my fucking ass, pet, and eat it good. Get me nice and wet; I know you lust for this ass, and I know you have a talented tongue. Let's see if you can put your money where your mouth is,\" she taunted, flexing her ass and winking her tight little hole at me.\n\nIf she expected any hesitation from me, if she thought I might be intimidated as other guys had been, I wanted to prove her wrong. Without any hesitation, I dove in, kissing and squeezing each of her bountiful ass cheeks, running my tongue over her supple flesh and loving how it made her moan. I didn't dive in to pleasuring her tight little asshole, not right away anyway, but I teased around it, giving all my attention and worship to her ass as she so desperately deserved, but gradually focusing inward.\n\nMrs. Harker seemed to rather enjoy it. \"Mmm, such a dirty pet, fuck, you know how to worship an ass. Everyone seems so obsessed with my tits that they don't pay as much attention to my ass, but you, Mr. Collins, you appreci- OH, FUCK!\"\n\nThis was the sound she made when I finally touched my tongue to her asshole, sliding a couple fingers deep into her sopping-wet cunt for assistance. I thrust them into her in time with my rimming her ass, fucking her while I ran my tongue in tight, firm circles around her pink, forbidden hole. By the moment, I was more forceful, digging in with real gusto as she quivered and cursed.\n\n\"No man... oh fuck... such a good pet... no man has ever done that to me before, Mr. Collins... no man has ever been brAAAAAAAAVE ENOUGH!\" she yelled, an understandable sound given that I'd just pressed into her asshole with my tongue. She squeezed her ass around my face so hard she might well have suffocated me, beating her couch with her fists at the pleasure I was giving her. It felt good to give her something she so clearly wanted and obviously wasn't getting, but I'd be lying if I said my cock didn't feel the need for some attention.\n\n\"MOTHERFUCKER!\" Mrs. Harker exclaimed. \"That tongue's not enough. GET YOUR *FUCKING* LUBE, NOW!\"\n\n\"Yes, Mrs. Harker!\" I exclaimed. Carrying an extra tube around in my backpack had proven a wise precaution for impromptu sex opportunities like this one.\n\nI got the message. I dove for my backpack, pulling out my emergency bottle of lube and squeezing some into the palm of my hand, quickly coating my cock. Getting behind Mrs. Harker, I squeezed some of the liquid onto her ass as well, sliding it around her hole, then pressing one of my fingers against her hole. There was resistance, quite a lot of it actually, but she groaned at my efforts.\n\n\"If I wanted you to finger my ass, Mr. Collins, I would have told you to finger my ass. I want that fucking cock buried in me now, not later,\" Mrs. Harker said harshly.\n\nI wanted nothing more than to do exactly that, but if it had been as long since she'd been fucked in the ass as she'd indicated, I didn't want to do anything wrong, especially hurt her or scare her off. Still, she seemed to have a lot of confidence, and if she'd been fooling around with toys... well, I hoped she'd done her own preparations for her ass.\n\nTaking my cock in hand, I lined it up with her tight, glistening asshole. She flexed it at me, winking the hole invitingly.\n\n\"Do it, Mr. Collins. Fuck my slutty, cheating ass,\" Mrs. Harker growled.\n\nPressing my cock against her hole, I said, \"Yes, ma'am.\"\n\nThen I started pushing.\n\n\"GODDAMNIT! FUCK! THAT'S FUCKING BIG!\" she yelled as my head began to spread her tightest of tight holes open. I groaned at how tight she was, uncertain that she was actually going to open up for me. She'd no doubt had some experience, but probably not with anyone or anything as big as me. I pressed up against her, feeling a certain amount of give but not enough for the head to pop inside of her.\n\nI pulled back slightly, hoping to regroup. Mrs. Harker didn't like this. \"I SAID FUCK MY ASS! TEAR ME OPEN, DESTROY MY TIGHT, CHEATING BITCH'S HOLE, I NEED THAT HUGE FUCKING COCK IN ME!\"\n\nWell, I couldn't say she didn't seem certain. I pressed forward again, harder, feeling resistance as her tightest of tight holes held firm against my invasion. The pressure built as I pushed forward, feeling a little give but not enough.\n\nAnd then, all at once, I felt give, and the head of my cock broke through into her asshole. Mrs. Harker yelled a formless, violent and animalistic sound of pleasure and pain, pounding her hands against the couch as she urged me forward. She pressed her ass back against me, forcing a little more inside of her.\n\nMe, I was on another plane of existence entirely, trapped in her perfectly tight asshole and not wanting to leave. She squeezed my cock almost painfully, but still so exquisitely pleasurable I could have cum right there if I lacked self-control. Instead of getting lost to the pleasure, however, I focused on pushing forward, wanting to feel everything her ass could do to me.\n\nShe said most guys couldn't handle her ass, and I was going to prove to her I wasn't most guys.\n\nI slid my cock in another couple inches, made easier now past the initial resistance. The lube definitely made this easier, but her ass still made this one of the most pleasurable battles as it squeezed me tightly every inch of the way. Mrs. Harker was a groaning, grunting, cursing mess, her face dropped down onto the couch and her tits pillowing out underneath her. She shook and shuddered as I pressed forward, more than halfway now, each of us savoring this forbidden fuck.\n\nThen... there it was. With only a couple inches to go, I thrust inside of her, burying myself completely within her ass.\n\n\"I'm all the way in now, Mrs. Harker. Does this please you?\" I asked, my voice a little high from the pressure surrounding my cock.\n\nShe turned her head enough that I could see an eye looking up at me. \"I can feel your balls against my cunt. It's good, pet. Give it a moment... let me feel you... then fuck me hard. This cheating bitch's ass can take it.\"\n\n\"Are you sure?\" I asked, my voice shaky for how I felt inside of her.\n\n\"I wouldn't demand it if I wasn't. Now... fuck me, pet, fuck me until I scream,\" Mrs. Harker demanded.\n\nWell, if she knew what she wanted...\n\nI withdrew, pulling my cock out and feeling the tight ring of her hole squeezing me on the way out. I almost got to the head before slamming back in all at once, making her cry out in pain, pleasure, perhaps even some emotion born of those two sensations' wicked coupling. Her fleshy ass rippled with the impact of my body against hers, a sight that only amplified what my cock was feeling.\n\n\"Goddamn... fuck my ass, fuck my cheating ass, Ryan... fuck me like no one ever could... GODDAMNIT FUCK ME HARD, NOW!\" Mrs. Harker cried out.\n\nI obliged. I obliged because I wanted to, but even more because it was what she wanted. Though she was physically beneath me, her face pressed into the couch while I drilled her ass, Mrs. Harker was definitely in control of our encounter. Though this may have been just the beginning of a new arrangement between the two of us, I wasn't going to do anything to mess up this first time.\n\nSo, I fucked her with a savagery I reserved for special occasions. Kneeling behind her and grabbing her hips, I fucked her even harder, watching her face crush against the couch cushions as her jiggling tits pillowed out beneath her obscenely. I pounded into her with almost my entire length on every stroke, her screams of pleasure becoming a long wail only occasionally interspersed with words or pieces of words. I was beyond caring at this point, lost completely to how good it felt to fuck this insanely curvy teacher. My cock was in heaven, beyond heaven, even, sliding in and out of her so quickly and building up another good load for her.\n\nI felt her reach between her legs, her hands furiously rubbing at her pussy while I fucked into her, my balls occasionally grazing her fingers. I was a grunting, rutting mess, only interested in a hard fuck and a harder cum. Thankfully, I'd found a partner who matched me, as Mrs. Harker forced her ass back onto me.\n\n\"That's it! That's it! Right fucking there! You can take my ass! You can take my ass like no one else could! You're a fucking find, pet! I love it, I love it, I love fucking you, I should've done this ages ago, fucking fuck, motherfucker, yes, right there, right there, FUCKING YES! I'M CUMMING AGAIN! I'M ACTUALLY CUMMING AGAIN! FUCKING... GOD!!!!!\" Mrs. Harker cried out, her whole body shaking as if she'd been hit with electricity. Her ass clamped down on me hard, so hard it nearly set me off. I kept fucking her because she had an orgasm to ride through, and it felt too good to stop fucking her. So, I let her wail and shake and have her hard cum as I showed her ass little mercy, continuing to pound into her long past the point her orgasm subsided and she was a complete and utter mess.\n\nStill, I could feel an orgasm building in my swollen balls, a delicious pressure that forced me to slow down so I could ask, \"Where... do you... want it? Cumming... soon...\"\n\nWeakly, she reached back, pushing at me and urging me out of her. Though disgruntled and needing release, I complied, pulling out of her and watching her roll over. \"Paint my fucking tits... pet...\"\n\nCarefully, I climbed onto her, straddling her stomach so I could jack my cock onto her. Mrs. Harker reached down to help, rapidly stroking my cock for me. Her hands were firm but gentle, swiftly bringing me over the edge.\n\nGrunting, I came again, firing streaks of semen all over her massive tits. The trails pooled in the valley of her cleavage and ran down her neck, even as the last few shots splattered her chin. Through this, she groaned, squeezing every last drop from me.\n\nLightheaded from the intense cum, I almost fell over, but Mrs. Harker held me upright. She pulled me closer, leaning down so she could barely fit the head between her lips. Her suckling got me at a sensitive point, one where I wanted to pull back, but I didn't dare stop her for how cross she would be with me. Watching her, with my cock between her cum-coated tits, suckling on the head with her ruby-red lips, I could think of only one thing to say.\n\n\"So... was I a good pet?\"\n\nShe let my cock pop from her lips, then smiled up at me smugly. \"You were very good. If you continue to be good, we can do much, much more of this. Would you like that, pet?\"\n\n\"I would,\" I admitted, nodding eagerly. This had been one of the most insane encounters of the year, and I very much wanted a repeat.\n\n\"Good. Because I meant what I said, the two of us are sexually gifted, and together we can make some sweet music,\" Mrs. Harker said. The woman had an ego, but it was well-earned.\n\nShe sighed. \"We should both get going soon.\"\n\n\"Yeah,\" I replied, climbing off of her and standing. My legs were wobbly, and it didn't feel like they'd hold my own weight. I was not looking forward to the bike ride home.\n\nMrs. Harker smirked, her voice taking on a tone of mock pity. \"Oh, no, did I destroy you, pet? Did I fuck you better than all those little girls ever could?\"\n\nI could play her game. \"I'll be fine...\"\n\n\"I'll need you in better shape than that in the future, but for now... I'll take the compliment. Would you like a picture of all of this, before you go?\" she asked, gesturing at herself with her hands. Looking as utterly defiled as she did, I could only reply one way.",
        "\"Yes,\" I said, retrieving my phone. Mrs. Harker took to massaging my cum into her tits, seemingly taking great joy at running it over her wedding ring as I took a couple pictures for my memories. These... well, these would certainly be some fairly epic pictures in the album.\n\n\"So...\" I pondered, putting my phone in my pants and beginning to dress. \"Do you have any errands that need my attention right away?\"\n\n\"So eager!\" Mrs. Harker replied, looking me up and down. \"For now, get home and get your rest. I don't have anything imminent, but once discussion of the musical ramps up later in February, expect to be at my beck and call.\"\n\n\"Oh, I will,\" I said, trying, very awkwardly to get dressed.\n\nMrs. Harker laughed, then smiled at me. \"Good. And, Mr. Collins?\"\n\n\"Yeah?\" I asked, pulling my shirt over my head.\n\n\"Thank you. I cannot express for how long I've needed that. I look forward to our next opportunity,\" she said. It was a completely genuine smile, one of warm gratitude that really made me wish I could do more for her now. I couldn't, not with how much she'd taken out of me, not when I needed to get home in time for movie night, but it was fun to fantasize about.\n\n\"Anytime,\" I replied, smiling back.\n\n\"Good,\" Mrs. Harker said, the warmth of her smile disappearing as her dominant side returned. \"Because if you aren't ready when I need you, pet, there will be... consequences.\"\n\nSomething told me it was wise to heed that.\n\n***\n\nOnce I would've thought there could be nothing better than going home to two beautiful, freaky girlfriends for all the fun we could've had just fucking the ever-loving shit out of each other. On days like this, though, after the paces first Dakota, and then Mrs. Harker had put me through, I couldn't have been happier that these two girls were just as happy with a casual movie night as they were with me filling each of their holes with cum.\n\n\"Awww, poor baby,\" Brooke said as I lay down on my bed, groaning. Looking very cute in her oversized pink t-shirt and pajama pants, she sat down by my head and stroked my hair.\n\n\"Poor baby? Really?\" Josie teased as she went through our streaming options. \"He got to fuck Mrs. Harker. I don't think he's exactly in a pitiable position.\"\n\n\"And Dakota! I know she was, like, the appetizer, but she's a pretty rough fuck too! You should totally try her sometime, she likes girls with tats,\" Brooke jumped in.\n\nJosie stroked her chin thoughtfully.\n\n\"Dakota was fun, and she was still Dakota, but with Mrs. Harker... well, in my defense, it was more her fucking me,\" I said. Despite my groans, the memory of what the two of us had done together did manage to make my cock stir, a little.\n\n\"But you came on her tits?\" Josie asked.\n\n\"And, like, made her a three-hole slut?\" Brooke added, Josie nodding in agreement.\n\n\"Yeah,\" I replied.\n\n\"And you had fun?\" she asked.\n\n\"Oh yeah,\" I replied.\n\n\"Then quit your griping and enjoy movie night with us,\" Josie said, smirking. She looked good when she was like this, especially in the tank top and shorts she wore that showed off her assets very, very nicely. If I had more energy, I'd have given her a nice spank on the ass for her bitchiness, but I didn't, and I knew she was just trying to get a rise out of me. I did caress her ass, enjoying the way it made her take a sudden breath.\n\nIt was definitely fun.\n\nBrooke kissed me on the lips quickly, taking me out of the argument. She said, \"Well, Josie can be, like, bad cop all she wants, but I'm totally the good cop here. She can totally bust your chops, but I can totally massage your fucking muscles and get you back in fighting shape so you can show us a good time.\"\n\n\"And if you don't, I just might have to fuck Blondie all on my lonesome,\" Josie replied.\n\nBrooke considered this. \"Hey, Ryan, you know-\"\n\n\"It wouldn't be that much of a tragedy if I didn't recover anytime soon?\" I suggested.\n\nBrooke smiled perkily. \"Wow, it's like you, totally read my mind!\"\n\n\"I've been getting good at this,\" I acknowledged.\n\n\"And I've finally narrowed down our options,\" Josie said.\n\n\"Oh? Do tell,\" I replied.\n\nJosie said, \"Well, Blondie here hasn't got a lot of experience, and you were suggesting horror comedies as a way to get in, but since that's a subgenre that's often weakass or more focused on the comedy or deeply metafictional jokes that require extensive knowledge of other films of the genre the genre to understand than the horror-\"\n\n\"I *like* comedy and proper metafictional humor!\" Brooke interjected.\n\n\"-I want to make sure we at least get a movie that gets some proper balance while still being fun and accessible,\" Josie finished. \"I'm not normally one for the weaker stuff, but I don't want to scare you off either, Brooke, when we could have some fun together. So... we'll work you up into more advanced material. Tonight is just fun. And so...\"\n\nScrolling through her options, Josie finally pulled up a familiar screen that brought a smile to my face.\n\n\"Shaun of the Dead?\" I asked, smiling.\n\n\"What's Shaun of the Dead?\" Brooke asked.\n\n\"It's a romantic comedy. With zombies. It's not very scary, but it does have its moments. I think you'll like it,\" I said.\n\n\"Okay,\" Brooke said, skeptical but wanting to trust Josie and me.\n\n\"If it doesn't have you laughing out loud in the first twenty minutes, we'll just have to tickle you until you do,\" Josie said, hopping down on the bed next to us as she started the movie.\n\n\"Hey, I'm ticklish!\" Brooke protested.\n\n\"I know,\" Josie said, reaching to tickle Brooke. Brooke squealed with giggles, crawling more my way to avoid Josie's talented fingers. If she was looking for mercy, though, she wasn't going to find it with me, as I dove in and began to tickle her as well.\n\nThough we could've gone on for a while, I wanted to watch the movie and for Brooke to enjoy watching the movie with us, so I collapsed contentedly on the bed, one arm wrapped around Josie, the other around Brooke. Sharing a fun movie with two women I absolutely loved while recovering from the fucking of a lifetime?\n\nYeah, life was good.\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)\n\n \n"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "anal",
        "big cock",
        "cheerleader",
        "creampie",
        "high school",
        "huge tits",
        "slut",
        "teacher",
        "tittyfuck"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-31"
}