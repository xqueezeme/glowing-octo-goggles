{
    "title": "Return To Sable Island",
    "pages": [
        "Philip Johnson\n\nPrologue\n\nI won't say it's essential that you read Sable Island first but if you don't I'm not sure you'll ever be able to fully get into this story. And for me to try to give you a quick thumbnail idea of the first book would take me at least a couple of chapters and still the flavor of Sable Island would almost certainly suffer. I've received many very flattering e-mails and comments and a number of those have asked me to write this. So it is with some trepidation that I have undertaken this story fearing that I will disappoint those that have been so effusive in their compliments. Do as you must but either way I hope you enjoy reading Return To Sable Island. \n\nPhilip Johnson, a.k.a. thornapple.\n\nChapter One\n\nIt was a cold, rainy and blustery day with clouds so thick that it was almost dark outside. \"God Joe this weather is depressing. I'd give anything to be back on Sable Island again.\"\n\n\"Marcie if I thought there was a way we could get away I'd be ready to go tomorrow but it's only been three months since we were there with Charlie and Gail.\"\n\n\"I know, but it seems so long ago.\"\n\n\"Honey we're still trying to work through our island problem anyway so going back there right now could be a big mistake.\"\n\n\"I know, I talked to Gail earlier and she and Charlie had a bit of an argument yesterday.\"\n\n\"About who loves whom the most?\"\n\n\"Not this time. It was about something to do with getting a new car I guess.\"\n\n\"That's not worth arguing over.\"\n\n\"Honey it isn't about the car.\"\n\n\"But you just said...\"\n\n\"I know what I said but that's not it. Both of them are taking their frustrations out on each other and they used the car issue to argue about instead of about Gail loving you, or Charlie loving me.\"\n\n\"How do you know all of this?\"\n\n\"Because you and I do the same thing.\"\n\n\"We do not.\" Marcie just looked at him and walked away. Then under his breath he said, \"Well we don't.\"\n\nThe four of them had come home from Sinclair Retreat on Sable Island very confused about who they loved the most. Gail had said early on that she was afraid that there were going to be problems almost from the beginning but she still was consumed by Joe just as Marcie was consumed by Gail's husband Charlie. Joe and Charlie were faring no better. Charlie loved Marcie and that was fine except he couldn't keep that issue in perspective. They were four very confused and fragile adults.\n\nJoe found Marcie and asked, \"Were we getting together with Charlie and Gail this evening?\"\n\n\"Nothing was planned, did you want to?\"\n\n\"I think we need to talk about this again.\"\n\n\"Honey the four of us have talked about this before.\" \n\n\"I know but we didn't solve anything or even reach any conclusions or agreements on what to do about it.\"\n\n\"So what's different now?\"\n\n\"I want to talk about swapping.\"\n\n\"Joe what are you talking about? Do you want a divorce?\"\n\n\"No of course not honey, I love you. I don't mean permanently.\"\n\n\"Maybe you and I better talk about this first. Just what are you thinking?\"\n\n\"Swap for a weekend or something like that.\"\n\n\"You just want to be with Gail.\"\n\n\"Now damn it Marcie stop that. Okay, so I do want to see Gail but what I really hope will happen is we'll get some of that out of our system so we can settle down. This isn't an option, we have to do something. I don't think any of us are thinking very clearly or realistically right now...or for the last two months for that matter.\"\n\n\"I keep trying to tell myself that I wish we'd never seen that island but I love it there so much.\"\n\n\"We all do but if we don't resolve our problem we'll never be able to go back there.\"\n\n\"And you think swapping will solve our problem? I have to wonder if it wouldn't make it worse.\"\n\n\"I think after swapping and we experience the reality of day to day life it will take a little of the fire out of our problem.\"\n\n\"But you and I live a day to day life and until that second trip to the island we couldn't have been much happier.\"\n\n\"I think that the love that I feel for Gail is different in some way, just as your love for Charlie is different. Both are strong emotions but not the same as the love we feel for each other.\"\n\n\"If we do swap it's going to be a big gamble.\"\n\n\"Do you want to go on like we are now, confused, touchy and quick to argue?\"\n\n\"No that won't work and we both know it. Okay but I better call Gail and see how she and Charlie are doing. They might not be in a frame of mind for visiting us.\"\n\n\"Okay just let me know.\" It was less than two hours later when Gail and Charlie appeared at their doorstep. The decision about swapping took no more than ten minutes and half an hour later the details had been worked out. The guys would swap so that meant that Joe would live with Gail at her house and Charlie would join Marcie and it would take place over the coming long four day Thanksgiving holiday. \n\nJust to show how confused they were Marcie cried and told Joe she loved him just before he picked up his suitcase and moved in with Gail to celebrate Thanksgiving. It was the same with Gail and Charlie as she cried and kissed Charlie before he left for Marcie's. Then an hour later the two newly formed couples were in bed and making love having forgotten that not long ago they were weeping for their spouses. In fact none of them spent a lot of time out of bed that day.\n\nIt wasn't possible to keep up that pace so Friday was a day of rest and reflection as the two couples talked about their experiences on the island. Marcie had already told Joe how much she loved the island and wanted to go back and Gail told him much the same. \"Joe honey I know it's crazy but I really wish we could be back there.\"\n\n\"Even though the four of us are so messed up now?\"\n\n\"I have to think we can work this out and I think what we're doing now will help us.\"\n\n\"It has to Gail because I want the four of us to be able to go back to the island again and have a great time.\"\n\nBy Sunday afternoon the foursome was ready to swap back to their spouses. Each proclaimed their love for their temporary spouse but each was ready to go home. Their dangerous experiment had worked, at least for the most part. They all loved one another very much but now they knew what they wanted and needed. Marcie and Joe went to bed but spent most of their time kissing and talking before making love but Gail and Charlie's priorities were just the reverse.\n\nChapter Two\n\nThe next two months went by more or less uneventfully. There was no swapping but just like Joe and Gail, Marcie and Charlie used about every chance to touch or kiss or tease each other. They were finding that delicate balance that allowed them to enjoy what was becoming their chosen lifestyle. \n\nJust when things had settled down for them their lives were thrown into turmoil again on February tenth. Each couple got an envelope from Sable Island with a letter from Ki. Marcie smiled as she looked at the envelope but she waited until Joe got home and they were settled on the sofa with iced tea. They leaned back and Marcie opened and read Ki's letter. It was a form letter but Ki or somebody had given it that personal touch.\n\n\"Joe and Marcie, I hope this letter finds you both well and happy. I'm writing to inform you that we have been updating the cottages and have added a few new touches to our resort. Greg Paulson has taken over as manager of Sinclair Retreat and is working on the new name and I've been moved over to manage Sable Island Resort. I also want to tell you that we have initiated a limited time offer for a week of sun, fun and sand. As you probably remember the standard rate is four hundred and fifty dollars a day, amenities not included. But for our most faithful customers we're cutting that back to two thousand dollars for seven days, which is the same rate as for the Retreat and for this special event only this includes meals. The availability is very limited to couples that receive this mailing and can only be guaranteed for reservations received in the next two weeks and for the month of March only.\" Marcie looked at Joe with a pleading smile and asked, \"We can can't we honey?\"\n\n\"We can but we have to talk about it first so don't get too excited until then okay?\"\n\n\"Why do you suppose they are doing this?\"\n\n\"My guess is that with the economy being a little shaky their normal rate is just a little too salty for a lot of people right now.\"\n\n\"I have to call Gail and see if they got this letter too.\" It was only a few minutes later when Marcie rejoined Joe and she was all smiles.\n\n\"I take it they got the same letter.\"\n\n\"Yes they did and she's almost giddy.\"\n\n\"Then for sure the four of us have to talk before any decisions are made.\"\n\nMarcie smiled and told him, \"I know and that's why they're on their way over.\" Joe kissed his wife's cheek and reminded her that he loved her.\n\nAs soon as they came in, Gail kissed Marcie's cheek and then embraced Joe. \"Hi lover.\"\n\nHe kissed her and said, \"Hi sexy, doing okay?\"\n\n\"I'll let you know after we've talked about this new development.\"\n\nThe four of them settled in the living room and as Joe looked across at Gail sitting on the couch next to Charlie he smiled at her. \"Okay Joe, what are you thinking?\"\n\n\"I was just remembering that time I looked over at you and saw your panties for the first time. What an incredible day that was.\"\n\n\"I'll never be able to describe what I was thinking or feeling that time. I was a jumble of nerves and at the same time I wanted you so much.\" Charlie admitted, \"I wasn't doing any better honey, Marcie was teasing me and had me almost drooling on myself. Okay before the four of us end up making love on the floor what are we going to do about returning to Sable Island?\"\n\n\"We're going,\" Marcie offered.\n\n\"I hope so but we all know it isn't that simple. Are we playing with a fire that's going to burn us?\"\n\nI think we've all come to terms with our emotional crisis and know our emotions a whole lot better.\"\n\nJoe added, \"But we all know how emotions are so magnified on the island. We don't know for sure how it would be the next time. Everything has changed for us, or at least it would seem so.\"\n\n\"Exactly. We've changed for the better. I know that I still love Charlie very much but I no longer fear that feeling and I think it's the same for all of us now.\"\n\nGail added her opinion saying, \"I agree with Marcie. I think we've worked through all of that and we're ready to share a new adventure.\"\n\nThen Joe reminded them, \"Just keep in mind that if we go we're taking a big chance. We all think we know how it will be and that we can take it in stride. But think what the price will be if we're wrong.\"\n\n\"Joe you scare me.\"\n\n\"Good.\"\n\n\"But I still want to go.\"\n\n\"Marcie?\"\n\n\"The sooner the better.\"\n\n\"Charlie?\"\n\n\"I'm with Marcie on this, the sooner the better.\"\n\n\"Then we go. Now when does this happen? I suggest late in the month so we'll have time to think about this and not say later that we needed more time to consider the risks.\" \n\nMarcie agreed and Gail and Charlie said, \"Okay so say the last week in March if it's still available.\" Marcie was on the phone within a minute. \"Joe has she memorized the number for the resort?\"\n\n\"It would seem she has.\" The three of them listened to her side of the conversation and Marcie held out her hand to Joe and motioned for his credit card.\n\nThen they heard, \"Yes cottages twelve and thirteen if they're available.\"\n\nThere was a pause and then Marcie smiled at the three of them as she said, \"Yes, wonderful,\" and she finished the transaction before hanging up. \"I can hardly believe this, we're booked for the island again. God it's going to be hard to wait through the next four or five weeks, but Gail we have to do some shopping.\"\n\n\"Oh no, I'm saving my shopping for that place where you and Joe bought all of those nice things for Charlie and me.\"\n\nAfter Charlie and Gail left Joe said, \"The first time we went to the island we were overwhelmed by the newness of it and by the excitement and fast and profound changes in us. When we went with Charlie, Gail and Meredith we were still in awe of the islands influence and again overwhelmed but by what we shared with Gail and Charlie. The next time we go could be a bit of a let down once we get used to being naked on the beach again.\"\n\n\"I can't imagine being let down while on this island, but you make a good point. If we just spend the week going naked on the beach we'll likely get bored after about the second or third day. You going to golf again?\"\n\n\"No.\"\n\n\"No more mixed doubles to enjoy?\"\n\n\"I wouldn't want to get my hopes up again because that lightening won't strike again in the same place.\"\n\n\"So you do think that lightening might strike someplace else.\"\n\n\"We both know the island is full of surprises.\"\n\n\"So your fear of a let down has no merit.\"\n\n\"Okay maybe you're right. I'm just trying to anticipate what might happen.\"\n\n\"That's like trying to see where we'll be twenty years from now.\"\n\n\"True enough.\"\n\nChapter Three\n\nFor the next couple of weeks the island frequently came up in conversation but that stopped until the middle of March. With only ten days until their trip hardly a sentence was spoken that didn't have something to do with the island or their vacation in general. By the twenty third they were all getting so antsy they were driving each other crazy and by the time they were boarded for their flight to St. Croix they were acting like teenagers and in need of tranquilizers.\n\nAs they flew toward their destination Marcie thought about their stay at Sable Island Resort. It was going to be a new experience for Gail and Charlie. They had sampled the island magic at the retreat but the resort had a whole different feel to it and it was more posh in almost every way. Also Joe and Marcie were eager to show them the isolated beach if they could get there without the help of Ki. Then it dawned on Marcie. How did Liz, Jorge, Mary and Ken get there if they didn't have a houseboy to drive them there? That told her there had to be another way to get to that beach. Another one of Ki's tricks maybe?\n\nCharlie and Gail saw the man from the launch holding up the sign with their names on it and they loved that. The ride to the island on the launch was very enjoyable and they all loved the banter and jokes that their driver shared with them. There were two other couples on the launch with them but they pretty much talked back and forth between themselves. They left their luggage on the boat and went up to sign in while their bags were transported to their cottages or rooms. While Joe and Charlie went to the desk Marcie and Gail were approached by one of the women that had been on the launch. \"You are staying here at the inn aren't you?\"\n\n\"No we prefer the cottages.\"\n\n\"Whatever for, you have to go so far for your meals and drinks and you miss out on sitting out on the veranda and visiting with the other guests.\"\n\nMarcie and Gail just smiled and Gail said, \"We enjoy the ambiance at the cottages. Besides we all like to stay naked and screw on the beach.\" The woman got a horrified look on her face then and moved away from them as Marcie tried to keep from laughing as she looked at Gail.\n\nWhen the guys rejoined them Charlie said, \"We've rented an electric car for the week.\"\n\nJoe added, \"They now provide maps of the island to go with the car, a cooler in the back of the car and we also have beach towels and blankets waiting for us at the cottage.\" The four of them headed outside to their electric car with smiles on their faces. There was an employee named Samuel waiting for them and he showed them the simple controls of the car and though Joe and Marcie already knew, told them how to get to their cottages and sent them on their way with Joe behind the wheel.\n\nWhen they pulled up in front of number twelve they all jumped out and Charlie just stood there staring toward the ocean. \"So this is where you and Meredith ran into each other.\"\n\nJoe pointed straight ahead and said, \"Right where our walk ends. She came down that little hill on the sidewalk out of control and slammed into me knocking us into the sand.\"\n\n\"Gee Joe, what an awful thing to have happen.\"\n\n\"Yeah it was just terrible when her bikini broke.\"\n\n\"I'll just bet it was.\"\n\nMarcie went one better and pointing to the lounges on the beach told Gail, \"And that's where Ian and I kissed for the first time and I was almost naked.\" They all smiled and each couple went to their cottage to freshen up and unpack before meeting to decide their course of action.\n\nWhen Marcie and Joe went in they looked around and she said, \"It's almost like coming home.\"\n\n\"It really is. They've painted and fixed it up with new curtains and so forth but it feels the same.\" Then as they checked the bedroom she smiled as she looked at the closet and he asked, \"You thinking about seducing another unsuspecting guy?\"\n\nShe smiled and said, \"No, just remembering that day. Of course we have a week so who knows what will happen.\"\n\n\"It's a safe bet that something will happen.\"\n\n\"I'm still about half surprised that you didn't call Meredith and Ian to see if they were coming.\"\n\n\"I thought about it, but since we've not heard from either of them for quite awhile I think they've found different music to dance to. Besides don't you think a foursome is about right?\"\n\n\"For the most part I agree but I really did like Meredith.\"\n\n\"Oh I did too.\"\n\n\"So did you get jealous over Ian being with her?\"\n\nHe smiled and admitted, \"Yeah I did a little bit for awhile.\"\n\nThey washed up and changed and found Charlie and Gail standing outside checking out the view. Gail told Joe, \"You just missed something. Two couples and the women were something to see. Nearly naked and with bodies that I know you would have had fantasies over.\"\n\n\"Maybe we'll see them again. After all it is a small island.\" Then making a show of studying Gail in her bikini he said, \"Besides I have you to stare at love.\"\n\nCharlie abandoned his view of the ocean and the beach and said, \"I'm almost ready for dinner. How about just walking down the beach a little ways and then back to have dinner.\" They made their way to the beach and just stood there with their feet just in the water and took in the tropical setting. Palm trees, soft cream colored sand, tiny lapping waves bathing their ankles and warm sweet air wafting past them. The only sounds they heard were from the water and a barely audible conversation coming from a couple well down the beach toward the resort main building.\n\nMarcie was looking around and said, \"God no matter where I look it reminds me of something that happened when we were here the last time. It's just amazing how much we experienced.\"\n\n\"Give us some examples,\" Gail pleaded.\n\n\"Looking at that chaise lounge it reminds me of when Joe, Meredith and I put our suits under there and walked for miles totally naked that night. Looking down the beach I remember the first time that I was naked and in near panic when somebody saw me like that. I remember feeling Joe's hands on me as we walked and...just so many things like that. Oh and I remember filling our suits with sand and pitching them far out into the water.\"\n\nJoe laughed at that and added, \"And my suit was perfectly okay.\" Then another couple walked past them talking in near whispers and Joe and Charlie checked out her nearly naked butt as they went on down the beach. \n\nCharlie just smiled and said, \"Damn I love this place.\"\n\nGail smiled and turned him around and the four of them went back to their cottages and the women put on their bikini skirts as the guys put on shirts before driving up to the restaurant. They went in and were just seated and had drinks served when Ki appeared. He bent down and kissed both Marcie and Gail and said, \"I'm so glad to see all of you again, thank you for coming.\"",
        "Marcie almost stared at him. \"Ki you look fabulous.\"\n\n\"Thank you. Did you have a good flight?\"\n\n\"We did, how are you doing?\"\n\n\"Very well thank you. My uncle has asked me to invite the four of you to dinner tomorrow evening in his private dining room.\"\n\n\"That's very kind of him, we'd love to meet him.\"\n\n\"Wonderful, say six o'clock and I'll meet you here.\"\n\n\"We feel honored, is this something he does a lot?\"\n\n\"On occasion but certainly not frequently. I look forward to seeing the four of you then,\" and he stepped back, smiled and made his way out of the dining room.\n\nJoe watched him disappear and shook his head. \"What the hell do you suppose? Why us I have to wonder.\"\n\nThen Gail almost whispered, \"Maybe he found out Ki and Marcie made... had sex.\" Marcie's cheeks flashed just a hint of pink as she smiled and tasted her drink.\n\nChapter Four \n\nOver after dinner drinks they had decided to go for a long walk on the beach and then crash early so they would be fresh for whatever tomorrow had in store for them. It was still pretty light when they went back to the cottages so Joe and Marcie went over to number thirteen and the four of them shared a bottle of wine that Gail had packed. They talked about having dinner with Ki's uncle and about the differences between the resort and the retreat. Then Joe asked, \"Are we walking naked tonight?\"\n\nMarcie surprised them by saying, \"I'm going to start out in my bikini.\"\n\n\"Really, why?\"\n\n\"Believe it or not I'm not quite ready to walk naked. I guess the island magic hasn't kicked in just yet.\"\n\nCharlie looked outside and said, \"Then we might as well walk now and enjoy the sights and even the sunset if we hurry.\"\n\nThen Gail added, \"Thanks Marcie I didn't know if I was going to be able to just go naked right away.\"\n\nThe four of them walked the beach slowly and caught just the last of the sunset almost straight ahead of them. They walked slowly and enjoyed the warm tropical air and while there was still a little twilight left Joe moved up to Gail and Charlie and touched Charlie's shoulder. He looked at Joe and dropped back to Marcie as Joe slipped his arm around Gail. \"Enjoying yourself love?\"\n\nShe leaned against him and let her arm slip around he waist saying, \"This is so peaceful and fantastic.\"\n\n\"Remember when we were at Sinclair Retreat and we took our first night walk on the beach?\"\n\n\"I do remember that night.\"\n\nHis hand moved behind her and as he pulled on her bra strings he added, \"Remember how I took your bra off as we walked?\" \n\nHer hand went to her breasts quickly as she said, \"Oh God Joe it isn't even fully dark yet.\"\n\n\"I know I want to be able to see you.\"\n\n\"Oh God Hon...Joe you're making my heart race just like the last time.\"\n\nHe wadded her bra in his hand and pulled her close to him saying, \"You are so damn sexy. I miss us making love.\"\n\n\"I do too. I know we've been doing the right thing but I've missed it.\" Then he untied the bow at her right hip. In a louder tone and with a touch of panic in it she said, \"Joe it's too light honey.\" He smiled at her and untied the other side and coaxed it away from her. \"Damn you it's so hard for me to say no to you. What if somebody comes along now?\"\n\n\"They will see a beautiful example of a woman in her prime. A sexy and desirable woman.\"\n\n\"Thank you. What about you though?\"\n\n\"If you take my suit off you're going to see my cock that you've made so hard.\" She stopped and smiling up at him she pulled his suit down and he stepped out of it. \n\nShe put her hand on him and told him, \"You really are so hard.\"\n\n\"And when you touch me it just gets even harder.\" Before he could say anything she stopped and said, \"Oh damn, somebody just came out onto the beach down there. If they turn this way they'll see us naked and your very hard cock.\"\n\n\"I don't care if they see me and if they see you all they can do is look at you and appreciate how hot you look.\" The couple turned the other way and walked away from them and Gail let out a sigh of relief. That relief was short lived however because they changed their mind and started toward them.\n\n\"Oh God Joe hold me close,\" and he did as her hold on his waist tightened.\n\nNeither of them had any idea what Charlie and Marcie were doing behind them but at the moment they didn't even think about them in passing. \n\nAs the couple neared them Joe whispered, \"As they get very close I dare you to grab my cock. I dare you.\"\n\n\"No. My God Joe I'm already a basket case.\"\n\n\"I dare you honey. I dare you to wrap your hand around my cock, the cock that stays hard for you. I dare you to do that Gail.\"\n\nHer whispers were a little louder as she said, \"I will not, not for anything. I can't do that.\" And then her hand went around his shaft and she even moved it just as the other couple drew close and the woman's eyes went to Joe's cock and Gail's moving hand. The woman's head turned and both of them continued to stare as they passed. But Gail's hand stayed with Joe's cock well beyond the moment when they passed. She stopped and turned to Joe and smiled. \"Damn you, you're turning me into a slut.\" Joe just smiled and kissed her and Charlie and Marcie stopped and watched before she asked, \"Gail were you holding Joe when they passed us?\"\n\nGail was still looking up at Joe as she said, \"Yes and it's your husband's fault. He dared me to do that. He almost taunted me to do that.\"\n\n\"That woman was so busy looking at you two that she almost fell as she passed us. Can't you two behave?\"\n\n\"Apparently not.\"\n\nThen Joe said, \"Want to see how much we can't behave honey?\"\n\n\"Now what are you up to?\" He moved into the water a couple of feet taking Gail with him and then turned her back to the beach. \n\n\"Gail honey lie on your back.\"\n\n\"In the sand?\"\n\n\"Yes. Put your butt on the wet sand at the waters edge and lie back. You and I are going to make love right here and right now.\"\n\n\"Joe now I know you're crazy.\"\n\n\"Gail honey I have to have you baby and I don't want to wait until we go back.\" She submitted herself to him then and he helped her onto her back and she let her head drop onto the dry sand as she looked up at him. \"Open yourself for me love.\" She spread her legs wide and using her fingers pulled her pussy lips back as he knelt in the water before lowering himself onto her as she guided him into her as Marcie and Charlie looked on.\n\nIn moments Gail moaned and whispered, \"Oh yes Joe, give me your cock honey. Oh fuck yes God I've missed you baby.\" Joe started pumping into her faster and Gail's legs went wide and then up in the air as his hips bounced up and down and he lowered himself onto one arm so his other hand could caress a breast and pinch her nipple. Gail no longer cared where she was or who might be watching as she mumbled and pushed up on his down thrusts. \n\n\"Damn Gail honey you've got me so hot I'm going to cum.\" She didn't answer with words but instead put her feet back in the water and bounced her hips up and down as he increased his pace and her orgasm hit her. Her head went back as her eyes closed and all she could do was grunt and bear down like she was giving birth as Joe stopped and until her spasms eased. Then Joe renewed his efforts and a minute later he was giving her his offering as she had a second small climax. He lowered himself onto her then and they kissed hard as their passions continued to hold onto them. As they settled down then they smiled at each other and each said wow in unison. It was then that they realized that couple had returned and had been watching them make love. Gail's eyes locked on them for a few seconds but she was still too far gone to show any reaction beyond that. Joe looked down at her again and just smiled and whispered, \"Oops,\" and then kissed her lightly and helped her up. Then as his spunk slowly seeped out of her he led her into the water far enough that she could rinse herself off before they shared another kiss still almost waist deep in the balmy salty ocean. When they turned toward shore the other couple had moved on but Charlie and Marcie were standing there smiling at them.\n\nOnce together again Marcie said, \"Well you sure gave them quite a show and us too for that matter.\"\n\n\"Marcie your husband is so damned evil...and sexy and outrageous. There is no way I would have ever agreed to do something like that had he asked me in advance.\"\n\n\"I know what you mean, he's talked me into a few things that amazed me too. Like those first photos in the nude just before the two couples caught us.\"\n\n\"Did that couple say anything?\"\n\n\"Not to us but I could hear the guy say something like, \"Shit this is awesome.\" Gail tried to shake and brush some of the sand out of her hair and then the foursome headed back toward home.\n\nAs they walked Gail said, \"God having my feet and legs in that warm water was so sexy and different, I just loved how that felt.\" Then looking at both Joe and then Charlie she said, \"I'll say this right now, I want to do that again before we go home.\"\n\nAs they got near the cottages Marcie said, \"I'm staying with Charlie tonight because we have some catching up to do. We'll see you two in the morning, and they headed for number thirteen as Joe and Gail went to number twelve where they took a shower together to rinse off the sand and salt. With the water still flowing over them Gail said, \"Joe I still love you and I'll never forget tonight.\"\n\n\"I won't either and I love you too. That will never change.\"\n\nAre we getting ourselves into trouble again?\"\n\n\"No. We'll go home and resume our normal lives but we'll do that with more sweet memories to share and I'll love you just a little bit more.\" Then they settled between the sheets and fell asleep in each others arms.\n\nChapter Five\n\nWhen the four lovers finally appeared outside in the morning Marcie smiled and said, \"Morning lovers.\"\n\nGail smiled and said, \"And I suppose you're going to tell us that you and Charlie didn't mess up the bed last night.\"\n\n\"Oh we messed up the bed alright. Ready for breakfast?\"\n\n\"We're starved.\" Breakfast was accompanied by discussion of what Joe and Gail had done on the beach and about the watching couple and then they decided to go find that little shop where Joe and Marcie had bought so much.\n\nLike the resort the shop had felt the sting of a down economy and had everything on sale. Gail and Marcie spent a lot of time in that little shop. In fact they bought so much they had to leave it so their purchases could be mailed home to them. From there they went back to the cottages and rested and then went to lunch. They sipped their iced tea and Joe produced the map of the island. As he spread that on the table Marcie looked and said, \"Damn Joe, look at that. Our so called isolated and remote beach is just beyond this beach, separated by this long formation of lava.\"\n\n\"Well it is still isolated by that rock wall. Look it's called the west Angel's Arm. Oh and look at the other end there's another one called the east Angel's Arm, that's pretty cool. It's like the resort is embraced with angel's arms.\" Then he looked at the little road that Ki always took as he left the cottage going toward the isolated beach. \"Look, the road has to go inland for maybe a mile to get around the other end of Angel's Arm. With this map we won't have any trouble finding the beach at all.\"\n\n\"So those people we saw over there just swam around the end of the arm instead of riding electric cars to it.\"\n\n\"Probably but I like it better by car because that has to be a pretty long swim.\"\n\n\"I'm sure it is. Let's ride out there after lunch okay?\" There was no dissenting vote and lunch was finished quickly. To get to their destination they headed west with their little car loaded with towels blankets and cold water, away from the resort area and into groves of palm trees and other vegetation and scrub growth and followed the newly installed signs. It was now called Rock Beach. For the uninitiated they might assume that the beach was littered with rocks but of course that was far from the truth. \n\nThey left their car in the shade and as soon as they reached the beach Charlie stopped and said, \"Marcie this must be where Joe took the first pictures of you naked.\"\n\nShe smiled and pictured that day in her mind. \"Yes but how did you know?\"\n\n\"You said it happened right after you arrived and I recognized that outcropping of lava.\"\n\n\"You're pretty sharp.\"\n\n\"I think you should pose for me this time.\"\n\n\"You mean like this,\" and she struck a silly pose and smiled.\n\n\"Very funny. I mean in the nude of course.\"\n\n\"Okay but I think Gail should join me this time.\"\n\n\"Great idea, get naked Gail.\"\n\n\"Charlie you have no class or sensitivity.\" But in the end she stripped and joined Marcie while Joe and Charlie took their picture as they posed. \n\nThen Joe retrieved the sun lotion and handing it to Marcie said, \"Put some on Gail for us.\" Marcie hesitated for just a moment and then smiling at Gail did his bidding by starting with Marcie's back. Then Charlie grabbed the beach blanket and spread it close to them just in case they wanted or needed it.\n\nAs the lotion was gently rubbed into Gail's back she stood there with a sublime smile and softly said, \"That feels so good Marcie.\" Then after Gail's legs were done Marcie did her butt and Gail moaned softly and whispered, \"God I can almost imagine what it was like for you with Ian and Joe.\" With that Marcie smiled and slid her slippery fingers between her butt cheeks and teased her, touching her rosebud for just a few seconds before stopping.\n\n\"Okay now your front but you may want to lie down.\" Gail looked at her but Marcie just looked back at her and smiled. An older couple down at the waters edge looked at the four of them as they made their way west but didn't stop. Had they done that they would have been treated to a very erotic scene.\n\nMarcie remembered how Joe and Ian had done her and started at Gail's feet and worked up well above her knees. Then to her arms and shoulders and her belly before spending quite some time on her breasts and blatantly teased her and pinched her nipples. Gail was looking up at Marcie and in a voice too soft for the guys to hear asked her, \"Marcie are you going to...I mean...\"\n\nShe whispered in return, \"Yes I am.\"\n\n\"Oh God,\" and she lay back and closed her eyes as Marcie's hands worked their magic. Gail sighed when she felt one hand going down her belly as the other one continued to tease her breasts but then they stopped. She opened her eyes just in time to see Marcie leaning down and they kissed. At first light pecks on her lips and then longer tender kisses as Marcie's left had resumed its travels downward. Just as those fingers reached Gail's mound Marcie kissed her harder and their tongues enjoyed a dance of building passion. \n\nJoe and Charlie had moved closer and they could now hear the whispers that the women were sharing. With eyes closed she whispered, \"Oh God Marcie don't stop, you are so good.\" When Marcie's fingers finally invaded \n\nGail's gates to paradise her legs opened wide and her hips tipped up slightly encouraging Marcie's continued teasing. Gail was now being kissed deeply as Marcie's hand teased and parted those puffy lips and then slipped in as deeply as they could go as Gail broke the kiss and whispered, \"Oh fuck yes...God that feels good.\" When she opened her eyes she saw both Joe and Charlie very close to her but by that point it didn't matter anymore. In fact she focused on the men in her life as Marcie touched and teased her clit and her breasts again.\n\nMarcie was doing all the right things it seemed. Had she not been using generous amounts of sun lotion she would have used her tongue on her best friend. She no longer even cared what the guys would say or think. She wanted to taste and please her friend completely. Instead she worked her fingers over and around Gail's clit and then abandoning her breasts Marcie went back to kissing Gail deeply ignoring the men totally. Then once again Gail broke the kiss and said loud enough for all t hear, \"Oh God Marcie it's coming...yes oh fuck...\" and it slammed into her and Gail's body locked up as Marcie continued to tease her lips but stayed away from her clit. The three of them watched Gail as her orgasm washed over her and took her body hostage for several seconds before releasing its hold on her. \n\nIt took some time for her to recover and feel like getting to her feet again and by then Marcie had put lotion on herself. They only had a couple of hours before they would have to go back and get ready for dinner with Ki's uncle so she didn't want Gail to feel like she had to reciprocate, though that's just what Marcie would have liked.\n\nJoe and Charlie stripped naked then and the four of them walked along the beach. It seemed like they were the only ones naked and though the beach wasn't busy at all, those that were there studied the four naked people walking past them. Gail put her arm around Charlie's waist and said, \"Honey can you believe what we're doing right now? People look at us but not like they disapprove at all.\"\n\n\"Hell with what little those women are wearing they might as well be naked.\"\n\n\"You're eyes are going to be so red and tired by bedtime tonight.\"\n\n\"It's well worth it honey. Between you, Marcie and the other people I don't know which way to look from on second to the next.\" He slowed his pace until Joe and Marcie were well ahead of them and asked her, \"How was it with Marcie?\"\n\n\"Couldn't you tell?\"\n\n\"I mean...well have you and Marcie done that when Joe and I weren't around?\"\n\n\"No but as you could tell she's good.\"\n\n\"That was so damn hot I almost had to jack off while I watched you two.\"\n\n\"Wouldn't that have been a sight for somebody walking by and see.\"\n\n\"About like that couple that watched you and Joe.\"\n\n\"God that was so erotic for me and I still can't believe that happened.\"\n\nWith Charlie and Gail well behind them Joe asked Marcie, \"What made you decide to do Gail?\"\n\n\"It just...I don't know, I just decided I wanted to.\"\n\n\"You sure got to her.\"\n\n\"I did didn't I and I didn't even use my tongue on her...you know.\"\n\n\"You're so funny. You just gave Gail a whopping climax and yet you couldn't say you didn't even eat her pussy.\"\n\n\"That just sounds so crude for some reason.\"\n\n\"Okay you didn't make oral love to her.\"\n\n\"That's a little better.\"\n\n\"But you thought about it.\"\n\n\"I thought very hard about it in fact.\"\n\n\"I just hope I'm there to see it that. Like that day on the blanket when Gail went down on you.\"\n\n\"Why is it guys love to see that and yet guys won't even kiss each other most of the time let alone suck each other.\"\n\n\"I don't know it's just different for some reason. I hope that isn't something you want to see because this damn island just might make it happen and I'm not eager to go there.\"\n\nCharlie and Gail caught up with them so that ended that conversation as they turned around and headed back toward their car. As they walked Gail pushed Charlie ahead and said, \"Keep Joe company for a few minutes while Marcie and I talk.\"\n\n\"Maybe we want to hear too.\"\n\n\"Maybe we don't want either of you to hear.\"\n\n\"Well shit,\" but he smiled and joined Joe several yards ahead.\n\n\"Okay Marcie talk to me. You had me flying and I loved it but what possessed you?\"\n\n\"It goes back to that day when we talked about it and kissed and touched each other remember?\"\n\n\"Of course I remember, and I remember going down on you that day and made you cum.\"\n\n\"I won't ever forget that either. In fact I'm a little surprised we haven't explored any of this sooner.\"\n\n\"I think the island has already started to provide for us. That's what encouraged you to go through with it.\"\n\n\"Well part way through with it. I wanted to do more for you.\"\n\n\"I hope you decide to try again one day too.\"\n\n\"God, isn't this island thing unbelievable?\"",
        "\"It's almost scary.\"\n\n\"You still have some fantasies don't you.\"\n\n\"Yes damn it. I tried to pretend I had none the last time but that didn't work. The problem is some of my fantasies just might cause a problem or two, if not here then later. I hope those fantasies don't come true in fact just for that reason.\"\n\n\"If you really have those thoughts, however deeply you try to bury them the island will know. It may or may not act on them but you have no secrets.\"\n\n\"Crap, I hope you're wrong.\"\n\n\"You're not going to tell me right?\"\n\n\"If I did that would just guarantee that all of that would happen for sure. Now what about you?\"\n\n\"Oh I have a couple of things I'd like to see happen, but nothing very far out.\" They hadn't been at Rock Beach very long but they at least had a taste of it and four very happy vacationers went back to their cottages to get ready for dinner.\n\nChapter Six\n\nKi was at the restaurant door to greet them and after sharing greetings and hugs he led the group to the private dining room where Ki's uncle was waiting. Ki named each one in the group of four and said, \"This is my uncle Sinclair Sable, my surrogate father and mentor and without him I wouldn't have the honor of even being here on this wonderful island.\"\n\nMr. Sable was the epitome of style and cordiality. After shaking hands he said, \"It's so nice to meet all of you at last. Now I'm sure you're all wondering why I asked you to dinner. Well it's very simple really. It's because Kingston has mentioned you so many times and has proclaimed you four as being almost as much in love with this island as we are. I hope this week fulfills all of your hopes, dreams and desires.\" He gestured toward the table and said, \"Make yourselves comfortable and we'll talk over wine before dinner is served.\" With him at the head and Ki at the other end the six relaxed and talked as they tasted their wine. It was a casual atmosphere very conducive to small talk and no small amount of levity because Uncle Sinclair was full of jokes and stories. Stories of past guest accidents and events that were humorous at the least, and even outlandish at times. Of course he made those hapless guests out to be wonderful people who just happened to be caught up in awkward situations. \n\nMarcie offered, \"I just hope that we don't end up adding to your inventory of outlandish tales, or if we do that we have a great time with it as well.\"\n\n\"From what Kingston tells me I have no doubt that you will have some outlandish moments but I won't likely ever be aware of them. Oh good, dinner has arrived,\" and two servers appeared and for the next half an hour or more saw to their every need. There was a platter of some kind of broiled fish that because of the white flaky and sweet taste put Joe in mind of scrod but he was only guessing. There were fresh fruits and vegetables and warm heavy breads but no potatoes of any kind. All in all a very healthy meal.\n\nWith a sweeter after dinner wine served, Mr. Sable held up his glass and said, \"This sweet gift from the gods comes from Africa and I hope you like it,\" and the six of them tasted and heartily approved of the smooth white wine. For the first time he used his nephew's nick name saying, \"Ki told me that his acting as a houseboy was much appreciated.\" \n\nMarcie was quick to say, \"Yes that is true. I'm at a loss for words what a wonderful impression that made on us and in fact and we were disappointed to learn later that was a one time event.\"\n\n\"Interesting.\"\n\nJoe added, \"It would be nice if say some college age kids could be trained and be on call. If you had guests that requested a houseboy or some other title one could be provided without having to have somebody on a full time basis.\"\n\n\"That's also interesting and a possibility. To perform what services?\"\n\n\"Well like Ki did for us, bring us meals once in a while, take us shopping or to Rock Beach. Answer questions and provide tips like say...the best place to sun or perhaps a safe topless area, that sort of thing. It would be a great opportunity to give the guest the feeling that they were getting information that others might never hear.\"\n\n\"Marketing.\"\n\n\"That's it. There are many possibilities there. Bring wine to the cottage or like Ki did for us make a basket of snacks or even meals to have in some little hideaway someplace.\"\n\n\"All very good ideas and thank you for those suggestions. I have...we have a small island about a mile to the southwest of us. In fact it's very small. About a half of a mile long by about a quarter of a mile wide. It's a nice green gem in the middle of the dancing blue sea. The sandy shore is about a hundred feet wide at the most and maybe fifteen feet at it's smallest point on the far side.\" He paused to let that image settle and then added, \"But unfortunately from that sand the island rises very quickly and steeply and certainly not a place that anybody would want to hike into. Also there is no fresh water there or even very many palm trees so there is very little usable shade. A beautiful but not very usable piece of solitude. In fact I sometimes take my boat out there and just walk around the island and think about everything.\"\n\nGail was staring at him as she listened and then said, \"That sounds so awesome. To be able to just walk along and not worry about anything beyond where you'll put your foot next.\"\n\nHe smiled and said, \"That's it exactly. Have any of you ever done any boating?\" All four of them admitted they had, Charlie and Gail on an eighteen foot sailboat and Joe and Marcie on houseboats soon after they were married.\n\n\"Would the four of you like to take my boat over and explore the island, say tomorrow?\" He had four very happy and surprised faces staring at him. \"Ki would you mind making that happen?\"\n\n\"Of course not Uncle. I'll fix them with a basket of goodies so they don't get too thirsty or hungry. Just be sure you're back here by sundown at the latest or you'll never find your way back. It could get pretty serious for you if that were to happen.\" \n\nThat set off more conversation and then as they all prepared to leave the dining room Charlie asked, \"How hard would it be for you to say have a small launch or boat of some kind that could take guests out there for a...a primitive experience for a few hours. They could be shuttled out there and provided with some kind of shade device and a basket of goodies as Ki called it and for that service they could be charged several hundred dollars. Say one set of guests on one side and another set on the other side. Still very private for each couple or group and that doubles the income. Two groups in the morning and two groups in the afternoon for example.\"\n\nMr. Sable put his hand on Charlie's back and said, \"Now that sounds every bit as interesting as having houseboys.\" Then just as Ki opened the door Uncle added, \"I'll tell you what I'll do. If we do implement your suggestions the four of you will come back here for a week as our guest. That's the least we can do for you. This just might have been a very profitable dinner for the resort and we thank you.\"\n\nJoe said, \"Thank you Mr. Sable, you've been a very tolerant and gracious host and we've thoroughly enjoyed this evening.\"\n\n\"My pleasure. Who knows we just may have to do this again one of these days.\"\n\nAs soon as they were outside Marcie asked, \"Do you think they really will consider our suggestions?\"\n\nCharlie said, \"Who knows but at least he didn't laugh at us or shrug off our ideas.\"\n\nGail added, \"I think he was truly impressed with our suggestions. If not he is a very good actor.\"\n\n\"Maybe Ki will have something to offer before we head home.\"\n\nKi caught up with them at their hot pink fringed car and said, \"I almost forgot. When you come up for breakfast in the morning I'll work out the details for your exploration of the island.\"\n\n\"Ki that was so very generous of your uncle. I hope he understands how much that means to us.\"\n\n\"I'm sure he does and he was very impressed with the four of you.\" Whether or not that was true the four of them were very happy to hear that.\n\nChapter Five\n\nIt was almost nine o'clock when they reached their cottages so darkness was rapidly catching up with them. As they got out of the car Marcie said, \"Let's get in the spa before we walk on the beach.\" The other three smiled and in a short time the four of them were naked and easing into the very warm bubbling water. It was less than fifteen minutes later before Joe was teasing Marcie and Charlie and Gail were similarly occupied and only minutes after that before the four of them were on Joe and Marcie's bed making love next to each other. That was yet another new experience for them. All that they had experienced and shared and never had they shared a bed like that. They fueled each others fires so Joe and Marcie might stop for a minute and watch their friends tease each other or make love and then maybe Charlie and Gail would watch Joe and Marcie and they didn't stop until the four of them were exhausted and fell asleep. The bed was barely big enough for them but they were so tired it didn't matter.\n\nJoe and Charlie were the first to be showered and dressed in the morning and standing outside waiting for the women. As they made small talk another couple came down the walk and Joe said softly, \"New arrivals. See how they're checking everything out?\"\n\n\"Yeah and they're even more pale than we are.\"\n\n\"Good morning,\" said the guy as they neared. \n\n\"Morning,\" Joe gave back. \n\nThen as Gail and Marcie joined them the woman asked, \"Have the four of you been here long?\"\n\nGail told her, \"Just a couple of days, I gather you just got here.\"\n\nShe smiled and said, \"Yes and we hope to see a lot and get a lot of sun.\"\n\n\"Well you will get a lot of sun and I predict you two will have an amazing week.\"\n\n\"Have you been here before?\"\n\n\"Yes, either here or at the place on the other side of the island.\"\n\n\"Lucky you. Got any suggestions or tips for us?\"\n\nGail looked at Marcie and the said, \"Depends on what you like to do.\"\n\nMarcie told them, \"If you like to snorkel or go to the spa or go golfing they have all of those things and more.\"\n\n\"No we want to see the island and enjoy the whole tropical experience.\"\n\nThe guy's eyes were taking in Marcie and Gail in their bikinis with the token skirts over their hips and then looked at his wife's conservative bikini but didn't comment.\n\nGail offered, \"Well I better warn you that if you walk the beach late in the day or even more so as it gets near dark you'll likely see some people walking naked or nearly so.\"\n\nThe guy's eyes went wide and he said, \"Really?\"\n\n\"Oh yes. We were on our way to breakfast so if you'd like to join us maybe we can give you some more tips.\"\n\nHe didn't bother to check with his wife and said, \"Yes and thank you.\" The four was now six and they all walked up to the restaurant together. \"I'm Brad and this is my wife Amber.\" The foursome introduced themselves and on they walked and talked about the island. By the time breakfast was over Brad and Amber knew about Rock Beach and that more often than not the four of them were naked at the very least. It was that comment about the very least that really told the story because Amber smiled and nodded. She now knew a lot more about their new friends.\n\n\"We're in cottage number ten so we're not far from you.\"\n\nMarcie leaned toward Brad then and said in a stage whisper, \"I better warn you then that you may see all four of us naked and walking toward the beach about dark.\"\n\nBrad was nearly speechless but managed to smile and then say, \"Then I just may have to camp out and watch for you.\" The island was going to provide for their new friends without doubt. Marcie felt a twinge between her legs when she thought about the possibility that she might get to tease Brad once he'd had time to be affected by the island a little more.\n\nBut then to Marcie's surprise Amber looked at Charlie next to her and asked, \"So does that mean you and Joe would be naked too?\"\n\n\"You can count on that.\"\n\n\"Then I'll just camp out there with Brad.\" The island was setting the stage for all of them it seemed. Joe and Charlie used the restroom and then as they rejoined the group Ki approached Brad asked, \"Is there someplace here to buy things...like bathing suits.\"\n\nAs the foursome smiled Ki said, \"Yes and give me a minute and I'll have somebody help you find it.\" He talked into his little radio and seconds later a young woman appeared and took care of Brad and Amber as Ki turned to us. \"Okay are you ready for a day in the sun?\" With four yeses, he said, \"Listen rather than you worry about running Uncle's boat or getting lost I'll run you out and...\" Looking at his watch continued with, \"It's just past ten now so say I come to the island and pick all of you up at three. That would give you time to explore the island and to rest before dinner. Oh and I have your baskets ready and just in case you forgot it I added a bottle of sun lotion.\"\n\nBoth women kissed and hugged him and Marcie added, \"Ki nobody will ever be as good as you are, nobody.\"\n\n\"Thank you. Now remember to apply it as soon as you get there and be liberal with it. Also remember to reapply it every hour or two or you will get burned and your week will be ruined. I've seen that happen far too often.\" \n\nGail and Marcie glanced at each other and then said, \"We'll be sure to be very careful and thank you for worrying about us.\" The five of them managed to squeeze into Ki's car and they left passing the beachwear shop as they went. On past that for a few hundred feet then left down a long narrow unmarked lane to an iron gate that Ki opened and a minute later a very nice home appeared.\n\n\"That's our house,\" as he pointed to his right and kept going another hundred feet to a lagoon and stopped. To their right and slightly behind them sat the house and in front of the house a couple of hundred feet was the ocean. \n\nMarcie stopped and said, \"Ki what a beautiful setting.\"\n\n\"Thank you.\"\n\n\"The grounds are gorgeous.\"\n\n\"Uncle designed all of this. The home and the landscaping some thirty years ago.\"\n\n\"He is quite talented.\"\n\n\"I'll tell him you said so.\" In her mind she also added, \"He's very wealthy too.\" Ki retrieved two baskets from the little storage area in the back and the four of them followed him the fifty feet to the launch, which of course was considerably nicer than the shuttle crafts the resort used.\n\nAs soon as they were clear of the lagoon Ki pushed the throttle forward and the craft rose to the task whisking them through the small waves that gradually grew larger as they escaped the protection of the island. \"How long is this boat,\" Charlie asked.\n\n\"Twenty four feet so it's strictly a fair weather craft.\"\n\n\"I'm sure.\"\n\n\"Uncle was trapped on the little island for a whole night once when a sudden storm appeared and prevented him from leaving.\"\n\n\"I take it he was okay.\"\n\n\"Oh yes and he loved the adventure. He moved to the leeward side of the island before the worst of it hit so he was quite safe, just not very comfortable or dry.\" It was only minutes later when he eased the bow against the sandy shore and held it in place with the engine as they all stepped into the shallow warm water. \"Oh and if you go in the water don't go far because it gets very deep very quickly here. This is just the eroded tip of a very old volcanic eruption so the sides slope quite steeply.\" He backed the craft away and as he made the slow turn he waved and told them to have fun. Then slamming the throttle to the wall the boat lurched forward and shot into the coming waves throwing spray to the sides as he sped for home. They were now stranded on that large circle of sand, far from anybody.\n\nThey stood there and just looked around. Sable Island could be seen fairly easily but not with any detail beyond the hint of lush green growth and the light colored sand that looked white from where they were.\n\n\"Okay,\" Joe said, \"Time for copious amounts of lotion and then let's go exploring.\" He quickly grabbed Gail and said, \"Honey I'll do you this time okay? If you and Marcie do each other it might be a long time before we go anywhere.\" \n\nShe smiled and asked, \"Jealous?\"\n\n\"No I loved watching you two but I have plans for you later.\"\n\n\"Oh good.\"\n\nThey put the baskets close to the only shade they saw and that was just a small patch where the sand abruptly stopped and the forest began. Then they each stripped and quickly put lotion on themselves and struck out on their little hike. They were almost halfway around when they stopped and looked at another island in the distance. All they could make out was a gray green shape so they knew it was quite far away. Then on they went walking slowly. At first they had talked almost constantly but now they were each slipping into their own thoughts and walked on in silence absorbing what they were experiencing. Then Marcie said, \"I still can't believe we're here and we have the whole island to ourselves. We can say and do whatever we want without worrying that somebody will overhear us or look at us with disapproval.\n\n\"Joe put his arm around her and said, \"Honey nobody in their right mind would stare at you with disapproval.\" She smiled and kissed his side and said thank you.\n\nThen Gail said, \"You know what? I kind of miss not having anybody here to see us naked.\"\n\n\"Actually I do too.\"\n\n\"But,\" Joe said, \"In the middle of the day none of us would be likely to make love on the beach. Here we can talk as loud as we want, walk naked and in the open and even fuck in the open. That was one word they seldom used and it seemed to have a harsh quality to it even to Joe. \"Sorry, that was crude but you get my point.\"\n\nGail slapped his ass and said, \"Yes that was crude but we still love you and understand your point. So does that mean that you are going to...fuck me?\"\n\n\"Unless you run away from me screaming.\"\n\n\"We both know that won't happen, especially when I look between your legs and see what you have for me.\"\n\nMarcie looked up and gave Charlie a coquettish look and asked, \"So are you going to...you know, fuck me too?\"\n\n\"Only until I collapse with fatigue.\"\n\nChapter Six\n\nJoe whispered something in Marcie's ear as they approached their starting point and looked at Charlie. There was no visible signal from Charlie but he put his arms around Gail and led her to the shoreline and pulled her down with him. She thought it was going to be her and Joe but she went along with it as Charlie lay on his back on a blanket. Then pulling her to him he said softly, \"I want you now baby.\" She smiled and lowered herself to him but with no foreplay it took her a minute to get him well into her. She bent down so they could kiss and a second later she felt a warm wet hand on her ass and realized it was Joe behind her. With his hand and fingers well lubed with sun lotion he touched and teased her rosebud as she froze in position. She nearly panicked as she realized one of her fantasies was about to come true. One of them she didn't even know if she could go through with. As Joe eased a finger into her tight little anus she whispered, \"Oh God Charlie.\"\n\n\"Try to relax honey. I know you want to try and we have hours so there's no hurry and Joe will be gentle. \n\n\"I want him in my ass so much but I don't know...,\" and she felt another finger enter her backside as she stopped talking and closed her eyes. Both Joe and Charlie touched and teased her breasts as Joe slowly fingered her ass until he felt her relaxing and coaxed a third finger into her. Charlie had told Joe that the two of them had tried anal sex a few times so other than fear there was nothing to stop their plan for her. Charlie moved his hips just a little bit so she could feel his cock move and she moaned very softly as Marcie put lotion on Joe's cock and watched the threesome. Gail moaned again and slowly moved against Joe's fingers so he brought his cock up and put the head where his fingers had just been. She again stopped all movement so Joe put pressure to her tight brown ring and waited patiently. Little by little as Charlie teased her breasts Joe's cock moved forward just a little. Then surprising all of them Marcie straddled Charlie's face so he could eat her and the two women kissed deeply just as Joe's cock slipped into her as Gail stopped kissing and whispered, \"Oh my God Marcie Joe's cock is in my ass.\" That was the last thing she said as Joe and Charlie moved as much as they could and Gail was soon mumbling. Marcie kissed her once more but then moved so Gail could bend down farther and make it easier for the guys.",
        "Gail was staring into Charlie's eyes as Joe's cock moved faster into her. Charlie could feel Joe's cock in his wife and that was almost as exciting for him as it was for Gail. Charlie moaned and said, \"I'm close honey. Joe's cock is rubbing up and down my cock and I'm going to...,\" and he lost it as Gail did her best to move her hips to milk her husbands cock and receive his juices. Joe kept going but her very tight ass was more than he could resist and a second later pushed deep as his cock pumped and he gave her his offering. Gail had enjoyed at least two orgasms or one long one it was hard to tell. They didn't move for several seconds as Gail slowly came down and lowered herself on to Charlie to rest.\n\nJoe got to his feet and went into the water to rinse off as Marcie joined him. She took his cock in her hand and bathed him before they fell into each other's arms. \"Marcie honey I love you so much. Thank you for letting us do that for Gail and I promise you will be rewarded.\"\n\n\"I'm counting on that lover. When did you and Charlie cook that up?\"\n\n\"In the restroom at the restaurant before we left.\"\n\n\"Very clever, what brought that on?\"\n\n\"Charlie came up with it actually. You're next.\"\n\nShe smiled and said, \"I don't think so. And for sure not for awhile.\"\n\n\"Yes my love. You're right, not right now but soon.\"\n\nGail and Charlie joined them and she bathed herself before going to Joe and said, \"I love you.\"\n\n\"I love you too babe. You okay?\"\n\n\"I'm beyond great but I'll never be the same thanks to you and my husband.\"\n\n\"Good.\"\n\n\"Yes you were.\" She turned to Marcie and embraced her and said much the same thing. \"I love you too and thank you for allowing that to happen.\"\n\n\"You're welcome. Judging from what I saw I'd say you liked that.\"\n\n\"It was incredible. If that happened very often I'd be ruined. I'd never want to settle for just one cock again.\"\n\nCharlie put his arms around Marcie and said, \"You're getting a little red love, let's go get you lotioned up.\" He kept his hands on her naked hips and followed her up to the blanket and the lotion and said, \"Lie on your belly and I'll take very good care of you.\" She just smiled and did as she was told. As soon as she was on the blanket he motioned to Joe and Gail with the lotion bottle. Gail whispered in Joe's ear and then the three of them went to work on her with Charlie rubbing a generous amount of lotion onto her upper back and arms while Joe took care of her waist and butt and Gail worked up from her feet. All Marcie could do was lie there and moan her appreciation repeatedly, especially when Joe's fingers slipped between her ass cheeks and he teased her anus and slipped a finger into her. \"Oh God,\" was all she could manage and she didn't move.\n\nThey finally had her turn over and she was flushed with excitement. She lay back and again they coated her with most of what was left of the lotion. Then as she moaned and tried to lie still Charlie kissed her and then Joe kissed her. They took turns as their hands felt and teased her breasts. Then she felt a tongue taste her vertical lips. She opened her eyes and saw both Joe and Charlie still there so she knew Gail was between her legs She opened herself as wide as she could to help and felt like she wanted to faint. The hot sun was pouring down on them and she could smell the sweetness of the ocean drift up to her as she was attended to by all three of them. Then she reached for Joe and Charlie's almost hard cocks. One in each hand, very close to her fantasy. The only difference was Gail was eating her rather than another guy fucking her. She managed to moan and tilt her pelvis up to Gail as she felt a tongue slip back and forth over her clit and fingers enter her pussy. Then she opened her eyes and stared at Joe as she said, \"Oh God yes...oh my God I'm cumming honey..,\" and that's as far as she got. As she stared at Joe her orgasm hit and rather than stop, Gail rode her rocking pelvis and kept her fingers pumping into her best friend. Then leaving her clit alone Gail continued to tease her for a few more seconds hoping to prolong her climax...and it did. When it was finally over Marcie just lay there as Joe put her sunglasses on her.\n\nChapter Seven\n\nIt was almost time for Ki and the four of them had waded into the water to rinse off again and were standing there when the boat came into view. Joe and Charlie looked at the women and they just smiled and stood their ground so the guys did too. If it wasn't Ki somebody was going to be very surprised. It wasn't Ki.\n\nShe eased the boat to the sand and tried not to stare at the guy's cocks but they were still past half mast and once they saw her in her tiny bikini they weren't about to get soft anytime soon. She recovered from her surprise and said, \"Ki asked me to come pick you up, I'm Alana and he didn't warn me that I might be surprised.\"\n\nJoe smiled and said, \"And he didn't warn us that a beautiful woman would be here to pick us up.\"\n\n\"I think Ki is having some fun at our expense.\"\n\n\"Are you going to make us get dressed for the ride home?\"\n\n\"We're good to go as far as I'm concerned.\" \n\nAlana liked to go fast. We cut through the waves and all of us got a fair share of spray from the bow bouncing in the swells. They waited as long as they could but then dressed and just nicely made it when they came around the end of the island and headed to the main dock at the resort rather than at the house. \"Here we are safe and sound.\"\n\n\"Alana,\" Joe said, \"As much as we like Ki I have to tell you, you're much nicer to look at.\"\n\nShe gave him a cute smile and then said, \"You weren't too bad yourself.\" Marcie just smiled at her husband and led the way from the boat and up the dock. \n\n\"Joe honey she couldn't have been more than nineteen or twenty.\"\n\n\"Works for me.\"\n\n\"Dreamer.\"\n\n\"This island is all about dreams and desires.\"\n\n\"I'm sure even this island has it's limits honey.\" \n\nCharlie added, \"She's the stuff of dreams, wet dreams.\" Gail just smacked his arm and kept walking. By the time they reached the cottages they were ready for a shower and some rest so the couples split up agreeing to meet out front at six o'clock.\n\nOnce again Charlie and Joe were sitting on the little white chairs in front of Joe's cottage waiting for Marcie and Gail when Brad and Amber came in from the beach. Joe and Charlie stood up and openly gazed at Amber as Charlie said, \"Amber if you don't mind my saying so you look so much sexier than the last time we saw you.\"\n\nShe blushed and said thanks and Brad told them about buying her new bikini and some things at the beachwear shop. Joe said, \"Brad I have to compliment you on your taste in women and both of you on your taste in bikinis.\" Amber was just shy enough to be cute as she smiled and thanked him. \"So are you enjoying the beaches?\"\n\nBrad looked at his wife and then said, \"Damn we went to Rock Beach and...and there were two couples that...well one woman was topless and the other one was naked.\"\n\n\"Takes some getting used to doesn't it.\"\n\n\"There was more and Amber is going to have to work hard to get me to go home.\"\n\nCharlie was enjoying Amber's coquettish look and asked her, \"How did you fare?\"\n\n\"It took me a minute or two to accept the idea even though you warned us ahead of time. Oh wait, did you mean did I get naked?\"\n\n\"Now don't tease me. Did you get naked Amber?\"\n\nShe smiled and said, \"No of course not.\"\n\n\"Why not?\"\n\n\"What do you mean why not?\"\n\n\"I dare you and Brad to walk the beach tonight.\"\n\n\"Why? Oh that's right the four of you...,\" and then she blushed again.\n\n\"Now the last time you said you were going to camp out and catch us naked.\"\n\n\"I was just kidding.\"\n\n\"Then I dare you to walk with us tonight.\"\n\n\"No I can't...I mean you...I'd see you...\"\n\n\"You'd see all of me, Joe and both women.\"\n\nBrad smiled and put his arm around her and said, \"I think we should join them.\"\n\n\"Brad are you crazy. You want them to see me naked?\"\n\n\"When in Rome and all that.\"\n\nShe smiled at Joe and Charlie and then said, \"Brad and I better go back to the cottage and have a talk.\" \n\nAs they walked away Marcie and Gail appeared and Joe said, \"About nine o'clock Amber.\" She turned her head and smiled back at them but said nothing.\n\nMarcie got close to Joe and asked, \"Now what are you up to?\"\n\n\"We just invited them to walk with us tonight. They won't of course but I was having fun teasing her.\"\n\n\"She's still shy I take it.\"\n\n\"She is. I really think she's thinking about it at some level but she blushes even at the mention of nakedness.\"\n\n\"The island will have a hard time with her.\"\n\n\"The island will not be denied though.\"\n\nChapter Eight\n\nThey were just finishing dinner when Brad and Amber came into the dining room and saw them. They waved and Marcie and Gail motioned for them to join their little group. When they got there Brad said, \"You're about done but thanks.\"\n\n\"Join us and we'll have a drink or two while you eat,\" Gail said. Once again half bashful Amber smiled as her eyes danced between the two men before she said, \"If you're sure it's okay.\"\n\n\"Of course, we want to hear about your day.\" With that settled they sat down and conversation flowed. Then Gail asked the twosome, \"So you went to Rock Beach and had a couple of surprises.\"\n\n\"More than a couple,\" Brad added. He looked at his wife and she just sat there and avoided looking at the guys. \"We didn't venture too far because we saw the two women we mentioned soon after we got to the beach.\" Cute Amber looked at Brad and then down at the table because she knew what was coming next. \"Well we went maybe another couple of hundred feet or so and there was a couple that...well they weren't making love but all most. They probably did but we didn't stay to find out. Down the beach farther it looked like there was a pretty good sized group but we didn't see any color so we assumed they were naked. That's when Amber decided we needed to turn around and head back.\"\n\nMarcie smiled at Amber and said, \"You've had quite a day of it then.\"\n\n\"I still can't believe what we saw and I can't even guess what we missed by turning back.\"\n\n\"I don't know if it helps but our first time here I started out in a suit that had more material than what you probably wear to the store back home. I was petrified to wear less.\"\n\n\"Really? What do you wear now?\"\n\n\"Well when or if I wear anything it's a very tiny bikini.\"\n\nShe studied Marcie for a second and then asked, \"How did you get past that fear?\"\n\n\"It wasn't easy but everywhere we looked there were women nearly naked so I was as much embarrassed as I was afraid. I had to either crawl into a hole or do something about it. I'm surprised that you had that little scrunchie bikini on earlier.\"\n\n\"Like you that was hard for me to do but it wasn't long before I relaxed.\"\n\n\"My bikini was almost a thong. Not quite but almost and believe it or not it wasn't long before I pulled my top off as we walked down the beach.\"\n\nThen Joe stepped in saying, \"Her bottoms went next but it was almost dark by then.\"\n\n\"That's when a couple came toward us.\"\n\n\"Oh my God,\" Amber said with wide eyes.\n\n\"Joe held me close to him and we just walked on like it was nothing. What an incredible rush that was too. I've been hooked on being naked ever since.\"\n\nThen Joe added, \"She's had quite a few adventures since then in fact.\"\n\nMarcie just said, \"When we go back us women will let the guys go ahead and we'll talk.\" And that's what they did but not before Brad grumbled about missing out on Marcie's tales.\n\nThe women didn't just walk slower they stopped about half way back and it was fifteen minutes before they rejoined the men looking every bit the innocents. Before Brad and Amber could leave Joe put an arm around Amber's naked waist and looking right into her eyes said, \"Remember, nine tonight for a nice walk along the shore in the moonlight.\" All Amber could do was smile up at him as she felt his warmth pressed against her and her heart raced. Brad finally said they were going to their cottage and rest so with goodbyes and see you later exchanged they headed back to number ten.\n\nMarcie moved close to Joe and said, \"I could almost feel Amber's apprehension when you put your arm around her. I'll bet she's still trying to put herself back together because she kept talking about how being in her bikini and little skirt made her feel totally naked.\"\n\n\"I hope I didn't upset her too much.\"\n\n\"Well she was smiling the whole time, but then you were too.\" They were saving walking on the beach until later so they relaxed in the hot tub instead and talked about Brad and Amber.\n\nCharlie asked the group, \"So what are the chances they will join us tonight?\"\n\nJoe gave it a fifty percent chance at best and Gail said, \"Well listening to her talk I think she wants to join us but I doubt very much that she could bring herself to walk in the nude.\"\n\n\"Okay but what, or rather how will she handle it to see us naked?\"\n\n\"I don't know about that either. I think she's struggling with all of this.\"\n\n\"Then that means at least a part of her wants to experience things like being naked with us or whatever and as we know the island does have a way of making things happen.\"\n\nMarcie said, \"I suggest we start out in our suits tonight because I think there's a fair chance they will join us. Just how well she'll handle it when we do get rid of our suits I don't know but at least that would give her a short time to mentally prepare herself.\"\n\nChapter Nine\n\nIt was right at nine o'clock when Gail and Charlie closed their door behind them and a minute later Joe and Marcie joined them and looked toward number ten but saw no signs of movement. \"Guess they decided against joining us so we might as well strip right here.\"\n\n\"Let's wait,\" Marcie said. \"Maybe they'll find their courage and catch up with us.\"\n\n\"Okay but I'm not waiting long because I don't see them racing to catch up with us.\" Their eyes were well adjusted to the near darkness but they still didn't recognize them until the last minute. \n\n\"We got here just a few minutes early,\" Brad explained, and all four of them voiced how glad they were that they had joined their little group. Charlie and Gail led, then Brad and Amber with Joe and Marcie bringing up the rear and off they went walking along the waters edge. It wasn't long before Charlie was teasing Gail and Joe kept acting like he was going to untie Marcie's top causing her to whisper all too loudly to stop. It wasn't long before Gail's top came off but with her back to Brad and Amber they only saw Gail's top dangling from Charlie's hand. Of course Brad was working at memorizing Gail's almost bare ass so he was doing okay. Then Marcie told Joe, \"Now give me back my top,\" and Brad turned to look without thinking just as her top came off and he saw her breasts. He didn't make any attempt to look away until Amber whispered at him to behave. Marcie could have easily stopped Joe but she wanted Brad and Amber to know she was topless. With Charlie reaching for the ties to Gail's bikini bottom Joe removed Marcie's without them making a sound. Next to go was Joe's suit so they were now very naked right behind their new friends.\n\nMarcie gave Joe a sign and he moved up next to Amber and put his arm around her saying, \"It looks like you two are doing okay.\" She put her arm around him and smiled as she turned her head to say something just as her hand touched his hip where his suit should have been. She didn't stop walking or even smiling but she couldn't get a word out. \n\nShe left her hand where it was on his hip just as Marcie moved up next to Brad and smiled at him. His eyes went to her breasts and then to her nakedness for what would have normally been a very embarrassingly long time but she smiled and let him stare at her. When he finally looked up to her eyes again she showed him her smile and just put his arm around her waist and continued to walk slowly. Then Marcie whispered to Brad that she would be right back and caught up with Charlie and jerked his suit down to his knees before rejoining Brad. It was only about a half moon but there was enough light to see all that Marcie had to offer. As Joe stayed with Amber and let his fingers tease her by picking at her bikini top Marcie slipped her hand into Brad's suit far enough to feel his butt as they walked. Then she just coaxed it down until he had to stop and take it the rest of the way off as his wife looked on in disbelief. While he was picking his suit up Amber looked at Joe and licked her lips as he untied her top and slipped it off of her. Her breasts weren't much different than Gail's or Marcie's but he made over them in whispers as he stared at her and then kissed her softly. \"Oh my God Joe I'm so afraid.\"\n\n\"I understand but it will be okay I promise.\" Gail and Charlie had stopped and turned so they too stared at Brad and Amber in the soft white moonlight. Joe turned her to face the water and stood behind her with his arms around her just under her breasts. \"Amber look at the moon. See how its soft light bounces and reflects off of the water. Feel the soft warm tropical air as it wraps around us and hear the hush of the water as it kisses the sand at our feet. I feel your warm body against mine and under my hands This is something that could never be as enjoyable anywhere else.\" Then his thumbs just touched the undersides of her breasts as he continued. \"My hands want to touch your breasts so much.\" As she stood there her head slowly tipped back until it was resting against his chest and he kissed her neck. \"As we walk remember feeling my hardness pressing against you. It's telling you that I think you are so very sexy and desirable.\" Her hands were back and on his thighs and he could feel her holding onto him as he whispered, \"May I touch your beautiful breasts Amber?\" It took her several seconds but she slowly nodded not trusting her voice to tell him yes and Joe's hands moved up and cupped her breasts in his hands as she leaned back against him even more. The soft veil of darkness was just enough to help her allow this to happen. Her hands moved on his legs very slightly as he touched her nipples and he heard a very soft moan. So soft that he almost missed it even in the quiet of the night. Then he kissed her starting at her shoulder and as he continued up her neck toward her ear his right hand untied her bikini at her hip and Amber made no attempt to stop him. \n\nWith Charlie standing behind Gail and touching and teasing her they watched Joe and Amber as she allowed him to explore her breasts and they gently kissed and Amber open her legs enough for Joe to remove the tiny garment that hid so little of her. She turned to face Joe and with her arms around him they kissed softly before she said, \"We better walk for awhile and I better walk with Brad.\" He kissed her once more and silently moved back to Marcie as she turned Brad to face his now very naked wife. He saw Charlie openly staring at Amber and he smiled, first at Charlie and Gail and then at Amber before he kissed her. Then on the three couples walked in silence while Joe and Marcie shared a kiss and a smile while they walked along bringing up the rear.\n\nAmber continued to be very nervous and Brad stared at Gail's butt as they walked until they finally stopped to rest and turn around. Then Brad didn't know which way to look because Gail and Marcie made sure he had every opportunity to study both of them. Amber didn't know what to do. She wanted to stare at Charlie and Joe's half hard manhood but she tried to be discreet by just grabbing quick looks at both of them. Charlie caught her at it and putting his hands on her shoulders and looking at her he told her, \"Amber honey it's okay to look at Joe and me as much as you want to. In fact we encourage you to do that. Look how hard I am now because of looking at your nakedness.\"",
        "\"I can't believe this is happening.\"\n\n\"All four of us know exactly what you mean and what it's like for you right now.\" He took her hand in his and touched it to his cock and said, \"It's okay to touch it. Do whatever it takes for you to get past your fear or being uncomfortable with us. Hold my cock and look at Joe's. See you've made him hard too.\" She was holding his cock but she didn't move her hand as she asked him, \"We...you aren't expecting us to...\"\n\n\"Expecting us to make love? No but would I like that? I wouldn't just like that, I'd love that. Nobody will force you to make love and that's a promise. I've made love to Marcie many times just as Joe has with Gail and I'm sure that will continue but that doesn't mean you have to join our lifestyle okay?\"\n\nShe nodded her head and looked down as she moved her hand and watched as his cock head shone with moisture. Then she kissed him gently and removed her hand saying, \"Thank you Charlie.\"\n\nHe smiled and said, \"Oh thank you love.\" Gail and Marcie were holding Brad and talking to him as they touched his hard cock and Amber stopped to watch them. Two women were feeling her husband's cock so why wasn't she getting mad and hurt? And how could he have watched both Joe and Charlie touch and caress her with out getting screaming mad? She moved over to Joe again and took his cock in her hand without thinking before kissing him too. \n\n\"Charlie said I could feel your cock.\"\n\nHe smiled and said, \"Well he's right, you can do that anytime you want to. You seem to be getting used to all of this.\"\n\n\"I'm still spinning and in the morning I don't know if I'll even believe that any of this has even happened. My heart is still racing and I can't even think straight but I wouldn't want to be anywhere else right now. Charlie said we wouldn't make lover or at least we don't have to.\"\n\n\"That's right. This is all about doing what we want to do, not what we feel must be done. If I ever have the honor making love to you I want it to be because you want the same thing.\" Her hand was slowly moving up and down his cock as she looked over at Brad and saw Gail all but swallow his cock. Her hand stopped and she stared at them before looking back at Joe before kneeling down and taking him in her mouth. She stayed with him until he stopped her and pulled her up to kiss her. \"I didn't want to but I had to stop you before it was too late. You're too good at that for my own good.\"\n\nEverything could have easily progressed very rapidly but Marcie and Gail stopped what they were doing and told Brad it was time to head back. They walked slowly and very little was said as Amber and Brad tried to absorb what had just happened. Brad just knew that at least part of one of his fantasies had just been fulfilled. He just wished it had happened in full daylight and that he'd had his camera.\n\nThey relaxed through Tuesday morning but after lunch the decision was made to go to Rock Beach for a few hours and that decision would prove to be a life changing event for Brad and Amber. \n\nWhen they arrived they spread out three blankets and put down their coolers and though Joe and Charlie were very tempted to help Amber, each put on their own lotion. They took off to their right just as they always did and it wasn't long before they were encountering a mixture of visual treats. Simple things like topless women or couples wading in the warm waters but it seemed the farther they went the more daring people were. It was Amber, Marcie and Gail's turn to stare when they saw their first naked guy standing near his woman with a near erection. Amber almost tripped as she tried to walk and stare to her right at the same time. \n\nThe whole beach area seemed more crowded than usual and rather than that providing them with more to see, the opposite was true. It seemed the sheer number of people had a dampening effect on the adventurous ones. Much to the pleasure of the guys, they did start seeing more women ranging from topless to fully naked. After they turned around Joe and Charlie reveled in teasing Amber pretending to be untying her top or the strings at her hips. Gail and Marcie had long since removed their tops and about that point their bottoms ended up in their hands. That of course sent Brad spinning and he couldn't seem to get enough photos of his two naked friends from all angles. Joe and Charlie had left their suits on to make it easier for Amber but when Gail jerked Joe's suit down they gave up and were soon as naked as they could get and once again Amber stared. It was a lot different when they walked the last time and she had nothing more than the moon for her to see their cocks by. The cocks that she had taken in her hand. When she remembered doing that she looked at her hands because she could remember exactly how it felt to have two new cocks in her hands at the same time. She remembered how it felt to walk naked and know the guys were staring at her. She looked down and tried to convince herself that she was naked with them before so she should be able to do that again...but she just couldn't. Not in the middle of a bright sunny day. Just watching Gail and Marcie check out her husband's cock was almost overwhelming for her. She liked the feeling it gave her without a doubt but she still couldn't believe it really was happening. Not to Brad and her. Their lives, though good and happy lives, were pretty simple and predictable . They were only on the island because of a gift from her grandmother. One vacation to anywhere for one week. She already knew it was a life changing gift. She just didn't know how true that would be before it was all over. She underestimated how much the island knew about her.\n\nChapter Ten\n\nAs they rested on their blankets they sampled their wine, cheese and crackers and talked about the beach and what sights they had seen. Amber meant to hold her tongue but something made her look at Marcie and Gail and ask, \"Did you see that naked guy?\"\n\n\"Which one,\" Gail asked, \"I saw two.\"\n\n\"Did you really? The one next to that tall dark haired topless woman.\"\n\n\"Oh yes we did see him. Nice specimen of manhood I'd say.\"\n\n\"God will I ever get used to all of this excitement?\"\n\n\"I'm sure you will and probably before the day is out.\"\n\n\"But look at you two, naked as you can be and you're so relaxed about it.\"\n\n\"We're more excited than you think Amber. Both of us love this feeling.\"\n\nBrad added, \"And I love looking at you.\"\n\n\"Good because we like looking at you too stud.\" He smiled at that comment. \n\nJoe broke the short silence saying, \"You know every time we're here we go to the right. What might we be missing to the left?\"\n\nMarcie told him, \"Well we can see the angel's arm from here so we could only have half a mile or so to walk.\"\n\n\"A lot can be seen or can happen in that distance, especially if we take our time.\"\n\nCharlie jumped up then and said, \"Then let's go exploring the day is slipping away all too fast.\" That's all it took and they were on their way toward the angel's arm and hopefully new adventures. \n\nThey noticed almost immediately that there were fewer people but of the ones they did see more were either naked or very close to it. Joe stepped up to Amber for a second and as he put his arm around her she did the same before looking down and seeing his cock pointing the way to go. Then as she looked up at him he smiled and quickly undid her little top where it was tied at her back. She took a quick breath and releasing him tried to hold her top in place by holding her arms straight down at her sides. Brad saw what they were doing and he untied her top behind her neck and she quickly looked at him. He moved her arm away so Joe did the same and Brad caught her top as it fell in front of her. Then to make it a little easier for her Joe slowed and as Marcie caught up with him she asked, \"Have fun?\"\n\n\"Yes I did.\" Then he added in a whisper, \"I didn't think she would let that happen.\"\n\n\"I didn't either but she did. I told you that if it was a contest between her and the island, the island would win.\"\n\n\"Only if that's what she really wants.\"\n\n\"And I really think it is.\"\n\nIt was impossible to say who noticed it first but Charlie was the first to turn and head in that direction with the others following and Brad, Charlie and Joe it seemed were of the same mind at that instant. Before she could sort out what was happening Joe and Brad held Amber's arms out as she suddenly realized what was happening. Her eyes were wide and she was breathing faster as she said, \"No, please don't. Brad please not now.\" With her arms held out from her sides and using her bikini top Charlie tied her left hand to the makeshift cross anchored in the ground and using Marcie's top soon had her right arm restrained at the wrist as well. Amber was now well restrained and helpless as she complained in an ever softening voice. At that point Marcie and Gail were just watching from the sidelines but they would have something to do very soon as well. Brad's job for the most part was going to be to make sure she could see him watching and enjoying as the scene played itself out.\n\nJoe kissed her first and let his hands wander over her naked belly and sides just missing her breasts. Then Charlie did much the same as Joe slowly ran his hands up her legs and not stopping until his fingers breezed over her mound. Amber's legs were clamped together tightly so without some force they weren't going to get their hands between her legs. \n\nJoe was first to kiss her deeply and then as he looked into her eyes his hand went to her right breast and she inhaled quickly and held her breath as he explored her small firm breast and her telling nipple. Amber was still softly complaining and pleading but her once small nipples were betraying her by standing up and begging for more attention. Charlie took over and did the same and paid homage to her left breast as Joe suckled at her right nipple. In moments Amber had replaced her soft complaints to very soft moans of pleasure between very unconvincing pleas for freedom. All she could manage were broken strings of words now. \"Oh God...no...oh God that feels...no please...\" and mixed in there were fluttering sighs as she moved her chest forward to meet their hands and lips.\n\nCharlie put his hand on the tie at her hip and once again Amber begged. \"No, please not that...oh my God I'm not ready for...,\" and Joe gently bit her nipple as his left hand moved down toward her hip by way of her soft tender and sensitive belly. Again Amber moaned and lost her ability to form words. Her eyes would be wide open and then close as the powerful and erotic sensations washed over her. Brad was standing there as hard as the wood she was tied to so Gail moved over to him and as Amber looked on helplessly Gail slid her hand up and down his shaft a couple of times as she looked at Amber. Then turning him to the side Amber watched as Gail all but swallowed his cock and then pulled and pushed his hips so he was fucking her mouth and all while Charlie and Joe continued to tease and taste her. After that it was Marcie and Gail that saw to Brad's needs but just short letting him reach his ultimate goal.\n\nJoe's hand went to her hip and she felt the strings release their hold on her as Charlie did the same on the other side. They hadn't planned any of this in advance but it wasn't hard for them to anticipate what would happen at what point. One would do something and the other would just follow the lead until they did something new.\n\nHer small scrap of protection between her legs was still in place but only because her legs were still clamped tightly together. That is until the two women abandoned Brad and went over to Amber. They knelt down on each side of her and with some effort moved her feet apart in the soft sun warmed sand and with Joe and Charlie's hands on her lower belly they slid down pushing her bikini down until it just dropped to the sand. Amber felt a hand on her mound but she could no longer do anything but moan or utter soft unintelligible words. As Gail and Marcie's hands slipped up her legs toward her pussy, Joe's hand found its way between her legs as Charlie's moved to the back and teased her back there as his hand made its way between her cheeks and on south. Amber was a bundled mass of erotic zones now so it mattered less and less where they touched her because most sensations seemed to end up between her legs.\n\nAmber and Joe's eyes locked onto each other as his finger divided her moist lips and then slipped inside of her. Then just before he kissed her hard he told her, \"I want you Amber. I want to feel myself slide into you. I want to feel you under me as my cock goes deep into you again and again.\" She was moments from her climax now. With both women teasing her legs, Charlie all but sliding a finger into her ass and Joe with two fingers now buried in her and sliding in and out she managed a soft, \"Oh yes, fuck me...oh shit...,\" and then it hit her so hard her knees gave out and her restraints gave out as she dropped to the sand as Marcie grabbed her and Amber ended up in her arms.\n\nIt seemed like a long time to Amber but moments later she smiled at Marcie and whispered, \"Wow.\" Marcie just smiled and waited for her to recover. Amber finally sat up and then with Charlie's help she stood up and hugged and kissed him before treating Joe to the same. \"Thanks all of you. I'm still a little out of breath but thank you,\" and the fact that she was still naked no longer bothered her. The island had provided for her by fulfilling a fantasy that not even Brad knew she had. \n\nEverybody but Amber were still sexually charged but they were also getting pretty tired from all of the fresh air, walking and almost constant stimulation. Joe finally admitted, \"I'm done. By the time we get back we'll have about an hour to rest before dinner.\" All were in agreement though Brad seemed the most hesitant of the group to call it quits.\n\nIt was almost seven before the four of them made their way up to number ten and knocked on Brad and Amber's cottage door. Then after getting no response from a second knock they went on to the restaurant and had a fairly quiet dinner and a couple of drinks. Marcie said, \"I'm taking tomorrow off to just sit in the shade on the beach and read and watch the world go by. I am physically and emotionally spent and need to recharge my batteries.\" \n\nGail leaned back and said, \"I am too Marcie. I don't know if I want to read or what but I'm not moving anymore than I have to tomorrow.\" With that decided they all went back and even decided to forgo their nightly beach walk. Right then walking anywhere just didn't appeal to them. Gail and Charlie managed to make love with minimal effort before falling asleep and Joe and Marcie took advantage of their hot tub before going to bed and made love before crashing.\n\nChapter Eleven \n\nWednesday was a day of rest for all of them so after a late and very leisurely breakfast they all went back to their cottages where Joe and Marcie enjoyed a late morning session in the hot tub and Gail and Charlie found a comfortable place on the beach not far from the main building to read and relax and enjoy the occasional beverage from the bar next to the restaurant. Brad and Amber had disappeared and their little electric car wasn't at their cottage.\n\nJoe and Marcie finally walked out to the beach and like Charlie and Gail found a comfortable place to watch the people and read until dinner time. Joe looked at his wife and asked her, \"Doing okay honey?\"\n\nShe smiled and told him, \"I'm doing great. You know it isn't so much that I'm physically tired. It's more like I was people tired. My sexual batteries were totally drained and I didn't feel like I could even handle the stimulation of walking along Rock Beach.\"\n\n\"Feeling any better now?\"\n\n\"A lot better, how are you doing?\"\n\n\"I feel fully rested and very happy but also hungry.\"\n\n\"Where do you suppose Brad and Amber went?\"\n\n\"Who knows. It isn't like there are a lot of places to escape to on this island. It seems funny that Gail and Charlie aren't here with us.\"\n\n\"I know, we've gotten so used to the four of us being together all the time.\"\n\n\"They probably needed some time alone and I think that's a lot of what we needed for a few hours.\"\n\nMarcie jumped up and holding her hands out to him said, \"Let's go have dinner.\" They walked up to the restaurant for some exercise and had a nice meal and followed that with a bottle of an African Merlot. \"Joe I expected to see Charlie and Gail but they weren't on the beach and they aren't here either.\"\n\n\"I know, I hope they're okay.\"\n\nHe refilled their glasses and Marcie said, \"Oh no, it's that snooty woman that talked to us when we signed in.\"\n\n\"Well play nice because she's headed this way.\"\n\n\"Shit.\"\n\n\"Good evening,\" she offered. \"I remember you from when we signed in.\" Then with a growing smile she asked, \"Have you been able to screw on the beach?\" Joe just looked at Marcie because he didn't know what prompted that comment.\n\nMarcie picked up her wine glass and simply smiled as she said, \"Oh yes, more than once in fact.\"\n\n\"Lucky you, I've hardly seen my husband since we've been here.\" The woman was actually being friendly and not at all like Marcie expected her to be. \n\n\"Care to join us for a glass of wine?\"\n\n\"Thank you. I'm Beverly by the way, Bev actually.\"\n\n\"Nice to meet you Bev, I'm Marcie and this is Joe, my husband.\"\n\n\"Nice to meet you both. Okay now just for the record did you two really, um...screw on the beach?\"\n\nIt was Joe's turn. \"Yes we did and like Marcie said, more than once.\"\n\n\"And you didn't get arrested I take it.\"\n\n\"Nope. You see they have no police here because it's a private island.\"\n\n\"Oh that's right, that makes sense.\" Her eyes seemed to brighten as she said, \"Oh, now that does change things doesn't it.\"\n\nMarcie asked her, \"So are you walking on the beach and enjoying the tropical experience?\"\n\n\"That was the plan, or rather that was Gabe's pitch. That's my husband by the way. He painted this wonderful picture of sunsets on the beach with drinks in our hands and romantic walks and wading in the warm water. You know all of that crap. So far I've managed to meet three couples that I don't care for because they're busy talking about how rich they are or soon will be.\"\n\n\"What is your husband been doing?\"\n\n\"Well let's see. The first day we did nothing. The second day he went to the spa and then went golfing.\"\n\n\"All day?\"\n\n\"He said he played twenty seven holes.\"\n\nJoe added, \"It's a pretty small course.\"\n\n\"I thought it would have to be. I don't know but that's what he said. Then yesterday we spent the morning together doing...nothing. Well you get the idea.\"\n\n\"I'm surprised you two didn't have a fight.\"\n\n\"Who said we didn't? But that didn't change anything. Okay enough about me and so forth. I'm just going on and doing what I can to enjoy myself until we get home. Then look out.\"\n\n\"Why don't you join us for our nightly moonlight walk on the beach.\" Joe looked at Marcie and wrinkled his brow but she just smiled at him. Bev was several years older than the two of them but she had been well provided for and Marcie thought she still looked great.\n\n\"So...I mean...you don't mind if I join you?\"\n\n\"Of course not.\"\n\nBev looked down at herself and then at Marcie in her bikini and tiny skirt and said, \"I take it that's what you wear?\"\n\n\"Sometimes,\" and Marcie smiled.\"\n\nBev couldn't decide if she wanted to smile or change her mind. \"Um...well I guess I should go change. What time do you walk?\"\n\nJoe looked at his watch and said, \"Usually about nine so that's a couple of hours away yet. Why don't you change and then we can go back to the cottage and have a little more wine before the walk.\"\n\n\"That's sounds nice, thank you.\" Then standing up she said, \"Give me ten minutes or so,\" and she left.",
        "Joe smiled at Marcie and said, \"Well you seemed to change your opinion of her very quickly.\"\n\n\"I guess I shouldn't have been so quick to judge her.\"\n\n\"I better go get a couple of bottles of wine because we're about out.\"\n\n\"I'll go with you honey,\" and Marcie signed their dinner ticket before they went wine shopping. Their little gift shop only had about a dozen different wines so it didn't take them long to get their wine and then waited for Bev near the door.\n\nJoe wasn't bashful about checking her out as she walked toward them and even though her bikini was more modest than Marcie's was, when she neared he told her, \"Bev you look fantastic.\"\n\n\"Thank you Joe. This is only the second time I've had my bikini on since we arrived. I wear them more at home than I have this trip.\" Bev's bitterness was pretty obvious but she was smiling as they walked out together.\n\nIt was only about a five minute walk to number twelve and the three of them went in. Bev looked around and said, \"This really is charming and very comfortable.\"\n\n\"We think so too,\" Marcie said. \"Plus we can walk straight across to the beach.\"\n\nJoe added, \"Even if we're naked.\" Bev raised her eyebrows and looked at him as she tried to decide if he was being serious but she didn't ask because she was afraid to even know that detail.\n\n\"How far do you walk?\"\n\n\"Oh it depends, sometimes a mile and sometimes a lot farther. It just depends on our mood and our stamina. We didn't even walk last night because we were just to tired.\"\n\n\"What could you find to do here that would tire you that much?\"\n\nJoe added another ounce or so to her glass and said, \"We'll tell you a little about that as we walk.\" Bev could only smile and try not to look confused as she continued to sip her wine. They talked for a little while and then Marcie went to the door and looking out said, \"I think it's almost dark enough to walk. We could start now and just walk slowly.\" Joe knew he'd had plenty of wine so he stood up in agreement leaving his glass of wine where it was and they left.\n\nChapter Twelve\n\nMarcie was on Joe's left and Bev on his right as they went and as soon as they reached the shore they stopped and watched the last glow of the setting sun as it set the western sky on fire. \"Not a cloud in the sky,\" Bev observed, \"This is so peaceful. And look other than one couple I don't see anybody out here. They're missing so much. I've missed so much.\"\n\nJoe gently put his arm around her waist and told her, \"Well tonight is a good time to change that Bev.\" She smiled up at him and then at Marcie as she put her hand over his at her hip.\n\n\"I'm so glad we got together.\"\n\n\"We are too,\" and they started their slow walk and his hand continued to ride on her hip for a couple more minutes. When he let it slide it slowly brushed across her ass in a more or less innocent way.\n\nThe three of them were quiet until Marcie stopped and pulled her bikini skirt off and handed it to Joe. She could have carried it just as well but it was symbolic. He knew she had taken just her first step toward being naked in front of their new friend. It was no more than ten minutes later when Marcie stopped to look out at the ocean.\n\n\"I just wanted to stop for a minute and enjoy this. These walks always seem to end too soon so maybe we've just been walking too fast.\" Joe's arm found its way around Bev's waist again and hers went around him as Marcie took a couple of steps into the water.\n\n\"Enjoying yourself Bev,\" Joe asked.\n\nShe looked up at him and she said, \"This is wonderful, how did you know this was just what I needed?\"\n\n\"A lucky guess perhaps.\"\n\n\"Weren't you and Marcie with another couple when you arrived?\"\n\n\"Yes and they're around somewhere. Like we said earlier, we all just took the day off. We needed some alone time.\"\n\n\"Then I shouldn't be here either.\"\n\n\"We invited you remember? We've had our alone time and we've rested so we're fine now. I'm glad you're with us and I like having my arm around you.\"\n\n\"Joe will this upset Marcie?\"\n\n\"I promise this will not cause a problem of any kind but what about your husband, won't he wonder where you are?\"\n\n\"I left him a note telling him I was walking with friends and wouldn't be back until much later. It's his turn to sit around without me.\"\n\n\"When you talk to your acquaintances at the inn do any of them ever mention the island magic?\"\n\nShe laughed and said, \"Oh yes it's the topic of conversation almost everyday.\" \n\n\"But you haven't experienced it yourself.\"\n\n\"I don't even believe it exists...do you?\"\n\n\"As a matter of fact Marcie and I both believe it totally.\" The light from the western sky was rapidly disappearing as Marcie rejoined the twosome and Joe said, \"Bev just asked me if we believe in the island magic.\"\n\nShe smiled and added, \"We absolutely do Bev. We've had too many unexplainable events to just ignore it.\"\n\n\"I don't believe it at all.\"\n\n\"Joe tell her about your golfing experiences, and your roller blade experience.\" He looked at her and turned to continue their walk and kept his hold on her as they walked very slowly. The whole story of Joe's golfing and meeting the two women and all that happened that day before he went into the story about Meredith and their accident. \"Bev honey keep in mind that every time we tell you about any of these events it is all the more curious in that they all fulfill fantasies, either mine or Marcie's or both of us.\"\n\n\"You're making this all up.\"\n\n\"I promise you we are not. There are more stories but they are so very personal that we don't want to offend you.\"\n\nThey were barely moving forward as she tried to take in what they had told her. \"But you made love to that woman from the golf course and to Meredith, isn't that pretty personal?\"\n\n\"Of course it is but there are...well I can tell you about Liz, Mary, Ken and Jorge.\" He related the story about their first experience at what was then the isolated beach and he didn't spare the adjectives.\n\n\"Oh my God. Marcie I don't blame you for getting upset with Joe.\"\n\n\"But remember I wasn't exactly behaving myself either.\"\n\n\"So you credit the island for all of this...or blame it, whatever.\"\n\n\"Well considering that one of Joe's main fantasies was to have me exposed to other guys I'd say it had a lot to do with it. Well that and his experience with those two very good looking women. Do you have any fantasies Bev?\"\n\n\"Who, me? Of course not.\"\n\n\"You sound just like Gail my best friend. She denied again and again that she had fantasies but the island knew and they have all come true, at least the ones she's admitted to.\" \n\nBev still had a good hold on Joe's waist and he put his other arm around her as he stood behind her and kissed her neck. \"Bev I predict that before this night is over you will have a fantasy fulfilled.\"\n\n\"No that can't be. No because I don't have any remember?\"\n\nHe kissed her neck again as his hands teased her bare midriff just under her breasts and told her, \"We'll see. We'll see,\" and he kissed her one last time as she half moaned and half whimpered as she said, \"Oh God Joe don't do that.\"\n\nTheir walk continued at the same slow pace. They moved on in silence but Marcie and Joe both knew Bev's mind was working hard at sorting things out to her satisfaction. The moonlight was strong enough for them to be able to see each other and with their arms still around each other's waist Bev looked down at their feet as they moved through the sand and then looked up at Joe and smiled. He stepped in front of her and kissed her as one of his hands went to her butt and pulled her into him. She resisted the kiss and even pushed against Joe's chest with one hand but it was a fairly feeble effort. A second later the kiss became a mutual tongue to tongue exploration as her arms went around him and she felt his warm naked back under her hands. She must have reached a point that frightened her because she suddenly stopped and pushed him away again but just far enough that she could look up at him. She said nothing as they studied each other's eyes and lips. She put her right hand to his cheek and caressed him and then took it away and started to walk taking determined strides until she slowed down a few steps later and Joe and Marcie caught up with her. Nothing was said but his arm went around her waist again just as hers went around him.\n\nChapter Thirteen\n\nThey finally turned around and Joe stopped her and kissed her again. She didn't resist and in fact kissed him back with all the emotion she had boiling inside of her at that instant. This time rather than push him away she just smiled at him and they continued their slow walk back toward number twelve. They didn't make it twenty feet when Joe stopped her and turned her to face him again. She expected him to kiss her again but when his arms went around her they unhooked her bra and pulled it forward. She gasped and putting her hands up tried to stop him. Joe just became more forceful then and held both of her hands in his right hand and pulled her top down. \"Stop fighting me or I'll just rip it off and you'll have to go back to the inn topless.\"\n\nShe stopped and looked at him and said, \"Joe don't do this to me please.\"\n\n\"You have beautiful breasts Bev and I want to see them and feel them,\" and with that his hand explored her breasts and for the next minute or so she tried to escape his hold on her. Then she moaned and submitted herself to his touch and his lips when he bent down to bathe and taste her nipples. Her head went back and he held her to keep her from falling as he continued to shower her with kisses and caresses.\n\nMarcie just watched. She had never seen Joe be forceful like that and at first it scared her. But when Bev gave into his advances she relaxed and watched the two lovers. They came together in an embrace and a long kiss until his hand went to her bikini bottom. It had no ties so he had to push it down and once again she grabbed material and tried to stop him begging him not to expose her any further. She was putting up a good fight so he pushed her back and lowered her to the sand where he pinned her down and with a lot of effort and determination got her bottom off and tossed it well away from them.\n\nTurning to face her he lay on top of her and kissed her until he felt Marcie's hands. He lifted his hips and with her help they managed to get his suit off too. He lay on her again and she could feel his hot erection press against her mound and lower belly as he returned to kissing and fondling her as she continued to put up modest resistance. \"Joe no we shouldn't be doing this.\"\n\n\"Bev you want this and I know you do. You want to feel me touch you and control you.\"\n\n\"No I don't, really I don't.\" \n\nHe helped her up and said, \"You're walking all the way back in the nude. I'll be naked and so will Marcie. When we pass somebody they will be able to see your nakedness. They will be invited to stare and appreciate your nakedness.\"\n\n\"Oh my God, why are you doing this?\"\n\n\"You know why I'm doing this and when we get back to the cottage I'm going to make love to you Bev. Now don't try to run or I'll use your bra to tie your hands behind you.\" But she did try to run and he caught her and bound her wrists behind her. \"I warned you. Now people can see you bound up like a truant teenager going to see the judge. When we get to the cottage I will judge you. I will see if you are a competent lover and sex partner.\" Marcie was still amazed at what was happening. Where did Joe come up with the things he was saying? Where did he ever get the idea to force himself on Bev? On top of that why was Bev responding to his treatment of her?\n\nIt wasn't until they were almost back when another couple came toward them. They were both dressed in shorts and her in a halter top and as they realized they were approaching three naked people they stopped and stared. Joe waited until they were very close before he stopped and turned Bev to face them. \"Evening. Isn't this the most fantastic place to be? Bev look up honey they would like to see all of you.\" She straightened up and the guy was busy trying to take in both women and the woman was studying Joe and both women as well. \"You two really should try going without clothes, it's such a rush and nobody will bother you.\" He turned Bev so they could see her exposed ass and then turned her back around. \"Great looking woman isn't she? The three of us are going back and have a little party now. Happy walking,\" and they went on their way, the couple never having said a word.\n\nThey didn't go far before he stopped and turned Bev toward him. \"See honey they really enjoyed looking at your body and it didn't hurt a bit,\" and he kissed her again. She tried to resist but her passions were starting to betray her as she returned his kiss. They went on and when she saw the cottages she stiffened up and said, \"Oh my God we're out in the open.\"\n\n\"Yes, where anybody that happens to look can see your nakedness.\"\n\n\"Oh Joe please hurry and get me inside.\"\n\n\"Oh no we've been walking nice and slow so we'll finish like that.\" He wanted her to taste a little more of his control before they went to bed where he really would make love to her. As they entered the cottage he held her by her bra that was tied to her wrists and led her straight to the bedroom. He untied her and she acted like she was going to bolt so he threw her on the bed and he quickly joined her and got on top of her.\n\n\"Joe no we can't do this, I'm married.\"\n\n\"So am I. In fact Marcie's here to watch me take you.\"\n\n\"No you won't.\"\n\n\"Oh but I will darling,\" and he pushed and stuffed her right hand behind her and caught it with his right hand and pinned her left one with his elbow. Then with his legs over hers he used his feet to pull her legs apart just far enough that he was able to lower himself. Then with is left hand he guided his cock to her entrance and pushed quickly. She froze then and with a little more effort he was inside of her and he felt her warmth wrap around his shaft and Bev stopped struggling. She looked up at him as he went deeper into her and she moved her legs wider for him as she moaned softly and whispered, \"Oh God, yes, yes.\" Joe slowed down then and releasing his hold on her they kissed and his hips moved slowly at first as they were lost in their union. Her voice was soft as she told him, \"God it feels so good to have you inside of me honey.\" That was the last time she was soft and quiet because he increased his tempo and she became a woman obsessed with his cock. She didn't care what position they were in, only that she could feel his cock seeing to her needs. Joe lost his fight and gave her his spunk but she wasn't done with him. With him on his back she lowered herself on his still nearly hard cock and with his juices running out of her she pumped up and down as he watched her breasts dance for him. With his hands either on her hips or reaching for her breasts she rode him through another orgasm and then a third before she dropped onto him and they shared a long deep kiss. He was still inside of her more or less but he was going soft so he fell out and she dropped to her side next to him still breathing hard. \"God I wish we could have kept going.\"\n\nOnce they were finally on their feet Bev embraced Marcie and told her, \"Thank you and I really mean it. Thank you.\"\n\n\"You're welcome Bev.\"\n\n\"I'm sure you two know that I really do have fantasies and you've fulfilled my biggest one.\"\n\n\"I'm glad.\" Then she looked at Joe and told him, \"Rest lover because it's going to be awhile before you get any sleep tonight.\" Marcie drove Bev back to the inn and went home to her husband.\n\nChapter Fourteen\n\nIt was almost ten Thursday morning before the two of them were showered and on their way to breakfast where they ran into Gail and Charlie. He slapped Joe's back and said, \"Well it's about time you two appeared. We found Amber and Brad and we're going to take the shuttle to St. Croix to explore but we'll wait for you two.\"\n\n\"Go ahead,\" Joe told him and looking first at Marcie and then at Charlie said, \"I didn't get a lot of sleep last night.\"\n\n\"You poor devil. Okay we'll meet you back here for dinner then,\" and off they went to join Amber and Brad.\n\nMarcie looked at Joe and asked him, \"Are you really that tired?\"\n\n\"No. Well maybe a little but I just didn't feel like being around a city full of people I guess, I hope that's okay.\"\n\nI'm just as happy to stay here. I like just being with you.\"\n\n\"And I think I still owe you something special for letting me have my way with Bev last night.\"\n\n\"By the way how did you know she would like what you did to her?\"\n\n\"I didn't exactly know but she must have been sending me signals because I was sure that I was right. Sure enough to take the chance anyway.\"\n\n\"Well you did the right thing.\"\n\n\"I even surprised myself.\"\n\n\"She would have freaked out had she been the one on the wooden cross at Rock Beach. You could have spanked her and really driven her crazy.\"\n\n\"Wouldn't that have been something to experience.\"\n\nAs they went out they ran into Bev. \"Morning you two,\" she said. \n\nJoe smiled and told her, \"Morning beautiful, doing okay?\"\n\n\"All things considered I'm doing fine. I had a talk with Gabe last night and we've come to an agreement. He's staying here and I'm leaving on the afternoon launch.\"\n\n\"That's too bad Bev, is it because of what happened last night?\"\n\n\"Mostly because of how Gabe talked and behaved last night. I've hardly seen him this trip and he doesn't seem bothered in the least by that. He's not going to like what he finds when he gets home Saturday.\"\n\n\"Bev we're sorry if what we did has caused you to feel this way.\"\n\n\"What we did didn't cause any problems at all. In fact they helped me face the truth and to live my fantasy.\"\n\nJoe told her, \"Look Bev we both know there is no way that Gabe could be golfing like he claims.\"\n\nMarcie touched his arm and said, \"Joe you don't know that.\"\n\n\"No he's right Marcie but I just didn't want to accept that. Okay so I was bad last night but had he treated me half way right none of that would have happened.\" \n\nShe turned to go and Joe told her, \"Bev...you weren't bad last night, you were amazingly good.\"\n\nShe smiled and kissed his cheek before saying, \"I'm really going to miss you two. Take care and who knows maybe we'll run into each other one day.\"\n\nAs they watched her walk away Marcie asked, \"Okay lover so now what? We have the day to ourselves and then tomorrow for whatever and then we go home.\"\n\n\"You know, it's like the last time we were here. We were ready to go home before the week was up that time too and I'm ready to go home now.\"\n\n\"Bored?\"\n\n\"No just over stimulated. I love you and I love how it is when we're here but after about the fourth day I start to get a little numb.\"\n\n\"I know what you mean honey. Let's go back and stare at the other tourists on the beach and talk.\"\n\n\"Let's go.\"\n\nMarcie waited until they were settled in wooden Adirondack chairs near the water and then she asked, \"Do you suppose we've said or done something wrong to Gail and Charlie?\"\n\n\"I can't imagine what it would be. It is kind of strange how they've taken off on their own though.\"\n\n\"I think so too. I guess we'll just have to see how it plays out. If it continues I'm going to come right out and ask them if something is wrong.\"\n\n\"They did invite us to join them though.\"\n\n\"That's true. Sorry we didn't go?\"\n\n\"Not at all, you?\"\n\n\"No, I'm enjoying it being just the two of us for awhile. Maybe the four of them are bonding in St. Croix.\"\n\n\"Getting jealous?\"\n\n\"No...well I don't think so anyway, just curious.\" \n\n\"Joe something there's something else that I've been thinking about. When it was just the two of us here it was so great. Of course it was all new too. Then being with Charlie and Gail is always great too. But now it seems like every time we turn around somebody else is coming into our lives. I mean each and every time has been an experience to remember, but it's happening so often that it's interfering with our lives too. There is Brad and Amber. They're a nice couple and all...but six is almost too many. Then there was Bev too.\""
    ],
    "authorname": "thornapple",
    "tags": [
        "island magic"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/return-to-sable-island"
}