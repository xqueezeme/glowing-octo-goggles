{
    "title": "14 Hours Pt. 01",
    "pages": [
        "I woke up under a bridge last week. True story. \n\nThree tests to cram, and one essay analyzing the socio economic themes of the 'Great Gatsby'. Before that I have to actually read the damned thing, which dear lord is a slog to get through. How do you stay up all night and study with enough energy left over to rally and take tests and turn in that essay; Adderall. Pretty easy to get a hold of. At least three students fake something to sell their prescription for twenty dollars a pill. \n\nI pop that pill then start going over the formulas for math and the equations for chemistry...wait? Is it the other way around? Not important. I take the pill and go over my assignments and when I'm done I feel my brain start to spark. It's seven, and time to read the hell out of F. Scott Fitzgerald.\n\n\"In my younger more vulnerable years...\" and I lose the night. \n\nUsually when I wake up it's because I hear or see something. Light in my eyes, the blaring horn of my alarm. Something I smelled woke me up this time. Then I hear it. Fresh warm piss two feet from my face that's flat on the ground from a homeless guy doing his morning routine. I try to jump up and end up falling over and into a trashcan that crashes to the ground.\n\n\"Morning sunshine,\" the homeless man says as he shakes twice and goes about his day. \n\nMy head is throbbing, I have cotton mouth something fierce, and I got no idea where the hell I am. Gathering my bearings I hear traffic from above and use my hand to cover the sun as I look up at the bridge above me. Checking my pockets I find my phone is thankfully intact and has a little power left. \n\nIt's nine in the morning. I have fourteen hours of lost memories. \n\n--\n\nThat was a week ago, and I'm still trying to figure out exactly what happened that night. When I sat at my desk the next day I opened the Great Gatsby and saw notes and highlighted portions. Nice to know I was productive.\n\nTwo days later I received a text from Samantha. Who the hell is Samantha?\n\n'We still meeting in the girls bathroom in the basement?' Samantha asked me with heart emojis. What the hell did I do that night?\n\nI arrive at the basement and look around for anyone who is also looking around. It's just the mechanics and shop classes down here, so not many girls are in these classes. Thus no one is ever in the girls bathroom. Meaning when a girl says meet me in the girls bathroom in the basement, it's basically code for a booty call. \n\nI see a girl at the end of the hall and I laugh to myself. Samantha North, eighteen year-old senior cheerleader in her school uniform; a plaid skirt with blouse, jacket and tie with knee high socks. There is no way this is the Samantha sending me booty calls texts during my lunch hour. \n\n\"Hey, I thought you weren't going to come,\" Samantha says, smiling at me and tossing her blonde hair over her shoulder. Does she know me? No, she knows the me who wakes up under a bridge with a hobo nearly pissing on my face. \n\n\"What exactly are we doing?\" I asked, Samantha laughing at me.\n\n\"You don't remember, you're going to help me study at lunch because I can't be seen with you anywhere else,\" Samantha says to me with her eyebrows raised. That makes more sense. \n\n\"Right...study what?\" I asked and she laughs again. Not sure if it's genuine or just pity. Maybe she genuinely feels pity. That sounds about right.\n\n\"You're so cute,\" she says in an obnoxious voice and walks into the girls bathroom, holding the door for me, \"Well numb nuts?\" \n\n\"Coming,\" I say and walk in after her because I'm pathetic. \n\n--\n\nIn between helping Samantha study the Great Gatsby that I managed to pull out of my ass thanks to Adderall me leaving rather impressive notes considering, I still had all of my other assignments and school stuff. Adderall me didn't write that essay or remember any of the cramming I did for Trigonometry or Chemistry. Adderall me sucks. \n\nMr. Glendale from Chemistry wants to talk to me on my test performance, and not to inform me of my brilliance. It's always a bad sign when he doesn't even hand you yours back. I feel a set of eye on me as the class empties, but when I turn no one is left. That's not the first time I've felt eyes on me in Chemistry.\n\n\"What is this?\" He says to me, my test on his desk with a large red F on the front. \n\n\"Looks like my test,\" I reply.\n\n\"Do you even care about your future? This is not a joke, or a game, this is your future. Failing here is setting yourself up to fail at life,\" he says and hands it to me, \"You will retake this test tomorrow, and I will mark you down one letter grade. Do not ruin this chance,\" he says before I thank him and leave. \n\nI arrive at the girls bathroom and hear crying when I'm next to the door. I knock loudly and I hear someone inside I'll assume clean themselves up. Samantha opens the door and gives me an all clear.\n\n\"I already forgot, why is Nick gay?\" Samantha asks right off the bat. Adderall me wrote down how he acts around and describes men. Whipping cream off Mckees face for instance, or how he describes Daisy asexually and Tom with over detail.\n\nSamantha feels she has a grasp on the themes like the roaring twenties, prohibition, flappers, the social implications of Fitzgerald's own life with his wife Zelda. It's near the end of the hour and she's sitting on the sink, I'm leaning against a stall and we both have our books open. \n\n\"Do you mind if I ask why you were...\"\n\n\"Yes I mind,\" Samantha immediately snaps at me. I close the book and grab my bag. I'm not that pathetic, \"Wait...sorry, you're just being nice, I shouldn't be bitch when you're being nice.\"\n\n\"Not my place to my pry, not like we're friends,\" I said and check my watch, \"See you tomorrow.\"\n\n\"I live in a trailer on the other side of town,\" Samantha says to me and I stop, \"My mom didn't graduate anything, my dad didn't stay around. No one in my family has ever graduated high school, let alone go to college. My home of record according to the school, is just down the road. Residentially speaking, I'm supposed to be going to West River High School.\"\n\n\"That all sucks,\" I say and look at her, her face saying she isn't done. \n\n\"I know I'm not that smart, but I will not end up like my mom. I've fallen asleep studying, I've cheated on tests, I've meet some of the teachers in this bathroom to negotiate my grades,\" She says, and I'll assume the expression I involuntarily made displeased her, \"I see that in your face. You don't understand what's it's like. You don't get the pressure I'm under.\"\n\n\"The pressure?\" I asked with a laugh, dropping my bag, \"Both of my parents are Rhode Scholars. I've spent my entire life with flash cards, and baby einstein, and being forced to walk around museums and galleries being told how the art is supposed to make me feel instead of just feeling it. They made me so jittery, always correcting my language to the point where I developed a stutter they tried to fix with ritalin. So I just stopped talking.\n\n\"I've been crammed into every advanced class, shouted at for a B, so scared I won't have time to study, I crammed more pills down my throat to finish a book I don't even remember reading!\" I shouted throwing the Great Gatsby at the mirror, her flinching away.\n\nI breathed heavily for a few moments, us both looking at each other silently. When the moment was over Samantha walked over to the door and turned the deadbolt to lock it. \n\n\"Why are you so hot right now?\" Samantha asked slowly walked back over to me, \"No one ever talks to me like that.\"\n\n\"I don't ever talk like that,\" I say, her biting her lip before lunging up and licking my neck. I flinch back and hit the sink, but she follows through and keeps her lips locked to my skin. A loud suction cup sound echoes in the bathroom when she pulls away. \"Did you just...\"\n\n\"Oh yeah,\" She said, running her finger on it. \"That's going to leave a good one.\"\n\nI turn to the mirror just enough to see the purple hickey on my neck. Perfect, can't want to explain that to mom and dad. \n\n\"What is happening?\" I asked, mostly in shock. Then a moment later I'm pissed at myself for questioning any of it. If Samantha North wants to give me hickeys or god knows what in the girls bathroom, who am I to argue with that?\n\n\"Whatever the fuck you want to happen,\" Samantha said, sitting on the sink, spreading her legs and pulling me into her. Her legs wrap around my waist and yank me forward, and I know she felt it. \"Someone wants to play.\"\n\nI freeze, I have no idea what's supposed to happen next, though I know exactly what I want to happen next. There is nothing more I would like than to bend her over this sink. Oddly enough I think she actually wants me too. However, I'm a pathetic chicken shit. \n\n\"Hey,\" she says, snapping her fingers and alerting me, \"Most guys at least have my bra off by now, I kind of feel like I'm trying to fuck a fag.\"\n\n\"I'm not,\" I say and decide just to be honest, \"I've never done this.\"\n\n\"Whoa,\" her legs unwrap around me, \"Virgin, that's new to even me.\"\n\nWe stare at each other, as if we're betting on who is going to make the first move. I will lose this game. Thankfully she wants to win, her pulling me back with her hands behind my head and pulling me to her mouth. We kiss, sloppily with tongue, her tongue in my mouth mostly. I forget to breathe, and I pull away and cough, making her laugh. \n\n\"You need to breathe,\" she says with a giggle, \"We can slow down.\"\n\nI nod and we start kissing again. Slower, less tongue. I place my hands on her sides and pull her closer to me. Our lips depart after a minute, her smiling at me.\n\n\"Much better,\" Samantha says, and I feel her hands on the waist of my pants a moment later, \"Your move.\"\n\n\"I don't have a condom.\"\n\n\"I'm religious with my pill,\" Samantha explains, fingering the button open and pulling the zipper, \"I'll give you ten seconds.\" \n\n\"What?\"\n\n\"Ten seconds to start fucking me, or I'm leaving.\"\n\n\"Serious?\"\n\n\"Nine.\" \n\nI nervously start to reach into her legs and up into her skirt as she reaches eight. My fingers curl on the waistband of her panties at seven. By six I start to pull them down. At five I change my original assessment - thong, not panties - as I pull them passed her knees. Four seconds left as I reach for my pants and three when they're to my knees. I grab her legs at two and pull her to me. One second left and I align my dick her with slit and on zero I plunge into her. \n\nInstantly she lets out a gasp, her fingers gripping my arms. I pull back and push myself all of the way into her, and I love the sound she makes. I'm making her make this sound. She feels so good, and I can't stop. I pull back and push in. Back and in, back and in. \n\n\"You're actually really big,\" Samantha moans as I go all of the way into her, making her groan, \"Really big.\"\n\nBefore I even knew it I felt a surge of pleasure radiate from my entire body. I cum hard, harder than I've ever cum deep into her, making her bite my arm to avoid shouting out loud. It's so good and I can't stop, I keep pumping into her until I go limp and slump out of her. \n\n\"Look who's not a virgin anymore,\" Samantha says, pulling her thong up and jumping off of the sink, \"See you tomorrow?\"\n\nI can barely process anything. I must have responded because she kisses me and leaves me alone in the bathroom, pants still on the floor, drops of semen dripping of my dick. \n\n--\n\nMom is pissed about the hickey and dad just wants to know her name. I have a weird feeling they're more concerned it's taking time away from school than any other normal reason a parent would be concerned about a hickey. I ignore them both, provide half answers and move on with my life. \n\nNext day I meet Samantha in the bathroom, and she begins the meeting like nothing happened. \n\n\"I can totally see why Tom is cheating on his wife,\" Samantha says as she sits on the sink. I look at her, expecting a different form of interaction, or at the very least an acknowledgement of yesterday. \n\n\"About yesterday...\" I start to say.\n\n\"He's cheating on his wife with Myrtle because she isn't a such a bitch,\" Samantha says as she's scrounging through her purse to find her book. \"I also paid closer attention to physical description, and Myrtle isn't skinny, she's a little on the big side. Weird shit you pick up when you know to look for it.\"\n\n\"I want to talk about yesterday,\" I said, her turning her head. \n\n\"What did we cover yesterday again? Was it the clash of new and old money?\"\n\n\"We had sex on the sink yesterday.\"\n\n\"Oh, that?\" Samantha asked, tilting her head in surprised I'd even bother to bring it up, \"Not really a biggy.\"\n\n\"Not a biggy? Seriously?\"\n\n\"I need a few more hands to count on to list the guys I've fucked in here. You're not going all virgin clingy on me are you?\" Samantha asked, finding the book finally and placing it next to herself on the counter. \n\n\"No,\" I say, disappointed but calmly, \"It was just fun.\"\n\n\"Yeah it was,\" She said with a grin, \"You're dick is in my top three for size by the way. That caught me off guard.\"\n\n\"Thanks...I think...anyway, so yeah Myrtle is a little on the big side...\"\n\nI was always told that sex was supposed to be special. Sacred even. An intimate act of love and affection. Granted I was eighteen and a late bloomer, I still felt used after my first time. \n\n--\n\nAccording to my English syllabus the next book to read is 'I am Legend' by Richard Matheson. It's always a smart idea to get ahead of the assignment so I stop by the bookstore to get a copy. I scan the shelves in fiction, scroll through M and find Matheson quickly due to the alphabetic structure. I grab the last copy and walk to the register where I am the only one in line. \n\n\"Matheson, someone is ahead of the curve,\" the girl at the counter says with a cute grin at me. A very cute grin. A slightly familiar grin, but I still draw a blank. \n\n\"Reading ahead of my class syllabus,\" I say.\n\n\"I know, we go to the same school,\" She says, and I really look at her this time. \n\nThe girl is short, shorter than me at least, dirty blond hair with a boys haircut that she actually wears very well. Black pants with a belt that her blue shirt is tucked into, her shirt having the name of the bookstore on it 'Books, Comics, and Films' in large letters with 'Oh My!' underneath in smaller letters, though most people in town call it 'Oh My Books.' Above her left breast is a name tag that says 'Kori'. \n\nI find myself accidently comparing her to Samantha, but how could I not at this point. Not as busty, but a little heavier. Not a ten, but not nearly as slutty looking. All tens kind of look slutty by default. Doesn't resonate an aura of confidence, but I'm not scared to talk to her. \n\n\"We have Chemistry together,\" Kori says, and I'm still blank. Is she the reason I feel watched in Chemistry?\n\n\"Sorry I'm terrible with faces. Plus uniforms make it hard to imagine someone not in them,\" I say as my defense, not entirely sure she bought it. \n\n\"I guess that's kind of true,\" Kori says with a white smile. Fuck is she cute. \"Not his best book though. Most known, yes. Best book is 'What Dreams May Come'.\"\n\n\"I saw it back there,\" I respond as she types on a computer. It's a mom and pop bookstore, they don't have a scanner. \n\n\"I'd recommend it,\" She says, and I'm uncertain if she's sincere or just a making a sale. Curious to know if she works on commission.\n\nI pay and as I turn to leave I hear her say, \"You really don't remember?\" \n\nI turn to her, confused. Remember what? \n\n\"Huh?\"\n\n\"A few weeks ago, you were here at our poetry read. You had a poem, we started talking and...shit happened.\"\n\n\"When did I...\" I begin only to remember I have a lapse of memory. Fourteen hours of it to be exact. I'm getting more of that night back, \"What time was this?\"\n\n\"That's what you're asking? Not how I'm doing, or calling me back?\" She asks, and I scroll through my phone contacts and sure enough. 'Kori'. \n\n\"I was on some bad adderall, and I really don't remember that entire night. I woke up under a bridge the next morning,\" I say to Kori who looks at me like I'm completely full of shit. \"I'm telling the truth, believe me or don't.\"\n\n\"I'll believe you, but I still want to talk,\" Kori says and looks down, \"We close in an hour, mind waiting around?\"\n\nI wait the hour, sitting in one of the reading areas on a couch. She finishes her inventories, locks the doors and joins, sitting on a chair across from me. \n\n\"What did I do that night, I'm trying to piece it back together, and this is the first lead I've had in awhile.\"\n\n\"You participated in our poetry, and I really liked your poem and we talked on that couch for maybe an hour,\" She says, pointing at the couch I'm sitting on. I looked at it too, and I imagine us sitting together, her out of her work clothes, maybe a skirt or jean shorts, curled up next to me with her adorable smile.\n\n\"It was also my birthday weekend, the big eighteen.\" I've already forgotten a girls birthday. God I'm a dick. \n\n\"Then we did more than talk,\" Kori said, red rising in her cheeks, I can almost see the blush reflect from her olive eyes. What does more than talk mean?\n\n\"How much more?\" I asked.\n\n\"I live across the street, my parents were gone, I was running the store for them.\" So her parents own the store. \"We went to my room...we did...it.\" Kori said quietly, embarrassed for even saying it aloud. \n\n\"It?\" I asked.\n\n\"We screwed okay, bad enough you don't remember.\" Samantha wasn't my first after all. \n\n\"Geez, I'm sorry.\"\n\n\"Don't be, about the sex at least. Be sorry for forgetting, that's just dickish.\" I laugh. I don't mean to but I laugh. Kori laughs too, her cheeks still glowing, but now she's smiling again, and I love it. God she's cute, have I mentioned that yet? \n\n\"I want to remember, I've been trying to,\" I say, her looking away shyly, \"I can't believe I forgot someone so cute.\" I meant to not say that out loud.\n\n\"I can help you remember,\" Kori says while not looking at me, \"If you'd like.\"\n\n\"Okay. Want to recreate that night?\" I ask, then realize if we did we'd be in her bed again, \"As far as you'd like to,\" I scramble to say. \n\n\"First you had a poem,\" She says with a grin, and I chuckle to cover the embarrassment, \"That's how you got me on the couch.\"\n\n\"Fine,\" I say, standing up walking to the corner. She leaned into her seat a little, waiting for me to start. \n\n\"There once was a boy who forgot, about a girl...um...named Dot?\" I rhyme, her laughing a little. \"He forgot her face, it was such a disgrace, but he still went back to her place.\" \n\nKori giggled, trying to hold back a full laugh. I walk till I can touch her, and I smell her hair from the distance. I remember that smell, vividly. Like it was in my face all night. \n\n\"In her bed, he smelled her head, which was sweet like oranges,\" I recite and that catches her attention. \"Her skin was bare, smooth as silk...shit can't rhyme with orange.\" \n\nKori couldn't hold back the laugh this time. She's laughing hard, holding her stomach. \n\n\"Perfect complexion, smooth as silk, and cute as a bunny. He'd never forget a beautiful lady, who's skin always smelled like honey.\" I get her attention again. Her lotion smelled like honey.\n\n\"My lotion is honey with...\"\n\n\"A hint of coconut,\" I finished. I reach over and gently pull her bottom lip open with my thumb, \"Plain cherry chapstick. I didn't forget that.\"\n\n\"Not quite, my shampoo is tangerine, not orange,\" She says flirtingly, and I lean down and kiss her. It felt like that right time, and she must have agreed because she wrapped her arms over my shoulders. \n\nWe kiss for a few seconds before she pushes me back onto the couch and straddles me, keeping her hands on the sides of my face, my hands dropping to her sides, resting on top of her hips. \n\n\"My parents are home, but we can relive that night in here,\" She says as she pulls her shirt up, it sticking in her pants. I help her tug it out and while she's pulling it off I go for her belt. Her shirt hits the floor, me tipping her over onto her back so I can get her pants off. Not a thong like Samantha, just a normal pair of panties. Seems to only add to her cute factor. ",
        "Kori sits up when I toss her pants to the floor and pulled mine down, me kicking off my shoes before my clothes join hers. She straddles me again, us in our underwear as I manage to unhook her bra on the fourth try, her giggling at my struggle. \n\n\"Took you longer last time,\" She says as she let her bra drop. Smaller than Samantha's, but I could easily take a handful of both. They're perky with little nipples that were hard from the cold of the store. I place my mouth directly on her left one, her grabbing my hair and moaning.\n\nI trace my thumbs on the waist of her panties and before we go further, she decides to hit the brakes.\n\n\"We made this mistake last time, do you have protection?\" She asks. Because of my last encounter with Samantha, I did. It was in my wallet now that I realize sex was a viable option in my life now. \"Okay, keep going.\"\n\nKori steps off of me and drops her panties, stepping out of them. I never really got a good look at Samantha's pussy, but I knew she was fully shaved. Kori had a little patch of hair, the cuteness just keeps building. She yanks my boxers down, I fumble but successfully get the condom on, and she has difficulty lowering herself on top. I just keep slipping away.\n\nAfter nearly a full minute, Kori finally slid onto me, I feel her fingers dig into my shoulders. The deeper I went the harder she squeezed. She was a hell of a lot more tight than Samantha. Kori was smaller framed if a little pudgier, but I'd wager the fact she wasn't an admitant whore was a factor. \n\nI see her wince as she glided herself up and down on me. \n\n\"Am I hurting you?\" I asked.\n\n\"Second time, still not used to it,\" she says. Holy shit, we took each other's virginity. \n\nI grab her hips and help her slowly ride me, her expression of pain vanishing within a few minutes, replaced with soft cooing and audible breathing. I place my mouth on her opposite nipple, her gasping and gripping my hair tight. After a minute I place my lips to hers.\n\nKori's arms are wrapped around my shoulders, my hands continue to lift and drop, us finding a comfortable rhythm that's enjoyable to me and manageable for her. Kori's breasts pressed against my chest as our tongues twirled.\n\nSamantha was too brief to really form an idea of what I thought. This was different. Intimate and close, sweating together in a cold room. I see little droplets slither down her shoulders. I feel them hit my hand from down her back. When I kiss her neck I taste the salt.\n\nSuddenly I feel it hit me, too fast to really prepare, and I cum. She must have felt my dick swell and pulsate because she let out a passionate moan in cadence with every spasm. \n\n\"Was that you cumming?\" She asked, and I nodded into her breasts, \"That felt really good.\" \n\nWe get dressed and leave the store, her locking the door again. Together we crossed the street to the apartments and stop at the door.\n\n\"Will you forget this time?\" Kori asks. \n\n\"I won't, I promise I'll call you tomorrow. Not text, call.\"\n\n\"Okay,\" Kori says, unlocking the door to her building. I kiss her, her leaning into the doorframe I softly press her into. We say goodbye and she disappears up the stairs. \n\nI smile before I start walking away from the building, looking back over my shoulder one last time before finally departing."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "school",
        "school girl",
        "bathroom",
        "study",
        "comedy",
        "romance",
        "triangle"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-01"
}