{
    "title": "College Sports Clinic Encounter",
    "pages": [
        "Anya looked at her phone, relieved to see that it was twenty minutes to five o'clock. It was too late for a walk-in, and with no appointments the university's Sports Rehabilitation and Conditioning Clinic would be closing so she could still get in a workout before buying some fresh ingredients and cooking dinner for Brian, her new fianc\u00e9. \n\nFianc\u00e9. She smiled because she liked the sound of that. Brian, her boyfriend since her first semester of college... for a year-and-a-half, now... had just proposed last weekend. Anya was totally in love with him and had said \"yes\" immediately. She couldn't believe this brilliant graduate student wanted her; she was only a nineteen-year-old sophomore. \n\nShe put her course work aside and stood up from the chair in her examination room. Her fellowship in sports medicine was paying for the first two years of her education, but she still had to put in twelve hours a week at the rehab clinic working with injured athletes and other patients. \n\nAnya could hear her supervisor, Lorraine, typing across the hall. Their part of the clinic was only three small examination rooms, Lorraine's office, plus the lobby and shower area. Anya walked into the hall and turned into the shower and bathroom area where the lockers were. \n\nAnya opened her locker and unbuttoned her white collared clinic shirt and hung it carefully on its hanger. Her full-armor bra, as she called it, secured her C cups. She arched her back to reach around and get the clasp, dropping her arms forward to slide off the padded bra. She reached into her locker for her sport top, her perfect breasts tracking the momentum of her movements. \n\nShe pulled on the white sport top, tight-fitting for support, stopping an inch below her breasts. She adjusted and pulled and gathered until her girls were ensconced front-and-center and her arms moved freely. She reached down to the zipper of the khaki shorts she had to wear for work. These knee-length pleated-fronts were professional and functional, but standing at only 5'4\" Anya worried that they made her look short and frumpy, and she was always glad to get out of them. \n\nShe dropped the stiff fabric of the shorts to the floor, and stepped out, keeping her socks and clunky high-tops, but wearing only the sport top and her panties, a fancy pair of light mocha-colored lace with a satin band at the waist. Like her bra, the panties were just slightly overpowered by the roundness of the flesh they contained. \n\nShe looked in the mirror and smiled. She had raided the panties from a lingerie set this morning for lack of laundry. They were certainly made for seduction, she thought. She put her hands on her hips and turned, admiring the shadows across her taut, flat stomach. Her short blonde hair bobbed a bit as she turned. She was vain, but she could laugh about it... it was hard not to enjoy having a body like hers. The boys certainly seemed to enjoy watching her. \n\nIn the last year, she had become a beautifully proportioned woman, if in miniature. Because she was shorter, her breasts, even pushed down by the sport top, seemed large and noticeable, though they were quite matched by the shelf-like ledge at the top of her hips leading to her nineteen-year-old gravity-defying ass. Her yoga-trained legs were strong and defined, though still with just a hint of softness. \n\nShe snapped to, remembering that she needed to hurry. She rummaged around in her bag looking for her tights before remembering that she had found no clean tights that morning. Normally it was tights under boxing shorts, but the laundry crisis was requiring some innovation, and that morning she had grabbed a pair of running shorts, forgetting about the panties and no-tights situation. \n\nShe pulled on the baby-blue silk running shorts with the university's logo emblazoned on the seat. They slid freely over the satin and lace of her panties but barely covered the bottom of her ass. Oh well, she thought, that will have to do. Then she remembered that she also did not have a sweatshirt to go over her top. \n\nThe sport top covered her, but the natural movement of her firm breasts was still pretty obvious, and a breeze or just pumping a set of free weights meant that her nipples could be discerned through the fabric as well, so she always wore something on top. She grabbed her white clinic shirt off its hanger and threw it on, leaving the top unbuttoned and the tails loose. Problem solved. \n\nBy ten to five Anya was heading back down the hall with her gym bag and books, calling out her usual goodbye to Lorraine. She was across the lobby and almost out the front door when she heard Lorraine, call out, \"Hold on, Anya, I need you.\" \n\nLorraine emerged from her office and walked out to the front desk in the lobby. She was wearing the same khaki shorts and white collared clinic shirt, with the Sports Rehab Department logo over the right breast, but her shirt also had \"Lorraine\" stitched above the other breast. She was 27 years old, a little taller, slender and less curvy than Anya. She was already a licensed physical therapist and a doctoral candidate. She managed the clinic for the big cheeses. \n\n\"Coach Weston just called,\" she said. \"He's sending over a player who apparently fell-out during practice with cramps. He was probably dehydrated. He's fine now, but he's going to need a basic assessment, counseling, and some manipulation and massage.\" \n\n\"Shouldn't you do that?\" asked Anya hopefully. \n\n\"I have my dissertation proposal review in twenty minutes, remember?\" answered Lorraine. \"I put it on the schedule, but I didn't know I would need you to cover until now, and everybody else is gone.\" \n\nWell, there goes the workout, thought Anya, as she took her hand off the front door, and turned around. \"That's OK,\" she said, smiling. \"I can do it, but what about locking up? We're still closing, right?\" \n\n\"I'll just lock you in when I leave, and then when you leave it will lock behind you,\" said Lorraine. \n\nJust then, the front door swung open, and the two women looked up to see a tall young black man step into the room. He was at least 6'3\" and had skin the color of strong coffee with milk. He was still wearing his big black silk soccer shorts and jersey and cleats. He had a school windbreaker in his hand, and little pieces of grass still stuck to the dark skin of his calf muscles above his socks. He moved smoothly, with confidence, a slight swing in his long and muscular arms. \n\nBoth women just stared for a half a beat, and he noted their reactions. \n\nHe hit them with his patented knockout smile, leaned forward in almost a bow and said, \"Hello, I'm Mari-AL Nu-KEEmi. Coach Wess-ton sent me.\" As he reached out his hand, Marial played up his African accent through the low tones of his voice. He knew the ladies liked the accent. \n\nLorraine recovered her professional demeanor first and firmly shook Marial's hand. \"Yes, Marial, Coach Weston explained your situation on the phone, and Ms. Napoli will write-up the clinical assessment,\" Lorrain said, gesturing to Anya but shooting Anya a look of disapproval. \n\nAnya stood there with her gym bag over her small shoulder and her white collared clinic shirt half open over her tight gym clothes... hardly the professional look the clinic wanted... but she reached up to shake Marial's hand and said, \"Nice to meet you.\" His hand closed completely around hers, as she said, with her best professional smile, \"please go to room two and we'll start with some questions.\" \n\n\"Nice to meet you, Anya, thank you,\" he smiled slowly, as Anya gestured with her arm to the examination rooms and he stepped past her. \n\nShe turned to follow the young giant, but Lorraine detained her as he strode away. \"You can't wear that shirt like that,\" Lorraine said, looking over Anya's shoulder to watch Marial's large figure disappear down the hall. \"It's the clinic uniform, and it should be worn correctly.\" Lorraine was always concerned about how the clinic looked. \n\n\"You want me to change again?\" asked Anya, with some protest. She had thought her day was over. \n\n\"No, it's alright,\" answered Lorraine, \"the clinic is closed now, technically, so it's OK, but just don't wear that shirt like that while you're here.\" \n\n\"But I don't have anything else here right now,\" said Anya. \n\n\"Just work something out,\" Lorraine said as she turned to gather up her keys, \"I've got to go. Thanks for covering this, and just make sure the door is pulled-to when you leave.\" \n\n\"OK. Good luck on your review,\" Anya smiled, as Lorraine turned to lock the glass door of the clinic and leave. \n\nAnya sighed and walked back down the hall toward the lockers. She could see past the door that Marial was sitting on the side of the massage table, looking down and massaging his right quadriceps. \"I'll be there in one moment,\" Anya said as he looked up to watch her pass. \n\nShe dropped off her gym bag in the locker, put the clinic shirt back on the hanger, and then turned to look in the mirror and think. Although she was completely covered, she was only wearing about three ounces of clothing, not counting her high-tops and socks. The silky running shorts clung to her ass and stopped right at the top of her bare legs, and she could already see her nipples poking through the sport top, which noted every curve of her breasts like a second skin. It was too much for the gym, much less the office. \n\nWithout tights, there was nothing that she could do about the running shorts. She didn't want to put the dumpy khaki shorts back on because they covered too much and made her look short. She thought about the large young black man looking at her legs. She had never dated or even hung around with guys like that. He was so big. She cleared her thoughts. She could skip the gym but still make the store and dinner for her fianc\u00e9. \n\nAnya grabbed one of the folded clinic towels and draped it over her shoulders. Each end of the towel lay upon the top of either breast. In truth the towel seemed to accent the extraordinary lift of her rack. The towel came a little short, barely reaching to her nipples, but it did provide more cover. It will have to do for now, thought Anya, as she turned and walked back toward the room where Marial was waiting, gathering up her professional confidence and lifting her head. \n\n\"Hi, I'm Anya,\" she chimed, as she walked in, feeling instantly stupid because they had just been introduced. He was still seated on the massage table rubbing his right quadriceps. He looked up from his leg, dragging his eyes up her body, and noting the white shirt was gone. He looked directly into her eyes with a big smile framed by dark, pillow lips. \n\n\"Well, helloooo Miss Anya,\" he said, as his eyes quickly traveled back down her body, angling from her bare arms to the curve of her lower breasts holding up the towel ends, down the slight ripples of her stomach muscles to the swing of her high, round hips, past the gap at the top of her thighs, down her smooth legs to her little high-tops. \n\nAgain he played up his accent, \"I'm Marial, from Sudan.\" Even though he was seated and Anya was standing, his eyes were about level with hers. His low but gentle tones sounded friendly and self-effacing, like somehow he already knew the joke was on him. \n\nAnya relaxed, realizing that this was going to be easy. She started into the standard explanation of their procedures but deliberately slowed her speech down. In the introductory sessions at the university Anya had learned to be sensitive to non-native speakers. There were a lot of foreigners on campus. \n\nAnya sat at the small writing desk next to the wall while she recorded the information on the forms attached to a clipboard. Marial was 21, on a soccer scholarship, lives in the athletic dorm, cramping and suspected muscle-pull in the right quad and upper left pectoralis. \n\nAs she finished reading each question from the form Anya would look at Marial for his answer, and then look back to the form to write. He was still seated on the edge of the massage table, facing her across the room, which felt smaller with him in it. His knees pointed to somewhere on either side of her. She couldn't help noticing how his muscular thighs rose up from the table, like fat bundles of cable reaching up from his knees to push out the silk of his black shorts. Soccer players have great quads, she thought. \n\nMarial sat palms down on the edge of table, his arms locked straight, holding up his raised shoulders. His arms too, looked like cables or machine parts, strong and defined and... large. \n\nAs she went through the allergies with him, Marial would look down when he answered, and Anya's eyes would stray past a little bit more of his body as she listened. As her eyes flitted back and forth, Anya would linger for a second on Marial's large arms, twisting down to the strong knees just inside his hands. She traced the muscles that flowed up his thighs. They looked hard and sinewed. He seemed like an over-sized anatomical model you might use for teaching. \n\nAnya felt her nipples rubbing against the fabric of her sport top. Her large puffy areolae and nipples got sensitive sometimes, but she was covered by the towel. She shifted how she was sitting a bit to maintain her modesty. \n\nShe asked him about past injuries and he looked down again, as if to concentrate on his English, and started explaining various insults his body had endured. Anya watched him as he spoke, sneaking a look at his legs again, the muscles of his thighs, when she suddenly felt a little zing shoot straight through her, like an electric shock. Anya was looking at his left quad muscles when she realized that part of what she was looking at was not his leg muscle and must have been, could only have been, a ridiculously large penis. It was the size that shocked her; it looked like two soda cans lined up in his shorts and running down his leg. \n\nAnya quickly snapped her eyes back to the paper in front of her and started writing. Oh... my... God, she thought. Her pulse quickened and her mind raced. I have never seen anything like THAT, she thought. \n\nShe had actually only seen two real ones in her whole life. Once was her last boyfriend's in high school, and then, of course, there was her fianc\u00e9's. They, however, were nowhere near this... no way. The rumors about black guys are true sometimes, she thought to herself. It was actually hard for her to believe that it WAS really what she saw. \n\nAnya stumbled through the next question and stole another passing glance at Marial's manhood as he answered, snapping her eyes back to the paper. Yep, she thought to herself, that really is, really there. Damn. \n\nShe couldn't help herself but to look. The next few questions were like a cat-and-mouse dance of Anya stealing glances when Marial would look down to answer. She would nod her head and say \"yes\" to seem as if she was listening to his every word, but she couldn't believe what she was looking at. At one point, she would almost swear, it looked as if his penis jumped a bit, growing longer down his shorts. Each look made her want to look again. She smiled to herself, thinking, Geez, that's like the elephant in the room. \n\nComing to the end of the questions, Anya was nodding as Marial answered but she was staring at his crotch, her lower lip starting to curl slightly beneath her upper teeth, when she realized that Marial had left his head down but had cast his eyes up. He had stopped talking and he was smiling a little as he stared at her. There was lightening in his eyes. \n\nAnya's eyes snapped back to the desk, her hand writing furiously. Had he caught her staring at his penis? Oh my God, she thought again, embarrassed. Marial said nothing, however, so she just acted normal and asked another question and finished the interview like nothing happened. She froze out the image from her mind (at least almost) and kept her eyes on the paper. \n\nThe final information included body weight, so Anya asked Marial to please stand on the scale. She stood up and stepped next to the device as Marial rose from the massage table slowly until he towered over her. Anya cast her eyes down as he walked over to her. His hand went back to his right quadriceps injury, holding the muscle through the silk, which only made his huge cock more obvious as it tried to rise forward and upward down the left leg of his large silk shorts. \n\n\"Stand right here, please,\" Anya almost whispered as she kept her eyes down, but sort of stared sideways at the can of hair spray in between this guy's legs. Her lips parted a tiny bit when he put his left hand on her bare shoulder to steady himself as he stepped up onto the scale. His fingers closed on her back as his thumb came down to the rise of her right breast, just barely under the edge of the towel. Anya felt her nipples press into the sports top. He released her shoulder to stand on the scale, putting the object of Anya's fascination in profile, just inches in front of her. \n\nWhen she raised her hands to adjust the scale, she actually had to pull them back to avoid touching the large, silk-covered lever sticking down his left leg. As she reached forward, over the fat tent in the front of his shorts, to move the weights, her hand trembled. She still just could not believe what she was seeing. It was thick and masculine and just intoxicating. She couldn't help but imagine what it would look like, what it must feel like, the weight of it. \n\nSuddenly, with his massive cock moving right in front of her, within easy reach, and with the wall next to her and with him facing the wall, and with her fantasies quickening her breath, knowing they were alone, she suddenly felt like she was doing something wrong. She quickly finished. \n\n\"OK, step down please,\" she said as she stepped back. She sat back down at the little writing desk to record the information, her eyes busy with the form. \"You may sit down,\" she said as cooly as possible, without looking up. \n\nHe stood there for a second, large but lean, young and cocky. With a grin down at the top of her blonde head, Marial stepped back to the massage table and sat back down. \n\nAnya ran through the standard pre-sports-massage speech, keeping her eyes on the form on the clipboard on the desk. She came to the end of the speech, explaining that \"I will leave the room for a moment. You may disrobe as much as you feel comfortable and lie face down and cover yourself with a towel. I will knock when I return.\" Anya quickly stood up and raised her eyes to look at her student-athlete patient. She was all business. \n\nHis eyes were following her up and stopped at her breasts. The flash returned to his eyes. Anya realized her nipples were poking right through her sport top just under the ends of the towel around her neck. Standing up they must have been about as obvious has Marial's huge organ, which still pushed up the black silk fabric of his shorts. \n\nShe felt herself flush as she realized where her own eyes were looking, and Anya snatched the clipboard up from the writing desk and folded it in her arms in front of her boobs. \"I'll knock in just two or three minutes,\" she said as she spun on her heel and strode out of the room with all the professionalism and nonchalance she could muster. \n\nAnya went straight back to the women's locker area and opened her locker and blew out a full breath. \"Whoa,\" she thought, \"that was too much.\" She had a picture in her locker of herself and Brian at the beach at sunset. \"Just get a grip and be a professional and do the sports massage and file the assessment and go to the market and go home,\" she chided herself. \n\nShe picked up her phone and dialed her fianc\u00e9. \"Hi Honey,\" she sang when he answered. He was driving home, so they kept it short. \"I'm held up with one late case at the clinic, but I can still cook you dinner,\" she chimed. They quickly determined for him to stop at the market so that she could come straight home and they could cook together. \"I love you, Mr. Fianc\u00e9... goodbye.\" She finished. She remembered how in love she was and how happy she was to be getting married. ",
        "She reached into her locker and got her clinic shirt and put it back on over her sport top, buttoning the buttons. \"I've got to cover up and be a little cooler and more efficient, here\" she thought. She reached for the clunky khaki shorts and almost stepped into them, then she thought, maybe that will be too obvious, if now I cover up completely. She put the khaki shorts back and unbuttoned the last three buttons on her clinic shirt and tied the tails together at her belly button, leaving just a wink of skin before her running shorts began. She looked in the mirror. She was still dead sexy with those running shorts encasing her nineteen-year-old yoga ass, but now at least her breasts and shoulders were totally covered. \n\nShe walked back to the examination room and tapped smartly but quietly on the door. \"Come in,\" she heard Marial's deep voice say. She opened the door and walked in. Marial had closed the blinds at the window, which Anya was supposed to have done but had forgotten in her haste. Her eyes adjusted and she saw that he was laying face down on the table with one of the clinic's white towels draped over his midsection. \n\nHe was so tall his feet dangled just off the table, and his arms barely had room at his sides. Anya crossed to him and reached for the massage oil as she explained that she would start with his hamstrings and the back of his legs before addressing his quads. She held her hands together to warm them up and then reached down to touch Marial's coffee skin. \n\nIt was like touching a super-sized man. Her pressing fingers could feel the sinews of his muscles underneath his butter-smooth skin. She relaxed into her work and returned to her clinical interest. She recited the anatomical names to herself as she worked his lower legs and moved up to his hamstrings. All of the usual parts were there, of course, but they were magnified, as if for study. \n\nOne part is certainly magnified she thought, glancing up at his midsection, but he was completely covered, face down and still. \n\nShe finished the first leg and moved around the table to begin the other hamstring. She stood at his hip facing his feet, working her hands down the back of his leg from just below the towel to his knee and calf. She focused on the job, which was almost half done. \n\nWithout moving, Marial could see her now, or at least that amazing ass that was facing him. Her heels were pretty close together, like a good girl, but each time she pressed her hands down his leg she would lean forward, rotating her ass out so that the bottom of her little round cheeks would push out below her shorts. He watched the gap between her legs move slightly forward and back as she moved, and he felt his cock getting harder under him. \n\nMarial decided to make a play. He knew, of course, that she had seen his fat cock, and he had watched her reaction, and that little bubble-ass was just too perfect to pass on. You can't get what you don't go for. He dropped his right arm off the table and swung his hand down to just inside Anya's ankle. As Anya leaned forward again, Marial traced his fingertips all the way up the inside of her leg. \n\nAnya let out a funny sort of squeal as she felt his fingers run up her bare calf, skipping up the inside of her thigh. Without thinking, Anya rose up on her toes to \n\nescape the trajectory of his touch, almost jumping to get away, but his large fingers still bumped against her silk-covered pussy as he swept upward. \n\n\"You can't DO that!\" she almost screamed as she spun around. She was shocked and mad and she could feel her nipples and where he had touched her. She was breathing rapidly. \n\n\"Oh, I'm so sorry,\" said Marial with an abashed face, eyes up, as if he were shocked too. \"This is OK in my con-try,\" he urged quickly as explanation, using his best accent. He hadn't actually been to Sudan since he was eight. \"In my con-try this is nor-mal, it is nor-mal to have touching with a massage.\" \n\nAnya caught herself, remembering her training. She launched into her professional rap about unwanted touching and the rules of the University. She had rehearsed this speech in her head, but she had never had to give it, and now she was ready. Her tone was strong and scolding, but he was still lying face down with his head turned up pitifully as he listened. He seemed truly apologetic as he looked up at her, and she saw that even though he was big and powerful he could be sorry like a little boy. \n\nHer attitude softened. \"Do you understand the rules?\" she asked. \n\n\"Yes, Ma'am,\" Marial said slowly and deliberately. \n\n\"No touching of any kind except on my instruction,\" Anya repeated. \n\n\"Yes, Ma'am,\" Marial said again, like a school-boy. \n\n\"You could be suspended or expelled, you understand?\" Anya emphasized. \n\n\"Yes, Ma'am, I'm very sorry,\" Marial intoned with seriousness. \n\n\"OK, then,\" said Anya, taking a breath. \"Let's finish up. Keeping yourself covered, please turn over and lie on your back so that I can address your quadriceps.\" \n\nAnya turned her back and busied herself with the massage oil as she listened to Marial turn over and adjust himself on the table. She knew that when she turned around that he would be face up, so his large manhood was going to be there under the towel somehow. She just hoped it wouldn't be too obvious in the folds so she could finish this. \n\nWhen she turned around her eyes went straight to his penis, plain to see lying there under the towel. It seemed even larger now wrapped in white terry cloth, like a thick nine inch pipe pointing up his body, to about 2:30 on the clock. She turned away immediately and reached for more towels. It felt like all the air was out of the room for a second, then she heard Marial ask, \"Could you please give me another towel to cover myself.\" \n\nRelieved, Anya breathed out and cooly said, \"yes, of course,\" as she handed him another towel, reaching back without turning toward him. She busied herself and listened as he adjusted again, and then she took a deep breath and turned toward him. She was surprised to see his huge penis was still basically right there, under the towel, for her to see; he had put the second towel over his face, covering his eyes and just letting his nose peek out. \n\nAnya automatically reached for the massage oil and put her hands together. The ritual readied her for work, but she breathed to clear her head before starting to press her hands into the tops of his thighs as she was trained. She worked like normal, but she was in a kind of trance, however, because now that Marial could not see her, she could look at the long thick organ growing from between his legs. \n\nAs Anya's small hands traced up the muscles of his thighs, she watched Marial's cock stir in tiny starts, growing even fatter. She really just couldn't believe how big around it was, and it was starting to poke up farther on his stomach, more like 2:00 now. \n\nHer breathing was labored, she realized. Ok, Ok, Ok, she said to herself. This is OK. Nothing's happening. I'm just looking. She knew she was totally turned on, not by Marial so much but just by his man-god penis. As her hands massaged his legs, she imagined that they were massaging his huge sex muscle, kneading his hard erection. The monster cock seemed to move up again, to almost one o'clock, and Anya almost froze as she realized that if his penis grew any larger the tip would poke out from under the towel. \n\nShe panicked for a second because she didn't know what to do. She was thankful that Marial could not see her because he still had the towel over his eyes, but surely he must know how obvious his hard-on was. But, she thought, he wasn't doing anything wrong or breaking any rules. She thought about putting another towel over his erection, but then she was mortified to think that he would know what she was doing and why she did it. \n\nShe caught herself and just continued like normal. \"Nothing is happening,\" she kept saying to herself, \"this is just a normal sports massage on an injured athlete. I'm not doing anything, and he's not doing anything.\" \n\nShe didn't really want to cover up what she was looking at. \n\nAs his cock kept slowly moving north and growing, it started to lift the edge of the white towel. Anya was still down by his legs looking up his body, but she could just begin to see the tip of his dark purple-black crown against his abdominal muscles. She almost stopped breathing, but Anya just kept working the muscles of his quadriceps with her hands like normal. \n\nShe secretly stared out of the corner of her eyes. It looked like a dark, big fat plum mounted on a club. She could see that he was not circumcised. Anya was transfixed; she had never seen anything like this fat cock poking up from under the towel, now pointing almost straight up Marial's body. Each time she touched him his cock seemed to strain upwards a little, swelling. \n\nAnya made sure to keep her hands moving normally, but she was staring, mesmerized, at the largest, most masculine object she had ever seen. She wondered how it would feel in her hand... the weight of it. \n\nShe was a momentarily frightened to remember that she was alone with this massive hard-on, and that this hard-on was actually for her, which practically sent a jolt of electricity straight between her legs. This obvious sexual turn on surprised her. \n\nIt's OK, nothing is happening, she kept repeating to herself as she continued studying the tip of his huge cock. In one way, she felt proud that she was the cause of this impressive display of manliness. \n\nSuddenly realizing that maybe too much time was going by, Anya tore her attention away from Marial's gigantic organ and announced in the most normal voice she could manage that she was finished with the leg manipulation. Facing away for a moment, she exhaled deeply and thought, great, almost done. I just finish up and get him out of here and write it up and go home. \n\nMarial had reported cramping in his left deltoid and pectoralis as well, so Anya instructed Marial to say right where he was. \"Oooh Kay, Anya,\" he said slowly from under the towel across his face, using a relaxed deep voice that sounded like something out of 'The Lion King.' \n\nShe turned around again and took a nice drink of the sight of his manly rod again, but then walked around the table, up past his hips and past his monumental organ. She leaned over him and pressed her fingertips into the top of his chest and shoulder, making small circles. Now she would have to look over her shoulder to see his huge penis, which was closer to her now, right next to her left forearm, and about the same size. She looked, and now she could see more, how the head flared out from the shaft, which itself thickened under the towel. \n\nOH... my... God, she thought again. That is a fat-hammer of a cock. She jerked her face back towards her hands on the front of Marial's shoulder and pressed into his deep brown skin. \n\nShe just concentrated on her work. Anya kept her hands together to create more pressure, gathering up her ample breasts in front of her, swaying a bit under the clinic shirt as she continued the small circular motions. Anya was almost finished and glad of it. \n\nMarial watched as Anya's breasts dipped in and out of his view. From under the edge of the towel he could just see a narrow strip straight down his body, past the small, feminine hands pressing into his chest, down to where his fat cock was sticking like an inch out of the towel. \n\nHe knew she must be looking at his equipment... she wasn't the first female to notice... and she wasn't stopping. That thought alone made him hard as Hell. \n\nMarial watched as she made circles on his chest, her left elbow moved back and forth as she stroked, sometimes just over his cock. He decided he had to make another play. \n\nWatching from under the towel, he timed it perfectly, clinching the muscles of his erection to make it rise up from his stomach just as Anya's elbow swung through. Anya wasn't watching, and she jammed her elbow into the head of his penis with some force. \n\n\"Whoa!\" Marial cried out as he sat up to face the astonished Anya. Anya was in shock, her small hands raised on either side of her face, like she was being held at gunpoint, her eyes large and looking down at his midsection. Marial's right hand kept the towel from falling away from his crotch. \"Are you trying to injure me again?\" Marial asked, voice raised in his best fake outrage. \n\n\"I'm so sorry,\" Anya quickly said, frozen and mortified, with her eyes still locked on the shaft under the towel in Marial's right hand. \"I'm so sorry. I didn't mean to.\" Sitting up, his cock seemed to stick straight up from the table some eleven inches. \"Does it... did I... I mean, I'm sorry if I hurt you?\" she quickly finished, her voice trailing upward. \n\nMarial set his jaw. \"I'm going to report this to your supervisor,\" he said darkly, moving as if to rise and leave. \n\nAnya automatically dropped one hand as if to block him, quickly saying \"Please, don't, just let me...\" \n\n\"Just let you what?\" Marial asked, looking straight into her eyes accusingly while he let his right hand drop slightly, revealing the top two inches of his fat cock. \"Just let you do what? You already hurt me,\" Marial said, as if he were offended by a low offer in the marketplace. \n\nAnya's eyes stared at the penis pointing up toward her as she answered \"Just let me see if... if you're OK.\" \n\nMarial let his hand drop further, revealing another inch of his cock rising straight up from the massage table where he sat. \"How you gonna do that?\" he asked slowly, in a thick accent, watching her stare down at his cock. \"You hurt me,\" he laid on. \n\nAnya felt terrible and guilty and incredibly turned on all at the same time. She could see now how it was fatter in the middle. She took a half step toward him and began to reach forward, but then she froze. \n\n\"You gonna fix it?\" Marial asked, daring her, leaning back slightly. This action resulted in a slight push of his cock upwards and toward her. His right hand slipped a little farther down, showing more over the towel. Anya stayed still, just staring for a second, that turned into two seconds, looking at the biggest man she had ever seen. \n\nShe could see practically the whole fat arch of his erection, but she suddenly knew that he wasn't really hurt at all, and he just wanted her to touch him, just like the guys in high school. \n\nBut this was something new because this was the first time that she actually wanted to touch a cock... badly, more than anything, but she had never cheated on her fianc\u00e9 and her professional training was kicking in. She dropped her hand and shook her head and said, \"No. That's not right. I can't do that.\" She turned half away from him, and looked away for a second, but she failed to hide the disappointment in her shoulders. \n\n\"Tell you what,\" Marial proposed quickly, his fat cock still straining forward toward her, \"I won't tell nooo-body that you jammed your elbow into my cock... no supervisor, no report... if you will just touch it like is normal in my country.\" \n\nWhen she didn't immediately shut that down, Marial knew he had a shot. \n\nAnya looked over her shoulder toward him, and her eyes dropped to his cock again like gravity pulled them there. He was almost all uncovered now. Her fianc\u00e9 looked like a little boy compared to Marial. It was unbelievable. So manly. \"What do you mean?\" she asked vacantly, staring. \n\n\"You touch me until I come,\" Marial answered quickly, like it was a common fact, \"or I report to your supervisor... that you hurt me in the private part with your el-bow.\" \n\nAnya was shocked by what he said. The fat cock bobbed around a bit when Marial spoke. She watched the big head. She knew Marial was playing her, but she did, actually, WANT to touch his magnificent cock. She stared for another moment, her lips parting slightly. \n\nHe could report me, even though he is not really hurt, she thought. Her nipples spiked forward. OK, she thought to herself, all he wants is a hand job and nobody will ever know. Just a hand job like high school. \n\nShe looked up from his cock and directly into his eyes for a moment. \"You have to leave as soon as we're done,\" she said evenly, \"and you have to promise not to tell anybody anything. No reports or anything.\" \n\n\"Ohhh-kay Anya,\" Marial smiled in his deep voice, leaning back a little further, his flag at full staff. \n\nAnya spun around and grabbed the massage oil. What have I...done? she thought in a panic. She was so excited she was almost trembling, but she felt guilty too. This was bad, she knew it. She had a fianc\u00e9 now, but... it was just a hand job and nothing else, like high school before Brian... except with this HUGE black guy lying on his back naked. \n\nAnya took a deep breath and turned around with the massage oil in her left hand. She stepped forward, and Marial pulled his right hand behind him, taking the towel completely away and revealing the full extent of his manhood. \n\nAnya froze again on the threshold, staring. A zing of fear went through her, looking at the monster cock she was about to grasp. \"OK, I just touch you, with my hand,\" Anya stammered, \"until you come, and that's all, and then you leave, and this never happened, right?\" \n\n\"That's right, Anya,\" Marial soothed, smiling and shaking his large square head up and down with assurance, \"it won't take too long.\" \n\nA second of silence hung at the threshold. \n\n\"Lay down again,\" Anya ordered, but Marial stayed still, seated on the edge of the massage table leaning back on his hands. His eyes were about level with Anya's, and his cock was at the perfect height for her hands. \"No,\" Marial answered, \"this is just fine.\" \n\nAnya felt small and intimidated all of a sudden. She had never just jerked a man off in a room. \"Look, I'm only doing this because you are making me, so just lay down again, okay,\" Anya said quickly. \n\n\"Well, if I am making you, Miss Anya, then let's get started,\" returned Marial smoothly and with a smile, daring her. He didn't move. \n\nAnya looked down again at the fat play thing that was waiting for her touch now. She stepped forward, raising her hands. He was making her do this, she thought. \n\nShe reached out and grasped the middle of his cock with her right hand. She just held it and felt the hot weight of it. Her lips parted and her jaw came forward slightly as she poured the massage oil directly on the tip and let it drip down like chocolate on a sundae. She quickly put the bottle of oil down and joined her left hand to her right, allowing her to get her fingers all the way around his fat shaft. She caught the oil as she slowly pulled both of her hands up, squeezing and pulling up on the biggest piece of man real estate she had ever imagined. \n\nMarial breathed in slowly as Anya's hands quietly slipped around his shaft and began to pull upwards, sliding upward. Her fingers folded all around the head of his cock. \"Yes, like that,\" Marial encouraged her. \n\nShe immediately felt the hardness and the heat of the thing in her hands, her fingers and thumbs interlacing slightly. She had to step closer between his knees to get close enough to handle it properly. \n\nAnya was still a little frightened by the big man sitting up just in front of her. She had never actually done this... stood between a big man's knees and stroked him off while he just watched her. Most of her (few) experiences like this were in dark cars, and neither of the two boys in high school were anything like THIS. They were boys; this is a MAN here. \n\nAnd in that way, Anya felt like a girl with her first lollipop. She couldn't believe this beautiful penis in her hands. She touched every part of it, tracing her fingertips all around the crown, touching the slit on the tip with her index finger. Her nipples ached against the fabric of her sport top, and she could feel the warmth between her legs. She loved touching it because a cock this fine deserves to be touched, she thought, and now she wanted to make it come. ",
        "After many strokes Anya looked up at Marial. He was staring intensely right into her eyes as she continually served his manhood with her little hands. She looked back down immediately, too embarrassed to hold his gaze. \n\nMarial had leaned forward slightly, as Anya diligently stroked her two small hands together slowly up and down his hard cock. He leaned forward more and quietly moaned encouragement to Anya. Anya redoubled her efforts. \n\nSuddenly, Marial moaned more loudly and swung his right arm forward to clasp down on Anya's left shoulder. Anya jumped, but she thought Marial was about to come so she kept squeezing and stroking him. Marial left his hand there, as if to steady himself, still quietly whispering, \"Yes, Anya... yes, Miss Anya.\" \n\nAnya could feel the powerful engorgement of his dick under her fingertips. She wanted to make this big cock come and she knew he was close. They both watched her small hands slide methodically up and down his tool, his hand still on her shoulder. When she would look up at him he would look at her and smile, whispering intensely, \"yes, keep going Miss Anya.\" \n\nAnya was so excited and embarrassed she started giggling. This was like something they were doing together now, like trying to get to the finish line. \n\nMarial put his head back, and his hand slid down her shoulder and around her back, like they were dancing. Anya stroked him faster. Her whole upper body moved up and down. \n\nMarial leaned back, breathing hard, and this action pulled his right hand forward so that he was really holding Anya not on her back but on her side, with the base of his palm on the side of her 19-year-old C-cup breast. \n\nAnya could not believe the massive dick in her hands, but it still wouldn't come for her. She dropped her right hand down to cradle one his huge balls and kept stroking just the tip of his shaft with her left. She had felt Marial's hand slide from her shoulder to her back to her side, and now further forward on her body. She looked down as she stroked and realized he was basically cupping her left breast through her two shirts. \n\nShe decided not to stop him because he was so close and she didn't want to lose any momentum. Her arms were actually getting tired, and maybe a little side-boob through the shirt would make him come. She switched hands and went for his other testicle, which felt like a new tennis ball. \n\nMarial started moaning louder. Anya's tongue came out of her mouth a little as she returned both hands to his shaft. Marial started squeezing Anya's breast a bit as she stroked him harder than ever. He let his thumb finally slide down around the front of her tit and over her swollen left nipple, poking up against the fabric. \n\nThe sexual charge coming from her nipple almost buckled Anya's knees, and she panicked. She released his straining horse cock. \"You CAN'T touch me, remember?\" Anya said as she jumped back. \"That's the deal!\" she said. \n\n\"Oh, don't stop!\" Marial cried piteously, leaning forward and laughing and grabbing his own cock to keep stroking. \"I'm so close, you have to help me, Miss Anya, please...\" he pleaded like child. \n\nShe relaxed a bit. He kept pleading, \"Please, just finish, please...\" The sight of this giant young stud stroking himself and begging and smiling while he looked at her made her feel hot and sexy. She could literally see how much he wanted her, and it was a LOT, and she wanted to make him cum. \n\nMarial read her like an open book. \"Take off that clinic shirt and let me see what you've got, please Anya\" he casually requested. \n\n\"What? No, no way. That's not the deal,\" Anya returned. She crossed her arms in front of her, all the while watching his huge cock as he continued to stroke it. \n\n\"It will help me, Miss Anya, to finish,\" Marial begged. \"Just take off that top shirt and show me what you were wearing before again, please, the same as before,\" he bargained. \n\nAnya paused, raising one knee slightly and screwing her toe into the ground. She was excited that he wanted to see her body while he stroked his cock. She reached for the tied shirt tails. \"OK, but that's ALL and NO touching, OK,\" she said sternly. \n\n\"Ooohh-kay, Miss Anya,\" said Marial as he leaned back smiling and stroked his huge cock slowly straight up and down. \n\nShe was only taking off one piece of clothing, and she was remaining completely clothed, and she wasn't showing him anything new, but Anya had never felt this sexy in her life. Taking off her shirt just so that this huge man could look at her and cum made her feel extra naughty. Her hands automatically moved slowly, unfastening each button until her shirt was open. She watched his eyes ravish her as she lifted the stiff shirt straight up and back and off her shoulders, revealing the skin-tight white sport top, arching her back a bit and pushing her amazing tits straight out toward him. She knew that he could practically see her nipples. \n\n\"Ooooh yes, very nice, Miss Anya,\" Marial smiled as he kept stroking, his eyes burning for her now. \"Now come here and help me cum.\" \n\nShe stepped forward and took over cock service with both of her small hands, and Marial laid down on the massage table, which had the effect of rotating his cock upward almost reaching Anya's chin. He propped his head up with the towels to watch Anya as she leaned over him, her breasts swaying in her sport top as she ran her hands up and down his cock. \n\nAnya felt more in control now, with Marial lying down and his massive cock below her, just inches from her face. She knew he was watching her breasts as she worked him, and she kept her elbows up a little so that her breasts would move freely for him. \n\nShe loved stroking his cock. She loved grabbing the thick post that was the very base of his dick and swinging it. She loved pulling back his foreskin with one hand and exposing the flared helmet of his dick, and then stroking it all up and down with the other hand. Her tongue licked her lips unconsciously, and she realized that she actually wanted to suck on his massive dick a little. She wanted to feel the head with her tongue and with her lips. She had never WANTED to suck a penis before, but this one was just so strong and manly that it needed to be sucked and deserved to be sucked. \n\nRight on cue, Marial moaned, \"Please, Anya, kiss it with your mouth.\" Anya looked at him as she continued pumping her hands up and down. His eyes were half closed and his breathing was ragged. She decided to tease him. She leaned forward, her mouth slightly open, watching his eyes open further in excitement. Her lips hovered a half-inch from the tip of his dick, bobbing with the rhythm of her hands. She opened her mouth and exhaled her hot breath over the head of his cock. Still looking at him, she slowly opened her mouth further and with a naughty smile said, \"no.\" \n\nMarial grimaced a smile and let his head fall back to the towels, saying \"Nooooo... oh please, please Miss Anya, just a little bit, please.\" He let both of his fists fall off the sides of the table in mock despair. His arms almost reached the floor, and his left hand found and completely encircled Anya's left ankle. \n\nKeeping her mouth close to the large, round crown of his dick, she kept stroking and squeezing up and down his shaft. She could see some clear thick fluid coming from the opening. She felt Marial's hand leave her ankle and slide up the outside of her leg to her shorts to reach around her hip bone. His touch was electrifying, but while she kept stroking his cock with both hands, like she did this all the time or something, she looked at him said, \"Hey, no touching! Remember?\" \n\n\"Oohh-kay Miss Anya, but at least let me see that sexy ass of yours again,\" he said as he pulled her hips a few inches around toward him to the side of the table, causing her to shuffle over. He dropped his hand again to her ankle. She never let go of his man stick, but now her round little bottom faced more toward his face and she faced right down the shaft pointing toward her mouth. She had to lean over a bit more to reach, which caused her face to come even closer to the biggest penis she figured she would ever see. Her tits swayed down and were sometimes touching Marial's obliques, and she knew he was getting an eyeful with her bent over in these silk running shorts. She was very excited that looking at her... at her pussy... made his cock so hard and huge and angry. \n\nAnya's hands and arms were really staring to hurt, and leaning over while working steadily was wearing her out, but for some reason that remained unexamined, having come this far, she desperately wanted to succeed at this. She could feel Marial's hand move up her leg a bit and caress her calf muscle, but he was staying below the knee. \n\nAnya couldn't keep up the arm movements any longer. She breathed out and moved one foot forward a bit to relax her torso and lean down more against him, lifting her ass even more prominently. She let both of her hands slide all the way down to the base of the fat beast before her, and started waving it back and forth, right before her face. She let it touch her lips a little, and then her face. She could feel how hot and thick it was against her cheek. \n\nWhat the hell, she thought, nobody is going to know about this, so does it really matter if it's a little blowjob instead of just a hand job? She pointed the shaft at her mouth and lightly kissed the tip of his cock, tasting his salty fluid. Without thinking, she stuck her tongue out, tickling his slit with the tip, and drawing out a couple more drops of pre-cum. The taste was salty and strong and it made her hot. Holding his foreskin all the way down with her hands, she took the whole crown into her mouth, wrapping her lips around the fat rim at his shaft. \n\nMarial's whole body jerked upward as he moaned, \"Yesssss, Anya, like that... suck it like that...\" His hand had moved suddenly to the outside of her thigh, below her shorts, but Anya didn't notice because she was sucking the biggest cock in the world, or it least the last two inches of it, while she started stroking him with one hand. \n\nShe loved sucking on him and she could feel his cock head grow even harder in her mouth, as she stroked, but she still jumped when she felt his hand move up the outside of her leg to her shorts, his thumb fitting right under her left ass cheek, only inches from her feminine opening. She decided not to stop him as long as he didn't touch her THERE. He is close to cumming and it will make him cum, she thought. She didn't want to interrupt her mouth's contact with the end of his manhood. \n\nMarial was close, in fact, but was holding back... to take this heavenly sexy angel completely. He was thinking his mates would never believe him, unless he had some kind of proof. His eyes flared, but he kept on whispering encouragement to the curvy little co-ed sucking on the end of his cock. With his left hand now basically holding the bottom of her ass, Marial lifted his right hand and quietly reached back up over his head to his windbreaker hanging on a hook against the wall. \"Yes, your little mouth feels so good... suck me like that,\" he continued. He located his smartphone and held it under the table while he activated the video function. \"Yes, Baby, Miss Anya, suck my dick like that... just like that,\" he cooed in his whisper as he slowly raised the phone up by his face and started recording. \n\nFacing the other way, Anya was pre-occupied sucking the mammoth cock head in front of her, sticking out her tongue and bathing his dick in her saliva, extending her lips to get maybe another inch in her mouth, bobbing her head up and down while stroking him constantly. She felt somehow that this great specimen of penis deserved a great blowjob. If you're going to do it, do it right, she thought, as she tasted more of his pre-cum. He was almost there. \n\nHis right hand still holding his smartphone, Marial started moving the fingers of his left hand, first squeezing her ass cheek very slowly then sliding around her hip bringing his finger tips dangerously close to her \"no fly\" zone. She redoubled her efforts with his cock. \n\n\"Oh, Miss Anya,\" she heard him say, \"I can see your little pussy is so hot.\" When he squeezed her ass she could feel her labia rub together, and she knew he was right. She was wet, which made her suck on his cock with renewed ferocity, but he wasn't touching her there, she thought. He was only talking. \n\nMarial let the circles of his left hand grow wider, dropping to the skin in between her knees. \"Your mouth feels so good on my cock, Miss Anya Napoli, and your little pussy looks so hot... just keep sucking me like that,\" he droned on softly. She didn't see that he kept the video running. \n\nMarial raised his left hand, stroking the baby-soft flesh of her inner thigh up and down, almost touching the taught silk of her shorts stretched over her pussy. Now he moved his hand back to her left ass cheek, this time pushing his thumb up underneath the fabric. \n\nAnya felt him basically touching her everywhere BUT there, and with the monster cock head in her mouth his touch was starting to drive her crazy with anticipation. \n\nShe heard him continue, \"Yes, I love that you are sucking my cock, Miss Anya Napoli, while I touch you like this...\" She felt his thumb glide around under the inside of her ass and she jumped when he rubbed the silk right up her slit from her clitoris to her vagina. She exhaled, her knees almost buckling, slobbering on the fat cock in her mouth, as she swung her right hand around to bat his hand away. \n\n\"It's Oohh-kay, Miss Anya,\" he cooed, his hand returning to the same place almost immediately. She felt him press his thumb inward against the fabric of her shorts right against her opening. \"Yes, I love touching your hot pussy Miss Anya Napoli, while you suck my cock so good like that,\" he said. \n\nWhy is he saying my name like that?, she wondered. It felt sooo good... too good, she thought, and she pulled her mouth off of his cock. She froze her hands hoping that he would get the message and stop, but he just kept stroking up and down her slit with his thumb, which was lighting a fire in her. \n\n\"Stop touching me there,\" she said sharply, still facing his cock and away from him. \n\n\"Oh nooo Miss Anya,\" Marial said, \"I like to touch you, and I think you like it too.\" \n\nShe reached around to bat his hand away again and turned to face him, ready to lay down the rules again, or better yet, just stop. This game has gone too far, and the fun's over, she thought. \n\nHer 19-year-old face came clearly into focus in the foreground of Marial's view, as she still grasped his monster black cock in the background, glistening with her saliva. It took a full second or two for the situation to actually register with Anya, meanwhile she automatically jerked his massive penis with her left hand in the background a couple of times. \"What, are you texting?,\" she asked incredulously, realizing even as she asked that he was not texting at all. He was recording a video of her sucking on his massive cock like it was made of hard candy. \n\nShe lunged for the smartphone, but Marial was too quick, and he was still clutching the very top of the back of her left thigh, on the bare skin right under her running shorts, his left thumb almost in between her legs. \n\n\"Whoa, there Miss Anya,\" Marial laughed. In one easy motion, he jerked his right hand up out of her reach and pushed her back with his left hand, his fingers gripping her soft flesh. Anya gasped, and turned to bat his hand away again, but this time the hand didn't move. His huge black form was swinging back up to a sitting position as she started beating his wrist where he held her by the ass. She panicked. \"Let GO of me,\" she hissed. He released her, still smiling, holding his left hand up, palm out, saying \"It's Oohh-kay, Miss Anya, it's oohhh-kay. Calm down, there.\" \n\nAnya took a step back, but she was against the wall on that side of the table. She cast her eyes down to breath for second, but that meant looking at his still huge dick, bobbing obscenely between them and pointing at her. She knew he was grinning but she couldn't look at him, as the entire scenario flashed silently through her mind. It was obvious and simple. \n\nIf the video got out of her giving a student-patient (who happened to be a giant-sized young black stud) a blowjob INSIDE the clinic while she worked, then she would certainly be fired. Of course, she would be way too embarrassed to ever come back in to be fired anyway, and that would mean losing her financial aid, which would mean dropping out of college, which would all have to be explained to her parents somehow, and to her fianc\u00e9, and to her fianc\u00e9's parents. \n\nA wave of guilt overcame her; she broke the rules and flirted with another man, betraying her promise to Brian, and look what trouble she had bought. Her mind raced, spinning in place; she was paralyzed. \n\n\"You have to let me erase that recording right now,\" she said. \n\n\"I will, ab-so-lutely\" Marial replied immediately, \"I'm sorry, it was a bad idea.\" He held is bobbing cock with his free hand. \n\nAnya was momentarily disarmed. \"Give it to me,\" she demanded, her hand out. \n\n\"I will, Miss Anya, I promise, but you have to do what you promised first,\" Marial answered smiling, drawing his right hand back, still holding the smartphone. \n\nAnya knew now that she could not trust him, but she also knew that she had to erase the video he had. She was jammed, and it was her own fault for flirting, for more than flirting really. She couldn't believe anything he said, but she had to come to terms with him to get the smartphone. \n\nShe did know from experience that if she made him cum that he would be finished with this and happy, and then she could probably get the phone. \n\nShe realized she was still staring at his cock as he stroked it before her. Anya looked up at him and asked, \"Do what I promised? Do you mean make you cum?\" \n\n\"Yes, Miss Anya, just like before, like is nor-mal in my country,\" Marial answered, reassuring her. \n\n\"No video, right?\" Anya demanded. \n\n\"Right,\" Marial answered with a nod. \n\n\"And no telling anybody or reporting anything, and no touching, right?\" Anya repeated. \n\n\"Right, no telling anybody or reporting anything,\" Marial answered with another nod, still slowly stroking his huge, arched erection. \n\n\"And NO TOUCHING, either\" Anya corrected. \n\n\"Well, maybe just a little touching to help me finish,\" Marial hedged, with a sly grin. \"You're touching me so nicely, I want to touch you some too!\" \n\nAnya calculated, staring down at his cock again. She had to have his phone, and he wasn't asking for anything that she had not already allowed him. \"OK, but no touching between my legs,\" she answered. \n\n\"Ohhhhh-Kay Miss Anya. That's a deal. Let's get back to work,\" Marial smiled. He leaned away from Anya and dropped the phone back into his windbreaker against the wall, then he beckoned her forward between his knees as he sat on the massage table, toward the fat manhood rising up between his legs, like this was her everyday job. \n\nShe hesitated, because she had never been ordered between a man's legs like that. Previous to this moment, every sexual act that she had ever been involved in had been a favor from her, something for which the boys begged. This young man, however, had just motioned her over to get busy on his huge cock like she was an employee who shined his shoes. \n\nShe caught herself staring at his cock again as these thoughts sank in. She stepped forward automatically, reaching again to grasp his manhood, still magnificent but now a bit threatening. Her arms gathered her breasts in front of her as she moved closer to stroke his shaft up and down again. Marial moaned as Anya resumed her efforts. \n\nThree or four strokes in, Anya heard Marial say, \"Suck my cock, Miss Anya.\" She looked up at him. \"Suck my cock again\" he repeated, looking directly into her eyes, with a you-know-you-should look. No man had ever ordered her to suck his cock. She didn't feel that she was in a position to bargain. ",
        "Silently, she lowered her eyes and bent forward at the waist to lower her small mouth over the crown of his massive cock. She tasted the strong saltiness again as she heard his sigh, \"Yes, good girl, Miss Anya...\" She felt his right hand grasp the back of her neck, and just the weight of it pushed her mouth down onto his fat cock. Although he was seated, he started making little thrusts into her mouth with his cock as he held her head down, fucking her face. \n\nAnya was overwhelmed as the massive cock head pushed against the back of her throat. Not knowing quite what to do, she held onto his shaft and his balls with her hands. She felt manipulated. His cock was certainly amazing, but so was the fact that somehow, in the space of less than an hour, she was between his legs letting him fuck her pretty 19-year-old face like no-one ever before. The taste in her mouth, the thick shaft in her hands, and the realization that she had been played combined to make her feel something new. She distrusted him, but she wanted to please him, out of a kind of sexual respect. She wanted to make him cum, like that would somehow even the score between them. \n\nShe bobbed her head up and down over the head of his cock, working her hands on his shaft and softly rolling his big balls with her fingers. She didn't even notice when he took his right hand away from her neck, still taking his cock as deeply into her throat as she could manage without gagging. \n\nMarial stayed seated but leaned forward, sliding both of his hands down her back. Only the sheer white fabric of the sport top interrupted his touch as he stroked her back, up and down, touching every inch of her sides and her waist and shoulders before finally reaching under her to cup both of her breasts as they moved beneath her. Her nipples strained against the material as he drug his fingers across them, switching them on like touch-sensitive lights. \n\nAnya felt his hands on her, like he was bathing every inch of her, then touching her breasts, tracing her nipples through her top. She thought about stopping him, but she knew what he would say. She continued to suck his knob and work his cock with her hands while he squeezed her breasts. As long has he's not touching me there, she thought, the only thing that matters is that I make him cum and then get the phone. \n\nMarial slipped his hands up, working the tips of his fingers under her sport top. Anya didn't flinch but just continued sucking as hard as she could. Marial slowly slid his hands under her top, then holding her bare tits in his hands, he squeezed her hard nipples between his fingers. \n\nAnya shuddered and dipped her knees as the young man took control of her breasts. Her nipples were always sensitive, but now they were crackling with sensation. She felt him explore every part of her breasts, constantly returning to her nipples. \n\n\"Stand up,\" she heard him say as his hands disappeared and her top snapped back into place. She had actually wanted more of that, but she rose, actually glad because her mouth needed a break, but she wanted to keep him going so she kept stroking him. \n\n\"Oh yeah, just like that,\" Marial said, as Anya twisted one hand around his cock head while the other lifted both balls. Anya stood between his legs and tried to focus on her work, but Marial reached forward and put his right palm over her heart, his fingers slipping into her cleavage. Anya continued to stroke the giant cock in front of her as Marial slipped his hand under her sport top again and fondled her perfect breasts. \n\nMarial reached up and pulled the front of her top down until he could hook it under her incredible tits. The stretchy top pulled her pair up and together. Marial then leaned back to watch his production. \n\nAnya continued to stroke his magnificent cock, as she felt the cool air on her bare breasts. No man had ever just pulled her tits out to look at them while she jerked him off. She watched his eyes as they hungrily traced her curves, her nipples pointing slightly upward, at attention. His eyes came up to hers, and she held his stare while she continued slowly stroking the head of his cock, her breasts swaying slightly. She felt so sexy at that moment that a wave of heat came up from between her legs. \n\nAnya caught herself, reached up with one hand, and pulled her top back into place. \"Oh no, Anya,\" Marial pleaded, \"don't cover up those beautiful breasts.\" \n\n\"That's not part of the deal,\" Anya said. \n\n\"But I'm completely without clothes,\" Marial argued, \"it's only fair.\" \n\n\"No, absolutely not,\" said Anya. \"I said I would make you cum, and you could touch me, but not between my legs, and then you would give my your phone. That's it. This has gone too far.\" \n\n\"Anya, I don't think you can give the orders in this situation,\" smiled Marial, just as Anya's mobile phone played some Taylor Swift ring tone. \n\nAnya's head snapped toward the little table and her eyes went wide for a second, her hands too full to answer the phone. She recovered, realizing that she wasn't caught, and released Marial's shaft, which bobbed obscenely. \"That's my fianc\u00e9,\" Anya said, reaching for her phone and emphasizing the last word as if it were a trump card. \n\n\"Hi Honey,\" Anya cooed into the phone, trying to sound breezy. Marial leaned away and Anya turned so that she couldn't see the naked young black stud. \"No, I'm fine, I just got hung up at the clinic,\" Anya said. Suddenly, she felt Marial's right hand slip around her bare midsection from behind to cover her taut stomach. She tried to step toward the door, but Marial easily pulled her back against him. She didn't want to struggle while Brian was on the phone. As her fianc\u00e9 talked into her left ear, Anya felt Marial take her free hand and put it on the hot, fat black snake which stuck out past Anya's waist on her right side. \n\n\"That sounds wonderful, darling,\" Anya said into her left hand, as she held Marial's horse cock with her right, unconsciously squeezing and stroking him without looking. She felt Marial's left hand reach around and cup her left breast, his fingers tweaking her nipple. Brian was talking about friends he saw at the market as Anya felt Marial pulling her top off her right shoulder. Silently, she tried to twist away and batted at Marial's hand. \"Maybe tomorrow would be a better night, if you don't mind, honey,\" Anya said into the phone. Marial now held her firmly with his left hand across her chest. \n\nAnya saw Marial reach out his right hand straight in front of them, holding his phone. She watched as he pressed play. Brian was asking her about dinner in one ear as Anya watched the video of the back of her head sucking on Marial's giant cock, the same hot cock that was still in her hand. Then Anya realized the video volume was not off as Marial's phone said, \"Yes, I love that you are sucking my cock, Miss Anya Napoli, while I touch you like this...\" Anya panicked, pressing her fingertips against the tiny microphone on her phone. \n\nMarial heard Anya say, \"That was nothing, honey, just the last client, Lorraine and I are finishing up. Can you hold on a second, honey?\" \n\nAnya muted her phone and hissed at Marial, \"Would you STOP it, please?\" \n\n\"Yes, Miss Anya, I will stop it when you get naked with me, and finish your promise,\" Marial answered with a smile. \n\n\"I will not... I mean I will not get naked but... that was not the deal. You can't even use that video against me because you will lose your scholarship and you will be expelled too!\" Anya poured out, keeping her voice low as if the muted phone might still carry the sound to Brian. \n\n\"I can use it if I just show it to your fianc\u00e9,\" Marial answered smoothly He held up the video again, right at the part where Anya looked directly at the camera, while stroking a giant black cock with one hand. Anya imagined what her fianc\u00e9's reaction would be, realizing that Brian was still holding on her phone. \n\n\"Let's finish this up now,\" Marial commanded with confidence. \n\nAnya was out of moves. She could feel Marial's cock against her back. She un-muted Brian and tried to sound casual again, \"Honey, Can I...\" \n\nMarial could hear Brian's voice speaking into Anya's ear as Marial peeled Anya's sport top off of both shoulders. Marial made sure to bump his big cock against her back, as she held her right arm down while he pulled the sport top down past her elbow. She pulled her right arm out of the top and reached up to switch the phone and free her left arm. \"I think it's in the cabinet with the garlic press, honey,\" Marial heard her say, as she allowed him to pull her top down completely, exposing her luscious and pert 19-year-old rack. \n\n\"Soon, Honey, we've just got the last client,\" Anya told Brian as she felt the young athlete behind her bunch up the material of her top below her boobs and work it down to her hips. \n\nMarial decided to go for it. When his thumbs reached the waistband of Anya's shorts he hooked the elastic on either side, moving slowly downward. When he felt the waistband of her panties, he quickly hooked them too. \n\n\"He's just a soccer player who got dehydrated,\" he heard Anya say as she dropped her free hand to hold his wrist to stop him, but it was too late. In one swift motion, too quick for Anya to react, Marial bent down behind her and pulled her top, her shorts and her panties all straight down to the tops of her sneakers, leaving her naked from the socks up. \n\n\"Ohh!\" Anya gasped into the phone, before she could catch herself. She held onto the phone, but she instinctively bent over to reach down with her free hand to pull her shorts back up, but this motion basically pushed her now bare bottom directly into Marial's face, right between her cheeks. He shot his tongue out as far up the gap between her legs as possible. \"Yiihh!\" Anya squealed, bolting straight back up, still nude, to pull her ass away from Marial's face. Marial grabbed her hips and stood back up, making sure to drag his cock upward between her legs, sticking forward from her body, until the top of his fat shaft bumped the bare gap between her thighs. He could feel the heat coming from her pussy. \n\nAnya quickly pushed down with her free hand, keeping the fat cock from touching her wet slit. \"I'm OK, Honey, I just spilled something here,\" she managed to say. Her bare bubble-butt pressed against Marial's hard lower abs, she could feel the hot fat shaft poking between her butt cheeks and between her thighs. As she listened to Brian pout on the phone, she could see the last four inches of black cock sticking out between her legs, kept from her feminine opening only by her free hand. \"I'm fine honey, really,\" she said into the phone as she felt Marial's right hand slide around her from behind, his fingers spreading across her taut stomach, while his left hand slipped around to squeeze her nipples. She didn't have a free hand to stop him. \n\nAnya's breath staggered now as the fire from her nipples buckled her knees again. \"I know, Honey, I'm sorry,\" Anya said, trying to keep her voice even as Marial's right hand slid downward across her stomach, his fingertips brushing her labia and moving between her legs. She almost dropped the phone. \n\nShe had to release Marial's cock to grab his fingers that had found her wet clitoris. \"Brian, I've got to finish up here and then I'll be right home,\" she told her fianc\u00e9. Marial's cock bobbed up to rub against her. Marial started slowly sawing his huge erection between her legs, against her wet slit. Anya's mouth opened wide, but silently. \"Ok, Honey,\" she said, her eyes closing. As Marial all-but-fucked her from behind, Anya unconsciously started to press against him as she whispered \"I love you too,\" to her fianc\u00e9 on the phone. \n\nAnya hung up the phone without looking, and for just a second or two she did nothing, just feeling what Marial's hands and cock were doing to her. She felt like the sex toy of a huge and powerful giant, and she liked it... too much. She remembered Brian's voice and said, \"Stop it,\" as she tried to pull forward and away. Marial held her fast, still working every button on her tight little body that he could find. \n\n\"Stop it!\" she repeated, more shrilly, this time pulling at the wrist leading to the fingers between her legs. \"Stop it!\" she said again, but her voice had fear in it. \n\nMarial released her, but hooked his toes over the ring of clothes around Anya's feet. Anya gladly stepped forward and away from him, feeling his big black snake slide away between her legs. She put her phone down and turned around to face Marial sternly, but then realized that she was more self-conscious than stern because, except for her cute little high-top tennis shoes and socks, she was naked. \n\nMarial was grinning and slowly shaking his head while he stared her up and down. He couldn't believe his luck. Barely taking his eyes off her, he backed up to sit on the massage table again, taking his cock in one hand and slowly stroking it. \n\nAnya felt completely exposed, because she was. She watched him drink her in with his eyes while he stroked, and she could tell this wasn't going to be as easy as she thought, and this situation was already way past where she was thinking. But she couldn't take her eyes off of his magnificent cock. He had the video, she thought, so she had to give it her best shot (and she wanted to anyway, she thought with some guilt). \n\nMarial beckoned her over to his cock again. On command, she stepped between his legs and took his huge organ in her hands again, just like before, except now she was naked from the socks up. Marial eyes almost closed when she grabbed his cock again, but he had to watch this little blonde hottie with the amazing tits while she stroked him. He kept his hands on the table on either side of him. \n\nAnya quickly forgot about being naked as she worked his man-muscle again, and soon her mouth opened and she bent forward to suck the whole head of his cock past her lips again. She had never felt sexually enthralled by a man until that moment. She wanted to make him come, to prove that she could do it. \n\n\"Yes, suck my cock like that, Anya,\" Marial whispered, as he leaned forward and lightly drew his fingers straight down either side of Anya's naked back, all the way over her ass cheeks and down to the back of her legs, as she bent over to service him. \n\nAnya worked her hands up and down his shaft as she tongued the huge cock in her mouth, feeling his hands lightly stroke all over her naked body, focusing for a long while on her breasts. She felt his hands slip down and grasp each cheek of her ass, his fingers almost, but not quite touching her opening. She worked on the cock in her mouth, feeling him close his hands and then pull her ass apart, opening her from behind. She squeezed her knees back and forth together, and she felt the wetness between her legs as she tasted more pre-cum in her mouth. \n\nSuddenly, without saying a word, Marial took hold of her head by the side and by the chin and lifted her mouth off his cock. Nobody had ever done that to Anya. Marial swung his legs up onto the table and before laying back, reached up and took Anya's head by the chin and by the side and pulled her mouth back down onto his throbbing shaft. It all happened so fast Anya did not have time to protest before she opened her mouth to get busy again. She was stunned, and turned on, that he treated her like that. \n\n\"Let me see that gorgeous ass,\" Marial said. Anya was standing beside the massage table, bending over to lock both her hands and her mouth onto Marial's monster fat cock. Marial lay on his back. \n\n\"Let me SEE that gorgeous ass,\" Marial said again, and Anya moved her feet over a little bit. Marial reached up with his left arm and pulled her bubble-butt right next to the table facing him. \n\nAnya was actually starting to panic, because she had never done anything this before. She was just sucking his cock before like this... before her fianc\u00e9 called, but she was wearing clothes then. Now her bare pussy was pointed at him. She felt his left hand go up her leg to grab her perfect ass, still not quite touching the opening in between. Anya couldn't help it. She was on fire and she really wanted him to want her pussy. She wanted him to want her pussy as much as she wanted his cock. That realization scared her. \n\n\"Your pussy is sooo beautiful, Miss Anya,\" Marial cooed as he massaged her ass in every way he could think of without touching her slit. He watched her knees grind together, and he could see her wet labia sliding freely across one another. \n\nMarial put his other hand on the back of Anya's head and moaned, \"Oh, I'm gonna cum looking at your hot pussy, Anya.\" When Anya heard that, she dove down onto his cock and practically bucked her hips toward him. She was hotter than ever, but she was glad that he was going to cum because she knew that it would be over, and she also knew that her own self-control was gone; he could have taken her right there and she would have loved it, and then she would have felt terrible. Now, it was just a blowjob. She redoubled her efforts. \n\n\"Yes, yes,\" Marial encouraged Anya, feeling her ass as her mouth worked his cock. He knew she wouldn't resist much more, so finally, he moved his thumb lightly across her clitoris. Anya jerked forward a bit but didn't break her rhythm. She really couldn't break off with Marial's other hand holding the back of her head and pushing her face down onto his cock. Anya thought he was going to cum. \n\nInstead, Marial lightly touched her clit again, this time letting his thumb trace small wet circles, just at the tip of her feeling. He heard Anya emit a low sound in her throat on his cock as her hips rocked toward him a bit, pressing against his thumb. Marial knew he had her now. \n\nMarial teased her clit for about thirty seconds, just enough to make Anya start obviously rocking her hips toward his hand, and then he pulled away. Anya missed his touch instantly. \n\n\"I want to taste that cute little pussy, Miss Anya,\" Marial said, releasing the back of her head and reaching over with both hands to grab Anya by the hips. Anya came up for air, her hands still stroking his shaft, and said, \"No, we can't do that, I'm sorry.\" Marial ignored her and just lifted her tiny frame, easily pulling her up on top of him, her hips and legs swinging over his face. \"Stop!\" she squealed, but her hands never left his cock. \n\nShe was obviously no match for his strength. He had basically pulled her into a 69 on top of him, and now she felt his hot breath on her pussy and felt his wet tongue begin to flick across her clitoris. She knew she shouldn't, but it just felt so good. She took the head of his cock back into her mouth, and slid one of her hands down to cup his balls. Her breasts pressed into his lower abs as she sucked him like there was no tomorrow. \n\nMarial kept teasing with just the tip of his tongue, and it didn't take but a few breaths before Anya was secretly wishing that he would lick her more. She could feel each slow but electric touch to her clitoris. Marial crossed his arms around her tiny waist and filled each hand with her premium ass. Anya unconsciously began to rock her hips a little bit, and Marial smiled as he watched her pussy slowly push toward his face. \n\nMarial first slowly pulled her ass cheeks apart and then leaned his head up, allowing most of his tongue to touch her for the first time. He licked slowly up her slit, pushing between her labia, and exploring the opening inside with the tip of his tongue. \n\nHe heard her moan onto his cock as she slowed the action of her mouth to gently gnaw on his man-head. Her hands slowed down too, as she was pushing her pussy closer to his mouth. Marial responded with more tongue, and Anya could feel his lips on her labia as he teased her entrance with his tongue. \n\nAnya had never wanted anything as bad as she wanted his tongue inside her at that moment. She was at the edge of an ecstasy that she had never known, feeling his tongue tease her entrance. She could feel her pussy practically grasping for him, and she imagined his huge cock penetrating her there, and she almost came. Her mouth continued on the head of cock, and her hands fumbled up and down, but now she was thinking of her own body, not his. She realized she was practically grinding her pussy into his face. ",
        "At that moment Marial pushed his tongue past her opening, slowly forcing open her love canal and penetrating her as deeply as he could reach. He felt her whole body shudder once, twice, and then a third time as her pussy clamped down on his tongue. \n\nAnya came instantly, practically choking on his cock as she felt wave after wave of pleasure overtake her. Without thinking, she pulled her mouth off of his cock and breathed, \"Oh God, oh yeah,\" as she felt every millimeter of his hot tongue inside her. She almost blacked out from the intensely good feeling, but then she felt him lift her up again and begin to turn her around. \n\nAnya realized that Marial was about to fuck her. He was about to set her wet pussy right down on his huge cock, which was still rock hard and arching upwards. Her eyes flew open and she said \"No, stop.\" She couldn't believe the sound of her own voice; she didn't even convince herself. \"No,\" Anya said more firmly, even as she instinctively swung her leg over his body to straddle him. For her own protection, Anya reached down with both hands and grabbed the power tool between his legs. She meant to push it away, but when it was in her hands she started stroking it again. Marial lowered her all the way but Anya kept the tip of his cock safely away from her pussy. \n\nAnya's knees barely reached the table on either side of him. She couldn't believe that she was now basically sitting on top of this young stud, completely naked. She stroked the huge cock in front of her like it was her own. The crown seemed to almost reach the bottom of her tits. Anya could feel the hot shaft against her abs and belly, which were now coated in massage oil. She could feel the hard base of his cock right between her own legs, starting to grind against her sweet spot. \n\nMarial had to focus on not coming. The little bombshell blonde was now practically riding him, totally naked and grinding up on him while stroking his cock with both hands like her life depended on it. Marial reached up with both hands and fondled the incredible pair of boobs over him, all gathered-up and bouncing between her arms. His fingers focused on her puffy, upturned nipples. \n\nHis hands on her nipples, and his huge monster cock in her hands, and the whole situation, made Anya open her mouth gasp in some air. She thought to herself, if I can just keep his cock in front of me like this, and make him cum, then I can get his phone and delete the video and get out of this without fucking this guy. Actually, she didn't know if she even COULD fuck something that big, and she wondered what it would feel like pushing into her. \n\nShe stared down between her hands, tracing the top of his penis with her fingertips, playing with the wet slit in the middle, and she knew that she wanted to fuck this cock, she wanted to feel it inside her. She also realized that she was grinding her clitoris against the hard chord of muscles at the base of his cock, and with his hands working her breasts like that, she was about to cum again. Anya breathed deeply and tried to get a grip; she WANTED to fuck him, but she was NOT going to. She tried to focus on making him cum first. \n\nMarial saw a look of fire and determination flash through the hot blonde's hungry eyes as she stroked his fat organ, and it was the sexiest thing he had ever seen. He almost came and he knew he couldn't last long like this, so he took hold of each of her breasts like melons at the market and pulled her pink nipples right down to his mouth. \n\nAnya had no choice but to lay down right on top of the cock she was trying to please. Marial had also pulled her up his body, and her clitoris was now pressed against the fat part of the middle of his cock. The head still seemed to reach almost her belly button. She felt him work each of her sensitive nipples with his lips and his tongue, and she could feel the hot pulse of his cock straight on her clit, and she couldn't help but respond. \n\nMarial was almost lost in the glory that were her tits, but he felt Anya pull her little knees up from beside his hips, her high-top tennis shoes touching the sides of his body, squaring up her bare pussy onto the middle of his shaft. He felt her labia spread over either side of his cock. She reached down with one hand and took hold of the tip of his cock, as she began to grind her clitoris against his shaft, sliding up and down. Her pussy felt hot and wet and smooth. Marial let her stroke him with her hot opening while she played with the end of his cock with her fingers. He couldn't believe that he was about to get this hottie. Marial pushed her tits straight upwards a bit, forcing Anya to let go of his cock and support herself with her hands on his chest, and settle her pussy lips even more over the sides of his cock. \n\n\"Yes, Miss Anya, rub your little pussy on my cock like that,\" Marial cooed, still holding her breasts, letting each thumb slide back and forth over each nipple. Her breaths were getting shorter as her strokes on his cock got longer and more urgent. \"Your pussy feels so hot and wet,\" Marial said, catching her eye. \n\nAnya couldn't look him in the face. She looked back down at the huge black rail she was grinding onto, his huge cock, that was now soaked with her saliva and her pussy juices. She started to cum again when she realized that at this point she would be surprised if she DIDN'T get fucked... fucked by the manliest man that had ever touched her. \n\nMarial watched Anya as her body began to shudder again. She looked straight down with her eyes closed, her fingers digging into his chest. Marial knew this was the time to close the deal. He grabbed her ass, which was now pinning his cock to his abs, and he slid her pussy all the way up his shaft until the fat crown was pressing between her lips. This action alone seem to make Anya hump him even harder, now grinding her pussy dangerously on to the end of his manhood. Marial waited until he felt her entrance squirm into place, and with a gentle thrust he pushed the head of his cock squarely forward, pushing open her gate. \n\n\"Wait, wait...\" said Anya, as she reflexively pulled away but Marial's hands slipped to either side of her waist and took control of that-which-he-intended-to-fuck. She gasped as his hot cock head entered her opening, and it felt like her orgasm just continued, into almost a sexual delirium. She knew that she wasn't really going to stop him anymore. \"Wait,\" she said more firmly, pushing down on his chest with her hands. \n\nMarial lay still on his back, his hands still holding her sweet, little round hips on the top of his cock, which was sticking straight up into her. She felt like a little furnace on his cock, but he couldn't really see that part because of the amazing pair of tits gathered between Anya's arms above him. \n\nAnya loved what she was feeling, but she had to slow him down right now because he was too big. It hurt a little. Anya held her hips high with one knee down and one leg extended, and with her pussy wrapped around just the crown of his cock, the part that she had been taking in her mouth she thought. She could clearly feel his pulse, his cock head practically throbbing in her wet pussy. Anya knew that she was not a virgin... this was the third guy that had ever scored with her... but she felt like a virgin. She paused, savoring the feeling of adjusting to his size. OK, she thought, this is only going to happen this one time and nobody is ever going to know. \n\n\"Oh... my God... your big,\" Anya slowly breathed out, as she felt his cock stretch her pussy like nothing ever had. She relaxed a bit and felt herself slip down onto him a bit deeper. Her pussy was soaking wet for his cock, which was arching up at her like some sort of ancient god. Her own weight helped pull her down farther... her own weight and what Anya realized was some bitch-in-heat lust... because getting more made her want more. She could never remember being so turned on. When both her knees were back on the table, Anya felt like she was sitting on a fence post. She had half his length inside her now, and she could feel every inch pushing up into her, stiff and angry. She felt like she was fuller than she had ever been and ever could be. \n\nMarial let her work herself down onto his cock. He definitely wanted to just thrust his shaft into her, but he let her have her time. He could see how hot and bothered she was. He had seen that look before on other girls, just rarely on a little super hottie like this one. He knew that when he started really fucking her, she was going lose it. The bottom half of his cock felt cold compared to the top half, which felt like it was in a super-heated vice. She was still just sort of sitting on his cock, staying still but squeezing it with her pussy. \n\nIt felt great, but Marial was well ready to get it on. He started gently making little upward stabs with his cock in a slow rhythm. \n\nAnya felt the shaft inside her start to bounce a bit, switching every nerve in her pussy onto 'high.' She didn't really know what to do, as she had never started out like this with someone. She fucking loved how he felt, but for some reason she felt shy about it too. Was it because she didn't want him to know how hot he made her, she wondered? She unconsciously responded to his rhythm, reciprocating with small counter-thrusts of her own. \n\nMarial folded his hands behind his own head and just watched as the little bitch on top of him started to fuck his fat cock. Her teeth were bared but together as she breathed through them, trying to watch the action building between her legs. \n\nSuddenly, the Taylor Swift ring tone cut through the room. Anya and Marial both froze, and before Marial could think, Anya hopped off of him like a rabbit. His wet cock flopped onto his stomach as Anya sprang across the room and grabbed her phone. Marial's fantasy shattered; heaven had been stolen from him. \n\nMarial watched as Anya silenced the phone and quickly put it back down and just as quickly bounced back up onto the massage table with him, climbing right back into position while taking his hard cock in her hand and steering it toward her wet pussy lips. \n\nMarial laughed his deep laugh as he reached up to hug Anya to his chest, crushing her tits into his face again while sitting up and swinging his legs off of the table. \n\nAnya straddled him in this new seated embrace, positioned to slide back down onto his fat cock. She could feel the crown of his cock against the outside of her opening. He was hugging her tightly while he made out with her tits, but Anya worked to wriggle herself back down onto his shaft, burning for the feeling of his cock inside her again. \n\nMarial relaxed his hug a bit, letting her push her pussy back down onto his hard cock. Then Marial stood up, an action which pushed his cock up into her at least as far as it been before and more. He heard Anya breath a long \"ooooh\" sound, and he felt her grab his shoulders with her hands while her little high top tennis shoes locked her ankles together at the small of his back. He was wearing her now; this hottie was locked onto his cock like a jockstrap. \n\nMarial felt Anya start to move her pussy on his erection while she hung onto him for dear life. Still hugging her, he took up her pace and started bouncing her on his cock. \n\n\"Oh God, yes,\" Anya said as she felt him fuck her. He felt like superman; she was completely wrapped around the biggest strongest man that had ever touched her, and his huge cock was now plunging up into her again and again, finding new territory. How did it come to this, she wondered. She never saw this coffee-colored guy until an hour ago. She had never seen a monster cock like that, and now she was having the hottest sex of her young life with him and that cock. \n\nAs she moved up and down in his embrace, feeling every inch of him inside her, Anya looked up into his face for the first time. Marial's mouth was a little open and his eyes were almost closed, but they opened when she looked up. \n\nMarial turned his face down toward hers, and their mouths were only inches apart. Anya had already had something like three orgasms, but they had not kissed yet. She looked directly into his eyes with a kind of burning passion, almost angry, her tits bouncing gently with the up and down motion. As he stared back at her, Marial relaxed his hug again and let Anya slip as far down onto his cock as she would go. He watched as her eyes closed to slits. Her heard her moan softly, \"Ooooh, God yes!\" Marial heard her quick breaths and he felt her lock her little legs tighter around his waist. He held her still, impaled on his throbbing erection. \n\nAnya was in ecstasy, feeling his huge cock in her pussy and his strong young arms holding her naked to his chiseled chest. She wanted to kiss him now. This stud had turned her out and was now proving over and over that it was the best mistake she ever made. All thoughts of her fianc\u00e9 were gone. Her pussy practically quivered, completely pressed on every surface, wrapped around him so tightly. This was a new feeling, she thought, and this man with this cock deserves to be worshiped with her pussy and with her entire body. Anya opened her mouth and stretched her face up to his, closing her eyes and kissing him deeply, loving his pillow lips with her tongue. \n\nNow joined both above and below and all wrapped up in between, they kissed. They were as close as two people can be, and Marial starting moving her gently on his cock again, deeper than before. The kiss was making both of them hotter than ever, and Marial felt the little girl in his arms start to rotate her hips back and forth, pumping her little pussy on to his cock. Marial knew that he would not be able to last long with this premium ass working on to him. \n\nMarial held out for as long as he could before he spun around, and without letting Anya off his organ, he laid her down on her back on the massage table. He felt Anya unlock her legs from his waist and he watched as her knees fell open to each side of him. He felt her hands reach around his neck and back. Her fingers pressed into him when he started sliding his big cock back and forth into her as she lay on her back, spread open. \n\nAnya lost track of everything but the feeling inside her. Marial just kept moving in and out of her, pushing her whole body across the table away from him with each thrust but pulling her back with his hands each time, slowly building in strength and speed. It wasn't long before Marial was fucking her for real, piling his rude piston into her. The bottoms of Anya's high top sneakers now waved wildly at the ceiling. Anya felt completely and wonderfully overwhelmed by this big stud, and she was drowning in her own lust. Every thrust forced a little grunt from her, breaking through her constant low moans of \"Oooh, yes.\" \n\nMarial knew he was in form now. His feet were still standing on the ground, allowing him to propel himself into the hot little bitch spreading for him on the massage table. He lifted his elbows off of the table and raised his upper body out of her fierce embrace, leaving her lying on her back. Now standing with his knees bent and most of his huge erection still warming inside her pussy, Marial could look down at the sexual angel that was burning on his cock for him. He drank her in. Her lower lip curled under her teeth, her marvelous tits floating back and forth on her chest, her athletic legs spread in opposite directions on either side of him, as far as they could spread. \n\nAnya didn't know what to do with her hands, once he pulled his torso up from covering her. She grasped the empty air near her ears, feeling his huge cock just sticking deep into her like an axle. Anya bit her lip as she looked up at the hot stud fucking her. She watched him spread his hands and grab each of her calves, bringing them straight up so that the back of her thighs pressed against his abs. He crossed her ankles and held them both together with one hand, her high top tennis shoes right next to his face. She felt Marial's other hand sweep back down to her ass, exploring every feature with his fingers as he started long slow strokes. Anya knew she was totally exposed to him now, at his mercy... and it made her feel superheated, desired like a goddess, with a lust stronger than reason. She went over the edge again, and just went with it. \n\nMarial was laying pipe, now. He could not believe his luck with this little blond fuck toy, and he wanted to enjoy it for as long as he could. He pushed a little harder with each thrust, watching her writhe in pleasure. He went on and on, manipulating her legs with his hands, holding her however he wanted her, then moving her again, all the while pounding her tight pussy and listening to her little grunts, and in between, \"Ooooohhh, yessssfffuck me like that... oh, yeah!\" She was taking almost his whole cock now. \n\nAfter nobody-knew-how-long of this, Marial decided he wanted her doggy style, and at that point he knew he could have her any way he wanted her. The massage table wouldn't hold both of them for that, Marial thought, as he pushed his cock in as deep as he could go, almost bottoming out. He heard her almost scream with pleasure. It was still going to be from behind, he thought, but more of a lap dance kind of thing. \n\nAnya gasped as Marial plunged his rod deep into her, then gasped again when he slid it all the way out, leaving her empty, and pushing at nothing. Through her legs, still dangling absurdly in the air, she saw him step back and motion for her to come to him. She threw her feet, still in her high tops, down to the floor and sat up in one motion, stepping off the table toward him, as he smiled. \n\nAnya watched him reach out and put one large hand low on her belly and felt his other hand slide around to the top of her ass, holding in her in place. He moved to her, and she felt his mouth engulf her nipple as he moved behind her. She felt him step back and pull her straight backwards. Anya looked over her shoulder to see the young stud sit on the edge of the table, his huge angry cock with it's helmet-head still arching upward at her, almost touching her back. \n\nAnya felt his hands gently release her, but she did not move. She watched over her shoulder as the young black man leaned back with one hand, and took the other hand to the base of his fat cock, pointing it downward a bit, toward her ass, at an accessible angle, as it were. He jerked his chin up, and made two little sounds between his teeth like he was calling a horse. Anya had never been called to just mount a man's cock on demand before, without so much as a \"please,\" but it turned her on now, and she wanted that thing back inside her. \n\nMarial watched as Anya reached around with one hand and took the head of his cock in her fingers while she reached down to her little bubble-butt with the other hand, pulling one ass cheek up and exposing her wet opening. She had to get on the tips of her toes, but she backed up directly onto his cock. Marial felt her hands go to his knees, and he watched her start to push herself further back onto his erection. Just to savor the moment, Marial reached out with one hand and held one ass cheek with three fingers, stopping her so that she was only taking the tip of him. Marial heard her make a little sound of protest. \n\nThen the Taylor Swift ringtone cut through the room again, freezing both of them. \"How long had it been?\" they both wondered. \n\nAnya felt Marial's hand on her ass push her off his hard cock head. She was stunned again, as no man had ever done that to her, like she was his sex servant. \n\nThe Taylor Swift continued, and Anya heard Marial say, \"Answer it.\" Anya stepped over to the phone and picked it up, but she looked back at Marial and shook her head. \"Answer it, or he'll be suspicious!\" Marial commanded in a deeper voice, smiling that giant smile at her. Anya remembered the skipped call, and she had lost track of time. Anya hit the green button. ",
        "\"Hi Brian,\" she sang in her best gosh-I'm-tired-of-work voice. \n\n\"Where are you, Babe?\" Brian asked. Anya watched as Marial motioned for her to come back over to him. As she tried to concentrate with Brian, she automatically stepped back over to Marial. \n\n\"I'm STILL at the clinic, Honey, I'm sorry. I got held up,\" Anya conversed as she again stepped between Marial's legs. She noticed that Marial didn't touch her. He was being respectful, she thought as she tried to listen. \n\nBrian's voice in her ear was saying something about dinner being ready and \"what happened to you? Why didn't you take my call?\" Anya's eyes, however were watching Marial stroke his monster cock with one hand while the other hand pointed one finger to the ceiling and whirled around. Marial was grinning that African-King grin at her, and he was asking her to turn around, she realized, because he wanted to fuck her some more... while she talked to Brian on the phone. \n\n\"I'm sorry, Honey, I must have been in the shower here,\" Anya said, as she slowly took little steps to turn her firm ass around toward Marial's arching member. \"Lorraine had her dissertation defense today and she forgot to tell me, or I missed it,\" Anya said, feeling Marial's large hand take her by the hip and pull her little bubble-butt back onto his massive cock. \"Anyway, I was left to close up and cover for her,\" Anya explained to Brian, as Marial's big cock head stabbed around the wet gap between her legs, pushing between her labia again. It felt even bigger from behind, she thought. \n\n\"I'll come get you so you don't have to ride home,\" Brian suggested, trying to be supportive of his fianc\u00e9, who was clearly having a tough day at work. \n\n\"No! No, not necessary, honey,\" Anya said a little too emphatically. The crown of Marial's cock was still pushing against her. \"I missed my workout so the ride will be good for me,\" Anya explained more calmly, as she reached around her back with her free hand to guide the head of Marial's horse-cock to her pussy entrance from behind. \"I'm ju-UST finishing up here,\" Anya said, just as Marial pushed his fat weapon up into her again, instantly switching her back on. Anya suddenly realized that this is what it meant to be somebody's slut, because getting more of him just made her want more of him. \n\n\"So I'll see you in 24 minutes, then?\" Brian said, trying to be sweet. He WAS actually looking forward to seeing his hot fianc\u00e9. \n\n\"And I'll keep dinner waiting then?\" he offered. \n\nBrian heard Anya make a sound, something like \"ah-HA! Yes, found it!\" It also sounded like maybe she was walking up some long stairs. \n\nAnya was cumming on the huge black cock pushing up into her pussy from behind, but she still held the phone locked to her ear. She could feel that Marial was giving it all to her now. He had her by both hips and he was driving her. His fat cock felt so big from behind. She heard Brian ask, \"What did you say?\" \n\n\"Nothing Honey, no-oothing,\" Anya said. \"I've got to go. I'm coming now. I love you.\" \n\nBrian knew her signal for goodbye and he automatically said, \"I love you too.\" \n\n\"Bye,\" Anya quickly said, in an slightly high voice. \n\n\"Bye,\" Brian repeated, listening to Anya click off right away. \n\n\"Yes! Fuck me all the way with that fucking... beautiful fat cock,\" Marial heard Anya say as she bounced her round little ass all the way down onto his spike. And what he heard next Marial could not really describe; just a long sort of breathy screaming and moaning episode, as she writhed her tight pussy all down onto him. That put Marial on the edge, so he picked up his pace for his final approach, delaying for as long as he could to enjoy the moment. \n\n\"Do you like that?\" Marial heard Anya ask softly. He looked up to see her doing a peek-a-boo over one shoulder as she rode his cock. She looked him in the eye, \"Do you like making me cum on your fat cock?\" she said in her little schoolgirl voice. \n\nMarial grabbed her hips because he was about to cum. \n\nMarial watched her continue, \"Did you like fucking me while I was talking to my fianc\u00e9 on the...\" That did it. \n\n\"I'm cumming,\" Marial said, a little loudly. \n\n\"Pull out!\" Anya said a little louder, but she didn't pull herself away, not even a tiny bit. Quite the contrary, actually. \n\n\"Too late...\" Marial shuddered, his head back, feeling his gun going off over and over locked deep inside this hot little blonde pussy. \n\nAnya could feel the pulsing in her pussy like nothing she had ever felt before. For one, she had never let a guy cum inside her without a condom, not to mention a guy with a fire hose cock like this one. She came again, feeling him throb, thinking of him pumping his hot seed inside her. She hoped that she would not get pregnant based on when her period was due. \n\nMarial held her from behind by both of her tits, until he stopped cumming inside her, and until she stopped practically jumping on his cock and moaning. \n\nMarial felt Anya pull her pussy slowly up and away and finally off of his cock completely. She walked, as best she could, straight over to his windbreaker and got his phone out of the pocket. She clicked it on. \"What's the passcode?\" Marial heard her ask. He was going to KEEP the video, he thought, for further blackmail, but he was feeling confident at the moment that he could get this pussy again just by asking. Marial smiled and gave her the code. \n\nAnya found the video, erased it. She saw he had another video of one girl in a park and some other girls dancing somewhere. Anya cleared the deleted folder and then rebooted his phone and checked. The video was gone \n\n\"I have to go, so you have to leave but you can't tell anybody about this, you promised,\" Anya said, putting his phone back in the pocket of his jacket and handing it to him, looking him sternly in the eye. She felt awkward and mean. This guy had just given her the best sex of her young life. She looked around for his shirt and gave it to him, looking him in the eye again, just as she felt what was no doubt a little bit of his cum drip onto her leg from her opening, which was still tingling. She remembered she was naked and grabbed a towel to clean herself up. \n\nMarial couldn't wipe the smile off his young face as he watched her dress quickly. He pulled his silk soccer jersey back on, then his jock strap and his soccer shorts. He put on his windbreaker. He watched as she pretended to check her phone while he pulled his socks and cleats back on. \n\nShe walked him to the door \"to make sure it locks\" she explained. Marial walked slowly to let her get ahead of him. He was still smiling a warm smile as he watched her little round bottom switch back and forth in front of him. He was already thinking of coming back for more of this. \n\nAnya leaned forward to open the door when she felt Marial's hand take a nice handful of her ass, his fingertips pressing where they shouldn't. \"Stop it!\" she hissed at him, pulling forward and knocking his hand away with a swing of her arm. She looked up to see him smiling slyly down at her, like she had just been caught lying. \n\nMarial stepped slowly past her and out the door, smiling at her slyly. She heard his deep but smooth voice say, \"I hope I see you soon, Miss Anya.\""
    ],
    "authorname": "ElAbogado",
    "tags": [
        "big cock",
        "interracial",
        "boyfriend",
        "engaged",
        "massage",
        "seduction",
        "blackmail",
        "black",
        "workout",
        "riding"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/college-sports-clinic-encounter"
}