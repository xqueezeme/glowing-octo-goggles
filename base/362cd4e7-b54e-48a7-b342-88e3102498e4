{
    "title": "Two Hundred Dollars Ch. 23",
    "pages": [
        "66 Dollars\n\nKent woke up slowly, not aware of any specific moment in which consciousness came to him. He sensed more than knew, the whole night through, that he lay surrounded in feminine presences, ensconced in their perfumed flesh, permeated by the warmth of their bodies. A little bit of moisture had collected where their flesh touched under the bed sheets, but none of this had bothered him.\n\nContentment, instead, ruled his soul.\n\nTwo girls in bed with me. Huh.\n\nLying on his back, he opened his eyes. Bailey, sleeping on her side and facing him, had lain her head upon the left side of his chest, in the crook of his shoulder. Laura, slightly prone, lay with one apron-covered breast against his chest and her cheek against his right shoulder. Their legs had tangled together, with Laura's right leg under Bailey's left, both between his own legs.\n\nComfy.\n\nThe sheets had slid slightly off Laura's body, baring one round, slightly reddened ass cheek and part of her lower back.\n\nThat's her left cheek, not the one I pounded so hard last night when Bailey made me come on her.\n\nThat thought, and the sight of Laura's exposed cheek, started his erection rising again.\n\nHm. As much as I'd love to wake up to a spanking, I need to pee first.\n\nExtricating himself from the girls didn't prove easy, as both of his arms lay trapped underneath them, but they groggily relented to his nudges and let him escape the bed. He slipped out of Laura's bed and across the hall into the washroom. Noticing that one of the girls had left his backpack in the hallway, he picked it up on the way, intending to change his underwear.\n\nAs he pulled down his shorts to take a piss, however, he decided he might as well rinse himself off.\n\nWhich towel did Bai use? Probably okay if I use that one, too.\n\n=============================\n\n\"Is he taking a shower?\" Laura mumbled.\n\nBailey blinked her eyes open and squinted at the blurry image of her friend, still wearing the apron from the night before.\n\nMight as well have slept naked, but whatever. There's a rule after all.\n\nThe rules seemed silly for a moment, considering what they'd done for that extra two dollars, but Bailey felt the soreness in her cheeks as she adjusted her position and the blankets rubbed against her skin. That brought everything back to her with a fresh surge of blood pumping through her body.\n\n\"Sure,\" Bailey replied. \"He's probably a bit sticky, too.\"\n\nLaura's face reddened and she averted her eyes from Bailey, the memory of Kent ejaculating on her butt coming back suddenly.\n\n\"Oh, that was weird,\" Laura shivered in recall.\n\n\"And just what you needed.\"\n\n\"What?\" Laura piped up in surprise.\n\n\"You saw him do it on me,\" Bailey told her. \"And you wanted to know. It just took a bazillion orgasms to put you in a state where you could admit it.\"\n\nLaura smiled sheepishly and put her face down in her pillow. When she rolled over towards Bailey and turned her face up to the ceiling, its natural colour had returned.\n\n\"How much did we do last night?\" she asked.\n\n\"Twenty bucks,\" Bailey answered.\n\n\"That's a record, too,\" Laura pursed her lips thoughtfully. \"What are we down to?\"\n\n\"Sixty six dollars left.\"\n\nLaura twitched.\n\n\"You okay?\" Bailey asked.\n\n\"Can I... can we do some more this morning?\" Laura blurted out.\n\n\"You want more?\" Bailey's eyes widened. \"I'll have to do my homework standing up today.\"\n\nLaura shrugged, her eyes not meeting Bailey's. \"I nee- I want some more.\"\n\nLaura is having a problem. That's obvious. She's still feeling guilt about her orgasms. What's the best way to handle this?\n\n\"You feel bad?\" Bailey asked.\n\nLaura gulped and pushed her body backwards into Bailey's hug.\n\nI'll take that as a 'yes', Bailey decided, wrapping her friend in her arms.\n\n\"And the spanking really does make you feel better?\"\n\n\"It makes the guilt go away.\"\n\n\"The rest of us don't feel bad about our orgasms, though,\" Bailey tried to keep her voice soft, with Laura's ear so close to her mouth. \"Maybe you don't have to either?\"\n\n\"Maybe it's getting better,\" Laura promised. \"But it's still there.\"\n\n\"Do you know how red our butts are right now?\" Bailey protested.\n\n\"I know,\" Laura whimpered. \"But I'll feel messed up all day if I don't.\"\n\nBailey considered her options. She didn't want to see her friend suffer emotionally or physically, but it looked like she had to choose one.\n\n\"Okay,\" Bailey squeezed Laura in close. \"The orgasms make you feel bad?\"\n\n\"Yes.\"\n\n\"The spankings make you feel better.\"\n\nLaura nodded and Bailey felt a gulp.\n\n\"What else?\"\n\n\"What?\"\n\n\"What else changes how you feel?\" Bailey asked. \"What about when you made him come?\"\n\nLaura inhaled, long and slow, telling Bailey this required some consideration.\n\n\"No different, I think.\"\n\n\"You didn't feel like you were being, um,\" Bailey paused with a wince, \"being punished?\"\n\n\"No.\"\n\n\"When he came on you?\" Bailey offered hopefully.\n\nLaura shrugged, \"I felt kinda dirty, but not like... No.\"\n\n\"So it's gotta be spankings?\"\n\n\"It's how I was always punished,\" Laura said sadly.\n\nAnd we have to do it together, don't we? Bailey sighed. No way I can stand by and watch. I just hope Kent understands how sore we are already. If only I had a moment to tell him.\n\nShe didn't have a lot of faith in her ability to communicate this information to him with Intense Glares and Surreptitious Hand Signals, but a thought did occur to her.\n\n\"I need to pee,\" Bailey announced, and promptly extricated herself from Laura. \"Be right back.\"\n\n\"While Kent's in there?\" Laura sounded horrified.\n\n\"He's in the shower,\" Bailey waved her off and rolled her eyes dismissively as she left the room.\n\nHere's my chance.\n\nShe slipped into the bathroom and closed the door.\n\n\"Kent,\" she whispered.\n\n\"Uh, yo?\"\n\n\"Laura needs a spanking this morning, okay?\"\n\n\"Needs?\"\n\n\"I'll explain later,\" Bailey cut him off, putting her face near the shower curtain as Kent poked his head out. \"But we can't take it too hard, alright? Neither of us can. You have to make it hard enough she'll feel it, but not so hard it really hurts her.\"\n\nKent stared at her from inches away, \"You are asking me to go easy?\"\n\nThat does wound weird when he puts it that way, Bailey winced and looked up at the ceiling.\n\n\"Maybe spread it around?\" Bailey said. \"I'll make it up to you when I get home. We'll come to some agreement.\"\n\n\"Alright. I'll try to do it evenly.\"\n\n\"Now finish your shower and stop looking at me,\" she admonished. \"I can't pee if you're watching.\"\n\nShe caught Kent's eyes wandering greedily down her body and suddenly felt the morning light on the full transparency of her matching underwear set. He featured her with a smarmy smile as their eyes met again, and he ducked back into the shower.\n\n=============================\n\nKent towelled himself off, rough and quick, shaking his hair out and running the towel through it as fast as he could. Not entirely certain of what Bailey and Laura intended, he put on a clean pair of boxer shorts, put the towel over his shoulders and slipped through two doorways into Laura's bedroom.\n\nLaura lay on her right side, propped up on her elbow, facing him with her lips pursed. The apron, done up tightly, failed to cover her right breast, most of which lay visible against the bed, part of areola showing.\n\nAlrightee, then.\n\n\"What's up?\" he asked.\n\n\"Pay off a little more debt this morning?\" she asked, turning her head slightly to glance at Bailey over her shoulder.\n\nHer friend sat cross legged behind, lips pressed firmly together, watching carefully.\n\n\"Always up to you,\" Kent waved an index finger across both of their bodies.\n\n\"That. Is. True,\" Laura acknowledged and sat up quickly, causing her right breast to temporarily jiggle into full view before she got the apron properly oriented.\n\nShe had the white board ready to hand and immediately thumped down three marks. When she handed it back over her shoulder to Bailey, the other girl winced and made three marks of her own.\n\n\"How do you want to do it?\" Kent asked.\n\nLaura turned to look at Bailey, who merely shrugged, letting Laura continue, \"My way, I think. Sort of traditional, you know?\"\n\nLaura needs a spanking, Kent remembered Bailey saying. Needs. Not wants. This isn't about being horny. She's just looking for... what? The pain? The punishment?\n\nKent's eyes lit up.\n\nShe really does feel bad about all the fun we had last night. And now she thinks she needs to pay for it. I may never understand the religious mind set, but I get how guilt works.\n\nHe knew the key lay in giving her the right level of pain to satisfy whatever problem she faced inside her head.\n\n\"And you?\" Kent asked Bailey, since Laura hadn't budged from the edge of the bed.\n\n\"I'll do it with her,\" Bailey slid up the edge of the bed. She looked over at Laura and faked her best co-conspirator smile. \"Side by side?\"\n\nLaura grinned back gratefully and the two girls stood up off the bed. Laura turned first, putting her hands on her knees and sticking her naked butt out at Kent. Bailey turned next to show him the back of her transparent panties, but she kept her knees straight and bent over the bed.\n\nBailey promised side by side, Kent noted, not the same position.\n\nRegardless, all four cheeks presented themselves in a neat row, Bailey's left touching Laura's right, and he examined their reddened flesh. With absolute certainty, the right sides of their right cheeks showed the darkest colour. He'd pounded them both there when they'd made him come. The redness almost made Kent feel bad, but he could only really make up for it by avoiding those areas this morning. He wouldn't even charge Bailey for that kindness, even though she'd offered.\n\nLaura's ass didn't pose nearly as much of a problem as Bailey's did. While the centre of her cheeks had suffered a lot, due to her choices in position, and the outer side of her right cheek had taken a lot of slaps during his orgasm, the rest of her flesh lay pale except for a few, sharp edged marks left behind by the spatula.\n\nBailey, on the other hand, Kent inhaled sharply through his nose. Christ. She's red everywhere.\n\nHe'd spanked her low at the beginning of the evening, high during the orgasm he'd fingered her through when she'd gone over his lap, and plenty of times in the centre. Only the left side of her left cheek lay pale enough to present a fair target.\n\n\"Laura?\" Kent asked.\n\n\"Yeah?\"\n\n\"I know you get to choose the pose...\" he trailed off.\n\n\"But?\"\n\n\"I really think you need to be spanked lower,\" he said. \"So you can feel it every time you sit down today.\"\n\n\"Oh,\" Laura squeaked. \"Right.\"\n\nThat tone suggests I hit the mark, Kent thought. If she wants punishment, that's going to resonate.\n\n\"But it's still up to you.\"\n\n\"No, no, you're right,\" she agreed hastily. \"Here.\"\n\nLaura got her knees up on the bed and bent over until her apron covered breasts touched its surface. Bailey turned to glare at Kent over her friend's back. He returned her glare with a hopefully explanatory wave at the state of Laura's butt, hoping his wide-eyed helplessness said, this is what you asked me to do.\n\nBailey rolled her eyes, \"And me?\"\n\nRight. Can't leave you out, can I Bai? Not only did she offer to pay extra later, I can't have Laura getting special treatment and not do the same for Bailey.\n\n\"Sure,\" Kent pointed at a spot on the bed to Laura's right. \"Kneel there, facing Laura.\"\n\nWith a raised eyebrow, Bailey got up on the bed and knelt next to her friend.\n\nKent waved across Laura's back, \"Well? Bend over your friend.\"\n\n\"Oh, I see,\" Bailey replied and reached her hands across Laura's body to the right. \"That good?\"\n\n\"Perfect.\"\n\nYeah, perfect. I've got perfect access to the untouched bottom of Laura's ass and the only fresh piece of flesh on your ass -- the bit on your left cheek.\n\n\"Are we counting from one?\" Laura asked.\n\n\"Yes,\" Kent said. \"New day and all that.\"\n\n\"Ready,\" Laura's voice, echoing off the back wall of her bedroom, tasted of eagerness and anxiety all at once.\n\nKent eyed Bailey, who rolled her eyes and darkly repeated, \"Ready,\" before turning her face resolutely toward the headboard of the bed.\n\nHere we go.\n\nWith Laura, at least, he didn't have to hold back. The only stipulation lay in the where he spanked her, not how hard. He gave her two swats, good and hard, to the lower part of each cheek.\n\n\"One, two, three, four,\" she called out, cringing to keep her thighs tightly together.\n\nKent moved up to Bailey's cheek, hovering as it did above Laura. As generously as he could, he spread four more slaps across the pale, virgin territory of the outside of her cheek.\n\nBy the time she finished calling out, \"Five, six, seven, eight!\" the pale flesh had already darkened to match the rest of her ass.\n\nBack down to Laura he went, thumping as hard as ever on her seat, reddening her flesh, eliciting a cry that reeked as much of relief as it did of pain. \"Nine, ten, eleven, twelve!\"\n\nFunny how I can hear it, now that I know to listen. As much as it hurts her, it's so easy to tell that she's grateful, too. It's the longest, darkest sigh of contentment anyone ever breathed. If it weren't for what happened last night, and what Bai said this morning, though, I probably wouldn't notice.\n\nKent inhaled ruefully, chastising himself, I certainly didn't notice up until now.\n\nHe struck at Bailey's cheek again, spreading three slaps across the same portion of bare flesh he had before, and pushed his fourth strike all the way down to her upper thigh.\n\nShe turned to look a querulous eye at him.\n\n\"Too low?\" he wondered aloud.\n\n\"Fuck you,\" she scolded, and turned back.\n\nThat means she's fine with it. I don't know what else I can do this point, if she'd paying a 'spreading it around' fee later. There just isn't much more untouched real estate around here.\n\nKent considered Laura's condition as Bailey counted to sixteen. The reddening of her lower cheeks, fresh from this morning, had passed the coloration of most of her ass -- except for the outside of her right cheek where he'd hammered her so far. He considered his promise to Bailey and it seemed to him that she'd meant for him not to torment them with pain in any particular spot.\n\n\"Are you waiting for something?\" Bailey scolded again.\n\n\"Just planning out the finale,\" he warned her. \"You both ready?\"\n\n\"Yes,\" they sang out together, Bailey's irritation creating a disharmony with Laura's bubbling enthusiasm.\n\nHere goes.\n\n\"Count fast,\" he warned.\n\nKent gave them no further time after, striking immediately at Laura's left cheek, hard and low.\n\n\"Seventeen!\" she counted out.\n\nHe had already moved on to Bailey, finding a bare spot high on her distant right cheek.\n\n\"Eighteen!\" Bailey cried out in shock.\n\nBack to Laura's seat on the right.\n\n\"Nineteen,\" she moaned.\n\nFor Bailey, another high and left.\n\n\"Twenty!\"\n\nHe then pounded Bailey twice more, striking even lower than he ever had, two swats hard on her upper thigh.\n\n\"Twenty one, twenty two,\" she announced and followed up with a breathed curse while he returned to Laura.\n\nLaura took her last two strikes the only place he had left that didn't already host bright read flesh. Two shots echoed through the room, dead centre on each cheek.\n\n\"Twenty three, twenty four,\" Laura sighed with relief. \"Ah. Okay. Bai?\"\n\nLaura had tried to rise but bumped into Bailey, still bridged over her.\n\n\"Right,\" Bailey said and rose back on her knees. She tried to sit back on her heels, but Kent hadn't left her a comfortable way to do that. \"Bastard.\"\n\n\"His dollar, right?\" Laura cautioned her friend as she, too, sat up.\n\n\"Uh-huh,\" Bailey rolled her eyes. \"Six more dollars off the chart.\"\n\n\"Eight,\" Laura pointed out, indicating her apron.\n\n\"After I leave,\" Kent agreed.\n\nLaura nodded, but stood up with a start. \"Not yet, though.\"\n\n\"Not yet?\" Kent asked.\n\nHe'd assumed they'd dish him out the door as soon as possible, so they could put clothes back on.\n\n\"No,\" Laura pointed out and turned to Bailey, \"he's the first boy I've ever had overnight.\"\n\nBailey opened her palms in confusion, her eyes going wide, \"So?\"\n\n\"I have to make breakfast for him,\" she explained. \"And for you? Right?\"\n\n\"I could eat,\" Kent admitted. \"Heck of a night.\"\n\n\"See?\" Laura said. \"Breakfast.\"\n\n=============================\n\nIt hadn't taken Laura long, apron and all, to whip up scrambled eggs and toast for the whole party. In a few minutes, they sat together at the little breakfast table in the kitchen, Bailey and Kent in their underwear, Laura still in her floral apron.\n\n\"After this, you can go,\" Laura said. She turned to Bailey, who sat with her back to the curtained window, \"And we can put some clothes on.\"\n\nThe room stayed quiet for a while, each of them considering the morning and the evening before it. Kent, sitting across from Bailey, seeing her silhouetted in the morning light filtering through the curtains, thought to break the silence in some way and opened his mouth to do so when the doorbell rang.\n\nSix eyes went wide in panic, but no pair grew wider than Laura's.\n\n\"Oh, god,\" she cursed. \"Mrs. Gardens.\"\n\n\"Who?\" Bailey asked.\n\n\"The neighbour,\" Laura winced and frantically looked around the room. \"She's dropping off a package for church.\"\n\n\"You knew this?\" Bailey asked in surprise.\n\n\"I didn't think she'd come this early,\" Laura whined. \"Stupid, old people! Why can't they sleep in?!\"\n\nShe turned to Kent, begging him for some respite.\n\n\"What?\" he asked.\n\n\"The two dollars,\" she said. \"We'll lose it if I put clothes on, but I have to.\"\n\nKent twisted his lips thoughtfully as the doorbell rang a second time.\n\n\"Just a second,\" Laura called out, then turned to Kent and lowered her voice. \"Please?\"\n\n\"I suppose we might find a way to make up for it,\" he said slowly. \"Do Bai and I have to hide?\"\n\n\"Yes, please!\"\n\nLaura ran to her bedroom as Bailey and Kent walked behind her.\n\n\"Nice ass,\" Kent eyed Bailey through her transparent underwear.\n\n\"Shut up.\"\n\nThey reached the bedroom door as Laura rushed back out, wrapping a bath robe around herself and tying it at the waist.\n\n\"Hope the old lady doesn't go in the kitchen,\" Kent remarked.\n\nBailey shrugged and tried to sit on the bed but changed her mind and stayed on her feet, arms folded.\n\nShe doesn't seem worried. I guess her parents aren't like Laura's.\n\n\"How are you feeling?\"\n\n\"Fine,\" Bailey said. \"You, uh, went lower than usual.\"\n\n\"Hope that's okay,\" he said. \"The deal was to spread it around and there's really nowhere else to go on your butt right now.\"\n\nDistantly, they heard the front door open and Kent reached into his backpack to retrieve his phone.\n\n\"What are you doing?\" Bailey looked over curiously.\n\n\"Timing,\" he said, and started a stop watch app. \"We'll add a few seconds to whatever it says, since it took me a while to start it.\"\n\n\"Thought about it, yet?\" Bailey went on.\n\n\"About what?\"\n\n\"About what you want in exchange for...\" Bailey paused, \"For going easy on us.\"\n\n\"Hadn't considered it, no,\" he said. \"Do you have an offer?\"\n\n\"Not yet,\" she shrugged again, lifting her breasts more than usual.\n\nSharply defined, very dark nipples poking through that sheer fabric. Perfection.\n\nA short while later, the door closed and Laura came bounding down the hall.\n\n\"She's gone,\" Laura said, untying the bathrobe to reveal her apron once more. Only when the bathrobe was completely off her body did Kent hit the timer on his watch.",
        "\"What's that?\"\n\n\"One minute, fifteen seconds,\" Kent said. \"We'll add about fifteen more because I didn't start the timer right away.\"\n\n\"Again, I ask,\" Laura repeated in irritation. \"What's that?\"\n\n\"That's how long you broke the rule for,\" Kent said.\n\n\"Oh,\" she paused. \"So?\"\n\n\"So,\" Bailey cut in with a smirk, \"You have a minute and a half of half nakedness to make up for. Can you guess how you're going to do that?\"\n\nLaura pressed her lips together as her eyes darted anxiously back and forth between them. She gulped before opening her mouth to speak.\n\n\"The apron?\"\n\n\"The apron,\" Bailey confirmed.\n\nKent showed her the timer on his phone, \"Let's go back to the kitchen first. I want to finish that breakfast.\"\n\nHe let both of the girls go first, mostly to watch Laura trembling as she walked down the hall. Reaching the kitchen, she turned to face him, anxiety straining every muscles in her body.\n\n\"Ninety seconds?\" she asked.\n\n\"That's right,\" Kent confirmed, sitting down in front of his plate as Bailey moved to her spot and, with a sigh, slowly lowered herself into her chair.\n\n\"Do I just stand here?\" Laura looked at Bailey, wondering how she had done it.\n\n\"You can sit down,\" Kent said. \"Like Bailey did. Just don't close your legs.\"\n\nLaura nodded and reached back to the ties at her waist. That loosened the lower half of the apron, which flowed forward off her thighs, but still covered the centre of her body. She undid the tie around her neck and pushed the fabric forward, giving Kent a solid eyeful of sideboob before she removed it completely and laid it over the chair back.\n\nIn the stark morning light filtering through the curtains in the front window, her breasts shone pale and heavy before him, her nipples standing out in stark relief.\n\n\"Start the timer,\" Laura insisted as she watched his gaze wander down her stomach to the triangle of hair between her legs. \"Hmph.\"\n\nShe sat down, slightly back from the table, and leaned over to eat her breakfast.\n\nKent touched the timer on his phone, which emitted a satisfying beep to indicate the start of time keeping.\n\n\"So what are you planning for today?\" Bailey asked Kent.\n\n\"Lab reports,\" he turned his gaze casually across the table toward her, wishing the table didn't block most of her body.\n\nThat's probably asking a bit much, though, given everything else I've had today.\n\nInstead, he turned his back to Laura, watching her breasts sway as she attempted to daintily bring food to her mouth.\n\n\"Can't believe this,\" Laura muttered as she took in a mouthful of food.\n\n\"You look great,\" Kent complimented her.\n\nShe made a face as she chewed her food.\n\n\"Got other plans for the rest of the weekend?\" he asked.\n\nLaura swallowed carefully before replying, \"Besides sitting down very awkwardly?\"\n\n\"You'll heal up by tomorrow,\" Bailey offered helpfully. \"By the time your parents are home, most of the sting'll be gone.\"\n\n\"At the moment,\" Laura spoke through clenched teeth, \"my bare butt is right on the chair.\"\n\n\"Perfect,\" Kent smiled. \"You'll remember the last spanking for a while then?\"\n\n\"Yes, thanks,\" Laura sneered at him.\n\nBailey continued munching on her toast while they spoke and continued doing so through the ensuing silence. When the lack of conversation threatened to go on, she swallowed her food and asked Laura, \"Should we do a picture?\"\n\n\"What?\" Laura asked.\n\n\"Good point,\" Kent added. \"This is the reddest I've ever seen your butts.\"\n\n\"I'll get my phone,\" Bailey said, wolfing down another bite and darting off down the hall.\n\n\"She really likes her pics,\" Laura looked fondly after her friend.\n\n\"How are you this morning?\" Kent asked, leaning forward, \"Really. How are you?\"\n\n\"Good,\" Laura leaned forward too and lowered her voice. \"I feel like things are straightened out now, in balance, y'know? Never mind how sore my butt is.\"\n\n\"Good,\" Kent nodded thoughtfully. \"Good.\"\n\nBailey returned immediately, just as the timer hit ninety seconds.\n\n\"I can put the apron back on?\" Laura asked, standing up eagerly, her breasts jiggling in Kent's face.\n\n\"Only if you want it in the pic,\" Bailey pointed out. \"How should we do it?\"\n\n\"Your side of the table,\" Kent didn't hesitate in answering, \"Lean over the table so the sunlight hits your backs.\"\n\nBailey nodded and stood, slipping out of her panties as if it meant nothing to her. Laura reluctantly returned her apron to the back of her chair and stood cheek to cheek with her friend. Kent took Bailey's phone and started taking pictures of their backs.\n\n\"Lean over a bit, both of you,\" he directed, \"So I can get everything.\"\n\nThey stuck their cheeks out at him, Laura going up on her toes to get herself even with Bailey.\n\n\"There, you're good,\" Kent concluded, handing the phone back.\n\nA moment later, Laura had the apron back on, and frowned up at Kent, \"Hope you got a good look.\"\n\nThat's for show. Now that it's over, she's realized she enjoyed those ninety seconds as the centre of attention.\n\n\"Delicious,\" Kent leered forward, \"loved every moment.\"\n\nLaura sneered, taking a queue from Bailey's dismissive cynicism, and snappily tied the knots in her apron.\n\n=============================\n\nAfter they said their goodbyes and ushered Kent out the door, Laura and Bailey stood together in the foyer, looking at each other.\n\n\"Well,\" Laura said, giving Bailey's transparent underwear a once over, \"that was different.\"\n\n\"Uh-huh,\" Bailey replied. \"You feel like you got, um, enough?\"\n\nEnough spankings, Laur? You feel like you paid for your orgasms?\n\n\"I helped you pay off a few more dollars,\" Laura tilted her chin up in defiant pride.\n\nRi-ight. That's why you're doing this.\n\n\"Yes, you did,\" Bailey replied. \"Can we put on clothes now?\"\n\n\"I guess so,\" Laura deflated. \"It feels a little weird now that he's gone.\"\n\n\"Oh, the apron is quite fetching,\" Bailey assured her as she turned away towards Laura's bedroom and the salvation of her clothing.\n\n\"He liked that, didn't he?\" Laura smiled, suppressing a giggle, as she turned and followed Bailey.\n\n\"Works your boobs,\" Bailey pointed out.\n\nLaura gulped.\n\n\"Did you like it?\" Bailey asked.\n\nShe's going to pretend we're not both thinking about the same thing right now.\n\n\"Like what?\" Laura squeaked.\n\n\"Kent sucking on your nipples,\" Bailey turned to roll her eyes at Laura as she entered the bedroom.\n\nLaura blushed a deeper red than her even her cheeks had reached, and nodded shyly. \"Yes, thank you.\"\n\n\"Goodness,\" Bailey lilted her voice, \"No boy had even seen your boobs until yesterday, and look at you now.\"\n\nShe watched her friend grab a pair of plain, white underwear from her dresser and slide them on under her apron.\n\n\"Has he ever done that with you?\" Laura asked.\n\n\"No, actually,\" Bailey replied. \"But I never set him up for it either.\"\n\nLaura pulled her pants on as Bailey fished her jeans out of her backpack.\n\n\"Laur?\"\n\n\"Yeah?\"\n\n\"How many orgasms did you have last night?\"\n\n\"Why?\" Laura inhaled defensively.\n\n\"I was just wondering why you wanted more spankings this morning,\" Bailey kept her voice gentle.\n\nLaura slowly exhaled all of the breath from her lungs before taking in another deep inhalation. \"There were three.\"\n\n\"Three? When?\" Bailey stopped and stared at her. \"One riding him, one with his fingers ...\"\n\n\"And one... by myself,\" Laura admitted sheepishly.\n\n\"How did you-?\"\n\n\"While you were riding him? On the couch? Remember?\"\n\nBailey tried to think back. When could she have stealthed her way to an orgasm?\n\n\"You wouldn't have noticed,\" Laura said as she gave on trying to get a bra on under her apron and just untied it. \"You were right in the middle of enjoying each other.\"\n\n\"Wow,\" Bailey stared at the ceiling in confusion as she undid her own bra and laid it on Laura's bed. \"Well done.\"\n\n\"You're not going to wear a bra?\" Laura asked.\n\n\"I'm only walking home,\" Bailey said. \"My boobs don't need constant support.\"\n\nLaura fastened her bra while Bailey put a sweater on. She sat down fast in the hard chair and winced.\n\n\"You gotta be more gentle, Laura,\" Bailey pointed out.\n\n\"It's okay,\" her friend replied, settling in with an uncomfortable wiggle.\n\nThis is part of it, isn't it? Feeling the pain afterwards. Kent really hit the mark asking for the bottom of your butt.\n\n\"It'll be days before my butt can take any more, though,\" Laura's tone made it sound like an apology.\n\n\"I'm the same,\" Bailey sat gingerly on the bed, wondering why Laura hadn't put a top on over her bra. \"We're down to fifty eight dollars now.\"\n\n\"You in a rush?\" Laura's apology shifted to sadness.\n\n\"I think we can finish before Christmas,\" Bailey replied.\n\nI don't know why I'm in a hurry. I want to get this done and see that number reduced to zero. But it's so much fun in the mean time, and pushing ourselves like this, right up to our pain thresholds, might actually make it less enjoyable.\n\nBailey shook her head to clear out the confusion of emotions boiling through her.\n\nI want it to be over and I want it to go on forever, and there's no happy resolution to a contradiction like that except to enjoy every second of it when it's happening.\n\n\"Well, I'm out of it for this weekend,\" Laura drawled, standing up out her chair. \"And, you know, for most of next week.\"\n\nBailey nodded, acknowledging a vague reference to Laura's period. I don't want to waste any of the spankings when I can't enjoy them either.\n\nShe laid back on the bed, looking at the ceiling.\n\n\"What about his cock?\" Bailey asked.\n\n\"What about it?\" Laura bounced down onto the bed to lay next to Bailey.\n\n\"How did it feel to jerk him off?\" Bailey prodded.\n\nShe heard Laura gulping in embarrassment. \"It was neat. Not like before. I could feel the whole thing happening. It's weird how his body just... convulses... and I can feel the stuff flowing up before it shoots out.\"\n\nLaura inhaled through a shiver, \"But it's over so quick. I feel like I missed it.\"\n\n\"Don't worry,\" Bailey laughed. \"I'm sure he'll let you do it again.\"\n\nLaura lost control for a bit, giggling incessantly.\n\n\"What?\"\n\nWhen she regained her senses, she added, \"And he came on me. Semen! On me!\"\n\nThe giggling returned and Bailey looked up to see her friend, looking mentally unhinged, clutching her sides as she laughed.\n\nI guess that's a first, too. We broke so many of her barriers.\n\n\"He came on both of us,\" Bailey pointed out dryly.\n\n\"I know,\" Laura's eyes went wide as she calmed down, \"I think yours was messier.\"\n\n\"It was his first one,\" Bailey explained. \"But you were messy, too.\"\n\n\"You have the pic?\"\n\nBailey drew her phone out and they spent several minutes holding it up between themselves, examining the pictures they'd taken over the past several encounters.\n\n\"I remember his first, um, load,\" Laura offered. \"It was so runny, going down your butt crack.\"\n\n\"Don't remind me.\"\n\n\"I thought it would be like that again,\" Laura went on, pointing at the standing picture Bailey had taken, \"But look! It just stuck to me.\"\n\n\"A boy gets dehydrated eventually,\" Bailey explained.\n\n\"Hmph,\" Laura said. \"You already know all this?\"\n\n\"I had two boyfriends in high school,\" Bailey told her.\n\n\"You did all this with them?\"\n\nLaura has never asked me this many specific questions. She always kept things vague, pretending she didn't have too much interest. Now, though?\n\n\"Not all this,\" Bailey said. \"Neither of them ever spanked me, that's for sure. And most of the time the orgasms were, sort of, under clothes or whatever.\"\n\n\"But sometimes you saw it come out,\" Laura confirmed.\n\n\"Yeah,\" Bailey smiled. \"Sometimes.\"\n\n\"Was it this messy?\"\n\nBailey twisted her lips as she tried to recall, \"No, actually.\"\n\nThat is a bit odd. That was back in high school. Maybe Kent is just older? Or more turned on because he waited so long before coming? I don't ever remember seeing this much come.\n\n\"Do you think he's ever had sex?\" Laura blurted out suddenly.\n\nBailey froze and stared straight ahead, never having considered the question, and barely restrained herself from replying 'of course he has'.\n\nEveryone's had sex, haven't they? All normal people, at least. Just people like me and super-religious nerds like Laura haven't gotten around to it yet. But Kent must have...\n\nShe thought back through their encounters and wondered at his patience with her, his insistence on her enthusiasm, his calm discussion -- direct and indirect -- of their needs.\n\nIs that the patience of experience, or the patience of inexperience?\n\n\"I don't know,\" Bailey admitted, out loud and internally for the first time.\n\n\"He seems pretty confident,\" Laura said. \"Like he knows.\"\n\n\"He knows?\"\n\n\"Knows what do, I mean,\" Laura explained.\n\n\"He knows enough to figure out what we want,\" Bailey pointed out as she sat up on the bed and planted her elbows on her knees.\n\nNow I have to know. I kind of thought, for some reason, that Kent had the experience. But are we just three people who've never had sex playing a crazy ass spanking game?\n\n\"You said he'd had girlfriends, right?\" Laura asked, her voice seeking some reassurance.\n\n\"Yeah, but he didn't necessarily have sex with them,\" Bailey replied, thinking back to every mention Kent had ever made and realizing he'd always kept his references vague.\n\nLaura folded her arms under her breasts and looked sideways at Bailey, \"I'm not sure, but I feel a little better about that.\"\n\n\"Really?\"\n\n\"Like we're more even,\" she said, \"he's not way beyond us or anything.\"\n\nBailey shrugged, distracted, \"Sure.\"\n\nThat would explain his lack of aggression, wouldn't it? He's no more sure of the way forward than I am. That's why he lets me take the lead.\n\nShe twisted her lips again.\n\nThat's not really Kent's fault, though, is it? There's no way he could have started the whole spanking-for-debt idea. I had to be the one to offer my ass. And I've always taken the lead since.\n\n\"I should get home, though,\" Bailey said, \"I've got a lot of work piling up.\"\n\nLaura nodded, only a little sadly, and stood up to see her friend to the door.\n\n=============================\n\nThe moment she saw Bailey out of the house, Laura returned to the bedroom and pulled down her pants and underwear so she could examine her cheeks.\n\nKent had done a solid job, completely covering her flesh in red. When he'd spanked the same spot over and over, it had served to spread a sort of red glow outward from the target. But when he struck in some many different places, it created an uneven blotchy pattern of pinks and reds.\n\nSo much spanking. I'll feel this for days.\n\nShe glared at her cheeks and tried to blank out her thoughts even as images of the night before raced through her mind.\n\nClear it out.\n\nLaura listened to her inner voice, waiting for the preacher to rise up and begin his invective.\n\nNothing.\n\nShe kept calm a little longer, cringing in preparation.\n\nYou got nothing, preacher man?\n\nSilence.\n\nDoes this mean I can have orgasms without feeling bad about it?\n\nLaura sat down hard on her reading chair, heedless of the protest from her sore flesh, and stared out the open doorway in wonder.\n\n=============================\n\n\"So,\" Bailey said as she marched into Kent's room, \"thought about it yet?\"\n\nShe set herself gently down on his bed, letting the least sensitive centres of her cheeks take the load of her weight, and crossed her ankles.\n\nKent shrugged, \"Still a bit overwhelmed.\"\n\n\"Well,\" she scolded, \"get underwhelmed. I don't want this hanging over me.\"\n\n\"You want more spankings now?\" Kent asked. \"Have you seen your butt?\"\n\n\"Oh, I definitely have,\" Bailey pulled out her cell phone and waved it at him before tossing it on his bed. \"Laura and I just went over the pics.\"\n\nKent looked at the phone and back at Bailey.\n\n\"So your ass is super red?\"\n\n\"Uh-huh\"\n\n\"And you want to settle this extra debt now?\"\n\n\"Use it or lose it,\" Bailey kept her voice firm.\n\nLet's see what he does now.\n\n\"Alright,\" Kent inhaled, turning his eyes to the ceiling as he calculated. \"What do we have? You two did six dollars of spankings this morning.\"\n\nBailey looked at the white board, which Kent had already set to fifty eight dollars on account of their morning efforts and the extra dollars they'd earned from parading around in their underwear.\n\n\"Right,\" she agreed.\n\n\"And you asked me to spread them around, to be nice,\" Kent confirmed.\n\n\"Agreed.\"\n\n\"Last time you asked me for that, it was one extra spanking per dollar,\" Kent went on, \"And you're offering to take all of Laura's extra ones?\"\n\n\"All six, yep.\"\n\nWe both knew that was the deal when I made the offer in the shower. We're keeping Laura from knowing about this.\n\n\"I guess I could just take six extra spankings over top of your jeans,\" he said, \"I kind of remember what your butt looked like, so I'd know the best spot to spank you.\"\n\n\"The sorest spots,\" Bailey spoke evenly, acknowledging the option without any emotion, and pressed her lips together.\n\nThat is, by any account, the offer I made. When it's your dollar, you get to make me as red as you want, wherever you want. That's always been the deal. But, please, be more clever.\n\n\"Too easy, though.\"\n\nBailey held in her sigh of relief as best she could, but caught herself wondering if Kent had just acknowledged spanking her would count as 'too easy' for his own creativity, or 'too easy' a way out for her.\n\nWatching his eyes disconnect from her gaze, she saw that he paused at her lips for a moment.\n\nWhat does he want there? I'm not blowing him for six spankings.\n\nKent's eyes moved downwards, sliding over her neck, making her throat warm and filling her with a tingling sensation before his gaze rested on her breasts.\n\nWhat the fuck is he thinking about now? Bailey felt goosebumps on her flesh. Does he want to do something with them? He better not think he can slap my boobs.\n\n\"No chance we have whipped cream here, is there?\" Kent asked, his gaze not lifting from her breasts.\n\nBailey gave a start and felt a shiver run through her as phantom icicles touched the tips of her nipples.\n\n\"No, sorry,\" she tried to keep her voice sarcastic, but the chill running through her set her nipples so hard against her shirt, Kent had to have noticed.\n\nHe wants to suck on mine, too, she realized, but couldn't decide how she felt about it.\n\nThe warmth of his gaze lit up her stomach next and Bailey had no idea what Kent intended there. The only thing they'd ever done with her stomach involved coming on her when she'd blindfolded him. Could he want to do that again? Would it make her a prostitute?\n\nIf he jerks off on me, maybe not. If I do it, definitely.\n\nWhatever had caused Kent to pause there, however, his mind dwelt there only a heartbeat or two before settling between her legs.\n\nBailey tried to hold back her whimper, but felt a small squeak of breath escape as a warmth built between her thighs.\n\nIt's too bad Laura was already in such a state this morning, feeling like she'd gone overboard on the orgasms. We could have had some more fun before Kent left.\n\nBut Bailey had come to enough of an understanding of her friend to know when to stop. If Laura had squeezed in a fourth orgasm, she'd have needed more spankings, and neither of them had any more places to get spanked this morning -- or this weekend, if she had to be honest with herself.\n\nThat brought her back to Kent's dilemma, and how he continued to stare at the triangle between her tightly compressed thighs. With what she hoped looked like a vaguely inviting smirk on her face, she uncrossed her ankles, inviting his unknown train of thought to continue.",
        "He's not going to want to do anything painful to my vulva, she firmly decided, No slapping, certainly. Does he want to stare at me again?\n\nAs she prepared herself to negotiate how much he'd get to see and for how long, Kent's eyes flipped up to meet hers and he drew breath in to speak.\n\n\"I want a picture of you,\" he declared, narrowing his eyes and leaning forward.\n\n\"A picture?\" she stomped down on the instinctive rejection hurtling up her vocal chords, silently choking while she waited for him to continue.\n\nWell, you wanted him to take the initiative. Let's see where this goes.\n\n\"You don't want to be identifiable,\" he offered.\n\n\"Obvi.\"\n\n\"But you should be naked,\" Kent cleared up and sat back in his chair. \"It'd be good if I could see the redness from the last twenty four hours.\"\n\nBold. I wanted him to start taking the lead, and he could have asked for just about anything. Pinched my ass, my boobs, played with my nipples. But he wants one, single picture.\n\nBailey did her best to keep all expression off her face, hoping she displayed only her Negotiating Face, the clinically detached one she tried to use for all their best discussions.\n\nI don't have to do what he's asking, but let's see what he's asking.\n\n\"All my clothes off?\" she prodded, testing to see if he'd cave.\n\n\"Right,\" Kent answered, only the slightest quaver in his voice.\n\n\"Pose?\"\n\n\"In profile,\" he said and pointed at the foot of the bed, \"Kneeling over here.\"\n\nBailey turned to her left to look at the offered spot.\n\n\"Body stretched out this way,\" Kent waved towards the head of the bed, \"Stretching your arms out above your head. You can hide your face that way.\"\n\nHer heart pounded in her chest. She could try to pretend to herself she had negotiating room, that she could say 'No' and be done with it, but she already felt the surge of energy rushing up her spine to make her whole body tingle.\n\nI want to do this for him. There's no going back.\n\nBut Bailey also knew she had to push back a little, if only to make Kent understand how the importance of his request.\n\n\"Where will you take the pic from?\" she prodded.\n\n\"Just... over,\" Kent drifted off to her left, holding his joined thumbs together to frame his potential image, \"... here.\"\n\nIt'll give him a nice shot of my butt without getting right up it. Fair enough. But he'll still own a naked picture of me.\n\n\"I see,\" Bailey tried to control herself, the impatient urge to strip her clothes off for him threatening to derail every attempt at rationality and safety.\n\n\"Do you?\"\n\n\"Here's my offer,\" she said. \"You take the picture with my phone.\"\n\n\"Okay,\" Kent shrugged.\n\n\"In fact, you can take several if you want,\" Bailey went on amicably, \"Then we pick out which one is the best.\"\n\n\"Still with you.\"\n\n\"Then I edit it so my face and anything else identifying is gone,\" Bailey reprimanded, her voice becoming severe. \"Then I'll find a way to give you the picture.\"\n\n\"That sounds fair,\" Kent said.\n\n\"I'm also going to assume that I have a promise of confidentiality from you,\" she added, her eyes levelling with his. \"This isn't some game. I mean that.\"\n\n\"I will neither tell a soul, nor ever share the image,\" Kent promise, meeting her gaze evenly.\n\nCommitted now. Let's do this.\n\n\"Alright,\" she let her voice turn playful, \"Turn around. You're not paying for a show, just a pose.\"\n\nKent smirked, his body loosening up with laughter as he stood up and turned his back.\n\nI don't know what I expected when I dropped that ultimatum on him, but it wasn't this, Bailey smiled as she unbuttoned her jeans. This is better than anything I could have hoped for. Clever bastard.\n\n\"Let me know when you're ready,\" Kent called over his shoulder.\n\nShe tossed her jeans on the chair he had just vacated and took off her shirt next.\n\n\"Kent,\" she called out as she unfastened her bra, \"I'd feel better if you could take off your pants and shirt too?\"\n\n\"Sure,\" Kent said instantly, unbuckling his belt and sliding off his own jeans.\n\nSolid legs, Bailey noted as she exposed her breasts to his back, the little butt on him. He still runs, doesn't he? Look at those calves.\n\nDistracted by her first uninterrupted look at his body, she forgot her own mission.\n\n\"You done yet?\" he asked when he'd taken his shirt off.\n\n\"Oh, right,\" Bailey coughed and hurriedly slipped out of her underwear.\n\nOkay, naked. Here we go.\n\nShe climbed up on his bed and knelt near the foot, her toes wiggling off the end. The morning sunlight coming in through the high window warmed her back from shoulder to thigh, giving her a strangely cozy tingle. Leaving her cheeks up in the air, she bent at the waist until her breasts touched the bed sheets and then stretched her arms like a diver, tucking her head as deep down below her shoulders as she could.\n\nIf I had his shoulders, I'd be a lot more effective at hiding my face. Right now, all the picture will show is my hair.\n\nBailey knew, however, that the reddish brown tint of her hair, and its shoulder length cut, might prove more than enough to identify her. She still had sense enough in her head to want to avoid that.\n\nI can blur that part of the picture out.\n\n\"Okay,\" she called out, looking at Kent over the barrier of her arm.\n\n\"Whoa,\" Kent gasped as he turned around.\n\nI guess I've never hit him like this before, she felt a thrill of delight rush through her at his reaction.\n\n\"C'mon,\" she said, \"take your pictures.\"\n\n\"Right.\"\n\nShe heard Kent moving to roughly the place from which he'd promised to take his shots. As the first click went off, Bailey felt a little piece of herself breaking away, flowing into the phone. She heard her phone, click after click, stealing a little more of her with each image. When Kent had taken about a dozen shots, from various angles, Bailey felt as if she'd given away every piece of herself.\n\nIt's still on my phone, though, she reminded herself, listening to Kent sigh and fall into his chair.\n\n\"Done,\" he announced, holding out the phone expectantly.\n\nWithout moving her body, Bailey looked at him and rolled her eyes, causing him to echo her eye roll before rotating in his chair to face away. Bailey took up her shirt and threw it on over her head quickly, hoping its length covered her far enough.\n\n\"Alright, lessee!\"\n\nKent rotated back around and she dropped into his lap, forcing a gasp from both of them.\n\nThat's next. First we'll take care of these pictures and -\n\n\"Jesus!\" she swore softly as she caught sight of her first image.\n\nEvery function of her brain ground to a halt when she saw herself stretched out on his bed.\n\n\"That's the best one, I think,\" Kent's voice had gone defensive at her gasp, \"Maybe one of the other-\"\n\n\"That's -,\" Bailey stammered. \"That's... nice, though.\"\n\nKent stopped, then, too.\n\n\"Well,\" he swallowed hard. \"Well, yeah. Of course, it is.\"\n\nBailey realized Kent had chosen the pose and the precise location to place her body in the sunlight. The slanting rays of light lit her body from her elbows, through her shining red hair, down her arched back all the way to her reddened rear. Even her thighs and calves, in stark relief, looked nice in the shadows of the image.\n\nI wanted to blur out my hair originally. But now? she looked at the picture, aware that her mouth hung open, it would just ruin the whole thing.\n\n\"Did you-?\" she stammered, turning to look at Kent, \"Did you set it up like this on purpose?\"\n\n\"What?\"\n\n\"The sunlight, the -- the -- everything?\"\n\nHe shrugged, \"Just seemed about right to me. Like this morning at breakfast.\"\n\nThe breakfast pictures had looked pretty good, too, but she hadn't felt like this about those ones.\n\n\"Kent,\" she turned back to start flipping through all of the images, \"I had no idea...\"\n\nShe vaguely heard him reply as she came to the end of the pictures and hit the ones he'd taken of them together at breakfast.\n\nEven these are nice. I didn't notice before, but he got us in just the right position so all the muscles are accentuated and sunlight hits at a nice angle.\n\n\"Wow,\" she breathed, \"which one was it you liked best?\"\n\n\"Here,\" Kent answered, flipping back through until he found it.\n\n\"Your phone do NFC?\"\n\n\"Yeah,\" he answered.\n\nBailey felt herself gulp involuntarily as she met his eyes, \"I'm trusting you here, okay? Keep this safe?\"\n\n\"Promise,\" he said, and laid his hand on her breastbone.\n\nHer heart lurched at his touch.\n\nIt's like I'm made out of nothing all of a sudden, like my body became tiny and fragile when he put his hand there.\n\nBailey took a deep breath as she switched the NFC on her phone and began the process of transferring the photo to Kent.\n\n\"You're sure you don't want to edit it?\" Kent cautioned.\n\n\"Oh, right,\" she muttered.\n\nQuickly, she cropped the photo down to remove most of the evidence of the location. Bailey saw no need to make any of that information available to anyone. She then went to touch the phones together again.\n\n\"I meant to crop out your head or something,\" Kent pointed out. \"Just in case.\"\n\nBailey shook her head and shrugged, \"Can't do it. It would wreck the picture.\"\n\nThe transfer completed and she turned to look at Kent again.\n\n\"Thanks,\" she said as she stood up. \"Um, I guess we're all evened up, then?\"\n\n\"Yeah,\" Kent replied slowly.\n\n\"Alright.\"\n\nShe turned away from him to slide her panties on and yanked up her jeans after that, then slipped out of his room.\n\nFeeling like I forgot something. Can't imagine what it is, though. "
    ],
    "authorname": "xtorch",
    "tags": [
        "debt",
        "negotiation",
        "nudity",
        "payment",
        "picture",
        "punishment",
        "spank",
        "spanking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-23"
}