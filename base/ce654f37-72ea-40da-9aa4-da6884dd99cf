{
    "title": "Belle",
    "pages": [
        "The usual disclaimers apply, any sex portrayed is between adults 18 or older. \n\nBe forewarned, this story is longer than usual, though I've used an actual event as the launching point all characters and places are a figment of my imagination. I've been criticized of late because I will at times use asterisks instead of parentheses, I do this to highlight a thought or phrase instead of creating a sentence. I realize it is not grammatically correct, but it's my story and my style, hopefully you can look past it.\n\nBelle \n\nSitting in the second row it was easy to see Aunt Letha's picture on the easel next to her coffin, a huge spray of flowers cascading over the top fit her to a T. She had planned her own funeral down to the very songs she wanted sung and the scriptures she wanted used in the message to be given by the pastor. I felt as though she had departed far too early at the age of 81, bone cancer had other ideas. She had one of those *old* names you seldom see any longer. I didn't know her well, in fact none of us nieces and nephews knew her well, she lived four states away, kept to herself and had not once shown up for a family reunion in my lifetime. She was dad's oldest sister and though he spoke of her it was never with affection, he wasn't nasty, his words were generally factual and uncaring.\n\nShe had never married, I'm not sure if she ever so much as dated, after teaching English in the same school system for thirty eight years she made the decision to retire at sixty five thinking she'd finally travel the world she had neglected for so long. She made it to Australia, Japan, Argentina, and India before sickness overtook her body, her dreams of seeing the Middle East, all of Europe and Southeast Asia were dampened with one unfortunate doctors visit. She was due to have a hip replaced and had gone in for all the pre-op examinations, her blood samples revealed she was already riddled with cancer. \n\nI had initially gone to see her shortly after hearing of her diagnosis, but found myself visiting every few months minimum, I soon came to realize I was traveling the same path she had traveled her entire life. I was a single woman forty four years of age teaching school and had never been on a date, not an official one, Mike Hess kissed me at an eighth grade party and then told everyone about it, that was the end of boys for me. I didn't want to be alone and at the same time I didn't want the hurt and turmoil I'd seen in so many of my fellow teachers, infidelity, unplanned pregnancies, the constant sexual tension and flirtation between adults who swore to be monogamous, the potential for unwanted drama was everywhere.\n\nA few months before her death Aunt Letha called and asked if I would come visit her while she was still of sound mind. When I arrived she was napping, I made coffee to go along with a few decadent swirling frosted sweet rolls that are supposed to be bad for you, but as auntie said on the phone, *what are they gonna do, kill me*, to which we both laughed. When she woke she talked mostly of her early years and then became silent for a spell, probably three minutes or more before she spoke again. \n\n\"There are a few things I want to say to you Belle and I want you to listen without interruption, you can ask anything you want after that.\"\n\nI set my coffee cup down, hunched forward on my chair and made sure she knew I was listening intently. \n\n\"I'm dying more rapidly than I thought Belle, I don't have kids or anyone to leave my belongings to but nieces and nephews, none of whom have ever visited me except you. Therefore, what I have left when I die will be inherited by you, it isn't much but at least I know it will mean something to you and not simply be wasted.\"\n\nI opened my mouth to speak when she raised her hand, \"Shush child, you can talk later. What I'm going to say next is the most important thing I can leave you with. Don't live your life like me any longer Belle, I'm a dried up old lady with no one to hold at night or share a kiss with in the morning. I allowed myself to live within what I thought was a protective shell when in reality, it was a wall, a prison wall I'd built around my heart. If I hadn't been so afraid of life I could have loved and shared my time with a loving man, a few were interested and wanted me to, but I foolishly kept that door closed.\"\n\nAfter a short coughing spell and a minute or so with the oxygen mask she continued, \"Don't be like me honey, find someone you're comfortable with enough to trust them and then tear down the wall around your heart. I would love to have known what it was like to have a man kiss me passionately, caress my body and yes, make love to me, to fill me with his seed and know I had become a woman in every way. You're still young Belle, don't waste any more time honey, don't die all alone like I am.\"\n\nI was shocked, perplexed and flabbergasted all at the same time. My saintly aunt just told me to find a man and screw him, well not in those words, but it's what I heard, until I gave it a few minutes thought. That wasn't what she said, she was telling me to let a loving man into my life.\n\nI had moved my chair next to her recliner to hold her hand as I spoke, \"But how do I do that auntie? I can't very well put an ad in the paper looking for a man to love me? At my age I don't want any children, don't most men want a family? I've been single for so long I'm not sure I want to share my bathroom or MY BODY with a man, the thought of a man's hands under my dress or up my blouse is foreign to me, I don't know if I could do that.\"\n\nShe pointed her finger at me, \"That right there is what I'm talking about sweetheart, those thoughts were my thoughts fifty years ago and look where they got me. I never had a man caress me but I had a roommate in college who kissed me and felt my breasts a few times, it was exciting, invigorating and it made me very aroused, but again, I couldn't go through with allowing myself to love. I'm not telling you to become a lesbian, what I'm saying is that there can be physical pleasure with one you love and trust.\"\n\n\"Aunt Letha I would have no idea what to do or where to look. I have no desire to watch porn and try to figure how it all works, what does a forty four year old woman do to learn such things without making a fool of herself?\"\n\nSqueezing my hand she smiled, \"If you have a close woman friend who is happily married talk with her, she'll tell you what to expect and how to be intimate with a man, and if you are willing to simply listen you may not be embarrassed by all she tells you. I've been told time and again the marriage bed can be very exciting. Did you know humans and dolphins are the only two species who enjoy sex for pleasure? For the rest it's simply breeding.\"\n\nThe day of the funeral I don't think I heard a word the young minister said while he spoke of Aunt Letha, my mind was replaying her words to me as though those thoughts were on a continuous loop in my head. I determined at the moment I was going to take her words to heart and actually do something to make sure I didn't die as she so aptly put it, *a dried up old lady* with no one to hold at night or kiss good morning. The funeral was on a Tuesday, the family met at the lawyers Wednesday afternoon, I found it interesting that not one of them had ever visited when she was alive yet here they were for the scraps once she was dead. \n\nLet me assure you it did not go well, there was much of what the Bible describes as, *wailing and gnashing of teeth*. The lawyer kept it all in order and when it was finished not one person would talk with me, which was okay, considering they all lived on the west coast and me in the Midwest they didn't talk with me anyway. She bequeathed to me her house, car, life insurance and what she had saved for decades as her retirement account, as she said it wasn't a ton of money but when all was said and done I had an additional three hundred and eighty seven thousand dollars to put in my retirement fund. I didn't need the schools pissy little three percent match to my 401-K contributions any longer, in fact, with the inheritance there was well over a million in there already, I could stop contributing altogether if I wanted to. \n\nWith it being July I was on summer break, my closest friend in all the world was Chelsea Gregory, the school librarian, we'd been hired within six months of each other and were about to celebrate twenty two years at the same school. She had what I considered a solid marriage to a marvelous man with three kids. He was always kind, considerate, he seemed to dote over her and certainly showed his affection for her. I knew they had disagreements but as she said to me years ago, \"we've learned to disagree without being disagreeable, we can still be in love and not like each other at a given moment.\" \n\nThe exact words in that conversation still bring a smile to my lips, \"Tom has wanted to kill me a few times but he's never wanted to divorce me.\"\n\nI called and asked if she was up for a cup of coffee and some conversation, she told me to stop in after ten because two of the kids had swimming lessons, I showed up at eleven with a fresh pizza and 2 liter bottle of her favorite soft drink. Following lunch we cleared the table and stacked the dishes to wash later, the kids found their way outside and into the neighbo'rs yard to play. Chelsea sat back and asked.\n\n\"What's up Belle, you look like you have a lot on your mind?\"\n\nI shared with her all that auntie had told me and then got red in the face. I had no idea if she was going to tell me I was off my rocker or find a way to tell me why I should let a man into my life. She looked around a little, stared at the ceiling a few seconds and sat with her serious face pondering before she spoke.\n\n\"Technically I agree with your aunt, the first step is to let a man love and care for you, but it takes work, we've been programmed from puberty on that the only thing guys want is to get in our pants and once they've done that they discard us. And there are some like that, but there are far more that simply want to be with us, to show affection and receive the same in kind, it isn't all about sex in a loving relationship ... although it's a lot of fun when it is, Tom says the worst sex we've ever had was wonderful.\"\n\nShifting in her seat so she was looking directly at me, \"When the right one comes along you'll know it, I'd venture to say there have been a few through the years who would have died for you, but you weren't looking and never saw them. You must first make yourself available and I'm not talking about looking like a slut, I'm talking about lowering your defenses enough to enjoy a man's presence while still being cautious. Being open enough to let him win your heart.\"\n\nThat part I could see, it was the sex part that bothered me, \"What about having his hands on your body, isn't that repulsive?\"\n\nShe laughed softly, \"Let's play a game, go along with it and I think it will begin to answer your question. Imagine lying in bed with a pair of strong arms encircling your body, his lips softly and delicately press into yours, imagine your lips melting together, so out of breath from the headiness of the kiss you feel almost dizzy. Now imagine his hand slides up your side and gently cups your breast which he then squeezes lightly and molds into a protruding cone drawing his hand outward until his fingers find and roll the nipple into hardness before he pinches it softly.\n\nI was getting a warm feeling in my body and my face showed it as she continued. \n\n\"As he's kissing you passionately his hand stops playing with your breasts and slides downward across the flatness of your tummy stopping at the elastic of your panties. You moan softly into his mouth and raise your hips ever so slightly signaling him to go on, you feel the fingers slip under the elastic and his fingers are in your fur pie, playing, tugging lightly before a finger cascades over your mound and into the crevice between your thighs. Your legs open a little allowing that finger to slide through the slick sticky folds of your kitty, without penetrating he draws his finger through the folds again, pulls his hand out, makes a circle around your nipple with your girl juices and then sucks that nipple into his mouth. Your head is back, your mouth open without a sound coming from it and your hand is on the back of his head clasping it tight to your tit.\"\n\nWithout realizing what I was doing I noticed my hand resting on my breast and my breathing was choppy at best. Tit, kitty, hard nipples, these were not word's she and I had never used before, but they sure piqued my interest.\n\n\"With a nipple in his mouth the tingling begins between your legs and radiates out, his hand is back inside your panties, your legs spread more as he eases a long digit inside you, your hips are rocking and you aren't able to breathe normally. Your hips push up each time he pushes inside, little eep noises and uh's are flowing from your mouth as he moves his finger up to touch your love button stimulating it, driving you closer to a mind blowing climax.\"\n\nMy hand had involuntarily dropped from my breast to the inside of my thigh on the outside of my dress, it wasn't moving but I certainly felt turned on by the descriptive conversation.\n\n\"On his hands and knees he lifts your butt, slides your panties off and buries his face in your muff, you push into him and let out a squeal of delight as he licks you to an orgasm.\"\n\nMy eyes shot wide open, every feeling of eroticism left my body as I stared at her. \"You mean to tell me Tom licks your, you know.\" She softly interjected the word *pussy*.I continued, \"Yeah, that, don't you wash or something?\"\n\n\"When we first got married I was paranoid about not smelling fresh and would wash or shower every time before we made love, one night he more or less took me on the living room rug, he wouldn't let me wash, he pulled my panties off, stuck his face in my crotch and licked me to an orgasm, then he screwed me on the floor in front of the fireplace. It was some of the best sex we'd had up to that point.\"\n\nI was surprised by what I was hearing, I mentioned that it all sounded so unhygienic.\n\n\"Here's what he told me. I don't want to smell the scent of your latest soap, I want to smell my wife's pussy ready to be fucked. Sorry for the crude language, but that's what he said. He told me likes the fact that I get so wet and sticky as he excites me that he has to peel the crotch of my panties from my vulva. When the moment arrives that the tip of his penis lines up with my vagina and he begins to push in I lose all sense of inhibition wanting to give myself to him spirit, soul, and body.\"\n\nI was breathing hard, my face felt as though it was on fire. Chelsea put her hand on top of mine and looked at me. \n\n\"Be honest with me Belle, are your panties at least damp if not wet with a thick sticky cream, are your vulva pulsing from the blood rushing through them, can you envision his hand cupping your sex as you push into him?\"\n\nI had moved my hand up to touch my crotch, as she asked those questions I slid the hem upward, put my hand underneath the dress and touched my sopping wet panties. Through staggered breaths I nodded and muttered, \"Yes, I can envision that, oh my gosh Chelsea, please don't tell anyone about this.\"\n\n\"This will never be mentioned beyond you and me, something else you need to know hon, we possess a powerful bit of anatomy that motivates our lover to show us affection and passion. When I realized years ago that Tom would do nearly anything for me because of a little pink slit between my legs, a place that brought pleasure to both of us, I determined to make sure he got all of that he desired and I've never wanted for anything since. That man would eat the peanuts out of my poop just to see where it came from.\" I must have looked shocked. \"It's a figure of speech Belle, only a figure of speech.\"\n\nChelsea continued, \"Answer me honestly, are your panties wet? Do your nipples hurt from being hard? Is there a tingling sensation radiating throughout your body? Did you cum a little, you looked like you did?\"\n\nNow I was thoroughly embarrassed, was my small climax that obvious, does she think I'm being slutty touching myself? So many questions. Could a man really do that to me and send me over the edge every time we had sex?\n\nShe answered my question without me asking, \"It isn't like that every single time but it can be just as fulfilling. Something Tom loves to do if the kids are gone to Grams and if I'm in a dress is bend me over the back of the couch or kitchen table, he yanks my panties down and mounts me, it goes so deep, we both love it. It's exciting to have him take me like I'm his little sex kitten or fuck toy, he doesn't ask or carry on with a lot of our normal foreplay during those times, we forget about everything else and just fuck. I know my words are different, but to be honest Belle, nothing else describes it so well.\"\n\nOn the corner of the table was a small pile of underwear that she'd folded earlier, I noticed the pair on top that amounted too nothing more than a wispy bit of lace fabric that would hide nothing. Picking them up I could see through them with clarity as she smiled at me. \n\n\"Do you actually wear these Chelsea? There isn't enough there to even cover your pubic hair.\"\n\nShe was chuckling, \"Who says I have pubic hair?\"\n\nI was in shock, sure I knew the high school girls did that for who knows what reason, but a full-grown woman.\n\n\"You mean you shave down there? Do you shave everything?\"\n\n\"Not everything, Tom likes some on top above my clit, says that being completely bald reminds him too much of his sisters when they were little girls. I can see his point, I keep it in a nicely shaped V, ending just below the panty line.\"\n\nYet another shocking moment, \"You mean Tom likes that?\"\n\n\"Oh honey, when his tongue slides from bottom to top and stops at my clit with no hint of a single hair in the way he groans like an animal in heat. Now listen, what I say next stays with you and me ... no one else. I like to have him shave my labia, he softly stretches each side and gently removes the few hairs that exist, Belle, he literally drools when I have him do that. And when he's done he always licks me to an orgasm or three, often they come in waves, I can't seem to figure out where one ends and the next one begins. I become so sensitive I have to push him away.\"\n\nMy breathing was ragged and choppy, I couldn't seem to slow my body's metabolism, then it hit, my body shook and I could feel the cream of my pussy fill my panties. I'd creamed a few times prior from wet dreams but they were nothing like this, my panties were soaked to the point I was concerned it would leak through onto my dress. As I regained a modicum of composure I opened my eyes to see Chelsea grinning from ear to ear. \n\nShe offered me a dry pair of panties or a light days pad to keep from soaking through my dress on the way home. I chose the pad, kissed her cheek goodbye and slid my sensitive ass onto the warmness of the seat after the car had been sitting in the sun for hours. I liked the feeling of the heat radiating up into my vaginal area, it felt relaxing. Without asking her advice I went to an online dating site looking for someone only to be sorely disappointed, the few I did chat with were alright at first, then they would send a picture of their dick. I instantly deleted them. \n\nIt was a few weeks before school was due to begin, most teachers were spending at least part of their day preparing for the opening, Chelsea and I sat together with our bag lunch most days. It took a few days but our lunch conversation finally got around to the day in her kitchen. I told her it had awakened a desire inside but I was thoroughly disgusted with the online sites.",
        "\"You want to stay away from those pervs Belle, avoid those guys that send a picture of their package, they are disgusting. Be patient hon, the right one will come along and this time don't be so ready to ignore him, give him a date or two to show you what he's like, believe me, you'll know by then.\"\n\nWith school back in session life got very busy, it was obvious people were trying to hook me up with new single teachers just as they did every year, they were nice, they were polite, a couple were cute, but none was for me. They didn't trip my trigger and Chelsea had said if they didn't trip my trigger to not even waste my time or theirs. The new history teacher was being pushed my way with a vengeance by a couple of the self appointed match makers, he was nice, cute in his own kind of way and not for me. \n\nAt lunch in the teacher's lounge he sat opposite me trying to strike up a conversation, I finally smiled and told him I really wasn't interested but thank you for the attention. Without looing hurt he asked point blank. \n\n\"Is it my skin color, is it because I'm black?\"\n\n\"No Mr. Brooks it has nothing to do with your skin color, I just am not attracted to you, sorry if that offends in some way.\"\n\nHe laughed softly looking around, leaned over the table and spoke softly, \"Good, I'm not attracted to you either, no offense, maybe now people will leave us alone.\" \n\nHe stood and exited the room. Word got around quickly that we were not attracted to one another and people should stop trying to get us together, it seemed to work, he and I developed a close relationship after that, with me eventually introducing him to the new Spanish teacher, a Latina knockout. It was instant sparks for both and a wedding planned for the following spring.\n\nIt was the end of October when I officially met Harry, known to everyone at school as Homer. Some well meaning dimwit came up with the idea of each room having a Halloween display of some sort outside their door as a contest. What a frickin mess, the day after Halloween I was cleaning up outside my door, sweeping, wiping the floor, trying to minimize the mess my class had made when Homer walked around the corner.\n\n\"You don't need to do that Miss Belle, that's my job, it's what we janitors get paid to do.\"\n\nI'd seen him a few times since school had begun but only from afar, now here he was four feet away, he was an average looking guy at first glance, then as I stepped back looking more closely it became apparent that I found him handsome. His body wasn't big in stature but it was quite obvious he was solid from head to toe. I didn't get wet panties or want him to ravish my body but I did determine I wanted to get to know him better. In telling Chelsea about him over coffee a few weeks later in the evening she instantly smiled.\n\n\"Homer? Sure, I know him, real name is Harry, he was hired right after school let out and the head janitor retired. Interesting story, 39, never married, went in the army at 18, discharged last year as a Master Sergeant with twenty under his belt, lives on Dobbs Road just past the dam. Word is he was born in that house.\"\n\n\"How do you know all that Chels?\"\n\n\"Tom played slow pitch with him all summer, they get along great, he's been to our house for supper a few times. For a middle aged man, he's still pretty good looking, is he in your sights? Let me warn you, he's as paranoid about women as you are about men, but who knows, maybe you can break each other's barriers down. Tom said he did four tours in the sandbox so he may have some PTSD issues, that doesn't mean to avoid him, just be aware he sees the world differently than you and I probably do.\"\n\n\"I'm not sure Chelsea, the last thing I need in my life is some broken down individual to take care of, or worse, be afraid of. Besides, I'm five years older than him, maybe he wants kids, I'm nearly done with menopause. Just thinking of sex scares me, I've never had a man between my legs, yeah, I know we talked about it in your kitchen but that's a lot different than being naked with some guy ramming his penis into me.\"\n\nChelsea was laughing at me, \"Girl, you have one vivid imagination. You've done nothing more than greet him in the hall and in your mind he's, *ramming his cock into your otherwise unused pussy*, like I said, you have one vivid imagination.\"\n\n\"Okay smart ass, what should I do then? I can hardly walk up to him and say, *hey buddy, wanna take a forty four year old virgin out to dinner*?\"\n\nIn classic Chelsea style she got up for another coffee wiggling her tit's in my face as she walked past. \n\n\"Since you asked, I'll tell you. Don't do anything like that, just be friendly, say hi, smile, it won't break your face. Let him get to know and be comfortable around you, I'm bettin he's as unsure what to do as you are. See where it goes over the next month, you'll know if there's anything worth pursuing.\"\n\n\"Chels do you know if he's educated?\"\n\n\"I don't think you attain the rank of Master Sergeant in twenty years because you're a Gomer Pile, I know for sure he has at least one bachelors.\"\n\n\"What? I call bullshit. Why would someone with a bachelors want to be a janitor where kids don't give a shit and make a mess every day?\"\n\nShe gave me that *you have to be kidding look*, \"I have no idea, you'll have to ask him. You know my brother came home with a messed up head, he went off on his own for nearly a year before he'd defeated his demons. Maybe Homer just wants a simple job where he can settle back into life.\"\n\nHeading home my mind wandered excessively, contemplating this or that, finally reaching the conclusion that Chelsea was right, I do have a vivid imagination. I'd left her house just after eight and got home just before nine, I stripped down to shower before bed and as I flipped my panties into the hamper I stopped. Lifting them back out I held my plain white cotton briefs up and brought them toward me nose carefully sniffing, not only did they smell different than usual, I noticed they were sort of gooey in the gusset. \n\nI caught myself in the mirror and quickly tossed them back into the hamper admonishing myself, *what the hell is wrong with you Belle, my god you're like some kind of pervert, sniffing your own panties*. In the shower I found myself washing my nether region a bit longer than usual, masturbation never really did much for me, sure, I'd pleasured myself from time to time through the years but it was not a regular thing. I took the moveable head down to rinse my hair more thoroughly, with that done I moved the spray across my breasts making them tingle and causing me to shiver slightly with delight. \n\nContinuing the spray downward I knew what I was planning and told myself to stop, my body had other plans, switching the head from spray to pulse I moved it over my mons directing the throbbing pulse onto my clit area. With my free hand I spread the hood and damned near buckled when the first pulse hit my sensitive engorged love button, I didn't last five minutes before I dropped the shower head and braced myself against the wall as I shook and groaned in ecstasy. When I dropped the shower head the hose brought it around behind and was throbbing against my ass right next to my pussy, a sensation I'd never felt before, turning to hang the head again I smiled, *I'll have to try the pulse against my pussy from behind next time, that felt good*.\n\nOver the next few week's I greeted Homer as often as I could, if I saw him in an area I wasn't going I would change direction in order to say hello. He'd always reply with, *Nice to see you Miss Belle* as I walked by. I wasn't sure if I caught him watching me a few times or not, then one day after saying hello I walked to the cafeteria doorway and stood watching him. My mind kept repeating, *look at me, turn and look at me* when he did he caught my eye and winked, I was flushed with red cheeks instantly, I smiled and walked into the cafeteria. \n\nPicking over what they considered a salad, considering there were items that should have been tossed three days prior, I was smiling to myself, next thing I knew Chelsea was squeezing her cute ass in next to mine patting my leg as she did. We had never been intimate and never intended to be but she was always doing crap like that, she'd poke my nipples with her finger tip, or shake her tits in my face as she giggled. With her shoulder tight to mine she leaned close to my face and whispered.\n\n\"I noticed that wink. Are you and Homer up to something? Remember, you can't just flirt, you have to let him catch you once in a while. Has he asked you to coffee or dinner or anything like that?\"\n\nI shook my head, \"Nope, nothing more than greetings in the halls of school. What do you mean let him catch me?\"\n\n\"Belle, you're one of the smartest women I know but there are times you're dumber than a cardboard box. What I'm talking about is not just being friendly or making eyes from afar, talk with him sometimes, he greets you every day, let that be a launching point to start a conversation. THEN, when you both must get back to your appointed duties you say something like, *hey, let's continue this conversation over coffee or lunch*, or whatever. What I'm saying is don't get comfortable with just saying hi and batting your eyelashes once in a while.\"\n\nI sat straight, \"I don't bat my eyelashes at him.\"\n\nLeaning back she gave me that *you dingbat look*, \"Well no shit Dick Tracy, it's a figure of speech, although that might work with an older guy like him. Hmmm, maybe you should give it a try.\"\n\nWalking back to my classroom after lunch who should I almost literally run into as I rounded a corner, Homer. I thought *what the hell, I have nothing to lose*. \n\n\"We meet again, are you following me around?\"\n\nHe laughed, \"That might be kind of hard since we're headed in opposite directions. Nice to see you again though.\"\n\nIt was now or never, I could feel my courage rapidly slipping away, \"Say, we seem to spend a lot of time saying hello but no time actually talking. Can I interest you in a cup of coffee and a piece of cake? I think you're done at six aren't you?\"\n\n\"Five actually, usually takes me thirty minutes to get out of here that's why it seems later. I'm booked for overtime tonight, girls volleyball match which should be done by nine at the latest. Can I take a raincheck, I don't work late tomorrow evening.\"\n\n\"Oh, I'm due to work the snack bar tomorrow night for the basketball game. Shoot, I won't be done until after the half time crowd is done with.\"\n\nI think we both sensed the moment slipping away, he looked at me with a smile, \"What if I came for the game and hung around until halftime was over, then we could either watch the rest of the game and go for coffee or we could just go for coffee after halftime?\"\n\n\"Either one is okay with me Harry. We can figure it out then.\"\n\n\"Please, call me Homer, no one but my mom has called me Harry for years, it almost sounds foreign coming from anyone's lips but hers. Good enough, I'll see you tomorrow then, have a good evening.\"\n\nThere it was, zip, bing, bang, in less than five minutes time I had a date for the following night, why had I always thought dating would be so hard? Then again it's only coffee, but, it was a start. Walking to my car after school I accidentally let it slip to Chelsea that we were going for coffee the next night, she was so excited I thought she was going to pee her pants. \n\n\"This is it Belle, this is the beginning, just think where it could go from there.\"\n\nI grabbed her elbow stopping in stride and turning her to face me, \"See, that's what I'm afraid, that comment, who knows where it could lead from there.\"\n\n\"Geez Belle, stop over thinking everything. I'm not talking about a weekend of hot monkey sex in Cancun, or wherever it is one goes for hot monkey sex, I'm talking about how sweet it would be if a coffee date led to a loving relationship. Honey face facts, you aren't getting any younger, he seems like a nice enough fellow, give him a chance. I watched him at numerous games this past summer, not once did he hit on or even flirt with any of the wives, and believe me, some of them dressed to be hit on. They looked like sluts.\"\n\nI knew she was right, \"Thanks Chels, I can always count on you to help me stay balanced and focused. The objective now is to get to know him better and see where it leads.\"\n\nShe hugged me, \"Now you're talking, I need to go get supper started, see you later.\"\n\nI hate trying to cook for one, sitting in the diner enjoying the meatloaf blue plate special I noticed several parents of girls who would be playing tonight. Knowing varsity wouldn't start until seven thirty I contemplated going home, changing into something more comfortable and going to the volleyball match, maybe I'd have a chance to say hi to Homer. I felt like a schoolgirl when I called Chelsea after I got home from the diner.\n\n\"Tell me if I'm crazy Chels, I'm thinking of going to the girl's game in hopes that I'll see Homer. I feel like a twelve year old crushing over the high school quarterback, this is insane, dating can't really be like this can it?\"\n\nShe was beyond laughing as she guffawed into the phone, \"That's exactly what it's like Belle, completely unhinged and unplanned, full of raw emotion, excitement, wonderment and sometimes lust. If thinking of him is making your heart go pitty-pat that's a good thing. Get changed, Tom and I will pick you up at seven, and don't wear those damned baggy capri pants, put on something that hugs your ass a little.\"\n\nCaught off guard I asked, \"Why would I do that? I don't want to look like some floozy.\"\n\n\"Because my dear Belle even if you don't know it ... you have a nice ass.\"\n\n\"Chelsea, you're a girl you aren't supposed to be looking at my ass.\"\n\n\"Being a girl doesn't mean I don't know a nice ass when I see it. Geez Belle I'm not talking about lez-be-friends, I'm simply saying you have a nice butt and it's okay to let others notice as well, you know, someone like Homer.\"\n\nI did have a pair of jeans I seldom wore because I thought they hugged my legs and butt a bit too much, but if Chels says I should do that what will it hurt? She would never set me up for failure, stripping I contemplated my underwear as I glanced in the mirror, I wasn't heavy, I wasn't skinny, I had a nice figure with no muffin top, if there was a downfall it was my average sized 34B's, after all, didn't guys like women with big boobs? I had on white cotton hip hugger panties with little pink hearts strewn about, my bra was one of those molded cup cream colored halter types, and that's what it was, a halter designed to keep them in place and from moving. \n\nRummaging trough my underwear drawer I found only one pair of what I thought could be considered sexy looking panties and one very flimsy bra I'd bought years ago to wear under a low neckline dress at a wedding. Everything else looked like I had just transferred it from my mother's dresser to mine. I immediately thought of the numerous times I'd walked into Chelsea's back yard past the clotheslines full of sexy exotic panties and bras, some so thin I could see through them. I knew panties and bras were going to have to be included in one of our Saturday shopping trips in the very near future. \n\nI had also noticed garter belts and stockings flowing in the gentle breezes, hmmm, I needed to know about those things, my mom had certainly never told me about them and she was gone, Chelsea was my trusted friend with a solid marriage and a husband who loved her unequivocally. I was sitting in a chair on the front porch as they pulled into the driveway, I opened the rear door and climbed in, Chelsea turned with a smirk on her face. \n\n\"You're looking pretty hot for a school-teacher, the jeans and tighter blouse are a definite compliment.\"\n\n\"Well you're a school-teacher as well, why am I supposedly so hot just because I'm a teacher? You dress like this all the time.\"\n\n\"Yes, but I'm a librarian and librarians are supposed to look hot and sultry. Aren't they Tom?\"\n\nHe smiled as he optically undressed his wife, \"That they are baby, that they are. Maybe we should drop Belle off and go home for a quickie.\"\n\nI was embarrassed and Chelsea was laughing, \"You wish buddy boy, you'll get all of that you can handle when we go to bed, for now be nice, we have a virgin in the back seat.\"\n\nThe look on Tom's face was one of embarrassment and surprise, looking at me in the rearview mirror he asked softly, \"Are you really a virgin Belle?\"\n\nI nodded, \"I am Tom. Does that surprise you? It isn't that I don't want a lover I've just never found the one I wanted to give my maidenhead to, I only have it to give once and I don't want that to be for the wrong reason.\"\n\nTom looked sheepish, \"Sorry for being so crass, I assumed, yep I know what assuming does, it's just that you so seldom hear of, much less know, a forty something virgin.\"\n\n\"That's forty-four to be exact Tom. But with your wife's help and guidance I'm hoping to change my status in the near future, I think I've found someone that I could trust and love enough to give them my body as well as my heart.\"\n\nWalking through the cafeteria toward the gym ten minutes later I looked around hoping to see Homer to no avail. Chelsea could see the wonder on my face and told me to relax, all would work out. An hour and fifteen minutes later the girls had wrapped up their latest victory, as we descended the bleachers I noticed Homer at the bottom of the steps, reaching out his hand to me I felt special, a half dozen other women had walked past him and he hadn't helped them. \n\nMy heart was aflutter and I sensed my breathing was slightly erratic, what I wasn't prepared for was the tingly feelings between my legs that I had only known through infrequent masturbation. My legs were wobbly and just as had happened at Chelsea's some weeks ago I felt my panties dampen ever so slightly, my gosh, this was all so new to me. \n\n\"Evening Miss Belle. Did I get the nights wrong, I thought we were meeting for the basketball game?\"\n\nMy cheeks were on fire, \"No, you aren't wrong, Tom and Chelsea invited me to come along and watch their niece play. I was also hoping I might see you to say hi and verify tomorrow evening.\"\n\nMy inside voice was chastising me telling me to shut up, to stop acting like a tramp, to get ahold of myself and act like the matronly teacher everyone thought I was. Being lost in my own thoughts was interrupted by Homer saying my name.\n\n\"Belle, Belle, I think Tom and Chelsea are getting ready to go, didn't you say you rode with them? By the way, you sure look good tonight, I almost couldn't take care of my duties because I kept looking at you. I hope that doesn't seem to forward of me.\"\n\nI was flattered, overwhelmed and aghast all at the same time, no one had ever told me something like that. I felt all warm and fuzzy inside, I was searching for words that seemed to elude me. It was Tom's hand on my shoulder that broke the spell, then I stepped closer to Homer.\n\n\"Thank you Homer, no one has ever paid me a compliment like that before. I'll see you tomorrow at school, I'm looking forward to tomorrow night, shall I wear the same thing?\"\n\nHe stood straight with a big smile on his face, \"I would like that, I believe I can fight off the other guys trying to sit with you.\"\n\nDriving out of the parking lot Chelsea turned looking back at me, \"I knew he'd like those jeans, I heard him say to wear them tomorrow night. Will you do that?\"\n\nI nodded as she continued, \"What else are you going to wear, got anything sexy to wear under them?\"\n\n\"Not really, but why would that matter he isn't going to see them.\"\n\n\"First off Belle you never know what may or may not happen when passion takes over, and you're probably right, he won't see them ...BUT ... and that's a big *but*, just knowing you're dressed sexily beneath your outer wear makes you feel more sexy and desirable. It will completely change how you view yourself, and who knows, further down the line he may see it after all.",
        "The next afternoon I had a little over two hours between school being done and my having to be back at school to help, Chelsea was waiting next to my car and told me to get in hers, when I protested she scowled and told me to get my skinny ass in her car. Where we ended up was at the new mall on the other side of town walking into a Victorias Secret, I was flush just looking at some of those outfits thinking how uncomfortable they would be to wear until I figured out some weren't supposed to be worn longer than it took for their lover to take it off.\n\nShe took me directly to the silk panty/bra sets and began rummaging through them, holding this set and that set against my body, the ones she thought would look good on me she set aside the rest she set back on the display. With four sets she took my hand and drug me to where the garter belt and hose display was, she held a black one in one hand and a white one in the other moving her hands up and down as though they were a scale. I finally pointed to the white one.\n\n\"Both, good choice Belle, now how about stockings? Not those damned panty hose, real silk stockings, when I wear those with a belt Tom nearly rips my clothes off before he reminds me how grateful I am that I married him.\"\n\nI made up my mind it wasn't worth fighting about, I'd ask for her help and if this was part of it I had no room to complain. At home she held up a particularly cute set that was yellow with little black polka-dots throughout and told me I should wear it to the game. \n\n\"But I haven't washed them yet.\" I protested.\n\n\"Just put them on Belle, what the hells the difference, the crotch is going to be thick and sticky when you get home anyway, you can wash them tomorrow for a good reason. Get them on girl, I want to see how hot you look.\"\n\nI was trapped, she was by the bedroom door and she wasn't moving, standing with her arms folded I slowly undressed, her eyes never left my body as I slowly shed my clothes, as my bra was tossed onto the pile of clothes and I slid my panties down revealing my well kept bush she sighed and let the following escape her lips. \n\n\"My god Belle, you're beautiful, if I wasn't so happily married to Tom I'd find a way to fuck you here and now. I've never been into girls, but if we had been roomies in college I sure as hell would have been. Slip into those panties, let me see how hot you'll look for Homer's eyes. He's gonna love your body.\"\n\nOnce again I reiterated, \"He isn't going to see me in my underwear, get that through your head.\"\n\nClipping my bra in front to spin around and slide up, I had my back to her when I sensed her behind me, without a word I felt her hands go under my arms and gently cup my breasts, softly squeezing, moving her fingers outward until my nipples were being rolled between her thumb and forefingers making them hard. Letting go and stepping back with her head next to mine she said oh so softly, \"You have perfect breasts,\" she kissed me on the neck and pulled away. Pulling my bra up I stepped toward her dumbfounded.\n\n\"Why did you do that Chelsea?\"\n\n\"Tom has always told me I have perfect breasts and how much he loves to hold them, I wanted to know what he felt when he caresses my breasts as I did yours. Nothing more, I felt like you know me well enough that I could do that and you not be angry with me. Now that I've done that I won't have to wonder any longer. By the way, your tits are perfect, they feel wonderful. Are we okay?\"\n\nI was in a quandary, her hands on me felt good, I'd read that when a woman caressed another woman it was more sensual than a man's touch, though a man had never touched my body intimately I had no reason to doubt what I had read was true. I decided to step outside my comfort zone, stepping in front of her I reached up and felt her breasts through the blouse, then kissed her as passionately as I knew how. I pulled back and spoke.\n\n\"I've wanted to kiss your inviting lips forever, in my opinion mine are just little lines beneath my nose, yours are so full and ... well ... kissable. Thanks for not freaking, after you felt me up I had to kiss you, now that I have I won't feel the urge to do it again. And yes, we're good.\"\n\nIn all the years that followed we never once made a pass at or touched one another in an erotic manner, she'd felt my breasts, I'd felt hers, we'd kissed and that was enough. Oddly, regardless of what we told each other, I never fully understood why we did what we did, but then it didn't really matter.\n\nLooking me up and down signaling me to pirouette she proclaimed, \"Damn girl you are smokin hot, if that doesn't make his dick hard nothing will.\"\n\n\"Dammit Chelsea, he isn't going to see my bra and panties so knock that shit off.\"\n\nIt was already five thirty and I needed to be at school by six, shimmying into my jeans and blouse I was ready to go until Chels stood in front of me with her hands on my shoulders, without a word she slowly unbuttoned the top two buttons of my blouse saying softly.\n\n\"Let him see enough to make him drool without showing everyone else, after all, you have a lovely rack my dear. Bend forward, good, there's just enough of an opening to glimpse the edge of your pretty bra without showing all of your cleavage. I'll get you laid yet girl.\"\n\nI grabbed and held her at arms length, \"I know you want me to get laid, but it has to be at my pace, if it happens at all. Okay? Don't push me Chels, tell me what to do but don't push me.\" \n\nAs I walked past her toward the door she slapped my ass hard, I squealed, classic Chelsea, nothing new there. In the parking lot she had me turn to face her, she asked for my lipstick and touched up what I'd done earlier, then fluffed my hair and told me to go get um. She and Tom would find me at the game later on. There were lots of ooo's and ahhh's as I walked to the refreshment stand, Mr. Brooks smiled and winked with a thumbs up as he and Carla walked into the gym. The other women in the refreshment stand were surmising that I had a man and that he was probably in my bed. \n\nI listened to it for about ten minutes and put an end to it. Shirley Stinson was the worst, she was on her third husband so I wasn't sure what made her think she was an authority on relationships. I finally turned to face the other three with Shirley at the front.\n\n\"The only one in my bed is me, if I decide to invite a man into my bed I sure as hell won't tell any of you about it. So, can we let this lie?\"\n\nThe other two wanted to go watch their boys play leaving Shirley and I in the booth during the slow time. We talked but not about anything of substance, to her credit she stayed away from the topic of me getting laid. The break between the second and third game was a flurry of activity, there's only twenty minutes so everyone is in a hurry and some are downright cranky about it. I hadn't seen Homer by the time the buzzer went off signaling it was time for the third period to begin, then out of the corner of my eye I saw him leaning against the doorway to the gym. \n\nI smiled as he walked toward me, when he got to the stand he nodded at the other gals and looked right at me. \n\n\"Evening Miss Belle. Are you finished for the evening?\" I nodded. \"I'm gonna watch the rest of the game, wanna watch it with me? Tom told me earlier he'd save a seat, I'm bettin there's two available.\"\n\nI bid the others goodbye and walked with Homer to the gym entrance, at the door he stopped, looking at me intently he said softly. \n\n\"Gosh you're pretty, you really make that outfit look good, just like last night, and I love your long hair. I'm a sucker for long hair. Shall we?\"\n\nWalking through the doors with me right before him and him assuming a position slightly behind with his hand on the small of my back you could have heard a pin drop on our side of the gym. Keep in mind I had been at this school for years and never once had the *snow queen* as I was so rudely referred to been seen with any man, in or out of school. \n\nI was excited and proud to be on a date with a handsome polite man, on the other hand I just knew that every housewife in the stands could see through my clothes thinking what a slut I was to be wearing such tiny underwear ... and on a first date no less. I behaved as nonchalant as possible walking toward where I saw Chelsea stand and wave to us pointing to an open spot on the bleachers next to them, when we reached them she had a blanket folded lengthwise for us to sit on, leaning next to my ear she whispered. \n\n\"These damned bleachers make your ass hurt after a bit, the last thing I want when we get home is for my ass to be numb, tonight is play time. If you get my drift?\"\n\nHalf smiling I nodded and said, \"I get your drift, enjoy the snowplow.\" Then broke out in laughter as did she, I wondered, where in tarnation that comment had come from, that isn't something miss proper Belle would ever say, and yet I did. Could it be that all of Chelsea's talks combined with the attention from Homer was slowly melting the glacier that had surrounded my heart for so many years? Was a man actually winning my heart, I was attempting to follow Aunt Letha's instructions to allow a man entry into my life and let him love me for who I am, could it be happening? At last?\"\n\nWe shouted at the ref's and cheered the boys along with the rest of the crowd, at one point as we were sitting back down after a rousing display of congratulations by all for a play well executed taking them six points ahead I felt his hand take mine then quickly let go, as if he'd done something wrong. I felt my heart flutter and begin pounding hard, a first for me, a scary situation, and yet it was exhilarating.\n\nInstinct told me to reach out and take hold of that hand, my head told me not to and since my head typically ruled my actions I did nothing, sadly neither did he from that moment on.\n\nWe were invited to Tom and Chelsea's for coffee and cake after the game and accepted, Homer was polite and cordial, but a little reserved at the same time, I felt as though maybe I had pushed him away. I got up to use the little girl's room with Chelsea right behind, at the bathroom door I spun to face her.\n\n\"I can pee on my own thank you.\"\n\nShe took my hand, \"What's going on Belle? I saw him take your hand and since then nothing. What happened, did you say something?\"\n\nShe could see the sadness on my face as a tear trickled down my cheek, \"That's just it Chels, I did nothing, and now I don't know what to do.\"\n\n\"Go potty, I'll wait here.\"\n\nLeaving the bathroom Chelsea signaled for me to follow her down the hall a bit further from the men. Holding me as I sobbed into her shoulder she gently pushed us apart and lifted my quivering chin with her fingers.\n\n\"Here's what you're gonna do girl, when you sit down scoot your chair closer to his then take his hand in yours. He'll get the message, don't screw this up Belle, he really likes you.\"\n\n\"But I'm not ready for sex, we haven't even kissed.\"\n\n\"Dammit Belle why do you insist on overthinking every f-ing subject, I told you to hold his hand not suck his cock\" ... she paused then snickered ... \"although that would do the trick as well. What I'm saying is be reciprocal to his attention with like attention, he's a nice guy he isn't going to force you to make a stand. Now stop procrastinating and go do this.\"\n\nAs I sat down I scooted my chair closer and gently took his hand, if he didn't have ears I swear the smile would have gone all the way around his head. I suggested we finish our coffee and head out, Chelsea caught my eye wiggling her eyebrows up and down a few times as if to say, \"Thanks, now go home so I can get laid.\"\n\nHomer took me back to the school parking lot to get my car and say goodnight, standing under the light of the parking lot we chatted a moment about how we enjoyed each other's company. Homer stood back a foot and held out his hand which I took immediately.\n\n\"Belle, I'd like to take you to dinner, would you be available tomorrow evening?\"\n\nPanic ensued my mind, was this moving too fast, what might be expected of me if I accepted, oh my, what to do, then, in my mind Chelsea metaphorically slapped me in the head, \"Stop overthinking every f-ing thing\", as I blurted out, \"Yes, I would love to, thank you. What time and is there some sort of dress code?\"\n\n\"Will six work for you, and as far as dress, you could show up in a gunny sack and I'd like it, you make everything you wear look flattering. I'm gonna wear a pair of casual slacks and button down shirt if that helps.\"\n\nSqueezing his hand I was smiling when I softly said, \"See you at six.\"\n\nAs I turned to get in my car he wolf whistled, I was smiling as big as he was. I didn't think anyone did that anymore, but Homer did. On the drive home I couldn't get him out of my mind, my nether region was flip flopping and felt all aflutter, then I realized my panties were damp and sticky, shit, could what Chelsea told me about actually be happening to me? If it was ... I liked it and would have to be careful. I had read articles about how passion can take on a life of its own and before you know it you're naked in someone's arms, for the first time in my adult life I could say I knew what that meant even though we'd done no more than hold hands momentarily. \n\nSitting on the toilet to pee before bed my panties were stretched open just below my knees with the gusset wide open, staring at the thickness of my vaginal discharge I slowly lowered my hand toward the stickiness and put my finger into it. As I lifted my finger a string of goo followed a few inches before separating, then in another moment of shock I lifted my finger to my face and sniffed, I was aware of my vaginal odor and was never put off by it, but this, this was different. My normal odor was combined with a sweet muskiness I had never noticed before which made my senses seem to heighten, knowing how my mind reacted to the smell of arousal I had no trouble imagining what it would do to a man like Homer. \n\nNo wonder Chelsea talked so much about the little things Tom did that made her panties wet and her body ready to accept whatever he was giving, I wanted that in the worst way, at the same time the thought scared the crap out of me. What would I do if he felt my breasts, or went beyond that and kissed them, they were sensitive to my own touch, I couldn't imagine what it would do to me if he touched or kissed them ... bare. What if he put his hand in my panties and could smell my arousal, would he find it offensive or would he like it? \n\nOh shit, so many questions and I can't call Chelsea because Tom is pounding her pussy at this very moment. Oh my gosh, the way I was thinking was frightening, I never use the word pussy, and Chels had talked about me sucking his cock, this was all too much, I needed to sleep or go insane. I was going to put on fresh panties and then decided not to as I grinned a naughty girl grin, they were chilly when I slid them back in place but the heat from my vulva quickly warmed them. \n\nMy mind continued telling me to change panties but my body told me to enjoy the feel of arousal all night long. When I dropped them in the hamper before my shower the next morning I looked at them and smiled, maybe someday my panties would be mixed with Homer's sperm and my girl juices. Once again I was overthinking and ahead of myself, like I'd told Chels, we hadn't even kissed. I spent the day doing laundry and my normal Saturday house cleaning, by four it was time to start getting ready for the evening. \n\nDoing my hair and makeup in the nude I evaluated my body, my breasts were no longer what the young girls refer to as \"perky\" but never having had children they had no stretch marks and were still firm with a bit of droop due to age. My tummy was flat but not ripped, I liked the way my hips flared into what Chelsea referred to as my 'love saddle', she had a terminology for everything on a woman and most of it had to do with sex in some manner or another. My legs were shapely and firm, I smiled as I assessed and decided I wanted sex to be a part of my life, I only hoped in time that I would find a way to let Homer far enough into my world that he would make love to me. \n\nHomer was knocking on my door at 5:55 with a small bouquet of flowers in hand, I invited him in as I put the flowers in a vase, then allowed him to walk me to his late model Mustang convertible. While driving I quipped he had a pretty fancy car, his answer took care of a lot of my questions.\n\n\"It was spur of the moment purchase, I'd just gotten out and wanted to do something exciting, this made more sense than most other ideas I'd had, at least I could sell it later. I guess I should clarify that statement, it's already sold, the guy is picking it up Sunday, this will be my last and only date in the Stang before it's gone. I bought a three year old VW Passat that I'll use from her on out.\"\n\nHmmm, maybe Chelsea was right, maybe he was ready to settle on one girl and be with her forever. I needed to find a way to know for sure. The supper club wasn't crowded which made us more at ease about hogging a table after we'd finished our meal, which opened the door for me to ask some questions.\n\n\"Homer, do you mind if I ask some questions?\" He signaled to go ahead. \"How is it you're still single after all these years? Chelsea said you might have some PTSD issues because of your time in combat. Will you tell me what they are?\"\n\nHe studied my face thirty to forty five seconds before responding. \"I need to be straight up front with you, I was married once very early on, she cheated on me with my CO, a philandering arrogant bastard who targeted married women. In the end it cost him a career in the Army, they booted his ass in less than five years, but I allowed the incident to make me bitter inside, I swore off relationships from that point forward. As for PTSD, loud sudden unexpected noises like fireworks, too many people crowded together or not being able to assess an area, it was all I could do to keep my cool at the basketball game, just too many people, but I'm working on that.\"\n\nI reached across the table putting my hand on his, \"Now for me, I'm sure you're wondering why I'm single. I grew up an ugly duckling, I didn't grow into my body or beauty until I was in college, what little beauty there is. When I was asked on my first date as a senior in college I was floating on air, that was also my last date in history.\" \n\nShe continued, \"Let me elaborate a bit, when I wouldn't have sex with him he forced me to give him a blow job, I had no idea what to do so he grabbed my head and basically screwed my face, I also had no idea he was going to ejaculate into my mouth. When he did I was choking and gagging so much that semen was running out of my nose, I was sobbing when he kicked me out of the car at my dorm. A couple of girls from the dorm saw him do that and when I told them what he'd done they took me to the police station, he didn't go to jail because it was mostly a 'he said, she said' situation, but he did have to do community service. It was at that point I deemed men to be useless, and here we are, a pair of damaged beings trying to find a new normal before life completely gets away from us.\"\n\nHis eyes displayed both hurt for my sake and anger toward the guy, moving his hand on top of mine he lifted it to kiss, then said to me, \"Something like that shouldn't happen to anyone, if I had seen that I'd have put him in the ground, literally, women are meant to be cherished, not hurt.\"\n\nWith both feet now in the water I made a decision to go a bit further, \"So am I a woman you could consider worth cherishing Homer? Do I measure up to what it might take for you to trust again?\"\n\nHe stared back at me with a seriousness I'd not seen prior, \"Belle, you're everything it would take for me to trust again, I'm a proven combat vet, there are two bullet hole scars in my stomach to prove it, so damned little frightens me, but falling head over heels for you scares the living hell out of me. I want to show you how much I care but I don't want to mess things up either. Does that make sense?\"",
        "\"Perfect sense, I feel the same way. I've never felt such a strong attraction to a man as I do you, which as you say, scares the hell out of me. So, what do we do now mister combat engineer, how do we build on what we now know?\"\n\nHe laughed softly while squeezing my hand softly, \"You amaze me. What we do is build slowly, we start out by affirming we want to be with the other and then let our relationship take its course. We're grown adults, we'll know what we're willing to accept and what not, one more thing. We talk and keep nothing from the other, no matter what it is. Agreed?\"\n\nI nodded and stood signaling it was time to go, he'd long since paid the bill so we slipped out the side door making our way to the car where I stopped him before opening my door. Leaning back against the car I attempted to initiate a kiss quite clumsily, he took over and made me feel as though my lips had blended into his before we broke. I'd only been kissed a few times before so I was no expert, but boy oh boy in my mind he was one talented kisser. Wanting to reciprocate I snaked my arms around his neck and planted my mouth on his, this time doing something I'd only read about, I slowly worked my tongue onto his lips, he eagerly joined my exploration. I was forty four and had just enjoyed my first French kiss.\n\nAs we locked lips I was suddenly aware of how exposed my body was to his, my breasts were pushed tight against his sturdy chest, his hands were around my waist almost touching the top of my butt and I could feel those tingles between my legs again. These were not the tingles like I would get from my occasional masturbation in the shower, these were emanating from somewhere deep within, somewhere primal. As my panties dampened I broke our kiss almost breathless, I now understood another phrase I'd heard so often, his kisses took my breath away.\n\nGently pulling me to the side he opened my door guiding me in, not looking me over as a piece of fresh meat, he did however have a soft smile on his lips as he gazed into my eyes. I found myself thinking, \"If I knew how to screw this guy I would do it on the spot\", I had never been so aroused. The ride home was mostly small talk and singing along with some oldie or classic rock tune on the radio, at my door he scooped me into his arms and kissed me passionately. I found I liked being taken into his embrace, he didn't need to ask and somehow knew it, which made me wonder if he was like that in all areas of romance, if so, as kind and caring as he was I would have no trouble letting him take me when the time came. \n\nOver the next few weeks we grew to know one another better, maintaining a platonic appearance while at school, being a bit more passionate away from school, our make out sessions were tame compared to what one hears about in this age and time but we were happy with our progression, or at least I was. I'd let him feel my breasts through my blouse several times, on one very bold night I felt his stiff erection through his jeans and nearly fainted thinking about that baseball bat being inside me. What I didn't know at the time is he was an average six inches long with a thick girth, but it felt like a tree branch the first time I'd touched it. \n\nWe saw one another at school every day but not necessarily every day after school, there were nights he needed to work extra curricular activities and there were nights I needed to grade or get ready for the next day's classes. Weekends and Friday nights were ours though, people at school got used to seeing us together at sports events, holding hands and once in a great while a quick kiss in public. Neither of us was big on public displays of affection but in my apartment, oh boy, that was another frame of mind altogether. \n\nWith help and encouragement from Chelsea I was not only allowing Homer more access to my body but actually initiating some myself, like the night we were locking lips and swapping spit when I pushed him back and unbuttoned my blouse, I was wearing a thin lacy bra that could be seen through, my nipples were rock hard and pushing against the fabric. All I heard was a deep guttural groan as his lips gently sucked the nipples through the fabric, reaching behind I opened the bra and pushed it up out of the way, his lips instantly found my bare nipples and my panties flooded just as quickly. \n\nI couldn't believe how feeling and kissing my breasts could be so intricately woven into the nerve endings in my abdomen, it was as though a fire was beginning to build in my pussy and radiate outward, I knew we needed to stop and at the same time didn't want to. I let him get as far as cupping my pussy through my slacks that night before pushing him back and saying softly, \"No more, please, I'm not ready.\"\n\nBeing the gentleman he is he made no fuss or frowned or pouted, smiling he gently caressed my breasts and gave each nipple a little pinch as he closed my blouse, I was going to button it but he stopped me. \n\n\"Please, I know you don't want to go any further, but I love seeing your naked body, and I need one more feel before I go.\"\n\nI opened the blouse and arched my back making them stick out more than normal, he chuckled, kissed each one, softly caressed each one and then kissed my lips before standing. Holding me closer than he ever had before, I could feel his erection firmly pressed against my pussy and abdomen, in my mind I wanted that thing buried within my vagina like Chelsea described, I wanted to orgasm, to scream, to beg for more. Before that could happen I needed to get past my fears of being hurt and dejected if it didn't work out the first time I tried. It was a mental battle and nothing more, Homer had never given me a reason to think he wouldn't be pleased with me, and after all, he was experienced while I wasn't. I needed to let him take complete control in that area and trust him implicitly.\n\nChelsea and I would talk a lot on the days we had lunch together, that is if we sat at a table by ourselves. I finally confided in her that I wanted to go all the way but was afraid, when she asked what I was afraid of I didn't have an answer beyond. \n\n\"It will hurt won't it? I've read horror stories about the first time, I don't want to disappoint him, he's had sex on a regular basis in the past, I haven't.\"\n\nShe giggled which made me wonder what the hell there was to giggle about, \"Classic Belle, overthink everything. Okay, have you seen his dick?\"\n\n\"I've felt it through his pants, Chels it seems so big, I don't think it will fit inside me. It will split me in two.\"\n\nHolding my hand she was looking me dead in the eyes, \"Belle, listen to me and listen good, I'll tell you exactly what to expect. First, if he wants to go down on you before making love let him, it will help loosen you and produce a fountain of lubricating juices. Don't look at me like that, yes I mean eat your pussy. When you're ready he will penetrate you slowly, the hymen is at the entrance to your vagina and there will likely be a little pain, at your age it'll probably feel like a hard pinch. If he's at all the gentleman I think he is he'll stop before he goes any further.\"\n\nNow I was as curious as I was frightened, \"Will it go all the way in?\"\n\n\"You've got the cart before the horse again, shoosh and listen. With the head inside he'll stop until you've relaxed and tell him to proceed, after that he'll probably watch your face to judge your comfort level, if you're doing okay he'll work an inch at a time inside you until he's all the way. I have to tell you, it feels wonderful when a man bottoms out in your pussy, you know your little honey pot has taken all he has to offer.\"\n\n\"One more thing Belle, never underestimate the power the little pink slit between your legs has over a man, once he's been inside you he'll want to be there as often as he can. I'm not saying to use it as a tool to get your way, but you need to be aware he'll do anything to get you out of your panties. Use that power wisely, use it to satisfy and sometimes on little issues use it to convince him to see things your way.\"\n\nWhat she said helped, \"I want that, I really do, I want him to take me and use me as his love doll, to make love to me like they say in the romance novels, to make my body quiver with every climax, to make me his woman.\"\n\n\"Then you need to tell him that when you do finally make love, don't make him guess, don't let trial and error be what drives you, tell him what you want and a dime to donut's he'll make sure your wishes are met, with enthusiasm I might add. Men want to be pleasers in the bedroom, tell him what you want so he can please you.\"\n\nI needed to ask, \"Did you do that with Tom?\" \n\n\"The man couldn't eat pussy to save his soul when we first began, at least he was smart enough to ask what I liked, it didn't take three sessions of his face buried in my muff that he was hitting all the right spots and my body was thrashing about the bed in ecstasy. The same way with love making, he's told me what he likes and vice ver-sa, we no longer fumble and fool around, we know what the other likes and we see to it that those things happen.\"\n\nI walked away from that conversation with a mountain of meaningful information and a new determination to make love before my forty fifth birthday in three weeks which was four days after Homers fortieth, that would be my birthday present to him, the most valuable thing I owned, my virginity. The following Friday we were on the couch messing around, I had purposely put on a skirt and blouse that evening, I had decided that tonight was the night he would feel my pussy with just panties as a restriction. I knew they had to stay on, if they came off that night I wouldn't want to wait until his birthday. \n\nI had gotten comfortable enough that I was now letting him bare my upper body, I had also taken Chelsea's advice a week ago whispering I liked it when he sucked my nipples hard, drawing them deep into his mouth with his tongue teasing around my nipples. As he mauled my breasts with his mouth his hand was inching its way up my thigh, I took it in my hand and slid it under my skirt stopping at my very damp panties. He pulled back, smiled and asked if I was sure.\n\nCupping his face in my hands I kissed him and then spoke, \"I'm sure, but only on the outside tonight, and, I want to feel you as well. He stood and lowered his jeans to his knees and sat next to me on the couch playing with my pussy through my panties as we kissed, I was stroking him through his underwear, I had never done that before but somehow I knew it was what I needed to do. He was moaning into my mouth as he pushed into my hand and I was whimpering as his finger slid across the labia causing my panties to dampen all the more and slide between the lips accentuating the slit between my legs, that all powerful small bit of flesh that drove men wild. \n\nHomer pulled back and grabbed my hand, \"You need to stop Belle, otherwise I'm going to cum and I'd hate to have that happen like this.\"\n\nHis statement had peaked my interest, \"Really, that would happen?\" He nodded. \"If I take it out and keep going will it shoot semen out?\" He nodded. \"Let me get a towel to catch it, I wanna do this Homer, just tell me what to do.\"\n\nWatching his eyes roll back in his head just from my jacking him off gave me a clear impression of what it would be like when I let him stick it inside me, after all, inside me had to be so much better than two tiny hands rubbing up and down his dick. His body began to stiffen as he reached for the towel, his legs shot straight out like fence posts and he pushed his dick into my hands as stream after stream shot out the end of his cock. I was mesmerized, I'm not sure what I expected but watching that made me so wet I felt it coat the upper part of my bare thigh beneath the edge of my panties. \n\nAfter catching his breath he turned to me and said, \"My turn.\" Before I could protest he had a finger on my clit rubbing over the very thin material, I softly told him what was working for me and what wasn't, in no time my body was shaking and trembling, my hips were rocking back and forth, my abdomen continued to jab at those fingers every few seconds, it was as though I couldn't control it. \n\nMoving his finger to the leg elastic he slid it underneath and down to my labia where he coated his finger, then brought it to his lips and sucked. I damned near came again watching him suck my sticky girl cum off his finger, this had gone much further than I intended, another lesson learned that night, the power of passion is almost uncontrollable. Pulling his pants up he stood and told me he should go. I wanted him to stay and jumped to my feet holding on to his neck.\n\n\"Please don't go, stay, I want you here with me.\"\n\n\"Belle, if I stay I'm gonna nail your pretty ass to the mattress and screw you like there's no tomorrow.\"\n\nI think my answer shocked him, \"That will be next Friday. I want you to have my virginity as a birthday gift from me.\"\n\n\"Belle, honey, have you thought this through entirely? I want you to make sure it's not just Chelsea telling you it's time. I want you to be sure.\"\n\n\"I'm one hundred percent sure. I want you to make a complete woman of me, I want you to take me, to do with me as you want, Chelsea says you'll be gentle and slow with me and I believe her. I once read in a novel where the woman told the man she wanted him to own her, I want you to own me Harry, every part of me. She told me there's no greater feeling for her than when Tom is as she called it, 'buried inside her to the hilt', I want that Harry, I want you buried to the hilt in me.\" \n\nThe next few nights were somewhat subdued compared to that makeout session, we kept our clothes on and didn't let it get to the point where one was wanking the other, mind you there was lots of touching and kissing and sucking of my breasts, but nothing beyond that. Monday at lunch I told Chelsea what had taken place, everything that had taken place. Her face was crimson red as she listened to the details, finally smiling and telling me how proud of me she was. \n\n\"Chelsea, what should I expect? I know you gave me the highlights last time, but what do I need to know so I'm not afraid?\"\n\n\"Well girl you've seen his dick so that's no surprise and he's felt your pussy. Are you bare down there, do you shave? Nope, okay did he seem grossed out by the hair? No? Great, then he likes it. Let's skip all the rudimentary stuff and get to what you want to know, this may be lengthy so bear with me. Once the head is inside and you've relaxed he will push into you, the vagina is like elastic, it stretches and contracts when no longer stretched, since yours has never been stretched you're gonna feel like he's splitting you in two, that's normal.\" \n\n\"As the head moves forward it opens the walls of the vagina to accommodate the shaft behind it, that's usually where the most stimulation is as well, for both parties. There will be some discomfort for the simple reason nothing that big has ever been inside you before, as much as you can, relax and let it take place. As your body relaxes and adjusts it will begin to feel good, if you feel the urge to lift your hips into his downstroke do that, it goes a smidge deeper that way, and honey, deeper is better.\" \n\nThough I was laughing at her comment inside I knew it was true, I wanted Homer as deep inside me as possible. Walking to my classroom I bumped into Homer, we exchanged pleasantries and as I was going to turn he took my elbow. \n\n\"The other night you called me by my given name instead of Homer. Is that what you want to call me from here on?\"\n\nI leaned close enough that only he could hear, \"I want to call you Harry in the bedroom, is that alright?\"\n\nHe smiled and winked, \"If you don't have papers to grade tonight I'm off at five, come by the house, I'm cooking. Let's do six o'clock. Hey, I know this isn't the right place for a first time, but, I love you.\"\n\nMy heart swooned as I leaned in and gave him a big kiss, kids were hootin and hollerin but I didn't care, I knew in my heart he was going to be my husband. He'd been slow cooking ribs the entire day while at work, when he dished them the meat literally fell of the bones. While sitting on the loveseat after cleaning the kitchen I sat sideways looking at him.\n\n\"Harry you're going to make love to me Friday night, Chelsea and I have talked about it a lot, I'm past my superficial fears and I'm as ready as I'll ever be. She told me what to expect when you enter me and that I should tell you what I do and don't like, she told me what to expect as far as the pain of having my hymen broken but that doesn't sound too bad.\"\n\nHe looked at me with a half smile, \"Boy, you've really thought this through, I don't mind you telling me what you like as long as I can do the same. You said something about me owning you, once we're making love we belong to each other Belle, as long as you're alive there won't be another woman for me. You said to take control, once we've determined what we do and don't care for you can rest assured I will take you each and every chance I can, within reason of course. We don't need to get evicted from the grocery store because we're screwing in the paper products aisle, or any other aisle for that matter. I'm madly in love with you Belle, I'll do everything within my power to make you happy and satisfied.\"\n\n\"I know you will Harry, now suck my nipples and make my panties wet, I want to feel those tingles between my legs only you can produce. Oh, Harry, I love you too.\" \n\nThe rest of the week seemed a blur to both of us as we concentrated entirely on Friday night. Following him grilling pork chops and corn we made our way to my bedroom, I had always heard a woman wants her first time to be in her own bed and I was of the same opinion. I'd worn the sexiest panties I owned and no bra, when he was naked and had me down to my panties he pushed me backward onto the bed, patting my thigh I lifted so he could remove my panties. \n\nRemembering Chelsea's words, I only looked on as he lowered his face to my hairy pussy, breathing deeply, smelling me, kissing the labia while his hot breath teased at my folds, then it happened. I was looking down when his tongue parted my labia just above the entrance to my vagina, I jerked, he held onto my hips from below and didn't let go as my hips began to undulate. I knew of cunnilingus but had never experienced it, until now. Working his way upward through the inner lips I jumped when the tip of his tongue touched my clit, it was way better than my fingers or the pulse feature on the shower head. \n\nThis was the real thing, my man's tongue lapping up the juices emanating from my love hole, my fuck hole, my hungry never been used vagina in need of being filled with his seed. The climax came in what felt like never ending waves until I pushed him away. Taking hold of his ears and pulling upward he moved to lay with me, I licked his chin which was full of my cum, it tasted yummy to me as I kissed him with my tongue deep within his mouth. \n\n\"Harry, would you like me to suck you? I don't know what to do but you can tell me.\"\n\n\"Not tonight love, another time, tonight is about taking care of your needs, not mine. To be honest I need to be inside you Belle, I've waited so long. I'll only last about fifteen to twenty minutes this first time but that'll be okay for you, you'll be sore and will need some time to rest, we can go longer another time, like tomorrow morning.\"\n\nWe laughed, I didn't know what he did, that once I'd had an orgasm or two vaginally I would want more no matter whether I was sore or not. Having just licked me to an orgasm I was more relaxed than I would have been without it, with the thick bulbous head of his cock at the entrance I took a deep breath and nodded. I felt a sharp pain as he entered and stopped, it didn't last long and I didn't cry, with the initial pain over I nodded again.",
        "Slowly he worked in and out of me, going a little deeper every three or four strokes, I was beginning to relax when he pulled all the way back to the head and slowly pushed until I could feel his pelvis touch mine. He was in, buried to the hilt, Chelsea would be so proud of me. When our bodies met he grunted and I let go a soft squeal followed by a deep breath. Looking up into those pools of greyish blue I whispered. \n\n\"Make love to me Harry, make me yours, own me, put your seed deep inside my pussy.\"\n\nI looked at the clock as he began rocking in and out of me, for the next twelve minutes he took my body to places I'd never imagined, reaching two climaxes before I felt him begin to twitch and swell inside me. Instinctively I knew he was ready to cum and wrapped my legs around his ass pulling him tight to me as he exploded within, that in turn took me over the moon one last time. I had watched his face as he came, the look was one of intensity, I couldn't tell if he was in pain or nirvana as he seethed and hissed through his teeth, with one last push into me he yelled \"Belle.\"\n\nLying on top of me he lifted so his weight was on his elbows, our breathing was staggered and shallow, I pushed on him gently, he rolled off, as he did his softened dick plopped out dragging a flow of our mixed orgasms with it. My thighs were warm and sticky, my bush was matted and I could feel the spunk running out of me trickling down to my ass. I was sore and swollen, but not so much that I didn't want it again three hours later, this time he broke me into the joys of doggy, man I loved that position. \n\nSaturday afternoon we christened my kitchen table with me bent over begging him to pound my pussy. I wasn't sure who this new woman was, but given the circumstances I liked her smutty behavior, so did Homer. I gingerly walked into the Cheddars where we were to meet Tom and Chelsea to celebrate Harry's birthday. She took one look at me and smiled as she leaned into my ear. \n\n\"You look thoroughly fucked girl. Was it as good as you hoped?\"\n\nI winked and mouthed \"better\". \n\nSince I was at Homers or he was at mine every night we decided to share one rent instead of two with him moving into my flat six weeks after consummating our relationship. Six months later we married and bought a house, menopause had taken me past the child bearing stage but neither of us fussed about it, we were enjoying life to the fullest. \n\nWhen I retired at 60 Harry did as well, with my pension and his military retirement we have all we need and then some. He says when our respective SS starts it'll be like a bonus check every month, there are places in the world we want to see together, we'll leave those deposits in the bank for our travel plans. \n\nI often think of my Aunt Letha when Harry and I are enjoying each other's body, I feel sad she never got to know such love, then again I would probably have never known either had it not been for her pep talk so many decades ago. I had been a virgin at 44, at 45 I was a lover and confidant with the one God had reserved for me all along."
    ],
    "authorname": "R410a",
    "tags": [
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/belle-2"
}