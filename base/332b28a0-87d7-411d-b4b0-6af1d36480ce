{
    "title": "Where's Buster - Redux",
    "pages": [
        "This all started when my buddy  kidnapped my dog and put him in a story. It was the usual RG masterpiece. But the ending was somewhat provocative (meaning a classic RG tale). Folks know I'm a friend of his and so they asked me to talk to him about a sequel. We discussed it, and RG rightly felt that the story ended exactly where it should. He's the author, he ought to know. \n\nInstead, he suggested that I write a companion piece, like we did with \"The Empire Builder.\" Now, I respect RG's artistic integrity and his awesome ability to rile-up you folks. But that put me in a bind since, with the exception of my weird fascination with Hemingway, I don't recycle other people's work - particularly something from a guy as talented as RG. So let me make it clear here, this is neither a \"reinterpretation\" of RG's original piece, nor is it an attempt to leverage the killer angst that he generates. This is just a continuation of David and Buster's tale in my style.\n\nFor those of you who expressed concern about Buster, he appreciates your messages. He'd be here to thank you personally. But he's outside right now rolling in something disgusting. Still, he hopes you enjoy his story - DT. \n\nWHERE'S BUSTER - REDUX\n\nThe sun comes up like thunder in the Tropics. The big red disk cracked over the horizon and painted the ocean clouds in purples and golds. David Taylor was just making the turn off Greene onto Front and he paused to gaze at the glorious sight. \n\nDavid's home was his Catalina-38, which he'd sailed down the Intercoastal from New York. It was moored at the Key West Bight Marina, which gave him easy access to the delights of old town. The Cat was an ideal bachelor pad -- spacious, wood trimmed interior, real leather couches, a cozy galley and eating area and clever centerline bunks fore and aft. \n\nEvery morning David would fix an egg sandwich for himself and pour a big bowl of food for his pal Buster. Buster was the only relic of David's former life. He was a browndog. Browndogs aren't an AKC breed. But for every pampered pug or poodle in the house, there are two or three browndogs out in the street tipping over garbage cans. \n\nBuster's mom must have had one hell of a night: St, Bernards, wolfhounds, pit bulls all lining up for a shot. Maybe there was even an ambitious Chihuahua - they're really macho, you know. The product of that mixing was the classic nondescript brown coat, with a huge head, a muscular body and the sweetest, gentlest, and most faithful heart ever bestowed on man's best friend. \n\nThe Key West Marina's a small town and Buster was its mayor. He was so good natured that the boat people all knew and loved him. Residents saw him everywhere, panhandling his way up and down the docks, tongue hanging out, panting from the heat. \n\nBuster was David's guardian. Most days you would find him sprawled lazily in the shade of the cockpit, drool oozing from his dewlaps. But any hapless intruder would see a much more unpleasant side of the protective breeds if Buster ever needed to flash the badge.\n\nBuster was an ex-pound dog. He'd been inside. He'd seen things. He'd landed in the joint when his prior owner took him on the ride from which no browndog ever returns. And he was so ugly that the screws promptly stuck him on the Green Mile. The warden just assumed no one would adopt him. It was David who saved him from the Chair. \n\nBeing inside had taught Buster a lot about life and loyalty. He and David would sit in the cockpit on a humid Key West evening and philosophize. David would pour out his heart, while Buster would somberly watch him, love, and sympathy in his big liquid eyes. It was like he was saying, \"That's true boss. Life's tough. But I've always got your back.\" \n\nAnybody who owns a dog knows that they communicate. Buster didn't say much, but he was a great listener. So, he would lay his huge head on his paws and watch while David exorcised his personal demons, most of which were put there by his wife's infidelity. \n\nKipling said it best, \"If you can watch the things you gave your life to broken, and stoop and build 'em up with worn out tools -- then you are a man my son.\" David lived by that axiom and he had indeed become much more of a man. \n\nIt takes courage and personal integrity to move past a failed marriage. In that respect then, David had made the sensible decision to stop obsessing about something that was irretrievably lost and instead dedicate himself to living a new and better life. He felt regret at the loss. But he had the strength to only look ahead now and he was uplifted by what he saw going forward. \n\nDavid worked for the National Oceanic and Atmospheric Administration. He was an education specialist there. NOAA oversees the Florida Keys National Marine Sanctuary and his classroom experience made him the perfect person to supervise teaching about reef conservation at the Eco-Discovery Center. \n\nDavid's job at the Discovery Center was to take what the researchers had learned and translate it into easily understandable material for public consumption, both at the Sanctuary on Key West and also at the Aquarius Support Base on Islamorada. That required him to master the principles of marine biology. So, David read voraciously, and he was a frequent participant on the dive teams that gathered data in the conservancy area. \n\nBetter yet, the teaching involved children who'd arrive at the Center wide eyed and eager. That was the polar opposite of David's old job. He used to teach ninth grade, which is the age where bubbling hormones make kids wilder than hoot owls. So every day in David's old classroom was like the worst kind of trench warfare. \n\nNow, David's life was as close to ideal as he could have ever imagined, and his sense of happiness and fulfillment was a daily reminder that he'd made the right choice. It was one of life's paradoxes. He had the job of his dreams because he'd jettisoned the love of his life. \n\nDavid hadn't seen or heard from his wife since that fateful Friday. He imagined she was doing okay. He'd left a polite note. It conveyed nothing of the hurt he'd felt. Then he'd loaded Buster aboard his new sailboat and motored out into the Hudson. Oliva was a lawyer. She could draw up the divorce papers. \n\nAva Martinez was the primary reason why David had his new outlook. She was his best friend and companion. Ava was a rarity in Key West, a native. She had been raised on Sunset Key in one of its multimillion-dollar mansions. Hence a career at the National Sanctuary was practically a given once Ava had gotten her doctorate in marine biology. \n\nAva was a classic Latin beauty with the oval face, long, thick silky black hair, huge dark eyes, and sensual mouth of a Spanish Bailaora. She was tall and lithe, with big round tits and hard muscle packed on her supple female frame. Her legs were her most unique feature. Her sleek thighs were longer than average. So, with her dive fins on, she looked like a mermaid in the water. \n\nAva was David's liaison with the underwater team. She was a full-fledged scientist-aquanaut with multiple missions living and working sixty-two feet underwater at the Aquarius Habitat. In that respect, she traveled back and forth between the Center, the Aquarius Support Base, and the Habitat itself, which lies next to Conch Reef five miles offshore from Islamorada.\n\nAva was very knowledgeable in every aspect of marine science. David envied her jaunty self-confidence as she put on her gear to fin down to the Habitat. David had gotten his C-card. But he was still working on the ANSI/ACDE certification that would let him follow her below thirty feet. \n\nCuba is by far the closest place to where David was standing. So, Key West is more Havana, than Miami. The Marine Sanctuary building was gleaming white, and the tropical heat was already starting to build as David arrived at work. \n\nDavid had evolved from the sad man who had boarded his new boat and voyaged out into the southbound current of the Hudson. Until that tragic January day, he had led a sedentary life in a part of the U.S. where the appearance of the sun is worshipped like a celestial miracle. David's slightly pudgy body and his pasty complexion reflected that. \n\nNow, after months of rigorous outdoor work in the blazing tropical sun David had bronzed into ripped perfection and his shock of dirty blond hair was bleached almost white. He was still only thirty-three and a bit of a hunk now. Nevertheless, he had no interest in coupling up. \n\nHe DID enjoy the evenings that he spent with Ava at Captain Tony's. Ava had tuned him on to the fact that that nondescript shack, which is down the street from the tourist trap at the corner of Greene and Duval, was the real Sloppy Joe's of Hemingway fame. \n\nCaptain Tony's building had a history. In 1898, it was the telegraph office from which the news of the sinking of the battleship Maine was telegraphed to the nation. After that it was a whorehouse and a speakeasy among other things. Then in 1937, the landlord raised the rent. So, the guy who owned the original bar moved it a half block down Greene to the place that is now called Sloppy Joe's. \n\nHemingway and the regulars stayed with the original building. Hemingway was an old-fashioned newspaper man. Every night he would walk seven blocks down Whitehead street to the same old spot and drink cheap scotch, not sip daiquiris like he's portrayed. \n\nThe bras hanging from the rafters are perhaps the most prominent d\u00e9cor feature of Captain Tony's. Those have been donated over time by female visitors. Most of them arrive discretely in paper bags. But the true test comes when the woman whips off her shirt and contributes her bra right there on the spot. \n\nAva had not one, but two of her bras hanging in the hall of fame. David had to admit that she had beautiful tits. Of course, Ava was a free spirit. It was an aspect that David liked the most about her. Yet, even with all of her fantastic sex appeal, she was a close drinking buddy, not an object of lust. \n\nAva was five years younger than David, more of a Gen-Z than a Millennial. And like a lot of very attractive women, she had an active sex life. Still, she preferred to hang out with David when she wasn't actually on a date. She said she could only relax around him. \n\nDavid for his part had no problem being best pals and father confessor for a woman who treated men like they were put on earth strictly for her personal pleasure. He didn't miss the irony that he had left a wife who'd indulged in a weekend of carefully planned sex with one man, while he was best friends with an equally beautiful woman who had casual sex with various men. \n\nYet, although David and Ava were different on the outside, their attitude about life was exactly the same. Both were smart, intellectually curious and driven by the belief that there was a lot to learn and achieve before they shuffled off this mortal coil. Hence, they could usually be found engrossed in conversation about benthic ecology in the middle of the chaos of a rowdy night at Captain Tony's. \n\nThe conclusion of most of those evenings was on David's nearby boat. That would normally presage sex. But in David and Ava's case, all those late-night sessions ever involved was comfortable talk in a gentle Key West evening. \n\nAva was aware that David had a history. She was wary of asking him about it because she was certain that she wouldn't like the answer. The last thing she wanted to do was to say something that would upset the balance of their relationship. But Ava knew she would eventually have to pose the question.\n\nSo, one spectacularly hot and humid night, they were talking about the next day's schedule of reef ecology classes -- while sitting on the upholstered couches in the cockpit well. It was normal for them to sit close to each other in a friendly fashion. Buster was snoring at their feet. \n\nAva said in a joshing manner, \"Why haven't you tried to make a pass at me? Most men would have busted a move a long time ago. Are you gay?\" David looked shocked. So, she added lightly flirting, \"It hurts a girl's feelings you know.\"\n\nDavid laughed and said, \"Ava, you are the most wonderfully charming and beautiful woman I have ever had the privilege of knowing. It's just that I think I'm still married.\"\n\nThat statement knocked Ava back several steps. She turned abruptly and said aghast, \"Wwhhhatt??!! You don't know whether you're married??!!\"\n\nDavid added casually, \"Well, I was when I came down here. But I haven't talked to her in seven months and that might have changed.\"\n\nAva made a wide-eyed, jaw dropping face at him and said, \"You have a wife who you haven't spoken to in seven months??!! Are you, in witness protection?!!\" \n\nThat set off gales of laughter from David. He said, drying his tears, \"My wife and I had an irreconcilable difference. We married young and she had never had sex with anybody but me. So, one day she announced that she wanted to get that regret out of her system.\"\n\nAva continued to look dumbfounded. David added, \"That didn't set well with me since I believe that a vow is a vow. So, Buster and I resolved the dispute by moving down here.\"\n\nAva said, \"What did your wife have to say about THAT?!\" \n\nDavid shrugged and added with his first sign of bitterness, \"Buster and I left while she was still getting her curiosity satisfied. I tossed my phone in the Hudson when I shoved off. So, I have no idea how she reacted. But I DID leave a nice note.\"\n\nHe added sourly, \"I imagine she's had the papers filled out and is just trying to figure out where to send them.\"\n\nAva rose and moved to the bench opposite. She was a smart woman and she realized this was a serious situation. She needed to look David in the eye as she said, \"That isn't normal my dear friend. People don't just disappear. What did your wife expect when she returned from her little weekend orgy?\"\n\nDavid said, \"I don't know what she expected. She said that she would be back on Sunday and we would just pick up like nothing had happened. Apparently, the other guy was being permanently transferred out of the area and that's why she felt like she needed to act.\"\n\nAva said incredulously, \"Seriously!!?? Really??!! She actually said that!!???\"\n\nDavid laughed at her astonishment and said, \"It's what she said and I'm pretty sure she believed it.\"\n\nAva said with feeling, \"What an idiot!!\" Then she added as an afterthought, \"Was your wife brought up in money - kinda spoiled by her folks?\" David nodded affirmatively.\n\nShe continued with, \"You know how wealthy my parents are?\" Ava's great-grandparents had seen the writing on the wall and gotten out of Cuba before Batista fell, taking all of their millions with them. \n\nDavid said noncommittally, \"I've seen your family compound from the water.\"\n\nAva said, \"I'm the only girl of three kids in a rich Cuban family. My parents treat me like a princess. That can convince any woman that she's special. I was like that until Raoul changed things.\"\n\nDavid looked intrigued. He said, \"Raoul?\"\n\nAva said in a faraway voice, \"It was my second year at FIU. I was in love with Antonio. We were both from good Cuban families and we were going to get married. Then I ran into Raoul. He was twenty-six, and a Cubano baller from South Beach. I was nineteen and his money and lifestyle swept me off my feet. \n\nSo, I told Antonio that I thought we were too young to get serious. It never crossed my mind that he wouldn't wait for me. Then, I disappeared into the Miami scene with Raoul. That lasted a few months until the chaos of club life got to be too much. I just woke up one morning and said to myself 'no mas,' It was like awakening from a bad dream.\"\n\nAva added ruefully, \"I thought I'd give Antonio a treat when I came back. So, I put on a trench coat with nothing under it except a pair of high heels and pounded on his condo door at 8 AM. It took him a long time to open it. When he did, I breezed right past him and into the bedroom shucking the coat as I went. It was a little embarrassing to find Amanda Fox sitting there in the same state.\" \n\nDavid laughed out loud again. Ava said, \"Yeah -- pretty comical. But it hurt a lot at the time. I yelled at Antonio, 'HOW COULD YOU!!' Like he was cheating on me\" \n\nAntonio just shared a knowing look with the bitch and said, \"Amanda and I are engaged. Did you seriously think I would wait for you?\"\n\nAva gave David a sardonic grin and said, \"I ran out of the place in tears. That is, after I'd retrieved my coat.\"\n\nDavid said genuinely interested, \"What happened after that?\"\n\nAva said embarrassed, \"I wasted a lot of time blaming Antonio, which was silly. I knew exactly whose fault it was. Once I'd gotten over feeling sorry for myself, I vowed to treat people with respect and never take ANYTHING for granted again.\"\n\nAva paused there and said sincerely, \"My life has been a whole lot better since I had the spoiled brat beaten out of me.\"\n\nDavid said sadly, \"At least you and Antonio weren't married. I wish my wife had learned that lesson - before she made her fatal decision.\"\n\nAva gave David one of her glowing smiles and said, \"I'll bet she's learned it now. What are you going to do when you eventually talk to her?\" \n\nDavid said, \"I guess I'll jump off that bridge when I come to it.\" They both laughed.\n\n*****\n\nThe aforementioned bridge arrived at slip F-18 the following week. David was at work. So, Buster was the only creature on board. \n\nBuster had just finished his second mid-morning nap and was thinking about a panhandling expedition when he heard a familiar voice say delighted, \"Buster!! How have you been?\" This was someone he knew. It was the boss's mate!! He hadn't seen her in dog ages!! He began to frantically wag his stump of a tail. Maybe she'd feed him like she used to? \n\nOlivia stepped aboard. She looked around with wonder as she ruffled Buster's battle-scarred ears. David's new nautical home was completely alien to Olivia's concept of him. \n\nShe walked down the companionway stairs and into the living quarters marveling at the neat and tidy interior. There was real luxury in a twenty-four-by-ten-foot space. The bed in the bow was meticulously made and everything had been painstakingly stowed except a frying pan that was soaking in the little sink. David must have made breakfast. Olivia didn't even know he could cook. \n\nOlivia looked at the clothing in the two bulkhead storage closets. Nothing was familiar. There were cheap aloha shirts and nautical gear. David never wore shirts like that. There was also a light jacket with a NOAA insignia and a blue and gold Florida International University hoody. \n\nThe hoody was way too small for David. Olivia sniffed it. It smelled of expensive women's perfume. That made Olivia angry. It had taken the investigators months to find her husband and in that time another woman had horned-in on her man. \n\nOlivia could tell from David's note that her husband viewed her actions as a betrayal. She just couldn't understand why. She had seen no harm in telling him that she would be going away for just one weekend. David knew why she was doing it and where she was going. So, it wasn't like she was cheating on him. She just needed to get Doug out of her system. It was like getting a flu shot. \n\nShe'd expected David to be hurt. But she knew he'd accept it because he loved her. He also knew that she'd make it up to him. Now she realized that she may have made a serious tactical error. She took her Kindle out of her purse and sat down on one of the couches to kill a little time. \n\nBuster lay down at her feet and began to groom his unmentionables, patiently waiting for Olivia to feed him. After all, that WAS a human's role. Olivia's only thought was, \"This dog needs a bath.\"",
        "*****\n\nFor his part, David was having a rather good day. In seven months he had made himself an expert in captaining the thirty-eight-foot Sea Ray that NOAA used to shuttle divers the five miles out to the Habitat on Conch Reef. The Sea Ray had two 306-hp 6LP-STP Yanmar diesel V-drive inboards that could whisk David, a teacher and eight students out to the reef in less than twenty minutes. \n\nDavid had met the class and their instructor at 10:00 that morning. The kids were from a high school ecology club. They had come all the way down from Ransome Everglades School in Miami. NOAA is federally funded. So, it understands the PR value of those kind of expeditions, especially for students at elite private schools. \n\nThe teacher was an attractive forty-something who filled out her wetsuit in voluptuous ways. David loaded the dive gear into the lockers of the boat. Then he ran through a little orientation about the reef. The instruction was conducted down below in the luxurious cabin, which was set up as a classroom. \n\nOnce David had gone over the rules of the road and his learning objectives, he fired up the diesels and burbled his way slowly east under the Snake Creek drawbridge and out onto the open ocean headed northeast. \n\nWhen he was clear of the shore, David firewalled the throttle. The deep V hull cut through the waves with a loud smacking sound. Spray flew as David pushed the engines up to 3000 RPM. He thought to himself, \"I've come a long way in a short time.\" Meanwhile the teacher, who was lounging in the stern-well, was thinking, \"What a fine-looking hunk of man. I wonder if he's married?\" \n\nOnce they'd reached the Habitat, David idled up to its Life Support Buoy, which everybody at NOAA calls the LSB. The LSB isn't a mere channel maker with a seagull sitting on it. It's an integral part of the whole Aquarius system. \n\nThe LSB serves the same purpose as an old-fashioned diving support vessel. However it's permanently anchored on station above the Habitat, rather than deployed from shore for a mission. As a result, Aquarius missions are much easier to stage and maintain.\n\nThe LSB is a thirty-foot floating steel platform with fully automated underwater functionality. It has all the vital generators, compressors, and communication equipment needed to support life underwater. These systems are all linked to the Habitat below by an umbilical that conveys power, oxygen, and compressed air to the aquanauts. Needless to say, it would be impossible to live at that depth without the LSB's services. \n\nDavid moored the Sea Ray to the LSB's fore and aft davits and led the dive down to the Habitat. The Habitat itself, is a school bus sized capsule sitting on a hundred-and-sixteen-ton baseplate anchored to the ocean floor. \n\nDavid had arranged for Ava to conduct the actual tour since she was the scientist. Her arrival was all part of the show. Consequently, she made a dramatic appearance, in a spectacular cloud of bubbles -- out of the Habitat's wet-porch. Ava wasn't wearing a wetsuit, just a mask, weights, and fins and a single tank. With her long waist, lithe body, flowing hair, and modest bikini she looked like a sea goddess. \n\nThe group finned off through a panoply of brightly colored fish. David escorted the teacher while Ava showed the kids the reef. Ava used a whiteboard to write comments and a halogen light to point out details. David marveled at how capable his friend was. She stayed with the class to answer questions when the dive was over. \n\nThey all surfaced and tossed their gear onto the Sea Ray's overhanging swim porch. After they'd pulled themselves up the ladder and onto the boat, the teacher looked at David and Ava working closely together and thought, \"That one's taken for sure.\"\n\n*****\n\nBy midafternoon, Olivia had given up waiting and walked back to her room at the Hyatt. Buster stayed with the boat. He was David's dog and dogs are loyal. Olivia had spent seven lonely months wondering what had happened to her husband. She had always been the only woman in his life -- in truth, his only friend. He had told her that over-and-over. So, what had changed? \n\nOlivia admitted that she might have been a little bit selfish by insisting on her weekend out of time. But David had always given her what she wanted. Furthermore, David had been selfish too. He'd spent their baby fund on a boat. Even worse, he had left her by herself without any idea where he'd gone. \n\nOlivia had missed David. But she was a beautiful woman. She knew she would find him and was confident that she could win him back. Luckily, GE legal had its own investigative resources and to his credit, David hadn't even tried to hide. But it had still taken a half-year to track him down in Key West. \n\nDoug'd learned through the GE grapevine that Olivia was on her own. That was terrific news for him. Olivia had gotten to Doug in a way that none of his earlier conquests had. Most women enjoyed sex. But Olivia was consumed by it. He would constantly replay the moans, cries, and the sweaty feel of her writhing body as she came over-and-over underneath him. \n\nDoug had recovered from his beating. So, he invited Olivia to the City for a repeat of their weekend together. Olivia had been tempted, and her resolve started to melt as the months wore on. But she knew that it would be a long and slippery slope if she succumbed to Doug's cajolery again. \n\nOlivia took a little nap and then walked back to the Marina. Buster was still the boat's only occupant. It was well past dinner time. So, she decided to eat. As Olivia strolled back toward the center of old town, she noted that Sloppy Joe's was rocking. The doors were back, and the interior was open to the street. There was a guy with a guitar singing Jimmy Buffet songs, and everybody was having a good old time. \n\nOlivia didn't want to be surrounded by happy people and she was nervous about her upcoming confrontation with David. There was another bar further down, past the intersection of Greene and Duval. It had a sign with a big fish on top that said, \"Captain Tony's.\" Olivia was sure that little place would be quieter. So, she walked the half block down to it. \n\nThe doors were open there too, making the sidewalk part of the room. There were people inside enjoying the early evening. It resembled the after-work crowd from back home. The rafters were festooned with dollar bills, postcards and even odder, bras!! But that wasn't the thing that caught Olivia's eye. It was the sight of her husband sitting at the bar in cheerful conversation with a stunning woman!!\n\nOlivia had to take a second to process what she saw. It was astonishing, really. She knew it was David. But he was so different. Her boring old husband looked like a beach boy now, or maybe a pirate, tall, tan, and vigorous.\n\nDavid was much leaner than Olivia remembered, bronzed from the sun and his hair had bleached to almost white. The woman with him was maybe five-seven, lithe and athletic, with a gorgeous oval face and a waterfall of long smooth dark hair. She had the same deep-water tan that David had. \n\nThey were engrossed in conversation, clearly into each other. That sight buried Olivia under an avalanche of anguish. She just stood there with her mouth hanging open staring at them. How could things have changed so much in a mere seven months? \n\nThe woman glanced in Olivia's direction and noticed the expression on her face. She said something to David, and he turned to look at her. Olivia's flight-or-fight reflex kicked in. But David had already jumped off the stool and was running toward her. \n\nHe grinned and said seemingly delighted, \"Olivia, I'm so glad to see you!\" That was promising. Except he added, \"I assume that you're here to settle the divorce.\" Her heart sank. \n\nDavid didn't notice Olivia's reaction. Instead he said, \"Come here, there's somebody I want you to meet.\" Olivia's heart sank even farther. Her naive husband might have missed it. But that new woman had staked him out and she was not happy to see a rival appear.\n\nMen just don't understand how women are cats. Their confrontations might be slyer and more complex. But females offset whatever they lack in brute strength, with sheer ferocity. And the new woman was flexing her claws in preparation for making the fur fly. \n\nShe gave Olivia a speculative glance as David said happily, \"Ava, this is Olivia, my wife.\" \n\nAva smiled murder at Olivia and said, \"It's a pleasure to meet you. I've heard a lot about you from David.\" Ava's tone told Olivia that she was giving her about ten seconds to vacate the premises.\n\nOlivia returned a cordial smile that said, \"RIGHT BACK AT YOU SWEETHEART!\" \n\nDavid was babbling, \"How have you been Olivia? How'd you find me?\" \n\nBoth women looked at David like they wished that he would just shut-the-fuck-up so they could get down to the hair pulling and rolling around on the floor part. \n\nCluelessly, Dave continued with, \"We need to catch up!! Why don't we take this back to the boat? We have a lot to talk about.\" \n\nOlivia was still getting over the fact that her hopes and dreams had vanished in a few fateful seconds. She was honest enough to think, \"I wonder if that was how David felt when I told him about Doug?\" \n\nBut Olivia was a lawyer, used to keeping her cool in court. So, she had sufficient canniness to smile brilliantly and say, \"That sounds like a great idea. Where's your boat.\" Olivia didn't think that Buster would rat her out because she wasn't aware that Buster could do that, which goes to show you what Olivia knew about dogs. \n\nAva said with venom dripping off her fangs, \"I think I'll take a pass.\" Then she added with pointed emphasis, \"You two probably have a lot to work out regarding your divorce.\"\n\nDavid said happily, \"No worries.\" \n\nNow BOTH women wanted to kill him; Olivia for just assuming that their divorce was a faite-accompli and Ava for him being so blithely clueless. \n\nStill, it was hard to blame David. He'd loved Olivia for most of his adult life. The fact that he was happy to see her didn't imply anything other than the fact that he was a nice guy. It didn't mean that he expected them to get back together. In his mind, that ship had sailed the minute he and Buster had cast off from the Albany Marina dock. He just didn't see why he should act like an asshole about it. \n\nDavid and Olivia had led a happy and fulfilling life prior to their separation, and they'd shared a lot of good times. That is, before she went off the rails. The pain of Olivia's betrayal had been tempered by the months that they'd been apart. So why not be cordial?\n\nAva was disgusted with David's ingenuousness. She turned and stalked toward the Custom House dock, where she berthed the Zodiac RIB that she used to commute to Sunset Key. As she walked, she called back angrily, \"We've got an event tomorrow. Be there early so we can prepare.\" \n\nDavid thought, \"What's wrong with her?!!\" Olivia already knew.\n\nBuster had his face buried in his food bowl when David and Olivia arrived at the boat. So, he didn't give up Olivia's secret. David proudly showed her around. He said, \"Can I get you a glass of Merlot? We can sit and talk here in the cabin.\"\n\nOlivia sat. The Marina was brightly lit. There was cheerful Latin music emanating from a few of the other boats and she could hear the excited sounds of the tourists wandering old town in the balmy tropical evening. \n\nShe contrasted the idyllic setting with their cold home in upstate New York, and it depressed her. David would never want to leave this place. But she had to try. Her opening gambit was, \"I see you have a new job. What do you do down here?\"\n\nDavid said with pride, \"I'm an Education Specialist with the National Oceanic and Atmospheric Administration, at the Florida Keys National Marine Sanctuary. I work in reef ecology with Ava Martinez. She's the actual marine biologist.\"\n\nHe added enthusiastically, \"I'm at the Sanctuary Building over on the west side of the island. Ava works out of Aquarius Support Base on Islamorada. She's a full-fledged aquanaut, you know. She's done whole weeklong research missions isolated in the Aquarius Habitat, which is sixty-two feet underwater.\" \n\nOlivia thought, \"Okay, so the bitch is Wonder Woman!!\" Her husband's fulsome praise was picking at her last nerve.\n\nThe two of them were sitting on opposite sides of the banquette, facing each other at the galley table. Olivia forced herself to be calm as she said, \"I came to talk about us getting back together. We had a wonderful marriage, and we can still have that. I know that what I did was hurtful and I'm sorry. It's just that I never anticipated that my actions would cause this.\"\n\nDavid's expression darkened. This wasn't what he'd expected from her. He said, \"You were the only person I'd ever even been close to -- my only friend. I didn't regret that my world was limited to you. Since you were all I ever wanted. I just can't understand why you needed to expand yours.\"\n\nOlivia said guardedly, \"It was simple curiosity. I wanted to find out what another man was like. I knew that I was only giving him my body, not my heart. You had nothing to fear in terms of my love. I just assumed that I would return on Sunday and we'd pick up right where we left off.\" \n\nFor the first time David seemed upset. He said, \"That's nonsense Olivia, sex is one thing; marital fidelity is something else entirely. Everybody likes sex. That's the reason why it's so easy to justify. But when you clicked on, \"I accept,\" at the bottom of our lifetime EULA you pledged absolute loyalty.\n\nHe added, \"Sex is the ultimate physical connection. You are literally joined with another human being. The commitment to reserve your intimacy solely for your spouse is the glue that binds two people together. Hence, introducing a third party into the marriage is faithless by definition.\" \n\nOlivia was astonished. She'd just assumed that all she would have to do was admit her transgression, apologize, and David would jump at the chance to get back together. But David had really thought this through. Now she realized that it was going to take a bit more persuasion. \n\nDavid was still talking. He said, \"Realistically, the pledge to limit your sexual favors DOES fly in the face of human nature. It's why the promise of fidelity is a test. Strong people can pass it. Weak people can't.\" He paused and added, \"So, your weekend might have meant nothing to you. But as far as I was concerned, even thinking about it was a betrayal and acting on it was outright treachery.\" \n\nOlivia began to blubber, \"It was only the one time. I've been faithful to you ever since, even after you ghosted me. Aren't people entitled to one stupid mistake?\"\n\nOlivia's unexpected arrival had ripped off the scab. David said, \"Look Olivia - A man's self-respect is founded on the belief that his mate CHOOSES to devote her intimacy only to him - and him alone. It's fundamental to our self-concept. That's the reason why cheating is so atavistically threatening to men.\"\n\nDavid's voice got harsher, \"My initial reaction was rage and self-pity. I suppose that's natural. Even though I knew that I was the only person who was actually feeling sorry for myself. Then I grew up a bit, did a lot of thinking - made some choices.\" \n\nDavid continued unemotionally, \"Prior to your seduction...\" Olivia began to protest but he bulldozed past her, \"And it was indeed a seduction... I'd subjugated my dreams to your aspirations. When I saw what that got me, I decided to take ownership of my life.\"\n\nThen he paused and added meaningfully, \"So, my first step was to move on from you.\" \n\nOlivia was stunned. David had questioned his love for her in the note he'd left. Maybe he actually meant it. He concluded with, \"The key to my rescue plan was this new job. The other part involved this boat. It's beautiful here and I'm happy. I'll never leave.\"\n\nHe added sincerely, \"So, you are wasting your time if you think I would be willing to reconcile. It cost me a lot of sleepless nights. But I've moved on from you. Our marriage is over. All that's required is the legal handwaving. Since that's your bailiwick I assume you can handle it for us.\" \n\nOlivia finally understood how gravely David viewed her transgression. But one battle does not make a war. She was a lawyer. She was the one who helped people see things her way. Her tears were real. But she put a little extra energy into them just to make her point. \n\nShe said, \"I can't accept that it's over David. I'll do whatever it takes to restore your faith in me. Just give me a chance. If you won't come home, at least let me stay here to try to convince you.\" \n\nDavid said, \"There's no room for you on this boat. But I suppose I can't stop you from staying in Key West.\" \n\nOlivia smiled to herself. She had planned that all along. She had taken a leave of absence from GE for the duration. The Hyatt would be expensive. But she thought that two weeks would be sufficient and Key West WAS paradise. \n\nOlivia stood to leave. David stood with her. She stepped into him and put her arms around his neck. She purred seductively, \"Maybe we could have a little nightcap. It's been seven months since either of us has had sex.\"\n\nDavid looked at her unbelieving and said, \"Are you telling me that you haven't been with anybody since I left? What about Doug?\" \n\nOlivia was waiting for David to walk into THAT beartrap. She said, \"I promised that I would be faithful to you after that one weekend and I've kept my promise.\" \n\nDavid looked non-plussed. Olivia added mischievously, \"Have you been faithful to me?\" That was no gamble. Olivia could guess the answer. David was too much of a Boy Scout to step over the line, even with a woman as attractive as the new one. \n\nHe blushed and said, \"Of course I have!! The job is the only thing I've thought about since I've been down here. Ava is a colleague and friend. I work with her. I would never think of crossing the line with somebody who I'd be forced to see every day.\"\n\nOlivia impulsively reached up and grabbed the back of David's head. She planted an open mouth kiss on him. They kissed with the same familiar passion. Then David broke it. He stepped back with a, \"Get thee behind me Satan\" look on his face and spluttered. \"That isn't a very good idea.\" \n\nOlivia said flirtatiously, \"Why not? We're married.\" \n\nDavid said firmly, \"You know as well as I do that sex would complicate our process of separating. Maybe that's why you're doing it. I don't know. What I DO know is that we are finished as husband and wife. I will never be able to get past the cold-blooded way you willfully walked out the door to fuck another man.\"\n\nOlivia said heatedly, \"That's just your male ego talking David. I shared myself with one other man just once. He was no better or worse than you are, and I chose to return to you.\"\n\nDavid said calmly, \"I know SOME men get a perverted thrill out of being humiliated. But in my mind a wife's desire to share herself is a narcissistic form of sadism and a husband's willingness to allow it is the textbook definition of obsessive masochism.\"\n\nHe added harshly, \"It's a fetish. And since I'm not the Marquis De Sade, a woman who expects me to sanction her sharing herself is unworthy of my respect, or my love.\"\n\nThat hit Olivia hard. She had simply assumed that David would forgive her. Naturally, she expected to make a few contrite assurances. But she could see no valid reason why David would reject her. They had been together a long time. Now, he had just given her a doozy and she had to regroup. \n\nSo instead of pressing the issue of sex, she said, \"I'm sorry you see it that way. Nevertheless, I am going to win back your love and respect. We can be happy together again, you'll see.\" \n\n*****\n\nThe following day was the annual Reef Conservation bash in the Eco-Discovery Center. David was tied up conducting the instructional tours, while Ava served as the aquanaut representative at the Aquarius Habitat mockup. ",
        "He could see Ava across the room, working the crowd in her gleaming white aquanaut coveralls with her mission patches. She looked as smart and capable as her astronaut sisters, with her beautiful face and long dark silky hair. \n\nAva had been a bitch all day and David had no idea why. Her answers were abrupt, and she clearly didn't want to be in the same room with him. Once in a while David would catch her eying him across the display floor and she looked pissed.\n\nDavid walked over at the end of the event. Ava was bending down, just putting away the last of the goodies that NOAA hands out to visitors to the Habitat display. David had to take an appreciative gander at the gorgeous round butt in those sleek aquanaut coveralls. Ava straightened up and said huffily, \"What do YOU want?\"\n\nDavid was hurt. Ava was his pal, and she was clearly mad at him. But he didn't know why. So he said, \"Let me buy you a beer at Captain Tony's. I want to find out why you're so angry with me.\" \n\nAva sighed and looked searchingly at him, and said, \"Alright, let me change out of my suit and I'll meet you.\" Then she added, \"But I don't want your wife there.\"\n\nDavid was confused. He said, \"Why would Olivia be there? I told her last night that we were finished. She understands that there's no going back. She's probably on a plane to Albany as we speak.\"\n\nAva just gave him a pitying look and said, \"I'll see you in thirty.\"\n\nDavid was sitting on the Robert DeNiro stool at Captain Tony's. That's one of the other quirks of the place. It started with Hemingway. But now, whenever a famous person visits, they put their name on the stool that they sat on. \n\nAva walked in radiating charisma. She grabbed the Arlo Guthrie stool on his right. David handed her the cold Key West that he'd been saving for her. They clinked necks as David said, \"You've been acting like something's bothering you and I want to fix it. What have I done that's made you so mad at me?\" \n\nAva laughed and muttered under her breath, \"Clueless.\" She said firmly, \"What's the status with your wife? Did she give you a little loving, just to convince you to take her back?\"\n\nDavid huffed, \"Certainly not!! Honestly, she offered it - thought that would work. But I set her straight.\" Ava seemed to relax.\n\nThen David added musing, \"I always wondered how I'd respond if Olivia reappeared. I was surprised to discover that I didn't have any feelings for her whatsoever. I told her I didn't hate her, but I also didn't love her. She's more of a pain in the ass than anything else. I guess the opposite of love is total indifference.\"\n\nAva said, \"You know that she's going to keep hanging around hoping to change your mind.\"\n\nDavid said, \"What they say about dogs applies to marriage, Once bitten twice shy. I know Olivia was a victim of a predatory guy. But you can't unfuck somebody. So, a long time ago I boxed up that part of my life and shoved it into the attic. The only thing I can assure you now, is that I will never fall in love again.\" \n\nAva's face turned sad. Of course David missed her look. Then she seemed to make up her mind. She said, \"Well, I wish you the best of luck. I just want to let you know that I'll be down in the Habitat for the next ten days. We're micro-mapping climate change on coral ecology. So, I won't see you for a while.\"\n\nNow it was David's turn to look sad. He said with considerable emotion, \"I'll miss our time together. Buster and I won't know what to do with you gone.\" He was surprised to find out how empty he felt. \n\nAva was looking at David expectantly. He was just about to tell her how much she meant to him when his phone rang. He answered it without thinking. Olivia's voice said, \"I'm at the boat, where are you?\" \n\nDavid thought, \"Oh shit!!!\" He was in a rock and a hard place. He didn't want to let his wife know that he was only a few blocks away, since she would come right over. So instead, he said, \"I'm finishing up at the Discovery Center. I'll be along when I'm done.\" \n\nAva knew who David was lying to. She said exasperated, \"She isn't going to give up until you make her do it. In the meantime, I'll be isolated down in the Habitat. So I'll see you in a couple of weeks!\" \n\nShe finished her beer, slammed it down on the counter, and walked briskly out the door. David was mystified, \"Was she crying?\" David paid the tab and walked up Greene a bewildered man. He was wondering whether Ava might have deeper feelings for him than he'd imagined. \n\nOlivia was waiting at the boat. She'd gone all out. She was a gorgeous woman anyhow, and she knew how to maximize the things that God gave her. Her pretty face was exquisitely made up. She was in a light, hibiscus print halter sundress that showcased her full boobs and clung to her beautiful long legs. \n\nOlivia's face lit up as David appeared on the dock. She said jauntily, \"Hey there sailor. How about I buy you dinner at the Lobster House.\" That was just a short walk along the dock from the boat. \n\nDavid said, \"Let me buy instead. There's something I need to talk to you about.\" \n\nThe two of them had been together for nearly fourteen years and married for ten. So, it was natural to fall into easy conversation while they seated themselves at one of the big windows. Olivia was feeling her confidence rise as they talked, things were just like they had been before Doug Chapel slithered into the Garden.\n\nShe took David's hand and said, \"I miss this, don't you?\" \n\nDavid got a sad look and said, \"I miss it a lot. I've missed it since you walked out the door on that fatal evening.\"\n\nOlivia brightened and said, \"We can have it again. All you need to do is take me back. I swear on everything that's holy that you won't regret it.\" \n\nDavid paused. Ava was right. Olivia wouldn't give up until he made her do it. He had always sought to treat people considerately, especially someone he had invested a good part of his life in. But it was his very civility that was the problem now. \n\nDavid didn't doubt that Olivia meant what she'd just said. He even believed that she'd learned her lesson. But he would never lose track of her one fatal mistake. Those actions would fester in his mind as everlasting proof of Olivia's innate commitment to her own self-interest and a marriage that is founded on deep-seated resentment is no way to go. So, the time had come to cross the Rubicon. \n\nDavid had spent hours thinking about his reasons for abandoning his old life. On the surface, his decision to ghost Olivia was an arbitrary almost cowardly act. That is, unless you factored in one inconvenient truth. They were in no way compatible with each other. It was time to be brutally honest. \n\nSo, he said as a preliminary, \"We were equals when we married, we shared the same values and beliefs - call it a bond if you like. We belonged with each other.\"\n\nOlivia smiled and nodded. David continued, \"But as the good book puts it, we were never equally yoked. I was willing to work at a job that I didn't care about. It was something I did just to be with you. I had no ambition, no desire to alter my situation. While YOU had enough ambition for BOTH of us.\"\n\nOlivia started to protest. But David held his hand up in a stop motion. He said, \"Lawyers get what they want through reason and argument. So, believe me, I understand why you thought that you could talk me into a weekend with a fellow who was a lot more akin to you than I was.\" \n\nOlivia didn't like what she was hearing, mainly because it was true. She moved in a world of power and influence. Doug's aggressiveness and his naked ambition had been deeply attractive to her - even more so than his reputation as a lover. And Olivia had always sensed that David could be manipulated. \n\nDavid was still talking, \"Lawyers live in a universe of rationalizations. There are no moral absolutes in court, only the theory of the case. So, I'm sure it was natural for you to spin that fairy tale about getting Doug Chapel out of your system. You probably even believed it yourself.\"\n\nOlivia was appalled. Lawyers construe facts to fit an end. Her argument for fucking Doug had been impeccable. But David had only seen things in straightforward moral terms. If THAT was the yardstick, then the verdict was inescapable -- guilty!! \n\nDavid's voice was gentle as he said, \"You wanted it all, and I was simply too passive to prevent you from getting it. That isn't a healthy situation for any marriage. Your subsequent actions proved that.\"\n\nDavid sighed and hesitated. Then he added, \"I accept that you were once the person I fell in love with. But the underlying differences in our character and temperament wrote a different story. Neither of us are the people we thought we married. The decision was easy once I saw that.\"\n\nHe took her hands tenderly and said, \"Honestly, we can't fool ourselves any longer. I belong in this life and you belong back in New York. More importantly, we don't belong with each other. Look at it this way, the comings-and-goings of two little people don't amount to anything in the great scheme of things. So, we should both get on with our lives. Let's part as friends. I'll accept any reasonable terms.\" \n\nOlivia didn't take it well. But then again, it was her inclination to be intellectually dishonest that had been the problem. She started to tear up. David knew that she needed space. He dropped the cash to cover the bill and said, \"Let's finish this outside.\"\n\nThey walked back to his boat in total silence. Olivia stayed on the dock as Buster came out to greet them the stump of his tail wagging furiously. \n\nOlivia said sniffling, \"I have to think about what you told me. But my instinct is to not give up. We have too much history together and you love me, I know it. So, you haven't seen the last of me.\" Then she turned and marched determinedly up the dock toward her hotel. \n\nDavid's only feeling was liberation. He had taken the crucial step to put his past fully behind him and the growing awareness of his feelings for Ava Martinez had given him a bright new star to navigate by. His only fear was that Ava didn't share his sentiments.\n\n*****\n\nAs all this was taking place, a huge tropical low had formed in the great mixing bowl of the Sahara Desert and swept across Mauretania into the South Atlantic. The National Hurricane Center issued its first tropical storm warning as David and Ava were with the school kids. Then, as it began to increase in power the new storm got a name - Zelda. \n\nBased on the upper steering winds, the NHC projected Zelda's track as going across the lesser Antilles and into the Yucatan. But as Zelda began to push up against the shoulder of South America, she veered onto a strongly northerly track like a billiard ball off a bumper. \n\nDavid arrived at the Aquarius Support Base as Zelda was proceeding almost due north in the open ocean skirting between Cancun and Bahia de Corrientes in western Cuba. Like every other citizen of the Conch Republic, David was unaware of her malevolent presence. Instead he was hoping to talk to Ava before she deployed with her team to the Habitat. \n\nIt was a mystery... really! David wondered why it was suddenly so important for him to talk to Ava. After all, they had been pals for seven months and he'd never obsessed about her before. He'd even listened to her complicated dating history without a twinge. Thinking about those stories now, made David pea-green jealous. It was like he'd been in love with her all that time and had been too stupid to realize it. \n\nThe Aquarius Support base is an unassuming structure off of US-1. It's low slung, white and sun baked like every other office building in Florida. But it serves as the nerve center for Aquarius operations. It contains the things necessary to maintain a major undersea operation, compressors for oxygen and nitrox and an equipment service area, as well as a hyperbaric chamber for treating the bends. \n\nThe watch desk is the base's main feature. It serves as mission control when aquanauts are in the Habitat. A controller monitors real-time data about the status of the LSB's onboard generators and compressors. While at the same time, the Habitat's various life-support parameters are displayed on the screens that fill the big U-shaped console. \n\nDavid hoped that he would be able to sort out his strange new feelings once he got to talk to Ava. Janie Ramirez was on duty at the watch desk He gave her a wave and walked into the base's classroom. He was aware that the settling in process at the Habitat would take a while. So, he planned to use the educational feature as his excuse for waiting.\n\nHe stayed in his classroom for three hours, working on little projects. Once he was sure that the aquanauts were settled in, he drifted over to the watch desk and said casually, \"Looks like you have a mission going on.\"\n\nRamirez said, \"Yes, Ava Martinez's benthic team is on a ten-day survey mission on the northern part of the reef. They're gathering data about the impact of global warming on the coral's calcium carbonate formation process.\"\n\nDavid could see Ava stowing equipment on the split screen monitor. She was the mission commander. But she was working like a stevedore. He felt something that he hadn't experienced for a long time. It wasn't a welcome emotion because he knew that it put his tender heart in harm's way. \n\nHe said hopefully, \"Maybe I can say hi later on?\"\n\nRamirez looked at David like she thought he was joking and said, \"Batman is the only person authorized to use the batphone link to the Habitat and you aren't wearing tights and a cape.\" \n\nDavid chuckled appreciatively. But he was exasperated. He had to find some way to communicate to Ava that he'd developed a clue. He hoped that would give her something to think about for the ten days she was down there. \n\nHe said nonchalantly, \"Well, I think I'll hang around for a while. I have a lot of work to do on the poster board displays and I don't want to drive back and forth between Key West every day.\" \n\nDavid knew that Buster would make sure that the boat was secure and the couple in the 46-foot Beneteau berthed next door would take good care of Buster. That had been the case every time he had had to spend the night up at the support base because everybody loved Buster.\n\nAs David turned and walked toward the door, he called back over his shoulder, \"I'll just get a room at the Fisher and I'm always glad to help if you need somebody on the night watch.\" David knew that they had a hard time finding people to man mission control in the middle of the night. \n\nRamirez replied, \"Tom Malchak is scheduled for tonight, but he's got four young kids so sometimes he cancels. Leave your cell number and you might hear from me.\" \n\nEarlier... Zelda had caught the NHC forecasters flat footed. Most hurricanes of Zelda's type drifted north toward the Texas coast. But the steering winds unexpectedly shifted strong westerly and Zelda recurved. Now she was headed directly for the Keys at an extraordinarily high rate of speed. The NCF hastily issued revised hurricane warnings. The last time a hurricane of Zelda's type hit the Keys was 1935 and it killed over 400 people.\n\nThe Fisher was located only a minute south of the support base. The room was an arm-and-a-leg when it would've been maybe forty-nine bucks anyplace but Islamorada. But David had a plan. His cell rang as he was finishing dinner. He was expecting the call. He knew he would be filling in because he had called Tom Malchak and told him that he would take his shift.\n\nIt had gotten ominously dark and raining hard as David made the short ride back to the base. The wind had also picked up and ocean storm clouds were scudding rapidly along the eastern horizon. Something very menacing was happening out there as the sun set. \n\nRamirez gave David the usual orientation when he reported for duty. David didn't need it because he had actually taught a course on how to man the desk. But this was his first live situation and protocol had to be followed. So, Ramirez reviewed the logging procedure and status checks with him. \n\nThey were recording the Habitat's nitrogen saturation readings and confirming that the oxygen content and Co2 levels fell within parameters when the NHC hotline lit up and the Aquarius controllers learned that a killer was on its way. Ramirez, who was still the duty officer, exchanged a few unfriendly words with the people in Miami, for notifying them at the last minute. \n\nThe main problem was that it was 21:30 hours on a Friday. Admittedly there were plenty of people on call and they had a good hurricane response plan. But the reaction force would take a couple of hours to assemble and that would be cutting it close. \n\nThe first thing David did was ring Olivia. He told her that she had to get out of Key West fast. Once he'd explained the situation she said concerned, \"I'll pack my rental and be on my way right away. But what are you going to do?\" \n\nDavid said, \"Ava Martinez is in grave danger up here in Islamorada. I have to help her.\" Those words put the final stake in Olivia's fantasy. She could see that her husband was risking his life for the other woman and she no longer had a place in David's life. \n\nOlivia said with deep regret, \"I love you David. I will always love you. But I'll put together the papers as soon as I get home.\" David was too busy thinking about his next move to mumble anything more than, \"I'm sorry too, Olivia.\" \n\nBoth he and Ramirez were in panic mode. The Habitat was far enough underwater that it would be unaffected by the hurricane. But the LSB was on the surface. Consequently, it would be exposed to Zelda's full force. And if the LSB went, there would be no life support for the aquanauts below. \n\nThey couldn't wait-out the hurricane in the Habitat without electricity, air, and more importantly the pressurization to avoid the bends. So, they had to get out of there, pronto. There was only one viable option. The Sea Ray was berthed behind the building, prepped and ready to go. And it was the only boat fast enough to get out to the LSB and back before the full force of the hurricane arrived. \n\nDavid reached around Ramirez, who was activating the response plan, and picked up the bat-phone. He could see Ava answer it on the monitor. He said, \"Ava, this is David.\" Ava said warily, \"This is a surprise, what do you want?\" \n\nDavid said, trying to put meaning into every syllable, \"You have to evacuate the Habitat ASAP. I will pick up you and your crew off the LSB, I'll let you know when to surface.\"\n\nAva was angry as she said, \"Are you telling me to abort the mission? Has that been authorized?\" \n\nDavid was disappointed with Ava for getting mad at him. But then again, aborting a mission was a big step. He said, \"Wait one,\" and handed the phone to Janey Ramirez. \n\nRamirez said, \"This is mission control. We have an NHC emergency evacuation order, authorization code November-Hotel-Charlie-817-Zulu. You have to get out of the Habitat while you can. A hurricane is headed our way and it's likely that you'll be stranded down there without LSB support.\"\n\nDavid took the phone back from Ramirez and said, \"I'm coming out in the Sea Ray. It should be twenty minutes or so. But it's already getting pretty nasty. So it might be longer. Keep an eye out for me.\"\n\nThat was an understatement, the winds were sustained at 20-30 miles-per-hour as David cleared the Snake Creek bridge and headed into the big Atlantic rollers. The swells were presently in the eight-to-ten-foot range, which wasn't a problem since they hadn't begun to break. \n\nThe Sea Ray beat through the waves on its step, throwing up gouts of water as it smacked through the tops. The companionway door was closed and battened. David was in the pilot's position up top, dressed in storm gear and strapped tightly in as the big boat battered along. The wind was driving rain against the enclosing glass like bullets. ",
        "David was watching the wind gage and anemometer readings. The general heading to the LSB was north-of-east, and the wind was coming from the south-southeast. Because the wind was thirty knots off the stern quarter, it was making it easier to pound through the waves. \n\nHowever, the wave heights would increase if the wind velocity got much higher, and the Sea Ray would start to dive into the troughs. To avoid that, David began a zig-zag pattern that would keep the boat at a 45-degree angle to each approaching wave. \n\nIt was pitch dark without the moon and stars and it was getting lonely and scary. The constant forks of lightning were the only things illuminating the churning sea. The thunder was almost continuous, and the rain came down in sheets. David turned on the two powerful remotely controlled halogen spotlights, that were mounted on a structure above the pilot's station. \n\nThe wind velocity was closer to forty knots as the storm neared. But the Sea Ray was still making good headway. David as navigating with the GPS. But there was no way to gage distance. He kept trying to contact the Habitat on the marine-band HF radio. But the approaching hurricane was generating too much electrical interference. \n\nDavid had been out perhaps an hour, on what should have been a twenty-minute trip. He could tell from the GPS that he was right on top of the LSB. But he couldn't see it. He assumed that Ava and her crew would have already surfaced. \n\nDavid was getting panicked when a flare lit-up the sky about 200 yards to the east. The storm must have pushed him west, or maybe the LSB had begun to drift off its moorings. He turned and headed back into the wind as a second flare arced up and he could finally see the LSB's comms tower in the red glow. \n\nAva was standing on the deck holding onto a stanchion for dear life, while she reloaded the flare gun. The rest of her team must be sheltering in the LSB. Ava had no doubt seen the Sea Ray's Halogen lights.\n\nDue to the intensity of the wind, David couldn't just idle up to the platform like normal. He had to keep considerable headway on in order to maintain control. They all would die if the wind drove the Sea Ray into the buoy. So, the only safe option was to make a controlled pass and the team would have to jump. It was dangerous. But they'd all trained for that eventuality.\n\nAs the Sea Ray cautiously approached the leeward side of the LSB, David could see Ava marshalling her team at the edge. He thought, \"Smart lady!!\" The wave heights were less than six feet in the platform's close shadow. \n\nThe Sea Ray nearly touched the side of the LSB as David shoved the throttles to back-full and the big boat hesitated for just a heartbeat, like a pause in a dance. Three people landed in a pile in the stern well. That only left Ava, who had chosen to get her team off first. David jammed the throttles to full-ahead and accelerated past the buoy into the frantic waves. \n\nIt was killing him to leave Ava. But he had to come back to the LSB in a long loop. Otherwise there would be a twenty-foot following sea breaking over the transom and that would have drowned the engines. The LSB disappeared as he started the loop, which jacked-up David's anxiety level. \n\nAnother flare lit the port quarter - good girl!! David adjusted his course track and the Sea Ray passed within three feet of the buoy. David had the totally inappropriate thought, \"I'm getting good at this.\" \n\nHe did the same trick with the throttles and Ava came flying off the platform in a perfectly timed leap. She landed catlike in the stern well. David firewalled the engines and the big boat went pounding off through the howling gale as it headed for home. \n\nAva's team unbattened the hatch and went below for a few well-deserved shots of rum. Meanwhile, Ava joined David up-top in the second pilot's chair. She strapped in, gave him a jaunty grin, and said, \"Fancy meeting you here?\" \n\nDavid retuned a wolfish smile and said, \"I was in the neighborhood.\" \n\nNeither of them had to say it. Their future was obvious to both of them - love, marriage, and their own small fry of marine biologists.\n\n*****\n\nThe divorce came through with a note from Olivia. It was friendly. She told him that she finally knew how he'd felt. In the meantime, David had a heart-to-heart with Ava. They were back in their familiar position sitting in David's boat. The evening was warm and fragrant. The litter from the storm was mostly cleaned up and it was paradise once more in Margaritaville.\n\nAva's eyes were luminous as she lay back against David's arm. He wondered how such a strong and capable woman could make herself appear so soft and vulnerable. He decided that he would never understand womancraft. But he didn't need to. All he had to do was trust one of them and she would take care of the rest. Ava was the one he would trust with his life.\n\nDavid said, \"The last time we were together I told you I would never fall in love again. But I was wrong. Because I'm in love with you and that presents a problem.\"\n\nAva's eyes went from dreamy to alarmed. She said, \"What problem??!! I love you too!!\"\n\nDavid sad seriously, \"Ava, you are a wonderful human being. I've told you that over-and-over. But I want to have you in my life full-time. Not just as someone to hang out with.\" \n\nThat led him to tentatively add, \"I've sat here night-after-night and listened to you tell me about one male conquest after another. I'm just too old for booty calls. I want to marry you.\"\n\nHer beautiful face lit up like a searchlight until David added, \"But I've been burned by a woman before. So, on your honor. You have to promise me that you can be faithful until death-do-we-part? You owe it to me to be honest.\" \n\nAva's eyes turned obsidian, driven by the deep feelings that powered her next statement. She said, \"We both want to live a meaningful life, to justify our existence in some substantive way. It's a higher order purpose, more than simply muddling along grabbing the gusto when we can. That's the thing that we have most in common.\"\n\nDavid nodded. It was Ava's earnestness that had drawn him to her in the first place. Values meant something to her. She could be as playful and flirty as any other attractive woman. But underneath her beautiful exterior, she was as fundamentally committed to a principled life as he was. \n\nAva went on, \"I like sex, who doesn't. But I've always been selective with the men I've slept with and I've been careful. You know that because you've listened to my stories.\" She added earnestly, \"And you can count the number of men I've actually been with without using all of your fingers.\" \n\nThen she stopped and looked at him gravely, measuring his reaction as she said \"You also know that I want something more than inconsequential one-night-stands. I've told you that. The problem is that I hadn't met anybody I'd respected enough to totally commit to.\" \n\nShe leaned forward so that she was staring directly and meaningfully into David's eyes. She said, \"I kissed a lot of frogs. It's what a modern woman has to do in order to meet her prince.\"\n\nShe paused to let that sink in and then she continued, \"From the day you started at the Center I've known that you were the one. You were intelligent, capable, and caring. You treated me like I was a partner, not a potential conquest, and you were always honest.\" \n\nThen she added with a grin, \"I sent you every signal I could think of and you just kept giving me the big-brother act. I was seriously starting to think it was me, or maybe you just liked men better. You can't believe how relieved I was to find out that the only problem was that you were married.\"\n\nDavid laughed. Ava added with emphasis, \"Honor is a particularly important virtue for me. So you know that I will respect a pledge if I make it. That is a fundamental part of my culture.\"\n\nShe paused and added with significance, \"More importantly my attitudes are perfectly aligned with your own values. So when I tell you that I'm yours you know that you can trust me to never break that vow.\"\n\nDavid said, \"Aaaand so -- is that what you're telling me? You're saying that you could see yourself married to me?\"\n\nRather than answer, Ava took his face in her two hands and laid a hot open-mouthed kiss on him. It was the first time they had ever touched romantically. The two of them stumbled to their feet still kissing. David was astonished at how quickly this was progressing. So, he hesitated.\n\nAva broke the kiss and said smiling, \"So, do you want to do this in front of the whole marina, or would you prefer someplace more private? Either way is fine with me.\" They both tripped over Buster in their eagerness to get to the forward bunk. Buster raised his head, decided that they were just going off to mate, and went back to sleep. \n\nDavid was fumbling with Ava's bra as they reached the bunk. She reached behind and quickly unsnapped it. David had seen her boobs both times at Captain Tony's. But he still gazed at them in wonder. They were fucking incredible -- big, firm, round, and very high riding on her chest, with incredible nipples. \n\nShe lay back on the bed, struggling out of her shorts. He gazed in wonder at her absolutely perfect body. Her hips were round and womanly while still maintaining the tone of a trained athlete. Her legs were amazing. But he already knew that; muscular, yet utterly womanly. Nevertheless, it was her beautiful oval face, now a mask of passion that made her into something exceptional. \n\nThey had both waited a long time and they didn't want to wait any longer. This was the moment of truth. David was staring into her eyes as she pulled him between her legs. Her chest was rising and falling like the ocean waves during the hurricane. \n\nDavid paused for a second. He was aware that this was a momentous step. There would be no recovering from heartbreak if he were wrong about this woman. The next few seconds answered all of his questions. Ava gave herself to him totally. \n\nShe grabbed him inserted him into a vat of boiling honey and rotated her hips until he was touching bottom deep inside her. The heat was incredible, almost inhumanly hot. At the same time she was kissing him with a wide-open mouth. In effect, she was totally open to him at both ends of her body and it was like they were one entity. \n\nAva groaned loudly enough that it startled Buster and he barked. Then, she wrapped her long legs around David's waist, and they settled into the age-old motion. As they did so, Ava started making little uhs and grunts. Those small noises quickly changed to rhythmic moaning which culminated in a small climax, just a long groan, and her heated thighs spread even wider.\n\nAva felt her self-control slipping, her hips were bucking and spasming like they weren't hers and she could feel her butt muscles clenching and unclenching like some berserk machine. She also realized that she was making so much noise telling David to fuck her that she wasn't going to enjoy her upcoming \"walk of shame\" back down the dock. \n\nHowever, she was lost in the sensation of David moving inside her and she wanted him to know that she was his woman forever. It ended in an unquestionably remarkable fashion. She could feel a contraction coming from a galaxy long-ago and far-far-away. When it arrived, she blew up, like the death-star. \n\nAll rational thought ceased while her psyche processed the sheer, raw sensation. The feeling was so profound that she could sense the paradox of teetering on the brink of unconsciousness while at the same time wildly throwing herself around underneath her lover. \n\nShe found herself yelling, \"So good!! I've waited for this forever. Make me yours baby!! I'm yours. I'll always be yours.\" And David did just that. It had been a long seven months. \n\nHe came for what seemed like eons. Meanwhile Ava's contractions and rapturous shaking continued for several minutes. \n\nDavid finally got his wits together and rolled off her. They lay side-by-side panting, recovering. Then, he propped himself on one elbow and said, \"Do you mean it?\" \n\nAva was staring off into space teasing her hair in ringlets, still coming back to this world. She just lay there panting for a couple more seconds. Finally she said curious, \"Mean what?\" \n\nDavid said, \"You told me that you would always be mine. Did you mean it?\" \n\nAva looked at him unbelievingly and said, \"No, I say that to every guy I fuck!!\"\n\nDavid's face fell. Ava thought to herself, \"Clueless, but I love him.\" \n\nShe slugged him on the arm and said, \"Of course I meant it you idiot. The only way I'm leaving this relationship is feet first and if you have any plans to do otherwise, then you'll be leaving in the same fashion since we Cubanos have ways of dealing with wandering husbands.\"\n\nEPILOG\n\nThree months later, David was standing under a fancy canopy at Truman Waterfront Park. It was a mere hundred yards from the Eco-Discovery Center -- the place where it had all begun. \n\nAva was radiant in a white silk shift dress that ended a couple of inches above her knees. It showcased her outrageous figure. She was wearing a garland of flamingo colored plumeria that was a perfect contrast to her long silky black hair. \n\nAva's parents were filthy rich, and Ava was the only girl in a Cuban family. So, David had to endure the lavish wedding that her parents had always wanted to throw for her. \n\nDavid felt sorry for his bride. Ava had wanted to hold the wedding sixty-two feet underwater at the Habitat. But instead, she was standing in front of a priest accompanied by a platoon of bridesmaids, while a few hundred friends and well-wishers watched. \n\nDavid was a natural loner, and he had no family to speak of. He had a few acquaintances, none of whom were close enough friends to serve as best-man. But he DID have one devoted buddy - somebody who had stuck with him through thick and thin. \n\nThat was the reason why a smelly old ex-con from the Albany pound was the only creature standing loyally beside the groom... pant-pant-pant-slobber-slobber-slobber. \n\nDogs are devoted to their humans and Buster knew how important this was for David. So, he'd even let the wedding planners bathe and groom him. Now, he sat in the rigid pose that every canine adopts to inform the world what a very good dog they really are. Two ropes of drool hanging down from the best man's dewlaps were the only minor breach of etiquette. \n\nWhen the time finally came to present the ring, David unsnapped it from the collar around Buster's thick neck. As David slipped it on Ava's finger Buster thought to himself, \"This marriage is going be a very, very happy one. Dogs know their humans and we're never wrong about this sort of thing.\"\n\nAuthor's Note: \n\nThis last silly little piece is a tribute to the friendships I've made on these sites. You might be virtual and anonymous. But you've meant a lot to me - DT"
    ],
    "authorname": "dtiverson",
    "tags": [
        "big tits",
        "boating",
        "hot woman",
        "infidelity",
        "key west",
        "separation"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/wheres-buster-redux"
}