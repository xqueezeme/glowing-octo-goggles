{
    "title": "Christian College Sex Comedy Ch. 12",
    "pages": [
        "*Wakefulness is a race we cannot not win; Sleep is remorseless as all salvation should be*\n\n(Once more, to Frontma for coming through for me)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n\n\nI woke up to every heterosexual teenage boy's second favorite dream (the first being a morning blowjob) of a perfume-scented head resting on each shoulder as you wake. There were the tiny complications of only having gone to bed with one woman and that, by their breathing, I could tell they were both awake.\n\n\"Good morning,\" I said cautiously; technically morning since it was 5:00 a.m.\n\n\"Good morning, Zane,\" Iona and Barbie Lynn greeted me. They both ran hands over my chest, though they gave a sudden jolt when their hands touched. I had one arm around Iona and I used that to give her a hug.  My other arm was pinned by my side by Barbie Lynn's body.\n\nI gave Barbie's thigh a squeeze and she wiggled in response.\n\n\"Okay, Barbie Lynn, this is Iona's night, so what are you doing here?\" I scolded my blonde nymph.\n\n\"I'm sorry,\" Barbie demurred then looked to Iona and repeated the \"I'm sorry.\"\n\n\"I understand,\" Iona replied, hesitating before saying after further introspection as she snuggled in, \"I want to wake up this way every morning too. I like the way he smells and the way he makes me feel all warm inside...and now you owe me a night...to be shared,\" she stated hopefully.\n\n\"One of these days I'm going to get a say in how I spend my free time,\" I griped. Iona looked hurt but Barbie Lynn merely sneered.\n\n\"Don't you worry none, Iona. Zane, if you could wake up next to myself and Iona tomorrow morning, would you?\" she drawled like sweet molasses.\n\n\"Yes,\" I grumbled petulantly, \"but I'd still like to talk about it.\"\n\n\"Trust us, Suga, we know what's best for you and what you want. Just let us girls take care of you and you take care of all the Man Stuff.\"\n\n\"We'll take good care of you,\" Iona dog-piled on, but in a nice way.\n\n\"If it makes you feel better, you can punish us,\" Barbie Lynn offered. \"We've been bad.\"\n\n\"Huh?\" Iona and I questioned. Barbie flipped over and wiggled her ass against me.\n\n\"Good point. You two get to the foot of the bed, facing away from me \u2013 now!\" I demanded.\n\n\"Why me?\" Iona honestly worried. \"What did I do wrong?\"\n\n\"Do it, Iona. This is virtually a rite of passage,\" Barbie Lynn lied to her.\n\n\"No, it is not, and if you don't want to do it, you don't have to,\" I told her. She didn't know what I was going to do and she clearly was scared, but when Barbie Lynn crawled out from under the covers and moved to the foot of the bed, resting on all fours, ass toward me, she followed suit.\n\n\"If Barbie Lynn is going to do this,\" she muttered, \"then so am I.\"\n\nI followed them, positioning myself between their calves and massaging their butt cheeks lightly. Barbie shifted back and forth in anticipation; Iona couldn't de-tense. SMACK!\n\n\"Oh, Yes!\" Barbie Lynn yelped, then playfully wiggled her other, unmarked cheek within reach.\n\n\"I've been really bad!\" she chirped cheerfully.\n\n\"No! Bad Girl,\" I shook my finger at her. \"I'm starting to believe you aren't learning your lesson.\" We both knew that spanking Barbie was like throwing gasoline on a fire. Unfortunately, my purpose right now was to get them both back to their rooms, not work off my morning arousal.\n\nI moved behind Iona and forced her legs apart. She was clearly uncomfortable when I put a hand on each hip and slowly rocked her back and forth. Barbie Lynn sat back and watched with an enchanting glow highlighting her features; clever, intuitive, and lovely all at once. I settled my body onto Iona's back, my hard-on pressing into her ass cleft and one hand rubbing her stomach.\n\n\"Zane?\" Iona whispered in a scared little girl voice.\n\n\"Yes,\" I answered, while kissing her along her shoulder ridge.\n\n\"You...you didn't do this to Barbie Lynn,\" she choked out.\n\n\"Do you want me to treat you as if you were another woman?\" I continued, brushing her hair to one side so I could tease her neck with my lips. That got her to finally relax.\n\n\"No,\" she gasped.\n\n\"Iona, you explaining sex to Zane is like a bobcat telling a wolf how to hunt deer,\" Barbie Lynn teased Iona. \"He gets to know you, what you like, and what you want, even if you don't know what that is.\"\n\nI spent another two minutes giving Iona a sensual massage, rubbing her upper arms, down along her sides, then tracing the lines of her panties before finishing with her inner thighs. Smack!\n\n\"Oh,\" Iona gasped from the light impact.\n\n\"Why didn't you spank me as hard as you spanked Barbie Lynn?\" she wondered.\n\n\"Did you want me to leave a handprint on your butt?\" I asked.\n\n\"No...I guess not,\" Iona admitted. \"Can you answer me something?\"\n\n\"I'll try,\" I replied.\n\n\"Why do you have those marks on your wrists and ankles?\" She inquired. The room was dark so Barbie Lynn hadn't seen my little gift from the Kappa Sig's until Iona showed her what to look for.\n\n\"Zane?\" Barbie Lynn demanded to know, her persona going from sensual lover to protective Dorm Mother.\n\n\"Let's not get into this right now,\" I sighed. They looked past me to one another but thankfully respected the peace I had requested. Had they not left together, huddled in quiet conversation, I would have been happier, but I had to be satisfied with fifteen more minutes of sleep instead. By the time I made it to the shower, everyone already knew not to ask \u2013 they were already seeking answers on their own.\n\nGetting to breakfast involved a play-debate where I had to be the 'Bad Guy,' aka the Liberal, Baby-killing, Godless Democrat, while my mistress of the moment was the heroic Republican. I graciously allowed her to trounce me, to the cheers of my fellow classmates, when I declared that all churches should be converted to homes for unwed mothers and that church-endorsed marriage should be banned for not accepting homosexuality. Did I know my audience or what?\n\n\n\nNEVER A SIMPLE MORNING\n\n\n\nI love women, even though they will surely be the death of me. Case in point: breakfast.\n\nI'm about to sit down with my normal companions (Rio and Iona) when a blur shoves Rio aside and takes a seat next to me.\n\n\"Zane, I've been going over the books in the school library and some...\" Raven began.\n\n\"Bitch, you did not just bump me and steal my seat,\" Rio seethed. Raven looked over her shoulder at Rio.\n\n\"We are not in kindergarten anymore. Grown-ups chose their own seat,\" Raven lectured.\n\n\"Wait!\" I cried out to forestall Rio's pelting Raven with the contents of her food tray.\n\nRio gave me barely enough time to twist my tray sideways, half-stand, and pull the Hellion onto my lap. I wouldn't displace Iona and that was the only place in this section of the table for her to sit.\n\n\"Nice hood ornament,\" Raven smirked.\n\n\"You and me are far from done,\" Rio snarled.\n\n\"What, you don't know what 'ornament' means so you opt for something out of 'Goodfellas'?\" Raven taunted.\n\n\"Stop!\" I barked. \"Rio \u2013 Raven, Raven \u2013 Rio; Rio is my twin-soul and Raven is going to help me get through English this semester so for my sake, would you both please play nice?\"\n\nNeither girl would budge so I took the initiative.\n\n\"Raven, I think we can get access to the libraries at UV and George Mason; I'm sure they have tons more material for us to use,\" I offered.\n\n\"How are you going to manage that?\" Raven was skeptical.\n\n\"Yeah, Brainiac,\" Rio parroted. \"How are you going to do that?\"\n\n\"I'll have one of the Sorority sisters help me with UV and we'll have Iona hack Lance Wellington's password from his phone,\" I explained. \"That will get us into Mason.\"\n\n\"Only an idiot would store their password on a portable storage device,\" Raven stated with confidence. \"Someone smart enough to get into George Mason wouldn't do that.\"\n\n\"Ha, ha, ha,\" Rio laughed. \"Raven, there are smarts, then there are real smarts. Any knucklehead can crack some books and get into a law school but it takes an adult to know when the rules do and don't apply.\"\n\n\"That makes no sense,\" Raven stated with authority.\n\n\"Raven, would you even consider trying to access UV or George Mason?\" I asked.\n\n\"No,\" she admitted, \"because we don't go there.\"\n\n\"Men build fortresses to be impregnable; God inspires men to storm them anyway,\" I replied.\n\n\"Which translates as, 'if Zane says he's going to get something for you, he'll do it,\" Rio said.\n\n\"Okay,\" Raven mulled it over, then, \"So, Zane, how did you get those rope burns on your wrists?\"\n\n\"Yeah, Zane, how did you get those marks on your wrists and ankles?\" Rio inquired devilishly. I stole an accusatory look at Iona for ratting me out about my ankles.\n\n\"I went over to the Kappa Sigma House; they drugged me, took me out into the woods, performed unspeakable acts on my person, bound me to them with unbreakable oaths, drugged me again, and took me back to wake up once more at the house,\" I confessed.\n\n\"Seriously, if you don't want to tell us what happened, you don't need to make something up,\" Raven lectured me.\n\n\"Raven, if it was anyone else but Zane, I'd agree with you,\" Rio grudgingly admitted to Raven, \"but in his case...well, this kind of crap happens to him all the time.\"\n\n\"Mr. Braxton,\" Coach Dana Gorman grumbled, \"you have a student sitting in your lap...and you are not eating your breakfast.\"\n\n\"Oh, Coach,\" giggled Rio in a far-too-schoolgirl-ish manner, \"I just learned that Zane and I are pregnant and that we are having twins!\" My heart dropped through my guts and I didn't want to look at how much attention we had garnered.\n\n\"Not even remotely funny, Ms. Talon,\" Dana replied dryly. \"You two haven't been here long enough for you to know if he got you pregnant \u2013 not that you can get pregnant \u2013 and it would definitely be too soon to know you had twins.\" I am not sure what happened next but somehow I managed to stand while not dumping Rio on her butt and wound up face to face with the coach.\n\n\"You had no right,\" I seethed quietly at Dana, \"to publically talk about that.\"\n\n\"Stand down,\" she snarled right back.\n\n\"If she so much as sheds a tear, I will break you,\" I pledged, as I shifted into my fighting stance. Dana mirrored me, not about to back down.\n\n\"I'm fine, Zane,\" Rio said as she put a hand on my arm. \"She's still angry that I turned down her lesbian advances.\"\n\n\"I did no such thing,\" Gorman stated evenly.\n\n\"So if we search your residence, we aren't going to find that banana shaped strap-on you tried to use on me?\" Rio challenged the coach as she moved to my side.\n\n\"I possess no such item,\" Dana shot back.\n\n\"Well, we can always have a group of teachers check your place to verify my claims,\" Rio threatened.\n\n\"Sit down and eat your breakfasts,\" the coach commanded, then she stepped back and walked away. We did as instructed because chasing her down didn't seem prudent.\n\n\"How did you know she had a banana...thing in her quarters?\" Raven inquired.\n\n\"Not a clue,\" Rio said from my lap, \"but any girl that aggressive either has a boyfriend or some serious sexual aids. If she had a man, we would know about it, so she's got toys.\"\n\n\"And if her place gets searched, she is shamed by the discovery of her...equipment,\" Iona said.\n\n\"With all this craziness, how do you three ever get studying done?\" Raven wondered.\n\n\"I do study,\" Iona stated.\n\n\"I plan to buy my grades,\" Rio grinned.\n\n\"I forgo sleep,\" I added. Privately, I was thankful that no one went near Rio's pregnancy issue. It was nobody's business, and I could deal without making a fool of myself again.\n\nWith breakfast finished, Rio headed off to find and torture Mercy, but I saw her get picked off by a senior named Anastasia. I was heading to meet with a junior named Natalie when Christina and company closed in around me.\n\n\"Who is your little friend?\" Heaven said with a twinge of jealousy. Raven didn't answer the question, instead turning on me with some anger.\n\n\"You are like a dang magnet,\" she growled. \"Do they text each other when you are leaving?\"\n\n\"Yes, we do,\" Hope answered sternly.\n\n\"Gang, this is Raven Thorpe,\" I started, \"and ...\"\n\n\"Carry my books, freshman,\" Heaven demanded. Without waiting for a reply, she slammed her bag into Raven's chest.\n\n\"...and she is helping me with my English term project. She doesn't like me and is only working with me because she was one of the three that refused when Ms. Goodswell requested volunteers,\" I got out.\n\n\"What happened to the other two?\" Chastity questioned.\n\n\"They claimed to be afraid that Zane would sexually molest them once alone...an excuse I think I should have used now that I've come to know him,\" Raven told them. Heaven was about to unleash her famous fury on Raven when Christina stayed her with a hand.\n\n\"Raven, have you ever seen Zane treat a woman badly?\" Christina asked.\n\n\"Not directly. But last night he was at a Sorority house, and it is known he has a girl in his bed every night,\" Raven stated.\n\n\"Oh, that reminds me,\" I interjected, \"Tawny says we are good with Kappa Sigma and that we are all invited back for their Halloween bash.\"\n\n\"Don't worry about a thing, Zane; I'll talk to Tawny about getting ten girls to help her set up and deal with the costuming,\" Christina informed me. \"Raven do you know of any girl who hasn't wanted to be with him at night?\"\n\n\"If Zane was a female student who had males in her room every night, none of us would talk to her,\" Raven stated.\n\n\"Even if she kept her virginity and never took the virginity of another?\" Chastity asked.\n\n\"Do you seriously believe Zane doesn't have sex with most, if not all, of the women he hooks up with?\" Raven countered.\n\n\"Iona,\" Christina demanded, \"how many times have you gone to bed with Zane and have you lost your virginity?\" Iona was shocked but finally managed to form words.\n\n\"Twice,\" she said sheepishly, \"but I'm still a virgin and he's never tried to be anything but a gentle...lover. I feel completely safe with him.\"\n\n\"If it is his long-term plan to steal your virginity, you are falling right into his trap,\" Raven pointed out.\n\nThat brought some chuckles.\n\n\"Zane...long-term plan...he, he, he, he,\" Chastity lost it. \"Zane's been accused of many things but over-thinking a situation isn't one of them,\" she told Raven.\n\n\"We like Zane a lot,\" Hope went on, \"but he's sort of a nut.\"\n\n\"Last week we were trying to drive him out of school,\" Christina enlightened my English partner, \"and on that Saturday we are at a party he invited us to off-campus. That is because Zane doesn't obsess on the past or worry too much about the future.\"\n\n\"And we all had a great time at the party, I might add,\" Heaven got her licks in.\n\n\"How is he going to have a future if he doesn't plan?\" Raven persistently countered.\n\n\"Have you ever read his notes?\" Iona asked.\n\n\"No,\" Raven admitted.\n\n\"He has a great memory and takes detailed notes \u2013 sometimes too detailed,\" Iona turned to me in a somewhat scolding manner. \"Like sketches of the underwear Seraphina was wearing in Biology class.\"\n\n\"How do you know what type of underwear she has on?\" Raven looked at me puzzled. I had no good answer to that that one so I decided to see what creatures I could make out of the clouds overhead.\n\n\"That little cunt flashes him,\" Heaven rumbled. I took a deep breath.\n\n\"To be honest, she actually hikes her skirt all the way up,\" I said warily \u2013 Heaven being a minefield, \"but that's only because class is so boring. We also exchange notes on how to learn something besides creationism since we both plan to be doctors someday.\"\n\n\"Zane, what do you show her?\" Christina grinned but in a friendly way. I was so hanging myself right at that moment, I simply couldn't outrun all of them.\n\n\"We occasionally sneak out to the bathroom during class and make out,\" I confessed.\n\n\"How do you sneak out during class?\" Raven inquired.\n\n\"I have to go to the bathroom and I can't remember where it is so she guides me,\" I explained.\n\n\"Zane, it is three doors down from your classroom; how can you not know where it is?\" Iona sounded bewildered.\n\n\"Our professor gives me a hall pass and he is rather forgetful,\" I related.\n\n\"So, how far did you go with her?\" Heaven inquired sweetly. There was no good answer that would keep me out of trouble.\n\n\"I never kiss and tell,\" I evaded.\n\n\"I'll ask her when the Bible Study Team meets,\" Christina announced.\n\n\"Or I can ask her when the Debate Team meets,\" Raven added.\n\n\"Or I could make a break for the wall and make all this speculation irrelevant,\" I suggested.\n\n\"Not before we get our Date Night out of you,\" Hope warned me.\n\n\"Absolutely,\" Chastity said. \"Hope and I have bought new dresses we want to try out on the World.\"\n\n\"Is there any woman he's not dating?\" Raven wondered.\n\n\"I'm not dating you,\" I answered.\n\n\"And why is that?\" Faith asked. Raven looked at me.\n\n\"Why couldn't I be addicted to something safe like prescription drugs?  They don't talk back or ask embarrassing questions,\" I muttered.\n\n\"What was that?\" Christina teased me.\n\n\"I haven't had the impression that Raven wants to spend that kind of time with me. She wants me to help her pass our class, so that's what I'm going to do,\" I explained.\n\n\"So if I wanted you to have sex with me, you would?\" Raven requested to know.\n\n\"Nope; you are too tightly wound right now. Let's get some academic success under your belt and see what's what,\" I explained. \"Outside of that, I find smart to be sexy.\"\n\n\"Zane is not going to abuse you, Raven...unless you ambush him in his bedroom,\" Christina said.\n\n\"Evidence suggests being naked in his bed helps,\" Iona related in a clinical manner.\n\n\"Oh, look!\" I exclaimed. \"I'm at my class now so I'm going to run away and leave the rest of you to torture me at your leisure.\"\n\n\"I'll see you at lunch,\" Christina reminded me.\n\n\"Uhmmm...okay?\" I shrugged then slipped into my class before more could be said. I had a plan, and it was complex and hare-brained because that's when I was at my best. I even let the word get out that I was up to something but only one person knew what that was \u2013 except those bitches who kept hacking my system might have a clue as well.\n\nWhen I slipped back into psychology class at 11:40, my teacher, Ms. Vincent, gave me this slightly curious and very disapproving glance. When class was dismissed, she called me over.\n\n\"This get-up has a purpose, Mr. Braxton?\" she glared.\n\n\"Yes, ma'am!\" I responded cheerfully.\n\n\"You should be in your class uniform,\" she reminded me.\n\n\"Yes, ma'am, I know, but there are special circumstances,\" I replied nicely.\n\n\"Handmaiden's Duty?\" she guessed correctly. I nodded in response. \"Very well, get out of here and try to remember the proper dress code next time.\" One more nod and I was out the door.\n\nAs I raced off in an intercept course, I made a few calls to set things in motion. Iona was a little put out that I hadn't briefed her on my plan but she wasn't the best at keeping secrets so I would deal with her later when things made sense. By the time the files loaded and the extra participants enlisted, I stood before Christina.\n\nChristina stood there for a second, as did her crew. I was dressed all in white, from jacket to shoes, except for a thin black tie, hardly the school uniform.\n\n\"I was thinking about what to do with you,\" Christina began telling me, \"but I have a feeling you have something planned out.\"\n\n\"Yes, I do,\" I grinned. \"Ladies, check your tablets; I've downloaded an audio-file. If you can all start it at the same time, I can begin.\"\n\n\"Let me get this straight: you have background music and a costume...all for your Handmaiden's Duty with me?\" Christina marveled. \"I don't think you understand what this tradition is all about.\"\n\n\"I don't know,\" Heaven interceded, \"he seems to have worked his heart out to pull this off.\"",
        "\"How do we work synching the audio?\" Hope asked.\n\n\"The first one to activate the file, activates it for all the systems,\" I informed them.\n\n\"What is on the file?\" Faith inquired.\n\n\"It is a song, but it would ruin the surprise to say more,\" I answered.\n\n\"I'm in,\" Chastity smiled with anticipation.\n\n\"What do I need to do?\" Christina inquired.\n\n\"Not ask me to stop,\" I begged.\n\n\"Oh, damn,\" Heaven groaned. By this time, over two dozen people had gathered around.\n\n\"Have I missed anything?\" Rio gasped, nearly out of breath. \"I hear Zane is going to make a total ass of himself and I don't want to miss a second of it.\"\n\n\"Do you know what he's about to do?\" Heaven prodded Rio.\n\n\"No, which is why this should be an epic fail,\" she laughed. I rolled my eyes.\n\n\"Can we begin now?\" I suggested. Chastity nodded and hit play. A few of the gathering knew the beat so they had a few seconds to be utterly aghast at what I was perpetrating before the first words left my lips.\n\nNow, if you don't know Usher's Scream, you might want to listen to it to have a reference to what I was serenading Christina with. Those words, belted out on a Christian Girl's campus, certainly had an impact. Somewhere about the thirtieth second, most of the girls had their 'Oh, My God' moment as I was verbally molesting Christina in public.\n\nI wasn't done, either. When the music began, Christina began walking toward the Dining Hall. I kept pace, doing my best Usher-moves while propositioning Christina in a very pornographic style. At first she was embarrassed, but as we progressed, I caught sight of a smile on her lips and she would brush her chest against me when I'd place myself in her path (reference the song).\n\nWe finished at the steps to the Dining Hall. I wasn't sure when we had gathered the audience but we had. I was panting and looking to Christina for approval.\n\n\"I'm not disappointed,\" she informed me.\n\n\"Not disappointed?\" Iona gasped angrily. \"He's been working on that all week long.\"\n\n\"And I'm sure it was a strain on his attention span,\" Christina replied to Iona in a condescending manner, but she was studying me and my reactions.\n\n\"Don't sweat it, Iona,\" I smiled to my friend, \"She's saving up all that happiness for our wedding night.\"\n\n\"Mr. Braxton, do I even need to tell you what you've done wrong?\" Dr. Topaz Larson said. She had slowly parted the crowd to get to me.\n\n\"Well, if you could please put it in order of magnitude, I'd appreciate it,\" I sighed.\n\n\"Propositioning another student for sexual favors, playing music at an unacceptable volume, and being out of school uniform while on campus without prior permission,\" she related to me.\n\n\"Well, when you put it like that, I've really messed up, haven't I?\" I shrugged.\n\n\"It was my fault,\" Christina chimed in. \"I had him do this for Handmaiden's Duty. I wanted to exhibit the degrading and corrosive aspects of popular music on today's Christian culture.\"\n\n\"Yes...I'm sure we all feel so...degraded,\" Topaz joked. \"Would someone get him in the right clothes before lunch ends? Promise me.\"\n\n\"I'll see to it personally,\" Christina assured the teacher. \n\nNo sooner had Topaz departed than Rio threw herself at my feet. \"Marry me, please!\" Rio cried out. \"I'm never going to find anyone else as fucked up as you.\"\n\n\"Thanks, but I know you only want me for my body,\" I joked right back.\n\n\"It certainly isn't for your dance moves,\" she grinned.\n\n\"He's quite a nice dancer,\" Christina stated.\n\n\"Oh, come on,\" Rio complained, \"He has all the grace of a baboon having an epileptic seizure.\"\n\n\"We had better help him out, then,\" Cordelia stated in a manner I found to be suspicious. Where had she come from? \"He's going to need all his best moves come Spring Break.\"\n\n\"It is one night,\" I shrugged. \"How hard could it be?\"\n\n\"Oh...we'll see,\" Cordelia smirked, then sashayed past us toward the food line.\n\n\"I don't like the sound of that,\" Chastity worried.\n\n\"Worry later; right now we need to get some food, then go back and get Zane dressed,\" Christina directed.\n\n\"I can help with that,\" Heaven volunteered, immediately happily followed by...\n\n\"I can dress myself,\" I muttered.\n\n\"Zane, we aren't worried about you; we are worried about someone waiting in ambush,\" Chastity reminded me. \"That lock on your door doesn't seem to work all that well.\"\n\n\"Hey, your lawyer cancelled for today,\" Iona read off her phone \u2013 she was my schedule planner.\n\n\"Damn,\" I grumbled. I was looking forward to further...consultations.\n\n\"Zane, you are probably the only man I've ever heard upset over missing a mandatory legal meeting,\" Christina noted.\n\n\"God damn it, Zane!\" Rio mocked me, \"Is no one safe?\"\n\n\"For the love of God, just take me back to my place so I can throw myself off the roof,\" I groaned.\n\n\"First we feed you and then we let you kill yourself,\" Christina directed. Sadly, she didn't follow through on that because I still live.\n\n\n\nKNOWN BY THE COMPANY OF THE WOMEN I KEEP\n\n\n\nA note to all guys: if a girl/girls ask you to pick any movie you want, then gives you a suggestion, you cannot win. In this case, Chastity and Hope were 'curious' what the movie The Loved Ones was like but I could chose whatever I wanted. I wisely chose The Loved Ones. For those who don't know, it is about a completely insane girl with too much money and a deep obsession with some poor schmuck.\n\nMy two dates, the Archery Goddess and She Who Can Kill You from 500 Meters, found the movie side-splitting and couldn't fathom why I was somewhat horrified through most of it. For me, the moral of the story seemed to be never saying no to a girl. I had a feeling I was being trained.\n\nWe were chatting it up when Chastity reminded me,\n\n\"Zane, don't forget we have our first Soccer game on Saturday morning.\"\n\nI noticed two cute girls about our age angling in right after she said that.\n\n\"Hey,\" the cheerful, slender girl with the shoulder length dirty-blonde hair said, \"You are 'that' guy, aren't you?\"\n\n\"That guy?\" Hope interjected suspiciously.\n\n\"That Zane guy from the video,\" the new girl explained. \"Zzzaannnneeee,\" she moaned sensually. Oh...yay. No one said anything for five seconds, then both Hope and Chastity started laughing uproariously.\n\n\"Yes, that would be me,\" I confessed. \"Are you at UV, girls?\" They were: Erin \u2013 PoliSci and Gerry \u2013 Business.\n\n\"Are your dates Kappa Sigma's?\" Erin asked.\n\n\"Oh, God, no,\" Hope chuckled. \"We are at FFU. So is Zane, but that's a long story.\"\n\n\"Are you his real girlfriends?\" Gerry, a shorter, stout girl with short black hair inquired.\n\n\"It doesn't work that way,\" Chastity confessed. \"Zane is our property and we rent him out for social functions.\"\n\n\"No you don't,\" I laughed. \"Chastity and Hope are good friends and we came out for dinner and a movie.\"\n\n\"If you aren't dating anyone in particular there is going to be a party next Saturday. It is by special invitation only \u2013 it is a block party but we could call you when we find out,\" Erin offered.\n\n\"Hey, babes,\" this guy greeted us...or more appropriately, the ladies around me.\n\nHe was rather average looking; perhaps he would have looked better if his face wasn't constantly burned by the Sun and he avoided smoking joints and drinking so much. I figured he was about twenty or so. He was unlikely to have anything resembling a regular girlfriend or even regular sex because he paid little heed to his looks or his wardrobe.\n\nHis chief companion was a weasely guy; not the shifty sort, but the blood-thirsty feral kind. He was short and wiry with an anger that came from unrealized ambition and recognition; probably a vicious fighter but used to striking from the blind side. The final guy was tall and skinny, suffering from shyness exacerbated by the presence of women.\n\nErin and Gerry looked at the new guy, snorted derisively and turned back to me.\n\n\"Here's our number,\" Erin said as she took out a pen and wrote her digits on my palm. \"Call on Thursday and we'll tell you where we can meet.\" I nodded because I was grappling with the rudeness these girls were showing this guy and his buddies.\n\n\"What...going to be a party?\" the guy leered.\n\n\"By invitation,\" Erin responded, \"College students only.\" I was starting to feel for this guy.\n\n\"What, is Zane-boy and his Kappa Sig whores good enough for you sluts, but real working men are not?\" he taunted us.\n\n\"Don't do that,\" I warned him, putting a hand to his chest as he stepped forward and tried to put his hands on Erin's and Hope's asses. I'm not sure what Erin would do but Hope was likely to dislocate his jaw.\n\n\"Take your hand off me, jack-ass,\" he growled. His weasely buddy looked ready to pounce.\n\n\"We should call it a night,\" I told the ladies. \"Erin, Gerry, I'll call later. Ladies, let's get out of here.\" Erin and Gerry tossed a worried look dumbass's way, then smiled to me and left. My companions and I left by a different way. Since we were heading out the easiest way to the parking lot, the three guys followed us.\n\n\"Hey, you sissy bastard, why are you afraid to share?\" he mocked me, but really, was sissy bastard the best he could do? I sensed him coming up behind us as we exited the mall so I spun around, as did the girls.\n\n\"So how much do these Kappa Sigs cost?\" he chuckled. \"It can't be that much if you are buying these whores two at a time. I'll give you twenty for them both.\"\n\n\"Walk away, Zane,\" Chastity urged me quietly. \"Let it go.\"\n\n\"You are right,\" I bit down my anger, \"not only does he not have the money, he couldn't satisfy a woman even if he could convince one to accept payment.\"\n\n\"Mother fucker,\" he snarled, and shoved me back. I had had enough.\n\n\"Go back to your playmates,\" I warned him calmly, \"I'm not someone you want to be badmouthing ladies around.\"\n\n\"Whatchya gonna do, Fucker?\" he shot back. \"How about when I finish kicking your ass, I'm gonna bang both the bitches you brought tonight? Then I'm going to ride those whores you were on the video with.\"\n\n\"Oh, you shouldn't have said that,\" breathed Hope. I was not the one she was admonishing, either.\n\n\"Apologize to these two ladies right now and pledge to never go near the Kappa Sigs and I'll let you leave here under your own power,\" I responded.\n\n\"I was afraid this shit-hole would never fight,\" the weasel guy sneered. I looked to the third guy.\n\n\"Do you know the number for the hospital?\" I asked him. He nodded. \"Good.\" The main talker started to shift his body into an aggressive stance but had the nerves of a bully, not a fighter. My first strike rocked him back on his feet and gave me the time I needed for his buddy.\n\nThe buddy got a quick but unskilled jab off. I blocked it and popped him hard, nearly knocking him over. I spun back to the Talker, set him up with a strike, and then kicked him so hard that I sent him flying out of the fight. The Weasel lashed out again; I caught his arm and drove my knee into his stomach. I kept that up for eight more knee-strikes until he ceased struggling and slumped to the ground.\n\n\"Make that call,\" I told the third guy, then grabbed my girls and ran for the car.\n\n\"Why are we running?\" Hope asked as we got into my car.\n\n\"They already know who I am but you two are unknown. Face it,\" I reasoned with them, \"if you two get dragged down to the police station, that could be big trouble.\"\n\n\"And since you are already known, you are screwed,\" Chastity muttered.\n\n\"Yes, basically. Once I get you two safely back to your dorm, I'll turn myself in and deal with the consequences,\" I informed them. \n\n\"We'll talk to Gorman when we get back,\" Hope said.\n\n\"That kind of voids the reason for fleeing the scene,\" I pointed out.\n\n\"What is it about you, dates, and the police?\" Chastity chided me.\n\n\"Hey, now, only half my dates have ended with police involvement,\" I complained.\n\n\"Zane, do you realize how horrible those odds are?\" Hope noted.\n\n\"Does this mean no second date?\" I joked.\n\n\"I think we want a do-over on this one,\" Hope grinned. \"I think we were all hoping for a different kind of excitement when we got back to your place.\"\n\n\"Groan...it would sort of suck for you two to be in my room when the cops come for me,\" I sighed. That was the end of our conversation, because it would suck and we had no choice.\n\nOnce I had Hope and Chastity back to their dorm, I made my way back to my place and changed. Since we were normally required to be in uniform, we had gone to Aunt Jill's to change into 'normal' attire, but I had decided we didn't have the time for it on the way back. I gave Coach Gorman a call and explained the events, minus my two friends. She told me to stay put.\n\nIt was past midnight when I received a call from the Coach.\n\n\"Zane, please come to my office,\" she told me.\n\n\"I'll be right there,\" I responded, as I slipped off my bed. The campus was still and dark as I made my way to the Security Center.\n\n\n\nThere were only two offices with lights on, that of the night officer and Gorman's office. Inside, I found Gorman behind her desk and a Sheriff's Deputy sitting in a chair opposite her and angled to look at me and the door.\n\n\"I told you he would come,\" Gorman reprimanded the officer.\n\n\"He ran once; I had reason to believe he would rabbit again,\" the man answered.\n\n\"Cowardice is not a trait I attribute to Mr. Braxton,\" Gorman commented dryly.\n\n\"That may be the case,\" he replied. \"Mr. Braxton, I want to ask you some questions about what happened at the mall this evening around 9:30.\"\n\n\"I went to see a movie. When I came out, I was accosted by three men, and when I attempted to leave, they followed me to the parking lot where I proceeded to beat the crap out of them,\" I confessed.\n\n\"So you admit putting two men in the hospital?\" the Sheriff's Deputy inquired.\n\n\"Yes, sir. I struck the taller one in the face, pivoted and did a downward block to the smaller guy, following through with an uppercut to his jaw. I did another strike to the first guy, then did a jump kick \u2013 sorry Coach \u2013 to his sternum, putting him out of the fight. The smaller guy righted himself, struck, and I caught him in an arm bar. I then brought my knee to his stomach \u2013 sorry Coach \u2013 and struck him repeatedly with it \u2013 sorry Coach,\" I outlined the fight.\n\n\"Thank you. But why are you apologizing to Coach Gorman?\" the Deputy asked.\n\n\"He's apologizing for not using Karate moves,\" Dana informed him. \"I'm his Karate Coach as well as Head of Security.\"\n\n\"And a hell of a soccer coach, or so I'm told,\" I grinned sadly.\n\n\"That is nice. Now, there was a report of two women being with you,\" the officer said. \"Who were they? I need to interview them.\"\n\n\"I'm not going to deny there were other women there but I won't name names. There could be academic consequences for fighting and I want to spare them that,\" I explained.\n\n\"Son, I could tack on a charge of obstruction of justice to go with your two counts of assault and one of fleeing the scene of a crime,\" he related.\n\n\"Okay. Do what you have to do,\" I declared. \"I will not turn on my friends.\"\n\n\"In that case, I am placing you under arrest,\" the Deputy stated, as he stood up and Mirandized me. He brought out the cuffs and led me away.\n\nBack at the Sheriff's Office, I sat down with SD Burrows, my arresting officer, and we worked on his report. It turned out I could type and he could peck, so I convinced him to dictate the report for him because I desperately needed some sleep. A female Sheriff's Deputy gave our case, and me, a double-take.\n\n\"What have you got here?\" the woman asked.\n\n\"Two counts of Assault, fleeing the scene, and obstruction of justice,\" Burrows said.\n\n\"Zane Braxton?\" she inquired.\n\n\"Yeah. We have him in a report for that fight at the Kappa Sigma House last Saturday, though no charges were filed,\" he informed her. \"I went to the University \u2013 that's Freedom Fellowship \u2013 and he turned himself in.\"\n\n\"Why did you run?\" She turned to me. I groaned and lowered my head.\n\n\"Apparently, he was protecting the identity of the two women he was with; most likely fellow FFU students,\" Barrows filled her in. She nodded and went on her way.\n\n\"Okay,\" he said when we finished, \"let's get you processed and put you into the general holding cell. Do you want to call your lawyer?\"\n\n\"I'd rather get some sleep,\" I confided in him.\n\n\"You will be arraigned tomorrow morning at 9:00 so have someone by then,\" he advised me. After that was the tedious process of fingerprints and the pictures before they finally moved me to the 'overnight' holding cell.\n\nInside were two benches and nine guys. Five crowded onto one bench, two biker-type guys lounged on the second bench, and two were left to stand against the bars. I was really tired.\n\n\"I'm really tired,\" I explained to the more tattooed and bald biker-guy, \"get off my God-damn bench.\" There was a hush in the cell.\n\n\"What did you say, Pussy?\" the guy said as he stood up. He had an inch on me and fifty pounds or so. His buddy was standing as well.\n\n\"I've put two guys in the hospital tonight already. I'm more than willing to put your heads through the bars, Asshole. Now get off my God-damn bench,\" I growled.\n\n\"Braxton, I don't want any trouble from you,\" a passing Deputy commented.\n\n\"What's he in for?\" the lead biker asked the Deputy.\n\n\"He put two guys in the hospital for talking to his ladies, as best as we can figure,\" the officer stated.\n\n\"What are these two in for?\" I inquired, while keeping my eyes on the bikers.\n\n\"Misdemeanor drug possession,\" the Deputy answered. I smiled evilly at the bikers.\n\n\"Get off my God-damn bench. I need a nap,\" I seethed and they back-side-stepped out of my way. As I said, I was really cranky.\n\nFor whatever reason, no one attacked me in my sleep, and I was definitely dead to the world within five minutes of my head hitting the hard surface of my contested bench. I dreamed of ice cream and pizza...and scantily clad babes bringing me ice cream and pizza, confirming that while exhausted, I was not dead.\n\n\n\nINTERROGATED UNTIL DAWN\n\n\n\n\"Mr. Braxton,\" a strange yet not totally unfamiliar voice said as she shook me awake. I looked up into the deep, earthy brown eyes of the female Deputy that I'd seen earlier. \"They need you in Interrogation Room One.\" I sat up and rubbed my eyes, realized I didn't have a watch, so I inquired as to the time \u2013 a little past 2:00.\n\n\"Okay, but I've already confessed,\" I mumbled as I stood up. \"I'm not sure what more I can say.\" She turned and walked out of the cell, where a second female officer was holding the door. Alarm bells were going off. While I've never been to a US jail before, I'd seen enough police procedural shows to know the cops never let the convict get behind them.\n\nGirls do it all the time...when they want to show off their ass, and I stupidly was caught doing just that, as her smirk over her shoulder revealed. She shut the door when I left and walked down the hall with one in front of me and one behind. Sure enough, they took me into an interrogation room, and the unknown one took a seat opposite me while the slightly more familiar one stood behind my chair.\n\n\"Mr. Braxton, we understand you have refused your right to counsel; is that correct?\" the one with Urquhart on her name tag said.\n\n\"Technically, no. I have refused to call for a lawyer but I plan to engage one in the morning,\" I admitted.\n\n\"We would like to ask you some questions, if that is okay?\" Deputy Urquhart said.\n\n\"Sure,\" I leaned back. The other officer put her hands on my shoulders. Without really thinking about it, I reached across my chest to the opposite shoulder and ran my fingertips along the fingertips of the woman's hand. My interrogator noted the gesture.\n\n\"You were in an altercation at the Kappa Sigma House last weekend. What can you tell us about that?\" she asked.\n\n\"I imagine saying things like 'it wasn't official' and 'it was within city limits' is pointless, so I guess I was shoved into the girls' bathroom by five guys and got my ass kicked,\" I explained.",
        "\"Five guys decided to beat you up? Was there a reason?\" she persisted. The other officer began rubbing her fingers along with mine.\n\n\"Short story, none of your business; longer version, these frat boys were messing with some of the ladies I came to the party with and I got the ladies away. Later, they came for payback and a fight ensued. I got my ladies out, then went back to the Kappa Sigs to see if everything was okay.\"\n\n\"But neither the FFU girls nor the Sorority pressed charges so we don't know who they are, and now you are in another fight, women are involved, but you won't tell us who they are either,\" she outlined.\n\n\"Basically, yes,\" I replied.\n\n\"You are looking at some very serious trouble if these girls don't step forward or you don't tell us who they are,\" she explained. I took the time to move my free hand behind me and onto the thigh of the officer there. In seconds, I had spider-climbed my hand to her crotch. She tensed up, pushed away from me, then rocked forward until her breasts bracketed my head.\n\n\"Well, since that's not going to happen, how about we get something to eat?\" I sighed. I figured that sleep wasn't likely so I might as well toss around some sexual innuendo to lighten the mood.\n\n\"You are looking at serious jail time and your first thought is to order out?\" the interrogator questioned.\n\n\"I was hoping to eat in, actually,\" I grinned. \n\n\"Oh...and what makes you think that is going to happen?\" she questioned me with a sexual undertone.\n\n\"Two female officers, you are not taking notes, and I've been frigging your partner behind my back for nearly a minute now without her putting my head through the table,\" I explained.\n\nShe stared at me for a second, not sure if I was exhibiting bravado or I was really playing into their game. Apparently her partner expressed to her visually that I was indeed playing with her.\n\n\"Well, what do you have in mind?\" she gave a lopsided grin. \"I'm Haley and she's Tara.\" \n\n\"First off,\" I stood up, moved the chair away, and turned to Tara, \"I'd like to do this.\" I ran my hands down her sides, around to cup the ass she'd shown me in the cell while I kissed her.\n\nTara pulled my lips down to her ear and neck while I raised her leg up until her knee was at my hip level. When I began working on her belt buckle, her hands came around and helped me until it swung loose and she lowered it to the ground. A rapid mutual stripping off of the clothes followed.\n\n\"You two want to slow down?\" Haley joked as she came up behind me.\n\n\"Fuck, this thing is huge,\" Tara gasped past me to her partner. Since her hand had surrounded my cock, I had to imagine she had a flair for the dramatic. \"He's twice as big as my husband.\" Oh, Hell! Husband? I guess if I was a better guy, I'd end things right now...but I'm an okay guy, not a saint.\n\n\"If he complains, remind him that he's sleeping with that tramp of a sister you have,\" Haley teased.\n\n\"God, yes,\" Tara moaned happily, \"Let's get a condom on this bad boy and see if he performs as advertised. If he's anything like his video, I can't wait to show this to Bill and let's see how he likes it.\"\n\n\"Whoa,\" I interjected. \"Who is your husband, Bill, and is he going to want to kill me?\" Tara slid down my body, licking my shaft and balls as she went, retrieved a condom from her pants, and came back up along the same path.\n\n\"Don't you worry, Zane; he's a bouncer at the Fallout Shelter,\" Tara assured me.\n\nClearly I had no idea what that was so Tara enlightened me.\n\n\"It's a popular college club. You can't get in there legally anyway.\"\n\n\"Your sister?\" I questioned. As for the club, was an ID the only thing in the way? Simple.\n\n\"She's a bartender there, the slut. She's still pissed that I put her husband away,\" Haley explained.\n\n\"What'd he go in for?\" This was getting more and more twisted. Haley began rubbing her nearly naked body against mine from behind.\n\n\"Arms trafficking. He was sentenced to twelve years down in Fairview,\" Haley murmured, \"Now, let's put that tongue to better use.\" Arms trafficking...at least I'm learning about firearms at school.\n\nI turned Tara around and pushed her up against the table next to Haley. \n\n\"How are we going to do this?\" Haley asked.\n\n\"You both get up on the table and I'll give it a shot,\" I told them. \"I am so far past exhausted that I feel invincible.\"\n\nI crouched down, placing Haley's left and Tara's right between my legs, and began to massage their cunts in tandem. I moved up to Haley first, kissing her pussy lips, then making three passes with my tongue, parting her lips and tasting her fluids as they began to flow. I then transferred my attention to Tara, this time sucking on her already excited clit.\n\n\"Make out,\" I suggested to the objects of my affections.\n\n\"We are not like that,\" Tara told me. Well, that sucked...or more like, I was going to be the only one sucking, which made my job a lot harder. Now I had to increase the activities of my fingers to keep them boiling, and finally I sent Tara over the edge with clitoral stimulation with my lips and teeth.\n\n\"Oh, God!\" she cried out shrilly. Her legs wrapped around my shoulders and squeezed me tightly to her, temporarily pulling my hand away from Haley's honey trap. The second I could pry myself free of Tara's legs, I stood over Haley and began sliding my penis into her hot, steamy vagina. \"Aaaahhh,\" she moaned, \"give it to me just like that...oh, yeah.\"\n\nI pushed in slowly. By her tightness, I figured it had been some time since she'd had sex.\n\n\"Oh, fuck...\" she went on. \n\n\"Bigger than Chris?\" Tara chuckled, somewhat breathless. Chris? Who the fuck was Chris? If I had to deal with another husband, I was going to seek out a non-extradition country.\n\n\"Chris?\" I ground out, as I picked up my pounding of Haley.\n\n\"My...ugh...ex...ugh...damn...you are ...ugh...good,\" Haley grunted. \"Caught...oh, yeah...him...banging a...ugh...co-ed...ugh...divorced his...ass.\"\n\nWhat the hell? Could no one in this town keep it in their pants? Had I come home to where I truly belonged?\n\n\"How is he?\" Tara asked.\n\n\"I'm...mmm...plotting out...yeah, baby...that...ugh...mile...oh, good...between his...mmm...school and...fuck, yeah...his home.\" Haley urged me on harder with her thighs on my ass and her fingernails on my shoulders and back.\n\nLucky me; Lancaster city limits end right past the Kappa Sigma house, then it's all county up to the campus gates. I already had a city cop waiting for second round and now I was adding to frustrated Sheriff's Deputies figuring out how to commit legal malfeasance on my ass. I was so distracted, I literally collided with Haley's face as she grabbed the back of my head and pulled me down.\n\nKissing, I understood; the licking of Tara's juices off my face is somewhat unexpected. I caught Tara mesmerized by the show, though I was really not in a position to push them together because Haley started going off.\n\n\"You bastard,\" she growled, \"bastard...bastard...fuck...fuck...you BASTARD!!\"\n\nShe bucked up against me with powerful jabs that rotated and lifted her hips into my downward thrusts. She made this hissing noise through her clenched teeth as her orgasm gripped her body in one massive seizure. How exactly do you explain fucking a female officer to death?\n\n\"Did...is she going to be okay?\" Tara worried. How in the Hell am I supposed to know?\n\n\"Ooohhh, Gawd,\" Haley finally gasped. \"Do you date older women?\"\n\n\"Ah, I don't know, since I may be going to prison soon,\" I responded cautiously.\n\n\"That's not going to be a problem,\" Tara said seductively as she tilted my sweaty face her way. \"Those guys dropped the charges. Your lawyers are processing you out right now.\"\n\n\"A less deviant personality would be upset by what you two just did,\" I groaned, \"but since the sex has been really good and I haven't cum yet, all I really want to know is, do we have to stop now or can we keep going?\" They exchanged glances, then turned on me with a hunger worthy of she-wolves. Fortunately, I was feeling pretty damn Alpha wolf right then too. Yes, I'm an idiot.\n\nAn hour later we were all finishing getting dressed when I slumped back on the table and put an arm over my eyes to shield me from the overhead florescent lights.\n\n\"You okay, Zane?\" Tara asked.\n\n\"Nothing wrong here, but I did have this fantasy that I'd get a good night's sleep tonight. I'm not sure how I'm going to get through classes,\" I relayed to them.\n\n\"The weekend is almost here,\" Haley said as she pulled me up and off the table. I stumbled into her arms and she gave me one more saucy kiss. \"Now we better produce your body before too many questions are asked.\"\n\n\"Don't worry, we'll keep in touch with you to make sure those guys don't cause you any trouble,\" Tara grinned.\n\n\"Which guys?\" I asked for clarification.\n\n\"Exactly,\" Haley smiled. Translation: whatever excuse works. \"Let's go.\" We three had all made it out the door and about fifteen steps down the hall when a voice called out behind us.\n\n\"Zane.\" It was Hudson Lane...the school's lawyer.\n\nMy two new friends and I turned around and I didn't have to be told how bad things were. Lane and another woman had come out of the door next to the interrogation room I'd just left. That would be the room on the other side of the one-way glass.\n\n\"Hey, Ms. Lane,\" I grinned, even as the blood drained out of my face. \"Been here long?\"\n\n\"About an hour,\" she smiled knowingly.\n\n\"I can explain,\" I gulped. My two cop buddies were very silent on the matter.\n\n\"This is going to be good,\" Lane told the woman standing next to her. The stranger looked intrigued.\n\n\"See, I ended up in a cell with some drug smugglers and it necessitated a full-body cavity search,\" I offered hopefully.\n\n\"While that is a possibility, far-fetched perhaps, why were the officers required to also be without their clothing?\" the unnamed lawyer asked. I stared at her.\n\n\"That's Zane's way of asking who you are,\" Hudson smiled.\n\n\"Oh, my apology. I'm Sophia Brigitte Messier. I was hired to represent you in this matter,\" the lawyer answered.\n\n\"Oh...okay. The officers discovered that they might have had drug residue on their uniforms and had to remove them before the drugs could take effect,\" I lied.\n\n\"And the physical Olympics that ensued?\" Brigitte smirked.\n\n\"CPR...I was having a bad reaction to...something,\" I groaned.\n\n\"For an hour? You are lucky to be alive,\" she said with a straight face.\n\n\"I often feel that way too...lucky to be alive, that is,\" I clarified.\n\n\"Officers, I think we are done here tonight,\" Lane told my female Deputies. They both took a deep breath, Tara smirked at me, then they both departed down the hall. \"Let's go, Zane; it is time to get you home.\" I moved aside so that Lane and Messier could walk past me, but Lane put her hand to my back and moved me forward.\n\n\"No, you don't,\" she laughed. \"You need to get to campus before daylight.\"\n\n\"Couldn't you stash me in a motel room for twenty-four hours?\" I stifled a yawn. Lane shook her head and steered me out. As I was leaving the station, a short, burly Deputy brushed past me. His name tag read Chris Urquhart. Well, fuck a duck...Haley's ex is a Sheriff's Deputy too.\n\n\"Zane, are you okay?\" Lane asked with some concern.\n\n\"Let's get out of here before that guy figures out I just nailed his ex-wife,\" I whispered to her.\n\n\"My car is this way,\" Brigitte motioned to us, and we hastily made to her car and sped away.\n\n\"Just so I have this straight,\" Brigitte turned to Lane, \"you let this guy live among an entire school of young ladies?\"\n\n\"I'd trust my daughter if I had one,\" Hudson declared. \"Zane's reliable and loyal, if sexually...\"\n\n\"Promiscuous, aggressive, dynamic...\" Brigitte added. \"I can only imagine how this story is going to be received around the bar where I hang out. I'm not sure anyone will believe me.\"\n\n\"This has never happened to you before?\" Lane teased us both.\n\n\"Going to a hospital and intimidating witnesses, happens all the time. Going to the station to retrieve my client, only to find him...I don't even know how to describe all those sexual acts he perpetrated on those two female officers...still having sex with two of his arresting officers, how does this happen to someone?\" Brigitte wondered.\n\n\"That's Zane,\" Lane answered. \"Zane, have you ever turned down an offer of sex?\"\n\n\"Recently,\" I thought about it, \"technically, yes I have.\"\n\n\"Really?\" Lane sounded surprised.\n\n\"Well, she said I could do anything to her, and I told her I wanted to cuddle,\" I told them. \"Does that count?\"\n\n\"A girl throws herself at you and all you want to do is cuddle?\" Brigitte said. \"If it wasn't for what I witnessed over the past hour, I might think you were gay.\"\n\n\"She is a really nice girl who is worried about the nature of our relationship. She didn't really want to have sex, she wanted to be appreciated, so I held her and talked to her and we fell asleep in each other's arms,\" I explained.\n\n\"Is this the guy you think is a threat to our girls at Freedom Fellowship?\" Lane questioned.\n\n\"I actually wish my boyfriend had felt that way. He was all about quick sex and rolling over, and private time was spending the night at a club with his friends,\" Brigitte mulled it over, then, \"Oh, God, I unloaded on the two of you. I don't even know either one of you.\"\n\n\"Zane makes women around him do all kinds of crazy things,\" Lane chuckled. \"Blame him.\"\n\n\"Honestly, Ms. Messier, you need to take a good swim to unwind,\" I noted. \"Not power-laps either, but diving and swimming deep, fun stuff.\" Silence followed.\n\n\"How did you know I was a swimmer? I competed in college,\" Brigitte inquired.\n\n\"You have that kind of body, plus the way your roll your shoulders and hips,\" I responded.\n\n\"I thought you would say something like my breasts were small,\" she stated.\n\n\"What do you mean? You have great breasts. That green half-cup is a really good choice for you, too,\" I told her.\n\n\"How...\" Brigitte stammered.\n\n\"I notice women,\" I explained. \"Brown eyes, set tight on an aquiline nose, shoulder length black hair -- but you probably feel you need a haircut -- fine bone structure, five foot ten, and maybe 115 pounds, slender, and you regularly wax.\" More silence followed.\n\n\"How old is he, again?\" Brigitte asked Hudson.\n\n\"I swear he's only eighteen; we checked. All we can figure is that it is genetic. Apparently his father was a real hellion,\" Lane related. \"We are lucky there aren't dozens of little Zanes out there.\"\n\n\"Maybe that is why my Dad told me to never use my real name when I first asked him for dating advice,\" I mused.\n\n\"I thought your parents died when you were fifteen,\" Brigitte asked.\n\n\"They did, but I started dating when I was twelve,\" I enlightened her.\n\n\"You were dating when you were twelve?\" Hudson gawked.\n\n\"If it is any consolation, she was sixteen,\" I offered.\n\n\"How do you date a sixteen-year-old when you are twelve?\" Brigitte wondered.\n\n\"She was upset because some other girls were bothering her. I started up a conversation and then I asked her out and she said yes,\" I stated what was obvious to me.\n\n\"Tell me you didn't have sex,\" Lane said.\n\n\"No, I didn't have sex. I was a virgin until I went to Thailand,\" I filled them in.\n\n\"No sex of any kind?\" Brigitte asked.\n\n\"I didn't say that. I mean, she was gorgeous and...filled out so much more than girls in my class, and she wanted to show me stuff,\" I continued. Silence followed us into the campus parking lot.\n\n\"We'll see you up to your room,\" Hudson told me as we got out of the car. At this point, I figured I could make a run for it, but then Gorman would probably let them into my room eventually anyway. I considered leaving the campus forever but I couldn't leave Rio behind. Finally, I surrendered to the inevitable.\n\n\n\nNot because I'm egotistical or believe I'm sexually irresistible but because all I want to do is sleep, and that seems to draw women to me like nails to a magnet. My life would have been so much easier if I'd lied and told Brigitte she was a stick and claimed Hudson was unremarkable. Of course, my hell-bound mind referenced that Hudson was definitely bi-sexual and Brigitte was lonely.\n\n\"I need you to sign some papers,\" Brigitte told me as we entered the dorm.\n\n\"Can I grab a shower first?\" I responded. Ms. Messier and Lane exchanged looks.\n\n\"Of course, Zane,\" Lane replied. \"We'll go over our notes until you get back.\"\n\nIn reality, lawyers are struggling guys in cheap suits with bad diets and an under-developed sense of humor.\n\n\n\nIn my world, they are leggy babes with overcharged libidos and a penchant for mixing business with pleasure. I fully expected a lesbian love fest when I got back to my room from my shower so I was a bit surprised when I got back and found them sitting on opposite ends of the bed in awkward conversation.\n\nI'm standing there with a white towel around my waist and my flesh covered in a sheen of steam-borne water. Brigitte couldn't take her eyes off me and licked her lips like I was a piece of prime rib. Hudson looked at her and visually teased me seductively; she had used me as bait to get at her newfound colleague. I'd hate her if she wasn't so damn hot. I'm going to have to add Nuvigil to the Viagra I need to start taking.\n\n\"Zane, why don't you sit down next to Brigitte and we can conclude our business,\" Hudson smiled and gave me a wink. Great, I've gone from her sex toy to her accomplice. I sat down next to Brigitte, our thighs rubbing against each other. She nervously pulled out some papers and a notepad from her briefcase and held them up for me to look over. At the same time, Hudson scooted down the bed until she was wedged in on my other side.\n\n\"Here is the itinerary I followed,\" she began.\n\n\"Okay...good,\" I nodded. I would have paid more attention except Hudson touched my jaw and pulled my head away from Brigitte and my lips into hers.\n\n\"My interview...maybe I should...\" Brigitte stuttered, then fell totally quiet when I rested a hand on her thigh right above the knee.\n\nHudson and I kept making out, even after she pushed me back on the bed and hovered over me. I kept a hand resting on Brigitte's hip and I felt her shift so she was closer to facing the two of us. \n\n\"Keep him busy,\" Hudson suddenly told Brigitte as she pulled up and away and began taking her shirt off. She looked back and forth between me and Lane for three seconds before leaning in on me.\n\n\"Are you okay with this?\" she said in a throaty growl. I figured less was more so I simply nodded. She started kissing me tentatively so I ran my hand through her hair and pulled her closer. Her position was ungainly so I figured she'd turn on her side and lay beside me. Instead, she vaulted me and straddled my hips.\n\n\"Are you really sure you are okay with this?\" she panted.\n\n\"If you are asking me if I want to have sex with you, then yes, I have been fantasizing about having sex with you since I first saw you, Brigitte.\" Not really the truth, but she did have a nice, firm, athletic body and I did want to know it better. On my tombstone I want these words transcribed: He was just curious.\n\n\"Thank God,\" she confessed, as her eyes lit up with passion, \"because I haven't had sex in nine months and watching you for the past hour and a half has been murder.\" \n\n\"Are you going to make love to him with your clothes on?\" Hudson teased Brigitte.\n\n\"Oh, right,\" Brigitte admitted. She rolled off toward Hudson and began hiking up her skirt and working down her pantyhose and panties.\n\n\"Don't go anywhere,\" she demanded of me.\n\n\"This is my room; I'm hardly going to make a run for the door,\" I joked back. I pulled off my towel, rolled onto my side, and returned to kissing Brigitte. Every time she revealed a new portion of her body, I dove on it, tasting, kissing, and nibbling every inch.\n\nHudson finished getting undressed first despite Brigitte's frantic efforts. She was content to watch me and the new lawyer go at it. When Brigitte finished stripping she pulled me on top of her with her legs pinning my hips to her. I reached between her legs and stroked her kitty.",
        "\"Is there anything you want me to do first?\" I questioned her with a husky tone.\n\nShe let me rub my fingers over her pussy several times before she nodded vigorously.\n\n\"Scoot to the top of the bed,\" I requested. Brigitte crab-walked to the head of the bed while Hudson let her move past, then shot me a 'clever boy' look. I crawled forth on all fours between Brigitte's legs and gave her a famished look before lowering my lips to her muff.\n\n\"Mmmm,\" she moaned as I rested my upper lip against her clit while I inserted my tongue deep into her liquid folds, already dripping with her need. I worked her over for over a minute before I noted Hudson poised right above my head. I parted Brigitte's legs farther apart and began kissing down her thighs toward the underside of her knees.\n\n\"Noooo...\" Brigitte pleaded.\n\n\"Close your eyes and concentrate on my lips,\" I instructed her. When she did so, I exchanged another quick look to Hudson, then went lower on Brigitte's thighs. Hudson's arms straddled Brigitte's body and she lowered her face onto Brigitte's cunt.\n\n\"Yeah,\" Brigitte purred, as Hudson slowly sucked on her clit. We kept up the pressure on our latest friend for several minutes before she finally clued in that there were two sets of lips engaging her body's erogenous zones.\n\n\"Ms. Lane...Hudson, I don't think...ooohhh...\" Brigitte's protest was stifled by Hudson's vigorous suction of her clit.\n\nI gave Ms. Messier about fifteen seconds to decide whether or not she wanted to fight Hudson off but when her hands quested down to gently hold Hudson's head in place, I was sure we were okay. I moved outside of Brigitte's legs and slowly forced her onto her side. Hudson responded expertly and soon I was kissing her butt cheeks and Hudson was lapping her cunt.\n\nHudson was tuning up her pussy while I teased and penetrated her anus with the occasional sojourn lower so that Hudson and I could kiss between her legs. That intensified Brigitte's arousal and within a minute, she began trembling.\n\n\"You two...are incredible,\" she gasped out desperately. \"I'm going...going to cum!\"\n\nShe bucked a few times, then went off.\n\n\"Yes...yes, yes, yes, Yes, YES!\" she growled. Brigitte wasn't a screamer but her orgasm carried a subsonic undercurrent that made the skin tingle and the blood pump faster.  As she came down we positioned ourselves farther up Brigitte's body, sandwiching her between us.\n\n\"How do you want to handle this?\" Hudson threw out there.\n\n\"I still need a stiff, hard dick,\" Brigitte pleaded.\n\n\"Okay,\" Hudson grinned wickedly. \"Brigitte, we will '69' with you on top and Zane will mount you doggy style.\"\n\n\"I'm not really into girls...sorry,\" Brigitte apologized.\n\n\"You don't have to do anything to me,\" Hudson soothed her\" (LIAR!) \"but I want another shot at your clit while Zane bangs you.\" Brigitte gulped, then nodded, and the ladies positioned themselves quickly enough.\n\nSeveral things ensued, primarily the exposure of Hudson Lane as a persistent witch who usually gets her way. Just as important, Brigitte isn't a 'slammer', she's a 'slow stroke' kind of girl. She likes the feel of a strong rod slowly pushing in and out of her as it rubs against her vaginal walls. She's not about friction but sensitivity.\n\nAnother little trick was, every fifth stroke into Brigitte, Hudson would pull me out and insert nearly two-thirds of my meat down her throat, then reinsert me back into Brigitte, which is pretty freaking Awesome. That last bit of Ms. Lane's plan was a combination of stamina, curiosity, and lustful arousal.\n\nFor the first minute or so, Brigitte kept her head up and avoided looking down at Hudson's inviting spread. Hudson would ungulate her hips and moan occasionally but wouldn't play with herself. Eventually, Brigitte was drawn to look at Hudson's glistening lips and finally touch them. A few cautious, coaxing strokes turned into a finger dipping in and an excited squeal from Hudson.\n\nBrigitte took the encouragement for what it was and began to seriously work Hudson's lips over with the first and third fingers while finger-fucking with the middle. Hudson hungrily sought out more attention and before I knew it, Brigitte had lowered her lips to Lane's engorged clitoris. To remind Lane she wasn't getting away with murder, I reached under Brigitte and tortured Hudson's nipples with a vengeance.\n\nMaybe that wasn't the best way to teach Hudson a lesson because she began exploding all over the place seconds later \u2013 it is that whole seduction thing, no doubt. That left me with nearly a minute to concentrate solely on Brigitte and I did so by leaning over her body, reaching around and massaging each breast lovingly, from tender flesh to rigid nipple.\n\nHer climax had the unintended consequence of Brigitte biting Lane on the inner thigh hard enough to leave visible teeth marks and elicit a loud squeal from Hudson. Brigitte tumbled to the side in a jumble of arms and legs with Hudson. I crashed backwards, sprawling over the foot of my bed.\n\nI lay there, exhausted, wasted, broken, and spent physically, emotionally, and spiritually. Lane appeared like some hazy spirit over me and smiled.\n\n\"Now it is my turn,\" she demanded.\n\nRio loves me. I'm sure if I begged her to put a knife through my heart she would do it. I put that suggestion on my 'To Do' list."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "spanking",
        "group sex",
        "policewoman",
        "cunniligus",
        "lawyer",
        "lesbian"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-12"
}