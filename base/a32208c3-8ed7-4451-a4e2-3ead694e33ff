{
    "title": "The Big Tits Club Ch. 27-28",
    "pages": [
        "-- CHAPTER 27: Safe --\n\n****\n\n\"Ask Matty. He knows,\" Mari sobbed as she curled back into a ball and buried her head beneath my pillow. Soft crying noises, while muffled, were still audible. She was otherwise fairly calm now, a drastic improvement from the way things had been a while ago. But it had taken us ten minutes just to get to this point.\n\nAt first, Mari had gone insane, thrashing out at both me AND Belle until we just backed five feet away from her and gave her space. Her heart had suddenly started racing -- I could feel it pounding both beneath my chest and pulsing from her core as her colon clamped down around my imbedded cock, making it difficult for me to even pull out. The longer it took me to withdraw, the more hysterical she became.\n\nMari had been sweating like crazy, and not just from our recent athletic shagging. Her eyes were wild, and she squeezed her own head between her hands while screaming at the top of her lungs. I was surprised Mother didn't come banging down the door. I had to believe she wasn't home yet.\n\nBut just as suddenly as she'd started screaming, Mari stopped. She then curled into a fetal position, sobbing inconsolably but refusing to let either of us come near her. Finally she went quiet but catatonic, unresponsive to any of our concerned questions. It was only when Belle grabbed my spare fleece blanket, wrapped it around Mari's naked body, tucked her in, and kissed her shoulder tenderly did Mari finally open her eyes and look at us with any semblance of reasonable awareness.\n\nStill, Mari quickly turned away and started crying again.\n\nConscious of our nudity and recognizing that the mood wasn't exactly conducive to remaining so, I grabbed a pair of gym shorts and a t-shirt for Belle. So clad, Belle sat back down on the bed and began stroking Mari's back through the blanket, just to sort of let her know she was there. I sat down in the desk chair.\n\nEventually, though, Mari finally opened her eyes and looked at us.\n\nBelle leaned over and looked down at her best friend with obvious concern. \"Hey... you okay?\"\n\nHeartbroken, Mari shook her head in the negative.\n\n\"What happened? I... please... help us understand.\"\n\n\"Ask Matty. He knows,\" Mari sobbed as she curled back into a ball and buried her head beneath my pillow. Soft crying noises, while muffled, were still audible.\n\nBelle's eyes instantly went to me. At first, she frowned. How could -I- possibly know anything SHE didn't already know. She was Mari's BFF, wasn't she? But Belle's jealous curiosity lasted in her gaze for only a second, replaced by genuine concern and a sincere interest in doing whatever she needed to make Mari feel better.\n\nSeated in the desk chair, I took a deep breath and began, \"I don't know all the details. But... when all of us were younger--\"\n\nMari started moaning, held the pillow tighter over her head, and started shuddering on the bed. Belle quickly went back to her, and Mari poked her head out long enough to mumble, \"I don't wanna hear it again.\"\n\n\"Okay, okay. We don't have to talk about it,\" Belle assured her.\n\n\"No,\" Mari disagreed. But a moment later, she took a deep, shuddering breath, and said, \"Just get it over with. You need to know.\"\n\nBelle looked up at me and I winced, torn between giving Belle the information she needed and further traumatizing Mari. Jerking a thumb toward the door, I offered, \"Maybe we should go outside?\"\n\nMari's hand shot out and gripped Belle's wrist tight. Belle glanced up at me and muttered, \"Guess that answers that.\"\n\nGrimacing, I said gently to Mari, \"I'll keep it brief.\"\n\nMari swallowed thickly and nodded, staring at me through tear-streaked eyes.\n\n\"Long story short: Mari wasn't actually a virgin when we had our date last month,\" I explained.\n\nBelle's eyes got BIG as she recognized the implications.\n\nI didn't feel the need to elaborate. \"He was an uncle of sorts. Mari grew up with him. Trusted him. She started sprouting... The guy groomed her and... yeah...\"\n\nMari mumbled quietly, \"He said I had a body built for sex. He kept saying it, actually. Blamed me for being so irresistible he couldn't control himself.\"\n\nI winced, now realizing where everything had gone wrong; those had been MY words less than ten minutes ago. I took a deep breath, and when it became clear Mari wasn't going to be any more forthcoming, I looked at Belle and finished, \"Mari told her dad she'd been raped, but rather than call the cops he just made the guy leave the country. She hasn't seen him since. That's basically all I've got.\"\n\nBelle pondered that and stroked Mari's cheek. \"That's why you were always covering up your body when I told you to be proud of your growing curves. I was so jealous of you, and you wanted to make them go away.\"\n\nMari sniffled, closed her eyes, and tried to hide under the pillow again. Belle looked up at me.\n\nI exhaled slowly. \"She started eating a ton, gained a lot of weight in eighth grade. I mean, the signs were there if we'd known to look for them.\"\n\nShaking her head, Belle stroked Mari's cheek again and sighed, \"I wish you'd have told me. I mean, I get why you didn't, but I could've helped you through that period. It certainly explains why you never took any interest in boys.\"\n\nMari shook her head. \"Always scared of boys. Didn't feel safe. Not... well... not until Matty.\" Raising her gaze to my face, she reached a hand out towards me.\n\nI quickly slid off the desk chair and knelt on the floor beside the bed. Then, I took Mari's hand in between both of my own and kissed it.\n\n\"I've always felt safe with you,\" she murmured with a small smile.\n\n\"And I'd like to make sure you keep feeling that way,\" I replied warmly.\n\nShe reached her other hand out to me, and I elevated so she could wrap both arms around my neck. My Latina angel drew me close so we could tenderly kiss, just a small one, and then she disengaged so we could hug tightly instead.\n\n\"Thank you, Matty,\" she whimpered softly. \"Thank you for making me feel safe.\"\n\nI rubbed her back, replying warmly, \"Always, Angel. Always.\"\n\n****\n\nSomething tickled my balls, and with a start, I jerked awake.\n\n\"Mmph!\" somebody grunted, and as I sat up, I realized I'd just shoved my dick an inch into a girl's throat. She took it like a trouper, gagging only slightly and keeping her head down, breathing heavily through her nose until I pulled back. But instead of letting my dick withdraw from her throat, she followed me down, keeping her plump lips wrapped tightly around the very base of my shaft.\n\nMy eyes fluttered for a brief second, giving me just enough time to see the dark-haired head staying at full depth in my lap. Mari looked up at me, her warm, liquid eyes bright and welcoming in their gaze as she recognized I'd awakened. And she stopped to smile around a mouthful of meat before pulling all the way up and popping off the top.\n\n\"Good morning,\" my luscious Latina angel greeted genially. Morning sunlight from the window bathed her in a golden glow. While it would be fair to say I had always thought of Naimh as the most gorgeous thing I'd ever seen, Mari was certainly a beautiful young woman in her own right, most especially when she smiled. It just seemed like there had been so few genuine smiles over the years that I'd associated her reserved, almost nervous expression as the default image of Mari in my mind. But she was smiling now.\n\n\"Mmm, good morning,\" I replied before glancing down at my right shoulder, where Mari's best friend was still tucked into the crook of my arm although facing away, her cheek pillowed on my bicep. Despite my sudden jerk, my baby Belle remained fast asleep.\n\nIn the meantime, Mari took one more lengthy lick down the full length of my cock from balls to tip, and then she crawled up my body, straddled my hips, and elevated my cock. She had just enough room to do so without disturbing Belle's slumber, although from what I anticipated she'd start doing, I didn't know how much longer that might last.\n\nMy eyelids fluttered as I absorbed the pleasure of Mari's sweet, buttery pussy sinking down my erect flagpole. A good night's sleep with my warm body wrapped around her from behind had apparently done wonders for her sense of peace, any traces of last night's visit back to memories of an old trauma now gone.\n\nFor now.\n\nEven as I watched this beautiful young woman ride my cock, the morning light bathing her voluptuous, naked body before me, I couldn't help but wonder what aftereffects there may be from last night's incident. Clearly, despite the everyday fa\u00e7ade she showed the world, she'd never fully recovered from what had happened to her. Belle had asked about going to counseling, maybe talking to the school psychologist, but Mari had been adamant about not doing any of that. She insisted she was fine, which of course we all knew she really wasn't. I'd suggested similar courses of action when I first found out the night she gave me her virginity, and hadn't been inclined to push her when she resisted. Last night, Belle didn't really get any traction either and agreed to let it go, but from the look in my little pixie's eyes, I knew she wasn't going to let the matter slide forever.\n\nMeanwhile, I tried to enjoy the moment for what it was while keeping my concern for Mari in the back of my mind. I understood how important it was that she feel both safe and loved with me, and I intended to ensure she continued to feel that way. So I gave her my full attention, held her hips, slid my hands up to her big breasts, pulled her down so that I could smother my face in her tits, and then tilted my chin so we could make out.\n\nOkay, I did a lot of that stuff for myself, too.\n\nMari was getting close to climax when Belle woke up. One moment, she was zonked out and drooling a little on my bicep. The next moment, I glanced down to find that she'd rolled over and was watching her bestie riding up and down my pole.\n\n\"Morning, B,\" I greeted merrily and drew the back of her head to mine for a sweet kiss.\n\nMy Annabelle made love to me with her mouth, her mind still coming back from Dreamland and quite happy to stay there a little longer as our love for each other fed the energy of our kiss. But eventually she pulled back, sighed a happy sigh, and looked up at Mari.\n\n\"Morning, B,\" Mari chirped, echoing my greeting. The she bent over and started kissing her best friend with just as much affection.\n\n\"Mmm, I wish I could wake up like this EVERY day,\" Belle yearned while stretching her arms upward and outward, yawning immediately after.\n\n\"Me, too. If only,\" Mari sighed regretfully. \"But at least we get to wake up this way today. And now that you're finally awake, I can finally do what I've been thinking about all morning.\"\n\nBelle arched an eyebrow. \"What's that?\"\n\n\"This.\" Raising herself up on her knees, Mari pulled off my dick with a wet squish but reached down to hold my dick with her right hand. She pivoted her hips ever so slightly and started sitting back down, only this time I could feel my cockhead pushing into her backdoor instead.\n\n\"Holy crap, Mari,\" I grunted. \"You're not lubed.\"\n\n\"Lubed enough apparently,\" Mari groaned as she took the first three inches right away. \"Oh my lord... I can take it.\"\n\n\"Maybe I should push into you from behind.\"\n\n\"Everybody has anal sex from behind. I wanna watch your face changing as I take every inch of you deep inside me. Body built for sex, right?\"\n\nI winced at the phrase. \"I thought you'd never want to hear those words again. Especially after last night.\"\n\n\"I wanna hear you say them, actually,\" Mari insisted. \"I feel safe with you, and I wanna associate those words with your amazement at how I'm such a natural lover for you. Let's change the meaning, huh? I don't want my only anal memory to be of freaking out at a phrase you meant as a compliment. That's why I woke up this morning knowing I had to do this right away. Let's change the memory. C'mon, Matty. Tell me my body's built for sex. Tell me how incredible my ass feels around you.\"\n\nI blinked twice before catching on. \"Your body's built for sex, Angel. I can't believe how easily you're doing this. You've been such a good cocksucker for me. I LOVE the way you can just bang me all the way down my throat at a moment's notice. I ADORE how you're always ready to wrap those big beautiful titties around my throbbing cock. Your fat nipples are made for sucking and biting. Your lush ass makes for such a comfortable ride. And now, holy FUCK, Mari! You took my entire dick up your asshole without batting an eyelash! Now THAT'S a body built for sex!\"\n\nMari batted her eyelashes quite a bit now, grinning proudly as she began to hump her body up and down, really fucking me with her tight anal chute while I used my hands on her hips to help hammer her body against my crotch.\n\nBelle joined in while rubbing herself. \"You two are so fucking hot together. We should really do this more often. I wanna play with myself watching my beautiful best friend fucking the man I love. I wanna stare at you pounding your sweet asshole on his big fucking dick, wishing he was in my asshole instead. I'm getting there. I'm working my way up to the big plugs. But in the meantime I'm gonna have to live vicariously through my awesome and amazing bestie with the body built for sex. You're fucking incredible, Mari! You may still give Neevie a run for her money as the Anal Queen of the BTC!\"\n\n\"Ungh! Ungh! OHHHHHHH!!!!\" Mari slammed down one final time, threw her head back, and screamed as she came, Belle's dirty language amplifying her experience.\n\n\"Nngh, nngh, oh Angel, your ass is making me... NNNGGGGGHHAAAAAAHHHH!!!!\" I grunted in reply as her tightly clenching colon rippled and massaged around my dick. From the morning blowjob to the long and slow cowgirl ride and now finally the anal finish, I was ready to blow. And when Mari's orgasm sent her inner muscles into spastic overload, they set me off as well so that I immediately began pumping out every drop of sperm my balls had manufactured overnight.\n\nOver and over I fired away, holding Mari's hips tight to keep her body pinned down and my dick as deep as it would ever go into her bowels as I filled up her rectum with a fresh load of spunk. Belle had popped upright, spooning herself behind Mari's body to reach around, maul her BFF's tits, and kiss her open mouth.\n\nOnce Mari and I finally stopped screaming, Belle pushed Mari over so that my face was once again smothered in titflesh. I didn't know why until two seconds later when I felt Mari get physically shoved forward and off my dick. And the way Mari suddenly tensed up on top of me in surprise before relaxing and giggling told me exactly what was going on even before I heard the sounds of Belle noisily slurping my jizz out of her best friend's gaping asshole.\n\nLaughing, I managed to free my face from Mari's boobs and take a deep breath. \"We REALLY need to do this more often.\"\n\n****\n\nMari and I took a shower to clean ourselves after our morning anal adventure. I sprouted a fresh erection and had fun hot-dogging her booty buns from behind, but Mari told me to save it for Sam. That didn't stop me from sliding it into her pussy for \"just a little bit\" and fucking her against the wall until she managed to rub her clit to a small orgasm, but I indeed saved it.\n\nAfterwards, the three of us got dressed and headed downstairs. Mother had already made brunch, and to our surprise we found that she wasn't alone. Sam sat on a stool at the kitchen island, clad in a fashionable sports bra that included a dozen crisscrossing straps on the back and cutouts that exposed quite a bit of her massive tits in the front, paired with matching workout pants that looked like they'd been spray-painted on.\n\n\"Helloooo, ladies! Sounded like somebody had a pleasant morning,\" she greeted salaciously.\n\n\"Good morning, Sam! This is a surprise,\" Belle chirped with a grin.\n\nMari looked confused and glanced at the clock. \"I thought you were picking him up at ten?\"\n\nThe platinum-blonde beauty shrugged. \"I told Beverly I'd be stopping by and she invited me to come over early and chat over breakfast. Don't mind me though if you're not quite done with him yet.\"\n\n\"Oh no, it's fine. The more the merrier!\" Mari said brightly, and she genuinely meant it. She really was so beautiful when she smiled.\n\n\"Mariangel, nice to see you this morning,\" Mother greeted pleasantly. \"Will you and Belle be joining us? I always make extra anticipating Matty's appetite. The boy eats like a horse.\"\n\nSam grinned. \"There's a different adjective I think of when associating Matty with a horse.\"\n\nMother smirked, immediately getting the allusion. I rubbed my forehead at the mere thought of Mother understanding that particular bit of innuendo.\n\nBelle saved it by replying, \"Yes, actually. We'd love to join.\"\n\nThe five of us moved to the dining table instead of remaining at the kitchen island so we'd have more space. I went to get Belle and Mari drinks, but Mother shooed me out of her kitchen and told me to pay attention to 'my girls'. She came over a minute later with a carton of orange juice and glasses while the rest of us had already moved the food into the middle of the table. And then to my absolute horror, Belle, Mari, and Sam got into a discussion about our evening's sexual activities right there at the table with my mother present.\n\n\"So then Matty carries Belle into the house, tosses a few towels across the couch, and tries to go down on her. But she's SUPER antsy and yelling, 'NOW, MATTY, NOW!' So he finally gives in and pushes right into her without any warmup. I think her pussy is finally getting used to stretching around his fat cock,\" Mari explained while Sam leaned forward, arms folded atop the dining table, enraptured by the story.\n\nI studiously stared at my food and tried desperately to NOT notice the way Mother also leaned forward, listening intently.\n\n\"Anyway, she came super-duper fast she was so revved up,\" Mari continued. \"But after that, Belle got this curious look in her eyes and asked, 'Hey what did you do with Neevie and Zofi last Sunday? We wanna try outfucking them.'\"\n\nSam laughed. \"You know I love a good competition.\"\n\n\"Yes, we know,\" Belle giggled.\n\n\"Well Matty looked all embarrassed for a bit and said, 'They did a lot of girl-on-girl stuff.' And I told him Belle and I were actually really interested in that stuff too. So he had us give him a tandem blowjob where we were making out with each other with his cock between us. I turned around and rode him facing out so that Belle could lick my pussy at the same time. He finally came inside me, and you already know what Matty's Little Cumslut did with that.\"\n\nSam snorted. \"Yeah, I know.\"\n\n\"Oooh, and then he told us Neevie and Zofi started tribbing. And since the first time we did it at the beginning of the night turned out so awesome, we were THRILLED to do it again.\"\n\nSam shook her head slowly. \"You two have really surprised me. I mean, I could already tell that Belle was starting to find other girls attractive even before we were having sex, and once she started sucking creampies I knew it was only a matter of time before she went full lesbo during these little orgies. But you... I never thought shy little Mariangel had it in her.\"\n\nMari beamed proudly. \"Matty brings out the best in me.\"\n\nSam actually deflated a little, glanced at me sideways, and sighed. \"Yeah, I know.\" But her moment of ennui passed quickly, and she sat up straight. \"What happened then?\"\n\nI already knew where this story was going, so I focused on my plate, wolfed up the rest of the food, and started doing the dishes. Mari kept going and going like a little chatterbox in the background.\n\nI was in the middle of cleaning the non-stick pan when Sam slammed the table and exclaimed, \"He did NOT!\"\n\nI turned around in surprise, alert for trouble, but Mari was just laughing like a hyena. \"Total accident! I mean, he'd managed to pull all the way out and slam it right back in so many times, I figured he had it down cold. But something must've gone wrong... or very, very right... because he just went all the way up my ass on the first try.\"",
        "\"No lube or anything?\"\n\n\"Nuh-uh. Just boom, pop, ungh, and the next thing I knew he'd collapsed on top of me and he was balls deep up my butt!\" Mari was crying she was laughing so hard.\n\n\"Good lord, girlfriend. First the deep-throating, and now this? You've got a body built for sex.\"\n\nBelle jerked her head around and looked at me. I was staring straight at Belle, too, but only for a second before both of our attentions returned to Mari, who had immediately stopped laughing.\n\nBut only for a moment. She grinned, thrust her chin out, and said proudly, \"Apparently I do. Matty said the same thing. I take it as quite the compliment.\"\n\n\"It is,\" Sam enthused with a smile, but it was a weak smile, and even from across the kitchen I could see the pained look on her face. \"I used to think I was this sex goddess, but over the last couple of months you've put me to shame.\"\n\nMari suddenly looked very maternal, and she reached out to put her hand on top of Sam's forearm. \"Hey, don't be like that. You ARE a sex goddess. You're my idol when it comes to this stuff, don't you know that?\"\n\nSam frowned. \"What? Your idol?\"\n\n\"You've always been so confident, so poised, so in charge and in command. You have no idea how many times I've wished I could be more like you,\" Mari stated seriously before taking a long, deep breath. \"You ARE a sex goddess, and I'm sorry if I upset you in any way just now. I know you're competitive, but I never meant to make you feel bad.\"\n\n\"No, it's not you. I really am happy for you. My mood right now has nothing to do with you or Belle or anything. I'm fine.\"\n\n\"Samantha...\" Mother said gently, her tone and expression telling me she knew a lot more about what was going on than anyone else in the room.\n\n\"It's fine. Really. I'm fine,\" Sam waved dismissively before turning around in her seat. \"Hey, Matty, ready to go?\"\n\nI blinked. \"Where are we going?\"\n\n\"To get you some cardio.\"\n\nBelle snorted. \"Matty gets plenty of cardio.\"\n\n\"Different kind of cardio.\" Sam smirked. \"But hopefully your recent spike in training has helped your endurance. You're already dressed fine. Just grab your running shoes and let's go.\"\n\nI blinked. \"Wait, we're seriously going running? Each of you girls gets one-on-one time with me this weekend and your choice is to go running?\"\n\n\"What? I always go running on Sunday mornings. Worried you can't keep up?\" Her expression was smug and there was a challenge in her voice.\n\n\"Uh, no, I'm pretty sure I'll crush it.\"\n\nSam grinned. \"We'll see about that.\"\n\n****\n\nOur suburban neighborhood had put an emphasis on green space during development which resulted in some pretty good trails - both dirt for running and asphalt for biking - that wound around parks, alongside creeks, and between different housing tracts. Sam got me to chug a glass of water before we got going while I complained, \"Aren't people supposed to wait an hour after eating before exercise?\"\n\n\"You'll be fine. Stop whining,\" she scolded like a parent.\n\nAfter pausing to give Belle and Mari quick pecks, I obediently followed Sam out the front door, and together we walked at a brisk pace over to the nearest trail we could access two short blocks away. I knew from past experience that it ran for half a mile between our housing tract and the neighboring one, and then connected to an asphalt trail that followed the creek before hitting a big city park with a lake in the middle. If we made it all the way to the lake, went around the lake, and came back, it would be about five miles, most of that on dirt trail.\n\nSam was silent, wearing her \"game face\". Like I said, she was a driven young woman, and when she set her mind to something, nothing would get in her way. I didn't feel particularly competitive but understood that my role this morning was to keep up with her. And hey, maybe she was planning to find some quiet place behind some bushes and get my \"outdoor\" cherry or perhaps a blowjob just like in Tahoe (without me freezing my balls off). Although nervous at the idea of getting caught, I wasn't so nervous as to seriously consider turning her down.\n\nSo with that in mind, once Sam started up I simply followed her pace and ran alongside her.\n\nRunning between the two housing tracts, we had the place to ourselves and were able to run side-by-side. But once we hit the creek, there was significantly more two-way traffic from both bicyclists and other runners. I wound up tucking in right behind Sam, which turned out to be quite an improvement from my point of view.\n\nPeople considered these trails to be fairly scenic. There was a lot of grass between the housing tracts, following the creek offered a glimpse of nature, and the park and its lake with ducks and geese were even more picturesque. But none of them could compare to the sight of Sam's ass squished into skintight spandex.\n\nI found myself calling up memories of the good times I'd had with that \"arse\". I remembered fondling the globes while she sat in my lap, dry humping herself against my erection out on Matty's Chair. I remembered the sight of her wet body bent over in front of me beneath the spray the first time we had shower sex. I remembered the sight of her anus gaping wide open and not closing back up after I'd just finished slamming my dick through her backdoor over and over again.\n\nIt occurred to me that I hadn't sodomized that ass in a long time now, since the little orgy at the end of winter break. Not that I had much to complain about having violated Naimh's crinkled butthole nearly every chance we could get, and Mari's twice in the past few hours. But that just gave me incentive to keep up with Sam and fantasize about revisiting that beautiful bubble butt soon. Maybe even out here behind some bushes.\n\nIt turned out that I needed the incentive. Fucking as often as I did had certainly improved my cardiovascular health, but it didn't help quite so much with my leg muscle endurance. By the time we got to the lake my feet were starting to feel like lead weights, and even though we now had enough room for me to run alongside her, I found myself unable to actually keep up.\n\nSam would glance back at me every now and again, just to make sure I was still there. If I was dragging, she would slow her pace a bit so I could close the gap. The closer her ass, the harder I ran. But if she ever looked back and saw me immediately behind her, she picked up the pace again, and I seriously struggled to stay with her.\n\nIn all fairness, she had been consistently running five miles or more every weekend for who knows how long. This would be the first time I'd tried to run five miles since... Actually, I'm not sure I'd ever tried to run five miles before. I almost didn't make it home. By that point, I didn't even care that we'd never stopped to have outdoor sex. I was too worried about having a heart attack instead.\n\nMother opened the front door for Sam when she rang the bell. I was still staggering up the driveway, soaking wet and absolutely exhausted. Meanwhile, Sam stood on the front porch looking fresh as a daisy. Sure, she was sweaty and flushed and wearing a smile just as wide as if I'd given her an amazing orgasm, but she didn't even look winded.\n\n\"W... water... water...\" I gasped as I stumbled through the front door right after her, still chasing that ass but finding it forever out of reach.\n\nMother clucked her tongue, flashed me a smirk, and headed into the kitchen. I waited right where I was, bent over at the waist with my hands on my knees gasping for oxygen.\n\nArms folded across her chest, Sam smiled at me and said sardonically, \"Yeah, you totally crushed that.\"\n\n\"I... I shoulda worn a different shirt,\" I wheezed. There wasn't a dry spot anywhere on my t-shirt, which clung to me like a second skin.\n\n\"Yeah, uh-huh. Your shirt was the source of all your troubles,\" she remarked in the same tone.\n\n\"Gimme a break. I don't think I've ever run five miles before.\"\n\nSam smiled broadly. \"Well if that's true, you actually didn't do that bad. Surprised you didn't crap out halfway.\"\n\nI managed a winning smile as I looked up at her. \"You're beautiful enough that I'd have chased you anywhere.\"\n\nSam looked surprised at the compliment, and her skin flushed more than that run had made her do. A second later she sniffed and turned away, taking two steps toward the hallway before spinning back. And in an obviously annoyed tone, she thrust out a hand palm-up at me and complained, \"Now why did you have to go and say that?\"\n\nI frowned, confused. \"Huh?\"\n\nShe sighed and shook her head ruefully. \"I was just starting to get into my head that you were just another pathetic little male who couldn't keep up with me anyway, which started to make me feel better about the power dynamic between us, and then you had to go and give me a compliment like THAT and now I'm...\"\n\nHer voice trailed off as she clenched her eyes shut, turned, and walked away.\n\n\"Sam?\" I gasped, reaching toward her for just a second before having to put my hand back down on my knee.\n\nMother arrived just then, holding a sports bottle of water in her hands. She frowned at me and asked, \"What did you just say to her?\"\n\nStill hunched over, I wheezed, \"I dunno. I told her she was so beautiful it motivated me to keep running after her.\"\n\nMother furrowed her eyebrows and looked thoughtful for a moment. Then she handed me the water bottle and went after Sam.\n\nI took a big swig of water and looked around. Belle and Mari had clearly left already, and with Mother going after Sam, I figured I might as well try to get cleaned up. I headed upstairs, stripped out of my sweaty clothes, and stumbled into the shower. It was only a little after 10am, and I wasn't due to head over to Zofi's until 1pm. As I braced my hands against the shower wall and let ice-cold water hit the top of my head, I tried to catch my breath and ponder my options.\n\nMaybe I should've gone after Sam and coaxed her into the shower with me. Cleaning up together was always fun. Maybe she'd be waiting in my bed when I got out, and we could get filthy all over again. Whatever the case, I knew I'd have to call up my energy reserves for the challenge that still lay ahead. Sam was the kind of girl who demanded my very best, and even if my legs were shot, I would have to use my other skills to ensure I properly satisfied her.\n\nIt never occurred to me that Sam would leave while I was showering, and yet that's exactly what happened in the end. I emerged to find an empty bedroom, got dressed, and headed back downstairs.\n\nMother looked up from her spot in the living room when I arrived. She gave me an apologetic look and told me, \"She'll see you tomorrow at school.\"\n\n****\n\nI was walking a little slowly as I trudged up the sidewalk to front door of my fourth and final \"date\" of the weekend. Taking a deep breath, I reminded myself to be \"in love\" with Zofi before ringing the doorbell. But when the door opened, instead of staring at the exquisitely beautiful face of my girlfriend in front of me, I found myself staring at the equally exquisitely beautiful face of her mother.\n\n\"Uh, good afternoon, Missus Zee,\" I greeted reflexively, mentally castigating myself for leading with \"uh\" and then not saying her entire last name.\n\nBut despite my brief worry over not making a good enough first impression, Zofi's mom actually smiled at me and gestured for me to enter. \"Hello, Matthew. Come on in. They're in front of the TV already,\" she stated in a thick accent.\n\nI nodded and walked a little gingerly down the hallway, my legs already stiffening up from this morning's exertion. Zofi brightened as soon as she saw me, exclaiming gleefully, \"Matty!\" She ran up and gave me a fierce hug, followed by grabbing my head and adding a fierce kiss.\n\nI held the kiss for just a few seconds before breaking it and looking rather bashfully at her dad, who sat on the couch wearing a Joe Montana #16 jersey.\n\nHe did not appear to be upset, but rather gestured at my jersey and said admiringly, \"John Taylor! I am impressed.\"\n\nI picked at my #82 jersey and smiled. \"Everybody has Jerry Rice jerseys, no offense,\" I commented while gesturing to Zofi's #80 jersey beside me. \"I tend to appreciate the teammates who otherwise get overlooked.\"\n\n\"A noble endeavor,\" he said appreciatively. \"Come, sit! Game is about to start.\"\n\nZofi wrapped her arm around mine. \"Sit with me.\" Her blue eyes sparkled.\n\nI smiled and rubbed her arm. \"Anytime.\"\n\n****\n\nThe game itself was unimportant, as were the two teams playing. I mean yeah, they were playing to make it into the Super Bowl next Sunday, but I was far more interested in watching the interaction between Zofi and her dad.\n\nIt was clear he had taught her most everything he knew. Even now, when she was already a pretty knowledgeable fan, he would still automatically get into teaching mode pointing out how the offense would set up in a certain formation in order to make the defense adjust, or explain that the weakside linebacker was showing a blitz based on his alignment. I watched the way he beamed with pride when the offense ran a reverse three seconds AFTER Zofi had already predicted it.\n\nIn a way, their dynamic reminded me of the way Alice and I played video games or talked comic books together. That's not to say that Zofi couldn't have become a football fan on her own eventually, but it seemed to me that the core reason she did become a die-hard Niners fan was because it was the main way she could bond with her father. They'd built their relationship around a shared love of the sport, much in the way my relationship with Alice had become based on gaming.\n\nDespite my supposed purpose of my presence being to help \"prove\" Zofi had a boyfriend, I was pretty much an afterthought. Zofi and her dad were quite seriously into the game, and I was sort of the bystander who occasionally made a comment or got asked a question every twenty minutes or so when Zofi realized she wasn't paying me much attention. I wasn't the only one who noticed, either.\n\nIt was late in the third quarter when I got up to get a refill of my Coke. Zofi's mom was in the kitchen and asked, \"Can I get you something?\"\n\nI held up my empty glass as an answer, and she crossed to the refrigerator to retrieve the 2-liter bottle for me.\n\n\"Don't take it personally,\" she advised while head-nodding into the TV room.\n\n\"Take what personally?\"\n\nShe smiled while handing me the refilled glass. \"Zofia and her father. They have always been like this when the game is on. I am like sliced bread in this house.\"\n\n\"Oh, I don't take it personally at all. She looks so happy. And to think I didn't even know until recently she was such a football fan.\"\n\n\"You did not?\" Mrs. Z looked surprised.\n\nI shook my head. \"I've known Zofi for years, but she had never talked about football before. It was only after we started, uh, dating that it ever came up.\" I certainly didn't want to admit that I'd been in her bedroom twice over winter break without her parents around.\n\n\"Zofi's father started teaching her when she was very small. She has grown up with the game. But it is not a surprise she did not discuss this at school. I do not think many of her friends think about football the way she does.\"\n\n\"They don't,\" I replied with a chuckle, thinking about how the rest of BTC couldn't care less about football. Even Alice didn't really give a crap, although she was at least into basketball and followed the Golden State Warriors. \"But I'm very glad she has been able to bond with her father in this way. To be honest, I wish there had been something like that to help me build a relationship with my parents.\"\n\nZofi's mom frowned as she studied me for a moment. \"When is the last time you saw your father?\"\n\nI popped my eyebrows and had to think about it. \"Uh, two or three years? I'm not sure.\"\n\n\"If you are not sure, then it has been far too long.\"\n\nI shrugged. \"He stopped being a part of my life long before that. I got used to it.\"\n\n\"Are you close with your mother?\"\n\nI chuckled and shook my head. \"She works all the time and doesn't usually come home until late in the evening. I know she has a boyfriend, but I've never met the guy. I guess you could say I'm pretty independent at this stage of my life. But in all fairness, I've been seeing a lot more of her lately, and I think our relationship has actually been improving.\"\n\n\"I am happy for you. It is important for young people to have a strong relationship with their parents.\"\n\nI nodded. \"I know that what making you and her dad proud of her is very important to Zofi. She values your opinion of her quite a lot.\"\n\nThe older woman's eyebrows went up. \"Really? This is news to me. I feel like everything I say to that girl goes in one ear and out the other.\"\n\nI chuckled. \"Well, at least what she's told me about you suggests she very much wants your approval. Dance, for example, was your passion when you were younger, wasn't it? Don't get me wrong, she enjoys dancing on its own merits. But where having all of this football knowledge makes her dad proud of her, she also knows that excelling at dance gives her something to make you proud of her as well.\"\n\n\"I AM proud of her; she is an excellent dancer. We both know she will not ever make a career of it, as I did not.\" She smiled while gesturing up and down at her own figure, which like Zofi's, was rather too tall and too top-heavy to ever be a contemporary dancer. \"But this does not diminish my pride in her accomplishments.\"\n\nI tried (and failed) not to let my eyes linger on the older woman's curvaceous figure and proud breasts, but quickly schooled my face and brought my gaze back up to her bright blue eyes which seemed to twinkle as she caught me checking her out. Blushing slightly and looking back out to the TV room, I shrugged and said, \"I've never really known what it feels like to have a parent be proud of you. I never cared much what my parents thought of me; that was just the nature of our relationship. Zofi, on the other hand,\" I led, thinking of my own presence here as a fake boyfriend, \"I know she'll go to great lengths in her desire to make you happy... Or at the very least, make you 'not mad'.\"\n\nMrs. Z chuckled at that last part and stood up a little straighter, as if evaluating me in a new light. \"Thank you for saying this. It makes me believe you are a good influence on my daughter.\"\n\nI blushed and tried not to think of all the things I'd done 'to' her daughter that most parents would not approve of. \"You are very kind.\"\n\nShe continued to stare at me in silence, just a little bit too intensely, but just when I started to feel a little unnerved by her gaze, Zofi called from the TV room. \"Matty! They're in the red zone!\"\n\nWith a smile, I saluted Mrs. Z with my glass of Coke and said, \"Thank you.\"\n\n\"Enjoy the rest of the football,\" she replied with a warm smile, and I headed back to finish the game.\n\n****\n\nThe game had been over for less than five minutes when Zofi closed the bedroom door behind her and started leading me over to her bed.\n\n\"Uh, are you allowed to shut the door like that?\" I asked nervously as she sat me down on the side of the mattress and quickly straddled my lap. \"Most parents would NOT be okay with their daughter being in a bedroom with a boy behind a closed door.\"\n\n\"MOST parents aren't worried their daughter is a closet lesbian or secretly hope she's finally lost her virginity,\" Zofi giggled while wrapping her arms around my head and giving me a sweet kiss. Ten seconds later, she pulled her lips off of mine and husked deeply from only an inch away, \"I asked my mom to help me get a birth control prescription.\"\n\nMy eyes flew open WIDE. \"You did what?\"\n\nZofi giggled. \"I'm telling you: she got excited.\"\n\nI arched an eyebrow. \"I thought you said your parents were conservative.\"\n\n\"Conservative in the sense that they're Catholic and believe homosexuality is a sin, they complain about illegal immigration, and are kinda racist if you ask me. But when it comes to premarital sex, mom said she lost her virginity... Well... I'm like... WAY behind.\"",
        "I blinked twice. \"Oh.\"\n\n\"So don't worry about the door. I'm just so happy you're here, doing this for me. I really appreciate it, you know. I'm sure you'd rather be with Neevie or Belle getting your brains fucked out. Instead, you had to sit next to me for the last four hours watching me get all absorbed in the game with my dad. Sorry about that, by the way.\"\n\nI shook my head and nuzzled her nose. \"Don't be. I was happy to see you so happy.\"\n\n\"I was. Sitting with my two favorite men in the world. Now let me say 'thank you' properly.\"\n\nWith that, Zofi pecked my nose quickly and then slinked off the bed so she could kneel on the floor. Along the way, her hands grabbed at my jeans as she fiddled with the zipper and button.\n\n\"Whoa, whoa, your parents are right outside!\"\n\n\"I KNOW. That's the point, remember?\"\n\nI grimaced. \"Please tell me you're not gonna walk out the door with a pool of cum on your tongue just so you can show your mom.\"\n\nZofi frowned and then brightened. \"That's not a bad idea, but no, not gonna do that.\"\n\n\"Zo-fi,\" I warned a little. \"Remember the minivan.\"\n\n\"I do remember the minivan and I swear I'm not doing this trying to prove something to my mom.\" By now she was able to drag my jeans and boxers down to my ankles and start working them off my feet. \"I'm doing this because I want to, alright? You're being such a good boyfriend for me and I genuinely wanna say thank you, alright? Do I need to get my dangling earrings?\"\n\n\"Alright, alright, if you say you really want to. And no, you don't need to get the earrings.\"\n\nZofi beamed at me, an impish twinkle in her bright blue eyes that for some reason reminded me of the look her mom had given me in the kitchen. My dick was only half-hard from worry over Zofi's ulterior motives, but her agile left hand pumping my shaft and her supple lips nibbling on my mushroom head quickly had me growing up to full mast. And within a minute, the exquisitely beautiful brunette was bobbing her head up and down in my lap while I cradled her head and bit my lip to keep from moaning aloud.\n\nThe whole situation was rather surreal, with both of us still dressed in Niners gear. Seriously, I never expected to ever get a blowjob from someone wearing a Jerry Rice jersey. But I didn't hold myself back. Fearful of getting caught, I didn't want to prolong the encounter any more than necessary. Fortunately, the view of such a gorgeous creature of femininity staring up at me with her beautiful blue eyes while lavishing her oral love all over my elongated schlong had me ready to blow in just a few minutes.\n\n\"Zofi... Zofi...\" I moaned, unable to completely keep quiet. \"I'm gonna... gonna... uuuunnnnngggghhh...\"\n\nShe had stopped bobbing her head in order to milk my shaft for my seed with just her left hand. Once I grunted, Zofi stopped pumping and pushed her face down a little deeper around my shaft, gulping as I began to feed her. At the same time, I gripped her head to keep her from backing away as I filled my \"girlfriend's\" sucking mouth with my steaming semen.\n\nShe swallowed every drop and even gaped her mouth at the end to show there wasn't anything left on her tongue. With a grin, the lissome brunette helped me pull my pants back up and then climbed onto the bed beside me so we could cuddle while sitting up against the wall.\n\n\"That was really nice,\" I complimented her. \"You're getting better.\"\n\nZofi chuckled. \"I've no interest in becoming the BJ Queen of the BTC, but thank you for the compliment.\"\n\n\"Want me to return the favor?\"\n\n\"Nuh-uh,\" she replied with a shake of her head, resting against my chest with her left arm beneath my lower back and her right arm across my midsection. \"Just hold me.\"\n\nI held her.\n\n\"So why are you walking funny?\" she asked, a little out of the blue. \"I wanted to ask earlier but didn't want to put you on the spot in front of my parents in case it was something sex-related.\"\n\n\"Not sex-related,\" I told her. \"Sam took me on a five-mile run this morning.\"\n\nZofi snorted and started laughing so hard she choked a little. When she finally recovered, she sat up and looked at me. \"Really? Here I was thinking one of the girls decided to get revenge and stuck a dildo up your ass or something.\"\n\nI blinked twice. \"Uh, no. And if you want me to keep roleplaying your boyfriend that thought is to NEVER enter your head ever again.\"\n\nZofi started laughing even harder.\n\nI rolled my eyes and sighed. When Zofi finally settled down and set her head against my chest again, I explained, \"No seriously, Sam was in my kitchen chatting with Mother when Belle, Mari, and I came downstairs. For some reason, Mari got it into her head to explain all the sexual activities we'd gotten up to the night before, in great detail, in front of my mother, and--\"\n\nI had to stop because Zofi was laughing again, this time with actual tears coming down her cheeks. It took FOREVER for her to calm down again.\n\n\"I'm sorry... I'm sorry...\" she apologized even while continuing to laugh like a hyena.\n\nFinally, she wiped her eyes, and this time instead of laying her head down against my chest, she crossed her legs into a lotus position atop the bed as she faced me. With perfect upright posture, she gave me an amused look and asked, \"So what happened then?\"\n\nI shrugged. \"Sam said she wanted to go for a run. I was a little surprised. I mean, each of you gets a one-on-one with me this weekend and her bright idea was to go running?\"\n\nZofi made a face and shrugged. \"Makes sense, actually.\"\n\nI frowned. \"Makes sense?\"\n\nZofi winced, and for a moment I think she realized she'd given something away. Her eyes went to the upper left corner as she stated a little unconvincingly, \"Uh, well, she does go running every Sunday morning. If that was her timeslot it sorta makes sense she wouldn't want to completely break her routine.\"\n\n\"Somehow I don't think you really believe that.\" I sighed. \"And then we had this awkward moment after getting back when I gave her a compliment. She kinda walked off, I went to take a shower, and when I got back, she'd already left.\"\n\n\"Oh, that makes sense then.\" Zofi frowned. \"I mean, I thought you had a lot more cum than I'd have expected after an overnight with Belle and Mari, and then spending the morning with Sam. I had to keep swallowing for like, forever.\"\n\n\"Uh, sorry?\"\n\nZofi giggled and waved me off. But then she took a deep breath, sighed, and gave me a sad look. \"Still, I didn't think she'd... I mean, she'd talked about it but--\"\n\nZofi's voice cut off as she covered her mouth and popped her eyes open, looking scared that she'd already said too much.\n\nAfter already wondering what was going on with Sam this morning, and now having Zofi turn cryptic on me, I asked rather impatiently, \"She'd talked about what?\"\n\nZofi looked back at me, winced, and said apologetically, \"I don't think it's really my place to say.\"\n\n\"Whatever you know, can you please tell me what's going on?\"\n\n\"I really think this is a conversation you need to have one-on-one with Sam.\"\n\n\"Fine, I'll go over to her place right after this. But you can't let me walk in there blind.\" I turned both of my hands palms up. \"Zofi... please... what's going on?\"\n\nHer grimace deepened. \"I... Matty... She's my best friend. I can't tell you things she's said to me in confidence.\"\n\nPursing my lips, I took a deep breath and sighed. \"Well maybe you can't tell me anything, but you can't stop me from speculating in front of you. Now I don't pretend to be the most perceptive guy on the planet (I know: serious understatement there), but let me try to connect the dots here.\"\n\nZofi frowned, not yet sure where I was going with this.\n\n\"One,\" I began while touching my right index finger to the tip of my left index finger, both hands otherwise closed into fists. \"Neevie asks permission to date me and Sam insists she doesn't mind so long as Neevie doesn't take me away from the BTC.\"\n\nZofi shrugged like this was a non-starter.\n\n\"Two.\" I touched my right index finger to my left middle finger now. \"Everything's fine for about a week, I go on my double-date with your parents, and you come over and have an amazing threesome with me and Neevie. I'm assuming you then had to call your best friend and give her all the details. I show up to school Monday morning and find out the rest of you, including Sam, have scheduled one-on-one dates with me for the following weekend, which is happening right now.\"\n\nZofi frowned and muttered, \"I'm not sure where you're going with this.\"\n\n\"Three.\" Ring finger now. \"Sam skips studying with Belle, Mari, and me on Monday. Now the previous time she missed a Monday, she came over after dinner hoping to just show up and get some great orgasms, which she did I'm proud to say. But then this past Monday, she came over in the evening and yet did NOT have sex with me. She spent the whole time chatting with my mother.\"\n\nNow Zofi started to sweat a little. I could see in her expression that I was getting on the right track.\n\n\"Now the two of you did have a threesome with me on Wednesday, but if I'm being honest, she was basically making love with you while you both happened to be riding me at opposite ends. After that, the three of us teamed up on Neevie under the guise of making sure she felt taken care of before getting grounded this weekend. And then on Friday, I remember she gave me part of a blowjob while we had a group thing, but that's basically it - definitely not standard Sam participation.\"\n\n\"What are you getting at?\" Zofi frowned.\n\n\"Four.\" I touched my pinky.\n\n\"Shouldn't it be five now?\" Zofi interjected.\n\n\"Whatever, I don't give a shit.\" I held out both hands. \"This morning Sam shows up early for our 'date', ends up talking to my mother (which, yeah, I know she's been doing a lot lately), runs me into the ground so I can barely walk let alone get an erection, and then takes off before I get out of the shower. So I really only see two possible explanations here.\"\n\nZofi furrowed her eyebrows and held out both of her hands, waiting for me to guess.\n\n\"First explanation (and perhaps I'm being super-egotistical here): Sam's in love with me, but she's jealous of my relationship with Neevie because well, we know she's got a jealous-slash-competitive streak. She thought she'd be fine with it, but as time went on, she realized she wasn't as fine with it. So she's withdrawing emotionally and doesn't want to be in love with me even though she is. And when I paid her a compliment after running, she got a little heartache and ran away.\"\n\nZofi closed her eyes, held up both index fingers, and wore a slightly pained expression that made me think there was a kernel of truth to what I was saying and yet at the same time had everything completely wrong. The urge to correct me on the things I had wrong was tearing her up inside, given the parameters of her friendship with Sam to not tell me the things her best friend had said in confidence. And finally Zofi muttered, \"Ungh, uhhh... okay, okay... I figure I can at least tell you this much: she's not jealous of your relationship with Neevie. She said she'd be fine with it and really, she's fine with it.\"\n\nI exhaled a sigh of relief.\n\nThen Zofi asked, \"What's your second explanation?\"\n\n\"My second explanation? Uh, actually...\" I frowned. \"I'm not sure I have a second explanation. I mean... if I'm being paranoid... I guess I might think there was another guy involved.\"\n\nZofi's eyes got BIG.\n\nI frowned at her reaction. \"Wait... IS there another guy involved?\"\n\nShe winced and shook her head in the negative quite vigorously, but didn't actually reply verbally.\n\nI wasn't totally convinced, and now my mind started churning. \"Well... if there WAS another guy involved... like maybe Sam's interested in him but doesn't yet know where things are going with him so she's kinda slow-playing the BTC still messing around with the rest of us so as not to give up the secret the way she usually tries to get away with this stuff for a couple of weeks before the guilt eats at her and she confesses all.\"\n\nZofi's face went a little white.\n\n\"It would at least explain why she's no longer using me as a booty call out of loyalty to some new guy, especially after you just said earlier you were surprised we didn't hook up this morning. Like, maybe she'd talked to you about cutting off the booty calls so she wouldn't feel so guilty about them, but you weren't expecting her to start already. And then when I complimented her, she felt bad about stringing me along and not telling me the truth so she ran away.\"\n\nAgain, Zofi closed her eyes and started making small gestures with both index fingers, wearing that slightly pained expression that told me there were at least a few things I had right. And the idea that I was even slightly right about another guy being involved made me feel quite... jealous.\n\nI told myself immediately that I had no right to be jealous. I mean yeah, the whole school thought I was the BTC's boyfriend, but that didn't mean Sam was actually my girlfriend. Neevie was my committed girlfriend, on the other hand, so I would have every right to be jealous if she took an interest in another guy. Belle, likewise, had promised me she wouldn't hook up with any other guys at least until the end of the year. But nobody else had made me any such promises, most especially Sam. I mean, I sort of figured Alice wouldn't promise me her virginity and then go find some other boyfriend. Zofi was still playing the role of my girlfriend and telling me she'd asked her mom for birth control pills seemed to declare her intentions pretty well. And while Mari had promised me nothing, the way she talked about me being the only man who she felt safe with gave me a certain sense of both responsibility and... quite frankly... ownership.\n\nBut Sam had always been her own woman. She'd never asked my permission to hook up with other guys in the past, and nothing ever said between us would lead me to think she would feel the need to do so in the future. We were friends -- friends with benefits, yes -- but just friends. I had no right to feel jealous over her. And yet... I did.\n\nAnd the more I thought about it, the more I realized it wasn't just because I'd miss the sex. I really cared about Sam. I really had feelings for Sam. And all of a sudden, I really, really wanted to see her tonight -- not just to get answers for her recent behavior -- but to make sure she was alright.\n\nI had very strong feelings for Naimh.\n\nI had very strong feelings for Alice.\n\nI had very strong feelings for Belle.\n\nI had very strong feelings for Mari.\n\nI had very strong feelings for Zofi.\n\nAnd I had very strong feelings for Sam.\n\nLove?\n\nI had no fucking clue what love really was. I'd thrown around the words like they were gummy bears -- and I had a whole barrel full of them in my house.\n\nLove? Infatuation? A simple crush? Lust? Affection? Concern? Responsibility? Fondness? Attachment? Possessiveness?\n\nI was an 18-year-old boy only a couple of weeks into my very first real dating relationship. What the fuck did I really know about love?\n\nBut whatever I felt, I knew I felt it for Sam.\n\n\"Zofi...\" I began in a low, intense tone. \"IS there another guy involved?\"\n\nZofi winced. \"It's not what you think.\"\n\nI raised my eyebrows, my voice a warning, \"Zofi...\"\n\nShe quailed before me, looking both scared and apologetic at the same time. \"I... uhhh...\"\n\n\"Tell me there isn't someone else.\"\n\nZofi clenched her eyes shut and cowered.\n\nI got off the bed and turned around, staring at her with both hurt and shock on my face. \"Zofi, please.\"\n\nFinally, in a quiet voice, she admitted, \"Sam went out with a guy last night.\"\n\n****\n\n-- CHAPTER 28 --\n\n****\n\nI at least remembered to politely thank Zofi's parents for letting me join them and kept my cool until I got to the van. But although I left Zofi's house intending to drive straight over to Sam's place, by the time I came to my senses I found myself pulling into my own garage. I must've driven all the way home on autopilot, my mind elsewhere pondering ramifications and alternative scenarios and every last possible nightmare about what Sam and her mystery date had been up to last night.\n\nHad they kissed?\n\nDid she let him up her ass?\n\nI realized I was being unfair to Sam, and for all I knew, the answers to my kaleidoscope of questions would prove to be completely innocent. But in the absence of information, my paranoid jealous brain was conjuring up the absolute worst-case scenarios.\n\nZofi had not been forthcoming, although in this case I truly believed it was because she didn't have the information I wanted, rather than hesitance to spill her BFF's secrets. She said she knew very little about the guy other than that he didn't even go to our school. Sam had told her it was nothing serious, and Zofi tried to reassure me that Sam cared about me a lot and would never do anything to hurt me, but the lack of further detail didn't quiet my suspicions.\n\nSince I happened to be home, I figured I might as well change clothes. I already intended to show up without warning late on a Sunday afternoon and didn't want to make a bad impression showing up to Sam's parents' house in my Niners jersey. So I left the garage door up, headed into my bedroom at a brisk walk, and quickly changed into clean clothes.\n\nTwo minutes later I thundered down the stairs and abruptly came to a stop in the hallway to find Mother standing before me looking concerned.\n\n\"Oh, you're home,\" I said in surprise.\n\n\"Matthew, what's wrong?\"\n\n\"Wrong? Why would you think anything's wrong?\" I tried to step around her, but she cut me off.\n\n\"You braked hard enough to make the tires screech in the garage, slammed your bedroom door, and it sounded like a herd of elephants were coming down the stairs just now.\"\n\n\"I'm fine. It's nothing. Gotta go,\" I explained trying to get around her again.\n\nOnce again, Mother cut me off. \"Matthew.\"\n\nA lightbulb went off in my head, and I suddenly stopped trying to get around her. Furrowing my eyebrows, I folded my arms across my chest and asked, \"Do you know anything about Sam going out with some guy last night?\"\n\nMother frowned. \"How did you find out about that?\"\n\nMy eyebrows popped. \"You DO know!\"\n\n\"Of course I know. I set it up.\"\n\nMy eyes got BIG and my jaw dropped open. \"YOU set up SAM on a DATE with some other guy?!? How could you?!?\"\n\n\"Calm down, Matthew. It wasn't a date.\"\n\n\"I can't believe you would...\" My voice trailed off as her words belatedly registered. \"Wait, what?\"\n\nRolling her eyes, Mother took me by the elbow and led me over into the living room where she sat me down on the sofa and took the wing chair opposite me.\n\n\"Last night, Samantha met up with the son of one of my partners at the firm,\" she explained. \"He's a third-year at Stanford Law School and it was not, as you say, a 'date'.\"\n\nI blinked a few times as I processed that information. In the end, all I managed was a stupid sounding, \"Oh.\"\n\nMother gave me a wry grin. \"Were you really worried so much?\"\n\n\"Uh, well...\"\n\n\"Samantha's not your girlfriend.\"\n\n\"I know that.\"\n\n\"One might say you've no right to be possessive of her.\"\n\n\"I know.\"\n\n\"I'm told that Naimh is now your official girlfriend, despite the fact that a revolving door of other girls have been coming in and out of your bedroom for the past few days.\"\n\n\"Yes, well she's... uh... Neevie is very open to sharing with her friends.\"\n\n\"So I understand.\"\n\nI gave her a funny look. \"I get the feeling you understand a lot more of my current sex life than a normal mother would.\"\n\n\"Your feelings serve you well.\"\n\nI frowned. \"Is there anything Sam HASN'T told you about my sex life?\"\n\nMother shrugged. \"Logic would dictate that I can't know what I don't know. But that said, Samantha has been very forthcoming in providing answers to any question I put to her.\"",
        "\"Why is that? Especially when she hasn't been very forthcoming with me?\"\n\n\"Perhaps she likes me better than you.\" Mother's smile was all teeth. But a moment later she took pity on me and exhaled slowly. \"Samantha is at a crossroads in her life. On the one hand, she has been brought up all her life under the expectation of becoming a doctor like both of her older siblings and her father. She has studied extensively in preparation for a pre-med undergraduate education followed by medical school.\"\n\n\"And on the other hand?\"\n\nMother shrugged. \"She doesn't actually want to be a doctor. That much is clear. \"\n\nI frowned. \"Sam's always wanted to be a doctor.\"\n\n\"Has she? Really?\"\n\n\"I'm guessing my feelings aren't serving me so well at the moment.\" I frowned. \"Law school, huh? I'm guessing that was your idea.\"\n\n\"Not at all. It was a few months ago when Samantha approached me to ask questions about my life as a lawyer. A change in professional plans was her idea, not mine, although I admittedly have not been resistant to the idea. She has a sharp mind, a keen intellect, and a strong work-ethic ideally suited to a legal career. Last night's 'rendezvous' was simply an information-gathering session I arranged because my own memories of law school are both outdated and... incomplete. In other words: I'm old.\"\n\n\"You're not old, Mother. You're...\" My voice trailed off as I realized my brain was going in a direction I didn't want it to go. \"Nevermind.\"\n\nHer eyes narrowed as she sensed a compliment, even if I didn't actually say one. Switching gears, she began, \"So let's talk about you.\"\n\nI blinked. \"Me?\"\n\n\"I'm assuming Zofia let slip in one form or another that Samantha was meeting another man last night, hence your rather aggressive arrival back home. Now regardless of the circumstances by which that information was misconstrued, the evidence would seemingly indicate a rather intense jealousy on your part at the mere notion of Samantha's... infidelity.\"\n\nI rolled my eyes. \"Sam wasn't being... uh... infi... unfaithful. As we've already established, she's not my girlfriend, so faithfulness cannot be presumed.\"\n\n\"In my experience, whether or not faithfulness is actually warranted, males hold a certain extraterritorial jurisdiction in such matters when they're intimate with a woman, regardless of any formal relationship status.\"\n\nI blinked, processing all that and translating, \"You mean I'm possessive of Sam just because we're banging even though she's not actually my girlfriend.\"\n\nMother shrugged. To her, we'd said exactly the same thing.\n\nI sighed. \"Well you're probably right. It was right around the time I realized I was feeling jealous of Sam that I realized I'd be jealous of any of the BTC girls hooking up with other guys. I mean, intellectually I know I shouldn't, but I would be jealous anyway.\"\n\n\"Human nature. Or perhaps more precisely: evolutionary nature.\"\n\n\"That doesn't excuse it.\"\n\n\"I didn't say it needed to.\"\n\nI frowned. \"You're not going to make some feminist argument that I should subsume my innate masculine need to exercise authoritarian control over the young ladies within my particular sphere of influence as a matter of respecting the female right to not submit to my oppression?\"\n\nMother's eyes danced. \"You're trying to keep up with me. I appreciate the effort.\"\n\nI rolled my eyes again.\n\n\"You care about the girls; that much is clear. You've had feelings for all of them for years, so it's no surprise you've developed a certain affection for each of them. As your relationships have crossed the lines from platonic to physical, it's only natural for you to also develop a certain possessiveness over each of them. This is to be expected when a man and a woman become as intimate as you've become with each of them, regardless of any formal declarations of ownership.\"\n\nI frowned. \"Didn't you just say a minute ago that I had no right to be possessive of her?\"\n\n\"I did not,\" she contradicted. \"More precisely, my exact words were, 'One might say you've no right to be possessive of her.' But that is a statement to which I would personally disagree.\"\n\n\"So you think I DO have the right to be possessive of her.\"\n\nMother took a deep breath, schooled her features, and gave me an intense look. \"When I started dating Warren, I already knew after the first time we had sex that he would feel possessive over me even though we had yet to formalize our status. The expectations of fidelity on both our parts had already been set, even if not yet spoken aloud, and that same fidelity was built into the parameters of our developing relationship. It had been made clear to each of us that we were at the beginning stages of that which could potentially grow into more. Were I to step out and become intimate with some other man, he would have every right to be both jealous and angry. And quite frankly, if Samantha were to become intimate with some other man without at least informing you, you would likewise have every right to be both jealous and angry.\"\n\n\"Even though we're not actually together? Even though she and I have made no such expectations of... uhhh... that which could potentially grow into more.\"\n\nMother shrugged. \"I said you would have the right to be angry if she became unfaithful without informing you. Your lack of formalized relationship status means that if she DID inform you, you wouldn't have any right to stop her. And yet, I assure you she already understands how much that would hurt you were she to do so.\"\n\n\"Does she?\"\n\n\"Let's reverse the characters for a moment. How do you think the girls would react if you slept with some cheerleader from school without telling them?\"\n\n\"They'd castrate me. Neevie especially.\"\n\n\"Putting your new girlfriend aside for a moment, you don't have a formalized relationship with any of the other girls, and yet you already understand that they expect fidelity from you. Not fidelity to each of them individually, but to the collective.\"\n\n\"For sure.\"\n\n\"Samantha understands this too; she would never do anything behind your back. Honesty is the foundation of any relationship, including your friendship. That said, as long as she told you the truth, you WOULD be obligated to let her go if she so chose.\"\n\n\"Well what if I don't want to let her go?\"\n\nMother's eyes narrowed. \"Are you saying you want a formalized relationship with Samantha?\"\n\nI winced. \"I'm not... I mean...\"\n\n\"Or do you want to 'get the milk for free', as they say? To bind her under your authoritarian control without the decency of reciprocation.\"\n\nI made a face at her and rolled my eyes again. \"That's not what I meant.\"\n\n\"You can't get the goods if you're not willing to pay the price. How do you truly feel about her?\"\n\n\"I...\"\n\n\"Do you want Samantha to be faithful to you?\"\n\n\"Not precisely.\"\n\nMother folded her arms over her chest. \"Please... be precise.\"\n\n\"I... I don't know how to explain it. What I want most is for Sam to be happy, and if that means being with someone else, that's fine. I guess I just got caught off guard by Zofi telling me Sam had gone out with another guy last night. The sudden jealousy hit me HARD, and I was all prepared to go charging off to her house to confront her about it, her parents be damned.\"\n\n\"A good indicator that your feelings for her are quite strong.\"\n\n\"I love her... I think. But... it's different. I mean, I have strong feelings for all of the girls, in different ways. I'm still having trouble wrapping my head around it. In a way, I feel like I love ALL the girls, but then that can't be right. Aren't we supposed to only be in love with one person?\"\n\nMother shook her head. \"That's never been the case and will never be the case. Love is not limited in such a manner. Fidelity can be expected of a partner, yes. But feelings are feelings, and love is not a simple binary emotion that can be turned off when inconvenient. Your love for each of the girls following the increased intimacy of your relationships is perfectly valid. Don't try to minimalize those feelings, because I assure you, the love each of those girls feels for you in return is quite strong indeed.\"\n\nThat made me sit up straight. \"How much do you really know about the love they each feel for me? Or do you only have what Sam's told you?\"\n\nMother exhaled and pursed her lips. \"I must admit that having Samantha as my primary source for information lends itself to a certain bias. However, I've been able to observe firsthand the love each of those girls feels for you in the mornings when they would come downstairs after spending the night with you. I was in the van for the entire drive up to and back from Tahoe. And while again, I'm pretty old, I still remember what it was like to be a young woman in love with a handsome young man, and the markers are pretty clear.\"\n\n\"And what have you noticed?\"\n\n\"Merely confirmation of what Samantha has already told me: that Mariangel always talks about how safe she feels with you... Zofia too, actually. That Belle talks about how she can always depend on you. Alice talks often about trust. Naimh has... well... to be honest every time I've seen Naimh she basically just wants to fuck you. Even AFTER she's just fucked you.\"\n\nI found myself blushing and rubbed my forehead a bit, most especially because of this being one of the rare times Mother used the f-word.\n\n\"And don't take this the wrong way,\" Mother continued with a bit of a smirk, \"but Samantha says she loves how obedient you are for her.\"\n\nI chuckled, and with a shrug, conceded that Sam was probably right.\n\n\"And while the words they often choose to use may differ slightly, all of them actually come back to essentially the same meaning. All six of them feel SAFE with you. They trust you, they depend on you, and yes, they want you to be obedient, because at the end of the day, all of those things have been making them feel safe around you for years. And believe me, as a woman in today's world, I can readily understand how difficult it is to feel safe around a man.\"\n\nI thought back to what now felt like forever ago, even if it had only been about two months. And with a little smile, I recalled, \"Sam once said what she loved most about me was that she knew I'd never do anything she didn't want me to do, and had never felt that way with other guys.\"\n\n\"Samantha feels safe with you. She trusts you. She still does.\" Mother eyed me carefully. \"Is it so much to ask you to trust her in return?\"\n\nI brought my head up quickly. \"I DO trust her.\"\n\n\"You didn't seem so trusting when you first came home.\"\n\nI sighed. \"I was confused and concerned. I wanted to give her the benefit of doubt but... I...\"\n\n\"You were jealous.\"\n\n\"Obviously.\"\n\n\"Because you love her and the thought of her being with another man hurt you more than you realized could be possible.\"\n\n\"I... I think?\"\n\n\"Have you ever told her this?\"\n\n\"I just realized it myself like twenty minutes ago.\"\n\nMother reached forward and touched my knee. \"Don't do anything rash like race out of the house, bang down her door, and scream your undying love at her bedroom window from the front lawn.\"\n\nI stared at Mother as if she'd sprouted horns. \"What?\"\n\nShe laughed. \"Permit me a moment of levity. I'm pretty sure I saw that in a movie at least once. But short of doing anything so dramatic, you may consider telling her the strength of your feelings for her the next time you see her.\"\n\n\"I don't need to run off and tell Sam I love her or anything. I'm dating Neevie. SHE'S my girlfriend.\" I blinked, sensing an ulterior motive. \"Wait a minute... You WANT me to tell Sam I love her.\"\n\nMother smiled. \"I like her. I like her a LOT. I imagine all mothers wish for their sons to find a wife they can respect, although from the number of daughter-in-law jokes I hear, I imagine the success rate is rather low.\"\n\nMy eyes got BIG. \"Did you just suggest that I might MARRY Sam?\"\n\n\"Allow an old woman her dreams.\"\n\nI shook my head, thinking of that night when Sam and I came downstairs after she'd taken my virginity, only to discover mother reading a book and drinking wine with Sam's panties atop the counter.\n\nMy how far we'd come.\n\n****\n\nAlice was waiting for me and Belle at the parking lot Monday morning. She came over to us as soon as we stepped onto the curb, and the first words out of her mouth were, \"Hope you're hydrated. Neevie's gonna seriously make a run at Death By Fucking today. The girls and I are putting down bets on whether or not she'll even wait for the end of school.\"\n\n\"Put me down for five bucks on Neevie NOT waiting until the end of school,\" Belle added helpfully.\n\nIndeed, my girlfriend had adjusted her routine enough that she actually met us right by the first gate onto campus. One minute, I was chatting with Belle and Alice. The next, I nearly got form-tackled into the bars when a horny redhead slammed into me from the side. Only her squealed \"Matty!\" in her inimitable voice gave me enough of an idea what was going on so that I didn't freak out at the abrupt change in my directional momentum.\n\n\"Hey... miss me?\" I said nonchalantly once we separated for air.\n\n\"I apparently missed YOU more than you missed ME!\" she teased.\n\nI responded by initiating a fresh makeout session that lasted long enough for Belle and Alice to both laugh at us, tap me on the shoulder, and say goodbye as they headed off to their own classes.\n\nThirty seconds later, though, Naimh had to stop kissing me again. \"Shoot, I gotta get to class.\" Her first period was all the way across campus.\n\n\"Thanks for waiting here to see me. I DID miss you.\" Seriously, I'd really missed her. After Sam's impromptu five-mile run (which still had my legs feeling like they'd been injected with lead, thanks for asking), and nothing else but Zofi's post-game blowjob, I'd found myself lying in bed last night with a raging erection and nothing but my poor, inadequate right hand for relief. Alice was right: I'd almost forgotten how to masturbate. And I put all that frustration and longing into my voice and eyes.\n\nShe seemed to get the message. \"I'll see you later,\" she promised, her voice promising even more. And then she turned and hustled off to class.\n\nAs I straightened my backpack, I noticed that several of my classmates were gawking at me, no surprise after the scene my ridiculously gorgeous girlfriend and I had just made.\n\nI loved my life.\n\n****\n\nSam gave me a warm smile when I came in the door for our shared first period, but almost immediately afterward she averted her gaze and looked down at her notebook. There was no time to talk before class, but I knew we would walk together to our shared second period afterward. When the bell rang at the end of class, I sidled over to her, but rather than wrap both arms around my right elbow, she tucked her thumbs into the straps of her backpack and headed out the door with me just a step behind trying to keep up. She wasn't purposefully walking away from me, but neither was she making significant effort to remain close by my side.\n\n\"Hey, uh,\" I began lamely. \"Can we talk later? Without everyone around? Maybe this afternoon during the study session, we can find a quiet room.\"\n\nSam gave me an odd look. \"Is sex ALL you think about?\"\n\nI frowned at her tone. \"No, I seriously meant to talk. Like... our mouths open and words come out.\"\n\nShe sighed. \"I can't make the study session this afternoon. I've got other things going on.\"\n\n\"How about after? Ideally, you could come over to my house after dinner for a short visit, but if that's not convenient I can drive over to your place instead.\"\n\n\"I'm not dating anyone, if that's what you're worried about,\" she explained rather tersely. \"Zofi told me you got all paranoid about me meeting up with a guy Saturday night, but I promise you it wasn't like that.\"\n\n\"Oh, no worries. Mother told me she arranged for you to talk to this third-year law student son of one of her partners at the firm.\"\n\nSam stopped in her tracks and furrowed her eyebrows as she glanced over at me. \"You talked to your mum about me?\"\n\nI stopped as well, and we got brushed a bit as other students on their way to class had to pass around us like we were rocks amidst a river of human traffic. Gesturing with my eyes and head, I took a step over against the wall so we at least wouldn't be blocking people. Sam followed.\n\nOnce we were out of the steady flow, I explained, \"You two have obviously become pretty close. I wanted to know if she knew more about what was going on than me, especially since... well... yesterday when you left my house after our run while I was in the shower, she... uh... seemed to know more about what was going on than me.\"\n\nSam was suddenly quite close to my face, and not just to create more space for pedestrian traffic behind her. From only inches away, she searched my eyes and asked, \"What exactly did you two talk about?\"\n\nI blinked and held my hands up defensively. \"Mostly about how you don't actually want to be a doctor and you've been asking her advice about a potential career change into being a lawyer instead.\"\n\nHer eyebrows rose. \"And that's it?\"\n\nI immediately thought about what Mother had said about me telling Sam that I had feelings for her (not to mention Mother's not-so-subtle hint about my potential choice in wife), but immediately dismissed the thought of saying such a thing in-between classes while surrounded by a river of passing students.\n\n\"Yeah, basically that's it,\" I replied.\n\nSam frowned. \"Then what the hell do you want to talk about?\"\n\nI sighed. I didn't feel any pressing need to tell Sam I loved her or anything like Mother wanted. I had strong feelings for her, sure, and the thought of her being with another guy had certainly made me jealous. But really... \"I just want to make sure we're on the same page is all. You've seemed really... distant... lately. And I want to understand why. If it's something about me, please tell me so I can make things right. And if it's something going on with you, I really care about you and I want to understand.\"\n\n\"We're on the same page. Everything's fine,\" she said dismissively.\n\n\"Are we?\" I arched an eyebrow. \"Because I'm not the type to bother you if there isn't something going on. Something's going on, and it's not just your change in career plans.\"\n\nSam rolled her eyes. \"You're just weirded out because we didn't have sex yesterday morning.\"\n\nI blinked. \"Well... yeah. That's a bit out of the norm for us lately.\"\n\n\"Can't a girl just be moody and hormonal?\"\n\n\"Tell me you're just being moody and hormonal and that everything's fine and we'll go back to normal in a couple of days and I'll leave you alone. But somehow I don't think it's that simple.\"\n\nSam pursed her lips, measuring whether or not she could dismiss me so easily.\n\nIn the meantime, I took a deep breath, looked at my friend seriously, and added, \"This is me. I rarely ask for anything, but something's not right between us and I need to know why. Please?\"\n\nSam immediately softened, and after taking a deep breath, she sighed and nodded. \"Alright fine. I'll be there after dinner. I was gonna stop by to talk to your mum anyway.\"\n\n\"Works for me.\"\n\nPursing her lips, she abruptly turned and rejoined the flow of traffic, leaving me behind.\n\nI sighed, wondering how I was going to keep from worrying about Sam until tonight.\n\n****\n\nDistraction came in the form of a 5'8\" ridonkulously gorgeous freckled redhead with an Irish lilt, supple Double-D tits, and a penchant for taking my dick up her ass.\n\nBelle would've won her five-dollar bet, because Naimh dragged me out to the parking lot at lunchtime, we lowered the rear seats flat into the bed configuration, and got jiggy with it. She started climaxing the second my cock entered her cunt, and she didn't stop cumming until I basted her womb with a few gallons of backed-up baby batter. I'm not a hundred-percent certain, but I'm pretty sure at least a few people in the parking lot noticed the way the minivan was rocking and tried to peek in through the windows to see what was going on.",
        "At least the tinted windows helped cut down on clarity and we kept our clothes on so nobody got a free peek at my girlfriend's tits or anything, although they might've gotten a good look at my naked ass as I humped away at her. Whatever. The whole school already knew we were fucking.\n\nWe made it back to our friends with just enough time to actually eat our lunches. Sam was still quiet, but cordial enough. Having my hot Irish girlfriend trying to literally bond our two bodies together side-by-side was plenty distracting, although the way Sam kept glancing over it did make me wonder if Zofi had been telling the truth about Sam not being jealous over my relationship with Naimh.\n\nAfter school, Naimh came straight over to my house and we fucked like bunnies the whole afternoon. She ended up getting a full trifecta, if not quite in order. I blasted deep in her pussy first. We got about twenty minutes of homework done before she started a round that ended with an anal injection. We took a shower together and did another hour of work. And in the end we just sixty-nined until she swallowed my load, saying she wouldn't have time for her hair to dry after another shower before she returned home to her parents.\n\nI headed over to Belle's house to make dinner, where she teased me about walking funny. Between Sam's five-miler and Naimh's sexual marathon, I was feeling pretty gaunt. So we filled me up with carbs for energy and protein for muscle recovery, exchanged a quick kiss that her dad tried to not really notice, and I headed back to my house.\n\nSam would be coming over around seven.\n\n****\n\nAlone in my house, I sat silently in the living room awaiting the ring of the doorbell. No TV, no video games, nothing to read. I was lost in thought, wondering why I felt bothered so much.\n\nBy any impartial judgment, I was overreacting to what ultimately was no big deal. The Saturday night \"date\" was a non-starter. A week ago, Sam had come over to chat with Mother and not have sex with me on a night when Naimh had already fucked my brains out. Yesterday we'd gone for a run together and not had sex. And the sum total of these two occasions when a hot girl decided to not have sex with me for her own reasons somehow had me freaking out. It wasn't like we'd even gone a very long time without any sexual contact. She'd fucked me on Wednesday and blown me on Friday. So why the hell was I freaking out?\n\nWas my life so perfect that even the smallest speed bump had me on edge?\n\nWas my life TOO perfect so that the slightest imbalance had me panicking that the house of cards of my current sex life was about to come crashing down?\n\nYeah, maybe that made a little more sense.\n\nLet's get real: I was a horny young male regularly ejaculating into and all over six beautiful busty bisexual babes, several who had a thing for eating creampies. This was NOT an ordinary teenage sex life. There was no way it could last forever. It had to end eventually.\n\nBut can you really blame me for hoping it would last a little longer?\n\nA phrase Alice had said to me Saturday morning stuck in my head: The squeaky wheel gets the grease. It's a metaphor to convey the idea that whoever complains is more likely to receive attention. At the time, Alice had used it to express that whichever girl invited me into her pussy got the most attention, whereas a less demonstrative girl like herself felt relegated and ignored.\n\nIn this case, the metaphor wasn't about sex. Rather, my relationships with five of the BTC girls felt smooth and hummed along without any \"squeaks\". I mean, stuff was going on with each of them, but at least I had no fear of suddenly losing what we had. Alice was searching for her next evolution beyond \"Matty's Video Game Buddy\". Belle loved me but simultaneously felt the need to stretch her wings and explore the world before settling down. Mari was coming to grips with her past traumas and embracing her inner sex goddess. Zofi was seeking to prove her heterosexuality to her parents, and quite possibly, to herself. And Naimh was embracing all the pleasure, excitement, and angst of new love.\n\nMy relationship with Sam, however, was \"squeaking\", and I didn't know why. What was Sam going through right now? Was it as simple as setting herself free of parental expectations to become the next doctor in the family tree? Maybe I was being self-centered, her current mental anguish had absolutely nothing to do with me, and this request to explain herself was simply a friend making himself one more burden than she needed right now. Maybe I would have been better off trusting her to sort out her issues on her own and recognize that if she needed my help with anything, she could and would ask.\n\nBut maybe her issues DID have something to do with me, and if so, wouldn't everything be better if I nipped the problem in the bud before it exploded into something bigger and worse?\n\nMaybe it really WAS more than what it seemed, and she really WAS tired of me splitting my attention amongst six girls. Hadn't she always said she wanted to be the guy's \"favorite\"? What if she didn't want to deal with watching Naimh become my love bunny and was cutting her losses to go pursue some other guy?\n\nWhat if the Saturday night \"date\" WASN'T a non-starter? What if this third-year law student was some chiseled hunk with an incredible six-pack, strong jawline, and the kind of warm eyes a girl could lose herself in?\n\nWhat if I was about to become the kind of clingy overbearing boy who drove away a pretty girl with his own neuroses?\n\nMaybe I was scared that the status quo was a delicate balancing act of the BTC represented by a circular plate held up by six separate poles around its circumference, and the loss of even one of the poles, while not immediately fatal on its own, would still unbalance the plate, shift the amount of weight required by the other five to support, and ultimately lead to the entire thing's downfall.\n\nMaybe I was a straight-A student overreacting to a B-plus on the most recent AP Physics midterm.\n\nMaybe I was a six-wheel off-road vehicle where even one of those wheels out of alignment could plunge me off a cliff to my complete and utter doom.\n\nFor the moment, I could say my relationships with the other five girls would be just fine. But Sam?\n\nThe squeaky wheel gets the grease.\n\nThe doorbell rang.\n\n****\n\nWhat happened next surprised the hell out of me. And if it surprised me, you can bet it surprised the hell out of her. I didn't plan it, and didn't even consciously realize I was doing it until I'd already done it.\n\nI just... I MISSED her. I really can't explain it any better than that. It's ridiculous, of course. I'd seen her at school only hours earlier, and yet it felt like the Sam that I knew, the Sam who had taken my virginity, the Sam that I had such strong feelings for... I hadn't seen HER in more than a week. And for some reason I couldn't completely explain, I was scared I'd never see her ever again.\n\nBut then she was there on my front porch. When I opened the door, SHE was there. Not the simulacrum that had gone running with me and scoffed at my lack of distance-running fitness. Not the facsimile that had gone through the motions at school. When she first saw my face and looked up into my eyes, the REAL Sam was in there, genuinely happy to see me.\n\nThe next thing I knew the back of Sam's head was pressed up against the door from the force of my kiss. At least the front door was closed. I don't remember doing it, but there was no mistaking that she was pressed against the inside of the door while we made out like the world was about to end. The passion of my kiss swept both of us away, and to my everlasting joy when I finally realized what I'd started, it was to realize she was kissing me back just as hard as I was kissing her.\n\nMy hands slid into the back of the comfortable workout pants she'd worn for the visit, the elastic band giving me no resistance as I grabbed big handfuls of her bare buttcheeks while she moaned into my mouth. But I couldn't get the leverage I needed, so a second later I yanked them out of her pants and grabbed the backs of her thighs instead. My leg muscles were still sore from yesterday's run, but I ignored the pain as I scooped her body up and wrapped her legs around my waist. She quickly crossed her ankles behind my butt and used her increased leverage to really drive her tongue down into my mouth. And then I was walking us away from the front door and into the living room.\n\nI almost didn't make it. Seriously, my legs HURT, but through sheer willpower I fought through the burn and managed to stagger all the way over to the sofa and plant her on her back across it. Sam broke the kiss and squealed as she felt herself falling. But once we landed on the cushions, she grabbed my head and started making out with me again. My left foot was still on the floor, so the angle wasn't great, but I managed to adjust my right knee and shift my weight so that my throbbing erection was right on top of her clit, and purely on instinct I started to grind my bone right down on her.\n\nNo words were spoken, from either of us. I could scarcely believe that we'd gone straight to this position, and I was afraid if I did so much as speak her name that I'd somehow break the spell. I couldn't tell if she was like-minded, but she never said a word either. Still, I could tell from the fire in her eyes and the pain immediately behind them that she suddenly NEEDED me inside her. And with both of us on the same wavelength, I was quick to stand my left foot up on the floor and push up with my right knee to give her enough room to start shoving down her workout pants while I started fiddling with my cargo pants as well.\n\nThere was no further foreplay. She managed to kick off her shoes and pull one leg free of her workout pants while I didn't get any further than getting my cargo pants and boxers down to my ankles. It was a little awkward at first, but once she got both legs wrapped around my midsection, I notched my fat dick at her soaking wet entrance and pushed.\n\nShe stared up at me from about a foot away, eyes glowing amber with an extra lightning bolt that flashed through her irises at the moment of penetration.\n\nI saw true love in her eyes in that moment, or at least what I believed to be true love. And then she yanked my head down to hers so we could resume kissing while I swiftly buried every last inch inside her, down to the root.\n\n\"Ohmigawd... Matty...\" she finally spoke, her voice a whimper of longing and need. Her hands slid up the back of my shirt, stroking my spine before clutching my shoulders from behind as I started a familiar rhythm.\n\nIn.\n\nOut.\n\nDeep.\n\nAnd back.\n\nI kissed my way down her neck and moaned into her shoulder. She clutched me tightly, fingers digging into my skin as if afraid I'd evaporate if she didn't hold on tight enough. I dropped my own hands back down to her juicy asscheeks, digging in equally hard and yanking her body against mine as I started to savagely fuck her.\n\n\"Matty...\" she whined again, and it sounded like she was crying.\n\nI stopped fucking her and turned my head to find that yes, sure enough, there were tears streaming down her face. I pressed my pelvic bone up against her clit, making her gasp. And I stayed there, just sort of lightly waggling my weight on that single point of contact while I extended my neck to kiss away her tears.\n\nThe words came unbidden, from the bottom of my soul. \"I love you, Sam.\"\n\nHer eyes flashed as she looked straight into mine. Suddenly she looked terrified again, but I didn't ask for a return answer.\n\nI loved her.\n\nI did.\n\nI didn't want to lose her. I couldn't lose her. But it wasn't just fear of loss.\n\nI LOVED her.\n\nAnd whether or not she loved me in return, it was enough. I kissed her again, and she whimpered into my mouth for just a moment before yanking one arm out from underneath the back of my shirt, wrapping it around the back of my head instead, and kissing me once again like the world was about to end.\n\nEventually though, we had to break for air. She cooed into my ear and now wrapped both arms behind my neck. Holding me close, Sam was the first to re-start our fucking motions, using the sofa cushion springiness to pump her pussy a few inches back before thrusting herself up to swallow up the same length and then some.\n\nI panted into the empty space to the left side of her head off the edge of the sofa, my chest crushing her tits between us. I found that I'd started holding her shoulders somewhere in the middle of all that kissing, and now used them as leverage to retract my dick until I was almost all the way out and then yank our bodies back together again with long, powerful thrusts. Her head jerked with each impact, causing her chin to thrust up into the air. She gasped at each incredible sensation, groaning her pleasure as I continued to pound away at her pussy.\n\n\"Matty... Matty... Matty...\" she began to moan, a steady chant that made my name an exclamation of joy. And after I changed up the rhythm to pause and really grind my pelvis against her clit at the top of each long hammering stroke, she clutched my body with all four limbs and started screaming her first release.\n\nThere were many more where that came from.\n\nAfter Sam recovered from her orgasm, she seemed energized by a surge of new adrenaline. Wrapping me up with all four limbs again, she rolled us off the sofa, causing me to yelp in surprise as I suddenly felt first my legs and then my ass hit the floor, followed quickly by my upper torso sliding like an avalanche from the slopes of the sofa cushions. At least I was able to arch my back and control the descent a little. Our loins were never disengaged, and in the end Sam was still riding me cowgirl-style.\n\nShe bared her teeth like a tigress, her amber eyes glittering as she ripped her sweater over her head and reached behind herself to unclasp her bra. In mere moments, my Aphrodite was gloriously naked on top of me save for her workout pants and her panties still bunched up around her right leg below the knee. Not caring about those one whit, she planted her hands on my chest and started riding me like a bucking bronco, powerfully taking charge to tame the beast while I fought to not be tamed and fucked back just as hard as she was fucking me. My ass would feel the effects of banging off the floor tomorrow, and my quads burned like my blood had been set on fire. But the moment demanded nothing less than everything I could possibly give.\n\nMy right thumb found its way between us and I started rubbing her clit. At the same time, my left hand snaked up her torso before grabbing one of her massive tits, squeezing the melon and pinching the nipple. Sam grabbed my hand and pulled it even higher so that she could pop two of my fingers into her mouth. She sucked on my digits like they were my dick instead, her tongue licking and her lips caressing. But then she also bit down gently and grinned when I bucked a little harder up into her pussy.\n\nWithin minutes, she was on her way to a second orgasm. The inferno inside her pussy had become the boiler of a steam engine while every thrust of my cock shoveled in more and more coal. And as she started racing up that peak, Sam dropped her chest down over my face, grabbed my head with both hands, and used her grip to hump her body even faster than before. I could scarcely breathe, suffocated as I was by her ample titflesh. But if a man were truly killed by Venus herself with her massive tits the certified cause of death, it would not be a life wasted.\n\nFortunately, I didn't die. Hell, I grabbed onto the sides of her big boobs and crushed them even tighter against my cheeks. When I heard her start screaming, I grabbed her naked asscheeks instead and hammered her poor body against my pistoning prick even faster. And I was rewarded with her orgasmic shrieks echoing throughout the cavernous walls of my big empty house.\n\nI felt like I could fuck for hours. Now that I stopped to think about it, my actual girlfriend had already attempted Death By Fucking today and drained me practically dry. But I knew I had at least one more load left in me, even if it took forever to finally get it out. The point is, despite all the pleasure filling my brain, I felt no immediate need to cum.\n\nMy legs, however, felt like they were about to fall off. I had planted my feet flat on the floor and used my glutes and abs to really drive my dick upward into Sam's sweet snatch. But now I rolled us back over so that I was once again on top. And although the movement dislodged our bodies for the first time in forever, her pussy was gaping wide open and it was an easy matter to slam myself back in.\n\nNow it was her turn to feel the rug burn, but if she cared she didn't show it. After ripping my shirt off, I rutted in and out of her clenching cunt, pounded that pussy, and thwacked her tight twat. Now it was my turn to moan her name in ecstasy, to express my utter bliss by chanting, \"Saaam! Saaam! Saaam!\"\n\nHaving spent the first part of this floor fuck staring up at my body heaving above her, Sam now hooked her hands behind my shoulders and pulled me down so that we were crushed chest-to-chest once more. She bit my ear and growled, \"Fill me, Matty. Fuck me and fill me. I wanna feel your baby batter swimming around the inside of my womb. I wanna feel your hot sperm drowning me from the within. Fuck me, Matty! Fuck me! I need it!!! I need you! I can't stay away from you! I LOVE YOU, MATTY! FILL ME, MATTY! FILL ME AND LOVE ME, MATTY! I NEED YOU! I LOVE YOU! MAAAATTTTTTYYYYY!!!!\"\n\nSam's third climax triggered mine. I'd dropped my hands back down to her ass, crashing our two bodies together with a violent energy. One moment I was pounding away at her, getting closer to the mountaintop but not quite there yet. The next moment her scream of ecstasy acted like a detonator for mine. And suddenly I was filling her just like she wanted, unleashing the deluge deep within her insides as we bucked and moaned and thrashed right there on the floor of my living room.\n\n\"MAAAATTTTTTYYYYY!!!!\" she howled again.\n\n\"SSSSSAAAAAAMMMMM!!!!\" I howled right with her.\n\nThree more times, I pulled back a few inches and thrust forward to try and cram myself just another half inch deeper into my lover's body. She held me close, clutching me to her chest with her fingers once again digging into my skin as if afraid I'd evaporate if she didn't hold on tight enough. I gripped her asscheeks, pinning our two bodies together as humanly close as they could be. And even when I had nothing left to give her, I found that I didn't want to relax my grip.\n\nNeither did she. If anything, Sam managed to tighten her grip while also tugging down with her calves, wrapping me up with all four limbs in a physical promise to never let me go.\n\nMy voice came back to me, my forehead on the floor as I mumbled softly, \"I love you, Sam. Please don't leave me.\"\n\nShe pressed her cheek against mine, panting for breath. Her right hand slid a little higher to rub the back of my head as she replied, \"I love you, too. I'm sorry.\"\n\n\"Don't apologize. Just don't LEAVE me.\"\n\n\"I'm not... I mean I wasn't...\" She started crying, and I picked my head up to look down at her gorgeous face. Leaning my weight onto my left elbow, I used my right thumb to brush a tear away from her cheek. She stared up at me, eyes large and luminous and shining in the light from the lamp on the side table. Despite all of the passionate pleasure and love we'd just shared, she looked... sad. And after a long minute of staring up at me, she furrowed her eyebrows and explained, \"I wasn't leaving you.\"\n\nI arched an eyebrow. \"I smell a 'but' coming.\"\n\nShe sighed and shook her head. \"I don't have time to be your girlfriend.\"\n\nI frowned. \"I thought you didn't WANT to be my girlfriend.\"",
        "\"Of course I WANT to be your girlfriend. I love you, Matty, and I want to see you all the time. I want what Neevie has.\" She squeezed her inner pussy muscles around me for emphasis.\n\nI liked the feeling, but my frown deepened. \"I'm getting mixed messages here.\"\n\n\"I don't WANT to be in love with you because I don't have TIME for a boyfriend. I've got a million things going on right now. I'm in three extracurricular clubs plus the Debate team, I'm taking two extra community college classes, and that doesn't even count paying lip service to my parents' complicated social circles. Like... I haven't been skipping Monday afternoon study sessions to avoid you or my friends. I've been home studying by myself so I don't get distracted into a 'study break'.\"\n\n\"Actually, that sounds exactly like you've been skipping study sessions to avoid me and your friends.\"\n\n\"Well, you know what I mean.\"\n\n\"I do.\" I smiled warmly.\n\nShe sighed. \"Look, I meant what I said about being perfectly happy to be able to show up to your house and get a few orgasms without all the complications of dating.\"\n\n\"Then why have you stopped showing up to my house and getting orgasms?\"\n\n\"Because you're too fucking GOOD. Like this... right now... with your warm body on top of me and your big dick inside me. I don't want this feeling to ever end. I wanna stay up late cuddling in your arms and get abruptly woken up when your fat cock pushes into my pussy from behind, still slick from the load you dumped inside me the night before.\"\n\nHer words had me starting to get hard again, and I stirred my weight on top of her while she gasped and moaned at the pressure on her clit.\n\n\"But I can't afford to spend all day and night pinned beneath your sweaty body having orgasm after orgasm. I have WORK to do! I have reading and studying and other dreams to follow that don't involve your penis! I can feel myself falling in love with you and the more I'm with you the more I CRAVE to be with you.\"\n\nI gave her a curious look. \"So what... you were trying to withdraw yourself emotionally so you wouldn't be in love with me so much and could focus on all the other shit going on in your life?\"\n\n\"YES!\"\n\n\"So you're NOT leaving me to find yourself another boyfriend who can make you his priority instead of being stuck with a guy who has to split his attention among six different girls.\"\n\nSam furrowed her eyebrows. \"Is THAT what you were worried about?\"\n\n\"Well... yeah... I mean, when Zofi told me yesterday that you went out with another guy on Saturday night, yeah, I started to get really jealous. And then this morning between first and second periods you kinda blew me off when I was asking you to come over here. So yeah... I was worried a little.\"\n\n\"Matty...\"\n\n\"I love you, Sam. I don't want to let you go.\"\n\nShe kissed me quickly. \"I love you, too. I'm sorry if it feels like I'm holding back from you. I just... I don't want to make this a habit where I like NEED to fuck you five days a week. You're making me an addict as it is. That's why on Sunday I tried to run both of us to exhaustion and then sorta skipped out of there before the craving to join you in the shower overwhelmed me. But please believe me when I say I'm not going anywhere and I'm not looking to hook up with anybody else.\"\n\n\"I believe you. And I'm sorry for being clingy.\"\n\nShe blushed and kissed me again. \"Actually, I rather like the idea of you being clingy to me. It means you still care.\"\n\n\"I do.\"\n\nSam got a bit of an evil wry grin on her face. \"All this time trying to make myself your favorite through topping what the other girls could give you... Maybe I should've tried leaving you sooner.\"\n\n\"Don't you dare.\"\n\nShe laughed, which did wonderful things to her core muscles and therefore did wonderful things to my re-hardening prick surrounded by those core muscles. Feeling the energy surging back to my loins, I switched from slowly grinding her to withdrawing a few inches and fucking myself back inside her.\n\n\"Ohhh, Matty...\" she groaned. \"You're really spoiling me.\"\n\n\"I aim to please.\"\n\n\"You do...\" she sighed as she rolled her hips and took up the pumping motion. \"You do... Ugh, but the floor is pretty hard. Let me up.\"\n\nWithdrawing my now fully-hardened dick, I sat back on my heels while Sam got up and climbed onto the sofa facing away from me, pausing to finally remove her panties and workout pants from her calf and ankle. Now fully naked, she braced herself against the backrest and waggled her perfect ass invitingly. And I was quick to settle behind her and slide myself back inside.\n\n\"Mmm, fuck me, Matty...\" Sam crooned. \"Fuck me, lover...\"\n\n\"I'm fucking you, Sam. I'm fucking you.\"\n\nI pumped her slowly and let my hands roam all over her silky-smooth skin, stroking her spine and tickling the sides of her pendulous breasts before bending over to cup them and fondle away to my heart's content. But just when we started picking up speed, she looked back at me with a new fire in her eyes.\n\n\"Put it in my ass, Matty. C'mon, I know you've been dying to for weeks, especially after running behind me for all those miles yesterday. You couldn't take your eyes off my juicy, round, bubble butt encased in skintight workout pants.\"\n\nI blinked. \"Uh, the lube's upstairs.\"\n\nShe shook her head. \"Mari said she took it without any lube. Neevie, too.\"\n\nI pursed my lips. \"You really ARE fucking competitive, you know that?\"\n\nSam giggled. \"Of course I know it. Now shut up and sodomize me.\" She braced her chest against the backrest and reached back with both hands to spread her own cheeks.\n\nBy now I knew my dick was coated in both girlcum and my own previous load. Hoping it would prove to be enough natural lubrication, I pulled out of her and stared down at Sam's crinkled anus. For good measure, I bent down and spit on her sphincter, figuring it couldn't hurt. And then holding just the base of my soaking wet schlong, I positioned my mushroom head at her anal entrance and started pushing in.\n\n\"Nnnngggguuuuuuhhhhh...\" Sam groaned, trying to relax herself. To my surprise, I managed to push inside with only a little resistance. It wasn't as easy as entering Mari unlubed, but it was nowhere near as difficult as that night in Tahoe when I first tried to get into Sam's ass even with lube. And after about a minute, I was balls-deep inside my lover's colon.\n\n\"Fuck my arse, Matty...\" Sam moaned, still holding her own asscheeks open for me. \"Fuck my arse...\"\n\nThe next several minutes were the cherry on top of an already incredible day for me. After the lunchtime nooner with Naimh in the minivan and the later trifecta in the afternoon, I hadn't needed nor expected any further sexual encounters. My request for Sam to come over and talk had been purely for platonic reasons, and yet here we were at the end of yet another marathon sex session.\n\nI wouldn't be able to walk the next morning.\n\nBut in the moment, I gave her my all no matter how much my legs hurt. I pounded away up Sam's backside, making her scream and shout and let it all out until she howled her fourth and then finally fifth orgasms at the top of her lungs. I joined her a second later, her milking ass muscles dragging out whatever sperm I had left in my body until I was drained so dry I felt like a desiccated corpse.\n\nI wound up pulling out, spinning around, and sitting down heavily on the sofa cushion beside her. Still shaking from the aftershocks of her orgasm, Sam curled into a ball face-down with her ass still up in the air. And right around the time I finally started to catch my breath, I saw the tell-tale white cream of my jism start to ooze out from her stretched anus and run down like a little river to join the creamy mingled-cum still trickling out of her red-worn pussy just below.\n\nWhere's Belle when you need her?\n\nThe assfuck took longer than I had planned. I hadn't been holding back or anything; I was just so drained from all the fucking I'd done all day that it simply took that long for me to cum. We were both covered in sweat and probably staining Mother's fancy living room sofa, but we also both had silly grins on our faces that reflected the love we shared.\n\nSam was still ass-up and leaking cum from both of her sodden holes when a new voice broke in. \"Are you two done YET? I swear you've been going for over an hour.\"\n\nSam dropped her butt down to her heels and whipped her head around while I sat up straight and hurriedly covered my junk with a throw pillow.\n\nMother leaned against the wall, a wide smirk on her face and a big wine glass in her hand. She took a final sip, emptying what little was left in the glass. Sighing, she appraised the scene before her before turning around and walking back towards the kitchen. The last words we heard tossed over her shoulder were, \"Ah, to be eighteen again...\"\n\nSam and I looked at each other. Recovering quickly, she shrugged and remarked, \"Well THAT'S a first.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "anal sex",
        "high school",
        "big breasts",
        "mff",
        "harem",
        "teenagers",
        "18-year-old",
        "blonde",
        "latina",
        "tits"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-27-28"
}