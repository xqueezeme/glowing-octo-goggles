{
    "title": "Surefoot 05: Secrets & Lies Ch. 01",
    "pages": [
        "Shuttlecraft Sureswift, Deep Space:\n\nSasha Hrelle and Giles Arrington dressed in quiet, by the light of a PADD sitting on the floor of the sleeping compartment. She stretched out the time adjusting her boot, more than once, in order to work out something to say. She had to say something to him after losing their virginity to each other. Didn't she? I mean, she had been vocal enough at the time, with stifled cries to God, assorted profanity, and complaints about some sharp object that had been sticking into her when she was on the floor and he was on top. What was it, anyway- Oh, it was the corner of her combadge, which must have fallen off the table when they had decided the bunk was too narrow and awkward and the floor was roomier.\n\nAnd then they fell asleep, not even thinking about what would have happened if her father had come in and seen them lying on the floor, entwined.\n\nShe had to say something.\n\nAnything.\n\nCome on, you stupid cow... \"Good work.\"\n\nHe looked up, looking pale and as confused as she felt. \"Uh, thanks. You too.\"\n\nThey nodded to each other as they continued dressing. Terrific, she thought. That'll be up there with the love sonnets of Shakespeare, Shelley and Tarbolde of Canopus. \"Let's- let's not tell my father about this, okay?\"\n\n\"No, no, of course not.\"\n\nSasha nodded with some satisfaction. The last thing they needed was Dad getting involved.\n\nThey blinked as they emerged into the bright light of the rest of the Sureswift, which continued on its race back to its mothership the Surefoot. The cockpit was unoccupied, though that wasn't too worrying, as it worked mostly on autopilot and would alert the rest of the ship to any problems or incoming transmissions.\n\nHer father was in the aft section, where he sat hunched over the table, working an engineering tool on a transtator panel. His tongue poked out the side of his muzzle in concentration as he focused on some delicate work. \"Morning, you two. At least I think it's morning. What's the time, Giles?\"\n\n\"The time, Sir?\" He glanced at the chronometer on the adjacent wall. \"0833 Hours.\"\n\n\"Thanks. Sit down. I'll be done in a minute.\"\n\nThey looked to each other and took the seats on either side of the man. Captain Esek Hrelle was still dressed in civilian gear, something which Sasha knew had distracted Giles since they started this journey, never having pictured the man wearing anything other than Starfleet uniforms. Sasha knew better, having spent a good portion of her life in the company of the man who had married her mother and had become her father; she smiled inwardly at some of the outrageous outfits he chose to wear whenever they went on vacation at the beach or in the mountains... Mom used to laugh her head off-\n\nMom. Thoughts of her brought her back to the reason for their being out there now: Sasha had become obsessed with witnessing the execution of Mom's murderer, the criminal Alexander Giger. She scared herself now with how bloodthirsty she had been, since receiving the invitation from the Nist. She had cursed her Dad as a coward when he'd initially refused to let her attend the execution, tried to conspire with her friends to steal this very shuttle, insulted Commander T'Varik, assaulted Counselor Kami- she shuddered at how bad she had become.\n\nAnd when Dad had finally given in and took her there, the results were... horrifying. The Nist's method of execution had been unexpected. And unforgettable. She swallowed.\n\n\"Are you cold, Sash?\" Hrelle asked. \"Turn up the heat, if you want.\"\n\nShe shook her head. \"I'm okay. Just woke up.\"\n\nHe nodded, his pointed ears twitching as he bared his fangs. \"Get a good sleep, you two?\"\n\nShe exchanged glances with Giles, before she finally replied, \"Yeah, thanks.\"\n\n\"I have to say, I'll be glad to get back to the bed in my own quarters. How do those bunks compare to the ones in Alpha Squad's quarters?\"\n\nThe cadets exchanged looks again, before Giles offered, \"Not as good, Sir.\"\n\nHrelle nodded, still seemingly concentrating on his work. \"I'll bet. Still, it does have some advantages for the two of you, sleeping together.\"\n\nGiles frowned wordlessly at her, mouthing 'sleeping together?'\n\nSasha felt herself blushing, but couldn't find anything to respond with.\n\nThen Hrelle elaborated, \"You know, just two of you in the room instead of six. Less snoring.\"\n\nGiles visibly relaxed. \"Uh, yes, Sir. Quieter.\"\n\n\"I never got used to it when I was a cadet and sharing a room with someone else. It took a while when I started sleeping with your mother, Sash. I loved her with all my heart... but she could rattle the windows with those sinuses of hers. And she always denied it. Fortunately you don't seem to have inherited her considerable talents in that area.\"\n\nShe nodded, after a moment adding, \"No. What are you doing, anyway?\"\n\n\"A little creative sabotage of the replicator. I'm hoping to bypass the dietary override Dr Ling put in its programming so I can get something other than the rabbit food she's put me on. Hopefully I won't screw this up and we end up eating emergency rations for the rest of the trip.\" He chuckled and added, \"You won't squeal on me, will you?\"\n\n\"Us? Our lips are sealed.\"\n\n\"Much appreciated. I know how much you two hate keeping secrets.\"\n\nThey went silent again, sitting there, before Hrelle leaned back, holding up the transtator panel while setting down his tool. \"There. Fingers crossed.\"\n\n\"Sir?\" Giles asked curiously.\n\n\"Fingers crossed. Humans used to cross their fingers to wish them luck with a venture. Of course, they also would do it to negate a promise they had just made. Humans can be perplexing and mysterious - present company excluded, of course.\" He rose and inserted the panel into a waiting slot below the replicator unit in the wall. \"There's nothing mysterious about either of you two.\"\n\nSasha frowned at Giles, as if the boy might have let slip something in the very, very few words spoken since they emerged from the compartment.\n\nThe replicator came back online as Hrelle stood up again. \"There, now for the acid test. Computer: bottle of Spican flame whiskey and three shotglasses.\"\n\nBoth cadets looked at their Captain, as the requested materials appeared in a swirl of energy in the replicator slot, and the Caitian collected the items and brought them back to the table, taking his seat again. \"You're lucky: my first instinct was to order a massive plate of fried chicken. And eat it all in front of you and give you none.\"\n\nSasha watched him uncork the bottle and pour some of the cherry-coloured liquid into the shotglasses, sliding one to each of them. \"Alcohol? Isn't this... unbreakfasty, Dad?\"\n\n\"Yes, and if either of you started your day with this, then you'll inevitably find yourself under the unforgiving gaze of my Vulcan First Officer. But this is a special occasion.\" He smirked at their reactions as he raised his glass.\n\nSasha never touched her glass, but given the way her temperature seemed to double, she felt as if she had downed the whole bottle. \"You know, don't you?\"\n\n\"He knows?\" Giles asked, looking equally flushed.\n\n\"Yes,\" Hrelle confirmed, chuckling. \"He knows... 'Tiger'.\" He downed his shot in one go.\n\n\"Shit,\" Sasha muttered, reaching for her glass.\n\n\"How profane,\" Hrelle teased, refilling his own. \"And you a religious girl. Or so I assume, given the number of times you called to your deity.\"\n\n\"Dad!\"\n\n\"Don't 'Dad' me, Runt of the Litter! It wasn't like I could avoid hearing you two rabbits. I was prepared to ignore it, grant you both your right to privacy and to act and behave like adults. But then you two come out here acting all awkward and stupid - and there's no way in the Seven Hells that I could put up with that level of nonsense for the next four days. So, better to act like Caitians.\"\n\n\"Caitians, Sir?\" Giles asked, frowning in confusion at Sasha's look to him.\n\n\"Yes, Giles. You see, Caitians have superior senses, so we know whenever our parents are busy in their bedrooms, we know when our females go into Season several times a year, we're casual about nudity amongst ourselves, and our Great Mother has never made us feel guilty over having sexual drives the way many human deities have done. Caitians choose to be quite open about adults and cubs discussing sex-\"\n\n\"I don't want to talk about it,\" Sasha declared, finishing her shot.\n\n\"I know, I know, you poor, pitiful, repressed humans are too coy about such matters. But if either of you want to talk to me privately about anything,\" He focused on Giles now. \"Anything at all, I'm always available.\"\n\nSasha looked to Giles, shrugged and raised her own glass, Giles following suit, the three of them clinking them once. Then she worked the controls of the entertainment screen, bringing up a gaudily-coloured pair of animated cats, one large and one small, wearing clothes and walking upright together as music played in the background.\n\nHrelle frowned with memory. \"Is that Fat Cat and Lil' Kitten? Is that still being made?\"\n\nSasha nodded, not looking at him now.\n\nHer stepfather chuckled. \"Can't believe you're still watching that after all these years.\"\n\n\"The writing's a lot more sophisticated than I could appreciate it when I was just a kid.\"\n\n\"Still looks like the big dumb cat gets all riled up until the little cat strokes his hand and makes him purr. They do it in every episode. It's speciest.\"\n\n\"It's meant to be cats, not Caitians.\"\n\n\"Whatever.\" Hrelle rose, corking and taking the bottle with him. \"Don't just sit there in front of that screen all day, get a decent breakfast in you before catching up with your classwork. I suggest a Cuban omelet with ham and peppers; that was your mother's favourite the morning after one of our all nighters-\"\n\n\"Dad!\"\n\n\"Good night,\" he chuckled as he entered the compartment, closing the door.\n\nAnd then opening it again. \"Would one of you please go to the Environmental Control panel in the cockpit and clear the sex funk out of this room before I choke?\"\n\n*\n\nUSS Surefoot, Deck 3, Hangar Bay, Stardate 35325.02:\n\nCommander T'Varik awaited the three as they emerged from the shuttle, ignoring the crew that appeared to swarm around the smaller vessel to perform the usual check-ups. \"Welcome back, Captain, Cadets. I trust all went as expected.\"\n\n\"More or less. Anything to report outside of what you've already sent me?\"\n\n\"Of course not, Captain.\" She nodded to the cadets. \"Congratulations on passing the Astrophysics Exam. You will be pleased to know that the rest of Alpha Squad also performed to satisfactory levels.\"\n\n\"That's good to hear, Commander.\" Sasha breathed in. \"Commander, may I have a quick word with you now, please?\"\n\nThe Vulcan raised an eyebrow, before nodding to a corner of the hangar bay, allowing the cadet to follow her towards it. \"How may I assist you, Ms Hrelle?\"\n\nSasha swallowed. \"Commander, I wished to apologise for my behaviour towards you in the holodeck before I departed. It was disrespectful and uncalled for.\"\n\n\"I cannot argue with that, Cadet. However, I should point out that you have already apologised to me before you departed for Tau Beta.\"\n\nSasha flushed. \"Yes. But I, ah, I'm actually meaning it now.\"\n\nT'Varik raised an eyebrow. \"I see. In that case, I will accept this genuine apology.\" She paused before continuing. \"You will, however, remain bereft of two weeks' academic credits, and you will stay suspended pending an assessment from the Counselor.\"\n\nSasha nodded at that, appearing contrite. \"Fair enough. If I had gone to her from the start to talk about all this, I wouldn't have ended up in trouble.\"\n\n\"I cannot argue with that either.\" T'Varik relaxed her posture a little. \"And should you wish to talk on a less formal basis, Sasha, I will always be available.\"\n\nSasha offered a slight smile. \"Thank you.\"\n\n\"Commander,\" Hrelle drew up to them. \"If you're done here, I need to speak with you on an urgent matter. You and the Counselor.\"\n\nThe Vulcan nodded, looking to Sasha again. \"You and Mr Arrington return to your quarters with your belongings. Alpha Squad is currently on a study period there, I believe.\"\n\n\"Yes, Ma'am.\" She grabbed her bag and nodded to Giles to follow her out of the hangar bay, striding ahead of him by a step.\n\n\"Sash? Sasha, wait.\"\n\nShe didn't want to. She knew what he wanted to talk about. What he had wanted to talk about since that time together in the sleeping compartment. But she had managed to avoid that, during the interminable journey back to the Surefoot.\n\nBut she did stop and face him, looking down either end of the curved corridor to ensure they were alone. \"Let's just keep what happened between us... between us. Okay?\"\n\nIt didn't look like it was okay to him. But he nodded. \"Sure. If that's what you want.\"\n\nShe saw a vista of emotions play across his face. But she couldn't deal with them, not now. It had been embarrassing enough when her father joked about it. \"Yes. It is.\"\n\n*\n\nDeck 1, Captain's Office:\n\n\"Giles has a secret communications link to his father,\" Hrelle announced.\n\nT'Varik and Kami exchanged glances, the Vulcan responding first with, \"How do you know this?\"\n\n\"I heard him talking, when he was alone in the sleeping compartment. I heard this beeping sound go on for a long time, which I assumed was just some sort of alarm. Then I heard him talking to the man. Later, when they were busy and I was supposed to be lying down, I searched his case, and found an old-fashioned communicator, some mid-23rd Century model.\"\n\n\"How could something like that reach light years across space?\" Kami asked.\n\n\"I'm assuming it only looks like an antique, and is in fact an advanced piece of technology from the offices of Starfleet Intelligence. I'm also assuming that it was delivered to him by his aunt, Captain Lucille Arrington, when the Impala intercepted us weeks ago.\"\n\n\"That would be logical,\" T'Varik, frowning. \"Did you confront him about it?\"\n\n\"No. I only heard his side of the conversation. It was clear that he was ordered to report anything unusual that goes onboard. It was also clear that he was very reluctant to do so. But fathers can be very... assertive.\"\n\n\"And with a large extended family of equally successful, equally assertive people backing him up...\" Kami added with some sympathy.\n\nHrelle nodded. \"I dropped hints to him, that he could talk to me about anything. I want to give him a chance to come to us about it. I... like him.\"\n\n\"A laudable sentiment, Captain,\" T'Varik opined. \"But the legal ramifications of Admiral Arrington's actions are considerable, if he is operating without authorisation from Starfleet Command.\"\n\nHrelle leaned back in his chair, rubbing his eyes. \"There's an additional complication, and though I would normally not betray such confidences, given the circumstances...\" He looked up at the two women again. \"Sasha and Giles had sex on the shuttle.\"\n\nBoth of them glanced at each other, Kami responding first with, \"Before or after you witnessed the execution?\"\n\n\"After.\" He felt himself flush beneath his fur. \"Whoever constructed the walls of the sleeping compartment never factored in Caitian hearing. And... I didn't want to let them know I could hear them because, after what she saw, Sasha sounded like she really needed it. She talked about wanting to 'feel alive'.\"\n\n\"That's a common occurrence among victims of trauma,\" Kami noted soberly. \"And given what you reported about Alexander Giger's execution, that would certainly qualify as traumatic. Do they know that you know?\"\n\n\"Yes.\" He shrugged at their reactions. \"I had to bring it up, they were going around all furtive and guilty.\" He looked at T'Varik. \"You know what humans are like.\"\n\n\"All too well. I am assuming that the incident wasn't repeated during the journey?\"\n\n\"You assume correctly. And Sasha doesn't know about the communicator.\" He breathed out. \"Commander, I want you to check Alpha Squad's schedule. The next time they're on duty for an extended period of time, I want you to personally collect the communicator and run a full scan on it, collect as much evidence as you can about its origins and purpose; do everything short of tearing it apart. Get Lt Abed and Chief Abed to assist if necessary. Then put it back where you got it.\"\n\n\"Is there an ultimate goal to this, Captain?\"\n\n\"We'll know when we get there. Dismissed.\"\n\nT'Varik nodded and departed. Kami drew closer to Hrelle. \"And how are you doing after all that?\"\n\n\"After all what? Seeing the man who turned my life upside down end up as the first meal for a cluster of Nist larvae, and feeling more disturbed that I'm not very disturbed by it? Being present when my little girl lost her virginity, and wondering if I did the right thing by letting her get on with it, and then bringing up the subject? Or do you mean finding out that a cadet is secretly spying on me on behalf of his family over what could be at best a personal vendetta, or at worst a secret investigation by Starfleet Command?\" He rubbed his eyes again. \"When did life get so complicated?\"\n\n\"The day you crawled out of your mother. And that's a lot of issues for us to deal with.\"\n\nHe stared at the far wall. \"Not really. I was prepared to put Giger behind me without a second thought; seeing him die before my eyes doesn't change that. And if my little girl is old enough to be intimate with someone else, she's old enough to be the butt of her old man's jokes. And if the Arringtons are going to try and take me on... let them try.\"\n\nShe smiled. \"Very sexy. But you're not off the hook for the increased counseling sessions.\"\n\nHe grunted. \"Just take care of Sasha first. Think you can manage it without her kicking you in your babymaker again?\"\n\nShe winced with the memory. \"I'll keep her at arm's length.\"\n\nHe stared at her.\n\nShe shrugged. \"Okay, leg's length, then...\"\n\n*\n\nDeck 2, Alpha Squad Quarters:\n\nJonas Ostrow focused on the latest adventures of Fat Cat and Lil' Kitten on the screen opposite him, trying to ignore the big blue bare foot shoved in his face. \"No.\"\n\nNext to him on the couch, Neraxis Nemm wriggled her toes invitingly. \"Go on, Scrappy. That's your forfeit.\"\n\nHe looked up at the others. \"She cheated, somehow. Someone tell me she cheated.\"\n\nSitting at the adjacent table reading the news reports on her PADD, Eydiir Daughter-of-Kaas never looked up. \"I no more care about the outcome of your game of Durotta than I do this childish carton you and Sasha enjoy so much.\"\n\n\"It's 'cartoon'.\"\n\nAt the other table in the living quarters, Kitirik was gently peeling the shedding skin off the soft mottled green surface on his forearms, the loose wrinkled folds beneath his reptilian jaw purple with embarrassment at performing such an intimate act, even in the presence of his friends. \"Forgive me, Friend Jonas, but I am unfamiliar with the rules of the aforementioned board game. And protocol would prevent me from suspecting unsporting behaviour on her part.\"\n\nNeraxis lifted her other foot up off Jonas' lap, nudging his cheek with her big toe. \"Come on, Scrappy. Pay up.\"\n\nJonas sighed, setting both feet down again, before selecting one to massage first, kneading the toes, sole and arch. \"I'll win next time.\"\n\nNeraxis leaned back, folding her hands onto her belly and grinning. \"But if you don't, just think of what I'll be getting you to massage next.\"\n\n\"Jonas, be sure to wash your hands afterwards,\" Eydiir advised. \"Given the caustic nature of Bolian biochemistry compared to other humanoids, Neraxis' hyperhidrosis could trigger an allergic reaction in your hands.\"\n\n\"Hyper-whatsit?\"\n\n\"Sweaty feet.\"\n\nNeraxis frowned. \"Are you saying I have sweaty feet?\"\n\nJonas' face screwed up in disgust. \"She doesn't have to say.\"\n\nEydiir ignored them as she read another page of news. \"Kit, you might be interested in this: your people are engaged in hostilities with another government. The... Ootine?\"",
        "Kitirik stepped peeling, his red eyes narrowing in thought. \"It is pronounced 'Oo-oh-teen', Friend Eydiir. Forgive the correction.\"\n\n\"So who are they, Kit?\" Neraxis asked.\n\n\"A race on a planet in the same system as we Qarari. We have had numerous altercations over the past century. It is regrettable that actual hostilities have broken out again, although perhaps the Federation may offer mediation in this latest instance, even if we have not yet been formally offered Federation membership.\"\n\n\"You don't know anyone who might be fighting, do you, Kit?\" Jonas asked, sounding sympathetic.\n\n\"Only the males of the Warrior gender will be involved, Friend Jonas, and our genders as a rule do not intersocialise. It is very sad all the same. I would prefer not to talk about it, thank you.\"\n\nThe door to their quarters slid open, and Sasha and Giles entered, Giles smiling at them. \"Away for a few days, and look at the four of you, slumped around like Tiburian sloths.\"\n\nNeraxis swung her feet off of Jonas' lap and stood up, letting him follow. \"Guys! We weren't expecting you back until this afternoon!\"\n\nGiles set his bag down. \"We made better time than we thought. Good thing, too, we were getting cabin fever in that thing.\"\n\n\"And did the execution of Mr Giger meet your expectations?\" Eydiir asked Sasha.\n\nSasha paled. \"I don't want to talk about it - except to say I hope never to see something like that again.\"\n\nThe Capellan nodded, hugging her. \"I understand, my friend.\"\n\nSasha looked to her, to each of them, sobering as she remembered the sour, cold atmosphere she had left behind her. The business with the execution had temporarily unhinged her, turning her into a Class 1 Bitch. And the thought of it had kept rattling in her brain on the way back. She set down her bag and looked at them as they stood around. \"Listen, before this goes any further: Eydiir, Jonas, Neraxis, Kit... I'm sorry. I treated you all like crap before I left. I was in a bad place.\"\n\n\"That much was obvious,\" Eydiir noted drily.\n\n\"I- I don't know how I can make it up to all of you.\"\n\n\"I am not prepared to keep an account, Friend Sasha,\" Kitirik informed her. \"It seems a useless exercise. Perhaps it would be better to put it behind us?\"\n\n\"Hear, hear,\" Eydiir agreed, patting Sasha on the shoulder. \"You will need to do more than what you've done to shake our friendship. That is not meant as a challenge, by the way.\"\n\n\"Speak for yourselves,\" Neraxis groused good-naturedly. \"I think we should make her use up some replicator credits to get us some snacks for the next Movie Night.\"\n\n\"Failing that,\" Jonas offered, looking a little queasy. \"You can take over rubbing Neraxis' feet.\"\n\nSasha felt the relief wash out of hers. \"I don't know what the hell that means... but I'm looking forward to finding out. Thank you. All of you.\"\n\nStanding close beside her, Giles slipped his hand into hers, squeezing gently.\n\nShe accepted it - before catching herself out and visibly drawing back, recovering quickly. \"So, what's been happening?\"\n\nThe Squad looked to each other, Eydiir responding first with, \"Following the successful passing of our Astrophysics Exam, the other Squad Leaders have requested to commander T'Varik that we have what is called a 'Christmas Party'.\"\n\n\"Christmas!\" Giles smiled. \"Hell yeah, it's almost Christmas on Earth!\"\n\n\"I am unfamiliar,\" Kit confessed.\n\n\"I have researched it,\" Eydiir declared. \"It is the ancient celebration of a bearded transdimensional being who visits homes one evening and leaves demigod infants in tiny stables.\"\n\n\"It's... not quite like that,\" Sasha pointed out. \"Anything to drink in here?\"\n\nWordlessly Giles moved to the refrigerated storage box where they kept drinks rather than venture to the mess hall replicators, bringing back an assortment, handing Sasha one bottle, and the rest to the others.\n\n\"Thanks, Sport.\" Neraxis popped the top off her pepper-flavoured ale, watching as Sasha and Giles slid down to the floor together, before the rest of them joined in a circle. \"So, how was it? The two of you stuck together for ten days?\"\n\nSasha and Giles looked to each other, saying nothing at first, until Sasha finally replied. \"Okay. Stayed out of each other's hair, studied together.\"\n\n\"Yeah,\" Giles concurred. \"Stayed out of each other's hair, studied together, that's all.\"\n\nThe group went silent.\n\nThen Kitirik asked, \"What was the sex like?\"\n\nNaturally Sasha was drinking deeply when it was asked, causing her to spit tulaberry juice down the front of her blouse. She wiped her mouth on her sleeve. \"Kit, what the hell-\"\n\n\"They had sex?\" Jonas squeaked.\n\nNeraxis' eyes widened. \"Sex? As in sexy sex?\"\n\nEydiir's gaze narrowed on them. \"Did you have sex on the shuttle?\"\n\nSasha frowned back. \"No, we did not have sex on the shuttle!\" She looked to Giles. \"Isn't that right?\"\n\n\"No,\" he replied, after a pause. \"I mean, that's right, no.\" But then he looked to Kitirik. \"How the hell did you know?\"\n\nThe Qarari looked confused now. \"It seemed obvious: your close physical proximity upon entering the room, when prior you maintained a respectful distance for personal space. You brought Friend Sasha a drink without being asked, and she did not provide an appropriate response of thanks, indicating a level of intimacy beyond your previous relationship. Then there are the reflective denials indicative of deception.\"\n\n\"Yeah,\" Neraxis agreed slowly, adding, \"Not to mention you literally just asked Kit how he knew. I wanna play poker with you, by the way.\"\n\nSasha rubbed the bridge of her nose, feeling a hot flush through her. Unable to look at any of them, she announced slowly, quietly, \"Listen very carefully, because I intend to say it only once: yes, Giles and I slept together. But it was a terrible, horrible mistake, okay? We should never have done it. It was impulsive, immature, idiotic, insane-\"\n\n\"Sasha-\" Eydiir interrupted.\n\nSasha opened her eyes - in time to see Giles return to his feet and leave their quarters without saying a word. \"Giles?\" As the door slid shut again, again silently, she looked to the others. \"What's wrong with him?\"\n\nNeraxis had turned a pale blue. \"Are you kidding? You sat here telling us about what a nightmare it was being with Giles, and you did it sitting right next to him! Holy Hraxor, that was the most sorry I have ever felt for any guy, ever!\"\n\nSasha's stomach dropped into her lap. \"I- I didn't mean it like that! He knows we decided to keep it a secret!\"\n\n\"Well, there's keeping it a secret, and then there's talking like sex with him was the equivalent of heart surgery with a rusty Klingon blade.\"\n\n\"Why was the experience so unpleasant, Friend Sasha?\" Kitirik asked curiously. \"Friend Giles does not appear unattractive, and my understanding of humanoid sex is that it is-\"\n\n\"Kit, shut up! You don't have to ask about every single thing that pops into your head, okay?\" Sasha rubbed her eyes again. \"Shit, I didn't mean to hurt Giles' feelings.\"\n\n\"Maybe not,\" Eydiir conceded. \"But you still did.\"\n\n\"And maybe you should go tell him that?\" Neraxis suggested.\n\nSasha breathed in deeply. \"Yeah. Yeah, I'd better.\"\n\nAs she rose and followed Giles out the door, the remaining four looked to each other with a mixture of emotions.\n\n\"Well,\" Neraxis muttered, looking at Eydiir. \"That was unexpected.\"\n\nThe Capellan nodded. \"Agreed.\" Inwardly, she hoped that it was something that could be mended, or she feared for the stability of their squad.\n\n*\n\nDeck 1, Rec Room:\n\nGiles strode in, walking up to the replicator and ordering a beer. It responded, \"Cadet Giles Arrington, you are scheduled to be on duty from 1600 Hours. Do you wish this order completed?\"\n\n\"Yes,\" he snapped, not wanting any attitude from a computer. He almost reached in for the glass while it was still being created in the slot, even though the safety features would have automatically shut down and drew attention from the others in the room. He took a huge swallow while he stood there, before finding himself a table alone.\n\nWell, that was a kick in the ass. He knew immediately afterwards that Sasha had mixed feelings about their making love, but he had put it down to the circumstances that had brought them together, and to being in the shuttle with her father - especially after the Captain had admitted knowing what had been going on all along. The Captain at least seemed willing to treat the both of them like adults, which was more than his own father behaves towards him.\n\nBut then, to hear Sash talk about them to their friends like that... How the hell was he gonna face them again after this? How was he gonna face her?\n\nWhat the hell was he doing on this ship anyway?\n\n\"Hey, Giles.\"\n\nHe looked over at the nearby table. Jared Miro, the Argelian leader of Beat Squad, sat there with other male cadets: his own Science Specialist Ingalls, and Williams, Beaudine and Orogg of Gamma Squad. Jared grinned, loving being the centre of attention. \"Come on over, let's talk.\"\n\nGiles leaned back in his chair, nursing his beer. \"I'm not feeling talky.\"\n\n\"I sympathise, Giles. I've ridden the Sasha Shuttle, too. The girl leaves you exhausted.\"\n\nGiles looked up. \"What did you say?\"\n\nThe Argelian looked to his friends and laughed with them. \"She's a sweet little ride, but she doesn't know when her mouth should be used for other things.\"\n\nGiles' face tightened, and he set his beer glass down loudly on the table as he rose and strode towards the five of them, his gaze fixed on Miro, who was chuckling at his own joke, the others following suit - until they saw the expression on Giles' face. \"You can drop that nasty talk right now. You never slept with her. The only thing you came away with from being with her was a fat lip when she hit you.\"\n\n\"Is that what she told you?\" Miro asked, still grinning. \"And you believed her? Clearly she didn't want to hurt your feelings. Bet she told you that you were her first-\"\n\nGiles reached for him, grabbing him by his shirt and lifting him up, the other cadets rising to separate the two of them, holding Giles back.\n\n\"What the hell is going on?\"\n\nGiles slipped out of the hands restraining him but ignoring Jared in favour of the new arrival. \"Lieutenant.\"\n\nChief Helmsman Lt. Irina Velkovsky was a tall, lithe Nordic woman with a personality as glacial as her eyes, though in the weeks since his arrival Giles had shared a mutual love for flying small craft, inspiring him to someday try his luck on the Delos Run as she had done. And as his direct supervisor, he felt a strong desire not to disappoint her. Which, to judge from her expression, was a threat. \"I didn't expect you to be starting fights, Mr Arrington. I expect better self-control from a pilot.\"\n\nGiles flushed - his heat increasing as he saw Sasha enter, having caught the tail end of Velkovsky's criticism. \"It's not a fight, Ma'am. Jared and I were merely demonstrating popular martial arts from our respective planets.\"\n\nVelkovsky made an incredulous sound that matched her expression. \"Given what the Argelians get up to, I'd hate to see what sort of moves Mr Miro might bring to such a demonstration. I suggest you boys keep such hi-jinks in the gym. Understood?\"\n\n\"Yes, Ma'am.\" He ignored the boys and Velkovsky - and now Sasha - as he departed, leaving his beer behind, and hoping no one would follow-\n\n\"Giles?\"\n\nSo much for that. He didn't stop, though he had no idea where he was going, until Sasha raced ahead and cut him off. \"What was that all about?\"\n\nHe stopped, considering continuing around her again, before finally giving in. \"Jared was mouthing off again.\"\n\n\"So? If someone hit him every time he did that, he'd be in a permanent coma.\"\n\n\"I didn't hit him.\"\n\n\"Velkovsky seemed to think so.\"\n\n\"She was wrong!\"\n\n\"Okay then, why did you not hit him?\"\n\nHe breathed out. \"He said he'd slept with you. That you were...\"\n\n\"Were what?\"\n\nGiles swallowed now, regretting having started this. \"He said you were a sweet little ride.\"\n\nSasha's face turned a shade of scarlet, as she looked away - but then she focused on him again, anger rising. \"So you thought you'd go charging in defending my honour just because we- we-\"\n\n\"You can't even say it, can you? Was it that revolting to you?\"\n\n\"I can take care of myself, I don't need you!\"\n\n\"That's not what you said on the Sureswift!\"\n\nSasha looked ready to punch him - but then the Red Alert klaxon filled the corridor.\n\nBoth of them looked up, seeing other crewmembers leaving the rec room and other areas. Sasha tensed. \"We need to get to our stations.\"\n\n\"Not you,\" Giles corrected. \"You're suspended, remember?\"\n\nHer face tightened as she glared at him - until she acceded, \"Get going, then.\"\n\nHe left her, thanking the Universe for the distraction. And hoping it didn't mean something even worse than the storm that had been cooking in the corridor between Sasha and him.\n\n*\n\nPer the current cycle, Alpha Squad's off-duty stations during a Red Alert was on the bridge; he nodded to the rest of them as he made his way to one of the auxiliary stations, and Hrelle entered, taking the Captain's chair from Lt. Abed. \"What's up, Prakesh?\"\n\n\"Distress signal received from the civilian freighter Beholder, Sir, 1.3 light years distant at 212-Mark-631. Life support failure.\"\n\n\"Helm, plot an intercept course.\"\n\nVelkovsky had somehow crept in and assumed the post. \"Course already plotted, Captain. ETA at Warp 9: 6.2 hours.\"\n\n\"Engage. Ops, send a message and our ETA. Commander, what's their crew and passenger complement?\"\n\nBehind him, T'Varik checked the data. \"Norkova-class, typical crew complement 12. No passengers listed on the manifest they submitted to Starfleet Command two weeks ago. Captain, our distance from their present coordinates may present a problem if their life support failure is significant. They may need to evacuate via lifepods.\"\n\n\"Excuse me, Commander.\"\n\nHrelle, T'Varik and the rest of the bridge crew looked to Jonas Ostrow at an auxiliary Engineering station. The young man flushed but continued. \"The Norkova-class freighter can survive on total life support failure for up to 36 hours, assuming no major hull breaches.\"\n\n\"Indeed, Mr Ostrow? And what is the source of this knowledge?\"\n\n\"Personal experience, Ma'am. My mother's company bought and stripped one of them down. We tested each component for salvage purposes.\"\n\n\"Good work, Jonas,\" Hrelle nodded to him, focusing on T'Varik again. \"Send that message. Unless they have something more to add, tell them we'll be there ASAP.\"\n\n\"Aye, Sir- Sir, we're actually getting another message from the Beholder. They're stating the distress signal was sent prematurely by a junior crewmember, and to disregard.\" T'Varik paused and added. \"They apologise for the error.\"\n\nHrelle leaned back. Giles watched him, could almost see the thoughts running around the man's head, making his furred brow crease before he asked, \"Thoughts on that, Commander?\"\n\nThe Vulcan straightened up. \"'Regulation 45-C: Starfleet vessels are obligated to respond to distress signals via a physical inspection of said vessel or installation, once a signal is received on an official channel, even if the distress signal is subsequently rescinded, unless the Starfleet vessel is already engaged in a verified emergency.'.\"\n\nHrelle nodded. \"Do you think taking the Luntanu artefacts to Starbase 154 qualifies as a 'verified emergency'?\"\n\n\"Unlikely.\"\n\nHe leaned back. \"Helm, continue on our present course and speed. Commander, inform the Beholder to maintain their present position until our arrival. I believe it might be an ideal exercise opportunity for our cadets: safety and medical inspections, security sweeps and the like.\"\n\n\"An excellent suggestion, Sir, though I doubt if the captain of the Beholder will be as sanguine to have her schedule interrupted by us.\"\n\n\"Ask me if I care.\"\n\nT'Varik didn't respond.\n\n\"Well, Commander?\" Hrelle asked mildly. \"Ask me.\"\n\nThe bridge was silent, except for a few people snickering, as T'Varik summoned up the resolve to accede to the request. \"Do you care, Captain?\"\n\n\"Not in the least. They know the regulations. And if they don't like it, they can kiss my furry ass.\"\n\n\"Should I include that invitation in any official response to such protests, Sir?\"\n\n\"Indulge yourself, Commander...\"\n\n*\n\nUSS Surefoot, Deck 4, Sickbay Intensive Care Unit:\n\nSasha stood outside, trying to summon the courage to announce her presence to the only person in the room, who currently had her back to the open doorway, sitting on one of the unoccupied biobeds.\n\nFortunately, the occupant's superior senses stole any further hesitation from her. \"I know you're there, Cadet.\"\n\n\"Uh, Counselor? Are you okay?\"\n\n\"You mean medically or philosophically?\"\n\n\"Uh, it's just that you're in here and-\"\n\nCounselor Kami Shall still didn't turn around. \"This is my assigned duty station during a Red Alert, Cadet, since I'm a medical professional, despite the doubts of Dr Ling. Are you gonna keep standing there, or...\"\n\n\"Sorry.\" Sasha stepped in. With the ship on Red Alert, and her suspended from active duty following her recent behaviour, she would have reported to her quarters, alone. But she didn't feel like being alone. She walked around to face the Caitian female, pausing and frowning. \"Umm...\"\n\nKami had her right foot up near her face, demonstrating a flexibility that few humans could match, while she ran an autosuture over the padding on the sole. \"Thought I'd take the opportunity to deal with some callus. It's welcome protection when walking around on open ground, but it can build up, and affect posture.\"\n\n\"Um... can I help or-\"\n\n\"What are you doing here?\"\n\nThe cold, formal reply threw Sasha; the Caitian had until now been open and warm and friendly. But then of course that had been before Sasha practically assaulted her, when the latter had unsuccessfully tried to get her to stop and talk about her feeling about the execution of the killer of Sasha's mother. \"I, ah, thought that maybe we could have a talk.\"\n\nKami still didn't look up. \"I see. You need an assessment so you can get unsuspended. Well, I have a window open tomorrow at 1630-\"\n\n\"Please-\" Sasha's voice cracked, and suddenly she felt like she was going to shatter. It both surprised and scared her. \"I need you.\"\n\nAnd it made Kami look up, regarding the younger girl for a moment, before setting down her medical tool, rising and moving to the door, activating the manual controls to shut the door and give them some privacy. Then she faced Sasha again. \"Okay. But we need to get a few things straightened out before we proceed. Understood?\"\n\nSasha nodded. \"I'm sorry about our fight-\"\n\nBut Kami held up a hand. \"I recovered. You did a far worse job on your father. Or is it your stepfather now? Or maybe just 'that son of a bitch on the bridge'? What are we calling him these days?\"\n\nSasha took a step back, feeling her face burn as she recalled the petty, nasty things she had called him when they were arguing about going to the execution. They had made up since then, on the journey back, but obviously Kami didn't realise this. \"It's okay now-\"\n\n\"You think that? No. You have no idea how much he depends on you, on your love for him. He'd rather lose his tail again than think he's lost you.\" She paused, and then demanded, \"Well? What is he to you now?\"\n\n\"My Dad,\" she replied without hesitation.\n\n\"And is that gonna change again if you don't get your way the next time?\"\n\n\"No.\"\n\n\"Are you sure?\"\n\n\"YES!\"\n\n\"Good.\" Kami drew closer, her gaze unwavering on the younger girl. \"You had also implied a relationship between your father and me. Let me set the record straight on that too.\"\n\n\"You don't have to-\"\n\nQuicker than Sasha could see, Kami shot her hand forward, pointing a clawed finger in the cadet's face. \"I'm still talking.\" The Caitian relaxed her arm and breathed in before continuing. \"I love your Dad.\"",
        "The admission was the last thing Sasha expected. She recalled the nasty, cutting remark she had made to Kami when they were fighting, and had hoped the woman would have forgotten it. And if she hadn't, that the woman would have denied it.\n\nKami lowered her arm as she proceeded. \"I love him. I love him in a way I haven't since my late husband. In fact, I love him so much that I have to bury those feelings and remain his Counselor, because he needs me more in that role than as a partner, where I can't remain professional and objective...\" Then her expression softened. \"No one else but T'Varik knows this... and probably your Dad, too. Now you have something more to hold over me, if you wish.\"\n\nShe drew closer to Sasha, her expression sober. \"Now... there's just one more important thing to clear up. The most important thing, really. I hope you're listening.\"\n\nSasha swallowed, clueless as to what it was, but certain that whatever it is, she deserved it.\n\nThen Kami drew her into a strong, tender, affectionate embrace, holding her tightly, whispering, \"I love you, too, sweetheart. I know it's partly because of your father. But mostly it's because you're such a remarkable young woman in your own right. You bring out the mother in me. And I promise that love for you will never, ever change, no matter what is said or done between us. I will always be here for you: as friend, as Counselor, even as a surrogate mother. Whatever you need. I just want you to know that.\"\n\nThe gesture, as strong and pure as it was surprising, swept up Sasha.\n\nAnd she embraced it, as she embraced the older woman, allowing her bottled feelings over the last fortnight to gush out of her, as she shook with sobs.\n\n*\n\nDeck 4, Security Office/Brig:\n\nLike most everything else on the Surefoot, the ship's security team was small, consisting of Lt. Abed, Ensign Gorman, and the three squads' Security Specialists: Alpha Squad's Crewman Neraxis Nemm, Beta Squad's Crewman Atiaro Thykrill, an Andorian female, and Gamma Squad's Gleqom Orogg, a Saurian male. They were collecting phasers and belts and undergoing nominal safety procedures.\n\nThen Abed looked up. \"Can I help you, Cadet Daughter-of-Kaas?\"\n\nEydiir straightened up as she stood in the doorway. \"The surname is an administrative measure, Lieutenant, and not one I employ; Cadet Eydiir will suffice. The medical records of the crew of the Beholder has identified among them a carrier of Type-D Synthococcus Novae, a potentially lethal bacillus strain that requires additional booster shots for each of us before we interact with them.\" She indicated the medical bag slung under one arm. \"I am here to administer the shots.\"\n\nAbed shrugged. \"You heard the cadet, kids. Line up.\"\n\nEydiir prepared the shots and proceeded, while Neraxis waited and asked, \"Have you seen Sasha anywhere?\"\n\n\"She is in Intensive Care.\"\n\n\"WHAT?\"\n\n\"She is having a private talk with Counselor Kami while the latter is stationed there during the Red Alert.\"\n\nThe Bolian grunted. \"Lead with that next time, okay?\"\n\n\"There was also a potential altercation between Giles and Jared Miro in the Rec Room.\"\n\n\"Oh? And what did that mouthy little Argelian prick do this time?\"\n\nBeside her, Thykrill frowned. \"Hey, Jared's my Squad Leader!\"\n\n\"You have my condolences,\" Neraxis assured her.\n\nBoth women faced each other now, the Andorian's antennae swivelling towards Neraxis as she challenged, \"You want to get on the mats and sort this out, Bolian?\"\n\n\"Power down, or give me back those phasers,\" Abed commanded. \"What's up with you two anyway?\"\n\nBeside them, Orogg, a Saurian with a distended lavender reptilian head and huge round hazel eyes, regarded them with amusement. \"Maybe there's only room for one blue-skinned female Security Specialist on this ship?\"\n\n\"Jared Miro claimed to have had sex with Sasha during our field exercise on Luntanu,\" Eydiir informed them. \"A lie, obviously.\"\n\nNow Thykrill faced her. \"Why 'obviously', Capellan? Why take her word over his? They were all over each other long before Luntanu.\"\n\nEydiir frowned and drew closer. \"Because Sasha is my best friend, Andorian, and would not lie to me. Now extend your arm.\" As Thykrill did so, Eydiir pressed the hypospray into the other girl's bicep and continued, more confidentially, \"It is true she was enamoured of him - at first. Then she discovered he wasn't truly interested in her, but only in having sex with as many different races as he can. It's a hobby for him, collecting... trophies. Any woman unfortunate enough to fall for his charms will soon find themselves in a similarly exploited position.\"\n\nThykrill tensed, her expression changing from hostile to... shock?\n\nThen Eydiir understood. \"I'm... sorry.\"\n\n\"What?\" Neraxis asked, looking between the two of them, before focusing on Thykrill. \"You've been with him?\"\n\n\"Shut up,\" the Andorian muttered, turning away.\n\n*\n\nDeck 4, Sickbay Intensive Care Unit:\n\nSasha and Kami were sitting on the floor of the room, out of sight of Dr Ling, though the Chief Medical Officer had stopped knocking on the window trying to get their attention.\n\nSasha stared ahead at the base of the biobed in front of them. Her voice was hoarse, her eyes and mind weary from speaking about her experiences witnessing the execution of Alexander Giger. \"I forced myself to keep watching. I didn't want to. But I had let myself get so worked up, so bloodthirsty about it. Now that I didn't want to see it, I made myself. How screwed up is that?\"\n\nKami nudged the girl's shoulder. \"I've heard worse. And I'd be more worried for you if you didn't feel like this.\" After a moment, she added, \"You were right, when we fought. If I had the chance to see the killers of my husband executed, I might have accepted it. You... you should never have been given the temptation. No one could resist it.\"\n\n\"Dad did.\"\n\nKami blew a raspberry. \"Don't get me started on how wonderful your father is.\" Then she asked, \"How did you feel after you returned to the shuttle?\"\n\nSasha tilted her head to rest on the Caitian's shoulder. \"I threw up. I threw up until there was nothing left in me, and then I threw up some more. Dad held my hair out of the way, and Giles got me some water. I lay down. I felt numbed, anaesthetised. Hating myself for being a part of all that, even if I had changed my mind at the end. I wanted to feel something different.\" She swallowed. \"Giles came in. He was worried about me, wanted to know if I needed anything. So... we made love.\"\n\nKami smiled to herself. \"I think he would have been happy just to get you a cup of tea. How did he react?\"\n\n\"He- He was really nice. Gentlemanly. He wanted to make sure I was in my right mind, didn't want to take advantage of me. I convinced him otherwise.\" She smirked. \"He... He didn't take much convincing.\"\n\nKami chuckled. \"How was it?\"\n\nSasha continued to stare ahead. \"Good - once we stopped trying to do it on the bunk and moved to the floor. Then I messed up after that, and kept messing up. I started getting scared about how we would act towards each other afterwards. Was he going to profess his undying love to me? Was I going to profess it to him? And when Dad told us he'd heard us, I couldn't talk to Giles about it. I was hoping to when we got back and had some privacy. But then the Squad worked out what we had done. And I panicked, and told them it had all been a terrible mistake. Giles took that personally.\"\n\n\"Do you blame him for that?\"\n\nSasha shook her head. \"When I went after him, I found he'd gotten into a fight with Jared, because Jared had claimed he'd slept with me. And it felt like Giles had made himself my boyfriend and was defending my honour.\"\n\n\"Or... Giles just wanted to punch Jared because Jared is very punchable.\"\n\nSasha made an amused sound. \"Why can't I just stop myself and straighten things out calmly with Giles?\"\n\nKami shrugged. \"Maybe because it's not straight with yourself? Maybe you do have feelings for him that you haven't faced?\"\n\nSasha started to protest - then thought better of it. \"I like him. He's matured since we first met. He's supported me, listened to me when I needed someone. And he really opened up to me on our way to Tau Beta. I don't regret him being my first - better him than Jared, now that I know the truth about the creep - but I'm mixed up about if I want to make sex a part of our relationship.\n\nAnd there are conflicts of interest there when you're partnered with someone who reports directly to you, potential problems if we end up arguing, factors that can hurt the group. That's not fair on them. I wouldn't want that. I know he wouldn't, either.\" She shook her head. \"I don't know what to say to him.\"\n\n\"Everything you said just now sounded pretty good to me.\"\n\nSasha looked to her. \"You think?\"\n\nKami nodded. \"And you know, Giles is probably feeling much of what you're feeling now, not knowing how to treat your relationship. And... he may have ongoing issues that have nothing to do with the two of you, that could be distracting him.\"\n\n\"What sort of issues?\"\n\n\"The sort of issues that are none of your business, young lady,\" Kami scolded good-naturedly. She patted her on the leg. \"Now, according to the status panel up there, we are out of Red Alert, and have no reason to hang around in here. Let's get back to our preferred places before Dr Ling has Security phaser their way in here.\"\n\n*\n\nDeck 2, Alpha Squad Quarters:\n\nT'Varik used her command override and entered the rooms, proceeding directly to the sleeping quarters. With the Surefoot on its way to the coordinates of the freighter Beholder, she had arranged for the three squads to keep busy for the next several hours readying the hangar and cargo bays for emergency triages, preparing the shuttles for possible evacuation, and arming and equipping the Security Teams for potential hostile responses. Mr Arrington and the rest of his squad was engaged.\n\nIt did not take long for her to locate Mr Arrington's case - and the communicator, buried beneath some civilian clothes. She paused, inwardly studying the five microsecond emotional response she had just experienced at having this confirmed, before returning the case and rising. It was predominately disappointment in the furtive behaviour of Mr Arrington and his family, with a focused measure of criticism towards the more experienced members of Starfleet as opposed to the cadet. She also noted a five-percent focus of self-recrimination for not detecting such a possibility as this, and resolved to examine it later in her meditations-\n\nT'Varik slid the communicator into the pocket of her jacket as the door to the quarters slid open, and Sasha entered, startled by the presence of the First Officer. \"Commander! What are you doing here?\"\n\nThe Vulcan took a moment, mentally assessing the ethics behind her current assignment: she had no moral qualms about lying when in the performance of her duties, but she did have... reservations... about lying to Sasha, particularly given her emotional entanglement with Giles. So she chose deflection rather than deception. \"You are currently on suspension. You should be in your quarters. Where have you been?\"\n\n\"At Sickbay, with Kami, talking.\" She ran her hands though her hair. \"It's exhausting, and I have an increased number of sessions with her for a while. But she says she will recommend that you drop the suspension.\"\n\nT'Varik nodded. \"I welcome your return. Get into uniform immediately and report to the bridge. There will be a meeting at 0730 Hours in the Briefing Room before our rendezvous with the Beholder. You and the other Squad Leaders will attend.\"\n\nSasha hesitated before replying, \"Yes, Ma'am.\"\n\nAs she entered the sleeping quarters for her uniform, T'Varik considered departing then, before pausing and asking, \"Is there something bothering you, Sasha?\"\n\nFrom the other room, she called back, \"I don't want to trouble you with anything if you're busy, Commander.\"\n\n\"I believe my earlier offer to be available to you is still valid, and we will be otherwise engaged later.\"\n\n\"Oh, okay... Um, have you ever, uh... been with a co-worker?\"\n\nT'Varik breathed in. \"Perhaps for the sake of efficiency we can dispense with the euphemisms? Are you asking if I have had sex with a colleague?\"\n\nSasha popped her head out of the doorway, her face flushed. \"I, ah, know that Vulcans don't like talking about sex-\"\n\n\"That is a common generalisation. Vulcans of certain families in certain regions of my world are known for their reticence in discussing sex, particularly with humans, who tend towards the prurient with this subject matter - no offence intended.\"\n\n\"None taken. Well, I suppose if you only feel desire once every seven years, you don't get a chance to talk much about it.\"\n\n\"Another generalisation. It is true that the Pon Farr is a biological imperative which resurges in Vulcans every seven years, we also feel sexual desire more regularly, just as we do hunger, sleep and other life processes.\n\nAnd the answer to your question is Yes. Four years ago I entered into a relationship with another instructor at Starfleet Academy. As we found ourselves physically and intellectually compatible, she and I remained lovers for the following 1.76 Standard Years.\"\n\n\"She?\"\n\n\"Yes. I prefer females. And I would prefer to keep her identity confidential.\"\n\n\"Of course, I just- don't Vulcans get betrothed to mates when they're children?\"\n\n\"Yet another generalisation; I must consider creating a course to dispel such cultural myths. Many aristocratic families still practice childhood betrothals, but the majority of Vulcans consider it an archaic practice. We meet partners much the same way as other races, and should we be unattached while approaching Pon Farr.\"\n\n\"Oh. And, uh, was it difficult, with you two working together?\"\n\n\"No. However, she was not under my direct command, and I am of course able to maintain a professional demeanour. It may have been more difficult for us if we were both human, and I was her direct supervisor. Such relationships do occur, but they are generally considered unwise. The senior partner can be at risk of accusations of discrimination, both for and against their partner. And any contention between the partners can have an adverse effect on the working group at large.\"\n\nSasha emerged, fully dressed. \"Yeah, that's what I was afraid of. Thank you, Commander.\"\n\n\"I hope I have been of some assistance.\"\n\n\"Yes... though I don't suppose you ever promised that I'd like the outcome, did you?\"\n\n\"One can never make such promises.\"\n\n\"No.... one can't.\"\n\nTO BE CONTINUED..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "fanfic",
        "fan fiction",
        "caitian",
        "alien11111",
        "starfleet"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-secrets-and-lies-ch-01"
}