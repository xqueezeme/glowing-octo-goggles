{
    "title": "The Big Tits Club Ch. 17-18",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 17: Tahoe III --\n\n****\n\nA stray beam of sunlight woke me up. The curtains had been shut, but there was a half-inch of space between them, and at this very time on this very date, the sun's rays came through at just the right angle to hit me right in the eyes.\n\nI didn't want to get up yet. Yeah, the sun was up, but this was our day to sleep in, and besides, I was spooned up behind the most gorgeous girl in the world.\n\nThe morning air was cold against my right cheek, the pillow reassuringly warm against my left. I snuggled deeper into the covers and their cocooning heat while pressing my chest against her back, covered only by a thin layer of cotton. As my senses came alive, the fingers of my left hand reflexively squeezed the large breast I was currently palming as my left arm snaked beneath her pillow to hold her from the opposite side. My right hand firmed up over her hip, gently holding her in place while I reflexively ground my erection into her panty-covered ass. Breathing deeply, I let my head roll forward to push my nose into her coppery red hair, smelling her sweet fragrance. And all I could think in that moment was, I wish I could wake up like this every morning.\n\nPart of me wanted to wake her up and start up a fresh round of lovemaking, but the better part of me figured I shouldn't. It WAS early, and this was our day to sleep in. And just because that stupid ray of light woke me up didn't mean I should disturb Naimh's slumber. So I stopped hot-dogging her ass, settled myself down, and tried to drift off back to sleep.\n\nUnfortunately, nature called about five minutes later. My morning wood went away, and the urge to have sex was replaced by a tremendous urge to pee. Regretfully, I had to let go of Naimh's big breast and slip my arm out from underneath her pillow. Rolling back, I managed to slide out of bed without waking her and left the room to go to the one shared bathroom for the whole cabin.\n\nWhen I emerged from the bathroom, I noticed that the living room was not empty. Sam sat in her armchair with a mug of fresh coffee, staring out the window. When I took a step, the floorboard creaked beneath my weight, and she glanced over at me, a warm smile spreading across her face.\n\nAt first, I meant to just say \"hello\", slip back into bed, and spoon together with Naimh. But even as I returned Sam's smile, I found myself bothered by what I'd just seen. I remembered what Mari had said the night she'd given me her virginity, about Sam's mask falling away and her true face coming out. Well I'd seen Sam's true face clear as day in the light coming through the window, and it was a face of deep sorrow.\n\nSo instead of going back into my room, I padded softly into the living room. Sam's smiling mask was still up as I approached. I leaned over her armchair, bent forward, and gave her a sweet kiss. Inhaling sharply, she held my head and kissed me back fervently, longingly, but I started chuckling at her hunger and pulled back, saying, \"Lemme get some coffee and then we'll continue.\"\n\nSam had made a whole pot, so all I had to do was pour myself a mug and return. There was no space to join her on the armchair, so I took a seat on the nearest couch and sat back. I patted the seat beside me, and Sam got out of her armchair, bringing both her coffee and the blanket she'd had across her lap. Settling in beside me and allowing me to tuck her underneath my arm, she spread the blanket over both of us and puckered up to resume our little makeout session.\n\nI kissed her warmly, but not passionately. I didn't want to start something that would lead to sex right here on the couch or anything, and when she pulled back, I gave her a serious look and asked, \"What's wrong?\"\n\nSam blinked at me a couple of times and frowned. \"Why would you think something was wrong?\"\n\nI shrugged. \"It's our day to sleep in and yet you're out here, staring out the window, deep in thought and not looking too happy about it.\"\n\n\"I'm fine, and I could say the same for you.\"\n\nI shrugged. \"Woke up and had to pee. I'd have gone back to bed except you looked like you could use a hug.\" I squeezed her for emphasis.\n\n\"I'm fine,\" she insisted.\n\nI just stared her down, a skeptical look on my face.\n\nShe cracked first, pursing her lips and turning away from me abruptly. \"It's nothing.\"\n\n\"I don't know what it is, but I know it's not 'nothing'.\"\n\n\"It's nothing,\" she insisted.\n\n\"Okay well now I know it's about me.\"\n\nSam whipped her head back around to me, her expression as good of a confirmation as any, and I sighed.\n\n\"Please tell me this isn't about me choosing a favorite BTC girl.\"\n\nShe shook her head. \"Doesn't matter. I already know it's not me.\"\n\n\"I don't have a favorite.\"\n\n\"Don't you?\" Sam arched an eyebrow and extended her chin forward in the direction of the master bedroom I had shared last night with Naimh.\n\n\"I don't choose favorites. I love you all.\"\n\n\"That's a politician's answer, or a parent's answer when they tell you they don't have a favorite child. They do.\"\n\nI frowned. \"You've got two older siblings, right?\"\n\nSam pursed her lips and looked away again.\n\nI searched my memory and finally snapped my fingers. \"Rachael's a senior in college, and John is in medical school.\"\n\nSam shook her head in the negative. \"Your memory is a year behind. John already graduated; he's a resident in Boston. Rachael's in her first year at Stanford Med.\"\n\nI smiled. \"Two doctors in the family. Your parents must be proud.\"\n\n\"Proud of them, maybe. They're gonna be disappointed when they don't get a third.\"\n\n\"You don't know that.\"\n\n\"I'm not as smart as they were.\"\n\n\"You're smarter than you give yourself credit for. You're certainly smarter than me. And is that what this is about? You've spent a lifetime in the shadow of your successful older siblings and you're feeling like you don't measure up?\"\n\n\"Don't armchair psychoanalyze me, Dr. Freud.\"\n\nI raised both hands momentarily before wrapping her up in a hug. \"No psychoanalysis. Just love.\"\n\nShe pursed her lips and resisted my embrace for a moment, but eventually gave in and let me hug her. She set her head down on my shoulder and sighed. Eventually, she took a deep breath and muttered, \"It's not that I feel like I don't measure up. It's that I don't really know what to DO.\"\n\n\"Don't know what to do about what? Is it something I can help with?\"\n\nSam looked up at me sadly, shook her head, and set it back down on my shoulder. \"Not when my 'nothing' is entirely ABOUT you. It's you I don't know what to do about.\"\n\nI thought about that for a moment, parsing her words and trying to understand their meaning.\n\n\"Everything's just gotten so crazy over the last few months, and I know a lot of it is my fault,\" she explained. \"In a way, I liked things when they were so much simpler. The six of us teased you, flirted with you, but never actually did anything substantial. If things had stayed that way until the end of the year, we could have parted as friends and never had any regrets.\"\n\nI frowned and looked down at her. \"You saying we can't still part as friends and not have regrets?\"\n\nShe rolled her eyes up to me. \"The friends part, I'm trying really hard to maintain. But there are already regrets.\"\n\n\"Like what?\"\n\n\"I never should have taken your virginity, for one.\"\n\nI blinked. \"Oh.\"\n\n\"For one thing, that was the big line that could never be uncrossed. If I hadn't done that, maybe Alice wouldn't have left. Maybe we'd still be the same BTC I loved for the last few years. Maybe we'd all still be teasing you while getting backrubs on Matty's Chair and nothing more than that.\"\n\n\"Maybe someone else would've crossed the line and we'd still be exactly where we are today. Only then you wouldn't have been my special first, the one I'll remember for the rest of my life.\"\n\nSam looked up at me, and I gave her such a warm smile that she couldn't help but lean in and let me kiss her again.\n\n\"I meant what I said back then,\" I told her sincerely. \"I don't regret it in the slightest. You were my Venus, my Aphrodite. Still are.\"\n\nShe pursed her lips. \"But not your favorite.\"\n\nI sighed. \"I don't HAVE a favorite.\"\n\n\"Yes you do. It's whoever goes LAST. Zofi's got the right idea. By accident, she figured out the male psyche better than anyone else.\"\n\n\"Zofi?\" I asked in confusion.\n\nSam sighed. \"Last night, while Neevie was screaming, 'Fuck my arse, fuck my arse, fuck my arse' at the top of her lungs, Zofi and I got to talking. I wound up thinking I made a huge mistake taking your cherry. In this race, it seems that the last one wins.\"\n\nI furrowed my eyebrows. \"I'm not following.\"\n\nSam shrugged. \"You're a guy. Underneath the safe, nice guy exterior... you're still a guy. You're patient and kind and pretty damn amazing, but you're still male, which means that you get distracted by whatever shiny bauble passes by.\"\n\nMy furrowed eyebrows didn't rise. \"I'm still not following.\"\n\n\"Okay, well then maybe you're not so awesome.\"\n\nI chuckled and pecked her forehead. \"I'm trying here.\"\n\n\"I know you are. The POINT is: your favorite is always gonna be the one you have immediately in front of you. And the one you want is always gonna be the one you haven't had YET. Don't think I didn't notice the way you were making out with Mari on the couch during the movie while I was riding you. I saw the look in your eyes when we took off that sleep mask on Saturday and you realized Zofi was blowing you. I see the way you look at her now that you've already bagged the other four of us.\"\n\nI frowned. \"I'm not in love with Zofi, not remotely.\"\n\nSam shrugged. \"Didn't say you were. I just meant that she's the one you want the most now, because she's the only one you haven't had yet.\"\n\nI looked away, waggled my head, and said, \"Okay, the horny male part of me definitely wonders what sex with Zofi would be like, and the unknown will always be enticing. But that doesn't mean Zofi's my favorite or anything like that.\"\n\n\"No, like I said: Your favorite is always the one you're with, right in front of you. It's in your nature. When Mari first let you suck on her nipples while jacking you off, she was your favorite right then. When Belle first gave you a blowjob, she was your favorite. And when I first fucked you, I was your favorite.\"\n\nI frowned. \"I think you're somehow trying to define the word 'favorite' as 'whoever just gave me an orgasm'. But it doesn't work that way.\"\n\n\"You saying I wasn't your favorite when I gave you a blowjob on the mountain? And that Neevie wasn't your favorite when she let you fuck her ass last night?\"\n\n\"That's exactly what I'm saying. I told you: I don't pick favorites.\"\n\n\"And I told you: I believe that as much as I believe it when my parents tell me they don't have a favorite child.\"\n\nI didn't respond immediately, other than to raise both eyebrows. Sam shook her head and turned away from me again. I took a deep breath, collecting my thoughts while Sam stared out toward the window collecting hers as well. But eventually, she spoke first.\n\n\"Who do you think is the prettiest in the BTC?\" she asked out of the blue, turning back to face me.\n\n\"WHAT?\"\n\n\"It's not me then. If it was me, you would've just told me.\"\n\n\"I'm not picking favorites.\"\n\n\"You think it's Neevie, of course. I mean, the way you always look at her? Please. She's gorgeous.\"\n\n\"You know you're gorgeous too.\"\n\nHer eyes dimmed a little. \"But is that all that there is to me? A hot body and nothing else?\"\n\n\"You're my friend.\"\n\nTears immediately came into Sam's eyes as she looked away from me. But she turned back to face me just as suddenly, asking, \"Will I ever be MORE than a friend? Could you even consider me as your girlfriend?\"\n\n\"We have The Rule specifically to--\"\n\n\"Do you love me?\" she cut me off.\n\n\"Sam, I--\"\n\n\"It's a simple question,\" she cut me off again. \"Do you love me?\"\n\nSensing a trap, I nevertheless replied, \"Yesss...\"\n\n\"Do you love me as much as you love Belle?\"\n\nI pursed my lips and shook my head. \"Belle's different. She's--\"\n\n\"Like your little sister, uh-huh, I got the memo already,\" Sam cut me off again. \"Do you love me as much as you love Neevie?\"\n\nI frowned. \"You're trying to make me pick favorites again.\"\n\n\"Do you?\"\n\n\"Sam, I--\"\n\n\"Do you love her more because she let you fuck her ass?\"\n\n\"I'm not--\"\n\n\"You know yesterday, on the mountain, I said, 'I love you' like ten seconds after you came in my mouth. You know what you immediately said back to me?\"\n\n\"'Love you, too'?\"\n\n\"Exactly. And yet right now when I ask, your answer is completely different.\"\n\n\"No it isn't. You asked if I loved you and I said 'yes'.\"\n\n\"Your TONE was completely different.\"\n\n\"Well the circumstances are completely different.\"\n\n\"I know. I didn't have your dick in my mouth ten seconds ago. And you know what that tells me?\"\n\nI winced. \"What?\"\n\nSam raised both eyebrows. \"That your love for me IS dependent on the stuff I can do for you.\"\n\n\"Sam--\"\n\n\"No, don't apologize for it. It's okay. That's just how the world works. When I get straight A's, my parents love me more. If I don't get into med school, they won't love me as much. I don't ask them to apologize for it. That's just reality.\"\n\n\"Sam, please. I'm sorry if you feel that--\"\n\nThrowing the blanket off our laps, my Aphrodite sprang off the couch and took two steps away from me. \"I told you, don't apologize. If there's one thing I really do hate about you, it's that you're always saying sorry for things you don't need to say sorry for.\"\n\nI bit my lip before saying I was sorry, but she seemed to sense that impulse in me and raised her eyebrows expectantly. Instead, I gave her a serious look and said, \"I DO love you. You will ALWAYS be special to me.\"\n\n\"I'm only 'special' because I got your cherry. If Alice had gotten there first and I'd been second, SHE'D be the special one you'd remember for the rest of your life. See? Conditional love.\"\n\n\"Sam, I--\"\n\n\"Don't apologize!\" she warned me.\n\n\"I wasn't going to apologize.\"\n\n\"Because you don't need to. This is just the way it is. And I'd appreciate if you stop trying to convince me it isn't. This isn't about my parents, and it's not even about you and me. Right now, I just need to sort out in my head what I really want most from life, and what I'm willing to do to get it.\"\n\n\"And what do you really want?\"\n\n\"I want YOU, you stupid blockhead! I want to love you and be with you and have you all to myself!\" Sam thrust her arms at me. \"The only problem is, there are at least two other girls in this very house who want you too, if not all four of them, and maybe five if I count Alice. But I ALSO want to keep my friends, and THAT'S why I wound up sitting here all alone way too fucking early in the morning wondering what the hell I should DO!\"\n\nBelle's voice cut in, saying, \"That's exactly what the rest of us want, too.\"\n\nI whipped my head behind me and over to the stairs, where Belle sat quietly about halfway up. Mari was still up in the loft itself, but was leaning over the railing.\n\n\"I want Matty, that's clear,\" Naimh stated evenly from the doorway to the master bedroom, causing me to turn my head over the opposite shoulder. \"But not at the expense of the BTC. I love him. I've been in love with him since I met him. But you're my best friends, and I SWORE I would never betray you.\"\n\nZofi stepped away from the doorway to the second bedroom, wrapped up Sam in a warm hug and physically pulled her over to the couch before dumping both herself and Sam beside me, with Sam in the middle so I could hug the blonde as well.\n\nSam endured our hugs, hanging her head down and taking deep breaths. But eventually she picked her head up and twisted around to look at the others. \"I'm sorry we woke you,\" she mumbled rather despondently.\n\nNaimh shrugged as she came over to us. \"Walls are thin. Not your fault.\"\n\nSam sighed. \"I'm sorry for even thinking of taking him away from the rest of you.\"\n\n\"Weren't you just telling him not to apologize for things that are just the way they are?\" Belle chided as she came down the stairs. \"You didn't say a thing that we haven't all thought at one point or another. Thankfully, I know we're all smart enough to judge our friends by their actions, not their fantasies.\"\n\n\"And we're BEST friends,\" Zofi said encouragingly while hugging Sam tightly, \"which means we TALK to each other about our feelings and work together to find solutions instead of burying those feelings and letting them fester. Right?\"\n\nSam had moisture in her eyes as she nodded. \"Right.\" She hugged Zofi back.\n\nI wrapped my arms around both of them. Naimh joined the pile a moment later, and then Belle and Mari as well.\n\nWe were the BTC. We'd work it out.\n\n****\n\nThe plan had been to sleep in, have breakfast, and then walk down to the snowy beach to build snowmen. We didn't do any of that stuff, at least not right away, not even breakfast.\n\nThe group hug and the ensuing discussion had been quite cathartic. In many ways, it wasn't so different from that afternoon when Alice crawled into my lap, started making out with me, and asked with deadly seriousness if I was in love with her, and then one-by-one the other girls all did the same. The purpose had been to get all of our cards on the table, for everyone to honestly express their feelings, and as far as I could tell, everyone did exactly that.\n\nAt least I didn't have to worry about accidentally revealing most of the secrets Mari had told me that night. The girls said those things themselves.\n\nBelle told her fantasies of marrying the boy next door and never feeling alone again for the rest of her life, which contrasted with the sexual joy she'd found in watching me fucking everyone else. Sam knew Belle was a voyeur, of course, but had actually kept secret that Belle had been hiding in the closet for that first encounter. The girls got a laugh out of that when Belle admitted what she'd done. And Naimh admitted it was a relief to hear Belle say aloud that she'd rather watch me fucking everyone than keep me all to herself.\n\nNaimh admitted to fantasizing about being my one and only girlfriend, to which all four of the others collectively said, \"We know.\" Naimh blushed bright pink, for some reason thinking she'd done a good job of hiding that part. \"I thought you all actually believed I was just horny and wanted to bang him, not make him fall in love with me and leave the BTC.\"\n\nSam rolled her eyes and drawled, \"No, we knew.\"\n\nZofi was up next, but her turn didn't last very long. She made plain that she WASN'T in love with me. \"So that's one less girl you need to worry about, at least.\"\n\nMari went next, and she rather shyly admitted, \"Yes, I'm in love with him too.\"\n\nBelle frowned. \"Wait, you never told me that.\"\n\n\"Of course I am. C'mon, seriously. Matty's amazing. I love him for the same reasons the rest of you love him. I get butterflies in my stomach when he smiles at me. I fall asleep at night wondering if he's thinking about me. I jill off at night imagining him thrusting deep inside me. It's just that... well... I could never talk to you about it before. You always had dibs on him first.\"\n\nBelle's shoulders sagged. \"I never called 'dibs'.\"\n\n\"You didn't have to. You're my best friend. I would never do anything to come between him and you. Team Belle!\" She actually pumped her fist in the air. \"And isn't that the point of all this? Everyone getting their true feelings out in the open while at the same time making it abundantly clear we'd never betray the BTC by taking him away from the others? The solution is obvious: We're gonna have to share him, which... haven't we already been sharing him for the past few months? What's the difference?\"\n\n\"The difference is that we're open and honest with each other,\" Sam stated seriously. She took a deep breath and added, \"I wasn't being honest, with all of you or with myself. I'm probably still going to feel jealous when he gets a night alone with one of you like last night with Naimh. And I'm probably still gonna do stuff to make me feel like his favorite from time to time. But I promise I'll work on that.\"",
        "Everyone nodded and gave her encouraging smiles.\n\n\"I also owe apologies to Belle and Neevie,\" Sam continued. \"I'd convinced myself that both of you were working to take him away from me, but hearing you both confirm how much the BTC means to you makes me realize it was all in my head. If I ever did anything to undermine his relationships with either of you, please forgive me.\"\n\nNaimh smiled and squeezed Sam's hand. \"There's nothing to forgive.\"\n\n\"And thank you, Belle, for yesterday,\" Sam added. \"Now I realize you were trying to help make me happy by letting me go off skiing alone with him. You were being a good friend.\"\n\n\"You're welcome.\" Belle hugged her again.\n\nAnd all seemed right in the world.\n\nThen as one, the five girls turned to me.\n\n\"Your turn, Matty,\" Belle said.\n\nUm. Shit.\n\n****\n\nDespite the overall holistic vibe of the girls baring their souls and admitting their fears, I was rather hesitant to actually confess anything. Too many years had been spent subsuming my base desires to roll the girls over and violate their nubile bodies beneath a veneer of \"safe, dependable, unthreatening Matty\" for me to easily let go. The girls sort of stared at me for a minute, waiting for me to volunteer my deepest secrets, but I just sort of stared at them unsure of what to say.\n\nThen Belle dropped into my lap and started making out with me. At first, I resisted, thrown off by the abruptness of her maneuver. I wasn't exactly in the mood, but she pulled back, batted her eyelashes at me, gave me coy look, and said, \"Matty, please will you kiss me?\"\n\nWell, I couldn't say NO. And once her tongue came out to play, I found myself kissing her back with every ounce of passion she was showing me.\n\nAnd then she stopped, mid-kiss, and gave me a stern look. \"Did you or did you not say you would leave the BTC to be with me if I asked?\"\n\nFive girls stared straight at me, daring me to not tell the truth, the whole truth, and nothing but the truth so help me God.\n\n\"Um, yes I did.\"\n\nSam folded her arms across her chest, not to plump them up for my viewing pleasure, but rather to block them from view. \"Have you or have you not repeatedly told me you loved me?\"\n\nI saw where this was going. \"I have.\"\n\nNaimh stood right alongside Sam and folded her arms across her chest as well. \"Have you or have you not repeatedly told me you loved me?\"\n\n\"I have.\"\n\nNaimh turned to face Sam. \"What do you think?\"\n\nSam arched an eyebrow. \"Well, the bit about being willing to leave the BTC if Belle asked is a little terrifying, but I'm gonna let that slide because she's always been 'his Annabelle'.\" She finished by miming the air quotes.\n\nNaimh made a face. \"And the bit about him repeatedly saying 'I love you' to both of us smacks of the kind of two-faced male pig our mothers always warned us about, but I'm actually okay with it so long as it's you. I mean... -I- love you, Sam. Well, not romantically, but you know what I mean.\"\n\nSam nodded. \"I do. I love you too, Neevie.\" She stepped forward and the two busty bombshells hugged each other warmly.\n\nI started to think things might turn out alright after all.\n\n\"You're not totally off the hook, buster,\" Belle said dryly from beside me, perhaps sensing my shift in mood. \"But you're really lucky that (A) you've got the only functioning penis in a room full of horny chicks and (B) we really do all love you.\"\n\nMari actually raised her hand. \"Is this going where I think it's going?\"\n\nSam turned to face her. \"If you're thinking this is going into the kitchen because I'm hungry, then you're exactly right.\"\n\nMari put her hand down and slowly shook her head. \"Uh, no, that's not where I thought this was going.\"\n\n\"Oh, THAT part.\" Sam beamed. \"Yes, we're gonna get naked and all screw Matty's lights out together. Oh, and as penance for not being immediately honest and forthcoming like the rest of us, he's gonna wear that sleep mask on his face until I say he can take it off. But first: breakfast!\"\n\n****\n\nI groaned as another warm, wet pussy slowly sank down around my cock. I say \"another\" because it was the third one in the last ten minutes. I also say \"another\" because I didn't actually know the identity of my current lover. That's what happens when the girls put Neevie's sleep mask on you for the second time in less than 48 hours.\n\nOkay, in theory it could actually be the first pussy having come back after the second pussy, or even just the same pussy three separate times. Whatever. I was psyching myself out too much trying to figure it out.\n\nBelle moaned from somewhere behind me and to the left, and it certainly wasn't ME who was making her moan.\n\n\"Sam!\" I hollered while flat on my back across a queen-size mattress, which the girls had helped me pull out of the second bedroom and into the living room. \"If I'm missing out on Zofi going down on Belle again I am NEVER gonna forgive you!\"\n\n\"Relax,\" Zofi said from somewhere to my right. \"You're not missing out on me going down on Belle. And Sam can't respond right now because SHE'S the one going down on Belle.\"\n\nI reached for the sleep mask. \"Son of a--\"\n\nWhoever was riding me stopped my hands before I could get the mask off. Mari laughed, which made her core muscles squeeze her vaginal canal tighter around my cock, and said, \"Sam said you have to keep it on until she says so.\"\n\nI growled. \"She's doing this on purpose.\"\n\n\"Yes she is,\" Mari confirmed while continuing to undulate her body around my shaft. \"She's a girl, and she's petty like that. But she loves you, which means she knows she's being mean and will find a way to make it up to you. And you're REALLY gonna like it when she makes it up to you.\"\n\n\"I suppose.\" I sighed and reached my hands out to hold Mari's ass and help her ride me.\n\nSomebody slapped my hands away. \"Sam said you have to keep your hands to yourself,\" Zofi stated evenly.\n\n\"I already know it's Mari,\" I complained.\n\n\"True, but rules are rules.\"\n\n\"Have you ever asked yourself why we all let Sam be in charge?\"\n\n\"No, not once,\" Zofi replied confidently.\n\nI sighed, shook my head, and let my hands fall back to my sides. Turning my head in Zofi's direction, I said, \"Can I ask you one favor, at least? Please don't let my first time with you be while I'm blindfolded.\"\n\nThere was a pleading whimper in my voice that wasn't very masculine, but I couldn't help it. But any worries I had about the tremor in my voice were washed away when Zofi bent over, kissed my cheek, and murmured, \"We're not there yet, darling.\"\n\nI relaxed and went back to work, but soon enough, Mari dismounted and someone else took her place (Naimh, if I had to guess, given that Sam and Belle were otherwise occupied). Meanwhile, someone else climbed onto my face and lowered her pussy down to my mouth (Zofi, probably?), and I obediently started munching away.\n\nOne-by-one, each of the girls took turns riding my cock (except for Zofi, I was pretty sure). One-by-one, each of the girls took turns riding my face (including Zofi, I'm fairly certain). One-by-one, each of the girls took turns sucking my dick as well (including Zofi, I really hoped). In a way, it wasn't so different from a normal Friday afternoon at my house, albeit with a sleep mask covering my face and with it the ability to precisely determine who was doing what with me at any given time. Except for Belle. She was just so much smaller and lighter (and tighter) than everyone else that there was no way to hide her identity except when giving a blowjob.\n\nThat said, it wasn't nearly as fun for me as a normal Friday afternoon at my house. I hated not being able to see, of course, but not being able to use my hands was actually even worse. I'd hated it on Saturday night when they were just doing blowjobs, and I hated it even more right now. I couldn't grab a girl's ass and yank her back down on my dick. I couldn't reach up and fondle a glorious pair of tits. The very IDEA that I had to hold back my urges to reach out and touch them felt completely familiar -- after all, I had spent YEARS in the BTC doing exactly that -- but it also felt like being shoved back into a cage immediately after being set free.\n\nI had to do SOMETHING, and the one thing I could think of was to make sure all five of them got off. Maybe once they'd each had an orgasm they'd finally let me take off the stupid sleep mask, roll one of them over, and pound the crap out of her.\n\nSo I did my best. Well, I always tried to do my best, but this morning I completely removed the word \"try\" from that equation. Do our do not; there is no try. Right? All I had were my lips and tongue, but I DID my best.\n\nSam could never keep quiet. It was pretty obvious when she orgasmed on my tongue. Naimh came next. I recognized her particular keening wail from last night. Zofi was my next oral orgasm, even if she came softly enough that I couldn't identify her orgasmic moan; by process of elimination, you see, she wasn't as small as Belle nor did she have Mari's lush buttocks pressing against my chest. Meanwhile, both Belle and then Mari cried out their climaxes while riding my dick.\n\nAfter that, I'd had enough. Someone had been lying alongside me, feeding her nipple into my mouth while Mari moaned her orgasmic relief. Satisfied that I'd satisfied all five of my lovers, I ripped off the sleep mask and looked up to see Zofi's look of surprise. She pulled back, removing her perfectly-shaped breast from between my lips, saying, \"Sam's not gonna be happy you did that.\"\n\n\"Yeah, well, I'm about to do something else she might not be happy about.\" I whipped my head around, spotted the blonde bombshell in the upholstered armchair that had become her personal throne on this trip, her head thrown back in ecstasy and her legs thrown over those arms so that Belle could lick her snatch, even without any creampie inside.\n\nLuckily for me, that meant neither girl had any idea I was coming. I lifted Mari off my throbbing erection, half-crawled off the floor mattress, and got to my knees right behind Belle. She squealed and lifted her head out of Sam's crotch in surprise when I abruptly picked her up and planted her petite body more or less right on top of Sam's chest. Belle's knees were braced on the chair's cushion, which conveniently had enough open space with Sam's legs draped over the armrests. And then fisting my cock, I pushed my mushroom head into Belle's pussy from behind and started pounding away.\n\nSince she'd already ridden me several times and cum once on top of my dick, re-entering even Belle's tight pussy wasn't very difficult. I went from zero to sixty in 2.5 seconds, perpetually pummeling her petite personage at a pell-mell pace with absolutely no regard for her pleasure. The girls had mounted, dismounted, and remounted my dick two dozen times by now and I hadn't ever been able to ejaculate. But I was taking care of myself now.\n\nBelle shrieked and squealed and wriggled while I used her little body as a masturbatory fucktoy. Her face ended up right over Sam's left shoulder, and once the Aussie blonde realized what was going on, she laughed and started squeezing Belle's breasts. But she didn't have very long to play because I didn't last very long in Belle's cunt. And in fewer than two minutes, I slammed forward one final time and let the deluge burst forth, absolutely swamping the strawberry-blonde's snatch in mere seconds.\n\nOnce I was done, I pushed Belle's body forward while taking two slightly unsteady steps back, withdrawing my dick and letting her collapse against Sam's chest. \"Your turn now,\" I told our de facto leader. \"I wanna see you eating a creampie out of HER cunt.\"\n\nSam laughed and turned both herself and Belle around so that Belle was the one slumped in the upholstered chair with her legs thrown over the armrests. And after flashing me a wink, the beautiful blonde bent forward and started audibly slurping.\n\nI grinned, thinking that the sight of my little Annabelle getting eaten out was inspiring enough to keep me hard despite having just cum. But then I noticed that I ACTUALLY wasn't getting any softer, not even a little bit. I mean seriously, I had just splooged Belle's sodden snatch full of scalding sperm, but despite that little detail my dick remained diamond hard as if we were just getting started. And even seeing another girl go down on Belle for the first time couldn't explain it.\n\nNaimh noticed right away. \"You're still hard!\"\n\nI blinked and actually touched my erect penis with my finger, pulling away quickly as if it would explode. \"Uh, apparently so.\"\n\nSam pulled her head out of Belle's crotch, a clear glob of my semen on her upper lip. \"I swiped some of my dad's little pills. I gave you one with your breakfast.\"\n\nI blinked in shock. \"You did WHAT?\"\n\nSam laughed again. \"Hey! We're on vacation!\"\n\n****\n\nI had a weapon of mass destruction, and I wasn't afraid to use it. Oh, I really paid for it the next day. During commercials, the spokesman mutters really fast in a quiet voice that dizziness, headache, flushing, and/or upset stomach may occur. Vision changes such as increased sensitivity to light, blurred vision, or trouble telling blue and green colors apart may also occur. I didn't get the weird colors thing, but dizziness, headaches, increased sensitivity to light? Yeah, all that. Of course, I may have also been dehydrated as well.\n\nBut none of that happened until the next day. THIS morning, I had a weapon of mass destruction, and YES I used it.\n\nNaimh was first. I grabbed her, tossed her onto the floor mattress, and thrust myself deep inside. She wrapped her long, lithe legs around my waist and held on for dear life while I pounded her until she saw stars and nearly passed out.\n\nMari was next. I flipped her over and parked her on her knees atop the couch cushions while she braced herself against the backrest. I stopped to give her a rimjob, but only for a minute before standing up and skewering her in a single stab. I lay my chest against her back and held her tig ol' bitties in my hands, gripping them while I laid down the lumber, and I didn't let up until she screamed, writhed in my arms, and finally collapsed.\n\nWhen I grabbed Zofi, there was a touch of terror in her eyes mixed with lust. I kissed her quickly, apologized for scaring her, and dropped to my knees. I threw her legs over my shoulders so I could tongue the hell out of her. But she grabbed my hair only two minutes in and crooned in a husky voice, \"I wanna suck your cock.\"\n\nIf I hadn't already been rock hard, her words would've gotten me there instantly.\n\nI sat up on the couch, letting my leg and ab muscles recover from power-fucking Naimh and Mari while staring rapturously at the sight of exquisite Zofi making love to my dick with her mouth and hands. I was getting pretty close to cumming, but she still wasn't ready to swallow. That's when Belle popped up beside us and said, \"If you let him cum in you, I'd be happy to suck it out.\"\n\n\"Mmm... tempting.\" Zofi's eyes glittered. But far from mounting me on the spot and deflowering herself in a fit of passion, the lissome brunette merely got up from her knees and gave me a tender kiss. \"Someday I'm going to let you cum deep inside me. But not today, and not like this.\"\n\nWhen she pulled back, I smiled and replied, \"Whenever you're ready, you'll know where to find me.\"\n\nSam was on the other side of us, folding her arms across her chest. \"I know I'm supposed to be mad at you for growing a spine and taking off the sleep mask. But there's something else I wanna do instead.\"\n\n\"What's that?\"\n\nShe rolled her eyes like I was the densest creature on the planet. \"You just fucked everyone else EXCEPT me. I want your fucking cock fucking ME!\"\n\n\"Well, you and Zofi get me later tonight, right?\"\n\n\"I'm not fucking waiting until tonight!!!\" Sam squawked, her eyes getting BIG as she glared at me.\n\nI grinned. \"Fine, but everybody into my bedroom. There's something I wanna do.\"\n\nI started by seating Belle up against the headboard to one side, with Mari seated about three feet to her left in a similar position. The besties automatically reached out and held each other's hand. Then I put Zofi in-between Belle's legs and said, \"You KNOW what I've been waiting to see.\"\n\nZofi kissed me quickly, ducked her head down between Belle's spread thighs, and started eating. I just stared for a minute, dumbfounded by the sight before me. I even drooled a little bit, catching myself and slurping up my own spit just before it dribbled out. Thankfully, everyone else was also watching Zofi hold onto Belle's thighs and show us all what expert cunnilingus looked like.\n\nMeanwhile, Sam held my dick in her hand rather possessively, as if to ensure none of the other girls could take it from her. And she glanced up at me with a smirk when it started twitching of its own accord the more Zofi's tongue lapped at Belle's clit.\n\nThen, I gave Mari a look to make sure she was okay with the next step of my plan. Her expression was nervous but excited as Naimh crawled up between her legs, and the Latina gave me a shy nod before sliding her fingers into the Irish girl's red hair as if guiding her into place.\n\nI parked Sam on all fours right between Zofi and Naimh, and she waggled her butt back at me impatiently. I didn't keep her waiting, kneeling behind her and pushing my chemically-hardened prick into her pussy. At first, I focused on fucking the busty blonde bombshell bent over before me. But soon I took advantage of the positions I'd put everybody in by reaching out with both hands so I could start fingering Zofi's pussy on my left and Naimh's pussy on my right.\n\nDamn it was good to be me.\n\nAmazingly, it got even better. After we'd all been going for a couple of minutes, Belle whimpered and moaned as she climaxed, pressing Zofi's face even deeper into her crotch. Mari was doing the same with Naimh as she started cunning as well. And then to my absolute shock and amazement, Belle leaned over, drew Mari's face to hers, and planted a steamy hot kiss on her bestie's mouth. Mari moaned, grabbed Belle's head, and returned the kiss with equal fervor.\n\nGawking at the sight of the two BFFs sharing their first kiss, I couldn't handle it anymore, and I groaned, \"Holy shit you girls are amazing. I'm gonna fucking cum!\"\n\n\"Do it! Cum in me!\" Sam hollered, banging her butt back at me. \"Cum in me! Cum in me! CUM IN MEEE!\"\n\n\"I'm cumming! I'm cumming! I'm... ARRRRRGGGGHHH!!!\" I hammered Sam's ass with my pelvis as my thrusts sped up out of control, finally slamming forward one last time and letting the deluge burst forth, flooding her cunt in seconds.\n\nNaimh was the first to pull her head out and exclaim, \"My turn for Matty's cum!\" As soon as I pulled out, she quickly rolled Sam onto her back, dove down, and started slurping in obvious satisfaction.\n\nAnd still my dick wouldn't go down.\n\nMari did a quick headcount, grinned, and pointed at me. \"Fill me up next. Then Zofi can suck that one out.\"\n\nI grinned. \"Works for me.\"\n\n\"Ooh, fresh meat!\" Zofi cheered.\n\nBut Belle started whining, \"Wait-wait-wait. Sam got the first one, Neevie's getting this one, and Zofi gets the third? I'm fucking Matty's Cumslut! How come I'm not getting any creampies!\"\n\nNaimh popped up two seconds later, cheeks bulging and cupping a hand over her mouth to make sure nothing spilled out. She crawled forward, sealed her lips over Belle's, and both girls moaned as she snowballed my spending that had started in Sam's snatch.\n\nWhen they finally separated, Belle sighed happily and flashed a double thumbs-up. \"Okay, I'm good.\"\n\n\"We can still try to get him to cum a fourth time!\" Sam offered.\n\nSpoiler alert: They succeeded.\n\n****\n\n-- CHAPTER 18: Tahoe IV --\n\n****\n\n\"Didn't the commercials warn that I should call a doctor if I had an erection lasting more than four hours?\" I asked rather nervously as I had to trap my still-throbbing erection against my belly to pull my thermal underwear pants all the way up.",
        "\"It hasn't been four hours yet,\" Sam reasoned. \"And it went down twice.\"\n\n\"Yeah, and then all it took was a glance at one of your nubile naked bodies, and it came right back up.\"\n\n\"That's a good thing.\"\n\n\"For having sex, maybe.\" I shook my head and pulled up my snow pants. \"But having an erection seems pretty useless for building a snowman.\"\n\nSam shrugged. \"Well, if one of the girls wants to make her snowman anatomically correct, we can pull your pants down and use you as a model.\"\n\nI shot her a look and rolled my eyes.\n\nSam chuckled and patted my bulge. \"C'mon. Once we start walking down to the beach... and if you stop staring at our tits... your blood flow should change and hopefully it'll go down then.\"\n\n\"Walking to the beach I can do. Stop staring at your tits?\" I ogled Sam's massive rack that was fully encased in a fleece sweater and yet still on display in the way the fabric hugged her ample curves. \"That's gonna be a little harder.\"\n\nI kept ogling until Sam zipped up her vest and black snow jacket. Zofi was already ready to go, and the three of us exited the master bedroom and joined the others. To be honest, I was pretty tired after doing my level best to satisfy five girls in a single session. I'd never had four ejaculations before (one each for Belle, Sam, Mari, and Naimh - yes, Belle got the last creampie), and if I had my way I'd stay here in the bedroom to take a nap. At the same time, I wanted to make the most of this trip up into the mountains and figured I could catch up on sleep over the next few days at home.\n\nIt took us less than ten minutes to tromp down the road to the beach. I carried the big shovel and Naimh brought the foam sled just in case it was useful for snow transport. Zofi had a new digital camera and we took turns taking photos of the beach and background. Well, mostly I took photos of the girls, although they did pull me into a couple of shots. Then we divided into two teams (Sam, Zofi, and Naimh vs me, Belle, and Mari) to build two different snowmen and compare which team had the better one.\n\nBelle had mastered the slow roll to build up a nice, big ball. It took her a while, and it got so big I had to help in the end. Mari went hunting for rocks, sticks, and other things to use for decoration. Meanwhile, the other three girls just started piling snow together and used the shovel to help press-form it. But when I looked over, the base of their snowman looked more like a snow pyramid than a round snowball.\n\nWe spent more than a half-hour building our snowmen, maybe even close to an hour. Time flies when you're having fun, and we were having fun. Sam was at least correct that physical exertion (and not staring at the girls' tits) would make my erection go away, so at least I didn't have to worry about calling a doctor.\n\nIn the end, Sam's team managed to shave off enough snow around the base of their snowman to make it at least appear roughly rounded, but the middle ball wasn't any better and they more or less ended up with a tapered snow column instead of a snowman. My team, on the other hand, had three neatly-shaped balls of descending thickness stacked quite perfectly. Our snowman wore my beanie and Mari's scarf, and also had three smooth black stones for buttons, two larger gray stones for eyes, and even a roughly conical driftwood nose. Add in two long sticks for arms with fingers at the ends and a long grassy mouth, and we had a clear winner.\n\n\"There should be a prize for victory, I think,\" Belle insisted.\n\nMari laughed. \"Yeah, I think Belle and I should get to keep Matty tonight.\"\n\nSam was not amused. \"I'm five seconds away from tackling your snowman, ripping its head off, and thrusting its severed skull into the air before smashing it beneath my boots.\"\n\nI arched an eyebrow. \"Snowmen have skulls?\"\n\n\"How about we get first backrubs tonight?\" Belle offered.\n\nSam rolled her eyes. \"Acceptable.\"\n\nWe took a few more photos with the snowmen for posterity and then tromped back to the cabin for lunch. With a thousand carbs in my belly, I started nodding off and wanted to take a nap afterward. But the girls still wanted to go sledding, so we loaded into my van and drove off in search of a hiking trail or picnic area with parking.\n\nFinding a suitable spot took about half an hour, but we found a nice hill that had enough powder to carve a sledding run and wasn't too icy. It had a pretty good incline for first the twenty feet to build up speed, and I made the first turn a little too sharp, so it took a while to bank it properly. Then, I had to reinforce that bank every five minutes. Girls kept sliding and I kept engineering for more than an hour. And in the end we had a pretty solid sledding run with four big turns that lasted close to thirty seconds.\n\nAll that time, I never actually rode the sled myself, having spent all my time digging out the run and then modifying it here, shoring it up there, etc. When I finally pronounced the run good enough, I took the sled to the top, sent myself down...\n\n... and promptly blew straight through and over that first banked turn. I was just too heavy. I tried shoring it up again, but in the end I decided to just start myself at that turn and sort of lazily let myself glide down the rest of the run.\n\nBy the time we got back to the cabin, I was REALLY tired. The girls told me to take a shower and grab a nap while they figured out dinner. I did so gladly, cleaning up, getting into my pajamas, and falling into bed.\n\nI think I passed out before my head even hit the pillow.\n\n****\n\nThe room was quite dark when my conscious brain stirred to life and I cracked my eyelids open. I'd started my nap with afternoon daylight still coming through the window, but night had since fallen and the only illumination came from the nightlight I had brought and plugged into the wall outlet below the bed's horizon, useful in case anybody needed to get up in the middle of the night to go to the bathroom or something.\n\nMuted sounds of conversation and laughter filtered through the thin walls of the cabin. I had no concept of what time it was or how long I'd been napping, but before I could summon the energy to turn around and check the clock on the nightstand, I became aware of the fact that I wasn't alone in this bed.\n\nBefore I could say a word though, she spoke first. \"Matty? You awake?\"\n\n\"Mmm-hmm,\" I mumbled softly, recognizing Belle's voice. She was tucked beneath the covers in front of me, separated by about two feet.\n\nShe slid her hand across the sheets beneath the blanket and took hold of mine, just to hold it. I could hear her smile as she hummed happily, even if I couldn't actually see it in the dimness.\n\n\"What time is it?\" I asked, yawning.\n\n\"After nine. You've been asleep for more than five hours.\"\n\n\"Five hours?\" I asked incredulously, although my voice was still weak from lack of energy. I wasn't fully awake yet.\n\n\"Mmm-hmm,\" Belle confirmed. \"You missed dinner, but there's lots of leftovers. You'll wanna carb up because Sam's expecting you to give her fireworks tonight.\"\n\n\"In a minute,\" I muttered with another yawn, squeezing Belle's hand. I closed my eyes again, just... breathing. Sometimes I would take naps and wake up refreshed. Other times, I'd wake up feeling even more tired than I started, and this was one of the latter. I'd get the benefits of the nap later, but for now I felt like falling back asleep.\n\nBelle waited with me patiently, just holding my hand. We didn't cuddle or kiss. I never once felt like pawing her boob. I just enjoyed the way her hand felt in mine, smiling to myself as I teetered the fine line between waking and passing out again.\n\nIn the end, though, I woke up. Taking progressively deeper breaths, my brain booted up and I suddenly wondered how Belle had come to be in bed with me. It had never occurred to me to wonder that before. It had just felt so completely natural that I didn't question it, as if she belonged in my bed by my side. But now I asked, \"What are you doing in here instead of out there?\"\n\n\"Oh, I came to check on you about twenty minutes ago. You know, just to make sure you were still breathing after five hours and didn't die from excessive fucking.\" She giggled cutely.\n\n\"Apparently I was still breathing.\"\n\n\"You looked so peaceful I just wanted to watch you sleep, so I stuck around.\"\n\n\"For twenty minutes?\"\n\n\"I was studying your face in the light.\"\n\n\"Right. I must've been so handsome with my mouth hanging open and drool leaking out.\"\n\nShe giggled again. \"You weren't drooling, but you ARE handsome.\"\n\n\"I'm pretty average looking.\"\n\n\"Stop being modest. You're gorgeous to me.\"\n\n\"You're gorgeous to ME.\"\n\n\"Flattery will get you everywhere.\" She leaned forward and pecked me quickly but didn't try to start anything, settling her head back on the pillow beside me. The two of us just sort of stared at each other for a minute, in no rush to speak, perfectly comfortable in the silence, holding hands and enjoying that simple touch.\n\nI kinda wanted to feel like this all the time.\n\n\"Hey, what do you wanna do tomorrow?\" I asked quietly.\n\n\"Hmm? Tomorrow we're driving home.\"\n\n\"I meant at night after we get home. Or even the day after. Or the day after that.\"\n\n\"What are you getting at?\"\n\n\"It's winter break. We have no school. The BTC hasn't made specific plans of when we're gonna meet up again.\"\n\n\"Oh, we'll meet up again. Even if you fuck Sam's brains out tonight, she'll want you to do it again a couple of days later. Same goes for everyone else.\"\n\n\"I know, but I didn't mean sex. I just...\" I sighed. \"I just want to be with you. Like this. Relaxing. Talking.\"\n\n\"Yeah, totally,\" Belle agreed. \"I'll come over in the morning.\"\n\nI took a deep breath, thought about what I wanted to say, and in the end couldn't think of anything better than, \"I was actually hoping that maybe you could spend the night with me tomorrow.\"\n\nBelle was backlit by the nightlight, so I couldn't see the expression on her face very well, but I could see her hesitance. Before she could answer, I started apologizing, \"I'm sorry. It was a stupid idea.\"\n\n\"No, not at all. I was just... a little surprised, that's all.\"\n\n\"So you're not opposed to the idea?\"\n\nBelle chuckled. \"You just fucked the shit out of all five of us -- well not Zofi, but you know what I mean -- and you've got another threesome coming up within the next couple of hours, and already you're trying to line up tomorrow night's bed partner?\"\n\n\"What? No. This really isn't about sex. We don't even have to if you don't want to.\"\n\nBelle snorted. \"You think I'm gonna spend the night with you and NOT have sex?\"\n\n\"Uh, well... I wouldn't want to presume.\"\n\n\"You're such an idiot sometimes.\"\n\n\"Sorry.\"\n\n\"Sam's right. You apologize way too much.\"\n\nI bit my lip rather than say \"sorry\" again. Instead, I went with, \"Habit. I spent years struggling to maintain the boundaries you girls always put on me. Saying sorry became an automatic way to appear unthreatening and make you all feel safe around me.\"\n\n\"I suppose. But we're gonna have to work on that.\"\n\n\"Noted.\"\n\nBelle sighed, and I let her process for a moment. Finally, she said quietly, \"You know why I can't spend the night.\"\n\n\"Your dad would wonder why.\"\n\n\"Uh-huh.\"\n\n\"Would it really be so bad if we told him? If anything, I'm probably the only guy on the planet he wouldn't be upset about you dating.\"\n\n\"Even though we're not dating?\"\n\n\"Well, we don't have to tell HIM that.\"\n\n\"I...\" She paused, gathering her thoughts again. \"I have to think about it. Definitely not tomorrow night. But... I'll think about it.\" She squeezed my hand reassuringly to help me not feel like this was a rejection.\n\nI squeezed her hand back and replied, \"That's all I really wanted.\"\n\n\"You still want me to come over in the morning?\"\n\n\"I'll be happy for you to come over every morning.\"\n\n\"Well, not EVERY morning. I have my own life too. Mari will want to hang out. And it's winter break! What would you normally do during winter breaks?\"\n\nI screwed up my face and sighed. \"I think I played video games with Alice close to 24/7 last year. Or read comic books. Come to think of it, yeah... the BTC never really got together much during winter breaks in the past, did we?\"\n\nBelle chuckled. \"Well, nobody was fucking you in past years. I'm pretty sure this year's gonna be different.\"\n\nI sighed, thinking again of Alice. \"I miss her.\"\n\n\"Yeah, we all miss her.\"\n\n\"She should've been here on this trip. She would've had a blast helping me with that sledding run.\"\n\n\"I'm sure she would've.\"\n\n\"I still can't believe everything got so messed up.\"\n\n\"She's still your friend though, right? I mean, she doesn't hold all this against you.\"\n\n\"Well, no. At least, that's what she's told me.\"\n\n\"So call her up as soon as we get back. Ask her to come over and play video games.\"\n\nI blinked and thought about that. \"Huh.\"\n\n\"Maybe that's exactly what you need to get your buddy back. Go back to the basics. Spend some time together doing what you always did best, and not let the sex stuff get in the way.\"\n\n\"Now why didn't I think of that?\"\n\nBelle snorted. \"Because you're a guy. But don't worry about it; we girls don't hold it against you - until we do hold it against you because it's convenient... or because we just wanna be right and scapegoat you.\"\n\nI chortled at that, leaned forward, and kissed her sweetly. \"Thanks, B.\"\n\n\"Anytime.\"\n\nRight on cue, my stomach gurgled. I glanced down at my belly and then back up to see her eyes twinkling. I smiled and said, \"Guess it's time to get up.\"\n\n****\n\nThe girls all cheered when Belle and I emerged from the bedroom. Naimh clapped her hands to her cheeks and mock shrieked, \"It's alive!!!\"\n\nEverybody laughed and Sam got up to microwave my plate. We chatted as a group a bit, but I gathered that the conversation had been winding down just before my arrival. It was just past nine-thirty, and everyone had woken up fairly early this morning because of my intense conversation with Sam. So while it wasn't exactly bedtime, the girls decided it was a good time to start their bedtime routines.\n\nAfter all, nobody expected me, Sam, or Zofi to be falling asleep anytime soon. Given that they'd all be kept awake listening anyway, we might as well get started now. But that didn't stop each of the girls from coming over to kiss me goodnight. Naimh was first, giving me a passionate snog full of moaning and rubbing her chest against mine, but she wished me a good night and sashayed into the bathroom to start brushing her teeth. Belle took her cue from that and gave me a sweet kiss as well while patting my ass.\n\nMari blushed nervously and didn't even approach me, but I walked over to her, started a soft kiss, and she abruptly flung both arms around my neck, crammed her tongue into my mouth, and tried to drape a leg over my hips before giving up and just Frenching me madly for a minute. Afterwards, Belle and Mari headed up to the loft.\n\nWhen I looked around, I realized Sam had disappeared. Only Zofi remained, and after staring at the wall clock for a moment, she wrapped her arms around my neck and leaned in for a sweet kiss.\n\nStanding 5'10\", Zofi was the only girl I'd ever kissed who was tall enough for me to not have to bend down for. Well, maybe Sam when she'd worn those skyscraper heels for the wedding. The point is, I rather enjoyed not having to strain my neck at all as I wrapped my arms around her lower back and enjoyed the simple act of making out with my fourth girl in a row.\n\nZofi gave me none of the passion Naimh had displayed, nor the tenderness of Belle, nor the hunger of Mari. The way she kissed me was calm, serene, and almost... chaste. I still couldn't figure her out, but the mystery was seriously starting to intrigue me.\n\nMaybe Sam was right: I was simply obsessing over the one girl on this trip who still wouldn't have sex with me. And as much as I might fantasize about her finally giving in on this final night of our vacation, the way Zofi kissed me seemed a clear indicator that I wouldn't be popping her cherry anytime soon, either. Perhaps sensing my thoughts, she stopped kissing me just then, leaned forward, and pecked my cheek. \"We're not there yet, darling,\" she whispered into my ear.\n\n\"I didn't... I wasn't...\" I stammered.\n\nShe gave me a mysterious smile, checked the clock, and then coyly interlaced her fingers through mine, giving me a feeling not unlike the way we walked around school hand-in-hand. She pecked my cheek and nodded her head, saying, \"She's ready now.\"\n\nI arched an eyebrow but allowed myself to be led by the hand across the living room. By now, Naimh was coming out of the bathroom. She took a peek inside the master bedroom and popped her eyebrows, mouthing the word, 'Wow.'\n\nThe redhead then turned to look at Zofi and me coming towards her. She chuckled, shook her head, and stepped into the doorway of the second bedroom. But she didn't go inside; she merely turned around, folded her arms across her chest, and leaned against the doorjamb, clearly intent on watching my reaction.\n\nZofi pulled me around the doorway and let go of my hand. I stopped dead in my tracks just inside the room, blinked, and grinned. \"'Wow' is right,\" I commented.\n\n\"You remember this?\" Sam asked coquettishly, posing across the king-size bed on one side, her head propped up her right palm with her left arm draped across her hip and upper thigh. Her body was a lush rollercoaster of curves that made me want to go for a ride right away, but I paused to enjoy the d\u00e9j\u00e0 vu feeling her outfit gave me.\n\nThe beautiful busty blonde bombshell had re-applied her makeup, now with heavier black mascara and thick eyeliner. She wore a strapless, black lace corset top that lifted and separated her huge breasts so that they almost appeared spherical. Thigh-high lace stockings adorned her legs, topped with a matching garter belt. Black lace panties, transparent enough to reveal her slit, had been put on over the garters for easy removal. The only things missing were the skyscraper heels. It was the lingerie outfit Sam had worn when she'd taken my virginity.\n\n\"Take his clothes off, Zofi,\" Sam stated evenly.\n\nBeside me, wearing her regular pajamas, Zofi first went to the doorway and said quietly, \"Good night, Neevie.\" Then she closed the door. I never glanced back, my eyes remaining riveted to the half-naked platinum blonde on the bed. After the door was shut, I felt Zofi's hands take hold of my shirt and start tugging it by the hem over my head.\n\nMy pants went next, along with my boxer shorts, and after I stepped out of them I became the first one completely naked in the room, although I wouldn't be the last. In the meantime, though, I found myself standing there, awaiting instructions. It had been clear from the moment I'd entered that Sam was in charge of this encounter, and I didn't want to ruin any of her plans.\n\nSam let her eyes rove up and down my nude body, ogling me like a piece of meat. I never considered myself a beefcake or whatever other terms a girl might use to describe the sort of Chippendale-esque examples of perfect male physique, but I did what I could to keep in decent shape. Sam evidently liked what she saw, especially the way my thick column of man meat extended straight towards her like a flower seeking the sun. She grinned, let her gaze move past me, and nodded once.\n\nZofi pressed herself against my back, reached around with her left hand, and began stroking me. The lissome brunette began kissing the back of my neck as she gave me a handjob, and I moaned while reaching back with one arm to hold her lower back and mold her front against my naked skin, even though she was still wearing her pajamas.\n\nBut that only lasted for a minute or so. I think Sam just wanted to be sure I was as hard as I would ever be, especially after the exertion I'd gone through this morning. Satisfied with my erection, she crooked a finger and beckoned for me to join her by the bed. I moved as directed, coming to a stop right at the foot of the bed but not climbing onto it. Then, and only then, did Sam roll over onto all fours, crawl up to me, and draw her silky blonde locks to one side of her head while she bent to take my dick into her mouth.",
        "I groaned and raised my hands to hold her head, but Zofi reached around and lightly tapped my forearms, causing me to drop my hands away. Once again, Sam was making the rules. And once again, Zofi and I obeyed.\n\nSam closed her eyes for a moment, bobbing her head back and forth in my crotch taking more and more cock between her lips, but she never tried to push me into her throat or anything like that, simply slobbering all over my shaft and apparently sucking me for the pure pleasure of it.\n\nAt least, that's what I'd thought. A few seconds later, she pushed herself forward, taking the vast majority of my dick into her mouth and partway down her throat until she stopped at that final inch that she'd never quite gotten inside. Her eyelids fluttered and I felt her throat contract as she swallowed, but she didn't pull off. Instead, Sam reached forward, grabbed my ass, and PULLED.\n\nThe final inch of my dick slid all the way inside.\n\nWith her bent over on hands and knees and me standing beside the bed, my hips and Sam's face were pretty much perfectly aligned. More to the point, her neck and throat were pretty well horizontally aligned, and although I couldn't actually see her face very well in this position, I felt like I could feel her smile with her lips wrapped around the very base of my cock. She held that for two seconds before abruptly drawing herself back and off my dick. She coughed a couple of times, gasped for air a few more times than that, and used the heels of her hands to wipe the tears that had started streaming down her eyes. She even grabbed a couple of tissues to blow her nose and wipe up some of her drool.\n\n\"Sorry, not the sexiest look for me right now,\" she muttered after blowing her nose.\n\nI just gawked at her, amazed that she'd accomplished the deep-throat. \"No! That was amazing! I know how much that meant to you.\"\n\nSam snorted, blew her nose again, and fixed me with a look. \"Don't think I didn't notice when Naimh did it earlier while you were blindfolded.\"\n\nI blinked. \"She did?\"\n\nSam shrugged. \"She told Mari she'd done it to you last night.\"\n\nI frowned and sighed. \"Please tell me this isn't still about you trying to buy my favoritism.\"\n\nSam rolled her eyes. \"I'm not trying to buy your favoritism. I'm just... competitive.\"\n\nI mused on that. \"Fair enough.\"\n\nShe smirked at me. \"And I'm not stopping at doing that just once. Come here. I want you to fuck my face a little.\"\n\nI blinked. \"Um, what?\"\n\n\"You know: Grab my head and thrust in and out of my throat a bit. Make me choke until my makeup starts to run.\"\n\n\"Um, WHAT?\"\n\n\"Zofi, translate.\"\n\nFrom right behind my ear, Zofi explained, \"She's always in charge but she gets off on you forcing her a little bit. Sometimes when it's just the two of us, she likes for me to tie her up and order her to eat my pussy. Maybe spank her with a riding crop. That sort of thing.\"\n\nI blinked several times, my jaw dropping open.\n\n\"C'mon, Matty. Fuck my fucking face,\" Sam urged.\n\nZofi slapped my ass. \"Go get 'er.\"\n\n****\n\nWe started with me fucking Sam's face the way she wanted. She made little \"glug, glug\" noises when I did that, and I had to admit it was a bit of a power trip to see the normally in-charge and dominant de facto leader of the BTC with tears and streaked makeup while my cockhead entered her throat over and again. Plus, it reminded me of the night she took my cherry, and that was certainly a very fond memory (well, apart from the whole sobbing girl part).\n\nShe did keep choking every now and again and we had to stop a few times. On the other hand, once or twice she had me hold her head and pin her down with her lips around the base of my cock, a full deep-throat, and when she pulled back she had such a HUGE smile on her face that I couldn't help but smile with her.\n\n\"Can you tell I've been practicing?\" she beamed, her grin an odd juxtaposition with the tear-streaked makeup running down her cheeks.\n\nI arched my eyebrow and asked, \"Practicing with what?\"\n\nSam smirked, shared a glance with Zofi, and said, \"Maybe you should come over to my house and I'll show you some of my toys. How ELSE do you think I've been satisfying myself for the past few years?\"\n\nAs fun as it was to fuck her face, the frequent stops and my general concern for her well-being kept me from cumming. Sam decided she wanted to move on and grabbed some tissues to clean up her face.\n\nIn the meantime, I flopped onto the bed and started making out with Zofi, who had removed her pajamas and happily French kissed me. She shivered and hummed into my mouth while I pawed at her breasts and she stroked my dick with her hand. She let me fingerbang her with two fingers while my thumb rubbed her clit. We were still going at it when Sam returned, but rather than interrupt us, the busty blonde spooned up behind her best friend, kissing her neck and reaching around to fondle her breasts. Together, Sam and I sandwiched the brunette between us and made her cum. It was quite intoxicating to have Zofi moan an orgasm into my mouth. So far, I'd only ever gotten her off with my face in her snatch, and I desperately wanted to have this experience again, only with one of my other appendages pushed deep inside her instead.\n\nThe three of us reassembled after that. Sam flopped onto her back, her face now mostly cleared of makeup. She beckoned for Zofi to come kiss her and the pair of them made out hot and heavy with plenty of tongue, whether for my viewing pleasure or simply because they wanted to, I couldn't tell. Zofi then crawled her way down Sam's lingerie-clad body, kissing and nibbling along the way. She unzipped the strapless corset, pulling it off and tossing it aside, but left the garter belt and stockings in place. She then dragged the panties down and off Sam's legs, brought them up to her nose for a smell, and smiled at me wickedly.\n\nMeanwhile, Sam spread her legs apart and raised her knees while beckoning for me to come enter her. I did so gladly, and we made out a little bit while I began to fuck her slowly. But before we really got going, she told me to pull out and stand at the foot of the bed.\n\nI laughed, thinking about how Sam had vacillated back and forth between taking complete charge of the situation, to getting off having me force her throat around my dick, and back to taking charge. But I was willing to do whatever she wanted as long as it made her happy. In this case, she simply scooted her butt down to the foot of the bed, had me slam myself back in, and then called for Zofi to come sit on her face.\n\nWe made a triangle of lust with Sam on the bottom, me pumping her pussy at a steady pace and Zofi riding her mouth facing back at me. This put my face right in front of the exquisite brunette's, and we found ourselves making out once again while I pawed at both girls' big breasts.\n\nAfter face-fucking Sam, getting a handjob from Zofi, and now fucking Sam's tight cunt, I felt myself starting to lose control, but I forced myself to hold out until the girls came. After this morning's exercise (and no longer having chemical backup), I wasn't sure how many rounds I had left in me. So I broke away from Zofi's mouth and planted both hands on the mattress so I could focus on stimulating Sam's snatch. I carved my dick around the walls of her canal, varied my pace to give her long lunges and then short staccato bursts. She whimpered and moaned beneath me, and when her back started arching, I pressed my pelvis down on her clit and started grinding down on it with all my weight.\n\nZofi actually beat us both to the punch. She squeezed her thighs around Sam's head and started squeaking as she came. Sam's hands were on both of her tits, painted fingernails digging into Zofi's D-cups while the brunette let her head loll back, exposing her long neck. I immediately bent forward and latched onto that neck, sucking lightly for a moment before stopping myself, lest I leave a hickey mark she'd have trouble explaining just before Christmas. Instead, I kissed her again, reveling in the way she moaned into my mouth during her orgasm.\n\nSam went next, screaming straight into Zofi's crotch as her body wriggled beneath me. Her cunt clamped down around my cock, drawing out my cream. And I started spurting great globs of man gunk deep into the farthest recesses of the busty blonde's honey box.\n\nI had to tear my mouth away from Zofi's when I started cumming. My forehead hung forward but wound up supported by Zofi's shoulder. She clutched my head to her upper chest, humming erotically while my schlong spat semen into her bestie's snatch. And after I let out a final gasp as I finished spunking Sam, Zofi tilted my face to hers for one more kiss.\n\n\"I REALLY like kissing you, Matty,\" Zofi said with a breathy smile when I finished.\n\n\"The feeling's mutual,\" I wheezed, remembering that it was Zofi and me kissing all those years ago that got the Rule started in the first place.\n\nIn the meantime, Sam bodily moved Zofi off her face and onto her upper chest, panting for breath beneath us. Zofi glanced down at my crotch, where my dick was actually going soft inside the blonde's box (definitely no need to call a doctor). She flashed me a smirk and said, \"Pull out. I'm gonna suck that all out and snowball it to Sam.\"\n\nHer words almost got me hard again. Almost.\n\nI pulled out as requested and took a step back to give Zofi room. She bent over, completing the sixty-nine position although Sam was currently too wiped out to return the favor. I watched with great pleasure as Zofi audibly slurped out every trace of cock cream she could collect. A minute later, she turned around, pressed her tits into Sam's lush cleavage, and opened her mouth to let the sticky sperm slide out from between her lips and dribble down into Sam's gaping mouth.\n\nSome of it missed, falling onto Sam's lips or chin, but no matter. Once Zofi had released the bulk of my cum, she dropped down to lick up the spillage and shove it into Sam's mouth with her own tongue. At the same time, I reached out and started fondling Zofi's bare bottom, enjoying the feel of her soft skin as I watched the two gorgeous babes making out and swapping semen until every drop was gone.\n\n\"You know,\" I began once Zofi rolled off Sam and the two girls giggled at each other while wiping off their faces with the backs of their hands, \"if you enjoy my cum that much, I'd be happy to give you a direct deposit.\"\n\nSam and Zofi exchanged a glance, and Zofi replied, \"The taste itself doesn't do anything for me; I'm not one of Matty's Cumsluts. What gets me revved up is the idea of feeding it to one of the other girls. It's such a nasty idea to suck it out of Sam's pussy and snowball it right back to her.\" She visibly shivered with delight as she said that.\n\nThe juxtaposition between classy, elegant babe and the naughty words coming out of her mouth were quite the thrill for me, too.\n\n\"I get quite a kick out of it too, baby,\" Sam replied, turning to Zofi and holding her head so the girls could resume kissing. They started off gentle, but as the tongues came back out to play, their passion increased. Zofi rolled into Sam so that the two were on their sides making out hot and heavy. And then Sam slid one leg between Zofi's and inched their crotches closer and closer, slithering and writhing until they actually managed to press their clits together.\n\nMy eyes got wide as I watched the girls scissoring. They gyrated their hips and ground their clits against each other, pussies sloshing together like a passionate kiss of their nether lips even while they continued to passionately kiss with their facial lips as well. I'd never dreamed of being able to watch something like this happening, and as my dick got harder, I started stroking it while watching this amazing scene.\n\nI suddenly wished Belle was here to watch it with me, knowing that she'd really love it. Hell, she could stroke my dick for me, too.\n\nBut I didn't get myself off, knowing I should save the load for the girls. Masturbating myself to orgasm would be a crime at this point. Instead I sat down on the side of the mattress, reclining against the headboard with pillows supporting my lower back, still idly stroking my meat while I watched the girls get progressively closer and closer to orgasm while tribbing until they finally both squealed and came.\n\n\"Fuck,\" Sam gasped as she rolled away from Zofi. \"You two are gonna kill me tonight.\"\n\n\"Oh, but what a way to go,\" Zofi laughed as she also flopped onto her back and stretched her limbs out spread eagle.\n\n\"I'm gonna need a minute here,\" Sam said, still breathing hard. \"How are you still perky?\"\n\nZofi shrugged. \"It's been an inspiring night.\"\n\nSam turned her head to look back at me and said, \"Go play with Matty then, he looks a little lonely.\"\n\nZofi rolled onto her belly and propped herself up with her elbows. She started crawling toward me but stopped herself and abruptly slid off the bed.\n\n\"What are you doing?\" Sam queried as she rolled onto her side.\n\n\"Hang on a sec,\" Zofi replied while rummaging in her suitcase. She popped back up thirty seconds later, and although I could tell there was something different about her, it took me a moment to realize she'd put on the dangling earrings.\n\n\"I knew you liked these when you kept staring at them,\" the exquisite brunette commented as she once again crawled onto the bed, this time coming between my legs and taking my erection in her left hand. She wrapped her luscious lips around my mushroom head and began sucking while staring up at me with those gorgeous blue eyes.\n\nSam chuckled. \"I noticed how his head would dart left or right whenever those earrings tinkled. He was definitely trying to keep an eye out... well... an ear out for wherever you went.\"\n\nI nodded slowly, my eyes fixed on the sight of beautiful Zofi giving me a fucking blowjob. \"Definitely like the earrings, yes.\"\n\n\"He kept wondering if you were gonna mount him when he couldn't see you.\"\n\nI shook my head. \"Actually, I asked her not to. If it does happen, I want to be able to see it.\"\n\n\"If it does happen, -I- wanna be able to see it.\" Sam laughed before adding, \"Seriously though, when ARE you gonna fuck him?\"\n\nZofi didn't immediately respond, bobbing her head down and down one more cycle before popping off and jacking the shaft with her left hand. \"We're not there yet,\" she replied with furrowed eyebrows. I could feel her closing up emotionally just a little bit.\n\n\"Don't push her,\" I muttered quietly, still staring at Zofi but with my words directed at Sam. \"She's on her own timetable, and as much as I want to do it myself, I'll understand even if that timetable ultimately says 'never'.\"\n\nZofi blinked and looked up at me. \"You really mean that?\"\n\n\"Of course.\"\n\nZofi gave me a skeptical look. \"That's not just Matty-speak for, 'Of course I want to and I'm gonna keep fantasizing about you but if in the end you don't let me put it inside you I'm gonna get all disappointed?'\"\n\nI frowned, a little hurt that she doubted me. \"I care deeply about all of you, which is why I stuck around for so many years even without ever getting anywhere for the longest time. If I never pressured you before, why would you think I'd start pressuring you now?\"\n\nZofi pressed her lips together and thought about that for a moment. \"I guess it's not you I'm worried about; it's the rest of them. I definitely won't be like Alice and leave the BTC. But at the same time, I can't help but feel like everyone else is looking at me, saying, 'We've all fucked him. When are you gonna finally give it up?' Like I'm supposed to put out for him as a condition of staying in the club.\"\n\nSam frowned and immediately crawled over to rub Zofi's back. \"Oh, baby, I'm sorry. That was a really thoughtless thing for me to say. I know I've already asked you this same question before, and I shouldn't have brought it up again.\"\n\n\"No, it's okay. Nothing I haven't asked myself a thousand times already.\" Zofi let go of my dick and sat up, crossing her legs and planting her elbows on her knees while dropping her cheeks into both palms. \"Part of me thinks I should just get it over with so I won't feel this way anymore. Like... it wouldn't be THAT hard for me to just lie down right here and now, spread my legs, and let you plug it into me. I'm plenty wet enough and I'm sure you'd make me feel good, and yet...\"\n\nHer voice trailed off as she collected herself. Trying to follow her train of thought, I asked, \"Did you want a special night like Mari's date?\"\n\n\"No, it's not that.\" Zofi shook her head quickly. \"Although that would be nice...\"\n\n\"Just not ready to surrender your virginity?\" Sam suggested.\n\n\"I don't even see my cherry as all that big a deal. It's weird. I can't fully explain it. It's more...\" She trailed off again and looked off to the side. \"Sex is... I mean...\"\n\nSam and I glanced at each other. Neither of us knew what was going through Zofi's mind right now, and given that the two besties must've had this discussion other times, I wondered what was different about tonight compared to previous times.\n\nWell, -I- was part of the conversation now. THAT was different.\n\nAs if proving my point, Zofi frowned and stared at me, really STARED at me. She scrutinized my body, looked me up and down from head to toe, and even zeroed in on my crotch. My dick had deflated somewhat due to the heavy nature of the conversation, so I wasn't at full mast anymore. And being put under the microscope the way Zofi was doing to me right now wasn't very arousing, either.\n\n\"Sam? What do you see when you look at Matty's naked body like this?\" Zofi asked quietly.\n\n\"Uhhh, well...\" Sam drawled, a little caught off guard by the question. \"I mean, I see Matty: handsome, cute, love-his-abs Matty.\"\n\n\"He turns you on, right?\"\n\n\"Right.\"\n\nZofi sighed. \"I don't... I mean I LIKE him. And I enjoy messing around with him. But...\"\n\n\"But he's not your type or something?\"\n\n\"Or something.\" Zofi frowned. \"I mean, do you stare at his dick and think, 'Damn I wanna suck that cock'?\"\n\nSam giggled. \"Yes.\"\n\nZofi shook her head. \"I don't get that urge. I mean, I've been doing it the last couple of nights, but only because I wanna see the way he looks at me while I'm doing it. I don't have any... desire... to give him a blowjob. And I don't have that desire to fuck him, either.\"\n\nSam sat up too now. \"What are you saying? You're just not attracted to Matty and you'd rather give it up to some other guy?\"\n\n\"I dunno. Maybe? I can't really think of any other guys I'd wanna give it up to. Well, maybe Keanu.\" Zofi giggled. \"And... I mean... I wouldn't MIND letting Matty fuck me. I think about it all the time. I think about what the rest of you look like while he's fucking you: the expressions of absolute ecstasy, the moans and cries when you climax, the sweat and the heat and the... nnnghhh!\"\n\nZofi had started rubbing herself as she lost herself in that fantasy, but as her eyes returned to reality, she looked at me seriously again and said, \"But getting horny while fantasizing about it is one thing. And yet right here and now, I don't have the urge for him to roll me over and shove it in. Do you?\"\n\n\"Hell yeah,\" Sam muttered. \"I want him to roll me over and shove it in right now!\" But she glanced down at my crotch, where my dick had gone nearly limp, and frowned thoughtfully.\n\n\"Maybe I'm just a voyeur like Belle. I get off watching the rest of you get plowed but don't have that urge myself.\"\n\nSam mused on that. \"I guess...\"\n\n\"Huh.\" Zofi sat up a little taller, her spine a little straighter. \"That actually makes a ton of sense. I'm a voyeur!\"\n\nI had to smile with Zofi, she looked so happy at her little epiphany.\n\nShe exchanged a little glance with Sam. \"Looks like I have the right group of friends then: a great guy who won't pressure me into doing anything more than I'm ready for, a bunch of hot girls who won't mind me watching them get their brains fucked out...\"",
        "\"... and a few hot girls who would love to eat your pussy WHILE the great guy is fucking their brains out,\" Sam added with a grin.\n\nZofi smiled even wider. \"Yes, definitely.\"\n\nSam looked back at me, pouting when she stared at my limp dick. \"Of course, all of this only works if we can get the great guy to have a working erection.\"\n\nZofi narrowed her eyes and let a sly grin spread across her face. \"Maybe we should give him a two-girl blowjob. I can lick my way up one side while you lick your way up the other side, and at the top we can start making out with his cockhead between our mouths.\"\n\nSam laughed and cocked an eyebrow. \"I thought you said you look at his penis and don't get the urge to suck it.\"\n\n\"I don't,\" Zofi answered with a shrug. \"I look at his penis and get the urge to SHARE it with YOU, baby. And I get the urge to see the look on his face while we're doing it.\"\n\n\"Sounds like a tomato/tomahto kind of splitting hairs, but whatever works for you.\" The blonde quickly rolled forward, popped her head into my lap, and sucked my limp penis into her mouth. It didn't stay limp for long, almost instantly responding to her warm pressure, and after less than a minute I was hard enough for her to pull off and gesture for Zofi to join her. \"You get that side. I'll get this side. Meet you in the middle?\"\n\nZofi smiled as she also rolled forward, her dangling earrings tinkling as she started licking up \"her\" side.\n\n\"I really wish I could get a picture of this,\" I groaned as one hot blonde and one hot brunette started working my dick together.\n\nZofi frowned. \"Maybe a polaroid. Maybe. I don't want something like this on digital.\"\n\nSam shook her head. \"Forget the photo. You both come over to my house in a couple days and we'll do it again. And then again a few days later. And then again, and again, and again until the image is burned into your retinas for all time.\"\n\nI grinned sighed, and let my jaw drop open as the girls finally worked their way to the top of my fully-erect shaft and started wetly making out with each other while my cockhead was mashed between them.\n\n\"Works for me.\"\n\n****\n\nThe girls gave me the tandem blowjob for a few minutes before Sam got antsy and decided to climb aboard. She grabbed my hands and planted them on top of her big boobies, letting me fondle away to my heart's content as she sat down on my dick with a happy groan. The busty blonde started bouncing up and down quite quickly, and I started to assume she'd ride me until I blasted a fresh creampie into her cunt. And if I was extremely lucky, Zofi would suck it out of her and I'd get to watch them snowballing my semen once again.\n\nThings didn't turn out like that.\n\nAfter only a couple minutes of riding, Sam slowed to a stop and glanced back at her best friend. \"Go get it,\" she said, although I had no idea what \"it\" was.\n\nZofi slipped off the bed while Sam bent over and started making out with me. She wrapped my head in her arms and crammed her tongue down my throat, absorbing every ounce of my attention. So it was a bit of a surprise when she suddenly seized up and stopped kissing me.\n\nI pulled my head back to see her clench her eyes shut and wince. I wondered what was going on, and only then craned my head around to look past Sam's body to find Zofi staring intently at Sam's backside.\n\n\"Weird?\" Zofi asked without looking at us.\n\n\"A little,\" Sam replied, still with her eyes closed as she concentrated. \"But push in another one.\"\n\nZofi nodded, and a moment later I became aware of Sam's vaginal canal getting just a little tighter around my cock. Only then did I put two and two together and realize that the \"it\" must've been the bottle of lube I'd left atop the nightstand since last night's anal adventure with Naimh, and that Zofi must now be pushing two lubricated fingers into Sam's anal chute, explaining the tighter constriction.\n\nAt the same time, Sam started grinding her clit against my pelvic bone, slowly undulating herself for distraction while Zofi began to pump her fingers in and out of Sam's anus. \"Another finger,\" she said a minute later, her forehead furrowed.\n\n\"You sure? You're pretty tight,\" Zofi cautioned.\n\n\"Neevie said he put three in her ass to stretch her out,\" Sam groaned. \"If I can't fit three of your skinny fingers, I'm never gonna fit his monster in there.\"\n\nZofi nodded, started pressing a third finger inside, and Sam went still as she screeched in obvious pain.\n\nConcerned, I began, \"Hey, maybe this isn't such a good--\"\n\n\"Shut the fuck up, Matty,\" Sam cut me off.\n\n\"I just don't want a repeat of you trying to deep-throat me that first night,\" I stated with genuine worry. \"You said you practiced since then, and tonight you were able to do it no problem. Maybe we can get you a few butt plugs or something to help train your ass. And then maybe next week we can--\"\n\n\"I said shut the fuck up, Matty!\" Sam interrupted again, gritting her teeth immediately afterward. She looked to be in tremendous pain.\n\n\"Please tell me this isn't just because Neevie--\"\n\n\"Matty,\" she interrupted AGAIN. \"I swear to fucking GOD that if you don't--\"\n\n\"His idea does make sense,\" Zofi remarked, cutting her off. \"Give it a week, stretch you out--\"\n\n\"I don't care. We're doing this. TONIGHT.\" Sam's voice brooked no dissent, and although Zofi and I exchanged a look, we knew better than to try arguing with her when she'd made up her mind about something like this.\n\n\"Okay, okay, we're doing this,\" I conceded with a sigh. \"But maybe you're just super tight because you've got my dick inside you right now. It's gotta be squeezing the space a little bit.\"\n\n\"Don't pull out,\" Sam groaned, grinding her clit against my pelvis again. \"I need to feel you inside me. Do you have any idea how much I crave to feel you inside me? I fucking LOVE you, Matty. I'm super fucking IN LOVE with you. And I want to feel you inside me ALL THE FUCKING TI--OOOOWWWWWW!!!\"\n\n\"That's four,\" Zofi called.\n\nI blinked in surprise. \"You trying to get her whole fucking hand in there?\"\n\nSam shook her head, struggling to breathe, but she muttered, \"Maybe someday. Neevie said you put three of your fingers in her last night.\"\n\n\"So what, you've got to one-up her by fitting four?\"\n\n\"Nah. I just figured four of Zofi's fingers are about as thick as three of yours.\"\n\n\"Um, okay...\"\n\n\"Fucking, FUCK,\" she spat, bending over and hanging her head. \"Fuck it hurts!\"\n\n\"Sam...\"\n\n\"Don't you fucking suggest we stop!\"\n\n\"I'm not. I wasn't going to. It's just--\"\n\n\"What the FUCK?!?\" Sam suddenly exclaimed, her eyes going wide as she looked down. \"Are you going SOFT?!? You're fucking going soft INSIDE my pussy?!?\"\n\nIt was true. The sight of Sam's face inches away from mine in such obvious pain coupled together with the idea that she was once again forcing herself to do something she wasn't properly prepared for solely to \"buy\" my favoritism (despite her denials) was the exact opposite of sexy. Now maybe her hot body and wet pussy would've been enough to maintain my erection under normal circumstances, but I'd been fucked to exhaustion this morning and even just cum inside Sam's pussy a few minutes ago. \"I'm sorry.\"\n\n\"FUCK!\"\n\nZofi pulled her fingers out of Sam's ass and backed away. Sam then got off me and retreated on her knees, staring in disbelief at my limp penis. Shaking her head, she dropped her face into her palms and then curled over straight down, her forehead on the mattress while she shuddered and shook with wracking sobs.\n\n\"What is WRONG with me?!?\" Sam wailed, her voice muffled by her hands.\n\nZofi looked like she wanted to reach out and hug her best friend, but she took one look at her slimy fingers and left the room to clean up. That left me alone with Sam for a moment, and I scooted around so that I could wrap her up in my arms. I hauled her around so that she was spooned up against my chest, my arms completely circled around her while she sobbed her poor little heart out.\n\n\"How the fuck was this so easy for Neevie?\" she whimpered.\n\n\"I don't know and it's not important,\" I said firmly. \"Right now I'm a hundred percent focused on YOU.\"\n\n\"I'm supposed to be Aphrodite...\" she whined.\n\n\"You ARE.\"\n\n\"Matty, please. No man is going soft inside Aphrodite's pussy.\"\n\n\"He is if he's a decent person and she's crying out in that much pain. Well, and he is if she's yelling at him to shut the fuck up. Not the sexiest way to talk to a guy.\"\n\n\"I'm a fucking failure,\" she wailed, turning around in my arms and burying her face into my chest.\n\n\"You're not a failure,\" I reassured her. \"If anything, I'm the failure for losing my woody. It's every guy's worst nightmare!\"\n\n\"It's not your fault. It's mine.\"\n\n\"It's nobody's fault. You're just frustrated and stressed out, which made ME stressed out, and being stressed out and exhausted isn't a great mindset for a guy to maintain an erection, that's all. But we can still do this. We can still do it tonight if that's what you really want. I'm here for you. I love you. If you tell me you want this, I'll do everything I can to make it happen.\"\n\n\"You will?\" Hesitantly, she raised her teary eyes up to meet mine.\n\nI cradled her face in my hands, brushed moisture off her cheek with my thumbs, and kissed her quickly but tenderly. \"I will. Whatever you need. I'd do anything for you, Sam.\"\n\nShe closed her eyes and immediately kissed me. Then she kissed me even harder. She pressed her weight into my chest as we started Frenching, and I found myself falling sideways until I was flat on my back with my feet dangling off the edge of the bed and Sam's mostly-naked body atop mine.\n\nWe kissed and kissed while my hands stroked up and down her spine. She held my head and tried to pour out all her love and emotion for me through her lips. I was consciously aware of her big naked tits pressed into my chest, of the lace fabric of her garter belt around her waist beneath my hands as I moved lower to grab her bare buttcheeks. She started grinding her clit against my re-stiffening prick, and the longer we made out the harder I got.\n\nEventually Sam was riding my cock like a rail, sliding back and forth, humping me in a manner not unlike the way she used to dry-hump me in Matty's Chair what felt like so long ago. It didn't take much for her to reach between us, elevate my prick, and back herself onto me. And I broke away from our liplock to groan at the sensation of being surrounded by her sweet snatch.\n\n\"Zofi, get back here,\" Sam muttered softly, without taking her eyes off me.\n\nI'd almost forgotten Zofi was here before the still-naked brunette popped back into view. And I realized that all three of us had returned to the same positions, more or less, we'd been in before I'd gone soft.\n\nI watched Sam's eyes bulge out when Zofi's fingers began re-entering her ass one-by-one. But she was more relaxed now, less... insistent... and while she was clearly experiencing some discomfort, she at least didn't seem to be in so much pain.\n\n\"Hey...\" I said, stroking her cheeks and tilting her head to mine for a quick kiss. \"You're doing great. I know you can handle it.\"\n\n\"I want it. I can handle it,\" Sam said. Zofi put a cap on that comment by inserting another finger, making Sam wince.\n\n\"Okay then. Let's do this.\" I nodded. \"And thank you for this. I know how special a gift it is.\"\n\nShe smiled through her clenched eyes, gritting her teeth as she told me with absolute sincerity, \"It's my last virginity. It's yours. I love you, Matty.\"\n\nI nodded. \"I love you, too.\" I kissed her again.\n\nWe made out for a little bit, but before long she broke away and groaned. \"I need you in my arse now.\"\n\nI nodded again, reached down to her hips, and guided her up and off my cock. She visibly relaxed once my thick dick was out of her, as I think it really did have an impact on how tight Zofi's fingers felt in her ass. Sam exhaled long and loud, and started to take deeper breaths in general while I circled around behind her.\n\nI shared a quick look with Zofi while the brunette still had four of her fingers crammed inside of her best friend's rectum. She raised her eyebrows, gave me a 'Can you fucking believe we're doing this?' kind of look, and waited for me to get into position. I saw the bottle of lube and went ahead and squeezed a line down the length of my cock. Zofi reached over and rubbed it all over my skin, getting my cock well-coated, and only then did she finally extract her digits from Sam's stretched sphincter.\n\nA gaping hole awaited me, although its diameter still looked much smaller than my mushroom head. I pressed myself into the gap, took hold of Sam's hips, and started pushing.\n\n\"Guuuuhhh...\" Sam grunted at the first penetration, her head popping up. I was suddenly reminded of my thought to have a mirror in front of her so I could've witnessed her reaction, although I tried to pack away that selfish thought. Last night, Naimh had been a lot hornier and entry had been a lot easier. Tonight, Sam seemed to be doing this more out of determination than actual lust, and those intentions made all the difference in the world.\n\nZofi backed away from us while I gripped Sam's hips firmly and tugged her body towards me as I simultaneously thrust my hips forward. Sam's anal chute was tight, much tighter than Naimh's had been, and I had to work harder to slowly burrow myself forward through that constricted canal inch by inch.\n\n\"Fuck, fuck, fuck, fuck, fuck,\" Sam was muttering with her head hanging down. Groaning, she folded her arms atop the mattress and bent down to bury her face against them, clearly in pain but just as clearly determined to keep going. I wanted to stop my forward motion and ask if she was alright. But in my mind's eye I could already see her barking at me, 'Shut the fuck up, Matty, and FUCK my arse!'\n\nHer obvious pain, however, neutered my enjoyment of the moment. I had no doubt she could handle it -- or more to the point, she would force herself to handle it no matter how much it hurt. I couldn't claim to know what was going on in Sam's psyche, but regardless of whatever kumbaya moment she'd had with the girls this morning about not undermining each other and declaring their vows to never steal me from their friends, Sam's competitive edge had not dulled in the slightest.\n\n'Don't think I didn't notice the way you were making out with Mari on the couch during the movie while I was riding you,' she'd said this morning.\n\n'Don't think I didn't notice when Naimh deep-throated you while you were blindfolded,' she'd said barely half an hour ago.\n\nThat Sam would be giving me her asshole had apparently become a given once Naimh upped the ante last night. I still didn't know whether or not she was trying to \"buy\" my love -- we'd never really come to a resolution on that part -- but regardless of her motivations, this WAS happening. Failure was not an option. And no matter how much it hurt her, and no matter how much I hated seeing her in pain, I had to do whatever I could to help her succeed.\n\nFinally, I had every last inch in. Sam was copiously wet, and by that I mean her skin had a fine sheen of sweat all over her body. She looked like she'd been through a torture chamber, but I summoned a sense of congratulations into my voice as I told her, \"That's everything. You took it all.\"\n\n\"Guuuuhhh...\" Sam grunted, not raising her head or otherwise moving. She took deep, calming breaths, seeming to relax a little now that she knew there was nothing left to try and cram inside. I rubbed her lower back, bent over and kissed the base of her skull, and then returned myself upright, staring down and allowing myself to marvel at the complete disappearance of my thick dick inside Sam's most sacred hole.\n\n\"Fuck my arse,\" Sam muttered softly.\n\nI chuckled. \"We don't call it that here in the States.\"\n\n\"I'm Australian. And you didn't seem to mind Neevie yelling, 'Fuck my arse' last night.\"\n\n\"And you're never gonna convince me we're doing this just because you wanted to gift me your virginity, that it has nothing to do with Neevie, if you keep bringing her up.\"\n\n\"Shut the fuck up, Matty. I LOVE you, but... just... lemme do this, alright?\"\n\nI sighed and replied, \"Shutting up.\"\n\n\"Ooh, she looks like that really hurts a lot,\" Zofi said, wiping her now-clean hands having momentarily stepped away to the bathroom. \"I need a polaroid of this moment to remind me NEVER to let you do this to me, Matty.\"\n\n\"He's just so fucking BIG. I feel like he's tearing me in half. Maybe if you found a guy with a skinnier dick.\"\n\n\"Never gonna be another guy touching me but Matty,\" Zofi pronounced with dead seriousness. \"Never.\"\n\nI arched an eyebrow in surprise at that comment, especially from the girl who had just proclaimed this morning that she wasn't in love with me at all. But Zofi didn't even look at me. Her attention and concern were both entirely on Sam.\n\n\"Hey, I got an idea,\" Zofi said. \"Push up a bit onto all fours.\"\n\n\"Huh?\"\n\n\"Just do it.\" The lithe brunette slid onto the bed and rolled over onto her back with her head facing me. She scooted in next to Sam, and once she started getting the blonde to climb over her, her idea became clear. Moments later, the pair of best friends were once again in a sixty-nine position, only this time I had my big dick lodged deep inside Sam's bunghole.\n\nI still hadn't started pumping, but despite the deep concern I had for Sam's pain, there was no denying that a super-hot, super-tight asshole was clamped closely around my cock, and there was no chance of me going soft anytime soon.\n\n\"You have NO idea how weird this looks right now,\" Zofi laughed. Her sparkling blue eyes flicked back to me for a moment, looking up between Sam's thighs, and the mirth on her face did much to lighten my heart in this moment. A moment later, she gripped Sam's hips, tugged her down a little lower, and started licking away at her best friend's slit.\n\nThe effect was immediate. Sam moaned, hung her head down, and miraculously, the tightness of her anal chute began to diminish.\n\n\"Huh...\" I muttered. \"You just needed to relax.\"\n\n\"Hard to relax when there's a fucking baseball bat up your arsehole,\" Sam grunted, but the more Zofi went to work, the more at ease she obviously felt. As the tension lessened, she started breathing easier. And in the end, Sam's rear passage felt merely 'snug' instead of 'clamped up tighter than spandex on a 500-pound hairy gorilla'.\n\nYes, I just compared my dick to a 500-pound hairy gorilla.\n\n\"Okay,\" Sam sighed after a while. \"I'm willing to concede I didn't really think this through well enough.\"\n\nZofi giggled and stopped licking for a moment. \"You know, you've got a working mouth at that end too... EEP!\"\n\nSam picked her head back up after doing whatever she'd done to make Zofi go \"EEP!\" like that. \"Okay, Matty. For real now. Fuck my arse, please?\"\n\n\"As you wish,\" I replied.\n\n\"Fucking great movie...\" Sam sighed as I withdrew slowly a few inches and then pushed my way back in. \"You'll forgive me if I start fantasizing you're Westley for a bit.\"\n\nI chuckled and wracked my brain. \"There's a quote comeback here, I know it.\"\n\nZofi pulled her mouth off Sam's pussy and quoted, \"'I will always come for you.'\"\n\nI barked a laugh, which made me thrust forward abruptly, filling Sam's colon with the three inches I'd just pulled out. It went in much easier now, and although she shrieked at the sudden stretch, Sam started snickering along with both Zofi and me.\n\nFrom then on, everything went much better. The hard part was over, and the fun began. Zofi kept eating Sam's pussy while I started to speed up my pumping in and out of Sam's stretched anus. Sam returned the favor, putting her face down to really munch on Zofi's snatch. But when I pulled myself almost all the way out and took a long lunge all the way back in, Zofi abruptly pulled her head back and started laughing",
        "\"What?\" Sam called, picking her head up.\n\n\"His balls just hit me in the face!\" Zofi was cracking up so hard she had tears in her eyes. \"If you'd asked me over the summer if I'd ever have Matty's balls hitting my forehead while he sodomized the shit out of you, I NEVER would've believed it.\"\n\nThat got all three of us laughing again.\n\nAfter that, though, Zofi slithered her skinny body out from under Sam. Her best friend was a little too distracted getting cornholed for the first time in her life to really pay attention to her cunnilingus, and now that everything was going smoothly her services were no longer a requirement downstairs.\n\nWe did go for a position switch, though. I dismounted the bed and stood next to it while Sam flopped over onto her right side, forming an L-shape with her butt right at the edge and both stocking-clad legs extended away to my left. I was able to re-insert my cock into her gaping open anus and resume thrusting while she relaxed on her right shoulder a bit before twisting her torso back to face me, her left arm draped over her left hip. The position did wonders for making her big breasts wobble with my every thrust, and I found myself setting a pace that would promote harmonious resonance and REALLY make those puppies dance.\n\n\"Mmm, you're really enjoying this now, aren't you?\" Sam asked me in a husky tone.\n\n\"Uh-huh,\" I grunted, still focused on her bouncing boobs, although I let my left hand stroke up and down her stockinged legs while her supertight cornhole constricted around my cock.\n\n\"Aren't you glad I didn't let you stop?\"\n\n\"Uh-huh,\" I grunted again, this time raising my gaze to see Sam's exultant smirk.\n\n\"How many times have you fantasized about fucking my little arsehole over the years?\"\n\nI raised my eyebrows but kept pumping, never letting up. \"Uh, a lot. I wouldn't be able to count.\"\n\n\"You've fantasized about fucking ALL of our arseholes, haven't you? Even Belle's.\"\n\nI sped up just a little at that, but it was enough for Sam to notice, and she giggled.\n\n\"Can you imagine having all six of us bent over a bed, lined up in a row? Face-down, ass-up, reaching back to spread ourselves for you?\"\n\n\"Don't you mean five?\"\n\n\"Pssht. Alice will be back. She's throwing a hissy fit right now but she loves you too much to stay away. And I'm wanna be there when you wreck her poor little arsehole the way you're wrecking mine.\"\n\n\"You're still only getting five, Matty,\" Zofi spoke up. She reclined against the headboard, slowly caressing her snatch while watching me sodomize Sam. \"That fat thing isn't going anywhere NEAR my tiny little... 'arsehole'.\"\n\n\"Don't knock it 'til you try it. This part here is feeling AMAZING,\" Sam sighed. \"He's gonna make me cum this way.\"\n\n\"Really?\" Zofi sat up straighter. \"You looked like it hurt so much in the beginning I thought this was gonna end up one of those 'just suck it up for as long as you have to' moments.\"\n\nSam bit her lip and let her head loll back as her eyelids fluttered. \"Nuh-uh. This is feeling gooood. Fuck yeah, Matty. Fuck that tight arse. Fuck it and fill it with all your sperm. I'm getting closer now. You're gonna make me cream on your cock in my arse. You gonna cum for me, baby? You gonna fill my tight hole with all your spunk? Fuck, fuck, fuck!\"\n\n\"Oh crap, Sam,\" I groaned, speeding up faster and faster. \"I'm gonna cum soon. Your tight ass is gonna make me cum!\"\n\n\"Yes! Yes! Cum in me, Matty! Bathe my virgin arsehole with your hot, sticky sperm! Fuck, fuck, fuck, I'm cumming, Matty! I'm cumming!\"\n\nI actually beat her to it. I rammed my hips forward, holding myself all the way inside her tight bunghole and let my semen fly. She jerked when she felt the first impacts splashing against her very core, and seconds later Sam started spasming as a spectacular orgasm absolutely shattered her. \"FUUUUCK!\" she screamed, never a girl who could keep quiet. \"FUUUUCK! FUUUUCK! FUUUUUUUUCK!!!\"\n\nI yelled right with her.\n\nAnd then we were done. I bent forward, my hands braced atop the mattress to keep myself from collapsing while my spent dick remained stuck inside Sam's tight \"arse\". I gasped for breath while she curled up into more of a fetal position, still on her right side, eyes closed as she recovered from me sodomizing the shit out of her.\n\nBut eventually, she found her breath. We stared at each other, grinning like idiots after completing that insane assfuck. And then she did something I totally did not expect.\n\nSam hollered at the top of her lungs. \"NEEVIE, TOP THAT!\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "orgy",
        "harem",
        "mff",
        "threesome",
        "creampie",
        "teenagers",
        "anal",
        "anal sex",
        "big breasts",
        "blindfold"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-17-18"
}