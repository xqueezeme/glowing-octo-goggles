{
    "title": "A Company Man: The CIA & Me Ch. 02",
    "pages": [
        "If you haven't read Part 1, please do so. This story just won't make sense to you without Part 1. Also, remember to vote and leave your feedback about this story.\n\n*\n\nI arrived in Milan on the TWA red-eye. Just outside customs a beautiful dark haired woman leapt into my arms and smothered me with kisses. Katrina had found me. I was back in my other life.\n\nShe led me out to short-term parking. She had the Porsche Carerra and had me at the hotel in about thirty minutes. The Grand Hotel Et de Milan is probably the eighth wonder of the world. It seemed every valet, doorman and clerk remembered us by name and helped us check in again. We had the same suite we'd had two months or so earlier. \n\nOnce we were alone, Katrina stripped me, pulled her own clothes off, and led me into the large shower. We kissed and hugged under the steaming water as I shed the grit and grim from the trip and tried to get a handle on what time zone I was in.\n\nShe led me back to the bed and I was worried I was going to have to beg off until she announced, \"You and I are going to take a two-hour nap!\" There was no arguing with her pronouncement. I was asleep in two minutes cradled against her soft bosoms. I awoke to Kat's kisses. She'd let me sleep an extra half hour. I was embarrassed because I'd drooled all over her breasts during my intense nap. She laughed it off and kissed me some more. \n\nNow I responded to her seductive body. She was as equally desirous of me as I was of her. We both skipped a lot of our foreplay and just coupled. I came up over her and sank my hard penis into her wet vagina and we made love. We really did make love -- I couldn't think of anything else to call it for in that brief time we shared ourselves with each other, what we were really doing is telling each other 'I love you.' We were soft and gentle with each other, made sure to deliver the pleasure the act was designed for, and then cooed and fondled each other in our after play. We took another shower then put on casual clothes, bought a simple lunch at an outdoor restaurant, and then walked to the Duomo Square building. I felt like I was on cloud nine.\n\nThey were kind to me at the training center that afternoon. I just had some language training in Russian again and a class on disguises, makeup and using false identities. People smiled at me in the halls; I was becoming known by the regular staff. I finished at five o'clock. Katrina came and retrieved me from my last class -- I was temporarily a blond female when she stuck her head in my 'disguise' class. We went back to the hotel and changed into jogging clothes, and went for a fifteen-kilometer run. After we cleaned up, enjoyed a room service dinner in the room and made love again, we slept through the night.\n\nIn the morning, Katrina and I spent two hours in martial arts training with Wan Suh. Kat commented on my muscles and trim form as she flipped me up in the air; as usual she showed me no mercy. Then I cleaned up, put on my 'consulting suit', and headed off for the rest of the day to Montedison. I didn't finish there until after seven. By the time I got back to the hotel it was late -- we skipped the run but repeated the other activities of the previous night.\n\nThe next day I did an all-day seminar on management information systems at Montedison. There were about a hundred top executives in the room. Simultaneous translation of my remarks was used to help those less familiar with English. I received a lot of favorable comments. The chief technology guy in the company signed me up for a couple more talks as well as some serious consulting work.\n\nThat evening, Kat and I did the fifteen-kilometer circuit again, cleaned up and ate at Centro Ittico -- one of the more exclusive restaurants in Milan. The seafood cuisine and service were superb. We walked back to the hotel the long way, cutting through La Galleria for ice creams even though we were dressed in evening wear.\n\nThursday I spent all-day at The Company's Duomo Square building: body hardening for two hours; firing range for two more -- now with moving targets; short lunch; Russian language training; and knife fighting -- now with sharp weapons and not the toys we'd used in my earlier training with Rand. At the end of the day I checked in briefly with Kyle over the secure video conference link. Katrina came in during my call and said hello to him.\n\nFriday morning we were back at the driving school. This time I was taught how to take a car over various kinds of jumps of varying distances and how to make controlled rolls in a car, actually rolling a car completely over -- having it right itself and being able to drive away at a high rate of speed. We reviewed many of the driving techniques from two months earlier and also covered high-speed chase maneuvers and evasive techniques, including ramming and 'drifting' a pursuer's car. There was also a lesson about how to drive and shoot at the same time. I wasn't using the Glock -- it would have penetrated the car we were sparring with; instead it was a paintball gun. After two hours and many pointers I was actually doing pretty well at hitting a moving target; the other car was covered with paint splatter. We ended the day in a kind of demolition derby activity: Katrina was in one car, I was in another and there were two other vehicles and we all had paint ball guns; I'd learned my lesson well for I was the last vehicle running as I tore around the track in a victory lap -- parts falling off my paint splattered car every few feet.\n\nAs we drove back to the City, Katrina said, \"You know you're probably ready to start doing some real Company work. You're in shape, you have the basics mastered, and you've got a solid base of work in Europe to justify your travels if anyone asks. Keep that in mind. I bet you'll be getting more serious assignments soon. I'll help if I can -- if they let me.\" I nodded; a little terrified at the thought that I might have to actually use any of the training I'd been given.\n\nWe spent that Friday night in Milan in our formal wear at the Auditorium de Milano for a classical music concert. As usual, Katrina turned heads in her dress; I was simply the guy that was escorting the most beautiful woman in Europe. After the concert we made love to each other and then slept in the comfort and peace of each other's arms.\n\nSaturday morning we checked out and drove the short distance to Lake Como, Italy, stopping and shopping at quaint little shops along the way and eating a late lunch in a romantic little trattatori. We checked in for one night at the Villa D'Este, one of the finest hotels in the world. We took a long run along the lake's shore front, staying near the water whenever we could. We came huffing and puffing back to the hotel about dusk. Dinner was romantic and an inspiration in the large, ornate dining room. The hotel had been built in the sixteenth century; you couldn't help but appreciate the history that the place had witnessed. And, of course, we made love -- the porch doors in our room open to the lake. I suspect a few other rooms heard our noisy lovemaking; no one complained.\n\nSunday morning we ran again, not quite as far then we cleaned up and started driving. Katrina told me she was going to \"take me home.\" Frankfurt was about 380 miles away on the other side of the Alps. We flew and did the journey in five hours, making only one fuel stop. The trip was like a travelogue of places I hoped to spend more time at some day: Lucerne, Zurich, Basel, Freiburg, Strasborg, Heidelberg, and finally Frankfurt. She lived in Weisbaden just west of the City. \n\nKatrina had a beautiful apartment overlooking the central park in the center of town. After we had stowed our luggage in her place, we walked the park, stopping in a beer hall for the mandatory stein of German dark 'bier'. We laughed and I was the happiest I could remember being in along time. We walked some more, but the City was shut tightly for the Sunday. We went back to her apartment and made love to one another, cleaned up, went out to eat, came back and made love again, and slept in her bed spooned together. What a jet propelled day. Best of all was that we got to talk a lot as we drove; we really did love and respect each other.\n\nMonday morning we both flew to London. McKennitt & Company had a long-term lease on a flat in South Kensington so that was where we headed from Heathrow. We dropped our things, walked around the neighborhood eventually doing a long brisk walk around Hyde Park and Green Park, then on to Piccadilly Circus and Leicester Square, up to Oxford Circus and back down Oxford Street to Marble Arch, then back to the flat cutting across Hyde Park again. Everything seemed so close together. I showed her where our office was going to be. We ate at a small Turkish restaurant and then retired for the night. \n\nThe next day I left Kat sleeping in the flat and went off to a client for the day. Remarkably I sold some more business. Things were looking up. When I got back to the flat, Katrina was looking very preppy and very domestic in gray slacks and a sweater. She was reading her Russian book. We cuddled as she told me about her day prowling around the area and making some interesting \"arrangements\" she said I'd find out about soon enough.\n\nWe ate at a popular Thai restaurant near South Ken and headed back to the flat. I noticed the lights were on when we got near the place. I looked at her with a questioning glance; she just grinned back at me.\n\nAs we entered the flat, Alyana came bounding into my arms -- hugging me closely and kissing my face wildly. I was astounded. Eventually, the two women hugged and kissed too. I noticed their kiss was more than just a friendly buss. \n\n\"How? ... What? ... Why? ...\" I stuttered to her -- really to both of them.\n\n\"We talked a week or so ago and I told her you were coming to Milan and London. She decided she just had to do business in London and so here she is. At our disposal,\" Kat grinned lecherously at me. Alyana grinned too. I guess I was smiling pretty broadly too.\n\n\"What about Ivan?\" I asked. \"Won't he be jealous or concerned?\"\n\n\"I am here with his blessing,\" Alyana stated firmly in her cute Russian accent. \"He said I learned so many good things from you the last time I should come and see what else you can teach me. He liked that I swallow all of him, for instance, and the thing we did with the liqueur. I also am making him a better lover and he knows this and likes it -- so do I. He sends his hello to each of you and his regrets at not being here. He said 'next time', and to tell you Katrina that he will be a better lover to you the next time thanks to what he is learning.\"\n\nI pulled both women to me and kissed them. \"Well, what are we doing standing here. We have to teach this women some new things to take back to Moscow!\" I escorted them towards the bedroom.\n\n*****\n\nIf there was a heaven on earth, it was being in bed with both Katrina and Alyana. Both were beautiful women in their full ripeness of life. The na\u00efve viewpoints and youthful inexperience were mostly gone, replaced by sophistication and joie de vivre. To top it all off, both women were in love with me and, I realized, I with them.\n\nMy long cock was buried to the hilt in Alyana's warm and willing pussy. She was riding me slowly and sensually as Katrina sat on my face and let me eat her moist pussy to my heart's content. The two women were kissing and loving each other from the clits up. That said, I could still feel Alyana's fingers come to rub and massage Kat's clit from time to time and I knew Kat was returning the favor. \n\nAlyana was the first to cum. I could hear her tell Kat that she was near ... then very near ... then I felt her spasm around my cock. It took every bit of effort I could muster not to blast my cum into her pussy. Fortunately, as she climaxed she froze -- her breathing stopped and all motion stopped, save for the remnant muscle twitches inside her. I was able to hold it together and the urge passed. Alyana went into a passionate embrace with Katrina to celebrate the event.\n\nThe two women changed places and Kat came and sat on my steel rod for a while. She knew I was near and also that I didn't want to ejaculate so soon in the evening. She was kind and only jousted with my rod occasionally -- enough for both of us to keep our interest. Eventually, she let herself go when Alyana massaged her clit for an unusually long period of time. The response was amazing, particularly since I had 'cooled' a little. I could feel her muscles in a new light since I wasn't as close to orgasm as I usually was when I felt the same muscles milking the cum from my cock. \n\nAs Kat came down from her high, she said softly to me, \"I've had you all week. Alyana needs you. Love her. Cum in her. Make her feel like a real woman.\" She lay beside me and pulled Alyana from my face and into a prone position between us. Katrina leaned in and passionately kissed her, several fingers inserted deep in her pussy. Alyana squirmed in the kiss.\n\nI replaced Katrina at Alyana's lips, kissing her passionately. She was almost delirious with the passion we were providing. Kat kept massaging her cunt and suddenly Alyana exploded into me as another orgasm hit her hard. She clutched me in an almost death grip as her body rose off the bed and spasmed in her ecstasy. She finally moaned her rapture, a long \"Oooooooooh\" followed by her silence as she fell back to the bed in the passion.\n\nI brought her legs up over my shoulder and sank my cock back into Alyana's body. She was still spasming from the orgasm Kat had delivered to her, so it was with great pleasure I felt her welcoming clenches as I started to move into her. She groaned as my girth made it back to her full depth. \"Oh David, I love it when you are as deep in me as you can go. Hold it right there and let my cunt massage you.\"\n\nI held still and received an unusual experience from her. She milked me with her pussy, quite intentionally but using the muscles that I thought only came instinctually into play during an orgasm. What a talented woman. Gradually she expanded the muscles she brought into play, her hips finally moving only slightly as she tried to bring me pleasure.\n\nShe apparently brought herself more pleasure than she intended for it was only two minutes later that I watched her eyes roll up in her head and her breathing stop as another climax rippled through her body. I could watch her abdominal muscles contract and spasm, feel her cunt clench my cock, and, of course, her legs went into wild twitches behind me as she pulled me into her. I remained motionless and let her pleasure herself on my rod.\n\nI looked at Kat who was laying beside us -- a glorious wonder of beauty and nudity. I asked, \"Do you have any lubricant?\" She nodded and scrambled to her bedside table, producing a relatively new tube of Astroglide. \n\nI flipped Alyana over onto her stomach and pulled her mid-section into the air. I don't think she understood what was about to happen. Kat watched with a gleam in her eye. I put the cool gel along my rod and rubbed it in with a couple of strokes, the gel giving me a new level of arousal. I then put a tablespoon or so at the opening to Alyana's ass. In one smooth move I put my cock at the entrance to her dark tunnel and thrust into her; she rose up in complete surprise. \"Uuuuuuuugh,\" came from her lips. I pulled back and thrust again ... and again ... sliding deeper on each thrust as her muscles relaxed and she got used to the idea of my penetration.\n\nKatrina went to Alyana's face and kissed her. \"Is this new for you my darling?\" she asked. \n\nAlyana's head shook with great force in the affirmative. Finally, she spoke, \"I didn't think people really did this except in pornographic movies. Oooooooh my. This is ... is ... interesting ... is ... nice ... be gentle with me. I've never ... done this ... before.\"\n\nIt only took a minute for her to really get used to my rod in her ass. I moved gently but with authority, making long strokes and feeling her entire body twitch and clench as I moved. \n\nKat had slipped beneath Alyana and was sucking and palming her breasts. I softly said to her, \"Put your fingers into her pussy. Finger fuck her.\"\n\nThrough my sensitive prick I could feel Katrina's fingers make a penetration. We were only separated by Alyana's peritoneum - one finger then two and then three. Alyana was groaning more loudly and now in little spurts of sound, \"Oh ... uh ... ah ... oh ... ouuu ... eee.\" Each change of sound accompanied some new motion that either Katrina or I rained down upon her body. \n\nAlyana came again ... and again ... and again -- she was most definitely multi-orgasmic. Katrina and I were now conspirators to see if we could destroy this woman with pleasure after pleasure. If you'd asked, we were rapidly succeeding. Alyana was dissolving into a mass of quivering flesh whose sole purpose was to have a never-ending sequence of orgasms lasting from that moment to the end of time.\n\nFinally, I could hold off no more. I nodded to Katrina that I was near and she blew me a kiss. \"Cum in her ... deep in her ass. Give her one more orgasm.\" I felt Kat's other hand move to massage Alyana's clitoris as I started to hammer into her ass. My climax was one of the most intense in my life. I exploded into Alyana's ass -- a full load of cum jettisoned from my body into hers in only a few intense injections. Every nerve ending in my body triggered in the pleasure mode and I was swept into heaven for a long time -- unbreathing, unmoving, just a shuddering mass of male flesh impaled into a shapely female ass.\n\nI fell forward and forced Alyana down on top of Katrina. There was some rolling and wiggling and finally no one was being suffocated and we were in an optimum position to continue. I pulled out of Alyana's pretty butt, still rock hard but spent. Kat passed me a washcloth so I could wipe myself. I watched a dribble of my white cum seep from Alyana's ass and run across her cheek towards the sheets. Before I could wipe it, Katrina lapped the fluid with her tongue as she gave me one of her \"I'm evil\" looks. Sexy evil she was.\n\nAs the two of us recovered Katrina said, \"How come you've never done that with me?\" I shrugged.\n\nAmazingly I was still hard. The sensation of cuming hadn't resulted in my usual male flaccidness. Instead I felt as though I needed to cum yet again. I decided to take advantage of the situation.\n\nI pulled Kat in front of me -- face up. I wanted to watch her reaction as we did this. I found the gel and re-lubricated my rod then pushed her legs back until I could see the dimpled entrance to her dark tunnel. I pushed slowly into her, only sinking in an inch or so until I met resistance. \n\n\"You have to relax. Just think of this as a new way for us to make love - a new hole to try. Have you done this before?\"\n\n\"No. Never. I've had fingers in there ... and a small dildo ... but you're huge.\"\n\nI pushed a little harder and stroked a breast, gently pinching a nipple. The distraction proved to be just what was needed. I sank in past the muscle that had blocked me a moment earlier. I started to slowly thrust, going deeper with each inward push.\n\n\"Oooooooooooh myyyyyyyyyyyy Goooooooooood!\" she exclaimed through clenched teeth. \"This IS different.\"\n\nAlyana lay and watched us, lightly stroking the swollen lips around her pussy. I nodded to her and gestured with my head towards Kat's pussy. She understood and leaned forward taking Kat's clit in her mouth and smothering the nub with the rough friction of her tongue. Kat about leapt off the bed she twitched so much. Both of us held onto her for the ride. \n\n\"Oooooooouuuuuuu, you'll destroy me. Oh, waaaaaay toooooo muuuuuuuch sensation.\" She was panting heavily as she watched me thrust into her ass and watched Alyana's mouth and tongue on her pussy. She had a look of lust, a look of passion, a look of love on her face all at once. ",
        "The feeling rapidly came back to my engorged cock. Suddenly I was in danger of too much stimulation. I didn't care. I was put in this world to have all the climaxes I could muster and tonight I was enjoying some of the most erotic ones I'd ever have.\n\nI build up a rhythm. Alyana somehow kept her mouth near Kat's clitoris and also inserted most of her hand in Kat's vagina, moving in concert with my stokes and then in opposition. Kat was writhing wilding around the bed -- firing off a small orgasm every minute or so. She kept moaning and groaning her passion to us.\n\nFinally I could stand it no more. I realized I was about to have my second cum of the night. I warned the women and sped up. My explosion was equal to the one only a few moments earlier when I'd been in Alyana's ass. It seemed that I came and came and came -- a river of fluid leaving my body and flooding into Kat. She had her largest orgasm of the night, ejaculating some of her girl fluid onto Alyana and me. Alyana immediately moved in and started lapping at the fluid that had jetted from Kat's pussy. \n\nEventually we all fell together again. I was in the middle cradling both women to me. I could feel the small amount of pubic hair that each woman had left as decoration against my thigh; the moisture from their cunts coated my thighs and rubbed off onto me; I could feel the erect nipples from each of them pressed into my side and chest; their tousled locks of hair flowed around my neck and head, a delight to smell and rub my cheeks into. Then there were our kisses, shared back and forth for a long time as we all cooled down from our passions.\n\nFinally, Alyana said, \"See I've only been with you both for two hours and you've taught me lots of new things to take home. What we did ... when I do it with Ivan ... it will boil his blood. He may never let me leave his bed. Sooooooo sexy.\" She giggled and kissed my neck. \n\nKatrina had one arm across my chest and was gently stroking one of Alyana's breasts, not so much to excite but just to be in some type of erotic contact with her. Alyana realized she could do the same and did.\n\n\"I can leave the two of you if you want,\" I said softly. \n\nBoth women grinned at me and said almost in unison, \"Not tonight. We have tomorrow while you're at work.\"\n\n*****\n\nI'd been back in Boston for a week when there was a major turning point in EVERYTHING. \n\nIt had been a good week. I'd savored the memory of Kat and Alyana and the times we shared. I'd also sold more work at British Petroleum and landed a new client -- one of the savings and loan associations in The City -- London's financial district. I'd also barely managed to do the minimum to keep up with my workout regimen -- except for the sex. Were those replacement calories?\n\nStacy had had a good week too and we shared a mellow Saturday, doing a few things to help the kids with their school work and driving them around our suburban town to shop and see friends. Late in the afternoon I suggested a movie and Stacy accepted my offer enthusiastically. Our sixteen-year-old daughter, Kiley, even decided to come with us since she'd wanted to see the movie too. We drove over to the Natick Cineplex 20, parked in the crowded lot, went in and enjoyed the movie.\n\nAfter the movie it was dark and we were heading back to the car. We'd been forced to park pretty far from the theater and the parking lot was not well lit. Suddenly we were confronted with two young thugs with stockings pulled over their head, I turned and there was a third behind us. One of them said, \"Wallets ... and you sweetie ... you come with us,\" he pointed at my daughter and reached to grab her arm. The one behind us grabbed my wife's purse.\n\nI broke the arm of the boy who'd taken my wife's purse first. The kick came so fast he didn't even have time to react. You could hear the bone snap. I stomped on his instep and landed another kick in his groin with my other foot, my entire body in the air, and he went down in great pain.\n\nI turned to the one that had been approaching my daughter. He had her arm and she was trying to resist. He let her go and backed away slightly and then suddenly there was a long switchblade knife in his hand. He started dancing around towards me. \"Want me Dad. Come and get me Dad. You think you can protect your little cunt from us, don't ya. Well you can't. I'll cut her like I'll cut you.\" He started towards me.\n\nIn one smooth move I'd grabbed his arm, made him release the knife, and hurled him through the glass of the passenger side window of the car next to me. He was out cold and there was suddenly a lot of blood dripping from an open gash on his head.\n\nThe third kid should have run but instead he reached in his jacket and produced a small handgun. \"You think you can mess with me and my friends, I'll kill you -- I'll kill you,\" he screamed. He started to raise the gun to fire at us. He was too late; the Glock came out of its holster just the way I'd practiced a thousand times. I made only one shot; it caught him in the shoulder and spun him away from us. I saw the blood splash from the exit wound just the way I'd been told it would. He fell on the side of his face, unconscious, his gun clattering away from him and under another car. The whole confrontation had taken about twenty seconds.\n\nI quickly frisked each of the three thugs, making sure there were no more handguns on the scene. The threat eliminated, I turned to make sure Stacy and Kiley were all right. Their jaws were hanging open as they looked at me in awe. Then Stacy started to stutter as she sank to her knees and dissolved into tears, \"You ... you ... you have a gun!\" \n\nKiley broke into tears and fell down on her knees next to her mother almost in shock. \"Oh Dad, you saved us.\" I pulled Kiley up, hugged her tightly and then leaned her against a car next to me. \"Listen. LISTEN. Both of you. Don't speculate about what happened here or why I have a gun. The police will come. Tell them exactly what you saw. DON'T SPECULATE. I'll explain my ... my gun ... and my actions later. Now, Kiley run ... RUN to the theater and have then call the police then get back here right away.\" I looked at the passed out guy in car with blood streaming from his head and the bleeding form of the kid that had had the gun; I shouted to Kiley, \"Tell them we need an ambulance too.\" She took off at high speed.\n\nThe Natick Police cars screamed into the parking lot a few minutes later. I attracted them with wild waving and stopped them from penetrating the crime scene. I showed them the three thugs. All were still alive, two just barely. \n\nI explained what had happened briefly and that I had a handgun and that I'd taken the clip out of it. I showed the clip in my left hand. I turned and hiked up my jacket with one hand so the cop could extract the Glock from its holster. I noted he used two fingers; he dropped it into a plastic bag and he put it in his squad car. Stacy and Kiley were not taking their eyes off of me; both appeared in shock.\n\nAnother cop handcuffed the kid whose arm I'd broken and tossed him in the back of a squad car. The kid yelled in pain and he was still groaning from his sore nuts. They pulled the kid from where I sent him through the window and laid him out on the ground. He was still unconscious, his face was kind of pulpy but the bleeding from a broken nose and a slash across his forehead had almost stopped. He came to about the time they got him prone; they cuffed him and had another cop guard him as they waited for the ambulance. \n\nThe kid that I'd shot in the shoulder was now sitting up leaning against a car holding a pressure bandage against the wound; another cop was guarding him. He was almost delirious. He kept saying, \"I wasn't going to shoot. I just wanted to scare 'em.\"\n\nMeanwhile I'd recounted our confrontation for a second and then a third time. Another officer found the open knife under a car and then the kid's snub nose .38 special. He marked where he'd found them. Someone was taking pictures of the scene, including the broken window the kid had gone through, the thug's gun, and the knife. I told Stacy and Kiley to avoid letting anyone not in uniform take their picture.\n\nFinally an ambulance arrived and took two policemen and the two thugs I'd really hurt to the hospital; the police car with the guy I'd kicked in the nuts left to go to the police station. A crowd had gathered but we tried to keep things pretty low key and so did the police. The police agreed to let me drive my own car with Stacy and Kiley to the police station. As soon as we were in the car, Stacy looked at me with big teary doe eyes and said, \"What is this all about? How come you had a gun? You don't like guns! And ... and ... you can fight. You ... you ... know ... karate or whatever that was. And ... the knife. Oh God.\" She broke in hysterical sobs, so badly that I had to pull over to the side of the road and comfort her for a few minutes. Kiley wasn't doing much better in the back seat.\n\nI still didn't explain my skills or weapon. I said, \"I will tell you shortly but not while we have to see the police. Wait until after we see the police -- then we'll talk. You tell them just what you saw -- no more, no less. Don't speculate. Don't make up stories. Just tell what happened as you saw it. Tell the truth.\" She nodded through her sobs. Kiley said haltingly through her tears, \"OK Dad.\"\n\nThe police station was a beehive of activity; everyone was waiting for us. It was a rough Saturday night in Natick. I noted that there was two State cops waiting to talk to us along with the locals. I asked to make a couple of phone calls and my request was quickly granted; I was the victim not the accused at this point. My first call was to Jim Haight; fortunately he answered on the third ring even though the hour was late. I explained what had happened and where I was. He said he was \"on it\" and I didn't need to call Kyle or anyone else.\n\nNext I called home to Kendra, our oldest daughter. I explained we'd been in an attempted mugging and that things hadn't worked out for the three guys that tried to mess with us. I didn't go into details, but asked her to stay at home and to be ready to help comfort her mother and sister. She readily agreed.\n\nStacy, Kiley and I were escorted into one of the interrogation rooms rather than leaving us in the hallway. Two detectives and two uniformed State cops accompanied our entourage. I suggested that I be interviewed separately since I was the one that had fought with the thugs and that someone could also interview my wife and daughter to hear their story. One officer thought that was a good idea and so I left with one State cop and him while his partner got some water for my family.\n\nDetective Wittman had a relaxed interview style but I realized immediately that he could bore right in to the nub of the situation. He had a cassette recorder that he put on the table and put in the record mode as soon as we entered the room. He said the date and time and who he was with then he began the interview, \"I was in the military and I thought I was highly trained in my day. I still keep up with it -- somewhat.\" He patted his paunch. \"I would have never thought of taking on three toughs like you did. You in the service? You military?\" The State cop was clearly just going to listen and nod. \n\n\"No,\" I said softly, \"just a cautious citizen.\" He squinted at me in obvious disbelief. So did the State cop.\n\n\"You had a Glock in a hidden holster -- but all the right permits. Don't see too many of those around here. Pretty lethal weapon. You could have blown the kid into the next State with that thing -- but you didn't. You hit soft tissue -- just nicked the bone. That was nice of you.\"\n\n\"Yep,\" I said. \"I sort of like the Glock. Light weight for its power. Didn't start carrying until a month or so ago. Just-in-case kind of thinking. Guess I was right. Kid was about to shoot at us -- told us he was going to kill us. Didn't want to use deadly force unless I had to.\n\n\"Yep,\" he said. \"You're pretty cool given what happened. I'd be high on adrenalin if I was you.\"\n\n\"My heart's racing,\" I said. \"I just hide it well. I was pretty much on 'automatic' during their attack.\" \n\n\"Yep,\" he said. \"How'd you disarm the kid with the knife?\"\n\n\"Oh, that wasn't too hard. He didn't know how to use it. He came at me off balance; all I did was help him along. Might have over reacted a bit but it got the job done -- he ceased being a threat. I'm glad you found the knife; I didn't see where it went when he went through the window.\" Wittman nodded. The State cop actually smirked.\n\nThe extension phone in the room rang and Wittman rose and answered it. He listened for a minute then excused himself. The state cop and I just looked at each other until Wittman returned.\n\nWittman came back about five minutes later and said, \"Mr. Krall, thank you for your time and for putting up with our procedures. I know we'll want to talk to you again and there will certainly be a time when these guys go on trial for armed robbery, attempted murder and a few other choice felonies. Turns out they'd done a couple of other armed robberies tonight before they got to you. If we can avoid calling you we will. Please come and join your wife and daughter. I hope we haven't inconvenienced you much. Sad event. Sad that kids think this way.\"\n\nI shook his hand and that of the surprised but mute State cop; I thanked them for serving and protecting. We walked back to the first interrogation room. I could hear the words of support and care to Stacy and Kiley from the other State cop and the detective as we walked in. They were very solicitous.\n\nDetective Wittman exclaimed that a friend of ours was waiting in the lobby and would be sure we got home OK. He walked the three of us out, then stopped and said, \"Oh wait. I nearly forgot. Your handgun.\" He ducked into an office an came out with the plastic bag containing my Glock and the ammunition magazine. \"Here, you better not leave this one behind. Expensive weapon.\" I thanked him and slid the gun -- without the magazine -- back under my jacket into the empty holster. I pocketed the magazine. I realized that something very unusual had just happened in order for me to get my handgun back so soon after using it.\n\nWhen we went through the doors into the lobby a very concerned Jim Haight was standing there with his wife Marylou who I'd met quite a few times before at McKennitt Consulting social events. Lots of welcoming and soothing words were said along with lots of 'what-gets-into-kids-today' statements. We all walked outside. As Marylou, Stacy and Kiley walked towards our car, I pulled Jim aside. \"What do I tell them? The gun? My reactions? My skills?\"\n\n\"We'll come with you. Meet you at your house. I'll do the explaining.\" Jim patted my back.\n\nAt the house Marylou helped Stacy get coffee for us all. Kendra our oldest daughter joined us, she was horrified at what had happened and was just learning from Kiley that her father had overpowered three thugs -- shooting one of them. She was actually holding and comforting her sister; neither wanted to be out of sight of me. Kiley was still teary -- for that matter so was Stacy who was playing hostess sort of on automatic pilot.\n\nWhen we were all in the living room, Jim began. \"The full story of what happened at the movies tonight started about a year ago. 'We' needed someone with some very special skills in Europe. We picked your husband for many reasons. You, Stacy, are one of them as you'll see.\" She nodded but looked puzzled.\n\n\"The 'We' in my statement is not just the consulting firm. The other part of the 'We' is ... well, it's the Central Intelligence Agency.\" Stacy gasped. Kendra's jaw dropped open as she looked at me in awe. Kiley whispered, \"Cool\" under her breath. Marylou just nodded. I could tell she'd been here before.\n\nJim went on, \"David assumed his patriotic duty and, when he was asked, said he'd work with both organizations. For almost a year he's been splitting his time. So far he's had a few assignments and he has done very well. Nothing dangerous or too exciting, believe me. Most of the time he's been in training. That training included learning how to use and carry a handgun -- rather routine for the kind of errands we get involved in for The Company. Some involve large sums of money -- for instance, he delivered half-a-million in cash to a contact in Paris for us in his first assignment.\"\n\nI thought, \"I did?\"\n\nJim went on, \"He also learned how to deal in a knife fight, high speed and defensive driving, many different kinds of martial arts, and he's becoming pretty skilled at the Russian language.\" \n\nKiley said, \"Really cool, Dad.\" Kendra's jaw was still hanging open.\n\nStacy was numb. Finally, she said, \"The trips ... to Europe ... are they ... what are they?\"\n\n\"Oh, many have been consulting related,\" Jim said matter of factly. \"David has spent about half his time at various training facilities while he was over there, particularly near Milan. He's also made contact with someone that we hope will eventually provide us with some ... errrr, information in the near future. He also has a 'handler' over there. I don't travel as much as I used to but I can assure you he is in good hands.\"\n\nStacy turned to Marylou and asked, \"How did you cope ... I mean when Jim was doing this? Or did he?\"\n\nMarylou said, \"Oh, he did. I worried a lot at first and then I learned he was really good at his job. On the way here, Jim told me that David is truly exceptional and highly skilled for what he's doing and going to do. I guess it's sort of like James Bond in a way. I don't know the details but he says the government has a lot of faith in him.\" I thought my true self had finally been identified.\n\nKiley said, \"Really, really cool.\" Kendra couldn't take her eyes off me.\n\nStacy turned back to me, \"Why didn't you tell me?\"\n\nJim intervened, \"He was sworn to secrecy -- even from you. Especially from you. We wanted a buffer but our plans have changed. Now it's all right if you know as you'll see in a minute.\" \n\nHe looked at Kendra and Kiley and studied them for a full minute without saying a word. They were now more alert and stared back at him, but not rudely, allowing him to make his assessment. Finally, he said, \"Kendra, Kiley - you have learned something tonight that is VERY important -- to you, to your family, to you Mother and Dad, to the rest of your family, and to your country -- the United States. You must NOT ... must NOT ...tell ANYONE what your Dad does other than that he is a management consultant and that he's going to run a satellite London office for McKennitt & Company. You must NEVER mention the Central Intelligence Agency or even hint to anyone that your family has ANY affiliation with it in any way at all. It could be VERY dangerous for your Dad, your mother, and you. Do you understand?\"\n\nKiley stated with authority, \"Yes, I do. I will never say anything.\" We all believed her and I knew my kid; she would never breath a word of it.\n\nKendra answered next, \"I will never breath a word of this, but I will want to talk with my Mom and Dad about it.\" Jim nodded his approval with that caveat.\n\nJim said, \"Now there's one more piece of business that I need to transact. I was hoping to do this next week in the office when Kyle Thurman, a man at the CIA that David knows, could join us.\" He looked at me and winked. I was now puzzled with where he was taking the conversation.\n\nJim turned to Stacy with a smile, \"Stacy, we'd like you to come and work for the CIA too. We need you in The Company too.\" \n\nKiley said, \"Really, really, really cool.\" Kendra fell backwards on the sofa in a near faint.\n\n***** Two Months Later\n\nStacy and I were both lying on our backs panting and gasping for breath. I could actually feel the endomorphins pulsing through my body, deadening the pain and heightening my euphoria over the exertions of the rare sunny morning. The past few minutes had been exhausting, a real test of our physical stamina. Our trim bodies were hardening from where we had them only a few months before. We'd just finished fifteen minutes of wind sprints back and forth across Regents Park on the north side of central London.",
        "Finally, Stacy stood, still panting and extended a hand to pull me up. I groaned and let her pull me to my feet. We were wearing running singlets, shorts and running shoes. She said, \"Race you back to the flat! Five ... four ... three ... two ... one ... GO!\" She took off and I was close behind her.\n\nI had to admire her. She was forty-two and yet she still had the trim figure she'd had over twenty years earlier when we'd married. She still had one skirt she'd had as a teenager and wore it with pride, always mentioning that her waist measurement had not changed. Her long legs pumped along the pathway, more muscular now than ever in her life. Even her upper body was starting to show signs of toning with the weights we were using each day. Her blond hair was pulled back in a ponytail. The one concession to motherhood she showed was her enlarged breasts; small when we married, they'd grown thanks to her birthing and nursing our two daughters. I never tired of looking at her wondering how she could have known I was husband material when she was only seventeen when we'd first started dating.\n\nI pulled along side her and told her I thought it unfair that she could run so easily. I weighed at least sixty pounds more than she did and was six inches taller. I cited these statistics as reasons for my apparent sluggish behavior. We had just run about ten miles plus done the wind sprints. Now we had a mile to get to our flat in the St. Johns Wood section of London -- the American Ghetto some called it because so many employees of the embassy and American financial institutions lived there to be near the American School in London. This was where our kids went too; we were unique in that we weren't connected with the embassy or companies like Citibank.\n\nStacy won our race, pulling up about a quarter mile before the flat so we could walk off the run. We finished some stretching exercises in the small courtyard outside our flat and went in. Kiley was just getting ready to leave for school; her older sister Kendra had already left. We wished her well and kissed her goodbye. \n\n\"What do you have today?\" Stacy asked.\n\n\"Nothing crucial until after lunch at BP,\" I responded, happy that I might actually have the morning to catch up.\n\n\"I'm open all day,\" she said. \"Sooooo let's take a shower together ... and maybe play a little. It's been a while since I've felt so randy. I think watching your tight butt run around the park got me all horny.\" She ran her hand up my bare arm and caressed my sweaty neck.\n\nI was surprised at her initiation of a sexual liaison. This hadn't happened in a long time ... years. I guess the exercise was having some other benefits. I pulled her to me and kissed her, then pulled the singlet up over her head followed by her sports bra. \n\nStacy's nipples were hard and erect from the cool down from our run. I sucked one and then the other into my mouth as she cradled my head as we stood in our bedroom. She moaned a little to show that I was hitting the right spots. Not that I bored with her lovely breasts but I decided that I wanted her nude. Thus, I reached down and undid the laces to her running shoes and pulled them from her feet along with her socks then pulled her nylon running shorts and briefs down her legs in one smooth move.\n\nAs she stood there in her nakedness I leaned in a kissed the area just above her tuft of pubic hair. Stacy purred and stroked my hair. As my tongue started to search the area for points of interest she pulled me up then stooped and took the necessary steps to make me naked too. \n\nAs my rising cock came into view she took my sweaty stick into her mouth. I asked, \"Are you sure? I'm all sweaty.\"\n\nShe pulled off briefly and said, \"More flavor. You taste good -- manly!\" I was back in her mouth. This was unusual; Stacy didn't give blowjobs. I was rock hard in a minute -- to hell with the shower first. To hell with getting caught up at work too.\n\nI pulled us to the bed and fell into Stacy's pussy, lapping and licking all those little grooves and crevices and skin flaps that make a woman interesting to a man. Of course, there was all that familiar female nectar oozing from her pores too. I could stay her forever and live on that juice. Stacy's orgasms were usually small and showed she was still in control of herself. When she popped off I was surprised for I thought this was a little more energetic than usual and she had an air of abandon as she let herself go.\n\nI rose and mounted her. She welcomed me with words of love and endearment, \"Oh David, I love you so. I really love you. I know we've slowed in how often we do this ... we have to fix that. This is wonderful. I love fucking with you ... making love with you. Oh, that's the spot. Keep thrusting just that way ... just ... that ... way ... oh, shit ... I'm ... gonna ... cum ...Oooooooouuuuuuh.\" Her legs wrapped around my back and pulled me into her pussy. I am a sucker for romantic talk as we make love. As I felt her start to spasm I let go too, sending my semen into her body and moaning my own words of love for her.\n\nWe were all sweaty again thanks to our efforts and the ease with which our athletic bodies were able to adjust to new exertions. I rolled us to our sides, trying to remain coupled with her. We both started to stroke each other. I'd occasionally lean in and suck her breasts.\n\n\"David,\" she asked, \"I need to ask you something really personal. I know you'll tell me the truth -- you always do.\" She paused and looked at me a long time. I guessed what was coming and braced myself for it. \"Are you ... are you having an affair with someone? I sort of know there's been someone else for a while. I don't feel threatened; I should but I don't. What's going on?\" She kept stroking my chest and neck, not missing a beat.\n\nI was silent for a while thinking how to cushion the answer. Finally I spoke aloud, \"Yes, her name is Katrina. You've heard her name a couple of times -- she's my handler. She's pretty, smart and yes, I love her. She also has a Russian friend that we've been with -- Alyana. I love them both.\" I paused and added, \"And I love you too.\"\n\nI paused and studied Stacy. She was accepting and taking in what I told her without judgment or comment at this point. She nodded for me to continue.\n\n\"You're right to not feel threatened. It's not that I've stopped loving you -- although I wish our love life had more ... zest in it. Like this.\" I gestured to our naked bodies and smiled at her. \"I could have been more attentive too and I don't want to make excuses or cast blame. I'd just like to say that I love you ... and I love Katrina ... and Alyana. You're my number one.\" I kissed her.\n\n\"When can I meet her ... them?\" Stacy asked softly.\n\n\"Errrr, ummmm, are you sure you want to do that?\" I asked.\n\n\"Yes, most definitely. We all love the same man. I am thinking that we should all like ... no love each other too.\" She paused. \"I don't like family secrets. Secrets of State are one thing, but inter-relationship secrets are a bad thing to have around. I think they undermine all the relationships.\"\n\n\"I'm sorry if I violated your code of ... whatever,\" I said with genuine regret. \"I've been looking for a time and place to tell you about Kat and Alyana. I just didn't find it yet. I'm glad you sensed something was happening.\"\n\n\"Oh, don't be. I would have done the same thing I suppose. Remember when I started that relationship with Bill. I guess you knew we liked each other a lot, but we'd had a couple of sexual bouts before we made it a threesome. You were so tolerant and loving back then, how can I be anything but the same with you when the tables are turned.\" She hugged me and added, \"I just don't want to become superfluous in your life. This is a wake-up call. Thank you.\"\n\nShe thought for a moment and went on, \"You ended up liking Bill. I'm sure I'll like Katrina or Kat as you just called her ... as well as Alyana. Do you want to tell me about them? Two of them, huh!\" Her eyebrows went up.\n\nI did. I opened up about the women and how I'd come to have an intimate relationship with them. The relationship with Alyana was particularly fuzzy because of her connection with Ivan Rostofsky, one of our targets for getting information about Soviet defenses. I told Stacy that one of the reasons I'd been mute for so long was this complication and my stricture on talking outside The Company. Now she understood.\n\n\"Tell me about your times together,\" she asked. \"I want to hear about your sexual times.\" I felt her pussy clench around my cock as she made her request.\n\nI went slowly, studying her interest and response as I talked. Apparently she was turned on by my recounting of some of our times together, particularly the group session in Milan. I could feel her pussy pulse as I spoke, then start to seep fluids around my deflated cock. Then, of course, I noticed that I wasn't so deflated. \n\nNext I noted that I could move around in her pussy and feel interesting twinges and stimuli to my ever-excited prick. I hardened and then we were fucking again, side by side, my cock moving in and out of Stacy's dripping pussy as I talked about our orgy and teaching sex tricks to Alyana.\n\nStacy came over me, lowering her breasts to my face so I could lick and suck on each breast and nipple. Her areolas seemed unusually large and excitable as I tried to fit the entire area within my mouth. As I bit I could feel her pussy clench around my cock.\n\nStacy picked up the pace, slamming her foaming cunt against my hips -- driving my cock deep into her inner recesses. She had an almost wild desperation to fuck -- to come on my cock -- to capture my fluids in her body. She was telling me all this as our bodies drove together. \n\nThen I felt the automatic ripples of the muscles inside of her start. First they rippled down my cock, pulling me into her body then they went in both directions ensuring that I was sufficiently stimulated to ejaculate. I was. The waves of pleasure swept over us at the same time. Our breathing stopped for a short time as the spasms hit and washed through us.\n\nStacy collapsed on my chest, rubbing her erect nipples into my body for a few moments as she relaxed onto me. I hugged her tightly and told her how much I loved her and how grateful I was that she was who she was: my girl friend, my wife, my lover, the mother of my children, an extremely competent consultant, and an agent for the CIA.\n\n*****\n\nKatrina was nervous coming to London the following week to meet Stacy. I have to admit I would have been terrified, more so than even the riskiest spy mission I could envision. She handled it with \u00e9lan, however. \n\nStacy had gotten the kids to go on sleepovers at friends' homes for the weekend. Since we'd hosted several of them it wasn't a problem when they disappeared and to tell the truth I think they were glad to be out of the house and away from their parents. She'd also given the housekeeper the weekend off, insisting that she not be present in the flat for the weekend. Stacy had also insisted that Katrina stay with us. Out of some sense of propriety and with Kendra's approval, she turned Kendra's room into a guest room. \n\nI got back from work just a few minutes before Katrina was expected. Stacy was home looking like a million bucks and the perfect hostess. She'd come home from the office a couple of hours early to be sure the flat was in order and to make 'arrangements' and see the kids off to their friends' homes for the weekend. She was wearing heels and a short dress that showed off many of her assets to best advantage, plus she'd done her long hair into a sexy twist. I could smell some kind of roast as I came in the door.\n\nStacy flattened herself against me, grinding her hips into mine. \"Hello, you sexy man.\" She kissed me with a passionate kiss. \"You look worried.\" I nodded. \"I'm not going to eat her -- or fight with her -- or challenge her -- or anything embarrassing. I want to make a friend. And this might shock you, I might even want to meet a lover.\" She gave me a lecherous grin.\n\n\"Oh wow,\" I mumbled as I thought of the implications of her last statement. \n\n\"So, just relax. We won't be bothered until Sunday afternoon when the kids come home -- if they do. I'm open ... very open to just about anything that might happen. I want us all to be friends, lovers, and to grow with each other. I hope Kat feels that way too.\" I nodded.\n\nThe doorbell rang. Stacy kissed me again the headed for the door with me close behind.\n\nKatrina looked stunning. Even Stacy was taken back with her beauty. There was a long silence as we all looked at each other with smiles of satisfaction on our faces. Finally, Stacy broke the silence by pulling Katrina to her and kissing her on her cheeks the way women do, \"Katrina come in. Our home is your home. David, get her suitcase.\" I pecked Katrina on the cheek and picked up her bag. We gave her a brief tour of the flat and then I was banished to the kitchen to get drinks for the three of us.\n\nI couldn't really hear the conversation from the living room, only a word every now and then as the two of them talked. So much of communication is non-verbal. I stood and listened. Stacy's tone was all welcoming and solicitous; Katrina's was curious and almost apologetic. I could feel some bonding going on so I was slow with the wine.\n\nAs I came into the room with my tray, I served Katrina then Stacy and then stood before them and toasted, \"To the two most beautiful women in the world ... who I love with all my might. Thank you both for being the people you are and for being open to ... to this crazy arrangement.\" Both women laughed and drank. \n\n\"There's nothing like hanging your linen out in the open,\" Stacy said looking at Katrina. She smiled and reached and held her hand. Katrina actually got a tear in her eye.\n\n\"Thank you both. Thank you for accepting me the way you do. Stacy, this is awkward. I mean I knew David was married when we started. I never thought ...\"\n\nStacy interrupted her, \"Oh stop. We're adults with sexual urges and drives and needs for love and affection -- sometimes wherever we find it. The past decade has been a ... a boring period in our marriage. I want to fix that now and you are part of that fix -- for the short term -- for the long term. Alyana may be too. I'm sorry she couldn't join us but perhaps it's better that we do this slowly -- incrementally.\"\n\nKatrina nodded and I could see her squeeze Stacy's hand in gratitude. \n\nWe shared some hors d'oeuvres and then Stacy's wonderful roast with all the trimmings. I felt all of us relax more as the evening progressed. Katrina helped us do clean up. \n\nThere was that awkward \"what next?\" question on everyone's mind as we finished in the kitchen. Stacy fixed that by stating, \"Well, I'm getting ready for bed. You two can talk or whatever.\" Without another word she disappeared down the hallway towards the master bedroom. Katrina and I were almost speechless.\n\nKatrina spoke first, \"I love her. She's soooo nice. No wonder you married her. I'm surprised you let her get mixed up with The Company. I know you had to tell her but it could have ended there; she didn't have to go on payroll.\"\n\nWe chatted a few minutes then it seemed like we should all head to bed. I hugged and kissed Katrina, somewhat passionately but I think neither of us wanted to push the issue and risk hurting Stacy. She went into the guest room and I made sure she had towels and knew where the guest bath was.\n\nI walked into the master bedroom. Stacy was just getting into bed in her t-shirt. I saw a flash of her naked butt as she scooted under the covers. \"What are you doing here?\" she said to me with genuine surprise, \"You're supposed to go and make love to Katrina. You haven't seen her for over a month.\"\n\n\"I can't do that,\" I said. \"It wouldn't feel right with you being abandoned in here.\"\n\n\"Then go get her. Get her in here. We'll be together -- the three of us. We both want you anyway. I'm horny and I bet she is too. Go on. Go get her.\" I studied Stacy to be sure there were no hidden messages as there are sometimes in a marriage; I detected none.\n\nI opened the door to Katrina's room with only a brief knock. She'd taken her top off and was standing in bra and slacks. I walked to her and kissed her with passion; she responded well. Finally, I said, \"Come to bed with us. We both want you. I need you. I love you.\"\n\n\"Oh David,\" she said and hugged me tightly with tears in her eyes.\n\nI pulled her belt open and helped her shed her slacks. I reached around behind her as we hugged and released the catch on her bra, pulling it forward off her body. Then I stooped and tugged her delicate thong down her legs, kissing the area around her pussy since I was right there. She stood before me naked except for a beautiful strand of pearls around her neck. \n\nI picked her up and she put her arms around my neck. I carried her beautiful naked form into our bedroom and carefully placed her on the bed next to Stacy. Stacy peeled her t-shirt over her head and tossed it beside the bed then leaned over and tenderly kissed Katrina on the lips. Kat put an arm around Stacy's neck and kissed back.\n\nStacy said, \"Now THIS is your official welcome to London.\"\n\nKatrina said softly, \"Thank you for being you, so much.\" She looked at me, \"Thank you both.\"\n\nI sank to the bed pulling Katrina's legs over my shoulders and running my tongue around her pubic area without going near her slit. I could see Stacy starting to massage Kat's breasts and then I watched her mouth one of her nipples. The two women then kissed some more. I reached over and inserted some fingers into Stacy's pussy, not at all surprised that it was so wet with the anticipation of our encounter; she moved to allow me greater access.\n\nKatrina started writhing beneath our concerted efforts. I knew her well enough to know that she was holding back, perhaps in nervousness over her visit; I didn't want to allow her that luxury. I re-doubled my efforts on her love chamber, bringing every technique I could think of to bring her to a royal peak. I explored her with my fingers and found some textured skin deep in her on the front of her vagina; when I started to massage this area I could watch the eyes in her head roll up to the ceiling and feel her groin muscles all clasp and release in synch with my attentions. Someone had told me that some women have a \"G-spot\" that is highly stimulating and I guessed that I had discovered one in Katrina.\n\nI focused on my new discovery with several fingers as I smothered her clitoris with my mouth, using my tongue extensively. When I was at maximum effort and I saw that Stacy was sucking and pinching Kat's breasts with great attention, I finally felt Katrina's body start to rise off the bed, pushing towards me. Next, I felt the walls of her vagina spasm around my fingers then ripple up and down. She let out a little shriek of joy then locked my head between her legs and came -- hard. A couple of jets of her ejaculate washed over my face and chin; her hand tried to hold my head and hands motionless against her flooding pussy; her breathing peaked and stopped. Katrina held this pose for twenty seconds then collapsed in a heap back onto the bed, fully relaxing the hold she had on me and, as I looked up, the hold she'd had with her other arm on Stacy's head.\n\n\"Oooooooh my God,\" Katrina said in a nearly desperate voice, \"you ... both ... what can I say. You sent me to heaven. Ouuuuuuuu wow!\" She looked at Stacy with big eyes and pulled her so she could kiss her lips. I took that as my cue to come up and kiss her too; I was welcomed with a huge embrace and passionate kiss. \"Oh I love it when I can taste me on you; it's almost as good as when I can taste the two of us.\" She turned to Stacy, \"Do you do that with him?\"\n\nStacy said, \"No, but I'm taking your comment as a recommendation.\" She reached across Katrina and put an arm around my neck and pulled me to her lips. I French kissed Stacy across Kat; Stacy ran her tongue deep in my mouth, hitting my gums, tongue and both cheeks in her thorough examination. She then pulled away and said, \"I can taste Katrina on you ... and I like her taste.\" She smiled at me then lapped my chin that was still dripping with Kat's girl juice. \"Yummmm,\" she said, \"how have I managed to miss this all my life?\"",
        "I moved between Stacy's legs to repeat my performance. I'd visited this nest often in all our years of marriage; it had a comfortable aroma and taste, yet given the newness of our situation I felt like I was discovering this beautiful woman for the first time. As I started to lick and suck, I suddenly found I had company; Katrina snuggled into me in her nakedness, licking and sucking on Stacy's clit and pussy as she started her own explorations. I watched the erotic act from a unique closeness; Stacy had shut eyes and lay back to enjoy whatever we did to her.\n\nI moved up and made love to Stacy's flat stomach and abs, then the areas beneath and to the side of each of her breasts, and finally to her chest and neck, then after a long passionate kiss I delivered all the love I could to her breasts, pulling and sucking as much of her mounds into my mouth as was physically possible, tonguing her nipples and areolas, and using my rough hands to send my messages of love and passion to her.\n\nI'd been told that a woman always knows how to make love to another woman better than a man. I was not proved wrong in those many minutes we loved together. Katrina brought Stacy to a shuddering climax better than anything I'd produced in her that year. Stacy's entire body spasmed as she came, her arms slapping the bed in a release of pent-up energy just shy of a nuclear detonation. Her body arched into the two of us and she emitted a string of epithets: \"Ooooooooooh fuck. Fuck me. Ooooooh eat my cunt -- suck my clit. Oooooooooh shit. Oh. Oh. Oh. Oh. Oh. Oh. Ooooooooh.\" She was panting like a wild animal, her eyes rolling around in her head.\n\nI moved up and kissed her. She practically devoured my mouth and then my head as she pulled me into the kiss. Wow! What a passionate person. I briefly thought, where has this been for the past twenty years. I've been bringing the wrong friends home.\n\nKat came up and joined us, madly kissing Stacy who returned the favor with the same enthusiasm as she had my attentions. We caressed her body, smoothing her breasts and body as she floated down from her astronomical high. As she returned to something near 'normal,' she looked at each of us and said, \"Thank you both. That was ... one of my all time best peaks.\" She panted some more then added, \"I've never ... never been with a woman before.\" She looked at Kat; \"I hope it won't be the last time. You ... thank you my darling ... thank you.\" I actually felt proud that I had gotten Katrina to come and join us, however awkward it seemed at first.\n\nBoth women realized that I hadn't cum so I became the next focus of sexual attention that wonderful night. Stacy knows that I much prefer vaginal orgasms to blowjobs. That said, I was the subject of two women giving me the most sensational blowjob (blowjobs?) I'd ever experienced. Kat was deep throating me and showing Stacy how to do that; the combination of the expert and the amateur was almost too much, but I somehow held off my cum.\n\nFinally, Stacy came and kissed me. \"I want to watch you and Katrina. Cum in her. I'll have you more now that I've found you again. Make love to her. Make love to her ... and you make love to me.\" She kissed me and nudged me towards Katrina who had heard her speak. \n\nI pulled Katrina up beside us and we both kissed her. I rolled over one of her legs and assumed a position where I could slip my titanium shaft into her dripping pussy. We'd loved enough that it was a familiar place to be and we coupled easily. I pushed deep into her then lowered myself and kissed her tenderly.\n\n\"I love you,\" I said to Kat -- looking deep into her eyes.\n\nI turned to Stacy and pulled her to us with one arm; \"I love you,\" I said as I kissed her too. She smiled back at me tenderly after our kiss.\n\nSomehow it wasn't important that I last a long time only that I express my love and affection to these two women. Eventually we came together, our climaxes extreme pleasures that pleased us both -- and pleased Stacy who'd been masturbating beside us as she watched us fuck. She'd somehow managed to be in synch with our release as well. I fell between the two women and cradled them to my chest, whispering words of love to the two of them. The three of us fell asleep that way. I felt I was in heaven and I learned the next morning that they did too.\n\n*****\n\nI spent most of the following week alone in Copenhagen giving a seminar and marketing to a couple of companies in the City. I was pleased with the results of the trip. It was a successful week for McKennitt & Company. Our new office now had a dozen consultants and several contractors in it besides Stacy and me; we were a growing concern. We were growing so fast, in fact, that I was thinking we had to get larger office quarters than what we were in.\n\nWhile the business was great, the sex was the greatest. Stacy had left that Monday morning with Katrina to go to Milan. She was spending the entire week at the training facility; plus the two women were together every night. Oh, my mind went wild.\n\nI got home Thursday night. Our housekeeper-sitter had retired for the night but the kids were still up watching television. We paid an exorbitant price to get about a dozen American TV channels; this was how our kids stayed in touch with what was going on in the United States. Two new channels had started a year or two before that captured the kids' attention: something called MTV and another called CNN. They were watching some new group called Duran Duran in something called a music video on MTV. In the interest of fatherhood I sat and watched with them, but my thoughts were in a hotel room in the Grand Hotel Et de Milan. I hoped my lovers were having the time of their life; I found myself smiling at the thought. Kiley gave me a funny look.\n\nI spent most of Friday at a new client in The City of London, whizzed through the office giving cheer and goodwill to everyone for the weekend, and then headed home. The housekeeper was heading off for the weekend at her sister's again, which was fine with me. The kids were also on their way over to friends' homes for the weekend. I wondered if they were getting sufficient parental attention. I ate the dinner I'd been left then started to do my real and fictitious expense reports on the dining room table.\n\nAbout eight o'clock I heard a cab pull up in front of the house. Stacy came in and threw herself into my arms and showered me with kisses. \"Where are the kids?\" she asked. I explained they'd gone for sleepovers again. \"Good,\" she said, \"I'm VERY horny and I'm going to fuck your brains out. Come with me.\" I was a willing soul but worried about the loss of gray matter.\n\nTen minutes later we were joined together by my favorite appendage and extending our love making so we could romance each other. As we did she started to tell me of her week.\n\nYes, she'd had all the great training at the CIA training center off Duomo Square in Milan. She'd also spent a day on the test track near Navara too and felt she'd be a ruthless driver because of it. \"But,\" she said, \"that's not the best of my time in Milan.\" She gave me a big lecherous grin and lapped her chops. Finally, she blurted it out, \"I met Alyana. The three of us made love -- WOW! No wonder I'm so horny. I love them but right now I really love you ... and I'd love your cock in my pussy. We ALL voted you the guy we'd most like to fuck.\" I was pleased with my landslide victory in the elections.\n\nStacy pushed me over onto my back and remounted me, sliding down my very erect penis until her warm vagina was jammed against my pubic bone. She had her eyes closed savoring the penetration. \"Oooooh, you are just so great,\" she said. \"And I am ... I am in a rush to cum ... so you can wait ... or ... you ... can ... cum ... with ... me.\" She exploded and I followed right behind her, our sweaty bodies flowing together when she fell into my arms.\n\nAs we lay in the afterglow of our orgasms Stacy told me about all her evening times. Kat and she had arrived in Milan at mid-day Monday, so the rest of the day had been spent in small arms training and some martial arts practice. That evening the two of them had a 'romantic' dinner at the hotel and then made love to one another. She said, \"Both of us wished you'd been there.\"\n\nTuesday she'd been in her training alone most of the day; she'd met two other 'students' but there hadn't been too much communication. When she got back to the hotel she opened the door to the room Kat and she were sharing to find Kat and another woman sitting and talking in the suite's living room. She said, \"Kat had called Alyana in Moscow and told her about me ... and I guess about us ... I mean the weekend the three of us shared. Alyana got on the next airplane to Milan. She wanted to be part of 'us'.\" \n\n\"Well,\" Stacy said, \"I had to show her Americans love the Russians. So I walked up to her and kissed her -- I mean I really kissed her. The kind of kiss that lights up the sky and makes your pussy glow red.\" She grinned at me. \"Alyana kissed back. Then Katrina joined us. And then we were all nude on the bed making love -- lots of sucking, tongues, fingers, and a few toys that Kat produced from her suitcase -- oh, and lots of orgasms. We finally came up for air around nine o'clock, dressed and went and got dinner. Then we went back and did it all over again.\" She shot me another sly grin.\n\nShe went on, \"We did it again on Wednesday, but Alyana had to leave on Thursday morning, so she left and that night -- last night -- just Katrina and I made love. She's really very tender and, oh honey, I am in love with her.\" Stacy leaned in and kissed me.\n\n\"Are we OK?\" I asked tentatively.\n\n\"Oh, yes my darling. Just thank you for understanding my explorations ... and my new lovers. They're your lovers too -- Katrina especially. And I love them, I really do. We formed a real bond over the week that wouldn't have happened if you'd been there. The awkwardness that she had when she arrived a week ago is gone completely. We really are a threesome -- I guess a foursome if Alyana is around.\"\n\n\"Thank you,\" I said and kissed her nose. I bent my head down and started to mouth one of Stacy's breasts. \"So go on,\" I urged her.\n\n\"One thing I sense. Alyana is very in love with Ivan Rostofsky too -- probably more than you if that's possible. I know you're OK with that but I can sense it. I also learned that you are her sexual mentor, with his blessing. That sort of clarified some things in my mind. She said that he was very taken with you, not sexually I might add, but professionally and as a friend. She knows he wants to see you again sometime soon.\"\n\n\"Maybe he'd make it a fivesome,\" I tossed out.\n\n\"Well if he's the man she described him to be ... well, I could be persuaded ... as a matter of National defense ... you know ... I could fuck his brains out too.\" She grinned at me but also checked to see what my response was. \n\nI nodded as though that was another one of her great ideas, however, my cock gave away my true feelings. I was still nestled in her pussy but I'd deflated. As she started to talk about adding Ivan to our mix and screwing with him, I suddenly turned rock hard again.\n\nStacy looked at me in surprise, \"Oh, that idea excites you too. Well, it excited me when the three of us talked about it two nights ago as we were all there aching for some cock -- yours and Ivan's. I thought, oh hell, why not try him -- in the name of better international relations of course.\" I pulsed inside her and she started to rise up and down on me with greater vigor, bringing me to full steam. \"Why as Alyana talked about him I could almost feel his long, engorged cock penetrating me ... then sliding back and forth into me with his power and strength -- then his excitement at fucking me -- and then the wash of his cum through my body as his strong arms pulled me into a kiss.\" She kept talking this way for a few more moments.\n\nThat was it. I'm a sucker for dirty talk. I exploded some more cum into my wife's soggy pussy. She came too and then we really collapsed. \n\n\"Thank you,\" I said, \"I've had my brains fucked out.\"\n\n\"My pleasure, kind sir. It's the new specialty of the house.\" She paused then added, \"Oh and good news, next week we're both going to Milan to be with Kat.\"\n\n*****\n\nFour Months Later\n\nI was scheduled to give the keynote speech at an information systems conference in Copenhagen the following week. It was winter in Europe and it was usually pretty cold. I'd prepared a witty talk as well as lined up some client work that would keep me in that beautiful city most of that week earning consulting revenue for the firm. It was then that I got a call from Ivan Rostofsky.\n\n\"Hello, David my friend. I see you will be in Copenhagen at the IS conference. I will be there too -- but alone unfortunately. I am wondering whether you can spare me some time -- dinner perhaps as my guest.\"\n\n\"Ivan. I would be delighted. I have nothing booked on any of the evenings that week. I will be in town the night before the conference starts and only have my days booked there with client work. How about we meet on Tuesday night? I'm staying at the SAS Royal Hotel.\"\n\n\"Excellent. I will call you the day before and arrange our meeting place and time. I'm not sure where I'm staying yet. I will be in touch.\" He paused then said, \"Until then. Warm regards from Alyana and me.\"\n\nI bid him regards from Katrina and me and we hung up. I pondered the call and what it meant. I called Kat's contact number and left a brief message for her telling of the call and meeting the following week.\n\n*****\n\nIvan had gotten a room at the same hotel. We met in the lobby on that Tuesday night and started walking to the G\u00f8dt, one of the most famous restaurants in all of Scandinavia. Fortunately, the weather had moderated; that said, it was still overcoats and gloves at night.\n\nHe was not one to beat around the bush and thus as we started walking the blocks to the restaurant he started to talk about the women and how much he appreciated the time we had in Milan when we had our foursome. He also acknowledged my time with Alyana a couple of months later as well as the time Alyana had spent with Katrina and Stacy.\n\n\"You have taught Alyana many things -- things that she uses to please me.\" He looked at me with a sincere expression on his face, \"I guess I am not creative when it comes to sex. I think I was when I was twenty but now that I am fifty-one I think my years of being in a cold and boring marriage have taken their toll -- or perhaps it has been the military life. Alyana is trying to teach this old dog new tricks.\"\n\nI asked, \"Tell me about your marriage, if that's all right to ask about?\"\n\nHe nodded. \"I married when I was twenty-one; her name is Maria. Young officers in the Soviet Army were supposed to have a wife to help in their careers and to have children. We have no children. She became a doctor but I think she is bitter because she could not build a specialty since we kept having to move around the country so much. She does have a stable practice in Moscow now, mostly pregnant women and birthing babies. Our first years together were nice but then the passion turned to ice. We have not been together, in a sexual way, for a long time.\" He looked at me to see if I was going to judge him in any way; I did not and so he continued.\n\n\"I met Alyana three years ago and fell in love. Why she loves me I am not sure? She's twenty years younger than I am. I know she loves you also, but that has only seemed to increase her love for me -- how could I complain my friend.\" He patted me on the back as we walked. \"I think Maria knows I have a lover. For all I know she might too, although she seems tired all the time with her work. I guess I gave up on the marriage a long time ago. I should divorce but just have never bothered. She is a nice friend - sometimes. Did you know that eighty percent of the marriages in Russia end in divorce. A sad state of affairs. Not much love in my country.\"\n\n\"How can I help, Ivan? You know there are books that give lots of ideas. I have read several of them. The Joy of Sex has been around for about ten years; it's a lover's bible and has lots of fun things to try. I'm sure there are others. I bet it's been translated into Russian too. I mean everyone loves to make love.\" I laughed.\n\nWe reached the restaurant and soon were seated in a small alcove with some excellent wine. Ivan was enjoying playing host and I relaxed in his presence. We both had seafood, their specialty, and the tour books were correct, the cuisine was truly wonderful.\n\nEventually, Ivan brought the conversation back to my relationships. \"How do you do it David? You have all these women in love with you. And from what I can see through Alyana and a little with Katrina those days in Milan, there is no jealousy or worry between any of you -- not even this Stacy, your wife. Do you have a secret?\" He leaned forward so he didn't miss any answer I might give.\n\nI thought of how to answer him then started, \"I love them ... each of them for who they are, not who I want them to be. If I start judging them, I stop loving them. I don't try to change them but I may try to teach them new things or encourage them in some way. I mean all of them are successful career women so why do they need me trying to intervene in their lives more than I might. We're each individuals with our own lives and we find joy and happiness sharing our lives with each other.\"\n\nHe was listening carefully so I continued, \"As for jealousy, you have to realize what it is -- it's a fear that you'll lose something you possess that has value. If you realize the love you get is not a possession or a right, but is a gift from the person that gives it to you then you can't lose it -- it's not a possession. You may grieve if it stops, but you can't hold onto it any more than you can hold on to a beam of sunshine. Instead be thankful and try to put more into the relationship to make the people that gift you their love and trust want to keep doing so. If you do that you'll never have a jealous thought again nor will they. Place the other person's happiness above your own. Set them free and you set yourself free.\"\n\nIvan nodded and I went on, \"The other thing I do is to try to purge negative things from how I think or what I say. It's amazing how this affects your relationships with people. If you're a negative person, people don't want to be around you; if you're positive and upbeat people will love you. If you're in the middle, I guess you're normal.\" We both laughed.\n\nWe continued talking as we walked back to the hotel. Ivan pulled me into the hotel bar to continue; I felt he was hanging on my every word. \n\nEventually we got on politics. Reagan was acting very hawkish towards the Soviets. I admitted that I was not happy with his stance and wished he'd soften his approach. \"Too much saber rattling\" I told him. \"It takes us to the brink opposite each other again and again. Why can't we all just sit in a bar and be friends ... and fuck each others lovers.\" I grinned at him. I thought he'd fall off his stool laughing.\n\n\"You are right, my friend,\" Ivan laughed, \"our politics should be more like your description of how to love and appreciate those who love us.\"\n\nI asked Ivan what he wanted out of life and what he expected. He surprised me by talking about how he'd hoped for a beautiful retirement but now realized that he'd get a rather poor retirement pension from the military in a few more years and then they'd forget him. He said, \"I'll become like an old rusty tractor left in the field; I did my duty while I had too but now ...\"\n\n\"But you know so much about software and programming and all. Those skills are in high demand -- at least in the west.\"\n\nIvan said, \"Ah, they should be in Russia but the young people capture those jobs today. The government tolerates old soldiers like me in the field, but even they are moving young kids into jobs like mine. Don't forget we have a managed economy and we're not managing to bring it into the computer age very well.\"",
        "\"If you could work in the west -- say after retirement, would you? If you could make a lot of money would you?\" I asked.\n\n\"Oh, in a flash. Except for Alyana I have no strings. Maria ... she'd probably be happier if I left. My job ... lots of young guys ready to take it over and they might even do better at it than I do. Friends ... a few but Alyana is the most important to me and I think she'd come with me. That's all. So, yes, for more comfort and ease I'd leave Russia. I might never go back.\"\n\n\"Let me see what I can do for you Ivan,\" I said. \"Now, it's late and I have to shine with my clients tomorrow. You said you were leaving. Are you going to the C-SIMS conference in Paris in April?\"\n\n\"No. Should I?\" he asked.\n\n\"Yes, you should, if nothing more than to hear the wonderful presentation I'm going to make on Expert Systems,\" we both laughed; I added, \"Let me see if I can find any \"deals\" for you between now and then.\"\n\n\"Wonderful, my friend.\"\n\nWe hugged goodbye and I wondered if we were turning a dangerous corner. Sooner or later I was going to have to ask him to do the deed and probably reveal that I was employed by an un-named yet well-known government organization.\n\nThe next day Katrina flew in and we had a long lunch in Tivoli Gardens near our hotel. The weather was unseasonably warm and sunny that day and I was pleased to find that the young women that worked in all the surrounding offices flooded into the park at lunch, stripped to their panties and lay in the sunlight. The whole park was full of nearly naked women. Katrina chided my wandering eyes and laughed at my obvious erection.\n\nWe solved the erection problem by going back to the hotel and making mad passionate love all afternoon. We broke for dinner and then did it again. We were both happy with each other.\n\nWe also strategized about Ivan Rostofsky and what we could offer to entice his transfer of information to us, and possibly his defection. We both saw more value in his long-term presence in the west where he could be an adviser regarding Soviet defenses. I expressed my own concern regarding my own position and the potential dangers I saw. She nodded in agreement.\n\n*****\n\nOne Month Later\n\nKat flew to London and we met at our flat. She brought her \"bug tool\" but we found the flat was not under surveillance. This was a good sign; it meant Stacy and I still hadn't been 'discovered'.\n\nKatrina had a big smile on her face as we started meeting. I have some news for you -- both good news and bad news. Which do you want first?\"\n\n\"Good news,\" Stacy injected into the conversation.\n\n\"I've negotiated a deal for Stacy, you, me ... and for Ivan.\" She paused for effect, \"EACH of us will each get $10 million tax free if we can deliver the software for the Soviet defense system -- what we've been calling their 'Star Wars Program' -- similar to the one in the U.S.\"\n\nMy jaw fell open. Stacy fell back in her chair, her eyes as big as saucers. I think I said \"holy shit\" about a dozen times.\n\n\"Now for the bad news,\" Katrina finally said slowly. \"This is one of the most dangerous assignments I've ever heard about. It goes far beyond just shuttling memos and bits of information and mis-information from one person to another. Their program is huge -- millions and millions of lines of code all in an arcane machine language. One guy in The Company I talked to said that if it was printed out on paper it'd probably fill a two-story house floor to ceiling. I'm at a loss to think of how we could get all that out of Russia let alone out of the secure facility when Ivan works.\"\n\n\"What about microfiche or a micro-camera?\" I asked.\n\n\"A possibility, but a very time-consuming process to take all those pictures. You get about fifty lines of code on a page -- there'd be hundreds of thousands of pages.\"\n\n\"If it was put on a disk or a reel of tape, what was your expert's estimate on size?\" Stacy asked.\n\n\"He didn't mention it. I don't know what the compression ratio is. I'll ask and that's a good idea.\"\n\n\"So,\" I started slowly, \"someone has to ask Ivan to defect, get the code ... smuggle it out of the country ... and ... come along with it.\"\n\n\"That about sums it up,\" Katrina said. \"Further, it can't be me. I'm on profile with them. They don't mind me wandering around Western Europe doing whatever it is I do, but I can't cross the border without being double-teamed. Even my courier days are over.\"\n\n*****\n\nStacy came with me to Paris for the April C-SIMS meeting. I gave my speech and suddenly Ivan appeared to congratulate me. The two of us walked out of the auditorium and I found Stacy and introduced them. I could see that Ivan was impressed with her and vice versa. We made arrangements to meet for dinner at our hotel - the George V, a grand hotel and restaurant. Ivan was openly impressed.\n\nDinner was a grand affair. I watched with delight as Stacy and Ivan flirted incessantly with one another. He rapidly became enthralled with her and she with him. I knew we were making progress when I saw lots of touching and rubbing happening on their side of the table. Stacy was her most sophisticated and sexy self plus she'd dressed to all but reveal her breasts to him. Ivan responded well to her challenge. \n\nAfter dinner we invited Ivan up to our room for an after-dinner drink. He was more than happy to follow Stacy wherever she was going to lead him. We'd left the lights dimmed and the radio playing some soft jazz, so the room was already 'romantic' when we all walked in. Stacy sashayed into Ivan's arms, putting both hands behind his neck and whispering, \"Dance with me.\" He started out politely, however, she pushed her body into his as much as she could -- from chest to knees, making a definite connection at hip level. I smiled to myself as I saw Ivan's eyes go wide at her first contact; Stacy can be very convincing.\n\nTo help get things started, I excused myself, ostensibly to go to the bathroom. Instead I went and turned down the large bed so it was ready when they were. I gave them about ten minutes and then slipped back into the living room of our suite to see what was happening.\n\nStacy had Ivan's cock out and in her mouth. She was practicing some of the things that Katrina had taught her about giving head and deep throating someone. From what I could see, she'd learned her lessons well. Ivan stood there with his pants around his ankles and a wide-eyed expression on his face. He was totally enjoying himself and, for that matter, Stacy looked like she was having fun too.\n\n\"If you keep that up you won't get what you really like,\" I finally said to Stacy. She paused and looked at me, nodded and then started to pull Ivan towards the bedroom by his erect cock. Of course he couldn't walk with his pants around his feet, so a rapid shedding of clothes by both Ivan and Stacy took place. Eventually a naked Stacy led a naked Ivan to the large bed. I shed mine as well and soon all three of us were in the bed together with Stacy in the middle. Stacy focused on Ivan, massaging his cock and pulling his head to her breasts. This gave me an opportunity to launch myself into her pussy, licking up the delicious nectar that her body produced when it was in heat. She was in heat big time -- there was a lot of nectar.\n\nI suggested that Ivan and I change places and he seemed to like that idea. He proved to be better at cunnilingus than I gave him credit for. Only a few minutes after our switch he brought Stacy to her first orgasm of the night. She clutched onto me then pulled my mouth to hers as she spasmed into the orgasm; I could almost feel the blood from her intense kiss.\n\n\"Ivan, fuck me,\" she finally said. \"Bring that big, beautiful cock of yours to my pussy and sink it into me. I want to feel every inch of you in me ... and I mean right now.\"\n\nIvan shot me a glance to see if I was still in full approval of what was happening between Stacy and him; I nodded encouragingly as I prepared to lean in and suck on her breasts some more. I knew that Stacy loved having her nipples sucked and lightly bitten and I intended to satisfy.\n\nIvan moved into position and then sank his long rod into her body. Stacy sighed with pleasure as he sank to his full depth in her body. Then he started a gentle in and out motion, apparently content to watch the erotic scene unfold before him. I sucked on her mammalaries. Stacy had another small orgasm, as she was prone to do when she was in a heightened state of sexual arousal. Ivan nearly lost it.\n\nI whispered to him, \"Ivan, don't cum. When you feel you are getting near, pull out and we'll swap places.\" He understood and nodded as he started to thrust into her again. Stacy was becoming a writhing mass of hot flesh on the bed. Two minutes later I heard him grunt and saw him withdraw, the purple head of his cock suddenly swinging into the open air. Stacy moaned and then the moan extended as I thrust into her vagina with my own hard rod. \n\nIvan managed to position himself so Stacy couldn't reach and fondle him; he wanted to cool down whereas she wanted cum all over her and deep in her body. We'd get there but not on her timetable. \n\nI felt my cum arriving but pulled out before my body went on full automatic and I couldn't stop. I whispered, \"Ivan, your turn.\" He took my place again burying his cock in Stacy's pussy. Stacy came again, writhing, arching, panting and moaning as she did. Ivan kept his nice steady pace right through her release. \n\nI rose and got our tube of Astroglide from my suitcase and returned to the bed. I motioned for the two of them to roll over so that Stacy was on top of Ivan. She did, tucking her knees up beside his prone form as she started to pound into his pelvic region with her own. I stopped her briefly as I lubricated her little pucker hole; then I pushed her down over Ivan and pushed into her with my steel rod. We'd done this before but not for a long time so Stacy knew to relax; in only a few seconds I slid deep into her ass. She not only gave a little shriek but also had another orgasm. Ivan's eyes were huge as he understood what we were now doing.\n\nThe two of us developed a technique of alternately thrusting in and out of Stacy's body, each of us in the hole we'd selected. She came again ... and again ... and then a third time with the two of us pushing into her and smoothing all over her body. I reached around at one point and massaged her clitoris right above where Ivan's cock was moving into her body. That was one of the three.\n\nIvan finally said, \"I am very near my friends. I must release or my whole body will explode from the planet.\"\n\nI nodded at him and said, \"Me too.\"\n\nStacy said, \"Thank God. I can't take much more of this. Finish me. Fuck me. Fill me with your cum -- both holes ... all holes. Shoot in me or all over me, I don't care which, just do me!\"\n\nIvan groaned and thrust his body up into Stacy. Through her peritoneum I could feel the final thrusts of his cock into her body. I knew from the intensity that he was cuming deep in her cunt. Stacy started to spasm, not only in her pussy where I could feel it but also with her rectal muscles. The spasms rippled through her entire body. I shot my full load of jism deep into her bowels as I added my final thrusts to Ivan's. Stacy had her most intense orgasm of the decade, shrieking and moaning as she jumped around between the two of us with body-racking twitches and spasms.\n\nFinally, she fell forward onto Ivan, pulling his face to hers and smothering his face and upper body with kisses and tongue. We were all in a high state of bliss.\n\nI pulled away, leaving the two of them coupled. I slid off the bed and retrieved some washcloths from the bathroom. I waited to have them drenched in hot water before I wrung them out and brought them to my bedmates. Ivan appreciated the effort immediately and thanked me. \n\nStacy rolled off him onto her back, her legs spread in open invitation. I could see the two rivulets of cum starting to ooze from her body orifices. I had no aversion to cum so I sank down and put my mouth over her entire vagina and sucked. I couldn't see Ivan's face, but Stacy told me later his jaw dropped open in amazement and awe. Stacy threw her head back and rode me as I ate the cum from her pussy; in the end she climaxed again, this time holding onto Ivan for dear life as the pleasure swept through her body.\n\nI took the washcloth I'd brought for Stacy and then cleaned her up. She just lay back in Ivan's arms and enjoyed my ministrations. Eventually I tossed the cloth on the floor and came up and kissed her. She came into my arms and we kissed passionately. It told her I loved her deeply and that I was pleased we'd been able to bring such pleasure to her. \n\nIvan apparently took this as his cue to leave. I nudged Stacy; she rose and went to the nude Colonel before he'd found his clothing, \"You could stay the night with me if you want.\"\n\n\"No, Stacy,\" he said, \"you and your husband need time to savor the love you have for each other. With your indulgence I shall join you tomorrow for breakfast; please call me when you are ready for my company.\" \n\nShe kissed him tenderly and whispered \"Thank you\" to him. He left five minutes later.\n\nStacy came to me in all her sexiness, pulling my cock into her mouth to harden me again. Finally, she rose over me, dropping her moist pussy down my cock; \"You know I never get tired of making love with you -- any way at all. What Ivan and you did to me was intense and I loved every second it and I look forward to a repeat performance some time soon. That said, I'm content when it's just the two of us making love or fucking or screwing or whatever it is depending on our mood.\"\n\nI kissed her and she kissed back. Then she added emphatically, \"Now fuck me -- hard!\"\n\nI did.\n\n*****\n\nThe next morning, Stacy and I met Ivan and a small and relatively unoccupied outdoor caf\u00e9 just down the street from the hotel. The three of us got our pastries and liquids and sat in relative silence. Stacy finally leaned in and kissed Ivan and said, \"Thank you for last night. It meant a lot to me. I can tell you like me.\" She gave him a big grin as he started to protest the use of such a weak word for what had happened. \n\nEventually he said, \"I could love you forever Stacy. Who knows, perhaps I will.\"\n\nWe ate and watched the commuters racing by to their jobs. \n\nI mustered up my courage and finally broached the most delicate of subjects with Colonel Ivan Rostofsky, head of Soviet Missile Defense Software Systems. \"Ivan, I need to talk to you about something very sensitive. It concerns your job and ... well the future of you in Russia and ... who knows, maybe what happens between our countries for the next thousand years.\"\n\nIvan looked intrigued. Stacy understood the cue and said, \"This sounds like 'men talk,' please excuse me while I look at that little newspaper stall just down the way.\" She got up and left the table.\n\nI continued, \"I have a proposition for you that you may just want to reject out of hand. I hope you'll listen all the way through this with me and ... and not lose your temper ... and certainly I hope not reject our friendship.\" I made sure he was with me and went on, \"I have explored the job situation and have a very unique offer for you. The benefit is that it will provide you a bank account with $10 million in United States currency.\"\n\nIvan's jaw dropped open much as mine had when I'd heard the amount. He was numb. I waited a moment for the idea to sink in.\n\nI eventually went on, \"The quid pro quo for that money is that the United States government would like to have the software code you and your group have developed for the missile defense system.\" I let the entire proposition sit on the table for a minute before I went on. Ivan frowned.\n\n\"We'd talked in Copenhagen about how loving people is sort of like politics. I'd like to think that such a move would help put a damper on the Cold War and help improve U.S.-Soviet relations. My guess is that when we saw what you have, we'd stop worrying about our own Star Wars project or whatever we call it.\"\n\n\"Why do you say that David?\" Ivan asked suspiciously.\n\nI laughed, \"Well I understand software and information systems -- in fact I am almost a world-class expert in parts of this industry. Someone told me that your programs are probably millions and millions of lines of software code.\" Ivan nodded in agreement; I went on, \"Well, unless you are phenomenal, walk on water, talk to God, and probably come from another solar system, you can't have that many lines of code unless it is riddled with hundreds -- even thousands -- of errors. What you have is basically useless; it can't drive a missile defense system. Well, maybe it can, but you're as apt to shoot the top off the Kremlin as you are to bring down an incoming ballistic missile with it.\" He nodded slowly in agreement.\n\nI went on, \"If you were to 'leak' the code to us, we would see all that was wrong with it. Believe me, I don't think the United States is any further along. In fact, I guess based on the news and blabbing congressmen that we're much farther behind. That makes us edgy and thus we have our fingers closer to the trigger for World War III. If we knew what you had was basically a pile of shit, we'd back down.\" I smiled at him. He nodded some more.\n\nWe were both quiet for a long time. He thought about the whole proposition. I could see him weighing the pros and cons of the deal.\n\n\"Where would I go afterwards? The U.S.?\"\n\n\"I think you can go anywhere in the world you want to go. My guess is that, at least for a while, you won't be too welcome in Russia. Maybe after a decade you could go back; people have a way of forgetting. We'd provide you a complete identity change if you want it -- even plastic surgery.\"\n\n\"What about Alyana ... and Maria?\" he asked.\n\n\"Alyana can come too. No problem. We can give her a new identity too. That said, Stacy, Katrina and I want to see you twp and be with you both often.\" I smiled at him. \"As for Maria, the less you tell her the more protected she'll be. She can't say anything about what she doesn't know about. I doubt even the KGB will hurt her except for some injections of truth serum that will prove she doesn't know anything.\" He nodded and thought some more. Over his shoulder I could see Stacy browsing magazines at the newsstand on the corner.\n\n\"What would I do? How do I smuggle out thirty-five million lines of code that exist on three separate mainframe computers?\" Ivan asked.\n\n\"We haven't got the slightest idea,\" I said, \"I guess that's part of how we'll earn our millions. We've talked about it and tapes seem the most logical way, but ...\" I shrugged.\n\n\"David, I am not proud to admit that your proposition intrigues me. I am likely to do what it takes to earn that money. I will eventually miss Russia -- at my age I think I could never go back alive. Let me think about this and we will be in touch somehow.\" He paused then added, \"You might wonder whether I will talk to anyone else about this. We seem to have some trust with each other; I want you to know that I will never speak to anyone of this other than you -- not Alyana, not Maria, no one.\"\n\n\"Thank you, Ivan. I know this is not the easiest situation I have put you in and for this I am sorry. That said, I cannot picture you in your retirement playing chess in front of a gray projekt apartment complex. You need love and sunshine; I think Stacy and I can help you find that path.\"\n\nWe stood and he hugged me like a brother. We looked closely at each other's faces. Then he walked down the street towards Stacy. I watched the two of them embrace, kiss, talk briefly, kiss again, and then Ivan walked away on his way back to Moscow.\n\n*****\n\nKatrina flew in to Paris and we spent the night together. The first part of the evening she de-briefed us. I tried to repeat every word and phrase and nuance I'd sensed from him. Suddenly I learned why Katrina was a handler. With Kat, too, we could be completely open about our sex and love making the night before. She understood and even grinned at us as we told her of our erotic escapades.",
        "The second part of the night we created our own erotic escapades. Somehow I came three times that night -- twice in Katrina and once in Stacy. My seed was sure being spread around. The three of us slept together all entangled and in the afterglow of our lovemaking. We were all very tender and loving with each other in the morning; what a nice way to wake up. Eventually, Kat returned to Frankfurt, Stacy headed off for two days at the Milan training center, and I went back to London.\n\n*****\n\nI returned a call I'd had from the computer guy in The Company. He was more nuts and bolts than I was and he was probably going to be one of the guys that would pick apart whatever Ivan could get to us. He told me that based on Ivan's remark about 35 million lines of code and making a reasonable assumption of ten bytes per line, and knowing that you could put about 80 to 120 million bytes on a half-inch wide reel of tape, the math worked out to be about five or six reels of tape. A reel of tape was about fifteen inches around in its protective case.\n\nNow I needed to think through how to get a box of five or six tape reels out of the Soviet Union. Hummmmm!\n\nStacy and I kicked the problem around over the weekend. She had the same response I did. \"Hummmmm!\"\n\n*****\n\nStacy came up with the winning idea for how to move the tapes out of the Soviet Union. I had a couple of ideas for how to get hold of the tapes themselves -- with Ivan's cooperation. We ran some scenarios and fine-tuned our ideas. Over the summer, we sent a message to Ivan on the Katrina to Alyana channel.\n\nI met Ivan at a computer fair in Vienna in late September. He was onboard with the idea of defecting and helping us get hold of the tapes. He was still worried about repercussions on his wife or Alyana but decided that they'd manage just fine if he told them nothing. I offered again to provide either of them a change of identities if he wanted them; he asked that we prepare one for Alyana and one for himself.\n\nWe then talked about the nitty-gritty of getting the tapes out of Russia. I described Stacy's idea to him and he thought it would be a good one, however, his concern was how to get the tapes from his secure building to our hands. Finally, we came up with a solution. Ivan would have to change his schedule a bit but it would probably work. We also needed to meet again before our caper. I gave him a small camera to use until then.\n\nThe following month I was in Brussels for two days at another information systems conference where I was the keynote. Ivan found me and slipped the camera back to me. We didn't even acknowledge each other except for a sixty second conversation. He said everything was all right and disappeared. I nodded and we returned to our 'normal' lives.\n\n*****\n\nIn mid-November, Stacy and I arrived in Moscow playing the role of out-of-season tourists. We were no longer David and Stacy Krall either; we were Ralph and Edna Morgan from Omaha, Nebraska. I was much older, a arthritic and used a cane; my long, shaggy salt-and-pepper hair and mustache a testament to my years of hard work. Edna was an aging portly woman with dyed red hair, droopy breasts and wide hips; she had to sway when she walked to carry all her extra weight. Edna even had some photographs of some of her long distant cousins that were Russian; part of our sightseeing trip to Moscow was to see if we could look up her relatives. We both spoke a little Russian (more than we let on) and we certainly had our strong mid-west accents.\n\nWe carried a Styrofoam picnic cooler with us with some western steaks in it on dry ice that we had brought 'all the way from Omaha'. We wanted to share these beautiful cuts of meat, a specialty in Omaha, with the relatives we were to meet. Customs thought our import was interesting but paid us no mind. I made careful note of the departing customs and immigration section of the hall we were in as well as the name and rank of the customs clerk that handled our arrival into Russia.\n\nWe got a rental car at the airport and drove into the City and checked into the Moscow Hotel, a modest hotel by western standards but probably the best in the Soviet Union. We spent the first day taking a tour and walking around the Kremlin taking pictures with all the other tourists. We even just happened to walk by the office building where Ivan worked to make sure we really understood the physical layout he'd described to us. \n\nThe hotel was accommodating and got us more ice for our cooler. Ivan slipped into our room on our second evening in Moscow. We all had thought about having a sexual encounter but we were all too keyed up and nervous over what we were doing, so we just hugged and wished each other success. Ivan left with the steaks. Later that night we broke the cooler apart.\n\nInside the Styrofoam walls, bottom and top of the cooler were six computer tapes - exact replicas of the backup tapes now routinely kept in Colonel Ivan Rostofsky's office. The pictures Ivan had taken with our little camera were of the original backup tapes with all their stickers, scrapes and markings. The physical appearance of the tapes from the cooler was identical to those used in the daily backups. The tapes, however, were unreadable due to a 'malfunction' of the recording head on the nine-track tape unit. Further the reels were of a polymer plastic that would not show up on airport or immigration x-rays. The tapes could be used to make another backup but no material on any of the six could be read or deciphered. Each tape had been wrapped in a protective plastic before it was sealed in the special Styrofoam.\n\nWe were fortunate that Ivan had an office that faced a small park on the outside of the building rather than the interior courtyard of his complex that was protected by building security. Directly beneath his second floor window was some shrubbery. This was the good news. The bad news was that there were surveillance cameras everywhere. We'd figured this was the case but it still made our job more risky. Ivan had started months earlier to arrive at his office about five o'clock in the morning; thus, we'd at least have the cover of darkness for our swap. \n\nOn the crucial morning when our caper started, Ivan arrived at his 'usual' time. He did not turn on the lights in his office that day. Instead, Ivan pushed the vent window of his office open and lowered the six tapes of entire missile defense software system on a spool of piano wire we'd given him. Ivan's fingerprints were not on the tapes, just in case; however, the fingerprints of several computer operators were intentionally left there as a potential diversion should we be caught. \n\nIvan waited in his office with the lights out until a dark car paused outside his window for a few seconds then pulled up six replacement tapes. He put these in the secure safe in his office and locked it. According to plan, the car disappeared and so did Ivan. He left his building complaining of a sudden headache.\n\nStacy and I -- excuse me, Edna and I -- had rented the largest car we could find, ostensibly to drive around Moscow and some of the suburbs to see relatives. What we wanted was horsepower. Officially, the Morgan's were going to return the car at the airport and catch the early flight to Vienna on Aeroflot. We checked out of the hotel exactly at five a.m., driving away with our luggage. We'd wiped the room down.\n\nAt 5:10 a.m. we drove past Ivan's office with our lights off. I stopped on the road near his window. Stacy was out of the car, had picked up the tapes, left the replacements and was back in the car in less than thirty seconds. We'd rehearsed the swap many times. We pulled away trying not to call attention to ourselves in the light traffic.\n\nBut we had been seen. Just as we turned a corner two blocks down from Ivan's large, dull building where we'd stopped, I looked back and saw a security car come barreling out of the building's courtyard heading in our direction. I floored it and raced away, taking two rapid corners in hopes of evading our pursuers. Stacy was holding on for dear life. The security car was more powerful and kept getting closer. I doubled back with a couple of more turns but could not shake them.\n\nWhen the powerful pursuit car was just about off our rear bumper I saw in the rear-view mirror that the guard riding in the front seat was leaning out his window with a pistol. I shouted to Stacy, \"Get down. Gun!\" We both ducked as the rear window of our car shattered and a bullet pock marked the front window between us.\n\nI slammed on my brakes and the pursuit car slammed into our backend, knocking them more a kilter than us since we'd expected the collision and were braced for it. I accelerated away from them again, but they were still in close pursuit. \n\nStacy pulled my Glock from my holster and chambered a round. We'd only brought one gun and a couple of magazines. She popped up over the seat and fired pointblank into the windshield of the following security car. Their windshield pocked into a spider web of cracks. They dropped back a little then decided to make a run at us. They caught up to us again and moved out to pull abreast of us; several more shots whizzed through our car, puncturing the windows. We stayed low, as we'd been taught. Stacy fired two more shots at them.\n\nAs their car was almost beside me I hit the brakes hard and yanked the steering wheel in their direction, just as I'd been taught. Two amazing things happened within two seconds. First, as our car braked and rotated it solidly kissed the rear quarter-panel of their car as they sped by us, sending it careening off its straight course, over a dividing strip of grass, and into the courtyard of an apartment building where it collided hard with several parked cars. Now they were out of commission. Second, our car continued its rotation and as I accelerated again we started to move rapidly away from our pursuers in our desired direction. The car's rear end was crunched, the left front fender badly dented, and most of the glass had been shot out of our vehicle.\n\nWe left the City to the southwest then headed north to the airport. Traffic was moving rapidly at the early hour and starting to get heavy and so we were able to blend in with all the other cars - except for the damage to the car. Fortunately, it was still dark so the condition of our car was not as evident as it would be in daylight. That said, we did stand out and there was now probably a police broadcast about our vehicle. I thought about ditching the car but thought I'd risk trying for the airport since we were managing to drive at more than a eighty miles per hour -- thus the time to make the trip would be short.\n\nAs we drove Stacy leaned over and swept the glass from the back seat. She then rolled into the back and stripped her \"Edna suit\" off. She balled up the padding, clothes, support hose, dowdy shoes, and wig into a tight ball and stuffed them into a shopping bag we'd brought for the purpose. I could smell her make-up remover as she used it to strip her face of the facial putty, wrinkles and hair she'd acquired for her role. When it was safe and we were away from other cars I lost my mustache, wig and my bushy eyebrows as well as most of my make-up. Stacy had changed into a trim black haired woman wearing touristy clothing. When she was through she rolled back into the front seat. She held the steering wheel and pushed on the accelerator with her left foot while I stripped off my shoddy clothing in favor of a trendy sweat suit, sneakers and dark hair. She added my clothing, toupee and disguise to the garbage in the bag. \n\nWe made the airport without incident and left the car in a long-term parking lot rather than the rental car return lot. This might buy us some time. I found a trash can and disposed of our disguises and my cane. We rummaged in the rear seat of the car for a few seconds and repacked the tapes and our remaining clothing into our other luggage. We walked into the terminal just as several domestic flights disgorged their passengers into the arrivals concourse. We walked back outside to the taxi line and waited our turn to take a taxi back into Moscow. We were heading for the main train station. An hour later we left Moscow on the morning train to St. Petersburg and were playing the tourist role again.\n\nStacy and I -- now with new identities as Jeremy and Beth Evans from Denver, Colorado, were now part of a tour group about to visit St. Petersburg for one day, see the Hermitage and Winter Palace, and then continue on to Helsinki, Finland. On the train we got our tour badges out and placed them on our luggage. Another American asked if we were just joining the tour; I explained that we'd been on the tour that came through a couple of days earlier. I leaned in and said in a confiding voice, \"I got the shits! Diarrhea. Kept me on the pot for two days. Terrible. Had to stay over at the hotel -- cost us a pretty penny too. Don't drink the water unless you boil it!.\" He looked horrified and broke off our conversation after thanking me for the advice. Stacy and I curled up and slept during the eight-hour train ride and prayed a lot. \n\nThe entire tour was bussed from the train station to the Ermitage House, a nice hotel that was only a modest walk from the Hermitage and Winter Palace. We ate in the hotel restaurant trading banalities with a couple from Little Rock, Arkansas. Edna carried the tapes hidden in her large purse. After dinner we said goodnight to our companions and went to our room. The hotel delivered two boxes to us at our request. One was about the size of the cooler we'd had earlier and the second, with a little work, became a proportionally smaller. Things were working according to plan.\n\nStacy stayed in the room the following morning while I played tourist, then I stayed with the tapes in the afternoon while she went out and did the same thing. We had dinner sent up to the room pleading fatigue and shaky stomachs.\n\nStacy had tightly wrapped the tapes in plastic wrap. In the afternoon, I mounted them with standoffs inside the larger box. The tapes did not touch the large box except via the thin white supports and hangers. With the same care and precision I'd inserted the smaller box so it set atop the supports. It was a close fit but nothing appeared to touch the tapes.\n\nThat evening, Stacy pulled a bottle of 'shampoo' and a bottle of 'conditioner' from her suitcase. I added my shaving cream and deodorant to the mix. Unobserved, I stole a bucket from the maid's closet down the hall. Stacy was the chemist; she mixed our concoction of chemicals in the bucket and we watched them turn into a bright white liquid and start to expand. When the brew was the right consistency, we carefully poured the expanding mix into the space between the two boxes and over and around the carefully wrapped tapes, carefully tilting and shaking the boxes and tapes to eliminate any air pockets. We'd done this a dozen times before in our practice runs.\n\nHalf an hour later, the white gooey mix had expanded and solidified into a substance that looked and felt like Styrofoam but was about fifty times stronger. We peeled the cardboard away from all sides and the inside, and admired the perfect picnic cooler and top that we had made. I rounded a few corners with some abrasive we'd brought and we banged the cooler up a bit with our shoes and some dirt to give it a well-worn look. I also added an old handle that we'd brought with us, completing the unit.\n\n\"Now for the export,\" I said. I grinned at Stacy and left the room armed with a roll of Russian currency. Downstairs I sat at the bar and enjoyed a local vodka. I nursed the drink until I had a chance to talk to the bartender alone; I gestured him over. In my best Russian I explained that my wife and I wanted to take some caviar home -- some really good caviar, even Beluga caviar if he could find it. I pulled my wad of rubles from my wallet and flashed it to him; he understood perfectly and excused himself. He came back and asked, \"How many do you want? They come in small jars. We have twelve.\" He made a little box with his hands. I shrugged and indicated I wanted all twelve. He said the price would be thirty thousand rubles -- about a thousand dollars. I nodded and extracted a little more than that; he counted it slowly, giving me a questioning glance when he was through and saw the overpayment. I explained that we needed ice to keep the caviar cold. He nodded appreciatively then disappeared again. I went and got the cooler. \n\nThe barman helped me pack the Beluga caviar in our cooler. He also recommended I have ten thousand more rubles at the border to facilitate getting the rare fish eggs through Russian immigration control. I thanked him for his advice and took the full cooler back to our room. \n\nStacy had cleaned up our chemical 'lab', ditching empty bottles and excess Styrofoam from our production down the hotel's incinerator chute, and getting the cleaned bucket back in the maid's closet. We both looked at each other and rolled our eyes; we hugged and then got into bed with our clothes on. We were still hundreds of miles from the border and I felt like I had a blinking neon target on my back.\n\nIn the morning, our tour moved on and we were with them. We boarded a nine o'clock train to Helsinki. Three hours and a half later the train pulled into a border-crossing checkpoint. Two very bored guards came through our car checking passports and the things everyone was carrying from the country, only not very thoroughly. One guard looked through our cooler, frowning as he saw we were absconding with their caviar. I passed him a roll of bills and said, in my broken Russian, perhaps this would help ease our export of some of his country's fine caviar. I held his gaze. He thought for a minute, then pocketed the money and moved on to check the family in the next seats ... and then the next. Fifteen minutes later the train left the checkpoint and ten minutes after that we were in Finland. Our blood pressures came down significantly; finally I could breathe again. I was sweating profusely even though the temperature in the railcar was quite chilly.\n\nKim met us at the train station in Helsinki. The three of stayed in a suite in the Hotel Kamp that night. She debriefed us thoroughly on every aspect of the mission -- talking separately to Stacy and me. She inspected the cooler and we refilled the ice in it from an ice machine down the hall from our room. She liked the idea of the caviar.\n\nStacy and I were shaking we had so much nervous energy to burn off. I couldn't ever remember being so scared or in a state of tension for so long, and knowing that it could mean death if we were caught. We all hoped that Ivan had been able to follow his plan to leave the country. We didn't know if he'd brought Alyana with him or not.\n\nKim cuddled the three of us in bed that night and helped us get to sleep. Her idea of helping us get to sleep was to fuck my brains out and then bring Stacy to about five orgasms. We returned the favor. It was a sleep of the just.\n\n*****\n\nSix Months Later\n\nI was lying on a chaise beside the pool of our Villa pretending I was reading a book. Next to me three of the most beautiful women in the world lay dozing in the warm sun on deck chairs, each wearing only the skimpiest of bikini bottoms and all coated with a fine sheen of suntan lotion. Their tanned breasts were all aimed skyward at a sunny warm sky dotted with little puffy cumulus clouds.\n\nStacy, Katrina, Ivan and I had taken our usual run around the island in the morning, each of us trying to maintain our buff fitness. Alyana was more content to ride an exercycle in the Villa's small gym and workout on the weights there. We were all very supportive of her efforts and encouraged her. We'd hired a physical trainer and a martial arts instructor that came in once a week and worked with each of us. I finally earned my black belt; Stacy was a ways behind me, however, we practiced together on the beach most days.",
        "The large Villa we'd bought sat on a bluff overlooking the shimmering aqua green Caribbean Sea on the island of St. Croix. A few sailboats dotted the water between the islands that punctuated our horizon. The five of us had decided to live together and were now official residents of the U.S. Virgin Islands. We'd picked this island because it had good flights, an enviable climate, and was U.S. territory. Further, there were entertainment and a thriving social life in St. Croix's two main towns of Frederiksted and Christiansted, not to mention at many of the resorts in between.\n\nIvan was sitting at the patio table with papers spread out before him, each held down by some kind of paperweight. He had just started to invest his millions in the stock market and he was enthralled by the performance of his portfolio; he was actually doing quite well. We'd turned him into a capitalist! He was writing a software program on his new 'personal computer' that would not only track performance but also project stock performance. He thought he might try to sell the software to a company like Microsoft.\n\nIvan was also consulting to a mysterious branch of the U.S. government that was intently studying thirty-five million lines of code that made up every aspect of the Soviet missile defense system. He did mention one time of their shock over the number of errors in the software; they questioned whether the programs actually ran on the Russian computers.\n\nAlyana and Ivan had opened an art gallery in Frederiksted. Alyana was proving her merit as an artist as her work was starting to sell at premium prices. She was the happiest I'd ever seen her and was always torn between being in the gallery or in her studio. We'd created a studio for her on the north side of the house because it had the right light. We'd all posed in the nude for some of her paintings. What a kick!\n\nKatrina had started Caribbean Interiors, an interior decorating service for the entire chain of islands. She'd leased the retail store next to Alyana's Gallery so the two of them could be close for lunches and commuting back to Villa, although the ride was only fifteen minutes in one of our Jeeps. When Alyana wanted to paint at home, Kat could also cover both shops. Thanks to the advertising plan that Stacy and I had created for her, the calls were now coming in; unfortunately we lost her every now and again when she had to travel to another island for a decorating consultation. Kat was featured in a recent article in a newspaper that is widely read on most nearby islands; it proved her clients loved her and gave her business a real shot in the arm. One offshoot is that she is working on her pilot's license so she can get around more easily.\n\nStacy was enjoying our 'empty nest' for the first time in seventeen years. She was learning Spanish and French, had taken up piano again after a long hiatus, and was getting painting lessons from Alyana. Kendra had started her freshman year at a New England college and Kiley was in a private prep school not too far away. Both were happy and loved Mom's visits as well as coming down and staying at the Villa with us, although so far they'd only been down once for a few weeks before school started. \n\nI was in the process of writing two books on my first personal computer. I loved having a word processor in my den. One book was non-fiction and on management information system; the other was a fiction novel based on the actual events in my life over the past two years. I'd started by writing a short story to capture the essence of what happened and then thought I'd expand that into a full-blown novel. Jim Haight and his wife had visited us about a month earlier and they had put me in touch with a literary agent; she loved the short story and was pestering me for drafts and chapters of the novel now. (This is an edited version of my short story.)\n\nIt was a Friday and officially the weekend. The two people we'd hired to work at the Villa were now gone, having left us a meal for tonight and suggestions for the rest of the weekend. The husband-wife team lived in the gatehouse to the Villa at the other end of our long and winding driveway. \n\nAs I looked around, I thought how lucky we all were. First, to be alive after stealing one of the most important secrets a Super Power could obtain from another. That said, it was unclear to our contacts whether the Russians knew a theft had actually taken place. No one seemed to have chased us except for the security guards. Given the rampant crime in Moscow they might have thought they were dealing with local thugs rather than spies. The car at the airport could be explained away for any number of reasons, including pure vandalism. Ivan's disappearance could be more attributed to a bad marriage and threatened career than espionage or defection. Ivan had left a note for his wife claiming he just couldn't take the pressure of his bad marriage any more and that his future at work was being taken over by younger and smarter men; as far as anyone knew, he just vanished -- the note had sounded vaguely suicidal. In fact, he and Alyana had used their fake IDs and left the country. Of course, the 'backup tapes' were secure in his office, so there was no reason to suspect they'd been stolen.\n\nOne note of interest amused all of us and gave us pause for thought. President Reagan announced the United States' Star Wars project about the time Jim and Marylou were visiting, however, it was a dramatically scaled back version of what insiders expected. Apparently some information had reached American strategists that showed the U.S. was not in as much of a competition with the Soviets as we thought we were. The Cold War apparently ratcheted down a couple of notches thanks to what we'd done. \n\n*****\n\nAlyana and I set the table while Stacy and Kat worried the last preparations to serve dinner. Ivan tended our bar on the patio. The five of us sat down and joined hands. We'd actually been tending to our spiritual needs as well as our physical needs since we'd all 'retired.' I said our grace, such as it was: \"Thank you, Universe, for the love in our lives, our health and fitness, the abundance in our lives and the beauty that surrounds us. Keep us open to the next great possibility. Remind us to reach out and help others, and remind us to be grateful for all that benefits us. And lastly thank you for creating this unique circle of love.\" I paused then added, \"And so it is.\" The others repeated the phrase with smiles all around.\n\nThis was the six-month anniversary of our Moscow caper as we sometimes called it. I pulled a bottle of champagne from beneath the table and popped the cork, letting it sail into a swaying palm. After I'd poured each of us a flute of the beverage so we could toast our success, I also produced a plate of Beluga caviar -- caviar than had been carefully exported from the Soviet Union by Stacy and me in a cooler that we still had as a souvenir of our efforts. Everyone cheered and we all hugged.\n\nAn hour or so after dinner, the magnificent hues of orange and pink splashed across the darkening sky. The cooling breeze drifted across our patio from the Sea and little dots of light from the boats and other islands started to dot the horizon.\n\nStacy was bouncing up and down on Ivan's cock, both oblivious to the rest of us watching their sweating bodies. Katrina was teaching her to vocalize what she was feeling and thinking more. Stacy was talking to Ivan; \"I love your cock in me ... My God your cock feels good, right there ... Right thereeee! ... Oh, rub it ... touch my clit ... Oooooooh! ... Oh, shit, I'm gonna cum! I'm ... I'm ... I'm ... cummmmmminggggggg!\" I watched her body spasm, her hands on his chest as her muscles rippled her pleasure. Ivan grunted and came too, thrusting up into her arched form as he pulled her hips down on his. We were working on him to be more vocal too but this was not one of those times. \n\nI was lying on a large chaise by a huge palm holding Alyana on one side of me and Katrina on the other. We were naked too, and to be frank about it, I was fucked out. I'd had joyous, mind-blowing sex with each of the women and we were all savoring the afterglow and joy of our lovemaking together. I was so glad that Ivan and Stacy had waited until the three of us could watch; I never tired of watching Stacy's naked body and to watch her making love with one of the four people in the world that loved her was a golden opportunity.\n\nStacy and Ivan collapsed next to each other on the other chaise. Stacy blew me a small kiss and gave me a big smile of gratitude. They stretched out next to each other; she snuggled into Ivan's muscular body. \n\nAfter some whispered conversation, Stacy and Alyana changed places. For all the good sex we shared, we all knew that Alyana was deeply devoted to Ivan and he to her. We all loved the variety we shared but we had our favorites. Stacy didn't mind in the least sharing me with Katrina, and I didn't mind sharing Stacy with Katrina either. We made a comfortable triad and on most nights the three of us slept together as did Ivan and Alyana.\n\nGradually the sky darkened and everyone but me slipped away to their beds. I slid into the pool and floated on my back for a while, gazing up at the crescent moon and watching the evening constellations appear in the night sky. Finally, I thanked the Universe one more time for our safety and good fortune and then went to join Stacy and Katrina in our large bed.\n\n### "
    ],
    "authorname": "Romantic1",
    "tags": [
        "group",
        "orgy",
        "erotic couplings",
        "loving wives",
        "cia",
        "spy story",
        "action"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-company-man-the-cia-and-me-ch-02"
}