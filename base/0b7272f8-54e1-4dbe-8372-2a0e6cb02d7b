{
    "title": "The Daily Swagger",
    "pages": [
        "This is intended to be lighthearted, with a free-use theme. It's pretty silly. Hope you enjoy!\n\n______\n\n\"Ma'am, do you mind if I jerk off to your tits? I'm between stops.\"\n\nI was on a electric bus from Staten Island to Brooklyn. With routes and stops ever more modernized, it only takes about 20 minutes, but it was more than enough time for this gentleman to finish his business.\n\n\"Fine. Whatever,\" I said, waving him off. As a courtesy, I pulled my top down a bit more, displaying ample enough cleavage to tease the man. I refrained from pulling them all the way out, as doing that in public tends to draw others who would follow this guy's actions. I went back to reading my tablet as he jerked off nearby. \"Just be careful and don't get it on me,\" I said. \"I have a meeting first thing this morning.\"\n\n\"No worries, ma'am. I have tissue.\"\n\nHeightened libidos cause this behavior. It started about twenty years ago, when the effects of climate change were so severe, every nation was finally forced to address it. It's something to do with bariatric pressure, blood flow and neurotoxins, but now every adult on this planet has to deal with daily episodes of uncompromising horniness. That's why I refused to look at the man while he furiously beat off next to me. I could hear heavy breathing, mixed with the thumping of his hand. I didn't want to look, because I don't want to get horny before my meeting. I wouldn't have time to take care of business, if I do.\n\nUnlike some people, I still have my dignity. Probably more than eighty percent of people masturbate in public, simply because it's legal now. Personally, I don't think it should be. Sure, I might spend ten to twelve hours a week masturbating, just like anyone else, but I always manage to find the time to do it privately. Why shouldn't everyone else? But Congress passed laws many years back allowing this behavior, because there were too many issues with global productivity going down. Between that, and constantly fighting wildfires, hurricanes, tornadoes and tsunamis, life had gotten pretty hectic for mankind.\n\n\"Ma'am?\" the man asked after several minutes.\n\nI looked up, but tried not to focus too much when my eyes passed his throbbing cock. \"Yes?\"\n\n\"Could you just open the top for a moment. I'm almost there.\"\n\nI sighed, shaking my head, giving in. Dropping the tablet gently to my lap, I leaned in so he had a better view, and pulled my top open. From his angle, he could probably see the tips of my areolas peeking out of the bra. I turned away, as I heard him groaning.\n\n\"Let me just get this tissue rea-\"\n\nSuddenly, the bus jerked to an instant stop, narrowly avoiding some kid on a hover-board outside. I fell forward, brushing the man's hand and the head of his cock against my face, before reeling back. The sudden stop had the large man off balance and he stumbled forward, almost straight at me now, just as I saw a rope of semen eject from the thick head of his cock.\n\n\"No!\" I screamed, as it splattered across my right cheek, some bits splashing onto my lips and hair. I pushed him away, just as another stream hit the top of my blouse, and more onto my tits and bra. \"Damn it!\" I cried, drawing attention from other passengers.\n\n\"I am so sorry, ma'am. I was trying to get the tissue out, when-\"\n\n\"Yes, yes!\" I held my hands up. \"Just... leave me alone. I need to get this off me.\"\n\nI quickly pulled out a mirror and cloth I had in my bag. It took a few minutes, but I dabbed most of the semen off without ruining my makeup. I had to use a bit of spit to sort out my hair, while my blouse had a wide, oval stain. I didn't have any water with me, or anything to clean it. I did, however, have another blouse in my office. It wasn't exactly the first time bits of cum had splattered on me, after all.\n\nI was once at a Waffle House and the waitress was giving some guy a handjob at the table next to ours. His hot mess shot all the way across to my booth, landing on my fork. Had the waitress not been so busy, I would have asked for a new one.\n\nAnyway, I finally reached my stop, and exited the bus, the man behind me still apologizing profusely. I ignored him. It was a race getting to my office, just in time to change before the meeting. I was sweating and the cum felt stuck in. I grabbed some wet wipes, dabbling around my collar, before stripping off the blouse. Sure enough, my bra was soaked, too.\n\n\"Fuck it,\" I sighed, pulling it off, wiping up my sticky skin. Finally, I put the fresh blouse on. It would be obvious I was braless, and that often leads to circumstances like earlier, but I had to risk it. I wasn't going to the meeting in a bra drenched in cum. It was too distracting, and this was too important. I noticed I was a bit damp in my crotch and wiped down there, as well. \"I can make it through this,\" I said to myself. \"If I need, I'll fuck myself later in the office.\" Something I do, when push comes to shove, but I can lock my office. It's a viable solution in hormonal emergencies.\n\nIt was 9:02. I raced to the conference room where Pete Bergess and Alan Shrinks were waiting. As fate would have it, they were both bottomless, beating off. Regardless, they were talking business. Pete was babbling, \"We're a month behind the Sarasota project and we desperately need a new leader there.\"\n\n\"Send Alan from the Florida branch. He just finished that Cuban thing,\" said Alan.\n\n\"Great idea.\"\n\nThe two turned to me as I approached, but didn't change any of their behavior. Both were right handed apparently. \"You're late, Liz!\" barked Pete. Alan laughed him off. I was glad to be so easily forgiven.\n\n\"Had a bit of an issue on the ride over,\" I muttered.\n\nAlan looked down to his cock and then back to me. \"No way. Did you actually have to get off? Finally? I thought you were some kind of mutant.\" Pete joined him in his mocking laughter.\n\n\"No!\" I sniped back. \"Just some stranger doing it, who accidentally made a mess on me.\"\n\n\"Huh... accidentally,\" said Pete, sarcastically. Alan seemed to share his sentiment, \"It's kind of hard to accidentally cum on someone, Liz.\"\n\nI rolled my eyes. \"He was close by. The bus jerked to a sudden stop and the poor guy tumbled over me. Regardless, it made me late.\"\n\n\"Ah, I get it. That's why you're dressed like that.\" Pete started stroking even faster when looking at my shapely breasts under the thin material of the blouse.\n\n\"Look,\" I said, stopping the two. \"I need to go over this Paris contract with you, before we sign. They want another four million.\"\n\n\"Who?\"\n\n\"The holding company. I'm thinking this sounds a bit shady.\"\n\n\"That is strange,\" said Alan, stepping forward, closer to me. I didn't realize how long his cock was, until then. It was hard to look away, and I get horny staring for too long. I hoped the two would hurry through this.\n\n\"What do you want to do about it?\" he asked.\n\n\"Just give me permission to fly out and check the progress.\"\n\nI began explaining a list of things that I wanted to confirm were in place, before agreeing to let four million dollars go. As I talked, Alan reached to the table and grabbed a couple of tissues. I explained my plan of action just as he held one of them over his cock, ejaculating. \"Oh, yes. That's it. That was needed. Whew! Maybe I can relax for a minute. How about you, Pete? Almost done?\"\n\n\"Soon enough,\" his associate responded. I noticed Pete was staring at my tits, too. Feeling like the odd one out on all this sexual activity, I finally gave in and unsnapped a few buttons, pulling my breasts out of the blouse. \"Hurry up and approve my flight, and I'll offer this visual assistance.\"\n\nThe two recognized this was a rare act from me. The last time I showed my tits in public was two years ago, at the Christmas party. Hell, some of the girls on staff go completely naked, so I was still a prude by most measures. As I don't masturbate in public, I seldom give folks any voyeuristic experiences. Pete seemed to enjoy this gift and soon, a long rope of semen splattered across his end of the table. He pushed forward, unloading more on the glass top. \"I'll clean it up in a minute,\" he said. It was an impressive amount, for one his age. My pussy was throbbing like mad. If I didn't get to my office, and soon, I may, for the first time since college, subject myself to this same sort of depravity as my two colleagues.\n\n\"Of course you can go to Paris. How long will you be gone, you think?\"\n\n\"No more than a week?\" I managed to say, shivering. I needed to cum badly. I needed to touch myself.\n\n\"Which hotel?\" asked Alan.\n\n\"The Malverne.\"\n\n\"Hey, I haven't been there in years. If you see the concierge, Julias, tell him I said hello.\"\n\n\"Um... okay. I'm sure my visit will be all professional.\" My pussy was dripping, inner thigh soaked. Alan was still softly stroking his wet cock and it was only making things more difficult for me. I hadn't been this horny in ages. Fuck climate change! If the conservative party had known what it would do this to us, perhaps they wouldn't have fucking dismissed it so much. Earlier action could have prevented this mess.\n\n\"Alright, Liz. Book it and get to the bottom of it.\"\n\n\"No worries,\" I said, turning to leave. \"I'll email both of you my agenda later this afternoon.\" I rushed out, running down the long hall to the elevator. Even though no one was in the hall, I knew cameras were on me, so I resisted the urge to touch myself. The elevator reached my floor, dinging, and I rushed to my room, slamming the door behind me. In emergencies, I keep a dildo in my bottom drawer. I was out of my skirt by the time I reached it, hopping on my desk, opening wide, shoving the thing deep inside. I needed it so badly.\n\nI knew I would be cumming soon, but wanted to extend the feeling for just a few moments. I wouldn't have considered doing that, had I known Pete and Alan, still naked from the waist down, would barge in like they did, just as I was finally about to cum. \"Hey, you left before we finished!\" shouted Alan.\n\nI began shouting. \"Nooo!!\" I did not want those two watching me in this position, yet here I was gushing on the desk before them. Why did I forget to lock the door? I had been in such a hurry.\n\nAlan nudged Peter. \"That's pretty hot right there. You go, girl!\"\n\nPeter scratched his chin. \"I think this might be the first time I have ever seen you get off, Liz. Are you okay?\"\n\nI was blushing deeply, still pushing the dildo in and out. I knew, regardless of my shame, I desperately needed to cum again, so I wasn't going to stop. \"I'm sorry. I've just been so busy, and haven't gotten off since like, yesterday.... and that guy earlier...\"\n\n\"Nothing to be sorry about. Stuff that pussy all you need.\" Peter probably didn't know it, but his pragmatic talk sounded like dirty talk to me. I almost came again, yet somehow resisted, even as I picked up the pace. \"Should we leave her be, Pete?\" asked Alan. I didn't care if they were there. I was too horny. Pete looked to me and his associate, before answering. \"I suppose we can let her finish. Do you want us to wait outside, or are you almost done?\"\n\nThe answer was both, but I was barely able to get any words out. I arched my hips up, giving Pete a better view of my pussy and how I was working it, while I tried to answer. \"Ya.. ye.. I mean.. I am almost... done...\" I stroked even harder, faster, while trying to converse. Some girls don't fuck themselves as I hard I do, I am well aware. I mean, I see girls masturbate all the time these days, so I know these things, but for some reason, when I really get busy with a dildo, almost to the point of pain, I have explosive orgasms, and that is what I needed at this very moment. It sucks being kinked this way. It was maybe one of the biggest reasons I am not comfortable getting off in public. \"This is so.. emb.. embarrassing... and I don't think... but I'm almost...\"\n\nAnd that's when it happened. Unable to hold back any longer, I erupted. It was like a dam breaking. Juices shot out of my pussy like jets, splashing both my colleagues and bits of everything in the room. From the chairs, to the couch and floor, even the walls. More of my orgasmic fluids oozed out of pussy, soaking the desk. It was like a rush of relief washed over me. Bottomless, with a dildo still half stuck in my pussy and my legs spread towards my two co-workers, I flopped back, breathing hard.\n\n\"Wow, you really needed that,\" whispered Alan.\n\n\"Yeah,\" said Pete. \"I don't usually comment on someone's mastubatory skillset, but that was very impressive. It got me hard again, already. Liz, do you mind if I jerk off once more?\"\n\nI nodded, approving the action, wiping some sweat from my forehead, too exhausted to talk. The dildo still hung in my pussy, and I knew that vision would help my colleague stay busy with his task. I felt so fulfilled and satisfied, I didn't care if they saw me naked anymore. In fact, I figured it was nice to help as best I could, so I spread my legs wider. Let them get off on it, I thought to myself. 'Just one day, I can act like everyone else, right?'"
    ],
    "authorname": "AnonymousPerv",
    "tags": [
        "comedy",
        "free use",
        "public masturbation",
        "masturbation"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-daily-swagger"
}