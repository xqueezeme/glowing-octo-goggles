{
    "title": "The Sensei",
    "pages": [
        "This is a story about the wildest relationship I've ever had, the year I spent with a gorgeous Londoner in a small town in Japan. She was in a very committed long term relationship, but her loneliness and her desire to learn how to please her fianc\u00e9 led us both down a very strange and erotic path.\n\n*****\n\nI was 23 and had just started my second year living in Japan. I working as an English teacher as part of a cultural exchange program run by the Japanese government. I had been assigned to a small town on Hokkaido, the northernmost of Japan's four main islands. For the first year, there had been one other native English speaker in the town, a guy named Jason from Seattle who was part of the same program and lived in the government-provided apartment right next door to mine. But he'd left to start grad school back in the States, and I was anxious to see who would replace him. While it was easy enough to take a train into Sapporo on the weekends and meet up with other expats from surrounding cities, during the week, it was just Jason and I, and we ended up hanging out nearly every day. In the three weeks since he'd left, I'd felt acutely more alone. \n\nSo when I received word that Jason's replacement would be arriving at the beginning of August, I was both pleased and apprehensive. It had crossed my mind that, while I got along well enough with most people, there was no guarantee that this new person would be someone I'd actually enjoy spending time with. But I needn't have worried. \n\nMEETING NAOMI\n\nI distincting remember the first moment I laid eyes upon Naomi Gray. I was just stepping out of my apartment, on my way to the grocery store, as she was being led to hers by our liaison from the education ministry, Mariko. Naomi had the same wide-eyed look that I must have had when I was being shown everything for the first time. Mariko smiled when she saw me and rushed over to introduce us.\n\n\"Ahhh, Jake-san, ohaiyo gozaimas, I am please to introduce Naomi-san. She is our new sensei for junior high school. She is from England. Naomi-san, Jake-san is your neighbor. He is part of same program and teaches at our high school.\"\n\nI gave my best smile and reached out to shake her hand. \"Nice to meet you, Naomi, I'm Jake. I'm from Montana. I've been here for a year now.\" As soon as I smiled at her, she immediately smiled back, and it was only then that I truly appreciated how beautiful she was. From a distance, she was non-descript: average height, with straight, black hair that was pulled back, wearing eye-glasses and dressed very professionally in khaki dress pants and a white blouse. But now that we were face-to-face, I could see that she was strikingly pretty. She had dark brown eyes and her skin was an olive-shade that suggested some sort of mixed ethnicity (I would later learn that her mother was of Japanese origin; her father a Brit). And though her professional attire disguised it somewhat, I could tell up close that she was very fit and well-proportioned, with defined hips and what looked to be reasonably large breasts underneath the blouse. She smiled at me with a kind of warm, genuine smile that conveyed immense relief at learning that there was at least one person in town whom she could have an actual conversation with. \n\nAs she reached out to shake my hand, still smiling, she said \"Jake, it's a pleasure. I'm Naomi, Naomi Gray...from England.\" The last part was unnecessary as her British accent was unmistakable. She had that kind of educated, upper class English accent that made her sound like a BBC news reader. It's amazing how an accent can impact your perception of a person. I thought Naomi was pretty before she even opened her mouth, but something about hearing her speak instantly elevated her beauty in my eyes. I was immediately smitten, or as she would later put it, I 'fancied her from get go.' \n\nLater that day, after Mariko had left and I'd given Naomi some time to unpack and settle in, I knocked on her door. She answered almost immediately and smiled brightly when she saw it was me. She invited me in and, before we knew it, several hours had passed. She told me all about herself and I did the same. I also told her just about everything I knew about the town, about the job, about things to do on the weekends and where to shop for food and other necessities. \n\nI learned a lot in that initial conversation. For instance, I knew, almost immediately, that we would get along just fine. She was smart and witty and easy to talk to and she seemed to warm to me quickly as well. The other key bit of information that I gleaned very quickly was that she was in a very committed, long-term relationship. In fact, she had just recently become engaged. Her one room apartment was already littered with pictures of her with her fiance, Liam, a good looking guy who was apparently training to be barrister. He was a couple of years older than her, and the two of them had lived together for over two years. Naomi planned to return to the apartment they shared after her year in Japan, and to begin medical school. She wanted to spend a year in Japan to get a better sense of her mother's cultural ancestry; her mother's family had emigrated to the UK when her mother was just a child. \n\nIn a way, learning all about Liam from the beginning made things much simpler. As attractive as Naomi was, she was clearly off limits, and so we skipped right past the sexual tension stage and moved straight into the friend zone. By the next week, it already felt like we were old friends and we were hanging out together nearly every day, watching TV, eating meals together after work, jogging together when the weather cooperated. \n\nIn fact, we spent so much time together, and it was such a small town, that the students at my school (and even many of the teachers), just assumed that we were a couple. Many asked what my girlfriend's name was. I had to explain repeatedly that Naomi was just a friend and a fellow English teacher. I got the sense that most of the students didn't believe me.\n\nA NEED FOR HUMAN CONTACT\n\nAs the weeks wore on, I could tell that the separation from Liam was wearing on her. I had developed friendships with some expats in neighboring towns, who I often spent time with, particularly on the weekends, when I would often take a train into Sapporo on Saturday and not come back until late Sunday. But Naomi hadn't yet developed a social network and was more of a homebody anyway. She didn't like to stay up late in the city. And as a result, she was spending a lot more time alone than she was used to. \n\nOne night, as we were hanging out in her apartment, she confided to me that what she missed most was regular physical contact. She quickly clarified that she didn't necessarily mean sexual contact - though she missed that too - but things like hugging, cuddling, holding hands, all the things she used to do with Liam every day. At that point, sensing she wanted it, I reached out and gave her a hug. She immediately hugged back, gripping me pretty tightly.\n\nAfter about ten seconds of silent hugging, just long enough for things to start feeling awkward, she pulled away and looked up at me.\n\n\"Jake, that was lovely. Exactly what I needed. But I don't want to give you the wrong idea. I love Liam and I'm never going to cheat on him.\" Seeing the look of protest on my face, she quickly added, \"and I know that's not what you were trying to do just now...it's just...I'd like...I'd like to hug some more if it's okay with you...and I...I don't want you to get the wrong idea or think that I'm wanting anything more than that.\"\n\nI shook my head, \"of course not.\" \n\nShe continued, \"it's just, I really miss human contact and I trust you and...oh god...I'm probably making you feel so uncomfortable.\"\n\nI reached in and hugged her again. \"Don't be silly. I get it. We can hug or cuddle or whatever you need. I promise to behave myself. Just friends. I promise.\" As I pulled away, she smiled warmly at me and reached for my hand.\n\n\"Thank you for being so great. I really lucked out having you next door.\" With that she pushed me back against her pillows and leaned in, resting her head on my chest. I stretched my arm around her and we lay there, watching TV, looking for all intents and purposes like a real couple.\n\nI dozed off with her in my arms and woke, at little disoriented, a few hours later. By that time it was after midnight. Naomi was asleep too, her head still on my chest. I tried to gently move out from underneath her, planning to head back to my apartment, but the movement woke her up and she looked up at me with those puppy dog eyes.\n\n\"Why don't you stay?\" she asked groggily. \"I sleep so much better when I'm not alone. Please. Just tonight?\" \n\n\"Okay,\" I said \"just let me go brush my teeth and change into something more comfortable.\" \n\nWhen I came back about ten minutes later, now in a t-shirt and some pajama pants, I knocked and Naomi opened the door for me. My eyes were immediately drawn to her. She too was wearing a pair of plaid pajama pants, but that wasn't what caught my eye. For a top, she was wearing only a small t-shirt that fit snugly over her breasts. With no bra on underneath, the contours of her ample breasts were apparent, as were the protrusions caused by her nipples. She must have noticed me staring at her chest because she said, \"I hope you don't find this too immodest. I just can't sleep in a bra.\"\n\nA little embarrassed, I gulped, and said, \"Sorry, it's just...it's a side of you I haven't seen. I'm only human.\" I smiled meekly. \n\n\"Oh don't be silly, Jake. I'm asking a lot of you. You can look as much as you like. I don't mind. As long as you stay with me and keep me company.\" \n\nThere was something so wholesome and disarming about her. So many beautiful girls have a way of making you feel self-conscious and on edge around them. Not Naomi. From the very first day, she made me feel completely at ease, like being around an old friend.\n\nShe beckoned me over to the bed, and I followed, lying down on my back on the right side of the bed. A moment later, she crawled into bed next to me, pulled the covers up over us and snuggled up against me. \"Let me warm up against you for a little,\" she said, \"then I'll leave you alone. I promise.\"\n\n\"Whatever you say,\" I replied, reaching my arm around her and pulling her up against me. With all of the close contact, the smell of her hair, the feeling of her breasts pressed against my side, it wasn't long before I was sporting an erection. I was pretty sure she could tell, but she didn't say anything or give any indication it made her uncomfortable, and after a while we were both asleep. \n\nThe next morning, we both got up early to get ready for work. We didn't talk much, but before I left to return to my apartment, Naomi came up behind me and gave me a bear hug, saying \"thank you for staying with me. That's the best I've slept since I got here.\"\n\n\"Any time,\" I said as I left, wondering if I really meant it. \n\nA NEW ROUTINE\n\nThat night, I went to dinner and drinks with some fellow teachers and didn't get back until around ten o'clock. Exhausted, I immediately brushed my teeth and got ready for bed. Just as I was about to hop in bed, there was a knock on the door. It was Naomi, and she was dressed in her same sleeping clothes as the night before. \n\n\"Hi...uh...come in,\" I said. She readily accepted the invitation and a few minutes later, we were lying on my bed, watching TV, her head again resting on my chest. Thanks to the light of the TV, I had a pretty good view of her cleavage down the collar of her shirt, and the shirt itself was pretty thin, easily showing the outline of her nipples. I hadn't had any kind of sexual release in days and was still a bit worked up from all the close contact the night before, so within seconds I had a raging erection. This it time I was certain she noticed. It was right in front of her face, after all. So I decided to address it first.\n\n\"I'm...sorry about that. It's...um...just a reaction to the close contact. It's involuntary.\" \n\n\"Are you saying you would get hard no matter who was cuddling up with you? Even some hideous hag?\" \n\n\"Um...no...\" I started to say, fumbling for words.\n\n\"Relax, Mr. Uptight American. I'm just having a laugh. I know how you boys work. And I'm not even the slightest bit bothered. As long as you don't expect me to help you with that, it's not a problem.\" \n\n\"Of course not,\" I added quickly. \n\nNaomi ended up spending the night in my bed that night, and before I even appreciated what was happening, we had established a new routine. We spent the night together, in one or the other's apartment, every night that week. And it was always the same: very affectionate, but not intimate, not sexual. \n\nBut it was starting to present quite the conundrum for me. I was incredibly attracted to Naomi and all of the close contact was a constant stimulant. I had an erection nearly continuously and not much opportunity to address it. One morning, I was so desperate that I ended up rubbing one out in the shower before work, something I almost never do. \n\nANOTHER GIRL\n\nBy the time the weekend rolled around, I knew I needed to find a better outlet, so I reached out to a fellow expat I knew who lived a few towns over. Her name was Lynne. She was from California, a Chinese-American girl from L.A. with a pierced nose and several tattoos. We had hooked up once at a house party four or five months before. We hadn't slept together at the time - just drunkenly fooled around a little on a couch - but she had made it clear that she was up for a casual hookup any time. She wasn't on the same level as Naomi on the attractiveness scale, but she was cute enough, and I knew that she wasn't looking to get attached. \n\nThankfully, she didn't have Saturday plans and she agreed to meet up with me in Sapporo. I left a note for Naomi letting her know that I was going into Sapporo and didn't plan to be back until Sunday some time. I met Lynne at a ramen shop and, after we ate, we rented a karaoke booth and ordered drinks. By the end of the third song, we were making out. I had so much pent up sexual energy that the mere act of kissing made me instantly and powerfully aroused. At my urging, we were soon on a train headed back to my town, which was closer than hers, and making out the whole way, much to the curiosity of our fellow train passengers.\n\nWhen we finally got to my place, it was a little after 10:00 pm, and by the time the door was shut, we were kissing passionately and starting to pull off each other's clothes. As I was about to reach for Lynne's shirt, there was a knock at the door. I knew instantly who it was and felt awkward about it. When I opened the door, Naomi immediately saw Lynne sitting on my bed, saw my disheveled appearance and no doubt knew exactly what was happening. For a moment, there was a flash of what might have been jealousy or hurt in her eyes, but she recovered quickly and forced a smile. \"I'm so sorry, Jake. I didn't realize you had company. Have a good night!\" And with that, she was gone.\n\nI closed the door and returned to Lynne. \"Who was that?\" she asked. \n\n\"Just my neighbor,\" I answered. \"She's new. Probably just wanted to watch TV or something.\" \n\n\"She's hot. Lucky you, Jake.\" And with that, we picked up where we'd left off. Within minutes, we were both nearly naked and Lynne had dropped to her knees at the foot of my bed and quickly taken my cock into her mouth. She was unusually confident and aggressive, at least compared to the other girls I'd been with up to that point in my life, and it was an enormous turn on. And given that I hadn't hooked up with anyone in over a month and had been in a state of perpetual arousal all week, I knew I had no hope of lasting long, at least during round one. Lynne must have sensed this as well by the way my body was tensing up, but she didn't let up a bit and, within no time, I was coming hard in her mouth. Given the week I'd had, it must have been an awful lot of fluid, but she swallowed it down without objection. \n\nMoments later I pulled her to her feet and then pushed her back gently onto the bed. I then moved down between her legs and began to return the favor. I prided myself on being good with my tongue and, based on her reaction, she agreed. Within minutes she was moaning loudly enough to wake the neighbors, and it occurred to me that Naomi must be hearing everything through the paper thin walls that separated our apartments. But I pushed that thought out of my mind and concentrated on the task at hand, which, within a few minutes, led to an enthusiastic orgasm. \n\nBy that time, my cock was rock hard again. I reached under my bed, fumbled around for a second and eventually pulled a condom out of the box I kept down there. As I pulled myself up onto my knees in front of Lynne, she saw what I had in my hand and smiled wickedly. As I tore open the wrapper and began rolling the condom on, Lynne did something that surprised me. She sat up and then flipped over onto all fours, facing away from me. She grabbed my headboard with both hands and stuck her ass out toward me, clearly wanting me to take her from behind. To this day, when I close my eyes, I can still see her tight little ass wagging in front of me, glistening with sweat, begging to get fucked.\n\nI was happy to oblige. I gripped her hip with my left hand and, with my right hand, guided my cock inside her. Before I was even halfway in, she pushed back with her ass, completing the connection. Within seconds, we were fucking fast and hard, our bodies slapping and the headboard banging against the wall. She was very vocal, encouraging me to go harder and faster, yelling \"fuck me, Jake\" every so often. I couldn't help wondering what Naomi must be thinking next door. We were making such a racket. \n\nWhen it was all done, we lay there naked and panting, drenched in sweat. The sex had been smoking hot and exactly what I needed, but now that I'd scratched that itch, my thoughts kept returning to Naomi. It had only been six nights that we'd spent together, but it had quickly come to feel comfortable and normal, and I missed her. I hoped that what had just happened tonight wouldn't scare her off. \n\nIn the morning, Lynne and I had sex one last time, this time with her on top. And then she gathered her clothes and left without saying much, giving no indication she expected a call or any follow up. \n\nTHE BARGAIN\n\nWhen I eventually got dressed and ventured out around lunch time, I thought about knocking on Naomi's door but decided against it. I'd wait for her to come to me. But she never did. The evening came and went. I knew that she was home because I could hear her TV on, but she never knocked, and I fell asleep alone. Monday came and went in much the same way, without Naomi calling, texting, or stopping by.\n\nOn Tuesday, she finally made contact again, stopping by my apartment as she got home from work (and looking as pretty as ever). She invited me to dinner and I accepted. Once we were seated at the sushi place down the street, she finally came out with it.\n\n\"So I know I don't have any right to be jealous, Jake, but who was that girl? Are you two together now?\"\n\nI smiled, \"no, she's just a girl who lives a few towns over, an english teacher, like us. We've hung out before.\"\n\n\"Not that it's any of my business, I guess, but it sure sounded like you were doing more than just...um...hanging out.\" \n\nI shrugged. \"Yeah, I'm sorry about that. It's kinda awkward with such thin walls. We definitely hooked up. But it's nothing more than that.\"\n\nNaomi's eyebrows were raised, a skeptical look on her face.\n\nI continued, \"look, I'm not generally a one night stand kind of guy, but the truth is, after last week, I really needed an outlet, and I kinda had a sense she would be up for that, you know, with no strings attached. Naomi, I love spending time with you, and I loved sharing a bed with you all last week, but it's tough, having a beautiful girl pressed against you all the time and knowing she's off-limits. Like I said, I just needed an outlet.\"",
        "As I said this, Naomi's expression warmed. She reached over and grabbed my hand. \"Of course, Jake. I've been silly. I'm asking a lot of you and I'm not 'putting out' as you yanks say. You don't have to explain yourself to me. I understand. I'm sorry for being childish about it.\"\n\nOn the way back to our apartments, she asked me if I wanted to spend the night. I agreed. A few hours later, we were lying on her bed, watching TV. Naomi was wearing a very thin tank top, with no bra, and tiny pajama shorts that showed off all of her slender legs. It was as if she was trying to get a rise out of me. And she succeeded. I had an erection from nearly the moment I walked into the apartment, and I was certain she noticed. \n\nAs we watched TV, though, she was unusually quiet. I had the distinct feeling that she was trying to build up the courage to say something. Sure enough, she eventually came out with it.\n\n\"Can I ask you something personal, Jake?\"\n\n\"Um, okay.\"\n\n\"How many girls have you...um...been with?\"\n\n\"You mean slept with?\"\n\n\"Yes, shagged. Not snogged.\"\n\nI knew the exact number immediately, of course, but I pretended I had to think about it. Eventually I said \"more than 10, less than 20.\" \n\n\"And is it always...um...like that?\" she motioned toward the wall separating our apartments, clearly referencing my encounter with Lynne a few nights before. \"Is it always that...intense?\"\n\nI smiled. \"Not always, no. Depends on the situation. And the person. Why?\" \n\n\"It's just that, well, I've only ever been with two men, and when I heard you the other night, I...well...I just couldn't help thinking that maybe there's a lot I don't know. I know I'm being incredibly forward with you, Jake, but I wonder if you could describe it for me. What was she like? What did she do?\"\n\nOver the ten minutes or so, I described, in considerable detail, my night with Lynne. Naomi hung on my every word, occasionally interjecting with questions. She wanted to know every little thing Lynne did that I found sexy. I tried to describe the things I remembered, but it was often difficult to find the right words. But I did my best, and the effort to relive the encounter succeeded, if nothing else, in making me enormously aroused. My cock was practically bursting out of my shorts.\n\nAnd that's when things got interesting. \n\nYou know, Jake, I've been thinking. It's not fair for me to ask you to play this role, to be this boyfriend surrogate, while not ever taking care of your needs... \"\n\n\"Naomi, it's really okay...\"\n\n\"No, hear me out, Jake. I want to propose a deal, a bargain if you will. I want to learn from you. I want to learn how to be a good lover to Liam. I want to know how men tick, what gets you worked up, what you really like and want. Don't take this the wrong way. I'm not going to have sex with you, Jake. I can't do that to Liam. But if you're willing to be completely open with, to tell me absolutely everything, to share all your desires and fantasies, I am willing to provide that...that...outlet for you.\"\n\nI can only imagine what kind of expression I had on my face at this point in the conversation. I'm sure it was some mixture of shock and confusion. I understood what she was asking of me, but she was being pretty cryptic about what she was offering in exchange. After a few moments, I finally spoke, \"what do you mean by 'outlet'?\" \n\nShe smiled. \"Well, Jake, I've been thinking about this all afternoon. If we're going to go down this road, we need some clear ground rules. In exchange for your...um...candor, I'll...um...let you see me. All of me.\" \n\n\"You mean see you naked?\"\n\n\"Yes, and you can...um...touch yourself...wank...in front of me, whenever you want. In fact, that's part of what I want to learn. I want to see how you do that.\" She paused before continuing, \"but that's it, Jake. The rest is for Liam. I'm not going to touch you and you're not going to touch me. And I'm not going to touch myself in front of you, either. Only Liam gets to see me come.\" \n\n\"Do you think he'd be okay with the rest of what you're proposing?\" I asked skeptically. \n\n\"Doubtful,\" she conceded, \"but he doesn't have to know, and I'd be doing it for him. If I can learn how to really please him, he'll benefit from it for the rest of his life.\" \n\nThere was a real earnesty in her voice. This didn't seem like some rationalization she'd come up with just to justify cheating on her fiance or alleviating her loneliness. She seemed to have genuinely convinced herself that this would ultimately benefit her relationship. \n\n\"Are you sure you won't regret this? I really don't want to be a homebreaker here.\"\n\n\"Homebreaker? Is that what you yanks call it?\" She was smiling. \"You're a sweetheart, Jake, but I've thought a lot about this, and it's okay. Do we have a deal?\"\n\n\"Yeah, I guess we do,\" I said, reaching over to shake Naomi's hand. \"So what next?\"\n\nTHE FIRST EXCHANGE\n\nNaomi smiled warmly. \"Well you've already contributed quite a bit tonight, so I suppose I need to make a good faith showing of my own.\" \n\nWith that, she sat up and scooted over a bit on the bed, creating a little space between us. Then she moved her hands up to the spaghetti straps of the tank top she was wearing and slowly pushed them off of her shoulders. After a few more tantalizing seconds, she pulled the front of her tank top down, simultaneously exposing both of her breasts. To this day, that image is still burned into my retinas. Her breasts were flawless, large and natural, perfect for cupping in your hands, if only that was allowed.\n\n\"So you like?\" she asked, with the confidence of someone who already knew the answer.\n\nI just nodded, very much aware of the erection now bulging beneath my thin pajama pants. After what must have been at least 30 seconds of me just staring at her breasts, transfixed, I eventually spoke, \"so...what now?\"\n\nShe smiled again, \"well, here's what I was thinking. I'll keep these out. Stare as long as you like. And while you're doing that, why don't you tell me another sexy story. You can choose. Just tell me about a memorable encounter.\" \n\nMy brain wasn't exactly firing on all cylinders, so it took me a bit to come up with a story to share, but I eventually thought of one. I began to tell her, haltingly at first, about the time my freshmen year of college when a sophomore girl I had just met led me into a closet in a dorm room and gave me an unexpected blowjob. \n\nBefore I had even got a few sentences into the story, Naomi interrupted me. \"Jake, you should really feel free to...you know...touch yourself as you tell the story. I know you want to.\"\n\nShe was certainly right about that. My erection was so persistent that it was taking a significant percentage of my concentration just to resist grabbing it. So I stopped fighting the urge and let my right hand grasp my cock over my shorts.\n\nI continued with the story, describing how the girl, a red-haired sorority girl who had come by our dorm to hang out with a friend, had chatted me up for a while and then, once we found ourselves briefly alone, had taken me by the hand and led me into a small walk-in closet in her friend's dorm room. I could tell that Naomi was hanging on my every word.\n\nOnce in the dark closet, the girl - her name was Carrie, I think - immediately went to her knees and began unzipping my fly. A few seconds later, my pants were down around my knees and my cock was in her mouth. \n\n\"Oh my,\" Naomi interrupted, \"that's pretty forward. Are all American sorority girls so quick to suck cock?\" \n\nI shrugged, \"not that I'm the expert, but...I doubt it. This was the only time something like this ever happened to me, and it was apparently part of some dare. But I'll get to that.\" \n\n\"So was she good it at...you know...sucking cock?\" \n\n\"Um...yeah...really good actually.\" \n\n\"How so? What did she do?\"\n\nI explained that, in my opinion, the girls who give the best head actually let their hands do most of the work, that when it's done right, it should basically be a wet handjob, with the mouth providing the lubrication. I said that Carrie understood this and used her hands perfectly.\n\nNaomi was astounded by this observation. \"All this time I've been doing it wrong! Most of the time, to make it work, I end up having to move my head like a woodpecker. It's exhausting. And you're telling me I should just be using my hand to help?!\"\n\n\"Um...yeah\"\n\n\"Show me\"\n\n\"Show you what? I'm not that flexible\"\n\n\"Very funny. I don't mean with your mouth. I mean, show me how you use your hand. Take off your shorts and show me.\"\n\nWhy not, I thought to myself, and a moment later my shorts were down to my knees and my cock was standing at attention. Naomi's eyes went wide the moment my cock came into view. I started moving my hand slowly up and down the shaft of my penis, my eyes still glued to Naomi's perfect breasts. \n\n\"Is that how I should do it? Slowly like that?\"\n\n\"Not really,\" I explained, \"but you have to be slower and more gentle when there's no lubrication. Otherwise it can hurt.\"\n\n\"Hmm...I've got an idea.\" Naomi got up, her breasts jiggling wildly, and walked over to her dresser. On the top was a bottle of hand lotion. A moment later she was hovering over me, squirting the lotion onto my cock and right hand. As the lotion coated the length of my cock, I began moving my hand much faster, gripping it tightly. Naomi watched intently, like she was studying for an exam. She was now sitting next to me on the edge of the bed. \n\n\"Tell me the rest of the story, Jake. How did it end?\"\n\n\"Well, at first it was so dark in the closet that I couldn't see anything. But eventually my eyes adjusted to the dark and I could see her. I could see that she was looking up at me. She'd take her mouth off my cock every few strokes and smile up at me, while her hand continued to stroke me. She was clearly enjoying getting me off.\"\n\n\"You liked the eye contact?\"\n\n\"Oh definitely. There's something so intimate about that. I liked the smiling too. Some girls get so serious during sex. Playfulness is usually sexier.\"\n\nNaomi seemed to consider that for a moment. Then she asked \"So what then? Did she make you come?\"\n\n\"Oh yeah. But not the way I expected. When I was getting close, I think she could sense it. She just stood up, abruptly, her hand still firmly stroking my cock, and she leaned in to kiss me. We hadn't kissed up until that point. It was a slow, intimate kiss. Then she moved her mouth up to my ear and whispered to me, 'come for me, freshmen.' Her voice was so sexy, so confident. Her grip was so firm. I came almost immediately after that.\"\n\n\"Wow, that's incredible. What happened to all the spunk?\" \n\n\"Not sure. The floor of the closet, I guess. She pointed my cock away from her when I came.\" \n\n\"Well, I'm sure her friend appreciated that. Speaking of which, I can tell you're getting close now. Just shoot it onto your stomach and I'll get you a tissue.\"\n\nTaking that as my cue to wrap things up, I took one last gaze at Naomi's breasts and allowed myself to come. Quite a bit of cum - more than from a typical wank - shot out onto my stomach, causing Naomi's eyes to again grow wide. As soon as I was done, she got me a tissue and immediately put her shirt back on. Soon we were back in bed, her nestled in against me, as if nothing had happened. \n\nFor the next severals weeks, this same general routine played itself out almost every other night. At Naomi's suggestion, we'd get naked (Naomi even took her shorts and panties off a few times), and I'd tell her about a prior sexual escapade while masturabating in front of her. As strange as it all was, it came to feel almost routine. We didn't do it every night, but at least every other. Before long, I was running out of material to share with her. I'd already told her about my most memorable encounters and even a few of the not so memorable.\n\nHANDS ON LEARNING\n\nNaomi seemed to get that I was only 22 and didn't have a limitless of supply of erotic stories to share with her, but I could tell that her thirst for sexual knowledge wasn't quenched. One night, as we were talking, I made the obvious point that there's only so much you can learn through verbal explanation or even demonstration. At some point you have to actually do something, you have to practice, to learn how to do it well. \n\nAlmost as soon as the words left my mouth, I worried that she might take them the wrong way. As much as I fantasized about her doing so, I really wasn't trying to convince her to break her ground rules. But I succeeded nonetheless.\n\n\"You know, you're right, Jake. If I actually want to learn how to do any of these things well, I'm going to need to practice them. I feel bad about it, but I still think Liam will be the ultimately beneficiary. So here are the new rules. I can touch you, as needed, but you can't touch back, at least not while I'm naked. Understood?\"\n\nI nodded. At that point, Naomi - who was wearing nothing but a pair of cotton pajama shorts - reached over and gently put her hand on my cock. I was so conditioned to the no contact rule that her touch felt at first like an electric shock. It was sensory overload. Slowly, gently, she began stroking my cock, doing a pretty good approximation of my own technique. \n\nAfter a few minutes, she leaned over me and grabbed the bottle of lotion, which she now kept permanently on the nightstand. She squirted quite a bit onto her palm, rubbed her hands together, and then placed both of them around the shaft of my cock. Gradually she increased her speed, as well as the tightness of her grip. It felt phenomenal. The stimulation was so intense that I lasted less than a minute before erupting like a geyser. She was leaning over me so closely that some of my cum splashed up onto her left breast. She smiled when she saw it, as if admiring her handiwork. \n\nAfter she'd gotten tissues for both of us and put her shirt back on, she asked me to give her feedback on her technique and implored me to be as honest as possible. I did my best.\n\nHandjob practice continued for the next couple of weeks, including once in a movie theater and another time in the back of a train car. It was Naomi's idea on both occasions, but she was no doubt inspired by the story I'd told her about getting a handjob in the back of a school bus during a class trip in high school. \n\nEventually, I got around to asking Naomi something that had been bothering me since the beginning of our little training sessions: what did she do to satisfy herself? What was her own \"outlet\"? She seemed surprisingly reluctant to tell me, but she eventually admitted that she masturbated every few days, often after I'd left in the morning and she was on the phone with Liam. She thought it was important, particularly in light of what she was doing with me, to share as many of her orgasms as possible with Liam. Her orgasm was something deeply intimate that was reserved for him. \n\nI respected her reasoning, as strange as it was. It made sense to me that keeping something like that private, sharing it only with Liam, helped ease some of the guilt she must feel for everything she was doing with me. And it was at least consistent with her justification for fooling around with me in the first place, that she was only doing it to benefit Liam down the road. \n\nORAL EXAMS\n\nTo my pleasure, but not my surprise, after Naomi felt that she'd mastered the handjob, she wanted to add a new skill to her repertoire. It happened one night while we were lying on her bed, watching TV. When the show we were watching ended, she lifted off her top, which had become her way of indicating that she wanted to \"practice.\" \n\nAs usual, she reached down and fondled my cock through my pajama pants until it was hard. Then she pulled my pants down as I lifted my hips to help make it easier. As soon as my pants were off, though, she moved down to the foot of the bed, between my feet, and slowly crawled toward me, her nipples scraping against my legs. As she crawled toward me, her eyes were locked on mine and she had a devilish grin on her face. I was pretty sure what she was going to do before she did, but the sensation as her mouth enveloped my cock for the first time was still amazing. She proceeded to give a more than satisfactory blowjob, using her hands to assist in the task, as I'd instructed her. She also maintained eye contact throughout, which was incredibly sexy. \n\nAfter a couple of minutes, I was on the verge of coming, and I felt I needed to warn her, in case she didn't want to take the load in her mouth. I groaned, \"I'm gonna come.\" She didn't slow down and, a moment later, I grunted and came in her mouth. She maintained eye contact throughout my orgasm, gradually slowing down. Then she sat up, smiled, and made a showing of a swallowing it all down. \n\nAs expected, after we got dressed and were back in bed, she wanted feedback. I told her, truthfully, that she did a fantastic job, that she did everything I liked from a technique standpoint. \n\n\"How about the end?\" she asked. \"I swallowed it like I'm supposed to right?\"\n\nI looked at her kind of funny. \"Like you're supposed to?\"\n\n\"Yeah, you know, I always heard that you blokes hate it when we spit out the spunk.\"\n\nI laughed. \"Yeah, I suppose. I've had a couple of girls spit it out before. Wasn't that big a deal, but was kind of awkward. But it's not like spit or swallow are the only two options. It doesn't have to go in your mouth in the first place.\"\n\nNaomi looked confused for a second and then seemed to get it. \"Do you mean I could let him shoot it on my face? Like a porno?\" From the way she asked the question, I could tell she wasn't too enthusiastic about this third option.\n\n\"That's one option,\" I replied, \"and I'd be lying if I didn't say that most guys, myself included, would probably find that option very sexy. It's probably not fair, but we're all to some extent conditioned by the porn we grew up watching. But relax, most guys don't expect you to do that, and there are plenty of other good options. You can aim the cum onto some other part of your body, like your breasts or your stomach, or you can just let it shoot out onto the guy's own stomach. I don't know that I can speak for all guys, but I would rather watch the cum shoot somewhere, really anywhere, than have it disappear into your mouth.\"\n\n\"Wow, I had no idea, Jake. You're just a fountain of sex knowledge. And honestly, I'm a little relieved. I never really fancied swallowing it.\"\n\nThe next night Naomi was again eager to practice. She ended up giving me another stellar blow job, this time while I was standing, and she finished me off by aiming my cock toward her breasts. The sight of my cum shooting onto those spectacular breasts was exhilarating. Afterwards, during our debrief, I told her that the key to a memorable blowjob was less about technique and more about context and setting. The most memorable blowjobs I'd ever had, like the one in the dorm room closet, stood out in my mind because they occurred when I wasn't expecting them or in a place that was a little risque. \n\nIn the following weeks, Naomi gave me at least eight more blowjobs, including one in a changing room at the local department store and one in a karaoke booth, much to the shock of the poor waitress who walked in on us mid-blow to see if we wanted more drinks. In the karaoke booth, she surprised me by intentionally aiming my cum onto her cheek and nose, the first time she'd let me come on her face. She seemed proud of herself afterwards, jokingly taking a selfie before she wiped away the cum.\n\nANOTHER KIND OF JOB\n\nAs much as I love blowjobs and handjobs, I was curious what else I might be able to \"teach\" Naomi, so one night, while she going down on me, I decided to tell her about Charlotte, a girl I dated briefly during my junior year of college. Charlotte, like Naomi, was well endowed, and on a few occasions, she used her breasts to get me off, clamping my cock tightly between them. As I began telling Naomi about one of those occasions, she pulled her mouth off of my cock and looked up at me. ",
        "\"Is this your way of trying to get me to use me knockers on ya?\" she said with a tinge of a cockney accent. \n\nI shrugged, \"I'm just a guy telling stories...about titjobs...while you're holding my cock.\"\n\nNaomi let out a sharp laugh. \"Okay, mister 'titjob.' I'm game. I want to learn how to do it.\"\n\n\"There's really nothing to it. You just use your hands to push your breasts together and sandwich the cock between them.\"\n\n\"Like this?\" She reached up and did exactly as instructed. The sight and sensation of my cock sandwiched between such perfect breasts was intoxicating. She moved up and down effortlessly, my cock already slippery from the interrupted blowjob. After a few minutes, I gave in to my impending orgasm and let my cum shoot up onto Naomi's neck and down into her cleavage. She smiled as I came, clearly proud of her first effort. \n\nTHE NANNY CAM\n\nA couple of days later, while I was at Naomi's, my cellphone rang. It was Lynne. I showed Naomi the caller ID before answering, which caused her to raise her eyebrows in interest. Lynne wanted to know if I wanted to \"hang out\" again over the weekend, noting in a mischievous tone that she had \"fun\" last time we hung out. I was friendly but noncommittal, telling her I had to check on something first and would call her back.\n\nWhen I hung up, I looked at Naomi, wanting to gauge her reaction. \n\n\"You don't think I'll be mad, do you Jake?\"\n\n\"Not mad, no. But upset, maybe? You didn't talk to me for three days the last time she came over. And I got the impression that you were giving me these...'outlets'...at least in part...because you didn't want me to need other...'outlets.'\"\n\n\"Look, Jake, there were lots of things going through my head at the time. I was a little...caught off guard...by the whole episode. One night we were cuddling together and the next you were loudly shagging someone else, and I could hear all of it. It was disorienting and got me all up in my own head about sex and my relationship with Liam and whether I'd made a mistake by coming here. But I'm in a much better place now. Honestly. A much calmer place. You should definitely 'hang out' with her. You deserve it.\"\n\nI looked at her skeptically, but she seemed sincere. \"You're sure you'd be okay?\"\n\n\"I'll be fine, Jake. In fact, I'm kind of looking forward to listening in again. I feel like I might actually learn something this time around.\" She paused, as if a thought had just crossed her mind.\n\n\"What?\" I asked, \"what were you thinking just now?\"\n\n\"Oh, I'm being silly, but I wishing for a moment that I could be a fly on the wall, rather than having a wall between us. I could learn so much from watching you two.\"\n\nI laughed. \"Yeah, I'd invite you to sit in the corner and watch, but I doubt Lynne would be cool with that.\" But then I paused, a crazy thought suddenly occurring to me. \"You know, there might be a way...\"\n\n\"What do you mean? What way?\"\n\n\"My sister was telling me about how she was babysitting last year and she realized that the family had set up a 'nanny cam,'...you know, a hidden camera to spy on the people watching their kids. I'm sure they sell those things down at the Seiyu.\"\n\n\"Are you serious? You would record yourself and show me?\"\n\n\"Well, I don't know about recording. I don't want to create a record of anything. But if we could set it up so that it's just a live feed to your TV or computer, with no recording, I think I'd be okay with that.\"\n\n\"Oh my god, Jake. That would be so amazing. I couldn't ask for a better learning opportunity.\"\n\nSo we set about making it happen. I called Lynne back and invited her over on Saturday, and Naomi and I went down to the Seiyu the next afternoon and found a nanny cam that suited our purposes. It looked, outwardly, like a simple digital alarm clock. I placed it on my dresser, which was directly in front of my double bed. We then set it up, and sure enough, from Naomi's laptop, she was able to see a live feed from my apartment, showing my entire bed.\n\nAs Saturday approached, though it had been my idea, I began to have second thoughts. First, it felt a little icky when it finally dawned on me that this would involve filming someone surreptitiously. The fact that we weren't recording anything made me feel a little better about it, but there was still a pang of guilt. But beyond that, the prospect of being watched, while exciting on one level, also made me a little nervous. What if it caused me to have some performance anxiety?\n\nBut Saturday rolled around quickly, and before I knew it, Lynne and I were at dinner. She was very flirtatious throughout dinner and made it abundantly clear that she wanted to go back to my apartment immediately afterward. My nerves built up as we got closer to home, but I still remembered to text Naomi to tell her we were on our way. Her response was just one character: \"!\" \n\nMy nerves peaked as I inserted my key in the door, but as soon as we were inside, Lynne was all over me and my lust overcame my nerves. She pushed me back onto my bed and stood over me, oblivious to the camera directly behind her. She was wearing a low cut, tight fitting blouse and a full length, floral patterned skirt. Taking command of the situation, she reached down and began undoing my jeans, which she then pulled off entirely. My cock was already rock hard beneath my boxer briefs. Having removed my jeans, she crawled back up toward me and pulled my boxers down enough to expose my cock. A moment later, it was in her mouth. As she proceeded to expertly suck my cock, with the assistance of her left hand, I couldn't help but think of Naomi and that her own skills were now close to on par with Lynne's. \n\nAfter a few minutes, I decided to take some initiative. I sat up and gently rolled Lynne onto her back. Then I went down to the foot of the bed and began pushing up Lynne's long cotton skirt. When I got it all the way up, I realized that she wasn't wearing any underwear. I immediately plunged forward with my tongue, finding the right spot and gently circling it. After a few minutes of this, Lynne had become quite vocal and had her hands combing through my hair, pressing my face up against her mound. \n\nAt that point, I took my hand and gently inserted first one finger and then a second inside her. Slowly, I began moving my fingers in a 'come hither' motion, rubbing the front wall of her vagina, hoping to stimulate her g-spot. It worked. After a few minutes of this, her vocalizations and breathing began accelerating rapidly and then she had one of the loudest, most powerful orgasms I'd ever been responsible for, one that left her literally shaking and spasming on the bed for some time thereafter.\n\n\"Good god, Jake, that was incredible,\" she finally said, her voice still shaky, \"I don't know what you did there but I've never come that hard before.\" She let out a deep breath and then looked down at me, noticing my still solid erection. \"Okay, Jake, it's your turn. You've earned it.\"\n\nWith that, she rolled over and reached under my bed, remembering where I hid the box of condoms. Expertly, she ripped open one of them and then leaned over me, sliding it down over my cock in a matter of seconds. The condom firmly in place, she rolled over on top of me, lifting her skirt as she straddled me, then slowly guiding my cock inside of her dripping wetness. Sitting fully upright, she began moving her hips slowly and rhythmically. It felt phenomenal. \n\nAt one point, though, it occurred to me that, with her skirt draped down over us, there was no way that Naomi could see any actual penetration or get a good appreciation for the way Lynne was moving her hips. So I reached down and pull her skirt up over her back, exposing her entire ass to the camera and giving Naomi as clear a view as possible. \n\nShortly thereafter, Lynne reached down and lifted off her blouse, tossing it aside. Underneath, she was wearing a red bra, which she promptly removed, leaving her naked but for the skirt. Her breasts finally free, I sat up and immediately took one of them into my mouth, sucking on her nipple until it was erect. She moaned and put her arms around my neck, pulling me into her. \n\nWe stayed in that position for a while, slowly building our pace. Lynne began to moan again, clearly well on her way toward another orgasm. Then she decided to change things up. She stopped moving and then stood up, letting my cock slip out of her. She climbed off the bed and let her skirt fall the ground, so that she was standing in front of me stark naked, her lithe, slender body a spectacle to behold. After giving me a few moments to soak in the view, she returned to the bed and immediately laid down on her back, spreading her legs wide. With her right hand, she reached down between her legs and began touching herself. Her confidence and obvious comfort in her own skin was enormously arousing. \n\nKnowing what she wanted, I maneuvered around until I was on top of her, in the missionary position. Wasting no time, I plunged my cock back inside of her and she gasped. I began thrusting into her deep and hard, using my arms to prop her legs up high and wide. She began stroking herself more urgently. She also began to breath harder and to bark instructions: \"Faster, Jake...that's right...deeper...fuck me, Jake.\" \n\nThis continued for several minutes until we reached a point where the entire bed was shaking violently and the sounds of our bodies slapping together was surely audible several apartments over. At that point, she finally came again, which she announced loudly. I let myself come too, and then we both collapsed in a sweaty heap on the bed. \n\nAbout an hour later, still naked, we had sex again, this time at a much more leisurely pace from a spooning position. As I lay on my side, sliding in and out of her from behind, I used my free hand to stroke her clit. Though it wasn't nearly as animalistic as our first go-around, we both eventually came again. \n\nTHE RULES CHANGE, AGAIN\n\nThe next morning, Lynne left early to meet up with some friends in Sapporo. She kissed my forehead on the way out the door and said that we \"should get together again sometime.\" Moments later, there was a knock on the door. I was still naked, but I answered it anyway, knowing exactly who it was. Naomi walked straight into my apartment like she lived there, cupping my cock briefly in her hands as she passed. She was wearing her pajama pants and a zip up hoodie. She crawled immediately into my bed, and I crawled under the covers with her, hoping she just wanted to cuddle up and sleep. I was very tired.\n\n\"I was watching the feed, Jake, wondering if you two might have another go this morning. I guess not...unless I missed it? But oh my god, Jake...last night...watching you two...that was unbelievably hot. I have to confess, I came along with you guys. I couldn't help it. That's how hot it was. I just had to touch myself.\" She was talking a mile a minute and seemed borderline giddy. I'd never seen her like this.\n\nAs she was talking, she casually reached down under the covers and started fondling my penis. \"The way she controlled the action, the way she just told you what she wanted, the way she just started touching herself...she was just so...confident. Is that what men like?\"\n\nAs much as I wanted to sleep, the touch of her hand was having its desired effort. An erection was growing. After a pause, I answered her question. \"Yeah, maybe not all men. Maybe some guys like the submissive type, but for most guys - certainly for me - confidence is incredibly sexy. And being overly self-conscious can be a real turn off. Sex is best when both people feel comfortable and uninhibited around each other.\"\n\n\"I also noticed that every time she came, she had help, whether it was your tongue or her hand or your hand. Is that normal? I always felt like if Liam and I had to resort to that, maybe we weren't doing it right or something.\"\n\nI gave her a puzzled look. \"Of course it's normal. Look, I know there are some lucky girls out there who can come pretty easily from just sex alone, but I don't think that's very common. Most of the time you're going to need something else, a tongue, a hand, a vibrator, something.\"\n\n\"Hey, that reminds me, what did you do to her when you...um...went down on her? I've never seen someone come that hard.\" \n\n\"Oh, that's something I learned from a girlfriend in college. Some girls can have a really powerful orgasm if you stimulate the right spot. I've only ever been able to do it with my fingers. The spot's on the front wall of the vagina, just about an inch up.\"\n\n\"Well, I think that's something I'll have to save for Liam, but I'm very intrigued...\" She trailed off as she continued to stroke my now fully erect cock. \n\nAfter almost a minute of silence, she finally spoke up again. \"Jake, one thing that became abundantly clear to me last night is that I still have a lot to learn...and it's going to be hard for me to learn it just by watching. So, assuming it's okay with you, I want to modify our rules...in a pretty big way.\"\n\n\"Okay, how so?\"\n\n\"I think we need to have actual...um...sex...you know...you actually inside of me.\" \n\n\"Are you sure?\" \n\n\"Yes, but here's how it's gotta be. Rule 1: you always have a condom on. Rule 2: I control all the action. I'm doing this to learn the moves, not to get fucked. Your role in this is passive only. Rule 3: no orgasms for me. I'm still saving those for Liam. So keep your hands to yourself and don't try to do anything to get me off. Let me do all the work. Do we have a deal?\"\n\n\"Um...yeah...of course...whatever you say.\"\n\nAt that point, Naomi let go of my cock and reached down under the bed. She came back up with a condom. Wasting no time, she ripped it open, tossed the wrapper aside, and began rolling it down my cock. Then she stood, quickly took off her pajama pants and panties, and straddled me, leaving her hoodie on. She reached back and guided me slowly inside of her. The fact that I never thought I'd ever get this opportunity made it all the more arousing. I'd fantasized about this for months and now it was all happening so unexpectedly. \n\nNaomi smiled once my cock was fully inside of her. Though her rules were premised on the idea that she was just doing this to learn, not for her own sexual gratification, I couldn't help but notice how easily my cock slid inside of her. She was already quite wet. She slowly began moving her hips in a rhythmic, rolling fashion, doing her best imitation of what she'd seen Lynne do the night before. I kept my hands at my side, though the urge to reach up and grab a hold of her hips was tremendous. \n\nHaving had sex twice already in the last 12 hours, I was in no danger of coming immediately, even as Naomi increased her pace. Unlike our prior encounters, Naomi seemed to be deliberately avoiding eye contact, looking away or closing her eyes. I wondered if she was trying to avoid making this more intimate than it needed to be. But then, after few minutes, she looked at me and asked, matter-of-factly, \"how'm I doing, Jake? Is this good?\" \n\n\"Uh...yeah...fantastic. You're sexy as hell.\" \n\nShe seemed to blush for moment. Then she abruptly stopped, stood up, and spun around until she was facing away from me. \"I want to try something different. I believe you yanks call this the 'reverse cowgirl.'\" With that, she sat back down and guided me back inside her, her back and ass now facing me. It took all the willpower I had not to reach out and grab her amazing ass. \n\nShe continued to move up and down skillfully, steadily picking up the pace, as if trying to make me come as soon as possible. After a good five to ten minutes of this, with no sign of orgasm on my part, she stood up again, turned around, and mounted me once again facing forward. This time, once she'd resumed rocking up and down on my cock, she got a mischievous look on her face. Then she reach up and slowly began to unzip her hoodie. As the zipper got down to her breast level, it became clear that she had nothing on underneath it. Slowly, playfully, she continued unzipping it until her breasts came popping out, in all their glory. That amazing sight was finally enough to push me over the edge. \"Oh god, Naomi...\" I said, trailing off as my orgasm gripped me. \n\nNaomi came to a stop, though she was still breathing hard. Then she got up, quickly pulled her clothes back on and said \"that was lovely, Jake. Thank you. I know you're tired. I'll go back to my place now and let you sleep.\" And then, just like that, she was gone. I couldn't help but wonder if she left so abruptly because she wanted to finish herself off in privacy.\n\nOver the next several weeks, we had sex a number of times, almost always in some variation of her on top. We always went over to my place to do it, I suppose because that's where the box of condoms was, but Naomi never suggested that we take any over to her place. \n\nOn one occasion, Naomi suggested that we try it doggy-style, but insisted that I stay perfectly still and let her do all the moving. That instruction proved hard to abide by in practice, as we were both completely naked and I was enormously aroused by the whole situation. It was nearly impossible for me to just stand there on my knees, not moving or using my hands. After numerous minor violations of the rules, Naomi finally realized she was asking too much of me. So she pulled away, turned around, and ripped off the condom. Then she gave me possibly the world's best combination blowjob/handjob/titjob until I finally came all over her breasts. \n\nBREAKING THE RULES\n\nIn mid-December, Naomi and I decided to go together to a house party that another expat, a guy named Toby from New Zealand, was throwing in a neighboring town. He had an entire traditional japanese house to himself, as was often the case when people were working out in the \"inaka\" (countryside). It was a fun party, full of expat english teachers from all over the prefecture. We hadn't intended to stay overnight, but a surprise snow storm (not unusual for that time of year on Hokkaido) ended up making the roads temporarily impassable. So everyone there had to stay overnight. Toby let Naomi and I crash on the tatami floors in a small, empty room upstairs. We had a single blanket to share between us and two small cushions we stole from a couch. We each slept in our underwear, huddled up against each other for warmth. \n\nI awoke, just as the first light was appearing in the sky, to find myself curled up against Naomi, my arm around her and my cock snug against her ass. I had an enormous erection. Groggy and still a little drunk, I instinctively began rubbing my cock up and down the crack of her ass, not thinking about whether this might violate any of her various rules. The movement caused Naomi to wake, at least for a moment, and she instinctively pushed back against my cock. Encouraged, I slid down my boxers and began rubbing my now freed cock against the crack of her ass. She gave no signs of objecting. \n\nI continued like this for several minutes, no doubt hoping that, if I was persistent enough, she might decide to finish me off in some way so I'd leave her alone. What happened next surprised me, though. In a very groggy voice, she just said, \"go ahead, you can stick it in. Just be quick.\" \n\n\"Really?\" I replied, \"but I don't have a condom.\"\n\n\"It's okay, I'm on birth control.\"\n\nNot waiting for her to change her mind, I quickly slid her panties down and lined up my cock. Slowly, gently, I pushed inside. It had been so long since I'd had sex without a condom that I'd forgotten how wonderful it felt. As I grasped her hips and began slowly thrusting in and out, it finally dawned on me that we were violating her second rule as well. I was doing the work and was using my hands while I did it. But she didn't protest. Over the next few minutes, I continued to test the boundaries. Eventually, with my free left hand, I felt my way up and under her shirt, until I was grasping one of her breasts. It was everything I had imagined, so squishy and perfect. ",
        "As I continued to build up speed, thrusting as deeply as I could, I began to get a reaction out of her. It was subtle at first, but before long, I could tell by her ragged breathing that she was very much turned on by what was happening. While I didn't dare reach out to touch her clit with my fingers, not knowing how she would react and not wanting to spoil the encounter, I did change the angle of my penetration, moving my whole body up a bit until my cock was penetrating her very shallowly and the tip was crashing right against the front wall of her vagina. \n\nWithin a minute of me doing this, it was clear it was having some kind of effect. Naomi was breathing very rapidly and her hand reached back and touched my hip, which I took as a signal to keep doing what I was doing. Sensing she was nearing an orgasm, I leaned forward and began to kiss the back of her neck, which was the closest we'd ever come to actually kissing. This caused her to gasp. I then began to nibble her earlobe, which elicited further gasps. Finally, sensing she was on the verge of a spectacular climax, I began whispering in her ear, \"you are so goddamn sexy...you're the sexiest woman I've ever met..\"\n\nBefore I could even finish what I was about to say, Naomi belted out \"oh god, Jake\" and then came harder than I've ever seen anyone come, shaking and spasming and almost convulsing as it washed over her. The sound she made when coming, an involuntary sort of squeal, was everything I'd hoped it would be, and as her pussy clenched around my cock, I came as well, filling her with my cum. \n\nWe didn't say anything for some time, both of us just lying there, trying to catch our breath. Eventually, she spoke. \"I would not have believed that was possible if it didn't just happen.\"\n\n\"I'm sorry I broke the rules.\"\n\n\"Oh fuck the rules, Jake. If that wasn't a learning experience, I don't know what is. And the truth is, all this fooling around without ever coming was making me mental.\"\n\nI smiled. \"So where does that leave us?\"\n\nNaomi took a long while to answer. Eventually she sat up, looked at me, and said, \"I think it means it's time for me to start being honest about the fact that we're having a relationship. I don't know quite what it is yet or where it's going, but it's silly to pretend that you're just teaching me to play tennis or something. I really fancy you, Jake.\" \n\nIt felt enormously gratifying to hear Naomi say that. Until that moment, I didn't realize just how much I'd wanted to believe that I was more to her than some stand-in warm body, more than just some convenient source of knowledge. Although I'd been hesitant to acknowledge it, I had real feelings for her.\n\nI sat up and reached out for her hand. \"If this is some kind of 'relationship,' as you say, does that mean I can kiss you?\"\n\nNaomi smiled sheepishly. \"I don't know, Jake. Kissing is pretty intimate.\" \n\nI smiled as I leaned in, and then we kissed for the first time, very slowly, very delicately. It was crazy to think that we managed to get this far, that we'd done all of the things we'd done, without ever kissing even once. But that was the truth. And now that we were kissing, I realized for the first time what a profoundly intimate act it is. I felt far closer, far more connected to Naomi at that moment than I had during any of the countless sexual acts we'd engaged in up to that point. \n\nWe continued to kiss like that, to \"snog\" as she would say, for at least a half an hour. It was like we were caught up in the novelty of it and neither of us were in a hurry to move on to anything else, despite the fact that we were both still naked from the waist down. But eventually the intimacy and passion of kissing reawakened our libidos. My erection came roaring back, which Naomi immediately noticed. She pulled away just long enough to lift her shirt off and toss it aside. I did the same. Then we were kissing again, both of us sitting on the tatami floor completely naked, Naomi gently stroking my cock with one hand.\n\nThen Naomi slowly turned and rolled over onto her knees, sticking her ass out toward me. She looked back over her shoulder at me with a wicked grin. Within seconds I was on my knees behind her. I lined up my cock and plunged it in all at once. She was already soaking wet, so it went in with little resistance. This time I was able to grab her hips and thrust as I pleased, and I thoroughly enjoyed it. I knew the slapping sounds we were making had to be audible to anyone who was on the other side of the thin sliding walls, but I didn't care, and Naomi didn't seem to either. \n\nAs much as I was enjoying it, though, I missed kissing her. So after a while, I pulled out and rolled her over onto her back. She spread her legs out before me, beckoning me to re-enter her, which I did immediately. I leaned in and began kissing her frantically as I thrust in and out. By now she was moaning pretty loudly. She reached down with her hand and began to help herself along, just as she'd seen Lynne do. After a few more minutes, we were both breathing hard and on the verge of orgasms. I let her come first, pulling my lips away from hers right as she climaxed so I could see her expression. She came silently this time, her eyes wide open and her mouth silently forming the words \"oh god.\" At that moment, I felt my own orgasm coming, and this time I wanted to watch myself come. As soon as I pulled out, Naomi reached down and began tugging my cock with her hand until cum shot out over her belly, some of it even reaching her breasts. \n\nAs I rolled over and lay down beside her, still winded, I said, \"Naomi...you're amazing...whoever you end up...spending your life with...he's going to be incredibly satisfied.\"\n\nNaomi turned to look at me, and from the look in her eyes, I could tell that I had said exactly the right thing. \"Jake, you have no idea how much that means to me. And you also have no idea how much I've learned from you. You've been an incredible sensei.\"\n\n...\n\nNaomi and I continued our relationship, such as it was, for the next seven months, interrupted only by our trips home for the holidays and a week long visit by Liam in the spring, during which I did my best to keep a low profile. Throughout it all, Naomi never broke up with Liam and, as far as I know, they're still together. But from that night forward, there were no more rules. She gave herself over to me completely, and it was the most passionate, experimental, uninhibited period of sex I've ever had. We tried literally everything and were incredibly honest with each other about our likes, dislikes, turn-ons and turn-offs. By the end, we'd become so well-attuned to each other's sexual desires and proclivities that the thought of going our separate ways was difficult to contemplate. \n\nBut life goes on. Both of us had lives to return to outside of Japan. I went to Stanford to start business school. She went back to London to begin her medical training. And other than \"liking\" each other's posts on social media from time to time, we haven't interacted since. But I do have something very special to remember her by. You see, over those last seven months we put that nanny cam to some good use. We recorded ourselves, all the time, always promising ourselves we'd delete it all when we eventually went our separate ways. And while I offered to do so before I left - and would have if she'd asked me to - she told me that I could keep it. She said that it was a gift, that it was her way of saying 'thank you' for everything I'd taught her. In looking back, it's amazing how much trust she placed in me. To this day, I have hundreds of hours of explicit footage of the two of us, any ten seconds of which might well be enough to ruin her marriage and upend her life. But while it's one of my most cherished possessions, something I still look at at least once a month, I've never shown another soul and I never will. \n\nSo instead, I decided to write this story. I've of course changed the names and locations to protect all involved, but everything else is as I remember it. I hope you liked it (including you, \"Naomi\")."
    ],
    "authorname": "Sanomiya",
    "tags": [
        "voyeur",
        "cheating",
        "blowjob",
        "masturbation",
        "romance",
        "handjob",
        "exhibitionism"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-sensei"
}