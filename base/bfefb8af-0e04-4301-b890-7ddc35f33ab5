{
    "title": "Valerie the Magnificent Ch. 06",
    "pages": [
        "My wife Valerie's little \"bon mot\" about the fact that the guy with the big cock was actually the husband of her friend from work set off little alarm bells in my head.\n\nVal was certainly smitten with large cocks, my friend Robbie and her big dildo being good examples of that. Could she be having some other ideas?\n\nI let a few days pass and then brought it up one night when we were both getting pretty worked up in the bedroom. I had the big dildo inside her giving her a nice, slow fuck, since I needed a bit of a breather and she was still ready to go. Wanting to get her good and hot, I was also teasing her clit with my mouth.\n\n\"What are you thinking about, hon?\" I asked.\n\n\"Cocks,\" she answered simply in a faraway voice, indicating that she was definitely getting in \"The Zone\".\n\n\"Anybody's in particular?\"\n\n\"Just big cocks.\"\n\n\"That one you saw the other day, maybe?\"\n\n\"Mmmm. It looks like it might be a good one.\"\n\n\"Has your friend Claire told you about it?\"\n\n\"Not really. She just said it was big.\" Val reached down and grabbed my hand holding the dildo. \"Please fuck me faster. It feels so good.\"\n\nAfter that, she became more vocal and demanded my cock in her mouth. We went into a torrid 69 with me continuing to use the dildo. It only occurred to me later that maybe she'd done it so she wouldn't have to answer questions.\n\nA few days later, I came home from work to find Val lying on the sofa, totally naked. One leg was thrown over the back and the other was on the floor. This gorgeous female looked like every man's wet dream.\n\n\"I need a stiff cock! Know where I can find one?\"\n\nI walked over to her and she immediately reached up and began opening my slacks. Out popped a VERY stiff cock.\n\n\"Look what you brought home for me. What a good husband!\"\n\nWe didn't get around to dinner until well after 9:00 and we ate naked.\n\nVal was zonked after our session, read her current book for about 3 minutes before she fell asleep, so I threw on my bathrobe and went down to my study to turn on the computer. Keying in the special password, I booted up the software that ran my little spy camera. Quite frankly, I smelled a rat.\n\nSure enough, around 2:00 p.m., Val came down to the basement to do something other than the laundry. However, I was in for a bit of a shock. She had company.\n\nA pretty redhead followed her down the stairs: Claire from work, the one whose husband Val had ogled at the gym. Actually, pretty isn't the best word to describe this woman. Claire is cute, cute in the way a pixie is cute.\n\nI'd only met her a few times when I'd picked up Val after work and Claire also needed a ride. If we'd said more than 100 words to each other, I'd be surprised. To be frank, I'd never really looked at her closely.\n\nHer hair was cut fairly short in the front, long in the back, sort of shaggy and slightly over her ears. She's short, not more than 5' and a bit on the thick side through her waist. This is not caused by fat by any means, but her body doesn't have that willowy quality that Val's does. She had on tight shorts, a cropped top and sneakers. If I didn't know better, she could have just come in from a cheerleader practice. Claire has that wholesome look about her. Oh yeah, and a chirpy, happy sort of voice. Val had told me she was 28.\n\nVal went off camera and the mic picked her up rummaging in my work room. \"Now where does he keep that darned key?\" More rummaging... \"Bingo! Mike thinks he's so smart!\"\n\nThat hurt a bit.\n\n\"Now close your eyes, Claire, and promise me you won't peek until I tell you to!\"\n\nClaire did as requested, and the next thing I knew, my wife was dragging out the Sybian. She took off the big dildo attachment and put on the medium size one.\n\nClaire was holding two glasses of white wine and it suddenly twigged in my memory that Val had told me she'd invited her friend over for lunch that day. Seemed like there'd been more than the usual \"girl talk\"...\n\n\"Now open your eyes and tell me what you think,\" Val said, taking one of the glasses.\n\nClaire's eyes got big. \"OH MY GOD! You weren't kidding!\"\n\nJudging from the fact that my very private wife had been talking about the Sybian to her friend indicated that the wine they were holding were not the first glasses.\n\nAs if in answer to my thought, Val said, \"I can't believe I'm showing you this!\"\n\nClaire's eyes twinkled over the rim of her wine glass as she took a sip. \"Can I try it and see if it's as good as you say?\"\n\nVal took a large sip of wine, almost half the glass, then another to drain it. She stood for a moment or two longer as if considering, and then shrugged. \"What the hell. Go for it!\"\n\nAt that point, sitting there watching what had gone on just this afternoon, I had to take my steel-hard cock in hand. Oh shit. This was going to be quite a show.\n\nWhile Val turned around to plug in the Sybian, her friend rapidly shucked her clothes. She hadn't worn a bra and her shorts and thong came off in one swift move, leaving her standing there in just her sneakers and socks. I'd seldom seen anything as fetching.\n\nClaire's bush was the same copper color as her hair, and rather wiry compared to Val's straight pubes. I was getting a great view and what I saw was gorgeous. Some might consider her rear end slightly too large, but Claire is well-muscled and firm, and has curves in all the right places, her breasts full and round, her hips just made for holding on to. Almost all of her body had a sexy sprinkling of freckles, especially those parts revealed to the sun.\n\nI began slowly stroking my cock as I watched.\n\nWhen Val turned around, she jumped in surprise, her face coloring. \"You didn't have to get completely undressed! You could have just pulled your panties to one side.\"\n\n\"I had on a thong, besides I like to pull my nipples when I'm being worked on.\"\n\nThis woman was the complete opposite of my wife. She found it hard to talk to ME about sex and it was never mentioned to outside company. Claire seemed to have no such hang-ups.\n\n\"So what do I do?\"\n\nVal went back into my work room and came out with the bottle of lubricant. Jeez, she knew where everything was. \n\nAfter putting a bit on the dildo attachment, Val said, \"Now, you just sit on it.\" Then she giggled. \"I'll run the controls. Mike usually has to do that for me.\"\n\nClaire knelt down and eased the dildo inside her with a few sexy wiggles of her butt. \"Now what?\"\n\n\"This,\" Val said as she turned on the Sybian.\n\n\"Jesus!\" was all Claire said as a look of amazement spread across her face. She got a faraway look as she concentrated on what she was feeling. \"Those little nubs are fantastic on my clit!\" she said as she began rocking her hips, looking as if she were fucking the machine. \"Mmmm. That's VERY nice! I can see why you like it so much.\"\n\n\"How about this?\" Val asked as she turned the knob that controlled the rotation of the dildo.\n\nClaire's answer was a trembling in her legs and within a minute she arched her back and moaned as an unexpected orgasm struck. This female had a VERY short trigger!\n\nVal turned off the machine.\n\n\"Why'd you do that?\" Claire said with a very fetching pout.\n\n\"I thought you only wanted to see what it was like.\"\n\n\"Are you kidding? I want more!\" Claire picked up her wine glass from the floor where she'd set it. That's when she noticed eyebolts for the restraints attached to the board I'd mounted the Sybian on. \"What's all this for?\"\n\nVal really looked uncomfortable and tried to take a swig from her empty wine glass. \"Ummm...\"\n\nClaire giggled and handed her glass to Val who drained it. She obviously sensed my wife was not comfortable talking about this sort of thing.\n\n\"Now, tell me!\"\n\n\"Ummm... Sometimes Mike, ah, fastens me to the Sybian. It turns him on a lot so I let him.\" (yeah, right)\n\n\"Sounds super kinky. What happens then?\"\n\n\"He either operates the controls and watches me, or he goes upstairs and leaves me to, um, sit on it until he comes back down.\"\n\n\"Really? And what happens?\"\n\n\"I, ah, orgasm...a lot. One time I actually nearly passed out. I couldn't walk straight for days!\"\n\n\"Wow! You guys are way more out there than I would have thought!\" Claire wiggled her hips seductively. \"Think I could try that?\"\n\n\"No. I couldn't!\"\n\n\"Oh come on, Val. Let me try. It sounds like it would be a huge turn-on.\" She looked up at Val and made big doe eyes. \"Please?\"\n\nMy wife stood there for a moment, then went off into my room. She came back a few moments later with all the velcro restraints and dumped them on the floor.\n\n\"I hope I remember what goes where.\"\n\nI watched them figure it all out over the next few minutes. My erection got harder, if anything, as the young girl was strapped in. Several times she asked Val to make the restraints tighter. Both of them were getting noticeably turned on and I remembered how Val had seemed to enjoy tying me up the few times we'd done it. Val the Dom. Even after 23 years, she could surprise me -- and take my breath away.\n\nClaire was also pretty breathtaking. God! She was a sexy little minx and you could tell she knew it. That nubile body was something else, very different from my wife's more statuesque one, but every bit as sexy.\n\nOnce Val had Claire tightly attached to the machine, she sat down on the floor in front of the Sybian. I could tell from Claire's flushed face and ragged breathing that she was very turned on. Val made her wait as she got comfortable.\n\n\"C'mon!\" Claire said. \"Turn the damn thing on!\"\n\nVal took her time picking up the controls. She started with the vibration knob, but only turned it on a little.\n\n\"Val, don't play with me. I need some more.\"\n\nOver the next few minutes I watched my wife toy with her friend, turning the controls up and down to tease her to the brink and then pull her back over and over again. I thought I knew how to work the controls, but Val showed me who was the expert.\n\nClaire writhed and panted, grunted and groaned, sweating profusely as she attempted to drive herself to an orgasm, always without success. When she started to thrust forward to stimulate her clit on the knobbed pad under the dildo, Val calmly got up and swatted her hard in the ass.\n\n\"Don't! Or I'll keep you on the machine for an hour and won't let you cum!\"\n\nClaire looked surprised, but I caught the gleam in her eye. She was really getting in to this.\n\nA good ten minutes later, Val kept the controls up, more vibration than rotation and Claire exploded in a huge orgasm that had her thrusting hard against the machine as she arched her back to get the most feeling from the dildo inside of her. Wordless sounds came out of her mouth as she rode the crest of her pleasure. Val turned the controls down to the point where they were barely on. \n\nAs Claire slowly came out of it, a huge smile broke out on her face. \"Holy shit! That was absolutely incredible! More!!\"\n\nVal considered for a moment, then turned both controls up a bit. Claire immediately started rocking back and forth on the Sybian, the muscles in her legs and butt flexing sensuously.\n\nAs my wife turned the controls up more, Claire began to moan and writhe as the machine worked its magic. It didn't take long for her to orgasm again.\n\nVal put down the controls and rose to her feet. \"I'm going to go upstairs for awhile. Have fun!\"\n\nClaire's expression was rather comical. Even as her body worked up to another orgasm, you could see that she was also concerned about being left alone, knowing that she'd be forced into cumming again and again. \"No, Val, wait! Stay with me!\"\n\nI heard Val's voice as she walked up the stairs. \"Just scream if you need help.\" Then she laughed. \"On second thought, the machine is certainly going to make you scream, so how could I tell?\"\n\nI heard the upstairs door shut.\n\nThe consternation on Claire's face was soon wiped away by her quick rise to another orgasm. After that, they came hot and heavy, and soon the redhead was riding the quest of what seemed like one continuous orgasm. Several times I saw her eyes drop to the controls and it was obvious that she wanted more.\n\nWatching Claire's sensuous ride straddling the machine, her muscles flexing as she strove to give herself as much pleasure as possible, was an incredible thing to watch. At one point she hunched her back, bent over and grabbed the end of the velcro strap holding her right wrist. I don't know how she did it, but she quickly had both of the wrist restraints off and her hands were immediately at her breasts twisting and pulling her nipples to the point that it had to hurt. Judging by her writhing, panting body, the pain turned her on all the more.\n\nWhile watching, my cock was so hard it was twitching with my heartbeat. Finally as Claire screamed out yet another climax, I could stand it no longer. All it took was one stroke and I exploded, sending jets of cum all over myself and the floor. I'd already cum twice with Val earlier in the evening, but the amount of semen that I shot was as if I hadn't had anything for a month.\n\nWith her hands now free, Claire soon had the controls in her hands and turned the machine on farther than I'd ever had it with Val. She was like the damn Energizer Bunny. The girl just kept cumming and cumming, reduced to grunting in time to her forward thrusts. I couldn't believe what I was seeing.\n\nAfter about 25 minutes, Val came back down the stairs. \"How did you get your hands free?\" she asked Claire.\n\nClaire drove herself to one last orgasm, then turned off both controls. Her body was drenched in sweat, her hair matted and her face and chest flushed. I thought she looked quite fetching. My cock twitched in response.\n\n\"Guess you didn't pull the velcro tight enough.\"\n\nThen she did something that completely floored me. Just before getting off the Sybian, Claire looked right up to where I'd hidden the camera just next to a pipe, and she winked.\n\n=============\n\nNext evening, after dinner at our more \"regular\" time, Valerie sat me down in the living room and said she had something to tell me.\n\n\"My friend Claire from work was over for lunch yesterday,\" she began.\n\nKeeping a straight face, I answered, \"I hope you had a good time. I know how much you enjoy her company and have been wanting to have her over.\"\n\nAs a matter of fact, that wasn't stretching the truth. Val DID like Claire a lot, even though the girl was young enough to be her daughter. The store where Val was the assistant manager had hired Claire a few months earlier and the two had quickly bonded for some reason. According to Val, Claire made working at the store just a lot more fun. Everyone liked her.\n\n\"Well, it turned out to be a bit more than lunch.\"\n\n\"What do you mean?\"\n\n\"I guess I had too much wine. You have to understand that Claire is pretty young and quite bubbly. Anyway, I was relaxed and having a good time when our chatter turned to sex. Claire wanted to know if it was hard to keep things interesting when you've been married as long as us. She's only been married for 4 years and already she's seeing things cool off. She just wanted my perspective having been married for so much longer.\"\n\nVal seemed a bit 'stuck' so I prompted her. \"And?\"\n\n\"Well...Please don't be mad but I probably told her more than I should have.\"\n\n\"You mentioned Robbie?\" I asked, rather astonished.\n\n\"Of course not! I, ah, told her about the Sybian...and I guess I did too good a selling job, because she, um, asked if she could try it.\"\n\n\"And you let her?\"\n\nVal put her head down and nodded. \"I told you I'd had a bit too much wine and we got quite giddy. You know how it is. It was all in fun, and when she asked, I just shrugged and thought, why not?\"\n\nI played along. \"How did you get it out?\"\n\nVal moved closer to me and put her head on my shoulder and cuddled my arm. \"Mike, dear, you aren't all THAT hard to figure out. I knew you'd put the key to that storage area you rigged up in a logical place.\"\n\n\"So what happened?\"\n\n\"She rode it.\"\n\n\"Did she like it?\"\n\n\"I'd say so.\"\n\n\"Did you ride it?\"\n\n\"Of course not! I promised you I wouldn't unless you're around.\"\n\nThat made me feel pretty good, and to be honest, I was quite glad that Val had brought Claire downstairs. That was one hell of a video clip I'd been treated to the night before!\n\nI stroked Val's arm. \"So tell me more. Did you watch?\"\n\n\"Only a bit at the beginning, then I left her to her own devices for about half an hour. You should have heard the racket! I'm just glad the basement windows were shut!\"\n\n\"So what did you do while you were upstairs? Darn a few socks?\" I teased.\n\nVal playfully elbowed me in the side. \"What do you think I did? Could you listen to something like that and not get turned on?\"\n\n\"So that's when you got yourself so wet.\"\n\n\"Then and after she left. I was actually pretty shocked that she let go the way she did. I couldn't have done that! But it really turned my crank, let me tell you!\"\n\nMy hand roved down to Val's left breast where I began teasing the nipple. Her areola was already puffy and the nipple hard.\n\n\"Mmmm, that's very nice, hon,\" she sighed.\n\nWithin a few moments, Val had slid over and was lying across my lap so I'd have better access to her body. Sliding my hand down Val's stomach, I undid the snap on her jeans and slid my hand in. Her clit wasn't hard to find, hot and sticking out from between her labia as it was.\n\n\"Mike, can I ride the Sybian tonight?\"\n\n\"You feel you need to be punished?\"\n\n\"No, I just want to ride it. You know, the way Claire did.\" She reached under her and rubbed my stiff cock through my slacks. \"I'll make it worth your while.\"\n\nAnd with that, we were off to the races. Val was as good as her word...\n\n=============\n\nTwo days later, I caught Claire on tape again. This time Val let her try The Rider and the show was even more wild -- and Val stayed to watch.\n\nClaire had her clothes off almost before she was finished coming down the stairs. This time she didn't ask to be strapped in and Val didn't offer, which was a good thing for them but bad for me, because the keys that I'd left out in plain sight weren't the ones that would unlock the shackles.\n\nYeah, it was a cheap shot, but I had to get some of my own back. Besides, I'd been coming home early in hopes that I'd catch them at it again. It would have been fun to see them try to explain away what had been going on with Claire or Val stuck there.\n\nPart way through the fun, the phone rang and Val left to answer it. Claire who was resting a bit after a Force 10 orgasm immediately looked up at the camera and ran her tongue over her full lips in very sexy way.\n\nAnd this time she spoke. \"Hi, Mike. I hope you're enjoying my little shows. Does it turn you on? Does it make your cock really hard? Do you have to stroke it while you watch?\"\n\nAt this point I WAS pulling at the old pecker and I had to resist removing my hand in embarrassment over her teasing.\n\nClaire began pulling on the handle again, driving the dildo into her pussy. \"God! This feels so good! Valerie is a very lucky girl to have such a generous and supportive husband. And don't worry, Mike. This will be our little secret.\" As the sound of Val opening the basement door could be heard in the background, she added, \"Your wife wants my husband, you know.\"\n\nAnd with that, the redheaded witch went nuts on The Rider. If I'd thought she things were hot before, I hadn't seen anything yet! Val sat on the sofa watching the whole thing, and while she was mostly off camera, I got the distinct impression that she had begun playing with herself. Certainly, Claire was looking in that direction a lot as she rode herself to several more violent orgasms. Watching the proceedings, I managed to cum twice myself. Afterwards, I sat there for a long time doing a lot of thinking.\n\n=============\n\nAbout a week later (and two more visits from Claire, but no opportunity for her to speak to the camera), Val and I were talking at dinner.",
        "\"I'd like to invite Claire and her husband Dave over for a barbecue the weekend after this coming one if you're going to be free.\"\n\nMy heart immediately started pounding. I knew what that could mean. Four times during the past week I'd been forced to jerk off because of thinking about Claire. Every chance I got, I sat in front of the computer watching my 'Claire Collection'. Her sexuality had me mesmerized.\n\n\"Yeah,\" I answered, trying not to show too much, \"that would be fine.\"\n\nOver the next four days, Val and I were both on edge, both thinking about the same thing and neither of us being able to easily bring it up. I wasn't about to admit that I'd been spying and I knew that Val couldn't bring herself to ask me to let her enjoy another man once again. It was kind of funny. Now and then one or the other of us would start to bring it up and then chicken out.\n\nFinally, on Friday night, we were lying in bed just starting to get warmed up for a little fun. Valerie's hands had my cock up and throbbing and I was getting her good and hot with my mouth and hands.\n\nLooking up from between her legs, I asked, \"What's going through that pretty little brain of yours?\"\n\n\"Cocks,\" Val answered dreamily, \"and how good your tongue feels.\"\n\nI sucked her clit into my mouth and rolled my tongue over it. Val's response was electric as she arched her back and moaned.\n\n\"Anyone's cock in particular?\"\n\nVal didn't answer for so long that I thought she'd decided not to, but then after a long sigh, she said, \"That guy I saw a few weeks ago, Claire's husband.\"\n\n\"So he has a nice cock?\"\n\n\"Mmmm, yes...\" Val's hips started moving sinuously as I stuck a second finger into her pussy. \"Oh! Keep doing that! It feels SO good!\" \n\nI stopped moving my fingers and Val put her head up, looking down at me, questioningly.\n\n\"How do you know what his cock looks like?\"\n\nVal smirked guiltily. \"Um...Claire showed me a photo of it.\"\n\n\"When?\"\n\n\"The day we went to look at Davey at the health club.\"\n\nI began moving my fingers in and out, messaging Val's G spot. Her hips started moving to my rhythm.\n\n\"And you've been thinking about it ever since, haven't you?\"\n\nVal dropped her head back and sighed. \"Yes. I haven't wanted to tell you because I didn't know how you'd take it.\"\n\n\"Do you want to fuck him?\"\n\n\"I'm not sure...\"\n\nAs I worked her G spot more, Val's hips started really rocking. I stopped moving my hand to see what she'd do, and sure enough she began thrusting up and down on my fingers, a sure sign that she was super hot. \n\nWith my free hand I reached under the pillow where I'd put her Big Blue Buddy. Removing my other hand from her pussy, I touched the tip of the dildo to her vaginal opening, set it buzzing and asked, \"Would you like to use this tonight? You can imagine that it's Davey's cock.\"\n\nIn answer, Val rolled her hips downward and engulfed the first two inches of the dildo. \"I've been doing that the past two weeks,\" she giggled. \"Haven't you guessed?\"\n\nI pushed another two inches inside her. \"I knew that something was making you horny. It had to be a big cock, and unless Robbie's gotten in touch with you, it had to be Davey.\"\n\nSupporting her body with her elbows and feet, Val began fucking the dildo as I held it steady for her, caught in the soft light of our bedside lamp, her skin glowed with a fine dew from her exertions. Val had never looked more beautiful and I wished I had the video camera set up.\n\nShe worked the fake penis in and out for several minutes, panting in her heat, gasping every time it hit bottom.\n\n\"Would you mind if I fucked him?\" she asked as she began thrusting harder.\n\nI'd been waiting for a moment like this. \"Would you mind if I fucked Claire?\"\n\nVal groaned loudly in answer and began fucking so hard that I was having trouble holding on to the dildo. Gasping in time with her thrusts, she managed to get out, \"I think...she wants...to fuck you...if that's...what you're asking.\"\n\nValerie had reached the point of no return and deep in her throat she began moaning uncontrollably, gasping, grunting, as she drove herself onward. \"Oh God, oh God, oh God! I'm going to cum. Pull on my clit, Mike! PULL ON IT NOW!!\"\n\nI did as she asked. Her \"little dick\" slick with her juices, my fingers slid up and down, pulling as I jerked her off.\n\nVal screamed and went rigid, the dildo buried deep in her pussy. Clear liquid began gushing out around the shaft, soaking my hand and the bed. Every time I moved the dildo, she cried out and more liquid flowed. Finally, after almost a minute, Val collapsed back on the bed and lay there not moving, except for occasional little tremors.\n\nI was actually a little concerned, but seeing her chest rising and falling as her pulse slowed, I relaxed. Laying down next to her, I kissed her damp cheek. She stirred and smiled, eyes still closed.\n\nEventually, Val turned on her side and looked at me. \"That was abso-FUCKING-lutely incredible!\"\n\n\"Look at my shy girl swearing like a sailor! Your parents would be shocked!\"\n\n\"My parents would have fucking well been shocked a lot sooner than that last statement!\"\n\nShe guffawed, a big boisterous sound, quite unlike the quiet little laugh she had when I first met her. Little Valerie was certainly coming out of her shell.\n\n\"I didn't think I would ever stop,\" she said more seriously. \"My God! That was AMAZING! Claire told me what it was like but I didn't believe her. Wow!\"\n\n\"Claire can do that?\"\n\n\"She's managed to squirt once or twice. She thought I'd be able to do it pretty easily because my clit is so, um, big. See, you have to---\"\n\n\"She's seen your clit?\" I interrupted, stunned.\n\nVal blushed. \"Well...yeah... She was curious when I told her about it.\"\n\nI propped myself up on my elbow and said, \"All right, wife! Tell all.\"\n\nThe second time Claire had come over, specifically to try The Rider, they'd sat upstairs and had a glass of wine or two (or three, if I knew Val and being uptight). Somehow the talk turned to cocks (big surprise knowing what my wife was thinking about) and eventually to clits. When Claire winnowed from Val the size of her \"little cock\", she naturally wanted to see it. The surprising thing was that Val went along with it. Even more surprising was the fact that to truly see how big it would get, Val had to play with it.\n\n\"Did that turn you on?\"\n\n\"A little. It was certainly weird sitting there with my jeans down to my ankles, legs spread and having this other woman peering at my privates!\"\n\nInteresting...\n\n\"So how to you know that Claire wants to fuck me?\" I asked casually.\n\n\"She's been asking all sorts of questions about you.\"\n\n\"What kinds of questions?\"\n\n\"Just general things.\" Val smiled wickedly as her hand grabbed my cock. \"How big your cock is, what kind of a lover you are, how many times a night you can get it up. You know, the usual things girls talk about.\"\n\nVal's other hand joined the first and between them they did marvelous-feeling things to my shaft. Before long, I was hard as steel. Val pushed me over onto my back and mounted me.\n\n\"Truth be told, Claire wants to play with a smaller cock. Her husband is just a bit too big for her to handle if they're not careful, so she feels she can never really let go. Your cock is just the right size for her.\"\n\n\"You've shown her photos of my cock.\"\n\n\"Well, yeah. It was sort of, 'you show me yours and I'll show you mine'.\" She rotated her hips as she moved up and down my erection, a feeling that's hard to describe. \"So, are you up for it?\"\n\n\"I do find her 'interesting'.\"\n\n\"Enough to do her? Tell me, husband, do you want to stick your cock into my friend and make her cum?\" Val asked as she bent down and kissed my nose.\n\n\"Well, yeah -- if she and you would like me to do it.\"\n\nVal rolled her eyes in disbelief at my comment as she continued to rock back and forth slowly. My cock glided in and out of her wetness, her muscles beginning to clench deliciously as she forced them closed after the reaming she'd given herself on the dildo.\n\n\"This is just what I need,\" she sighed. \"No matter how much I think of big cocks thrusting in and out of me, that's just a kick. I know I'd get bored with it pretty soon. Your cock, however, really does things to me.\"\n\n\"How is that?\"\n\n\"You're attached to it, you big lunk!\"\n\nWith that, she began fucking me in earnest and it didn't take much time until I was cumming long and hard. It only took my hand reaching down between our bodies to touch her clit for her to do the same.\n\nLater, as we were drifting off to sleep in the guest room (our bed having been drenched by my darling wife), I asked Val sleepily, \"How does Dave feel about all of this?\"\n\n\"He doesn't know. You see, Claire wants me to seduce him.\" "
    ],
    "authorname": "val wrangler",
    "tags": [
        "toys",
        "masturbation",
        "voyeur",
        "bondage",
        "swinging"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/valerie-the-magnificent-ch-06"
}