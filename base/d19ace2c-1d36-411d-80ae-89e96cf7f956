{
    "title": "The Sultanah Ch. 09",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 9 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem. In Chapter 6, Varis faced a challenge to her authority and seduced a noblewoman to maintain it. In Chapter 7, Varis defeats the raiders and comforts a peasant girl. In Chapter 8, Varis is briefly engaged and kills her fianc\u00e9 for betraying her.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem); Kukla (a noblewoman). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nPart V: The Wedding\n\nChapter 9: Rehearsal\n\n\"Welcome, Sultanah Varis I, to your Harem,\" Tutuklu of \u015eehir, my beautiful, naked Pezevenk (or senior member of the Harem) stated as I walked through the secret passage and entered the vaulted chamber where my concubines were housed. There were 111 other members of the harem scattered about the great chamber, just as there always were. They were swimming in the fountain, lounging on the couches, and drinking wine. As was the custom, only the Pezevenk acknowledged my entrance, the other girls simply ignored me. \n\nI returned the favor. Despite my natural inclination to stare at the beautiful women and revel in my ownership of this place, I was far too focused on the task at hand. It was the first time I had gone to the Harem since my first visit and this time I had come without Cin. I was biting my lip and moving my hands nervously. But it was not about the actual visit, it was about what the visit represented.\n\n\"Hello Tutuklu,\" I said and my Pezevenk nodded slowly. I looked around the room briefly, but not really sure what I was looking for.\n\n\"It is certainly a pleasure to see you back. We were all so delighted with your first visit. The girls who were able to serve you have been lording their experiences over the other, quite jealous girls,\" Tutuklu said in a joking manner, \"Luckily, this is a completely fresh shift. None of the girls present today were with us the last time.\"\n\n\"That is good,\" I said, but I could not manage to make my voice sound normal. I was quite distracted.\n\n\"How may we serve you?\" Tutuklu said, sensing my unease and seeking to do her job as my Pezevenk. However, this was the question I had been dreading. I did not really want to tell her what I wanted. I ran my hand through my hair and looked at Tutuklu. I turned and saw a couch sitting near the edge of the fountain. Without speaking, I walked over and sat down. There were two beautiful, naked women splashing each other playfully just a few feet ahead in the water, trying not to look at me from the corners of their eyes. Tutuklu had sensed that I wanted her to follow and a few moments later, she was sitting on the couch next to me. She did not speak, but looked at me, waiting for me to talk. I fidgeted in the chair for a few moments, trying to get my thoughts together.\n\n\"Have you heard?\" I asked finally, leaning forward on the couch and putting my face in my hands. There was a long pause.\n\n\"Heard what?\" Tutuklu asked. I sighed.\n\n\"I appreciate you efforts in maintaining the illusion that this is a separate place, outside of the world. But I know you speak with Cin on occasion. Eunuchs or someone must drop off food somewhere. You are not completely isolated. What I want right now is forthright conversation,\" I said. Tutuklu looked a bit shocked. Perhaps more than shocked, it might have been terror.\n\n\"Surely, Cin or...someone...this place is all I really know, I cannot give you any sort of advice,\" she said nervously. I reached over and placed my palm on her bare knee. I felt the heat of her body and the smoothness of her skin and we were both soothed slightly.\n\n\"I won't ask you any public policy questions, Tutuklu. And if you do not know something, simply say it. You will not be punished.\" The girls swimming in the water had stopped moving, they were listening. Tutuklu shot them an angry look and they move farther out into the water and commenced playing again. Tutuklu looked back to me and nodded.\n\n\"How may I serve you, Sultanah?\" she asked.\n\n\"Have you heard?\" I asked.\n\n\"That you are to be married in three days?\" Tutuklu asked and I let out a low sigh. I felt a bit nauseated and looked up at the water swirling above me on the ceiling. I wished I could open the fountain up above me, to feel some air from outside.\n\n\"Yes, do you hear the identity of my fianc\u00e9?\" I asked now. There was a long pause and I turned back to look at Tutuklu. She was biting her lip and her eyes would not meet mine.\n\n\"Your sister, Nislani,\" she said, noticing my gaze. I nodded my head. This was the source of my turmoil. I had made the decision to marry my sister in a sort of bolt of hellish, inspirational lightning. I could find no one to marry me and I desperately needed an heir. My sister also needed to be married off and I could not actually afford a dowry. Not with the war on. Further, the Empire had a long tradition of sibling marriage that had existed, successfully, for thousands of years. It had only been abandoned when Gunes was abandoned and the Empire's fortunes had faded with the tradition. Now that I had re-embraced Gunes, it was natural to reassert the ancient tradition. This would reinforce my commitment to Gunes, it would separate me from my enemies in Dusman, it would provide me with a wife, and it would eliminate the possibility of another spinster sister. It was an elegant solution to several problems. And, as the Sultanah, it was an easy decision. Once I had conceived of the idea, there was really no way to stop it. \n\nIn fact, it seemed that everyone agreed with the decision. The Inner Council had been relatively easy to convince. While Cin had been nervous at first, mostly regarding Nislani's suitability as my consort, she had grown enthusiastic with my decision to embrace the Ancient traditions. In fact, she seemed a bit embarrassed that she had not thought of it first. Got and Agiz followed Nislani's lead. Kardes seemed shocked by the decision, but never said anything against it. I assumed her keen sense of realpolitik told her this was the only move to make. Arkadas seemed relieved, as if she knew that the marriage would be a mere formality given my hatred of Nislani and that she would remain first in my affections. I figured she was right. Soyguncu and Saygili knew that it was not their role to question me in the sphere of my personal life.\n\nThe Executive Assembly had likewise been easily controlled. My allies, Lord Sadik and Duke G\u00f6stermelik, who had embraced Gunes wholeheartedly, agreed with my decision, even if they seemed to exhibit some personal distaste. Sir Sak\u015fak\u00e7\u0131 had been drunk when he was informed of the tradition and stated he could not hold an opinion until he spoke with his wife. I had no concerns. More surprisingly, Hain and \u00d6rnek had also supported my decision. I supposed that they also liked the sharpening of ideological lines. My decision to throw my lot in irrevocably with Gunes and to take such a wildly taboo action, they felt, would only help their side to eventually triumph. Their physical disgust at my decision was evident, but their desire for power overcame whatever scruples they might have. The Peers in general had followed their leaders on the question, with only a few minor lords expressing any objection. The people, whatever their personal views, no longer saw fit to question any of my actions. As far as they were concerned, I was Gunes reincarnated and infallible.\n\nTherefore, only two people seemed completely opposed to the union. The first, of course, was Nislani. As soon as I announced my decision she had rejected it out of hand. She had claimed I was simply making fun of her and that I had no intention of going through with it. When she saw I was serious and that other people took my suggestion seriously, she became even more intransigent. She locked herself in her room and threatened to kill herself rather than go through with the action. A few hours later, hungry, she had emerged undaunted. Even now she was claiming that she would take the red dress being made for her wedding (she was actually being measured on the last details at that very moment) but that she would never go through with the ceremony. She promised to call me all sorts of names at the wedding and further pledged that she would mean every word of it.\n\nThe final person opposed to the marriage was me. While, from a Sultanah's point of view, there was really no question about it, I was no solely the Sultanah. I knew that this action would solve several of my problems, but it seemed like such a horrible manner of correcting a political situation. I did not want to marry my sister, especially with that sister being Nislani. She thought I was cruel and cold, I thought she was childish and dull. We could barely stand to be in the same room together, let alone be married. Further, I had not entirely given up on the idea of romance, even if I was willing to marry for politics. This decision definitely foreclosed that possibility. I was constantly running up arguments in my mind for why this decision was terrible and why I had to call of the wedding. But each time I did so, the part of my brain that was the leader of my people and existed for more than just myself, would intrude. It would knock down the arguments, one by one, leaving me with the necessity of my actions. \n\nThe most effective argument I had given myself had actually lead me here, to the harem. Beyond the issues of romance and temperamental compatibility, there was a mechanical aspect that had to be considered. I was not marrying my sister simply to have a romantic or even platonic companion. The goal of our marriage was clear: to produce offspring. The problem, of course, was that in order to produce offspring, I would need to have sex with my sister. In fact, it was part of the ancient marriage tradition that I consummate the marriage with my sister on the first night. Witnesses would be present to ensure the validity of the marriage and to serve as oath-keepers if it were ever challenged. But could I do it? Even if my mind knew that I had no choice, that I had to have sex with Nislani, could I actually go through with it? I didn't want to. Regardless, I argued with myself for a long time until finally, I had come to a decision that had led me down into the harem. These thoughts were swirling in my head as I sat on the couch next to my Pezevenk.\n\n\"Tutuklu, you have had a child, have you not?\" I asked. Tutuklu's eyebrows furrowed and she nodded.\n\n\"Yes, a daughter, Fahi\u015fe. She is actually out in the water now,\" she said and gestured out towards the fountain. In the center of the fountain was a young woman around my age who looked remarkably like a younger version of Tutuklu was wearing a loose fitting skirt and no top and walking languidly through the water. Tutuklu smiled at her daughter proudly.\n\n\"Is...\" I said, finally reaching towards my ultimate purpose in arriving here, \"Is she my father's daughter?\" I asked. I looked more closely at the lithe, pretty girl in the pond. She did not look like me or anyone else in my family. Tutuklu shook her head.\n\n\"No. I was pregnant with Fahi\u015fe when I arrived here. She grew up here and entered the harem when she reached the age of 18,\" she said. I felt myself slightly disappointed, and then felt embarrassed and a bit disgusted by that disappointment.\n\n\"But there are women here who are my father's daughters correct? I have...half sisters in this place?\" I asked, my mouth going try and my throat clicking. Tutuklu nodded, and I wondered if she understood where I was going.\n\n\"Many. You father visited here often before your mother put a stop to his visits. Many of the women in the harem are descended from your father, though I do not believe they would count as your half-sisters. They are your property as much as I am,\" She said deferentially. Suddenly a thought popped in my head. I looked at the beautiful Tutuklu and then, looked back at her daughter.\n\n\"Tutuklu,\" I said, \"If, as your Sultanah...\" I knew what I wanted to ask, but it suddenly felt embarrassing. Wrong. Then I thought about my wedding in three days, and I realized that I did not have a strong grasp of right and wrong. Or maybe that right and wrong were different for a Sultanah. I proceeded, \"If, as your Sultanah, I was to order you to make love to your daughter, what would you do?\" I don't know why I wanted to know the answer to the question but I desperately did. Could Tutuklu do her duty? She gave me a slightly pained look and then gazed at her daughter. She blushed slightly and then turned back to me. After a long pause, she spoke.\n\n\"As a member of the harem and as a Pezevenk, I have seen my daughter do...things in training that most mothers would probably never see. I cannot say I have relished those experiences, but I have done them with a happy heart. I would not seek out an opportunity to make love to my daughter and I do not desire it. But, if you were to order me to do so, I would do as my Sultanah commands. I would make love to my daughter and I would enjoy it, as you wish,\" she said. Each word came from her slightly tortured and I knew that when she said she would 'enjoy' it, she was speaking for my benefit. In short, she was doing her duty now and would do so in the future. I felt both saddened and galvanized by this response. Saddened because what it meant for my future. And also, because of something I felt just then. Some part of me that I did not totally understand felt a sudden flash of brief excitement. A sexual thrill. But I pushed this idea aside quickly and with guilt. Instead, the parts of me that dealt with responsibility and honor felt elated. This was the sort of solution I was looking for, a way of looking at my duty as being simply an administrative task and Tutuklu's response pushed me on to my next question. \n\n\"Are any of my half-sisters present? And if so, is her mother also present?\" Tutuklu looked relieved that we were no longer talking about her daughter and she scanned the room. For a few moments, she was silent, though I could see her lips moving slightly. Finally, she began nodding.\n\n\"Yes,\" she said and I felt my stomach do a flip and my muscles grow tight, \"Your...half-sister as you call it, Yar\u0131m and her mother Metres are both present.\" It seemed that everything was in place.\n\n\"Is she...attractive?\" I asked, my voice catching in my throat.\n\n\"Yar\u0131m?\" Tutuklu asked and I nodded, \"She is a beauty. As are most of your father's daughters (and all of his legitimate daughters).\" I wanted to acknowledge the compliment but I could not. My heard was humming in my chest now and I felt like I was gasping. The moment had arrived. I looked around the room, trying to find the right spot. Finally, I found it.\n\n\"Tutuklu,\" I managed to say, \"Please gather Yar\u0131m and Metres and take them over there,\" I pointed to a distant corner of the harem chamber. There was a four-post bed in the corner with a massive canopy, making essentially a closed area within the room.\n\n\"Yes Sultanah,\" Tutuklu said and then she rose from the couch and began to walk away. Oh a whim, I stopped her.\n\n\"Tutuklu,\" I said and she turned and looked at me, \"fetch Fahi\u015fe as well.\" I said. I saw the pained look once again cross my Pezevenk's face. She did an excellent job of mastering her emotions and soon her tranquil look returned.\n\n\"Yes Sultanah,\" she said, sounding slightly more wooden than before. I decided that I would reassure her.\n\n\"Do no worry, you will not be required to sleep with your daughter,\" I said, \"I have other things in mind.\" Tutuklu looked slightly relieved, nodded, and then went about her task. Now I rose as well and made my way over to the small bed in the corner.\n\nI moved quickly over to the location. I thought that I could feel the eyes of the harem on me as I moved and, for some reason, it made me uncomfortable. I felt like they knew what I was doing, why I was doing it, and that they did not approve. I did not like this feeling but I also welcomed it. To a certain extent, this was what I was trying to cultivate. And to overcome.\n\nAfter a brief walk I was standing outside of the bed. It was actually larger than I had anticipated, almost as large as the massive bed in my own bedroom. The canopy, which hung down to the floor on all four sides and covered the top of the bed, was a thin, pink material that was somewhat see-through. I pushed through the gap in the canopy, climbed onto the bed, and closed the canopy behind me. The bed was incredibly lush with large, pink pillows and silky purple blankets heaped on it neatly. I crawled into the middle of the bed and laid down. The fabrics seemed to wrap around me and I felt slightly relaxed, despite myself. I had not slept well of late, and it felt good to lay down.\n\nBefore I had a chance to truly begin to relax, I could hear movement outside of the bed. I looked through the fabric of the canopy and I could see the silhouettes of four people standing outside. They were not speaking, but seemed to be waiting for me. \"Tutuklu, is that you?\"\n\n\"Yes Sultanah,\" was the response. I suddenly felt that I was not ready for this, that I could quit. But it was too late now, how could I stop this?",
        "\"Would you please come into the bed? Leave the others there for now. I must speak to you alone,\" I said. Without another word, Tutuklu spread open the canopy and slipped naked onto the bed. She crawled across the vast fabric until she was close to me. \n\n\"How may I serve you, Sultanah?\" she asked. Something in her voice indicated that she was a bit confused about what was happening. Finally, I could not hold back anymore, I had to tell her the plan.\n\n\"You will instruct the other three women outside to disrobe. Then you will ask Metres and your daughter Fahi\u015fe to join you on the bed. You three will sit together at the foot of the bed and I will speak briefly with Metres. Then you will order my half-sister into the bed. You, Metres, and Fahi\u015fe will then watch as I have sex with my...with Yar\u0131m. This will be my trial run for my wedding night,\" I explained.\n\nI remember where this idea had come from. I had been thinking about the fact that I would need to have sex with my sister in order to consummate the marriage. I had a fear that the time would come and I would be unable to act (it was only slightly more intense than my fear that the time would come and I would do it). I wanted a test to ensure that I would be able to do it, something that would allow me to back out before it was too late if I could not. But I could not think of any way. I certainly wasn't going to sleep with my sister before the wedding night. \n\nI had refused to share my fears with anyone, but Cin had obviously noticed my intense discomfort. She had suggested that I go to the harem, to let off some steam before my wedding night. She had not suggested my current course of action. But when she said, \"remember, you do not have to love your sister. Treat her no differently than you would a member of your harem,\" that the idea came to me. The inspiration to have my half-sister's mother watch (as well as another mother and daughter pair) had just occurred to me. It would help me replicate the awkwardness of the consummation ceremony on the wedding night. Although, as Tutuklu called Metres and Fahi\u015fe into the bed, it suddenly seemed like a much less clever idea. \n\nThe two women crawled into bed, also naked. As I said before, Fahi\u015fe looked remarkably like her mother, though younger. The same lithe form, the same high breasts, the same olive skin, even the same pink slash between her legs. Metres was around the same age as Tutuklu, perhaps a little younger. Despite this, she did not look quite as appealing as the Pezevenk. It was not that she was unattractive, in fact for a slightly older woman she was quite pretty, she just lacked Tutuklu's possessed, dignified air. Metres was slightly shorter than Tutuklu, maybe 5'6. She had black hair that was pulled back in a tight bun. Her face was open and warm (though it looked slightly nervous now) and she had an angular nose and wide lips. Her breasts were very large, but only sagging slightly with age and her nipples were large and pink. Her body was curvy with a slightly narrowed waist and a large bottom. Her legs remained shapely and her feet were small. She maintained a small patch of dark black hair above her cunny, though it was well-controlled.\n\n\"Please, sit at the foot of the bed, Metres in the middle,\" I said, my voice sounding shaky and uneasy. The women nodded and obeyed my commands. Soon, the three women were seated in the proper location. Metres sat in the middle her legs grossed in a manner than spread her cunny wide. Tutuklu and her daughter sat on either side of her. I don't know if they planned it or if it was part of the training, or if mother and daughter were simply so very similar, but Tutuklu and Fahi\u015fe sat in the exact same manner. This gave their appearance a distinctly symmetrical and attractive appearance. They propped themselves up on one arm, leaning in towards Metres with their legs folded over one another elegantly off to the side. I saw the way their pert breasts pressed against the flesh of their arms as they tilted their heads to the side, letting their long hair drape over their shoulders.\n\nI wanted to stop and admire their beauty, but I saw the ill-concealed anxiety in Metres' eyes and I decided to push forward. \"Metres,\" I said, \"The girl outside, is she your daughter?\" My voice sounded more commanding than I thought possible and Metres reacted with studied precision.\n\n\"Yes,\" she said, \"Yar\u0131m is my daughter.\" The woman's voice was low and seductive, but it sounded trained. I wonder what she normally sounded like, how she wanted to sound.\n\n\"How old is she?\" I asked sharply. It felt good to place myself in control here, I reminded myself that I would be in control at the wedding as well.\n\n\"20 years,\" Metres responded quickly. My father had stopped going to the Harem 16 years earlier. \n\n\"She was born here? How long have you been in the Harem?\" I asked both questions at once. I trusted Tutuklu, but I wanted to get this information from the mother's mouth.\n\n\"She was. I was born here as well. I have never left,\" she said and I was a bit surprised. It was rare for a family to have several generations live entirely within the Harem. It was rare for the requisite skills and beauty to pass so many times.\n\n\"Who was your father?\" I asked, intrigued.\n\n\"The Sultan, Kral III,\" she said, almost continued speaking, but I raised my hand. My grandfather was her father. She was my brother's half-sister. \n\n\"And who is Yar\u0131m's father?\" I asked. Her eyes grew wide and she looked at Tutuklu. The Pezevenk nodded slowly and encouragingly.\n\n\"The Sultan, Kral IV, your illustrious father,\" she stated flatly. My father had, accidentally or not, continued the ancient tradition of Gunes as well. He had coupled with his sister. \n\n\"Therefore,\" I said, my mastery of the situation not quite enough to stifle my nerves any further, \"Yar\u0131m is both my cousin and my half-sister.\" Metres shook her head and looked nervous.\n\n\"We do not place ourselves in that position,\" she stated, \"We recognize our position below you...\" she looked nervous. I wondered the source of her concern, I had raised the issue. As usual, Tutuklu sensed my concern and addressed it.\n\n\"We sisters of the Harem,\" she said, \"are familiar with stories of the past. Certain Sultans have decided upon their ascension to dismiss their harems. Or dismiss part of their harems. Including their father's bastards. It is difficult for a woman who has known nothing but the harem. She is often made a common street walker. It is a fear many have had since you took the throne, though your previous visit eased some concerns.\" Tutuklu spoke easily. She already knew my plan.\n\n\"That is not my intention. This will remain your home and your daughter's home at least as long as it remains mine,\" I said calmly, smiling at Metres who looked relieved, \"though you may like what happens here less than expulsion,\" I said nervously. Metres looked slightly concerned at that, but did not speak. \"Tell me this,\" I added before she had a chance to think on it too deeply, \"Is your daughter a virgin?\"\n\n\"A virgin?\" the woman asked, her brow knotting.\n\n\"Has she been fucked?\" I asked. Metres looked helplessly at Tutuklu and shrugged.\n\n\"What else would she be, Sultanah Varis? She has had the training, she is not unskilled. But your father...he never came here. There is no...It is impossible,\" she said. I raised my hand again.\n\n\"I did not intend to trouble you, your answer is sufficient,\" I said. I had known she was a virgin, but again, I wanted to hear it come from her mother's mouth, \"You must now watch as that status is taken from your daughter. I will steal your daughter's virginity. I will take my sister's virginity. You will watch. And this mother and daughter will watch as well,\" I said, pointing to Tutuklu and her daughter. An awkward silence descended on our canopied bed. I sat in it for a while, soaking in the discomfort, wondering how I would react.\n\n\"Do you wish for Yar\u0131m to enter?\" Tutuklu asked after a while. I shook my head.\n\n\"No, first I must be disrobed,\" I stated, \"Tutuklu, I want you and your daughter to crawl up here and disrobe me.\" Tutuklu and Fahi\u015fe moved as if they had been shot up by springs. They were so used to following commands that they didn't even think, they simply acted. Both women rose quickly onto their hands and knees on the bed. They began to crawl across the fabric expanse. They looked up at me as they moved, their full breasts swinging below their serene faces and their asses high in the air. Once again, they moved in unison through choice, training, or inclination. I was intrigued by the idea of looking at a beautiful spring morning on one hand and then, on the other, the same location on a full summer evening and realizing that while one was more uncertain and the other more mature, they were equally alluring in their own way. \n\nIn a few moments, they were on either side of me. As I had noticed before, it seemed that elegant disrobing had been one of the many skills imparted to the Harem. Without speaking to one another, or even really taken notice of one another, their hands flew over my body lightly. I barely felt as their palms and fingers skittered across my thigh or touched briefly on my nipple. They did not so much lift me as they encouraged my movements into the most economical motion so that, in a matter of seconds, I lay naked on the bed, my clothes dropped out of the canopy of the bed. Tutuklu and Fahi\u015fe knelt on either side of my hips, facing towards one another and waiting for my next order. I looked down at my body, laid out on the bed. It was tauter, more tanned than it had once been. My actions were making me more fit and less included to sit and eat indulgently. I looked good. But I noticed that, between my legs, my cock hung low and tight against my body. Despite the beautiful women around, I was not aroused. While I had taken on a commanding air, I was quite nervous still. Maybe more so that before. \n\nI don't know what compelled me to take my next action, to make my next order. I had promised Tutuklu that her capacity would be to watch. I had no intention of going back on my promise. Further, I didn't really know what I was trying to prove. But I thought, if I could just see this happen, if I could see it and know that it was not disgusting or fatal, maybe I could go through with this. I believe that maybe this would calm me.\n\n\"Tutuklu, lean forward. You as well Fahi\u015fe. I want you to kiss one another. Not as mother and daughter but...as sisters of the Harem,\" I said, using the phrase Tutuklu had tried. I heard Metres on the far side of the room take in a sharp breath. Both Tutuklu and Fahi\u015fe turned to look at me, shocked. Despite their usual willingness to do anything I ordered, even before the words spilled full-formed from my lips, their natural aversion to the action had overridden them. Fahi\u015fe's cheeks were red and her mother looked like she felt betrayed.\n\n\"I...\" Tutuklu began, but then stopped. She lacked the words to give defiance, but it was clear that this was what she desperately wanted to offer. I reached my hand up closest to her and placed it on her thigh. I felt the warmth of her skin under my hand and felt her trembling. I felt that same trembling inside of me and I knew I was chasing the right feeling.\n\n\"I promised you something and I will not breach that wall. But I need this. Do this, and I will forever be in your debt,\" I stated. Rather than ordering or blustering, as I certainly could have within my rights, I beseeched her as a person. I confirmed my promise and respected her aversion. She sensed this difference and, it seemed, respected it. She nodded slowly and then turned to face her daughter. Fahi\u015fe turned as well, looking at her mother nervously, her eyes wide.\n\n\"It is okay Fahi\u015fe,\" Tutuklu said in a voice that was different than her normal tone with me, it was the way she spoke with one she truly loved, \"We will trust the Sultanah and do our duty.\" She said. Fahi\u015fe nodded uncomfortably, but it was clear from her motion that she had given up her will. She cast her lot in with her mother, and let Tutuklu take all the responsible actions.\n\nAnd, now that she had decided to act, Tutuklu took those actions quickly. She leaned forward, over my body and lifted her hands. Her right hand (the one closest to me) reached forward and rested gingerly on her daughter's hip and her left hand reached up, grazing across her daughter's cheek and then coming to rest on Fahi\u015fe neck. Fahi\u015fe followed her mother's lead. Her left hand reached forward and rested on her mother's wrist. Her on right hand reached forward and rested on her mother's thigh. She leaned in as her mother pulled her gently on the back of her neck.\n\nThe two women paused. It was likely only half a second, but that time seemed to stretch out for an interminable period of time. Both women had their eyes open and they were looking at each other intently. Fahi\u015fe's eyes showed both fear and an underlying trust in her mother. Tutuklu's eyes showed intensity that seemed to combine both an intense love for her daughter with an overarching desire to do as she was ordered. In a moment, that pause was broken, both women closed their eyes as the same time, and leaned forward.\n\nFahi\u015fe instinctively tilted her head slightly to the side and I watched as her lips met and then sank into Tutuklu's lips. I heard a low moan escape from one of them as their lips fused together. I saw the muscles in their arms and legs tense as they touched. For a moment, their lips were simply pressed together, the soft pink strips of flesh resting on top of one another. But it was clear that whatever invigorating feeling that someone feels with a first kiss was not absent here. In fact, it seemed that the effect was greater than they expect. I saw a shiver run up through both of their bodies and, in the same instance, I saw their lips begin to move. At first they simply moved in opposition to one another, pushing more fully and trying to sink more deeply into the kiss. \n\nThey both groaned now, but as they did so, their mouths open. Without hesitation, their tongues spilled forth and found each other in the space over my body. I watched as their tongues, mother and daughter, fell over one another and lapped at one another. I watched as Tutuklu pressed her tongue into her daughter's mouth and then watched as Fahi\u015fe returned the favor. Their hands clenched tightly on one another, but somehow their bodies grew limper, like they were melting into one another. Their tongues grew bolder, slipping around one another's lips and tasting each other decadently. Either they were trained exceedingly well in the art of affecting passion, or they had actually released themselves into the sensations they felt.\n\nThe exhilarating sensation that seemed to envelop mother and daughter was not limited to the participants. I watched the proceedings, awestruck. At first, I had merely been shocked by what I saw. Despite the fact that I had precipitated it and had some idea of what it would look like in my mind, the effect was far more powerful that I had expected. The strength of the taboo and also the passion it aroused was greater than I could have ever expected. The shock faded quickly, but the excitement remained steadfastly behind. I admit that I enjoyed what I saw. It was no simply the fact that I would gain pleasure from watching any two beautiful women kiss one another, it was excitement from the fact that these two, mother and daughter, should not be acting in this manner. The taboo itself, was the draw. I had, perhaps, known this deep inside of myself before I saw Tutuklu and Fahi\u015fe together, but I could only acknowledge it now, in the full grip of my passion. And, in embracing the feeling, I noticed something different. I looked between their bodies and down towards my legs. Between my thighs I saw my cock growing hard, rising up to meet the mother and her daughter.\n\nMy eyes followed the tip of my cock up, rising to watch the women once again. They were growing more wanton now. Perhaps it was simply their training taking over. Maybe it was something else. Their tongues moved thickly, tasting one another with abandon. Their heads moved more quickly, trying to gain leverage to feel more of one another. They were moaning loudly now in time with their caresses. These, too, were growing more intense. I watched as their hands began to move on one another, stroking arms and hips, even bellies. Their motions became so emphatic, so loosed from control, that something they had no quite intended happened. Fahi\u015fe leaned in more fully towards her more, running her hand toward her mother's elbow. But, as she did so, Tutuklu turned slightly. The result, was that for just a briefest breath of a second, Tutuklu's nipples grazed against her daughter's nipples. I watched it from my location as if it were in slow motion, the touch of the sensitive, now erect, nodes at the ends of their breasts.\n\nInstantly, everything stopped. It was like a switch had been thrown. The two women, at the exact same instant, seemed to recognize that some border had been crossed. Or, more accurately, that they had been crossing the line all along and only now came to terms with it. They jerks their heads back quickly, breaking their kiss, and their hands fell instantly to their sides. They both looked down, not daring to gaze into one another's eyes. \n\nWhile the mother and daughter had stopped their actions, the excitement had not faded for me. If anything, my interest had grown. Trained concubines, blushing and feeling ashamed. Somehow, that was almost as thrilling as the kiss had been. My body felt like it was one fire and my cock was now fully erect, straining hard at my body. I felt ashamed of the feeling I had, but this shame was completely covered over with excitement and desire. In fact, that shame seemed to add to the intensity, to make the excitement I felt more acute and deeper. For a brief moment, a vision of my sister, Nislani, flittered through my head. I saw the shape of her body and also the outline of my distaste for her. Was there something there as well? Something I could use when I needed it? I didn't know, but I was ready for the test.\n\n\"Thank you both,\" I said, and both women jolted slightly, \"Please return to your places. And call Yar\u0131m.\" Both Tutuklu and Fahi\u015fe returned to their spots next to Metres. They both looked a bit disheveled and uncomfortable, like they had been possessed and then returned to their changed bodies. Metres looked slightly terrified, but her cheeks were also flushed with arousal. I knew that I was not the only once excited. I knew that even Tutuklu and Fahi\u015fe were contending with the reactions of their bodies.\n\n\"Yar\u0131m,\" Tutuklu said woodenly, pulling me out of my consideration of the situation, \"You may enter.\" All eyes turned to the canopy of the bed and listened as the footfalls of our last companion made her way to the bed. Surely, Yar\u0131m had heard what was spoken of beyond the canopy and knew what to expect. If she did not desire it, she had been trained well enough to comply anyway. The canopy split open and Yar\u0131m climbed into the bed. In a few moments, she was upright, naked, on her knees next to Tutuklu. Her appearance took my breath away.\n\nIt was not that she was beautiful, although she was undoubtedly that. Tutuklu had been right. I could see a resemblance to her mother. They were both basically the same height and their skin and hair was the same color, although Yar\u0131m let her grown long and lay in a thick ponytail. She also had the same open face, slightly large nose, and generous mouth. Moreover, I saw in Yar\u0131m's delicious body, the taut curves that must have served her mother well in the past. Like her mother, Yar\u0131m had large breasts, those hers sat up high on her chest. Her body tapered down slightly more than her mother and her stomach was thinner. Yar\u0131m, like her mother, had very wide hips and a large ass. However, Yar\u0131m's large ass was almost impossibly firm, sitting up high behind her like a shelf below her back. Like her mother, she had a small v-shaped patch of short, dark hair over her cunny. She also had her mother's shapely legs and small feet. ",
        "All of this was very appealing to me. But that was not what seemed to thicken the air around me. No, as Yar\u0131m looked up, I found myself gazing directly into her eyes. They looked nothing like her mother's gray, mournful eyes. Instead, it was like looking in a mirror. Her eyes were exactly like mine. If nothing else (and certain other features did imply it), I would have been able to tell the family resemblance from the eyes. This girl was, undoubtedly, my sister. Almost the exact same age and from the same father. The only difference between us was the identity of our mother. And that gave me the right to order and the obligation for her to obey.\n\nI felt a slight thrill at these various realizations as Yar\u0131m stopped and looked at her mother. I felt the same excitement I felt when I watched Tutuklu and Fahi\u015fe embrace. I had the power to make something happen, something that should not happen. And that was, Gunes help me, and arousing feeling. More importantly, as I looked at Yar\u0131m, I saw the family resemblance but none of the family baggage. I did not see my hatred for Nislani there, no dread at having to do...something with my flesh and blood. I knew the taboo was there, but this was my sister in only a formal sense. She was...and she wasn't. Somehow, that made it easier. In fact, it made it feel necessary. I not only could go through with this, I wanted it. I wanted to feel that taboo exhilaration I had experience vicariously with Tutuklu and her daughter. Moreover, I had a somewhat surprising feeling that I had not expected. After the anticipation of committing a taboo action for so long, I was anxious to simply have it over with. I was ready and I couldn't wait any longer.\n\n\"Sister,\" I said and felt gratified when Yar\u0131m looked up, \"Come to me now. I desire you.\" Yar\u0131m took a moment and looked back at her mother and Tutuklu beseechingly. Clearly the word \"sister\" had thrown her off. But the two older women, while rattled, found no trouble in maintaining their discipline. They did not react to the younger woman's gaze and gave a clear indication that she was to act. Yar\u0131m looked back towards me, her face showing more determination and less confusion, as if she was fortified by the actions of her mother and Pezevenk.\n\n\"Right away, Sultanah,\" she said in a trained, sultry voice. She then dropped down onto her hands and knees on the bed, her large breasts swaying against one another, and began to crawl towards me.\n\n\"No. Stop,\" I said forcefully. Yar\u0131m stopped instantly and looked up at me. She appeared nervous, wondering how she had angered me. I was not angry, but it was important that I maintain the correct mindset. \"Do not call my 'Sultanah' in this bed. When we are enclosed in this canopy, if you need to address me, you will call me sister,\" I said. I told myself that this was essential to ensuring that this test, this preparation for my wedding, was an effective inoculation against the natural revulsion to incest.\n\n\"Of course...sister,\" Yar\u0131m said softly. I felt a shiver run down my spine and my hard cock twitched in my lap and I wondered how much my explanation for my actions was enough. How much of this was for 'practice' and how much did I just like the idea of committing a taboo? I shook these thoughts aside as Yar\u0131m began, once again, to crawl towards me. She was, of course, well-trained, and she slinked towards me rather than rushed. I saw her breasts rub against her arms and her large, well-built ass rock back and forth as she moved. \n\n\"Stay on your hands and knees,\" I ordered, \"crawl up here so that you are straddling my legs, I want your hands on either side of my hips.\" I had not really planned out where I was going or what I wanted. There were certain ritualistic sexual acts that were a part of the wedding consummation but I was not prepared for those here. In fact, in my heart of hearts, I had believed I was going to balk before this point. So, I just decided to go with what felt right at the moment. \n\nYar\u0131m nodded slowly, and kept moving. In a few moments, she was in position. She was high up on her hands and knees with her legs spread quite wide. Her warm knees were actually touching, though just barely, my calves. Her hands were likewise touching my body, her thumbs just grazing my hips. Her breasts were hanging down over my cock and I could feel the heat of her cunny over my knees. I could smell the light perfume that Yar\u0131m had applied to her body and it made my body quiver with anticipation. My mouth grew dry. This might have been a task I had to complete before my wedding, but there was no reason why it could not be a pleasurable experience.\n\n\"How may I serve you now, sister?\" Yar\u0131m asked, still tripping slightly on the final word. I smiled at her. I turned my head to the side slightly and looked at the other three woman, sitting a few feet behind Yar\u0131m's ass and watching. Then I turned back and looked at my half-sister. Now was the time to further heighten discomfort, to make everyone extremely aware of the events that were going to transpire and to put myself in a position where I should desire to walk away. I kept waiting for something to break inside of me, to finally accept that I could not do this.\n\n\"Sis,\" I began, \"Have you been trained to suck cock?\"\n\n\"Yes,\" Yar\u0131m said instantly and I saw her eyes, just for a moment, gaze down at my cock.\n\n\"And do you believe you are skilled at it? Can you suck cock well?\"\n\n\"I believe I would be excellent at that task,\" Yar\u0131m responded, and I could hear real pride in her voice.\n\n\"Do you want to suck a cock, sister?\" I asked. Yar\u0131m paused for a moment and again I saw her try to catch a glimpse of my cock from the corner of her eye.\n\n\"Yes,\" she responded at last and I thought I could see some redness rising in her cheeks.\n\n\"But you've never actually sucked one, right?\"\n\n\"No,\" she responded.\n\n\"And this is the first one you've ever actually seen?\"\n\n\"Yes it is...sister,\" Yar\u0131m said and I nearly laughed with pleasure. I could tell she was slightly uncomfortable, but she was doing her duty and trying her best to fulfill my wishes.\n\n\"Then how do you know you are good at it?\" I asked. Yar\u0131m's eyebrows knitted, as though she were trying to solve an impossible equation. I decided to push forward. \"Did your mother tell you that you would be good when she watched you train?\" I asked. Yar\u0131m looked for a moment like she wanted to turn around, but did not. I found that, rather than heightening my own discomfort, I was becoming more enveloped in my arousal, more excited. \n\n\"My mother never watched me train. I never watched her. That is the common custom here,\" Yar\u0131m responded. A reasonable custom to be certain.\n\n\"Do you think your mother would be proud of you if you sucked cock well?\" I asked.\n\n\"She is proud when I do my duty, so she would be,\" Yar\u0131m said with certainty, though I could tell she was uneasy with the topic. I nodded slowly. I reached my hand up under my body and wrapped my fingers around the shaft of my cock. Yar\u0131m did not respond, waiting for orders. My cock felt exceptionally rigid and hot in my hands and I pulled it up slightly. After a moment, I felt the tip of my cock press against the edge of Yar\u0131m's breast. My half-sister jumped slightly.\n\n\"Let's make your mother proud,\" I said finally, \"Why don't you suck your sister's cock while your mother watches? Then she can see you do your duty.\" While I spoke, I rotated my hand around in my lap, making my cock circle around on the flesh of Yar\u0131m's breast. \n\n\"If that is your wish Sultanah,\" Yar\u0131m said, her voice coming out slightly shaky and uneasy.\n\n\"Sister,\" I corrected.\n\n\"As you wish, sister,\" Yar\u0131m said apologetically. With that, she began to lower herself down slightly and to rock back on her hips. The tips of my cock pressed deliciously against her body as she moved. In a few moments, I felt her soft, warm ass settled down onto my shins and I felt her voluptuous breasts press against the tops of my thighs. I could feel her hard nipples pressing into my skin. Yar\u0131m's hands moved from off of the bed, the left one pressed flat against my hip and then slide down against my ass. The right one moved draped across my thigh and poked at my fingers, which were still wrapped around the shaft of my cock. I quickly released myself and my hard cock flopped back and slapped my taut belly. Yar\u0131m didn't hesitate, in a moment, her right hand replaced mine around the shaft of my cock. Her palm felt silky smooth and her grip was tight, but comfortable. I suppressed a small moan.\n\n\"Does it feel like what you expected?\" I asked. I could hear Yar\u0131m's breath coming raggedly from her throat and she did not speak for a few seconds.\n\n\"No,\" she said finally, \"It is harder than I thought, and warmer.\"\n\n\"Find out if it tastes like you imagined,\" I responded quickly. I could actually feel Yar\u0131m's heartbeat through her massive breast. It was a rapid fluttering against my thigh and I knew she was nervous. I did not know if it was because she was excited or disgusted, but her reaction was enticing for some reason. Yar\u0131m pulled my cock back so that it was facing directly into the air. She opened her mouth slightly and moved her neck up so that her lips were hovering over the tip of my cock. In a moment, the tip of my cock disappeared into my half-sister's mouth.\n\nIt was instantly apparent that, despite her lack of practical experience, the training provided by the Harem was exemplary. Yar\u0131m's thick, hot tongue instantly found its way to the top of my cock. After a few seconds at lapping at the tip and swirling around wetly, Yar\u0131m's tongue grew rigid and began to probe and taste inside the folds of my foreskin. I heard her moan as she tasted me. I groaned as well and my fingers involuntarily grasped at the blanket covering the bed.\n\nBut Yar\u0131m was hardly finished. It seemed that now that she was acting, the training had taken over entirely. After coating the tip of my cock with her slick saliva and massaging my foreskin with her tongue, she opened her mouth more widely. I watched as she began to press her face down towards my stomach. As she did so, she moved her hand away from my cock, no longer needing it to keep my shaft in place. I watched as inch after inch of my cock began to slip into Yar\u0131m's dripping wet mouth. Her tongue was not idle. Even as my cock began to slip into my half-sister's throat, it swirled around on my cock thickly, covering it in saliva and squeezing my shaft in a warm embrace.\n\nI was completely frozen by the pleasure I felt and the speed that the inexperienced concubine displayed. In just a few seconds, I felt Yar\u0131m's nose pressing into my belly and I felt her chin settle down on my aching, swollen balls. But she had nose roughly shoved my cock into her throat, she had slipped it in so easily and so warmly, I was shocked to think she had never done this before. \n\nAnd she wasn't done. Her tongue continued to swirl around on my cock and then slipped out over her lower lip. My cock drove even deeper into her throat and I felt her tongue pressing into my scrotum and probing at my balls. For the first time, she made a slight choking sound and it seemed that she was having some difficulty in fitting the whole thing inside of her mouth. Her eyes shot open now just as I was looking down at her. I had wanted to see the look of her lips, stretched around the circumference of my cock and I had not been disappointed. But, I could scarcely believe it when I saw my own eyes, watery from choking, staring up at me from my own lap. My half-sister was taking my whole cock in her throat.\n\n\"Oh shit!\" I moaned as I recognized this fact. It was no longer possible to keep up any semblance of the fiction in my mind that this was some sort of chore. This was just the pure pleasure of sex. In fact, it was better than most sex, because it was so much more depraved. Yar\u0131m pulled back slightly, letting my cock slide back between her lips so that only the tip remained inside. She then easily slammed it home once again, burying the tip of my cock in her throat and probing her tongue into my balls. \n\nWhile this was an unbearably pleasurable sensation, I still needed more. While I had been telling myself before that I wanted to heighten the discomfort, I now admitted to myself that I wanted only to heighten the intensity of the taboo. While Yar\u0131m began to bounce up her throat up and down on my quivering cock, I turned my head slightly to the side and looked at the three women at the base of the bed.\n\n\"Aunt Metres,\" I said, addressing her for the first time by her unofficial title, \"Can you see your daughter sucking my cock?\" I asked loudly. I felt Yar\u0131m's body tense against me as she heard me address her mother, but she was too deep in her actions now. I could feel the heat of her cunny against my legs and I knew that she was enjoying her work. She kept going, kept swirling her tongue around on my cock and letting her tongue lap at my balls. I was focused on Metres. As I watched her I saw her face contract slightly with surprise that I had addressed her. She looked briefly at the Pezevenk for support and then answered honestly.\n\n\"I cannot see much from my vantage point,\" she said.\n\n\"Do you see your daughter's cunny lips? Do you see her asshole?\" I asked, imagining what her view must be. My last word had come out more of a squeal than an actual word as Yar\u0131m's throat closed around my cock.\n\n\"Yes,\" came the simple response from the girl's mother.\n\n\"Do you like them? Are they beautiful,\" I asked now, my hands gripping so tightly on my blanket that my knuckles turned white. I could feel my legs shaking under Yar\u0131m's body and I could barely breathe.\n\n\"My daughter...is a beautiful woman,\" Metres managed to say. \n\n\"Are you happy you get to see her suck her first cock,\" I said, my voice coming out in a high-pitched wheeze. My hips were now bucking involuntarily as Yar\u0131m's tongue continued to swirl around on my shaft and balls. She almost seemed to have no need to breathe, as she kept my cock buried in her throat for long periods of time.\n\n\"Yes, it is a pleasure to see she can perform her duties well,\" Metres said, but it was unclear if she meant it or if she just wanted to please me. I didn't care. I threw my head back on the bed, thrusting my hips up into my half-sister's face. I could feel that I was losing control. I had been too excited and Yar\u0131m's touch was too skillful. I was rapidly approaching an irresistible release. I turned, one last time, and looked at Metres' red but beautiful face.\n\n\"Do you want me to cum in your daughter's mouth, to fill her throat with my seed? Don't speak of duty, speak of desire,\" I asked desperately. Metres looked distraught and I could feel her daughter's hands tightening on my hips.\n\n\"Yes,\" Metres said after an unbelievably long pause, \"I desire it,\" she said defeated. And in that moment, I realized that she hadn't just been trying to please me. She was ashamed because she was enjoying the view. This was too much for me to handle and, finally, I felt sweet relief. \n\nIt was pleasure, but it was so much more than that. I had not been able to think about anything but my impending marriage for weeks and that particular worry had really only served to cover up a series of other equally or more important concerns for which I did not yet have a solution. The world seemed to be falling apart around me but now, I felt just one minute of complete, absolute, perfect release from everything. My cock was buried in my half-sister's throat and the only thing I could focus on was the radiating waves of pleasure that soaked through my body and jet-pull of my seed as it splashed into Yar\u0131m's throat. \n\nAs the feeling began to fade, I groaned loudly, and collapsed, totally limp onto the bed. I opened my eyes and looked down at Yar\u0131m. I could see her eyes, so much like mine, looking back up at me serenely. Her cheeks were bulging with my seed, some of which had leaked out of her lips. Her body was trembling all over, but she kept my cock buried in her mouth, her tongue was still swirling around on the sensitive tip of my cock, because I hadn't ordered her to stop.\n\n\"Sit up,\" I gasped, \"Take my cock from your mouth, but don't swallow my seed.\" Yar\u0131m instantly complied with my order, sitting back quickly in the bed so that she was squatting over my shins. She kept her lips tight on my cock as she slid it out of her mouth, ensuring that all of my seed remained sealed in her lips. My thighs felt cool as Yar\u0131m's large breasts rose off of them. Now that she was sitting up, her large breasts bounced slightly and I could see her nipples were hard. In fact, her cunny was actually dripping down onto my knees and it was clear that she had enjoyed her first duty as a member of the Harem. She continued to stare at me with my own eyes and her cheeks continued to sag under the weight of my seed.\n\nNow that she was sitting up, I could see slightly between her legs. I noticed a few drops of liquid glistening at the opening of her cunny, but I was not thinking about that now. Instead, I was looking through her legs, seeing Metres' toes on the bed. I smiled deviously as I caught my breath, I knew what I wanted.\n\n\"Yar\u0131m,\" I said, \"Turn and you open your mouth, show your mother the seed I placed there.\" Yar\u0131m quickly turned her head, facing her mother. I could tell she opened her mouth and could see the interest on the faces of the three women behind her. Even her mother seemed intrigued by the actions, despite herself. It gave me an idea.\n\n\"Fahi\u015fe, Metres, Tutuklu\" I said forcefully, \"Lay down on your backs right where you are.\" The three women did not hesitate and in a moment they were laying shoulder to shoulder on the bed. Their breasts splayed out of their thin chests and their hair draped together on the mattress, and I found that my body had sufficiently recovered that I was beginning to grow aroused again.\n\n\"Yar\u0131m, go deposit my seed in Fahi\u015fe's mouth. Don't kissing her and don't spill it,\" I ordered. Yar\u0131m nodded her head obediently and then quickly turned. She raised her knees and kept from landing on my shins and then she started to move back towards the other three women. I watched her large ass bounce as she moved away from me. \n\nI could sense her eyes run across the three women on the bed as she moved herself into position. In fact, I saw her pause briefly as she gazed at her own mother. I felt a sick thrill at this and I realized how deeply I was into this action now. I felt no shame, I was past that now. In fact, I felt pride at my devilish mind as Yar\u0131m stopped on her knees at Fahi\u015fe's side. Yar\u0131m bent over the slightly younger girl, hovering her mouth a few inches above Fahi\u015fe's face. Fahi\u015fe looked up at her, anxiously. After a slight pause, Yar\u0131m attempted to speak.\n\n\"O-hen, er mouf,\" she said, but even this attempt was too much, a large blob of pearly seed slipped form her lips and landed thick of Fahi\u015fe's chin. Fahi\u015fe's body trembled at the impact. But, I watched as her mouth opened quickly and her tongue darted out. She drug the bottom of her long pink tongue down along her chin, scooping up the seed neatly and then pulling it into her mouth. As she did so, she left her lips open. \n\nNow Yar\u0131m bent over slightly further, still keeping her mouth a short distance from Fahi\u015fe's face. I watched as my half-sister's lips spread apart slightly. A small dribble of seed and saliva appeared and the center of her lips. I saw Yar\u0131m push slowly with her mouth and a thin, sticky stream of juices began to pour from her mouth. It hung in the air for a few second, just a thin stream. Then, Yar\u0131m pushed harder, a larger blob of seed and speed dribbled from her mouth. It quickly traveled the distance from Yar\u0131m's mouth and I saw it land thick and slimy on Fahi\u015fe's tongue. Fahi\u015fe moaned loudly as the liquid landed in her mouth, but she kept her lips parted, letting more and more of the salty seed land on her tongue.",
        "\"Do you like that your daughter is spitting my seed into Fahi\u015fe's mouth,\" I asked Metres. \n\n\"Yes,\" the mother panted.\n\n\"Do you like that your daughter is tasting my seed for the first time, Pezevenk?\" I asked.\n\n\"Oh Gunes yes,\" Tutuklu sighed. I appreciated her increased ardor for the action. I saw Fahi\u015fe shiver when she heard her mother speak.\n\nIt took several seconds for the whole load to drip in one long line from Yar\u0131m's mouth to Fahi\u015fe's. Yar\u0131m was very careful, ensuring that each drop slipped from her mouth and landed on her companion's tongue. Fahi\u015fe was equally conscientious, working hard to making sure that the thin strand of cum stayed in a pool in her mouth. She moaned loudly while she tasted it, clearly enjoying her first experienced with her master's seed. Finally, Yar\u0131m stuck her tongue out, forcing the last of my seed into Fahi\u015fe's mouth. I did not hesitate or give them time to think, I kept pushing the action forward.\n\n\"Fahi\u015fe,\" I said sharply, \"Get up on your knees and give that seed to my Aunt Metres, just like you received it.\" Yar\u0131m moved back slightly, giving Fahi\u015fe room to rise up on the bed. Fahi\u015fe moved quickly, jumping up to her knees so quickly that I saw her hard nipples bouncing on her smaller breasts. Her cheeks were also now bulging with seed. Soon she was leaning over Metres mouth, reversing her previous position. Metres mouth was open. \n\nFahi\u015fe was less careful that my half-sister had been. She opened her mouth more widely that Yar\u0131m had done and a large blob of seed poured from her mouth and landed in a lump on Metres' lips and mouth. Metres was now tasting the seed that I had deposited in her daughter's mouth. Her saliva added to the salty flavor that the mother now tasted. Fahi\u015fe kept spitting rapidly into Metres mouth, overwhelming her with my seed. But Metres struggled bravely, taking as much of my salty seed as she could handle and pushing loose droplets into her mouth with her finger. In just a few seconds, she was done.\n\n\"Now, Metres, give the seed to your Pezevenk,\" I ordered. Once again, the actions duplicated. Metres quickly jumped up onto her knees and leaned over Tutuklu's head. Tutuklu opened her mouth wide and prepared for my load. Metres, like her daughter, was controlled, spitting out a thin line of ejaculate into Tutuklu's mouth. Tutuklu, like her own daughter, moaned wantonly as the first dribbles of seed landed in her mouth. That seed included the saliva of many other women now, including her own daughter. Her lips seemed to be shaking, like she was begging for more. Metres kept her steady pace, but before, long, her mouth was full of the seed.\n\n\"Now you sit up,\" I ordered Tutuklu. She was quickly on her knees facing me, as were all of the other women. They all had read cheeks and were breathing deeply, clearly affected by the atmosphere under the canopy. I rose up on my knees as well, feeling my breasts bouncing. I was feeling the same effect. \"Open your mouth,\" I ordered, \"Let me see the seed.\" Tutuklu quickly complied. I saw her mouth coated in pearly liquid and white saliva. It covered her tongue and her teeth were swimming in it. In fact, some of the seed dripped from the corner of her mouth, landing thickly on her left nipple. \n\n\"Swallow it,\" I ordered. With that Tutuklu closed her mouth and gulped. She opened her mouth again, revealing a deep red mouth, a pretty pink tongue, and nothing else. The other women gazed at her jealously, no doubt wondering what it felt like to have the slimy ball of my juices slip down their throats and land warm in their bellies.\n\nRegardless of what they were thinking, the seen I had just witnessed had stirred other thoughts in me. In fact, as I gazed down at my body, I saw my cock had easily recovered from my previous orgasm. I saw Yar\u0131m's eyes gazing across the bed at me, she saw it as well.\n\n\"Return to me Yar\u0131m,\" I ordered, suddenly knowing what I wanted to do, \"Get on your hands and knees and get in front of me. Face your mother, my aunt.\" My tone brooked no dissent, but I doubted that Yar\u0131m desired that now. Instead, she practically scrambled across the bed towards me, her training in seduction giving way to the actual desires of her body. In a few moments, she was in the position I requested.\n\nFrom that angle, Yar\u0131m was an incredible sight. Her large, heart-shape ass was thrust high in the air before more. Her legs were spread slightly at her cunny was split open, essentially dripping liquid. Between the stretched cheeks of her ass was a small, pink rosebud of an asshole. A thin back protruded out from her hips, her narrow spine outlined through her soft skin. Her head was facing away from me and her lustrous hair seemed to shine on its own. If my body had not already begun to react, it would have now. My cock was now absolutely hard again, the flesh seeming to strain against the skin and craving more pleasure. \n\nWithout thought, I raised my hands up and placed them on Yar\u0131m's hips. I crushed her skin under my soft palms and her flesh felt warm. Her knees buckled slightly at my touch and I saw her body trembling all over. I could feel the blood rushing in my ears and I could hear myself panting. I breathed in deeply, trying to calm myself. I became aware of Yar\u0131m's aroma on the air. The thick, musky scent of her arousal filled my nose and made me groan aloud. I looked out over her body and something caught my eye.\n\n\"Metres,\" I said, my voice quavering. My aunt looked up at me, her eyes slightly unfocused, her face a mask of lust, \"Do you smell my sister's arousal?\" I asked.\n\n\"Yes,\" Metres voice said immediately, coming out as little more than a whisper. I breathed in again, savoring her scent again.\n\n\"Do you like the smell of your daughter's cunny?\" I asked her. I looked directly into her eyes, I felt the confusion and the disgust there.\n\n\"Yes, it is lovely,\" she said honestly after a long pause. I groaned again now and the tip of my cock felt tingly and hot. I couldn't wait any further. I tightened my grip on Yar\u0131m's hips and thrust my cock forward. It was a wild stab and I slipped underneath of Yar\u0131m's dripping cunning. In fact, I slipped through the soft skin of her lips, feeling her hot wetness on my cock. My cock slipped under her cunny, slipping easily across her hard clit. \n\n\"Oh Gunes be praised!\" Yar\u0131m moaned and her arms grew weak, she almost pitched forward onto the ground as the pleasure from my touch raked through her body. Before she had a chance to recover, I pulled my cock back (sliding it across her clitoris once again) and then rammed it home in one quick motion. \n\nYar\u0131m may have been a virgin (or as much of a virgin as a girl can be who has been trained at the Harem) but her cunny was so unbelievably wet that my cock quickly slipped into her body. She groaned again as I felt the slick, hot walls of her cunny wrap around my desperate cock. Her body held me closely, so much more closely than even her tongue had held me earlier. She was so tight and her body's grip so warm and inviting that I could not pull my cock back out. Instead, I began to unthinkingly thrust my cock into her rapidly, just trying to get her body to squeeze me more. My breasts bounced lewdly on my chest as I moved. Yar\u0131m was already squealing in pleasure, I could tell that she was enjoying herself. One of her hands move quickly from the mattress and grabbed at her own breasts. I kept thrusting at her wildly, feeling her body's grip on my cock tighten.\n\nA gasp. I sensed it more than heard it because I was too enraptured by the feel of Yar\u0131m's body wrapped around mine. But there was a gasp, I knew it. And I realized that there were other people in the room, it had fled from my mind while I entered Yar\u0131m. Now, as I kept my hips thrusting into my half-sister, I looked up at the three women sitting at the end of the bed. Their faces were slightly red, they had slightly damp skin, and their bodies seemed to be moving against their will. They were squirming, but not from discomfort. I did not know which of them gasped or why, but I knew it was them.\n\nI realized then that we were no longer engaged in the project we had started in. We had believed we were all here to do our duty. Mothers and daughters of the Harem were responded, as required, to the whim of the Sultanah. I was here because I needed to prepare to fulfill my duty and marry Nislani. We had all expected some disgust and or some displeasure in fulfilling our duties, but we resolved to do it. But we were now finding something else. It was not just that we could go on, not just that we were capable of doing something distasteful. We were loving it! It was not just me. We through ourselves into our duty and were surprised, and a bit embarrassed, to find that it offered pleasures we'd never expected before. I decided to push into it further, to share the heightened desire with the four women who shared my bed.\n\n\"Yar\u0131m, can you see your mother,\" I panted. Yar\u0131m was breathing heavily and did not speak. I raised my right hand briefly and brought it down with a quick rap on her large, round ass cheek. She yelped in pain and thrust her ass back towards me, driving my cock deeper into her. She then groaned in pleasure.\n\n\"Yes!\" she exhaled at last.\n\n\"Yes, what?\" I asked.\n\n\"Yes sister, I see my mother!\" she cried in ecstasy.\n\n\"Fahi\u015fe,\" I said, \"Are you watching?\"\n\n\"Yes,\" the girl responded enthusiastically. She was looking at my breasts bouncing on my chest and I saw her lick her lips. \n\n\"Do you wish you were here?\" I asked, \"Do you wish your mother was watching you get fucked?\" \n\n\"Yes!\" Fahi\u015fe panted as she squirmed on the bed. I saw her eye glance over at her mother and she blushed slightly, but she looked back at me.\n\n\"Is that what you want Tutuklu? Do you want to see your daughter get fucked, would you like to watch my cock slip into her wet cunny? Would that make you wet?\"\n\n\"Yes!\" Tutuklu essentially screamed now, \"I want it Sultanah\"\n\n\"Aunt Metres,\" I said, watching the older woman's eyes brighten slightly, \"Are you watching your daughter get fucked?\" \n\n\"Yes,\" she said with no hesitation now. \n\n\"Do you like it?\" I asked.\n\n\"I love it,\" Metres responded honestly. Her eyes were glued on her daughter, watching me thrust my cock into her. A sudden inspiration struck. I knew what I wanted to do. I thrust my cock deeply into Yar\u0131m's cunny once and then pulled backward, trying to get out. Yar\u0131m was tight, but with some effort, I was able to slip my hard, dripping cock from her quivering cunny. I heard her whimper in displeasure. But I didn't stop. Instead, I rocked her hard to one side with the hands that where placed on her hips. She was slightly unbalanced and she fell over quickly. Soon she was on her back with her legs spread and I was kneeling in between them. Her large breasts splayed out on her chest and her eyes looked wild with desire.\n\n\"Aunt Metres,\" I said quickly, come up here immediately. \"If you want to see, you should come closer,\" I said. I took my hard cock in my hand now and slapped it down hard towards Yar\u0131m's body. I heard the wet slap as it crashed against Yar\u0131m's dripping cunny. It slapped hard on Yar\u0131m's clitoris and she moaned in pleasure, writhing on the bed. I kept slapping my cock down, over and over again, under Aunt Metres was kneeling next to me, looking down at Yar\u0131m's body. I looked up at my aunt and stopped slapping Yar\u0131m. Once again, she whimpered.\n\n\"Can you see my half-sister better from here?\" I asked. I could see that Metres' nipples were incredibly hard now and she was breathing deeply. Her hair was slightly out of place and she looked like her body was ready to burst with desire.\n\n\"I can see everything,\" She responded. I looked down at Yar\u0131m.\n\n\"You mother can see you now,\" I said to her, \"Tell her what you want. What is it you want right now? Address your mother, let her know.\" Yar\u0131m writhed on the bed, trying to thrust her hips up to contact my cock.\n\n\"Mommy,\" she begged, \"I want sister to fuck me. I want her to put her cock in my cunny!\" she begged. I looked at Metres. She was holding her breath and looking at her daughter intently.\n\n\"Can I Aunt Metres? Can I fuck your daughter now, with you right here?\" I asked.\n\n\"Yes, please Gunes, please do it!\" Metres begged now, letting out a deep, rapid breath and looking down at my cock. It was a scream of passion I could not ignore. I quickly slammed my cock home, pushing it into Yar\u0131m's still tight cunny. Yar\u0131m groaned loudly and her body vibrated. I heard her mother suck in a breath sharply and her eyes remained fixed, watching my cock slip into her daughter. I pulled my cock out slightly and slammed it home again as Metres watched. I started to thrust in and out, and Metres watched, spellbound.\n\n\"Touch yourself,\" I ordered suddenly, the words seeming to pour from somewhere deep inside of me. For a moment, Metres' eyes raised from her daughter's stretching cunny and she looked at me, bewildered.\n\n\"What?\" she asked. But now the idea was stuck in my mind, I wanted to see it.\n\n\"You are enjoying the scene. Your daughter is getting fucked. I want you to play with yourself, so that we can cum at the same time,\" I said, \"that is an order.\" Metres looked down briefly at her daughter, a little nervous by this request. Yar\u0131m was looking up at her mother as well.\n\n\"Oh mommy, I love you,\" she moaned, \"It feels so good!\" If Metres had any intention of resisting me before, that impulse died quickly. From her position on her knees, Metres quickly spread her legs and, in a flash, her fingers were between them. I watched her fingers quickly flit around her clitoris and heard her high-pitched squeals of pleasure. She kept her eyes on her daughter, watching as I thrust into her warm cunny and matching her own rhythm to my own. \n\nBoth mother and daughter were moaning now and I was panting frantically. In an effort to catch my breath, I threw my head back and inhaled sharply. But as my eyes rose I became aware others were still in unbearable tension. Tutuklu and her daughter were sitting on the edge of the bed, leaking out onto the blanket, and squirming uncontrollably.\n\n\"You two, touch yourselves as well,\" I ordered. It was like the two women had been waiting desperately to hear those words. As before, they moved in unison. They were sitting on their asses with their legs crossed now but they quickly spread their legs and sat up sharply. Tutuklu raised her left leg, the one closest to her daughter and draped it over her daughter's right thigh. Now both their legs were spread and they were somewhat entwined together. \n\nThey both looked at one another briefly, their faces turning red. They both smiled sheepishly. I believed, at first, that they were just a bit embarrassed by the touch of their naked skin. But I was underestimating them. A silent conversation had gone on between them. \n\nTutuklu now raised her left hand and Fahi\u015fe now raised her right. While I had expected them to each play with themselves, I saw them now cross arms, reaching into each other's laps. In a moment, I saw Fahi\u015fe's fingers slip easily into her mother's wet cunny and I saw Tutuklu's own finger's find her daughter's hard clit. Both moaned loudly and began to move their fingers more quickly. The whole while their eyes stayed focused ahead of them (except for a few, slightly embarrassed, sidelong glances), watching as I thrust my aching cock in and out of Yar\u0131m sopping cunny.\n\nI don't know how long we stayed in that position, but it felt like forever. Yar\u0131m was on her back while I thrust my cock wildly into her, her breasts rolling up and bumping her chin. Metres was kneeling next to us, her fingers flying around her cunny, her other hand grasping her nipples while she moaned. On the far side of the bed Tutuklu and her daughter finger each other's cunnies while they moaned and watched on the bed. We were all pulled forward on the strength of our arousal, unable to hold ourselves back.\n\nI might have gone on forever, pounding away at my half-sister's cunny, if not for Metres. I was sweating and panting so hard I felt like I was going to collapse, I did not feel like I was anywhere close to finishing. I wondered if I would collapse before I could cum. But, as I was dealing with this thought, I saw Metres hand slip from her breast and reach down. In a very rapid motion, her palm came to rest on the soft, warm expanse of her daughter's heaving breast. Her fingers fumbled briefly, before finding Yar\u0131m's nipple, squeezing and pulling on it excitedly.\n\nFor some reason, this vision or a mother grasping at the breast of her daughter, to give them each pleasure, was too much for me. It sent me instantly over the edge. The wave came crashing down on top of me before I could even see it coming. But, more importantly, it seemed to have triggered something in the room. Because even as I heard my voice moaning loudly and felt my body beginning to tremble, I could hear and see the other women reacting as well. It seemed that Metres action had triggered everyone in unison, even Tutuklu and Fahi\u015fe were moaning and writhing on the bed. I could feel Yar\u0131m's cunny contracting tightly around my body. All of us, reaching the supreme state of pleasure at the same time with no thought of the propriety of the action. If anything, rebelling against the world to experience illicit pleasure. We all reach the same, shattering crescendo at the same moment. The last thought I had was to pull my cock from Yar\u0131m's body, just as I could feel my seed begin to well, facing the tip of my cock towards the woman's large breasts.\n\nThe next thing that I saw was thick, white spurts of my seed shooting from my cock and splashing against Yar\u0131m's body. It was a surprising amount, especially because I had already finished earlier. It was like I had channeled the excitement of all four other women, and that I was releasing their desires as well. The seed landed on Yar\u0131m's stomach, pooled in her bellybutton, splashed across her breasts, and even landed in the hollow of her neck before my body finally grew tired and I collapsed, panting, next to Yar\u0131m. \n\nAfter a brief moment, I could hear the other women panting as well and giggling at the actions that had occurred. When I felt able, I sat up on the bed and look looked at the women sitting around me. Metres no longer had her hand on her daughter's breasts and Tutuklu no longer had her leg draped over her daughter's. Fahi\u015fe no longer hand her hand in her mother's lap. But any discomfort we had felt at the beginning was gone. We felt only the intense relaxation that came with having had our share of pleasure. I looked down at Yar\u0131m's body in particular and saw her smiling, contented, while coated in her sticky reward. Once last thought flittered through my mind.\n\n\"Metres,\" I said, \"Why don't you collect the seed with your hands and drink it down. It is a mother's duty to clean her daughter.\" Metres smiled devilishly, no longer constrained by her former shame. She raised her hand back to her daughter's breasts, scooping up the seed with her fingers. Yar\u0131m groaned slightly at her mother's touch. Metres then lifted the finger to her mouth, pushing it into her lips before returning her hand to her daughter's body. She seemed to savor my flavor on her tongue and I heard her swirling it around before swallowing it back down when a new finger-full of seed was ready for her lips.\n\nI watched as Metres, giggling, cleaned her daughter. I saw Yar\u0131m soaking in her mother's attention and enjoying the sensation of being cleaned. I also noticed that Tutuklu and her daughter were watching together, contentedly. They were holding hands and their heads were leaned together passively. \n\nAnd while we all watched, I my upcoming wedding suddenly popped into my mind. I guess I should not have been surprised, but I was. I knew that the situation would be far different in a few days when I took Nislani to bed after the wedding. I was indifferent to Yar\u0131m and Metres, while I actively dislike Nislani. Perhaps more importantly, the taboo of incest felt stronger with my sister than it did with my half-sister and my aunt. This had been a tiny fraction of the problem I would face in the near future. ",
        "But still, as the afterglow of my orgasm faded, I felt somewhat relieved. There were parallels here that I could draw on, despite the differences. I did not have to like my sister to feel physical pleasure in coupling with her. I had seen two women experience physical pleasure with their mothers because it was ordered. They had no desired it, at least at first. But they were bound and required to feel pleasure. And, if anything, they seemed glad that it had happened. Their initial disgust had, in fact, been overcome by the physical pleasure they felt. \n\nI did not hold out hope that this would occur with Nislani. I did not expect that I would enjoy the emotional and mental aspects of what was to come. I knew that even if I...placed my cock in Nislani that I would still not like her. My disgust could not be overcome because it was stronger than simply taboo. But I didn't have to, I knew now that it was possible to do my duty. If Metres could grasp her daughter's breast and Tutuklu could stroke her daughter's clitoris, then I could begat an heir. And, as Metres licked the last of the seed from her finger (which she had pulled from her daughter's bellybutton) I knew that I would.\n\nEnd Chapter 9\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "serial",
        "oral",
        "group",
        "shemale on female",
        "tranny on female",
        "incest",
        "cum fetish",
        "mother daughter"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-09"
}