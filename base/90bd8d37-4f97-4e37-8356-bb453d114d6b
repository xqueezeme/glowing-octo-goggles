{
    "title": "Princess Prick Tease Ch. 03",
    "pages": [
        "Author's note: Thank you to JK Moreland for his editing help once again. ~ellie\n\n\n\n\nGrace had floated through Monday, flirting with Tristan via email, text and an evening phone call; even work seemed more enjoyable for Grace. Adam rang Tuesday and reminded her they had a date at the club Friday night and asked if she could possibly take Friday off work.\n\n\"Are you kidding? I have already taken a week off for your art's sake. If I have any more time off they'll fire me,\" Grace complained.\n\n\"So quit, you hate that job anyway. Lad or Lance would give you a job waitressing I am sure until you found something else,\" Adam was blas\u00e9 about it. \n\n\"I don't want to be a waitress, I wouldn't know the first thing about it,\" Grace shook her head, \"It's not that easy for the rest of us who have to pay rent Adam. Most people have to hold down a proper job to survive.\" She knew she shouldn't say that and she regretted it as it came out of her mouth but sometimes he needed a wakeup call. He had inherited his godmother's house and a sizable sum of money when she had died. With good investments he could exist just on the dividends and the money his art brought him was a bonus.\n\n\"So move in here, there's plenty of room. I have offered how many times?\" Adam wasn't letting her off the hook. \n\n\"Adam we both know that's a bad idea. After a week of living with you I needed three days sleep; you're like an energiser bunny that never runs down. I need my own space for my girlie stuff,\" Grace patiently explained for the millionth time.\n\n\"I can do girlie stuff,\" Adam said with mock femineity in his voice.\n\n\"I'll see what I can do about Friday, no promises,\" Grace as always gave in wanting to be off the phone in case Tristan rang again.\n\n\"Thanks Gracie, I knew you wouldn't let me down,\" Adam said happily, \"Sweet dreams.\"\n\nShe hung up wondering how she was going to manage it. Adam had no idea about working in the real world. By nine O'clock Tristan hadn't called so she turned on her computer to check her emails. She considered calling him but didn't want to appear needy. It wasn't like they were actually a couple. They hadn't even had a proper date yet. Maybe he had realised he had made a mistake in starting a fling with her. It felt like more than a fling or a two night stand or something casual but she had read a guy's signals wrong before. She composed a text message in her head five times before picking up her phone to send him one.\n\nTo her horror she found a message blinking. It must have been left when she was on the phone to Adam. She kicked herself for not checking when she had hung up and listened to the message. While not quite angry Tristan's deep voice held an edge when he said that he was disappointed not to have been able to speak to her. \n\nShe swung between indignation that he would assume she had nothing better to do than hang by to phone for him to call, to sadness that she had disappointed him and she stared at the phone once again wondering what she should do. She could call him back, send the original message she was going to or just ignore him and prove she was not one of those sycophantic girls who would hang on his every movement and words. In the end the real Grace won out and she called him ready to apologise that she had missed the message when she had hung up from Adam.\n\nTristan did not answer and the phone went to his message bank, \"Bullshit excuse number sixty-three, I was on the phone arguing with Adam when you called and I didn't check if there were any messages when I hung up. I am sorry. Sweet dreams, Sir Tristan.\" She hung up quickly, putting her phone on charge and getting ready for bed. \n\nShe had fallen asleep reading a book and came awake suddenly knocking it to the floor when her phone rang. She blinked her eyes reaching out for it and answering sleepily, \"Hello?\"\n\n\"I don't take bullshit excuses,\" Tristan's deep rumble greeted her. Grace gave a sleepy laugh. \"What did you fight with Adam about?\" He asked.\n\n\"It wasn't really a fight,\" Grace started, \"He lives in this Adam world where everyone can do what they want, when they want and damn the consequences. He doesn't like that I don't live in a similar place where I can just drop everything for him and take days off work.\"\n\n\"Why do you need a day off work?\" Tristan seemed genuinely interested.\n\n\"Friday is the night the finalists are supposed to go to The Zoo. He has some new costume and the body paint he does takes hours because he is a neurotic artist type,\" she laughed.\n\n\"Your boss won't let you have the day off?\" Tristan probed.\n\n\"I doubt it. I took a week off to help Adam do that first package for the contest. Nerds aren't supposed to live exciting lives that require so much time away from work, and my direct boss is king of the nerds. I have heaps of vacation time owing but he acted like I was asking for blood last time,\" Grace laughed.\n\n\"What is it you do exactly, Miss Nerd?\" Tristan asked.\n\n\"It's too boring to talk about, business accounts and data analysis in a nutshell,\" she said lightly, \"for Morgan Black.\"\n\n\"The Telco firm?\" Tristan seemed to be weighing his words.\n\n\"Yeah, I thought they would be a bit cool and up with the times, they have come up with some really innovative designs but it's a stodgy old boy's network and well, you don't need to hear about that I expect.\"\n\n\"Actually I am fascinated,\" Tristan said sounding sincere.\n\nShe told him about how Morgan Black recruited her straight out of university offering her great advancement opportunities and bonus packages and so on. The reality was though that nepotism ruled and those with enough brains to ride off the back of the nerds who actually did the job properly got the bonuses and promotions. She claimed that if one more young guy who happened to go to some elitist school sailed past her while she banged her head on a glass ceiling yet again she may just quit like Adam wanted. Tristan stopped her every so often to ask questions and let her carry on.\n\n\"Oh god,\" she groaned. \"Did I tell you I suffer from verbal diarrhoea as well as lame excuses. People will be following me around with shovels one day,\" she laughed in a self-depreciating way. \"Go with Adam's explanation of my job. He tells people I am an accountant rather than an accounts manager, it's simpler that way.\"\n\nTristan had laughed and wished her sweet dreams, saying he was looking forward to their date. Grace picked her book up from the floor and tried to go back to sleep. She was happy, Tristan was certainly an unusual man but he seemed to just get her. He wasn't as foreboding as he came across as and best of all he seemed genuinely interested in her and her life. She hadn't had a steady boyfriend in what seemed ages, especially not one who seemed as in control of his life as Tristan. She didn't want to get her hopes too high, they hadn't even been on a real date yet, but so far things were looking great.\n\nIt was as she was arriving at work the following morning that her phone rang. It was from a number she didn't recognise. Grace almost didn't pick it up when she wondered if it could be Tristan on a work line. She moved slowly through the lobby as she said softly, \"Hello?\"\n\n\"Grace?\" A deep voice asked.\n\n\"Yes, speaking,\" the confusion showed in her voice prompting the caller to identify themselves.\n\n\"Galahad the good here,\" he chuckled loudly.\n\n\"Oh Lad,\" Grace smiled even though he couldn't see her, \"To what do I owe this pleasure?\"\n\n\"I have a proposition for you. What time do you have lunch?\" Lad inquired.\n\n\"What sort of a proposition?\" Grace was curious.\n\n\"Have lunch with me and find out.\" Lad said mysteriously.\n\n\"I usually work through lunch, just snacking at my desk.\" She laughed.\n\n\"Make an exception you won't be sorry,\" Lad tempted her.\n\n\"Fine, there is a small caf\u00e9 called Steward's about a block down from...\" Grace began.\n\n\"I know the one. What time?\" Lad pressed her.\n\n\"About one, okay?\" She said after some thought.\n\n\"Great see you then,\" and just like that he hung up, leaving Grace with a million questions as she rode the elevator up to the seventh floor and her small desk. She turned on her computer and started downloading the data packets from the night before wondering how to approach her boss about Friday. Getting lost in the numbers and coding she worked through the morning on several file errors and possible flaws in certain client packages. She totally lost track of the time until she looked up at a few of the younger colleagues leaving for lunch. \"Damn,\" she thought I forgot to tell someone I was going out for lunch for a change. She had always been the one to stay and man the phones preferring to eat at her desk. She hoped they came back on time.\n\nShe had started working on the next issue on her list and dealing with the stream of data when she lost track of time again. Her phone buzzed beside her and she noticed the time, Picking it up she grabbed her bag and headed for the lifts, \"Yes Lad, I am sorry on my way now I will only be five minutes.\"\n\nGrace fled the building and was out of breath by the time she made it to the caf\u00e9. Lad waved her over and pulled out a seat for her at a small corner table. As she walked through the restaurant, a voice nearby squeaked, \"Grace! Who's manning the phones?\" It was the administration assistant from the floor she worked on.\n\n\"I don't know. No one asked me to so I assumed they were covered. You did leave for your lunch hour almost two hours ago now,\" she shrugged and kept on walking, hearing the girl mutter under her breath, \"What's got into her, she always does it.\"\n\n\"I guess no one ever asked her if she minded,\" a second girl said, \n\n\"But still she could have told us, what a bitch,\" they spoke the last loudly enough for Grace to catch it. \n\nLad raised an eyebrow but said nothing. He introduced the other man at the table as Val and Grace smiled at him in greeting as Lad continued, \"I usually have to have a translator with me when I take Val anywhere but I assumed you speak nerd or geek or whatever it is he speaks.\"\n\nGrace laughed, \"Don't believe everything that comes out of Adam's mouth, I am not that bad.\"\n\nVal was studying her, \"So you're the one huh?\"\n\n\"The one what?\" Grace furrowed her brows. \n\n\"What do you know about smart homes?\" Val asked. Grace listed off the generalised information with ease. Val asked some more in depth questions and Grace found she held her own even though some of the stuff he spoke about nearly went over her head. \"How old are you?\" Val asked suddenly as Grace was enthusing over a new technology he had said he had seen a prototype of.\n\n\"Twenty-six, and you are?\" Grace could feel her Princess side become indignant as she couldn't work out if he was trying to be rude or just lacked reasonable social skills like many nerds who didn't get away from their computers into the real world often enough.\n\n\"Impressed,\" he smiled and slipped an envelope across the table to her. \"That's the prospectus of a new Telco. It has major backing from the finance industry who are looking to upgrade from the tired old ways of doing things. Look it over. I have highlighted the position I am offering you. Get back to me before Friday.\"\n\n\"It's Wednesday,\" she mused as she picked up the heavy looking envelope. \"Why me? You don't even know me?\"\n\n\"I know that you were recruited, head hunted even, straight out of university by Morgan and Black. I know that they stuck you in some corner office because they had to hire a girl or be brought up on discrimination charges again and it saved you going to their competition.\" He paused and she gaped at him. \"I wouldn't offer a job to anyone without checking them out first even if two of my brothers seem to have fallen in love with you.\" A slow half smile began to form on his face and she realised who he was.\n\n\"Three brothers!\" Lad corrected. \"If you could see the way she teases Tristan you would love her too, I have never laughed so hard in my life.\"\n\n\"Tristan did this?\" Grace said in a whisper putting the packet back down and pulling her hand slowly away.\n\n\"Actually,\" Lad cut in, \"It was Adam, though he told me you were an accountant. He doesn't really know what you do, does he?\"\n\n\"He's a little bit narcissistic, but he's always been that way. I guess we all just love him the way he is. In Adamworld, as I like to call it, every day is full of sunshine and lollypops, it's addicting really,\" Grace laughed. \n\n\"Just take it and look at it,\" Val pushed the packet back toward her again, \"I have been looking for a business services manager for ages who is young and dynamic and can think outside the box. This is about innovation and exciting new leaps in technology. You owe it to yourself to check it out.\"\n\n\"Fine, I will read it but it feels weird, you know? I meet one guy a month ago and suddenly I am surrounded by his family. It's bordering on creepy,\" Grace smiled crookedly, \"Like I am being sucked into some Knights of the Round Table vortex.\" She turned to look at Val a smile pulling at her lips, \"Perci-val!\" \n\n\"Fuck! Who told her?\" Val groaned.\n\n\"Lance as always,\" Lad rolled his eyes. \n\n\"Shit! I better get back to work,\" Grace reached for her wallet.\n\n\"Let me get it, I'll write it off as a business lunch with my new BSM,\" Val grinned. \n\n\"Well, this was certainly interesting,\" Grace said, \"Thanks for lunch.\" She picked up the packet looking at it strangely and walked out glancing back over her shoulder once to see them watching her. \n\nReturning to work, she sat at her desk still holding the envelop packet. She was torn between being grateful to her friends for wanting to help her find a new job and standing on her own two feet. She knew she probably wasn't qualified for the job Val offered her. She couldn't even get a bonus in this place let alone a promotion. What if it didn't work out, she would have to move in with Adam or worse home to her parents as a failure. All her insecurities rose to the surface and she pushed the packet of information deep to the bottom of her handbag and started working on the data block she had begun before she went to lunch.\n\nIt was close to five when she finally stopped and began the shutdown of her work station. On the dot of five she got up and walked to the elevators planning on going to see the HR supervisor about Friday as she knew what her department manager would say. Walking past the manager's office she heard the words fraud and discrimination shouted from an unknown voice making her ears prick up as she passed the door. \n\nShe made it to HR as the supervisor was rifling through paperwork and looking frazzled. \"Is this a bad time?\" Grace asked from the door.\n\n\"Oh Miss Woodville, good you're here. That will save me finding you tomorrow,\" He said distractedly, \"Take a seat. This mess will wait for me.\" He clicked away at his keyboard and brought up her work history screen. \"The problem is that you didn't take any holidays the first three years you were here. New regulations from the top state that you can only hold over a certain amount of annual leave each year, you have quite a bit stocked up despite the recent time you had off.\"\n\n\"Oh that works out well then because I really need Friday off,\" Grace smiled pleased she had made the effort to come see him rather than her department manager.\n\n\"Well that's a start,\" he mumbled. \"I probably need you to take more in the vicinity of a week or two to get you back under the threshold or you will lose it at the end of the year and with the latest rumours of some social justice lawyer coming at us again, I don't want anyone having their vacation time swept. The week over Halloween would work for me if it's not a bad time and you can let me know how the numbers stand then.\" \n\n\"We'll fill in the form now while I have your screen open, if you have time of course, and I will approve it right away so you can make plans,\" He pulled open the digital form and filled it in for the first the Halloween week, then the single day calculating the numbers, \"Tomorrow too soon?\" \n\n\"Not if I go back and check in the project I am working on so someone can finish it,\" Grace said. \n\n\"Good, and if you take the six days before Christmas off you should come in just under the threshold,\" he pushed his glasses up onto his head and rubbed his eyes. \"One down another ten to go, Thanks for popping in Grace, I don't usually have to convince people to take their vacation time.\"\n\n\"When I asked for the week off last month, my manager told me that if I took anymore time off it would have to be without pay. I just assumed I had run out somehow,\" she laughed as if it was a misunderstanding but knew very well her manager often got bonuses for monthly productivity compared to other departments and that she worked hard on the accounts given to her to set up and manage.\n\nThe man raised his eyebrows but said nothing and Grace farewelled him looking at her watch as she headed back to her desk. She went to close out the files she had opened and left on her desk top but seeing there was only a little to do on that last file and hating to leave work half done for her colleagues Grace started to type and check data. \n\nHer phone rang and she picked it up distractedly, \"Thought you were coming over after work tonight,\" came Adam's plaintive voice.\n\n\"Well if I am having Friday off then I have to get some stuff done here,\" she sighed.\n\n\"You're still at work?\" he sounded shocked.\n\n\"Uh huh,\" Grace continued typing keeping the phone under her chin.\n\n\"Get a security guard to walk you down to your car. It's not nice there at night,\" Adam said seriously.\n\n\"Yeah, okay. I will ring you when I am leaving okay?\" Grace had had this conversation before. \"Now let me get my work done so I can leave before midnight.\"\n\n\"Make sure you call me,\" Adam said before hanging up.\n\nIt only took another twenty minutes or so to finish the job at hand and Grace cleared off her desk, leaving it clean and tidy for her to come back to on Monday. She gathered her bag and headed for the elevator. Too late she remembered about calling for the security guard to escort her. She would get out in the lobby and find one, she reasoned, so she grabbed up her phone and called Adam. The phone was still ringing when her department manager saw her and waved her into his office. \n\nShe walked in and looked at him startled that he would still be there. \"It was you, wasn't it?\" he said with venom in his voice. \"Staying back late, no doubt keeping computer logs of your time working on the client accounts.\"\n\n\"The system does that automatically she explained, it's how we invoice the customers,\" she was genuinely confused by his seeming hostility toward her.\n\n\"If I find out it was you who put in a complaint about me, your employment here is over. Not just here,\" he threatened, \"everywhere. I will make sure your name is ruined and you never get a reference from this company that says anything except that you are a lazy, insolent, bitch, who looks for any opportunity to malign those she works with.\"\n\nShaking with fear and anger she could vaguely hear Adam who had answered the call she had momentarily forgot she had made, so stunned was she by the confrontation with her manager. Managing barely to control her shaking she voice she replied softly and calmly, \"I have no idea what you are talking about. There have been numerous occasions I have felt passed over, belittled and unappreciated and have said nothing, never complained because as you have pointed out who would believe me over you?\"\n\n\"I know it was you, who else would know details of the Greenhagl account. You think you're so smart going over my head to get credit for a project you messed up and I had to fix,\" he was snarling at her and moving closer as he spoke.\n\n\"I finished that account off months ago, and you know it. No mistakes, no errors, it ran like clockwork. I even kept it an extra week to make sure the customer was happy before handing it over to you,\" Grace was livid that he would accuse her of shoddy work. The man was practically frothing at the mouth and began ranting that it wasn't her job to contact customers, that the mess she created was so big now the whole department was being put under the microscope.",
        "\"It's you who have made the error in judgement this time,\" She held up her phone and pressed the speaker button, \"Say hello to my department manager, Adam.\"\n\nThree obviously male voices replied with a range of greetings most using expletives. \"You see I ring my friend when I am leaving work this late because he worries about me. I always thought that was kind of silly being that the parking garage is watched by security.\"\n\nThe blood had drained from the manager's face, \"Aren't you lucky I am a sweet, simple girl who doesn't know what she is doing or when she is being bullied?\" \n\n\"This is all a misunderstanding I am sure we can work out,\" he said back pedalling furiously.\n\nGrace spoke slowly in an effort to sound calm, \"If I were you I would be very worried right about now because I may take whatever you dish out and not fight back because I like this job. My friends on the other hand will probably insist that I do something about being threatened at this time of night. It's late so I am leaving now unless you're willing to pay me overtime to stand here and take your threats.\" Ignoring his further threats she spoke over the top of him. \"I won't be in tomorrow or Friday, you can see HR about that if you want to dispute it, so you will have time to ruin my name if you dare, but if you do believe me, this little mess,\" she said indicating her phone, \"will not turn out so well for you. Have a nice evening.\"\n\nShe had let the three men's voices be heard clearly as she walked to the elevator on shaky legs and got in before turning the speaker off and putting her phone to her ear. \"Adam?\"\n\n\"I'm here,\" he said after a moment of fumbling with his phone. Grace broke down crying from the adrenaline and shock of what she had just done.\n\n\"Can you come and get me?\" she said between sobs. \n\nShe had waited with the security guard, telling him she had just received some very bad personal news and that a friend was coming to drive her and her car home. Adam arrived in less than thirty minutes and embraced her walking her down to her car. He said nothing as they drove home disturbed by the fact that she fell apart. The Grace he knew was nerdy and shy but she had a backbone and didn't crumble under pressure normally. She was his rock when he became manic, she was the island of sanity in his madness, and he wasn't so sure what to say or do in this situation. She had always been so... so... Grace.\n\nGrace knew it was too much to ask Adam to sympathise with her. He had never really had a real job or a real boss. She pulled herself together once she was away from the building. Her life was hurtling out of control and she felt powerless to stop it. Since agreeing to work on this project with Adam she had become someone she barely recognised anymore. \n\n\"Toughen up, Princess,\" she told herself not realising she said it out loud.\n\nAdam looked at her, and burst out laughing, \"It's okay to be a bit shattered after an argument like that. The ultimatum you gave him was a bit princess like though, and wishing him a good evening was classic.\"\n\nGrace giggled, \"Too far?\"\n\n\"Not far enough in my mind but you're you and you care about stupid things like a job and paying rent,\" he continued to laugh.\n\n\"Oh yeah, who needs the necessities in life,\" she rolled her eyes at him. \"Shit Adam, what have I done,\" she put her hands over her face.\n\n\"You did nothing. You didn't complain about him did you?\" Adam looked at her briefly before pulling his eyes back to the road.\n\n\"No, but it's obviously a problem with an account I worked really hard to set up,\" she sighed.\n\n\"So, take the job with Val, it sounds perfect, flexible hours, being in charge of your own department. You know you want to,\" Adam grinned.\n\n\"I am not experienced enough to run a department, Adam, I can't take that job. Val only offered as a favour to you or Lad, seems you and Lad have been spending a bit too much time together since Saturday if you have time to talk about my employment problems,\" Grace turned in her seat to look at him.\n\n\"Yeah, he's fun to hang out with,\" Adam admitted.\n\n\"Wait until you see what I have designed for you!\" he said suddenly changing the subject.\n\n\"\"Your costumes are the whole reason my life is so out of control at the moment,\" she slapped his shoulder lightly.\n\n\"You like it out of control though don't you,\" he smirked at her. \n\n\"Honestly, I don't know how I feel anymore, my world has gone all upside down and if I lose my job as well...\" her voice trailed off, \"I feel like the real me is being pushed aside and I am pretending to have this fairy tale life, with the gorgeous boyfriend, modelling career, and nonstop parties. Work at least grounds me, brings me back to reality. Reminds me I am not some sort of princess who woke up from a boring dream.\"\n\n\"Gorgeous boyfriend?\" Adam chuckled.\n\n\"Tristan and I have a date tomorrow night, when he gets back from his trip,\" she said offhandedly.\n\n\"But he's so,\" Adam searched for the right word, \"Serious.\"\n\n\"With you as a friend I have enough crazy in my life. I like serious. I like Tristan,\" They had pulled up in front of Adam's house. \n\n\"Well as long as you're happy, I suppose,\" Adam said dubiously and got out of the car.\n\nA second car pulled up behind hers and Kane stepped out. \"He drove me in to pick you up,\" Adam explained.\n\n\"Thanks, Kane,\" Grace said as he moved closer to them while Adam unlocked the door. \n\n\"No problem, Maggie worked late too, she's meeting me here,\" he grimaced. \"She doesn't trust us to look after you.\"\n\nGrace laughed, \"She is such a wise woman. What would I ever do without friends like you two?\" She hugged Kane tightly. \n\n\"Starve probably. Maggie is bringing food,\" he smiled and hugged her back. \n\n\"Who was the other voice I could hear in the call?\" It wasn't until they were inside and she was firmly ensconced on the big comfy couch that she thought to ask.\n\n\"Lad was here,\" Adam said in an off-handed manner. \n\n\"I think its love,\" Kane stage whispered to Grace, \"He's always here lately or Adam is there.\"\n\n\"What happened to Gareth?\" Grace asked, \"You were so excited about finally getting into his chino's.\n\n\"Yeah he was all good looks and not much substance, we didn't really have much in common to talk about and you can only fuck for so long before something else has to happen, a conversation or something,\" he shrugged.\n\n\"And Lad has that something more?\" Grace pressed him.\n\n\"Shit yeah! He's a blast to hang with even if sex wasn't on the table. We have a lot in common, including loving you. I think Gareth was a bit put out by my obsession with you and the costumes,\" Adam sounded thoughtful.\n\n\"He also has all the contacts with the right people and places for Adam's creativity,\" Kane said seriously, \"It's everything Adam ever wanted in a man, money, contacts, and a deviant sex life to go with his big cock.\"\n\nGrace burst out laughing, \"Sounds like a dreamboat from where I am sitting.\"\n\n\"He'll be back soon, the public part of his club only opens over the weekends. Monday to Thursday is members only. He went to check on things and said he would be back, no drooling over my dreamboat when he gets here,\" he waggled a finger at her in mock seriousness.\n\n\"Why is he bi too?\" When Adam winked and nodded, Grace feigned a swoon, \"He just keeps getting better and better how will I ever be able to resist.\"\n\n\"Try and I will get you a bib to mop up your drool with,\" Adam grinned.\n\nGrace fell back on the cushions laughing as Adam's phone rang and he picked it up answering it with a chuckle. \"Oh yeah.... Really?..... No, no, she is fine,.... Honestly...\" As he spoke he motioned to Grace to check her phone. Dragging it out of her bag she grimaced at the amount of calls she had missed. \"Bad news travels fast,\" she thought and dialled into her message bank. \n\nAdam was still talking on his phone, \"She's been on that thing all night, first to me and then when I picked her up to someone else,... yeah she is checking her message bank now... Of course she is here I wasn't taking her to her place when she was so upset...\" Adam was beginning to get frustrated. \"What do you mean?... Oh shit. I thought Lad said something.... Nah she can tell you about it... I'll get her to call you tomorrow... Alright, see ya....\"\n\nAdam hung up and looked at her, \"That was Lance. He was trying to call you, I thought you were going to date Tristan,\" he smirked, \"Playing brothers off against each other and then swooning over Lad. Who knew you were such a little slut.\" He teased her.\n\n\"Well,\" she shrugged, \"If you think those three are good looking you should meet Val. Maybe I should hold off making any rash decisions until I meet the last one, Wain.\" She let a grin change the seriousness of her face.\n\nKane burst out laughing, \"What happened to our shy little Gracie,\" he appealed to Adam.\n\n\"Gracie grew up into a full blown hottie, you know?\" Grace quoted a line from one of her favourite movies making Adam groan loudly. \"I need to make a call,\" she said getting up and walking out into the cool night air of the back deck.\n\nShe rang Tristan's number and got his message bank, \"Hi,\" she started uncertainly, \"Look I just want to tell you myself before the rumour mill kicked in that I had an argument with my boss tonight and got upset, it's no big deal, I handled it and I am fine, I am at Adam's. I just don't want your brothers telling you anything dumb. Anyway I will talk to you later, looking forward to seeing you tomorrow night.\"\n\nGrace hung up and rang Lance, once again it went to message bank and she rolled her eyes, \"Hi sorry I missed your call, I can't make it tonight sorry but we can get together soon for a drink if you like, when Tristan is back,\" she put the last bit in subtly, or so she thought just to let him know where her interest lay.\n\nShe hung up the phone and walked back inside. Maggie had arrived with Italian food and immediately went to hug her, \"How are you doing, Gracie? That man is a bloody bully, trying to intimidate you like that.\" She pulled back and took the food to the kitchen dragging Grace along with her. \"Come on I brought pasta, the best comfort food in the world.\"\n\nThey were about halfway through dinner when Lad arrived with ice-cream. \"I didn't know what you liked, so I brought a few different sorts,\" he unloaded a bag of small tubs of ice-cream, gelato, sorbet, frozen yogurt and chocolate mousse. \n\n\"Just a few,\" Grace laughed. \n\n\"Well you were crying, isn't this what you do when girls cry?\" He looked perplexed.\n\n\"Well in the absence of expensive jewellery we'll have to make do,\" Maggie said generously and winked at Grace.\n\nLad joined them at the table and the conversation kept them all laughing right through to dessert. Her phone buzzed and she walked away from the noisy chatter at the table to answer it.\n\n\"Hey,\" Tristan's deep rumble greeted her, \"You okay?\" \n\n\"Oh yeah, I'm great really. Not looking forward to going back into work Monday but nothing I can't handle. It was all just a bit of a shock you know, arguing with the boss is not something I would have ever contemplated before but he didn't give me much choice. It will be fine,\" she said lightly. \n\n\"What happened exactly?\" he asked trying to keep his voice lighter than the dark mood that had come over him.\n\nShe recounted the exchange in detail, thinking that if he spoke to Lad he would hear it anyway. He stopped her every so often as he had the night before when she spoke about work to ask questions but really he just let her talk. She finished her recount by telling him it would be alright either way as she had a job offer at lunch today. He had seemed genuinely surprise and asked about it.\n\n\"You mean you really didn't know?\" It was her turn to be surprised. \"Val offered me a job in his new company.\"\n\n\"Are you sleeping with another one of my brothers,\" he laughed but there was no humour behind it. \n\n\"Not yet,\" she quipped, \"Lad introduced us today. He gave me a prospectus to look over. It's still in my bag I had forgotten about it until now. I don't think I have the experience for it, I thought you made him do it after my whining last night about my job.\"\n\n\"Well it's not a bad idea,\" Tristan rumbled.\n\n\"I feel like since I met you I am surrounded by your brothers, every time I go somewhere I am expecting one more to pop out of the woodwork,\" she laughed.\n\n\"It's possible,\" he sounded amused, \"In addition to four brothers and a sister I also have countless cousins who all live in the same town.\" \n\n\"Oh gosh, I am going to be exhausted trying to sleep with them all,\" she giggled at his growl. \"Lucky I have a couple of days off.\"\n\n\"I'll be back tomorrow and we'll talk about your much needed attitude adjustment then,\" she could hear that arrogant smirk in his voice as it floated in her mind and she laughed. \n\n\"I'm looking forward to seeing you again,\" she said softly and smiled as he wished her sweet dreams.\n\nGrace went in to join the revelry once again but Tristan stayed on her mind. She had never been so wholly taken over by another person before and even though they hadn't had their first official date yet, she wondered if this was what love felt like. She searched through her bag and pulled out the packet of information Val had given her and began to look through it, once dinner was over and Maggie had roped Kane into helping clean up. \n\nShe sat on the floor in the living room spreading the information out around her as Adam and Lad disappeared into the studio again to talk art and costumes. \"Surprise me on Friday,\" Grace had smiled when Adam attempted to put her to work, \"I am so not up for that right now.\" \n\nKane stood over her looking down on the paper mosaic she had created around her. \"What's all that?\"\n\n\"A job offer,\" she laughed, \"It's a new company, and the owner wants to have me on-board. I was going to say no but after tonight I thought I would have a look,\" she shrugged. \"I may not have many options soon,\" she tried to laugh but it came out as a sad hiccupping sound.\n\n\"Want some help sorting out the legal jargon?\" Kane offered sitting on the floor cross legged beside her.\n\n\"Sure it looks too good to be true, and I don't really know if I am qualified, so I am looking for the catch, if there is one hidden in here somewhere,\" Grace frowned at the glossy sheets and papers as she spoke.\n\nThey sat close together and talked quietly over various points and arguments in the offer being made to her. Maggie came in and seeing them working on something she had no idea about she switched on the television, grateful she wouldn't miss her daily dose of reality TV. Much to her husband's disgust she was a reality TV junkie and it was about halfway through the latest Big Brother series. She curled up on the couch and let the other people take care of themselves for an hour.\n\n\"You'd have to be crazy not to take it,\" Kane said finally after going through all the pros and cons with her.\n\n\"Okay well here's the real sticking point, aside from the stuff you just read through and everything else,\" She swallowed. \"I like this guy, it's new and exciting but I don't know where it's going or how it could end. It's been a bit of a rocky start,\" Grace grimaced\n\n\"And this affects the job how?\" Kane asked puzzled.\n\n\"It's this guy's brothers company! His brother offered me the job. What if it doesn't work out, What if I end up in a worse situation than I am now,\" Grace grimaced again.\n\n\"Did the guy force his brother to offer the job to you?\" Kane asked seriously.\n\n\"No he said he didn't even know. They both did actually, it came through a third party, namely Adam who thinks I am an accountant for goodness sakes,\" Grace laughed. Kane joined her laughter shaking his head in agreement.\n\nSitting back he thought about it. \"So Adam had a whinge to Lad that you were scared to take the day off and Lad found this Val who was looking to hire someone of your talents and then, where does the guy you like come in? Is it Lance or Tristan?\"\n\n\"Tristan,\" she admitted. \"They're all brothers though.\" \n\n\"You slept with brothers and yet you used that excuse not to date me before Maggie came along? I am not sure whether to be hurt or grateful,\" he looked over at his wonderful wife, \"You're lucky Maggie makes me err on the side of grateful.\"\n\n\"Well I didn't mean to and who knew there were so many of them,\" Grace covered her face and groaned as Kane laughed.\n\n\"Look, work is work and home is home, keep the two distinct and nothing will be so bad that you can't deal with it,\" Kane gave her an encouraging smile. \"I say take it. Better money, better conditions, better hours. Shit if you don't I might put in a bid for it,\" he laughed, \"Talk to this Tristan guy tomorrow, he seems like an alright bloke if you like taciturn and grumpy, then make your decision, but this,\" he pointed to the pool of papers, \"All seems legit to me.\"\n\n\"Thanks Kane, you're the best,\" Grace smiled and hugged him.\n\n\"He's pretty good but I dunno about the best,\" Maggie laughed from where she sat on the couch, showing that she was listening even though she was watching her show. Kane and Maggie got up to leave shortly after and Grace decided she should go home too. She hugged and thanked everyone for everything they did and got in her car for the shot ride home. She had a lot to think about and she needed the time alone.\n\n*****\n\nGrace woke up early as usual and rather than lying in bed reading a book she got up and got dressed. She had reasoned last night as she thought about everything that a bit of a clean-up around the place this morning would probably be the only chance she got before the busy weekend and she wanted the place to look nice just in case Tristan came over again after their date.\n\nBy lunchtime she had cleaned her apartment from top to bottom and need only wait for her washing to dry that she finally sat down and looked around with that certain satisfaction one got when they knew everything was done. She wasn't really sure what time Tristan would call to say he was back and pick her up but she was sure she had hours yet. Ringing Anna, Grace was able to get a quick appointment for a facial and body scrub and she smiled. So much for any savings this month and she had already bitten into a huge chuck of her nest egg. \n\nIf everything went pear shaped at work, and she decided not to take this new job she would be in a bad place but she guessed she had options at least. She gathered her bag and phone walking out the door feeling good and relegating thoughts of work to the back of her mind for the princess to banish into exile.\n\nGrace arrived back home feeling relaxed and amazing. Anna had done her make-up once she had decided she would wear the sunset dress Adam had given her. It was casual enough to cope with most situations and dressy enough to be able to go out and party in. \n\nShe went and took her laundry off the line folding it and putting it all away before pouring a glass of white wine and sitting down with a book to wait for his call. By the time she had finished the first glass of wine she had become restless and sent him a text, \"Hi, What time should I be ready for you to pick me up?\"\n\nRealising she had skipped lunch she went to the small kitchenette to grab something to munch on with a second glass of wine. She wished she had have brought home the left over pasta from the night before but settled for some chips and nuts in case they went to dinner.\n\nThere was a light tap on her door and Grace got up thinking it was Tristan and hurried to the door. Opening it wide she stopped stunned as a stylish couple stood in the doorway. \"Oh,\" Grace said disappointment colouring her voice. \"I was expecting someone else.\"\n\n\"Yes we know,\" the tall woman brushed past her walking into the small apartment. \n\n\"Hi,\" the man said with a smile holding out his hand, \"I'm Wain, I believe you have been wanting to meet me?\"",
        "\"I, umm, I have?\" Grace was seriously confused.\n\n\"Oh yes, I hear you are doing the Pendron brothers one by one,\" he gave her a lazy half smile and she recognised him immediately. \"I assumed it was my turn.\"\n\n\"Gawain! The brothers of the round table are complete!\" She laughed, the tension eased by the two glasses of wine she had drunk while waiting for a reply from Tristan. \"And you must be the Lady Elaine,\" Grace turned to look at the tall dark haired woman who had pushed past her with a grin.\n\n\"Correct,\" Elaine inclined her head toward Grace as she stood in the middle of the small living room. Grace stood back from the door allowing Wain access to her small apartment.\n\n\"To what do I owe this honour?\" Grace said with a smile.\n\n\"Tristan's been held up,\" Elaine said in a tone that said she was unimpressed. \"You already slept with Lance, Val has tried to put you under contract and Lad is sleeping with your best friend and has designs on you regardless, so that leaves us.\"\n\nGrace blushed deeply, \"Oh dear, you make it sound so...\"\n\n\"Sordid?\" Wain offered.\n\n\"Yeah something like that. Look, just get Tristan to give me a call when he gets back, you don't need to babysit me or anything.\" Grace said trying to save what little dignity she had left.\n\n\"Listen to me you little trollup!\" Elaine said menacingly as she moved forward. \"Tristan likes you for some unknown reason, and believe me Tristan doesn't like anyone as a general rule. Personally I don't see what the big deal is,\" she let her eyes rake up and down Grace making her feel less than worthy of the fact. \"It seems that the other boys do too, but I am not about to let an obviously common nobody like you come in and cause problems between them.\"\n\nGrace had been bullied more than she could handle lately and she drew herself up, pushing back her shoulders before replying in a deadly quiet voice, \"I don't care if you are the friggin Queen of England or Lady of the Lake, you don't get to come in here and treat me like some hooker off the street. I have been threatened by better than you lately and they have found out I am not as meek and mild as I look. So you can just fuck off to wherever you came from if you think I am gonna do anything you tell me, now.\" She turned to Wain and said in the same deadly quiet voice, \"It was very nice to meet you but I think you should go now and take your sister with you.\"\n\n\"I don't think so,\" Elaine's voice had risen in pitch and was tense.\n\n\"Fine then, lock up when you leave,\" Grace grabbed her phone and bag and walked out stopping at the door, \"Do tell Tristan not to bother ringing me, again. Having his family take over my life is just too much hassle,\" she said over her shoulder and walked down the stairs rather than taking the lift. She realised she couldn't drive after the couple of drinks on an empty stomach but let herself into her car and called a cab. She saw the couple exit the building shortly after her and look around. They got into their car and left. To her horror she realised she had let Elaine win.\n\nGrace took a cab to Southbank needing to get lost in the crowd at the markets. She ignored the ringing of her phone as she walked around, she was sad and mad and ... she couldn't quite put her finger on it, but she felt awful after looking forward so much to tonight's date. She wanted to talk to Adam but worried that Lad would be with him. She wanted to talk to Maggie but knew Kane would tell Adam she was upset again. She considered Eve for a brief moment but she didn't really feel like dancing. In the end she just went home, she felt tired as she climbed the stairs.\n\nShe heard the pounding and the rumbling voice before she got to the landing and froze. Knowing that when he was close she couldn't resist his powerful way of dealing with her, she walked back down to her car quickly and deciding she would be well under the limit by now she drove away. She realised how silly she was being, how ludicrous the whole situation was but she couldn't help the feeling that she had to just run away rather than face the man who had truly got under her skin.\n\nUnsure of where she was going or what she was doing she pulled up a few blocks down and put her hands over her face wondering how she got into this position where she was afraid to go home. Stiffening her resolve she picked up her phone when it rang yet again. \"Hello,\" she said warily.\n\n\"Open the door,\" Tristan growled.\n\n\"I am not at home or did your sister forget to tell you that part of the story,\" Grace sad with a hard voice.\n\n\"Elaine?\" Tristan asked.\n\n\"Yes. They came to tell me you had been held up among other things. Look Tristan it's obvious you have a close family and far be it from me to interfere so just leave me alone now okay?\" She held her breath.\n\n\"I don't think so,\" Tristan rumbled.\n\n\"Funny that was the same thing Elaine said when I asked her to leave after she insulted me,\" Grace's voice was venomous.\n\n\"Elaine was at your apartment?\" Tristan seemed confused.\n\n\"Yes,\" Grace was exasperated, \"She came with Wain. They said you were held up somewhere.\"\n\nThere was a moment of silence and Tristan finally said, \"Okay, I understand, I will leave you be, for now.\"\n\n\"Thank you,\" Grace said sadly and closed her phone. She covered her face and cried trying to work out why the tears had come so readily. She should be so mad, angry, where was her inner princess? She started the car and rather than going back to her apartment she headed home to her parent's house. She pulled into the driveway seeing a small light on in the back of the house. Her Dad suffered chronic insomnia and would be up watching old movies, not that it was very late.\n\nGrace tapped on the window behind his chair startling the man and smiled as he stood up quickly and opened the rear door. \"Gracie,\" he embraced her, \"What's up, baby?\"\n\n\"I just had a really bad couple of days at work and needed a papabear hug,\" she said quietly. \n\n\"Nothing wrong with that,\" he said gruffly and wrapped his arms around her. \"Why don't you go crawl in bed with your mum. She is reading that painting everything grey book and it always gets me into trouble.\"\n\n\"Fifty shades of grey? Oh dear I better save you right now,\" she kissed his cheek and skipped off down the hall. \"Oh mummy!\" Grace said entering the room, \"You're reading smut!\"\n\n\"They're like rabbits!\" her mother exclaimed, \"They never seem to stop,\" she laughed closing the book and putting it on her bedside table as her daughter crawled into the bed. \"What are you doing home? Not that it isn't a lovely surprise to see you, Gracie.\"\n\n\"Just a bad couple of days, I needed to come home and feel loved,\" she smiled and snuggled down under the blanket and hugged her mother. \n\n\"Tell me what's going on?\" her mother said softly and stroked her back. Grace gave her mother a generalised version of the problems at work. He mother was aghast that someone could act so unprofessionally, and encouraged her to put in a complaint.\n\n\"That's not the worst of it,\" Grace said sadly. \"I really like this guy, he just gets under my skin and into my head and I can't stop thinking about him.\" Leaving out the sex with his brother and the type of costumes she modelled for Adam she gave her mother a sketchy story about how they had met and the brothers suddenly being everywhere in her life. She ended it off with the confrontation with Elaine and running home to safety.\n\n\"It's been a rough couple of weeks by the sound of it not just days,\" her mother smiled and continued to rub her back. \"Now this man, you really like him?\" she asked and watched Grace's face as she nodded. \"And by the sounds of his over-protective sister he likes you too, right?\" She nodded again.\n\n\"Well call and ask him to come over. It's not so late that you can't work this misunderstanding out,\" she paused as Grace started to protest, \"He probably didn't even know what was going on himself. Did you consider that? If you don't see him again who wins, certainly not you, not him,\" she shrugged. \"Go call him, you will feel better,\" her mother encouraged.\n\n\"My life is spinning out of control and you want me to call the one guy who confuses me the most?\" Grace was horrified at the idea.\n\n\"If nothing else you owe him an explanation of why you weren't there when he came to pick you up. You said yourself he sounded surprised that Elaine had been to see you. Maybe he didn't send her,\" She looked into her daughter's eyes seeing the uncertainty there. \"Don't leave things undone or unsaid. You never know what the next day may bring and regret that you never got the chance to make it right. You obviously have strong feelings toward him if you have been day dreaming about him for weeks,\" her mother gave her a sly look. \n\n\"I hate when you use that maternal wisdom and logic on me,\" Grace groaned and got up grabbing her bag from where it lay on the floor and rifling around for her phone. \"I'll be in my room,\" she said quietly and hit the dial button.\n\n\"Finished your tantrum?\" Tristan had answered almost immediately.\n\n\"No,\" she said petulantly, \"My mother is making me call you and explain what happened just in case you didn't really send Elaine and Wain to my apartment.\" She realised how that sounded as soon as she had said and wished she could have sucked the words back in when she heard his chuckle.\n\n\"Such a princess,\" he laughed, \"No, I didn't send them, I was quite surprised they had been there.\"\n\n\"She doesn't like me at all, called me a trollop. Who says that these days?\" Grace was incredulous.\n\n\"Well you are a sexy little thing who seduced two of her brothers; she is hardly going to think you're a saint is she?\" Tristan voice still held amusement. \"Then there is a matter of those photo's all around Lad's club.\"\n\n\"Oh gawd,\" she groaned.\n\n\"For what it's worth she was impressed by you,\" he said softly.\n\n\"You weren't there Tristan she hated me,\" Grace assured him, \"and truthfully the feeling was mutual by the time I left.\"\n\n\"I can imagine,\" he said, \"Why did you leave though?\"\n\n\"They wouldn't,\" Grace said simply, \"and after the other night at work I just couldn't stand there and be bullied by anyone again, no matter how much I like you. I guess I just realised I don't know anything about you and you seem to know everything about me.\"\n\n\"What do you want to know?\" he asked.\n\n\"Everything,\" she laughed.\n\n\"Come over,\" he said in his deep rumble, \"You can see where I live, and ask all the questions you like.\"\n\n\"I'm at my parent's. It would take over an hour to drive back into the city,\" she said.\n\n\"So?\" he rumbled.\n\n\"So it's late and we really don't do much talking when we are face to face,\" she gave a half laugh\n\n\"So?\" he repeated.\n\n\"So I have to be at Adam's in the morning for this costume thing at Lad's tomorrow night,\" She realised her excuses were just that, \"I will need some sleep if I am going to make it through that ordeal.\"\n\n\"Bullshit excuses,\" he growled, \"But I will accept them this time if...\"\n\n\"If?\" she queried.\n\n\"If you come home with me tomorrow night and stay the weekend,\" he had a hint of a chuckle in his voice and she could imagine his arrogant smirk in place.\n\n\"The whole weekend?\" She was quite excited about the prospect.\n\n\"At least until Sunday afternoon,\" he negotiated.\n\nGrace didn't exactly say yes nor did she say no as they continued to talk and it was only when she began to yawn more than talk that Tristan finally let her go to sleep.\n\nHer parents woke her early assuming she needed to make the long drive back into the city for work and though she didn't have to go to work she had to meet with Adam. She hoped this would be the final one, and put an end to the madness that had taken over her life. Aside of seeing where the flirtation with Tristan went, she stopped short of calling it a relationship; she just wanted her world to go back to normal.\n\nShe arrived at Adam's shortly after nine after going home and packing a small bag into her car for the weekend in case their plans worked out this time. She was immediately swept into the studio and made to strip. Grateful she had had a large breakfast with her parents Grace allowed Adam to fuss about and do his thing all day and by late afternoon he finally stopped and stood back grabbing his camera. \n\n\"More fairy-tale than mythical but it works. Take a look,\" he indicated the large mirror.\n\nShe had been transformed into a beautiful swan princess and she smiled at her reflection. \"It's beautiful Adam,\" she breathed softly. She lightly touched the delicate feathers that curled around her ribs and cupped the underside of her breast letting her white painted nipples poke through the delicate softness. Feathers hung from her arms so that when she raised them there appeared to be delicate wings and she wore small panties of latex to match the thigh high stockings that clad her legs. The skirt its self was held in place by moulded plastic that curved around her hips and though open at the front it cascaded like a waterfall back behind her to pool in a short train. He had really out done himself. He topped it off with a spectacular tiara and a half mask that covered her eyes and gave her the sense of anonymity she needed.\n\nAdam began his usual taking of photos as she preened before him. There was a brief lull as Kane arrived to pick them up and Adam went to shower and change. Waiting until Adam had disappeared Kane went back into the other room and came back with a small take way container of Singapore noodles. \n\n\"Here I knew you would be starving, but for god's sake don't spill any on the costume!\" he grinned at her and she hugged him cautiously kissing his cheek. \n\n\"Thank you, thank you. Maggie is one lucky girl. Is she working late again?\" Grace asked as she stood at the tall drafting desk to eat carefully.\n\n\"Yeah she is meeting us there later,\" Kane said with a sigh.\n\n\"She better watch out with the way you have been looking after me so well lately, I might just steal you away from her,\" Grace grinned.\n\n\"Promise?\" Kane said with a sly smile and Grace giggled.\n\nGrace ate quickly and was pretty much done when Adam came back in wearing a dark grey suit and looking very distinguished. Grace quickly stepped away from the drafting desk and inspected him as he had done to her. \"Not bad, I guess,\" she smiled.\n\nHe picked up a hand-painted tie featuring a dragon and pocketed a small digital camera. Shall we go?\"\n\n\"Sure I just need a small bag from my car in case I need to change later,\" she lied easily not wanting to tell Adam about her weekend plans, \"Lad can keep it in his office can't he?\"\n\n\"I guess,\" Adam said dubiously, \"but you won't need it, you look amazing.\" Kane agreed but she got the bag anyway. Adam supervised her getting into the car carefully making her sit almost sideways and trailing the train out across the seat before getting into the front seat with Kane.\n\nFrom the time she arrived and handed her bag to the girls in the cloak room to look after Grace barely had a minute to think. She was introduced to a steady stream of members and employees before the doors to the public section of the club opened at eight. She caught glimpses of Tristan in the background as she was swept from one group of people to another then suddenly he was beside her wrapping an arm loosely about her waist.\n\n\"I am sorry,\" he interrupted an elderly gentleman who had been speaking while looking directly at her breasts, \"I need the swan princess for a few moments, please excuse us.\" He bent his head to rumble in her ear, \"Would you like a drink? Something blue and toxic, perhaps?\"\n\nShe laughed turning her face up to his, \"Iced water would be good right about now,\" she said quietly and he kissed her lightly. It wasn't until they were standing close to the bar that she realised who Tristan had stood her next to. \"Oh god,\" she whispered.\n\n\"It seems,\" Elaine said haughtily, \"That I owe you an apology. I am sorry you are not a trollop.\"\n\nPulling her shoulders back to reveal more of her breast than was necessary she looked the woman in the eye, \"I am sure you are, it would have made this a whole lot easier wouldn't it?\" Elaine recoiled as if slapped. \"I am happy to hear your apology whenever you're ready.\" Grace was not about to let this bitch off the hook so easily and stared her in the eye.\n\nTristan returned from the bar holding a tall blue glass and grace eyed it warily, \"It's water, he rumbled. \"Everything all better now?\" He looked from Grace to Elaine who was clearly not happy.\n\n\"Well to recap,\" Wain said trying to hold back a smile, \"Elaine said she was sorry that Grace was not a trollop to which Grace replied that she was sure that Elaine was because then she wouldn't have to apologise but that she would listen anytime Elaine is ready to.\" Wain let a small chuckle escape his smile. Elaine looked horrified and Tristan scowled at her. Grace stood sipping her water during the exchange. \n\n\"It was lovely to see you again Wain, but I really must go and find Adam and see if I can get out of all these feathers yet, I am feeling a strong urge to preen,\" Grace touched Tristan's arm, \"Thank you for the drink,\" she leaned up to kiss his cheek and moved away from the group of three circulating around the room looking for Adam.\n\n\"Hello,\" she said to the model of another finalist.\n\n\"Hey there, you look amazing,\" the girl smiled.\n\n\"Do you think if we found the other model they would let us take a picture all together?\" Grace asked liking the other model instantly. \"Adam brought a camera with him.\"\n\n\"Let's find out,\" the two girls spotted the other model easily; he was tall and dark looking as a gothic style vampire. The vampire collection would win the contest, she had no doubt about that, but Grace liked being part of final collection and knew it would all be over after tonight. \n\nDamon, she found out the vampire models name was, was not as easy going as the two girls but he did agree to a photo if they checked with the designers. Janet, the other female model climbed up on a chair and then the table calling out, \"Could the three designers make their way over to me please.\"\n\n\"What's going on?\" Lad appeared beside Grace.\n\n\"We just want a photo together but the stick in the mud there won't do it without his designer's permission,\" Grace laughed and took another sip of her water.\n\n\"This is as good a time as any,\" Lad shrugged. He waited until he saw the three designers approach before stepping up onto the small table himself. \"I would like to thank you all for indulging my little contest and voting for your favourites in the public area over the last two weeks. It was a close contest in the end and I would like you all to thank the three designers and their models.\" There was a brief quiet spatter of applause. \"Unfortunately there can be only one winner and that is...\" he paused melodramatically, \"The Rocky Horror Twist.\"\n\nJanet whooped and danced back up onto the table beside Lad. He held out his hand for Grace to follow and waved Damon up beside them. Flashes from a multitude of cameras went off and after a few minutes Grace hugged Janet and climbed back down from the table. She found Adam and explained that she really wanted to change now and he grinned at her leading her back to Lad's office.\n\n\"Here, I made you a gown for tonight, change so I can look at it before you go out,\" he laughed at her look of surprise, \"We're a team tonight; you need to be wearing my designs.\"\n\n\"This dress is amazing, Adam,\" Grace said, a little overawed by the attention to detail in the sequins, beading and hand-painted chiffon. She left her tiara and the heavy face make up in place as she twirled for him the tight semi-revealing dress. \"I love it, can I keep this one?\"\n\n\"Of course,\" he said bundling her costume back into the bag the evening gown had hung in. They walked back into the member's area of the club again. She smiled as she still commanded attention from those gathered and was asked to join small groups of people to talk about her gown and Adam as a talented designer.",
        "\"Time to relax and celebrate,\" Tristan rumbled in his deep baritone as he appeared beside her and handed her a glass of champagne. He put his hand around the top of her back, stroking the side of her breast through the sheer material as she took the glass and sipped at. A blush crept into her cheeks as she felt a tingle run up her spine. He stood so close behind her that she could feel his body heat through his suit as they chatted to others in the small group, keeping his hand firmly in place caressing the side of her breast.\n\nFinally released from her costume and enjoying the glass of champagne, Grace excused herself to visit the bathroom, and drew away from Tristan's warm presence. Going past the cloakroom she took out a small evening bag she had packed with the necessities and disappeared into the ladies. With great relief she stood before the mirror applying a new coat of lip gloss and marvelling again at how well Adam knew what suited her short curvy figure when Elaine waltzed in.\n\n\"You're not the typical gold digging bimbo that chases Tristan,\" Elaine pursed her lips surveying Grace as she stood beside the mirror. \"It would appear that for the first time in his life he is the pursuer.\" Elaine let a half smile curl her lip. \"The fact that you also fell into Lance's bed however makes me believe you are not the sweet innocent...\" she waved her hand over her shoulder towards the doorway, \"they would have me believe.\"\n\nGrace threw her lip gloss into her purse, ignoring the tone of accusation she used. Grace turned to look at the tall svelte woman and pulled her shoulders back swallowing loudly. \n\n\"You can either make this easy or make this hard but by all means feel free to ignore my presence if it disturbs you so much, personally I would prefer that,\" Grace said as she moved to walk past her. Elaine's hand lashed out and grabbed her arm. \n\n\"I'll give you the benefit of the doubt for now,\" Elaine said magnanimously, \"But if you hurt anyone in my family, I will destroy you.\"\n\n\"Oh how lovely,\" Grace said her voice dripping sarcasm, \"I am sure we are just gonna be bff's after that little heart-warming speech.\" She pulled her arm from Elaine's grasp and left the room. Seeing Wain hovering with a worried look Grace smiled brightly and walked over to him. Flirting outrageously she stood close and ran her hand down the front of his shirt before she leaned up to whisper in his ear, \"I would get out of harm's way if I were you, I don't think that went exactly as she imagined it would.\" Grinning broadly she walked away back into the member's lounge finding Tristan leaning against the bar.\n\n\"In an effort not to have all your siblings ready to squash me like a bug I need to go make a phone call, I will be back soon,\" Grace whispered in his ear and smiled as he quirked an eyebrow at her. He reached out and took her hand walking with her back to Lads office. \"I probably should ask before using his office, shouldn't I?\" Grace said as she pulled her phone out of her bag. \n\nTristan said nothing but sat in a comfortable chair watching her. Leaning against the desk she dialled the number attached to the text message from Val. She explained about her hectic few days and begged for time to consider his proposal. She explained she wasn't really sure she possessed the experience and know-how to run a department herself but the offer was very tempting, if only she had a few more days to really give it some considered thought. They agreed to meet on Tuesday for lunch at Steward's caf\u00e9 again.\n\n\"One down, three to go,\" Grace smiled at Tristan as she hung up. \n\n\"Who else wants to squash you like a bug?\" He chuckled.\n\n\"Well, Elaine just met me in the bathroom and I am just sure she and I are going to be bff's in no time at all,\" she rolled her eyes. \"Wain by proxy, are they joined at the hip?\" Grace continued over his chuckles as he looked at her waiting for her to continue. \"Lance called me and asked me to dinner Wednesday, but I missed his call because of, well you know, I said I would try and catch up with him soon but that was before last night and our conversation so...\" She paused and looked at him, \"I usually make you mad at me at some point when we spend time more than a few minutes together and that just leaves Galahad the Good who seems to believe Adam's version of who I am, a sweet, ugly duckling that was transformed into a swan tonight.\"\n\n\n\n\"You confuse Elaine, she is threatened by you,\" Tristan's deep voice rumbled. \"My brother's all love you. You're a princess and Elaine has been the only princess of our little castle for a long time.\"\n\n\"I confuse her?\" Grace laughed, \"Your whole family confuses me; I meet you and within the next few weeks I am surrounded by your siblings. I'm an only child but this can't be normal can it?\"\n\nTristan chuckled and stood walking toward her. He bent his head kissing her lightly as he pressed her against the desk his mouth moving to her ear as he rumbled, \"I don't think anything about you is normal.\" He kissed her again before she could argue with him, passionately and deeply taking her breath away and feeling her tremble in his arms.\n\n\"Ready to get out of here?\" He murmured breaking the kiss. Grace nodded looking up into his dark smouldering eyes. \"Good,\" he responded and helped her to stand before leading her from the office. \n\nThey circulated around the room looking for Lad and Adam to let them know they were leaving. Adam was in his element, enjoying being courted by numerous glamorous seeming couples to design for them. Once Grace was beside him he hung onto her using her as a model of his designs. She felt Tristan move close behind her his hand moving over her bare skin in the backless dress. She drew in a deep breath as she felt his fingers move under the edge of the material at her side and tickle over her skin to stroke the side of her breast.\n\nGrace turned slightly and stepped forward in an attempt to dislodge Tristan's hand as his fingers crept further underneath the fabric covering her breast. \"I am going to go now,\" she said softly to Adam, \"I'll call you tomorrow, okay?\" \n\nLooking past her to Tristan and nodding, he kissed her cheek and smiled, \"Thank you my mythical model, I really owe you one.\"\n\n\"Don't worry I won't let you forget it,\" she grinned. \n\nThey walked through the club with his hand still beneath the fabric of her dress. She stopped at the cloakroom to pick up the small bag she had packed as Tristan growled in her ear, \"You won't have any use for that.\"\n\n\"Humour me,\" Grace laughed.\n\nTristan stood behind her as the bag was retrieved, his hand gently massaging her breast as he kissed her neck. His free hand ran up her leg lifting the gown to expose more of her through the already high split in the fabric. She whispered, \"No wonder your sister thinks I am a trollop.\" She put her hand over his trying to lower the dress again.\n\n\"Princess Prick Tease,\" he growled, \"You have no idea what it does to me seeing you tease all these guys who can only dream of having you.\" She glanced over her shoulder seeing that they had attracted the attention of several people who had looked in their direction. She quivered in anticipation of being with Tristan again as she took the bag and let him propel her before him as they walked out into the night air.\n\nThey crossed the now quiet road and went down a block entering a heritage style building. She hadn't realised Tristan lived in the CBD. The trip in the lift was entirely taken up with a soul deep kiss that left her weak-knee'd and when the doors opened he led her across the corridor and into an apartment facing the street. Large arched windows filled the entire front wall and while above the street on the second floor she could see the glow of the street lamps and the twinkling lights of the few single level buildings that lined the river bank.\n\nTristan let go of her taking off his jacket and tie as she moved across the soft carpeting silently to the window. The arch dwarfed her as it stretched from floor to ceiling and she could see the club they had left quite clearly as she drew her eyes along the street and river that rippled from a passing party boat. Soft music began to play as Tristan moved behind her once again kissing her neck and swaying her hips in time with his to the music.\n\nHe kissed her neck as his hands ran lightly over her shoulders and down her arms to her wrists pulling them back behind her making her arch slightly toward the window. He pressed forward rubbing his cock into her hands through the material of his trousers. She grasped at him, massaging the impressive cock.\n\nHe pulled her closer trailing kisses over her shoulders as he lowered the thin straps of the dress, his hands moving to cover and cup her breasts as they continued the slow dancing to the soft music. Grace leaned back against him, arching slightly more as if begging his hands for their attentions; she continued to massage his growing cock as they moved in unison. It throbbed in her hand and eager to renew their physical relationship she began to fumble blindly for the button and zipper of his pants. She could see her own reflection echoed back in the window, her dress half lowered and the large hands sculpting the soft flesh of her breasts. She realised she was exposed for anyone to see from the street below should they dare to look up but with a flick of her thumb the button of his pants came free and the zipper slowly descended causing her to close her eyes as she moved her hands closer to their goal.\n\nTristan felt her quiver with desire and he trailed kisses down her spine, his hands moving to her hips pushing the dress further down her body to pool at her feet leaving her clad in panties only. His larger body and stance kept her firmly in the small nook created by the stonework arch of the floor to ceiling window.\n\nHis hands ran slowly down her body again and trailed up her inner thighs widening her stance and brushing lightly over the white lace of her panties. He smiled as she sighed in pleasure, his fingers delving beneath the panties to tease her clit, satisfied only when he could feel the tremble run from her legs up her spine and hear her breath quicken with the small whimpers that escaped her.\n\nGrace was beside herself with need, closing her eyes she blotted out the world before her, she felt his pants slide down over his hips as she sought the now hard cock within his briefs. She felt him hook his fingers into the sides of her panties and froze realising she would be totally naked to the world below her on the street but as he kissed his way down her spine again lowering the panties she didn't care, he made her feel so good. He took a moment as he stood to remove his own briefs and pressed against her back once again.\n\nTristan ground his cock against her ass as his fingers threaded into her hair dislodging some of the pins holding it in place as he pulled her head back and kissed her deeply his free hand roaming over her neck and breasts once again. Turning her suddenly and taking her in his arms he kissed her again forcing her back against the window revelling in what a sight it must be from the street should anyone dare to look up.\n\nPlacing a hand on her shoulder he encouraged her to kneel and she smiled looking up at him as her knees bent easily. The heat and sparks that flew between them were palpable and she could see the level of his desire in the depths of his dark smouldering eyes. Knowing exactly what he wanted she squirmed in her own need as her fingers curled around his shaft. She bent forward placing light teasing kisses on the tip of his cock before rolling her tongue around the swollen head smiling at his groan of pleasure.\n\nGrace could feel his hands begin to thread into her hair again as she licked along the length of his shaft, bringing a hand up to cup his heavy sac. Lowering her head before he could take control of her actions she ran her tongue over his balls listening to the rumbling groan low in his throat. Keeping a hand on his cock and stroking slowly she ran the flat of her tongue over and around each hanging jewel before sucking one into her mouth. She felt his body tense and his groan become a louder growl and his hands twist in her hair. Leaning back up she kissed the tip of his cock, parting her lips slowly to take him into the warm cavern of her mouth all the while fluttering her tongue along the underside of his cock.\n\nTristan held her head in place and began to move slowly in and out of her mouth, forcing more in and hearing her gag slightly before she swallowed hard around him. He closed his eyes and gritted his teeth as he moved at a faster pace, going deeper as she took more of what he gave her. He looked down enjoying her struggle to accommodate his needs, he growled loudly and pulled her up suddenly by the hair spinning her to lean against the window pushing her until all of her was exposed to the world. He took ragged deep breaths and his hands trailed over her back and sweetly rounded ass.\n\nGrace felt him move against her once more, oblivious to the world outside she revelled in the sensations he gave her and his cock burnt hot and hard into the crack of her ass. His hands ran between her legs spreading her thighs and delving into the warm wetness of her cunt. His lips moved over her neck and up to her ear before he rumbled, \"Beg me.\"\n\n\"Please,\" she whimpered, \"Please fuck me Tristan, you're right, I need it, I need you, fuck me senseless again.\" She ground back into his groin feeling the hard cock against her.\n\nTristan bent his knees letting his cock travel down the crack of her ass and beneath her. Like a homing beacon he found the dripping wet hole easily and straighten his legs slamming up into her making her shudder and cry out in pleasure. His fingers still teasing and rolling her clit he lifted the other hand to her throat squeezing slightly as he pounded into her hard and fast.\n\nGrace pressed her hands and forearms against the glass of the window to steady herself as he fucked her like only he could and she felt the tell-tale quivers rise within her. \"So close,\" she cried, \"I need to...\" she cried out hoarsely as the fingers on her throat grew tighter.\n\n\"Come then Princess; show all those lucky people down there what I see, cum,\" he slammed into her again and again, his hand wrapped around her throat as he pinched and twisted her clit sending white lights of pain directly to her brain triggering off a monumental orgasm. She gave a hoarse cry from her constricted throat and felt Tristan stiffen and pulse within her as her own orgasm continued to roll over her in wave after wave of ecstasy. She floated on a high so big that knees buckles and she slumped in Tristan's arms and shook with force.\n\nTristan's knees buckled with his own intense pleasure and he collapsed to the floor pulling her with him. Grace lay sprawled on top of him wondering how this man managed to make her so uninhibited and gave her such amazing orgasms. She curled against him and whispered, \"wow.\"\n\n\"Don't relax too much, I haven't finished with you yet,\" he chuckled."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "costume",
        "halloween",
        "knights",
        "round table"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/princess-prick-tease-ch-03"
}