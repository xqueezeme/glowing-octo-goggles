{
    "title": "Bound to My Mate Ch. 20",
    "pages": [
        "ENJOY! DW\n\n*\n\nAll the unmated were in a frenzy over the meetings with the human women that were coming up. The den was alive with excitement and anticipation. It was hard to miss. \n\nThe first group of women were being brought to us by Cedric Benson, Will's father. He and his pack had found them when they cleaned out the rouge dens in their territory. Much like the women we had found, they were being kept and claimed by the packs. Every effort went into finding them mates. \n\nThe pack was sure that the women belonged in the werewolf world. They were seen as a treasure trove for the unmated. Nobody doubted they would be special and unique.\n\nThe whole thing had confused me before Joel explained. The wolves worked with humans every day, most of them. It wasn't like they had never seen a human before. I couldn't understand what made these humans different. \n\nWhat I didn't grasp was the focus of their belief system. \n\nThe wolves trusted fate and believed their fate was sealed by their goddess. Considering how they found their mates, that made sense. They believed any human dropped into their lap was destined to be mated to a wolf. In their opinion, why else would Luna have sent them that human? \n\nThat made sense to me, especially after watching Lucas and June's relationship. Lucas became a different man, a calmer man once June arrived. It was hard not to trust a system that worked such miracles. \n\nFrom the moment she arrived, Lucas spent every minute in the infirmary with June. We even ended up rolling a cot in for him to sleep on, because otherwise he'd sleep on the floor. The big man never left her side.\n\nI was grateful for Lucas' help, because in the beginning June was kept too drugged to do much. He fed her when she was awake and kept her comfortable as she slept. I was shocked the first time I saw him change the bag of intravenous fluids. There was nothing he wouldn't do for her. \n\nJune was doing something to him, too. Lucas seemed calm. He didn't startle when the door opened and his eyes only darted around when she was in pain. Lucas was serene as he cared for his injured mate. \n\nThe human women that stayed in the infirmary took note of Lucas' continued presence. They watched everything he did with curiosity. Despite my explanations, they could not understand what he was doing.\n\n\"He's in there again, Madam Alpha,\" Donna whispered in my ear one day, \"and he's...he's...it looks like he's washing her.\"\n\n\"Donna, I've told you. Lucas is her mate, he is caring for her. I promise you he will never hurt her.\"\n\nThe women were upset. They didn't mind Lucas sitting with June or talking to her. The idea of him bathing the young, wounded woman really set them on edge though. \n\n\"She told us she only met him once before Dia brought her here,\" Donna insisted. \"June barely knows him and you know how she is when the pain medicines kick in. She wouldn't have the strength to call out for help.\"\n\nThere was panic in the women's eyes. Despite their acceptance of this life, they still struggled with not fearing wolves. After what had been done to them, I understood their difficulty.\n\n\"Come on,\" I said and walked to June's room. \n\nThe women all stayed well behind me as I knocked and opened the door. \n\nLucas sat inside, beside June's bed. He was working on cleaning the skin under her arm when I entered. As I watched, he put the soapy rag back into one tub of water. A second towel from clean water rinsed her arm and then he dried the entire thing. \n\nJune was dozing as Lucas worked. Her eyes were only half open and she didn't seem to notice I'd come in. \n\n\"June,\" I called softly, not wanting to startle her. \n\nSleepy eyes looked up at Lucas first. He smiled at her and pointed toward me. \n\n\"How are you June?\" I asked propping the door open and stepping fully inside. \n\n\"Fine, Madam,\" she said sounding groggy. \"My neck was sore earlier, but Lucas rubbed it and now I feel much better.\" \n\n\"Lucas is giving you a bath today?\" I questioned.\n\n\"Yes, Madam, I'd prefer it if he did it and not the helpers. They are so busy and Lucas doesn't mind,\" she said waking up a little more.\n\nThe women were still behind me and peering into the doorway. \n\n\"You aren't afraid of him?\" I asked bluntly.\n\nLucas cocked his head to the side and looked at me with the oddest expression. June gave a short laugh and winced. She grabbed at her side where the chest tube had been. Lucas' attention turned immediately to her. \n\nShifting his tongue only, Lucas moved the bed sheet out of the way. He took long licks over the entire side of her chest. Unintentionally, he had exposed a taut breast, but he ignored it. He worked across her ribs until she breathed easier. \n\n\"Oh, that's good Lucas,\" June sighed. \"I hope it gets better soon. I feel like such an invalid.\"\n\n\"It will,\" I assured her as Lucas recovered her body with the sheet. \n\n\"Why do you think I would be afraid of Lucas?\" June asked as she stroked a hand down his beard. \n\n\"He's a wolf and you're a human, June,\" I reasoned. \"He's much larger than you and you barely know him.\"\n\nNow both of them had the same quizzical looks on their faces. \n\n\"He's my mate, Madam,\" June said, obviously confused. \"I feel safe with him. Lucas would never hurt me; I know that.\"\n\n\"If I scared you in the past, I apologize, Madam Alpha,\" Lucas said shaking his head. \"I meant no harm those many months ago. My mind was not right then; it is better now.\"\n\nA sound came from the doorway and Donna stepped in shivering lightly.\n\n\"You're nude beneath those blankets, June, he could do anything to you,\" Donna said. \"A man can't be trusted under those circumstances,\" she finished looking down. \n\nJune looked between Donna and I for a moment before she spoke, \"A mate can be trusted,\" she said. \"The men here can be trusted,\" she gestured to the den. \n\n\"I don't see how you know any of that,\" Donna said looking up. \n\n\"My brothers live upstairs,\" June said with authority. \"I know them. They wouldn't stand to watch abuse. They've seen too much of it in their lives. The pack is as peaceful and loving as they claim to be. If they weren't, my brothers would have removed me from here long ago.\"\n\nThe women stood and watched June for a moment longer before they disappeared from the door. \n\nI smiled at June and Lucas after the women left. I thanked them quietly for their help and left so they could continue June's bath.\n\nThe rescued women huddled in Donna's room and talked. After a few minutes I gave in to my instincts and called Rick down. He sat with them for several hours working through their fears. \n\nHe really was amazing when it came to dealing with our psychically injured humans. Absently, I wondered what the other packs were doing with their rescued women, perhaps the same things. Hopefully, all packs had a person like Rick they could turn to. \n\nThe pack continued to be wound up about the impending visit of the human females. It made being upstairs in the den a hectic place. Fights broke out over nothing and Joel was constantly reprimanding someone. I made a point to keep myself out of all of it and stayed resolutely downstairs. \n\nSoon even my sanctuary was dragged into the mating frenzy. June was healing fast from her injuries. She wanted to be better because she wanted to be with Lucas, her mate, in every way. \n\nIt wasn't that I had something against physical relationships. In fact, I was happy to see June talking to the other women about how much she wanted Lucas. I hoped it would help the humans see the good in mated relationships.\n\nMy concern was that June was still healing from two fairly nasty fractures; both her arm and leg on the left side were broken. I worried about her not being able to handle the wolf's aggressive style of mating.\n\nJune knew what the wolf wanted to do to her and it didn't scare her. I told her I didn't want her that active yet. If Lucas got too rough, she could re-injure her healing limbs. That really upset June, she wanted to be with Lucas badly. \n\nIt became a battle of wills down in the infirmary. Every day June found novel ways to tempt Lucas. He didn't want to hurt her, so he made an effort to listen to me. Lucas pleased her daily with his hands and tongue, but she wanted all of him.\n\nFrom outside her door I heard her begging him. She wanted him to crawl over her and take her, damn any consequences. I walked in to find Lucas on the bed beside June, his hand buried between her legs, trying to sate her.\n\n\"Lucas, let me show you something,\" I told the surprised couple.\n\n\"No, Madam, I'm so close. At least let us have this,\" she begged. \n\nThe air was literally saturated with the rich scent of their arousal.\n\n\"Up, Lucas,\" I ordered. \n\nThe beds in the infirmary were all meant to be used for delivering children. They broke apart so the person helping deliver the child could stand between the woman's spread legs. When the bed was like that the woman on the bed was still fully supported by the structure under her, including her legs.\n\nQuickly, I showed Lucas how to use the controls to set the height and how to take the bed apart. He moved between June's spread and supported legs staring down at his flushed mate. The understanding lit his eyes gold. \n\n\"If you stood there, you could have her. It won't make the wolf perfectly happy, but I wouldn't worry that she was in a position to re break any bones,\" I told him. \n\n\"My wolf will wait,\" Lucas promised hoarsely, \"a taste of her will sustain me.\"\n\nAs Lucas removed the rest of his clothes while staring down at a panting June, I covered the little window in the room from the inside. Not that either of them seemed concerned with privacy, but it was the polite thing to do. \n\n\"If she gets too active and her wounds hurt her afterward, let me know and I'll give her pain medication,\" I promised them as I stepped out. \n\nI doubted I'd hear from them for a very long time. \n\nThe bed came apart every day after that. June was insatiable when it came to Lucas. He thanked me for finding a way to let him have his mate and not hurt her while doing it. \n\nThe sexual energy emanating from June's room had ended up making my sanctuary, ie the infirmary, into a strangely tense place. I'd be ecstatic when June was well and could be moved to Lucas' rooms in the den. For now she just needed too much assistance to be put upstairs. \n\nAll this concern about mating brought the talk of the visiting humans back to the forefront. I couldn't escape the pack's excitement about the visit. It felt like we were in sexual overdrive waiting for the first group to arrive. \n\nTo put it lightly, I was glad when the train of SUV's came rolling toward the den holding Cedric and his rescued women. I knew it would be strange while they were here, but it would mean one down. We'd be that much closer to getting back to normal. \n\nEmily had the entire thing planned out. She told me she had scheduled times for the unmated in the pack to meet and greet the women in a safe environment. Everyone unmated was literally on lockdown unless they were at a meeting. It seemed strange. \n\n\"Okay, Joel, question,\" I said watching the caravan drive down the road. \"Why are we so worried about safety? The unmated are being treated like rabid animals. They aren't allowed out and every meeting Emily scheduled has a literal guard of our strongest mated Betas present.\"\n\nJoel raised an eyebrow and looked down at me like I had two heads. \n\n\"Do you remember Luna Ferus, love?\" he asked incredulously. \n\n\"Yes, you got really fresh with me, but I never felt I needed a guard around you.\"\n\nJoel shook his head and looked down at me.\n\n\"Let me explain. It took every ounce of my self control to let you leave that bathroom alone. I nearly shifted when I smelled your arousal in the dining room. Had I been younger or less in control of my urges, you would have ended up slung over my shoulder and mated in the first space I could find,\" he said. \"That would have made you angry. You wouldn't have understood and would have hated and feared me.\" \n\n\"Well, Rick must have super human self control. He never acted out around April. He didn't touch her until many days after they met,\" I said still confused. \"He didn't mate her until the celebration at the lake.\" \n\nRick was young. He should not be in control of his urges according to Joel's theory. \n\n\"Elizabeth,\" Joel sighed, \"what did April smell like the day she and Rick first met?\"\n\nI remembered the dining room and the acrid scent of fear emanating from all the women at the table. April, especially, always smelled fearful. Her panic overwhelmed her, she couldn't sleep more than an hour at a time without medicines, before Rick. \n\nI started to understand and Joel finished with a clarification. \"Rick responded to his mate's needs. She was afraid, near out of her mind with it. The wolf in Rick knew she was safe with you, the Alpha bitch, so he didn't lash out. He just sought to comfort her.\"\n\n\"Oh.\"\n\n\"The women arriving today will probably have been put at ease. They will be surrounded by Cedric's Betas and were promised protection. The Alpha is even traveling with them. If a wolf found it's mate with one of them, the poor man may over react and scare the women. None of us want that to happen,\" Joel finished raising an arm in greeting as the Expeditions stopped in front of us. \n\nThe first person to step out was the Alpha male, Will's father. Betas, male and female, followed him out and started unloading their luggage. They watched the human women and spoke to them in comforting voices. \n\nThe Alpha approached us with a purposeful stride. Joel had told me Cedric Benson was a warm and funny man. He looked a lot like Will, except with slightly graying temples. He eyed me up and down with some humor on his face. I assumed he and Will had probably discussed my many adventures. We talked amicably as the women unloaded. \n\nI saw what Joel meant about the women needing protection. The unmated in my pack were salivating at the chance to find a mate. Behind us no one was in the main lobby of the den, Joel had ordered it clear. The windows in every room were crowded with faces. Cedric's Betas were watching the faces in the windows intently. \n\nOne of the larger men placed his hand on a shivering woman's arm and I heard him softly reassuring her. Much like in our pack these Betas took protecting their charges seriously, from real or imagined threats. The woman leaned into his touch and seemed to take some comfort from it. \n\nI heard laughing voices as our human females came outside. We had told Donna and the other humans that women were coming from another pack. I wanted our humans to come greet them. Seeing that humans were treated well here may help our new guests feel relaxed. \n\nDonna walked out confidently, as always, with a pretty summer sun dress on. She was laughing and talking to April about making a line of women's dance wear. Looking up at the women in front of her she raised a hand in greeting. She stepped forward and took her usual position in front of the rest of the women. \n\nWhat happened next was so fast, even I nearly missed it. One of the Betas surrounding Cedric's women shot forward toward Donna. He was mid shift into a large grey wolf when Joel collided with him. \n\nThe two men landed on the front of one of the Expeditions, crushing the hood. My wolf went into overdrive and I shifted, ripping out of my clothes. I took a defensive stance between our visitors and the door to the den. \n\nIt felt wrong growling at terrified human women, so I just stood and watched. Joel had subdued the grey wolf and forced his submission. As he backed away to stand next to me, Cedric was firmly demanding the man shift back. \n\nI heard the sounds coming from the women Cedric had brought. They sounded worried about the grey wolf, who they called Paul. They didn't understand why he'd acted that way. He was always so sweet to them. They were all very concerned. \n\nCedric was giving the man a talking to I would have hated to get. That much lack of control was not tolerated. He said he couldn't decide if should demote him, beat him, or do all of the above. \n\n\"Well, what the hell is wrong with you?\" I heard Donna scream from behind me. \n\nShe was huddled against the brick face of our den, but she hadn't gone back inside with the other women. \n\n\"Are you and idiot? Don't you have any sense?\" she screamed coming forward. \n\nI had to give her credit, she was acting braver than I would have expected. Admittedly, she smartly stayed behind Joel and I, but she said her peace. \n\n\"I'm sorry,\" the man stuttered. \n\nHe was back to being human with short cropped blonde hair and obvious bite wounds on his neck. Despite the wounds and the tongue lashing, his raging erection had not diminished at all.\n\nHe spoke, looking right past Joel and I, speaking directly to Donna. \"It has been so long. I never thought I would find my mate. You have to understand, I'd given up hope. My wolf was so lonely. Your face, your voice, and your scent they all call to me. Please, I beg you. It was excitement, not aggression that made me act badly. Forgive me.\"\n\n\"That doesn't make any sense,\" Donna said bluntly. \"Why would you shift and jump at someone like that? You could have killed me!\"\n\nThe man, Paul, got down on his knees and held his hands at his sides. \"I just wanted to get close to you, to verify it was real. I swear I'll never hurt you. Please, let me get close to you.\"\n\nDonna had crept slowly forward until she stood between the front shoulders of my mate and I. She was interested in him, too.\n\n\"I feel something strange when I look at him,\" she told us. \"I think I want to be near him, but I'm scared,\" Donna finished looking down into Joel's bright eyes. \n\nJoel walked toward the kneeling man and looked back at Donna. He wanted her to follow him. This idiot Paul could check her out if she allowed it, but Joel would bite his head off if he tried anything stupid. \n\nSince the emergency was over, my animal half was bored. I shifted back to my human skin, since I'd need it to apologize for scaring the six women huddled by the vehicles. \n\nNudity was very acceptable in the pack, but looking at someone new always got the men's attention. I saw Cedric and his crew grin when I shifted back. I rolled my eyes at their blatant attention and started to call out to the human women. \n\nJoel's low growl stopped everything. He had seen the same thing I had seen and it pissed him off. I saw eyes drop immediately off my form. \n\n\"Ladies, I am the Madam Alpha, Elizabeth. I apologize if we scared you. I would like to welcome you to our home.\"\n\n\"We could really use a bathroom break, Madam Alpha,\" one of the small women spoke up from the back of the group. \n\nEmily had showed up with a pair of sweats for Joel and I. She offered to take the women inside to the quarters they would be using. A set of female wolves would be on hand to handle getting them settled, but Cedric's Betas went with the women to make them comfortable. \n\nI threw on the now familiar emergency wear and stepped toward Cedric. \n\n\"So,\" he said crossing his arms, \"it appears that we will only be able to take mated Betas with us when we go on these little excursions. I apologize, Elizabeth, I didn't realize your humans would be greeting us. With the exception of Paul's outburst, it was a good idea.\"\n\n\"I apologize, Alphas,\" the kneeling man said sounding dazed. \n\nDonna had one hand on Joel and was running her fingers along Paul's cheek. \n\n\"Of course you do, Paul,\" Cedric sighed pinching the bridge of his nose. \"As the human stated, you acted like an idiot and ruined one of our new vehicles. No wonder the damned dealership loves us so much.\"\n\n\"I'll pay you back, sir,\" Paul whispered as Donna knelt on the drive in front of him. \n\nPaul made no attempt to grab Donna, but seemed to be content letting her explore him. ",
        "\"You're...aroused,\" she said softly glancing down at Paul's bobbing erection. \n\n\"All for you, beautiful girl. I've never seen a creature so alluring. I promise I'll bring you pleasure, all that you can stand,\" Paul whispered leaning closer to Donna. \n\nHe wanted to scent her, but he didn't want to piss of the large Alpha next to her. Donna had been hanging out with us enough to know what Paul was trying to do. She tilted her head to the right to open her neck up to his exploration.\n\nJoel took that as a sign she was no longer afraid and stepped back. When he shifted to his human form I passed him the pair of sweats Emily had brought. \n\n\"Luna, I hope it's not like this every time,\" Joel said. \n\nCedric grunted in response. \n\n\"So,\" Joel said crossing his arms and watching the other Alpha, \"how are we going to do this?\"\n\nI stood confused for a moment before I understood. Were we losing our female or was Cedric losing a Beta?\n\n\"You already have my son for now, Joel,\" Cedric chided, \"I'd prefer to keep at least a few of my strongest at home.\"\n\n\"Thought he was being demoted. I could use a guy to clean the windows,\" Joel said cooly appraising the male slowly licking up Donna's neck. \n\nThe guy was built like a rock. Joel didn't want him to clean windows that was for sure. He'd make a fine addition to the warriors. \n\n\"Patience, young man,\" Cedric said to Joel and I stifled a laugh, \"this little mating dance isn't done yet. I still have six females you may gain.\"\n\n\"You're trading us?\" Donna shrieked standing up and pointing at Joel. \"You're just going to give us away?\"\n\nShe was panicking now. Fear and anxiety boiled off her in waves. It was actually more than when the giant wolf leapt at her. Donna was safe in the Latro pack, she was terrified to go anywhere else. \n\nPaul rose beside Donna. His strong arms wrapped around her and kept her steady. Paul soothed her and he turned Donna's body toward him. Her accusatory gaze stayed on Joel, though. \n\n\"We will discuss it with you, child,\" Cedric said moving cautiously forward. \n\nTears ran in rivers down her face and Donna looked crushed. I hadn't seen her this defeated since the day we took her in. Her broken sobs were wrenching. \n\n\"You aren't being abandoned,\" Paul said wiping the tears with his thumb. \"You have me. No one will ever hurt you again. Come on, my brave beautiful girl, don't be afraid.\"\n\n\"You don't even know my name,\" she sobbed pushing at his chest. \n\nPaul didn't let her go and smiled instead, \"Tell me your name.\" \n\n\"Donna Marie McCalister,\" she said formally, now alternating between watching Cedric and Joel. \n\n\"Paul Adams of the Benson pack, very pleased to meet you,\" he said kissing the top of her head. \"You have to at least come visit my family,\" Paul said throwing a glance to Cedric. \"My sisters will want to meet you. My mother will love you. Please, don't decide you don't like us yet.\"\n\n\"I have no family to introduce you to,\" she said dully watching the ground. \"I am a dead woman, at least according to the papers.\"\n\n\"We will share family then, Donna Marie,\" Paul crooned stroking her back. \"The women in my family will all side with you in any argument, I am sure. They never agree with me. They will love you unconditionally. It will not replace all you have lost, but I will give you all I have. Please, give us a chance.\"\n\nDonna pressed her face into Paul's chest and shook her head yes. Cedric smiled at Paul and nodded. Evidently Cedric had been through this before and had trained his Betas the way to talk to the victims. \n\nEmily reappeared and I asked her to find a room for Paul and Donna. Donna's room in the infirmary was too busy a place for a soon to be mated couple. I wanted them put somewhere close to the rest of the Benson pack. My gut told me we weren't gaining that Beta. \n\nI was just wondering where Will and Dia were. It was odd that Will had not come out to meet his father. That mystery was solved as soon as we walked in the den. \n\nWill looked absolutely exasperated and stood at an entrance to the hallway under the stairs. It led to a small series of rooms that was infrequently used. Dia stood behind Will, ready to jump behind the door and close off that section of the den. \n\n\"Dad, nice to see you. Please promise my mate you won't hurt her and you don't demand payment for the theft at our den,\" Will said in a bored tone. \n\nCedric grinned and stepped toward them. Feeling a little silly, I got in front of him and spoke with authority. \n\n\"Dia, your son's mate, has requested the Latro pack protect her. We have sworn to do that to the best of our abilities. Please state whether you wish to harm this human, she is under our protection,\" I said hoping my little show would make Dia come out and play nice. \n\nCedric's grin got bigger watching me. I guessed he was old enough all this chest puffing seemed kind of silly. \n\n\"The Benson pack does not demand any retribution from the human that stole from us. I will not punish her or allow any harm to come to her. The human is not in danger, you have my word, Madam Alpha,\" Cedric said formally. \n\nI watched Cedric's face and his eyes were twinkling merrily. Will's father had a much better sense of humor than Will had, this was funny to him. I wished I could tell Dia that. \n\nA piece of paper with keys taped to it hit the marble floor and slid to Cedric's feet.\n\n\"Title to my truck and the keys, they are yours, Alpha Benson. It's the best payment I can offer you,\" Dia said still behind Will.\n\nCedric picked up the package and looked it over. \"I had been told your mate was something of a hell raiser. Have you lied to me son?\" Cedric asked still smiling. \n\n\"I'm not an idiot,\" Dia said pushing past Will. \"I've seen what angry wolves do to humans that attack their dens.\"\n\nDia's eyes were blazing, but the dark circles underneath told me she hadn't been sleeping well. Poor girl honestly believed Will's family would hurt her. It explained the completely out of character cowering she had been doing. \n\n\"Ah,\" Cedric said striding forward and taking her head in his hands, \"I see the stress marring your features, child. This isn't good for you. An Alpha's word is their bond. You have been offered protection by both our packs, you will not be harmed. Come to my rooms. There is a tea my mother used to make. It will relax you.\"\n\nI looked at Joel with raised eyebrow as Cedric lead Dia up the stairs with an arm around her waist. He was still chatting away about the marvelous tea he would make her. He seemed to know exactly where he was going. \n\n\"There is a set of rooms for visiting Alpha's. Cedric has stayed there before,\" Joel said watching them go. \n\nWill passed by Joel following his dad and Joel grabbed his arm. \n\n\"You must impress upon her that what I did was wrong,\" Joel said, \"she still believes an Alpha will lie to her. When you all take your parent's place, she must understand the correct way to act.\" \n\n\"Yes, Alpha Latro,\" Will said automatically. \n\nJoel kept his hold on Will's arm and they didn't break their gaze. Will sighed and said what had been on his mind.\n\n\"She wasn't ever honest with anyone about anything. She found our ways refreshing. Dia respected our culture. What you did, it blew her expectations away. I don't know how to fix it,\" Will said looking the way his mate had gone. \n\n\"Your father is a fresh face for Dia. Perhaps a fresh start,\" Joel sighed, \"I will talk with him.\"\n\n\"Dad will fix this,\" Will said with conviction. \"He has been around a long time and has a great deal of practice. I trust he will know what to say.\"\n\nJoel released Will to follow his father. \n\n\"Perhaps it would be better for Dia if I sent them home with Cedric,\" he said leading me to our rooms. \"Despite Will's conviction he is learning here, his mate doesn't feel safe with us.\"\n\nWe got our answer to Joel's question at dinner. It was a private affair tonight held in one of the smaller dining rooms. Joel and I were breaking bread with Cedric's pack and the human females. \n\nThe hall we were in was still fairly sizable. The women were seated together along a large table. Most of Cedric's Betas sat at another table. Cedric, Will, Dia, Joel, and I sat at our own smaller table. \n\n\"What do you plan to have my Dia do after she is changed?\" Cedric asked Joel. \n\nThe phrasing was surprising, Cedric claimed Dia and was leaving her here. Joel didn't answer quickly enough and Cedric went on to explain Dia was bored just hanging out at the den. She needed something to do. His bright expectant eyes held Joel's for an uncomfortably long length of time. \n\nJoel spoke finally, \"You know what I own Cedric. The business at the docks, the hotel, a new clothing venture, and several restaurants.\"\n\n\"Perhaps the local college has a place for her,\" Cedric said happily. \"None of what you offer could sate my girl's creative spirit.\"\n\n\"I have contacts,\" Joel said slowly. \"I'm sure I could get her placed in the next semester's classes.\"\n\n\"Good, good,\" Cedric said patting Dia's arm, \"you choose whatever you want to study my girl. The bill goes to me, of course. It will give Will time to finish his studies, too. The boy has to get that degree finished.\"\n\nDia smiled at Cedric and looked warily over at us. I didn't get the feeling she wanted to stay. She trusted Alpha Cedric Benson, she'd obviously prefer to be with him. It just wasn't the appropriate time to talk about it. \n\nInstead of focusing on them, I watched Donna and Paul. He was eating at the table with the human females. The women from the Benson back all seemed at ease around him. Our women had initially looked leery of him, but warmed up quickly. I hoped he would be good for Donna. \n\n\"Elizabeth,\" Cedric said bringing me back to the conversation, \"I take it you have not been to one of these events we will have tomorrow.\"\n\n\"No,\" I told him shaking my head, \"I've never been to one.\"\n\n\"They are a strange occurrence,\" he said dropping his tone so no one past our table could hear us. \"We cannot simply parade the poor women past your eligible bachelors without making them feel like meat.\"\n\n\"Oh, no that would be bad,\" I said suddenly realizing I had left the planning of what was probably a delicate event to Emily, who was younger than I was. \n\n\"What we usually do is pretend it is a social gathering. We send in ten or twenty men at a time to have some punch and cookies with the available ladies. As one leaves, another is admitted. The humans find it acceptable and the wolves tolerate the experience. How have you planned it?\" he grinned. \n\n'JOEL,' I shouted through our bond, 'I have no idea what Emily planned.'\n\nOh god, had Emily planned a meat market? Were we about to be embarrassed in front of this old Alpha? My heart fluttered thinking about it. \n\nCedric just continued to smile watching me.\n\n\"Cedric,\" Joel sighed, \"don't panic my mate for fun. She is still new to this. Love,\" he said addressing me, \"Emily called the other packs and we are all doing this the same way. That's how she set it up.\"\n\n\"Oh, good,\" I said feeling relieved, \"but apparently I should have already known that.\"\n\n\"Don't let dad get you down, Madam Alpha,\" Will cut in eyeing his father ruefully, \"he's just good pointing out a person's perceived deficiencies. My mother probably noted you never called them about the arrangements, only Emily did.\"\n\n\"No, no,\" I argued, \"he makes a valid point. I should pay more attention to how things work.\"\n\n\"You are the Alpha bitch,\" Cedric said nodding. \"It is your job to know what is going on at all times. The more attention you pay to what's going on around you, the less mistakes you will make that must be fixed later,\" he said eyeing Joel critically.  \n\n\"Hard to miss that one, dad,\" Will said staring at his plate. \"Be a little more obvious next time and just call Alpha Latro down to his own circle.\" \n\nI looked between my dinner companions and wasn't sure what was going on. Will looked like a petulant child, Cedric looked calm, Dia looked confused, and Joel looked contrite. \n\n\"Dia,\" Joel said looking over at her, \"I owe you an apology I know you are not ready to accept. I never should have forced you to stay with us. Beyond that, threatening to harm you was beyond reprehensible. That is not how I was raised, which Cedric knows, and it is not how I usually act. I feel great remorse and hope one day you will forgive me.\"\n\n\"Thank you, Alpha Latro,\" Dia said reflexively, \"I forg-\"\n\nCedric cut her off with a wave of his hand. \"My dear, I highly doubt this is the one day Joel was referring to. When you truly understand what happened that day, you may forgive him, not a moment before.\"\n\nDia hated being babied. She was irritated with Cedric's assessment that she couldn't figure this out on her own and it showed. \n\n\"Alpha Benson,\" she said formally, \"I am well versed in what a mistake is. I have made plenty of them. That day Alpha Latro was upset because the source had been in this town the whole time. I would have been upset, too, if someone dropped that \"package\" off at my door and refused to explain it. Hell, I might've gone back on my word and made them stay.\"\n\n\"An Alpha's word is their bond, my dear. It is a sacred-\"\n\nDia cut him off this time. Her voice was raising and the human women were openly staring at us. Cedric's Betas were trying hard to ignore us. \n\n\"It wasn't completely a mistake. If I had left and the witches had lived through the night, they would have hunted me down. Will was right, they would have found me,\" she huffed breathing hard and watching Cedric warily. \n\n\"And threatening to torture you?\" Cedric pushed watching her squirm. \n\n\"That was a...bad thing, a desperate act. I can understand why he wanted the information quickly. The witches would have declared war on this pack when they found out Alpha Latro destroyed their money maker,\" Dia said. \n\n\"That was a mistake, then,\" Cedric clarified.\n\n\"Yes, a mistake and I understand why he made it. Desperation to save his family drove him to do it. It's the reason everyone feels safe here. The Alpha would do anything to protect them, even if it shames him,\" Dia said.\n\n\"Ah, is that how it works?\" Cedric asked taking a sip of his wine.\n\n\"Nobody is perfect all the time Alpha Benson. Circumstances drive us to what we have to for survival,\" Dia said. \n\n\"Call me Cedric, Dia. You must understand, an Alpha's life is different. We are defined by our choices. The whole of our society is defined by our choices,\" Cedric said smiling.\n\n\"Then make the best choices you can, but don't expect perfection. Life isn't like that,\" Dia said gulping from her glass and slamming it back down. \n\n\"Interesting perspective,\" Cedric said tasting the vegetable medley on his plate. \n\nDia stabbed angrily at the food in front of her. Watching her I was sure she wasn't far from storming off. What I wasn't sure of was who she was more angry at: Cedric, Joel, or herself. \n\nCedric grinned, quite satisfied with the way the conversation had turned out. I was torn with whether he was trying to force Dia to consider forgiveness or chastise Joel for a bad decision. Really, it could have gone either way. \n\nWhen Joel and I climbed the stairs after our nightly run, I was glad to see the bedroom. This day had been stressful and annoying. If anyone came to our door tonight I was tempted to pretend we weren't home. \n\n\"Cedric is...,\" I whispered to Joel when we curled up together under the blankets. I couldn't find the word to describe him. \n\n\"A good Alpha,\" Joel chuckled, \"always in control and always teaching. He was my father's friend. Cedric swore to me he would do whatever he could to help me when I became Alpha. At the time I was powerful, but too young and inexperienced.\"\n\n\"Who was he teaching today?\" I asked sitting up. \n\n\"All of us,\" Joel grinned crossing his arms behind his head. \"Dia needs to learn how to be a fair and respectable Alpha, capable of both anger and forgiveness. You need to be more involved with certain things and I need to control my temper better.\" \n\n\"You don't mind him calling you out like that, in front of everyone?\" I asked. \n\nI'd never seen Joel talked to like that by anyone.\n\n\"Cedric is my mentor, he'll probably always reserve the right to talk to me like that. It's one of the prices I pay to have the knowledge and wisdom he has gained over the years at my disposal,\" Joel shrugged. \n\n\"So, not even a little irritation?\" I fumed.\n\n\"Are you mad he called you out, love?\" Joel laughed watching me. \n\nI watched him through narrowed eyes. Yes, I was upset another Alpha had noticed I hadn't been up to speed. Being knee deep in guts down in the infirmary was preferable to the boring things I had Emily do for me. I breezed past the mechanics of pack management because Joel and Emily did most of it. \n\n\"Maybe,\" I equivocated instead.\n\n\"Meaning, yes,\" Joel said rolling to face me.\n\n\"Fine, yes,\" I frumped laying down and pulling the covers up to my chin. \n\n\"I'd love it if you willingly spent time with me in pack meetings,\" Joel said softly watching my eyes. \"I like having you near me. Your ideas are always novel and I enjoy listening to them. I know you don't like the meetings, though.\"\n\nMy hand went out to trace the line of Joel's cheek. I had hoped he didn't notice I avoided meetings with a passion. \n\n\"I'll be better, Joel,\" I whispered as his lips brushed mine. \n\n\"I know, my love,\" he said pulling me so we snuggled together, \"we both will.\"\n\nThe next day dawned and I was anxious as soon as I opened my eyes. After seeing Paul's reaction to Donna the day before, I was nervous to see what would happen when we paraded our men past these women. Hopefully, it would not turn into a huge fight. \n\nSeeing the worry on my face as we dressed, Joel consoled me. \n\n\"Love, we've done this before. We just weren't this formal about it. When we brought the women into the den initially, there was a risk. It's why we had them dine with the pack. A wolf finding its mate doesn't have to be violent.\"\n\n\"Quit changing your story,\" I fumed, \"yesterday you said you wanted to kidnap me from dinner that first night. I'm just nervous we're going to have to take down some raging wolf...again.\"\n\n\"I know Paul,\" Joel laughed, \"he's always been full of energy. I believe him when he says he'd given up on mating. His wolf just lost control momentarily. He never would have hurt Donna, though. Probably knocked her down and smelled her hard-\"\n\nI cut him off with a sharp sound. \"Humans are fragile creatures Joel. The wrong move, even a slight one with enough force, could kill. I'm just nervous about it is all. The pack is all wound up about this.\"\n\n\"I'll talk to the pack again,\" Joel promised kissing my head. \"We will remind them this morning how important their control is.\"\n\nJoel and I took our breakfast with the pack in the main dining hall. The Benson pack and the humans ate in a smaller hall. The meet and greet would start about ten and last until it was done. At breakfast, Joel addressed the pack again warned them to be careful. They seemed to take his warning seriously. \n\nThe pack was all excited and we ate in mostly silence, which was strange. When Paul, Cedric's Beta, came into the room the small amount of conversation died. Everyone watched as he came toward Joel and I. \n\nPaul walked with the easy gait of a powerful man. His face carried a small smile as though his appearance in the hall was completely normal. As he approached closer I could see the tension around his eyes, something had happened. \n\nJoel rose and I followed him. We stepped into the food preparation area and Joel ordered everyone out. Paul stepped through the door and closed it before bowing his head to Joel. \n\n\"Speak freely, Paul,\" Joel commanded. \n\n\"Alpha Latro, one of the females became upset this morning. The other women did not tell us because they feared we would lock her in a room in the infirmary. She hung herself from a fan in the room she was staying in,\" he said bluntly.",
        "\"Is she alive?\" I asked, ready to run to the infirmary.\n\n\"No,\" Paul answered softly.\n\n\"Why?\" I asked confused.\n\n\"She wrote a note. She has never stopped believing we were like those that took her initially. The thought of being forced to live that way terrified her. She had been looking for a way out of her choosing, permanently.\"\n\nHe sighed and continued, \"When we told the other women, they weren't surprised. One of them told us she believed the choice of when and how to die should belong to them. Another of them broke in front of us, screaming we could take their freedom, but not their souls. After their outbursts this morning, I'm not sure how many of them really trust us.\"\n\n\"Get Rick and April,\" I said looking at Joel, \"send them in to talk with these women.\"\n\n\"We have spoken with them many times, Madam Alpha,\" Paul said to me keeping his head low. \"I'm not sure what these two wolves could say that would be different.\"\n\n\"Are you questioning my mate?\" Joel growled.\n\n\"I only wished to say we have tried talking to them. It is not as though we have left them to their own devices. It is my Alpha's ability in this matter I seek to protect, sir,\" Paul said with his shoulders curling forward. \n\nPaul was doing everything he could to look submissive in front of Joel. Having had Joel's jaws around my own neck, I understood his impetus. Now was not the time for a power game, though, so I interrupted them. \n\n\"I have someone in my pack that is very good at this, exceptionally good at this, Paul. His mate is one of the humans we found. Call Cedric, Joel. He needs to give Rick and April unrestricted access to his women. We have to fix this before we subject these women to the mating game,\" I said looking at Joel. \n\nI left the kitchen with Rick and April in tow several minutes later. Rick seemed confused to be told he wasn't working in the kitchen today. As we walked upstairs following Paul, Rick spoke up. \n\n\"Madam Alpha, am I not doing a good job in the kitchens?\" he asked. \"I'm not a great cook, but I've learned to cut and section meat. I do it well, most of the time. Has Margaret complained?\"\n\n\"You and I both know your talents are wasted in the kitchen, Rick,\" I told him. \"You are only there to make friends, which I hope you are doing.\"\n\nHe seemed relieved, but still confused. \"Yes, I have new friends. Margaret tries to let me do the food service so I meet more of the pack, but I'm not very good at it. I dropped a tray of drinks yesterday. I haven't learned the correct way to balance one,\" he said. \"What am I doing now, though, if I may ask?\"\n\nWe turned down the corridor leading to the suites the Benson pack were using and April spoke up. \n\n\"It's the women,\" she said softly. \"There is a problem with the women. You want Rick to fix it, the way he fixed us.\"\n\nWe had reached the door the women were waiting behind and I nodded turning to face them. Paul stepped down the hall to greet the other Betas there. They were all watching Rick and April with interest. I know what they saw, a small human woman and a young male wolf. Neither of them looked like anything special. \n\n\"Rick, one of the women killed herself today, the other women don't trust us. We need them to see this our way,\" I said feeling guilty.\n\nI knew what I was asking Rick to convince them to do. Give up their families and their past, just pick up and start over with us. In my heart I didn't believe it was fair. If it had been my choice, I probably would just have let them all go. \n\n\"Madam Alpha,\" Rick said quietly, \"may I speak to you.\"\n\nOh Luna, he was going to refuse. He probably felt like I did and didn't want to play the mind games to make these women see it our way. \n\nOh well, we'd do the mating thing and try to keep them alive until they left our territory. \n\n\"Of course, Rick, say what ever you need to,\" I said sounding defeated even to myself. \n\nRick stepped uncomfortably close to me, but I held my ground. He leaned forward until he was literally whispering in my ear. His breath on my neck made weird little shivers run down my spine. It was disconcerting. \n\n\"It's not my place to tell this to you, Madam Alpha,\" he said quietly, glancing at the Betas lining the hall, \"so I apologize if it seems rude. I get the feeling from you that you think what I do for these women is somehow wrong or a trick.\"\n\nI was surprised with his assessment, but nodded my agreement. \n\n\"It's not,\" he said, \"I've been reading our history in the library on my off time.\"\n\n\"A long time ago, they would occasionally let the humans that stumbled onto us leave. We were lucky when all that happened was the human returned. Horrible things were set in motion when the humans stayed away.\"\n\n\"They tried to forget us, but they couldn't. Most were driven to madness and in their insanity they talked. People would come and hunt us based on the ravings of these crazy humans.\"\n\n\"In the end, we would have to find everyone the human had told, plus the original human. The packs ended up slaughtering everyone that knew. Entire villages were wiped out.\"\n\nI was shocked and sucked in a gasp, but Rick continued to speak.\n\n\"There is something about facing a creature they don't know exists that changes the way these people view the world. We are powerful and fantastic to them, but we do not appear in their history or their beliefs. It is as though everything they have been told is a lie. They begin to doubt. Soon their ability to discern fantasy from reality evaporates. Eventually they can't function in their normal lives and their world falls into bedlam.\"\n\nRick took a step back and lowered his head submissively in front of me. \n\n\"Why did you look all this up?\" I asked him.\n\n\"I wanted to understand why it was so important they stayed,\" he said, \"I saw the guilt in your eyes when you spoke to them. Part of me wondered if such an emotion did not have merit. Perhaps what we were doing was wrong, perhaps what I had helped do was wrong.\"\n\n\"I apologize if I was not clear with you, Rick. I am grateful you saved our women. Please save these women.\"\n\n\"Of course, Madam Alpha, I will do my best. It was important to me that you understand why we do this, though,\" Rick said meeting my gaze briefly before lowering his eyes. \n\nHe was right. There was no way to return to a normal life after this. If we let the women go, they would be always be afraid some not so imaginary creature was waiting for them. The fear would leave them unable to live a normal life. Madness was probably a blessing at that point. \n\n\"Rick,\" I said laying a hand on his shoulder, \"you are wiser than your years. Please help these women accept us.\"\n\n\"Of course, my Alpha,\" Rick said taking April's hand and stepping in to greet the humans from the Benson pack. \n\nI stayed in the hall for a while after Rick went inside. Part of me expected shouting or screaming, I don't know why. These women just seemed angrier than ours ever had. \n\n\"They've had longer to dwell,\" Joel said leaning on the wall beside me.\n\nI hadn't heard him sneak up on me and evidently I had been broadcasting my thoughts to him. \n\n\"You pushed into my mind and reached out to me when Rick invaded your personal space,\" Joel said. \"Evidently your wolf wanted me to know why another male was that close to you.\"\n\n\"He is very perceptive,\" I told Joel watching the door Rick had disappeared behind.\n\n\"Much more so than me and I find that disturbing,\" Joel said laying his arm around my shoulders. \"I had no idea you felt guilty over convincing the women to stay. It never even occurred to me to explain that to you.\"\n\n\"I probably should have told you, but I didn't know how to say it,\" I admitted. \n\nIt really was embarrassing. I should have thought to check the library for the pack's history. Of course there was a documented reason for the way they acted. My thoughts on the matter distracted me and I suddenly noticed Joel was in front of me. \n\nHe had moved directly into my sight line as I stood against the wall. He placed his hands on either side of my head and leaned in. \n\n\"I would much prefer,\" he said coming closer, \"to be the one to explain things to you.\"\n\nHe started to place little kisses along my cheeks and over my ears. A long swipe of his tongue up my neck generated a long shiver from deep within me. \n\n\"This side smells of Rick now,\" he said coming closer and crowding me against the wall. \"I find it very...upsetting.\"\n\nI looked up into his eyes and took a hand off the wall placing it against my neck. I leaned forward until our lips were barely touching and spoke.\n\n\"Then mark me yourself, pack leader.\"\n\nI felt Joel grin against my mouth and then he sighed. \n\n\"Cedric,\" Joel said straightening up, \"wonderful to see you again this morning. Your timing is optimal, as always.\"\n\n\"Ah, young love,\" Cedric answered grinning broadly, \"must you come down to this hallway and remind my poor fellows what they are missing out on at home?\" he asked gesturing to the gathering Betas at the end of the hall. \n\nJoel grinned and pulled me against his side shrugging. Cedric just rolled his eyes at the gesture. \n\n\"I have noticed,\" Cedric said conspiratorially dropping his voice, \"the wonderful little cameras you have set up everywhere. All the public areas seem to be well covered, including the room our guests are having their meeting in.\"\n\nCedric looked toward the closed door in front of us and Joel smiled, nodding. \n\n\"That small seating area seemed ideal for their conversation, as well as, for us,\" Cedric continued. \n\n\"I was assured the cameras would be unobtrusive,\" Joel said. \"Do you find them otherwise?\"\n\n\"No, no,\" Cedric said waving his hand, \"quite the opposite. I did not see them, one of my astute young wolves did. He's had quite a fun time pointing them out to me. No one else even noticed them.\"\n\nCedric glanced up at the camera for this hall and waved at it. \"They would have been useful several months ago when my Dia was acting badly,\" he finished.\n\n\"Would you like to see my security suite, Cedric?\" Joel asked casually gesturing toward the main hall. \n\n\"Why Joel, how generous of you,\" Cedric said motioning to several of the Betas down the hall to come and for the rest to stay. \n\nWe walked quietly into the security suite and everyone stood up. They had obviously been expecting the entourage, they would have seen us coming on the cameras. Joel directed one of the men to set up a a viewing of the camera we were interested in inside a conference room. \n\nThe security men seemed to take issue with the strangers in our midst. They cautiously stood in front of their monitors and watched Cedric's Betas warily. \n\n\"George would be most interested to learn about your set up here, Joel,\" Cedric said motioning to a younger man with him. \"I would like to have a similar arrangement.\"\n\n\"Nate,\" Joel said motioning for his second in command, \"set George up with whatever information he wishes. These are friends and can be trusted.\"\n\nWe left the Betas and went in the conference room with Cedric. As the door closed Cedric cast an eye at Joel. \n\n\"Some of the other Alphas wouldn't mind having a piece of your territory, Joel,\" he said bluntly.\n\n\"Which is why I would never invite them to view this with me in this room,\" Joel said settling into a chair. \"I rue the day I cannot trust my mentor and my father's best friend.\"\n\n\"Just so your young mate is aware, Joel,\" Cedric said taking his own seat. \"I am quite impressed with the security you have here. You have taken to modern technology so well. I would hate to see someone confuse Elizabeth and take advantage.\" \n\n\"Thank you for your concern,\" I said politely and took my own chair. \n\nI got the message, ask Joel before answering questions about our security. It was good advice, I had to admit. \n\nJoel had been right. The old Alpha was always in charge and always teaching. Considering how he still sometimes addressed Joel as 'young man', I wondered how young he must think I was. \n\nOn the monitor, Rick didn't seem to be making much headway with the women. They refused to talk to him. Never one to miss a golden opportunity, he took the time to catch up with April. \n\nThey sat on a love seat holding hands and talking. I knew they didn't spend as much time together since Rick had been in the kitchens. Both of them were enjoying each other now. \n\nRick asked April all about her new job. April went into intricate details describing the ball gown she was making for one of the rich women in town. She had never been commissioned to make something like this before. It was amazing to her, she loved her new job. \n\nEven in school April had never been told designing could be like this. Her family had told her fashion design was a dead field. Wistfully, she said she wished they could see her now; it just wasn't possible. She was in a position she had dreamed of. \n\nThe women started yelling. The wolves were liars and frauds. They had seen their true colors. April was not a human and she was not happy. \n\nI nearly went back down there when April used the sharp end of an antique letter opener to slice her arm open from elbow to wrist. The wound bled furiously. April sat on the couch and watched it, only sometimes blotting the excess away with a tissue. \n\n\"Nobody checked the room for sharp objects before you put the suicidal women in there?\" I asked quietly.\n\nNeither man answered me. They were engrossed with the monitor. \n\nFinally, Rick healed the scratch with a long lick of his tongue. \n\n\"A wolf would have healed from that,\" one of the women said quietly. \"It probably would have been healed by the time the end of the cut was made if she was a wolf. The wolves that took me originally fought all the time. A cut like that never would last.\"\n\nSo it began. They started to talk to Rick and April stayed quiet beside him. She understood this was his show, her part was done. It was like they had planned to use her as an ice breaker.\n\nOnce the women started talking, they couldn't stop. They screamed and cried and told Rick every fear they had. The nightmares, the terror, and the loss they all felt came spilling out at him. He absorbed and dealt with all of it. \n\nIn a room of five women near out of control with panic, he calmed each of them individually. It was amazing to watch. He never forgot a name or confused who told him what story. He used what they told him to lead them all to the same conclusion. \n\nThey had to live, surviving was the only way to win this battle. \n\n\"But we want to live and go home,\" one of the women wailed. \"I have a family. They deserve to know I'm all right.\"\n\nRick calmly talked to them. He asked them all the questions their families would ask. He asked them how their families would feel if they disappeared a second time; it would happen eventually. \n\n\"You've agreed to the change, now. If we let you return home, how will you explain to them you don't age like them anymore?\" he asked calmly. \"You won't, you know, we live many hundreds of years. The aging process is markedly slower.\"\n\nI stopped breathing for a moment. Joel had never said I couldn't see my family anymore. I'd always just assumed I could. How would I explain to my observant aunts and cousins why I didn't get the characteristic family age lines? Would my drunk father notice I didn't really seem to change year to year?\n\nSitting next to Joel I went through the same grieving process the women were going through. I had to disappear, too. It wouldn't be hard. My family was distant, they only saw me every few years. It would take them a long time to realize I was gone. Tears formed in my eyes as I silently said goodbye to them. \n\n\"I will share my family with you, mate. I know it is not the same, but it is all I can do,\" Joel said repeating Paul's words from the day before. \"You may have everything I have, it is all yours.\" \n\nHeedless of the visiting Alpha beside us, I crawled into Joel's lap and cried. Lost in shock, I sat and listened to what Rick said. \n\n\"Your families will accept your disappearance eventually. It is human nature to heal and move on from tragedy,\" he told the women and they screamed at him. \n\nTheir relatives would never move on. I rallied with them, but had no conviction in my thoughts. My family would barely notice I was gone, I knew that. Perhaps the other women were not so lucky. \n\n\"They will or they won't,\" Rick said, \"but the more you appear and disappear out of their lives, will that make it harder or easier?\"\n\n\"We could be normal, if you just left us alone,\" one woman cried on her knees by the fireplace. \"We don't need to be like you.\" \n\n\"Would you walk down a dark street anymore?\" Rick asked the group. \"Would you go camping? Sleep alone? Would you suspect every nightmare fantasy you have ever had could come true? Do you believe in monsters now? Are you strong enough to face them on your own?\"\n\nOne woman had been pacing quietly by the window, I feared she would jump if the window was open. Joel told me the Betas outside the door would not let her get that far. If they heard it open, they would enter or Rick would stop her. \n\n\"Are vampires real?\" she asked quietly. \n\n\"Does it matter?\" Rick asked. \"Did you know about werewolves? In five minutes won't another mythical creature permeate your senses and you will be terrified of that one? I beg you to accept your lives have changed. The only way to deal with it is to stay with us; we can help you, protect you, and guide you.\"\n\nIt continued for hours. The women went round and round with Rick until they each came to the same conclusion. They were not the same, their worlds had changed, and they could never go back to the way it was. \n\nThe women sat around the room in huddled piles. Some clung to each other, some sat by themselves. Rick circulated the room and touched each of them. When none of them recoiled from him, he went to the door and asked for five of Cedric's Betas. \n\nRick directed each of them to a woman. I felt unsure the women would accept comfort from their captors. Wasn't this Stockholm syndrome? Shouldn't this be wrong?\n\nI had to remind myself it was not a bad thing. These women would not survive without us. Their acceptance was paramount in importance. \n\nWe watched as Rick directed each Beta to a specific woman. He instructed them to hold the women and let them talk if they needed to.\n\n\"How did you know?\" one human wailed burying her face into the chest of the female Beta holding her. \n\n\"It is what I'm good at,\" Rick said looking up at the camera in the room.\n\n\"What do you want for him?\" Cedric asked turning in our direction. \n\n\"I'm not trading him Cedric, his home is here,\" Joel responded.\n\nMy mind was still too full of grief to really comprehend. It took a moment to realize they were talking about Rick.\n\n\"Hmph,\" Cedric huffed, \"you've got the boy working in the kitchen, Joel. He has no use to you obviously. Let him come with me. I will train him to his full potential.\"\n\n\"You'd make him into a negotiator, Cedric. Look at the boy, he's a healer at heart. His drive to read people is based on a sincere desire to help. He has no interest in business. Rick would wither and fail in a corporate setting,\" Joel scoffed.\n\nIt felt odd sitting in a business meeting on Joel's lap, but he wouldn't let me leave. Honestly, I was glad he was holding me tight. I needed his closeness right now, because it felt like I was going to fall apart. \n\n\"Perhaps we should have something to eat,\" I heard Rick say on the monitor. \"I'm sure they would bring us something.\"\n\nJoel pressed a button beside him and Nate appeared in the doorway of our conference room. \n\n\"Rick is asking for food. Send them a selection,\" Joel ordered. \n\n\"Chocolate,\" I said looking up, \"send them something sweet, too.\"\n\nJoel and Cedric both looked at me confused. \n\n\"Human women sometimes like to have something sweet to eat when they are upset. It's not a good habit, but it happens.\"",
        "\"Ah, young one, I thought you were a healer,\" Cedric said with mock surprise and clucked his tongue at me. \n\n\"Even bad habits have their place,\" I smiled resting my head on Joel's shoulder. \n\nI felt better now, more like myself. Being near Joel had centered me again. I was going to lose a lot, but I had gained a great deal more. It would take time, but I would heal from the pain. \n\nBrushing my hair out of my face and drying the tear tracks on my cheeks, I had a realization.\n\n\"The big meet and greet was supposed to start at ten,\" I said searching Joel's face.\n\nThe women were not ready for that sort of thing right now and we were hours late for it. \n\n\"I talked to the pack when you went to find Rick. They know what happened. The meeting will be held off,\" Joel said.\n\nI rose from Joel's lap and paced in the room as the men talked. Joel suggested we go upstairs, there was something he needed to discuss with me. After promising to see Cedric at dinner, Joel and I made it up to our rooms. \n\nJoel had made arrangements for a late lunch to be delivered to us. A tray of mouthwatering chocolates were also sent up.\n\nWe ate and spoke a long time about the last part of my change. Joel had been avoiding telling me I couldn't go back. He had not wanted to see me upset. Apologizing for his weakness, Joel told me he had been keeping a secret from me. \n\n\"There have been private investigators poking around down at your old clinic. One of them even came here, but I explained to him we had stopped dating. I told him you wanted to move away, that you headed for New York to work for an international aid group. He will find several false leads there that go nowhere.\"\n\n\"Your family has been looking for you, but they can't find any trace. The contents of the house you had are in a storage facility here. I tried to make it look like you just moved away without leaving a forwarding address,\" he finally told me. \n\nIn a strange way, I was happy. Someone in the family had actually looked for me. I had not expected them to notice my absence so quickly. \n\nThe way Joel had set it up, they would probably just think I had just forgotten about them and moved on. \n\n\"That was my goal,\" he told me still seeming guilty. \n\nIt was my turn to comfort him. Rick was right; I had to disappear. I spoke to Joel with confidence. \n\n\"Thank you,\" I told him sincerely, \"I think your idea will work. There is a cousin I have that is a recluse. He just cut ties with the family and lives in a rustic cabin somewhere in Wisconsin. At least, that's what his last letter said he would do. Hopefully, they will just think I'm like him. It's the most logical explanation.\"\n\nI took a breath and continued, \"You could have told me what you were doing. If I understood that I would have to leave them eventually, I would have worked with you.\"\n\n\"You were doing so well here,\" he said, \"I wanted you to be happy, but there is one more thing.\"\n\nI sat with him and nibbled on the sweets Margaret had sent up. As I sucked on a succulent piece of rich chocolate, I hoped the other women were enjoying the comfort food I had sent to them. \n\nJoel took a deep breath, \"You can't use your last name anymore. You'll need a new name. I've had my contacts give you a new identity...and I changed your last name.\"\n\nI giggled stupidly. My emotions were all over the place. What if had chosen some really awful name for me? Perhaps something hard to spell and I'd struggle with writing a check. \n\nJoel pulled a new social security card and a license out of the desk in his office and handed them to me. \n\n\"Elizabeth Anne Latro?\" I said smiling. \n\nOf course, he'd changed my name to match his. \n\n\"I believe,\" Joel said, \"that it is appropriate in human society for the woman to take her mate's name. I'm sorry you can't keep your own name in the middle as women usually do. It would be too obvious.\"\n\n\"Thank you, Joel,\" I said hugging him to me. \n\nI kissed his mouth tenderly holding his jaw.\n\n\"You taste like candy,\" he marveled dipping down to take my lips again, \"I like it.\"\n\nWe curled in the bed cuddling for the afternoon. I offered sex, feeling guilty about just laying in bed with my mate, but he declined. \n\n\"This is not about me wanting to bed you,\" Joel said into my ear, \"this is about comfort. While your presence arouses me, your sadness sobers it. Let us just be here together for a little while.\"\n\nWhile we lay there I talked and told him about my family and old friends I had. He listened and didn't interrupt. As I spoke about each of them, I knew what I was really doing was saying good bye. Wrapped safe in Joel's arms I let my past slide away, I wished the other women could have such comfort for themselves. \n\n\"Cedric's pack will not leave them. They will stay with the women and comfort them, the way I am comforting you. Particularly with the recent suicide, the Betas will watch their charges very closely,\" Joel told me. \n\n\"The other women in the other packs, they need that strange peace that Rick offers,\" I said as I curled against Joel's chest.\n\n\"We could offer to send him around,\" Joel said. \"Put off the changing of his little mate another month and let him help our extended family.\"\n\nI nodded sleepily. It had been a stressful day and I was tired. Having Joel's warm comfort so near made it difficult not to rest. I faded out listening to his slow steady heartbeat. \n\nDinner much later that evening was a subdued affair. Joel and I once again dined with Cedric and his clan. The women were morose and red eyed. Part of that was grief over losing their friend. \n\nThe Betas they ate with tonight encouraged them to eat and tried to keep the conversation light. The women seemed worn down by the stress of the day. They barely touched their dinners. When Rick appeared, they all smiled wanly at him. \n\n\"Alphas if you don't mind there is a really funny movie that just came out. I had it sent to us,\" he said to us politely. \"Everyone seems to be done eating. It's really a great film, but pretty raunchy.\"\n\n\"We are wolves. We are hardly formal, son,\" Cedric boomed smiling. \n\n\"I had them set up in the next room where there are lots of places to sit,\" he said motioning and walking closer to Joel and I. \n\nRick took me in for a moment before smiling softly. \"Madam Alpha, you may like the film. Would you and Alpha Latro like to join us?\" he asked. \n\nI thought I'd pulled together well after my spell today, but he could still see it. \n\n\"Save us a seat,\" Joel said rising and offering me his hand. \n\nRick was right. The movie was uproariously funny. Perhaps due to our volatile emotions, the human women and I laughed harder than anybody. It did seem to break through the tension in the room quite effectively. \n\nAs I looked at the women all crying with laughter now, I hoped their good moods would last. \n\nThe next day broke drizzly and wet. I fretted that this kind of weather wouldn't bode well for our meet and greet. Nobody had ever talked about what the weather meant to fate. \n\n\"I don't know,\" Joel said when I voiced my concern, \"maybe we should sacrifice something to the rain god.\"\n\nI stood stunned. I'd never heard of Joel talk about sacrificing anything and I'd never heard of the rain god. My face stayed frozen in shock as I tried to remember where in Joel's office he kept the pack lore. Perhaps I could find more information there. \n\nWould my lack of preparation for this life never end? I wondered. \n\nLooking up at Joel, he was smiling broadly before he poked me in the ribs.\n\n\"Kidding,\" he said stepping away as I swung out to smack him. \"Rain just means the forest is getting water, as far as I know.\"\n\nWe repeated our warnings to the pack at breakfast again. Rick had said we could have our meeting with the females. They were down, but they wanted to get this done. All of them knew why they were here. \n\nWhen the pre appointed hour rolled around finally, I found myself in a small library with all the human women. Even Dia, April, June, and Donna were present. Our humans were just there to provide moral support. I made small talk with them as several mated Betas from each pack strolled around. \n\nMargaret had set up a large glass punch bowl in the center and decorated a huge table with an assortment of tea cakes. Coffee and tea were also present if anyone wanted to partake. After some urging, Margaret got all the women to try something. Pretty soon, she had them casually nibbling and sipping their drinks as they perused the selection of books along the walls. \n\nRick walked up to me in a well tailored suit and tie. He looked the part of young professional, until he tugged at the neck of his button up shirt.\n\n\"Stop it,\" April fussed pushing his hand away, \"it's supposed to fit like that and it looks very nice.\"\n\n\"I agree,\" I said brushing my palm over the lapels of his suit. \"You look very well put together.\"\n\nHe really did. The blue suit and modern tie looked sleek. Someone with some taste put this outfit together. I imagined April had helped.\n\n\"Nate's youngest brother is my size. He let April pick whatever she liked out of his closet,\" Rick said pulling lightly on the shirt again. \"Alpha Latro said we were to be dressed up, but it feels like I'm wearing a dog collar.\"\n\n\"Aww, come on, kid,\" a large Beta from Cedric's pack joked coming up behind Rick, \"you telling me Latro didn't put you in a flea collar when he took you off the street? Heard you guys were kinda mangy at first.\"\n\nMy temper flared and my eyes turned gold. Nobody talked to a member of my pack with that much disrespect. Rick was mine to protect. \n\nI summoned the wolf and held onto my human skin. The door opened conveniently on the other side of the room and the Beta soared through it. I'd moved with my legendary speed and hurled him into the hall through the open door. \n\nA dull crash sounded outside and the women all turned to the sound. \n\n\"What was that?\" Donna asked the woman she had been talking to, but none of them had seen anything.\n\nThe Betas that had watched weren't moving; they just stared at me. I politely excused myself and walked calmly out of the room. \n\nJoel and Cedric were watching from one side as the Beta dusted himself off. His eyes were glowing fiercely as he stood up. The wall behind him was destroyed, the small decorative table he'd landed on was demolished. He eyed me warily. \n\nI came to rest in front of him and addressed him as cooly as I could, \"I believe we have a difference of opinion. How far you would like to take this difference of opinion is up to you.\"\n\nThe man straightened his outfit and bowed his head slightly to me, \"Madam Alpha, I apologize if I offended you. I will watch my tongue when talking with your pack in the future.\"\n\n\"Lovely,\" I said turning to Cedric and Joel. \"Cedric, please educate your pack members. I don't tolerate disrespect in my home and I'd hate to have to replace anymore wallboard.\"\n\nJoel looked me appreciatively up and down. We'd have to talk about it later. \n\n\"You'll be going back inside, mate?\" Joel asked, \"I'd like at least one of us in there.\"\n\n\"Of course,\" I said turning and striding back toward the door. \n\nAs I turned I saw a line of my eligible, unmated standing and watching. They looked taken aback. Meeting the eyes of several of them, I saw them drop their gaze to the floor. \n\nI was pleased. Pulling the wolf back inside, I felt the gold bleed out of my eyes. \n\nStepping back in the library, my pack members were grinning broadly. Cedric's pack gave me wide berth. The women were oblivious to all of it and waited patiently.\n\nThe unmated came to meet the women in waves. They would take a snack, shake hands, and make small talk. I knew from my experience it wouldn't take that long. Joel was standing outside telling them how to act. \n\nThe Betas inside all held something in their hands, usually a glass of punch they didn't drink. They were waiting and watching for someone to lose their cool when they saw their mate. We really could have used this level of diligence two days ago, I thought. \n\nWhen Dominick, Joel's favorite tracker, came into the room. I saw what we had been looking for. His eyes locked on a particular human and they never left her. I was sure he had found his mate. \n\nFor some reason Dominick always managed to look like a predator, even in his human form. He was deeply tanned from hours outside training the young ones to track. Even now, in a sport jacket and trousers, he walked like a cagey hunter through the small crowd of people. No one even thought to get in his way. \n\nMoving casually I positioned myself beside the woman he had noticed. Dominick would not attack me and I could be close to protect her if he became uncontrolled. I hoped things would be peaceful, Dominick was tough and wily. Although I stood calmly, I'd rather not battle this wolf. \n\nIt was the first time all day I'd noticed the woman I stood next to. She had on thick glasses and brown hair pulled back in a bun. I knew Cedric would have given them their choice of what to wear, but what she had on was frumpy and didn't match. She looked disinterested. \n\n\"You shouldn't be so bored, your mate may be here,\" I suggested as Dominick slowly made his way over. \n\n\"Madam Alpha, let me make this clear, I've had enough of men to last me a lifetime. I'll become a like you and try to fit in, but I'm just not interested in having anyone around me right now.\"\n\n\"A mate isn't just a man,\" I said and Dominick stopped to listen, pretending to inspect the tea cakes, \"he will treat you well and love you endlessly. It will not be like with the wolves that took you.\"\n\n\"Let's spread that out, Madam Alpha, to any man I've ever known. They are all the same. Spread your legs and then they're done with you. This is a waste of time for me. I don't have a mate and I don't want one,\" she said eyes blazing before she looked at the ground. \n\nThis was not going to go well. I could already tell. \n\n\"Good day, Madam Alpha,\" Dominick said approaching us. \n\nHe offered me a fresh cup of coffee, fixed just like I liked it. I raised an eyebrow at him and spoke.\n\n\"You know how I take my coffee, Dominick?\"\n\n\"I pay attention,\" he said calmly turning his gaze to the woman attempting to slide away.\n\n\"And you are?\" he asked.\n\n\"Leaving,\" she answered taking a step back.\n\n\"Oh, please don't do that,\" Dominick purred. \"I'll be accused of not playing nice at this function. The Alphas were all very clear about what we were supposed to do.\"\n\nThe woman paused and looked unsure. Dominick's reason for her staying seemed benign enough. He was just doing as he was told. \n\n\"I should just have a name tag,\" she mumbled watching her feet.\n\n\"I could guess at your name,\" Dominick offered leaning forward, \"so you wouldn't have to tell me.\"\n\nThat piqued the woman's interest and her indignation for some reason. She looked up at him with her eyes narrowed to angry slits. I could only imagine what she would look like when a wolf was trapped under her skin. \n\n\"That is ridiculous, go talk to someone else,\" she demanded. \"I don't like stupid dating games.\" \n\nDominick must have liked the fire in her eyes. I think he wanted to see it again. He placed his face in hers and whispered one word.\n\n\"Maryellen.\"\n\nShe sucked in a gasp and looked like she wanted to hit him.\n\n\"So you talked to someone about us,\" the woman, Maryellen, fumed. \"Do you want an award?\"\n\n\"I didn't talk to anyone, Maryellen. That's what everyone calls you when they speak to you. I also know you don't like it shortened to Mary, that really aggravates you.\"\n\nDominick should not know that. The women had been kept away from the unmated in my pack for their protection. This should be the first time he met her. \n\nI sent a message to Joel that something was going on and I heard his growl in my mind.\n\nDominick was too crafty for his own good, Joel said. He was an excellent tracker, mainly because he knew how to cover his own tracks so well. It wasn't uncommon for Dominick to get away with something and then brag about it, because no one would know otherwise. Even if it meant punishment, he was proud of his accomplishments. \n\nWhile I had been communicating with my mate, Maryellen had been accusing Dominick of all manner of things. He just stood and smiled while she ranted. Dominick watched her flushed cheeks with pride. \n\n\"If you're good,\" he whispered when she stopped for a breath, \"I'll give you back the knife I took from your room.\"\n\nThat did it. Maryellen lashed out at his larger frame, seeking to drag her nails down his cheeks. Chuckling, Dominick quickly restrained her arms behind her back and hauled her body against his in one swift motion. \n\nThe Betas in the room started to close in and I waved them off. Dominick's reputation was as a lethal fighter. To try to take her from him would lead to a giant brawl. I wanted this done peacefully. \n\nDominick's eyes never left the face of the woman he held. He seemed oblivious to the commotion he was causing in the room as he spoke to her. \n\n\"When I heard about the unfortunate death, I feared for your safety, sweet. I removed anything from your room that could be harmful,\" he said softly. \n\n\"You had no right,\" she said struggling against him and pressing her chest into his. \"It is mine, for my protection. I can't sleep without it.\"\n\n\"You slept fine last night,\" Dominick told her, taking a deep whiff at her neck. \"At first you had nightmares, I soothed you so you never woke up. As I lay beside you in your bed, you snuggled against me. Once you were comfortable, there were no more bad dreams.\"\n\nMaryellen stopped struggling and looked up at her new captor. \n\nDominick spoke softly again when she said nothing, \"You know you slept well last night, better than in a long time.\"\n\n\"You can't do that,\" she finally said, \"Alpha Benson said no one could get in our rooms.\"\n\nI saw Joel enter the library and Dominick noticed, too. He spoke quickly to Maryellen.\n\n\"You needed more rest than you were getting. I couldn't stand the way you looked so tired. You feel better today, I know you do, your fire is back,\" he said pulling the loose bun out, so her hair spilled over his hand. \n\nJoel came to rest several feet from Dominick and just stood there watching. \n\n\"I have to go, Maryellen,\" Dominick said into her ear, \"but I'll be thinking about you.\"\n\nHe released her wrists and started to pull away. Maryellen grabbed his hand.\n\n\"Where are you going to go?\" she asked confused.\n\n\"I've been a very bad wolf. I'll probably be taken to the holding cells, until the Alphas have time to deal with me,\" he said.\n\nDominick didn't move to pull his hand away, but Maryellen moved. She put her other hand on his forearm and took a step closer to him.\n\n\"Are you coming back?\" she demanded.\n\n\"Yes, I just have to be taught a lesson about following the rules,\" Dominick grinned. \n\nMaryellen saw Joel now, as he stood waiting to take Dominick away. She seemed conflicted for some reason. I watched her chew pensively on her bottom lip. \n\n\"I did, you were right. I slept well last night,\" she whispered finally. Several heartbeats passed before she spoke again, \"I could go with you,\" she said stepping even closer to Dominick and wrapping her hands firmly around his arm.\n\nIt was a touching scene. I hated the idea of breaking it up. He'd finally gotten through to her; taking him away now would just upset her. Obviously, he comforted her. She needed him, much more than we needed to put him in a holding cell. I sent all that thought to Joel. \n\nJoel muttered something to the ceiling and stepped toward Dominick. \n\n\"Tonight, you and me in the circle,\" Joel told him. \"You are lucky my mate is a romantic or I'd take you down there right now.\"\n\n\"Thank you Madam Alpha,\" Dominick said lowering his head to me. \"I look forward to my lesson, Alpha Latro.\"",
        "Joel winked at me and strode back out of the room. \n\nMaryellen seemed hesitant now that she was being left with Dominick. She stepped back from him and came to stand beside me. \n\n\"Ah, Madam, in all the excitement I forgot why I approached you originally,\" Dominick said digging into his pants pocket. \"I've been wanting to return these to you.\"\n\nDominick handed me a set of earrings. Tiger's eye surrounded by a band of silver, I had been wearing them the day Cedric arrived. When I shifted they had been thrust out of my ears. \n\n\"How did you find these?\" I asked.\n\n\"I saw the first one land, so I looked and found the other one,\" he said and then assured me. \"They fell in the dirt, but I washed them.\"\n\nHe had found the backs to the earrings, too. I looked at the delicate jewelry in my palm and then watched Dominick. \n\n\"You saw where my earrings landed from inside the den while standing at a window?\" I asked suspiciously. \"That seems difficult.\"\n\n\"It would have been difficult, from inside the den,\" he said glancing over at Maryellen and smiling. \n\nThere were brushes and shrubs that decorated the outside of the den. We had them searched before the women arrived. No one but us should have been out front. It would have taken a damned sneaky and persistent wolf to be outside watching the caravan. Especially, close enough to see where my earrings landed. \n\n\"They're yours,\" I said handing them back to Dominick, \"you earned them.\"\n\n\"Ah, I have very little use for earrings,\" Dominick said, \"but Maryellen, you don't seem to have any on.\"\n\nMaryellen blushed and stammered out an answer about not wanting to get dressed up for this. \n\nDominick reached forward and pushed her thick hair away from her ear on one side. He carefully inserted the post and affixed the earring. The same process was repeated on the other side. He took his time with the simple task, making sure to brush his fingers lovingly against her as he worked. \n\n\"I like them on you,\" he said to Maryellen admiring his handiwork. \"The brown and gold reminds me of how your eyes spark when you are angry.\" \n\n\"They are hers,\" Maryellen stammered, looking at me. \"I can't keep them.\"\n\n\"I gave them away as a prize,\" I told her. \"Tell me,\" I said addressing Dominick, \"should I be giving out prizes to anyone else from that day.\"\n\n\"Hardly,\" he snorted running a finger down Maryellen's arm.\n\n\"You're a tricky one, Dominick,\" I complemented, \"but I know Alpha Latro trusts you.\"\n\n\"I am the best tracker he has,\" Dominick boasted, \"no one hides from me for long.\"\n\nMaryellen looked at Dominick with the oddest expression.\n\n\"I'm a tracker, too,\" she told him.\n\nThat didn't seem possible. Maryellen was soft with generous curves. She didn't seem like a rough and tumble type of girl. Tracking was grueling work and only attracted the toughest in the pack. I would have thought the same for the human equivalent.  \n\n\"I am...I mean I was a forensic accountant,\" she told Dominick pushing her glasses up her nose slightly. \"People try to hide their money, it was my job to know where it went. I was the best in my department.\"\n\nDominick took her hand and led her to a small sofa off to the side. \"Tell me how you did that,\" he said very interested.\n\nLuckily the rest of the afternoon was boring. I didn't think I could stand another scene like Dominick nearly caused. When the meeting was over I was thrilled. \n\nWalking with Joel toward the circle later that night, I spoke to him about new concerns I'd realized. \n\n'Cedric's pack members were picking on Rick. It's not safe to send him around, they may try to hurt him,' I sent to Joel through the bond. \n\nJoel laughed out loud before he sent his thoughts back to me, 'That idiot wasn't after Rick, he was after you. They wanted to see if all the gossip about the new Alpha bitch was true. Some of the packs believe there is no way you are as strong or fast as they've heard.'\n\nJoel threw an arm around me and continued with good humor tinting his thoughts, 'He was just goading you into a fight to see how you'd react. I personally enjoyed the show you put on. I imagine he expected you to come screaming to me.'\n\nJoel continued to chuckle thinking about it. \n\nWe made it down to the circle and Joel started stripping down. A very nervous Maryellen approached with Dominick close behind her. He seemed to be trying to stop her without grabbing and restraining her. \n\n\"Please, Alpha Latro,\" she begged quietly, \"please don't hurt him.\"\n\nHer eyes behind the glasses got wet with tears and she was shivering.\n\nDominick looked really irritated and tried to tell her he'd earned a round with Joel in the circle, but she started to cry harder. Joel moved to touch her and she jerked away, utterly terrified. \n\nI stepped forward and held my arms out to her. She rushed into them and pleaded with me to make them stop. Evidently over the course of the afternoon, she'd gotten really attached to Dominick. Stroking her hair I soothed her. \n\n\"Wolves like to fight,\" I whispered low in her ear. \"I have a feeling Dominick likes to get a chance to battle the Alpha one on one. You know as well as I do he brought his bad behavior to our attention intentionally. He probably wants to impress you with his skill.\"\n\nShe had stopped crying and just rested in my arms. The men took that as a signal they could head into the circle. \n\n\"Will the Alpha maim him?\" she asked.\n\nI couldn't imagine a world where the Alpha would really injure a member of his own pack. However, I had not seen the horrors she had.\n\n\"Never,\" I told her. \"The Alpha loves his pack, he just wants them to follow his rules. Dominick is just going to get a reminder of who is stronger.\"\n\n\"What if Dominick wins?\" she asked. \n\n\"Then you'll be the Madam Alpha,\" I told her and the shivering started again. \"I don't think you have to worry about that, though.\"\n\nThe battle began and it was fierce. They bit and slashed at one another with Joel drawing small streams of Dominick's blood on several occasions. Joel certainly didn't want to permanently harm Dominick, but he was showing him who was boss. \n\nIt was too much for the young woman beside me. Maryellen tried to watch but she ended up with her face buried in my neck. I sighed, my wolf was really enjoying the battle, but I had to pay attention to her. \n\nWatching out of the corner of my eye, I saw the match finally end. Dominick submitted and Joel stood over him and howled. The pack cheered as Joel did a victory lap around the circle. \n\n\"See,\" I said forcing Maryellen to look at Dominick, \"he's fine.\"\n\nThe lanky brown wolf rolled to his feet and stretched. He didn't seem injured to me. When Joel saw him get up, he ran at him and the brown wolf rolled on his back again. Joel didn't stop soon enough and they tumbled together. \n\nMaryellen made a sound of horror as the started to fight again. \n\n\"No, no,\" I ordered as she started to cry again, \"they are playing. Watch them closely.\"\n\nThere was no threatening growling, just occasional bark as the men attacked and retreated. Both of them looked like they were having fun now, rolling and scuffling in the middle of the circle. \n\n\"They are playing,\" she said awed, wiping away tears.\n\n\"Alpha Latro and Dominick are friends, Maryellen,\" I assured her. \n\nShe finally seemed to believe me. Now the fight was fun for her to watch. The wolves sparred and separated. Everyone around the circle cheered and howled. \n\nI kept an arm around her as we watched the men and noticed how silky her shirt felt. \n\n\"Cashmere?\" I asked rubbing her arm.\n\n\"Yeah,\" she laughed, \"Dominick had it in his room. I guess he must have gone shopping. He gave me new clothes to wear, all in my size. Everything is really nice.\"\n\nI could appreciate why Dominick had picked the new clothes. The light gold sweater was fitted to Maryellen's ample bosom. The pants hugged her figure, accentuating her rounded hips and generous ass. He had chosen wisely, conservative yet alluring. \n\n\"He said the shirt matched my earrings, but I can give them back, Madam,\" she said lifting her hair so the tiger's eye caught the light. \n\n\"They were a prize to him and a gift for you,\" I said, \"and I must agree with your mate. It is a lovely stone on you.\"\n\nJoel forced Dominick's submission a second time and the pack roared its approval. \n\nMy mate sauntered toward us, quite pleased with himself. \n\nRick and April had appeared beside me and they took a confused Maryellen with them. \n\n\"What's going on?\" I heard her ask as I started to strip and shifted in the circle to join my mate. \n\nI was glad they were there to explain.\n\nI circled Joel and he panted watching me. \n\n'Submit, mate,' he ordered.\n\nI thought about running to make him chase me, just for fun, but we had guests. Instead I ran my body along his and stopped with my tail at his nose.\n\n'If it wasn't for all the damned humans, I'd take you for a run,' he said licking across my backside. \n\n'Crawl on and take me,' I demanded dropping my front half to the ground.\n\nJoel was more than happy to oblige. \n\nI sat with Joel in a pack meeting and thought about the last couple of weeks. It had taken me a long time, but I was finally accepting my duties as Alpha. Meetings were an expected part of my job, so I attended them. When it was necessary, I knew when and how to dole out punishment. Overall, I was getting better at this life. \n\nThings were still crazy. Rick and April had just gotten back, they had been to visit the rescued humans in every pack. The reports we got back all said it had made an enormous difference.\n\nJune had finished Lucas' healing process and there was no longer any trace of the loner he had once been. She refused to let him live in the past and kept him busy keeping up with her. They had become dynamic and active members of the pack. \n\nMaryellen was back to forensic accounting, with a twist. The pack made too much money and kept it for much too long. It had to be hidden and moved around. She hadn't been lying, she was very good. She taught our guys tricks they had never dreamed of, some of it legal and some of it not. \n\n\"I was never able to say it to my boss,\" she told me one day, \"the only way to be good at this, is to think like a thief would. I would spend hours thinking about how I would hide money, if I every had it.\" \n\nBesides all of that we were getting ready for Dia's changing ceremony. She had, at some point, decided to forgive Joel. Feeling more at home with our pack, she agreed when Cedric stated he would allow her to be changed here. \n\nWhen I heard raised voices outside our meeting chamber just before lunch, it surprised me. For all the stress of planning everything, there had been no new threats. I feared what would happen as Emily went out to investigate. \n\nComing back in, Emily addressed all of us respectfully. \"Our human guests wish an audience with the Alpha pair.\"\n\nJoel shrugged and I nodded. We technically still had fifteen minutes before they started serving lunch. Joel excused the Council and we waited. \n\nDia came in first, followed by April, June, and Maryellen. The women looked like they were geared up for a fight. Behind them, sheepishly, came their mates. \n\n\"Sir,\" Will started to say to Joel and Dia raised a hand to shush him. \n\n\"It isn't your decision,\" Dia snapped. \"It isn't your ceremony. You aren't making any changes. This is about us, not you.\"\n\n'Okay,' I thought to Joel, 'there must be a problem. Maybe they don't want to change yet.'\n\nJoel sighed audibly. He didn't want to go through with them what he went through with me. \n\n\"We have some demands,\" Dia stated flatly. \n\n\"Please, I can't wait to know what they are,\" Joel said plaintively. \n\nI could see the images in his head. He was imagining having to deal with four human females wandering around fighting the change for months. Joel took some initiative before Dia could speak and offered a compromise.\n\n\"You know, ladies, victims of rogues are not expected to go through the change in the circle. I think I've made that quite clear. Maryellen and April are exempt from a public change. Dia, if you and June are against the idea, I would make the same exception for you. It's a tradition the pack likes, but isn't forced to adhere to.\"\n\n\"No,\" April said and Joel groaned sinking into his chair. \n\nIf it would be fair to say a man as large as Joel was pouting, he was. \n\n\"Sir,\" Dominick started to say and Maryellen stopped him from talking. \n\n\"We want to go through this together,\" Dia said. \"All of us in the circle at once in three days under the full moon. They don't want to wait and I don't see why one Beta,\" she said pointing at Will, \"gets precedence over others.\"\n\nI spoke up finally. \"Dia, Will's not really a Beta, you know that.\"\n\n\"Here,\" she said pointing around us, \"he is. My friends do not want to wait a month. We want to change under the moon with our mates. Don't make them wait another month.\"\n\n\"Cedric-,\" Joel started to say and Dia interrupted him.\n\n\"Cedric has agreed to my demands. I have already spoken with him. The others are not expected to prove their metal before the pack, but I should. As long as I force him,\" Dia gestured to Will with her thumb, \"to subdue me, Cedric doesn't care if the rest of it is a shared ceremony.\"\n\n\"The other girls do not have to do that, the fight or the public ceremony,\" Joel said sounding relieved. \n\n\"We know that Alpha Latro,\" April said. \"It's very understanding of you to offer me privacy, considering my past. I want to change in front of the pack and become one of you.\" \n\nRick shrugged his shoulders at her statement.\n\nMaryellen seconded what she said, but Dominick shook his head violently. \n\n\"No,\" he said looking at her. \"You are not doing this in the circle with the pack.\"\n\n\"Dom, I want to,\" she said turning and placing a hand on his chest. \n\n\"No, I won't risk it,\" he said caressing her arms. \n\nShe started to disagree with him and he placed a finger over her lips. \"No, Maryellen, your health is all that matters to me. We came today to support your friends, but you are not doing this. I know the Alphas will agree with me on this.\"\n\n\"April is going to do it,\" Maryellen begged pointing. \"I'm strong enough. I can do this, too.\"\n\n\"You are a fighter and a survivor,\" Dominick told her, \"but no.\"\n\n\"I love you, Dom,\" she said looking at her friends and trying to find one of them to back her up. \"I know it means a lot to do this in the circle. We can get through this together.\"\n\n\"It is just a ceremony, Maryellen, and it is not necessary to me,\" Dominick stated. \n\nI was unsure about what was happening. In an effort to be a better Alpha, I spent a lot less time in the infirmary. If Maryellen was having problems, I didn't know about it. \n\n\"Dominick,\" I said, \"tell me why you are so against this.\"\n\nI had to admit, Dominick looked angry I was asking. He probably thought I was going to try to force him to do this with Maryellen. Quite the opposite, I wasn't sure it was a good idea for any of our humans that had been traumatized. \n\nChanging in the circle was not something I would want a rape victim to go through. It seemed like it could re open old scars or even make new ones. Just based on that principle I already agreed with him.\n\n\"Madam Alpha,\" Dominick said formally, \"Maryellen still becomes frightened if other males get too close. Someone stepped behind her yesterday and too spoke loudly; she panicked and screamed. The nights I patrol, she doesn't sleep. I leave her with my sister, but she stays awake all night.\"\n\nMaryellen looked at the ground and seemed to be trying to disappear. I felt bad dragging this out, but it had to happen this way. Joel and I had to have justification for making this decision for her. \n\n\"April is going to do it,\" Maryellen said pointing and pushing her glasses up her nose.\n\n\"Rick, April,\" I said addressing them, \"are these problems you all suffer with?\" \n\n\"No, Madam,\" April answered. \"I was afraid like that before, one day it just stopped. It just takes time and it gets better,\" she soothed Maryellen.\n\n\"A changing ceremony,\" Dominick said, \"is loud and boisterous. Someone would be touching her intimately all night and I'm afraid she would feel fear.\"\n\nI looked at Maryellen and waited for her to speak. \"I'm not weak,\" she told us. \"I can do this. I will make it through. I'll force myself.\"\n\nI looked at Joel and he looked at me. Health, the human women, and the pack's women were all my purview. That put this squarely in my court. \n\nI stepped around the table we were at and stood in front of Maryellen.\n\n\"You agree with him, because you're a wolf, too,\" she said softly.\n\n\"I agree with him, because I don't want to see you hurt anymore than you already have been,\" I said gently.\n\nMaryellen looked crushed when her eyes met mine. She really had wanted to prove she was strong enough, but I agreed with Dominick. There was a reason Joel didn't force the human women to have a public change and this was it. \n\nTurning on her heel, Maryellen left the conference room. When Dominick tried to stop her, she pushed him away and slammed the door. Dominick looked at me gratefully and apologized for his mate before excusing himself politely.\n\nEveryone that was left seemed embarrassed by what had transpired. None of us would have chosen to make that a public conversation. Joel cleared his throat and broke the uncomfortable silence. \n\n\"We should have enough slabs for all three of you to erect altars,\" he said. \n\n\"Alpha Latro,\" Lucas said, \"I checked the slabs myself. There are more than enough. The actual altar, we'll need to construct a few more. I checked around. Some of the guys might already be working on those.\"\n\n\"Three days Lucas, but build them well. The girls deserve the finest,\" Joel warned. \n\nIt was a relief when we finally went to lunch. \n\nI was sad not to see Maryellen and Dominick in the dining room. I hoped they would work through her disappointment quickly. As we ate, I thought about the ceremony. All the pack would be there and most of them would be distracted. It was a potentially dangerous time. \n\n\"I want security around the circle,\" I told Joel. \"I don't want some freaky rogue pack or witch cult or even an evil fairy interrupting our night.\"\n\nJoel put down his fork to look at me.\n\n\"Evil fairies?\" he asked. \"That's what you worry about?\"\n\n\"Eh, I get tired of the mundane stuff like rogue werewolves intent on killing me,\" I shrugged. \n\n\"Well, I'll have the whole pack on evil fairy detail for that night,\" Joel laughed continuing his meal. \n\nThe pack was really excited about the change. They seemed grateful to Will and Dia, as though they were giving up something precious to share the ceremony. Perhaps they were, but neither of them seemed to mind. \n\nDia's only concern was looking tough in front of the pack. I heard she had managed to convince Shawna to train her. Dia was spending her last three days as a human trying to learn to beat up a werewolf. Will was going to suffer for his mate the night of the full moon, that was for sure. \n\nAs the day of the full moon rolled around the den was in a tizzy. Everyone was excited about the night time activities. We made sure to plan it so everyone got to take part. \n\nWe were worried about security on a day as special as this, but we split up the watch over six shifts. None of the warriors would work more than four hours today. It was a concession they were quite pleased with. \n\nI went with Joel to the circle in the afternoon. The real party didn't start until the girls got here, but it was still fun. Radios pumped out music and food was brought from the den. We ate, danced, and lounged in the area around the circle. \n\nJoel and I had long since lost our clothing. I sunbathed nude in the clearing as Joel snoozed beside me as the giant black wolf. He told me he was conserving his energy for tonight. I laughed at his obvious enjoyment of his afternoon nap. ",
        "Inside the circle were three mountains of activity. Each of the men, with the help of their closest friends, were erecting an altar for their woman. They dragged marble slabs in and set them up. The massive table they set on top got pulled in last and the pack howled as it was placed each time. \n\nThe night got darker and the party got wilder. Joel and I watched as the pack fucked and frolicked in the woods. This was just an excuse to party. I couldn't imagine they would have any energy left by moonrise, but I was wrong. \n\nAt the appointed hour all the music was turned off and the energy started to build again. Will paced nude inside the circle, while Lucas and Rick waited outside. When Dia, April, and June appeared at the edge of the forest the pack was humming with excitement. \n\nDia marched in ahead of the other girls. They wore simple white dresses, Dia wore camouflage pants and a fitted brown shirt. Dia strode confidently into the circle toward Will. June and April stood at the edge with their mates waiting. \n\n\"Pack Latro,\" Will called confidently, \"tonight I wish to change my mate, Dia. Do you accept this new pack member?\"\n\n\"Show us her strength,\" we called back as a group.\n\nDia crouched low and I heard her taunting Will. He ran at her and she launched at him. Dia dug her fingers into the side of his face and kicked Will in the stomach. He threw her off him and attacked again. This time she flew at him with a volley of quick punches. \n\nThe pack roared its approval of her battle skills. They screamed and howled, punching the air in delight as the couple fought. \n\n\"Damn, Dia is actually trying to hurt the poor guy,\" I whispered to Joel.\n\n\"He can take it,\" Joel whispered back to me, \"but Maryellen can't.\"\n\nI looked at Joel confused and he was looking off to our left. Dominick had brought Maryellen down to watch the changing. He had sat them on a blanket. Currently Maryellen was curled onto his lap shivering.\n\nThe pack was making too much noise and the violence in the circle seemed to be agitating her. I moved toward them and knelt next to Dominick. Maryellen flinched when I touched her back, but I kept my stroke firm and comforting. \n\n\"I want to see this,\" she said keeping her face buried in Dominick's neck. \"Please let me stay. I have to get better. I have to stop being afraid,\" she begged. \n\nDominick nodded to me, so I agreed. At this point I trusted her mate's instincts to guide us to what she really needed. \n\n\"Alpha Latro and I will be right here,\" I told her settling beside them. \n\nJoel joined me and we watched the rest of the fight. It was obvious to me Will was letting Dia express her strength as he ripped off her outfit. The pack seemed to enjoy the show they put on. Finally, Will pinned his mate to the earth and the pack roared. \n\n\"What happens now?\" Maryellen asked. \n\nShe was looking around and seemed to have calmed down. I hoped the next part of this wouldn't scare her again.\n\n\"The men will make sure their mates are ready to accept the wolf,\" Joel said from beside me. \"Once the men are sure, they will shift and take their mates. The goal is that the women find pleasure. When the women orgasm, the wolves will bite their mates with the intent of changing them.\"\n\nDown in the circle Lucas and Rick were slowly removing the dresses from their mates. Rick had leaned April over the altar he had made and was licking down her back as he exposed her. Lucas had buried his face between June's breasts and was pushing her dress off her hips. \n\nWill had sat Dia on the stone altar and it looked like he was talking to her. He just ran a finger up and down her naked thigh as they spoke. \n\n\"Will's not much for foreplay?\" I asked Joel raising my eyebrow.\n\nBoth Joel and Dominick grunted and laughed. \"Should we let him know you disapprove of his method, Madam Alpha?\" Dominick asked. \"If you're offering lessons, I know quite a few men that would take you up on it,\" he continued. \n\n\"Dom,\" Maryellen chastised, \"that is so inappropriate.\"\n\nAt least the conversation had distracted Maryellen from being afraid. \n\nDown in the circle Will had finally moved between his mate's thighs. He knelt down and spread her lower lips wide with his fingers. He took one lick up her slit and she moaned loudly. A second lick and her legs were quivering on either side of his head. \n\nWill stood up briskly and stepped so he stood between her knees. He leaned over her body and spoke into her ear. I saw her hand drift between her legs, but Will stopped her and spoke sharply.\n\n\"No mate, you must come around my cock. The other girls are not ready. You cannot touch yourself or this will start much too quickly,\" he said probably louder than he meant to. \n\n\"Bet she's got a hair trigger,\" Dominick laughed and Joel joined him. \n\nTwo new bodies settled in the grass beside us and I recognize the scent. Nate and Shawna had come down to sit with us. \n\n\"I saw them in the gym when Dia was done working with my mate,\" Nate told Joel casually. \"She and Will went at it on one of the mats in the spare training room. Will can't keep up with her, one touch and she's through the roof.\"\n\nMaryellen looked at me with amusement on her face. The casual sex talk was evidently soothing her nerves. It made what was happening in the circle seem normal.\n\nDown in the circle Rick had April kneeling on the altar so he could worship her center. She was moaned loudly and it looked like he had started thrusting his fingers into her waiting cunt. April started calling out to Rick to ride her and an excited wave rippled through the pack.\n\n\"I feel overdressed,\" Maryellen whispered to Dominick plucking at her shirt and shorts.\n\n\"You can be as naked as you like, Maryellen,\" Dominick told her. \"I'm not changing you here. Later, in our rooms, we'll go through it.\"\n\n\"I know,\" she said, \"but everyone else isn't dressed. It's just us still with clothes on.\"\n\nDominick sighed and looked at her sitting in his lap. \"I don't really care what everyone else is doing.\"\n\nMaryellen watched Dominick and chewed on her lip. Seeming to find resolve somewhere she stripped off her t shirt. \n\nDominick spoke and it sounded low and hoarse, \"You didn't wear a bra, mate,\" he commented. \n\nMaryellen had large brown nipples on bountiful breasts. They drew every man's eye in the surrounding area. Dominick's eyes lit gold and he growled threateningly.\n\n\"Mine,\" he said shortly, looking around and tightening his grip on Maryellen. \n\n\"I have a set of my own, old friend,\" Nate said pulling Shawna to his lap.\n\n\"As do I,\" Joel said brushing my cheek with the back of his hand. \n\nThe wolf calmed down, realizing he was with mated friends. When Maryellen noticed him relax, she shimmied out of her shorts. Now she sat naked on his lap. \n\nI scented the air and smelled only faint arousal from Maryellen. The show had been more about bravery and less about sexual desire on her part. \n\n\"I'm glad you're more comfortable with us, Maryellen,\" I complimented her. \"It's nice to see you are able to trust us.\"\n\n\"I do, Madam Alpha,\" she said proudly. \"I'm less afraid than I was.\"\n\nThe show down in the circle was starting to get our attention. We watched as the giant black wolf, Lucas, mounted a moaning June. April was also making indistinguishable sounds of pleasure as a smaller white wolf crawled atop her. \n\n\"Rick's a white wolf?\" I asked feeling pleased. \n\n\"I don't think April would let anyone else crawl over her like that,\" Joel rumbled into my ear. \n\nDia was an entirely different story. She was a show all by herself. As soon as the wolf entered her she started mewling and scratching at the stone table he had her on. When he started to move it sounded like she came on his shaft immediately. \n\nThe pack roared, thinking Will had missed his chance to change his mate. \n\n\"She's just warming up,\" Nate laughed behind me. \n\nThe wolves in the circle all continued to move over their mates. The keening cries from April and June told me they were getting closer. Dia had started clawing at the table again, obviously on her way again.\n\nThe pack was going mad watching the show. Many had given into temptation and started to rut and fuck. I remembered my own changing ceremony, watching wolves over human women around me. It was happening again as the pack mated in synchrony with the celebrated couples. \n\nThe women in the circle broke in quick succession. Dia screamed a series of curse words and Will's giant wolf bit down on her writhing figure. June cried out Lucas' name hoarsely and the giant black wolf struck. April was the last to succumb and moaned as the spasms rocked her small frame. Within a second they were all unconscious as their mates panted over them. \n\nWe cheered and howled, welcoming new life into our midst. I forgot to worry about Maryellen and shifted to the hybrid calling out over my pack. The resounding howl that returned to me was deafening. \n\nSuddenly, I remembered the shy human right beside me. I turned quickly to look at her. Wide bright eyes met mine, but they didn't look frightened, just curious. Maryellen pushed her glasses up her nose to get a better look at me and smiled. \n\nI shifted fully into the wolf as Joel did the same. Maryellen's hand tentatively came out to stroke my head. \n\n\"You get bigger when you shift,\" she told me.\n\nI chuffed at her and licked her hand. There was no fear surrounding her at all. Perhaps April was right, all she needed was a little more time. \n\n\"We all get bigger when we shift, Maryellen,\" Dominick told her, \"you will, too.\" \n\n\"You'll change me tonight?\" she asked. \n\n\"Yes, in our rooms at the den,\" he told her. \n\nI saw him watching the circle with a certain amount of contained frustration. He didn't want to wait to greet the other new wolves. Dominick wanted to change her now. \n\nShifting rapidly back to human skin, I spoke to both of them. \n\n\"You saw the changing ceremony, Maryellen. Now we will greet our new pack members. I think it would be very acceptable if you went upstairs and joined my pack now. You can all meet after you have changed.\"\n\n\"That sounds like a wonderful idea, Madam,\" Dominick said grinning broadly. \n\nHe scooped Maryellen up and slung her over his shoulder. She giggled and struggled slightly and her glasses slipped off her nose. \n\n\"I need those,\" she said reaching down. \"I can't see without them.\"\n\n\"You won't need them again,\" Dominick told her, but he still took them when I handed them to him.\n\n\"Why?\" I heard her ask as Dominick strode purposefully away.\n\nI knew why. The change would heal her eyes. She would not need glasses anymore. Changing had wonderful benefits.\n\nI walked with Joel into the circle to check on everyone. My ears picked up the steady light breathing of the unconscious women. I moved to each of them and they were all fine, just knocked out temporarily by the change. \n\nDia started to come around first. She turned her head to look at Will questioningly and he took her lips in a deep kiss. \n\n\"She is there,\" Will said in awe finally releasing his mate.\n\nThe other girls slowly came to after Dia. April woke next stretching like a cat, despite the pole lodged between her thighs. June woke up last. She winced moving her leg and I was concerned. \n\n\"Where does it hurt?\" I asked her, touching over her previously injured leg.\n\n\"My thigh, Madam,\" she said pointing, \"it's not the break. I think it's just a cramp.\"\n\nLucas reached down with his big hands and started to massage the area she had gestured to. Once the area loosened he sat her up like the other girls.\n\nAll three sat facing out with their legs spread over their mates. The men whispered soothing words in their women's ears. All except Will, who kept telling his mate to stop twisting on his lap. \n\n'Mate,' Joel sent into my mind, 'we must greet Dia first and then the other two girls. Once we are done, the pack will go, but not before.' \n\nI shifted the form of the wolf and approached Dia. She was being held with an arm across her chest by Will. I approached and my tongue flicked out to taste her intimately. She squirmed under my tongue and moaned. \n\nThe wolf was there, Will had been right. It was the strangest thing to realize her scent had changed subtly, so I took a second taste. My tongue ran firmly over them this time and brushed her clit at the end. \n\nDia visibly rippled around Will's shaft and it was his turn to groan. \n\nJoel nudged me out of the way and took a taste. He was perfunctory about it, but Dia didn't seem to notice. Her eyes were closed and her head was back on Will's shoulder. She was in either heaven or hell.\n\nJoel and I moved to taste June and April. Both girls squirmed under our caress, but neither had the intense reaction Dia had had. I could scent the new wolf in each of them, too. \n\nJoel and I moved away from the altars to watch from the side as the pack greeted the new wolves. I stretched and shifted back to a human form, but Joel didn't. Sitting in the grass just outside the circle, I watched the pack. \n\nThe big black wolf was in my face and I tried to look around him. Joel just pushed in between my knees and stood facing me.\n\n\"Do you want some attention, big boy?\" I crooned stroking his head and neck. \n\nI knew he wanted me. We just couldn't get stuck together before we greeted our newest pack members. \n\nJoel barked and licked my neck in response to the question.\n\n\"Do you want to play?\" I asked him scratching his ears.\n\nJoel walked forward and drug his tongue over my nipple. I knew what he wanted, but I couldn't resist teasing him some. \n\n\"Do you want to play fetch?\" I asked continuing to ruffle his fur. \"Do ya', big boy?\"\n\n'Did you just ask me if I wanted to play fetch?' Joel sent incredulously into my mind. \n\nHaving realized that annoyed him. I kept it up. \n\n\"Dat's a good boy,\" I said stroking his ears and grinning. \"We'll go get a nice stick for you to play with in the woods.\"\n\n'No, I'd rather not play fetch,' Joel said sounding truly irritated. \n\n\"Come on,\" I said jumping up, \"let's go find a nice big stick for you to play with.\"\n\nThe wolf lunged at me and I side stepped. I started to run and he was on top of me. Honestly, I was laughing too hard to put up much of a fight. I fell to my knees and the wolf pushed me until I lay on my stomach. \n\n\"Do you want a chew toy instead?\" I managed to sputter out as the wolf's jaws closed lightly around my neck.\n\nLow growling got my attention and I thought it was funnier than before. Joel was so irritated and I was not responding like he thought I should at all. \n\n\"I'm not a chew toy, big boy. Has nobody ever played with you? How sad,\" I giggled into the grass.\n\nJoel's human hands flipped me and I continued to laugh until tears came out of my eyes. \n\n\"How about I give you a chew toy instead?\" Joel asked grabbing the back of my head. \n\nI wanted to continue to laugh but Joel's mouth pressed hard against mine. He pushed his tongue between my lips and examined my teeth before withdrawing. As he kissed me the humor had faded and raw desire started to take it's place. Raking my nails down his back and wrapping my legs around him, I hoped he'd get the message. \n\n\"Finally,\" he muttered against my mouth, \"I wondered if you would ever stop being annoying.\" \n\n\"I was having fun,\" I panted placing kisses along his jaw. \n\nMy hand went down to wrap around the thick shaft between us. Joel groaned low in his chest as I stroked him. \n\n\"That a big enough stick for you, love? I have an idea, go fetch,\" he told me eyes twinkling.\n\nI pushed my mate onto his back and flipped my body so I straddled his face. \n\n\"Fetch like this?\" I asked nipping and licking him tip to base. \"Or like this?\" I asked taking him deeply into my throat. \n\n\"Like that, love, just like that,\" Joel roughly said as his fingers separated my wet folds. \n\nHe used his tongue to tease the entrance to my womanhood and I dropped my hips down over him. He lapped and tasted the sticky fluids and then wrapped his lips around my clit. I moaned and sighed, slurping messily along his length. \n\nEnough, I wanted my mate inside of me, now. \n\nI felt the wash as the wolf pushed into my mind, demanding satisfaction. For some reason, she didn't surface, though. She just rolled under my skin making me feel like I was prickling with the change. \n\n\"No,\" Joel said sounding muffled as he pinched the inside of my thigh. \n\nHe sent the rest of his thought into my confused and passion laden mind. 'The wolf can't come out tonight. In honor of the women that took the wolves on the alter, no female shifts tonight. If it was male up there, the same would go for me.' I rolled off my mate and sat panting in the grass. His taste was on my tongue and my body was on fire. My legs were sprawled all askew and I had no desire to close them; I wanted him between them. \n\n\"I need you, now,\" I said simply gazing at him laying propped up on his elbows. \n\nJoel rose slowly off the grass and came toward me. As I watched his muzzle grew and those ferocious teeth pushed down into his mouth. Within a moment the wolf stood in front of me, much like he had when I originally sat down. \n\nIt struck me suddenly, this is what he had been trying to get me to do then. \n\n\"You could have just told me,\" I huffed turning around and getting to my hands and knees.\n\nThe wolf was on me in an instant. The thick head of his cock probed my soft folds for only a moment before it was thrust home. I scrambled to keep my balance. His teeth closed lightly around his first mark, my mating bite, and he started to pump. \n\n'I want you,' he sent to me, 'I always want you, never forget that.'\n\nPushing against a giant wolf, I had very little leverage. In this position, in this form I just took whatever Joel offered. When he pushed his knot home, I had screamed at the intense fullness of it. \n\nThe wolf above me slowed his motion and licked my back. I felt a nuzzle at my ear as Joel's voice crept into my mind.\n\n'Am I hurting you, mate?' he asked.\n\n\"No,\" I answered him, \"it's just so much like this. I'd forgotten,\" I told him. \n\n'I'll go slower,' he promised trying to control the wolf's need.\n\n\"Hardly,\" I grunted pushing against him, \"faster and harder, I want all of you.\"\n\nThe wolf took the invitation seriously and all talking was done. \n\nAll around us the mated were doing what we were doing. From the middle of the circle I heard Dia, the wolf was over her on the altar. The other girls were panting and sweating at the intense overstimulation of the changing. It was a madhouse under the full moon. \n\nThe air in the clearing was thick with the sounds of pleasure and the smell of arousal. Caught up in the intense moment my body clamped down on Joel. I cried out my completion and the wolf followed me rapidly. \n\nI lay panting in the grass with Joel when we were done. My eyes were drawn to the tree line. Movement in the bushes got my attention, but it was just a young couple playing chase around the circle. \n\n\"There are warriors out there patrolling,\" Joel whispered and kissed my ear. \"The pack is safe. You can relax.\"\n\n\"There are other things out there, though, besides us,\" I said continuing to watch the edge of the forest. \n\n\"Yes,\" Joel told me, \"and the warriors know to look out for all of them.\"\n\n\"I don't know,\" I said softly.\n\nThe fear curled in my belly. Rick had been right. Every nightmare fantasy I'd ever had could be lurking in those woods. I didn't know what was real anymore. \n\nJoel wrapped me snuggly in his arms and rubbed his lips along my shoulder. \n\n\"I will teach you,\" he said, \"and you will help teach the young women that are becoming family tonight.\"\n\n\"There's so much to tell them, so much I'm sure I don't know,\" I said staring off into the distance. \n\nJoel placed his hand on my cheek and forced me to look toward him. Soon I was staring into his gentle blue grey eyes. He leaned forward and I breathed him in. ",
        "\"You will learn, my love, but not tonight. This night is about celebration of beginnings within the family,\"Joel said softly.\n\nSo we lay outside the circle in the soft grass as the pack met and celebrated new life. There would be challenges and loss, but we didn't worry about that right now. For tonight I rested beside my mate, bound to him in body and in spirit. \n\nTHE END\n\nI had so much fun writing this. It was a shock to realize anyone would read it. I'm hooked and completely addicted. Thank you so much to everyone that helped me out. I will be back. Special thanks to Mokkellke and to my loving husband Joel! "
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "werewolf",
        "wolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/bound-to-my-mate-ch-20"
}