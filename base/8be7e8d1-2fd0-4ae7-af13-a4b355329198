{
    "title": "Dark as Daylight Ch. 13",
    "pages": [
        "NOTE: All persons in this novel are Fictitious. If you are looking for a great deal of sexual activity this story is not for you. Those scenes that are included will be evocative, rather than just for the sake of sex itself. \n\nThis story is for your Reading Pleasure. Its length is undetermined at this time, because I do not know where my mind will take me as I proceed along this journey. I hope you will stay with me until it reaches its inevitable... \n\nThis story is copyrighted material and is owned by Prolonged_Debut10. My statistics are available, and on file with Literotica.com. \n\nChapter 13 \n\n49. What a Wonderful Day \n\n\"Central Comm, this is West. Central Comm, this is West.\" \n\n\"West, this is Central Comm, go ahead.\" \n\n\"We are in the parking lot moving towards the entrance, request the day code. We do not wish to get shot.\" \n\n\"Who is in command?\" \n\n\"Captain Remmey.\" \n\n\"Within 15 seconds, I want his sister's date of birth.\" \n\n\"Captain Remmey says that's easy; he doesn't have a sister.\" \n\n\"How many of there are you?\" \n\n\"We are down to 33.\" \n\n\"Where are your prisoners?\" \n\n\"We escorted them to the Western fence, and told them to go home, or get killed where they stood. They ran like rabbits.\" \n\n\"Where is their armament?\" \n\n\"Listen, I'm all for question and answers, and being debriefed, but could we do this inside, all of us are soaked to the bone.\" \n\n\"Okay, come in four at a time. Be careful, we still have 500 or more enemy troops, along our Eastern front. They've taken cover from this godforsaken rain.\" \n\n\"You mean they're not totally ignorant?\" \n\n\"Apparently not, start on your way in, and keep your weapons down.\" \n\n\"Roger that, here we come.\" \n\nEveryone moved into action. The kitchen started making hot food, towels were brought out by the hundreds, and rooms were made ready so these guys could crash, and get some well earned rest. They had been out in the rain for nearly 30 hours, and the only thing they had to eat, where the energy bars they had on them. \n\nThe enemy was worse off, they didn't have any food on them, expecting a quick victory, due to overwhelming strength in machines, and warriors. In war nothing is certain, nothing at all. \n\n******************** \n\n\"This is Captain Remmey, I'm coming in with three of my men.\" \n\nGeneral Marcus was standing at the entrance waiting to verify who was going to be in the first group. He yelled, \n\n\"Come on in Captain.\" \n\nLights were focused on the entrance, and the four men that walked in were immediately recognized. Members of the inside team ran out to help them. Others ran outside and yelled for the rest of the men to hurry in so they could be helped also. \n\nThankfully, they had not lost that many men, but those that were lost hurt deeply. When this was over they would go into the back and get them, before the alligators did. \n\nAs soon as 33 were inside, they were stripped to the bone, and dried by multiple hands, and brought to a room to lie down. As soon as dinner was ready it was brought to them, and not one ounce was wasted. \n\nGeneral Marcus went over to Captain Remmey, and asked him if there is anything he needed to know during the next 24 hours. When Remmey said, \"No,\" General Marcus said, \"I'll see you tomorrow.\" \n\n********************** \n\nAfter Tom finished helping with the new arrivals, he asked everyone if they saw Joe or Laura. Everyone had watched him and his crew run around looking for Joe for the last few hours, and they knew what Joe and Laura were up to. They weren't going to allow Tom the satisfaction of finding them, if what they heard through the grapevine was true. If Joe had proposed to Laura, he should leave them alone. \n\nEvery time he ran up to a group of men and asked that question, they pointed to all points of the compass, plus up and down. He would growl at them, and run to the next group hoping they would be more amenable to his cause. \n\nThey weren't, and he was furious. He returned to the sixth floor in an attempt to get an answer from the Attorney General. What he got was a prank from a 15-year-old boy, and his 12-year-old brother. \n\n\"Hello Tom.\" \n\n\"Hello Richard, Holden, why are you two boys alone?\" \n\n\"How can you consider being surrounded by 350 of your best friends being alone? If you look at your shirt, there's a red dot on the button just above your breastbone. That's Paul fine-tuning his rifle sights. He's been doing that since we stopped playing baseball. Mister Kenshaw just went to the bathroom, he'll be out in a second, and you just passed two guards coming up here. \n\nOh I forgot, Miss Burkart, and Joe just returned from dinner, and are in room 684. They seem very happy together. Did you know they're engaged?\" \n\n\"Yes I did Richard; I'm going to be Joe's best man.\" \n\n\"What does it mean to be a best man?\" \n\n\"In this day and age it means that you are the groom's best friend, and that you carry the ring that he will put on his new bride's finger. That you have an association with the groom that goes beyond a casual relationship. It would be more like you are his brother, rather than someone he just knows.\" \n\n\"That's not what it implied years ago during the 14<sup>th</sup>, 15<sup>th</sup>, 16<sup>th</sup> centuries, and even later. The best man was the first person to have sex with the bride, who was supposed to be a virgin. Does that mean you're going to have sex with Miss Burkart?\" \n\n\"Holden, you are talking about centuries ago, and social norms have changed. I'm not even sure why that rule was ever initiated, but if I was getting married, and someone tried to touch my new wife, I would have to kill him, whether he was a king or beggar.\" \n\n\"I'm happy to hear you say that Joe. My dad said the same thing about mom.\" \n\n\"Do you boys remember everything from the moment you were born through today?\" \n\n\"No, I can remember conversations when I was in my mom's belly.\" \n\nJoe shook his head, not believing what he just heard. \n\n\"What room did you say Joe was in?\" \n\n\"They are in room 684. I'll take you there if you want?\" \n\n\"No I think I can handle it. Thank you for the conversation boys. As always it is quite stimulating.\" \n\n\"Don't forget to knock first, they may be having sex.\" \n\n\"I will do that.\" \n\n*************** \n\nHe walked casually around the great circle that enclosed the 'Good Luck 2.' The rain had it bobbing, and lifting slightly higher than the walkways, as they adjusted automatically on their hinges, to make sure no one killed themselves working on the sixth level of this mammoth machine. It was amazing, how Holden, and Richard came up with the idea of floating this big machine on a lake, instead of attempting to cradle it in steel above ground. Not one part of the exoskeleton had been damaged because of this masterstroke in engineering. In two weeks this level would be completed. Then it would be tested, retested, and stressed to its breaking point for seven days. It would be sealed in multiple sheets of polypropylene and tested for leaks. After verifying everything was airtight, the entire sixth floor would be heated to 250 degrees for 5 days. As this test came to an end, and the heat was being unceremoniously vacuumed out from one side, a combination of liquid oxygen and hydrogen would be pumped in, bringing the temperature to a -200 degrees centigrade, and it will remain at that temperature for 5 days. \n\nAmazingly, after all the years of its use, there has not been one recorded failure in the proper use of the long line carbon filaments. Dycke liked it that way. That's why he tested it so rigorously, recorded it down to the fine print and filed it with every agency under the sun. \n\nNo one could say that Schneider Industries was keeping anything relating to these Carbon Fiber products secret from the public. \n\n********************* \n\nAs Tom reached room 684, he looked back to see where the boys were. Richard was now seated on top of a pile of boxes, looking down, and making hand gestures at who he believed had to be Holden. He made believe he knocked on the door, but instead quietly opened it, and stepped in. \n\nThe bed was a mess. He saw, what he believed, was a bundle of clothing in the far corner of the room. He heard the fan operating in the bathroom, and thought he might catch them preparing for the act of love-making, during the act, or post-coital. Any of these were fine him, and for his cell phone. He stepped through the kitchen area, and around to the wall that would get him to the bathroom door. The noise of the fan was getting louder, as he moved closer to the bathroom door. He thought he heard something at the front door and checked, but it was closed. \n\nHe put his hand on the handle to see if the door was locked, and it was. This was not going to keep him out. Laura had thoughtfully left several hairpins on the vanity for him to use. He picked one up, bent it to the appropriate angle, poked it into the slot, and he heard the lock pop open. It might be raining cats and dogs outside, but the sun was shining on him in here. \n\nHe took out his cell phone made sure it was appropriately set up to take the most wonderful pictures it could, he pressed his shoulder against the door, and threw it open. He stepped in and yelled, \"Surprise\" in a descending tone. Where the hell where they? \n\nHe stepped back and thought to himself 'Did I come into the wrong room?' I don't think so. 'If this is someone else's room, I better get myself out of here, quick!\" \n\nHe stepped out of the bathroom, walked around the bundle of clothes, through the kitchen, and around the bed, to reach the front door. He looked around the room, to make sure he did not disturb anything, put his hand on the handle, twisted it and he pulled. He pulled on it again, after checking the locking mechanism, and it still didn't open. \n\nHe screamed, \"Joe, I'm going to fucking kill you.\" \n\nIn reply, he heard two pubescent boys giggle as they ran away. \n\nHe took a few steps back, stumbled, and landed on the bed. \n\n\"I'm dead. There's no way I can compete against those two geniuses. I don't know what they did, but whatever it was, I won't be able to undo it from in here.\" \n\nHe reached for the rooms telephone, and it was dead. They removed the wire. He tried to use his cell phone, and that didn't work. They put a signal canceling device in the room, which would take him days to find. Those two thought of everything. There was only one thing left for him to do. He had to swallow his pride, as he began kicking the door, and yelling, \n\n\"HELP, HELP, HELP...\" \n\nJoe was just returning from the kitchen, where he received numerous warnings that Tom was on the warpath, and at his last sighting, he was on his way up to the sixth floor. \n\nJoe thanked everyone, and proceeded to run up to the sixth floor to see if he could forestall Tom's attack on Laura. As he reached the top of the stairs, the boys waved at him, from the other side, and began running towards him. They told him what they did to Tom. When they finished telling him this story, Joe was lying down on the floor holding his sides, laughing uncontrollably. \n\nIt took him a long while to stop laughing, and hugging the boys for what they did for Laura and him. When he did, he wanted to do something for the boys. \n\n\"Listen you two, I want you two to be absolutely honest with me. Is there anything that you are allowed to have, that the Lavers won't let you have in the way of a treat. I owe you a big one for this, and I want to repay you.\" \n\n\"You gonna barf.\" \n\n\"I'm not going to eat whatever it is, you are. Remember, you can't be allergic to it, and I want to have a job after I buy it for you.\" \n\n\"We swear were not allergic to them, but every time we want them, Mrs. Laver runs to the bathroom and throws up.\" \n\n\"What do you ask for, chocolate covered spiders?\" \n\n\"No, chocolate cove him red ants.\" \n\n\"Two pounds okay?\" \n\n\"One pound cans please, otherwise we'll fight over them.\" \n\n\"I'll get them as soon as I can. Amazon probably carries them.\" \n\n\"They do but we can't buy them, we don't have an account.\" \n\n\"I tell you what, I'll open an account that you guys can use. Just tell Mrs. Laver to pay me back. Wait one moment, I think that's a great idea; I'm going to open an account you too can use, and put a spending limit of $500 a month on it.\" \n\n\"Why, we are good for it?\" \n\n\"Richard, if they put the Citibank building up for sale, in New York, and you liked the price, you could buy it for cash. I'm not questioning what you can buy, I'm just saying should you buy it? Do you have to be the first to buy Apples' First Pulse Generator Watch? I am not sure if I want my watch to stop because it has a defect and I'm looking at it thinking I'm dying, because it's not telling me the time, or there is a sunspot, and my heart is no longer working. Do you see what I mean?\" \n\n\"Yes, but can we get two one pound cans of chocolate covered red ants each?\" \n\n\"Yes you can, but I will separate them one month apart.\" \n\n\"A month?\" \n\n\"Okay, two weeks and that's my final offer.\" \n\n\"You are really good at that Richard.\" \n\n\"It always works Holden, because their first offer is never their final offer. And if I pressed him, we could have worked it down to 10 days.\" \n\n\"Or we could have wound up with one over three weeks.\" \n\n\"I could always put the solvent on the door and have the superglue dissolve.\" \n\n\"Two one pound cans of chocolate covered ants dispensed over a two-week period. Do we have a deal or not?\" \n\n\"Yes Joe, we have a deal.\" \n\n\"Thank you boys, I have to drop off food for my fianc\u00e9, then I must go torment Tom. I can't thank you enough for doing that to him.\" \n\n\"When are you going to open our Amazon account?\" \n\n\"Tomorrow morning okay with you two?\" \n\n\"Tomorrow morning will be wonderful.\" \n\n\"I will see you in the morning.\" \n\n\"Laura, honey, are you indecent, I hope?\" \n\n\"I'm sorry to disappoint you, but I am not indecent.\" \n\n\"Dammit, how am I supposed to make love with you, when you're completely clothed?\" \n\n\"We could talk some more.\" \n\n\"Did you say talk or torment?\" \n\n\"I said talk.\" \n\n\"Are you hungry?\" \n\n\"Yes, I am. I thought that's what you brought back in the brown bag?\" \n\n\"I did bring food back in the brown bag; but how would you like to eat alfresco, outside room 684?\" \n\n\"I know I'm going to regret this, but what is inside room 684?\" \n\n\"There's a better question than that; which is 'who can't get out of room 684?\" \n\n\"Okay I'll bite, who can't get out of room 684?\" \n\n\"Tom.\" \n\n\"Why can't Thomas get out of room 684?\" \n\n\"Richard and Holden superglued him into the room.\" \n\n\"Next question; why did the boys do that to him?\" \n\n\"He was going around the ship asking everyone, and anyone, as to our whereabouts. The boys knew he was trying to catch us in the act of having sex, which to them was a no-no, because it was one of their parents' rules. So they set up this little trap for him in room 684. They messed up a bed, put some sheets on the floor to make it look like clothing, and turned the fan on in the bathroom. \n\nAfter he snuck into the room, they put superglue on both sides of a few metal tabs, and slipped three of them on each side of the door. The door is not going anywhere, until someone puts the appropriate solvent on it, namely, either Holden or Richard.\" \n\n\"I think I'd like to go to dinner now, and continue our telephone sex conversation.\" \n\n\"I think that's a marvelous idea, it will drive him crazy.\" \n\nThey walked to room 684, and could hear Tom screaming, \"Someone Help Me.\" \n\nLaura yelled, \"Joseph listen, someone seems to be in distress.\" \n\nIn his best vaudeville acting voice he replied, \"Dearest, I do not hear anything. Are you sure you heard someone in distress?\" \n\nTom started kicking on the door and screaming, \"Constantine, when I get my hands on your throat my fingertips are going to meet.\" \n\n\"You are correct dear, it's only those two sweet children playing over there. It's a lovely day should we sit down and have something to eat?\" \n\n\"Yes dear, I made some of your favorite foods.\" \n\n\"I can't believe you spent all morning cooking this fried chicken, mashed potatoes and this apple pie and you look just as gorgeous, and as beautiful as a spring day my dear. How do you do it?\" \n\n\"You two are going to make me throw up.\" \n\n\"It's so very easy dear. I get up at 1 A.M. I boil the potatoes, and make the dough so it can rise overnight. I dust the furniture, sweep the floors, mop them, and get down on my hands and knees and wax them, because they are such a lovely grade of hardwood. You had these parquet floors put in after you purchased this lovely prison; I mean home for me, and I want to keep it up so that you are proud of me. I go to sleep at 3:30 AM, and wake up at 4 AM. I go down to the basement, and kill the chicken, or the burglar who is ever in the basement at the time. I let the blood drip out of his neck. While I have nothing to do I peel the apples and soak them in vinegar water so they don't turn brown. When I get bored I go up to bed and sleep for five minutes. You know dear, it is just a typical woman's morning.\" \n\n\"I know dear I wouldn't want you any other way. If you had turned out like your mother, we would have had problems. I knew, I just knew you would be the perfect woman for me.\" \n\n\"Well that six-foot long, four-inch wide leather belt of yours does help.\" \n\n\"Yes that is fun isn't it. How about that other part of me; do you find that enjoyable?\" \n\n\"Oh my Lord Joseph, heavens yes. When that little monster of yours wakes up, we have such fun. All one inch of him is just the right size for me.\" \n\n\"Thank you dear but you know you're telling a lie, and we don't want you to do that especially since today is Sunday. We must be truthful on the Lord's day. We measured it and we know it's only three quarters of an inch. We don't want to go expanding on the truth now, do we.\" \n\n\"You two belong to each other. I'm going to get a gun and make sure you go to the grave together.\" \n\n\"Joseph who started this, was it you; was it me; or was it that idiot behind that door?\" \n\n\"It was door number three dear. If he had left us alone, we would have never known it.\" \n\n\"Are you two bastards going to let me out of here?\" \n\n\"Laura do you know how to get him out of there?\" \n\n\"No I don't Joe. Do you?\" \n\n\"I do not have a clue. The boys said something about a solvent, but I don't know what kind, or where they have it hidden. I'm not going to take a chance on hurting this ship just to get him out of that room before morning.\" \n\n\"Well, Tom you have a problem, because neither of us know how to get you out of there.\" \n\n\"Find one of the boys and have him do it.\" \n\n\"The boys have turned in for the night, and you know how the general is about that.\" \n\n\"Are you telling me I'm stuck in here all night?\" \n\n\"I'm telling you that you reap what you sow. You started this Tom. If you left us alone, none of this would have ever happened. We would have been blissfully ignorant of each other. Maybe something would have happened later on, or maybe we would have missed out on everything, but you forced us together, and it was the nicest thing you have ever done for me. When you come out tomorrow morning, I'm going to give you a big kiss. I can't thank you enough for pushing us together. Go to bed, and get some sleep. Laura and I are going to be in the next room making some lovely sounds for you to sleep by.\" \n\n\"You no good rotten...\" \n\n\"Good night Tom, pleasant dreams.\" \n\n************************* \n\n\"Admiral, we found your boat. I sure as heck hope's insured.\" \n\n\"What happened to my boat?\" \n\n\"What part do you want me to start with Sir?\" ",
        "\"Is the boat in one piece?\" \n\n\"No sir, it's in four pieces. Your two outriggers, are separated from the main deck, and the main deck is split in half by a tree that was about 20-feet tall. We took pictures for your insurance company, if you want to call it in.\" \n\n\"I'd better do that right away. All I need is a few of those guys throw grenades at my boat, and have it go up in flames. The adjusters will call it an act of war and it won't be covered under my policy.\" \n\n\"We can all swear it was a lightning strike.\" \n\n\"Yes that will definitely help. What is Colonel 'What's his name' up to? I haven't heard from him in 10 minutes. That means he's planning something reckless, or impossible.\" \n\n*********************** \n\n\"You and your guys followed these railroad tracks in boats to get to Charleston, in the middle of thunderstorms, and 70 mph gale force winds. You stopped on your way here, filled up with gasoline, purchased extra gas cans, and filled those up so you didn't have to stop again, and made it here in five hours. Alfonse, you are almost as crazy as I am.\" \n\n\"Colonel, I believe that's the nicest thing you've ever said to me.\" \n\n\"When we relieve the people at the Science Project, everyone will get a kind word from me. Here's what I'm thinking of doing Alfonse, tell me if I'm crazy.\" \n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; \n\n\"Colonel, with no disrespect intended, you're out of the fucking mind.\" \n\n\"Those were the words I was hoping you would say. It means my plan will work perfectly.\" \n\n\"Excuse me sir?\" \n\n\"Every time someone tells me one of my plans is absolutely impossible to pull off, it works. This is going to work, and we are not going to fire one round. I guarantee it.\" \n\n\"Colonel if you pull this off, and we don't lose anyone, I would kiss your ass if you had one.\" \n\n\"I would accept that gracious offer. It's going to work Alfonse. Let's get to work. We leave at 0600. Everyone goes to sleep now, gets up at 0430, eats, and starts loading up at 0530. Pray that it continues to rain.\" \n\n\"Let's go inside and give the men their marching orders. They are not going to believe it, anymore than I do.\" \n\n\"I have to call our helicopters to see how they're faring.\" \n\n\"None of them can fly in this weather.\" \n\n\"Two of them can.\" \n\n******************* \n\nAs Alfonse got everyone together to advise them of their upcoming mission. \n\nThey were wide-eyed with shock, and then went to get some restless sleep. \n\nAs he was walking to his room, Sergeant Chase walked up to the Colonel. \n\n\"Sir, when this is over, and before we start the next one, can I get two weeks R &amp; R with the twins?\" \n\n\"Let me warn you about that Sergeant Chase. Two weeks with those girls is not R &amp; R. It's the best cardio workout you'll ever have, multiplied by the power of ten.\" \n\n\"They wanted me to see a doctor to have me tested when I got back. I'll have him give me a full physical while I'm there. If I die I want to die, while sucking on those barbells.\" \n\n\"There are definitely worse ways to go Sergeant. Get some sleep.\" \n\n\"Yes sir.\" \n\n*************************** \n\n\"Admiral would you have your men bring the arms package up please.\" \n\n\"I will start the process immediately, Lucius.\" \n\n****************************** \n\n\"Lucius, you seem happiest when you are chewing someone's ass to pieces.\" \n\n\"Isn't that when you are the happiest, Patricia? If that was Robert you were talking to, how much joy would you have gotten out of that conversation?\" \n\n\"You know damn well if that was Robert, I would still be hanging from his balls talking to him.\" \n\n\"No you wouldn't. Look what he has turned out to be. Would you have pictured what he is today, 10 years ago?\" \n\n\"10 years ago, I would have expected the birth rate in Eastern Maryland to have gone up by more than 30 percent. I had not counted him on falling in love, with Fred's children. It fits his profile perfectly, and they keep do keep him satisfied. \n\nAs I listened to Fred's speech, at Georgetown, he talked about the value of family. He told his audience the story of how he met Sharon, and how he chased her all over Philadelphia, to the point she thought he was a stalker. He gave her one of his cards to prove he worked for the Attorney General. By the end of the day they knew they were meant for one another, and he asked her to marry him. She told him where the bridge was, to walk halfway across, and jump, because he was out of his mind. No one asks another person to get married, after only knowing her for a few hours. After a three-hour dinner, Sharon said 'yes.' She also said she was out of her mind, but she did say 'yes.' \n\n\"It shows the true value of being a lawyer. You can talk anyone, into doing anything, without them realizing it.\" \n\nRobert already had more money than he knew what to do with. He didn't have to work a day in his life. He could have bought an island, stocked it with an unlimited supply of birth control pills, beautiful young women, a regular delivery of fresh food. He could have lived an idyllic life, but he chose to work hard instead. I asked him to come to my home in Maryland for an interview, without knowing what it was for. His interest in politics was only to clean it up. I told him you can't clean it up from the outside. You have to get on the inside and get dirty with the people who are making the system corrupt. You have to fight all the ugly battles from the inside, and then you can tell everyone, how the corporations are debasing our country. \n\nDuring the time I had with him, I found out exactly how smart he is. He is not only school smart; he is worldly smart. The questions I asked him, were beyond anyone else's knowledge that just came out of school, yet he had answers that were beyond his years. Two of my daughters are lawyers, and two are doctors, and it hurt them dearly, when he beat them. By the time he was finished with them, they were as red as a delicious apple. They were so sure they were smarter than he was, they made him a bet. They are 19 years older and much more worldly then he is, they thought they couldn't lose. However, they did lose. \n\nI own a home in the islands, where we go every summer, after the court closes. Robert is now invited there for the rest of his life. While he's there, my four daughters are his servants. If he wants a soda, and we are on the far side of the beach, from our home, my four girls have to run all the way there. One has to get a tray, one the napkins, one a glass, with ice, and one the soda in a closed can. They have to do this in six minutes or less. If they are late, they must begin doing cardiovascular exercises to get back in shape. \n\nAs their father, I am prejudiced, because their shapes are perfect. They can't do these exercises in private, they have to do them on the beach, in front of us. It's hysterical to watch, because the beachgoers help them count each repetition. My children are again read as delicious apples when they are finished. \n\nThe virtue and dedication of Robert Valentino, to my four, beautiful, unmarried daughters, and now their new babies, is as if they are his family. \n\n\"Robert is like a husband to my daughters, and a father to their children. He is a confidante of mine, and a chauffeur to my lovely, but sometimes wayward, wife.\" \n\nThe large portrait being shown on the screen behind him, showed Robert lying on his side, with his hand holding up his head, looking down at four beautiful toddlers playing on the grass. Each beautiful mother is behind him, laying across his side, looking down at the same beautiful site. \n\n\"Fred should just take a postcard, and say that my son is the father of those children, and get it over with.\" \n\n\"Is he the father, Patricia?\" \n\nPatty did not tell him that Stephano believed that Fred was the real father of the four beautiful babies. \n\nShe demurred by saying, \"How the hell would I know? I wasn't in the room with him. It sure as hell looks like he is.\" \n\n******************** \n\nAt a meeting, Adam Schiff proposed to the group that they start making weapons to ward off attacks by animals as the one that attacked Teddy. The only thing the security team had to scare off that animal was their voices. If that animal turned to charge at them, it would have been a bloodbath. \n\nEveryone at the table agreed, including Monty. She reminded everyone that no part of the ship was to be touched. \n\n\"We all know how to make spears, and a rudimentary knowledge of making bows and arrows. Start with spears that are at least eight feet long, then work your way down to six feet, and then four feet long. Look for downed trees, and bring them to the ship. The wood from those trees will be harder, and we have to find a way to cut them. Jack do you have any ideas?\" \n\n\"I believe I can come up with something that will help you cut those trees. However, I only want you to use one tree at a time. You can make your eight foot long spears from the outside of the tree. Then you can move deeper into the tree and make your shorter weapons. Don't forget to make knives for close in combat. One good size tree will provide you with almost 60 weapons if you're careful.\" \n\nGordon said, \"I know my dad said he didn't want any weapons on board, but I can't believe he would leave us defenseless, when we landed on the planet we chose. He knew we would pick a planet with the possibility of life on it, and he would not allow us to be exterminated by a more dominant society. I suggest you have a discussion with my father, Senior Captain.\" \n\n\"He did this to me on purpose. I knew it from the moment he passed me on that test. I knew it from the moment he ordered me to take the first test. I hated that man, while he was alive. Now I have learned to hate him in death. How can you possibly hate a dead man?\" \n\nJennifer said, \"You never hated my husband when he was alive. If you say that again, I'll tell everyone here about a person whose initials are J.O.\" \n\n\"If you do Jennifer, you will never speak again.\" \n\n\"Mom, do you mean the guy, J.O. that Zoey, and Teddy told me about? I asked them both to be quiet about it, until I verified it was true. I guess it is true, and I can let my wife, and Teddy start passing the news.\" \n\nMonty put her head and her hands. \"The little and big newspapers on this ship know about Jackson. My life is ruined.\" \n\n\"Monty everyone knew about Jackson months ago. Look at all the weight you've lost. You've become a human being, instead of a barking dog all the time. It was bound to happen. Personally, I didn't think it was going to be Jackson. I didn't think he had the balls to do it. I am very happy for both of you. Now do your job as captain, and go speak to my father. I'm not sure if he knows about you two, and if he doesn't, tell him.\" \n\n\"Why would I want to be laughed at by your father?\" \n\n\"Why would you care? All you want to know is where he hid the defensive weapons. Tell him we're in trouble without them. I will do it for you if you want, but it is not my job.\" \n\n\"You are right, Gordon, it is my job. I will do it. I want an inventory of all the food we have, the seedlings we have growing in the Arboretum, the fast-growing seeds in our storage area, and the mechanical instruments we have to plant them. \n\nAdam, as always, you get the shitty job. How much fertilizer do we have on hand? \n\nThis meeting is dismissed.\" \n\n****************** \n\nMonty left the meeting room, and headed for the bridge. As soon as Gloria Abrams saw her enter, she said, \"Senior Captain is on the bridge.\" \n\n\"As you were Gloria; you are still in command. I have to talk to that pain in the ass.\" \n\n\"I'm sorry Captain, Gordon is not here.\" \n\n\"No, not that pain in the ass, his father.\" \n\n\"Oh, sorry about that.\" \n\n\"Good afternoon Callie, this is Senior Captain Montgomery Jamison.\" \n\n\"Good afternoon Senior Captain, how may I assist you?\" \n\n\"You know that pain in the ass that will not let you win at chess?\" \n\n\"You mean Captain Luck.\" \n\n\"Yes Callie that's the one. May speak to him for a few moments?\" \n\n\"He said he does not like to be referred to as a pain the ass.\" \n\n\"If he doesn't like the truth, tell him to go to sleep. Everyone on this ship agrees with me, and no one agrees with him, and that includes his wife and son.\" \n\nEven Luck screamed, \"That's not true, my wife doesn't think I'm a pain in the ass.\" \n\nMonty picked up her communicator and asked Jennifer Luck to join her on the bridge. \n\n\"Would I call your wife to the bridge if I didn't know she was going to agree with me, Even? Didn't she tell you before you left her to come back and make it right? Did you do that for her? No you didn't, and she's pissed at you. \n\nNow we have a problem, and it's a big problem. Teddy was almost killed by a vicious animal, and we had no defense against it. The only reason it ran away is because there were more security agents running at it, screaming than it believed it could take. If it turned on them, it would have been a massacre, and we would have lost. We are going to look for trees to see if we can make spears and possibly bows and arrows to protect ourselves. We are coming out of the Stone Age, Even. We don't have a saw to cut the wood, we have no metal, to put on the points, we have nothing to defend ourselves with. Did you put anything on this ship just in case we ran into a problem like this?\" \n\n\"I was hoping it would never come to this.\" \n\n\"Okay, we will pack up and head back to Earth. Our mission will have been a failure, and everything you have ever worked for, will go down the drain. Go play chess Even, I never thought you would give up like this.\" \n\n\"I never said I was giving up. I said I was hoping it would never come to this. In boxes marked XWX417 through XWX640 are side arms, rifles, and ammunition. Please don't use them for offensive purposes. It would break my heart.\" \n\n\"Even, we have less than 100 people. Less than 70 of them are adults. Who are we going to attack? All we are going to do is set up a safety perimeter around the Good Luck 1, when we are outside, to protect ourselves against animals, like the one that attacked Teddy. This way everyone will be safe. \n\nWe know there are other people on this planet, and they are stuck on the dark side. They landed safely, instead of crashing there. We hope they are friendly, but we can't take a chance. Teddy told you about them before you had to leave us. Elizabeth is about to have her baby. According to Teddy, her baby is the one who will make first contact with them. As you know, Teddy is never wrong.\" \n\nI didn't know Elizabeth was married. I'm very happy to hear it. It means she was able to put a lot of her fears behind her, and is able to live a normal life. Who did she marry?\" \n\n\"Your grandson.\" \n\n\"Newton! She married Newton?\" \n\n\"Yes she did. and you have never seen two happier people in your entire life. They both walk around the ship with smiles on their faces.\" \n\n\"I would never have guessed that relationship in 1 million years. She must have had quite an effect on him.\" \n\n\"It was the other way around, Even. He chased her all around the ship. Then she agreed to have lunch with him. Then one hour visitations. Then visitations with no restrictions on time. \n\nDelicious nearly fell off her chair, when Teddy told her about that relationship, because up until that point, Newton was speed dating. He had three or four dates a day, and unless you paged him, or a parent paged their daughter, he couldn't be found.\" \n\n\"What did Gray have to say about this change in behavior?\" \n\n\"Gray was thrilled. I put the two kids on the same schedule, and when they get off, they run to their apartment to clean up and spend the rest of the day together. They are two people in one suit, and you can't get them apart. It is beautiful to see.\" \n\n\"Doctor Luck, your time is up.\" \n\n\"I'm sorry Callie, this was my fault. Please forgive me. I appreciate the time you gave the doctor to speak to me.\" \n\n\"It was a situation that had to be handled very carefully, and consider the safety of the ship. I agree with the decision that was made. As the good Doctor reminded you, please use the weapons with restraint.\" \n\n\"We will, I promise the both of you we will.\" \n\n************************* \n\n\"Security is everyone on board?\" \n\n\"That is affirmative Captain, everyone has checked in.\" \n\n\"Does that include Teddy?\" \n\n\"Yes it does Captain, her mother brought her in personally, unhappily, but personally.\" \n\n\"Bring the elevators up, and keep an eye out for any stragglers.\" \n\n\"Roger Captain, elevators coming up.\" \n\n\"Attention all parents, this is Senior Captain Montgomery Jamison. Please verify all children are on board. This includes children between the ages of 14 and 17 years old that have a habit of wandering off, with children of the opposite sex. If not, please call communications immediately. I am sealing the ship to have a meeting with all security personnel. I have to be certain everyone is on board.\" \n\nTeddy ran up to Monty, and saluted. \n\n\"Teddy here this time Big Captain; not late.\" \n\n\"I'm very happy to see that Teddy. Why were you giving your mother a hard time, when she tried to get you on board?\" \n\n\"She think I say 'time to play.' I say 'time to pray.' Big mistake.\" \n\n\"Did you pray after you got inside?\" \n\n\"Yes, we go straight to chapel.\" \n\n\"You are a good influence on your mommy. How are the twins?\" \n\n\"Very naughty, I hope I not that bad when I that young. They have nose in corner all day if they talk like that.\" \n\n\"Are you teaching them how to pray?\" \n\n\"I try, they not listen. Big trouble when they start talking.\" \n\n\"Yes, very big trouble. Between daddy, mommy, and you, very big trouble.\" \n\n\"You get married soon?\" \n\n\"Where did you hear that?\" \n\n\"Just a question. Jackson, you, very happy. Good company for one another.\" \n\n\"It takes more than being just good company for one another to get married. Something has to go off in your head that tells you this is the person you want to spend your life with. Otherwise, it's not going to work.\" \n\n\"Jackson say same thing.\" \n\n\"Teddy someone has to put cotton in your ears, so you don't hear everything that goes on in the ship.\" \n\n\"I no here it, Zoey tell me.\" \n\n\"I should put both of you in stasis for 20 years.\" \n\n\"Why?\" \n\n\"That way something that goes on in this ship would be a surprise to the people it happens to.\" \n\n\"Jackson at table talking to all his friends. He trying to figure out what to do.\" \n\n\"In other words this is all around the ship, and I am the only one that didn't know about it.\" \n\n\"I tell you about it now.\" \n\n\"Thank you very much Teddy. Why don't you go down to the playroom and see how our turkeys are doing?\" \n\n\"You angry with me?\" \n\n\"No Teddy, I am definitely not angry with you. I'm very grateful that you told me. You also have a birthday coming up soon.\" \n\n\"16 days, I'd be five. Be on ship long time.\" \n\n\"Are you happy here on the ship, or would you rather be on earth with all the other children?\" \n\n\"I be here than any place. Miss grandpa; he make me laugh. Give me creamy cow for birthday, Big Surprise. He promise me Big Surprise, No Dress. Give me big surprise. Mommy, daddy not know we have ice cream. Grandpa fool them too. \n\nWhy not rain here? We here long time now. Everything green, pretty, but no rain. How it do that? I play with turkeys now. Bye Big Captain\" \n\n\"If I didn't love that child so much, I'd kill her mother for giving birth to her.\" \n\n\"Senior staff to the meeting room now. That means you too Jack. I don't care what you're doing, and I don't care if Hannah gets angry with you, or me. Get to the meeting room now. Laura I need you there, along with Adam. Gloria assign someone to Captain the bridge. Harvey Cushing, I need you there, and you all better be there before I get there.\" ",
        "When she arrived at the meeting room no one was there, and she was livid. She found a note on the desk. \"Dear Captain, the next time you call a meeting for 40 people, make sure the room you want it in can hold that amount of people. Get your ass into the auditorium. Love Gordon.\" \n\n\"I'll kill him. I won't bring him before a quorum, I'll just kill him. I'll take a rifle, put one bullet in it, stick it in his big mouth, and pulled the trigger.\" \n\nFrom underneath the oval desk Gordon shouted, \"Nothing would happen to me, when you pulled the trigger.\" \n\n\"Why not smartass?\" \n\nGordon got out from underneath the desk, and looked at her. \"You forgot to take off the safety. Can I be your best man?\" \n\n\"A woman doesn't have a best man asshole. They have maids or matrons of honor.\" \n\n\"Does that mean you are going to say yes, when Jackson asks you?\" \n\n\"Is nothing sacred around here?\" \n\n\"Monty, I live with the newspaper editor. If anything happens, I'm the second person to know it. May I give you a hug, because if anyone on this ship deserves happiness, it's you.\" \n\n\"Don't you dare make me cry. If I shed one tier, I will find something to kill you with.\" \n\n\"Monty, you've lost 70 pounds. If we were on earth, no one would recognize you. The women on this ship are making you a bridal gown. It's not because they have to do it, they want to, for what you've done for everyone. \n\nJack has measured you with lasers trying to get your approximate size. Newton measured your height, and your hips. I don't know how, but Elizabeth measured your breasts. I won't get into that. \n\nEveryone loves you. My dad made you senior captain, because everyone trusts you, and everyone trusts your judgment. It's the reason he pressured you take the two captains tests early. You did so well. You made him so proud of his faith and trust in you. We all are. Some of the decisions you had to make were really tough. Each one you made was correct. No one, and I mean no one could have done a better job than you, except me, of course. \n\nHe didn't know which way it was coming from, but he knew it was coming. He put up both arms to protect his head and neck, and ducked. \n\nMonty knew he would go down, and that is the way she swung at him. She twisted her hips to the right, and swung her left fist first. She aimed down towards the top of his head trying to move his left arm away from its protective position. She followed the left hand with a blazing straight right hand, aimed towards at his left temporal lobe. \n\nUnfortunately, her left hand landed flush on his cheekbone, staggering him further down and further away from her right. Monty's crushing right hand, flew by his head, like a welcome Zephyr. She screamed in anger, and disgust. \n\nGordon bounced up quickly laughing. \n\n\"You missed me, you missed me, but I was kind enough to stop you from crying.\" \n\n\"I would not have cried if I hit you either, you pain in the ass.\" \n\n\"Can I hug you now?\" \n\n\"Okay.\" \n\n\"Congratulations Monty, I wish you all the luck, and love in the world. I mean that from a scared 4-old boy, and from a 23-year-old man.\" \n\nHe put his arms around her, and put his cheek against hers, and then he kissed her. \n\nThe picture was all over the ship within seconds. \n\nCome on Monty we have a meeting to go to. \n\n***************** \n\nWhen they walked into the auditorium everyone stood up, applauded and cheered. Monty and Gordon looked at one another, and shrugged. They took their seats, and Monty called the meeting to order. \n\nThere was a constant giggle going on among the senior staff as Monty was trying to get the people to listen to what was important about this meeting. She pounded her fist on the table and asked, \"What the hell is going on?\" \n\nLaura pointed at the screen behind them. \n\nMonty and Gordon turned and saw the blown up picture of them kissing. \n\nGordon screamed, \"Zoey, you're not getting any for a month. That was a private moment between us. Can't you leave anything alone.\" \n\nMonty looked at him with blood in her eyes. \n\n\"Swear to me you knew nothing about that.\" \n\n\"I swear on my father I knew nothing about that picture. That was between you and me, and I wanted it to stay that way.\" \n\n\"Thank you Gordon.\" \n\n\"Now I'm going to ask all of you gathered here at this meeting, and if I feel any of you are lying to me, you're going to lose rank, and your jobs. That is not a threat, that is a promise. If you tell me the truth, you will keep your rank, but you will be punished for doing that to us. If you had nothing to do with that incident stand up. \n\nEveryone but Janet stood up. \n\n\"This meeting will reconvene at 2200 hours; dismissed, triple time. Janet stay where you are.\" \n\n\"Monty should I stay and act as referee or should I leave?\" \n\n\"Since I, as senior captain, am involved; I think you'd better take over that role Gordon. If you can't be impartial get someone else.\" \n\n\"Janet do you want me to get someone else?\" \n\n\"No, that won't be necessary.\" \n\n\"Monty you will not open your mouth, while Janet is speaking. You will not interrupt her. There will be no outbursts of any kind. Wait, I forgot something. \n\nSecurity sends six agents to the auditorium please, on the double.\" \n\n*********************** \n\n\"Yes Captain Luck, how can I help you?\" \n\n\"Senior Captain Jamison is temporarily relieved of her duties. Place three men behind her, and three men behind Captain Dover. I hope to keep this a civilized proceeding, and hope that tempers do not flare. Do you understand me ladies?\" \n\n\"Yes Captain.\" \n\n\"Yes Gordon, I understand.\" \n\n\"That's captain to you, lady.\" \n\n\"Don't push me Gordon. Yes, Captain I understand.\" \n\n\"Captain Dover, you have five minutes to explain yourself.\" \n\n\"When Zoey approached me...\" \n\n\"I'm going to kill that bitch.\" \n\nJason, a senior security agent said, \"Captain Luck, you just broke one of your own rules.\" \n\n\"Forgive me for interrupting you, Captain Dover. Your five-minute starts again now.\" \n\n\"When Zoey Luck approached me, and told me you might want to congratulate our senior captain in private, because of your long relationship together, she said you would want to do it in the conference room. If it was at all possible, I was to complain that it was too crowded in there, and ask that it be moved to the auditorium. \n\nI had no idea if we were going to get a private picture of you two hugging or not, because Zoey was in control of everything. When I saw it, I was overwhelmed by it. It was such a beautiful moment, we all applauded. Only Zoey, and the people in security knew the picture came out that fantastic. That's all I have to say, and that was my only involvement in it.\" \n\n\"Jason, who was the supervisor in security tonight?\" \n\n\"Quincy Nesbitt.\" \n\n\"Would you ask Mister Nesbitt to join us, under guard if necessary.\" \n\n\"Yes Captain.\" \n\n\"Captain Jamison do you want me to cross-examine the witness now, or would you like to make your statement first?\" \n\n\"I'll make my statement now. I love you Janet, as if you were my own sister. You didn't do anything wrong. The next time you are involved with something like this, I'll break both your legs, your neck, and both your arms. What is Jackson going to think when he sees me kissing another man? He was having trouble deciding if he wanted to ask me to get married or not. What is he going to do now?\" \n\n\"Monty can I say something?\" \n\n\"Sure go ahead.\" \n\n\"Don't yell at me, I'm only the messenger. It was Jackson's idea. He talked to Zoey, and she took it from there.\" \n\n\"I will kill that son of a bitch. Gordon get the Good Luck 1 ready to go up to five miles above Atwater Luck. I have no idea what you're going to do with Zoey, but I sure as hell know what I'm going to do with Jackson.\" \n\n\"I will remind the former senior captain that it is illegal to throw someone overboard without his consent, or a quorum of the membership of this ship. However, if you let me throw Zoey off with him, you have a deal.\" \n\n\"You can't throw Zoey overboard; she has a baby to take care of, and she is pregnant.\" \n\n\"There are plenty of eligible 16 and 17-year-old young ladies that are looking to get married to a handsome, bright, intelligent, rich young man, with a very bright future ahead of him. I'll ask Doctor Finch if we can put the baby in stasis, until we can find a willing female to implant it into and bring it to term.\" \n\nJanet said, \"We can always implant it into Monty. She would look ravishing pregnant.\" \n\n\"I'm beginning to think you would look ravishing dead, Janet.\" \n\n\"Captain Luck, Mister Nesbitt is here.\" \n\n\"Mister Nesbitt would you please stand before the court.\" \n\n\"Yes Captain.\" \n\n\"Mister Nesbitt who authorized you to put that picture on every screen around the ship?\" \n\n\"I believed it was a picture of ship wide interest, so I put it up sir.\" \n\n\"So no one authorized you to put that picture up; is that correct?\" \n\n\"I am allowed to put pictures of ship wide interest sir.\" \n\n\"Do you know what I'm allowed to do Mister Nesbitt?\" \n\n\"Almost anything that's legal sir.\" \n\n\"That is correct. What I'm about to do is absolutely legal Mister Nesbitt. A member of my household went down to security and told you to take a picture of the Senior Captain, and myself, instead of doing your duty, which is keeping watch on the stairways, hallways, and all the areas that could cause harm to our children and adults. Instead, you focused on one particular room, and waited until I gave a kiss to a good friend, who I have known since the age of 4, and may soon be getting married. So for this breach of your normal duty, you will lose your rank to basic, and begin retraining. You will also spend the next two weeks in the brig. That will be all Mister Nesbitt, take him away please.\" \n\n\"Zoey is in so much trouble\" \n\n\"Jason contact Captain Elizabeth Thyme and ask her if she is available to watch Payne for a short time please. Also, send a four-man security team to my room, and have them wait outside, until Elizabeth has relieved Mrs. Luck. At that time, advise my wife she is wanted in the auditorium. If she refuses to come peacefully, have those four men convince her, one way or the other, to come to the auditorium. If her mouth causes problems, put a gag in it. If she tries to hit any of the agents, cuff her. If she attempts to kick them, restrain her legs. If more agents are needed to get her down here, don't hesitate to ask for help. Carry her down if necessary, but get her down here.\" \n\n\"Yes sir.\" \n\n\"Jason, wear your gloves; she bites too.\" \n\n\"Thank you Captain.\" \n\n****************** \n\n\"Captain Luck, your mother would like to speak to you.\" \n\n\"Oh fuck. Hello mother, how are you?\" \n\n\"Don't you dare give me, 'how are you mother?' What is going on? Rumors are running around all over the ship.\" \n\n\"You taught me never to believe in rumors.\" \n\n\"Gordon, where are you now?\" \n\n\"I'm with Monty and Janet.\" \n\n\"Let me speak to Monty for a second.\" \n\n\"Hello Jen, what's up?\" \n\n\"Is my son in trouble again?\" \n\n\"Absolutely not, he's fine. The three of us are sitting here talking. What did you hear that's going on?\" \n\n\"We heard that you canceled a meeting.\" \n\n\"Gee, I can't understand why? I called a meeting of all senior staff members, and guess who didn't show up; half my senior staff. Are you going to be here at 2200 hrs.?\" \n\n\"I'm sorry Monty, I didn't hear about the first one. I definitely will be there at 2200 hrs.\" \n\n\"Do you have any other questions?\" \n\n\"No I guess not; I will see you later.\" \n\n\"Okay, later.\" \n\n\"This ship is abuzz with news they cannot decipher.\" \n\n\"They will when Zoey is in the brig for 30 days.\" \n\n\"Gordon, when I take over as senior captain, I am not going to allow that to happen.\" \n\n\"Monty that is your prerogative. I am just going to show her exactly how angry I am with her. This has to stop. I don't mind normal gossip, but to go digging into someone else's life is really beyond the pale. I won't allow it to go on in my family, and if she continues doing it I will move out.\" \n\n\"Don't do anything rash. Make sure you explain that to her very clearly, before you do anything to break up your family.\" \n\n\"I understand the ramifications of breaking up a family. I've watched what happened between my sister and Gray. I knew Gray would make it. I wasn't sure if Delicious would.\" \n\n\"Now back to you Janet. Monty has forgiven you for your part of this fiasco. As captain of this ship I cannot. I have to come up with a punishment that fits this crime, and I've been hard-pressed to do it. So here's what I've decided to do. For two hours after you finish your shift, and two hours prior to the beginning of your shift, you will be confined to the Arboretum. You must smell the flowers, look at plants, and help pollinate them when it's needed. I know it's a tough punishment. It will be enforced for a period of one month. I want you to think about your actions, and what Monty advised you would happen, if these actions ever occur again.\" \n\n\"I will try my best to mend my ways Captain.\" \n\n\"Captain Dover, you are dismissed.\" \n\n\"Are you kidding me? I wouldn't leave here now if you paid me. I may sit in the back just in case she starts throwing things at you, but I have to see this.\" \n\nMonty saw security backing way from the tables, and shook her head. \n\n\"Hold your ground men. She is only one person, and she will only be going after Captain Luck. He knows how to handle her quite well.\" \n\n**************** \n\nIt started as a dull thumping. It increased until you heard bodies bouncing against walls. Then you heard a voice yell, \"Dammit, she bit me.\" \n\nThen they entered the auditorium. She saw Gordon, and started running towards him. \n\nShe should have known better, but there are times when your head stops functioning, and your heart beats only to keep you alive. \n\nHe stood up. \n\nShe was five feet away from him, when he made a move that Monty and Janet had never seen before. He bounced Zoey up, and onto her back with such ease, and grace, it appeared as if he used no effort at all. Zoey was in twilight land in less than the blink of an eye. \n\nWhile she was there, Gordon wrapped her hands together with the yellow plastic ties. Then did it again but tied her hair into the ties. Every time she moved she would pull her hair, and be in pain. He also disabled her feet. He went to the table took a jug of water, and dumped it on her face. \n\nShe woke up in pain, intense pain. The words that came out of her mouth were not fit for any woman, from any side of the tracks, from any state in the union, from any nation on their former planet, Earth. \n\nGordon stood up again, walked behind her, put two fingers in an area of the neck just to the right of the medulla oblongata, and pressed them together \n\nHer scream could have shattered glass a mile away. \n\nHe looked at her, and there were tears in her eyes. \n\n\"I don't care about the tears Zoey. Are you going to act like a human being now, or are you going to continue to get people fired from their positions?\" \n\n\"I did nothing of the kind. You're just angry with me that I got that picture.\" \n\n\"Angry with you; I'm not even close to being angry with you. How about livid, irate, furious, enraged, and 1000 more words that come to mind. That was a private moment between me and my best friend. You couldn't leave it alone, you had to make a public spectacle out of it. You are fucking newspaper, with no idea what is fit to print, and what is not. You don't know the difference between something that should be allowed to go before the public, and something private that belongs in someone's scrapbook. Why don't you put a camera in our bedroom so everyone could watch us make love? According to you, that would be a newsworthy item. \n\nHow about putting cameras in areas where teenagers make out? You know where they are just learning about love? The first touch, the first kiss. Then we could run it all day long so they can watch themselves and other teenagers to see how well they are doing. You can make up a grading scale for each of them. At night, we can make sure the parents see the reruns of the days' events, after their children go to sleep. \n\n'Well, Richard touched Joan's breast. Now we better talk to him about safe sex.' \n\nThat would be newsworthy, wouldn't it?\" \n\nDon't you see what you're doing, Zoey? You are going to make everyone afraid to do anything on board this ship, because of your sneaking around and taking pictures of them in private moments. What are you going to do next Zoey? Are you going to start printing little lies about someone, doing something to someone else? You're going to ruin the harmony that has made this ship a home for all of us. I will not be a part of it.\" \n\n\"For this breach of privacy, you are spending 15 days in the brig. As your husband, I am telling you this, 'If this shit continues, I am moving out. Payne is my responsibility; she will be living with me. When you give birth to our next child, I will fight you over custody for that one, too. You've gone way off the tracks, Zoey, and this one was way too far. \n\nMister Nesbitt has lost his rank, and is in the brig for two weeks. Janet is under restriction for one month. If you think this joke of yours has had no effect on anyone else, you are absolutely wrong. Every member of the security staff that was on duty tonight will be spending one day in the brig because of you. Everything has consequences, and this was your fault. \n\nI'm going to stand you up, and release you from your bonds. If you try to hit me, so help me God, you'll be on the floor again.\" \n\n\"Guard can I have the clipper please?\" \n\nAfter Gordon released her, Zoey glared at him, but did not dare say a word. \n\nGordon said, \"Senior Captain, your rank is returned to you.\" \n\n\"Thank you Captain Luck.\" \n\n\"Mrs. Luck, do you have anything to say for yourself?\" \n\n\"Yes I do Senior Captain. As soon as I get out of the brig, this cock sucking son of a bitch can move out. If he thinks he can control my life, and what I want to do with it, he can go straight to hell.\" \n\n\"What action do you want to take at this time?\" \n\n\"I want him out of our apartment.\" \n\n\"Do you want to separation or divorce?\" \n\n\"A divorce will do nicely.\" \n\n\"I will need a list of charges and specifications detailing what he did wrong to put on the paperwork for the divorce.\" \n\n\"If I can have a pen and paper, while I am in the brig, I will make it out, during my leisure time.\" \n\n\"Captain Luck, I will need the same from you.\" \n\n\"You will have mine in two or three days, because I will be taking care of my daughter.\" \n\n\"Security, escort Mrs. Luck to the brig. Make sure she has a bed and linens.\" \n\n\"Yes, Senior Captain.\" \n\nAs soon as Zoey was clear of the area, Janet said, \"That went very well didn't it?\" \n\nGordon replied, \"Yes, it went a lot smoother than I thought it would go. I guess I'll never know if I asked her for too much, or if I should've asked her for much more. However, if this is the way she wants it; she can have it.\" \n\n\"When do you want me to let her out Gordon?\" \n\n\"You are the Senior Captain Monty. Whether you want to release her one half hour from now or two weeks from now, it's your decision. I'm going to get Payne. I think Elizabeth will be quite happy that her 1<sup>st</sup> interaction with a live child is over. I'll find a babysitter for tonight's meeting, and move in to another room. I'll get Newton and a few friends to help me move my things.\" \n\n\"Okay, I'll see you later.\" \n\nHe was walking down the hall towards his room and saw his mother coming the other way, with a full head of steam on. He stopped, turned, and began walking the other way. \n\n\"Your father tried that on me, and it never worked. Stop where you are, or I'll tear you to pieces when I catch you.\" ",
        "He stopped and leaned against the wall. \n\n\"Are you out of your fucking mind?\" \n\n\"What did I do this time mom?\" \n\n\"You're divorcing Zoey?\" \n\n\"I have 9 witnesses that will tell you that is not true. Those same 9 witnesses will tell you that Zoey is divorcing me. She did not like the way I said she has no filter between her brain, her mouth, and the newspaper. If she says it, it goes in there and she doesn't care who it hurts, or the ramifications of it. I gave her examples, and she didn't care. One of our security agents lost his rank, and went to the brig for two weeks, because of that picture. She didn't care, she got her picture. I told her Janet was restricted for a month, and Zoey didn't care. I told her the entire security team that was supposed to be watching this ship for anyone who might be getting injured was going to the brig, and she didn't care. She got her picture. I told her if she didn't stop this intrusion on everyone's privacy, I was gone, and she did not care.\" \n\nMonty asked her if she had anything to say about my request. \n\nShe said \"Yes! She told me to go fuck myself. She wanted a divorce.\" \n\n\"Well mom, she can have her divorce. Payne is my responsibility, and I will take care her, just the way you took care of me. When she has our next child, I will fight her tooth and nail for custody of it. The way she is behaving, they are better off with me anyhow. Those 2 children are as much mine as they are hers, and I am going to fight hard for them in this divorce. If I have to take a lesser job to get them, I will. If they want me to work in the nursery, I will. I will keep those children close by me every hour of the day, doing whatever I'm supposed to do. We are on the ground, and we have enough captains to cover each shift. If I am needed in an emergency, everyone will know where I am.\" \n\n\"Gordon, you're forgetting a few things. I can help you, and so can your sister.\" \n\n\"Mom, you just had twins, when are you going to find time to help me? According to Teddy, I'm better off keeping Payne away from her brother and sister. It seems they have an attitude problem.\" \n\n\"Teddy didn't say anything about that to me.\" \n\n\"Ask her, because I have a feeling Tatum is going to be just like her mother, and Truman is going to be a mix of Delicious, and Gray. That's going to be a very interesting household.\" \n\n\"Interesting is not the proper word. Do you know how to make cement, because we are going to have to keep your sister on one side of the wall, and Tatum on the other.\" \n\n\"Whose problems are worse mom; mine or hers?\" \n\n\"I'll let you know in a year.\" \n\n\"I'm going to ask you a very big favor, mom, no this is a huge favor. Don't shut Zoey out. If she comes to you to talk, talk to her. Don't victimize her, listen to her side, and don't be judgmental. Tell her to go see Hannah, because it would be the best thing for her. Have her talk to Elizabeth about talking with Hannah and how much it helped her. Will you do that for me?\" \n\n\"Of course I will. She will always be the mother of my grandchildren.\" \n\n\"I will be fighting for custody mom. Full, complete custody. I want to set the rules. When I submit my paperwork, I'm going to include how she was for the first 17 years of her life, and submit to the court that she is returning to the person she was all those years ago. I will request that she be kept away from Payne, until a thorough psychiatric evaluation is made of her. When I say that out loud in court, she will explode.\" \n\n\"Honey, any mother would.\" \n\n\"I didn't ask for this mom, I asked for a little common sense. You can ask Monty; you can ask Janet. All I asked her to do was to stop digging into other people's lives.\" \n\n\"How did you ask her to do that?\" \n\n\"Initially, I asked her very kindly to do it. Then she yelled at me that I was only angry that she got the picture. That's when I told her what happened to everyone associated with that picture, and she didn't care. One life was ruined; Janet has to spend a month in the Arboretum, and everyone that was down in the security area, monitoring the ship will be spending time in the brig because of her. \n\nMom she didn't care about anyone but herself.\" \n\n\"Let's go see how Elizabeth is doing with your daughter.\" \n\n\"She's probably doing as well as I will be doing the first few days. I will be alone with Payne, learning how to deal with a baby one on one.\" \n\n************************* \n\n50. The Big Bluff \n\nThe winds and rain had not abated one bit, because the thunderstorms were training one after the other directly over Charleston, South Carolina. Everyone inside the area, with the partially built Good Luck 2, was well rested, fed, warm, but most of all dry. \n\nThe opposition force was in the opposite condition. After Lucius told Alphonse his plan, he was sure it would work. All he had to do now was to find his helicopters. He opened his briefcase, attached the antenna, turned to a secure channel, and received a green light. \n\nAlphonse stood behind the Colonel, wondering how far off the beaten track his mind had gone. He was sure this plan was as crazy as any he had ever heard, probably crazier. \n\n\"Buffalo 1, this is Hotel, where the fuck are you? Buffalo 1, this is Hotel, where the fuck are you?\" \n\n\"Hotel, this is Buffalo 1, we are in the maintenance hangar at Charleston military base. All four of us are here. Over.\" \n\n\"Buffalo 1, what is the condition of Dragonfly?\" \n\n\"Hotel, Dragonfly has a broken oil line, which is being repaired. His radios are shot to hell, and they are trying to repair those, over.\" \n\n\"Buffalo 1, what is the timeline on Dragonfly?\" \n\n\"Hotel, the oil line is being completed now. They will do a pressure check on it to certify completion. That should take 30 minutes. I have no idea how long it will take for the radios. Over\" him \n\n\"Buffalo 1, tell whoever is working on dragonfly they have 90 minutes. After that they have to button up, and start the preflight on that aircraft. \n\nWe'd leave in two hours. Verify Dragonfly can fly in this weather.\" \n\n\"Hotel, the Dragon is in all weather aircraft. I will get a message to the captain to make sure he certified to fly in this weather.\" \n\n\"Buffalo 1, can you fly in this weather?\" \n\n\"Hotel, that is affirmative.\" \n\n\"Buffalo 1, I want you at the Schneider Industries terminal, bay six in 30 minutes.\" \n\n\"Hotel, unable to comply. It takes more than one hour with four men to do a preflight on this aircraft. There are only two of us qualified to check it out.\" \n\n\"Buffalo 1, you now have 29 minutes and 40 seconds to get here. Don't be late, or there will be consequences.\" \n\nTony ran to the maintenance chief, told him his problem, and begged him to drag his helicopter outside. Once that was accomplished, they had to unfurl the six, 27 feet long, rotor blades, warm up the electronics, and start the two jet engines. They had not done one third of their preflight checklist, when they started moving towards the runway. They got clearance from the tower to cross it, and proceed to Schneider's terminal. When they arrived, Lucius was standing on the dock waiting for them. \n\nCaptain Anthony Sagan shut the helicopter down, and told his warrant officer, Gino Capiletti, to check everything, make sure the rest of the preflight was completed, and everything was okay with their aircraft. \n\nHe jumped out, and ran straight to the Colonel. \n\n\"Why the fuck couldn't you wait an extra 30 minutes so we could check out our aircraft properly, instead of possibly ruining a $50 million delicate machine?\" \n\n\"I needed you here for briefing Captain. If you don't like it, you can take off those wings and go to jail.\" \n\nSagan reached for his wings tore them off his shirt and handed them to the Colonel. \n\n\"Fly the fucking thing yourself. I am not going to explain to you or anyone else how I wrecked that aircraft, because you had a temper tantrum. I resign, put me in jail.\" \n\n\"Anthony for the amount of money I'm paying you, you should stand up and dance every time I order you to do something. Instead, you are a pain in my ass. Should I ask you why, or do you want to tell me why you disobey me?\" \n\n\"I'll tell you why Colonel. You are ground pounder. On the ground I would follow you anywhere, and do anything you asked me to do. You have no concept of what it takes to fly an aircraft. It's not a rifle which you can break it down in under 30 seconds, and put it back together in another 30 seconds. \n\nThat aircraft is a delicate machine, and it has to be treated properly. If we don't, once we get in the air that machine will kill you before we perform our duty. \n\nIf you give me an action to perform, I want to perform it properly. I don't want to die before, or after, because of a malfunction. It takes over an hour to check out that him aircraft properly. You have to check out each rotor blade to make sure there is no crack in it. Those rotor blades are 27 feet long, and for one man to do it, it takes 20 minutes. If you are in the air, and there was even a minute crack in any of those blades, it will break, and I am dead. If I am carrying 55 soldiers in the back, they are dead too. \n\nYou are not dead, because you are on the ground carrying your rifle, but sure as hell, everyone in my helicopter is dead, because you wouldn't give me an extra 30 minutes to check out my aircraft properly.\" \n\n\"Sagan, I give orders, and rarely, if ever, do I admit I made a mistake in judgment. I did today, and I apologize. If you tell anyone I apologized to you, I will kill you on the spot. There is only one man in this world I apologize to, and I have known him for almost 40 years. Here are your wings, you have just received a $50,000 a month rate increase for being right. Don't die before your first paycheck.\" \n\n\"I want the same raise for my Warrant Officer. I would never have been here on time without him.\" \n\n\"I told you Tony, you are a pain in my ass.\" \n\n\"I'm going to tell everyone that Sir.\" \n\n\"I've told everyone that myself. We have a meeting to attend, let's go.\" \n\n\"I love meetings; they are on the ground.\" \n\n\"Wiseass.\" \n\n**************************** \n\n\"We are going to do what Sir?\" \n\n\"We are going to have 600 men surrender to 50 of us. Do you have a problem with that?\" \n\n\"No sir, you are just as crazy as usual.\" \n\n\"Does everyone understand their part in this action?\" \n\n\"Yes sir.\" \n\n\"Those of you who are coming with me, get your raingear on, and I will meet you on the loading dock. You, unlucky ones, who are staying behind, will help put the armaments on the men who are going with me.\" \n\nHarry Chase walked up to the Colonel. \n\n\"Sir, I'd like to go along. I'd like to earn my bones along with the rest of the guys. I want them to know I'm not just hanger on.\" \n\n\"Sergeant, if you were just a hanger on, you would not be here.\" \n\n\"I know that, and you know that. I want the rest of the guys to know that. They don't feel comfortable around me yet, and I'd like to change that as soon as possible.\" \n\n\"Get dressed Sergeant, you can accompany me to the 'Bear Trap.\" \n\n\"It will be my honor Sir.\" \n\n************************** \n\nEach soldier received a triple load of magazines for their rifles. The 10 soldiers, who were going to support the center, with Colonel Canyon, received one bandolier each of M67 fragmentation grenades and another of phosphorus grenades. The 20 that were going to be deployed on the right, and left flanks, and would be supported by Dragonfly, and Buffalo 1, carried two bandoliers' of M67 fragmentation grenades. \n\nAs they were about the board Buffalo 1, Lucius called the maintenance hangar. \n\n\"Maintenance, Sergeant Lewis.\" \n\n\"This is Colonel Canyon, what is the condition of the AH1 Cobra, Sergeant?\" \n\n\"The oil line is completed, and they are still working on the radios, Sir.\" \n\n\"Sergeant, tell the pilot to start his preflight. As soon as he's done I want that aircraft in the air and on its way to the science project. He has to take up station on the left flank. Unless he sees white smoke, any movement at all he is to kill it.\" \n\n\"Understood Sir, I will have him start his preflight now, and get him in the air, as soon as possible. Unless he sees white smoke, he is to kill anything that moves.\" \n\n\"Move out Sergeant, we are not playing games today.\" \n\n\"Alfonse, we do have white smoke with us, don't we?\" \n\n\"Are we going senile Sir?\" \n\n\"Where is Paul when I need him.\" \n\n\"I thought you wanted to kill Paul?\" \n\n\"I do, but he answers my questions politely. Is everyone on board?\" \n\n\"No sir, we are still on the loading dock.\" \n\n\"Don't let me stand behind you Alfonse; you could be killed by friendly fire.\" \n\n\"By request of Mister and Mrs. Zabo, they want me to come home uninjured. They said they would miss me, if I didn't.\" \n\n\"Now, you're not playing fair. Mount up.\" \n\n\"After you, sir. I wouldn't want you to slip, and hurt yourself. I don't want you behind me either.\" \n\n\"Start your engine Captain, get us out of here, before I kill a member of the household staff.\" \n\n\"Get in Colonel, so we can close that door. Otherwise everyone is going to have a headache.\" \n\n\"Is everyone going to pick on me today?\" \n\nAlfonse replied, \"I might remind you sir, you came up with this plan. If we can't joke around now, we may never have another chance.\" \n\n\"I will bet you $100 not one shot will be fired today. They will surrender unconditionally. They will leave their weapons behind, and we will release them through the West fence, after we give them some food.\" \n\n\"Talk about cheating, that's as low as you get can get, Colonel. Those guys have not had a bite to eat in two days.\" \n\n\"That's not my fault. It was poor planning by their leadership.\" \n\n\"Don't take off Captain. Patricia are you in there?\" \n\n\"You bet your ass I am Lucius. I was wondering if you were going to leave me behind.\" \n\n\"Remember, where I am, you are three feet behind me at all times.\" \n\n\"I hope you took a bath today.\" \n\nEveryone on board the helicopter laughed. \n\n\"Make that two feet behind me.\" \n\n\"Okay Captain, let's go end this thing.\" \n\nLucius took up a position by the communications gear, and called a Science Project. \n\n\"Central Comm, this is Hotel, we are inbound with two helicopters, and a plan. Begin preparing food for 600 men, and a lot of coffee. I am going to get them to surrender to me, over.\" \n\n\"Hotel, this is Central Comm. I will pass the message along to General Morris. I'm not even going to ask you how you propose to do that.\" \n\n\"Darrell wake up the general and give him this message.\" \n\n\"I'll take over your position. You wake up the general, and give him the message.\" \n\n\"Okay, but I'll stopping by the kitchen first and give them their part of the message. I have something to eat, relax, and then I'll go to the general.\" \n\n\"The helicopters will be here by that time. They'll be making so much noise everybody will be awake.\" \n\n\"Stay by the radio, I'll be in the kitchen.\" \n\n\"I just fucked myself.\" \n\n******************* \n\n\"Randy, I got a message from Colonel Canyon. He wants you to start making food for 600 people, plus a lot of coffee. He's going to get those idiots outside to surrender. I believe he's going to use food as a lure to do it. Get as much help as you need, and get started. I'll just grab something out of the refrigerator and have a snack.\" \n\n\"Since you have nothing to do, grab an apron, and start slicing some lunchmeat. I mean a lot of lunchmeat. I'll go get the rest of the guys we need.\" \n\n\"I just fucked myself. Wait a minute, Randy; I have to deliver a message to the general.\" \n\n\"What message do you have for me?\" \n\n\"Good morning general. We have a message from Colonel Canyon.\" \n\n\"Are you going to keep it to yourself, or are you going to let me see it?\" \n\n\"Here you are, Sir.\" \n\n\"What is that moron up to now? Sound the alert. You stay here and continue cutting the meat just in case he is successful. He's done it before; heaven knows if he can pull this off again, it will save us all a lot of grief.\" \n\nAs soon as she heard the alert klaxon, Laura jumped off of Joe and began dressing. Joe was so out of it, he was unconscious. She hit him across the face to wake him up. \n\n\"What, what did I do wrong this time?\" \n\n\"Do you hear that alarm dummy? Either we are under attack, or we are on alert. Move your ass, and get dressed, armor and all.\" \n\n\"You are dressed already. How did you do that?\" \n\n\"I'm 5' 1\", my clothes are shorter than yours.\" \n\n\"Tom, you have to get the boys to let Tom out of his room.\" \n\n\"It's much more important to get the boys back into their stasis boxes. I'll get the solvent from them, and opened his door, with great reluctance.\" \n\n\"Be nice Laura, he is my best friend.\" \n\n\"He is also the biggest pain in the ass I've ever met, and I've met lots of pains in the ass.\" \n\n\"We wouldn't have been in bed together if it wasn't for him. I would not have asked you to marry me if it wasn't for him.\" \n\n\"Well, there is that, and the sex was decent.\" \n\nJoe grabbed for her, but she was too quick, and his arms were a little too short. \n\n\"The sex was decent? I guess I shouldn't thank those wonderful Italian women for all those lessons they gave me, while I was growing up. Is that what you're telling me Burkart?\" \n\n\"I guess I'm in trouble. I just went from Laura to Burkart. You are going to have to work on that Mister Constantine.\" \n\n\"I guess I'm in trouble. I just went from Joe to Mister Constantine. Go to the boys and get the solvent to get Tom out of his room. Make sure they're in their stasis boxes before you come back.\" \n\n\"Is it going to take you that long to get dressed?\" \n\n\"Woman, I wish you were naked. I would give you the spanking of your life.\" \n\n\"I'm going to have to take you to the gym just to show you which one of us is better.\" \n\n\"As soon as this is over Laura, I will escort you there personally.\" \n\n\"Your invitation is accepted. How long does it take the fibula and metatarsals to heal, when they are broken at the same time?\" \n\n\"If you don't get out of here, I'm going to strip you down to your skin and bite your ass until you cannot find one area with out my teeth marks on it.\" \n\n\"I thought you wanted to spank me?\" \n\n\"I will do that after I bite your ass all over. Get out of here and do your job agent Burkart.\" \n\n\"Since you're still naked can I leave the door open?\" \n\n\"Yes.\" \n\n\"You're not ashamed to leave little Junior hanging out?\" \n\nJoe sprang out of bed and charged at her. \n\nLaura screamed and ran around the catwalk surrounding the Good Luck 2. \n\nTim Kenshaw saw her running towards him, at full tilt. \n\n\"Slow down Laura, we are only at alert status. No one is going outside yet. Colonel Canyon is going to try something rather extraordinary.\" \n\n\"Tell me when that man doesn't do something extraordinary. What is he going to try to do now?\" \n\n\"He's going to try to get the opposition force to surrender by feeding them and releasing them through the West fence. After that they're on their own. We know they have cars on the north side, and on the south side. They can take as many men as they want using them. We will see what happens. Where is Joe? Did you kill him last night?\" \n\n\"He was still looking for his clothes when I left him. Like all men, he doesn't know how to fold his clothes neatly, when the little brain takes over thinking for the big brain.\" \n\n\"I've seen his little brain, when his father and I used to take him to the gym with us. It didn't look so little to me.\" \n\n\"Are you a connoisseur, sir?\" \n\n\"I was a prosecuting attorney many years ago Burkart. I've seen my share.\" \n\n\"Why aren't you in your stasis box sir?\" \n\n\"We are only on alert status. I'm not going in there until it is absolutely necessary. The boys are having breakfast, and if you want to throw up, you should see what they're eating.\" ",
        "\"They couldn't have gotten Joe's chocolate covered ants yet.\" \n\n\"No, nothing as nutritious as that. They're having chicken feet for breakfast.\" \n\n\"I thought they outlawed that many years ago.\" \n\n\"I don't know, all I know is they are eating them by the plateful, and I left the room.\" \n\n\"I guess it's not as bad as pigs' feet.\" \n\n\"I will go along with that.\" \n\n\"Where are the boys' now? Reluctantly, I have to let Tom out of his room.\" \n\n\"Paul will you get the boys please?\" \n\n\"I can shoot the door off its hinges, if you'd like general.\" \n\n\"Please let him do it that way. It will scare Tom to death.\" \n\n\"I will allow it, if you stand in the center of the door.\" \n\n\"Done.\" \n\n\"I hope you're as good as they say you are Paul.\" \n\n\"Put your helmet on Laura, and don't worry about a thing.\" \n\nLaura ran around the half circle and pounded on Tom's door. \n\n\"Are you finally going to let me out now you prick?\" \n\n\"I don't have a prick, and the boys don't have the solvent. If I were you, I'd find a safe place away from the door, because Paul is going to open it in a way only he can. I am going to be standing in the center of the door to give him depth perception. That is how much I trust him. Joseph do not come out of our room.\" \n\n\"Why, what have you done now?\" \n\n\"You will hear it in a minute.\" \n\nLaura took up her position, put her helmet on, and nodded at Paul. He put the red dot directly on her nose, and then moved it to her right. Without one seconds pause there was a loud report from his rifle, and the first hinge broke open. \n\nNearly at once Tom and Joe screamed, \"What the fuck was that?\" \n\nShe said, \"Stay where you are, and stay down.\" \n\nThe second shot rang out and the second hinge broke off. Then the third, and the fourth. \n\nPaul changed magazines and eliminated the fifth and sixth hinges the boys glued in place. To empty his magazine, Paul shot open the handle and locking mechanism of the door. \n\nLaura yelled, \"Open the door now Tom, you're free to go.\" \n\nJoe came out first, and grabbed her. \n\n\"Don't you ever do that again. I'll tie you up and put you in the basement if I have to, but if you scare me like that, I'll put you there just to keep you safe.\" \n\n\"I was safe knucklehead. Paul is good at a mile, at 800 feet, he could do it blindfolded.\" \n\n\"I swear Laura, the day you say I do, you will not do that again.\" \n\n\"I guess I'd better have all my fun now.\" \n\n\"Was that a yes to my question?\" \n\n\"You've asked me a lot of questions; which question are we talking about?\" \n\n\"Miss Burkart, look over the railing and look down. Tell me what you see?\" \n\n\"You see, you just asked me another question.\" \n\n\"What do you see when you look down, Miss Burkart?\" \n\n\"A very long fall Mister Constantine.\" \n\n\"Now that was an excellent answer Miss Burkart. Now answer the question you know I asked you, before you make that long fall.\" \n\n\"Yes, I can break down an M-16 in under 20 seconds.\" \n\n\"It's been very nice knowing you Miss Burkart. I will help the team scrape up your remains, after you hit the bottom.\" \n\nAs he was about to pick her, up the door to Tom's room fell backwards pinning him underneath. The expletives he was shouting at the two of them, made them laugh. \n\nLaura said, \"Relax Tom, I'm going to go to the top of the door, and Joe will be at the bottom. We will pick up the door, and get it off you.\" \n\n\"Dammit, hurry up, and get me out of here.\" \n\nLaura walked straight up the center of the door, to the top and jumped down. Tom was calling her many names, but most of all he was calling her a fucking bitch. \n\n\"Tom, how else was I supposed to get to the top of the door? The whole area around it is blocked. You had a choice of me walking up the center of the door at 100 pounds, or your friend, the jolly green giant, at 220 pounds. Which one of us would you have preferred, Thomas?\" \n\n\"The midget, naturally.\" \n\nLaura jumped in the air, and landed two feet inside the edge of the door. \n\nTom screamed at the top of his lungs, while Joe laughed at his friend misery. \n\n\"What did you call me, Thomas?\" \n\n\"A dear and wonderful woman, who is going to marry my best friend, Joseph Constantine.\" \n\n\"That's really funny Thomas. Those were not the words I thought I heard the first time. I believe I heard you call me a midget. Did you call me a midget Thomas?\" \n\n\"Never in my life would I dare call you a midget. I have watched you take my good friend to the floor with no effort at all. A little person could not do that to Joseph. You are a strong vibrant woman, with a strength of any man. I wish I could emulate you in many ways. Would you please get off my head now?\" \n\n\"If you ever call me midget again, I'm going to shoot you in both knees. Are we on the same page Thomas?\" \n\n\"Yes ma'am.\" \n\n\"Joseph, let's get the door off this idiot, before I kill him.\" \n\n********************** \n\nBuffalo 1 was flying into the teeth of the 55 mph winds. It's forward air speed was barely 105 mph, because of all the weight it was carrying. It was 10 miles from the target, when Dragonfly came up alongside it. Its' radios were still out, but everything else worked. The game plan was now in full flow, and the opposition force should be frightened beyond measure. \n\n\"Central Comm, this is Hotel, final approach.\" \n\n\"Hotel, this is Central Comm. We are on alert status, good luck.\" \n\nThe Cobra took the lead, and made a high speed pass from East to West to wake up everyone from the opposition force. It made a turn and came back around and made a pass from west to east to make sure it did a good job of it. \n\nBuffalo 1 had 20 men rappel down on the eastern flank, and proceeded to do the same on the west flank. These men, in full raingear, moved closer to where they knew the enemy was taking shelter. \n\nBuffalo 1 returned to the center and touchdown briefly, allowing the Colonel, Patricia, Alfonse, Chase, and six others to exit, before returning to the sky. \n\nWatching them from the opening of the building site, was General Marcus, and any man who could get a view of what was going on outside. \n\nThey lined up 9 across, and Patricia 3 feet behind the Colonel. She argued about it, but did not win. Then they moved in military fashion towards the central 'Bear Trap.' \n\nThe rain was pouring at their backs, and the wind was howling, but their raingear was keeping them dry and warm. \n\nWhen they reached the edge of the 'Bear Trap' Lucius yelled down into the pit, \"My name is Colonel Lucius Canyon, and I wish to speak to the leaders of this force. I have a one time offer for you. If you accept it, we will guarantee your safe passage off this facility. Is the leader of your unit in this quagmire?\" \n\nPavel replied \"Yes, we are both down here.\" \n\n\"We wish to speak to you face to face. When you come up, we will issue you raingear to keep you dry, and I guarantee your safety.\" \n\n\"How can we be assured this is not a trick?\" \n\n\"I am standing above you. I can start dropping phosphorus grenades down, into this hole in the ground, anytime I want. When you start burning, you will attempt to leave the vehicles, at which time I will begin dropping fragmentation grenades. If anyone survives that onslaught, there are 2-30 caliber machine guns on either flank, plus our automatic rifles, which will cut you down. I am a soldier, and I give you my oath, you will not be harmed.\" \n\n\"We will be up as soon as we can get out of these vehicles.\" \n\n************************* \n\nIt took nearly 12 minutes for the 2 men to make it to the top of the 'Bear Trap', and as soon as they were a few feet away from the edge, they received 2 sets of raingear to keep them from getting any wetter than they already were. \n\n\"Thank you Colonel Canyon. My name is Henrik, and this is Pavel. I was in charge of South, and he was in charge of North. We have not heard from our commander in almost two days.\" \n\n\"Was your commander leading this attack?\" \n\n\"No, he was coordinating it from the rear.\" \n\n\"Should I bother telling you where your commander is now, or do you want to guess?\" \n\n\"No, I believe that's not necessary. He is gone, and left us to fend for ourselves.\" \n\n\"Do you know his name?\" \n\n\"No, not his real name. We just called him 'Cowboy', because he loves to watch old western movies.\" \n\n\"Would you recognize him if you saw a photograph of him?\" \n\n\"Probably not, because he always wore makeup, and a disguise. We didn't care, because he handed out money like it was water.\" \n\n\"Did you receive the payment he offered you, before you came here?\" \n\n\"Yes we did. We all verified it with our banks, and transferred the money to other accounts to make sure it could not be reversed. He told us to do that as a sign of good faith.\" \n\n\"That was very kind of him, wasn't it?\" \n\n\"What else can you tell me about this man? How tall was he, was he thin, average, or heavy? Did he wear glasses; did he have broad shoulders or narrow shoulders? Did he walk with a limp? Anything like this would be useful to us.\" \n\n\"As I said Colonel, he wore disguises all the time. Sometimes I didn't recognize him until he gave me the code word.\" \n\nPatricia asked, \"Show me how he walked.\" \n\nHenrik took about 20 steps, turned and walked back. \n\nPatricia said thank you, and didn't utter another word. Lucius knew something was up. \n\n\"Here is my offer, and it is for one time only. Your men will bring their arms, all of them, here. They will drop them off, will walk up the left driveway. They will be given food and something to drink. They will continue down the right driveway, and seek shelter again, until you are ready to move out as one unit. \n\nYou will not be given a lot of food, but it will be enough to sustain you until you can reach the methods of transportation that got you here. At that point, you are on your own. I don't know what the arrangements were for you to get back to your country, but I would suggest you get back there as soon as possible. When this rains stop, every law enforcement agency in the country is going to be in this area, to help the local population get back to normal. If they find you here, you are going to wind up in jail for a very long time. \n\nYour other choice is annihilation. Our helicopters are fully operational as you heard, and they will begin strafing runs over the cars your men are hiding in, as soon as I give the word. My men have already infiltrated those areas, and any resistance will result in a bloodbath. I don't want to use my road building machines to dig a mass grave for your men. I want them to go home and live in peace. I want my men to go home and live in peace. \n\nJust for your information, the 2 boys you are after, are in Southern California enjoying Disneyland, and all the other retractions in that area. Wherever you got your information, it was more than 2 weeks old.\" \n\n\"The 2 boys are not here! The 'Cowboy' had your plans, and guaranteed us the boys would be here. When we brought them to him, he was going to give us an extra $40 million to spread around to our men.\" \n\n\"When was the last time you saw this man, before you assembled for the attack?\" \n\n\"We haven't seen him, since he showed us the plans. We always spoke to him over a secure link, for the past 3 weeks.\" \n\n\"Do you have a way to contact him?\" \n\n\"Yes we do. We send out a signal on the secure link, using a day code and an urgency letter. If we need an immediate response, we put a W at the end of the day code. If it's an important message, and we need a quick response, we put an E. If it's a normal message, we put an M. He normally responds very promptly.\" \n\n\"Where is your communications gear?\" \n\n\"In the truck with our commander.\" \n\n\"Are you sure he was here today, and not an imposter?\" \n\n\"As the lady asked, he walked like he always did before, so I'm sure it was him.\" \n\n\"Unfortunately, we will not be able to contact him, because he probably drove off in that truck.\" \n\n\"Where was the truck parked?\" \n\n\"Approximately 100 meters off your access road, under some tall trees. We surrounded it with brush so it could not be seen.\" \n\n\"When we get up top, I want you to write out exactly how you would contact this 'Cowboy', including the day code, the lettering, and any specific wording you would use during a transmission to him.\" \n\n\"That will be no problem for us Colonel. He left us here to die, or be captured. He lied to us about the position of the boys, and he should have called off this raid, because this weather has been forecast for a week in advance. No army can fight in weather like this.\" \n\n\"Did you tell him about fighting in the rain?\" \n\n\"We did, but he said if we did our jobs correctly, it would be over before the rains came. He never mentioned you had helicopters. We wondered why he gave us surface to air missiles as part of our armament package.\" \n\n\"Thanks for all the information. Do you need to speak to anyone to accept or decline my proposal?\" \n\n\"No Colonel, I believe it's a generous offer. We will inform our men to stand down, and give them the remainder of your instructions.\" \n\n\"Please remind your men, that even one accidental gunshot could start this disaster from starting all over again. I believe neither one of us wants that to happen.\" \n\n\"I agree, Colonel. I will make sure our men understand that.\" \n\n\"Alfonse, white smoke please.\" \n\n\"Yes sir.\" He walked to the center of the roadway, and popped 3 canisters of white smoke. \n\nMoments later, Buffalo 1 and Dragonfly flew through the white smoke and landed in the parking lot. \n\n\"Alfonse take Mrs. Valentino to General Marcus, and have her explain to him what happened down here.\" \n\n\"Why me?\" \n\n\"Patricia, both you and I know who it is now. Until we can get the full board together, we have to stay separated, until a decision is made on his future. \n\n\"I didn't think you would pick up on it. I'll tell you how I found out later. Let's go Alfonse, we've been kicked out of the Army.\" \n\n\"We are in very good company, Mrs. Valentino.\" \n\n****************************** \n\n\"Hello dad, Lucius pulled another rabbit out of his hat. It's all over down here in Charleston. He did it without firing one shot. He even won $100 from Alfonse, who did not mind giving it to him.\" \n\n\"What did he do this time, Patricia? What was the size of the rabbit?\" \n\n\"Dad, do you remember seeing that really old Charlton Heston movie, \"El Cid.\" \n\n\"I saw it about 50 years ago if that's the one you're talking about.\" \n\n\"That's the one dad. Do you remember the scene where they blockaded this one town, until the people were starving?\" \n\n\"Yes, then instead of bombarding the town, with boulders, he used his catapults to throw bread in. The people revolted, open the gates and let his army in. Don't tell me that's what Lucius did?\" \n\n\"That's what he did dad. He flew in with 2 helicopters, 49 men, one woman, and a plan. The plan worked, and now we both know who the tip of the spear is on the Board of Directors. I will not mention his name until we get together. Then, we will lay out the proof before you. I will bet you he may try to leave the country, and dig a hole so deep, not even earthworms can find him.\" \n\n\"How sure of this are you Patty?\" \n\n\"100 percent dad; all roads lead to him. Lucius knows it, and I know it. I want to bring in those 3 men, who are hiding in Finland, into the boardroom. I want them to testify against him. We have all the financial records, travel records, and phone intercepts we need to hang him, but live testimony would be nice.\" \n\n\"How do you know those men are in Finland?\" \n\n\"3 people were killed in a shopping center, in Geneva. Their Mercedes luxury cruiser was stolen. There were only 250 made for a test market, because the price was going to be in the $300,000 area. The one they stole belonged to a Bayer Executive. It had a satellite tracking device in it. The thieves changed the license plate, but they didn't know about the tracking device. The police knew exactly where they were, and have arrested them. By now, I would expect the Swiss government is requesting the extradition of Friedrich von Bierman, Otto von Osterhagen, and Arthur Schultheise on the charges of Capital Murder, and auto theft.\" \n\n\"It just so happens I have several high ranking friends in the Swiss government. I also have a few friends in the Finnish government. I could help them with their extradition problems, if need be.\" \n\n\"I would like to have them here, live and in person, dad. It gives it much more homey feeling.\" \n\n\"I'll see if I can arrange a detour to the United States, for them with Lucius. I know they will enjoy that meeting very much. Then they can testify before the board, and we can return them to the Swiss government, in metal boxes.\" \n\n\"Dad, they have to return to Switzerland in 1 piece to stand trial. If they don't the Swiss government is going to be pissed.\" \n\n\"I will tell Lucius to be very kind to them. He won't like it, but he will follow my orders.\" \n\n\"I can't tell you how happy I am that this is over. Your wife is so horny, there were flames coming out of her ears.\" \n\n\"Everyone can go home now. I will meet her in New York tomorrow afternoon, and take care of her needs.\" \n\n\"Can I ask you now where you hid my husband?\" \n\n\"I did not hide him. He wouldn't leave work. He stayed in his office trying to get out from under all his paperwork. I ordered him to go to the science project, and I won't tell you the words he used to tell me where to go. The building has a backup generator to keep everything dry. We also sandbagged the entire outside of the building to make sure no water intruded in it. We left them there with 6 guards, who were not exactly pleased with his decision. They had plenty of food in the commissary, the air conditioner worked, and so did he; 20 hours a day, from their reports.\" \n\n\"William, I do not care if his desk is clear, or not, I'm taking my husband away from his work, for two weeks. He deserves a vacation. I am taking him so far away from his work, I am going to make him forget about it. If he doesn't, my husband is going to burn out. He has not been away from that building in 6 years. I don't care if I have to drag or drug him to get him onto an airplane, but he's coming with me.\" \n\n\"You will not get an argument from me, Patty, but you are taking security with you. I will not let you go without it. Things may be over here, but there is always the possibility of an unknown group who would love to take the 2 of you captive. We can afford to pay any ransom they demand, but they would probably kill you anyway. I won't let that happen.\" \n\n\"I can accept that dad. As soon as this damn rain stops, I'm going to hire a Boeing 777, and I'm not telling anyone where we are going.\" \n\n\"You are going to tell me where you're going. I don't care if you going to South Africa, or if you going to Tahiti. I want to know, because I will go crazy if I don't.\" \n\n\"Have I told you today that you are a pain in the ass?\" \n\n\"No, but I feel much better now that you have. Tell our wives they can go home so we can start our normal lives again. Do not come with your guns blazing at Stephano. You do not want to start a fight with him. Why don't you take a helicopter, and join him at our building. I'm sure he would be happy to see you.\" \n\n\"You tell them dad. You are in West Virginia, so you are closer to them than I am. There just happens to be a helicopter in our parking lot. I think I'll take one for a ride.\" \n\n\"Patricia, you will do nothing of the sort. You will ask General Marcus if the flight crew could take you to our building. If he says no, then tell him you're taking the helicopter by yourself. He knows your history, and he will panic at that thought. You will get there, or he will have a heart attack at the thought of you flying a $40 million helicopter by yourself. How the hell did you find out I was in West Virginia?\" ",
        "\"Didn't you know they had a computer here dad?\" \n\n\"Your mother and I should have had a boy. He would have been easier to raise.\" \n\n\"I hate you dad; I really hate you.\" \n\n\"As my dearest friend, Doctor Even Luck used to say, I hate you 3 times as much. Get your helicopter, and go see your husband\" \n\n\"Thanks dad, I'm on my way.\" \n\n\"Remember, I have to know where you're going.\" \n\n\"I promise.\" \n\n********************** \n\nThe agent guarding the roof entrance to the building was inside, using a laptop computer, when he heard the roar of a helicopter closing in on the building. He opened the door to see what it might be, before he put everyone on alert. He recognized Buffalo 1, and wondered what it was doing there. The roof would not take its weight. The helicopter and the building would be destroyed. \n\nAt the last moment, the giant machine turned into the wind, and the side door opened. It continued to descend until it was 10 feet above the building. A rope was thrown out, and a diminutive person began to slide down to the roof. The person laid down, as the helicopter increased power and flew away. \n\nBy the way this person was running at him, he knew it was a woman. Her raingear covered everything, but his rifle was still pointed at her. \n\n\"Halt, and identify yourself.\" \n\nShe removed her hood. \"Patricia Valentino, I'm here to see my husband.\" \n\nHe recognized her. \n\n\"You are the only one crazy enough to pull a stunt like that in this weather. Come on in.\" \n\n\"If you think this was crazy, you should've seen me land my 757 between 2 thunderstorms. That was an event Kelly will never forget, and neither will I.\" \n\n\"Mrs. Valentino; you should have your head examined.\" \n\n\"Charlie, it has been, several times. The doctors still don't know what to do with me.\" \n\n\"I can believe that.\" \n\n\"Is my husband in his office?\" \n\n\"I think he's glued to his chair. He's going to need a new one soon, because the one he's in is worn out.\" \n\n\"I promise you Charlie, I'm going to wear him out in a different way.\" \n\n\"Have a good time, Mrs. Valentino that man deserves it.\" \n\n***************** \n\nShe took the elevator down to the 3<sup>rd</sup> floor, and walked to his office. Silently, she closed and locked the outside door. She undressed, and walked into his office. His desk was neat, but there was still papers in his inbox to be taken care of. His out box was so full, he had paperwork stacked along the side it that was almost as tall. \n\n\"Mister Valentino, do you need a naked secretary?\" \n\n\"No, I need something new and exciting in my life. Sex with my wife is getting boring. When I sit in the commissary, and hear what these young, nubile, women do with their boyfriends, and husbands, I realize my sex life is boring.\" \n\n\"Have you ever asked your wife to try these things?\" \n\n\"No, she has a gun, and would probably shoot me when I asked.\" \n\n\"Your gun is bigger than any other gun she's ever seen; why don't you find out?\" \n\n\"She would mess up all my paperwork.\" \n\n\"There is always the chair, the floor, door, and your secretary's desk's. Your paperwork would be safe.\" \n\n\"Come to me wife, I can't tell you how much I've missed you.\" \n\n\"Why do you think I'm naked husband. Do you think I do this for any man?\" \n\n\"I'm hungry, I'm going to eat every inch of you.\" \n\n\"You're not going to touch me until you are naked. If I can't touch you, you are not going to touch me.\" \n\n\"It's the 50-50 rule, isn't it?\" \n\n\"Till death do us part.\" \n\n\"We are the 1<sup>st</sup> persons on the list of people taking a ride on Good Luck 2. We are going to see our daughter. I don't want to hear one word out of you, because I am going on vacation, and I'm taking you with me.\" \n\n\"You are only half naked, and I have news for you. When this rain stops, you are coming with me on a two-week vacation. I have already cleared it with William, and and my father. I don't want to hear one word out of you. Your desk is nearly clear, and your secretaries will be so busy with your outbox, the piddly little shit that is left in your inbox they can take care. \n\nWill you take your pants off please? I want to get laid. If you don't hurry, I will rip them off, and rape you.\" \n\n\"I am up to it wife; I hope you are.\" \n\n\"I've been standing here naked for 5 minutes, and you haven't done a thing to me. I believe I'm ready, I'm still not sure about you.\" \n\n\"Get on my secretary's desk. Push everything that's on there to the floor. I'm going to teach you that my side of the 50 is alive and well.\" \n\n\"You're putting me to work, and your pants are still on. You talk a good game Mister Valentino, and I am still waiting for you to prove it.\" \n\n\"Move bitch, or I'll start spanking you like I never have before.\" \n\n\"Is that it, just the spanking. Is that what the girls in the commissary talk about. We did that 23 years ago. I thought you were after something new and exciting. I'm very disappointed.\" \n\n\"Clear that desk, and I'll show you what this new generation does.\" \n\n\"I will have to move my clothes. I folded them neatly and put them on that desk.\" \n\n\"I'm naked now, and I don't care about your clothes. Move it, or I'll take you on the carpet.\" \n\n\"You can't take anyone with that floppy thing.\" \n\n\"Get on that desk Patricia. That floppy thing is going to make you roar soon.\" \n\n\"I certainly hope so. I've waited a long time for this.\" \n\n\"So have I baby, so have I.\" \n\n\"I'm not leaving this building until I'm totally satisfied. That could take days, weeks, or months. The day this rain stops, we are gone.\" \n\n\"Okay, I'll tell my secretaries what to do, I'll pack a suitcase, and I'll follow you anywhere.\" \n\n\"You said something about eating, you may start now.\" \n\n\"Are you giving the orders?\" \n\n\"No I was just reminding you of something you said.\" \n\n\"Do you think I'm going senile?\" \n\n\"Stephano if you don't start soon, the guards are going to have very good time.\" \n\n\"You know you would be breaking our marriage vows, and committing a sin.\" \n\n\"It's not a mortal sin. I would go to confession and be absolved of it. I would explain to the priest my husband would not perform his husbandly duties. I am getting cold Stephano, it's either now or never again, and I mean never again.\" \n\nHe didn't answer her as his mouth descended on her center. He licked the little bud that was standing at attention, and then he bit it. \n\nPatty screamed as she flooded the secretary's desk, \"You fucking bastard.\" \n\nTwo fingers entered her, and found the area that drove her crazy. He moved the fingers laterally as fast as he could, and felt her body stiffen. He bit the little bud again, and she screamed loud enough to shake the building. \n\nThe 3 agents in the ready room, on the 2<sup>nd</sup> floor, laughed. \n\nOne of them said, \"I don't know how she did it, but Mrs. Valentino is here.\" \n\n**************************** \n\n51. Moving on \n\nYou got lucky son; I called Washington and they've put off your hearing until this ungodly weather clears up. The senator from Texas is sunning himself, and wants no part of it. The committee wanted to meet you without him, but he wouldn't allow it. He wants to show a 16-year-old uppity young boy who's the boss.\" \n\n\"Dad, you know I try to take your advice all the time, but if he comes after me, I'm going to put him in a box, and tell him they need a new president in Nauru, and he fits the bill.\" \n\nJunior said to his brother, \"Okay, I will bite, almost intelligent one, where is Nauru?\" \n\n\"Nauru is the smallest Republic in the world. It is an area called Oceania in the Marshall Islands chain, just south of the equator. To get there you have to go by boat or a very small plane.\" \n\n\"Did you know that dad?\" \n\n\"Of course I did. I summer there every 40 years. The US government lends me a nuclear submarine, and a radio to call it back, when I'm ready to go home.\" \n\n\"That's what I thought.\" \n\nAudra said, \"It's not the smallest country in the world, Vatican City is.\" \n\n\"I didn't say it was the smallest country in the world. I said it was the smallest Republic in the world. There's a big difference.\" \n\n\"What's the difference smart ass?\" \n\n\"You are in for another spanking very soon. Vatican City is ruled by one man, the Pope there is no Constitution there is no representative government. There is a court of clerics, but he can overrule whatever they say. It's like having a king as the head of the country. \n\nA Republic has an elected form of government. There is a president, chairman, or what ever they want to call the leader. There is a rulemaking body, whether it is cameral, bicameral, as it is here, or multi-cameral as it is in Israel.\" \n\nThis island nation is extremely small, and is bankrupt. Its citizens pay no taxes, and is dependent on countries like Great Britain, Australia, and Germany for money. These countries mined their phosphates until they were depleted. In the process they destroyed 90 percent of the coral reefs surrounding the country. The water around the island nation now looks like a wasteland. Is that enough information for you or should I go on?\" \n\n\"No, that's enough.\" \n\nJunior said, \"I see you haven't learned not to argue with him over the minute facts, and the arcane items that mean nothing to anyone, except those ultra brilliant people that try to beat out each other at conferences all over the world.\" \n\n\"It's only been 2 full days. Give me a little time, I'll find something he doesn't know.\" \n\n\"When you do, I will give you $1 million. It doesn't even have to be a legitimate question.\" \n\n\"When I am chairman of the company, Will, you are going to be mopping the board room floors.\" \n\n\"I will be sure to use the wax they invented for skis around your seat. It's more expensive than gold and more slippery than ice.\" \n\n\"I will make sure you pull my seat back, before I sit in it.\" \n\n\"Dad can I please shoot him; he is not enough to just spoil your entire day; he can spoil your entire month.\" \n\n\"William, if you stop egging him on, he will stop beating you at every turn. You tell me time after time, when we talk, how much smarter he is then you are. Why not take your own advice? Stand him up, turn him around, bend down, and kiss his ass.\" \n\n\"DAD!\" \n\n\"It was just a thought William.\" \n\n\"I like it dad. It would show a great deal of respect, from my elder brother, to his better.\" \n\n\"Patrick, I am going to beat the shit out of you right here in front of our father. When I am finished with you, Audra can take the rest of the day off.\" \n\n\"People with lesser intellects always resort to violence.\" \n\n\"You're absolutely correct Pat. Let's look down through history. Kublai Khan was dumber than dog shit, but he conquered one third of the known world because his men feared him. \n\nGenghis Khan, his son, stopped at Romania. He didn't know how many wives he had, or how many children. Like his father before him, he ruled by fear. \n\nAll the Chinese dynasties depended on others to run their empire. Most couldn't count, so they had accountants run their treasuries. The accountants lived in the palaces with them, so they could not steal anything. They were always guarded, so they could not give a penny to a relative or friend. If they tried to, they were killed, and another accountant was brought in. As the dynasties continued over the centuries they became inbred, to the point they had every disease known in the world at that time. \n\nAs you come west, the first thinking King was supposedly Alexander the great. His father was so inbred that Alexander was gay. He went through half his army when he could have had the most beautiful women in creation. He wasn't the mastermind of his victories, a general by the name of Resicius laid out his battle plans, wrote out his speeches and did everything but wipe his ass. Alexander got all the credit, because he was the king. Read up on it my friend, before I knock some sense into your head. Don't ever call me someone of lesser intellect again, because I'll put your head in a vice, and close it until your eyes pop out.\" \n\n\"I'm sorry William, I was just joking with you. I'm sorry I hurt you. It wasn't intentional. You have to believe me. I wouldn't know what to do without you. You have to believe that above everything else. I use you to guide me, and I've said it 1000 times before. Regardless of who sits at the head of the table, it's you and me against the rest of the world. It will always be that way. Please forgive me. Hit me in the head if you want to, but I didn't mean a word that was said.\" \n\n\"How can I hit him dad, when there are tears in his eyes?\" \n\n\"He's your brother William. There will be a time, and a place for you to retaliate. However, I believe that was a heartfelt apology, and you should forgive him, even if it's only temporarily.\" \n\n\"I can do that dad.\" \n\n\"Patrick, you are forgiven this time; but don't ever do it again. If you do, someone will have to find your head for you, because it will be located in a different room.\" \n\n\"Your message is received loud and clear. I will never do anything like that to you ever again. You are my brother William, and I depend on you for everything.\" \n\n\"Why don't you take Audra back to the dance hall, and give her the lesson she so richly deserves.\" \n\n\"If you had given him 2 more minutes, he would've totally forgotten about it, William.\" \n\n\"You keep forgetting he is photographic, Audra. He doesn't forget anything, ever. By the way, your townhouse is finished, Pat. When we return to New York, you two can play all you want, and we will never hear you again.\" \n\n\"Isn't that a wonderful thought?\" \n\n\"Thank you William; I think that is the best news I could ever have received. No panties Audra, no panties ever again.\" \n\n\"I have to wear them to school.\" \n\n\"Okay, but once you're in the house, they come off.\" \n\n\"Yes Patrick.\" \n\n\"Pat, you keep forgetting one thing; where are you going to be located. Is it going to be Washington, Texas, or Florida? Where is she going to attend school?\" \n\n\"I believe it's going to be in Houston. I will verify that after we finish with the Senate committee hearings. \n\nIf they don't need my physical presence, everything can be done by secure satellite links, and I can live in the townhouse.\" \n\n\"I wouldn't count on the last one Pat.\" \n\n\"I'm not either, so I believe it will be Houston. Where is my airplane?\" \n\n\"It's in Kansas City being upgraded, while this weather is drowning us in the east.\" \n\n\"Good move William; how much longer do they need?\" \n\n\"It will take about a month, before it's fully tricked out. Then you will have the best aircraft in the entire world. It will be better than Air Force One.\" \n\n\"That is seriously cool. It has the 4 bedrooms and everything?\" \n\n\"It has everything you wanted, except the swimming pool.\" \n\n\"Thank you William, you are absolutely the best. I will follow you anywhere you go.\" \n\n\"Patrick, you are a serious pain in the ass.\" \n\n\"I'm only 16, I have a lot to learn about the world, and how it works. I may be smart, but it all is from books. I have a lot to learn about life, and you are teaching me about it.\" \n\n\"Take Audra and get out of here, before I kill you. I have no idea what to do with you, but I will work on it.\" \n\n\"Audra move.\" \n\n\"Yes master.\" \n\nAs soon as Patrick turned around to leave the room, William kicked him in the ass as hard as he could. It was so hard it lifted Patrick off the ground. \n\nPatrick put his hand in his mouth and bit it hard. He looked at his brother with daggers in his eyes, but no words came out as his mouth. As the pain eased, he stood up straight. \n\nWilliam said, \"Now little brother, I'm sure you'll remember not to say anything like that to me again.\" \n\n\"If we were outside, there were many things I wanted to say to you, but we were inside and I could not say anything here.\" \n\n\"That was excellent control, Patrick. You are to be commended. Now go find your concubine, and have fun for the remainder of the day.\" \n\n\"Thank you, dad. I will do that.\" \n\n******************* \n\n\"Hello darling, how would you like to go home tomorrow?\" \n\n\"William, William is that you, you old bastard?\" \n\n\"Jemma darling, I am going to be home tomorrow by 2 PM. I'm hoping that you will be there to greet me. If you want to stay in Glens Falls, with our babies, for a while longer, that's fine with me. I just want you to know that I miss you terribly, and that friend of mine below my belt is ready to explode. I may have to find some local talent to appease me for the short term.\" \n\n\"You would have to blindfold anyone to get them into bed with you, you wrinkly old bastard. No one but me wants you, and so help me God, if you touch another woman, I'll hang that part of you above the doorway to our bedroom. It will remind you of what you used to have, and could be doing with your former wife.\" \n\n\"I will never let you go. My lawyers will have you tied up in court for the rest of my life, and yours.\" \n\n\"You haven't tied me up in a long time William. Did that memory just pop into your head?\" \n\n\"Don't tempt me Jemma, they make rope in this area of the country, and I could buy plenty of it before I come home.\" \n\n\"Listen to me old man, you probably couldn't carry it.\" \n\n\"We will see what happens, when you enter our bedroom tomorrow night.\" \n\n\"Should the doctor sit in our hallway, or should we have EMS sitting outside our home?\" \n\n\"Should I set up the camera?\" \n\n\"Gwen is almost 8 months pregnant. She would deliver, while watching that movie. What is our Patrick doing?\" \n\n\"Patrick and Audra are playing a game. They are now on the 4<sup>th</sup> floor of this hotel, and are using one room at a time for their antics. It will be very interesting to see if they can finish the entire hotel, before we leave tomorrow morning.\" \n\n\"He has his father's stamina, that is for certain.\" \n\n\"They will be moving into the new townhouse as soon as we return. After that there is no telling where he will be going after the Senate hearings.\" \n\n\"Gwen wants to talk to William but I have to ask you one more question. Please tell me Patrick is not in love with her.\" \n\n\"I asked the same question. The answer was no. He has a bet with his brother for $100 that he will not get married until after his 30<sup>th</sup> birthday. I don't believe he's going to make it. He's much more impetuous then William is, and I believe he will be married before he's 25.\" \n\n\"I will guarantee you one thing husband. My son is not getting married one day before he's 21. If he tries to, he's going to be a eunuch. \n\n\"I don't believe the bride will appreciate that. Let's continue this tomorrow, because I have a young man that would like to speak with his wife. I love you, airplane lady, mother of my children. I will see you tomorrow afternoon at 2 PM.\" \n\n\"I'm going to have that helicopter land in our backyard if I have to, but I will be there by 2 PM. I love you, and I would if you were penniless.\" \n\n\"I'll see you tomorrow my love, put Gwen on the phone.\" \n\n***************** \n\n\"Hello pregnant lady, how are you?\" \n\n\"You are a dead man. You know pregnant women are horny as hell all the time, and you're not here. They are stuffing me with ice cream to keep me cool. They're keeping me in the shower running cold water on me so I don't kill anyone. When you get home tomorrow, I'll be in our bedroom with my legs up. You better fill that hole in the middle before you touch any other part of me very quickly, otherwise, I'm going to rip you apart piece by piece, and give the organs I didn't damage to the nearest hospital. Do you understand me William, I'm ready to burst?\" \n\n\"Maybe they should send you home in a refrigerated truck so the rest of the women and the agents will be safe?\" \n\n\"That's not a bad idea. How have you been?\" \n\n\"It's been terrible down here at the Greenbrier.\" ",
        "\"You are at the Greenbrier Hotel, in West Virginia?\" \n\n\"Yes we are, but the hotel is closed for renovation. It's the 4 of us, plus a cook and a few other that take care of our needs. It's like a ghost town here. The rain never stops, so we cannot go outside. I help my father by checking to make sure everything is in position for the defense against our enemies. Thankfully it's all over now, and we can return to our normal lives. We know who the leader is now, and he will be taken care of in due course.\" \n\nGwen started to cry. \n\nSabrina yelled, \"Run a cold bath. Jemma get the rum raisin ice cream. We have to stop this before she goes nuclear.\" \n\nAfter bringing the ice cream, Jemma picked up the phone. \"William, what did you say to her?\" \n\n\"I was telling her about the rain in West Virginia.\" \n\n\"You idiot.\" She slammed down the phone. \n\nWilliam looked at the phone, and wondered what he did wrong this time. \n\n************************************ \n\nWhen they ran out of bread, they started handing out meat to each of the men as they passed by the opening to the building site. The chef was using the largest pots he had to make soup to go along with the sandwiches they were handing out. These part frozen men were more thankful for the soup then they were for the sandwiches. It helped make them warm inside. \n\nNo one had anticipated feeding more than 600 men in one day, no less in a few hours. They began running out of meats and cheeses, with more than 100 men left to feed. The chef attacked the fresh food locker and began pulling out expensive cuts of meat that were meant for the evening meals for the agents that spent 24 hours a day on-site. The grill could only hold 8 steaks or cuts of meat that size, but with the grill turned up high, they cooked in 6 minutes, rather than the customary 14. They might taste a little different, but those who came before them would be a little jealous. Each steak was cut into approximately 6 ounce portions, wrapped in aluminum foil, and handed out to each man with something to drink. Not one of the men complained. \n\nPavel and Henryk were the last to be fed. They thanked Lucius for feeding their men, and keeping his promises to let them go free. Their only wish was to be able to find this 'Cowboy' and take care of him in their old ways. \n\nLucius said, \"If it is of any comfort to you, I fought in Croatia, Bosnia, and Herzegovina. I learned many of your old ways, and I know who the 'Cowboy' is. Before he dies, he will see every man, and woman who died here. Each one of them will spit in his face. Each one will watch as his skin is removed, layer by layer. For days he will beg me to kill him, but I will not. I will do everything in my power to keep him alive. However, when it is time for him to meet his maker, I will open his chest and removed his beating heart. I will show it to him, as he screams his final scream, and dies. I will use his heart to start the fire that will burn his body, until there is nothing left on this earth for anyone to remember him by.\" \n\nHenryk said, \"Colonel, it is truly the old way. Thank you for my men.\" \n\nLucius looked down at the pile of munitions, and knew the amount of death they could have wreaked among the men protecting the building site. It always amazed him that enemies didn't care about blowing up the machine that was being built inside; they only wanted the 2 boys that were building it. \n\n5 or 6 well-placed mortars could pierce the carbon fiber top that kept the interior of the building site dry, and destroy the Trillion- dollar spacecraft that was being built inside it. \n\nHe seemed mesmerized by the site, and got angrier by the minute, because of the man who caused all this death and destruction. As usual, he compartmentalized it, and showed nothing. \n\n\"Yes?\" \n\nBurkart said, \"Colonel, it stopped raining; the sun is coming out.\" \n\n\"Don't you think I know that? It's exactly the way I timed it. If the rain stopped any sooner, they would have started fighting. It didn't, so they were amenable to a deal. Your body will tell you when the rain is going to stop, and when rain is coming. All you have to do is listen to it, feel it. Your body is a barometer. When it is going to rain, your body gets heavier. What is going to be bright, and clear it gets lighter. Every soldier has to know it. It determines how you will perform, during that day.\" \n\n\"Colonel, when I grow up, I want to be just like you.\" \n\nHe turned, and looked at her. \n\n\"Do you mean tall Burkart?\" \n\nJoe broke out laughing. He also wound up on his knees. \n\n\"Nice move Burkart, that will keep him on his toes.\" \n\n\"Thank you Colonel, I was aiming a little higher.\" \n\n\"His voice would've sounded funny.\" \n\nTom looked down at his friend, and asked, \"Were you a bad boy again?\" \n\n\"I have to work on Laura's sense of humor. Right now she doesn't have one.\" \n\n\"I do to have a sense of humor, but you always laugh at me and my height. Every time you do, from now on, you are going to be shorter than I am.\" \n\n\"Laura the rain has stopped. We have no more enemies to fight. I have to make out a new schedule for everyone, and set up teams to recover are dead in the field. When all that is taken care of, you and I are going to the gym, and I am going to show you which one of us is going to rule our household.\" \n\n\"What household?\" \n\n\"The Joseph and Laura Constantine household.\" \n\n\"Aren't you taking something for granted?\" \n\n\"I don't believe so. Are you saying you no, Laura, because if you are, I will stop pursuing you as of this moment. It will hurt, it will hurt a lot on my part, but I've hurt before. 3 times before to be exact. So say no, and put me in my misery now, so I can start suffering. Say the word Burkart and get on with your lonely FBI driven career. Climb the ladder of success, and have no one by your side to enjoy it with you. Make up your mind Laura, and make it up now. Is it YES or NO?\" \n\nAfter a moment she said, \"I'm sorry Joe, I can't make a decision this big in my life, with only 2 days to think about it. If you want to take that as a no, go ahead. All my life I've had to think my way through things. I think I love you, but two days is just not enough time to form an opinion that will rule the rest of my life. You've been there 3 times before, and as you say you're a three-time loser. I don't want to be number 4. If I get married, I want it to stick. I don't want to be one of the 52 percent of marriages that fail.\" \n\nTom jumped in before another word was said, possibly in anger. \n\n\"So Laura, what you're saying according to Joe's list is; it's not a No, or almost no, it's a could be, or a possibly, or possibly yes. Then again it could be an almost yes, but right now we know it's not an absolutely Yes. Is that what you're saying?\" \n\n\"Tom you have the worst memory in the Western Hemisphere. That's not what Joe said. What I said is I have to think about it. If that's not good enough for him, that's his tough luck. I'm going to pack, take the Attorney General by his neck, and drag him back to Washington.\" \n\nJoe asked, \"Exactly how do you plan on doing that Miss Burkart?\" \n\n\"Mister Constantine, I work for the Federal Bureau of Investigation. I have the 4<sup>th</sup> most important person in the Federal Government under my protection. I am commandeering the largest helicopter in the parking lot, and flying it to Washington D.C. Anyone attempting to keep me from performing my sworn duty will be arrested and detained. If they take any further action against me, my agents, or the Attorney General of the United States, they will be shot dead. Do you have any other questions?\" \n\n\"No ma'am, enjoy Washington.\" \n\nTom pulled Joe aside. He looked his friend in the face, and called him an asshole. \n\n\"How stupid can you possibly be? She said she loves you. You love her, and she asked you for a little time. Are you going anywhere? You are going to be here, until this spaceship is completed. \n\nShe is going to be doing her thing, until she captures the bastard that's trying to blow up the super-rocket the U.S. is building. There is the telephone, texting, Skype, balloons, airplanes, cars, trains and other forms of transportation for you to see, and talk to each other all you want. So what happens; your brain turns to stone. Apologize to her before she leaves, or you may never see or hear from her again. She wasn't going to be number four Joe; she was going to be the last one.\" \n\n\"Why did you decide to get smart? Why couldn't you just leave me alone?\" \n\n\"I'm tired of having 3 for dinner at my house. I'm tired of having 5 for the dinner at a restaurant. I'm tired of having you go from girl to girl to girl and not being happy. She was the one and everyone around here knew it, including you, and you fuck it up. Save it Joe, or you're going to be unhappy for the rest of your life.\" \n\n(In the opposing corner) \n\nTim Kenshaw said, \"I'm not leaving until you straighten things out with Joe. He's the best thing that ever happened to you, and you are throwing it all away. Now is not the time for you to think, Laura. For the first time in your life would you please take a leap of faith, and trust in your judgment, not as a law enforcement officer, but as a human being. \n\nLaura, he is yours, and you are his. When are you going to realize that life is messy, and sometimes you just have to get dirty, and go with your gut.\" \n\n\"Sir...\" \n\n\"Call me Ken, while we are discussing our private lives.\" \n\n\"Thank you Ken. How long did you know your wife before you married her?\" \n\n\"This is my 3<sup>rd</sup> marriage. My 1<sup>st</sup> wife died in a car accident. My 2<sup>nd</sup> wife caught me cheating on her, but she had been cheating on me for several years. We settled amicably out of court. My 3<sup>rd</sup> wife and I have been married for 15 wonderful years. Does that answer your question, Laura?\" \n\n\"Why did your wife cheat on you?\" \n\n\"I was a brilliant young lawyer. I worked long hours, and sometimes weekends. She reaped the benefits, but was tired of being without a husband. The signs were all there that she was cheating, so I had a private investigator follow her for 6 months, and had all the ammunition I needed to divorce her. \n\nWhile I was thinking about it, I met the sister of a good friend of mine, and began an affair with her. She is wife number 3.\" \n\n\"Why bother getting married? Why not just live together, and go as you please?\" \n\n\"I guess neither one of you want children?\" \n\n\"By the time I retire, I will be too old to have children.\" \n\n\"Women are having children into their late forties now. You have to ask yourself one question: Are you willing to take that leap of faith for Joseph Constantine to be your husband, or not? If the answer is no, walk away now, and never turn your head back. \n\nIf the answer is yes, ask him to meet you somewhere private, where you can discuss your last argument, and then move on. If you can't get by that argument, it's over.\" \n\n\"You don't realize how out of character this will be for me, Ken. I have never done anything without thinking about it first. If I was at bat, I always knew the odds of what pitch was coming next. I was always the best hitter on the team because of it. I was the worst fielder on the team, but the coach would not take me out of the game, because my batting average was always more than .800. I had to throw my whole body in front of a ground ball to stop it, but pitchers could not get the ball by me.\" \n\n\"Life is not a baseball game, Laura. If I was the opposing coach, every time you came to bat, I would have walked you. I would have told every one of my batters to hit to your field. I would have won every game because of it. \n\nYou have a choice to make, and this is the last time I'm going to say it. Do you love Joseph Constantine enough to make that leap of faith, or not? If you do not, I will be ready to leave in 2 hours. If you do I'll be ready to leave at 10 o'clock tomorrow morning. Make up your mind Laura, is it yes or no?\" \n\nLaura was about to speak, when Tom yelled, \"Oh, there you are. Buffalo 1 has a leaky fuel line. They are repairing it now. It will be ready to fly tomorrow morning.\" \n\n\"Tell the flight crew, we will take the helicopter the way it is. If we crash with the Attorney General on board, who ever made that fuel line leak will be charged with murder in the 1<sup>st</sup> degree. I'll be sending a text to Washington, as soon as we finish this conversation. Do you understand Thomas? \n\n\"You won't get anyone to fly that bird.\" \n\n\"I'm a certified helicopter pilot. I'll fly it myself.\" \n\n\"Both of you should be put in a nuthouse. Neither one of you will listen to common sense.\" \n\n\"If you would have kept your mouth shut at the beginning, none of this would have happened.\" \n\n\"Laura for such a brilliant woman, you can't see the obvious. The first time the two of you looked at each other, a halo surrounded you. Everyone saw it, and everyone knew you were meant for one another. That was the reason I started in on you and that erstwhile friend of mine. I don't do that to him. I don't mess in his love life. He goes through women monthly. I don't mean he beds them, and lets them go. He may take them out a couple of times, to the movies or dinner, and then stop seeing them. He's never happy with any of them. I've been his friend since high school. I know that man better than anyone else alive. He would jump in front of a moving train to save your life, even if it meant losing his in exchange. He is about crazy you. He is nuts about you. He is bonkers about you. He is head over heels about you, but his brain turns to peanut butter, when he has to put together a sentence to tell you how he feels about you. He doesn't want to get hurt again, and he's all out there waiting for you to tell him what to do.\" \n\n\"Tom, everyone I know has dated for months. Then they stayed engaged for a long time, and then plan for their wedding. Then, they get married. Why do I have to jump into the middle of the ocean after 2 days, and be afraid that I'm going to break someone's heart if I change my mind?\" \n\nThe Attorney General said, \"Laura as you know I'm a very wealthy man. I will bet you $1 million to your $100 that your marriage to Joe will not fail. I will bet you that you will be happier than you have been, since you turned 30. He is the man of your dreams, even though you don't dream of men being in your life very often. Give yourself a chance, Laura, open yourself up to the world around you. Remember, even after you marry him, you can still beat the shit out of him, either here, or at any FBI gym in the nation. It will all be legal, and no one can press charges against either of you.\" \n\n\"Tom, Joseph and I have to talk. I mean a real serious heart-to-heart talk. Where is the gym? I don't want anyone there, except the 2 of us. Can you do that?\" \n\n\"The gym is on the 4<sup>th</sup> floor. Get changed, and be there in 15 minutes. I will have my men clear the floor, block the stairwells, and the elevators. When both of you are in the gymnasium, I will hand Joe the key so he can lock the door from the inside. When you 2 are finished talking, whichever one of you can make it to the door can open it, and yell for help.\" \n\n\"Thank you Tom, I'll make sure the boys don't glue you into your room tonight.\" \n\n\"Laura, I have one request; please don't maim him, I will be severely pissed at you if you do.\" \n\n\"If he doesn't listen to reason, I can't promise you anything.\" \n\n\"Are you really that good, Laura?\" \n\nThe Attorney General answered for her. \n\n\"Tom, she was turned down by the Secret Service, for the presidential detail, for one reason; she was too short. The SSAIC smiled at her, when he told her the reason. \n\nShe broke his jaw, 3 ribs, and his leg, in under 1 minute. That was the amount of time it took other agents to get into his office and get her off him. \n\nThe only reason they could not bust her out of the service was because the room was under video surveillance. They saw him smile as he said she was too short. He was denigrating her sex, as well as her height. He was removed from his position, and allowed to retire, because of his years in service.\" \n\n\"If you two can work this out, and I hope you can, I truly worry about your children. They are going to be as strong as oxen, and I will pray that they have Joseph's temperament.\" \n\n\"What's the problem with my temperament? I've never had a problem, while I am on duty.\" \n\n\"Tim just picture a 7-year-old boy pushing a 5-year-old girl down, in the schoolyard, with Laura and Joe's blood running through her veins. Her pretty little dress is ripped, her pink socks have mud on them, and her patent leather shoes are scuffed. What do you think would happen to that young man?\" \n\n\"It's too terrible even to speak of. However, for the rest of his life he will treat women with great respect. He will never know which one will dislocate his right arm, put his left leg up his asshole, and shove his left hand down his throat.\" \n\n\"I have to get changed. You two go do your jobs. I will meet Joseph in the gym; only Joseph, no one else.\" \n\n\"You have my word Laura. I will verify there is no one in the sauna, steam room or the showers, before you and Joseph are left alone.\" \n\n\"Thank you Thomas.\" \n\n**************** \n\n\"Zoey.\" \n\nShe raised her head off to bed and looked to see who called her. \n\n\"Oh, it's you Monty. What do you want?\" \n\n\"You can go back to your room now. I have suspended the rest of your sentence.\" \n\n\"Why did you do that? Did you think Gordon was too harsh on me?\" \n\n\"No, I don't think he was harsh enough. I just won't let a pregnant woman sit in a jail cell. You can leave anytime you wish. Whenever you have your divorce statement written up, you can drop it off in the meeting room, and as soon as Gordon drops his off, I'll set up a day and time for a panel hearing on your motions. We will let 16 members of our society decide who gets Payne, whether it is permanent custody, or joint custody, and what other actions are to be taken. I have already decided one thing, and that is you will have no contact with Payne, until you have had a complete psychiatric evaluation. On this one point I agree with Gordon. I believe that the medications that kept you stable have left your system, and you are now returning to the person you were earlier in your lifetime. I will not entrust the well-being of a 6-month old child, in the hands of an irrational human being. Once Doctor Daniels, and Doctor Finch have had a chance to talk to you, and have had a chance to discuss your situation, I may allow supervised visitation for short periods of time. Until otherwise stated, Gordon Luck has full custody of Payne Elizabeth Luck. If you break this rule, you'll wind up back in this room. Sign this form stating you understand, and agree to the terms of your conditional release.\" \n\n\"What happens if I don't sign that form?\" \n\n\"You can still leave this cell, but if you approach your child, you will be restrained in the most vigorous manner. If necessary, you'll be sedated. If you continue to be a problem to our society, you will be put before the full membership, and a decision will be made as to how long you will be put into stasis.\" \n\n\"Stasis, that's cruel and unusual punishment by any stretch of the imagination.\" \n\n\"I think Gordon would disagree with you. He was in stasis for 4 months, and he suffered no ill effects. He, also, was sentenced to spend 6 months in solitary confinement, for disobeying a direct order. He did not complain about being in stasis, but after a few days in solitary confinement, he chose to kill himself, rather than spend another day in the brig. Do you still believe stasis is cruel and unusual punishment?\" ",
        "\"What about my baby?\" \n\n\"It's not just your baby. You are its mother, and Gordon is its father. The 2 of you will fight over that child when the time comes. However, we would not put you into stasis before you gave birth.\" \n\n\"When do I have to start seeing Doctor Daniels?\" \n\n\"Your 1<sup>st</sup> appointment is this afternoon at 1500 hrs. You will continue to see her 5 days a week, until she makes a recommendation to Doctor Finch. Together they will devise a course of action, which will probably include medication, as well as continued psychiatric treatment. It will be devised to keep you healthy, and your new baby safe.\" \n\n\"Was what I did so terrible?\" \n\n\"Let's look at the result of what you did, while leaving Gordon's, and my feelings out of it. One man lost his rank, and is in the next cell for 13 more days. Janet is on restriction for one month. Everyone who was on duty in the security screening area will be spending one day each, in the brig, because of what you did. That means a loss of 18 working days, which other people will have to pick up. \n\nI cannot say if you've lost any friends among the crew or not. I will say a lot of people will be looking at you differently from now on. They are going to wonder whose privacy you are going to invade next. Is there anything, is there any length you won't go to, just to get your story?\" \n\n\"Has Gordon finished moving out of our apartment?\" \n\n\"Yes. All of his, and Payne's items are in their new apartment. He will be working a split shift, doing work in different areas of his expertise while she sleeps. As soon as she awakens, he will be called so he can spend as much time with her as he can. He will put in his full 8-hour day, and spend the rest of his time raising his daughter. He realizes it will be challenging at first, and even more so, when his second child is born. However, he is determined to be the best single father he can be.\" \n\n\"You're just trying to make me feel bad.\" \n\n\"I'm doing no such thing, Zoey. I'm telling you what he said to me, in the same language he said it to me. \n\nUntil I saw the way you acted yesterday, we were all friends. Yesterday, you turned into a different person. I did not like the person I saw. I want the old Zoey back. I will do everything in my power to get her back. However, I will not stand in your way if you want a divorce. If that's the road you want to go down, it is your choice. It's your life, only you can live it.\" \n\n\"You will have my paperwork tomorrow.\" \n\n\"Remember you have Hannah at 1500 hrs.\" \n\n\"I will be there.\" \n\n************** \n\nOn his first night as a single father, Gordon ran into a problem. Payne decided she wanted to stay up and play, instead of going to sleep as she normally would have done, after nursing at her mother's breast. She drank the complete eight-ounce bottle of horrible smelling stuff they gave him at the nursery, and apparently there was so much sugar in it, his little one was wired. The apartment was too small to take her for a walk, so he decided to take her outside for a breath of fresh air in the hopes that that might knock her out. \n\nHe signed out on the log book at 0217, and walked outside into a beautiful sunshiny day. There were several agents, wearing their sidearms, patrolling close to the ship, and they looked at him as if he was crazy. \n\nHe approached them and said, \"Believe me guys, this is not my idea, it's hers.\" \n\nOn cue, the little bundle he was holding grinned. \n\n\"Is there anything new and exciting going on out here?\" \n\n\"If I had a good pair of binoculars, I would be able to say yes, and mean it. I swear I've seen movement to the west of us. Not one or two animals, but from the way I caught glimpses of the movement, I would say in the hundreds. I believe it's a herd of animals of some sort. They may be moving towards water, and this stream behind us is the only water we know of in the area.\" \n\n\"Gordon, how far is it to the horizon, because that's how far I believe those movements were?\" \n\n\"In these conditions, where the land is basically flat, and I am 5' 10\", the horizon should be about three miles away. \n\nLook at the tree line guys; I think we are going to have a convention here today. Teddy is going to be ecstatic. Her pony has brought her family over for a visit. Let's not do anything to scare them away.\" \n\n\"Do you think something has happened, or is going to happen that all these animals are moving our way at one time?\" \n\n\"Benny, you got here at the same day I did, so your guess is as good as mine.\" \n\n\"Those ponies show no fear at all. They are all coming directly over to the ship. Should we raise the walkway?\" \n\n\"Yes, I think that would be a very prudent idea. I don't want Teddy's pony walking into the ship and sniffing around to find her.\" \n\n\"Station one, this is perimeter one, raise the walkway.\" \n\n\"Perimeter one, this is station one, raising the walkway. Is there a problem?\" \n\n\"Station one, take a look at your Southern monitor and tell me what you see?\" \n\n\"Holy shit perimeter one, I see ponies, about 18 of them.\" \n\n\"Excellent observation station one. Now look to the west, increase your magnification; and tell me what you see.\" \n\n\"I don't know what God calls them, but they are the ugliest looking cows I've ever seen.\" \n\nGordon laughed. \"Teddy says they smell awful too.\" \n\n\"How did she know there were cows here?\" \n\n\"I'm not going to bother answering that question, because if you don't know by now, you are as dense as concrete.\" \n\n\"Come on, that's not funny.\" \n\n\"It wasn't meant to be funny.\" \n\nTeddy's little pony walked up to Gordon, and sniffed the little bundle he was holding. He uncovered Payne so the little horse could see her as God created her. \n\nThe pony sniffed her from top to bottom, and nodded its head in affirmation. It blew air through its nose onto the little child, and pranced around. The other ponies moved closer to see what excited the young, white pony. They formed a semi circle around Gordon, and took turns looking over the tiny infant. When they were finished, with their inspection of her, they moved off, and began grazing on the bountiful green grass. \n\nWhat amazed Gordon was his daughter was awake, and playful, while all these animals fawned over her. He expected her to be afraid of them, but she wasn't. This was his first indication that his daughter was going to be different than other children, in many ways. \n\n\"I have a feeling we should move the Good Luck away from this stream. I think we are in for a flood. The temperature just dropped about 10 degrees, while we were standing here. Those cows are not coming for a trickle of water; they are coming for a river of it. Get inside, we have to move the ship now.\" \n\n\"Bridge, this is Captain Gordon Luck; who is in command?\" \n\n\"I am Gordon, what's the matter?\" \n\n\"Mom, as soon as security and I are in the ship, get us out of here. I have a strange feeling that this area is going to be flooded soon. The temperature just dropped 10 degrees, and the sky looks funny. Move us to the west by about a mile for now, we can fine tune the mileage later. I am not fooling around mom, get us out of here, now.\" \n\n\"All hands to their stations. Engineering, nuclear engine to three percent.\" \n\n\"Engineering responding, nuclear engine to three percent.\" \n\n\"All stations report.\" \n\n\"Engineering is in the green.\" \n\n\"Navigation is in the green.\" \n\n\"Propulsion is in the green.\" \n\n\"Nuclear engine to five percent.\" \n\n\"Engineering responding, nuclear engine five percent.\" \n\n\"Antigravity engine to 20 percent. Get us off the ground slowly, so we don't scare everyone that's sleeping to death as we lift off.\" \n\n\"Propulsion is increasing lift off speed at 5 feet per second.\" \n\nJennifer wondered what was taking Gordon so long to make it to the bridge. She thought he would fly here. \n\n\"Security, where is Gordon Luck?\" \n\n\"He went straight to his apartment, with Payne, after he entered the ship, captain.\" \n\n\"Thank you very much.\" \n\nShe smiled, because her son was keeping his word. \n\n\"Captain, we are at 300 feet, and one mile west of our former position. Shall we land now or move further west?\" \n\n\"Land the Good Luck, Mister Perry.\" \n\n\"Roger Captain, descending at 10 feet per second.\" \n\n\"Mister Perry, when you get to 45 feet, slow your descent to a crawl. When our landing gear touches the ground, I don't want the grass to know it.\" \n\n\"Very well Captain.\" \n\n\"Captain look at the rear view screen. All the ponies are running after us. They must know something is up, or we wouldn't have moved.\" \n\n\"When Gordon was outside, where they there also?\" \n\n\"Yes Captain, they all went over to sniff the baby. They were quite enchanted by her.\" \n\n\"I can tell this is going to be a weird new home for us.\" \n\n\"If you think that's funny Captain, increase your magnification on the forward screen. We have cattle going eastbound towards the river. I have been told by a certain four-year-old redheaded female these cows smell awful.\" \n\n\"Let's hope they going for their yearly bath.\" \n\n\"We could never be that lucky.\" \n\n\"Captain Luck, this is John Nash in the science section.\" \n\n\"Go ahead Mister Nash.\" \n\n\"I don't know where it's coming from, but it's raining like hell in the mountains north of the 100-mile area we set out to map. The radar shows the precipitation, but there is no cloud activity in the area. There is no thunderstorm activity, no electrical activity, just rain, and plenty of it. This planet is weird.\" \n\n\"Is that your scientific assessment Mister Nash?\" \n\n\"I will print it out on the computer, and sign it for you Captain. I am as confused as are my fellow scientists.\" \n\n\"For your information Mister Nash, a few minutes ago, I made the same assessment of this planet.\" \n\n\"Thank you for saying that Captain; I am in great company now.\" \n\n***************** \n\n\"Engineering, this is the captain, keep the nuclear engine at 3%.\" \n\n\"Roger Captain, nuclear engine at 3%. May we ask why?\" \n\n\"No.\" \n\n\"Thank you Captain.\" \n\n***************** \n\n\"Why do I have a feeling we should call Jack, and find out what's going on?\" \n\n\"Maybe you did not hear the captain correctly. You asked her a question, and she gave you a very distinct answer. Why do you think Jack would get a different answer?\" \n\n\"He would go to the bridge, and ask the captain directly.\" \n\n\"The only difference between being told 'No' over our communications net, and being told 'No' to your face, because a junior officer asked you to go up to the bridge to find out what the hell is going on, is that the junior officer is going to get his ass reamed.\" \n\n\"I think I'll keep my mouth shut. I'm safer that way.\" \n\n\"Excellent thinking Joey. You may live to see tomorrow.\" \n\n**************************** \n\nJack walked into engineering screaming. \n\n\"Why did you increase the power to the nuclear engine, without advising me first?\" \n\nEd whispered, \"Go ahead Joey; you got this one.\" \n\n\"Because the captain told me to.\" \n\n\"Way to go Joey.\" \n\n\"Why did the captain tell us to move?\" \n\n\"I asked, 'May we know the reason for keeping the nuclear engines at 3% after our move of 1 mile from our previous position.' Her answer was an emphatic 'NO.' \n\n\"Who is captaining the bridge?\" \n\n\"Capt. Jennifer Luck, sir.\" \n\n\"Oh!\" \n\n\"We said the same thing sir.\" \n\n\"I'm going to the bridge.\" \n\n\"Sir, I wouldn't advise that. Something is going on, and I don't know what it is.\" \n\n\"It's all the more reason for engineering to be prepared to make a very quick move. We can't sit here on our asses, and be caught off guard. I want the antigravity engines on standby. If we have to get out of here, I want then at 75% power, at all times. Is that clear?\" \n\n\"Very clear sir. If the captain had told us what was going on, we would have awakened you, and asked for instructions. She left us in the dark, and we were unsure as to what action we should take.\" \n\n\"You must remember when you're sitting in that chair, no action means death. Any action is better than no action. You'd rather be over cautious, then be caught with your pants around your ankles. If she wants the nuclear engines at 3%, something is wrong. You are responsible for the safety of this ship. You must take action, or we are as good as dead.\" \n\n\"Thank you sir, that's a lesson I will always remember.\" \n\n\"Good, now let me go ream are Captains ass for not giving you the information you needed to keep this ship safe.\" \n\n\"We thought she would ream your ass for being on the bridge.\" \n\n\"I'm older than she is, and I know more than she does. I'm going to teach her the same lesson I just gave you.\" \n\n\"Can I come with you?\" \n\n\"Only if you want to get stepped on.\" \n\n\"I think I'll stay here.\" \n\n\"Very good choice.\" \n\n**************************** \n\nThere was a crew change on the bridge, and Monty took command. When Jack arrived he looked, and saw her sitting on the captain's chair. Had his young officers made a mistake in voice recognition, or did Monty not give them the information they needed to perform their duties properly. He decided to find out. \n\n\"Monty did you just come on duty?\" \n\n\"Yes I did. I just relieved Jennifer.\" \n\n\"Would you ask her to come to the meeting room, I have a few choice words for her.\" \n\n\"What did she do wrong Jack?\" \n\n\"She didn't give my men enough information to keep this ship safe. When the asked, 'May we ask why,' she said, 'NO.' She put this ship in danger, because she left engineering in the dark. Sure we had enough electrical energy to do most anything. However, it would have taken time to bring the anti-gravity engines up to speed. We would have lost valuable time, because of her insolence, and ignorance of the way things work in engineering. I want her reprimanded.\" \n\n\"Don't you think that's going a little bit far Jack? She made an error in judgment. Should I mention how many you made? Should I tell you how many times you told me those rockets were ready to fly, before you found circuit boards that were cracked; explosives attached to the rockets propulsion system, and your inability to find the last block of C4 that would have blown up a quarter of this ship? Did I give you a reprimand Jack, or did I tell everyone they did a magnificent job searching this ship from top to bottom.\" \n\n\"Monty have I told you today that you are a pain in the ass?\" \n\n\"Jack, you have been a pain in the ass since you boarded this ship. I don't ever want you to change. You are an invaluable member of our staff. You have to continue training everyone in engineering. They have to know everything that you know, before Hannah kills you in bed. Keep going Jack, train and those people, and continue being a pain in the ass.\" \n\n\"When are you getting married? \n\n\"When Jackson gets up the nerve to ask me. Then I'll tell him I'll think about it.\" \n\n\"What the hell is there to think about?\" \n\n\"He has talked to every one of his friends about getting married to me. Every table around his table has heard him talking about marrying me. Those tables told the tables around them that Jackson wants to marry me. By the time breakfast lunch and dinner are finished, I am the only topic of conversation. The only time something else is talked about, is when I walk into the room. Now I'm going to make him suffer. I'm not going to talk to anyone about it. I'm going to let him sweat. He has bandied my name around the entire ship, and I am not going to say one word. I expect he will come to me quite frequently, after he asks me that question, and ask for my answer. I will tell him, 'I am thinking about it.' I hope it drives him as crazy as this waiting for him to decide what to do is making me. I have been told the women on this ship are making me a wedding dress. I think it's the most wonderful thing anyone could do for me. I would like to wear it one day, and if it's not with Jackson, maybe it will be with one of our friends living on the dark side of this planet. Jennifer is supposed to marry one, why not me? If you say one word of this conversation to anyone, including Hannah, you will never enjoy sex again. I know you understand what I'm saying Jack, please don't disappoint me.\" \n\n\"On my honor, as a Graduate of U.S. Military Academy at West Point, and a Lieutenant Colonel, in the United States Army, I will not say one word of what we had discussed here today to anyone, especially not Hannah.\" \n\n********************* \n\n\"Bridge, science section, here comes the water down through those mountain passes. Gordon was right, there is going to be flood of monumental proportions down here. We could have 10 or 11 feet of water, possibly a half-mile wide, draining towards the dark side of the planet.\" \n\n\"Jack get down to engineering, and make sure we are ready to pop off the ground if needed.\" \n\n\"Gee whiz, why didn't I think of that?\" \n\n\"I understand there's an opening in the brig for smart asses, Jack.\" \n\n\"I'm moving your highness.\" \n\n\"Not fast enough for my taste.\" \n\n\"My ass didn't even feel that bite.\" \n\n\"It will if I stand up.\" \n\n\"You take care of the bridge. I'll be in engineering in 90 seconds.\" \n\n\"Are you going to screw Hannah your way there?\" \n\n\"I didn't think you would notice.\" \n\n************************ \n\n52. Love is Pain \n\nLaura had gloves on that protected her hands but exposed her fingers. She warmed up looking at the mirrors, stretching her legs into splits, and extending her back, with her feet on the floor, until her head touched the ground behind her. Then she flipped herself over into another split. \n\nTom and Joe were standing at the door watching her. Tom handed Joe the key, patted him on the back, and wished him good luck. \n\n\"My friend, she's like a snake, she's going to wrap herself around you, and strangle you to death.\" \n\n\"I'm going to pound her back until it breaks. She won't be able to wrap herself around anything when I'm finished with her.\" \n\n\"Excellent thinking Joe, you going to marry a quadriplegic.\" \n\n\"Go fuck yourself.\" \n\n\"All things considered, if you don't want her, I'd rather fuck Laura.\" \n\n\"Get out of here Tom, before I kill you first.\" \n\n\"From a quadriplegic, to murder; that's an awful big step.\" \n\n\"Get out.\" \n\n\"Your wish is my command.\" \n\nTom made a big show of making sure the gym was empty. With Laura by his side, it made his job that much easier. She was sure he was telling the truth. \n\nJoe walked the entire circumference of the fourth floor, making sure every room was empty. Only those people, from Tom's unit were left on the floor, guarding every stairwell, and elevator. The floor was clear. \n\nJoe took the key, locked the door from the inside, and left the key in the lock. It wasn't that the door could not be opened, but it would be much harder for someone to do it. \n\nBoth of them were so sure they were alone, they felt comfortable enough to fight this fight until someone gave in. \n\nAs with all perfect plans, they forgot one minor thing, the boys. Once Richard and Holden heard about this, they sprung into action. They moved into the electrical grid, attached cameras that showed every area of the gym. They displayed the area, in every bedroom on the third, fourth, fifth, and sixth floors. It was shown in every public area of the fifth floor, and the entire sixth floor. This was the fight of the year, and bets were being made across the board. \n\nThe Attorney General was on the fifth floor watching the action. \n\nWhen the odds got to 8 to 1 in favor of Joe, he jumped in with both feet. \n\n\"I'll bet $10,000, or any part on Laura Burkart at 8 to 1 odds.\" \n\nThe guys went wild, and the $10,000 was gone in a minute. \n\n\"I have $20,000, or any part on Laura Burkart at 8 to 1 odds.\" \n\nThese were well-paid men, and the $20,000 was again gone in minute. The men were laughing at him so hard they raised the odds to 11 to 1. ",
        "\"I have $200,000, or any part on Laura Burkart at 11 to 1 odds.\" \n\nThe money went, but a little slower, and the guys began to wonder what Timothy Kenshaw knew about Laura Burkart that they did not know. \n\n\"I have $500,000, or any part on Laura Burkart at 11 to 1 odds.\" \n\nLess then half of the $500,000 was taken. \n\nIn the gym, the combatants were ready. \n\nWhile Joe was warming up, Laura was pacing back and forth along the glass wall. She was thinking about every insult both Joe and Tom had thrown at her past few days. She blocked out her mind all the good things that happened. The proposal, the sex, and happiness she felt inside. They never happened. \n\nJoe became the hardest felon she ever captured in hand to hand combat. She never looked at Joe's face. She just thought about Royce Garner. He was a kidnapper, rapist, torturer, and killer of little girls. She tracked him for seven years, and she trapped him in a warehouse, in a suburb north of St. Louis. She and 3 of her fellow agents went in to get him. One of her agents was severely wounded, and another carried him out to get emergency medical care. She and her other agent closed in on Royce, when he threw a grenade at them. When it went off, they were both stunned, and could not hear. \n\nRoyce came around the boxes that protected them from the shrapnel, with an automatic rifle. He pointed it at her partner, but she rolled into the back of his knees, which caused him to fire high. She disarmed him of his rifle, and from behind, went after his throat. With her legs wrapped around his stomach, and her left hand going after his eyes, her right hand dug into his throat with a vengeance. Their battle raged for twelve minutes, but when it was over, she had crushed every bone in his throat, and she had ripped out his eyes. \n\nHer partner had to pull her off him, and convince her he was truly dead. He sat her by a wall, where she cried. Her chase was over. She was both happy, and sad. \n\nShe got her second gold medal for capturing him. \n\nJoe didn't know where she was, but he yelled at her, \"Are we going to start any time today?\" \n\n\"It was definitely the wrong thing to say. She ran at him, and he was certain she was going to come at his chest or head. He was wrong. She dove and hit him just below his knees, with both shoulders. \n\nJoe screamed in pain, and went down like a ton of bricks. Almost before he hit the ground, she was on his back, pounding at the muscles of his neck. After 10 powerful blows to his trapezius muscles, she pulled his right arm back and began hitting his deltoids. \n\nJoe finally recovered from her first attack, and threw her off. His legs were wobbly, so he didn't pursue her. He waited for her to come to him. His right arm hurt, but his neck hurt more. He could hardly move it. \n\n\"What's the matter Joe, can't beat up on a little girl, a midget?\" \n\n\"I never called you a midget.\" \n\n\"You laughed when Tom did.\" \n\n\"I didn't laugh at you; I knew how much trouble he was in.\" \n\n\"Bullshit, here I come Joe, prepare yourself.\" \n\nHe did, but what she did amazed him. \n\nHe is 6' 2\", 220 pounds. She is 5' 1\" (on a good day) 105 pounds. It was a mismatch if there ever was one. She was 15 feet away from him. He crouched down, not knowing what area of his body she was coming at this time. She ran straight at him, at full speed. Joe braced himself, and put his arms out to grab her, before she impacted him. He was ready for her, but when she was 3 feet away, she bounced into the air, flipped over him, landed on her feet and hands, and mule kicked him. Joe flew forward, landing on his face. He screamed in ignominy. \n\n\"You bitch; I didn't know you were an acrobat.\" \n\n\"You haven't seen anything yet. Wait until I break your leg.\" \n\n\"Like you, I have insurance. \n\n******************** \n\nUpstairs the room was quiet, except for Tim Kenshaw. He was hooting and hollering every time Joe hit the mat. \n\n\"I warned you guys, but you didn't listen. 8 to 1 and 11 to 1. I am get richer by the minute.\" \n\n\"Shut up and sit down. It's not over yet.\" \n\n\"Joe can't use his legs. His right arm is nearly useless, and she kicks him in the ass. How much more proof do you need that this is over?\" \n\n\"When I see him lying on the mat saying 'No Mas.' \n\n\"I would say three or four minutes from now should do it. She's about to kick in the balls, while she is lying down.\" \n\n\"How do you know that piece of information?\" \n\n\"Joe's about to attack her, because he's furious with her, and her tactics. She is going to taunt him into attacking her. Just when he's in range, she's going to fall back, and kick him in the balls. That's what they teach them to do, when they train them down on the 'Farm.' It's a wonderful tactic.\" \n\n****************************** \n\nLaura was dancing around him, making him use his badly bruised and tired legs. \n\n\"Come on Royce, faster, you have to move faster than that if you want to kill me.\" \n\n\"Who the fuck is Royce?\" \n\n\"Today you are. I'm going to kick your ass into next week; you child molester. You rape tiny little girls, because you can't get it up, with a woman like me. When you're finished with those babies, you cut them to pieces, and throw them away like garbage. You don't care about the families, who are devastated by your actions. You have your moment of pleasure, and take pictures of the dismembered bodies. You are sick, you fucking bastard, and I am going to rip your eyes out.\" \n\nThat was it. Joe's fuse was lit; his temper flared, and he went after her. \n\nShe smiled like a Cheshire cat as he charged at her. Closer and closer he came, and when he was right there, she fell on her back. \n\nJoe did the wrong thing; he tried to stop. When he did he he looked down at her and saw her smile up at him. \n\nBefore he could move, she thrust it up her right foot, and landed a perfect shot to his testicles. \n\nJoe's eyes crossed, as he collapsed to his knees, while his right hand was holding his groin. The pain was so intense; he fell on his face. \n\nLaura stood up, walked over to him, and lay down on his back. \n\n\"Do you give up dear?\" \n\n\"You are a god damn witch, woman.\" \n\n\"Is that a yes or no? If it's a no, I'm going to beat the shit out of you.\" \n\n\"Yes I give up.\" \n\n\"In that case, yes I will marry you.\" \n\n\"What did you just say?\" \n\n\"I said yes I will marry you.\" \n\n\"You just beat the shit out of me, and now you expect me to marry you?\" \n\n\"If I've hurt your pride too much, I can always change my mind and say no.\" \n\n\"When my swollen balls go down, and I am able to move, I am going to buy a tree, and spank you with it.\" \n\n\"May I remind you about who just got his ass kicked?\" \n\n\"You don't have to remind me, every bone in my body hurts.\" \n\n\"That's not possible. I did not hit you in the stomach or the chest. If I did, you would be on your way to the hospital by helicopter now.\" \n\nJoe rolled over quickly, catching Laura off-guard. She wound up face down on the floor, with Joe on top of her. \n\n\"This means nothing Joseph; you have already conceded.\" \n\n\"No one else will know, but you and I.\" \n\n\"You haven't looked up at the cameras, have you? I did. They are following our every move.\" \n\n\"The internal systems are not hooked up yet.\" \n\n\"May I say two words to you?\" \n\n\"Sure go ahead.\" \n\n\"Richard, Holden.\" \n\n\"The whole world just watched you kick my ass.\" \n\n\"I wonder how much money the Attorney General won?\" \n\n\"I wonder what my friends set the odds at?\" \n\n\"Let's wave at the cameras so they know we are finished fighting.\" \n\n\"After we wave, let's go in the sauna and make love. You did say 'yes' to my proposal if I remember correctly.\" \n\n\"It will be official, when there is a ring on my finger, and not one second before.\" \n\n\"Where am I supposed to get a ring in the middle of the flood?\" \n\n\"The sun is out. Find a jewelry store that's open. Take a helicopter if you have to, but I want a ring by the end of the day. I leave with the Attorney General tomorrow morning, at 10 AM.\" \n\n\"I guarantee that you will be walking funny tomorrow morning at 10 AM.\" \n\n\"You said that last time, and you fell asleep on me.\" \n\n\"I'm going to remember how you beat the hell out of me this morning. It will give me all the impetus I need to fuck you raw.\" \n\n\"Let's wave, so you can get me my ring. You can't tell anyone where engaged until it's on my finger.\" \n\n\"They should clone you, and kick all the men out of the Army. No country would dare put an army up against you.\" \n\n\"Shut up, smile, and wave.\" \n\n****************************** \n\n\"Holy crap, we are busted. How did they know?\" \n\nTim said, \"How many times do I have to tell you Laura Burkart is the best FBI agent in the country. Nothing gets by her, nothing at all. Write out your checks gentleman. I don't expect any of them to bounce.\" \n\nAt 8 to 1, and 11 to 1 odds, the checks they were writing hurt their bank accounts dearly. They would never bet against a female FBI agent again. \n\nTim stood at the front of the room thanking each man, personally, as they handed him their check. When he did a quick count of the money he took in, he said, \"I wish to thank each of you for your kind donation to my campaign to run for the Senate, from the great state of Oregon. Your $806,340 is greatly appreciated. Now if you would all move to Oregon; you can vote for me.\" \n\nThe response he received was not what he had hoped for.\" \n\n************************ \n\nAs they were showering, Joe moved in on Laura. \n\n\"Mr. Constantine do you want your hands broken? We are not engaged yet. Clean up, and get me my ring. I've waited 37 years to find someone like you to marry me. I never believed it would happen, because of the type of person I am. I know I'm impossible. I'm probably worse than that. Joseph, you have no idea how much that ring would mean to me. I don't care if it comes out of the bottom of a Cracker Jacks Box, please find me a ring.\" \n\n\"Laura, you will have it if I have to break into a jewelry store to get it.\" \n\n\"Don't get caught if you break into a store. My ring size is 7 \u00bd.\" \n\n\"How would you know that?\" \n\n\"I asked Holden.\" \n\n\"That's good enough for me. Can we fool around now?\" \n\n\"I am looking forward to it, right after the ring is on my finger.\" \n\n\"You have a one track mind.\" \n\n\"I sure do. I wanted to beat the crap out of you. I did, and everyone saw me do it.\" \n\n\"You had to say that didn't you? Do you know the hell I'm going to get when I go upstairs?\" \n\n\"If you leave, and get my ring, they won't be able to say a word. You will be announcing our engagement instead. Won't that be wonderful Joseph?\" \n\n\"Why do I have this nagging feeling, in the back of my head that I should kill myself now, because the rest of my life is going to be excruciatingly painful?\" \n\n\"I am going to make your life so much fun. We are going to need an ice bath, in the bedroom, just for you.\" \n\n\"I'm going to take Tom with me when I leave. He will not be coming back.\" \n\n\"I'm an FBI agent. You should not have said that in front of me.\" \n\n\"You are going to be my wife. You can't testify against me.\" \n\n\"They can make me testify to anything that happened prior to our marriage.\" \n\n\"You will say, 'I don't remember.' They can't argue with that.\" \n\n\"There is no ring on my finger.\" \n\n\"I'm going dammit, I'm going.\" \n\n\"Can I go with you so I can pick it out?\" \n\n\"Where is my gun?\" \n\nShe reached between his legs and yanked on his 'gun.' \n\n\"Found it!\" \n\n\"Come on woman, let's see if we can get you 2 rings. \n\n\"Two rings, I only want one.\" \n\n\"No you want two. One for the third finger of your left hand, and the second one to put through my nose.\" \n\nShe laughed and smacked him. He smacked her back. \n\nThey were on the elevator floor, in the heat of passion, when the door opened on the fifth floor. \n\nThe cheers and applause of their comrades almost went unnoticed. \n\nTHE END \n\nDark as Daylight \n\nChapter 13 \n\nBy \n\nProlonged_Debut10 \n\nNote: I'm sorry it took so long to get this chapter to you. It really sucks being sick all the time. Bob"
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "planetary issues",
        "gordon & zoey"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/dark-as-daylight-ch-13"
}