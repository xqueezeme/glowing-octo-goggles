{
    "title": "The Surrogate Ch. 05",
    "pages": [
        "Chapter Five - The Ranch\n\n\"When the Reverend's great grandfather founded the Sons of Jehovah back in the thirties, the congregation deliberately sought isolation so they would be free to practice their religious beliefs without interference.\"\n\n\"But the Reverend was also an astute businessman and knew that to keep his flock happy he would need to provide for them so the Sons of Jehovah would still need to engage with the outside world.\"\n\n\"Redhaven Wyoming was the perfect place for them to settle. The Reverend already owned vast acreages on which he had a profitable ranch and was also bootlegging Canadian whiskey at the back end of the prohibition. He founded the town and he started up more businesses whilst at the same time establishing his religion and constituting the tenets which would bind the people to the church of the Sons of Jehovah and their town of Redhaven,\" Peter explained.\n\n\"You've told me that part of the church's history, that's common knowledge,\" Mila sipped coffee.\n\n\"Ok, early on the Reverend and his Apostles realised that the SOJ could evade taxes by misrepresenting the profits earned by their legitimate businesses and use loopholes that exempt churches from paying state and federal taxes.\"\n\n\"The SOJ also decided to settle in Redhaven because Wyoming has the single most business friendly tax climate of all fifty states and it keeps getting better. Wyoming is almost a tax haven.\"\n\n\"The congregation grew, the town prospered and people lived comfortably but by the time Reverend Ronald Hayes' father was running the show he realised that there was more money to be made by investing in certain lucrative illegal businesses which the SOJ were ideally placed to do.\"\n\n\"Look where we are Mila. We're way out here in the mid-west and Redhaven is almost isolated but well situated for the activities the Reverend had in mind.\"\n\n\"Without interference from the east coast or west coast crime syndicates and later the burgeoning cartels down south, the SOJ could get into the lucrative drug market. The ranch was a perfect cover.\"\n\n\"As the agricultural science became better and technology improved, marijuana plantations producing tons of product were established on the ranch using hydroponic growing techniques and temperature controlled greenhouses. The problem for the SOJ has always been distribution. They have no interest in getting involved in the street level trade or running dealers. They just want to sell their product to organisations who have the financial resources to pay the asking price and the ability to take bulk shipments.\"\n\n\"So it's all about weed?\" Mila was nonplussed.\n\nPeter held up a finger.\n\n\"Think about what you've seen here Mila. A closed community bound by bizarre and eccentric religious beliefs, very few outsiders are allowed in and then only for fleeting visits. An almost inexhaustible supply of natural resources in an area that is effectively isolated.\"\n\n\"But look closer. The road in and out of Redhaven is probably the best maintained highway in the state and there is a disproportionate amount of commercial traffic that mostly originates or terminates at the ranch.\"\n\n\"Redhaven airport is a restricted general aviation airport with a runway capable of handling large aircraft but no commercial airlines operate from here, it is restricted to charter and private aircraft.\"\n\n\"I get it. They grow large quantities of weed out at the ranch and use trucks and planes to distribute it,\" Mila laid her hands flat on the table.\n\nPeter nodded.\n\n\"The SOJ would never make enough money from their legitimate businesses to live the lifestyle they do.\"\n\nMila paled.\n\n\"That doesn't explain why we are here or should I say, why you are here?\"\n\n\"When I put this deal to you I told you I was in trouble financially right?\"\n\nMila nodded.\n\n\"Well I was in more than just financial trouble Mila.\"\n\n\"I didn't rise to the top of the corporate ladder by just being a savvy financial impresario and business entrepreneur. I know people, the right people.\"\n\n\"What I do is find ways and means to bring these people together, even though most of them will never actually meet in person.\"\n\n\"Sure, I can help you hide millions of dollars created by illicit means. I can close the holes through which certain government agencies would like to peek, but my main job is keeping the wheels greased so everyone gets along and everyone gets rich. I'm a special kind of broker if you like.\"\n\n\"I know the right people in the right places, I know which wheels need greasing. I know the right business magnates, government stooges and more importantly the top guys in the cartels and organised crime and I have the innate ability to have them cooperate without ever having any legitimate association. I'm the spider in the middle of the web if you want an analogy.\"\n\n\"My god Peter!\" Mila was shocked.\n\n\"Don't my god Peter me Mila! Where do you think the money comes from? You spend it like it like a drunken sailor on liberty and you watch that account of yours in the Cayman Islands get bigger every month.\"\n\n\"I deliberately kept you from the truth to protect you; at first because I didn't trust you, but since we've been true partners I did it because I love you.\"\n\n\"But what about the FBI and DEA agents at LAX?\" Mila asked.\n\n\"I can only do so much, grease so many wheels. I have contacts in the highest levels of government, we control a number PACs and political committees and I have contacts across the spectrum of law enforcement but there are still elements we can't control.\"\n\n\"In those instances, the SOJ relies on intelligence from their insiders. Within minutes of you being apprehended in LA we knew about it and the SOJ dispatched Duke to fix the problem.\"\n\n\"Is that what I am now Peter, a problem?\" Mila almost wished she'd never asked to know the truth.\n\nThe conversation was interrupted when Sarah Jennings came through the back door. Today she wasn't wearing her maid's uniform instead she was wearing an expensive suit with a short skirt, long jacket, nylons and heels.\n\n\"Hi Sarah,\" Peter and Mila sung in unison.\n\nSarah's demeanour had changed. She was normally demure but today she seemed very assertive.\n\n\"Get dressed, both you. The Reverend is paying you a visit.\"\n\n\"What the hell!\" Peter interjected.\n\n\"Peter, I'd like you to remain down here while Mila and I go upstairs. I'll help her dress and we can girl talk for a while. When we've finished it won't take long for you to throw on a suit and tie will it?\" Sarah smiled.\n\nThey were both astounded. They had never seen Sarah behave this way. She was confident and controlling and they both realised that something had changed.\n\nBefore Mila could respond Sarah was guiding her upstairs to her bedroom.\n\n\"I can dress myself Sarah. I don't need your help,\" Mila was petulant.\n\n\"You know I like to help you Mila. Sit down and do your makeup and I'll pick you out something to wear,\" Sarah smiled at Mila is if this was an everyday occurrence.\n\nSarah allowed her jacket to fall open so that Mila could see the small automatic pistol Sarah had clipped to the placket of her skirt. When Mila saw it, Sarah gave her a knowing look and just nodded.\n\nMila found it hard to concentrate, a thousand thoughts were running wild and she didn't do the best job with her makeup. Sarah laid out a suit for Mila, Armani, similar to her own, and a white silk blouse, she also laid out sheer, taupe hold-up stockings and a red satin bra and panty set and pair of Jimmy Choo high heels. Wherever they were going, they were dressing corporate, even if the lingerie wasn't.\n\nMila dressed and Sarah chatted to her as if it was just any other day, obviously her job was to keep Mila calm but also to make sure she didn't do anything stupid.\n\n\"Come on, we can have a cup of coffee downstairs, the Reverend will be here in thirty minutes,\" Sarah picked up Mila's jacket and followed behind her.\n\nWhile they were upstairs Peter had taken a phone call and he looked grave. He gave Mila a look that said 'keep calm' as he passed them on his way upstairs to dress.\n\n\"What's going on Sarah?\" Mila asked as Sarah busied herself making coffee.\n\nSarah didn't answer until she had poured them both a cup. The coffee was fine but to Mila it tasted bitter and she had a hard time drinking it but she forced herself to remain calm.\n\n\"Recent events have changed the dynamic so to speak. There is no longer the need to keep up the charade Mila, you know all about us, well nearly all; and we know all about you.\"\n\nMila paled. What did that mean?\n\n\"I can't say much more, it's the Reverend's place to tell you what he and the Council of Apostles have in the making,\" Sarah sipped her coffee as if it was any other weekday morning.\n\n\"What did you mean by you know all about me?\"\n\nSarah just gave Mila a canny grin.\n\nPeter came downstairs dressed in a suit. He always looked so confident, so commanding and assertive but now he looked like he was far from in control, and even more worrying, he looked scared.\n\nA small convoy of three, six-passenger limousines pulled up in the driveway. The vehicles were black, with heavily tinted windows.\n\n\"Let's go,\" Sarah nodded at the front door.\n\nMila and Peter were caught off guard, expecting that whatever business was about to be transacted would be taking place in their home. Mila took Peter's arm and went outside with him.\n\n\"Stay calm. I have no idea what this is about but it's broad daylight in a busy town, I'm sure nothing sinister is going to happen, I guess we are going to conduct our visit with the Reverend at the Supreme Temple.\n\nPeter could not have been further than the truth.\n\n\"You're with me,\" Sarah took Mila over to the second of the limousines where a besuited, powerfully built man stood holding open the rear door.\n\nPeter was led to the last vehicle in line by another aid and he looked over at Mila before he got inside.\n\n\"Remember what I said about staying calm. I love you,\" Peter said before he climbed into the vehicle.\n\nMila climbed into the limousine which was cool and dark. She was surprised to see the Reverend Ronald Hayes sitting in the back of the car facing her as she took the rear seat. He made no attempt to conceal his brazen ogling as she and Sarah clambered inside, short skirts akimbo.\n\n\"Good morning Mrs Randal, good morning Sarah,\" the Reverend smiled as he welcomed them both and Mila cringed when the Reverend gave Sarah a kiss that was far from pious.\n\nMila was about to say something when the Reverend held up a finger. He was a man used to being incontestably obeyed.\n\n\"I will do all the talking for now Mila. May I call you Mila?\" it was a rhetorical question.\n\nMila sat in the back seat facing the Reverend and Sarah. The security screen between the passenger compartment and the driver was up. \n\n\"First off I want to assure you that all is well; so far that is. Peter is in the car behind us with Duke Russell who you have met,\" The Reverend grinned. \n\n\"We know all about you Mila. I won't use the name Miles because I know he no longer exists.\"\n\nMila thought she was going to faint.\n\n\"That was a neat trick that you and Peter pulled. We knew his wife was going to leave him before we hired him and for that reason alone we were going to renege on the deal we had made with him. Then your sister saw the light or saw the money; it doesn't matter which, we knew that they had reconciled. Or so we thought. We took our eye off the ball so to speak.\"\n\n\"The preliminary visit they made to Redhaven before the contract was signed went well and all parties were content.\"\n\n\"Of course we had no idea that Mila had run away with her yoga instructor when she returned to Los Angeles. Your sister is backpacking around Australia by the way in case you are interested. It seems that she has lost interest in the yoga instructor,\" the Reverend chuckled.\n\n\"So you became the surrogate. Our little sleeper soon found out about the ruse.\"\n\nThe Reverend had his hand on Sarah's thigh and he patted it and smiled at her.\n\n\"Of course we also confirmed this by other means. We have access to your phones and monitor all of your online activity. It helps that we have the only Telecom in Redhaven but the bugs Sarah placed on your devices assisted us in monitoring you when you were outside of Redhaven.\"\n\n\"Sarah honey, please give Mila a drink, she looks like she is about to faint and we haven't even got to the good part of the conversation yet.\"\n\nSarah opened a bottle of cool spring water and passed it to Mila who gulped at the contents.\n\n\"I want you to understand that at this stage my Apostles were deeply divided as to whether to keep you both in Redhaven or to have you disposed of. A car accident, a house fire, someone even mentioned a murder suicide, but common sense prevailed, with my guidance of course.\"\n\n\"You have to understand that some of the Apostles still find you an abomination. But some, including myself, find you fascinating.\"\n\n\"Then Sarah and I watched your marriage of convenience become a true bond. When you went to the Philippines to get those rather lovely breasts and Peter followed and you came back committed to each other and when you stopped your philandering with Steven Boutros and those appalling strangers in those awful Los Angeles dens of iniquity I was vindicated.\"\n\n\"But you are such an inquisitive creature aren't you?\"\n\n\"Even with the wealth you have amassed you continued to question things that you had no right to question. To quote Gordon Gekko in one of my favourite movies, greed is good. Greed is a tool I use to good effect to keep my flock content. But even as an outsider living in the lap of luxury, with no need to question where the money came from, you couldn't keep your beak out of my business and question my tenets.\"\n\n\"Of course we listen to everything that is said in your house and we know that as of this morning you think you know everything. But you don't. Why? Because even Peter doesn't know everything. But you soon will.\"\n\n\"As the rather crude saying goes, I'm going to lift my skirts. I'm going to show you everything and answer all your questions and by the day's end both you and Peter are going to have to make a decision; a decision that will determine your future.\"\n\n\"Now you can ask your questions,\" the Reverend smirked.\n\n\"You hacked our phones and email?\" Mila asked.\n\n\"Yes and we have GPS trackers in your cars. How do you think my boys knew you were coming when you drove out to the ranch?\"\n\n\"Ok. A question for Sarah. Why does a bus loaded with spinsters go out to the ranch every Sunday?\"\n\nSarah looked at Ronald and he nodded his consent.\n\n\"To work, silly. I told you I work six days a week.\"\n\n\"We go out there to service the men working on the ranch.\"\n\n\"Service?\"\n\n\"Oh don't be so na\u00efve Mila, you know what I mean.\"\n\nThe Reverend interjected.\n\n\"Single women in our community are considered common property. You yourself have witnessed men taking their pleasure with them whenever they wanted,\" Ronald once again patted Sarah's knee. \n\n\"I told you that women who are not Paired by the age of twenty have to make a choice. They can leave the community or stay here abiding by the tenets.\"\n\n\"You still don't get it Mila. This lifestyle we live is generational and ingrained from birth, we grow up knowing what lies ahead for us and we each make a choice. You jokingly referred to us being like the Amish but in that respect we are. Men and women get to make a choice during our Pairing years whether to go or stay. As you can see, most stay.\"\n\n\"But the bruises?\" Mila asked astounded at the revelation.\n\n\"Some of the cowboys can be a bit rough but if they overstep the mark they are punished.\"\n\n\"But you let men use your body whenever they want to? How can you do that?\"\n\n\"I don't let them; I permit them to. I have the right to say no,\" Sarah replied.\n\n\"Really?\" Mila sounded doubtful.\n\n\"Yes I do. And if the man wants to complain he can take the matter to the Council of the Apostles.\"\n\n\"Have you ever said no?\" Mila asked.\n\n\"I've never needed to,\" Sarah smirked and stroked the Reverend's hand which was still caressing her knee.\n\n\"The men on the ranch, the cowboys, are they part of your congregation?\" Mila asked.\n\n\"Young men who elect to leave the congregation of the Sons of Jehovah are offered a onetime opportunity to work at the ranch. The job is very well paid and there are benefits,\" the Reverend smirked at Sarah who returned his smile.\n\n\"But they are not part of my congregation and they may not reside in Redhaven. They fly in and fly out like contract workers, the difference being that forfeiture on their contract results in consequences that you probably wouldn't care to know about.\"\n\n\"The messy parts of our business are best left to people who are experts in that kind of thing. The cartels have a way of dealing with informers that is quite educational to those who work in dangerous occupations such as the growing and manufacturing of illegal substances on a large scale,\" Ronald said with some finality. \n\n\"Ah here we are. The practical part of your education is about to begin; a little show and tell shall we say.\"\n\nThey were approaching the gates to the ranch.\n\nThe guards saluted the Reverend and his small convoy and then closed the gates behind them.\n\n\"This is actually a working ranch that makes a decent profit from the cattle we raise,\" The Reverend waved a hand at the expanse and herds of steers wandering on the range. \n\nThe road was dead straight and they were soon approaching the low set buildings that Mila had seen in the distance the first time she drove out to the ranch. As they got closer it became obvious that the buildings were far more substantial than they appeared to be from the gate.\n\n\"These buildings are the typical type of buildings you would expect to find on a working cattle ranch. They constitute buildings that house the agricultural equipment, maintenance sheds, cattle pens, feed houses, bunkhouses, a kitchen and a mess and other cattle rearing paraphernalia,\" The Reverend nodded as the procession entered a large courtyard next to the building complex.\n\nThe car stopped and the chauffer got out and opened the door for them. Sarah and Mila once again found it difficult to maintain decorum alighting from the vehicle wearing short skirts but Ronald and the small assembly of men did not seem to mind one bit. \n\nWhat followed was a show and tell tour of the ranch conducted from two four-seater golf carts. Mila and Peter were reunited and almost clung to each other in the back of the cart as they were taken on an excursion hosted by Reverend Hayes who drove, accompanied by two armed guards in the second cart. Sarah was escorted to the mess hall to wait. The building had a large sign out front and written in stylised writing were the words Chuck Wagon.\n\n\"There is a permanent staff of around twenty to thirty. Some work the legitimate side of the ranch and are really just cowboys and they are all boys who elected to leave the congregation of the Sons of Jehovah but want to work for the church for the good wages and benefits.\"\n\n\"There are about the same number who work on the other side of the business, including a horticulturist, a couple of chemical engineers, and the men who do the growing and harvesting of the crop and other men who manufacture other products.\"\n\n\"Meaning marijuana,\" Mila interjected.\n\n\"I'll continue,\" the Reverend didn't like to be interrupted and Peter squeezed Mila's hand encouraging her to keep quiet.\n\n\"There are a few ancillary staff, cooks, mechanics, security and so on. They are all housed in the bunkhouses over there and are fed and take their recreation in the Chuck Wagon.\"\n\nThey were shown massive grow houses where fields on marijuana looked lush and green. The Reverend explained how the plants were in various stages of maturity, how it was harvested and prepared for dispatch. There were two huge climate-controlled barns used to warehouse the marijuana before it was shipped.",
        "Mila and Peter were both stupefied with what the Reverend revealed next.\n\nThe underground meth lab was an amazing sight. The Reverend led them down a flight of stairs and they went through an airlock and stood on a viewing platform watching men in protective clothing manufacturing methamphetamine. The Reverend droned on about acquiring precursors, the manufacturing process and the state of the art technology employed which ensured the product was manufactured to maximise profitability.\n\nMila's head was spinning by the time the tour was completed and they were driven back to the waiting limousines where Sarah was waiting for them. This time Peter and Mila were bundled into the same car as the Reverend and Sarah, the convoy had reduced to two vehicles.\n\nPeter and Mila had remained pretty much silent throughout the tour, partly from fear but mostly from amazement at the extent of the Sons of Jehovah drug manufacturing capability.\n\n\"So Peter, you know all about how the Sons of Jehovah make the millions of dollars that you help us park offshore, put through our legitimate businesses and hide from the authorities. I'm surprised that you never figured out that we could never make enough money from just the production of marijuana,\" the Reverend said as Sarah passed around bottled spring water.\n\n\"And you, miss nosey-britches, you know things that you were never meant to and probably don't want to. I know that Peter told you that knowledge is power but that it is also dangerous.\"\n\n\"So why the tour Ronald, why did you lift your skirts?\" Peter asked the question both he and Mila wanted answered.\n\n\"Look Peter you already knew enough about our businesses to make your contribution fundamental to our financial success but we were prepared to allow to leave when your contract was up. But you are a victim of your own success and have made yourself indispensable to us.\"\n\n\"As for the beautiful but unique creature beside you Peter, she poses us a problem. She didn't really know too much about our business until you for some reason decided to pander to her curiosity and tell her about, shall we say, the dark side of our business.\"\n\n\"I told you that sometimes corporal means are a better method of keeping women in line. The Apostles are the only church members who have any idea how we make our money and they tell their wives very little. The lower Orders of the church are sheep; they know nothing of what we do on the ranch.\" \n\n\"There are very few women that we trust with such confidences, Sarah being one.\"\n\n\"But you bus spinsters out to the ranch every Sunday!\" Mila interposed.\n\n\"They only see the Chuck Wagon and the bunkhouses. They know not to ask any questions,\" Sarah piped in.\n\n\"So what are you; their den mother?\"\n\nSarah just smiled and deferred to the Reverend.\n\n\"Getting the conversation back on track. You both now know the finite details of our operation so you must realise that neither of you could ever be allowed tell anyone what you saw today.\"\n\n\"Look, we aren't your: blessed are the meek, turn the other cheek kinda Christians. We're more your: eye for an eye, whatever a man sows, this he will also reap, type Christians.\"\n\n\"The easy solution would be for you both to simply disappear, that would be very easy to accomplish but I'd rather keep Peter alive and well and doing for us what he does best. That will of course mean that you Mila keep up the charade of being his loving wife, although it's hardly a charade any longer is it?\"\n\nMila looked at Peter and gave him a wan smile.\n\n\"We're heading back to the Supreme Temple where I have called together the Council of the Apostles. Of course I always have the final say in how my church is run but it's always best if I have their support.\"\n\n\"When we get there you will have a decision to make. This decision will likely be the most important decision you have ever made and it will have to be made together and it will be binding. Mila you have already made one life-changing decision, you are about to make another.\"\n\nThe Reverend shut down any further conversation and kept himself amused by making small talk with Sarah whilst openly fondling her and she him.\"\n\nMila and Peter were astounded. Their lives hung in the balance and the Reverend Ronald Hayes amused himself by canoodling with their housemaid. The situation was both bizarre and incomprehensible.\n\nWhen they arrived at the Supreme Temple Peter and Mila were hustled into the Reverend's private office.\n\nThe Reverend took a seat behind his desk and Peter and Mila sat in the comfortable wing-back chairs, Sarah took a seat beside Mila.\n\n\"Our children are raised and schooled in the tenets of our religion and as I have explained, at maturity they decide to stay or leave,\" the Reverend continued the conversation they were having in the car.\n\n\"You know about our three Orders, the Acolytes, the Patriarchs and the Apostles. Our congregation is a hierarchical pyramid both religious and secular. The higher your standing in the pyramid the higher your rewards both divine and worldly.\"\n\n\"My great grandfather devised a religious order that satisfies the needs of men, to keep them comfortable, content and loyal.\"\n\n\"It's easy to keep men happy. Give them what they want: money, sex and power. Top that off with a belief system that is ingrained from birth and you can build utopia, which is what Redhaven is to the Sons of Jehovah.\"\n\n\"You know how the money and power parts of our religion work and you have some inkling as to the sex, but not the full picture.\"\n\n\"There are cults out there where the guru, swami, whatever name they give themselves, has the right to mate with any member of the female congregation. How the male members of these faiths condone that is beyond my comprehension.\"\n\n\"But here, as you already know, there is a practice that allows men to share in the bounty of the women in their Order. Once a couple are paired the man may decide to share his wife with another man of the same Order and he may partake of that man's wife.\"\n\n\"Wife swapping!\" Mila blurted out.\n\n\"Nothing as crude. It is part of our tenets and keeps men and women from the temptation of becoming unfaithful, we call it the sharing,\" the Reverend corrected her.\n\n\"But the women have no say,\" Mila retorted.\n\nPeter took her hand and squeezed it. The last thing he needed right now was a combative Mila.\n\n\"The women have already decided when they Paired and entered the church of the Sons of Jehovah. Our church is not called the sons and daughters of Jehovah.\"\n\n\"I tell you this Peter and Mila so that you know what awaits you should you join our Order. I am offering you what I offer my Apostles, money, sex and power.\"\n\nPeter and Mila look at each other with stunned amazement.\n\n\"We will double your wages and you Peter will live like a king and Mila, you will be his queen. So here is your one time offer to join the Sons of Jehovah.\"\n\n\"Should you elect to join us I will put your names in the Book of Pairings to sanctify your marriage in our church. It is that simple.\"\n\n\"And the alternative?\" Peter asked.\n\nThe Reverend steepled his hands under his chin and gave them both a steely stare.\n\n\"Sarah and I shall leave you to deliberate and then you will advise the Council of the Apostles of your decision.\"\n\nThe Reverend stood up from behind his desk and Sarah arose with him.\n\n\"We have already decided,\" Mila declared.\n\nPeter was shocked and Mila gave him a look that indicated that he was not to interfere.\n\n\"Where do we sign?\" she asked.\n\nMila stood and leaned down and offered her hand to Peter who took it and arose.\n\nThe Reverend walked over to the Book of Parings and was joined by Sarah.\n\n\"Are you sure? I need to hear from both of you?\" Reverend Hayes said gravely.\n\n\"I am,\" Mila replied.\n\n\"I am,\" Peter also replied.\n\nThe Reverend began to write in the Book of Pairings with an ink pen which he dipped into an inkwell set into the plinth.\n\n\"Will you witness?\" he said to Sarah.\n\n\"I'd be delighted,\" Sarah beamed.\n\nHe offered the pen first to Peter who looked down into the tome and saw the names of Peter and Mila Randal entered into the Man and Wife columns respectively. He signed against his name and then Mila signed. Sarah signed as witness and finally Reverend Hayes signed with a flourish.\n\n\"Welcome to the congregation,\" the Reverend beamed.\n\nHe shook Peter's hand firmly and kissed Mila on the mouth, holding her close, the kiss lingering. Sarah kissed Mila's cheek and she gave Peter a long lingering kiss.\n\n\"That's it?\" Peter asked almost incredulously.\n\n\"That's it. Of course you will both require religious education but Sarah can school you in your home. She will first educate you in our order of service so that you will not be embarrassed on Sunday when you are formally presented to the congregation,\" the Reverend explained.\n\n\"Tonight you will lie together as man and wife for the first time under the Order of Apostles of the Sons of Jehovah and tomorrow, as is the custom, you will host your first communal dinner for members of your Order.\"\n\n\"Peter you will decide who to invite but I suggest that you invite those in the Order that you are already comfortable with. After all, it will be the first time that you partake of the sharing. Sarah will assist you with the preparations and tell you what to expect. Now come and meet the rest of the Apostles,\" the Reverend took them each by the elbow and guided them to the door leading to the Council chambers.\n\n*****\n\nAfter their resounding welcome to the Order of the Apostles and congratulations from all, some more enthusiastically than others, Peter was required to remain behind to conduct business with the Council while Duke Russell was in attendance.\n\nMila was escorted to the limousine with Sarah and they went home.\n\nAs soon as they were inside Mila went straight upstairs to her bedroom without saying a word to Sarah. She took off her jacket and sat on the bed feeling numb. She knew that she and Peter had escaped death but at what cost? They were now members of the congregation of the Sons of Jehovah, committed for life.\n\nThere was a soft rapping on the door and Sarah entered holding two gin and tonics. She sat next to Mila and offered her a glass which she took silently.\n\n\"Do you mind if I drink?\" Sarah asked.\n\nMila burst out laughing. It started as a deep down chuckle, became a loud cackle and finally a shriek. The shriek metamorphosed into a sob and then a crying jag. Sarah let Mila exhaust her emotions and sat silently beside her on the bed. When Mila began to calm down Sarah took Mila's drink and put it down with her own on the bedside table. She caressed Mila's back affectionately and Mila fell into her arms and cried on her shoulder.\n\nMila stopped crying suddenly and disengaged from Sarah.\n\n\"Get my cigarettes. I'm sure you know where they are,\" Mila said through gritted teeth.\n\nSarah took off her jacket and hung it over a chair and went into the wardrobe and took down the shoebox where Mila kept her Marlboro Menthol Lights, her lighter and a smokeless ashtray. When Mila smoked she usually did so out on the balcony but today she could care less. Sarah could sense the ambience and she took a cigarette and lit it and gave it to Mila along with her drink. She shook the packet at Mila, signalling that she would like a cigarette too. Mila shrugged her shoulders indicating that she didn't care.\n\nSarah lit up and sat on the bed, putting the ashtray between them.\n\n\"Why are you still here?\" Mila finally broke the silence.\n\n\"I'm still your housemaid,\" Sarah whispered.\n\n\"You mean Ronald's spy,\" Mila spat.\n\n\"Not any longer. There is no need.\"\n\n\"So the cameras, the bugs the tracking devices; they will all go too?\" Mila said caustically.\n\n\"There are no cameras Mila. The only microphone is downstairs and it will soon be gone, as will the gadgets on your phones and other devices. Someone will do it discreetly. All Apostles have tracking devices on their vehicles and phones, it's a safety precaution not a means of spying. It worked for you at LAX.\"\n\nMila grunted.\n\n\"If you are no longer comfortable with me Mila I can be replaced. But I hope you don't. I really like you, I've always thought we were friends.\"\n\nMila turned to Sarah; unconcealed rage on her face.\n\n\"I know that you always thought I was a spy but we shared so much. I told you things I shouldn't have but I will always be faithful to the tenets of the SOJ, I had a job to do.\"\n\n\"You knew I was transgender from the start,\" it wasn't a question.\n\n\"Not initially but I began to suspect. You were paranoid about me never seeing you naked or helping you dress. You didn't want me anywhere near your underwear but I found the brassieres with the prosthetic inserts and your soiled panties had no evidence of vaginal discharges.\"\n\n\"We had no privacy at all did we?\" Mila shook her head.\n\n\"I was told to search everywhere and search often, especially when you first arrived. I told Reverend Hayes my suspicions after the first week or so but by then he already knew, probably from your conversations with Peter, your phone calls and your online activity which were all being monitored.\"\n\n\"Not that I have any say in the matter but I was one of the ones who supported you. When I reported to the Reverend, I told him that despite your deception that I thought you were a decent person and could be trusted.\"\n\n\"Hah! We've all been lying to each other for two years, don't use the word trust!\"\n\n\"Why worry about the past? Your life is now ordained, you can have anything you want, go anywhere you want, do anything you want within reason.\"\n\n\"I'm trapped in a gilded cage, a prisoner in paradise,\" Mila responded.\n\n\"Oh pooh to prisoner in paradise Mila! You are the envy of every Acolyte and Patriarch; they are happy with their lot but everybody always wants more if they can get it. Stop the pity party.\"\n\nMila couldn't help smiling when Sarah used the same mild expletive she had used on Sarah when asking about her trip to Bali. \n\n\"Can I say something to you that is true?\" Sarah asked butting out her cigarette.\n\n\"Yeah... let's have some truth for a change,\" Mila crushed out her butt.\n\n\"I was genuinely happy when you went to get your breast implants; I knew that meant that you were committed to being Mila for the rest of your life. I was even happier when I witnessed you and Peter falling in love with each other. I think I knew that Peter loved you before he did.\"\n\n\"The way his attitude to you changed over time, how he came to revere you. The little gestures, the way his face lit up when you entered the room, the way he came to genuinely care for you. Being an outside observer, I think I had the opportunity to see things differently than you or Peter did; I could see the whole.\"\n\n\"I was overjoyed when you two paired today and being your witness is a life-long privilege that I will treasure. Despite the subterfuge I think I have grown to love you both.\"\n\n\"Can you deny that you have been happy for the last two years?\" Sarah asked.\n\n\"There is that I suppose. I was wondering what would happen between Peter and I when he finished here in Redhaven, now I'm stuck with him for life,\" Mila smiled timidly.\n\n\"You don't mean that. You love him I can tell. Also, you do realise that you are not technically stuck with just him for life, I have to tell you about the sharing.\"\n\n\"Oh yeah, that's right. I get to be passed around, that's something to look forward to. At least because I'm a freak there won't be that many that want me,\" Mila bowed her head.\n\nSarah gently lifted Mila's head and leaned in and kissed her cheek softly.\n\n\"That is so not true. The women of the Sons of Jehovah gossip just as much as anybody else. There has been plenty of curiosity about you amongst the Acolytes and their wives and plenty who have speculated what it would be like to lie with you.\"\n\nMila was only human, her interest was piqued and Sarah could tell.\n\nShe took Mila's hand in her own.\n\n\"You know how beautiful you are, not just physically. Desire is not always just lust,\" Sarah whispered.\n\n\"I'm a money-hungry mercenary who is prepared to do anything to survive,\" Mila replied softly.\n\n\"And keep your husband safe. And ensure that both have a wonderful future. You are beautiful Mila,\" Sarah stroked Mila's cheek.\n\n\"You keep saying that and I...\"\n\nSarah cut Mila off by placing her lips on Mila's and gently kissing her. Mila didn't move, she was caught by surprise at the gesture.\n\nAt this moment in Mila's life she needed affection, she needed to be comforted, she wanted to feel safe, but Peter wasn't here. Her closest friend for two years was kissing her and it eased her pain, it soothed her, it seemed to be exactly what she needed.\n\nMila relaxed. For the first time that day she felt calm. Sarah's soft lips against hers felt soothing and appeasing, she returned the kiss and she felt as if a huge burden had been lifted from her. She didn't need to think about anything, she could just seek comfort in Sarah's soft caress.\n\nSarah put her hand on Mila's shoulder and pressed harder and Mila turned towards her and they embraced. This was the juncture, the turning point and they could both sense it. Do they break the kiss and profess that it was a comforting gesture between two friends or do they continue and see where it leads?\n\nMila opened her mouth a little and Sarah tentatively offered the tip of her tongue. Mila sensed Sarah's tongue slip into her mouth and she met it with the tip of her own. The women teased each other, softly caressing their tongues together, tasting each other's lipstick, inhaling each other's scent.\n\nA cloud passed over the sun and the room darkened. Mila reached out and found the remote control on the bedside table and flicked the switch to lower the blinds.\n\nThe darkened room nurtured their intimacy and the lingering soft kiss became progressively more eager, more vehement as their lips pressed harder.\n\nThey allowed themselves to fall onto the bed, lying side by side, legs overhanging the bed. Mila looked down into Sarah's soft brown eyes and saw tears. She lowered her face and kissed Sarah softly and opened her mouth a little. Tongues once again met explored, tentatively at first, then amorously.\n\nMila straddled Sarah and stroked her face softly as they kissed, she delicately drew her fingers down Sarah's long neck and caressed the velvety flesh. Sarah gasped. Mila's hand continued downwards to Sarah's blouse and began to slowly unbutton it. Sarah put her hand over Mila's and stopped her.\n\nThey broke the kiss.\n\nSarah looked up at Mila, her eyes wet and gleaming.\n\n\"Are you sure?\"\n\nMila lowered her face and kissed Sarah, her response being physical rather than spoken.\n\nThey could both sense that the yearning they had nurtured and supressed deep down igniting into passion. They kissed deeply and amorously, any pretence that they were simply consoling each other was gone. They unbuttoned each other's blouses and helped each other out of their skirts.\n\nMila stripped Sarah down to her black lace brassiere, satin-and-lace boy-leg panties, smoky-grey sheer hold-up stockings and black high heels. Mila was left wearing sheer, taupe hold-up stockings and a red satin bra and panty set and a pair of cherry-red high heels.\n\nTheir need to embrace and connect with each other forestalled them undressing further and they both loved the feel of satin and lace caressing their skin.\n\nSarah lay on her back with her head on the pillows and Mila climbed on top of her. Crouched over Sarah with her blonde shag hanging over her smudged eye makeup and smeared cherry-red lipstick gave Mila a sexy predatory look that Sarah found exciting. Her heart was pounding in her chest.\n\nMila noticed the rise and fall of Sarah's chest and her ragged breathing; she too felt her heart pumping and her breathlessness. Mila lowered her face to Sarah's and crushed her lips, driving her tongue deep inside her mouth. She eased Sarah's breasts from the cups of her bra and used her hands on them. They were larger than Mila's but just as firm and Mila felt Sarah's nipples harden as she stroked and gently squeezed them.",
        "Sarah reached up and unclasped Mila's brassiere and caressed Mila's small firm breasts. Mila's nipples hardened and they both sighed contentedly as they kissed and fondled each other.\n\nSarah moved her hands to Mila's waist and paused and then her hands slid down to her behind and she squeezed Mila's firm buttocks. Her fingers drifted to the front of Mila's panties and stopped. They stopped kissing and Sarah looked up at Mila inquisitively.\n\nMila took Sarah's hand in hers and guided it inside her panties and between her legs. Sarah found the surgical tape there and looked up Mila questioningly, her brow furrowed.\n\n\"Rip it off,\" Mila whispered.\n\nSarah's hand was miraculously filled with a long, thick, hard throbbing cock and a look of amazement crossed her face.\n\n\"I want to see it,\" she gasped.\n\nMila lifted herself onto her hands and knees and Sarah looked down between their bodies and saw Mila's magnificent erection poking out the front of her panties. She squeezed it and Mila groaned.\n\n\"It's wonderful,\" Sarah sighed.\n\n\"I want it in me... now!\"\n\nMila eased aside the gusset of Sarah's panties and nudged the glands of her penis into the folds of Sarah's cunt. A look of serenity passed over Sarah's face and she lifted her legs and wrapped them around Mila's, raising her pubis, wanting Mila to impale her.\n\nMila obliged and slowly skewered Sarah on her cock. Sarah bit Mila's shoulder to silence the scream as her first orgasm erupted from deep within her.\n\nBeing fucked by this beautiful woman who possessed a huge phallus and whom she had secretly adored and lusted after for so long illicited a deep and powerful climax.\n\nMila felt Sarah's vagina palpitate as she came. Sarah's cunt was hot and wet and tight and Mila began to fuck her, driving her cock deep inside and pulling it all the way out and then impaling her, gradually building the tempo. Sarah and Mila kissed, nipped and scratched at each other as their lust became an unstoppable race to orgasm. Sarah opened her legs wide and wrapped them around Mila's waist, the sensation of her diaphanous nylons adding to the mix of carnal arousal and stimulation.\n\nSarah arched her back as Mila slammed her cock as far inside her as it would go and unleashed a torrent of hot semen. Mila clung to Sarah and writhed as she unloaded her issue. Sarah pushed her groin hard against Mila's pubis and ground it so that her clitoris was sufficiently stimulated to unleash her second orgasm.\n\nThey gasped into each other's mouths and clung to each other, riding their climaxes until they were spent and exhausted.\n\nAfterwards they lay side by side, drained and satisfied, their fingertips touching, neither speaking.\n\nSarah rolled onto her side and looked down lovingly at Mila, she brushed the platinum fringe from her eyes. Mila's eyeliner and mascara were smudged from crying and the sex.\n\n\"You look like a Panda. A very pretty sexy panda,\" Sarah smiled.\n\nMila returned the smile.\n\n\"Have we just broke the tenets or something? I still don't know the rules,\" Mila's brow wrinkled.\n\n\"I told you where spinsters stand in our community, we are common property to be enjoyed as men see fit. It is not unheard of for a man to take a spinster into his bed while his wife is present. Then she may partake in the pleasure from their combined union,\" Sarah replied.\n\n\"A fancy way to say that threesomes are ok, but can wives and spinsters, you know, get it on alone?\" Mila asked.\n\n\"Sharing creates appetites that need to be nourished. Husbands may let their wives share with other men they approve of and may also allow wives to take pleasure with spinsters.\"\n\n\"You must understand that the tenets are exacting and harsh in this regard. If a wife was to share herself without her husband's permission she can be excommunicated at his request. Excommunicated women may bear resentment to our church and pose a threat, depending where they stand in the Order,\" Sarah didn't need to explain further.\n\n\"This is a very rare occurrence you understand. The fruits of sharing are bountiful and encouraged, there is seldom need for a woman to go outside of the tenets to satisfy her needs.\"\n\n\"But I didn't ask Peter's permission to have sex with you,\" Mila mused.\n\n\"Yes but you are only recently Paired and not yet educated, there are always exceptions that prove the rule. Once I explain to you both the tenets of sharing you may ask Peter's permission,\" Sarah lazily circled Mila's belly-button with her fingertip.\n\n\"Sounds to me like you are justifying us having a sneaky afternoon shag,\" Mila sniggered.\n\nSarah's fingers continued past Mila's belly and circled her burgeoning erection.\n\nSarah leaned into Mila, brushing Mila's lips with hers.\n\n\"Shall I stop?\" Sarah began to slowly stroke Mila's hardening penis.\n\n\"I'm sure Peter will say yes when I ask him,\" Mila grinned and opened her mouth to Sarah's tongue.\n\nTo be continued"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "girl on girl",
        "nylons",
        "panties",
        "pantyhose",
        "skirts",
        "stockings",
        "tanssexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-surrogate-ch-05-1"
}