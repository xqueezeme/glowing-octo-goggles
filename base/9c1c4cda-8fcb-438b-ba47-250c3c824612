{
    "title": "Anything for You Ch. 09",
    "pages": [
        "Well, here it is, the last part (finally). Sorry about the wait - in fact, I'll apologise now for the references to Christmas. If I'd got this finished when I meant to, they'd have been more appropriate. I should probably warn you that this is a long chapter - 6 pages, I think. In fact, it almost certainly should've been 2 chapters but I promised this chapter would be the last one and I figured you'd hate me if I split it. As usual, it took a bit longer to tie up the loose ends than I thought it would... \n\nHuge thanks to everyone who's read this story from the beginning, for all the lovely comments and emails you've sent me - believe me, they really do keep me going! - and for being so patient with me. And huge thanks also of course to the usual suspects who've kept me going through thick and thin - JB and Kate. I couldn't do this without you xx\n\nLily\n\n-x-\n\n*\n\nOf course, by the time I got back to the shop, my adrenalin-fuelled euphoria had dissipated to guilt-ridden despair. Alice took one look at me as I stumbled through the door and was there in an instant, her arms around me. \"No need to ask how that went,\" she said, before exclaiming, \"Sam, you're soaked through!\" then, \"Oh my darling, don't!\" as I promptly burst into tears. \"Everything's going to be all right!\"\n\n\"It isn't!\" I wailed, letting her peel my coat from me, the tightness in my chest making it hard to breathe. \"I've just made everything so much w-worse!\"\n\nShe pulled me close again, encouraging me to sob out the whole sorry tale, puncturing my account every now and again with muttered invective. And when at last I was done, she kissed my forehead and steered me towards the comfy chairs outside the changing rooms. \"Sit,\" she insisted in a voice that would brook no argument. \"Let's get you dried off a bit.\" \n\n\"I'm okay,\" I croaked but she didn't seem to hear, already en route to the kitchen. \"Alice, don't.\" I didn't deserve her fussing over me, let alone her sympathy.\n\nOh God, what had I done?\n\n\"You know what you need right now?\" she called, reappearing a moment later with a hand towel. \"Lovely hot bath, I reckon.\" And with that, she swept up my sodden hair and gave it a vigorous rub. \"Stiff drink too, but I don't expect you'll have anything stronger than orange juice at your place, more's the pity. There.\" She lifted my hands and clapped them over my towel-covered head, gesturing that I should continue the drying process. \"I've put the kettle on. Let's make you a nice cup of tea then see about getting you straight home, my girl.\"\n\n\"Alice, I can't.\" Letting the towel fall, I buried my face into the soft and now rather damp cotton. \"You know I can't. I've got to go back. Try to sort things out.\"\n\n\"Over my dead body.\"\n\nStartled by the vehemence in her tone, I peeked out to find her glaring at me from the doorway, her arms folded. \"But...\"\n\n\"No way.\" She gave her head an adamant shake. \"You are not going back there to grovel and apologise for what you said\u2014something that's needed saying for years, if you ask me. No,\" she reiterated, waggling a finger at me when I tried to argue. \"You're going home and that's final. Going home to pack so you're all set to get on that plane tomorrow morning.\" She patted my shoulder and turned to go back through the door. \"Call it my first executive decision if you like, seeing as you're going off and leaving me in charge.\"\n\n\"But what about Dad?\" I shuddered, picturing the horrible scene that must surely have unfolded at my parents' house after I left. \"Poor Dad! I can't leave things as they are. I can't just fly to Treviso without\u2014\"\n\n\"Poor Dad?\" She twisted back around. \"Sam, this is the life your father's chosen! He's made his bed, he can damn well lie in it for a while. All this time, all these years, he's just let your mother wallow in it all, never having it out with her. Letting her walk all over any feelings the pair of you might have. The way he's let her treat you both.\" She shook her head then whipped the towel out of my hands. \"It's not right. It's not healthy. It's high time he realised it can't go on. And if this is what it takes to make him realise, then good.\"\n\nI rose to follow her into the kitchen, my body feeling curiously heavy, my knees like sponges. \"But what if he doesn't know what to do? What if he can't cope?\"\n\n\"Sweetheart.\" Alice's tone became gentler. \"He needs to deal with this. Not you. You've got other things to think about now. This is your time.\"\n\n\"I thought you didn't want me to go to Italy.\" I watched as she reached into the cupboard above the kettle and brought down two mugs. \"I thought you said... Wait.\" Two mugs? Glancing around the room, I spotted a box of Christmas trimmings on the sofa. \"What have you done with Roxy?\"\n\n\"Roxy? Er, she's popped out for a bit.\"\n\n\"What for? It's a bit early to fetch the sandwiches, isn't it?\"\n\n\"Ah, well.\" She sounded rather vague. \"Not busy, are we? And there were a couple of other things she needed to do, so we thought\u2014you know.\"\n\n\"Right.\" I narrowed my gaze at her, bemused by this ineloquent version of my assistant manager. \"I kind of thought the whole place would be kitted out like Santa's Grotto by now.\"\n\n\"Tinsel,\" she announced triumphantly, as though she'd only just remembered what it was called. \"That's what she's gone to get. Not enough\u2014\" she hesitated \"\u2014purple, apparently. She won't be long, I'm sure.\n\nDeep joy, I thought wryly, wondering what on earth Roxy was planning to do with it before remembering that the new Sam\u2014Samantha\u2014had resolved to wholeheartedly embrace Christmas this year. \"Okay. Fine.\"\n\n\"Fine?\" Alice fired me a look not dissimilar to the one I'd sent in her direction moments earlier. \"You just seen the Ghost of Christmas Past or something?\"\n\n\"Maybe,\" I agreed with a weary smile, raking my fingers through my ratty hair in an attempt to restore some order. \"Can't go on hating Christmas forever, right? So maybe I won't go home just yet. I could give you both a hand, couldn't I? It'll be much easier with the three of us.\"\n\n\"No, Sam. You look shattered already. The last thing you're going to feel like doing tonight is packing your suitcase if you stay here for the rest of the day. Here.\" Turning to me, she pushed a mug of tea into my hand. \"Much better to get everything done out of the way this afternoon, don't you think? You can get yourself an early night then.\"\n\n\"But I haven't got that much packing to do. I've decided I'm not going to take loads of stuff so it won't take\u2014\"\n\n\"How are you getting to the airport tomorrow?\"\n\nI sighed, acknowledging defeat. \"I've booked a taxi,\" I told her as she led the way back into the shop. \"It's coming at eight.\"\n\nAlice frowned. \"Won't that be expensive?\"\n\n\"That's what I told Marco, but...\"\n\n\"Marco's paying,\" she guessed, nodding her approval and perching beside me on the front edge of the sales counter. \"Well, so he should. Dragging you away from us, three weeks before Christmas.\"\n\n\"Alice.\" I pulled a face. \"You've got to admit, the timing's turned out to be pretty good really. All things considered.\"\n\n\"Yes, I suppose.\" She studied me over the rim of her mug, her glasses steaming up slightly. \"And there's no question it'll be good for you to get away. Just how long has it been since you had a holiday anyway? I can't remember the last time you had more than a day off.\"\n\nI managed an indignant laugh. \"It's not going to be a holiday. I'm pretty sure Marco wants me to work, you know.\"\n\n\"Not all the time, surely? And goodness knows, that's a lovely part of the world you're going to. Not far from Venice, is it?\"\n\n\"No, not far.\" Probably not the best place to visit while suffering from a broken heart though, I thought. Wasn't Venice meant to be the City of Love? \n\n\"Well then. It'd be criminal not to make the most of it, wouldn't it? Ah...\" Alice's tone brightened as she peered around me to the door. \"Customers,\" she announced. \"You stay there and drink your tea.\" She strode forward, her welcoming smile already in place. \n\nDear Alice, I thought, listening as she engaged the two women\u2014a mother and her newly pregnant daughter\u2014in friendly conversation, feeling unexpectedly wistful as I realised how much I was going to miss her. I'd seen her practically every day for more than six years and the bond between us had become strong. \n\nIn fact, it struck me that she'd more than filled the void left by the withdrawal of my mother's love, which was quite something, given that lifelong spinster and former midwife Alice had never had children of her own. \"Never wanted to be bothered with all that,\" she'd always maintained, though I wasn't sure I believed her. Aunt Sarah had been similarly childless but at least she'd married. Her husband Tom had died before I was born. Ironic then that the three of us should run a maternity wear shop, though Alice's midwifery experience had certainly come in handy from time to time.\n\nBut Alice wasn't the only person I'd miss, was she? I was going to miss Roxy and her relentlessly sunny attitude to life. I was going to miss my customers too. Over the course of their pregnancies, I got to know some of them pretty well, especially those that returned to the shop pregnant with a second or even third child.\n\nAnd, oh God, I was going to miss Drew...\n\nThe thought slid into my head without warning, causing such a burst of pain beneath my ribcage my breath hitched. Biting my lip hard, I jumped down from the counter and marched back into the kitchen, tipping the remains of my tea into the sink before putting the mug into the washing up bowl and filling it with hot soapy water. I washed up the other mugs abandoned to the draining board after an earlier cup of coffee, then, feeling more resolute, I plucked up the box of Christmas trimmings from the sofa and carried it out into the shop.\n\n\"Hey, what d'you think you're doing? That's my job!\" \n\nI glanced up to see Roxy standing by the door. She'd obviously only just returned because she was still wearing her black raincoat, along with a rather sodden-looking black velvet hat. \"Not any more,\" I said brightly, forcing a smile. \"Thought I might give you a hand for once. So come on, where is it?\" I gave her an expectant look, my gaze having first travelled to her empty hands.\n\n\"Where's what?\" She looked across at Alice who was now at the cash till with her customers, bagging up one of the new pairs of jeans we'd unpacked that morning and a pink tunic.\n\n\"Tinsel,\" Alice called cheerily. For a split second, I thought I saw a flicker of consternation in Roxy's expression. \"Purple tinsel, of course.\"\n\nWas it my imagination or had Alice just put a lot of emphasis on the word 'purple'?\n\n\"Oh!\" Roxy's face cleared. \"Yes!\" She shot me a theatrical grimace. \"Couldn't find any. No one seems to have it, can you believe that?\"\n\nI could, actually. This was Stow Newton after all, hardly the shopping capital of middle England. \"So you didn't buy any tinsel at all then?\" I looked down into the box at the assortment of tangled strands. \"Some more red might've been nice.\"\n\n\"More?\" She grinned, taking off her coat. \"It's nearly all red, Sam. I know it's your favourite colour but a little bit of variety wouldn't go amiss.\"\n\nIt was my turn to grimace at her. \"Variety like red and purple? Not exactly a classic combi, Rox.\"\n\n\"No,\" she admitted curtly, her gaze meeting Alice's as the older woman escorted her satisfied clients to the door. \"How did it go with your Mum and Dad, anyway?\"\n\n\"Not good,\" Alice responded for me once they'd left, pushing the door closed behind them. \"Which is why she's taking the afternoon off.\"\n\n\"Alice!\"\n\n\"Good idea,\" Roxy agreed. \"Get your packing finished.\"\n\n\"I haven't got much packing to do!\"\n\nNeither of them seemed to be listening. It was a conspiracy, I realised. The decision to send me home had clearly been made in my absence and there didn't seem to be a thing I could say to change their minds. \"Still a bit wet,\" Alice said, producing my coat with an apologetic tut and holding it out so I could push my arms into the sleeves. \"I'll run you home in the car so you don't get even wetter. You'll be okay on your own for a few minutes, won't you Rox?\"\n\n\"Of course. But first...\" Roxy threw me a smile over her shoulder as she jogged across to the changing rooms then pulled back one of the gold curtains with a flourish. \"Da da!\"\n\n\"Oh!\" I gasped as a multi-coloured bunch of helium-filled balloons sprang forward, bobbing energetically and straining against the counterweight of a teddy bear perched on a stool, the strings secured parachute-like to the straps over his little arms and legs. \"What's all this?\" I found myself moving nearer, the words on the balloons jumping out at me now. We'll miss you! Sorry you're leaving! Good luck! Fresh tears welled up in my eyes. \"No! You shouldn't have!\"\n\n\"We were going to get you flowers,\" I heard Roxy say. \n\n\"But that seemed daft,\" Alice chipped in. \"Because you're leaving tomorrow. You wouldn't get the pleasure from them, would you? So we thought\u2014\"\n\n\"Balloons!\" Roxy finished gleefully. \"And hey, you can take the teddy with you, 'cos he's only little, isn't he? He'll fit in your suitcase. And when you look at him, you can think of us, stuck here in boring old Stow Newton while you're\u2014you're...\"\n\n\"Having a fantastic time,\" Alice said at once, her arm coming around my shoulders. She gave me a squeeze when I leaned into her, brushing her lips against my hair. \"But we really are going to miss you, don't you have any doubt about that. It's not going to be the same around here without you.\"\n\n'Oh God.\" I blinked hard, overwhelmed. \"I'm going to miss you too. In fact, you know,\" I managed a smile, \"maybe I won't go. Yeah, p'raps I'll stay here with you after all.\"\n\n\"No!\" Roxy exclaimed. She put her arm around my other side. \"Don't you dare! You've got to go! You're going to have an amazing time, do you hear me? And besides.\" She shot me a meaningful look. \"I need you to big me up to Marco's Dad when you meet him. Get me an internship at Salvani next summer.\"\n\n\"Rox, I probably won't even see Marco's Dad,\" I protested, half-laughing now. \"But yes, all right!\" I added, relenting as she pulled a disappointed face. \"If I see him, I'll tell him how wonderful you are, okay?\"\n\n\"Good,\" she said, nodding solemnly. Then she grinned, hugging me again. \"Aw, come on, boss. Everything's going to be all right, isn't it, Alice?\"\n\n\"Yeah, 'course it is,\" I said, forcing a smile as Alice asserted her agreement and hugged me fiercely in turn. And then I looked at the balloons again and suddenly found myself smiling for real. \"Oh... Purple tinsel.\"\n\nThere was a slight pause.\n\n\"I know!\" Roxy gave a dramatic moan. \"Alice, as if!\"\n\n\"Well, what was I supposed to say?\" Alice said. She sounded miffed. \"I'm not used to making up cover stories, am I? I don't do subterfuge. Smoke and mirrors.\"\n\n\"Yes, but tinsel? And purple tinsel? Why not gold, or green or...?\"\n\nGrinning as they continued to bicker behind me, I knelt in front of my 'bouquet' and stretched out a hand to stroke the teddy bear's soft brown fur. So cute, I thought as I fingered the tiny pair of blue dungarees he was wearing, enormously touched Alice and Roxy had gone to so much trouble. \n\nI was going to miss them both so much.\n\nThat now familiar hurt burned in my chest. Oh God, was I doing the right thing? Was I even strong enough to do this? Strong enough to leave everything and everyone I loved behind?\n\nI took a deep breath. Of course I was. And anyway, it was much too late to back out now.\n\n*\n\nFunny then, how the words 'it's not too late' kept whirling around my head.\n\nThe next morning, sitting halfway up the stairs, I peered down through the gloom at my suitcase, parked neatly beside my overnight bag in the hallway. In the end, it had taken me less than half an hour to pack, just as I'd known it would. I'd be travelling light. A few pairs of jeans, an assortment of tops... Well, they were the only clothes I possessed, other than a certain red dress, of course. I'd always used to love clothes. Like Roxy, I used to make my own, but in recent years, I'd somehow got out of the habit of making anything nice for myself. Besides, I'd had no need of a more extensive wardrobe. I wasn't sure of the dress code at Maretti but if I was expected to be suited and booted then I'd just have to go shopping, wouldn't I? It might provide a means of bonding with my new colleagues.\n\nI winced at the thought, shifting slightly in an attempt to relieve the numbness in my left buttock. It occurred to me I should probably move but somehow, I couldn't summon the will. There was nothing left to do. There hadn't been since five o'clock yesterday afternoon. And now it was... I glanced down at the handset in my hand before remembering I was wearing a watch for once, the one Marco had given me. Both phone and watch were in agreement. It was seven forty. Still twenty minutes to go before the taxi arrived.\n\nWhich meant there was time.\n\nSucking in a deep breath, I brought the phone up in front of me and tapped a button to bring up the directory. There it was, his name at the very top of the list, above Mum & Dad, above Shop, above Alice, testimony to the fact that until ten days ago, his number was the one I'd phoned the most. Could I really leave the country without calling him one last time, even though he hadn't been in touch with me? \n\nThough to be fair, maybe he'd tried. After much deliberation, I'd unplugged the landline last night, half-fearful my parents would call, half-fearful they wouldn't. And I'd let the battery in my mobile phone go flat days ago without reading so much as a single text message or listening to any voicemail. My mobile wasn't coming with me, that much I'd decided. If I needed a phone in Italy, Marco could get me fixed up with a pay-as-you-go type contract. It would probably work out cheaper anyway.\n\nDrew. If I pressed that key, would it make things better or worse? Would I find the right words? Could I explain without explaining, excuse myself without making an excuse, convey just how much I was going to miss him without giving myself away? \n\nOr\u2014and this was a radical thought\u2014could I simply tell him the truth?\n\nI hit the button and raised the phone to my ear, closing my eyes as I rested my cheek against the wall, not knowing what I was going to say, only that I was going to say something. Anything. It didn't matter what, did it? I'd made a big enough fool of myself already, I decided, as the number connected and rang out for the first time then a second. I couldn't sound any more foolish if I tried. \n\nRing, ring.\n\nAnd if I could clear the air, have a stab at putting things right, make light of my stupidity, hell... Maybe we could even laugh about it all one day.\n\nRing, ring.\n\nOr not. When it rang out for a seventh time I straightened up, my pulse slowing, the cold wash of disappointment chasing the adrenalin from my veins. He wasn't going to answer, was he? Was he asleep, sleeping so deeply he couldn't hear the phone, even though I knew he had a phone right by his bed? Was he ignoring the sound because he knew it would be me?\n\nNo. He wasn't answering because he wasn't home.\n\nI stabbed at 'End Call', biting my lip in a desperate attempt to hold myself together. Of course he wasn't home. He'd be with Angie at her place. In her bed, his body curled around hers, their naked limbs tangled together...\n\nBlinking the image away, I rose to my feet and stumbled down the stairs, my legs stiff and uncooperative after sitting in the chill for so long. I could check everything one last time even though I'd already checked three times. Check that the back door was locked and deadbolted, that all the windows were firmly closed, that the taps weren't dripping, that the cooker was switched off at the socket, that the fridge really was empty, that the thermostat for the central heating had been left at a suitable temperature\u2014Alice had cautioned against turning the whole system off. \"Not in winter, silly. That's asking for trouble.\" ",
        "Not that I really needed to worry about anything. She'd taken the spare key when she dropped me off the day before, promising to call in twice a week to make sure all was well and to pick up the post.\n\nThree months. It didn't sound long but it was finally sinking in just how long it really was. In three months it'd be March. The worst of the winter would be over, the daffodils in bloom. And by then, like the seasons, maybe I too would be changed. A stronger, more confident Sam, with new skills and abilities. Well, a girl could dare to dream.\n\nBy the time I'd worked my way around the house, it was five to eight. And right on time, after I'd made one last trip to the bathroom and was heading back towards the stairs, I heard a car draw up outside.\n\nBut when I pulled the door open, suitcase already in hand, I stared in open-mouthed astonishment. Because instead of the black cab I'd been expecting, there on my driveway stood a dark blue Volvo estate.\n\nMy father's car.\n\n\"Dad,\" I faltered as he climbed out, my voice a startled croak. \"What\u2014what are you doing here? I'm waiting for a taxi. It'll be here in a minute.\"\n\n\"I know. I'm not planning on holding you up.\"\n\nI watched him walk towards me, my heart beginning to hammer in my chest as I realised he was alone. Oh God, he had to come just as I was about to leave? When he'd had all yesterday afternoon and evening to re-establish contact? \"But this really isn't a good time, Dad. I'm sorry.\" I dug my fingernails into my palm, my eyes prickling ominously. \"I can't do this. Not now.\"\n\nHe slowed to a halt in front of me, shifting his weight from one foot to the other. Even through a blur of tears, I could see he looked shattered. Older somehow. And yet for all that, there was a hopefulness in his expression I hadn't seen for years. \"I was wondering if you'd let me take you to the airport. So we can... You know. Talk.\"\n\n\"I've booked a taxi,\" I whispered automatically.\n\nHe nodded. \"It's okay. I can deal with that when it comes. Let me take you, Sam. Please? There're some things I need to tell you. Things I need to say.\"\n\nI gazed at him for a moment, dimly aware of a flare of headlights at the end of the cul-de-sac, the familiar chug of a diesel engine. \"What if I don't want to hear them?\"\n\nShock zinged down my spine. I'd actually spoken those words aloud?\n\n\"Then I won't say anything.\" To his credit, my father almost managed to conceal the heartache in his tone. Almost. \"We don't have to talk. I'll just drive you to the airport. Make sure you get there safely. Sam...\" He looked over his shoulder at the approaching cab. \"I can't make things up to you. It'd be stupid to even try. But I do want you to know I never stopped caring. Never stopped loving you. Haven't always done a great job of showing you that, I know, but...\" And then he swore under his breath.\n\nAnother jolt of electricity rippled through me. I'd never heard him swear. \"Oh God, I know that, Dad. I love you too.\"\n\nHe turned back around, his eyes suspiciously bright. \"You'll let me take you, then?\"\n\nI hesitated. \"But it's Paul's birthday today. Surely...?\"\n\n\"No.\" He shook his head \"It would've been his birthday,\" he corrected. \"But it isn't. And I've talked about it to your Mum\u2014I mean, we've talked about it\u2014and we've agreed not to do the birthday thing anymore. 'Cause it's not...\" It was his turn to hesitate. \"Well, it's not helpful, is it?\"\n\n\"She actually agreed?\" I stared at him. \"But\u2014\"\n\n\"She's not alone, don't worry. Mrs Jenkins\u2014you remember, the woman who lives next door?\u2014said she'd be happy to stay with her, share some lunch. So please, Sam? Let me do this?\"\n\nI swallowed. \"I\u2014give me a moment?\" And after putting down my suitcase, I darted down the driveway to the taxi and motioned to the driver to wind down his window.\n\n\"Well, good morning Miss Chesterton Close,\" he said with a grin. \"We meet again.\"\n\nJoe. \"You're the only cabbie in Stow Newton, right?\" I said once I'd recovered. \"Is that it?\"\n\nHis grin broadened. \"Heard the address, couldn't resist taking the fare.\" He threw a glance at my father who was making his way towards us. \"Don't tell me you've got more man trouble?\"\n\n\"Ha ha. He's my Dad.\" I bit my lip. \"And he's just offered to take me to Stansted.\"\n\n\"Right.\" Joe's smile wavered. \"I see.\"\n\n\"And I feel really bad about sending you away but I\u2014\"\n\nBefore I could finish, my father gently elbowed me aside. I watched in startled\u2014and grateful\u2014astonishment as he peeled a couple of notes from his wallet and pressed them into Joe's hand. And then a newly smiling Joe was reversing back off the drive, his arm raised in a gesture of farewell and in a matter of seconds, Dad and I were alone again.\n\n\"Right then,\" he said simply. \"Let's get you to that plane.\"\n\n*\n\n\"Ladies and gentlemen, as we start our descent, please make sure your seat backs and tray tables are in their full upright position. Make sure your seatbelt is securely fastened...\"\n\nDescent? Startled, I opened my eyes and looked around to discover many of my fellow travellers fumbling with seat controls and seatbelts. But we couldn't be landing already, could we? I'd only flicked through about five pages of the glossy magazine I'd picked up in WHSmith at Stansted\u2014no way had we been in the air long enough. \n\nI checked my watch. Apparently, we had been in the air long enough. More than an hour had passed since I'd last looked at the time. Just to be certain, I looked towards the window, and as luck would have it, a gap in the clouds allowed me to snatch a glimpse of buildings below. Which meant that somehow, I must've dozed off before I had a chance to read\u2014I stared down at the magazine spread across my lap\u201499 Ways To Please Your Lover Tonight. Me, who never slept on aeroplanes. Though I probably shouldn't have been surprised. When, after all, had I last had a decent night's sleep?\n\n\"You'll need to put that forward an hour dear, now we're over Italy,\" a friendly voice said to my left.\n\n\"What?\" I turned to see a bright-eyed little old lady sitting in the seat next to me and followed her gaze back to my wrist. \"Oh, yes. Thank you.\"\n\nShe smiled. \"You're welcome. And you know,\" she added conspiratorially, \"I've always had a soft spot for number seven.\"\n\nAs I sent her a startled glance, she tapped at the magazine on my lap. \n\n7 ~ How to give your man the perfect blow job\n\n\"It's always been lucky for me, dear. Works a treat,\" she said, a rather dreamy expression on her face now. \"He'll be like putty in your hands.\"\n\n\"Right,\" I heard myself say faintly. \"Er, thanks.\"\n\n\"Feeling better now?\" she carried on cheerfully as I grappled with my seatbelt, blushing furiously. \n\nThanks? \n\n\"Only you looked a bit peaky when we got on. You certainly look a lot better than you did.\"\n\nOh dear, just how bad had I looked earlier? I managed a brief nod, returned her smile and then, deciding it might be better for my sanity to avoid engaging in any further conversation, made a show of studying the magazine. \n\nStill, it probably wasn't surprising she'd been concerned. I'd felt decidedly rough by the time Dad dropped me off outside Departures. There was no question we needed to have the conversation we'd had, but in the process, I'd had to allow so many long-buried emotions to be dragged back up to the surface.\n\n\"I'm sorry, sweetheart.\"\n\nWe'd driven in silence for quite a while, so those first three words, softly spoken, made me jump as much as they might have done had my father bellowed them through a loudhailer. \n\n\"Sorry for what?\" I said, equally quietly, my heart still pounding. \n\n\"Ah, Sam.\" His fingers clenched on the steering wheel. \"Sorry for everything. You name it, I'm sorry. Sorry I let your mother treat you differently to Paul. Sorry your brother got sick. Sorry I let you donate one of your kidneys to him.\"\n\n\"But I wanted to.\"\n\n\"I know.\" He sighed. \"But there's no way we should've let you do it. Well, no way I should've let you do it,\" he amended after a further moment of consideration. \"Your mother was never going to see things rationally. But I should've done.\"\n\nI chewed my lower lip. \"You couldn't have stopped me, Dad.\"\n\n\"I might've managed to persuade you it was a bad idea. But I didn't even try.\"\n\n\"Because it wasn't a bad idea. No one seemed to think it was a bad idea. None of the doctors, anyway. It was supposed to be straightforward.\"\n\n\"Well, they were wrong.\" He shot me a sidelong glance, his expression pained. \"It was about as un-straightforward as you could get. And all this time...\" He drew in a deep breath. \"All this time, you've felt like it was your fault he died?\"\n\nI gazed at him helplessly. Surely the words I'd blurted out yesterday at my parents' house hadn't come as a total surprise to him? \"Maybe not my fault, exactly,\" I said at last. \"But you can't tell me that if Mum had been given the choice, she'd have chosen me over Paul?\" My voice cracked on his name. \"If she could've picked which one of us should live...\"\n\n\"Sam.\" I watched a muscle working in his jaw, saw new lines appearing on his brow as he squeezed his eyes closed for a moment. \"Oh sweetheart.\"\n\n\"It's not your fault.\"\n\n\"It certainly isn't yours.\" He shook his head slightly. \"But I am to blame for a lot of this. I should've done something years ago. I've let things go on for far too long.\"\n\nI touched his arm, stricken by his anguished expression. \"You did your best.\"\n\n\"Hardly.\" His lips twisted. \"I just kept hoping she'd...\"\n\n\"Snap out of it?\"\n\nI saw the beginnings of a grim smile. \"Something like that. I kind of thought when the court case was settled things would start getting back to normal.\"\n\nI nodded, remembering with a pang how I'd said the same thing to Drew the night of my birthday.\n\n\"But I should've realised things wouldn't be that simple. How could they be? How could being awarded a huge lump of cash make up for losing a son?\"\n\nI risked a small smile of my own. \"Well, you get to go on Caribbean cruises when you retire.\"\n\n\"Oh God, don't remind me.\" He returned a comical grimace. \"Never again.\"\n\nI frowned. \"It wasn't that bad, was it?\"\n\n\"You have to be joking. It was hell on earth.\" He shuddered. \"Hundreds of people trapped together on a boat, most of them playing at being rich, putting on fake posh accents. Your mother loved it, of course. She got to pretend to be someone completely different. Bragged about her beautiful house, her husband's amazing career.\" He hesitated. \"Her two wonderful children.\"\n\n\"Two?\" But I could already guess what was coming next. \"You mean, she talked about Paul as if...?\"\n\n\"As if he was still alive, yes.\"\n\nI watched him as he gazed out at the road ahead, watched that little muscle twitching in his jaw again, and, not for the first time, wondered how he'd managed to bury his head in the sand for so long.\n\n\"Call me stupid,\" he said at length, after we'd navigated a roundabout and turned on to the motorway, \"but I didn't tackle her about it while we were away. I figured...\" He sighed again. \"I told myself that having a holiday was exactly what she needed and that maybe she just needed to do the play-acting thing one more time, get it out of her system once and for all. 'Course.\" He released a short, bitter laugh. \"I was kidding myself. Again.\" He threw me a look. \"But you already knew that, didn't you?\"\n\nI drew in a slow, steadying breath. Prayed to whoever might be listening that when I started to speak, the right words would simply flow out. \"Dad...\"\n\n\"It's all right. You don't need to say it.\" He reached across to rest his hand on my knee. \"I've told her we're going to get some help. And she's agreed we need some. She's finally accepted things can't right themselves on their own. Because after yesterday\u2014after what happened when you came around\u2014\"\n\n\"I'm sorry.\" Biting my lip wasn't working any more; tears were escaping from the corners of my eyes and there wasn't a thing I could do to stop them. \"Oh God, I'm so\u2014\"\n\n\"No, Sam.\" His hand sought mine, his voice gruff. \"Don't say sorry again, okay? Not ever. If anyone should say sorry, it's me.\" He squeezed my fingers. \"I've tried so hard not to see what was going on. It was easy enough to do when I was working. I could've retired a year ago, you know that? They offered me early retirement, the full package. But I didn't want to take it.\"\n\nI couldn't get rid of the lump in my throat. \"Well, we all cope in different ways,\" I croaked. \"Going to work was your way of coping. Pretending Paul's still alive sometimes\u2014that's Mum's way of coping. There's\u2014there's no such thing as normal grief, you know?\"\n\n\"What about you?\" He sent me another sidelong look. \"What's your way of coping? You seriously planning on keeping Drew Barnett at arm's length for all eternity?\"\n\nI stared at him in open-mouthed astonishment.\n\n\"You can't keep him waiting forever, you know.\"\n\n\"It's not\u2014\" Why was my throat so dry? \"It's not like that.\"\n\n\"Oh, Sam.\" My father's lips twisted into another wry smile. \"It's exactly like that, my girl. I've seen the way he looks at you. Poor boy's got it bad. So have you.\" He glanced at me again. \"Haven't you?\"\n\nI'd shaken my head, not daring to meet his gaze. \"He's with someone else.\"\n\n\"If he is, it's only because he can't be with you.\"\n\nI couldn't bring myself to answer, couldn't trust myself to speak. And after several seconds ticked by, my father's hand had found mine again. \"Sweetheart, listen to me. You, me, your mother\u2014we've spent so long trying not to talk about things because it hurts. But the truth is, there's one thing we should've all learnt by now. It hurts even more if you don't.\"\n\nSo then I'd confessed all. Found myself telling him everything, giving him all the gory details\u2014including some details that, on reflection, a daughter probably shouldn't share with her father. But it had helped to talk, I realised, bending to retrieve my handbag from under the seat as the plane finally taxied to a halt at the gate. Somehow, having an in depth, no-holds-barred conversation that hadn't skirted any of the difficult issues, but that had instead met them head on was a curiously cathartic experience. \n\nMore than that, I reflected as I shuffled off the plane with everyone else and followed the crowd to baggage reclaim, it was like getting a piece of my life back. As a child, I'd spent hours with my Dad, helping him in the garden, watching him build things in the garage, the whole time chatting nineteen to the dozen. How come I'd never realised until now that when Paul died, my relationship with my father\u2014not just my relationship with my mother\u2014had changed?\n\nWhen had we stopped talking? When had I stopped talking? To think I'd been arrogant enough to believe I'd been dealing with my grief far more effectively than my mother.\n\n\"Samantha! Over here, cara!\"\n\nMy head jerking up at the familiar voice, I scanned the faces of the people around me in the Arrivals Hall, finally spotting my new employer a mere second before he wrapped me up in an exuberant hug. \"Hi!\" I gasped, laughing as he lifted me, suitcase and all, from the ground. \"Whoa... Marco!\"\n\nGrinning broadly, he set me down, swept my case from my hand then kissed me on both cheeks. \"Ciao bella! It's so good to see you again.\"\n\n\"It's only been a week,\" I reminded him, still breathless. \"Anyone would think you haven't seen me for a year.\"\n\nHe held me at arm's length then, his smile fading. \"Looks as though it could've been a year,\" he pronounced, shaking his head. \"You've lost weight.\"\n\n\"Have I?\" I supposed that for Marco, having spent his formative years surrounded by fashion models, registering the loss of even a few pounds came as second nature. Though actually, he might be right. My faithful black jeans were feeling decidedly loose. \"Well, that's good, isn't it?\" I said lightly, allowing him to thread his arm through mine and lead me across to the exit. \"There'll be more room for all that pasta you're going to feed me while I'm here, right?\"\n\n\"No, not good.\" He turned his head so I could see his scowl. \"It's no good at all. And I... Urgh.\" To my surprise, he rattled off an unintelligible stream of Italian under his breath.\n\nI narrowed my gaze at him. \"Something wrong?\"\n\nHe squinted back at me then breathed out an extra long sigh. \"Yes. And no. But I'll tell you in the car. It's cold out here\u2014the car is warm. Come.\" And sliding his arm around my waist, he hurried me outside, across the access road and over to a sleek black car parked in a nearby car park.\n\n\"So what's up?\" I asked anxiously when he slid in beside me at last, having stowed my suitcase safely in the boot. \"Are the designs for the new collection not going well? Supplier problems?\"\n\n\"No, no.\" He flapped a hand at me, that familiar even-toothed grin back in place. \"Everything is fine.\" I watched with some awe as he pushed a button on the dash and the engine purred into life. If I thought the interior of Drew's Audi was impressive, this was something else. This car was probably worth two of Drew's car. Maybe even three or four, come to think of it.\n\n\"Then...?\"\n\n\"I'm sorry, cara. I can't have you to stay with me at my house just now.\"\n\n\"Oh.\" My stomach suddenly felt oddly hollow. \"O-okay.\"\n\n\"No, Samantha, it's really not okay. The apartment I was going to give to you\u2014there has been a burst water pipe.\" He raised his hands expressively. \"Water everywhere. Through the ceiling, down the walls. Carpets soaked. Furniture soaked. No way you can stay there, no way at all. So I've booked you into a local hotel while I arrange for repairs, all expenses paid.\"\n\n\"Marco,\" I protested. \"You didn't need to do that! I just need a sofa to sleep on for now. Any old sofa, I don't mind.\"\n\nHe frowned. \"But I would mind. You come to work for me at my request, to do me a great favour\u2014and I have nowhere suitable for you to sleep? No, of course you must be in a hotel.\" Then he smiled. \"I think you'll like it. It's right in the centre of town. The hotel belongs to my Uncle Alberto. I've asked for you to have one of their best rooms.\"\n\n\"No!\"\n\n\"Yes, cara.\" He switched his smile into full persuasive charm mode. \"Hey, it's December. It's quiet for the hotel this time of year.\"\n\nIt was clear he wasn't going to be swayed. How ironic. Just weeks earlier, I would've leapt at the chance to stay in a smart hotel\u2014had leapt at the chance, in fact. And now, all I could think about was that I'd be alone. That I'd be on my own in a hotel room, in a strange city, in a foreign country, with only my thoughts and an Italian phrase book for company.\n\n\"Well, thank you,\" I said as brightly as I could manage. \"It'll only be for a few days though, right?\"\n\nHe shrugged, switching on the windscreen wipers as it started to rain. \"A week? Perhaps two.\"\n\nOh God, two weeks? I turned to look out of the window and pretended to admire the passing scenery, not that there was much scenery to admire. To my horror, we already appeared to be approaching the outskirts of the city but it was only mid-afternoon, even factoring in the extra hour. Did he intend to drop me off at the hotel and leave me to my own devices for the rest of the day?\n\n\"I've been thinking, though. It seems to me you could do with a little holiday. A paid holiday, of course,\" he added as I turned back to look at him, wide-eyed. \"Just for a few days, eh? You can explore the city. Maybe visit Venezia?\"\n\n\"What? No!\" I gasped, finding my voice again. \"That's very kind but I've come here to work. I don't need a holiday.\"\n\n\"I disagree.\" He gave me a long look\u2014a disconcertingly long look, considering he should've been watching the traffic ahead of us. \"Look at you. All thin. All pale. And this is before you start working for me? I can just imagine what Alice will say to me if I send you back to her in March, ill and exhausted. What Roxy will say.\"",
        "\"Roxy won't care so long as I manage to get her an internship with your father next summer,\" I muttered.\n\nMarco laughed. \"She wants an internship with Salvani?\"\n\n\"I know. She sets her sights high, that one. Of course, I told her I probably wouldn't be able\u2014\"\n\n\"Done.\"\n\nI stared at him, a choke of laughter leaving my throat. \"What?\"\n\nHe grinned. \"I'll arrange it. She's a talented girl, I've already seen that.\"\n\n\"You can arrange it? But\u2014\"\n\n\"My father and I are getting on better now. I think I've finally managed to make him understand what I want to do with Maretti, how I wanted to build up a business of my own. But I've promised him I'll start taking on more responsibility at Salvani in the coming year. So I can arrange an internship, no problem. But on one condition, cara.\" He met my gaze, his dark eyes boring into mine, his tone serious. \"You agree to take a few days off before you begin working for me. Otherwise...\" He made a slashing movement with his hand. \"No deal.\"\n\n\"Marco!\" But I knew I was beaten. Marco wasn't in the habit of making promises he couldn't keep. I had no doubt at all he'd follow through with his offer if I agreed to the conditions\u2014and how could I deny Roxy the opportunity of a lifetime? I sighed. \"Three days.\"\n\n\"As a starting point for negotiation.\" His triumphant smile broadened when I grimaced at him. \"Ah Samantha, you might even enjoy it. When did you last take some time for yourself?\"\n\nI didn't answer him, just as I hadn't answered Alice when she asked the same question. Instead, I listened in resignation as he reeled off a list of all the sights I should see, at the same time doing my utmost to quash a mounting sense of despair. It probably would be better than I was imagining, I told myself when we finally turned off the busy ring road and headed into town, Marco gesturing towards the window at intervals, pointing out various local landmarks, most of which I couldn't really see through the misty gloom. But the weather wouldn't be this bad all the time, would it? And it might be fun to wander the streets, explore ancient churches, to absorb the history and the culture. Drink endless cups of cappuccino whilst people-watching from a caf\u00e9 overlooking a piazza. \n\nAlone.\n\n\"Here we are.\"\n\nI looked out through the rain-spattered side window as the car drew to a halt and did a double take. \"H-here?\" \n\n\"Yes, cara. Where else?\" He sounded amused.\n\nI stared up at the imposing white-washed building, at its arch-shaped windows, at the flags neatly interspersed between ornate balconies bedecked with greenery. And then, as my gaze came back down, I made out the lettering above the portico. Clocked the five gold stars. \"But you said\u2014\" I stopped, realising Marco was already out of the car and was retrieving my suitcase. \"You said the hotel belonged to your uncle,\" I accused the moment he opened my door. \"This is a Lombardi hotel!\"\n\nHe grinned. \"Yes and it belongs to my mother's brother,\" he said, a uniformed porter stepping forward to relieve him of my bag. \"Well, okay. To my mother's family, to be accurate.\"\n\n\"Your mother's family own the Lombardi hotel chain? The international hotel chain?\" My mouth suddenly felt very dry. \"All of it?\"\n\nLaughing now, Marco extended his hand to help me out of the car. \"Another secret I've kept from you, huh?\" he said as a second porter appeared and opened a large green umbrella above Marco's head. \"Sorry, Samantha.\" He tilted his head in mock-apology. \"Now you know everything about me.\"\n\nI rolled my eyes at him, allowing him to escort me inside. Though it was just as well he was still holding my hand when we entered Reception because if that hadn't been the case, I suspect I might have turned around and bolted. \"Marco...\"\n\nThe circular atrium was a vast expanse of cream and gold-streaked marble, even the pillars lining the main thoroughfare to the front desk glittering in the light cast from a series of enormous crystal chandeliers. In the semi-circles to the left and right were elegant cream leather sofas and glass-topped tables. But most mesmerising of all, right in the centre, was a huge Christmas tree, perfectly decorated with hundreds of glass ornaments and further embellished by what must surely be more than a thousand tiny yellow fairy lights.\n\nSeemingly as much unaffected by this sight as I was entranced, Marco's fingers tightened around mine as he half-led, half-dragged me around the tree towards the desk then commenced a rapid-fire exchange in Italian with one of the reception staff.\n\n\"Marco.\" I tugged at his sleeve as soon as there was a break in proceedings. \"This is too much. It's very kind but I really can't stay here.\"\n\n\"Samantha.\" He raised a finger and pressed it to my lips. \"Hush.\"\n\n\"But\u2014\"\n\nGrinning, he turned away as the receptionist came back and moments later, I'd been relieved of my passport and given a keycard in exchange. Only then did Marco turn back to me. Resting his hands on my upper arms, he peered down into my face, his expression now unexpectedly solemn. \"Okay,\" he said. \"This man here,\" he indicated to the porter still guarding my suitcase, \"will see you to your room. It's on the top floor. I'm assured it has beautiful views over the canal and across the city.\"\n\nI looked back up at him, unnerved. \"You're going? You can't stay for a while?\"\n\nHe didn't answer, instead continuing to gaze at me as though he was trying to solve a particularly taxing problem. Then he shook his head and smiled. \"Call me tomorrow,\" he said softly, dipping his head to kiss my left cheek and then my right. \"But only when you're ready. No hurry.\"\n\nI watched him stride away. \"I'll call you in the morning then, okay?\"\n\nBut Marco merely glanced back over his shoulder and waved. \"Buona serata, bella,\" he called cheerfully then disappeared from view behind the Christmas tree.\n\nBuona serata. Have a good evening. Right.\n\nI looked at the porter. \"Well,\" I faltered. \"Um...\"\n\nWith an obliging nod, he picked up my suitcase and motioned towards a bank of lifts and, after taking one last hopeful look in the direction of the Christmas tree, I trailed after him across the atrium.\n\nThe top floor turned out to be the fourth floor, my room at the very end of a wide, panelled corridor. And after motioning that I should hand over my keycard with a deferential \"Signorina?\" he opened the door and ushered me inside.\n\nAfter the splendour of the Reception area, I probably shouldn't have been shocked. But my breath hitched as I gazed around the room, taking in the burgundy damask wallpaper, the gold-trimmed mahogany furniture, the dark-framed windows to the front and side sumptuously dressed by heavy burgundy and gold-fringed curtains, the parquet floor...\n\nThe huge mahogany four-poster bed. \n\n\"Oh dear God,\" I said faintly, unable to prevent myself from touching the nearest highly-polished turned wood post and staring at the burgundy and gold striped canopy, the matching drapes and damask bedclothes. \"This isn't at all over the top.\"\n\nAt the sound of a faint but polite cough, I came back to my senses long enough to appreciate the porter had parked my suitcase on a luggage stand and was now hovering for a tip. I scrabbled in my bag and finally produced five Euros, hoping it was enough. \"Grazie.\" \n\nHe took it with a smile, thanked me in return and left.\n\nThe silence, after the door clicked closed behind him, was absolute. I was suddenly acutely aware of my heartbeat, of my breathing, of how my knees felt weak and jelly-like. Of how very close I was to bursting into tears.\n\n\"No,\" I said, my voice sounding peculiarly loud. \"Come on, Sam. Pull yourself together.\" \n\nYikes, was I going to turn into one of those people who talked to themselves now, who felt the need to narrate their every move? Was that what a few days of being on my own in a hotel room might do to me? \"Please let it only be a few days,\" I whispered, responding to my own thought and in doing so, compounding the fear I might be going ever so slightly mad. Oh well. \"Let's find out what we can see from up here, shall we?\"\n\nWe?\n\nFeeling my lips twist into a wry smile, I took off my coat and put down my handbag then crossed the room to the closer of the two windows, pulling back the net curtain to discover a canal below, lined by trees and a row of buildings washed in various hues of cream, yellow and pink. Beautiful, even in the pouring rain. From the other window, just as Marco had promised, I could see right out across the historic city, towers and church spires thrown into sharp silhouette against the darkened sky. Later, I thought, I could venture downstairs, ask for a guide to the city and start making plans to explore. Though maybe... \n\nI turned around, my gaze falling on the brochures artfully arranged across the round mahogany breakfast table behind me. Ah. No need to go downstairs then.\n\nI started investigating the room in earnest then, ignoring the bed\u2014I wanted to save that for last\u2014and moving slowly around the ornate furniture, which was considerably more robust than it appeared. I ran my fingertips across the glossy surfaces, pulled out drawers and opened cupboards. I examined the delicate shades of the wall-lights\u2014Murano glass, if I wasn't mistaken\u2014and though I hesitated in front of the large flat-screen television, I decided against re-experiencing the joys of Italian broadcasting, opting instead to study an enormous gold-framed picture of the Rialto Bridge in Venice. Then I came to a huge, three-door mirrored wardrobe.\n\n\"Wow,\" I murmured after taking a few seconds to examine my pallid reflection. \"Maybe Marco was right about you needing a holiday. You look like shit, Sam.\" And with this cheery self-insult I pulled open the left hand door only to find myself face to face with a full-length burgundy bathrobe. \"Oh... Fuck.\"\n\nIt occurred to me I shouldn't have been surprised to find it there. This was a five star hotel after all, in a league far above that of the Park in Stow Newton. Of course the Lombardi Treviso supplied complimentary bathrobes. Though the sight of one probably shouldn't have made me want to weep.\n\nI bit my lip, instinctively fingering the luxuriously thick towelling, blinking until the embroidered gold monogram on the breast pocket came back into focus. Then on impulse, I pulled it from the hanger, momentarily surprised to find there wasn't another one hanging behind it\u2014but then I supposed, with another twinge of self-pity, the staff knew the room would have single occupancy\u2014and headed for the door I'd spotted to the right of the four-poster bed.\n\nThe bathroom was every bit as impressive as the bedroom, the marble floor gleaming in the light from the spotlights in the ceiling, the walls mosaic-tiled in shades of cream and gold. There were his and hers sinks with gold-coloured fitments, a toilet and a bidet, a large rectangular bath at one end and an equally large walk-in shower at the other. \n\nTorn between which to choose but now keen to wash away the grime of travelling, I hung the robe on the back of the door, stripped off then used the loo while I made up my mind, finally settling on the shower when I padded across to collect a couple of towels from the selection piled up on a rack. The lure of the shower head, approximately the size of a dinner plate, was impossible to resist.\n\nTo my surprise though, when I pulled open the screen door it was to find the interior coated with droplets of water, as though it had recently been used. Unsettled, I surveyed the rest of the bathroom again. Everywhere else looked pristine; the sinks, the bath and the mirrors all shone. So maybe the maid hadn't had time to finish wiping out the shower after she cleaned it, I speculated, looking back at the cubicle. It didn't look dirty, just wet. Nothing I could justify complaining about anyway, especially as I wasn't paying for the room. Decision made, I stepped inside, turned on the shower and, the moment the water began to run warm, ducked beneath the spray. \n\nBliss. There was no other word to describe it, the water thundering over my head at just the right temperature, massaging my shoulders, easing away the tension in my neck and spine. I closed my eyes and simply wallowed in the deluge, only reaching for the shampoo several minutes later. Maybe it wouldn't be so bad to be on my own for a few days, I thought, lathering up my hair for a second time. If push came to shove, I could quite happily spend the whole time in the shower. So long as the hot water didn't run out, of course, not that it showed any signs of doing so.\n\nEventually however, I was forced to conclude it was possible to have too much of a good thing. I grimaced at my wrinkled fingertips once I'd dried myself with the towels then dragged on the enormous bathrobe, sighing with bittersweet pleasure as the soft fabric swamped my bare skin. \n\nBut now what? I checked the watch I'd placed safely on top of the clothes I'd piled up on the vanity unit. Half past four. Too late to go out for a walk then. A glance at the window confirmed it was already getting dark and I wasn't sure how safe it would be to potter about the streets on my own. I could unpack my suitcase. That'd take all of five minutes. I could order room service though it seemed a bit early to do that. Still, it couldn't hurt to take a look at the menu, I decided, picking up my clothes and carrying them into the bedroom, especially if it was in Italian and needed translation. \n\nIt didn't. After locating the card beside the glossy travel guides on the table, I discovered every item already had its English equivalent listed underneath in italics. Oh well, at least reading the names of the dishes confirmed I wasn't in the least bit hungry, though I probably should have been. I'd had nothing to eat all day except the Danish pastry my father bought me at the airport before my flight. Not that I'd particularly wanted to eat that either but he'd insisted. Maybe he'd thought I was looking a bit thin too.\n\nEntertained by the thought, I wandered back across to the wardrobe and turned sideways. But soon realising it was impossible to discern whether I'd lost weight or not while wearing a bathrobe, I shrugged it off my shoulders and let it fall to the floor.  \n\nHmm, maybe. I pulled a face at myself in the mirror as I twisted this way and that, posing like I'd used to in my bedroom when I was a teenager, the way I'd posed before I acquired the scars criss-crossing my lower torso. \n\nFor the first time in ages, I experienced a strong urge to look at them\u2014really look at them. And to my surprise, I had to concede they weren't that bad. Somehow, I realised, splaying my hand across my abdomen and letting my little finger fall into the groove of the biggest scar, they weren't as ugly as I remembered. Not nearly so angry. Perhaps they'd faded over time. Or more likely, I thought with a wry smile, it was a trick of the light, the wall lights providing something better described as a warm glow than illumination.\n\nAnd it was then that I heard it, a sound that made me freeze in place. A sound I instantly recognised, would've recognised anywhere even though I hadn't heard it for more than seven years. A sound that immediately conjured up an image of my brother sitting cross-legged on his bed, cradling his most prized possession and singing at the top of his voice. \n\nThe unmistakeable half-twanging, half-squeaking sound of fingers leaving the fretboard of a guitar.\n\nWith a gasp, I swung around but there was no one to be seen. Yet there had to be someone there. The noise had been too real. It couldn't possibly have been a figment of my imagination. Unless... \n\nJust how old was the hotel? It couldn't be haunted, could it? But even if it was, the rational part of my brain reasoned as I scanned the room, heart thudding, why on earth would my brother be haunting me there?\n\nDeciding the sound had come from the direction of the bed, I stared at it in terrified silence, at first seeing nothing but the billowing drapes and the canopy. And then all at once I saw the guitar propped up against the pillows. The very same guitar I'd seen in the photograph at my parents' house yesterday, complete with distinctive slash down one side.\n\n\"Don't jump.\"\n\nI screamed, even though that rational part of my mind was again working on the only possible explanation, even though I knew that voice\u2014oh God, knew that voice so well. Screamed until I was swept backwards against a firm warm body and a hand came across my mouth to muffle the sound. \n\n\"Sam, stop it,\" he urged, laughing as I yowled into his palm. \"Shut up! Someone'll come to find out who's being murdered in a minute!\"\n\nI shut up, pushing against his arms hard enough to find the space to turn around, only for him to crush me to him again. \"You?\" I wailed, glaring up at him, my pulse still pounding in my ears. \"What the hell are you doing here?\"\n\nHe glared back down at me, the amusement rapidly fading from his expression. \"Oh, I could ask you the same thing, Sam Bloom. What the hell are you doing here in Italy? You said you'd told Marco you'd changed your mind about the job. Remember that? So what made you change it back, eh?\"\n\n\"Drew...\"\n\n\"You ran away from me. Broke my favourite mug, too.\"\n\n\"I know.\" I couldn't breathe, could hardly speak for the lump in my throat. \"I'm sorry. But I\u2014\"\n\n\"You owe me two pound fifty for that mug. I bought it from Crowsthorpe market years ago. I really liked that one.\"\n\n\"I'm sorry...\"\n\nHe shook his head. \"Not good enough.\" But then as he continued to glower down at me, I saw his lips twitch. And as I followed the direction of his gaze it was to discover he was staring at the place where my chest met his\u2014the only difference being that his chest was covered and mine was bare.\n\n\"Drew!\"\n\nWith a snort of laughter, he let me go, making a show of averting his gaze as he bent to pick up my robe. \"Oh Sam, come on.\" He kept his head turned away while he wrapped it around my shoulders. \"I'm a guy, okay? And you're gorgeous. You can't blame me for\u2014\"\n\n\"What are you doing here?\" I cut him off, backing away from him, my face burning as I yanked the robe around me and fumbled for the belt. Then remembering I'd already asked him that\u2014and that he'd turned the question back on me\u2014I hastily amended, \"I mean, why are you here? H-how are you here?\"\n\nThere was a pause. \"You need to give Roxy a pay rise,\" he said at last.\n\nSomething in his tone made me look up, a mixture of wistfulness, amusement and something else I couldn't quite figure out. Until I realised what he'd said.\n\n\"Oh God,\" I breathed, going from hot to cold in a second, my stomach lurching. \"Oh\u2014oh no.\"\n\n\"Yeah.\" He sounded grim now. \"She told me to give you this, by the way.\" Unable to turn away, I watched transfixed as he reached into his pocket and pulled out a length of purple tinsel. \"I haven't got a clue why. But she said you'd understand.\"\n\nI stared as he draped it around one of the bedposts, watching the fibres sparkle and dance in the light. \"Oh God,\" I whispered again. \"That's where she was.\" No wonder Alice had struggled to come up with a plausible excuse for Roxy's absence in the shop yesterday morning. \"She came to see you.\"\n\n\"She did.\" Drew's voice retained that same grim note. \"Told me some very interesting things as well.\"\n\n\"Oh God.\" It seemed to be all I could say. And suddenly feeling ridiculously weak at the knees, I hobbled over to the table by the window and collapsed into a chair. \"Oh God, I'm sorry.\"\n\nHe didn't move. \"But you know the thing I don't get? Why you didn't just ask. Ask me if I was seeing someone else. You know I'd never lie to you, so you've got to know I would've told you. So why didn't you ask me? I don't get it.\"",
        "I dropped my head into my hands and cringed.\n\n\"Or do I?\"\n\n\"Oh God...\"\n\n\"See, if you'd asked that question, you'd have had to admit something to me, wouldn't you, Sam?\" Drew was back in scary lawyer mode. \"You'd have had to tell me you looked at the text messages on my phone, wouldn't you? My private, personal text messages.\"\n\n\"I'm sorry,\" I got out, my voice little more than a squeak as I raised my feet to the front edge of the padded seat and hugged my knees. \"I didn't mean to.\"\n\n\"You didn't mean to pick up my phone, go into my inbox and scroll through my messages?\"\n\n\"No.\" And then, realising I couldn't very well deny it, I whimpered, \"I mean yes, okay? But it wasn't like that.\"\n\n\"It wasn't? Why did you do it then?\"\n\n\"Oh God.\" Hugging my knees even more tightly, I pressed my face against them and began to rock. \"You\u2014you said you'd got a date. With the new receptionist.\"\n\n\"Which I told you I was going to cancel. And I did.\"\n\n\"I know! But you were getting all these text messages. So many of them. And I brought you your phone 'cos I thought it might be something important. And you looked through them and one of them seemed to make you smile\u2014smile a lot.\" The words tumbled out in a rush. \"And I\u2014I wanted to know what made you smile like that. Who made you smile like that.\"\n\n\"You're talking about when I was in the bathroom?\" He sounded surprised. \"You mean when we were at the Park?\"\n\nI raised my head. \"Of course I mean when we were at...\" I trailed off, my eyes widening as I looked at him properly for the first time. \"Oh my God.\" How could I not have noticed before? \"There were two bathrobes in the wardrobe. You're wearing the other one!\"\n\nDrew glanced down at himself, tucking his thumbs into the lapels of his own burgundy gown. \"Yes,\" he said drily. \"Well spotted, Sherlock. But I fail to see what that's got to do with\u2014\"\n\n\"You're wearing a bathrobe.\" I shook my head, unable to make any sense of this new discovery. \"H-how? When did you change into it? How could you have\u2014?\"\n\n\"Oh no. Don't try to change the subject, Miss Bloom.\"\n\n\"What? I'm not trying to change the subject!\"\n\n\"Talk me through why you read my text messages, Sam.\" He tilted his head on one side, considering me with narrowed eyes. \"What was going through your mind when you took that decision to invade my privacy?\"\n\n\"Drew!\" I stared at him helplessly, at a loss as to whether he was angry or amused. Yes, he'd just called me 'Miss Bloom'\u2014something he'd done hundreds of times before in play-fights. But he'd never looked at me the way he was looking at me right now. \"I told you, it wasn't like that!\"\n\n\"Then tell me how it was.\"\n\n\"You...\" I swallowed, desperately trying to work some moisture back into my mouth. \"You'd just told me you were supposed to be going on a date that evening. And when you told me about her, you were reading one of your messages\u2014and you were smiling. So I thought\u2014I assumed the message must be from her. And you were finishing off in the bathroom and I'd still got your phone and I\u2014I wanted to see why you smiled. I know I shouldn't have done it, okay? I don't know why I did.\" But as my eyes welled with tears, I dropped my gaze. \n\nBecause I did know, didn't I?\n\n\"And there was a message there from someone called Angie and it said...\" I drew in a shaky breath. \"It said\u2014\"\n\n\"Catch.\"\n\n\"What?\" But before I could do any more than look up, I realised something was hurtling through the air towards me. The fact that I caught it had more to do with the accuracy of Drew's aim than any reflex action on my part. I looked down to discover I was clutching his mobile phone. \n\n\"You need to know that there's absolutely nothing on that thing that I don't want you to see. There never has been and there never will be.\"\n\nA tear rolled down my cheek. \"That's not the point, though. I shouldn't have looked.\"\n\n\"No.\" Drew's tone softened. \"But the real point is, I should've told you about Angie.\"\n\n\"What?\" My chin jerked up then. \"No! You don't have to tell me everything! You've got a right to keep some things to yourself\u2014and if you don't want to tell me stuff then you shouldn't need to. It shouldn't be any of my business who you're seeing, who you're going out with. Like\u2014like Kayleigh.\" I took a chance on meeting his gaze. \"I didn't need to know you weren't really going out with her, did I? Because it was none of my business.\"\n\nHe winced. \"Roxy told you? Sam, I'm sorry. But I didn't tell you because\u2014\"\n\n\"Because it was none of my business. Because there was no reason in the world why you should tell me.\"\n\n\"No, Sam.\" He sighed. \"Because I couldn't tell you. Given the circumstances, the fewer people who knew what was really going on, the better. It was a dangerous situation to be in. Pretty stupid too in hindsight but it seemed a good idea at the time\u2014and luckily for Kayleigh, it all worked out in the end.\"\n\nI shook my head. \"It was none of my business.\"\n\n\"Actually, it was. Is.\" Drew's tone was gentle again. \"Which is why I should've told you about Angie. I did get quite close to telling you a couple of times, but...\"\n\nSensing motion, I looked up to see he was walking away from me. And when he moved around the four-poster to pick up the guitar, I felt a reluctant smile tug at the corners of my mouth. \"What are you going to do? Tell me in song?\" I asked, not bothering to hide my sarcasm as he perched on the wide padded stool at the foot of the bed and slung the strap of the guitar over his shoulder. \"The Ballad of Angie and Drew?\"\n\nHe shot me an unexpected grin. \"That's not a bad idea, actually,\" he said, striking a chord before singing: \n\nThere once was a wanker called Andrew \n\nI gave an involuntary snort and his grin widened.\n\nWho didn't know wh-at to do He wanted to learn how to play guitar Some lessons were well overdue\n\n\"Too bloody true,\" I interrupted. \"What the hell are you doing with my brother's guitar, anyway?\"\n\nHe struck another series of chords then paused. \"You know,\" he said, giving me a speculative look, \"you should probably know that the way you're sitting right now, with your knees up like that, I can see right up your...\"\n\nI let out a little gasp as he whistled, immediately dropping my feet down from the chair to the floor and gathering the bathrobe around my legs.\n\n\"Not that I haven't seen it all before, of course,\" he continued cheerfully, starting to strum again. \"And let's face it, you were putting on quite a show before. You're going to kill me, you know that, Sam Bloom? There's me, doing everything I can to stay quiet so you don't know I'm here, and there's you, prancing around naked in front of the mirror. You've lost weight, by the way.\"\n\nI felt my mouth drop open, my cheeks flushing even hotter. \"You were watching me? You were here the whole time? But\u2014\" I took a glance around the room. \"Where were you? How did you...?\"\n\nHe grinned. \"I honestly don't know how you didn't see me. I swear you looked straight at me at one point. I kind of half hid behind the curtains,\" he nodded towards the drapes at the head of the bed, \"but they didn't quite do the job.\"\n\n\"And you had a shower!\" I accused, a piece of the puzzle dropping into place. \"Didn't you? That's why the shower was all wet. That's why you're wearing that robe. Then how long...?\" I watched as his fingers skated across the strings of Paul's guitar, my head aching as I tried to find homes for the rest of the jumbled pieces. \"How long have you been here?\"\n\n\"Since about twelve thirty. Well, I had to do something to pass the time, didn't I? I couldn't exactly unpack.\" He pulled a face at me. \"You'd have noticed all my stuff straightaway. As it was, I thought you might see my bag under the bed. It seemed the safest place to stash it\u2014and given the way you went through all the drawers and cupboards earlier, I guess it was. But isn't that shower fan-bloody-tastic? Don't know about you, but I could've stayed in there for\u2014\"\n\n\"Wait.\" I stumbled to my feet, increasingly fascinated by the effortless way his fingers were moving across the fretboard, finally hearing the complicated riff he was playing. Flawlessly. \"You\u2014you can't play the guitar.\"\n\nDrew smiled up at me as I ventured a little nearer. \"That's harsh. I think I'm a lot better than I used to be.\"\n\n\"No, I mean...\" I shook my head, confused. \"You're good. Too good.\"\n\nHe sent me another smile. \"You remember Paul and I both used to have lessons years ago? Not that it did me any good, but back then I couldn't see the point of practising, could I?\"\n\n\"With...\" I frowned, knowing I should be able to remember the teacher's name. My brother had carried on having lessons with her well into his teens. \"Mrs Sherborne?\"\n\n\"That's right,\" he agreed, picking out another riff. \"Well, I looked her up about a year ago to find out if she was still teaching. Figured if she'd got the patience to teach ten year olds, she might be able to teach me to play a few chords now. 'Cos I kept seeing Paul's guitar every time I opened the cupboard over the stairs and... I don't know, it just seemed wrong that no one was playing it.\"\n\n\"You've had his guitar all this time?\" I wondered whether my mother had any idea. Since his death, she'd jealously guarded my brother's possessions, refusing to part with any of them. \n\nThough he nodded, he didn't quite meet my gaze. \"He gave it to me to look after, the day before the operation. He was a bit worried your Mum might do something stupid. You know how she hated it being all scratched\u2014kept going on about how everybody else must think she and your Dad were too tight-fisted to get him a new one?\"\n\nI remembered only too well. And Paul had good reason to be worried. Knowing Mum, she'd have thrown it out and bought him something brash and shiny as a recuperation present. But he'd loved his battle-scarred second hand Fender, saying nothing could beat the tone. \"And Mrs Sherborne\u2014you found her? You've been having lessons with her then?\"\n\n\"Yeah. I didn't think she'd remember me\u2014I was just a kid the last time she saw me\u2014but she did. Seemed really happy to hear from me too. God knows why, 'cos I must have been her worst pupil ever. Still.\" He grinned. \"Maybe that's why she remembered me. Anyway, we fixed up a time and it all went from there, really.\" \n\n\"Right. Well, that's\u2014that's good.\" I cast my mind back over the times I'd gone with Dad to her house to pick up Paul after a lesson, remembering a plump-ish jolly lady with curly black hair. I'd liked her.\n\n\"It has been good.\" But there was an odd note to his voice. \"You see, it's been more than just lessons. Because, well. You see...\"\n\nI watched him, feeling more unsettled than ever. It wasn't like Drew to stumble over words. And then, something clicked in my head. I could see the cheques my father had written out to pay for Paul's lessons. The name of the payee.\n\n\"Oh my God!\" I burst out. \"Mrs Sherborne\u2014Angela Sherborne? Angie is Mrs Sherborne?\"\n\n\"Yes.\" His brow furrowed. \"Of course. I thought you\u2014\"\n\n\"You've been having an affair with Mrs Sherborne?\"\n\nDrew fired me a searching glance. Then with an air of resignation, he began sliding the guitar strap from his shoulder.\n\n\"Oh God! That's what's been going on?\" I watched in disbelief as he calmly rose to his feet and carried the guitar to the wardrobe, placing it inside. \"That's why she sent you those messages?\"\n\n\"Sam\u2014\"\n\n\"That's why she called you 'Magic Fingers'?\"\n\nHeaving a sigh, Drew closed the wardrobe door. \"You got me,\" he said, in the manner of someone who'd been caught stealing. \"And my word, it's been torrid, let me tell you. Red hot passion all the way.\"\n\n\"But...\" Even without the sarcasm in his tone, I could tell from the glint in his eyes he was mocking me. \"She called you 'Big Boy'!\"\n\n\"Well.\" He gave me a salacious look, steadily closing the space between us. \"Of course she did. You should know.\"\n\n\"Drew!\"\n\n\"Ah Sam, I can't deny it,\" he said solemnly. \"We just had this spark from day one. Right from the moment she opened the door when I went to her house for my first lesson and she said\u2014\" he adopted a falsetto \"\u2014'Drew Barnett? No... But you're such a big boy!'\" His voice dropping back to its normal pitch, he added with a grin, \"Now that's what I call an ice breaker. We both fell about laughing. And naturally,\" his grin widened, \"I haven't let her forget it since.\"\n\nI bet he hadn't. I was already getting the sinking feeling he wouldn't let me forget what I'd just said, either. \"But you\u2014you said it was more than lessons,\" I said weakly as he caught my hand and started to unpeel my fingers from the phone I was still clutching.\n\n\"It was.\" He put the phone down on the table behind me but didn't let me go, instead letting his hand fall into mine. \"Much more. In fact,\" his expression turned thoughtful as he gazed down at me, \"you could probably call it therapy.\"\n\nAll at once I was hyperaware of his skin against mine, of a tingling sensation that extended far beyond my fingers, shooting through my wrist and up my arm. \"Oh?\" I whispered, even as I realised he was now so near, I could feel the warmth exuding from the rest of his body.\n\nHe nodded. And then, still holding my hand, he lifted his other hand and grazed his knuckles against my cheek, gently brushing back my damp hair. \"You know,\" he said softly as I started tingling there\u2014started tingling everywhere, \"you've never asked me why I left London three years ago. Not once.\"\n\nI stared at him, suddenly conscious of having that 'not really there' dream-like feeling, as though somehow it wasn't really me standing in front of him. \"I thought you didn't want to talk about it,\" I heard myself say. \"I figured if you wanted to tell me, you'd tell me. Because sometimes, there are things you don't want to talk about with anyone, aren't there?\"\n\nThat's how I'd felt of course, I recognised with a blinding flash of self-insight. Me\u2014who'd mastered the art of not talking about things.\n\nHe smiled. \"I loved that you didn't ask me,\" he confessed. \"And yet at the same time, I really wanted you to.\"\n\nI trembled as he caressed my cheek again, closing my eyes as his fingers slipped into my hair. \"You did?\"\n\n\"Yeah.\" He brushed his lips against my forehead. \"Although it's probably just as well you didn't. Spending time with you, just being myself, getting back to feeling like me again\u2014it's probably what I needed more than anything.\"\n\nI opened my eyes to find him inches away, his brown eyes so very dark, so very close to mine. \"Tell me?\"\n\nHe kissed me again, my nose this time, then let out a slow breath. \"Some people might call it executive burnout,\" he said at last, the note in his voice letting me know he wasn't entirely convinced. \"And looking back on it, I should've seen it coming a mile off. Those last couple of years at Uni, I worked my socks off to get my degree, to get that First and then to get my LPC. Not because I wanted to work that hard but because...\" He paused, his lips twisting. \"Because I had to. Because it was the only thing I knew how to do. The only thing that made any sense.\"\n\nI had to blink hard. \"Because of Paul.\"\n\nDrew nodded. \"Because of Paul, yeah. Because he shouldn't have died. Because he was only twenty and I was so fucking mad at the world. Mad at God. Because,\" his smile was again wry, \"we men don't do talking about our feelings, do we? Don't go in for any of that namby-pamby stuff. Nah, we push on with things, get on with stuff, act like nothing ever happened. Work right on through it.\"\n\n\"Drew...\"\n\nMoving nearer, he kissed away the tears I couldn't hold back any longer, the tender gesture only making me want to cry even more. \"And then of course,\" he said softly, \"things got worse. I got the training contract in London, didn't I? I was in the office before six in the morning and I was usually still there at nine at night. That's if we didn't have to pull all-nighters, which seemed to happen all the time. Doing endless researching, endlessly drafting documents, performing due diligence, the whole time under massive pressure to bill clients for more and more hours. I drank gallons of black coffee, hardly slept\u2014and even when I did, I just dreamed about it all. It never stopped.\" Drew sounded uncharacteristically weary. \"Still, I did it. I did it for more than two years.\"\n\n\"But Alice always said you were happy.\" I felt a dull ache in my chest at the idea of him being miserable. \"Whenever she spoke to you on the phone, she said it sounded like you were loving it. Having a ball.\"\n\n\"Because that's what I told her. And\u2014I know this is going to sound weird\u2014but I think I thought I was having a ball. I didn't have time to think about it. Everything seemed to go at a million miles an hour. There were times when I didn't even know what day it was, let alone whether I was happy. I just kept going and going and going, until...\" He stopped, his lips twisting again.\n\n\"Until what?\"\n\n\"Until Alice got narked when I'd phoned to tell her I wouldn't be coming home for Christmas.\"\n\n\"Alice?\" \n\nBut now, I could clearly recall the day she'd come into the shop a picture of aggrieved indignation. \"He can't even come to see me for a couple of hours,\" she'd complained bitterly. \"I'm the only family he's got in this country and he can't make time for a cup of tea and a slice of Christmas cake?\" \n\nAnd then I remembered how she'd muttered something about Mohammed and mountains. Remembered her declaring she'd just have to visit him instead, whether he liked it or not.\n\n\"She turned up out of the blue on Christmas Eve,\" Drew said. \"Didn't tell me she was coming. When the doorbell rang, I thought it was the pizza guy. But it wasn't, of course. And when she saw the state of me, saw the state of my flat...\" He smiled ruefully. \"I think she might've toyed with the idea of getting me sectioned under the Mental Health Act.\"\n\n\"That bad?\"\n\n\"I hadn't shaved in about a fortnight\u2014hell, I probably hadn't washed for a couple of days, maybe more. Plus I'd just downed the best part of a bottle of Jack Daniels. And the flat, yeah, well. Bombsite.\" He shot me a sudden grin. \"Best let Alice tell you about that.\"\n\n\"So... She persuaded you to come back?\" I found myself wondering how I'd never made the connection before. Only weeks into the New Year, Drew had returned to Stow Newton, found himself a new job in Oxford and put in an offer to buy 22 Montague Street.\n\nHe pulled a comical grimace. \"Not sure 'persuaded' is the right word. You've experienced one of Alice's 'I'm saying this for your own good' speeches, right?\" He grinned again when I nodded. \"Then you can probably guess how it went. Actually, in all seriousness, I'm not sure what might have happened if she hadn't turned up when she did.\"\n\nI wasn't sure I wanted to think about it.\n\n\"And of course, once I started to think about it, what she said made a whole lot of sense. Stow Newton\u2014okay, it's hardly the centre of the universe but it's home. It's where I grew up. Where I know everyone.\" He brushed his fingers over my cheek again. \"Where you were. Although,\" he continued, just as that delicious tingling started all over again, \"when I told Alice I was looking forward to spending time with you again, she nearly blew a gasket. 'Don't even think about doing any more than that!'\" he said, in a near-perfect imitation of his aunt. \"'That poor girl's heart is fragile enough without you trampling all over it!'\" I'd just started to smile when he added, still in character, \"'Besides, she's with a very nice young man at the moment'.\" \n\n\"Tim Cosby?\" I spluttered, after taking a second to figure out whom she'd meant. \"'Nice young man'? He was forever trying to put his hand down my pants!\" \n\nDrew scowled. \"Yeah, well. I wish I'd known back then he didn't get any further than that.\"",
        "I studied his expression. \"Oh my God,\" I breathed, light dawning. \"You were jealous?\"\n\nHis scowl deepened. \"Of course I was bloody jealous. Okay, it wasn't just the thought of Alice yelling at me that stopped me from making a move on you. I couldn't let myself feel that way about you back then\u2014you were Paul's kid sister, for heaven's sake. It would've been too...\" He hesitated. \"It didn't feel like it was something I should do. Doesn't mean I wanted to see you with anyone else though\u2014especially not a wanker like Tim.\" Then he smiled. \"But Sam, you know I've always loved you. I told you, remember? Made quite a point of telling you, if I recall.\"\n\nI felt the blush start somewhere in the middle of my stomach, the heat blossoming outwards until I felt hot all over. \"But you called me 'Kiddo',\" I muttered, no longer daring to meet his gaze, instead staring fixedly at the top of the bedpost behind him.\n\n\"What?\" He gave a startled laugh.\n\n\"That's\u2014that's why I wasn't sure.\" Oh God, did it have to be this difficult? No wonder I'd avoided talking about my feelings for so long. \"That's why\u2014why I ran.\"\n\n\"That's why you took off that night?\" As I buried my face into his shoulder I could practically hear the cogs turning in Drew's brain. \"You broke my favourite mug because I called you 'Kiddo'?\"\n\n\"No. Yes\u2014sort of!\" My voice was muffled against his robe. \"I thought maybe you meant you'd always loved me as a friend\u2014like a sister.\"\n\n\"A sister? After what we did? You think I'd do that to my\u2014\"\n\n\"I kn-o-ow!\" I wailed, squeezing my eyes tightly shut. \"But you had another text from Angie and it said\u2014it said...\"\n\n\"You read another one?\"\n\n\"I didn't mean to! I just wanted to check that I'd read the first one right\u2014but then another one came and it was from her and...\" I winced in shame. \"I mean, I know now that it wasn't what it looked like, but I thought\u2014I thought...\"\n\nI felt Drew's hand on the back of my head, his fingers tangling into my hair. \"You know,\" he said eventually, \"it's ironic. 'Cos you want to know what I spent the whole evening talking to Angie about\u2014the whole bloody evening?\" And grasping a handful of my hair, he none-too-gently tugged my head from his shoulder. \n\n\"You,\" he said, looking straight into my eyes. \"How much I loved you, how much I wanted to be with you\u2014but how you kept insisting things had to go back to the way they were. That we had to stay friends and nothing could change. And all the while,\" he raised his gaze briefly to the ceiling, \"I kept picturing you with Marco Maretti, wondering what the hell he was doing. Whether he was trying to make a move on you. It was killing me.\"\n\nI moistened my lips nervously. \"He did try to kiss me.\"\n\n\"I know.\" To my astonishment, Drew grinned. \"He told me.\" And as I stared he continued, \"While we were in the car today. He picked me up from Marco Polo Airport earlier. The poor bloke's spent the whole day chauffeuring you and me around. And I take it all back, okay? He's actually a really good bloke. Spent fifteen minutes doing an 'Alice' on me though, telling me how if I ever hurt you, if I ever let you down, I'd have to answer to him. And frankly,\" Drew's grin became crooked, \"I was a little bit scared by the end. I mean, the guy's Italian, his family's loaded. He's probably got links to the Mafia.\"\n\n\"Marco was in on it all? You mean...\" I experienced another light bulb moment. \"There wasn't a water leak at his house?\"\n\nDrew shook his head, still looking amused. \"Nope. That was Roxy's idea. She was on a bit of a roll by then. She was the one who got us all organised, rang around, found me a flight. Marco's dead impressed by her, by the way. If she takes that internship, don't be too surprised if she doesn't ever come back.\"\n\nRoxy's internship. It'd been a done deal even before Marco made me promise to take a holiday. Typical. \"And Angie...?\"\n\nHis eyes softened. \"Angie's been a really good friend. She's really looking forward to meeting you again sometime. We've talked about me bringing you over for a while, but...\" He smiled. \"I didn't want to tell you I was learning to play the guitar. To start with, I wasn't sure if I'd ever be any good and I figured if no one else knew what I was doing I could pootle along at my own pace, no pressure. And then, when I realised I was getting better, I thought it'd be a laugh to surprise you one day. But of course by then, going round to see Angie was much more than going round for a lesson. We'd spend half an hour playing guitar\u2014and an a hour and a half chatting.\"\n\n\"What about?\"\n\n\"Everything. Anything.\" He caressed my cheek before adding, almost apologetically. \"Paul.\"\n\nOf course. I gazed at him helplessly, my vision blurring. All this time, all these years, he'd needed someone to talk to. But I hadn't been that someone because I couldn't be that someone. The realisation was crushing. \"Drew...\" \n\nShaking his head, he gently touched the tip of one finger to my mouth. \"You see, I still hadn't dealt with anything. Sure, I came home, started working in an office where people were sane and actually had lives outside work. I caught up with old friends, started socialising again, started going down the pub. But no one really mentioned Paul. And if his name did happen to come up someone would change the subject in three seconds flat. Usually me.\" He grimaced. \"So stop looking at me like that, 'cos I didn't want to talk about him anymore than you did.\"\n\n\"But Angie did?\"\n\n\"She made me.\" He pulled another face. \"You see, what I didn't know at first is that she isn't just a music teacher. She's done quite a bit of counselling over the years and apparently it really worried her that I wouldn't talk about Paul. So she kept trying to get me to talk, always talking about him, telling me little anecdotes about the time he did this and the time he did that\u2014until in the end, I yelled at her to back off. Which,\" he looked decidedly sheepish now, \"was pretty embarrassing and left me feeling like I could bawl like a baby.\" And then he laughed. \"Ah, sod it. I did bawl, okay?\"\n\nI bit my lower lip, perilously close to bawling myself. \"Welcome to my world,\" I said, managing a smile.\n\nHe grinned, wiping a tear from my cheek with his fingers. \"Oh no you don't, okay? That's not fair. You know how I feel about crying women in bathrobes. Now what am I supposed to do? Finish the story? Or,\" he jerked his head towards the bed, \"should I just tie your hands to the bedposts with Roxy's tinsel and ravish you senseless?\"\n\nOh God. As the image flashed into my head in glorious technicolor, everything south of my navel contracted. \"Is\u2014is there much more to tell?\"\n\n\"Samantha Bloom!\" His eyes widened in amusement. \"The things I've still got to learn about you.\" He cupped my hot face in his hands. \"And lucky me, I've got a whole week to start learning.\"\n\n\"A week?\" I whispered, just as his lips were about to land on mine. \"I told Marco three days!\"\n\nDrew smiled. \"Doesn't matter what you told him. Marco and I agreed on a week. And then\u2014but only if you want to, Marco says\u2014you can start working for him. You don't have to. It's your decision. Though now I've had a chance to think about it, I actually think you should. Like you've said all along, it's a fantastic opportunity.\" His smile broadened. \"Who knows, maybe you'll get snapped up by Salvani.\"\n\n\"But if I stay, I won't see you! You'll be in Stow Newton and I'll be here and\u2014\"\n\nHe silenced me with the gentlest of kisses. \"Wanna bet? See,\" he kissed me again, laughing softly when I trembled, \"I haven't taken any leave this year. I've even got a week in hand from last year. So I was thinking I could be here as much or as little as you want me to be. Every weekend, if you like. And if you end up staying more than three months...\" \n\nMy eyes slid closed as he captured my mouth for a much longer kiss, his fingers drifting into my hair before falling to the collar of my robe to caress the bare skin beneath. \n\n\"...then I'll just have to learn Italian. Try international law. Or,\" his lips curved against mine, \"I could forget law and we could buy a vineyard or something.\"\n\nI gave a breathless laugh, opening my eyes again \"Seriously, you'd do all that? Give up your job\u2014for me?\"\n\n\"Ah Sam, I've told you before.\" His hands explored further beneath my robe, easing the heavy towelling from my skin, pushing it from my shoulders until it abruptly fell to my elbows, leaving my top half bare. \"I love you,\" he said with a smile, gazing at me with undisguised pleasure. \"Always have, always will. I'd do anything for you.\"\n\nAnd stooping slightly, he swept me off my feet then carried me over to the four-poster bed. But to my surprise, he didn't set me down, instead clambering on his knees with me into the middle of the mattress before collapsing backwards against the pillows. \"What the hell are you doing?\" I giggled as he yanked the sleeves of the robe from my arms then adjusted me across his lap.\n\n\"It's Christmas,\" he said grinning. \"Well, nearly. And seeing as you're the best present I've ever had, I really ought to unwrap you slowly.\" He lowered his head to kiss me, his eyes darkening. \"Although to be honest, I'm really not sure if I can. Because between you and me, it's going to be tough not to go mad and rip off the paper.\"\n\nI gasped as he nudged my chin backwards, his lips blazing a trail of kisses across my neck, my collar bone, the soft rise of my breast. At the same time, I could feel his hand moving over my stomach, gradually edging beneath the robe still covering my lower half. \"You\u2014you could, you know,\" I breathed, letting out a shuddering cry as he gently bit my nipple. \"I wouldn't mind if you\u2014oh\u2014did. Really.\"\n\n\"No?\" I could feel his breath against my skin, hear the amusement in his voice. \"Well, I s'pose I could always\u2014\" his fingers began working on the tie at my waist \"\u2014open the next one slowly. And say, the next one. And the one after...\" He gave a sudden growl of frustration. \"Jesus, Sam\u2014what kind of knot is this?\"\n\n\"A reef knot? Maybe a granny or something? I don't know-o-o...\" I shrieked as he lifted me again, pitching me around until I was half-sitting, half-lying between his outstretched legs, my right arm still up around his neck. \"It's your fault it's so tight!\" I squeaked, watching him use both hands to grapple with the problem now. \"You're the one who made me jump. You're the one who hid behind the curtains and then told me you'd seen me prancing about with no clothes on. You're the one who...\"\n\nBut the words died on my lips as, having worked the knot loose at last, he promptly swept my gown wide open and peered down over my shoulder. \"Well... I have to say, this looks lovely.\" He grinned as I rolled my eyes at him. \"How did you know exactly what I wanted?\"\n\nI sniggered, my snigger turning into a sob when he promptly kissed me, thoroughly and deeply, his tongue on a mission to explore every part of my mouth. As the seconds passed, the warm hands that had settled first on the tops of my thighs smoothed upwards, worshipping my hips then my waist, sweeping back over my belly before rising slowly. Much too slowly. I moaned into his mouth when he finally palmed my breasts. \n\n\"Aw,\" he sighed happily, catching the ridiculously sensitive peaks between his fingers and making me whimper even more. \"God, I love all the little noises you make.\" And as if to prove it, he kissed me again, swallowing my helpless cries as he traced feather light circles around my nipples with the pads of his thumbs. \n\n\"Drew, stop it!\" I begged, half-laughing, half-gasping for breath when he eventually let me up for air. \"My turn, please? I can't even touch you like this. Let me touch you. This isn't fair!\" \n\n\"Are you kidding?\" I could hear the outraged amusement in his voice, one hand leaving my breasts now and snaking downwards. \"Do you have any idea of the view I've got from up here? How beautiful you are? God...\" It was Drew's turn to moan. \"I've never been more turned on.\"\n\nGiven I could feel the evidence of his arousal through the thickness of two bathrobes, I didn't doubt it. \"But that's not the point! I want to\u2014\" Then I stopped, noticing his fingers were now skirting beneath my navel, taking a lazy zigzag path down my abdomen. \"Oh no...\"\n\n\"Oh yes,\" he corrected, his breath warm against my ear. The fact I could both see and feel what he was doing was almost too much to bear, his touch teasing but deliberate. I could hardly breathe by the time his hand ventured lower to toy with the edge of my curls. And when at last, his fingers sank gently into the folds beneath, I arched into his hand.\n\n\"Drew!\" I yelped as he started to stroke me, the crackling evidence of my slickness plain to hear. \"Oh God\u2014o-oh\u2014slowly! Please...\"\n\n\"Whoa.\" He laughed the word, kissing my temple. \"And I thought I was turned on. You seem to have made a bit of a puddle down here.\"\n\n\"Bast-ar-ar-ard!\"\n\nAs I groaned he laughed again, the movement of his middle and index fingers leisurely but unrelenting as he turned his hand, encouraging my thighs to part wider. And then, as if he considered that wasn't stimulation enough, the hand over my left breast began moving again, his thumb firmly strumming my nipple.\n\n\"Oh,\" I breathed, the pressure already building between my legs, a familiar wash of heat radiating from my very core, making me ache with need. \"Drew, don't. Please...\"\n\nNudging my face to his, he kissed me again. \"Gorgeous,\" he gave me a rueful smile, \"I'm not going to last two minutes once I'm inside you. Not this time. So just relax and let me\u2014\"\n\n\"No!\" I pleaded, willing him to understand. \"Please, I want you inside me\u2014now!\"\n\nStill stroking me, still caressing me incessantly, Drew shook his head. \"I'm serious. I might only last a minute. Thirty seconds even.\" \n\n\"I don't care!\" I wailed, terrifyingly close to the brink. \"I need to feel you inside me when I\u2014when I...\" I trailed off, unexpectedly embarrassed to say the word. \"Oh God. Please!\"\n\nHis smile widened. \"When you what?\"\n\n\"Drew!\" Grabbing the nearest thing I could find for leverage\u2014which happened to be his left calf\u2014I yanked myself free from his arms, toppling forwards on to the bed. When I lifted my head, I could hear him laughing and when I looked up, I gasped. Because in the mirrored doors of the wardrobe I saw myself on my hands and knees, stark naked, my bottom raised in the air. And as I stared, I watched Drew toss aside the bathrobe I'd left in my wake then make short work of discarding his own. \n\n\"You want me inside you when you what?\" he demanded, now equally naked, making eye contact via the mirror. He crawled up behind me, making me squeal as he moved between my legs, his heavy erection pressing against me. \"Say it,\" he urged my reflection, reaching under me to cup my breasts and smiling when I moaned. \"Say it and I'll make it happen.\"\n\n\"Oh God, you feel huge,\" I mumbled, suddenly rather scared. \"Maybe\u2014maybe this isn't...\" I drew in a shaky breath as one of his hands found its way beneath me again, his fingers gliding easily through the wetness. \"Please...\"\n\nHe watched me. Watched me watch myself, the way my eyes widened with each deft stroke, the way my lips parted. \"Tell me what you want.\"\n\n\"Drew!\" Pretty soon, it was going to be impossible to tell him anything. \"Please. Oh, please...\"\n\nHe looked amused, the hand holding my breast gliding around to my waist as the movement of his other hand quickened, bringing me frighteningly close to the point of no return. \"Come on, use your words.\"\n\n\"In me!\" I cried, rocking my hips in frustration now. \"I want you in me when I come, okay? I want you-oo-oh!\"\n\nHis hand abruptly sliding beneath me, he found my opening and was there, hot and blunt against me. And with his fingers spreading me wide, he pushed hard, making me sob with relief as he pressed inside me, opening me wider still, the intense stretching sensation almost overwhelming. \"Dear God,\" he groaned. \"I'd forgotten how good you feel!\"\n\nRemembering the mirror, I looked up to see his eyes hooded, his face contorting as he pulsed against me. But as he slid further and further in, it became increasingly difficult to keep watching, my own eyes closing on each mini thrust. \"You're going so deep. So deep,\" I gasped incredulously. \"There can't be\u2014you can't...? Fuck!\" \n\nDrew answered my unfinished question with one last, sustained surge forward, filling me so utterly it felt as though his whole body had merged with mine, his arms coming around me when he stilled at last, holding me to him. \"Incredible,\" he groaned, sounding hoarse. \"God help me... Sam, I'm sorry. I'll make it up to you, I swear.\"\n\n\"Make what up to me?\" I realised I was trembling, my knees wobbling, making him move inside me despite his best efforts to hold me in place. But then I lifted my head and saw his expression in the mirror, saw the pure, undiluted desire there and I knew. \"I don't care. I love you,\" I said, holding his gaze, watching his eyes darken abruptly. \"I love you. I want you. I want this...\"\n\nI hissed as he grasped my hips and pulled back, the dragging sensation of his flesh leaving mine almost painful, tortuously slow. Then I wailed, Drew impaling me in one glorious thrust, groaning with me as he drove in to the hilt, juddering against me before withdrawing and doing it all again. And again. And again, each pass making me shiver with pleasure, occasionally touching an exquisitely sensitive part of me that throbbed every time he found it. Craving more, I pushed into him, meeting his thrusts, angling my hips in an attempt to have him stroke that same place, learning by and by that if I leaned backwards against him... Oh yes. A little more\u2014yes...\n\n\"Sam.\" I felt rather than heard Drew laugh my name, his laboured breath warm against my ear.\n\nMy ear? Disorientated, I opened my eyes only to gasp as I saw our reflection. Somehow\u2014I couldn't for the life of me figure out how\u2014I was no longer on my hands and knees, but kneeling over his lap, facing outwards. \"How did\u2014how did you do that? Oh!\" I groaned when he pulled me closer, his hands circling my waist as he plunged deep. \"That feels so good...\"\n\n\"Me?\" Still thrusting, still hitting that wonderful spot, he kissed my temple. \"It was you. I couldn't have stopped you if I wanted to. Not that I wanted to. You've got to admit,\" he nodded towards the mirror, \"this looks pretty hot.\"\n\nIt did. Positively pornographic in fact, a lurid scene framed by mahogany bedposts and the burgundy and gold finery of the drapes and canopy around us. Me, my still-damp hair wild, my cheeks flushed, my rosy-peaked breasts heaving as my body gyrated over his. Drew, his face a picture of concentration as he drove in and out of me, his hands roaming my skin, investigating my every curve and hollow. \n\n\"But I read about this,\" I gasped, startled. \"This\u2014this was number ten.\"\n\nHis brows lifted in amusement. \"What the hell have you been reading?\"\n\n\"I can't watch.\" I closed my eyes, almost frightened of the ache building between my thighs, of the way that place inside me seemed to be swelling now with every thrust. \"Oh God, I'm going to come anyway!\"\n\n\"That's the idea. Hey...\" His voice softened. \"Look at me.\" He brushed a kiss into my hair when I didn't respond, tilting my head back against his shoulder. \"Not in the mirror. Right here.\" \n\nI opened my eyes to find him smiling at me. \"Drew...\"\n\n\"No more mirror.\" He kissed me tenderly, one hand working over my lower tummy again, wandering downwards. \"Just you and me now.\"\n\n\"Drew.\"\n\nHis mouth captured mine as warmth swirled through my womb, Drew thrusting faster now, his fingers relentless. I gasped at the increase in pressure. Then, time seeming to stand still, every muscle of my body tautening, the pressure turned into impossible pleasure. Shuddering as the ferocious wave hit, I sobbed helplessly, my orgasm roaring through me like fire. And suddenly, it was Drew who was violently shaking, shouting my name as he plunged deep inside me.",
        "\"Sam?\" He sounded breathless.\n\n\"Still here.\"\n\nI felt his smile of recollection against my lips. \"If I promise never to call you 'Kiddo' again, will you promise not to run out on me this time?\"\n\nAs I gave a gulp of laughter, he tightened his arms around me and tumbled us sideways to the bed. \"I don't think I could run if I tried,\" I panted, whimpering as he slid out of me and attempted to straighten his legs, pushing mine forward with his. \"Right now, I don't even think I can walk.\"\n\n\"Yeah,\" he murmured contentedly. \"Get used to that.\"\n\nGiggling, I closed my eyes as he snuggled up to me, his hand closing over my breast. \"Thought you said you'd only last thirty seconds? I made that about forty-five,\" I teased then yelped as he pinched my nipple. \"What did you do\u2014imagine the England football team losing the World Cup final or something?\"\n\n\"Marry me.\"\n\nOpening my eyes, my heart seemed to skip a beat as I stared at the bedpost in front of me and the tinsel wrapped around it. \n\nFootball...\n\n\"Sam?\"\n\nI swallowed hard, the tinsel becoming a shimmering purple haze. \"There's something you\u2014something I should have told...\" My voice cracked on the words. \"Oh God.\"\n\n\"You're crying?\"\n\n\"No.\" But as I felt him raise himself on one elbow behind me, I buried my face into the bedclothes. \n\n\"Sam, gorgeous.\" He stroked my hair, sounding ruefully amused. \"If it's that terrible an idea\u2014\"\n\n\"It's not that.\"\n\n\"Then...?\"\n\n\"You said you wanted a whole team, remember? Subs and all.\"\n\nThere was a pause. And then I felt his arms beneath me, gathering me up from the bed, turning me to face him as though I weighed nothing. \"Children?\" he demanded, his eyes soft. \"That's what this is about? Just because you overheard your mother asking the doctor that time if you'd still be able to have them?\"\n\n\"You know about that?\" I gazed at him incredulously.\n\n\"Alice told me. And she said you told her you didn't even hear what the doctor said. That there's probably no reason at all to think you won't be able to have a baby even though you've only got one kidney, so long as you're healthy. So long as we take good care of you. But Sam, even if it turns out we can't have children of our own, I wouldn't care, okay? It's you I want. And anyway, there are other ways of\u2014\"\n\n\"Alice told you all that?\"\n\n\"Okay, okay\u2014I'm sorry.\" His lips twisted guiltily. \"But I saw the look on your face when we were talking about it at the Park, all right? When you said you didn't know if you wanted children, I knew damn well you were lying. So I asked her about it yesterday. I knew you'd have talked about it with her. Well,\" he smiled, \"that she'd have wormed the truth out of you at some point, anyway.\"\n\n\"Years ago,\" I admitted with a wry smile of my own. \"But then that's Alice for you.\"\n\n\"She'd have made a good lawyer.\"\n\nI raised an eyebrow. \"Is there any such thing?\" \n\n\"Oh!\" Drew pretended to scowl. \"You'll pay for that, Mrs Barnett...\"\n\nI shrieked as he scooped me into his arms and promptly rolled on to his back, pulling me on top of him. \"Mrs Barnett?\" I panted laughing. \"Wait a minute, when did I say 'yes'?\"\n\nHe grinned up at me. \"You will,\" he promised, sliding his hand behind my neck. And pulling me down, he kissed me, slowly and comprehensively, until I was dizzy with pleasure. \"By the way,\" he murmured just as I felt the first stirrings of his re-arousal beneath me, \"what the hell is number ten?\" \n\nFor a moment, I was too dazed to work out what he meant. And then I remembered. \"Oh... I was reading this magazine article on the plane called 99 Ways To Please Your Lover Tonight.\"\n\nHe let out a hungry growl. \"Please tell me you've still got that magazine?\"\n\nI nodded, amused. \"Want me to get it?\" Pushing myself upright until I was straddled across his thighs, I glanced around to see where I'd left my bag, my gaze instead falling on the tinsel twisted around the bedpost. \"Although...\" I gave him a contemplative look and leaned forward to retrieve it, then grinned at his expression when I reached for his hands. \"Somebody sitting next to me on the plane highly recommended number seven.\"\n\n\"What's number seven?\" He looked suspiciously from me to the tinsel I was wrapping around his wrists. \n\nLooping the tinsel back around the post, I tied the ends in a bow. \"Guess.\"\n\n\"Sam?\" Drew watched me crawl backwards, his eyes widening when I found the perfect position between his knees. \"God, seriously? Because, you know, you don't have to...\" \n\n\"Ah, but I want to. You see,\" I sent him a butter-wouldn't-melt smile, \"I love you Drew Barnett. Always have, always will.\" \n\nHe groaned as I lowered my head. \n\n\"And I'd do anything for you...\"\n\n*\n\nThanks for reading. As always, your votes and comments are very very much appreciated!\n\nLily -x- "
    ],
    "authorname": "evanslily",
    "tags": [
        "romance novella",
        "plane",
        "shop",
        "italy",
        "hotel"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/anything-for-you-ch-09"
}