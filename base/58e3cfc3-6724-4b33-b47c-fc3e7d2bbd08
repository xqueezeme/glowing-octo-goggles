{
    "title": "The Last Ride",
    "pages": [
        " This story is a standalone for \"Sharing is Caring.\" I wasn't sure how this one was going to go and I wasn't entirely happy with what I originally started. A road trip and a bored waitress put me on the right path, I think. Unlike most of my work, there is graphic sex in this storyline. Thanks to blackrandi, sbrooks103x, Bebop03 and stev2244 for the beta reads and editing. This would be unreadable without them. There are others who prefer not to be named; you know who you are and you know you are appreciated. \n\n The Last Ride of Iceman and Gypsy Jane \n\nJenny was already sitting on the edge of the bed staring down at me when I woke up. As soon as I saw her expression, I knew what she was thinking about. \n\nI blinked the sleep out of my eyes. \"This is crazy, Jenny. This doesn't have to happen.\"\n\nShe smiled a bit sadly, then leaned over and gave me a soft kiss. \"This isn't about 'having to' do anything, Terry. This is about promises. Promises you made to me and promises I made. Promises I need and want to keep.\"\n\nI sat up and shook my head. \"Still...\"\n\nShe cut me off. \"Terry Eisner. This is important to me. It's a small gift I want to give in return for being given the most wonderful thing I could have ever imagined. This is going to happen.\"\n\nFrom the set of her jaw I knew she meant it and would never back down. I knew it from near forty years of marriage. I swung my legs out and felt the plush carpet under my feet. I'd put in that carpet: I'd built this whole house, this whole home, just for Jenny. Leaving it, leaving her, just to go to work had always been hard. Leaving it today seemed almost impossible, unbearable. She slid off the bed, eyeing me cautiously.\n\n\"I'm sorry, Terry, but you knew this was coming; I told you from the beginning that I made those promises, and you swore you would be okay with this.\"\n\nI looked over at the wingback chair in the corner of the room, a chair she'd never even let a cat sit in. My jeans, black T-shirt and boots sat neatly piled in it where she'd set them. She left to fix breakfast while I showered and changed.\n\nI glanced in the mirror; a grey bearded hard-case stared coldly back at me. Forty years of construction, tossing bags of cement and carrying cinderblocks, had left me with a catalog of aches and pains, but it had also left me lean and hard. I'd usually had to do paperwork in the office every day. The owner of a company has to do that, but I'd made a point of getting out and working with the crews every day. It cut down on bullshit and I could tell would-be clients that I personally helped build everything we ever put up.\n\nJenny had coffee, hash browns, eggs, bacon and sausage on the table for me in the kitchen. We ate slowly, wordlessly, while she watched me intently. \n\nWhen I was unable to put it off any longer, I finished eating and we pushed away from the table. She took my hand and walked me to the front door, stopping to kiss me for the last time.\n\n\"I don't want this to hurt us, Jenny. I don't want to ruin this.\"\n\nShe looked up at me and smiled, a lopsided smile, but a real one. \"This won't hurt us, Terry. It can't. Not at all.\" She gently pulled my left hand up to her chest and started to slide my wedding band off. I tried to curl my fingers to stop her but she shook her head and straightened them out. \n\nShe let go just long enough to put the ring on her thumb. \"It will be right here for you.\"\n\nI just stared at her wordlessly.\n\n\"It will be, Terry, I swear.\"\n\nShe reached up on the coat rack next to the door and pulled down my vest, a vest I hadn't worn in forty years, and handed it to me. \"Whatever happens between Iceman and Gypsy isn't a problem for us, Terry. It never was and it never will be.\"\n\nShe gave me a long hard kiss, then a soft gentle one. \"The first one's for you Terry. You give that second one to Jane and you tell her I love her.\" \n\n*****\n\nMy bike was out on the driveway, a 1977 Harley Lowrider, paniers already packed and the whole thing polished to a mirror finish. She'd done that herself. Months ago, when this whole insanity started, she'd pulled my bike out of storage and had it restored to top condition. The grinning fanged horror that stared at me from the tank had been faded almost to oblivion. She'd had it carefully touched up. Everything had been re-chromed. She'd run like a dream, and I'd taken her on longer and longer rides; Jenny had gone along on every one, clinging dreamily to me for hours on end. It would have been wonderful except for the looming shadow of the future. \n\nThe only change Jenny had made had been to have them add a low bitch bar in the back, one she certainly didn't need. She was right to do it, but the unspoken reason for it was enough to turn me grim and sober for weeks.\n\nI slid on my vest on and the weight of it was far more than the leather and cloth of it.\n\nMy bike started on the first kick, just like she always had. Eager to get on the way, hungry to go where I had no wish to go. Slate grey skies hung over me as I headed along the ridge road, miles passing under me with that unreal sense of floating to nowhere.\n\nIt took nearly two hours to reach the odd little house on the outskirts of the city. A small yard jammed with a mass of bushes and flowers, all starting to look weedy and slightly brown in the late summer heat.\n\nAs I rolled up I could see her standing by the gate, hipshot. A vision of skintight jeans, a tiny vest; her brilliantly colored scarf tied on her head. She was holding an elaborately embroidered bag and an open bottle of whiskey. \n\nShe hadn't changed a bit.\n\n*****\n\n*****\n\nShe'd stood just that way at Sturgis, over forty years ago. Jeans so tight they laced up the sides, just like her vest, leaving a two inch wide strip of bare tanned skin showing all the way up from the ankle. My first impression was all full wine-dark lips and a mane of wild hair kept barely in check by a blazing bright yellow and crimson scarf, ends trailing down over her shoulder. One look in her kohl-rimmed eyes told me all I needed to know. \n\nThat woman was the Devil herself.\n\nShe watched me unabashedly, drinking me in as she took a long slow sip from her whiskey bottle. I couldn't help glancing back as I passed her and turned a corner. She tracked me, and even at that distance I could see the hungry smile on her face. \n\nI tried to put her out of my mind. I'd come to Sturgis to do a job, cut a deal for the club. We were moving hash cross-country for a bigger club, a cash deal. We made most of our cash running China White and Black Tar, but the hash deal had been too good, too easy to pass up. They'd missed two meets, though, and I needed assurances we were still in business. When the Wandering Sons sent me, they meant business. The \"Nomad\" rocker under my patch was a hint; I wasn't assigned to a territory and I might be an enforcer. The eight crimson skulls embroidered on my vest were a clear fucking warning. \n\nThe meeting went well, though; they'd had five guys rolled up in a police raid and were being cautious.\n\nTwo days later, that Devil stalked up to me, staring straight into my eyes all the way up the block. \n\n\"Give a girl a ride?\"\n\nI put my beer down. \"Not leaving for a couple days.\"\n\nHer teeth bared in a too-wide smile. \"Wasn't talking about that kinda ride.\" \n\n\"Who do I have to kill?\"\n\nHer eyes glittered. \"Nobody. The asshole's in the hospital. He got stabbed.\"\n\n\"They must not've done it right or he'd be on a slab.\"\n\nShe took a slug of whiskey and laughed softly. \"Maybe you can show me how to do it better next time.\"\n\nI didn't ask why, I never asked why. Not my fuckin' problem.\n\nIn my tent, she was a storm of heat and need, tasting of whiskey and weed. \n\nWhen I finally decided to leave Sturgis, she was there, bag and bottle in hand. \"Got room for a couple bottles of whiskey and a shitload of Acapulco Gold?\"\n\nThat was the start. She was all about fucking, whiskey and weed. She warned me up front; we'd have a month, maybe two at most before she moved on. She never stayed with a man longer than that. Gypsy Jane wasn't just a nickname, it was what she was. \n\nAnd yet... \n\nAnd yet...\n\nThere she was, month after month, as close as my shadow, a Siren wreathed in clouds of smoke, walking across campgrounds in nothing but her vest and sandals; that tanned bare ass a promise of heaven. \n\nThere were fights, of course. Most men stayed clear. I was Iceman, the enforcer for the Wandering Sons, and Gypsy Jane radiated as much danger as heat. \n\nBut there were fights; she made sure of it and watched ravenously when it happened. She fucked like a woman possessed afterwards, boiling hot and insatiable. I always suspected if I ever lost, she'd just fade away like a fever dream. \n\nBut I didn't lose; Gypsy Jane only craved the \"fair\" fights, one-on-one, or sometimes one-on-two. She hungered for proof of her attraction, proof of what I would do for her. The fights were ones I could win. Gypsy had her own rules; a man who tried to stab me while I was taking down two of his friends learned that the hard way. \n\nHe wasn't the only one with a knife and he didn't have the sense to realize that I might be the least of his problems.\n\nWord went out, but Gypsy could always find the fools and the drunks, knew exactly what to do, what to say to provoke them into rage or lust. I knew exactly what to do to beat them down and leave them laying in their own blood on the ground.\n\nWe were what we were, and it felt like we'd be that way forever.\n\nThe end came suddenly, slamming like a door caught by the wind, almost four years after I first saw her at Sturgis. \n\nFour years and seven more embroidered skulls. \n\nIt wasn't even about the club. I caught a shithead cheating at poker and beat the fuck out of him, then I was charged with assault when he turned out to be a police informant. He spent two months in the hospital and I got eighteen months in jail with five years probation.\n\nIn a way, I was lucky. Six months after I was in, the Mother Chapter and most of the regional chapters were raided. Some of the leadership were killed when the Mother Chapter went down and a couple dozen more ended up with long sentences for all the China White and hash that'd been found. A snitch somewhere had set us up good. \n\nWhile I was in, the Wandering Sons MC collapsed. With no national, or even regional leadership, chapters fought for survival. A few broke up entirely, the rest ended up patched over by the bigger MCs. \n\nThe feds questioned me, but I'd been inside just long enough to be completely outside the sting. I'd never carried anyway; that wasn't my job. As desperate as the feds were to put me away longer, nobody who knew the truth was foolish enough to talk about twelve lonely graves or three men killed in back alleys.\n\nThe day I walked out into the light, I had no plan. I knew the Wandering Sons were done. I was the last one. I knew the feds were watching me. I had nowhere to go, parole and the ever-present feds meant I had to stay in the county. No MCs should be interested in me, I'd bring them more pain and heat than anything else. Even if they were, it wouldn't be fair to bring that kind of heat into a brotherhood.\n\nA battered pick-up truck sat outside the jail and a dark haired figure in loose jeans and a sweatshirt sat on the hood, looking irritated and bored. For a moment, just for a moment, I thought she'd waited for me. Then the girl pushed her glasses up and looked at me sourly. \"Are you Terry Eisner?\"\n\n\"Yeah, that's me.\"\n\n\"My sister asked me to meet you when you got out. She wanted me to make sure you had a place to stay. She made me promise to get you set up.\"\n\n\"Thanks, I...\"\n\n\"Don't thank me, I could give a shit. Just dealing with Jane and her screwed up life. You know she's not coming back, right?\"\n\nI nodded. \"I figured.\"\n\nWe rode in silence for half an hour until she pulled up in front of a crappy little apartment building and handed me a key. \"They take month to month rent, you've got a month paid up.\"\n\n\"Thanks.\"\n\nShe snorted a mocking laugh. \"You owe me a hundred bucks. If you're on parole, you need a job anyway. Try TJ's Construction, they always need somebody to carry heavy shit and you look like you might be good at that.\"\n\n\"I'll get you the money...\" I paused. \"What's your name?\"\n\n\"Jennifer.\"\n\n*****\n\n*****\n\nGypsy Jane raised one eyebrow as I rolled to a stop by the gate. \"Give a girl a ride?\"\n\n\"Rules of the road. Ass, cash, or grass.\"\n\nShe hesitated for a second then forced a smile. \"I'm broke, but I got a shitload of prime weed and I'm the hottest piece of ass you've ever met.\"\n\n\"Climb on then.\"\n\nShe felt frail, like a paper mache doll, holding on weakly at first. She felt like she'd blow off in the first crosswind and I almost headed back. Take her to Jenny, take her to someone who could deal with this. \n\nBut a couple of hours later, she'd settled in. Her grip grew more sure and her balance came back. It was as if she'd never left my bike. \n\nWhen we stopped to eat, she just picked at her food, staring at her plate and ignoring me. She stepped out while I paid, and I found her with her eyes closed, laying back across the bike, boots up on the handlebars, finishing a joint, a half empty bottle of whiskey dangling from her hand.\n\nI stood over her for a long moment until she lazily opened her dark eyes. She gave a languid smile. \"Fuuuuuck. I needed that.\" She pulled herself up, blinking slowly. \"Got Indigo Crush. Makes Acapulco Gold look like railroad weed.\" She held the joint up. \"Want a hit?\"\n\n\"I get couch lock, we ain't getting anywhere fast.\"\n\nShe sighed slowly, looking down for a second, the idea of time looming uncomfortably. She changed the subject. \"Too bad it's so damn cool. I'd love to wear a lot less.\"\n\nIt was almost 90 degrees, but she had goosebumps on her arms. I shrugged. \"You'd ride naked if you could.\"\n\nShe laughed throatily \"I did, remember?\"\n\n\"Across half the Ouachita range in just your scarf and boots.\" I couldn't help smiling at the memory.\n\n\"I was so fucking turned on. Everybody staring at me. The stitches on your colors rubbed my nipples the whole goddamn way. The seat took three days to dry out.\"\n\n\"I remember, we didn't even get the tent up, you did me right in the middle of the camp.\"\n\n\"Fuck yeah. That made it even better. Mikey's bitch, what's-her-name with the big fucking tits, Karen, I think? She couldn't stop watching. Then she got into that huge fight with Mikey for looking, too. Wonder what ever happened to them.\"\n\nI shrugged. \"Who knows? Probably still out there somewhere.\" \n\nI'd heard Mikey and Karen had taken a curve by Snake River Canyon a bit too fast and flipped over the guardrail. They never even recovered the bodies, but Gypsy didn't need to know that. Not now. Not ever.\n\nWe rode for another six hours before I pulled off at a motel. Gypsy could barely walk, but when I reached out to help her, she snarled at me, eyes flashing. \"No. Goddamit. Not you too!\"\n\nShe staggered into the room and locked herself in the bathroom.\n\nWhen she came out she was in a t-shirt that went to her knees. I cleaned up, and downed a handful of aspirin. \n\nAs I was getting ready to get into bed, I was planning on just stripping to my boxers, but I caught her watching me darkly.\n\nI tossed the boxers in the chair and climbed into bed. She still had her T-shirt on, but that wasn't my problem.\n\nWe just lay there in the dark, listening to the buzz of the shitty motel room clock for a while. She turned away and I heard a muffled. \"Thank you.\"\n\nI turned toward her and dropped an arm over her. \"For what?\"\n\n\"For trying not to...\" She stopped for a second. \"That's the worst fucking part, you know. The fucking pity. The little hospice nurses trying to be so nice to the 'sweet little old lady' is bad enough, But the pity makes me want to throw up.\"\n\nShe shivered a little and I pulled her closer.\n\nI don't know whether she was talking to me or the dark when she went on. \"They don't know shit. Little college girls. Think I'm a funny old lady with a bunch of silly fucking stories.\" She shuddered in revulsion. \"I don't want to die that way, Ice. Not strapped in bed in pain with a bunch of fucking tubes sticking out of me just waiting for the end.\" \n\nI knew what she was asking, I just gave her wrist a squeeze. It was enough. She knew I understood. \"They don't know you, Gypsy. You're the Devil and you always will be.\"\n\n\"Damn right.\" She settled a little. \n\nI chuckled. \"You remember that little cutie in Hells Canyon? The little Cindy-Lou-Who that came into our tent on accident? She probably didn't walk right for days.\"\n\nThe little blonde college girl with the topknot ponytail had been so stoned she'd just crawled into our tent while Gypsy was riding me cowgirl, then sat there, just staring at us in the glow of her little flashlight until Gypsy grabbed her ponytail, kissed her and began stripping the clothes off her.\n\nGypsy laughed huskily. \"I know she didn't, you pounded the fuck out of her half the night.\"\n\n\"I don't remember you bitching about it. Hell, I'd only recognize her ass, 'cause that's all I saw all night. You spent all night staring at the top of her head. That girl liked pussy.\"\n\n\"She did.\" Her voice trailed off. \"You know I saw her again?\" Her voice sounded weighty, serious. \n\n\"Really?\" \n\n\"Yeah, after... after you got locked up. Maybe four years.\" She took a deep breath. \"I OD'd on horse in Alameda. I died twice in the ambulance, but woke up in the hospital. The guys I was riding with took off and I wasn't sure what I was going to do. One of the nurses kept staring at me. The day I was supposed to be released she came in on her day off with her hair up in a topknot ponytail and asked if I remembered her. \n\n\"Horse? I don't remember you using heroin.\"\n\n\"Things change.\" Her voice grated iron for a second. \"Anyway, she asked if I needed a place to stay, so I took her up on it. Her name really was Cindy.\"\n\n\"At least you had a place to go for a while.\"\n\n\"Yes.\" Her voice softened. \"For over thirty years.\"\n\n\"Really?\"\n\n\"Yeah...\" She sounded like she was going to cry but caught herself. \"What can I say? Cindy really liked pussy.\"\n\nI forced myself to answer flippantly. The Gypsy I knew would have expected it. \"Sounds like it. Must've really had a magic tongue to keep you in one place.\"\n\nShe nodded silently, then sighed. \"It wasn't you. You know that. Nobody but Cindy even came close. Four years with one guy? Shit, I couldn't even imagine that. I didn't want to leave, but I knew I was going to fuck it up sooner or later. I was going to get you killed or maybe provoke you enough to kill me. We were...dangerous to each other. We fed off each other. I was sure Jenny could save you, that's why I... gave you to her. I didn't think anyone could save me. It took dying to figure out how to stop.\"\n\nShe'd stopped waiting for me to react to her, but I already knew. Enough, anyway. Jenny had told me near the beginning, about her sister, about her promises. I let it go. \"And Cindy. It took Cindy.\" \n\n\"And Cindy. She was like Jenny; there was just no 'bad' in her for me to feed off of, just love. We moved upstate a couple years later and grew pot. Indigo Crush is something Cindy figured out. Smoothest fucking shit you've ever had.\" I could hear the pride in her voice as she said that. \"You know she wasn't as stoned as she pretended to be that night? She saw us and couldn't get us out of her head, so she looked until she found our tent.\"\n\n\"It was on purpose?\"\n\n\"She knew she couldn't live the life, but she saw us and had to let go for one night.\"\n\n\"I'm glad she did.\" Not just for the one night but for the peace she must have brought to Gypsy.\n\n\"Cindy died of cancer four years ago. I hated it. I watched the angel to my devil wither away; I watched all the pity and love in the world not do a goddamn thing.\" She sobbed but stifled it. \"Now this shit happens.\" ",
        "She said the last bitterly, spitting the words like poison.\n\nI didn't know what to say. We just lay there for a long time, wide awake and silent. Hell isn't some fiery place underground, full of brimstone and demons. Hell lives in words. Words like 'breast cancer' and 'metastasized.' \n\nWords like 'terminal.' \n\nNo amount of 'it's gonna be okay' or 'I'll be here for you' would change a damn thing. Gypsy didn't have long and she didn't want pity. She just wanted to be Gypsy again. \n\nI could do that, maybe. \"Hey, how about we go by Danny Delp's tomorrow. It's still standing and it's not too far out of the way. I heard they have great steak and good beer.\"\n\nShe answered in a listless sigh. \"I guess that'd be okay.\"\n\n\"It's kind of crowded sometimes, but there are no 'citizens' and its mostly neutral ground now.\"\n\n\"Really?\" There was a spark of something.\n\n\"Guy got stabbed there a couple months ago. Timberwolves, I think. Everybody's on edge, but we'll be fine. Not our fight.\"\n\n\"Not our fight.\" I could hear her interest, the unspoken 'we'll see about that' in her voice. She settled in and fell away into sleep while I wondered if I was actually insane.\n\n*****\n\nIt took nearly nine hours to reach Danny Delp's BBQ Pit, a lonely clapboard building up against the cliff face in Devil's Bend. A giant outdoor bonfire sat outside with the charred remains of rice burners sticking up out of the huge rock-lined pit. The Harleys lined up outside the place should have been warning enough for anyone on a Japanese bike not to stop, but there are always more fools than you think.\n\nI parked near a row of bikes with the winged skull \"Stingers\" of the Hell's Angels on their tanks.\n\nGypsy stumbled for a second then caught herself and stood upright. She flipped the tail of her joint away, took another slug of whiskey and dropped the empty next to the bike. \n\nI looked at her. \"Ready for some steak?\"\n\nShe gave her Devil's smile, the one I knew so well. \"Steak.\"\n\nThe place was about half-full, but the mix of colors made it a fucking powder keg. Two big Hell's Angels were studying my bike out the window, trying to make sense of the icy blue demon on the tank. Mongols, Pagans, and a couple Rock Machine from way the fuck up in Canada sat around the place watching each other warily along with a half dozen clubs I didn't even recognize.\n\nIt just felt right.\n\nI found a table in the middle and looked at Jane. \"Get me a fucking beer.\" I said it loud enough to carry. \"Make it two.\" Her eyes danced with unholy light as she shot me that evil smile and turned towards the bar. \n\nIt must have been an enormous effort for her, but she walked with the same slinky strut she'd always had. The hip swaying arrogant movements of a true queen of the damned. \n\nShe timed it perfectly, smoothly snatching a tray from the barmaid just as she went to put it down in front of a couple Timberwolves prospects sitting with a table of full patch members. \n\nShe rolled her eyes at the barmaid who was already backing away in wide eyed panic. \"Waste good beer on fucking prospects? Jesus. I can't believe you even let them in here. The stink is nasty.\"\n\nShe was already halfway back before the prospects decided what to do.\n\nThey were fucked either way, and they knew it. Start a fight on neutral ground over a bitch or let the insult go unanswered in front of full patches. I could see Gypsy's face light up when she heard the chairs behind her fall backwards.\n\nI caught the first with a straight right just as he caught up to her; she'd been so smooth she'd reached our table and simply stepped out of the way. He staggered back, and I caught the second prospect in the knee with a steel toed boot. \n\nStars lit my vision as the first one managed to catch me on the side of the face, but it was hardly the first time I'd taken a hit and I sunk my fist into his solar plexus, then hammered him with an uppercut as he leaned forward. \n\nThe second prospect had backed off a step. He was young, and certainly more endurance than a tired old man.\n\nThat just meant I had to end it faster.\n\nHe'd backed off, but not far enough. I grabbed his left wrist with my left and he looked at me in shock as a hand that tossed bags of concrete every day ground his bones together. He couldn't get his guard up to stop the right cross that slammed into his face with every ounce of strength I had.\n\nI stared down at them, then looked at Gypsy. \"Beer.\"\n\nShe handed me a mug with trembling hands and a breathless sigh that had nothing to do with fear or weakness and slid behind me.\n\nI downed it as the table full of Timberwolves stood up as one. \n\nI turned to face them. So be it.\n\nA chair slid across the floor, stopping and tipping over dead between us. I looked back. An older Hell's Angel stood slowly and looked at them. \"You ready to start a war over fucking prospects and bitches?\" He nodded towards me. \"You go after him, we're obliged to participate. Wandering Sons have an agreement with us. It's old as hell, but I don't remember anyone telling me it's over. Angels honor their obligations. Prospects do prospect shit. That's why they're fucking prospects.\"\n\nThe oldest of the Timberwolves considered it, then nodded once. This wasn't worth a war, sure as hell not with HAMC, and he'd gotten a chance to see whether his prospects had steel. \n\nHe gestured and the prospects dragged themselves outside. The Angel pulled a chair to our table and studied me. \"Been hearing about the Iceman my whole fucking life. Until I saw the paint and the colors, I was starting to think you were a myth.\"\n\n\"Not yet.\" I glanced up as the leader of the Timberwolves walked up. I gestured to an empty chair and he sat down just as the barmaid came up with a tray with three beers. I glanced up at Gypsy, standing behind me, and she sent me a tiny wink, pressing herself slightly, almost imperceptibly, against my back. I could feel the hard edges and weight of the automatic she had in her vest, right where it always, was, right where I'd always been able to reach it when I'd needed it.\n\nBut that wasn't why she pressed against me.\n\nThe Angel looked up at her. \"She's fuckin' dangerous.\" He stared at the ceiling, straining to remember. \"The Gypsy. Shit.\" He shook his head. \"I was warned before I was a full patch. See her, walk the other fuckin' way.\"\n\nI nodded. \"She hates the idea of the weak or stupid wearing colors. Doesn't matter what club. It just makes her sick. She can always find them.\"\n\nHe chuckled. \"Old School shit there.\"\n\nThe Timberwolf eyed Gypsy for a second then looked over at me. \"What would you have done if the Angels weren't here?\"\n\n\"Same damn thing. Hell, I didn't know if anyone remembered the pact.\"\n\nHe leaned back, sizing me up. \"You'd have been a bit outnumbered.\"\n\nGypsy leaned forward a bit. Her eyes were glistening and that smile gleamed like bared fangs. \"Iceman's never really outnumbered, but if there are enough, he starts playing for keeps.\"\n\nHe glanced over the waterfall of crimson skulls on my vest and chose to ignore Gypsy. \"You doing any business?\" The question was loaded, he was still wondering if an old enforcer had been brought out to start a fight on purpose.\n\nI shook my head. \"We're just riding. Stopped for some steak.\"\n\n*****\n\nThe steak was perfect, Gypsy even ate a little, never really looking away from me, bright-eyed and wicked as ever. I knew she felt the wary stares of the rest of the patrons, now all-too aware of what had come through the door. I knew what those stares were doing to her, what they'd always done to her.\n\nI knew that the stories of what happened would spread later, like they always had. Somewhere a prospect would be warned that the Iceman and Gypsy were still out there somewhere, still riding.\n\nIt was another hour to the motel, a little shithole, but they took cash and the doors locked.\n\nGypsy almost crumpled on her first step, but I caught her; her eyes started to flash rage. I ignored it and laughed. \"Jesus, Gypsy, drink enough whiskey today? Too damn drunk to walk again?\"\n\nHer anger evaporated instantly when there was no pity or concern. No sick old ladies. Just Iceman trying to get drunk-ass Gypsy into a motel, like a thousand times before.\n\nShe shook her head and played along, leaning on me heavily. \"I must have had more than I thought.\"\n\n\"You always did overdo it.\" I turned and hefted her up to put her over my shoulder, as softly as I could. She was feather-light, a wisp. \n\nShe actually giggled. \"I can walk, Ice. Really, put me down.\"\n\nI smacked her butt gently. \"Bullshit, drunks always say that.\"\n\nShe pretended to struggle and I gave her another little smack, just a bit harder. \"Settle down, Gypsy.\"\n\n\"What if I don't?\"\n\n\"You know what happens if you misbehave. You always were a rowdy drunk.\" I managed to get the door open and carried her in, kicking the door shut behind me.\n\nI put her down and she suddenly stepped away, a shadow crossing her face. \"I... I just...\" She slipped into the bathroom. \n\nIt was ten minutes before she came out, in that same oversize t-shirt, refusing to look me in the eye. \n\nI got cleaned up and went back out and sat on the bed, where she huddled on her side facing the wall. She almost jumped out of her skin when I slid in close behind her and pulled her up against me.\n\nWe lay there for second; I thought about what Jenny had said. She was right, this couldn't hurt Terry and Jenny. \"You have fun today Gypsy?\"\n\nShe sighed. \"I guess.\"\n\n\"Bullshit. You were fucking grinding against my back at Delp's.\" I slid a hand down to her thigh. \"I bet you're wet as hell right now.\"\n\n\"Don't!\" Her hand came down trapping my hand against her thigh. \n\n\"You are, aren't you?\"\n\n\"I'm... it doesn't matter.\" It was almost convincing. Almost, But she was still holding my hand pinned to her thigh. \n\n\"Just admit it. That little pussy is soaked.\" I squeezed her thigh softly.\n\nShe acted like she was trying to push my hand away, but didn't let go and our hands somehow ended up on her bare hip, under her t-shirt. \"...stop it, Ice...\"\n\n\"Why?\" I slid my hand onto her stomach under the shirt and she just kept her hand on top of mine. \n\n\"Because...because I'm not...pretty anymore.\"\n\n\"Bullshit Gypsy. All I'll ever see when I look at you is that hot-as-hell bitch from Sturgis. You haven't changed a damn bit.\"\n\nShe started to protest, but cut off at \"Oh!\" as my fingers traced their way through the downy hair. She arched her back, letting me kiss her neck. Then she spread her legs and let my fingers trace downward.\n\nThey found her as hot and wet as she'd ever been. She groaned softly as I toyed with her. \n\nI whispered in her ear. \"You're a bad girl Gypsy. Something's got you all steamed up. Was it the fight or getting your ass smacked?\"\n\n\"Every... everything. Feeling your hand on my ass. But watching you fight for me... It always did...does something to me. I get so fucking horny.\" She trailed off, trying to catch her breath. \n\n\"You loved standing there, rubbing that hot little pussy against me at Delp's didn't you?\"\n\n\"I... I...\" She shuddered wordlessly and thrust against my hand.\n\nI gave her a second and just felt the pulses of her orgasm against my fingertips. \"You like that?\"\n\n\"Love... that. Those big fucking hard hands on my pussy.\"\n\nI pulled my hand back and she gave a disappointed sigh, then jumped, trying to pull away, as I began pulling her shirt up.\n\n\"No, Ice...\"\n\n\"Gypsy Jane never wore a goddamn thing to bed except a scarf.\"\n\n\"I'm not the same...\"\n\n\"You're Gypsy-Fucking-Jane and that hot little pussy is about to get pounded. This fucking t-shirt is coming off. Are you going to make me tear it to pieces?\"\n\nShe hesitated, then turned her head and looked me dead in the eyes. \"You wouldn't.\" \n\nI know a dare when I hear one. It took less than a minute to send the t-shirt in pieces onto the floor. She struggled gleefully the whole time. I tossed her onto her back and slid between her already-spread thighs. She tried to cover her chest with her hands until I trapped her wrists in my hands and pinned them above her head.\n\nI knew about the surgeries and the scars, Jenny had warned me. It didn't matter at all. I just stared into those sin-dark eyes. \"Remember you earned this, you know what happens when you misbehave.\"\n\nHer eyes widened as I began to push into her. \"Oh, Jesus. Easy... it's been thirty fucking years since a guy has...\" She trailed off into a gasp as I thrust all the way in. She was boiling hot and soaking wet. \n\nShe ground up against me, trying to adjust, trying to catch her breath. \"Fu... fu... fuck.\"\n\nI let her have a second. Just a second. \"Still want it easy, Gypsy?\"\n\n\"No. Goddamn it. Wait.\" She pushed me up off her just a bit and brought her legs up higher and higher, getting one over my shoulder, then the other, lacing her ankles behind my neck. \"Over thirty fucking years of yoga.\"\n\nI had to laugh. \"Jesus, Gypsy, you've just gotten better.\"\n\nShe shivered and gave a small moan. \"God. That thing's gonna fucking split me in half.\" I felt her fingernails bite into my shoulders. \"Do it Ice; just fuck the hell out of me.\"\n\nAs light as she was, it was easy to just grab her and slam into her over and over. It was what she needed, what she craved. Every orgasm made her wetter and wetter, and she fired a stream of obscene encouragement at me, begging, demanding, every thrust. When I was afraid I'd hurt her with her legs up like that, I just flipped her over and took her from behind; she screamed into a pillow when she felt me coming in her.\n\nShe finally accepted that her scars didn't bother me; she pulled off, pushed me onto my back and impaled herself, lazily riding me cowgirl for an eternity, until we both finally ran out of steam. \n\nThe whole fucking bed was a wet spot, so I just dragged the blankets over us, her head resting on my chest, our legs tangled together.\n\n*****\n\nThe next morning, she wore a serene smile, but she was pale and weaker than ever. \"Ice, we... I think... we may need to hurry.\"\n\nI knew what that meant. We rode for another six hours. I was afraid I'd have to tie her to me, or that she wouldn't make it all the way, but with her bag braced between her back and the bitch bar, she managed to hold on until we reached the side road I'd been told about. I followed it up to the tiny abandoned cabin. Lush weeds covered the fields where marijuana plants had grown before; I could see a few of them sticking up out of the greenery. \n\nShe was barely conscious as I carried her into the cabin. It was clean and neat, the windows opened to the fresh air, and the bed Cindy and Jane had shared had fresh sheets and blankets.\n\nI set her down as carefully as I could, but her eyes flickered open. \"Ice... thank you.\"\n\n\"Thank you, Gypsy.\" I sat next to her and kissed her gently.\n\nI sensed movement from outside and the front door opened. Jenny walked in and sat on the other side of the bed, leaned over and kissed her sister softly. \"Love you, Sis.\"\n\nJane looked at her and sighed contentedly. \"You made it.\"\n\n\"I flew in yesterday morning. Your friends picked me up and dropped me off here.\"\n\n\"You'll need... a way home.\" Jane made a soft laughing sound and feebly pushed her embroidered bag into Jenny's hands. \"Ice can give you a ride... but it's ass, cash, or grass. You got half a kilo of Indigo Crush in there, and you're the second hottest piece of ass on the planet.\"\n\nJenny laughed along with her, trailing her fingers over Jane's face. \"Did it work?\"\n\nJane smiled, a fading soft smile. \"Every dream I ever had.\"\n\nThe sisters whispered and talked until Jane finally couldn't anymore. Until Jenny and I just lay on either side of her, holding her hands.\n\nAs a final gift to me, Gypsy let go and slipped away in the night, releasing me from that final unspoken promise of mercy.\n\nAt sunrise, we carried her out back and laid her to rest where her friends had prepared a place for her next to Cindy. Jenny made sure her scarf was perfect and we placed a full bottle of whiskey by her side. Her lips were curved in the same wicked smile as the day I first saw her. \n\nWe stayed for five days until everything was settled and the pain had faded, mostly just sitting outside and listening to the sound of the forest around us. We knew we'd be back, maybe permanently, someday.\n\nWe still had things to do in the real world, so on the fifth day we carefully closed everything up to make sure it would be ready for our return. \n\nWhen I finished locking up and walked out, Jenny was sitting on the bike, tying a blue and green scarf over her hair. She finished and took my hand, pulled the ring off her thumb, and slid it onto my finger with a gentle smile.\n\n\"I told you it couldn't hurt us, Terry. You've belonged to both of us since the day she asked me to take care of you, forty years ago.\"\n\nI caught an odd gleam on the ring and turned it to look closely at a brand new inscription.\n\n\"Love Forever, Jenny & Gypsy\"\n\n Post Production Notes: \n\n I am a 'civilian' in the vocabulary of the MCs; I don't belong to any MC, though I am familiar with a few. I asked people who live that life for advice on this. Some of the details are deliberately fuzzy; partly for brevity, partly because some things are none of anybody else's business and certainly not mine to put out. If Gypsy's status doesn't seem to quite fit the role of 'ol lady' and yet doesn't quite seem right for 'sheep,' that's deliberate. She's intended to be unique.  \n\n Wandering Sons and Timberwolves are both entirely fictional MCs, at least as far as I can tell; there are no major MCs with those names that any of the people I talked with were aware of. \n\n Delp's is patterned off a neutral ground bar I've been to a number of times, though it is sadly no longer as neutral as it once was. Great onion rings though. \n\n Again, I have to recognize The Missus for her unwavering support and for graphically pointing out the advantages of \"thirty fucking years of yoga.\" \n\n I still can't believe how supportive everyone here is, reader and authors alike; that's not an empty statement, I mean it. Thanks for everything. "
    ],
    "authorname": "Todd172",
    "tags": [
        "sharing is caring story",
        "motorcycle",
        "iceman",
        "gypsy",
        "sharing",
        "loving wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-last-ride-1"
}