{
    "title": "The Missing Dragon Ch. 05",
    "pages": [
        "Author's Note: Big thanks to J_Reader_Comics, ScreamingEagle101, and DarkPulse for their enormous help in assisting me with editing this freakin' behemoth. They gave great advice and caught a shed-load of errors. Thanks guys! Also, this story is huge. I thought about breaking it up into smaller chapters but decided that some of my long time readers have waited long enough. Thanks for all your support and nice messages over the past few years. Hope you like it!\n\n* * * * *\n\nGregory held his bruised flank whilst limping toward a large rock embedded in the earth. The clash of battle could be heard rising up throughout the clearing in which the rock sat. His left eye stung mightily, and his left knee didn't seem to be able to carry his full weight. Slumping himself down on that cold stone, he released a deep breath he'd been holding in for a while. Fresh pain tore through his ribs, but the humid air felt good in his lungs. It wasn't as if he couldn't deal with a little pain after what he'd been through recently.\n\nLooking out across the glade, he couldn't help but smile to himself at the sight of The Runts training. They'd been at it for almost a month, and their progress was in plain view. Nullik and Frelki always sparred together because they moved so damned fast these days that no one else could keep up with them. Wrut and Frun also faced off, and their devastating blows were the cause of most of the noise rising up in the glade. Ulf had been Gregory's sparring partner, and had been the one who gifted him his injuries that day. Now he sparred with Algra Strongblood, who had offered her assistance in training the pack with her own brutal methods. It seemed like she was going easy on Ulf, since Gregory had managed to dish out almost as much punishment as he'd been given.\n\n\"Watcha doin'?\" A familiar voice called out from behind him; almost making him fall off the rock with surprise given that he didn't think there was anyone else around.\n\n\"Jan, you nearly gave me a fucking heart attack.\" He clutched his hand to his chest, not over his heart but instead over his ribs which felt like they'd knifed his inner organs when he'd tensed up.\n\nShe seemed to take that as a mission accomplished. An impish smile crossed her gorgeous features before she gracefully climbed up onto the rock beside him. In an instant she made her painful surprise all better by kissing the side of his face that wasn't swelling up and then turning to regard the training session in progress. She'd brought several flasks of water from a nearby fresh stream, dumping most of them for the pack before she'd crept up on her quarry. Keeping one for him, she immediately un-slung it from her shoulder to offer it over as soon as she was comfortable.\n\n\"And also, I love you.\" He gratefully took the offered flask and popped the cap before taking a few glugs of the very welcome cool liquid.\n\n\"Well I just want you for your body,\" she retorted with another playful smirk whilst he drank. \"How's it going out here?\"\n\n\"Good.\" His lips finally parted with the flask to take another deep breath that made his side burn afresh. \"Great even. I was hoping that the new weapons might help a little, but the guys have adapted to them like I'd never dreamed. Look at that!\"\n\nShe followed the direction of his arm as he gestured across the way and saw what he meant almost immediately. Frelki and Nullik had sensed the session coming to an end and had apparently decided to go all-out to try and get a victory over the other. The result was like watching two miniature tornados going into battle. Janette marvelled at the blinding speed at which they attacked, but Gregory was amazed at the reaction times and instincts that allowed them to parry and dodge at that velocity. \n\n\"Wowza,\" Janette watched with genuine appreciation. \"So, when are you going to teach me to do that?\"\n\nGregory let out a little laugh at the question, but stopped when his ribs once again reminded him that laughing was a bad idea.\n\n\"I'll let you know after I figure it out.\" He was pretty fast himself, but trying to fight Nullik and Frelki these days made him feel like he was sparring with a blender.\n\n\"I'm serious, Greg!\" she turned back to look at him.\n\nHe returned the favour and shifted his gaze to her before taking another drink of water to buy himself some time. Meeting her gaze had been a mistake. It was way too easy to get lost in those bright blue eyes of hers. This experience was usually followed by the word 'no' leaving his vocabulary altogether. It also didn't exactly help that she was wearing only a couple of very skimpy garments. They could generously have been described as a sort of bikini, and more accurately described as dental floss with delusions of grandeur. For all intents and purposes, the stunning redhead might as well have been sitting there naked with her plentiful assets on display. In an effort to control his steadily growing libido, he closed his eyes tightly and shook his head before refocusing his attention on the sparring.\n\n\"I know you're serious, and if truth be told I don't think that you learning some self defence is a bad idea. I just don't have the time right now, or the energy for that matter.\" He took another drink from the flask.\n\n\"Ha! You had enough energy to come home last night and nail me to the tent post. Don't give me that crap.\" She folded her arms across her large breasts and glowered at him.\n\n\"It's not-\" He'd been about to start an argument there, but immediately saw he was on the losing side of it and decided to close his eyes and regroup. \"Ok, fair point. You're right. It's more that I want to stay focused on this right now.\" He gestured out across the glade. \"I spend most of my downtime thinking about what we could do to improve. We've come a long way but I still have no idea if we'll be able to win a proving match. Plus, to be honest if I started training you I don't think we'd get a lot done.\"\n\nHer resolve softened slightly at that, and the fact that he wasn't going to argue with her about it. In truth, she'd expected more protest on the grounds that she shouldn't be fighting. It was the kind of macho-bullshit that she was used to from men, but Gregory hadn't seemed to mind about the idea of her training to fight. He just didn't seem to think he was the guy to train her.\n\nAt that moment, Algra had noticed them talking together, and the distraction momentarily caused her to lower her guard with Ulf. The younger orc immediately picked up on this and delivered a powerful blow to the right side of her jaw. Unfortunately for him, she didn't go down because of it and the blow brought her attention directly back to the matter at hand. It also had the alarming effect of genuinely pissing her off, and Ulf suddenly found she wasn't fighting to educate anymore. It became horrifically clear just how easy she'd been going on him, as she threw aside her weapon and planted two devastating jabs in his ribs. He tried to swing at her, but that only resulted in more pain when her fist proved to be much faster and far more accurate in finding his jaw. He staggered backwards. The matchup was already over, and Algra swept his legs out from underneath him to finish the job.\n\n\"Enough!\" Gregory called out before his mate could continue her brutal lesson. \"Alright guys, I think that's enough for today. You ok with that, alpha?\"\n\nUlf had been trying to scramble backward to get away from her and urgently nodded his agreement. Algra gave him a short nod before turning away from Ulf and toward Gregory, a small and slightly evil smile lifting the corners of her mouth that only he was allowed to see.\n\n\"Why don't you ask her?\" Gregory turned to Janette.\n\n\"Who? Algra?\" That took the wind out of her sails.\n\n\"She sure taught me a lot about how to fight.\"\n\n\"Greg, I was there a lot of the time she was training you. It seemed a whole lot like she was teaching you a lesson in how many different colours it was possible to beat into the human face.\" She nibbled her lower lip as Algra approached.\n\n\"If you want to fight well, then there will come a time when that's actually helpful. If you're in a real fight, you need to learn how to deal with pain and keep going.\"\n\n\"Yeah, you must be a real expert by now.\"\n\nHe laughed and leaned over to kiss her cheek, and that eased the nerves from her features.\n\n\"Algra?\" he called out to her as she got within earshot. \"How would you start to train Janette to fight?\"\n\nThe orc lifted her brows slightly, and stopped to consider Janette for a few moments before answering.\n\n\"I've seen her dance. She learns well. I'd begin there.\"\n\nJanette blinked at that before turning to Greg for an explanation since getting Algra to elaborate was like trying to get water from a stone.\n\n\"I think she means the repetition of the movements. It takes a long while to train yourself to move in the right ways before you can start sparring. Otherwise you just wind up hurting yourself or your partner. It's a bit monotonous, but it's where you begin and it doesn't usually involve risking a broken nose. Well, not unless you're really bad at it.\"\n\n\"Oh, I guess that doesn't sound so bad then. You don't mind?\" she asked him.\n\n\"Why would I mind?\"\n\n\"It's not a very girly thing to do, I guess.\" She shrugged. Freddie would have hated the idea.\n\n\"Yeah, you know me so well. I'm all about filling out proper gender roles in society.\" Greg rolled his eyes. \"In fact, what are you doing sitting here? I'm sure something around camp needs ironing.\" The smack to his arm came quickly thereafter. \"Fucking ow!\"\n\n\"Asshole.\" She smirked.\n\nAlgra took that moment to hoist herself up on the rock and perch her delectable behind on the opposite side of him to Janette. She'd plucked up one of the water flasks and took a few long gulps before pouring some over her head. Once she'd gotten herself all wet in that little fur outfit she favoured, she turned and pulled Gregory into a fiery kiss. Ever since she had become his mate, this little ritual had been repeated every time she joined him.\n\nHe'd noticed a few changes in their relationship since he'd taken up the orc idea of becoming life-mates with Algra. Orc society was structured around a system of the best fighters being dominant over the weaker ones. Almost every orc he'd met served a stronger one, who had usually beaten them in a challenge of single combat. By sheer luck, along with the element of surprise, and perhaps the fact that Algra wasn't in her right mind, he'd managed to become her master.\n\nNow that had changed. As mates, they were equals and as such they were both master of each other. It was his right to tell her what to do, and her right to do the same. As such, she no longer needed to appear subservient around him, and often made a point of showing everyone who owned him. The orcs also had a similar system to the orcish battle challenge for each time they disagreed in order to determine who was right. Because of this, Gregory made a point never to disagree with Algra.\n\nIt said a lot about how much she valued Janette that the orc warrior sat on the opposite side of him rather than simply taking her preferred position in straddling his lap. Once their tongues finished their dance, she settled against his side. Her plentiful breasts pushed up against his bicep, and she leaned across him to give Janette a lighter kiss by way of greeting. Gregory's trunks started to feel several sizes too small after the two kisses, and he momentarily wished he hadn't ordered Algra not to take his cock out when the others were around. It had been a good idea at the time. Orcs didn't really understand the concept of modesty all that well.\n\nGregory saw that the others were now assembled before them, mostly smiling with amusement. Frelki had a slightly different expression, and her eyes were fixed on the bulge in his trunks. He made a point to look away from the slender beauty, and shifted his attention to the others.\n\n\"That was a good session, guys. I think we can head on back to the proving grounds tomorrow. Make sure to cover up the new toys. We'll come here first to warm up and then use the clubs out there so no one catches on to what we've been up to. Let's give the first pack Ulag throws at us a shock, eh?\"\n\nThere was a murmur of agreement and some shared nods amongst the pack.\n\n\"Great,\" he continued. \"Let's get a good night's sleep then. I'll see you all at sunrise here tomorrow.\"\n\nThey departed, and he watched them leaving and falling into their usual habit of sharing advice and talking about the session they'd just been through. It was a relief to see them like that. They were excited, and they were adapting well to his ideas about changing their game out there.\n\n\"You should be alpha.\" Algra spoke up once the rest of the pack were out of earshot.\n\n\"Not this again. Look, I told you that I'm more than happy with Ulf as alpha. He's done way more than I have in getting the others on board with all this. Besides, he's more experienced. It's him who usually goes around giving everyone pointers and getting them thinking about what they're doing.\"\n\n\"Then he is good captain, bad commander,\" she replied simply before turning back to him.\n\nThis wasn't a new argument. Algra was fiercely proud of the work he'd done with the pack, and didn't feel it was right that Ulf would get the glory. Gregory didn't much care about glory, but he wasn't stupid enough to tell Algra that. Her entire society revolved around it.\n\n\"I think we all know the answer to this problem,\" Janette helpfully piped up before beating her fist against her chest. \"I should be the alpha.\"\n\n\"She's right,\" he nodded without missing a beat. \"The woman has a knack for bossing me around. She'd be great at it.\"\n\nAlgra's lips curved up into an amused smile that she clearly didn't want on her face whilst discussing such a serious matter.\n\n\"Oh yeah, and since we're talking about things I'm not comfortable with, can you please stop telling other orc women that I'm great in bed?\" He shifted his attention from Janette back to Algra, his tone becoming somewhat annoyed. \"I've had a few of them come sniffing around the camp looking for me to see if the rumours were true.\"\n\n\"You should fuck more. I not tell others that my mate is good in the rut. I tell them my mate is good anywhere.\" Algra noted somewhat fiercely.\n\nJanette burst out laughing at that so hard that she almost fell off the rock. Gregory's arm slipped around her waist as he saw her teetering, and she happily settled against his side. Then, just because he could, he reached out with his other arm to do the same with Algra who happily pressed herself closer against his flank.\n\nEver since he'd stepped into the orc encampment with Algra Strongblood at his side, he'd noticed that quite a few orc women tended to look at him with what he'd thought of as suspicion. He was an outsider after all, and the idea of an orc woman taking up with a human was unheard of. They might have casual relationships that led to casual fun for all involved parties, but they never made such dalliances official. One night he'd mentioned the newfound attention he was getting to Algra, who had informed him that many of the females in the camp probably wanted to see if he was as good as the rumours suggested.\n\nA skilled lover was almost as prized in orc society as a skilled warrior. This was because the females went into heat at least once per month, and during this time they required a great deal of sexual stimulation. Plenty of the males couldn't quite keep up with this demand, and that also explained the orc tendency toward polygamy. One of the reasons Algra's former mate, Rowun Strongblood, was one of the most renowned of his kin was his ability to keep Algra satisfied without assistance.\n\nWhen she had returned from her self-imposed exile with a human, the interest in Gregory had grown considerably; especially when it became clear that she wouldn't take any other lovers. He hadn't realised it, but he'd been amassing quite a bit of respect amongst the orcs. This amplified when it came to light that he and Algra had been mated, and she no longer felt the obligation to allow his silly attitude to stop her from proclaiming him as the extraordinarily talented lover that he was.\n\nFor the past few weeks, she'd been trying to get him to take a few of her friends so that the rumours and her bragging could be confirmed. This kept him on his toes when he was walking around the camp, keeping an eye out for horny orc women wanting to tempt him into a dark corner and test his reputation.\n\n\"Ok then, I promise that as long as it's alright with Jan I'll have as much sex with your friends as you like.\" Gregory heard the somewhat strained note in his voice when he said that and wondered what the hell was wrong with him.\n\n\"Hey, it's fine with me. Just as long as I can watch.\" Janette flashed him an impish grin whilst her hand slid down his chest to tug at the hem of his trunks. It didn't take much before his cock burst free of the leather confines and up into the warm air. \"I was a little jealous for a while there, but it's not like you aren't keeping me happy. Besides, I think you nearly orgasmed me to death the other night. Sometimes it's nice to be able to tag in a partner.\"\n\nShe winked over to Algra, leaving Gregory at a loss for words as each of them reached out to stroke his cock. Algra's hand wrapped around the base and slowly slid up and down whilst Janette teased her fingertips around the engorged tip.\n\nIn times such as this, he knew what was expected of him. Both of the sultry females were determined to show off. It was his job to sit back and appreciate their considerable skills. Since the beginning of their time together on Arolius, they had gotten very skilled indeed.\n\nJanette relinquished her hold on his cock to allow Algra's lips to descend over its tip. Slowly, he felt her take him against her tongue and along to the entrance to her throat whilst gently suckling him all the while. The way her tongue began to massage his hot length allowed him to just about keep enough of his wits to appreciate Janette disrobing. The fiery-haired girl had caressed her hand across his chin to draw his attention before slipping out from beneath his arm to crouch on the rock beside him. He watched as she playfully reached behind her back and unfastened the string that held two triangles of fabric in place over her nipples. It was already strained against the considerable weight of her bountiful tits and, as soon as it was loose enough, the string sprang forth to allow the entire garment to collapse into her cleavage.\n\nThe sight of her bare tits was enough to make his mouth water in anticipation. Large, yet firm and gorgeously rounded. Each capped with a light pink nipple atop the creamy globe. She must have read his mind, because after giving him such a stunning view she knelt forward to press one of those pink nubs against his lips. A little yelp escaped her lips when she felt his teeth tighten upon her nipple, and a soft moan followed as his lips sealed about it and he sucked lovingly at the offered delight.\n\nJanette's hand slipped through Algra's hair whilst she enjoyed Gregory's mouth at her breast. An ecstatic gasp soon followed when she felt his hand slip between her thighs. Her knees were parted upon the stone, more than enough to give him room to slide her tiny thong to one side and press his fingers against her hot pussy. Rather than focus on the little pleasure button, he plunged his fingertips into her welcoming folds and massaged the slippery flesh within. His thumb eventually did find her clit, but it teased rather than pushed her toward release. The contact was light and infrequent, sending little shocks of pleasure up her body and perfectly complimenting the rhythm of his fingers inside her. ",
        "Algra then ceased giving his delicious cock a mouth massage, and lifted herself upright to raise to her knees beside him just as Janette had done. Noticing that he was unattended, Janette immediately wrapped her hand around him and began stroking. The movements were more urgent than Algra's mouth had been, and he felt his own sizzle of pleasure beginning to rise steadily into something more. His lips released Janette's nipple and he turned to his mate. Janette quickly ducked down to engulf his hardness with her mouth and continue the blowjob her friend had started.\n\nThe gorgeous orc woman waited for his attention, and then she pulled her own fur top over her head to reveal her voluptuous tits to his appreciative gaze. He loved the way her soft, heavy tits contrasted against the hardened muscle of her stunning physique. Although she was in peak physical condition, with a body to rival even the greatest of human athletes, she was still curvy in all the right places. The stunning emerald colour of her skin gleamed in the sunlight, and he enjoyed following the deep curves of her breasts toward the darker green nipples at each tip.\n\nIt was her turn to have her tits adored by the male, and she reached out to possessively grasp his shoulders. Raising herself up on her knees, she pushed an achingly firm nipple into his mouth and groaned when he happily began to lick and suckle at her.\n\nJanette heard the wet noises of her lovers' sordid act, and decided to compliment with similar noises of her own. She began to move with purpose, and took him into the tight confines of her throat each time her head bobbed down toward his crotch. A contented glugging noise began to rhythmically sound each time she slurped down upon his member. Since his mouth was occupied, he instead showed her just how good she was making him feel by stroking his fingers through her deep red mane. \n\nShifting from one of Algra's tits to the other, he flicked the hardened nipple with his tongue before hungrily sucking it into his mouth. With his free hand, he grasped Algra's unattended breast and gently squeezed the wonderfully soft orb before massaging it with his palm. She let her head fall back and closed her eyes to enjoy the sensations radiating from her chest, and then gave him a playful shove backward to free her tits and claim his mouth with her own. Their tongues sought each other out and danced together until she contentedly pulled away and lowered herself to join Janette in sucking his cock until they could share his eruption.\n\n\"Fucking hell, you two are going to kill me if you keep this up,\" he barely managed the words through actual panting in an effort to prolong the incredible sensation.\n\nThe only response was the lightest murmur of an amused laugh from Janette, who relinquished the shaft she'd been happily slurping on and instead lowered her lips to his balls. Algra licked across the swollen head of his cock and then began to suck with rapid bobs of her head, steadily taking more of him into her mouth each time her head lowered. Soon enough they were working in unison, each moving in when the other pulled away. After spending so long together, and enjoying pleasuring him as much as he enjoyed returning the favour, they had gotten remarkably good at teaming up for feats like this.\n\nThey felt his body nearing its limit, and just as he was about to reach it they kept him soaring at the heights of ecstasy. Algra released him from her mouth and Janette ceased sucking on his balls so they could both began tonguing his cock as if it were the juiciest lollipop they'd ever tasted. He watched in awe as those two beautiful faces looked up to him with wanton desire and they chased each other's tongues around his long, thick cock. Without either of them directly sucking on him, he felt a reprieve and began to rally his wits to focus on keeping control. Still, their talented tongues licking along his hot, hardened member kept him on the brink. He wanted to stay on that edge for as long as humanly possible.\n\n\"C'mon Greg,\" Janette's words were a sultry whisper, and with each breath she poured fresh heat across his length. \"Give us your cum. We want to drink it up.\"\n\n\"Yes, my love,\" Algra had also recently taken to dirty talk, after seeing the effect it had in enlivening his fearsome libido. \"I want to feel it on my skin. I want to lick your hot cum from her face, and her tits. Give it to us!\"\n\nAlright, maybe staying out on that edge wasn't going to last nearly as long as he'd thought.\n\nThe results of their efforts were so explosive that the women responsible yelped in surprise when his orgasm ripped up through his body. The cum blasted from the tip of his length to sail through the air. It landed across Janette's cheek and over her bare shoulder, where it began to cascade down along the curve of her breast.\n\nAlgra moved her head and opened her mouth to allow the following gush to splatter across her tongue and flow down her throat. She was soon supplanted by Janette as the greedy girl nudged her out of the way to plant her lips directly around Gregory's cock and suck up the third and fourth offerings being pumped up through his shaft. The potency of his ejaculation steadied, and Janette relinquished him so that the last of his cum sprayed over their faces.\n\nThe intense high of the orgasm was prolonged by the sight of the pair of them when they turned away from him toward each other and began making out. Their kiss was downright licentious; with their mouths open for their cum-seasoned tongues to openly wrestle before his eyes. It started out as an act of brazen exhibitionism, but soon heated up into something more. Both Algra and Janette took good care of his insatiable libido; much to their own fulfilment. Yet their own friendship had deepened into something more than passing fun between them. Both women had discovered that they had often begun to crave each other almost as much as they wanted Gregory.\n\nTheir kiss soon became less about showing off for him and more about enjoying each other. He was left to watch in the aftermath of his own climax whilst they each stripped away the clothing left on their lower bodies, and shifted around to aim their tonguing toward more intimate regions. Whilst they scrambled together, they fell from the rock to land with a light thud on the soft grass beneath. Algra took the brunt of the fall, but didn't miss a moment in laying back and spreading her legs whilst the human settled over her to begin lovingly running her nimble fingers over the glistening green lips of her lover's pussy.\n\n\"So, should I just sit up here and twiddle my thumbs?\" Gregory asked, after finally managing to catch his breath again.\n\n\"Twiddle whatever you want, baby,\" Janette looked up at him; a grin lighting up her cum-stained features with amusement. \"I need to clean up this naughty pussy here. Look at how wet you made it!\"\n\nShe highlighted her point by moving her index and middle fingers to part Algra's green folds and show the lighter insides. \n\n\"Ok, well I'm going to go get healed up before you two bruise me up any more than training did. That alright?\"\n\nJanette had already replaced her fingers with her mouth, and judging from the appreciative moans she was making it seemed like Algra was happily returning the favour beneath her. She did, however, lift one arm up to show she'd heard him by offering a thumbs-up to his question.\n\n- - - - -\n\nHe reluctantly left his two lovers in the process of loving each other and made his way back through the jungle toward home. It was difficult to leave them there knowing that they would probably welcome him to join them in some far more sordid activities if he so desired. A very convincing part of him turned almost rebellious at the notion; but he knew that if he didn't get some treatment for the aches and pains he'd picked up during training he'd regret it come the next day. Even tensing up after that incredible blowjob was now causing the pain in his muscles to return with a vengeance.\n\nThe merchant camp was familiar ground, albeit a good deal quieter now the trading caravan had departed for the north. Only a skeleton crew of human slaves remained, and they were mostly the artisans who spent most of the days replenishing Bolut's stocks. Gregory nodded and smiled at those who greeted him before going about their business. It didn't take him long to spot Valise preparing their afternoon meal on a skillet over a hot fire. The pure, white dresses she always favoured often caught his eye amongst the colourful sights of the camp.\n\n\"Something smells good,\" he noted as he approached; watching her throw a cut of meat onto the skillet to give a harsh sizzle.\n\n\"It's Lenian Boar. Noted for their juicy meat, and tusks that can be ground into a potent aphrodisiac.\" She turned her head to look at him with a friendly smile.\n\n\"Really? Ground boar tusk as an aphrodisiac? That actually works?\"\n\n\"I wouldn't know. Giving my current lover an aphrodisiac would be exhausting. He does rather well without any encouragement.\"\n\n\"Glad to hear it. Do you think you might get any free time soon to stop your current lover from feeling like he's just been sunbathing under a stampede of Lenian boars?\"\n\nThe joke made her smile broaden and her blue eyes glimmer like freshly polished sapphires. She wore her long, silvery-blonde hair uncharacteristically loose about her shoulders. Gregory enjoyed the change immensely. She skewered the meat with a long metal fork and flipped it over to let off a fresh hiss on the skillet.\n\n\"I think I might manage it. How did training go today?\" she asked.\n\n\"Brutal, but rewarding. I think we might actually do some damage when we get back out on the proving grounds. The trick will be to keep from receiving too much damage and watching each other's backs.\"\n\nValise nodded, her expression growing more serious. She patted the spot on the grass beside her. He nodded and took a seat to continue his thoughts on the day's training whilst she listened attentively and finished up her cooking. It had become something of a ritual between them, and something that helped immensely to clear his head and get his thoughts straight. He'd tried similar things with Janette and Algra but neither was quite as helpful despite their good intentions. \n\nJanette often interrupted to ask too many questions, which was largely due to her desire to learn how to fight for herself. The habit was endearing and practical, but it often put him off his own train of thought. Algra went rather too far in the other direction and remained silent whilst he spoke. She'd shut him up abruptly on one occasion and explained that her instinct was to do exactly what they were trying not to and fight using traditional orc battle tactics. Again, it was perfectly understandable given that they worked for her, but it made her unsuitable for discussing his miniature tactical revolution.\n\nValise listened attentively, and had grown familiar enough with him to focus her questions on flaws in his natural way of thinking. He second-guessed himself far too much, and as a result he had a bad habit of over thinking things. She kept him on track. He suspected that she knew quite a bit about military strategy from the things she asked him. For quite a while now, he'd been operating under the assumption that Valise knew everything. It was just easier that way.\n\n\"It sounds to me as if you are ready,\" she said after he'd finished summing up the session. \"And it seems as if the time has come for me to share my past with you.\"\n\nGregory felt an oncoming poignant pause. Yup, there it was.\n\n\"Ok then, just one question,\" he finally broke the silence. \"Is you telling me this somehow going to end up with us being married?\"\n\n\"What?\" Valise lifted a perfectly formed brow at him.\n\n\"I don't know, one day I'm out in the jungle looking for my orc girlfriend and the next thing I know I have a life-mate. This kind of sounds like it might be a big deal, so I just wanted to check first.\"\n\nValise laughed, and the musical sound brought a smile to his face. She finished wrapping the last of the cooked cuts of boar meat into little parcels using fresh leaves. He helped her lift them onto a table where the camp workers could pass by and pick one up for their lunch whilst she tried to rid herself of the giggles.\n\n\"Yes, I suppose that must have been a shock,\" she agreed. \"No. I promise I'm not out to ensnare you, Gregory.\"\n\n\"That's alright then. Although to be honest I think you've already got me a little bit ensnared, Valise. Do you mind if I snag one of these?\" He pointed to the parcels.\n\n\"That's what they're there for. Shall we go to my tent?\"\n\n\"Yushlg.\" Gregory's agreement came with a nod despite him already munching on freshly-cooked boar.\n\nThey stepped through the camp before arriving at her tent and slipping beneath the canopy. Gregory stopped to snag another of her parcels for her before following on behind her. She wore a sheer white veil across her arms and shoulders that spilled down to the ground about her in smooth waves. He'd never seen the like of the material before. It seemed to glimmer gold under the sun, as if the fabric was soaking up the light. Those gleaming flashes arose between glimpses of the shapely, slender figure beneath. He knew from experience that she often wore little else underneath that gossamer fabric.\n\nHe crouched into the tent before taking a seat on the pillow she'd set out for him. It had been commandeered from a pile upon which she slept at the back of the tent, but he now visited her so often that she rarely moved it back to its original place. She liked having a spot for him inside her home.\n\nOnce he was seated, he passed over the parcel of boar to where she usually came to rest and she seemed slightly taken aback when she saw it.\n\n\"You need to eat too, you know. Besides, this is delicious,\" he spoke quickly before taking another bite.\n\n\"I am... not supposed to partake of animal meat.\" Not that she seemed offended as she slipped off that ethereal gown and let it casually pool on the floor.\n\nThat certainly stopped Gregory mid-chew. It wasn't that he hadn't had plentiful opportunities by that point to see Valise naked; rather it was just that he couldn't quite seem to get used to it. If the human body could ever be considered an art form then the woman was like a walking masterpiece. It certainly didn't help matters that her hair was unchecked from its usual braid and now spilled down around her nude shoulders, giving her a much wilder look than he was used to. Combined with the smile that she offered him upon seeing the way he was looking at her? He hardened so fast inside his trunks that it felt like he almost sprained himself.\n\nIt hadn't exactly been an effort in seduction on her part; but she couldn't deny that she loved the way he looked at her. It had been a very long time since she'd felt wanted in the way that he made her feel, and the knowledge that her charms weren't lost on such a young and virile man? It made her stand there in front of him for quite a bit longer than she'd intended in order to savour the experience.\n\n\"You should remember to chew,\" she finally said.\n\nHer voice broke the trance long enough for him to recollect some degree of awareness, and he obediently gave a few more chews before a final gulp.\n\n\"Valise, I came here to-\"\n\n\"Hush, I know that you came here to get your bruises and sprains mended. I'll gladly tend to them in time, but now I'd like to tell you my story.\" She walked before him and picked up the parcel of boar that he'd brought along for her, regarding it contemplatively. \"You're going to be a warrior soon, Gregory. The proving ceremonies aren't observed by my kin, but I understand their place for the orcs. They signify the ability of those who pass to take on the responsibility of living in this world, at least as the orcs understand it. I fear that when you pass-\"\n\n\"You mean if I-\"\n\n\"When you pass, you'll take on the responsibility of running this camp again. You'll take back your magical ring. And you shall take on... me. This little interlude of your training in the provings has given me an excuse to hold back my past; for it isn't a pleasant story. Now I think that moment has passed, as each day you grow more confident and able. So if you are to be in command of me and if I am to serve you then we should know each other. Yes?\"\n\n\"I think I already do know you, Valise. But I do like stories.\" He stood up himself to kick off his boots before pushing his trunks down along his legs.\n\nShe watched him disrobe with a clearly appreciative gaze that wandered over his powerful frame. Despite the few bruises and red welts that adorned him from his morning training, he'd become quite the specimen to behold. Even with all the exercise he was getting, he'd become astonishingly ripped and toned. Though he'd likely never bulk up to anything along the lines of an orcish physique, his body was leaner and honed like that of a big cat.\n\nRather than letting her take her usual seat across from him, he reached out to grasp her arm and guide her into turning around until she sat before him with her back settling against his chest. She soon felt another part of him rise up to push against the cleft between her rear cheeks. Holding onto her lunch in both hands, she let her eyelids flutter when he reached around her to stroke up along her slim waist before cupping her breasts in his palms.\n\nHe loved the feel of her tits providing him with the perfect handful to massage and caress. Though she wasn't by far the most endowed woman he'd been with, she seemed to have very sensitive nipples which quickly hardened beneath his touch. A slow sigh passed between her lips, and she turned her head to find them greeted in a kiss. The kiss made her body quiver, and brought heat to her cheeks and to a spot deep within her chest that she had previously thought would be forever resigned to the cold.\n\nTheir kiss ended too soon for her liking, and she found herself already falling to her primal desire for him.\n\n\"I'm sorry, you wanted to tell me something,\" Gregory said; a slight shudder of his own need rising through his body. \"I'll be good. Or as good as I can be with you in my arms.\"\n\n\"This makes me jealous of Janette and Algra,\" she said with a not-so-jealous smile.\n\n\"Oh? Why?\"\n\n\"I imagine they get to do this quite often. It's been a while since I had the chance to relax naked with someone like this.\"\n\n\"That's hardly true, is it? I remember we did something very similar to this just the other afternoon.\"\n\n\"Yes, but that was because we'd just made love and we were both savouring the afterglow.\"\n\n\"It was a very nice afterglow if I remember rightly.\"\n\n\"True enough, but this is different. It isn't simply an act of sex or lust. It is a comfort to sit naked with a lover and merely speak together.\"\n\n\"Comfortable, is it? Tell that to this guy.\" Gregory flexed his engorged member, and felt the steady beat of his heart calling him to take her. \"He seems to have other ideas.\" \n\nValise's smile broadened again, and she happily shifted her hips a little to provide his erection some friction to rub between her rear cheeks. She then took one of his hands in her own, and lifted the back of it to her lips where she settled a kiss against his sun-bronzed skin.\n\n\"That is part of the comfort, is it not? To know that as we speak you crave me...\" She then parted her thighs before guiding his hand down between them. There, he felt her pussy already slippery and burning with her appetite for him. \"As much as I crave you.\"\n\n\"Always look on the bright side of life.\" Gregory chuckled and pressed his fingers between her legs, slowly massaging her soft folds by moving his fingers in smooth, circular motions.\n\n\"Mmmm, but my story awaits. I should get to the telling.\"",
        "He lowered his head to kiss the base of her neck, never stopping the tender touch tracing little circles between her thighs. The man was quite able to tease and listen at the same time.\n\nHer smile flashed her teeth, but she found herself happily resigned to his touch. Taking a deep breath, she began her tale.\n\n\"Although we were not the first race to venture to Arolius, the elves are the most long-lived of all the races upon this world. In the forests of our homelands, when the magic of our people was at its most potent, we were practically immortal. It is said that the elves were created thousands of years ago, when an ancient servant of The Creator wished to impress her master. She saw the creatures that he had brought from another world, and wished to help them grow and flourish. Those creatures were humans, and she took a small group of them away into her forest and gave them her power. Those were the fathers and mothers of our people, born within the servant's forest realm. We were the servant's idea of perfect beings: graceful and magical beyond anything humanity could hope to offer. The servant brought us before her master, and The Creator did smile upon us. Yet he did not value us above humanity, or indeed above any of his own creations.\"\n\nValise cleared her throat a little at that point, pausing for a moment to enjoy the feel of Gregory's lips tracing their way up to her earlobe. She then took a breath and continued the story.\n\n\"As you can imagine, this didn't go over too well with the servant. She pleaded with her master to raise the elves to their proper status as the highest creatures upon Arolius, but The Creator didn't seem to see things her way. In the end she submitted to his will, as all things eventually did. My people were sent back to their homeland, but we had been remade with the purpose to rule and guide the world. So The Creator's rejection of their duties came as a rather sudden shock to their pride.\"\n\n\"I imagine it would, after all that trouble,\" Gregory noted; his voice soft near her ear.\n\n\"Indeed. It hurt us; perhaps more than The Creator could have known. We fell into arguments, and small wars broke out over who should lead our race. It was then that Anuvin, one of our greatest heroes, decided to go and speak with The Creator himself. The story goes that Anuvin was a lesser druid of the servant, who packed up his things for a suicidal journey into the Northern Mountains where it was said that The Creator dwelt. Unfortunately for Anuvin, The Creator liked his privacy, and the forests at the base of the mountains were enchanted to keep trespassers occupied in an unending labyrinth of trees. Anuvin stepped into this trap willingly, but The Creator didn't heed him, just as he didn't heed any of the other lost souls who had foolishly trapped themselves within his barrier.\"\n\n\"Ok, is this Creator guy supposed to be a bit of a dick? He kind of sounds like he needs to show a little more awareness of his creations.\" Gregory's head had lifted and he leaned forward so that she could turn to look upon him.\n\nShe seemed quite shocked by this suggestion.\n\n\"He was the one who made this world for us. We shouldn't question him,\" Valise noted.\n\n\"Alright, if you say so. Still, it seems like he should maybe have put in a bit more effort. I mean, a giant forest that you can never escape right on his doorstep? Why not just a huge wall or something less harmful? Dick move right there.\"\n\n\"If you're going to spend so much thought into picking apart our mythology we could be here for a long time indeed.\" Valise had indeed turned to him and narrowed her eyes.\n\n\"Fine! I just want to state that for the record I'm with Anuvin at this point.\"\n\n\"As you should be.\" Her gaze softened and she laughed when he planted a little kiss on the tip of her nose before getting back to her tale. \"Anuvin wandered the forest as many before him, and soon fell to madness and isolation. Whilst in this state, he began a habit of talking to the trees for want of hearing a noise that wasn't birdsong or the rustling of the leaves in the wind. He told them stories of his people, stories of the sea, and stories of the world to the south. In the end, he came to know them as old friends and would tend to them as he continued his unending journey. He would clip stray branches, and help the seeding of new trees in fertile ground. The trees listened, and they provided him with fruits and berries to keep him alive as he wandered. Then, one day, he came upon a sapling and began tending to its roots whilst telling it a riddle. He was perhaps less surprised than he should have been when the sapling answered him.\"\n\n\"Hold on a sec, there's talking trees now?\" Gregory asked. \"I haven't come across any trees out in the forest that were all that talkative.\"\n\n\"Perhaps they don't like the look of you,\" Valise's tone was sympathetic. Then her grin returned and she laughed at the dumbfounded expression she'd brought to his face. \"I'm sorry, that was mean wasn't it? No, trees aren't really prone to talking in this part of the world, but they are living creatures and magic can shift the nature of things quite a bit. There was a lot of magic in the world back then, particularly in The Creator's own enchanted forest.\"\n\n\"Oh, right. So The Creator gave these trees consciousness?\"\n\n\"In a way, yes. They were his sentinels, and it was they who kept wanderers from The Creator's home. Yet none who had come before had thought to see them as anything more than obstacles, and Anuvin's kindness had brought them to like him quite a great deal. I don't think that the sapling was supposed to speak to him so openly, but the young are more open than the old and when it did speak none tried to silence it. Of course by that point Anuvin had known he'd gone mad for quite some time, and the sound of a tree speaking in his mind wasn't as much of a shock to the system as it otherwise would have been.\n\nHe spoke with the sapling, who asked him to tell the story he had never spoken of: The story of why he'd ventured into the forest. He simply told the sapling that he wished to speak with The Creator on behalf of the elves, and wouldn't speak more on the matter. Given his good nature, the forest brought word to The Creator that they wished Anuvin to have an audience with him. Now, The Creator tended to prefer watching the story of his creation unfold of its own accord. He rarely dealt with anyone directly anymore, but even he couldn't resist speaking with the one who had managed to befriend his forest.\n\nThe Creator appeared to Anuvin in the guise of an old human wanderer. Anuvin saw through the disguise, and addressed The Creator directly. They shared a small fire and the elf spoke of his people and their plight. The elves were made to rule all, but now had no place in the world to call their own. The elf did not ask The Creator to change his mind on the matter, for he knew that would have been terribly rude. Instead, he asked that the elves might find another purpose and place in the world. Upon this request, The Creator smiled and told Anuvin that it was not his place to tell others what they should and should not dedicate their lives to. Instead, it was for them to find their own path. Then, he reached out his hand and placed his fingertips upon Anuvin's brow to clear the madness from the elf's mind. Finally, The Creator disappeared.\"\n\n\"Wait,\" Gregory frowned. \"So he did all that for nothing?\"\n\n\"Of course not. You see, it isn't always what lies at the end of the road that matters. It's how we get there. Anuvin felt himself restored and ready to return to his people, for now he no longer felt the burden that The Servant had placed upon him and his race in that calling to be greater than all other creatures. Instead, he saw all things as his equal and returned to the elves to teach what he had learned. Soon enough, all our kin came flocking to the sound of Anuvin's name. He told us how to speak to the trees, and of the deepest secrets of the forest. We prized kindness over power, and became protectors and guides to the world The Creator had built. New enchanted forests were grown around our homes, and our lands were made evergreen even in the darkest of winters.\n\nThis is the story of how we became the guardians of the natural world, and you must understand it if you are to know why my sin was so great.\"\n\n\"You didn't work for BP, did you?\"\n\nValise gave him a somewhat sharp look at that, chiding him for his tone rather than comprehending what his words meant.\n\n\"Sorry, just trying to lighten the mood a little.\"\n\n\"What is a BP?\"\n\n\"A great enemy of the natural world.\" Gregory nodded sagely.\n\n\"Then perhaps I am. Do you know of The Withering?\"\n\n\"I don't think it's come up, no.\"\n\n\"It began centuries ago, when one day the ground shook across the world and the peak of The Creator's home exploded with fire and smoke.\"\n\n\"You mean a volcano?\"\n\n\"Yes and no. The effect was similar, though it brought a greater cataclysm with it than any volcano I have known of. Had The Creator not prevented anyone from coming near his home, it might have caused terrible damage. Even so far away, the impact of the blast was said to trigger earthquakes in this very forest. None know what began it, but any sensitive to magic know what it began. The Withering. The weakening of magic in the world. It began then, and continues even today. Kingdoms fell because of it. The power of human mages crumbled. Even the gods themselves fell in its wake as their once-powerful forms fell apart to nothing.\n\nAfter it began, The Creator was never seen again. The ruins of his home within the mountain were swept with molten rock and uninhabitable. The Enchanted forest had burned with the impact of the cataclysm. Then, a few decades after The Withering began, the dark ones emerged in the barren mountains of the north.\"\n\n\"You mean the Black Orcs that Grolfir mentioned?\"\n\n\"Nay, the orcs of the Northern Mountains were once much like those you know now until the dark ones seduced and defiled their race.\"\n\n\"Weren't they caught up in the blast when the mountain went boom?\"\n\n\"No, the northern mountain range is much like that which you can see to the south from the camp. It is very long, and The Creator did not keep it all for himself.\"\n\n\"Right, sorry. Just trying to keep a picture of it all in my head.\"\n\n\"It's perfectly alright, Gregory.\" She turned and kissed him softly, and he kissed her back with a loving enthusiasm. \"I'm glad I've managed to keep your attention. Not many care about the fate of the elves, or our stories.\"\n\n\"Why not?\"\n\n\"I'll get to that part soon enough, now where was I? Ah, yes. The dark ones. It is thought by the wise that the flow of magic in this world was somehow important in keeping those creatures away, for they are not of this world. They are beings of shadow made flesh. Their magic comes from elsewhere, and it wasn't weakened in the slightest. A great war had raged for many years in the human kingdoms, spurned by The Withering and tensions that had long been festering. We elves distanced ourselves from it, even when it was ended and the human Empire rose from the ashes, we stayed isolated in our forests between the Northern Mountains and the Empire. Though we suspected the demon influence, and the loss of contact with the northern orcs was troubling, we were not prepared for the evil deluge that eventually crashed down upon us.\"\n\nHer eyes had grown distant with the memory, and it became clear that Valise had experienced a part of this story first hand.\n\n\"The elven realms fell one by one to the dark ones' invasion, and with frankly terrifying speed until only the realm of my mother and father remained. Mother died in our last great battle, and father disappeared. Soon after, all the men within our tribe disappeared in the night never to be seen again. Our warriors on guard had been placed into some kind of enchanted sleep. I was left to take the mantle, with the aid of my sister. I was left with two choices. To plead with the humans for aid, or...\"\n\nHer voice trembled, and Gregory shifted his arms to wrap about her waist and hug her gently against him. A couple of warm tears splashed against his arm as she quietly wept. In this time he said nothing, but waited for her to finish the tale in her own time.\n\n\"I... It was pride, I think. Even then, I couldn't shake that weakness of our race. If we had fallen so quickly, I doubted the humans would even be able to muster a defence at all. So, I decided to work my own magic using power from a well I knew to be plentiful. I used dark magic. The magic of the demons. Nature's supposed guardian wielding the very essence of destruction that yearned to rot the heart out of every natural thing in this world. I thought I was strong enough to wield it against them, but I was not. It consumed me, and I became a tyrant and an addict. Thankfully, my sister rose up against me before I could turn our last fortress over to my need for more of that vile power. She was crowned as our new queen, and she had my ears clipped and my power diminished before banishing me to my mortality. I was sent away to the human lands where I watched the humans do what I had thought impossible. Their years of warring amongst themselves had made them fierce in battle, and capable of pushing back the demonic incursions. They did not fall, but by then I knew my homeland would have been overwhelmed. I have not seen my sister since then, nor any other true elf.\" She stopped and sniffled as his embrace of her had loosened slightly. Lifting her hands to wipe her eyes, she offered a sad little smile. \"So you see, I am unworthy of your kindness. I am a fool who sacrificed her people on the altar of her own pride.\"\n\nShe fell silent on those bitterly spoken words, and he felt her body tense up within his arms as she braced herself for his reaction.\n\n\"Yep,\" he finally said with a nod of agreement. \"On the scale of staggering fuck-ups that's pretty high up there.\"\n\n\"You would make light of this?\"\n\n\"No. Not exactly.\"\n\nGregory paused for a moment to consider his thoughts on the matter before trying to set them out before her.\n\n\"How long ago was this, Valise?\"\n\n\"It has been a hundred and fifty-four years since my exile.\"\n\nGregory tried very hard not to smile at that, and just about managed it.\n\n\"Valise, I know I'm a relatively young guy but even I'm old enough to know I'm not the person I was five years ago. I wouldn't want to be the person I am now five years in the future. People evolve. They change. You were a queen put between a rock and a hard place and you made a horrible decision in a desperate search for something to save your people.\"\n\n\"That is putting it too kindly, Gregory. I gave myself to those dark forces.\"\n\n\"Right, and are you planning on doing it again any time soon?\"\n\n\"What? Never! I would never even consider doing such a thing. I see them now for what they truly are and I loathe their very existence for how they changed me.\"\n\n\"Right, so you're pretty much the most solid elf I could hope to have at my side if I ever come into contact with that kind of magic. Right?\"\n\n\"I... That isn't-\"\n\n\"Oh yes it is. I'm not going to offer you any forgiveness, Valise. What you did didn't hurt me or mine so it's not my place to forgive it. That said, even an imbecile could see that you're not the kind of person you've just described to me. In fact, the shame and your hatred of who you were now serves to guard you against ever making those mistakes again. Keep that hatred hot, and that shame deep. Just remember that you aren't that woman anymore, and that the woman you have become is loved.\"\n\n\"Gregory, I don't deserve-\"\n\n\"You don't deserve what? To be loved? Of course you do. Besides, though your past sins might be pretty damn huge, I'm slightly insulted that you feel so much guilt over them.\"\n\n\"Why?\" she turned her head to face him, and he looked directly into her eyes.\n\n\"Because you saved my life, and I'm the most important person in the world. I mean, seriously. What would you all do without me? Surely that makes up for your past transgressions.\"\n\nThat note of playful arrogance brought the smile back to her lips, and he saw a glimmer of amusement in her eyes. It was an immensely rewarding experience to know he'd put it there.\n\n\"Oh really? I saved your life and that just makes up for everything I've done?\"\n\n\"It bloody well puts a strong argument forward for it from where I'm sitting. And it's not just the life saving. You've helped me out here so much, Valise. I don't know what I'd do without you.\"\n\nShe felt an ache in her chest, and knew only he could ease it. So she shifted around entirely to face him, coming to rest on her hands and knees between his legs. Her blue eyes seemed to have their own gleam, and he watched as they broke away from his face to glance down at the engorged pillar rising up from between his legs. A sweet silence fell between them, and each felt closer to the other than before. His acceptance of her in spite of her flaws made her feel like that ache near her heart wasn't going to disappear any time soon.\n\nThen she grasped his cock amidst nimble fingers and stroked along its length before she bowed her head before him and brought it between her lips.\n\n\"No.\" His tone was firm. \"Not yet. Come here.\"\n\nBefore she could begin loving him with her mouth, he lifted her by the shoulders and pushed her down amongst the furs lining her tent. He saw the note of confusion on her features, but she seemed to trust in his judgment. After her confession, he wanted to show her just how much he valued her service. Once her back had settled against the furs, she ran her fingers across his bare chest and enjoyed the touch of his battle-sculpted physique. His skin was hot to the touch, and she felt his lust for her burning within that heat.\n\nShe wanted him badly, and he soon gave her what she wanted in a way she did not expect. Finding her fingers sliding up across his chest to settle on his shoulders, he had lowered himself down her body. The hot traces of his breath on her fair skin sent crackling jolts of excitement through her. When he sank down between her legs, she parted her thighs to welcome his attentions. Yet for all that, she still did not anticipate what he was about to do until the last moment when his mouth fell upon her open pussy.\n\nIt wasn't the first time he'd done that to her, but in that moment she had thought he would use her for his own pleasure. She wanted to serve him. To make up for her past sins in any way she could. His understanding hadn't been something she'd expected, but the way he almost worshipped her with his tongue had come as a complete surprise.\n\nFeeling his arms slipping underneath her legs, she gasped with pleasure when his tongue almost immediately sought out her clit. Slow, deep licks across that most sensitive of places were interrupted occasionally with almost playful flickers of the tip of his tongue against it.\n\n\"Gregory, I cannot-\" That was all she managed to get out before her breathing became ragged and he stopped teasing her. Apparently he'd decided to devour her instead.\n\nHe loved the experience of pleasuring a woman with his mouth. In his time on Arolius, he had assumed a more dominant sexual personality. It was in his nature to be the aggressor, and in the case of Fiona in particular he knew that it became something even more. Still, to his mind there was nothing more potent or enthralling to his partners than to have his mouth upon their sex. To watch as they came apart on the movements of his tongue. It had been something he'd taken to practicing at length, and strangely enough he rarely struggled to find willing participants for his studies.\n\nBy the time his tongue touched Valise's wet lower lips that day, he'd become very talented indeed. She certainly didn't disappoint either, as her body writhed in his clutches and she moaned his name whilst he sent a thunderstorm of hot pleasure throughout her body. In truth, he could have happily lapped at her like that for hours. He enjoyed the taste of a woman on his lips, but Valise had a somewhat unique flavour that was sweeter and clearer than he'd tasted before. Like a fresh water spring, she poured forth against his hungry mouth when she reached a sharp climax. He drank heartily upon all that she had to offer.",
        "After that, she reached down between her legs to place her hands in his long, dark hair. Again, she thought that he would claim her with his cock. She wanted him inside her, thrusting and taking his own pleasure from her. Again, he subverted expectations and continued tonguing at her dripping folds. With his arms locking her legs in place, he stroked his hands along her slender belly until his fingertips lowered to join his tongue.\n\nShe felt his fingers brush against her clit, slower than his tongue had been lavishing licks upon it. The slick, warm organ instead began to lower and probe deeper inside her open petals. His lips sealed around that velvety opening and lightly began to suck and tease at the tightening flesh he was so content to explore. The touch of his fingers grew firmer and deeper, causing her muscles to tense; pushing her once again to the brink of a climax more powerful than the first. She rocked her hips to that steadily increasing rhythm of his fingers whilst they teased out a symphony of ecstasy within her. A silent scream parted her lips when it finally reached its crescendo and she lost herself to it completely.\n\nGregory watched from his front row seat as the beautiful woman clawed at the furs beneath her and writhed against them in a dance of pure passion. This time, he allowed her to catch her breath, and only softly massaged the outer lips of her pussy with his tongue whilst keeping his fingers away from her sensitive clit so she could properly savour the afterglow.\n\nShe didn't realise that he had shifted his position until she finally opened her eyes and found him settled over her. His fingers had replaced his tongue between her legs, and they had already begun stirring the familiar ache to feel him against her again. Lowering his head, he set a loving kiss on her lips that she welcomed openly until their tongues were entwined in an unending sensual caress.\n\nThey kissed like that for a long time, and her hands eventually lifted up to stroke along his cheeks. When it finally came to an end, he turned his face to plant a couple of little kisses in her palms and then shifted to whisper in her ear.\n\n\"You are my goddess. Mine.\"\n\nThe twin profession of devotion and possession made her draw in a hiss of breath. That old part of her still lingered in the shadows of her mind; still craving power and the title that was taken from her. In calling her his goddess he fanned the flames of that aspect of her, and she adored him for it. Then he had called her his, and spoken the word with no uncertainty. Even with the shadows of her old self still present, they were nothing compared to her desperate longing to make amends. In him, she had seen a way to do that. A way to help and begin to make up for past sins. She wanted to serve him, for she sensed in him something strong and something noble. Something that would not break or bend as she had. So, she would happily be his goddess, or whatever else he wanted her to be.\n\nCertainly, if she had to be something then \"goddess\" was certainly a pleasant enough title. Now all that remained was for her to earn it.\n\n\"Gregory,\" she whispered the word more out of necessity than a desire for secrecy. Her breath was still not entirely in her control. \"You have come to me to tend your wounds. May I?\"\n\n\"They don't seem to be troubling me as much as they did an hour ago. This place gives me a strong constitution.\"\n\n\"It is true; I don't think I've ever seen such recovery in a patient. If it did anything but allow you to heal rapidly then I'd be highly concerned about the effect this world seems to have on you.\"\n\n\"It also seems to give me a hyperactive sex drive, is that cause for concern?\" He asked the question between nibbling softly on her earlobe and continuing to tease her slit with his fingers.\n\n\"I- I don't think so.\" She smiled and enjoyed the teasing. \"It certainly has its benefits. But I had something else in mind for tending your injuries. I think you'll enjoy it.\"\n\n\"Then I'm yours.\"\n\nHearing those words, she felt like she might almost purr with delight. After setting a lighter kiss on his lips, she sat up and crawled over to her supplies and equipment. This gave him a rather wanton view of her ass and the glistening slit he could still taste upon his lips. Looking back over her shoulder to make sure he had stayed put, she caught him looking up between her legs. The fascination he had with her body made something inside her chest flutter with excitement, and she decided to throw modesty to the winds. The crawling hadn't carried the intent to give him a show. She was merely excited to impress him with what she had in mind. After seeing just how much she was enthralling him with that scintillating view, she damn-well wasn't going to give it up.\n\nSo, rather than rising up to sit on her haunches to go through her things, she instead remained on her knees and leaned forwards onto her forearms. Her beautiful ass lifted into the air and she opened her knees to spread herself for his gaze. A little wiggle of her ass served to show him that she knew just how lewd she was being and that she didn't give a damn about it. After taking up that position, she reached forward to begin picking out a number of small bottles. Once she had selected the elements she desired, she reached behind the boxes of ingredients and potions to pick up a long rolled-up rug.\n\nWatching the usually prim and proper lady act so wantonly for him was quite the turn-on for the man. If she hadn't asked him to allow her to take the initiative, he would have likely already mounted her from behind. His cock seemed to be made of aching steel, and it longed to embed itself inside the beautiful older woman. It was only his trust in her that kept him at bay, and she wasn't in the habit of letting him down.\n\nAfter gathering what she needed, she wrapped her arms around the items and held them to her chest before rising up on her knees and scooching back across the furs toward him. It didn't take her long to get herself ready. She laid the rug down on the furs, and it was revealed to be more of a comfortable mat in the shape of a long rectangle. He'd seen similar ones in the courtesans' tents, and knew that they were designed to keep oils from the furs.\n\n\"Lie down here, please?\" she asked.\n\n\"Sure, but I don't think I'm going to be able to lie on my front right now without things getting extremely uncomfortable for me.\"\n\nShe glanced down to the hardened length of his member jutting up toward her as he laid on his side with one of his knees bent to spread open his own thighs. Apparently she wasn't the only one capable of wanton displays.\n\nMuch to his enjoyment, her eyes fixed on his cock and he watched her lick her lips at the sight of it. She must not have known what she was doing, because she caught herself swiping her upper lip with the tip of her tongue and immediately pulled it back into her mouth. The fetching pink blush already on her cheeks deepened, and she glanced up to meet his eyes with an almost shy smile.\n\n\"That is quite alright. I doubt there are many aches and bruises on your back anyway, are there? Come.\" She patted the mat.\n\nHe obediently shifted upright and moved to place his firm ass on the leathery surface of the mat before lying back upon it. As he did, she reached out to snatch up a pillow and tuck it beneath his head.\n\n\"Thanks,\" he said.\n\n\"I confess that I enjoy having you watch me, Gregory. I never thought there would be another who would look upon me the way you do.\"\n\n\"Valise, you're one of the most staggeringly beautiful women I've ever laid eyes on. Just because you don't have unending youth and powerful magic doesn't mean you've lost that beauty. I like the way you look just fine. Orcs overlook you because they think you're human and they don't trust alchemy. People in the camp here defer to you because they respect you, and they show that respect by treating you like you're in charge of the place. They don't think it's appropriate to flirt with the boss, and you do have this kind of otherworldly beauty about you. It kind of makes you seem untouchable, and way out of their league.\"\n\n\"Am I so distant?\"\n\n\"No, you're kind and warm toward everyone. It's just that there's different kinds of warmth, and your particular kind isn't really open to that sort of invitation.\"\n\nRather than argue or consider his words, she instead contemplated them whilst arranging the bottles she had collected from her supplies in a neat line beside her. When she did finally speak, her tone was more curious than downtrodden.\n\n\"If I project such a demeanour, then what is different about you that it doesn't seem to matter as much?\"\n\n\"There's a saying where I'm from: Carpe Diem. It means seize the day. I didn't seize a lot of days before I came here, Valise. I guess I was projecting the wrong sort of image, and masking what I wanted from the world. I was too much of a dreamer, and the thing about letting your dreams out into the open is that they can get bashed around and broken apart. So I was guarded. Too guarded. Too quiet and too content to lurk around in my own head; and in stories about places like this. Places where there were orcs, elves, and magic. Then I found myself here, actually meeting the wonders I'd read about, and I figured it was about time I started carpe-ing the fuck out of every damn 'diem' that I was alive. A part of that was cutting out the usual testing of the waters when it came to meeting people. If someone was nice, then I'd be their friend. If they were awful, I'd be their enemy. If I wanted someone and it did no harm to tell them, I'd let them know it. I wanted you. You were kind, and gorgeous, and wiser than anyone I've ever known. I thought about the age difference. I thought that someone like you probably wouldn't be interested in me. I thought you'd be experienced and I'd embarrass myself. I thought of a hundred reasons it would be awkward. Then I thought: Fuck it. Carpe Diem, right? Now here we are.\"\n\nValise had been smiling at him throughout his explanation, but at the end of it she laughed softly at how he summed it all up.\n\n\"Carpe Diem,\" she tested the words on her lips and found she enjoyed the sound of them. \"Wise words, indeed.\"\n\n\"Damn right.\" He grinned up at her, and then his expression relaxed a little. \"It's also pretty much the only thing I can say to myself that will get me to actually charge at a bunch of orcs who want to beat my brains in with heavy clubs. So it's pretty versatile too.\"\n\n\"I sincerely hope I'm never in a similar enough position to try it out.\"\n\n\"Me too. Then again, the risks I've taken have pretty generally notched up some fantastic rewards down the line. Case in point: the naked elf kneeling beside me. I'd never have known that the finely-robed lady who seemed so demure was such a shameless exhibitionist with such a tasty pussy.\"\n\nColour once again flushed into her cheeks, but his words also stoked the fire between her thighs. She seemed to begin to say something, but then stopped herself. After a moment which lasted about as long as it took for someone to say Carpe Diem to themselves, her gaze returned to meet his and she smiled. It was not a warm smile, or a saddened one. It was playful, challenging and quite naughty.\n\n\"Do you enjoy it when I am so shameless?\" Her previous display had been somewhat experimental, and she was unsure of herself.\n\nHe merely nodded in response. \"Mmmhmm. And I enjoy your tasty pussy too.\"\n\nValise's smile broadened, and that little thrill she'd had when she'd spread her knees apart and bent over for him quickly returned. The rush of being desired was a heady one for her, and she was only too happy to indulge it further. So she playfully slipped one hand down between her thighs, and ran two fingers over her wet slit that glistened with fresh honey. Once she had them well coated in her love juices, she leaned over him and pressed them to his lips.\n\nNot one to be outdone so easily in such matters, Gregory was only too happy to kiss at the dewy digits. He then opened his mouth to lewdly run his own tongue along them, relishing the taste of her in the process. A pleased little noise murmured inside his throat, and he finally sucked any remaining traces from her fingertips.\n\nSurprised at his lewdness, yet loving every minute of it, Valise was spurned on to do more. With her free hand, she reached for a bottle of clear, sweet-scented oil. When she pulled her fingers from his mouth, she leaned back on her knees until her heels rested against her rear cheeks. Her head tilted backward, lifting her chin to steadily pour the oil over her bare breasts in a smooth, even stream.\n\nThinking that the bottles had been for him, he was damn near awestruck when he saw the thick, shiny liquid cascading across her collar bone and down over her breasts. Her silvery hair spilled behind her like a waterfall, and her eyes were closed with a content little smile teasing her lips. The display definitely had the desired effect on the male, who was left in stunned appreciation at her slender figure being coated in the oil. Once she felt it beginning to pour down toward her bellybutton, she lifted up the bottle to cease the flow and set it swiftly aside. Her hands then began to massage the glistening fluid into her porcelain skin, giving it a healthy gloss that shined in the warm light of the afternoon which managed to pierce through the crack in the folds of her tent. \n\n\"Do you like this?\" she whispered, her voice quivering with her own excitement.\n\n\"I love it.\"\n\n\"Tell me why.\"\n\n\"I love the way your hair shines in the light. I love the way your arms move so gracefully, even when you're being so naughty. I love the way your breasts rise faster and faster each time you take a breath, and how hard your nipples are. I love the way your pussy looks so damn good that it's making my mouth water. I love the way you're looking at me right now. I could fucking worship you, Valise.\"\n\nShe had indeed lifted her head to look down over him again, and her eyes were simmering with desire at hearing his words. Rather than push him for more, she mixed the oil with two smaller bottles in a little bowl she had brought with her. One of the bottles carried a clear blue liquid, and the other was light green. The resulting mixture reminded him of clear, tropical oceans. It had a fresh, enlivening scent and once it was properly mixed she lifted the bowl and poured a trickle of the liquid over his chest. Once it touched him, it lost its colour and brought out a shine in his own skin once her hands followed to rub it into his overworked body.\n\nIt wasn't long into the massage before he actually groaned with relief. He managed to forego the sight of her and closed his eyes to relax as she worked the soreness out of him. It began with her hands moving in broad strokes up and down along his chest, rising along the outer flanks and under his arms before meeting at the centre of his chest and descending once more down to his lower belly. Throughout it all, his cock never relented and offered a prominent spire. Those long, languid strokes seemed to be for diagnostic purposes. Soon enough she began to focus on his injured regions.\n\nAlthough that wasn't until she decided to tame the erect prow; lifting one leg to cast it across his body and then settling down to perch herself across his thighs. She'd already worked the oil into his legs, and their combined slick bodies slipped against each other. The combination of the miracles she was working with her hands and the fact that a beautiful woman had just straddled him brought a groan from his throat, and he looked up at her again.\n\n\"We don't have to ever go outside this tent again, do we? Can we just do this forever instead?\" he asked.\n\nThe elf's melodic laugh rang in his ears, and brought a smile to his lips.\n\n\"I don't think Janette or Algra would take to that idea.\"\n\n\"They don't know how good this feels. Jeez, why didn't we do this before now?\"\n\nHe felt more tension disperse from where Ulf had landed a particularly staggering blow earlier in practice. The pain sank beneath the touch of her hands and she lightly kneaded his muscle with her talented fingers.\n\n\"I've been meaning to, but it takes time, and you often distract me.\"\n\n\"Hey, you're the distracting one here. Every time I come in here you're wearing a see-through robe.\"\n\n\"That's because I want you to fuck me, Gregory.\"\n\nShe slid forward along his thighs until her pussy came to rest against the base of his cock. He could feel the wet, warm folds of her lower lips open slightly as they pushed against his thickness. It felt almost as if she was giving him a naughty little kiss.\n\nHis gaze had become distant and dreamy as she had worked her talents upon his aching body; but it focused back upon her with purpose upon hearing her words and feeling that kiss.\n\n\"Valise, if you want me to fuck you then you don't have to wear a see-through robe. All you have to do is look at me. I mean, you're utterly gorgeous and I'm completely in awe of you right now. Any time you want to explore this kinky side of yourself? I'm in.\"\n\n\"That is good to know.\" She began to move herself on him, using the slippery surface of their bodies to slide against him as her hands continued to massage the aches and pains from his chest.\n\n\"Besides, you don't have to dress up for me,\" he continued. \"I don't know if you've noticed but I'm kind of a slut.\"\n\nShe rose up using one hand planted upon his chest to steady her whilst lifting the other to place a fingertip on her chin and look upward in contemplation of his words. Her hips continued to roll slowly, grinding her pussy against the underside of his cock and pushing the hard member up against his abs.\n\n\"You know, now I think about it you are quite the slut, aren't you?\" she teased.\n\nHe flashed a grin up at her. Guilty as charged, ma'am.\n\n\"I think,\" she moved her hands to place them both on his belly, her thumbs coming to rest just over where the peak of his cock was pressed against him. \"I think that it might be contagious.\" Slowly, she slid her hands up over his hard pectorals to slip over his shoulders whilst lowering down upon him. The soft mounds of her breasts flattened against his chest, and her hair spilled around his head until her face was the only thing he could see. \"When I sit and cook dinner, when I mix potions, when I see you walking through the camp, my mind often wanders. I think about you taking me. I want it all the time. You make me feel so good. So loved. There is purity in that feeling, but there is also lust there. It isn't always easy for me to control it. I want you inside me. I want to give myself to you. I want to claw at the dirt and scream obscenities at the moon whilst you thrust yourself into me. Do you think that makes me a slut?\"\n\nShe had been deftly keeping the highly-aroused male relaxed until that point, but upon whispering those naughty secrets to him it seemed that they both decided it was time to escalate matters. Whatever Valise had put into that oil of hers had invigorated him, and he felt something very much like the urge to stretch. Rather than lazily stretching his muscles, however, it seemed instead to be focused on a much more active course of action.\n\nGiven the close proximity of their faces, with the tips of their noses occasionally touching together, it wasn't difficult for him to catch her in a kiss. It wasn't a playful touch, but rather a statement of purpose. He wanted her to know that he was about to give her every opportunity to make truth of her words, in every way he knew how.\n\nSensing the beast within him had been properly roused; Valise moaned into his kiss and curved her back until the tip of his cock pressed against her entrance. The kiss turned slightly playful, as their oily bodies were more difficult to wield toward each other. His cock kept slipping against her and prodding at her belly, or going in the other direction and sliding up between her ass cheeks. They both smiled as much as they could at the sensation, whilst still locking their lips against each other. Both of them enjoyed the slight frustration, and the tease it offered as their bodies continued to writhe together seeking that connection.",
        "It happened when they both didn't quite expect it to, as Gregory was shifting and she was once again sliding her pussy down along the underside of his length. He felt the swollen head of his cock part the silky lower lips and made a thrust on pure instinct. The push inside made her break their kiss to let out a loud gasp, and he watched her eyes close as a dreamy expression crossed her features. Knowing it was all for him, he waited until the beautiful woman finally began to sink down upon the remaining few inches of his cock until he was fully embedded inside her tight sheath.\n\nHer eyes fluttered open and she looked down upon him, the sky blue colour brightened considerably with pleasure. Lifting herself upright once again, she squirmed her hips to better accommodate his considerable size inside her. Those little movements eventually settled into a slow grind that swirled him about in her hot, wet depths.\n\nKnowing that the display was involving a little bit of showing off, Gregory was content to rest his hands on her thighs and watch. Noticing that she had an enthralled audience, she raised her arms up above her head and continued to weave her body back and forth whilst impaled upon him. Her breasts lifted upon her chest and she casually shifted her arms over her in a deeply erotic dance that showcased her gorgeous, slim figure.\n\nThe afternoon sun set her pale skin alive with a warm orange and red glow. It caught the silvery strands of her hair to make it gleam like a halo, streaming its light down over her shoulders.\n\nJust as before, the display excited her almost as much as him. She loved the way his eyes burned for her like twin blazes of raw lust and brazen desire. It made her move too quickly in her excitement to give him more, and she almost lost him from her inner folds. He caught the movement at the last moment, and tightened his grip on her thighs to steady her whilst lifting his own body to push himself back into her welcoming heat. She showed her gratitude for his initiative by lowering her hands to press upon his chest so that she could steady herself whilst riding him. Her body then began to lift up onto her knees before falling back down on him with steady, smooth strokes.\n\nHe soon began assisting her movements with his own, shifting his hips to meet her every time her pussy came down to clench around the base of his length. All the while, she looked directly into his eyes. For his part, he couldn't meet her gaze for long, for the sight of the beautiful woman riding him was far too appealing. The way her breasts bounced lightly each time she rose and fell upon him, or the way her lower lips clung to his member each time she lifted herself as if they didn't want to let him go. That wasn't even considering how good the oil made her body look, and how thoroughly sexy she looked with her graceful, rocking movements.\n\nShe loved watching him watch her, and as the excitement crackled through her like electricity, she began moving faster and faster. One hand remained planted firmly upon his chest, but the other shifted down between her legs to tease her own clit. He felt her fingertips rapidly moving over the little nerve-packed bud, as they also lightly tickled his cock as it plunged inside her over and over again.\n\nHe restrained his instinct to grab her and roll her over onto her back to take the matter of those thrusts into his own hands. She looked too damned good to spoil her moment, and her eyes had already glazed over with pleasure to the point he knew she would soon fall to another orgasm. It built within her, and he saw the signs of it when she closed her eyes and her lips parted to pant out his name. Her body began to shiver as the first little shocks ran out through her, and she rubbed her clit faster. The sound of his name turned into a long, hoarse moan when the great explosion finally took place.\n\nSitting upright, he lifted his arms to catch her within his embrace and held her to him whilst she continued bouncing in his lap with any restraint cast to the winds. The lady had come apart entirely, and seeing her shatter into a blissful state of quivering ecstasy was a truly wondrous sight to behold. The convulsions inside her snug pussy were more than enough to send him careening into his own orgasm soon enough.\n\nHer body slammed down upon his one final time as she continued to writhe upon him whilst embedding every inch of him inside her. The feel of his cum pulsing deep into her body pushed her back over the edge into another blissful wave. After all that teasing, his release was no small matter, and she felt herself being filled with his seed. It felt as if he were making her whole once again, and since she had stopped moving so wildly in his lap she took the opportunity to kiss him deeply. Her arms wrapped about his shoulders as his encircled her waist and they both licked at each other's tongues and sucked at their lips.\n\nWith their descent came the dawning realisation that they had crossed a point of no return. They had shared something too deep, and too powerful. It would likely affect them for the rest of their lives, and each had taken at least a small portion of the other for themselves. It worried Valise. She was no longer quite so blinded by lust, and she hadn't meant to take things so far with him. The kiss was momentarily broken. Their eyes opened to look upon each other, as if the depths of the ocean were meeting the heights of the sky.\n\nHe smiled at her. She found herself smiling back, and finally decided that sharing themselves with each other was definitely not so bad. He kissed her, and they fell back down together to enjoy the moment, as well as quite a few more moments thereafter.\n\n- - - - -\n\nLater that evening a shadow passed over Valise's tent. This went largely unnoticed by the owner, who was settled upon her hands and knees whilst Gregory passionately filled her pussy from behind. The shadow paused a moment to form the outline of Talina who was passing by on her way out into the encampment.\n\nIn all her years working beside Valise in the encampment, she'd never even considered that the blonde woman could have been anything but the personification of grace and serenity. It seemed as if Gregory was in the midst of proving her quite wrong on that account. He definitely brought out the animal in Valise, and the low and steady feminine groans and growls coming from within served to highlight just how far her friend had fallen. Then again, Talina was quite certain that beyond the occasional kind smile she'd never witnessed Valise actually enjoying herself since they'd first met.\n\nHer hand retreated beneath the black cloak she was garbed in, and pushed aside the material of her undergarments to tease her fingers along the folds of her own sex. Gods, that man could fuck! Perhaps she could slip beneath the canopy and ask if they'd like some company? No. Alas. Torren was all hers now and she was all his. That kind of ownership came with certain responsibilities. When she returned, she would wake up her bulky blacksmith and take out her frustrations on him. After all, he had responsibilities too.\n\nWith a sly smile settled on her lips, she lifted her hand to lick across her slippery fingertips and stepped on past the lovers' tent to make her way out into the encampment. Her hood was pulled up over her head, and she quietly disappeared into almost nothing.\n\nDisappearing was almost second nature to her. It wasn't that she could become invisible, but she was highly skilled in avoiding unwanted attention. Tonight she didn't want any attention, and by now she knew the camp well enough to stay out of sight with ease.\n\nA passing shadow in the night.\n\nIt didn't take her long to find her destination, for over the course of the past few nights she had taken to keeping her eyes on The Berserkers' alpha. His name was Rolk, and of a war pack comprised almost entirely of hulking brutes, she'd already seen that he was by far the hulkiest and the brutiest. He certainly wasn't that difficult to find, and tended to march around the camp with the rest of his pack as if he owned the place. Orcs being what they were, it didn't take much of that sort of attitude before The Berserkers were brawling with some poor bystander. Many of those who challenged Rolk for his attitude soon discovered that the alpha wasn't exactly versed in the concepts of honour and fairness. The rest of his pack would often cheat to help him if any other soul offered him a challenge, and as a result Rolk had already amassed a small fortune in the spoils of those challenges.\n\nTalina's initial interest in him had been mostly for Gregory's benefit. If her master was to pass the provings then he would need to overcome Rolk and The Berserkers. She'd started observing them in order to find out if they had any notable weaknesses. Unfortunately, there was a reason Rolk's pack was the most prominent on the proving grounds. Chinks in their armour were few and far between. They tended to stomp over their enemies with a devastating and almost clinically efficient charge, and they'd gotten disturbingly good at it.\n\nIn studying the great brute, she'd accidentally stumbled across her new favourite pastime of ruining his day. Her attempts to uncover the plotters who had freed the mad boy and caused her master so much trouble had come up frustratingly short. So, after she'd spent time following her few leads to dead ends she often sought out Rolk to see how she might best unravel whatever he had planned.\n\nTrue to form, she found him behind an array of tents with his pack in the process of kicking around another of the few merchants to be found amongst the orcs. As a vassal of Bolut, she recognised the merchant immediately. He was a middle aged orc named Perolf, who had never passed the provings due to his habit of remaining painfully thin and deeply uncoordinated. He had come to visit Bolut's camp once or twice, and Lydia had even danced for him. Talina found it remarkable to watch him walk, for it seemed as if his limbs moved almost completely independently of each other. This generally resulted in him falling over and hitting his head on things quite a bit.\n\nIt seemed like his head was now bouncing off The Berserker's fists quite a bit, so it was probably fortunate that it had endured some practice beforehand. She slipped into a comfortable spot where the shadows of two tents folded over each other and watched.\n\n\"Come, Perolf the Unproven!\" Rolk yelled. \"How can you even call yourself an orc? Better to take my challenge, and the beating that'll follow.\"\n\nPerolf stumbled to send those long limbs of his clattering toward the dirt. He spat some of it from his mouth before looking back up at Rolk.\n\n\"I am not to be challenged, on the orders of the warchief himself.\" Perolf growled in outrage. \"I am unproven, as are you, Rolk. We cannot give challenge to anyone.\"\n\n\"No? But we can take them up if we have a sliver of honour! Are you so weak that you hide behind your pathetic title. You are well past age when you should be proven, gold lover. I see it as fair for you to challenge me, and none of us are forbidden from playing. So, will you give me a challenge today? Or do my friends here need to play with you some more?\"\n\nTalina saw the look in Perolf's eyes, and realised that the poor orc was very close to taking up that challenge. He might have been barely able to match the weight of Rolk's club, but he was an orc. All orcs have a spirit of battle within them; even if it would be grossly unwise to accept it.\n\nShe moved out from her hiding spot with silent haste to get away from the challenge that would surely be forthcoming soon enough. There was something missing from the usual equation back there. Perolf might have had all the combat skill of a wooden spoon, but his brother Dregolf was another matter entirely. Not only had he passed the provings with flying colours, but Dregolf had actually served in the north in fighting against the scourge. In fact, he'd been up there and back again five times since his own proving, and she couldn't name many who came back from that place more than once.\n\nSo where the bloody hell was he now? Dregolf always looked out for his little brother. They weren't usually seen without each other for long. She scanned the surrounding tents and quickly came upon the explanation. Outside of one of the ale tents, there sat Dregolf with a particularly lovely young female orc settled in his lap who just happened to also be a member of The Berserkers. Ishka.\n\nSuddenly it wasn't so difficult to see why the veteran warrior was so distracted just at that moment.\n\nShe rolled her eyes and formed a plan of approach. It didn't take her long to head over to the brewer and order two tankards of redroot mead. This happened to be a particularly viscous drink that was vaguely pinkish in colour whilst smelling of damp soil. It wasn't exactly a recreational drink, and used more for its medicinal purposes in freeing up the bowels and supposedly increasing the density of one's beard. Never the less, its oily consistency suited her purposes just fine.\n\nAfter taking a deep breath, she let her cloak spill to the ground and left it there to walk back along the way toward where Dregolf was being asked to inspect the lining of Ishka's particularly flimsy top.\n\n\"Oh no!\" Talina yelled; flinging the tankards in the air and waiting for one to cover her and the annoying distraction that was her mark.\n\n\"What in all the damned dark realms!?\" Ishka cried out; trying to scoop the goopy substance from her eyes.\n\n\"Oh gosh! I'm so very sorry!\" Talina feigned utter horror at her actions. She'd handily ensured that the drink she'd spilled over herself had landed across her shoulder to spill down her body rather than letting it land on her head. Ishka had not been so fortunate.\n\nWithout waiting for an invitation, she lunged forward to \"help\" Ishka by running her hands across her body and ensuring every bit of her flimsy garment was covered in the thick liquid.\n\n\"Don't worry! I'll help you get this off in no time at all!\" she offered whilst smoothly dodging a punch aimed vaguely in her direction from the half-blind orc female.\n\nStrangely enough, not a lot of the drink had landed on Dregolf. Instead he now found himself watching two very attractive women practically have an oil wrestling match in his lap. Talina's little silver bikini did very little to hide the allure of her body covered in that shiny, slick fluid. He was concentrating so much on the way Talina's modest breasts bounced in their tiny confines before mushing up against the orc's larger green globes. As a matter of fact, he was concentrating so hard on the sight that he completely missed Talina swing her elbow out to clash against her slicked-up opponent's right temple.\n\nThe blow came so hard that the orc was knocked completely out of his lap to land in a heap on the floor. With part one of her plan completed, Talina then gasped in feigned terror as she looked upon him.\n\n\"Dregolf! Oh no! I'm so terribly sorry, sir! I've made such a mess, haven't I?\" She ran her hand mournfully up along the gorgeous, slender curve of her body. Then she bent over to place her hand in his lap where a bit of the mead had dribbled off her now barely-conscious opponent and onto him. \"Here, let me clean it up for you.\"\n\nShe reached out, knowing full well that his trunks were just about ready to burst with the lump they were restraining. So her hands lowering to massage the mead into his inner thigh and across his lower belly successfully brought all his attention to her. \n\n\"Is that better, sir?\" she asked as meekly and eagerly as she could. \"This stuff is so awfully difficult to clean off... unless...\"\n\n\"Arglnuph?\" In his defence, Dregolf could normally speak in full utterances, but he found that his mind just wasn't quite up to it right then for some reason.\n\n\"Well,\" Talina went on in a conspiratorial tone, \"I have heard that saliva is likely the best way to stop this from staining. If you'd grant me the honour, sir. I'd be happy to take you over there behind those tents and do everything my tongue can to clean up your crotch.\"\n\nThat did it, alright. She found herself immediately hoisted up over Dregolf's shoulder and enjoying the ride with a private little grin to herself. He ran between the clusters of tents as fast as his legs could carry him. Talina offered a cheerful wave to Ishka who was still lying in the dirt, covered in redroot mead, and looking bloody murder at her.\n\nSoon enough they were flanked by the canvas of the tents. Dregolf eagerly pushed his way through the ropes keeping them in place to burst out amidst the scene of his little brother's beating. In that moment, Talina successfully wriggled her way free of his arm and slipped down from his shoulder into a graceful roll onto the dirt behind him. The big orc didn't seem to notice. His lust was erased in a moment of stunned silence before a dark and familiar rage brought his blood to the boil.\n\nRolk stood in the middle of the private little clearing, his hand clenching a tuft of Perolf's hair and holding him upright with it. It seemed like Perolf had finally taken Rolk up on the idea of laying down a challenge, and it wasn't going too well for him. His face was bloody, one of his eyes had swollen shut with the skin turning into a fierce red colour, and his right ankle was definitely not bending the way it was supposed to.\n\nWatching Dregolf's reaction was something like watching a sped-up version of a kettle coming to the boil. At first he was very still, unable to quite believe his eyes at the scene before him. Then he began to visibly shake whilst his face contorted into a snarl of outrage. Finally, he cast his head back and smashed his fist against his chest before releasing a deafening roar of his own challenge toward the Berserker alpha.\n\nRolk spat on the barely conscious body of Perolf before letting him fall into the dirt.\n\n\"It is done. All that was his is now mine and I do not accept your challenge. A change is coming to this place soon, Dregolf.\" Rolk said with a startling lack of concern for the foaming-at-the-mouth warrior in his presence. \"You would be unwise to take anything from your future warchief. The orcs will soon stand proud again, and dregs like this will be purged from our ranks. Bow to me now and-\"\n\nIt seemed that Rolk hadn't quite read the situation correctly. Rather than cowering in fear, Dregolf had practically launched himself at his brother's attacker in a fiery rage. Rolk had also severely underestimated the vast chasm in skill between an unproven war-pack and a veteran of the northern war. When his pack members charged at Dregolf in an attempt to pin him down for Rolk, they found their charges came to a thundering halt with alarming speed. The senior warrior wasn't just faster and smarter than The Berserkers, but he was actually stronger. They weren't used to that at all.\n\nHe broke the jaw of the first one to tragically get ahead of his pack members and be the first to engage. A simple yet lightning fast sidestep put him at the wrong angle of the two that followed. He smashed them into each other and off balance with a lunge and a crash of his shoulder. After that, Rolk knew that the others wouldn't be able to get between him and Dregolf in time to be any help.\n\nThat was when the strongest orc of the proving grounds, and victor of so many challenges even before his time, turned and fled.\n\nUnfortunately, he wasn't nearly fast enough. Soon after that, Talina pushed herself back into the folds of the tents out of the way. She saw the rest of Dregolf's war pack, veterans all, burst out of other gaps between the tents. They had recognised their alpha's war cry. From then, life for the Berserkers took a distinct and monumental turn for the worst.",
        "Talina grinned and turned to slip out of the tents. There she found Ishka trying to clamber amongst the tents with fury in her eyes. The orc wasn't as nimble as Talina or Dregolf, and she pawed her way through the overlapping canopies of the tents blindly. The strike to Ishka's throat seemingly came out of nowhere. It sent her falling to the ground, clutching her neck and desperately gasping for air. For a moment, Talina stopped and felt a twinge of an old and familiar desire. It would be so easy to slip down beside the orc and finish the job. Then she thought of her master and shook her head, not wanting to bring that kind of trouble down on him. Instead, she skipped over Ishka, giving her one last surgical jab to the back of the neck that opened her airways again.\n\nConsidering her mischief well and truly successful, Talina slipped back between the folds of the tents and seemingly vanished into the night.\n\n- - - - -\n\nWhen Gregory awoke the next morning it was with an unusual degree of clarity. Until his time on Arolius, he definitely wasn't a morning person. The snooze button had been his greatest ally in what he considered to be a never ending battle against the unending trials of consciousness. Lately, it seemed as if waking up was no more difficult than flipping a switch. This was doubly surprising considering he was often barely getting more than four hours of sleep a night.\n\nMaybe it was something in the air?\n\nHe didn't usually spend much time worrying about it since he was often immediately distracted by the beautiful woman lying beside him. He'd spent the last night with Valise, and today she remained cuddled up against his chest in all her naked glory. Even given all his current troubles, he had absolutely no problem at all with this world if this was how it greeted him every morning.\n\nA smile crept across his lips before he leaned in to settle a light kiss on hers. It surprised him when her eyes immediately flickered open to focus on him without a hint of sleep marring their focus.\n\n\"I'm sorry. I didn't mean to wake you,\" he said.\n\n\"You didn't. I haven't yet slept.\"\n\n\"Why? Did you think I'd start rooting through your things looking for lost elven treasures once you'd nodded off?\"\n\nThat brought an amused smile to her lips.\n\n\"Everything I own is already yours, Gregory. Although I'm afraid I'm a little short on elven treasures at the moment.\"\n\n\"Not really.\" He looked down over her slender figure with a distinctly appreciative gaze. Given her nudity, there were plenty of treasures freely on display as far as he was concerned.\n\nThe brazen way he looked over her brought a little shiver through her body. She moaned softly when she felt him begin to harden against her bare thigh.\n\n\"I didn't want to sleep. It has been a long time since I've been quite so content, and I've learned that it could be a very long time until I find such happiness again. I'm merely savouring a moment.\"\n\n\"A moment? Crikey, I hope I lasted a bit longer than that.\"\n\nThat got an immediate laugh. \"Very well, I'm savouring quite a few very long and very happy moments. And I enjoy watching you sleep.\"\n\n\"Great, because that's not creepy at all.\" He reached around and gave her bare bottom a playful pinch. She yelped with a combination of shock and laughter before they fell together in a long, slow kiss.\n\nThat kiss lasted quite a bit longer than a moment, and both of them had to take deep breaths when they finally came up for air. They had shifted enough that he now found himself laid on his back with her languidly resting over his chest. Her small breasts cushioned against his hard muscle, and he felt her nipples lightly poking against his body.\n\n\"I should get going. Today's the big day, and I figure I need to give Algra and Janette a good while to chew me out over not coming home last night.\"\n\n\"Tell them it was time well spent. And remember to be yourself today. Don't let them try to make you fight like an orc when you can do better by simply being who you really are.\"\n\n\"Yes ma'am.\" He nodded as she lifted herself up from him and reached to pick up her long, white gown.\n\nHe took a while to enjoy watching her dress, and then when his cock had finally fallen enough to be comfortable, he reached for his trunks.\n\nThey came together once more at the entrance to the tent where he took her in his arms to kiss her goodbye and she eagerly responded in kind before releasing him.\n\nOnce he was out in the open, he found the camp to be already busy with the activities of the morning. There wasn't as much to do with the caravan away, but everyone still needed feeding and there were still some stalls to set up. Torren did the most business in Bolut's absence, fixing up weapons and helping orcs with his own supplies. The smiths amongst the orcs tended to be master weapon and armour makers, and a lot of the more mundane tasks of a smith seemed beneath them. So having a human smith around willing to forge things like nails at a cheap price kept many orcs passing through the camp even with so little of the merchant's wares to sell.\n\nIt was usually Valise who took to the task of feeding everyone, but this morning it seemed that Lydia and Fiona had stepped in to take up the burden.\n\n\"Morning.\" He nodded to them with a friendly expression as he passed.\n\n\"Morning, master.\" Lydia said as both women were grinning from ear to ear as they watched him leave Valise's tent. \"Nice night?\"\n\n\"Er... yeah, thanks.\"\n\n\"It sounded like Valise had a very nice night. I don't quite know what you were doing to her in there, but she seemed to agree with it frequently and loudly,\" Lydia teased.\n\n\"We were talking about how to make the best cheese sandwich, and we both thought they taste better with pickles. Valise is very passionate when it comes to cheese sandwiches.\" Gregory nodded with a deadpan expression. Not so long ago, he might have turned bright pink at Lydia's teasing, but by now he'd gotten used to it.\n\n\"In that case, feel free to drop by later and we can talk about cake. You wouldn't believe what me and Fiona would do for cake, master. Would you like us to show you?\"\n\n\"Sure, but excuse me a moment.\" He sounded slightly tense. Though he'd successfully overcome his tendency to blush at Lydia's teasing, the woman could still unfailingly give him a raging erection with a few honeyed words.\n\nDoing his best to think about cold showers and large spiders instead of the two gorgeous women sitting by their cooking pot, he made his way toward his tent. What he found within didn't exactly do much to calm him down.\n\nJanette was perched upon the large chest of Algra's former belongings that had been gifted to Gregory by Grolfir. She was completely naked, and using her arms to prop herself up into a seated position to better watch what was going on between her thighs. Her legs were spread wide open, and between them Algra was crouched and equally naked with her lips pressed up against Janette's glistening pussy. Both women gleamed with a light sheen of perspiration, and appeared thoroughly ravishing in the morning light that seeped through the canopy of their tent.\n\nJanette's face was fetchingly flushed, and her lips were quivering as she struggled to catch her breath. He knew that as a key sign of an impending orgasm on the part of the beautiful young woman, and paused in his approach to watch it happen. It could be seen rising up through her as Algra's well-practiced tongue licked across her clit and through her sensitive folds. Her toes clenched, and her back arched to let more of that lustrous red hair spill over her shoulders in fiery waves. In that moment, she caught the shape of Gregory in the corner of her eye and focused upon him. An instant of panic claimed her as instinct kicked in and years of being told how naughty it was to be caught naked and about to climax on the lips of your lover. That moment of tension quickly shifted to a thrill of recognising him, and seeing the blaze of desire in his expression.\n\nJanette knew his mannerisms as well as he knew hers by now. She knew by that look in his eyes that he wanted nothing more than to take her until they were both sore and spent. Naturally, she wanted to encourage that train of thought, and with the help of the rising climax emanating through her body, she put on quite the wanton display for him.\n\nHer pink tongue drew a fresh gleam across her lips before they parted to release a low, sensuous moan that held back nothing in displaying her enjoyment. Her hand drew up along the luscious curves of her body to cup her bare breast and lightly pinch her hardened nipple. The combined trinity of having her lover licking at her clit, an orgasm freshly tearing up through her core, and her man watching the whole thing was enough to turn one climax into two. She lay back along the length of the wooden chest to enjoy the second, and lifted her perfectly long legs up into the air.\n\nWaiting until after her feet stopped quivering; Gregory stepped toward his women and made himself known to Algra for the first time. She turned and offered him an expression brimming with her own lust, and quickly lifted herself upright to step into his welcoming arms. The kiss that followed was ravenous, and the taste of Janette's sweet honey on the orc's lips only inflamed his aching member all the more. It was only when he moved to begin tearing away his trunks and falling together with both women that Algra stopped him.\n\nFor a moment he thought he might have hurt her, or she might have noticed the sky was falling. \"Restraint\" wasn't generally a word that Algra seemed familiar with when it came to sex, and it seemed to him a very odd time to begin the practice. He was stunned when she pushed him away and shook her head, despite a clear hiss from between her teeth that showed her own frustration.\n\n\"Algra? What is it?\" he asked.\n\n\"You are to return to provings today. It is not good to fuck so soon before a fight.\" She spoke between heavy breaths.\n\n\"Why the hell not!?\" Both Gregory and Janette had snapped out of their lusty haze to yell the same thing in unison.\n\nAlgra gave them both a level stare and then shook her head.\n\n\"Because fucking and fighting both take same power from body. It is good to fuck before sleep when a fight comes with morning. It is not good to show up to fight still feeling fucked.\"\n\n\"Dammit, Algra. Don't start kissing me like that and then go making all kinds of abstract but weirdly understandable rules about how there's a proper time and place for everything.\" Gregory grumpily shifted his hard length inside his trunks.\n\n\"Next time I hit you instead. Will make you better prepared for pain in provings.\" Algra gave him a dangerously impish smile before turning to walk over to the bed where she went to lie down and close her eyes.\n\n\"You're not coming to watch then?\" he asked.\n\n\"Of course not. This is your first real proving. You are my mate. I do not enjoy seeing your face crushed into dirt.\"\n\n\"Wow, thanks for being so supportive.\"\n\n\"Don't get your face crushed into dirt, then maybe I come next time.\" With that, she wiggled slightly in the furs to get comfortable and then started to snooze.\n\nGregory gave a sigh of defeat, and then turned to look at Janette who had been busy putting her clothes on. She was just settling her cloak over her shoulders when Algra began to lightly snore.\n\n\"Are you coming, Jan?\" he asked after a moment of nervous hesitation.\n\n\"Of course I'm coming. You think I could stand to stay here after what happened last time? If you're going to get your chest kicked in again then I want to be there.\"\n\n\"I'm really feeling the love in this tent.\"\n\nJanette smiled at him and walked the short distance between them to plant a playful kiss on the tip of his nose.\n\n\"I'm just fucking with you. You guys are going to kick ass.\"\n\n\"Thanks, Jan.\" He immediately felt a lot better after hearing that.\n\n\"Algra's just worried. I'm not though. She says that if you die I can still stay here as her sex slave and since we're both kind of your mates then I'd get half of your stuff. We've got it all worked out.\"\n\nGregory laughed at that, and then whipped her cloak up to reveal the skimpy little garments she wore beneath it. With the fabric out of the way, his hand came down hard on her bare rear cheek leaving a pink imprint where it connected on her pale skin.\n\n\"Ow!\" She jumped and then shoved him playfully. \"Come on, Spanky. Let's go get breakfast before I spend the rest of the day biting my nails off with nerves.\"\n\nHe obediently did as he was told, and she led him out into the open where they picked up the breakfast that was being dished out by Lydia. They both ate quickly and quietly. Many of the members of the camp stopped by to give him a pat on the shoulder and wish him luck. In truth, their well wishes just made him anxious.\n\n\"Let's go for a walk.\" Janette suggested; picking up on his growing tension.\n\n\"That's a good idea.\" He nodded and stood up to wait for her to fall in step beside him.\n\n\"Are you sure you don't want anything else before you leave?\" Lydia asked, casually opening her thighs and stroking her fingers invitingly along their inner flanks.\n\n\"No can do! He's been put on a strict no-vagina diet this morning, I'm afraid.\" Janette gave him a dutiful shove to get him moving again after seeing him eyeing Lydia like a hungry wolf might regard a steak dinner.\n\n\"Spoilsport.\" Greg complained as he allowed himself to be shoved, but not before looking longingly back at Lydia.\n\nShe gave him a playful wiggle of her fingers to say goodbye.\n\n\"If the women around here keep this up I'm going to be going into the provings carrying my baton, my shield, and sporting one hell of a lance.\"\n\n\"I promise I'll be good.\" Janette's voice carried a note of laughter.\n\nShe simply locked one of her arms with his and started the walk to the proving grounds, taking the long way around.\n\n\"I really do think you're going to win today, you know. I mean, if you keep up what you've been doing with the others in training.\" Janette said in a more serious tone soon after they departed Bolut's camp.\n\n\"That's the plan.\" He took a deep breath and despite everything he couldn't help but feel a little like a man making his way to the gallows.\n\n\"It's too bad Ulla couldn't get her head out of her butt to join in with you guys.\"\n\n\"Yeah, I'd been hoping she'd show up to one of the training sessions with us. I always see Ulf looking hopeful whenever he hears someone coming into the clearing. I guess it's too late for that now.\"\n\n\"Better The Runts have you than her. You know I heard none of the other packs would take her? She's way too much of a hothead, and has a chip on her shoulder the size of the fucking Grand Canyon.\"\n\n\"She fights better than any of us though.\" He was hesitant to lay out judgment. Truth was that he'd have liked all the help he could get.\n\n\"Maybe so, but she can't fight with anyone to save her life. You know what went down with her and Algra?\"\n\n\"Stuff went down?\" He turned to look at Janette, the mention of his mate prying his thoughts away from the battle ahead.\n\n\"Oh yeah. Big stuff. Ulla's full name is Ulla Strongblood. She's part of the Strongblood clan, and they're apparently a huge deal around here. Lots of big heroes in their history. And you know about Rowun, right?\"\n\n\"I do.\" He nodded sadly. \"Algra's mate before me, and the reason she went to live in isolation. Couldn't handle everyone's attention and move on after he died in the northern wars. Or just didn't want to.\" \n\n\"Right, well Ulla wasn't just part of Rowun's clan. He was her big brother. After he died, she blamed it all on Algra. She hates her. I'm guessing that's part of the reason why she wasn't too chirpy about the idea of Algra's new mate running her pack.\"\n\n\"Great, that's something else I better watch out for then,\" he grumbled.\n\n\"No. I think she didn't want you there because she knew you'd bring Algra with you to help train them. Orcs don't usually let grudges carry over from one to another. They might lose their temper, or speak a little too much of their mind, but they don't let their anger seep out too much from where they've planted it. At the heart of it, it's Algra she's pissed at. Not you.\"\n\n\"And how do you know that? In fact, how did you get to know all this?\" he said; casting an impressed glance in her direction.\n\n\"Uh? Oh, well, I learned a lot of it from Talina. Rudd also swings by the camp once a day to try and check up on you. So, I've been talking with him about orcs, elves, humans, and all the other crazy shit that goes on around here. And I've been going to the provings with Talina whilst you guys have been training. I guess if you keep your ears open long enough you pick up stuff.\"\n\n\"I guess you do.\" He nodded. \"So, why has Rudd been coming by the camp?\"\n\n\"He thinks you could be the saviour of mankind. Although, he is pissed off his face about three quarters of the time, so I wouldn't take anything he says too seriously.\"\n\n\"I'll make a note of that.\" He couldn't help but smile at Janette's summation of the man. \"Did you see anything interesting at the provings?\"\n\n\"Oh yeah, lots of crazy shit. They're freakin' brutal!\"\n\n\"Right, I picked up that part already.\" He ran his fingertips down over the thin scar that now ran across his chest. \"Anything else?\"\n\n\"I dunno, I guess...\" She paused a moment, trying to figure out how to put it. \"I guess the more I watch them, the less I think of them like some gladiatorial fight from the dark ages.\"\n\n\"Really? What do they remind you of then?\"\n\nShe blinked apprehensively before peeking at him out of the corner of her eye.\n\n\"Well,\" she started slowly. \"If you really must know they kind of remind me of football matches.\"\n\nThat stopped Gregory in his tracks as he almost doubled over with laughter.\n\n\"I'm being serious, ok!?\" Janette protested.\n\n\"No... no...\" He managed to heave the words out between bouts of laughter. \"I just... I got this mental image of premiership footballers in the provings. Can you just fucking imagine?\"\n\nThat got a blurt of laughter from her when the picture quickly formed of a number of ridiculously overpaid humans falling over before the orcs could touch them; rolling around on the floor holding their shins and trying to claim a foul.\n\n\"So how do they remind you of football matches then?\" Gregory asked when he'd finally managed to stop snickering.\n\n\"It's kind of what orcs do for sport for one thing. When we first went there, I thought they were just bloodthirsty. But they don't really care about that as much as they care about the fighting styles and the tactics used. Honour's also a big deal to them. They don't have the same rules for fighting dirty that we would, but if an orc ever did cross that line then I would not like to be in their shoes at the end of the match.\"\n\n\"Right, so where's that line then?\"\n\n\"It's for stuff like hurting an enemy that can't defend themselves. There are also certain situations when attacking from the rear is a big no-no. Like if your opponents are outnumbered or clearly injured. Believe it or not, The Berserkers have been getting some flak for what they did to you. It's just whispers because no one wants to get on their bad side, and it would be worse if you were an orc rather than a human, but Rolk isn't nearly as popular as he thinks he is these days.\"\n\n\"Right, well that's good to know. I don't suppose they have any rules against low blows?\"\n\n\"Sorry, the attitude toward that is that if you're stupid enough to give your enemy a chance at hitting you in the pills then you deserve whatever you get.\" She shrugged.\n\n\"Great, I'll try not to be stupid then.\"\n\n\"You'd better damn well not be, buddy. I expect that whole area to come back tonight in full working order... or else!\" She gave his arm a determined poke with her finger."
    ],
    "authorname": "Lien_Geller",
    "tags": [
        "orc",
        "elf",
        "magic",
        "new world"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-missing-dragon-ch-05"
}