{
    "title": "New Horizons Ch. 25-30",
    "pages": [
        "Chapter 25\n\nAlex looked at her watch for the fifth time since she had entered her father's office. She was used to these weekly check-ins being a grueling affair, but with her mind so distracted by thoughts of a certain brunette, it felt almost excruciating to still be sitting there.\n\nRick was leaning on his usual perch by the window of Simon's office and his attention looked to be about as focused as Alex's was.\n\n\"I think that about covers it for now. We're in good shape on Death of a Salesman with the reviews in. So on to the winter gala. We're confirmed on the date?\" Simon asked Alex.\n\n\"November 13. It only gives us two weeks in between the gala and Quinn's opening night, but we had to move the entire Winter Series timeline up to account for the final show. The set is a bit more extensive than we were expecting and we need more load in time. But the invites are out and the main players we would expect to attend have confirmed.\"\n\n\"Young artists think they need so much pizzazz. Good directors need the stage and the actors,\" Rick said from the window.\n\nAlex was used to comments like that from Rick. The man often spoke in platitudes and he couldn't seem to understand the value of anything that pushed the traditional theatrical envelope. Alex was the one that pushed for shows that were more experimental. And while the set for the last show of the Winter Series may be elaborate, it all was part of the brilliance of the production.\n\nBut Alex didn't feel the need to debate Rick or her father on program decisions. They've made it clear that the Winter Series was hers. She worked for months to painstakingly choose the best productions to bring in. And while she may have been a bit biased towards Quinn's show, she was also incredibly proud of the two other artist groups coming in. The last one that Rick just mentioned were a rising group from Berlin and it was a coup for Horizon Theater Group to even secure the contract.\n\n\"Two weeks isn't much time to drive buzz about her show. How are you planning to sell tickets?\" Simon asked.\n\nIt took everything Alex had in her not to roll her eyes at her father's condescending tone. He knew very well that the Winter Series sold out almost immediately after the shows were announced at the gala. For the audience, it wouldn't matter if there were two or three weeks in between the gala and the first show. But she also knew that his question was more of a jab at Quinn's show than anything else.\n\n\"Quinn's show won't have any trouble selling out. She's one of the biggest names we've had in this theater in years,\" Alex replied in what she hoped was a bored tone and not a defensive one.\n\nSimon looked at Alex for a moment with his usual fake smile\u2014\n\nthe one that never seemed to reach his eyes.\n\n\"A model is not a name, Alexandra. I hope you're not putting too much faith in this experiment.\"\n\n\"This has nothing to do with my faith. Even Janet has said that she's received more interest from the media around Quinn's show than any other.\"\n\nAlex knew that she was pushing where she shouldn't\u2014 Simon's ego was not something that people generally played with. And if she thought for a second that her faith in Quinn's show was just driven by her desire for the other woman, she wouldn't have said anything. But her father's comments had no founding in anything solid.\n\nShe took a steadying breath before she answered him even though she knew from a lifetime of experience with her father that she probably wouldn't be able to hide her actual annoyance.\n\n\"Janet has secured a Times feature that will be coming out on Quinn's show the day after the Salesman closing, which should give her a bump even before the gala.\"\n\n\"We've never announced the Winter Series programming before the gala. That's highly unorthodox.\"\n\n\"The world is changing dad,\" Alex said and internally relished in the way he seemed to cringe slightly at her use of \"dad\". \"How audiences get their info and the things they want to see is changing. We should take advantage of the buzz Quinn's show will give us. The earlier we announce, the easier it is to do that. There really is no reason to wait until the gala just because that's what we've always done. We'll still be announcing the second two shows at the gala.\"\n\n\"I'm not sure I agree with you, but the Winter Series is yours. We're putting our trust in your hands,\" he replied but his tone made it obvious that he didn't trust her at all.\n\n\"If we expand our marketing into new channels, we won't need to rely on the subscription model as much, which we all know is struggling for Horizon,\" Alex continued.\n\nShe knew they'd been on this merry-go-round before, but Quinn's show was the perfect example of how she was trying to veer the theater into the future.\n\n\"She's not wrong, Simon,\" Rick said and Alex once again appreciated his presence in these meetings.\n\nRick was an interesting mix of artist and businessman, which was why he made a strong Executive Director for so long. He understood the financials of the theater much better than her father. Simon Anders was born with money and had no sense for the intricacies of Horizon's revenue streams since he didn't really manage them\u2014 Alex did. It's the reason Broadway investors loved him so much\u2014 if Simon liked the artist's concept, he'd fund the show with no questions asked.\n\nIf it were only Alex in his office, Simon would probably just put his fingers in his ears and refuse to listen. At least he pretended to behave in front of Rick.\n\n\"And a feature in the Times is a new channel?\" Simon asked his daughter, ignoring Rick's comment.\n\n\"No. That's just the exclusive to kick things off. A feature in the Saturday paper still means something. But once that runs, Janet's marketing team will coordinate with Quinn's team and they'll leverage her highly influential social media channels to create an online campaign.\"\n\nWhen Simon just stared stubbornly at her from across the desk, Alex finally let her annoyance show.\n\n\"That's on the internet.\"\n\n\"I know that, Alexandra,\" he replied in an icy tone.\n\nAlex knew when to push her father and when not to, and by the look of rage simmering just under the surface, she knew now wasn't the time to keep pushing. Simon never lost his temper outright. He always managed to keep a calm demeanor even when he was cutting someone down. But she knew his facial expressions well enough to know that she was about to get an adult version of a spanking.\n\n\"If you don't trust me on this, then trust Janet,\" Alex said in a much less combative tone. \"She's never failed us before. Nobody knows the New York audience better than that woman.\"\n\nAlex watched her father glance over at Rick and the two shared a look she couldn't recognize. She knew her father and Janet had always had a tumultuous relationship since Janet had never really approved of his marriage to Alex's mom. But professionally the two seemed to work seamlessly together and Alex just hoped Simon wasn't about to make some change in PR agency just to spite his daughter. She had always gotten the sense that Simon never warmed to Larry because of how much time Larry spent with Alex over the years and the same could be said for Janet.\n\nShe intentionally didn't mention the fact that the Times feature would also include a quote or two from her, knowing how that would go over. But not for the first time, the whole interview idea made her stomach tighten in anxiety.\n\nSimon began to shuffle the papers on his desk, one of his usual signs that the meeting was over or at least his attention on it was over. Alex picked-up her laptop and stood.\n\n\"I'll send you both the timeline for the next 30 days once I get back to my office. I'll also send you the agenda for our meeting tomorrow on the spring show. If we want to tease that show at the winter gala, we need to make a final decision,\" Alex said as she moved to the door and put her hand on the handle.\n\n\"The decision has been made so we don't need to have that meeting. I'll see you at the restaurant tonight at 8,\" Simon said, avoiding her eyes to look down at some script in front of him.\n\nAlex immediately dropped her hand and looked back over to Simon. When he didn't look up from his desk, she looked over at Rick who seemed to be focused on smoothing down his tie.\n\n\"What do you mean it's already been decided?\" she asked.\n\n\"I mean Rick and I made the decision already.\"\n\nFor a moment Alex just stood there staring at them both. It's not unusual for Simon and Rick to choose the programming for the Horizon produced shows, especially if they're the ones directing it, and Simon was directing this one. But given her hand in the Winter Series, plus the fact that Simon had asked her for recommendations for the spring show, she assumed she would be involved.\n\n\"What did you decide on?\" she asked, curiosity winning over her frustration in being left out again.\n\n\"David Coe's new work,\" he replied without elaborating.\n\nAlex had trouble schooling her features and simply narrowed her eyes at her father in confusion.\n\n\"It just had a sold-out run in London. He chose Horizon for his New York debut,\" Rick added in an obvious attempt to appease Alex.\n\n\"That's in England,\" Simon said, giving her a small smirk from his desk.\n\nShe had been waiting for a verbal retaliation for her comment earlier and there it was. Now the anger simmering in her gut had nothing to do with being left out of the process and entirely to do with the choice itself.\n\n\"I know that, father,\" she said, mirroring his words from earlier. \"Did you look at the options I sent you?\"\n\n\"Yes. And we decided that this show was the best suited for our audience,\" he replied.\n\n\"Coe's play doesn't have any female characters. Not to mention some of its more controversial themes have been called archaic by the media.\"\n\n\"The decision has been made. Once you are leading things, you can make all the arguments you want. For now, we made the decision as the two heads of this theater. You have the Winter Series.\"\n\nAlex's heart skipped a beat at his words. It could just be her father's way of getting her out of his office, but he has never mentioned her stepping into Rick's role before and this was at least a small hint that he's thought about it.\n\n\"Are you saying you're considering me for Rick's role?\" Alex asked, glancing over at Rick as she said it to see if she could gauge a reaction.\n\nUntil now they had been circling around the topic and she had never directly asked. But with Rick in the room with her father, she figured it was the best time to see if she could get any indication on her future.\n\n\"Of course I am, Alexandra,\" he replied as he stood from his desk. \"But this meeting has run over and I have an appointment to make.\"\n\nAlex gave him a small nod, deciding not to push the topic any further and tried not to let him see how his words affected her. She also knew he didn't really have an appointment to make, but always left the theater in the late afternoon to go meet with his rich theater buddies.\n\nShe gave one last look to Rick who gave her a small wink. She tried not to read too much into that, but there was a small kernel of hope growing in her mind that her father's statement and Rick's warm demeanor might mean something significant.\n\n\"I'll see you both tonight at the restaurant,\" she said, leaving the office to go back to her own.\n\nBefore she was even back to her office, she pulled out her phone to text Quinn. With back to back meetings yesterday and Quinn in rehearsal, she hadn't been able to see the other woman since their date and she was more than eager to lay her eyes on the brunette again.\n\nAlex: Are you still here?\n\n \n\nAlex was barely inside her office when a fast reply came from Quinn.\n\n \n\nQuinn: Yes, Diego just left. I'm taking a call with my team from the rehearsal room. And maybe waiting for a blonde bombshell to come kiss me.\n\n \n\nAlex: I haven't seen any of those around here.\n\n \n\nQuinn: Then find a mirror.\n\n \n\nAlex: Very smooth.\n\n \n\nQuinn: You're not the only one with game Ms. Anders\n\n \n\nAlex smiled widely as she sat back down at her desk. She may not have seen Quinn since their first date, but they had kept up a constant conversation thread over text, and the easy banter was just making her miss the brunette even more.\n\nAlex: Noted, sweetheart.\n\n \n\nAlex added a wink face to her text, knowing what kind of reaction both the term of endearment and the emoticon would elicit.\n\n \n\nAlex: When is your call done?\n\n \n\nQuinn: Ten minutes...did you get a permission slip to come see me?\n\n \n\nAlex: No, but I'm going to anyway.\n\n \n\nQuinn: I've always loved a bad girl\n\n \n\nAlex: Shouldn't you be paying attention to your call?\n\n \n\nQuinn: Why? They're just talking about me, and not to me. I doubt they'd notice if I hung up\n\n \n\nAlex: Pay attention to your call. I'll be down soon.\n\n \n\nQuinn: Bossy, bossy. \n\n \n\nAlex: I think you like it.\n\n \n\nQuinn. I know I do. Come boss me around in person.\n\n \n\nAlex's insides went from warm to hot in an instance and she had to squirm to relieve the throb that hit her pussy the moment she read Quinn's text.\n\nThe sensation of being perpetually turned on was something Alex was still getting used to. She had never met anyone who she wanted this much, this often. But she now knew it wasn't just about sex. She craved these moments of fun banter and romantic intimacy just as much as she craved seeing Quinn naked again.\n\nSince their first date, Alex had felt lighter and happier than she had in years and she was determined to hold on to that.\n\nAlex: On my way.\n\nChapter 26\n\n\"I was too listening. I heard everything. It was riveting,\"\n\n\"Then what was the last thing we discussed?\"\n\n\"That you've canceled all my media engagements for forever.\"\n\nQuinn picked up the phone she had resting on the bench in her rehearsal room and walked over to the mirror. She knew there was no real point in trying to convince Mikey that she had been paying attention to their team call, but she wasn't ready to completely concede. It was more fun to tease him.\n\n\"Not happening,\" Mikey replied into the phone.\n\n\"I don't think we were on the same call then,\" she said as she gave herself a quick once over in the mirror and tried to brush some of her whisps back into her hair band with the hand not holding her phone.\n\nAlex had already made it very clear that she was pretty much attracted to Quinn in any scenario, but the brunette wanted to see that hungry look in the blonde's eyes again so she figured a little extra primping wouldn't hurt.\n\n\"We discussed the winter gala. It'll be on November 13 across the street from the theater at the same restaurant that hosted the opening party you went to,\" Mikey went on.\n\n\"Right, right,\" Quinn replied distractedly.\n\n\"And next week is your interview with the Times. Alex will be joining you for that.\"\n\nMikey's voice trailed off and Quinn's attention was immediately back on their conversation with his use of Alex's name.\n\n\"Wait, what?\" she asked.\n\n\"I had a feeling that would get your attention. And now I know why you seem so distracted. I'm guessing things are headed in a positive direction on that front?\"\n\nOnly Mikey would ask her if things were headed in a positive direction instead of just asking her if she had fucked Alex yet. He was always so damn proper.\n\n\"Yes, good sir. They have progressed splendidly and positively and we are now courting.\"\n\n\"Anyway,\" he said with his usual sigh. \"She'll be at the interview with you. She may answer a few questions about the winter series and bringing your show to Horizon.\"\n\nQuinn's mind was finally focused on the phone conversation and not her reflection and she moved over to the wall so she could lean against it.\n\n\"That's interesting,\" Quinn said.\n\n\"I thought so too. She doesn't seem like the type to do interviews.\"\n\n\"Does Alex know?\"\n\n\"It's this Monday so I assume she does. Janet said they have weekly meetings.\"\n\nAt that moment Quinn heard a soft knock on the door and Alex was standing in the doorway with a sexy, casual smirk on her face. Quinn pressed a button on her cell to take Mikey off the speaker phone as she let her eyes roam up Alex's body.\n\n\"I have to go,\" she said into the phone and she already knew Mikey would be able to detect the lower tone her voice suddenly took.\n\n\"Tell Alex hello from me,\" he replied.\n\n\"I don't know what you're talking about.\"\n\nHe gave a quick laugh. \"Sure you don't. Talk later.\"\n\nQuinn let her phone drop to her side as she continued to stare at the woman standing in the doorway. Alex had looked so casual the last two times Quinn had seen her that she forgot how hot the blonde's \"professional\" look was.\n\nToday Alex had on black slacks, a silky black blouse, a fitted black blazer, and a pair of sexy, closed toe black heels. She didn't have any color on except the gold watch on her wrist. Her hair shone against the darkness like a ray of sunshine and Quinn felt her pussy clench with need.\n\nAlex's pose, with her hip cocked to one side, only enhanced how entirely confident and sexy she looked.\n\n\"Sorry, I thought you'd be done by now,\" Alex said in a soft tone and Quinn didn't miss the way the blonde's eyes roamed her own body. But she knew her casual t-shirt couldn't compare to the sophisticated woman in front of her.\n\n\"I was actually just talking about you,\" Quinn said, trying to shake herself out of her obvious ogling of Alex. She finally put her phone in the back pocket of her jeans.\n\n\"To?\" Alex asked.\n\n\"Mikey. He says hello.\"\n\n\"I think one of these days I'll need to get to know him better.\"\n\nNow Quinn felt more than her pussy clench. Alex always seemed to surprise her lately and she felt her stomach flutter at the woman's words.\n\n\"I'd like that,\" she replied, smiling warmly at Alex. \"I can't stop thinking about you.\"\n\nAlex didn't respond right away but came further into the room and closed the door. She moved over to the wall Quinn was leaning against but didn't come close enough to touch. Instead she leaned her right shoulder against the wall so she could face Quinn. Quinn changed her position so she could mirror Alex's and now they were facing each other.\n\n\"I can't stop thinking about you either,\" Alex finally said with a tenderness that didn't seem to fit with the domineering outfit she had on. \"What were you and Mikey talking about?\"\n\n\"The Times interview on Monday. I didn't know you were making a guest appearance,\" Quinn replied with her own smile.\n\nWhen she saw a look of worry flash across Alex's face though, she wished that they hadn't broached this topic and were back in fun, flirty, banter land.\n\n\"Are you ok with that?\" Alex asked, her voice thick with obvious anxiety.\n\n\"Of course. I think it's amazing you're getting credit for what you do here. But I guess when Mikey told me, my first feeling was surprise that you wanted to do it.\"\n\nQuinn watched Alex's face, which seemed to vacillate between concern and indecision.\n\n\"I don't know,\" Alex said, looking down instead of at Quinn.\n\nQuinn scooted closer to Alex on the wall so she could finally, grab and hold the other woman's hands.\n\n\"What don't you know, babe? Talk to me.\"\n\n\"Janet thinks that if I'm featured in the article as part of Horizon's recent success, that my father will be put in a corner and will have to give me Rick's job. Courtney thinks she's right.\"",
        "\"And do you?\"\n\nQuinn knew better than most just how powerful the media could be. But she also knew the dangers of it, so she completely understood Alex's reservations.\n\n\"My father cares about his image and the image of this place, probably more than anything.\" Alex gave a harsh laugh before she continued. \"No, not probably. He definitely cares about this place more than anything. He leans on the romance of a father and daughter run theater when asked. But he never would offer that up as his own narrative. But if backed into a corner, I can't imagine him making a decision that makes him look like a bad father.\"\n\n\"What if it just makes him angry?\"\n\n\"My existence makes him angry.\"\n\n\"It doesn't make me angry,\" Quinn said back, moving even closer on the wall with a suggestive quirk of her eyebrow.\n\n\"And you're not mad that I'm intruding on your spotlight?\"\n\n\"Please intrude. I'd be happy if you just did the whole interview.\"\n\n\"Poor baby. A media darling. That's the price you pay for being beautiful, talented, and wanted.\"\n\n\"Do you want me?\"\n\nAlex didn't respond, opting to move fully into Quinn's space. She pushed her body up against the brunette's and brought their mouths within inches of each other.\n\n\"What do you think, sweetheart?\" she asked against Quinn's lips.\n\n\"I think you have a thing about pressing me against walls. Now kiss me.\"\n\nQuinn closed the distance between their lips, knowing that Alex had the control to continue to tease her for however long she wanted. But Quinn claimed no such control and needed her mouth on the full lips in front of her.\n\nAlex didn't seem to mind Quinn's assertiveness and allowed the other woman to momentarily control the pace of the kiss. But soon, Alex took both of Quinn's hands and pinned them against the wall, grinding her pelvis into the other woman's.\n\nEven with half her mind on the pressure Alex was suddenly pushing against her pussy, Quinn also knew that if they didn't stop now, she would be tearing her own clothes off soon.\n\n\"Alex,\" she panted against the other woman's mouth before she let Alex plunge her tongue in again momentarily. \"Babe. We can't here.\"\n\n\"I know,\" Alex breathed against her lips.\n\nBut instead of moving her mouth, Alex just continued to kiss Quinn and thrust her body up again so their pussies hit together, successfully making Quinn forget about any reservation she just had.\n\nAfter another minute of making out and grinding against each other, Alex finally pulled her mouth away from Quinn's. They both stared at each other as they caught their breath and Alex kept her center pressed against Quinn's. She slowly moved her mouth so she could lightly graze kisses up Quinn's neck until she was next to her ear.\n\n\"When can I see you?\" she asked.\n\nQuinn had trouble processing the question as she felt Alex's wet lips hit her ear lobe. She was about ready to tell Alex to take her home right then until she was able to take a breath and remember that it was still a workday for Alex.\n\n\"Tonight?\" she panted out and grabbed Alex's head to bring her in for another kiss.\n\nAlex kissed her back deeply, moving her hands off of Quinn's so she could bring them up the brunette's body. As she slid them up, she lightly grazed Quinn's tits, causing the brunette's head to fall back on the wall and her eyes to close. Alex finally rested her hands behind the brunette's neck.\n\nWhen Alex brought her mouth off of Quinn's again, Quinn could feel their shared breathing coming out in ragged pants against each other's lips.\n\n\"It's my father's birthday,\" Alex said in a whisper before placing another small kiss on Quinn's lips. \"I have to go to his dinner party. Which I promise you will be less fun than what I could get up to with you.\"\n\nQuinn let out a groan she couldn't keep in\u2014 partly from Alex's answer and partly because Alex was pushing her pelvis into her again.\n\n\"Tomorrow?\" Alex asked, pushing her body up and into Quinn's, eliciting another groan from the woman.\n\n\"Fuck, babe. You're making me so wet. You need to stop if you don't want me to come in your theater.\"\n\nAlex let out one of her low, sexy laughs, but again didn't move her body away from Quinn's and continued to press into her. \"Then see me tomorrow night,\" she said.\n\n\"Ok,\" Quinn replied as she put her arms around Alex's back and brought them down to grab her ass. But as she let her hands roam, she suddenly remembered something. \"Wait. Tomorrow is Friday. I'm having dinner with Tim.\"\n\nAlex pulled her face away another inch so she could look into Quinn's eyes more fully. \"Delvin?\" she asked.\n\n\"Yes, he's taking me somewhere fancy apparently,\" Quinn replied as she brought her hands to rest on Alex's hips.\n\n\"You really do make friends everywhere you go,\" Alex said with a small smile, repeating her words from the other night.\n\n\"I like Tim. And I think he'd be perfect for Mikey.\"\n\n\"And how does Mikey feel about you being a matchmaker?\"\n\n\"Mikey doesn't get an opinion on this,\" she replied with a playful smile.\n\n\"I see. And what about after you're done planning Mikey's future?\"\n\n\"I was planning on texting this hot blonde for a booty call,\" Quinn said, bringing her hands back around Alex's body so she could lightly grab the collar of her blazer. She couldn't seem to stop touching the woman.\n\n\"You don't need to text. Just come over. I'll tell the front desk of my building so you can just come up.\"\n\n\"What if it's late?\" Quinn asked in a quiet voice, not able to resist bringing her lips into the other woman's again.\n\nThis time the kiss didn't last long, but when they pulled away, they kept their mouths close.\n\n\"I don't care what time it is. I just want you as soon as I can get you.\"\n\n\"You'd also make friends easily if you let people see this side of you.\"\n\n\"You want people to see this side of me?\" Alex asked, quirking her eyebrow.\n\nShe quickly brought her hands down over Quinn's front again and lightly hit her hard nipples.\n\n\"No, not this side,\" Quinn said, letting out a small moan right after the words left her mouth. \"Nobody gets to see this side of you now.\"\n\n\"Nobody will,\" Alex replied with an intense look in her eye.\n\nThey hadn't addressed the exclusive conversation since the opening night party when Alex told Quinn that she didn't like to share. It still felt too soon to broach the subject, but the intense look Alex was giving Quinn made her think that they both felt a deeper connection than they were willing to put to words right then.\n\n\"But speaking of friends,\" Alex added tentatively. \"Courtney wants to know if we'd do a double date on Sunday after her show. The theater is dark on Monday so that's usually her favorite day to go out. But if you think it's too soon, I totally understand. I mean, I've only met her girlfriend once, so it's not like she'd be that disappointed. I can just tell Courtney no\u2014\"\n\nQuinn pushed her fingers against Alex's lips to stop the rambling that just seemed to be getting worse.\n\n\"Babe, I'd love to go on a double date with them. This is that whole intimacy thing we talked about,\" she said with a small smile so she didn't come off as condescending. \"I want to get to know someone who knows and loves you.\"\n\n\"God, sometimes you and Courtney sound so much alike. Except I don't want to do this to her,\" Alex said as she leaned in and took Quinn's mouth again.\n\nBut this time they didn't part as fast and Quinn tried to put her feelings into the way she kissed Alex. What started hot and heavy, turned almost sensual as Alex's hands came up to gently cup Quinn's face. Their tongues touched only lightly as their lips took over at a slow pace and Quinn felt like she could just stay there kissing Alex forever.\n\nWhen Alex's leg slipped in between her own and moved upwards though, Quinn had to break the kiss so she could let out another groan and push against the wall.\n\n\"It's going to be really embarrassing when you keep doing that and I come still wearing my pants,\" she said but brought her hands around Alex so she could pull her in for another thrust. \"You'd be really hot with a strap-on,\" she added, not even thinking about what was coming out of her mouth.\n\nShe could hear a sharp breath come out of Alex's mouth as the blonde once again leveled her gaze on Quinn. But Quinn didn't need to worry about how direct her statement had been or how Alex would react. She could see the blatant arousal written all over the blonde's face.\n\n\"You'd like that?\" Alex asked in a low voice.\n\nQuinn was so focused on controlling her breathing, that all she could do was give a slow, deep nod back.\n\n\"Please,\" she finally whispered, causing another flash of hunger to cross Alex's face.\n\n\"That can most definitely be arranged,\" Alex replied.\n\nFor a moment they just continued to look into each other's eyes. Quinn was doing everything she could not to just ask Alex to put her hand down her pants and quickly get her off. By the way Alex was acting, she had a feeling the blonde would comply. But she was also trying to respect the theater boundaries they've set and technically, this was her place of work too.\n\nTheir trance was broken by the sound of people coming down the hallway outside their room. The rehearsal rooms never stayed empty for long and Quinn was used to a constant stream of traffic outside her room.\n\n\"Tomorrow then,\" she finally said, lightly pushing Alex off her body so she could think.\n\n\"Tomorrow,\" Alex said with a soft smile as she smoothed down her rumpled blazer.\n\nQuinn couldn't help but laugh at the sight of Alex attempting to smooth out wrinkles that weren't going anywhere. \"Well, you look like you were just fucked,\" she laughed. \"Better go change before daddy sees you. I don't want him to come looking for me. That conversation wouldn't be nearly as much fun as this was.\"\n\nAlex narrowed her eyes at the laughing Quinn before she slowly pushed herself back up against the brunette again. She moved her mouth so it was just below Quinn's earlobe.\n\n\"I'm going to change anyway before dinner,\" she whispered. \"I need to take care of the mess you've created in my panties today.\" She placed a small kiss on Quinn's cheek and pulled her face back with a small smirk. \"See you soon.\"\n\nAlex was out of the room a moment later, but Quinn could only continue to lean against the wall as she tried to catch her breath.\n\nYesterday she would have said that she craved seeing more of Alex's softer side. But in this moment, with her pussy screaming at her for release, she wanted an entirely more primal side of Alex Anders. And she knew that the next 24 hours would be excruciating.\n\nChapter 27\n\nAlex threw down her cards with an exaggerated scowl before she stood up so she could slide her jeans down her legs.\n\n\"This isn't fair,\" she said as she put her pants to the side and sat back down on Quinn's bed.\n\n\"You're the one who said it was a game of luck. I guess you're just unlucky,\" Quinn said, not even trying to contain her glee.\n\n\"Which is why I also said we should play strip chess instead,\" Alex replied sullenly.\n\nShe crossed her arms over her chest in an attempt to cover her bare chest, but now she was pant-less as well. Modesty pretty much went out the window the moment her bra followed her watch, socks, and shirt. Now all she had on was her underwear and Quinn was wearing everything but her socks.\n\n\"We don't have time for you to teach me chess before we meet Courtney and Paige and I told you I was a War champion. You should have listened. Just ask Claire. I rarely lose.\"\n\n\"You must have been intolerable to grow up with,\" Alex said in a deadpan voice.\n\nQuinn flicked a card at Alex, who moved her head to avoid being hit but didn't take her arms off her tits.\n\n\"I was a dream to grow up with,\" Quinn replied. \"Besides, I never made Claire play strip War with me. Just regular War.\"\n\n\"That's a relief. But judgment is still out on whether or not teenage Quinn was a nightmare or not.\"\n\n\"Fine, let's Facetime her now and ask,\" Quinn said, reaching for her phone on the bed next to them.\n\n\"Quinn! I'm naked!\" Alex shouted, finally dropping her arms so she could grab Quinn's phone before the other woman got to it.\n\nQuinn fell to her side on the bed laughing and despite Alex's frantic heartbeat, she also loved hearing such a pure sound come from the brunette. Quinn had such an uninhibited laugh and it reminded Alex of her mom's laugh.\n\n\"I was joking, babe. I wouldn't call her when you're naked. But it did get your hands off your tits for me,\" Quinn said still laughing.\n\n\"Because you haven't seen enough of those lately?\" Alex asked with a quirked eyebrow.\n\n\"'The word 'enough' and your tits should never be in the same sentence,\" Quinn said with a smile.\n\nAlex couldn't contain the smile that appeared on her own face at Quinn's silly behavior. They had been lounging in Quinn's bed for the last two hours, playing games and just talking.\n\nWhen Quinn had come over late on Friday, Alex barely allowed the other woman to get past her entryway before she was tearing her clothes off. She had been turned on since their make-out session in Quinn's rehearsal room the previous day and could think of little else until Quinn came over after her dinner with Tim.\n\nThey didn't get to see each other Saturday since Alex had to be at the theater all day and night so this was their first real chance to just talk outside of texting since their first date.\n\nAs Alex continued to watch Quinn, the brunette lost some of her smile and turned her eyes down to the deck of cards as she started to put them back into one pile. When she was done stacking the cards, she brought her eyes up to see Alex looking at her.\n\n\"What?\" Quinn asked.\n\n\"I'm beginning to know your facial expressions. I can tell something is up.\"\n\n\"I'm going to have to watch that. I can't have you knowing all my secrets.\"\n\n\"Actually, I love that about you. How expressive and open you are.\"\n\nAlex could feel her heart rate increase slightly at her own words. The moment felt suddenly charged in the same way it had in the rehearsal room this week when she had told Quinn that there was nobody else. They hadn't labeled anything and she wasn't even sure where her heart was yet. But she absolutely knew the direction it was heading.\n\nShe knew Quinn wasn't Sloane. But the fact was she had fallen quickly for her too and that relationship ended terribly. And it was detrimental to her entire life. But despite how hard her head was telling her to tread carefully, her heart was plugging its ears and singing.\n\nShe quickly pushed thoughts of Sloane out of her head. She knew she needed to tell Quinn about what happened with her ex-girlfriend, and she was going to on their first date before Quinn stopped her, but the timing hadn't felt right since. Not that she thought Quinn would really judge her, but it didn't change the embarrassment she felt about the whole thing.\n\n\"I think I'm just nervous about tonight. Courtney is your best friend and I want her to like me,\" Quinn said, looking down at her comforter.\n\nAlex scooted up the bed so her back was against the headboard. She raised her arm to indicate to Quinn that she should do the same. Quinn silently obliged and rested her body against Alex's so her head was on the other woman's bare chest.\n\nDespite the fact that Alex was naked still, it didn't feel sexual. The position just felt intimate and right.\n\n\"You don't need to be nervous. Courtney already thinks you're too good for me and she's right,\" Alex joked, hoping to put Quinn at ease.\n\nQuinn lightly swatted Alex's stomach. \"Stop. She does not. Courtney obviously loves you.\"\n\n\"You're the most charming person I've ever met. Don't forget that I haven't spent any time with Paige either. And believe me, you're better at first impressions.\"\n\n\"I don't know,\" Quinn said, nuzzling her face into Alex's neck. \"You did alright with me.\"\n\n\"That's just because you wanted to get me into bed.\"\n\n\"Looks like I was successful,\" Quinn teased.\n\nAlex laughed before her face turned contemplative and she turned Quinn so she could look down at her. \"Courtney has been in your corner since we met. She's gotten me out of my head multiple times about this whole thing.\" She brushed some of Quinn's hair behind her ear as she continued to look down at her. \"You are lovely, Quinn and that's not just my opinion. I've seen the way everyone you meet reacts to you. I'm the one who should be nervous.\"\n\nQuinn looked up at Alex with an unreadable expression and for a moment Alex feared she went overboard with her sentiment. But suddenly Quinn was pushing her body up so she could lift her shirt off her body.\n\n\"I'm really glad you didn't learn sooner in life that showing this side of you would make women take their clothes off,\" Quinn said as she removed her shorts and threw them on the ground, quickly adding her underwear and bra in the process.\n\nIf Alex wasn't so distracted by the suddenly naked body in front of her, she would have been impressed at the speed with which the woman disrobed.\n\n\"I have other ways of getting women's clothes off,\" Alex said in a low voice as she let her eyes roam across Quinn's body.\n\n\"And there she is. It doesn't take much for cocky Alex Anders to re-emerge I see,\" Quinn said as she slid back under Alex's body.\n\n\"Can you blame me? Did you see how fast you just got naked?\" Alex asked in a teasing tone.\n\n\"We don't have much time. I'd shut up and fuck me if I were you.\"\n\nAlex glanced at the clock on the nightstand and noted that they only had an hour before they needed to meet Courtney and Paige at the bar.\n\nSo, she opted to shut up and listen to Quinn's advice.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nThe wine bar Courtney had chosen was small but cute and Alex had told Quinn that it was a favorite of theirs.\n\nQuinn noticed Courtney's bright red hair peeking out from a table in the back of the restaurant immediately. She had never met Paige, but she recognized the blonde from the Death of a Salesman opening night party.\n\nAlex squeezed Quinn's hand as they made their way over to the table and when Quinn looked over at her, the other woman was giving her a warm, reassuring smile.\n\nBoth Paige and Courtney got up from the table as they approached and Courtney immediately pushed Alex aside so she could give Quinn a hug.\n\n\"Move aside, Anders. Models over friends,\" she said in a teasing tone, which elicited a bubbly laugh from her blonde girlfriend.\n\n\"Ex-model,\" Quinn said as she returned Courtney's hug.\n\n\"And I'm your soon to be ex-friend,\" Alex said as she moved around Cortney and Quinn so she could give Paige two quick kisses on each cheek. \"Paige, this is Quinn. I'd wait for Courtney to introduce you, but she has no manners.\"\n\n\"My mom was in jail my whole childhood, what do you want from me?\" Courtney replied and Quinn was surprised how blas\u00e9 she seemed.\n\nAlex had mentioned to her in passing that Courtney had a rough childhood, but Quinn wasn't used to people being so casually honest about their devastating past.\n\n\"I'm sorry we're late,\" Quinn said as they all settled into seats. Alex took the seat next to Quinn and immediately grabbed the brunette's hand so she could put it in her lap.\n\n\"Just apologize to Paige,\" Alex said with a teasing smile directed at her friend. \"I'm sure Courtney would have been even later than we were if she wasn't dating a stage manager.\"\n\n\"Alex is just trying to draw the focus off herself. They're late because they were having sex,\" Courtney said, sending her own challenging smile back to Alex.\n\nQuinn felt her face immediately redden and she had to stop herself from fixing her hair in case that's what gave them away. She had no problem talking about sex, even to people she barely knew, but she wasn't used to being called out quite so fast. Courtney already reminded her of herself.",
        "\"How do you know?\" Paige asked with her own smile, looking at Alex and Quinn as if she were trying to solve a problem.\n\n\"Alex has her sex smirk on her face,\" Courtney said in an exaggerated whisper to her girlfriend.\n\n\"I don't have a sex smirk,\" Alex replied dryly.\n\n\"Oh, so that's what that smug look is. I'm already getting so much information from you, Courtney,\" Quinn said.\n\n\"And I'm already regretting this double date,\" Alex replied.\n\n\"Ignore Courtney,\" Paige said to Alex with a much more sincere smile than the one Courtney was giving her. \"She's just moody because it was a two-show day and she hasn't eaten.\"\n\n\"In fact, I ordered everything on the menu so I hope you're hungry,\" Courtney added.\n\n\"I'm always hungry,\" Quinn replied.\n\n\"A girl after my own heart,\" Courtney said and winked at Quinn.\n\nThe server was by a moment later to take Quinn and Alex's drink orders since Courtney and Paige already had glasses of wine in front of them. Alex didn't usually drink wine, but when they came to this bar, she made an exception. It didn't take long for them all to have drinks and transition into an easy conversation.\n\nQuinn was momentarily distracted by how good the first sip of her wine was and she closed her eyes to savor the flavor as it hit her tongue. When she opened them, Alex's eyes were trained on her mouth and she wasn't even trying to hide her apparent desire. Quinn just gave her a small smile and set down her glass.\n\n\"How did you two meet?\" Quinn asked the women across the table, making herself tear her eyes off of Alex's darkening blue ones.\n\n\"One of my friends was in a show that Paige was stage managing last year and she set us up,\" Courtney replied.\n\n\"I find it easier to date people in the industry who understand the schedule. Sometimes I feel like I never leave the theater,\" Paige added.\n\n\"And have you ever acted yourself?\" Quinn asked Paige.\n\n\"Oh gosh, no. I've always loved the arts. But I'm not meant for the stage. I have other skills.\"\n\n\"Yes, she does,\" Courtney said with a proud smile on her face. \"Everyone in this city is making her offers.\"\n\nPaige leaned over and gave Courtney a quick peck on the cheek before she turned her gaze back to Quinn. \"Not everyone. But I'm lucky that I've had consistent jobs. I've landed a couple long term engagements which have helped over the years.\"\n\n\"You're so modest,\" Courtney said, moving closer so she could drape an arm around Paige's chair.\n\n\"You're so biased,\" Paige replied warmly to her girlfriend.\n\nQuinn could see why Courtney liked Paige so much. She was so much more subtle in the way she behaved than her outgoing girlfriend, but they seemed to balance each other well and their affection for each other was palpable.\n\nPaige was pretty in an understated way. Her tight blonde curls framed a round face with soft brown eyes. Her easy smile and laugh made her feel approachable and warm and even though they just met, Quinn couldn't help but like the woman. Paige just had an innate likability.\n\nQuinn peeked over at Alex who had been pretty quiet so far to see the woman staring intensely at Courtney and Paige. But she didn't seem uncomfortable with the blatant display of affection across from her. She was staring at them with a small smile on her face and Quinn had to assume it was because her friend looked so happy.\n\n\"Does it ever get boring seeing the same show night after night?\" Quinn asked Paige next.\n\n\"Probably not any more than it does for the actors. I stage managed one show for an entire year. That was eight shows a week. For the first month or two it was super repetitive. But then you stop watching it as an audience member and think of it more as cue to cue. It's just a job at that point. How long is the run of your show at Horizon?\"\n\n\"Three weeks,\" Quinn replied.\n\n\"And then back to LA?\" Courtney asked with a slight frown on her face. Quinn noticed that she gave Alex a subtle look after she asked it.\n\n\"I don't know,\" Quinn said nervously.\n\nIt was a natural question to ask considering they were all getting to know each other, but this was a topic she had barely let herself think about, let alone, talked about with Alex. Over drinks like this was not the place she wanted to have that conversation, especially since she didn't know what her plan was once the show ended. All she knew was the thought of leaving Alex made her heart feel like it was being squeezed painfully.\n\nQuinn avoided looking over at Alex, but she thought she could feel the other woman's hand stiffen in hers a bit.\n\n\"I didn't see your show when it was in the festival last year, but Courtney said it was amazing. Have you started rehearsals yet?\" Paige asked and Quinn was grateful for the smooth way the other woman quickly changed the subject.\n\nCourtney, who didn't seem to be able to hide her emotions well, continued to give Alex a serious look until she moved her eyes over to Quinn again with a polite smile on her face. And Quinn was reminded in that moment that Courtney was Alex's best friend and while she was fun and welcoming to Quinn, she was going to be protective of Alex's heart.\n\nOr maybe Quinn couldn't read their secret friend language at all and Alex wasn't as invested in this as Quinn. But deep down, she knew that wasn't true. She knew Alex cared about her and the thought of Quinn leaving probably made Alex feel about as empty as it made Quinn feel.\n\nQuinn lightly squeezed Alex's hand before she answered. \"I started last week. It's been really great. You know, with the festival, I had to do so much of it myself. And it all happened so quickly. But this time I get to really dive deep into each section and tighten it up. And Diego has been really wonderful so far.\"\n\n\"I worked with him a couple of years ago. He has high expectations, but he's able to pull things out of actors that I've never seen other directors do,\" Courtney said.\n\nAs they continued talking about Quinn's show, the appetizers came to the table and they had to move another table closer to them to accommodate all the food Courtney ordered.\n\n\"Jesus, Court. Did you order everything on the menu?\" Alex asked.\n\n\"Not the healthy stuff,\" Courtney replied as she stuffed a french fry in her mouth. \"And how was birthday dinner with pops?\" she asked Alex once she had seemingly taken a bite of every dish.\n\n\"Larry was there so not as bad as usual. We sat on the opposite end of the table and got drunk.\"\n\n\"Thank god your dad hates me so I never have to go to any of those god-awful dinners,\" Courtney said as she reached for a plate of cheese and crackers.\n\n\"Simon hates you?\" Quinn asked, not able to stop herself.\n\nShe had been avoiding the topic with Alex the past couple of days in lieu of getting naked. And she knew the subject of Simon Anders was always a mood killer, but in this instance, curiosity won out.\n\nCourtney let out a quick laugh as she swallowed. \"I wouldn't say he cares enough about me to hate me. But he does call me Chelsea. And sometimes Candice.\"\n\n\"Are you close with your family, Paige?\" Alex asked, clearly trying to move the conversation along.\n\n\"Not really. They're pretty religious and don't really approve of the fact that their daughter is a lesbian,\" Paige replied easily and she didn't seem that upset about it.\n\n\"And where is home?\" Alex asked.\n\n\"Orange County.\"\n\n\"Well, then it seems we all have one thing in common. Cheers to mediocre parenting,\" Quinn said sarcastically as she raised her glass up for a toast.\n\n\"And to you Quinn, for getting Alex out of the theater and her apartment,\" Courtney added, clinking her glass against the others.\n\n\"I go out with you all the time,\" Alex replied in a defensive tone.\n\n\"I don't mind staying in with Alex,\" Quinn said as she moved her chair closer to Alex's.\n\nAlex looked over at her and maintained eye contact. Quinn knew the other woman's facial expressions enough to know that her thoughts were not innocent in that moment.\n\n\"Ah. Young love,\" Courtney said jokingly from across the table.\n\nPaige swatted her arm lightly. \"Leave them alone,\" she chided her girlfriend.\n\n\"That's not in my nature. Especially when it comes to Alex,\" Courtney argued back.\n\n\"It's ok, Paige. I know her enough by now to know she'll do everything she can to make me uncomfortable,\" Alex responded.\n\n\"Which brings me to why we're all here. Embarrassing stories about Alex Anders.\"\n\n\"Court,\" Paige and Alex managed to say at the same time.\n\n\"Oh no, no. Please, do tell me everything,\" Quinn said in a playful tone, rubbing her hands together as she did.\n\nCourtney cleared her throat in an exaggerated fashion and put her elbows on the table. \"I want to tell you about Alex's most devastating relationship during college. Her name was tequila.\"\n\nQuinn smiled when she saw Alex throw her head down on her hands and groan, but then leaned in so she could give Courtney her full attention.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"After knocking on every cute girl's dorm room, I found Alex asleep in one of the showers, clutching a broken off toilet seat in her hand.\"\n\nAlex scowled as Courtney told her fifth story, but it was more for show than anything else. She loved watching Quinn laughing and clutching her stomach. She knew that Quinn and Courtney would be inseparable the moment they spent more time with each other, but it was also a relief to see if happen in person. Courtney and Sloane had never gotten along and Alex knew how hard it was to have a relationship with someone your best friend didn't like.\n\nBoth Quinn and Courtney were so free with how they expressed themselves. Alex sensed Paige was bit more like her. She didn't seem to mind the way her girlfriend dominated the conversation at times and appeared content to just sit back and listen to the red head's stories with a smile on her face.\n\n\"Why did you have a toilet seat with you?\" Quinn asked Alex.\n\n\"To this day, nobody knows,\" Courtney answered for Alex.\n\n\"It's true. I have no memory of even ending up in the shower, let alone why I had a toilet seat with me,\" Alex finally responded.\n\n\"The NYU dorm detective, aka me, thinks that maybe she was going to be sick and somehow tore it off. But the evidence is circumstantial at best,\" Courtney added. \"That toilet seat ended up on our dorm wall for the rest of the year. As remembrance for Alex's last night ever drinking tequila.\"\n\n\"You've come a long way from bathroom floors to wooing women in closed down aquariums,\" Quinn said.\n\n\"I heard about the aquarium. Very nice. Take notes honey,\" Paige said, smiling sweetly at Courtney.\n\n\"Did you tell Quinn that you called me panicking before the date about what to wear?\" Courtney asked Alex.\n\nAlex narrowed her eyes at her friend for a moment, but she wasn't surprised Courtney outed her. Courtney had no filter and Alex knew she'd drop at least a few comments that were meant to embarrass her.\n\n\"No, but I think it's cute,\" Quinn said.\n\n\"As do I,\" Paige added, giving her girlfriend another smile before looking back to Alex. \"It's very romantic.\"\n\n\"Alex can be very sweet when nobody is looking,\" Quinn said.\n\n\"Ok, ok. Now we're going too far. Subject change,\" Alex said and she could feel her own cheeks beginning to warm.\n\n\"I've seen Alex be romantic. She just likes to pretend she's a robot,\" Courtney said.\n\n\"How would you even remember?\" Alex asked her friend. \"We dated in college.\"\n\n\"I wasn't talking about with me,\" Courtney replied, arching her eyebrow at Alex.\n\nAlex could feel her face flush the moment the words left Courtney's mouth. This was absolutely not the time to bring up Sloane. She could feel Quinn's eyes on her so she busied herself by looking down at her watch.\n\n\"It's late. We should probably go soon,\" she said.\n\nWhen she finally looked over at Quinn, the brunette was giving her a curious look, but didn't say anything about the abrupt end to their night.\n\n\"Let me just use the restroom,\" Quinn said to Alex before moving off her chair and to the bathroom at the other end of the bar.\n\n\"Really?\" Courtney asked.\n\n\"What?\" Alex replied, trying her best to act casual.\n\n\"You're leaving because I subtly made a reference to your ex-girlfriend.\"\n\nAlex wanted to respond with a petulant \"am not,\" but knew Courtney wouldn't accept that. Luckily, Paige came to her rescue before she had to respond.\n\n\"Babe, stop. Maybe they haven't talked about that yet.\"\n\n\"If you don't force Alex to talk about things, she'll never talk about them,\" Courtney replied, leveling her gaze at Alex. \"Does she know anything about Sloane?\"\n\n\"Not really,\" Alex replied.\n\n\"Tell her. It may help her understand your relationship with your dad more.\"\n\n\"I'm planning on it, obviously. The timing just hasn't been right. And it's not like I haven't opened up to her about some things. You know where I took her on our first date.\"\n\n\"I know. And I also know that was a big step for you. But she deserves to know all the baggage. Not just the carry-on.\"\n\n\"Did you just make a lame luggage metaphor?\" Alex asked.\n\n\"It was awesome and you know it.\"\n\n\"Not everyone wears their heart on their sleeve like this one,\" Paige said, nodding her head towards Courtney. \"Go at your own pace and ignore my intrusive girlfriend.\"\n\n\"I already like you more than Courtney,\" Alex said with a smile.\n\n\"That's fine. I already like your girlfriend more than you,\" Courtney responded quickly.\n\n\"She's not my girlfriend.\"\n\n\"I give it a week.\"\n\n\"I'd stop now because she's on her way back to the table,\" Paige said gently to the bickering friends.\n\n\"Did I miss anything?\" Quinn asked as she came back to the table.\n\n\"Just these two acting like children,\" Paige said.\n\n\"Nothing new then,\" Quinn said as she sat down and leaned in to give Alex a quick kiss on her cheek, causing the blonde to noticeably blush. \"Do you two ever get along?\"\n\n\"This is how we get along,\" Alex said as Courtney laughed. \"You should have seen us when we co-directed shows at NYU.\"\n\n\"I want to know more about your theater group at NYU. Specifically, the all-female version of Oklahoma. Alex won't sing for me,\" Quinn said with a pout.\n\n\"I have not heard about this,\" Paige added.\n\n\"Oh really?\" Alex asked feeling a sudden rush at being able to expose Courtney on something in the same way her friend had been doing to her all night. \"Didn't you know Courtney sings?\"\n\n\"In fact, she has failed to mention that,\" Paige said, giving her girlfriend a pointed look.\n\n\"That's because I don't sing well. And that show was the worst thing to ever cross the New York stage,\" Courtney said in a defensive tone.\n\n\"Courtney has a great voice and she made the perfect Laurey to my Curly. You should make her sing Surrey with a Fringe on Top to you sometime,\" Alex replied with a playful smile directed at Courtney.\n\n\"I hate you,\" Courtney deadpanned back.\n\n\"No, you don't,\" Alex replied.\n\n\"Why was the show so bad?\" Quinn asked. \"Because what you did with Streetcar was amazing.\"\n\nJust then the server came over with the check and a handful of boxes for Courtney. Alex handed her card over to the server before anyone even had the chance to pull out their wallets.\n\n\"Don't bother,\" Courtney said to Paige when the blonde reached for her purse. \"Alex never lets anyone pay. It's not even worth the fight.\"\n\n\"She let me buy her pizza once,\" Quinn pointed out.\n\n\"See? You think you know me so well,\" Alex said to her friend.\n\n\"Like the back of my hand, babe,\" Courtney replied with a wink.\n\n\"Thank you, Alex. That was very sweet of you\", Paige said, but Alex just gave a quick shrug in response.\n\nQuinn had noticed all night that Alex seemed comfortable, but not overly talkative. It was a striking difference to the Alex she had gotten to know in their private moments, but maybe this was just what Alex was like in groups. She seemed more content to sit back and let the others drive the conversation. There was something quiet and intense about Alex and it only made Quinn more intrigued by her.\n\n\"Anyway, to answer your question, Oklahoma was probably just more than our little theater group could take on. Doing a musical is a much bigger beast than a small, intimate play. And Alex had trouble saying no to some of the people of lesser talent who wanted to be in it. It was a mess.\"\n\n\"I bet you two looked cute in cowboy hats,\" Paige added.\n\n\"Only Alex got to wear a cowboy hat. I had to wear a pinafore dress,\" Courtney said. \"But the ladies loved Alex's cowboy hat. Or maybe it was the vest. Could have been the boots.\"\n\nAlex rolled her eyes. \"I feel another story coming, which means it's our cue to go. \"Besides, while you two may be off tomorrow, we have to work,\" Alex said, pointing at herself and Quinn.\n\n\"It's fine. Don't forget, I gave Quinn my number the first day I met her. So, I can just text her the stories we didn't get to.\"\n\n\"Don't worry, Alex. I'll control her,\" Paige said, putting her hand on her girlfriend's arm.\n\n\"I've known Courtney long enough to know that nobody can control her,\" Alex replied. \"But it's fine. I have plenty of my own stories for the next time you need some dirt on her. Like the Beanie Baby collection she brought to college. You can check the back of her closet if you don't believe me.\"\n\n\"That is great to know! Thank you, Alex,\" Paige laughed out as she looked over at a scowling Courtney.\n\n\"Weren't you leaving?\" Courtney asked Alex.\n\n\"Yep,\" Alex replied as she stood up.\n\n\"Text me tomorrow after the interview,\" Courtney said, looking at Alex as she gave Quinn a hug.\n\nAlex nodded to her and then moved over to Paige's side of the table to kiss her cheek. \"Paige, it was lovely spending some time with you. I'm sure it will happen again soon,\" Alex said.\n\n\"Absolutely. Quinn, good luck with your rehearsals. I can't wait to see the show,\" Paige said as she stood up and gave Quinn a hug.\n\n\"Thank you, Paige. I'll see you both soon,\" Quinn said, taking Alex's outstretched hand and allowing her to direct them both towards the door.\n\n\"Where to, cowboy?\" Quinn asked once they were out on the street again.\n\nAlex was suddenly in her space and putting her hands up Quinn's back. The blonde had been subtly affectionate in the bar, but now that they were alone, it was as if she was desperate to touch Quinn more intimately.\n\n\"Thank you for coming tonight,\" Alex said softly.\n\n\"Of course. I had fun. But you better get me out of this cold soon or you'll see my whiney side.\"\n\nAlex gave her a small smile. \"I'm sure at some point I'll see your whiney side.\"\n\nQuinn could feel her body react to Alex's words before her mind even processed them. Hearing Alex talk about their future, so certainly as if they had one, made her heart clench.\n\n\"You will. And It's not pretty,\" she replied.\n\n\"You're pretty.\"\n\n\"And you're smooth. Is someone hoping to get some tonight?\" Quinn asked with a suggestive eyebrow raised.\n\n\"I don't think I need to hope. In fact, I got us something for tonight. Would you like to come back to my place?\" Alex asked in a low, seductive voice.\n\nAlex's sweet words from before may have made Quinn's heart clench, but the smoldering look the blonde was giving her now made her pussy clench in an entirely different way.\n\n\"Take me home,\" Quinn replied in a whisper.\n\nAlex didn't respond but took Quinn's hand back in her own and led them down the street and towards her building.\n\nChapter 28\n\nWith November approaching, the weather in New York was getting colder and Quinn realized too late that she didn't wear a thick enough coat to the bar. Alex seemed to notice as they made their way along Bryant Park and pulled off her jacket so she could hand it to the brunette.\n\n\"Here,\" she said gently, holding it out for Quinn's arms when the other woman didn't immediately take it.",
        "\"I have no idea how you're still single,\" Quinn said as she slid her arms into Alex's warm jacket.\n\nQuinn pulled the sides of the coat into her face so she could inhale the now familiar scent before putting her arm back into Alex's so they could keep walking.\n\n\"By choice,\" Alex replied quietly.\n\nThere were things Quinn wanted to talk to Alex about\u2014 things Alex was probably not thrilled that Courtney even brought up at the bar. But she couldn't get her mind out of the sex fogged place it went the moment Alex mentioned that she got them something. She had a feeling she knew what it was and talking about past relationships would have to wait.\n\nShe had also noticed a sense of calmness that seemed to wash over Alex as they left the bar. Even with someone she knew as well as Courtney, there seemed to be a wall up any time Alex was in public. She had noticed that the first time she ever had a drink with the woman at The Library.\n\nAs soon as they left the bar, Alex's face went from reserved and polite to open and soft again. Most likely it was because she doesn't know Paige that well yet, but Quinn wanted to believe Alex also just felt something different when she was with her. She knew she did when she was around the blonde.\n\n\"What did Courtney mean when she said you had trouble saying no to people who auditioned for Oklahoma?\" Quinn finally asked, feeling the need to break the silence.\n\n\"Oh, well I guess our theater group got some buzz after the first two shows. So, all the people who kept auditioning for the main stage productions at NYU and never got cast, started to audition for our stuff.\"\n\n\"And you cast them all?\"\n\nAlex turned them down a street so the park was on their left and Quinn could see Alex's huge apartment building peeking out a few blocks ahead.\n\n\"The whole point in what we created was to give people a chance. I was told my whole life by my father that I wasn't talented enough. I wasn't going to do that to someone else,\" Alex responded in a matter of fact tone.\n\nQuinn stopped walking as they reached a traffic light. Normally she would just cross in the traditional New York manner of ignoring all pedestrian signs, but right now she wanted to look at Alex's face so she stopped and turned to the other woman.\n\n\"I don't understand you. You have this huge heart. I don't know that I've ever met anyone so considerate. And yet you seem to want to hide it so badly. But I see you, Alexandra Anders. Just so you know.\"\n\nAlex looked taken back for a moment and maybe she really didn't understand how amazing what she just told Quinn was. But allowing some talentless students to join her production just to spare their feelings, and most likely future dreams, was just another example of how Alex was an incredibly caring and thoughtful person.\n\n\"I want you to see me,\" Alex replied quietly, not moving when the traffic light changed for them to cross. \"I'm just not used to it.\"\n\nQuinn leaned in and gave Alex a chaste kiss on the lips before moving them along. She wanted to prolong the kiss but knew if she did anything deeper than a peck, she wouldn't be moving off that street corner any time soon.\n\n\"Do you like Paige for Courtney?\" Quinn asked as they got closer to Alex's building.\n\n\"I do. I think she's great for Courtney. And they seem to really like each other.\"\n\n\"Like each other? I'm pretty sure they're in love.\"\n\nQuinn could feel Alex's eyes on her before the other woman looked ahead again.\n\n\"How do you know?\" she asked.\n\n\"It's obvious. Just the way they looked at each other.\"\n\nAlex was quiet again as they entered her building and made their way to the entirely too opulent elevators. But the closer they got to Alex's actual apartment, the more Quinn could start to feel her body vibrate with anticipation and she didn't mind the silence.\n\n\"Would you like a drink?\" Alex asked as they entered the apartment.\n\nShe helped Quinn out of her coat and opened a closet door next to them so she could place it on a hanger.\n\n\"I'd like you. Just you,\" Quinn replied.\n\nAlex came back around the closet so she was in front of Quinn. She had the same dark look she was wearing on her face when they left the bar and it made Quinn's whole body feel instantly hot, as if they had just come in from a summer's day and not the cold one it actually was.\n\n\"Just me? Are you sure?\" Alex asked with a quirked eyebrow. \"Because I have something that I think you might enjoy tonight.\"\n\nQuinn moved in towards Alex so their bodies were almost touching. She brought one hand to the front of Alex's pants so she could lightly cup the blonde's center.\n\n\"Doesn't look like you do yet,\" she said teasingly.\n\nShe could already feel heat emanating from Alex's crotch and the blonde sucked in a quick breath the moment Quinn's hand made contact. But the serious, dark look she was directing at the brunette didn't change.\n\n\"Bedroom. Now.\"\n\nAlex turned and walked down the hallway leading to the bedroom, not even waiting for Quinn to reply or follow. In a way, it reminded Quinn of the first time she had ever met the blonde and Alex had so casually commanded Quinn to follow her across the theater.\n\nBut this time Quinn knew exactly what the end of their tour held and followed Alex down the hall without question. When she entered the bedroom, she could see Alex turn on some low lights on the nightstand before she grabbed a bag from her bed and moved towards the bathroom on the other side of the room.\n\n\"I'll be back, sweetheart. Make yourself comfortable.\"\n\nQuinn was way too aware of what was to come to relax and as Alex put it, make herself comfortable. So, she opted to take her time looking around the room while she waited for Alex to return and make good on her promise.\n\nSure, it had only been three hours since their last fuck, but Quinn couldn't imagine ever being tired of touching Alex Anders.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nWhen Alex stepped out of the bathroom, Quinn was on the other side of the room, looking at the one photo on her dresser.\n\n\"Is this your mom?\" she asked when she heard Alex enter the room.\n\n\"Yes,\" Alex replied quietly.\n\nQuinn turned when she heard Alex's voice and her eyes immediately zeroed in on Alex's bare shoulders and exposed neck. Alex had changed in the bathroom so she was wearing a simple white tank top and a pair of loose, blue jeans that rode her hips. She had put her hair up into a messy bun since she knew she wouldn't want it in her way tonight. Alex had noticed that Quinn seemed to enjoy when she dressed slightly more masculine and tonight proved that once again to be true.\n\nAlex felt a rush of arousal when Quinn's eyes finally moved their way down her body, focusing on Alex's braless tits, before fixing on the pants that were already unbuttoned.\n\nEver since Quinn had mentioned wanting to see Alex wear a strap-on, she had been able to focus on little else. Even during their double date tonight, her mind kept thinking back on their quickie at Quinn's apartment and the way the brunette kept grinding into her crotch. She didn't have what she needed then, nor did they have the time, but now she did and they had no time limit.\n\nEventually she would have asked Quinn if she would let her fuck her with a strap-on, but she was always hesitant to bring it up too early with women. Quinn's obvious desire for it made Alex so hot that she had to remind herself that she wasn't someone who lost control and to take things slow.\n\n\"Take off your clothes,\" she said quietly to Quinn who was still looking at her opened pants.\n\n\"Is this payback for our strip War game?\" Quinn asked but her tone didn't really hold any playfulness in it. She sounded as turned on as Alex already felt.\n\n\"I'm waiting.\"\n\nAlex knew Quinn liked when she took control and by the look in the woman's eyes, and her complying hands, she could tell that tonight was no exception to that.\n\nAfter removing her shoes, Quinn started to unbutton her pants when Alex stopped her.\n\n\"No. Start with your shirt,\" she commanded into the quiet room.\n\nQuinn's hands froze on her pant buttons for a moment before she did as Alex asked and brought them up to quickly remove her silk blouse. When the shirt was on the floor, she looked up into Alex's face, but didn't move to take anything else off, waiting for Alex's next command.\n\nAlex was, not for the first time, in awe of how well Quinn seemed to be able to read what she wanted. Ever since their first time together, their bodies and minds seemed to work so seamlessly that it was as if they were made to come together like this.\n\n\"Bra,\" Alex said.\n\nQuinn didn't move her eyes off Alex as her hands went behind her back to remove her bra. The room was so quiet that the sound of it hitting the floor was exaggerated and just added to the sexiness of the situation.\n\n\"Pants now, sweetheart,\" Alex said.\n\nQuinn went back to her half-buttoned pants and slid them slowly down her legs, continuing to look into Alex's eyes. Alex always loved how dark Quinn's eyes were, but during sex, they became impossibly black and it was one of the signs that she was ready for whatever Alex had planned.\n\nWhen her pants were off, Quinn moved her hands to the waistband of her panties but stopped when she heard Alex's voice again.\n\n\"Leave them on. But you can take your socks off. I don't think you'll need those,\" Alex said and she couldn't hide the hint of amusement she felt as she looked at Quinn standing there naked in a pair of black socks.\n\n\"Just following your orders,\" Quinn sassed back, making Alex smile.\n\n\"Next time I'll be more explicit,\" Alex replied.\n\nAll humor left Alex's face as Quinn straightened up after removing her socks and stood in front of the blonde almost naked.\n\n\"I'll never get over how gorgeous you are,\" Alex said as she let her eyes roam over every inch of Quinn's perfect body.\n\n\"I don't want you to,\" Quinn replied quietly.\n\nWhen Alex finally brought her eyes back up to Quinn's, her heart felt like it skipped a beat at the look the other woman was giving her. For a moment, they both just stared at each other and despite the fact that her body was still vibrating with arousal, she also felt a surge of something else as she looked at the brunette\u2014 something entirely more intimate.\n\nBut declaring the depth of what she was feeling in that moment didn't feel right with the other woman naked and exposed. So, Alex took a deep breath and let it out slowly, hoping Quinn couldn't see how affected she was from just one look.\n\n\"Now come undress me,\" she said instead.\n\nQuinn's expression turned from affectionate to hungry and she didn't waste any time taking the few short steps over to Alex so she could comply with the most recent command. She placed her hands on the bottom of Alex's tank top, but before she brought it up over the blonde's head, she looked up into Alex's eyes. Alex gave her a slow nod and lifted her hands to make it easier for Quinn to remove her top.\n\nAs Quinn's eyes took in Alex's bare chest, she licked her lips and Alex could feel a mirrored wetness reach her own pussy at the sight.\n\n\"May I please?\" Quinn asked as she continued to stare at Alex's hard nipples.\n\nAlex didn't want to betray just how turned on she was so she simply nodded. Her plan was to get Quinn in bed so she could do the touching, but Quinn's mouth looked too inviting to deny the woman what she wanted.\n\nQuinn brought both of her hands up to Alex's tits so she could cup each before moving her mouth to the left one. Alex's eyes slammed shut at the feel of Quinn's hot mouth suddenly swirling around her nipple and she laced her fingers into the brunette's hair so she could anchor herself as she stood there.\n\n\"Fuck, Quinn. That feels good,\" she said in a gasp as Quinn's mouth slid over her chest so she could suck on Alex's other nipple.\n\nQuinn let out her own moan as she sucked and hearing it only increased the wetness Alex could feel dripping out of her pussy. But once she started to feel her legs shake, she stopped Quinn by gently cupping her face and bringing it up to her own for a wet and frenzied kiss.\n\nQuinn moved her hands so she was gripping Alex's bare back as the kiss deepened even more. Their kissing wasn't delicate\u2014 in fact it was a bit sloppy as they both moved their tongues around each other's mouth and lips. But it was maybe one of the hottest kisses Alex had ever experienced. There were no boundaries or rules to this kiss as they both licked and sucked what they could.\n\nWhen Alex took Quinn's tongue fully into her mouth and sucked on it, before flicking the end of it with her own tongue as if it were a clit, she could hear the brunette let out a long moan and begin to slide down her body. Alex didn't want the kiss to end but she also didn't want Quinn to fall to the floor so she finally and reluctantly moved her mouth away from the other woman's.\n\nTheir heavy breathing filled the room and Alex assumed she had the same red across her cheeks that she could see on Quinn's. Without saying anything she reached behind her body so she could take the hands gripping her back into her own and move them to the waistband of her pants.\n\n\"Take them off, sweetheart,\" she said in a thick voice.\n\nAlex had already taken care of most of the buttons on the jeans and there was no zipper so Quinn only had to undo the last two buttons, which she did at a painfully slow pace. Alex helped her move the jeans down her legs and she felt a wave of satisfaction at the sound she heard come out of Quinn's mouth upon seeing what Alex was wearing.\n\nQuinn lightly grazed her fingers over the soft leather harness wrapped around Alex's body before she took a small step backwards so she could fully look at the blonde.\n\nAlex had always felt sexy wearing a strap-on, but no woman had ever looked at her the way Quinn was and it made her entire body heat up with need.\n\n\"Fuck, babe,\" Quinn whispered as she finally brought her eyes back up to Alex's. \"You look so hot. God, I want you so much.\"\n\nAlex stepped back into Quinn's space and slowly began moving her towards the bed. When Quinn's legs hit the mattress, she gently pushed her down so the brunette was sitting on the mattress.\n\n\"It doesn't even have my cock in it yet. But I'm glad you're happy with the harness choice. It's new,\" she said, looking down at Quinn.\n\n\"For me?\" Quinn asked with an expression that Alex couldn't help but think was adorable.\n\n\"For you,\" Alex replied. \"Lay down on the pillows.\"\n\nQuinn slid her body up the mattress so she was laying against Alex's pillows. She put her arms above her head and quietly watched as Alex walked over to the nightstand next to the bed and pulled out a dildo and a bottle of lube.\n\n\"The dildo is also new,\" she said as she moved onto the bed so she was lying next to Quinn. \"And also, for you.\"\n\nQuinn didn't seem to have much patience for the conversation though and quickly moved so her body was on top of Alex's and their mouths found each other in another rushed and wet kiss. Alex allowed Quinn to grind herself down on the harness for only a moment before she flipped them over so she was above the brunette.\n\nAlex brought her mouth down on the tits that had been teasing her since Quinn took her clothes off. She circled her tongue around each nipple before sucking each into her mouth. Quinn was squirming beneath her and as Alex pushed her body down onto the one beneath her, she could hear the other woman let out a low groan.\n\n\"Please, babe. Please, touch me.\"\n\n\"I am touching you, sweetheart,\" Alex said back in an innocent tone as she moved both her hands up to pinch Quinn's nipples.\n\nQuinn let out a quick moan at the sensation and closed her eyes. Alex did it again, this time pulling harder than before.\n\n\"Mmm, fuck. Touch my pussy. Please. Please,\" Quinn panted out. \"I may come from just your mouth on my tits.\"\n\n\"Then I don't need to touch your pussy,\" Alex teased again as she brought her mouth back down onto Quinn's right tit and played with the left nipple with her hand.\n\n\"Alex. Please, fuck me. Please.\"\n\nQuinn was now begging and writhing beneath Alex's body and the blonde knew she couldn't drag this out any longer. She let go of Quinn's nipple with a pop of her mouth and slid her body down the length of the bed so she was between Quinn's legs.\n\nShe could already smell how aroused the other woman was and that only increased as she slowly brought Quinn's soaked underwear down her legs.\n\n\"I love seeing how wet you get for me,\" Alex said before placing a soft kiss on the inside of Quinn's thigh.\n\nThe woman above her could only seem to moan in response and when Alex looked up, she could see that Quinn had her eyes closed tightly shut and her hands were grabbing at her own hair. Alex couldn't help but smile at the sight of how much she affected Quinn.\n\nShe decided not to tease Quinn any longer and pushed her legs open wider so she could get in between them. While she was craving the taste of Quinn's pussy, she also wanted to make sure the woman was wet enough for her. Her mind was hyper focused on fucking Quinn until she was screaming Alex's name. Or just screaming in general.\n\nBut as Alex's tongue hit Quinn's wet folds, the sweet, musky taste began to override any other thought and she became lost in the scent and taste of the woman. She licked down the length of Quinn's pussy, savoring the flavor as she went.\n\n\"Mmm. You taste amazing, sweetheart,\" Alex breathed out as she came up for air.\n\nShe slid her tongue up Quinn's wet folds again and focused tight circles on the woman's clit. As it began to harden under her tongue, she could hear Quinn's moans getting louder and knew she would come soon if she didn't stop. And this wasn't how she wanted Quinn to come.\n\nWhen she pulled away from Quinn's clit and back up the bed, she could hear the woman let out a soft sound of protest until she could see what Alex was grabbing. When Alex came back over to Quinn, the brunette's eyes were transfixed on the deep purple dildo in her hand.\n\n\"Let me,\" Quinn said as she took the dildo out of Alex's hands.\n\nAlex got up on her knees and Quinn sat up so she could slide the cock into the harness Alex was wearing. Quinn looked so sexy doing it that Alex couldn't help but bring her hand up to stroke Quinn's hair before gently lifting the other woman's face to her own. She leaned down and placed one soft kiss on Quinn's lips.\n\n\"There's lube on the nightstand,\" she whispered against the other woman's lips.\n\n\"I don't need the lube. Just fuck me, babe.\"\n\nAlex went in for another kiss, but this time it wasn't quick or sweet as she let her tongue slide into Quinn's and moved her hands from cupping her face to gripping her hair.\n\nWith her hands still in Quinn's hair, she guided the other woman so she was on her back again. She then moved off of Quinn's body so she could get back between her legs. Quinn pulled her legs up and grabbed her ankles with her hands so that her pussy was open and waiting for Alex.\n\nAlex knew she could have stayed staring at Quinn in that position all night but she made herself look away from the waiting pussy so she could lean one hand above Quinn and use her other to guide her shaft to the woman's wet opening.\n\nQuinn let out a high-pitched moan the moment she felt Alex enter her, but Alex didn't move in more than an inch and just looked down at Quinn until the woman opened her own eyes and was staring back. Her mouth was hanging slightly open as if in a silent moan.\n\n\"Say it again,\" Alex said to the woman beneath her.\n\n\"Fuck me. Please.\"\n\nThe verbal consent Quinn was always more than willing to give her was almost as hot as the act itself and Alex shifted her hips so that she could bring her full dildo inside of the other woman in one swift motion. She now had both hands above Quinn's head and began a slow rhythm as she let Quinn get used to the sensation of her filling her pussy.",
        "Quinn didn't seem to need time to get used to the feeling though. She grabbed onto Alex's back with both her hands and pushed her body up as she let out a low groan.\n\n\"More, babe. Don't go slow,\" Quinn panted out, scraping her short fingernails down Alex's back.\n\nWithout removing her cock, Alex picked herself off of Quinn so her arms were extended on the bed and she could push herself up on her knees more. She drove herself in deeper this time before setting a faster pace. Alex kept her body steady over Quinn's and could feel the other woman's nipples grazing her own as her hips moved in a fast rhythm, pumping in and out of Quinn's pussy.\n\nThe faster she pushed into Quinn, the harder the other woman grabbed onto her back, urging her on.\n\n\"Do you like me fucking you like this? Tell me what you want,\" Alex said against Quinn's ear and then lapped against it with her tongue.\n\n\"Mmm, yes. Babe. Harder, please. Just fuck me harder,\" Quinn screamed out.\n\nAlex lifted her hands off the bed and leaned back so she could grab Quinn's hips and pull her into her with each thrust. She switched from quick pumps of her hips, to long, deep thrusts that brought her pelvis all the way against Quinn's.\n\n\"Yes, yes, yes. Just like that. Fuck, I'm so close. Don't stop,\" Quinn screamed out again.\n\nEach thrust into Quinn's pussy, caused Alex's own pussy to clench, bringing her closer to her own orgasm. But she didn't want to come like that. Right now, she wanted to be solely focused on the pleasure of the woman beneath her.\n\n\"You're so fucking sexy. Come for me, sweetheart,\" Alex replied in her own voice that sounded strangled with arousal.\n\nHer words seemed to send Quinn over the edge because a second later the brunette was shoving her hands into her hair and screaming.\n\n\"Yes, I'm coming. I'm coming. Yes, Alex. Fuck, Alex!\"\n\nAlex pressed into Quinn a few more times so she could squeeze out the last drop of Quinn's orgasm. As Quinn's screams died down, Alex slowed the pace of her thrusts, but didn't remove herself completely.\n\n\"Mmm, babe. God, that was amazing\" Quinn sighed out, finally allowing her body to relax against the pillows.\n\nAlex had to move her own body with so she didn't exit Quinn's pussy too abruptly. As she leaned over the woman, she bent her head down to place a soft kiss on the brunette's lips and guided herself out with her hand.\n\nQuinn gasped slightly as Alex came fully out and Alex could tell by the look on her face that the brunette wasn't done for the night. Once Alex had pulled out of Quinn, she got up on her knees and looked down at the woman laying beneath her. Her own chest was rising and falling as she attempted to catch her breath.\n\nWithout saying anything, Alex pulled the part of the harness touching her pussy aside and gave Quinn a pointed look. The brunette seemed to understand what Alex needed and moved over so they were both kneeling in front of each other.\n\nWith her left hand, Quinn cupped the back of Alex's head so Alex was looking right into two big, dark eyes, the depth of which seemed to go on forever. With her other hand, Quinn slid a finger down Alex's naked body until she was gliding it through the woman's folds, under the harness.\n\nAlex closed her eyes at the feel of Quinn's hand touching her swollen pussy and she let out a long groan that she had been holding in since she started fucking Quinn.\n\nAfter the pressure she felt against her center as she thrust into Quinn before, Alex knew she wouldn't last long, even with Quinn teasing her like she was with small, light strokes down her folds.\n\n\"Quinn, put your fingers inside me,\" Alex commanded and her voice was steadier than she was feeling on her knees, which were beginning to shake slightly.\n\nQuinn didn't reply but did comply to Alex's demand and slid two fingers easily inside her. Her knuckles were hitting the harness as she brought them out and then pumped them back in, but she didn't seem to mind.\n\nAlex could hear her own breathing becoming ragged as Quinn increased the pressure of her thrusts. But soon, Alex could feel those thrusts start to slow and she could feel her own pussy clench in protest.\n\n\"Faster, sweetheart,\" Alex panted out.\n\nBut this time, Quinn didn't comply with Alex's command and stopped the movement of her hand completely.\n\nQuinn gave Alex a small, almost innocent smile before she finally let go of the blonde's neck. Slowly, she bent down so that her mouth was close to Alex's dildo. Alex had a feeling she knew what the brunette was doing, but part of her almost didn't believe Quinn would be so bold.\n\nQuinn's fingers began pumping back into Alex's pussy at a slow, deliberate pace as she took her other hand and set it at the base of Alex's cock.\n\n\"I want to taste myself on you,\" she whispered right before she set her mouth on the head of the dildo and began licking away her own juices.\n\n\"Jesus, Quinn,\" Alex breathed out, not able to say anything more than that.\n\nShe had never seen anything more erotically sexy that watching Quinn bring her tongue up the length of her shaft as her fingers continued to pump in an out of Alex's pussy, getting slightly faster with each stroke.\n\nAlex wanted nothing more than to be able to prolong this moment and sear this visual into her memory, but her body had other plans and as she began to feel her legs shake uncontrollably, she knew she was close to coming.\n\n\"I'm going to come, sweetheart. Faster,\" she said, putting her hand up on Quinn's head. She didn't push down, but simply set it there as the woman beneath her continued cleaning her off and fucking her pussy.\n\nAlex couldn't feel Quinn's mouth directly, but when the brunette let out a low moan upon hearing Alex's words, the sound, mixed with the vibration sent the blonde over the edge.\n\n\"I'm coming. Fuck. Yes, like that,\" Alex heard herself scream out.\n\nAlex wasn't quiet in bed by any means, in fact, she loved to talk throughout sex. But usually the women she was with were always louder when they came. But apparently, Quinn had a secret code to make Alex lose control of her vocal cords because she was moaning and letting out a series of expletives as Quinn lifted her head off Alex's dildo but continued to pump her fingers in and out of her pussy.\n\nWhen Alex could feel that her pussy was too sensitive for more, she gently put her hand on Quinn's wrist to indicate that she was done. Quinn removed her fingers and came back up on her knees to look at Alex's face. But the bold expression she had on her face from a few minutes before was replaced by a mix of arousal and uncertainty.\n\n\"Was that ok?\" she whispered.\n\n\"That was maybe one of the best moments of my life,\" Alex replied, but there was no humor in her voice.\n\nWhen Quinn still looked a bit uncertain, Alex cupped her chin and waited until the brunette was looking into her eyes again.\n\n\"That was amazing. And so sexy. And somehow, it's like you know everything I want and need. Things I've never even told other women I enjoy. You're just...everything, Quinn.\"\n\nQuinn's eyes softened with each word that came out of Alex's mouth and when the blonde finished talking, she could see clear emotion in the other woman's shining brown eyes.\n\n\"I want more,\" Quinn replied.\n\n\"You're not too tired my little sleepy head?\" Alex asked, but she could clearly see there was no trace of exhaustion on Quinn's face.\n\nQuinn didn't answer, opting to grab Alex's hand and guide it down to her pussy. Alex fingers were instantly met with a startling wetness considering the woman already had a pretty intense orgasm.\n\nAlex let her fingers play in Quinn's folds for a moment and even came up to circle her clit lightly with the juices she gathered. When she could tell that Quinn was indeed ready for more, she moved her hand away, causing a small sound of frustration to come out of the brunette.\n\n\"Turn around, sweetheart. On your hands and knees.\"\n\nAlex had to let out a small laugh when she saw the speed at which Quinn moved to the head of the bed and got on her hands and knees. Alex then reached over the bed so she could quickly grab the bottle of lube from her nightstand. Even if Quinn was wet, she wanted this to be as pleasurable as she could make it and she wasn't planning on using her mouth this time. Quinn obviously wanted something different in that moment.\n\nShe put the bottle back once she had a dime's worth of lube on her fingers and she wasted no time spreading it across her dildo. Quinn was watching over her shoulder and Alex could see the rise and fall of her back, indicating that her breaths were coming in fast and ragged.\n\nAlex brought her body behind Quinn's and with one hand, guided her shaft so that it was up against the other woman's opening. She paused before she pushed in and brought her other hand up so she could rest it on Quinn's back.\n\n\"Please,\" Quinn begged, not even trying to hide the desperation in her voice.\n\n\"Ok, sweetheart,\" Alex replied in a low voice, pushing herself so she was all the way inside of Quinn.\n\nThis time she didn't start slow and pushed down on Quinn's back so the brunette was forced to fall onto her elbows. Quinn let out a low groan as Alex pulled herself all the way out of the brunette only to push in harder.\n\nUnlike the last time she fucked Quinn like this, Alex allowed her body to feel all the sensations that thrusting into the brunette allowed. She grabbed both of Quinn's hips and pushed her body in so she was flush against the other woman and her dildo was as far as it would go. She repeated the motion again and again, her own pussy clenching each time she came back in towards Quinn's body.\n\nShe continued at an unrelenting pace and as Quinn's cries grew louder, she could feel herself barreling towards her own orgasm.\n\n\"Babe, I'm going to come. Come with me,\" Quinn cried out.\n\n\"I'm close,\" Alex panted out in the exertion of pumping in and out of Quinn.\n\nShe fixed her grip on Quinn's hips so she could drive in harder and deeper and after one long thrust, she felt her orgasm begin to hit.\n\n\"Come for me. I'm going to come,\" she commanded Quinn.\n\nTheir mutual moans filled the room and Alex slowed her thrusts as she felt Quinn start to sink down further on the bed.\n\nKnowing the other woman was probably incredibly sensitive by this point, Alex stilled her body and gently guided her dildo out of Quinn's opening.\n\nOnce she was out, Quinn collapsed onto the pillows under her while Alex messed with the buckles of her harness to take it off. She set the harness and dildo on the side of the bed and pulled down the covers so Quinn could move under them.\n\n\"Now I'm sleepy,\" Quinn said as she nestled her face into the pillow.\n\n\"For once, I am too,\" Alex replied, sliding into the spot next to Quinn.\n\n\"I don't even know how to tell you how amazing that was,\" Quinn said as Alex turned her body so they were facing each other.\n\n\"It was for me too,\" Alex replied quietly.\n\n\"And now we get to experience my third favorite activity of all time.\"\n\n\"Sleeping?\" Alex asked.\n\n\"Mhmm,\" Quinn responded through a yawn.\n\n\"And what are number one and number two?\"\n\n\"Number one is being fucked by you and number two is eating.\"\n\nAlex let out an exaggerated gasp. \"You mean I've surpassed bread?\"\n\n\"I know. I'm surprised too,\" Quinn responded dryly.\n\n\"Sex over carbs,\" Alex said with a smile on her face.\n\n\"You over carbs.\"\n\n\"Good thing you don't have to choose. I like bread too.\"\n\n\"That's a relief,\" Quinn responded with her own smile. \"And me? Do you like me?\"\n\nAlex moved closer so that their noses were almost touching as they lay on one, shared pillow.\n\n\"I more than like you, Quinn.\"\n\n\"That's a relief too,\" Quinn responded back quietly and Alex could see something that looked like hope flash across her eyes.\n\nAlex placed a soft, chaste kiss on Quinn's lips before pulling back, but only an inch.\n\n\"Sweet dreams, my beautiful girl,\" she said softly.\n\n\"Sweet dreams, Alex,\" Quinn said before letting her eyes close.\n\nAlex watched the woman sleep for only a moment before the night's activities caught up with her and she felt her own eyes close.\n\nChapter 29\n\nQuinn woke slowly the next morning, allowing her eyes to take their time opening. And before her mind could even really process the fact that it was awake, Alex's words from the previous night began rolling around in her head. I more than like you, Quinn. \n\nShe tried to control the smile that instantly began growing on her face, but it was of little use. Everything about yesterday felt right. From hanging out with Courtney to their impossibly hot sex after\u2014 she felt like she could physically feel her heart swelling.\n\nWhen she turned her head and saw that Alex's space was empty, she wasn't entirely surprised. It seemed that Alex lived off of very little sleep while Quinn could probably take a nap standing up at a rock concert.\n\nIf she wasn't awake by the time she walked out into Alex's living room, she would be soon by the blinding light coming in from the floor to ceiling windows lining one side of the apartment.\n\nWhen she didn't see Alex sitting on the couch, she made her way to the large kitchen and saw the blonde sitting at a table, looking showered, fresh and beautiful. She internally wondered how long Alex had been up because if this is how she looks right when she wakes up, Quinn might start to feel a bit subconscious. Alex looked stunning and she noted by the clock on the oven that it wasn't even 8am yet.\n\nQuinn hadn't even bothered to look at her reflection before walking out barefoot to the kitchen. She had thrown on a pair of sweats and a t-shirt she found and assumed she looked more than a little disheveled. Her hair always had a party of its own in the morning.\n\n\"Good morning, beautiful. Bagel? Coffee?\" Alex asked as Quinn took the seat next to hers.\n\nAlex had a cup of black coffee in front of her as well as what looked like a script.\n\n\"Both, please,\" Quinn said.\n\nAlex got up from the table and moved around the kitchen until there was a black cup of coffee in front of Quinn as well as a jar of sugar and cream.\n\n\"I'd make your coffee myself, but the amount of cream and sugar you use scares me,\" Alex said as she moved away again to grab a plate of bagels she had ready.\n\n\"I like sweet things,\" Quinn joked, giving Alex a wink.\n\nAlex put the bagel plate in front of Quinn, who didn't hesitate to grab one and apply a generous amount of schmeer.\n\n\"I see the bagels are trying to redeem themselves from their disastrous last breakfast,\" Quinn said.\n\n\"Don't blame the bagels. It wasn't their fault,\" Alex replied.\n\n\"What are you reading?\" Quinn asked, pointing down at the pages in front of Alex.\n\n\"My father made his selection for the spring show so I was just reading the script.\"\n\n\"Do you like it?\"\n\nQuinn didn't need Alex to respond. The immediate scowl that crossed the blonde's face was telling enough.\n\n\"That bad?\" she asked.\n\nAlex closed the script and tossed it away from her on the table. \"It's worse than bad. It's a complete sexist mess. It has a sold-out run-in London right now and my father is friends with the playwright. Even the theater world has an old boy's club.\"\n\n\"What's it about?\"\n\n\"It follows a man over his life as he attempts to hide a lifelong affair from his wife.\"\n\n\"That sounds terrible,\" Quinn said, not even bothering to mask her distaste for the play's theme.\n\n\"It gets worse. They only talk about the wife and the mistress. You never see them on stage. It's all focused on the lead man and his best friend.\"\n\n\"I assume you didn't have a huge say in Horizon doing that one,\" Quinn said.\n\n\"No, and I only found out this week. I thought maybe the Winter Series was just the start of my leadership in the company. And that I'd be brought in for that discussion, but he and Rick made the choice on their own.\"\n\n\"Maybe they thought you'd try to veto their choice,\" Quinn mused.\n\n\"No doubt they thought I'd have an issue with it,\" Alex said as she pointed down at the script. \"This and Death of a Salesman are the exact type of stodgy theater I've been veering Horizon away from. And until this season, my father wasn't fighting it all that hard. Even Simon Anders seemed to be able to see the writing on the wall as to where theater is headed.\"\n\n\"What do you think changed?\" Quinn asked, ignoring her bagel and coffee at this point in lieu of focusing on Alex.\n\n\"The only thing that has changed is that he gave me the Winter Series to handle completely on my own. And that Rick is retiring.\"\n\n\"Maybe he can see the writing on the wall. Which is that you're the best one to take over for Rick. And he's just resisting.\"\n\nQuinn watched Alex stare at the table seemingly in thought and for a minute she didn't say anything and let her process her thoughts. But when she saw Alex's brow furrow in the way she'd seen before, she decided to speak again.\n\n\"What are you thinking about, babe? I don't know exactly what your furrowed brow look means yet, but so far it's never been anything good.\"\n\nUnlike their first breakfast though, the eyes Alex brought up to Quinn's were unguarded and open. \"Just thinking about later today,\" she responded.\n\n\"The interview?\"\n\nAlex nodded her head but didn't say anything else.\n\n\"What has you worried?\" Quinn asked, moving her hand over so she could place it on Alex's.\n\n\"Last week my father dropped a mention of me taking over for Rick. He's never said anything about that before even though he knows I want the job. And I'm afraid doing this interview is too bold. That it'll just tip him in the other direction.\"\n\nQuinn watched Alex twirl her cup around in her hands as she spoke and could tell she was more anxious about today than she was probably even letting on. She wished she knew more about Alex's dad so she could give some real advice, but she just didn't. Alex's fears could be completely justified if Simon Anders was the shark she had heard he was.\n\n\"I understand why you'd be worried, babe. And granted, I don't know your dad very well. But this article isn't about you taking over at Horizon, right? It's just about a show in a series you're producing. It's not unusual to include some statements from someone at the helm. What does Janet think?\"\n\n\"Exactly what you just said. It'll just be a few quotes from me. The rest will be about you. I won't even be in the photo.\"\n\n\"Aw, but we look so cute together,\" Quinn said, trying to lighten Alex's sullen mood. \"Are we being interviewed together or separately?\"\n\n\"Doesn't your team go over all that with you?\" Alex asked.\n\n\"They do, but I rarely listen. Mikey is picking me up from my apartment and there was something said about hair and make-up at the theater. And something else said about a photoshoot on the roof. And something else said about you...and then I just got lost in sexy fantasies.\"\n\nAlex laughed at that and Quinn noticed that the sound instantly made her stomach flutter. Alex's laugh didn't come out as easily as other people's, but when it did, it was a low, sexy sound that Quinn could feel vibrate through her body.\n\n\"You must be a handful to manage, sweetheart,\" Alex said, but this time her use of the pet name was wrapped in affection, and not lust.\n\n\"You have no idea,\" Quinn laughed back.\n\n\"We won't be together for the interview. You'll go first and then they'll set-up the photoshoot. While the photographer takes some shots of you, I'll answer a few questions with the reporter.\"\n\n\"Someone pays attention in class.\"\n\n\"I do run the theater,\" Alex replied dryly.\n\n\"It's so hot when you're all boss-like,\" Quinn said as she got up from her chair and slid over onto Alex's lap.\n\nBut just as her lips were meeting Alex's in a soft kiss, she felt her phone vibrate in her pocket. She let out a small groan before she looked to see who texted.",
        "\"Shit. I have to go. Mikey is going to be at my place soon and he hates when I'm late.\"\n\nAlex pushed some of Quinn's hair behind her ear and smiled at the brunette. \"Which I'm guessing is all the time.\"\n\n\"Like, all the time,\" Quinn smiled back before moving in for another short kiss.\n\nBut just like so many of their kisses, it turned heated quickly. Quinn shifted her body so her legs were now fully draped over either side of Alex and she began to lightly grind into the blonde.\n\nIn that moment Quinn should be grateful for Alex's unusual control because she would have just kept going and then she would have been really late.\n\n \n\n\"Quinn, you need to go,\" Alex laughed against Quinn's lips.\n\n\"You and Mikey really would be a match made in heaven,\" Quinn said as she rested her forehead against Alex's and attempted to catch her breath from their heated kiss.\n\n\"I could see one or two problems with that,\" Alex replied, gently rubbing her hands up and down Quinn's back.\n\n\"Good, because I'm not sharing you,\" Quinn said as she gave Alex one more kiss and reluctantly pulled her body off her lap. \"I'm wearing these sweats home, just so you know.\"\n\n\"I'm not going to have any more clothes soon,\" Alex said as she also got up from her chair.\n\n\"The most casual I've ever seen you is in a white t-shirt. I bet you don't even wear this stuff.\"\n\nQuinn turned to Alex as they made it to the entrance of the kitchen and put her arms around the blonde's waist.\n\n\"I'll see you in a bit then?\" she asked.\n\nAlex just gave her a small nod as she looked into Quinn's eyes with a tenderness that the brunette didn't think she could ever tire of. It's such a different look to the one she was giving her late into their night, but Quinn craved both versions of Alex\u2014the domineering woman who took her body last night and this gentle, sweet woman who looked at her like she was something precious.\n\n\"You know you won't be able to look at me like that once I'm all dolled up and ready for my photoshoot,\" Quinn said when Alex just continued to look at her.\n\n\"I do have an acting background. I think I can handle it.\"\n\nQuinn leaned in and gave Alex once last slow kiss before she moved her face away and directed a small, mischievous smile towards the blonde.\n\n\"You haven't seen my dress yet.\"\n\nShe didn't wait for Alex to respond and turned out of the room so she could grab her stuff and make her way to her apartment where Mikey was probably already waiting. But her smile never left her face as she thought about just how much her chosen dress really would test Alex's acting abilities.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nQuinn's apartment was only twenty blocks uptown from Alex's, but as she made her way out of Alex's high rise, the morning chill hit her bones immediately. Instead of walking, which she had planned to do, she found the first cab she could and got in.\n\nShe cringed when she felt her phone vibrate again, assuming it was Mikey calling to ask where she was, but when she looked at her phone, she could see that her sister was calling.\n\n\"You're up early,\" she said as she answered the call, leaning back against the backseat of the warm cab.\n\n\"I'm a teacher. School starts early. I'm slightly surprised to hear you sound so chipper before 9am.\"\n\n\"If you thought I'd be sleeping, then why did you wake me up?\"\n\n\"Because I don't care?\"\n\n\"Fair enough. Anyway, lucky for you, I am up. I have an interview and photoshoot at the theater soon.\"\n\n\"Oh, I'll let you go then. I just wanted to say hi since I haven't heard from you in two weeks.\"\n\n\"It's not for two hours. I'm just on my way home now.\"\n\nQuinn said the statement knowing her sister would pick up on her meaning without her explicitly telling her that she was on her way home from a woman's place.\n\n\"On your way home from where might I ask?\"\n\nClaire's voice held no trace of judgement because that's not who Claire was. Quinn was reminded that she should trust her sister more\u2014she's never let her down in the past and had never judged her for anything she did in her life.\n\n\"I met someone,\" Quinn said tentatively. But after a minute of silence, she thought maybe the call cut out. \"Claire?\" Quinn asked when all she could hear was some shuffling noise on the other end.\n\n\"Sorry, I had to get comfortable for this. Now repeat what you just said.\"\n\n\"I said I met someone.\"\n\n\"Ok, jut making sure. Now tell me more. Who is she?\"\n\nThe cab slowed in front of Quinn's apartment building and she cradled the phone on her shoulder so she could quickly slide her card through the payment system and hop out.\n\n\"She works at Horizon Theater Group,\" Quinn said as she rushed into the building and made her way to the elevators that would take her to her floor.\n\n\"Interesting. In what capacity?\"\n\n\"She's the Managing Director. Her name is Alex Anders.\"\n\n\"Anders,\" Claire said slowly. \"Why do I know that last name?\"\n\n\"I have no idea,\" Quinn said.\n\nWhen she made it back into her apartment, it was dark so Mikey must not have gotten there yet. She looked at the time on her phone quickly and noted that she had fifteen minutes before he arrived. Not much time to wash the sex off her body.\n\n\"I think Mikey may have mentioned it at some point.\"\n\n\"How often do you and Mikey talk?\" Quinn asked as she went into her bathroom to start getting ready for a shower.\n\n\"More often than you'd like to know,\" Claire laughed. \"Doesn't this Alex own the theater or something? I think that's what Mikey said.\"\n\n\"Her father does. And he's the Artistic Director. And a complete asshole.\"\n\n\"And how does he feel about you dating his daughter?\"\n\n\"He doesn't know. Nobody can know until the show opens. It's all kind of complicated.\"\n\n\"That must be hard,\" Claire replied.\n\n\"Are you going to tell me to be careful like Mikey?\" Quinn asked as she took off Alex's sweats and t-shirt.\n\n\"No, Quinney. I know you will be.\"\n\n\"She's not Jenna,\" Quinn said as she leaned against her bathroom counter.\n\n\"Of course she isn't. And you did nothing wrong with Jenna. She was the witch.\"\n\nQuinn smiled into her phone at her sister's insult. For Claire, calling someone a witch was about as bad as it gets. She's always chided Quinn on her overuse of certain swear words. Most older siblings are the ones to teach their younger siblings how to swear. In the Collins' household, it was the other way around.\n\n\"Do you like her?\" Claire asked next.\n\nQuinn paused before she answered. Every moment she had spent with Alex just solidified her feelings for the woman. But suddenly talking to her sister\u2014 the person who knew her best and cared for her most\u2014 made her want to truly vocalize what she was feeling. Mikey was her best friend, but this kind of vulnerable conversation made him uncomfortable.\n\n\"I think I love her,\" Quinn whispered even though she was alone.\n\n\"Tell me about her,\" Claire said softly.\n\n\"She's not really like anyone I've ever dated before. She comes across as kind of closed off at first. Maybe a bit reserved and serious. But she's really just this soft romantic inside. She's sweet to me. And funny. And she's so talented and doesn't even realize it.\"\n\n\"I don't think I've ever heard you be so effusive about a woman. You hardly talked about Jenna to me,\" Claire said once Quinn finished.\n\n\"I never trusted Jenna. And then I was embarrassed at how I let her treat me. But Alex is so different. She's special.\"\n\nThere was a pause before Claire spoke again. \"Wow. She's really hot, Quinn,\" she finally said.\n\n\"What? Did you just Google her?\"\n\n\"Of course. And wow. I may leave Will and hop a plane to New York to steal her from you.\"\n\n\"Bring it, sis. But I should tell you that she seems to like me a lot.\"\n\n\"Do you think she's in love with you?\"\n\nQuinn's stomach dropped at the question. She saw something in the way Alex looked at her and she remembered her words from the night before. She knew Alex felt something deep, but she also knew how much the blonde struggled to process her own emotions so whether or not Alex was aware of her feelings\u2014 that Quinn just didn't know.\n\n\"I don't know. But I think she may be close.\"\n\n\"I'm really happy for you, Quinney. You deserve it.\"\n\n\"It's all still really complicated. We can't even be out as a couple at the theater. If we even are a couple, that is. We haven't officially declared that. Even though I know she's not sleeping with anyone else.\"\n\n\"You've got a lot going on with the show. Maybe it's not the worst thing to take it slow until opening.\"\n\n\"Always the voice of logic,\" Quinn replied with a smile. \"Anyway, I'd love to talk longer but Mikey will be here soon to pick me up and I'm not showered yet.\"\n\n\"Tell him hi for me. And call me later. I want to know how rehearsals are going.\"\n\n\"I will. Send my love to Will, who I assume is still sleeping.\"\n\n\"You know him well,\" Claire laughed. \"Love you. Talk soon.\"\n\nWhen the call ended, Quinn turned on her shower and jumped in as fast as she could. Mikey would have to wait for her but talking to Claire had been worth it.\n\nChapter 30\n\nJanet: The rain has gotten worse so we're setting-up in the lobby. Ready for you in 10.\n\nAlex read the latest update from Janet and began to shut down her work so she could make her way down to the lobby. She had been getting updates from the publicist all morning on various changes to the plan\u2014 the weather being the latest.\n\nShe hadn't heard from Quinn since she had left Alex's apartment that morning, but if Janet was ready for her, it must mean Quinn's interview was done and she was about to shoot the photos. Alex was hoping she'd get a glimpse of the photoshoot anyway, so she didn't really mind the change in location.\n\nAs she made her way into the lobby, Alex could see that there were lights set-up on the far side of the room near the staircases that led audiences up the balcony. She assumed that's where they would be taking the photo of Quinn but so far, she didn't see the brunette.\n\nAlex heard Janet before she saw her, which was often the case based on how many bracelets the publicist usually wore.\n\n\"My dear, hello,\" Janet said as she came over and leaned in to place two kisses on Alex's cheeks. \"Perfect timing. Jeremy just ran to take a call but is ready for you.\"\n\nJeremy Hart. The latest change in the plan for today. Janet informed Alex this morning that the reporter writing the feature would be an entertainment writer and not a theater writer. Janet reasoned that Quinn's involvement made the story transcend more than just theater. Alex didn't know if she agreed, but it was too late to really do anything about it. She just hoped Jeremy had at least seen a play before.\n\n\"Where are we doing this?\" Alex asked.\n\n\"Right here is fine. This is where he sat with Quinn,\" Janet said as she pointed to the long bench against the wall.\n\nThe moment Janet said Quinn's name, Alex could feel a flutter in her stomach and had to remind herself of what she told Quinn earlier. She needed to act unaffected, especially by just the mention of the woman's name.\n\n\"I'm going to go check on our little star. I'll send Jeremy over when he's ready,\" Janet said and walked off towards the other side of the lobby.\n\nAlex pulled out her phone to scroll through emails as she waited for the reporter to come find her and as she did, a text from Quinn popped up, immediately causing a smile to cross her face.\n\nQuinn: You look sexy sitting over there all serious in your blazer\n\n \n\nAlex's eyes snapped up to see Quinn standing by the photographer, who was in the middle of a conversation with Janet. She was grateful their focus was elsewhere since all of Alex's acting abilities went out the window the moment she saw the brunette. Because that dress.\n\nQuinn was wearing a tight burgundy dress. At first look the dress almost looked conservative with long sleeves and buttons that led up to a high, mock neck. But even from where Alex was sitting, she could see that the sleeves were sheer, as was the bodice. It was also so short that Alex's eyes were drawn to the woman's long, smooth legs.\n\nAlex forced her eyes off of Quinn's legs and back to her phone. She smiled when she saw that Quinn had noticed her lingering gaze.\n\nQuinn: Eyes off the legs, Anders.\n\nAlex: I don't know what you're talking about. Focus on your photoshoot.\n\nQuinn: They're still setting up. Plus, need I remind you that this isn't my first photoshoot?\n\nAlex: In that case, let me tell you that you look stunning. \n\nAlex looked up to see Quinn send her one, quick smile at the compliment.\n\nQuinn: Will it distract you during your interview if I tell you that I can still feel you...?\n\nThe text sent an immediate throb to Alex's pussy and she again wondered at this woman's effect on her.\n\nAlex: You're making this very difficult, sweetheart.\n\nQuinn: Fine. Then I won't also tell you that I haven't stopped being wet since last night. And every time I think about you fucking me, my pussy clenches in this tiny, red thong I'm wearing...\n\nNot able to school her features anymore, Alex closed her eyes and took a deep breath. When she opened them, Quinn was talking to the photographer and she let out her breath in relief. Not that she didn't enjoy their sexy conversation, but she didn't know how much longer she could keep her face neutral.\n\n\"Ms. Anders?\" a young man asked as he walked up to her, successfully jarring Alex of any sex filled thoughts of Quinn.\n\n\"Yes, hi. You must be Jeremy Hart,\" Alex said and extended her hand to shake his outstretched one.\n\n\"It's great to meet you,\" he replied as he shook her hand. \"Big fan of what you guys have going on here,\" Jeremy said as he twirled his finger around the lobby.\n\nIt wasn't just that he came off as completely disingenuous in his comment, but there was something else smarmy that Alex didn't like. He was younger than most of the theater writers were that she had met over the years. She would probably place him around her own age or maybe even younger. And his coifed hair, tight jeans, and fake bowling shirt just made him look like a typical Brooklyn hipster.\n\n\"Thank you,\" Alex replied without a lot of emotion. \"Should we start?\"\n\nAs they both sat down on the bench, Janet made her way over to the two of them and sat on the bench next to Alex.\n\n\"Oh, good. You've met,\" Janet said. \"Don't mind me, Jeremy. I'll just listen in.\"\n\nAlex had been around the theater scene long enough to know how these media engagements worked, but she had rarely been the one actually interviewed. Janet assured her she would be \"covering\" the interview, which meant she watched over things on behalf of the theater to make sure the agreed upon story was adhered to. And in this moment, Alex was grateful Janet was sitting there.\n\n\"As I understand it, this is your first year at the helm of the Winter Series, is that correct?\" Jeremy asked and Alex couldn't help but think he sounded bored.\n\n\"It is. I've been involved for many years, but this is my first year leading the program from start to finish.\"\n\n\"And how did you come across Quinn Collins and Model Behavior?\"\n\n\"A friend who works here at Horizon told me about her show and it sounded intriguing. There are so many hidden gems in the New York festival circuit. And I'm just lucky enough to have happened upon one as amazing as Model Behavior.\"\n\n\"Since becoming Managing Director, you've also led the charge on other programming including choosing the rental companies that come into the space. Where do you see the future of Horizon going?\"\n\n\"I believe that audiences are changing and with that, the arts need to adapt. I want to produce shows that are inclusive and showcase the modern, human experience. It's not to say we can't honor traditional work, but I also believe that in order for theater to survive the Netflix culture, we need to appeal to younger audiences. And they expect progressive thinking. They expect us to push the envelope. I want Horizon to be at the forefront of the new theater. One that is accessible and relatable to everyone in New York, and not just the elite.\"\n\n\"And do you think that change is the reason the theater has seen an increase in revenue over the past couple of years?\"\n\nThe question caught Alex off guard for a moment. The surge in growth for the theater was public knowledge, but she was still surprised an entertainment writer did that kind of research.\n\n\"Yes. I think when theaters can shift focus away from the subscription model and focus on targeting each show to the right audiences, then they'll see a change for the positive. But it's also about what kind of programming theaters choose. And making sure they diversify that programming.\"\n\nThe interview went on for a bit with Jeremy asking one pretty mundane question after another. When they appeared to be wrapping-up, Janet interrupted.\n\n\"I need to go make sure the photographer has what she needs. I'll be back. But it seems you have what you need?\" she asked Jeremy.\n\n\"Yep. I'll just finish up here with one or two more questions,\" Jeremy said to her before she walked away to the other side of the room.\n\nAlex noted that Jeremy seemed to wait for Janet to leave before turning to her with an entirely less polite smile on his face.\n\n\"What is it that intrigues you about lesbian content?\" he asked suddenly.\n\nAlex was more than a little thrown by the question and the cutting tone behind it. \"I don't choose shows based on that, Mr. Hart. I choose the best show,\" she replied, infusing as much ice as she could into her voice as a warning.\n\n\"Of course. And have you always been interested in fashion?\" he asked, but Alex could tell he was baiting her and didn't believe for a second that the topic of Quinn's show was the reason she chose it.\n\nAlex was determined not to fall into his trap and just wished Janet would return. \"The three shows for the Winter Series all bring a unique voice to our theater. The themes of the show matter to me just as much as the topic itself.\"\n\nHe looked at her for a moment before glancing down at the notepad in front of him. \"There was an actress who worked here four years ago,\" he said. \"Sloane Dyer. Tell me what happened there.\"\n\nAlex could feel all the blood drain out of her face as the words left his mouth and for a moment she just opened and closed her own mouth, not able to get anything out.\n\n\"What?\" she finally whispered back.\n\n\"Sloane Dyer. She was an actress here. I'm sure you remember. Is it true she sued you for sexual harassment?\"\n\nAlex stood up as fast as she could make her legs work, which at that moment, with the way her whole body was shaking, wasn't very fast.\n\n\"This interview is done,\" she said loudly.\n\n\"Alex, what's wrong?\"\n\nJanet was suddenly walking back to the bench. She must have seen Alex shoot up from her seat and shout down at Jeremy.\n\n\"This interview is supposed to be about the Winter Series. Not my personal life,\" Alex directed at Janet.\n\n\"And you're absolutely right. This interview is over, Jeremy,\" Janet said to him in a sterner tone than Alex had ever heard from the woman. She then moved so she was in front of Alex. \"Go. I'll take care of this,\" she said in a quiet voice. \"I'll call you later.\"\n\nAlex didn't even look at Jeremy again and turned into the nearest entrance that would take her into the theater from the lobby. Once she was alone in the dark theater, she allowed herself to breathe. She slid down into a chair halfway to the stage and put her face in her hands.\n\nHer mind was racing and she couldn't seem to get her heartrate under control. She had reservations about doing this interview, but not because she thought Sloane would come up. She thought if anything, Simon's ego might be hurt that she got some attention from the media instead of him. She had to talk to Janet before Jeremy made this into some kind of story. She didn't give him anything to work with, and luckily, he worked for the Times and not Page Six, but she still had a knot in her stomach.",
        "Alex knew eventually everything could get out. Afterall, the theater world was a small one. But after the gag order ended and nothing ever seemed to hit the rumor circuit, Alex had started to think it wouldn't. But Sloane must have talked, which Alex still didn't understand. Sloane walked away from that situation rich and with her reputation intact. Talking about it to the media would only paint her in a questionable light.\n\nShe had to talk to Janet. She needed to put a stop to any inclusion of Alex in the story. But she knew the reporter and photographer were likely still in the building, hopefully already being handled by Janet, so she sunk further into the theater chair, closed her eyes, and waited.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nQuinn couldn't hear anything from all the way across the room, but she knew Alex's face well enough by now to know that she wasn't happy as she said something to Janet. She could then see Janet turn to the reporter and say something before Alex stormed off into the theater.\n\nShe couldn't follow her without making it obvious that she was, so she stayed where the photographer placed her as the woman took her last shots. But everything in Quinn was screaming at her to follow the blonde.\n\nFinally, when Janet came back into the room without the reporter, the photographer showed her some of the last shots and both women agreed they had what they needed. Quinn didn't know Janet very well, but the woman seemed more than a little tense.\n\n\"Thank you, Quinn. You've been wonderful,\" Janet said as she leaned in and placed a quick kiss on the brunette's cheek.\n\n\"Thanks, Janet. I have rehearsal soon so I should be going,\" Quinn said quickly as she grabbed her bag.\n\nIt wasn't a complete lie. She did have rehearsal with Diego that afternoon, but she had other plans before she went down to the rehearsal room.\n\nWhen she could see that Janet was fully focused on talking to the photographer, she moved over to the same theater entrance she saw Alex walk through. The theater was dark as she walked in, but she could see Alex's blonde hair peeking up over a chair and she walked towards her.\n\n\"Hey, you,\" she said quietly as she moved into the aisle behind the one Alex was sitting in and sat down. She put her arms on the chair in front of her and leaned in so she could look at Alex's face.\n\nAlex didn't respond and just continued to sit there.\n\n\"I can go if you need to be alone,\" Quinn said.\n\nShe didn't want to leave but she also could tell that Alex was in emotional pain. But instead of asking her to go, Alex shifted in her chair so she could put a hand on Quinn's arm.\n\n\"I don't want you to go. We won't be bothered in here. Mondays. Dark days,\" Alex mumbled out distractedly.\n\n\"What happened, babe?\" Quinn asked, putting her own hand on top of Alex's before the blond moved it away to rub her hands over her face.\n\nBut Alex just continued to sit there and not say anything. Finally, Quinn got up from the chair behind Alex's and moved to the same row so she could sit in the seat next to hers.\n\n\"Alex. Talk to me. Tell me what happened.\"\n\nQuinn could hear Alex take in a long breath before she started talking in a low voice.\n\n\"There was a woman. About four years ago. Her name was Sloane.\"\n\n\"Is this the story you were going to tell me in the aquarium?\" Quinn asked. She had wanted to know more about Alex's past, but she was still confused why it was coming up now after the interview.\n\nAlex nodded. \"Yes. I guess you could say Sloane was my version of Jenna. She was in a summer workshop here and that's where we met. Courtney was in the same one. It was a big deal to even get into the workshop\u2014only some of the top theater talent was accepted.\"\n\n\"So, she's talented?\" Quinn asked and she hated how her stomach tightened in jealousy.\n\n\"She was a young talent. She just graduated college, so she was a handful of years younger than I am. And I guess I found her refreshing. She didn't know me during my mom's sickness and it was easy to be with her. Courtney was never a fan though.\"\n\n\"Why not?\" Quinn asked.\n\n\"Courtney got to know her during the workshop and told me she thought Sloane was bad news. Sloane and I didn't have a healthy relationship. Sloane just isn't a healthy person. There was a lot of drinking and fighting and then more drinking. We partied a lot.\"\n\n\"You partied?\" Quinn asked skeptically.\n\n\"I hadn't dealt with my mom's death. Sometimes it felt like Courtney was too close to the situation since she knew my mom and she knew me before she died. It was nice being with someone who didn't make me process things like an adult. Because Sloane didn't act like an adult.\"\n\n\"What happened with her?\"\n\n\"After the workshop, we became fairly serious. She was staying at my place almost every night. By the fall though, I was tired. I was sick of waking up every day hungover and I knew I wasn't really in love with her. After a friend told me that Sloane was getting into things harder than alcohol, I decided to take a break from everything.\"\n\nAlex rubbed her hands over her face again before she continued but Quinn deiced to just stay quiet and let the other woman finish her story.\n\n\"She was in the process of auditioning for the fall show here. My father was directing. And she made it to the final call back for the lead. It was actually between her and another woman. I obviously had no say in casting at that point in time.\"\n\n\"And I'm guessing Simon didn't cast your girlfriend?\" Quinn asked.\n\n\"By the time it was cast, I had broken up with her. But I also don't even think he knew we were ever dating. He certainly found out later. When she found out she didn't land the role, she completely spiraled. At first, she accused me of convincing my dad not to cast her.\"\n\n\"Why would you do that?\"\n\n\"I wouldn't. Even though I did understand my father's decision. The other actress was better. In one of our final fights about it, I decided to tell her that. Which was mean, but I didn't really know how far she'd take things.\"\n\nAlex looked over at Quinn at that point and Quinn could see the devastation in the other woman's eyes. She wished she could do something to change it but she also wanted to know the full story.\n\n\"She ended up suing me for sexual harassment. She claimed that I tricked her into a sexual relationship with the promise of a role.\"\n\nFor a moment Quinn didn't know what to say. She knew Alex was reticent to talk about this past relationship, but she had no idea why or that it was that bad.\n\n\"Why would suing an Off-Broadway theater company help anything? It doesn't get her the role and it's not like any theater is bleeding money, right?\" Quinn finally asked.\n\n\"I think at first she just wanted to make my life hell. But then she hired some pretty smart lawyers. And they saw the real pot of gold.\"\n\n\"Your dad.\"\n\n\"My father. Sloane knew enough from our conversations to know what my relationship was like with him. She knew my father would protect his theater at any cost. And he did. He settled out of court and it probably wasn't even a dent on his bank account. A gag order was put into place until the case was over and Janet was brought in just in case anything got out after that ended. But nothing ever did.\"\n\n\"Why would he pay them off? It doesn't sound like she had a strong case.\"\n\nAlex sat there without saying anything. When she finally did a few minutes later, her voice was quiet and she didn't sound like the Alex that Quinn had come to know.\n\n\"She had enough. Videos and photos of me. And in every single one, it appeared as if I was some older woman controlling a poor, clueless young actress. I'll spare you the details. But she had enough.\"\n\n\"What happened in there earlier?\" Quinn asked, nodding her head in the direction of the lobby.\n\n\"He asked about Sloane. And the case. I have no idea how he found out and if she's talking about it, but the moment Janet walked away all his questions were about that. And he implied I brought your show in because you're gay.\"\n\n\"That's not true though,\" Quinn said and even she knew it was a stupid statement since the media never really cared about truth when it came to scandal.\n\n\"I know that. And I didn't answer his questions. But that's why my father is so concerned about my dating life. Sloane handed him the perfect excuse not to trust me.\"\n\n\"He has to know you were set-up. She played you, Alex,\" Quinn said defensively.\n\nAlex gave her a soft, sad smile. \"She did. And he knows that. But he still uses it against me every chance he can.\"\n\n\"So, what are you going to do?\"\n\n\"I'll talk to Janet and have her ensure the reporter doesn't include whatever it was he was after. That kind of sensational reporting doesn't align with their outlet and they won't want to mess with Janet. I hope. Did he ask you anything out of the ordinary?\"\n\n\"No, the questions weren't very inspired but they were all about the show. Not one question about you.\"\n\n\"That's good,\" Alex said, but her brow was still furrowed in worry.\n\n\"Hey,\" Quinn said, taking Alex's hand into her own. \"I don't really know how to fix any of this. But I'm here. If you need me.\"\n\nAlex just stared at Quinn for a moment. The brow that was so furrowed a moment before began to smooth out slightly as her blue eyes traced their way down Quinn's face.\n\n\"I know, sweetheart. Thank you,\" she said as she brought Quinn's hand up to her lips for a kiss.\n\n\"Have you seen or heard from her since everything went down?\" Quinn asked.\n\nShe didn't want Alex to relive painful memories, but she also couldn't hold back her question now that the story had been told.\n\n\"No. I know she's not doing theater since I would have heard. She's probably just living off the settlement, but I really have no idea.\"\n\n\"I'm sorry all this happened today. I know you were already nervous about the interview.\"\n\n\"It's not your fault,\" Alex said, finally smiling softly at Quinn.\n\n\"I know that. But I\u2014\"\n\nQuinn caught herself before she finished what she wanted to say. But she could see by the slight widening of Alex's eyes that the blonde had an idea where her sentence was headed.\n\n\"I care about you,\" she said instead. \"And I hate seeing that little furrowed brow,\" she added, lightly tracing her fingers across Alex's forehead.\n\nAlex gave her a long look but didn't say anything about her almost-declaration.\n\n\"What does the rest of the day hold for you?\" Alex asked.\n\n\"Rehearsal. Then I thought maybe a certain sexy blonde might want to come over for dinner. And other things.\"\n\n\"Chess?\" Alex asked with a hopeful expression that Quinn thought made her look instantly younger and sweet.\n\n\"Only because you had a rough day. But you should know now that I don't cook.\"\n\n\"I don't cook either. This could be a problem for our mutual health.\"\n\n\"I already knew that about you. I've seen your fridge,\" Quinn said giving Alex a playful smile.\n\n\"If we weren't in this theater, I'd kiss that smirk off your face.\"\n\n\"You can kiss me later. For now, I think you should go find Janet.\"\n\nAlex rubbed her face one more time and nodded. \"I do. I'll text you later to figure out timing.\"\n\nQuinn leaned in and quickly gave Alex a kiss on the cheek before moving out of the aisle and towards the back of the theater.\n\n\"Quinn,\" Alex called out suddenly.\n\nQuinn turned back towards Alex who was now standing in the aisle.\n\nAlex gave her a slow, shy smile. \"I\u2014\" she paused and let her smile grow wider. \"I care about you too.\"\n\nIt took Quinn a moment before Alex's meaning sunk in and her own words from earlier rang back through her mind. She could feel her own smile slowly reach her lips as she stood and stared down the theater towards the blonde.\n\nShe thought back to Claire's question from her call earlier. She was pretty certain she knew where Alex's heart was between the lines of what was just said and not said. But she also knew that one thing she told Claire wasn't true.\n\nShe didn't think she was in love with Alex Anders. She most definitely was.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "drama",
        "girl on girl",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lgbt",
        "new york",
        "slow burn",
        "strap-on",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-25-30"
}