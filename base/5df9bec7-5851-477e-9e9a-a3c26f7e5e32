{
    "title": "Past, Present and Future Ch. 01",
    "pages": [
        "<center>A short tale of mutual discovery. Please enjoy yourself. \n\n+</center>\n\n\"I don't dance, Stephanie,\" he said, \"and I don't play childish games.\" He seemed irritated, frowned at me for a moment as we exited the building, grey eyes under white eyebrows. \n\nHis tone was certainly irritating. I had been trying to be polite, after all.\n\n\"So, no, thank you. I don't want a coffee, thanks.\" \n\nSurrounded by refugees from the last classes on a balmy Friday, I tried not to walk too fast. His limp became apparent if he had to go too fast, tried to keep up with somebody faster. \n\nI'd first noticed him when I was a freshman last year. He stood out on campus. He was always well-dressed, well-groomed and neat. I'd never seen him, for instance, with unpressed clothes. Today he wore immaculate white canvas slacks and shoes, a white shirt and a blue blazer. He looked like he owned Hollywood.\n\nOlder than his classmates by a generation, while not holding himself aloof, equally he made no particular effort to blend in or make friends. His white-blond hair was half white now and contrasted strongly with his tanned complexion. There was a spiderweb of barely-perceptible scars over his left cheekbone, straying down to be lost under a well-trimmed beard.\n\nHandsome and lean, but with unusually muscular arms and shoulders, he sometimes carried a cane when the weather was cold. He was generally polite, but it was a bad idea to joke about that cane; I'd watched his acerbic tongue flay a loudmouth jock who'd teased him about his age. Tony had left him looking like an ill-mannered two-year-old and done it in such as way as the jerk couldn't even think of getting physical.\n\nThen by some freak of computer coin-tossing, we'd been assigned each other as lab partners this year.\n\nIt turned out that a couple of his fingers were very stiff and he wasn't particularly good at stuff like dissecting frogs or working with rabbit innards. He knew what we were supposed to be doing however, usually far better than I did. He did the readings, understood the purpose of each lab session. He was focussed. We made, I thought, a pretty good team. \n\nAnd he was patient and willing to help. I'd needed that help. Don't get me wrong; I'm actually quite bright. But this was an elective for me; I was a Music major and had signed up for this on a whim. And it turns out Biology is very much a left-brain thing and I'm totally right-brained &mdash; intuitive and creative vs methodical and logical. Tony's insight and suggestions had saved me a lot of work. Had he been friendlier, more open, he would have been the ideal partner.\n\nAs it was, he made very little small talk, spoke very little about himself. He showed up on time, nodded at the right places in lectures, helped me with the slimier bits in the lab when my gorge rose too much. He was well-spoken and his writing style was crisp and succinct. He seemed intelligent and in in total control of himself, master of his own universe. \n\nAsides from that, I knew virtually nothing about him. I'd never seen him in one of the local shops or bars, nor with a woman of any age. He didn't wear a wedding ring, which might or might not have meant anything and either brushed off personal questions or else gave uninformative one-word answers. He'd mentioned that this was his first Biology course, too. \n\nI'd seen him pulling out of a student parking lot a couple of times after class, driving a boxy old jeep, like one the British military uses. Once I thought it was him behind the wheel of a grey sports car on Western Road but it was gone before I could be sure.\n\nOddly, while he treated me politely, I didn't get the impression he saw me as, you know, a woman. When you sit next to a boy in class, on a bus or in a cafeteria, they notice you, politely or maybe less so. Maybe it's just a quick glance at your legs or boobs when they think you aren't looking, but they notice.&hairsp; I'd never caught Tony checking me out. At first, I thought he was just too old, but that was silly. Then I thought maybe it was that I was too young, but that didn't make any sense at all. I was pretty certain he wasn't gay. But he didn't ever seem to acknowledge me as a young and pretty woman; that was unusual and, frankly, a bit irritating.\n\n+ \n\n\"So, no, thank you. I don't want a coffee,\" he repeated.\n\nHe stopped suddenly enough that I was three paces beyond him before I stopped and had to turn around and go back.\n\nHis eyes caught my own, assessing, appraising, penetrating.\n\nThen he blew the socks off me.\n\n\"And neither do you, Stephanie.\"\n\nHis eyes locked onto mine. I hate childish staring contests. but I had no idea how to respond to that challenge. So, ok, yeah, I broke first. I'd always thought of myself as a strong, liberated, independent woman. Growing up the only girl among four children, I learned early how to hold my own. I take not the smallest bit of crap from anyone. Really. But those flinty grey eyes called my hand and I had to meekly turn over a busted flush. Blushing like crazy, I dropped my eyes as he continued.\n\n\"But if I'm wrong and it was coffee you really meant, Stephanie, then I apologize. I'll buy you a Starbucks at the Community Centre and we can work on your lab report.\"\n\nA long finger rose, moved to under my chin, lifted gently it so my face was upturned, so I couldn't ignore him. His eyes were riveting, inescapable. I felt like a grounded sparrow watching an approaching cat - too frightened to try to escape, knowing that each moment made escaping that much less likely.\n\nThe cat pounced. \n\n\"Or,\" he continued, \"if you wish, we can do something less predictable, less adolescent. I'll go to Starbucks, buy myself a coffee and wait there while you go up to your room and pack a bag. \n\n\"A small&hairsp; bag,\" he added.\n\n\"You've got 15 minutes to do that and get back here. I'll have you back at your residence in time for dinner on Sunday.\"\n\nWas he blatantly propositioning me? Had he actually taken my offer of a coffee for...\n\nDamn it!&hairsp; Yeah, fine, whatever. He'd taken it pretty much for what it was, which was certainly more than just a coffee. \n\nI had been intrigued by him. He really was good looking, even for an older guy. He had style, confidence, panache. I found him impressive, a challenge. I wanted to get inside his head, be the girl who could penetrate his veil of standoffish mystery. I'd had some vague idea of getting him to invite me for dinner or something, maybe something more in time. And he'd seen through it in an instant, like I was still in grade school, and punched everything up about three levels without a blink.\n\nI guess I hadn't been very subtle.\n\nTony examined me for a moment and went hard-ball, full-contact, take-no-prisoners. \n\n\"Actually, don't bother packing a bag. Just bring your flute and put whatever it is you think you simply cannot live without in your purse there.\"\n\nI looked down at it. It was a small purse. \n\nHe continued, his voice soft but clear, direct and to the point. \n\n\"Don't bother bringing anything else, Stephanie; you won't need anything else. I'll watch your books and laptop while you go do that.\" \n\nI felt the implications of that resonate all the way down to my toes.\n\nMy bruised ego now burned with humiliation and anger. He'd just made it crystal clear that he expected me - on what amounted to a first date, one that I'd more-or-less hinted for &mdash; to spend the entire weekend naked. I clenched my teeth. The fucking nerve of the man! &hairsp; I wouldn't have taken that from anybody else; I'd have had my fingers around the pulsing heart of other boy treating me so.\n\nI wasn't entirely sure why I was taking it from him. \n\nAnd what did he want with my flute? It was no secret that I was a music student, but it made no sense.\n\nHe considered me steadily. \n\n\"Or, Stephanie, like I said, we can stay with Plan A. It'll be simpler. I'll even buy you&hairsp; a coffee. We'll find a table in the UCC, work on your report until five and then I'll see you in the lab on Tuesday.\"\n\nHe'd left me the choice of viewing myself either as a witless bimbo or else as a prudish child too chicken to follow through on something she herself had instigated.\n\nLeave a girl some room for her pride, won't you? \n\nTwenty-five years ago, my mother would have slapped his face. I could have just walked away, reported him for harassment. Instead, I tried to hedge.\n\n\"I have to work tomorrow,\" I said, seizing on that as a less-humiliating third option.\n\n\"Where?\"\n\n\"At the Spoke.\" It was the campus pub.\n\n\"Call in sick.\"\n\n\"I can't.\"\n\n\"Don't be coy, Stephanie,\" he said. \"You certainly can.&hairsp; The question is whether or not you will.&hairsp;\n\n\"Call in sick. If you really need the money, I'll cover it, whatever you normally earn. Or, no hard feelings, let's just have done with this juvenile fencing and go work on your lab report.\"\n\nI just looked at him. \"Tony, I'm a good waitress. The tips are good and you don't...\"\n\n\"Fine,\" he said softly. \"Let's go for that coffee.\"\n\n+\n\nMy heart was pounding as I raced down the residence hallway. 15 minutes wasn't much time, not when you considered the crowded tunnels under the road, elevator lineups and such.\n\nMarcy, my roommate, stared at me as I started diving through my makeup case, stuffed my hairbrush into my purse. I tried to include a change of underwear, but panties and bra wouldn't both fit. Wait, my toothbrush! I was practically ricocheting around the room.\n\n\"What are&hairsp; you doing, Steph?\"\n\n\"I'll see you Sunday,\" I said over my shoulder. \n\n\"Where are you going? What's the rush?\"\n\n\"I'm going away for the weekend with Tony.\"\n\n\"Tony?\"\n\n\"Remember I told you about the mature student in my Biology class? My lab partner? Well, he's got a place out in the country and he's invited me out there for the weekend.\"\n\n\"But you said he was old!\" Marcy said. \n\nShe suddenly grinned wickedly; her head tilted a little to one side. \"Don't tell me you've decided to get a sugar daddy after all?\" \n\nI bristled at her suggestion. \n\nEverybody knew about sugar daddies. It was a pretty-well-known thing on campus. A girl on our floor had found one last year and moved out. Jeremy was really old, like in his 70s. Most of the time, he just missed his late wife and wanted to cuddle, have somebody around. Even when he wanted sex, it didn't last long. \"It's kind of sad,\" Katie had said. \"He's more lonely than anything else. But he's really kind and generous. It's not much for him to ask.\"\n\nI'd always thought there was a name for such compromises.\n\n\"Don't be ridiculous,\" I snapped at Marcy. \"It's nothing like that. But I do have to run. He's waiting for me.\"\n\nI found I could stuff a spare pair of panties into my purse and still get it to close. \"Gotta go. Now.\"\n\n\"Text me a photo of his driver's licence, at least?\" she called after me as I dashed out the door.\n\nThat was, I thought, running back to the UCC, not a bad idea. I looked around inside, my head whipping back and forth, trying to see him. There!\n\nHe rose as I came to his table. \"16 minutes,\" he said, looking at the slim gold watch on his wrist. \"Not bad.\"\n\n\"I spent a minute looking for you here,\" I retorted, trying not to pant. \"It doesn't count. Oh, and I want to see your driver's licence.\"\n\n\"My licence.\" His voice was flat.\n\nI didn't flinch this time. \"Tony, you seem nice and I've agreed to go, but I don't really know you.\"\n\n\"Insurance?\"\n\n\"Call it that if you wish.\"\n\nHe pulled a thin wallet out of an inside pocket of his jacket, extracted his licence, held it out to me with two fingers. I laid it on the table, took a photo with my phone and texted it to Marcy. My phone chirped as I was handing Tony his licence. Her reply was just one emoji, one I'd never seen before, a crazy-happy phallic obscenity. I erased it before Tony could see it.\n\n+\n\nHe said not a word on the way to the parking lot, but carried my laptop, leaving me with my purse and flute. It wasn't the jeep today. It was a little grey sports car, a convertible. It was&hairsp; him I'd seen! Courteous as always, he opened the car door for me, held out his hand to help me in. I needed it; once I sat down, my bum felt like it was about six inches off the pavement. My skirt rode up my legs and I had to wiggle to pull it down.\n\n\"Thank you,\" I said as he climbed in behind the wheel. \"This is very nice.\"\n\nI knew very little about cars. This one was certainly very comfortable, real leather seats and everything. There was a leaping cat logo on the steering wheel. \"What is it?\"\n\n\"It's a Jaguar F-series,\" he replied. Looking at the clear sky through his window, he chuckled. \"Would you like me to put the roof down?\"\n\nI'd never ridden in a real convertible. I grinned in spite of myself. \n\nThe little car was sporty, I'll say that. And Tony was a very good driver. I was never even nervous, but he was pushing it, very fast, slipping into openings in traffic I didn't see until we were already in them. It was quieter than I had thought it would be, but was still too noisy to talk comfortably. The wind blew my hair all over the place, but it was incredibly sexy, something I have to say that every girl should try it at least once. I saw somebody I knew on the sidewalk and thought of waving, but had second thoughts and turned to smile at Tony instead.\n\nHe glanced at me out of the corner of his eye. \"How're you doing?\"\n\n\"Good! Great!\" \n\nI was, too. Mixed indignation and caution were giving way to excitement. How long that would last I didn't know, but it was enough for now.\n\nHe smiled and shifted gears, accelerated.\n\n\"Where are we going?\" I shouted.\n\n\"My farm,\" he replied. \"Just west of Watford.\" \n\n\"You're a farmer?\" I asked in surprise. I really knew so little about him.\n\n\"My Uncle Leo was a farmer &mdash; 45 acres, mainly sugar beets. There are a couple of old oil wells. This whole area was an oil mecca a century ago.\"\n\n\"And you live with him?\" This was the most conversation I'd had with him since we first met.\n\nHe was silent a moment, then, \"Leo died in a car crash four years ago. A drunk driver t-boned him.\"\n\n\"Oh. I'm sorry.\"\n\n\"It was quick, I guess.\"\n\nI tried to change the topic. \n\n\"What do you plan to do with your degree?\"\n\n\"Stephanie,\" he said, \"I'm just keeping my mind busy right now. I already have two degrees.\"\n\n\"Two?\"\n\nHe nodded. \"The mind's a muscle - stop exercising it and it gets weak. This is my first sortie into science. If I like it, I may go for a third.\"\n\nStill on old Highway 22, he slowed suddenly, signaled, turned south, turned again soon after onto a gravel road. A minute later there were stone gateposts and a laneway winding up a slight hill, behind some trees. A couple of buildings came into view, including a weathered barn and a stone farmhouse.\n\nHe slowed down, turned just outside the barn. The big doors were open and I saw the old jeep parked inside. He stopped, backed in slowly, turned off the engine and turned to me with a smile.\n\n\"Home. Such as it is.\" That was, I think, the first really happy smile I'd seen from him. He seemed more at ease, more relaxed here.\n\nAt one time the old barn must have smelled of horses and cattle and hard-earned hay. Now it smelled of cars and dust and memories. The car engine ticked once or twice as it began to cool.\n\nHe came around, opened my door, held out his hand. Again, it helped. I had to stretch to extract myself and my skirt rode up again, but his eyes were on something outside, not on my legs. Leaving the top down, he picked up my laptop and invited me to go ahead of him with a wave of his hand.\n\nThe house was obviously not new, but, the closer we got to it, the more I could see that it had been extensively renovated.\n\nUnder a broad porch, Tony unlocked the door and motioned me inside. He set the laptop down on a deacon's bench. \n\nThe house smelled clean and one worry went away. Given his habitual neatness, I had doubted it would be a dump, but it was nice to have that confirmed.\n\nHe led me through the house. The place was very neat, well-decorated, well-furnished. Whoever had renovated had done an excellent job. The handsome old original stone had mainly been left in place, but the ceilings were high and the house now centred on a large combined kitchen and living room. The kitchen appliances were new and clean and there was an island on the kitchen side, its top one huge chopping block. A circle of shiny pots and pans hung from hooks over the island. Two hallways led out of the room, one leading back to the door we'd just entered, the other to some doors, some open, some not. \n\nOne outside stone wall was missing. In its place, floor-to-ceiling windows let in a flood of happy light. Outside, past a wooden patio or deck, there was an in-ground swimming pool and a gazebo affair, something to sit in and hide from the summer sun. A velvety, sunlit vista of rolling farmland, fences and wood lots stretched out to almost forever. \n\n\"It's beautiful!\" I breathed.\n\n\"I'm glad you like it.\"\n\nThere were a lot of photos of firefighters and fire trucks on the walls, including photos of a younger Tony in uniform, alone or with other men. One large plaque affair over a stone fireplace featured a shiny chromed nozzle for a very large hose.\n\n\"You were a firefighter?\" Looking back, I had no idea what a firefighter looked like, and am surprised now that I should have been surprised.\n\n\"Long ago and far away. A tale for another time, Stephanie.\"\n\nA ginger cat appeared from behind a sofa, bumped his leg in greeting. He bent down, petted it. It wound about his ankles, its tail pointing straight up.\n\n\"I hope you like cats,\" he said. \"It's a deal-breaker. This is Pi; she owns the place.\"\n\n\"I like cats,\" I replied. I crouched down, put my hand out. Pi sniffed my fingers delicately, oozed under my palm. I looked at Tony. \"But I'm still not sure what the deal is.\"\n\nHe stood up. \"The deal, Stephanie, is that you do whatever pleases me until such time as either you or I decide it's time for you to go home.\" His voice was soft, but there wasn't much mercy in it. \"You came here knowing that, didn't you?\"\n\n\"Not in so many words, no.\"\n\n\"What did you think, then?\"\n\nI ducked. \"What is it that would please you right now?\" I asked. Cut to the chase.\n\n\"Do you cook?\"\n\nHad he brought me all this way just to make him dinner? \n\n\"I can. Some. Is that what would please you?\"\n\n\"Are you a good cook?\"\n\n\"Define 'good'.\"\n\n\"I'll cook. Is there anything you can't eat?\"\n\n\"No\" then, \"What should I do?\"\n\n\"Come with me.\"\n\nI followed him down the other hallway. A couple of open doorways revealed two bedrooms and a major bathroom. The latter was clearly new; the tub looked big enough to do lengths in. \n\nHe stopped in front of a door, opened it. The closet behind it was pretty much empty, just two garment bags full of something bulky and a few sturdy wooden hangers. The gentleness I'd sensed in him earlier had vanished; the old Tony was back.\n\n\"Put your clothes in here. When you've done that, come back to the kitchen.\"\n\nI stared at him. Yes, his 'invitation' had made it absolutely clear what he had expected when we got here. And, yes, it was equally clear that I knew what that was and that I'd agreed to it in advance, just by coming. But wasn't the man going to even pretend?\n\n\"I'll be in the kitchen,\" he repeated. \"Bring your flute.\"\n\nI supposed my expression must have clued him in.\n\n\"Or,\" he said, \"we can just call you a cab and send you home. It's your call.\" With that, he turned and walked down the hall towards the light, leaving me standing there. He paused, turned back to look at me. \"No pun intended.\"\n\nThis had escalated somehow into something wildly beyond my experience. The boys I knew didn't behave like this. A casual coffee, then maybe dinner or a movie, then... Step by step, everyone understood that.",
        "There was a door at the end of the hall, a full-length mirror mounted on it. I stared at myself in it, wondering how I'd gotten into this. \n\nWhatever 'this' really was. \n\nIf Tony had merely shown me around the place, taken me out to admire his flower gardens and graciously put me up as a guest for the weekend in return for my company, I would have understood it. If he'd tried to jump me the minute we got through the door, well, I'd been prepared for that and was pretty well anticipating winding up in his bed at some point anyway - my wardrobe was in my purse, right?\n\nBut just a bland 'leave your clothes in the closet and play your flute for me' had left me bewildered.\n\nEventually, the girl in the mirror shrugged with me. I'd come this far and my stiff-necked pride wasn't up for a cab just yet. I wasn't sure how it had come to this, but there weren't many options open.\n\nI took off my blouse and skirt, hung them carefully on a spare hanger in the closet, hung my purse on a second hanger. Inviting Tony after class had been an impulse move; my undies were nothing special. Well, he wasn't apparently going to be looking at them anyway.\n\nI stood there for a moment, reached back for the clasp of my bra. Undone, the bra started to slide. My upper arms caught it. The girl in the mirror stared back at me. What in hell had I been I thinking? \n\nI could still back out; I knew that. Prudent common sense arm-wrestled curious pride and left ruefully, nursing a sprained shoulder.\n\nMy arms came away from my body and the bra fell. I caught it, looped it over the hanger with my purse. Someday, some genius engineer designer goddess will invent a bra that doesn't leave a crease under your boobs, one with straps that don't cut into your shoulders. I rubbed the red marks with my hands, just like I did every night. But this wasn't every night, was it?\n\nAt least I'd shaved on Wednesday. I fumbled through the purse on its hook, pulled out my hairbrush and spent two minutes trying to repair the damage the car ride had left. My makeup had somehow survived.\n\nHair done, I looked at my panties, white cotton, so ordinary, blah. I started to push them down off my hips, but changed my mind. Not yet.&hairsp; Leaving them, I picked up my flute case, pulled back my shoulders and walked warily into the kitchen.\n\nTony was bent over the island, his back to me. A large chef's knife in his hand, he was dicing something on a chopping board. Bowls of this and that lay in front of him. Steam was rising from a pot on the stove and something in a frypan was beginning to sizzle.\n\n\"I thought I told you to leave your clothes in the closet?\" he said quietly.\n\nDid the man have eyes in the back of his head?\n\nIrate, mortified, I blushed from head to toe. I'd given in, come all this way, was standing there half-naked and he hadn't even bothered to look at the prize he'd won. Hey, boy! Desirable naked sexy girl over here! Hello?\n\nI spun around, stomped back down the hall. Bare feet on a flagstone floor made it a less thunderous stomp than I would have liked, but it was what I had.\n\nScarlet, I thumbed my panties off, hung them on a second hanger all by themselves, closed the door. I looked at myself in the mirror. \n\nI was pretty enough, the mirror showed that. I had the legs, the boobs, the bum, the blue eyes, the blonde hair; I'd been told that I could do very well in the peeler bars on Dundas Street. But that was a big No for me. Don't get me wrong; I'm proud of how I look and there's nothing shameful about anybody's body, but it just wasn't me. \n\nI swept my hair back, pulled my shoulders back. Yeah, solid. I took a deep breath. I could do this.\n\nWithout really looking at me, he motioned with the knife. \"You can sit over there,\" he said, indicating a tall stool in the middle of the floor, opposite him on the other side of the island. He continued to chop, his eyes on the knife. \n\nI felt my flush slowly return. No, not anger. Well, maybe. What in hell was wrong with the man?&hairsp; Here I was, starkers, and he was paying me no more attention than the damn-all he paid me in the lab. Was he a eunuch? Perversely, having been offended by his initial offer, I was now offended by his lack of attention - how dare&hairsp; he not perv out on my innocent, delectable nudity?\n\n\"Are you warm enough?\" he asked from out of nowhere. It was a quick blink of humanity. I wondered what was going through his mind.\n\n\"Warm enough, thank you. What would you like to hear?\" I asked. \"I'm afraid I didn't bring my music.\" \n\n\"You choose,\" he said. \"Brahms, Rossini, Debussy, Telemann &mdash; whatever you're comfortable with. Or improvise something. Something soft.\" At least he knew music, I thought.\n\n\"What are you making?\" I asked, stepping around the island past him. I went to the stool and sat down, crossing my legs, opened the case and assembled the instrument.\n\n\"'Saltimbocca di Pollo alla Romana'&hairsp;, just like Mama used to make.\" The Italian flowed off his tongue like liquid gold; even the name sounded delicious. \"Medallions of chicken and prosciutto ham rolled up and fried, with a pan sauce using white wine, shallots, capers and tomatoes. Green salad and some wild rice on the side.\"\n\nHis eyes flipped up to me, this time openly running over my body. Mama was suddenly somewhere else now. His stare started at my feet, ran up my legs, lingered over my belly and boobs, wound up with his eyes on mine. I shivered; there was no doubt in my mind that he saw me as a woman now.\n\n\"You're too pretty to sit like that. Uncross your legs.\"\n\nI thought I'd been blushing before... \n\nI did what he said, propped my feet on the cross-bars of the stool. His eyes now studied my sex.\n\n\"Play now. Please.\"\n\nI took a breath, began Con te partir\u00f2,&hairsp; 'Time to Say Goodbye'. It works well in solo and I knew it well enough.\n\nTony stopped his work for a moment, closed his eyes. A small smile of appreciation appeared on his face. He started his preparations again, flipped rolled chicken into the pan. As it started to sizzle, his eyes leisurely examined my nudity, his pleasure at what he saw clear to me.\n\nThe song ending, I moved on to a Bach partita, something I'd learned a long time ago. He kept one eye on the chicken, one eye on me. I hesitated once or twice, found my way. His smile grew and my confidence with it.\n\nTony paused, opened a bottle of white wine. He sniffed the cork, nodded to himself in approval and poured two glasses. He came around the island, moved a second stool to rest beside me, put the glass on it. I was surprised when he held the cork beneath my nose. I stopped playing.\n\n\"What am I supposed to be smelling?\"\n\n\"A lesson,\" he said. \"If the cork smells good, the wine will probably taste good, too. The cork should smell of wine, maybe of wood, or of nothing at all. If it smells musty or mouldy or like wet paper, it's been 'corked' meaning the wine's not fit to drink.\"\n\nHe took the cork away, nodded at the wine on the stool.\n\n\"If you wish. But please keep playing. It's very pleasant.\"\n\nI took a sip of bottled sunshine, felt a different flush on my skin as I resumed the partita. It was one of my favourites. I closed my eyes and concentrated on it. I faltered for a second when Tony's footsteps told me that, instead of going directly back to his cooking, he was circling me. I could feel his eyes on me. Once around, then twice, slower the second time. Well, he couldn't see more than he already had; I kept playing. In a moment, the cooking noises started again, but I could still feel his eyes.\n\nA few minutes later, I watched Tony put lids on the pots, take the salad to the table. Now he came around to my side of the island, turned a chair and sat down to watch me play. I'd performed before, even a couple of concerts; I was used to butterfly tummy and stage fright. This was entirely different. The man was unspeakably polite; he hadn't touched me, hadn't done anything but look and listen appreciatively, but I was unnerved.\n\nI finished playing a piece, paused for a sip of wine. He smiled warmly. \"Thank you,\" he said. \"You're very good. Would you like to play more or would you prefer to eat now? I can hold dinner a few minutes.\"\n\n\"Eat?\" I echoed, then pushed past unstated boundaries. \"And then what?\"\n\n\"Whatever appeals to me at the time, Stephanie. Maybe even your lab report.\"\n\n\"That's it?\" He wasn't ignoring me now; his eyes were openly examining my breasts, his approval obvious. The signals were totally mixed.\n\n\"Are you having such a terrible time, Stephanie?\" His eyes twinkled as he lifted them to mine. \"I am, let me assure you, having a very pleasant time. You play well and are very, very pretty. I've passed worse evenings.\"\n\n\"And then?\"\n\nHe looked at me with a slight smile. \n\n\"We'll think of something,\" he said.\n\n+\n\nThe chicken was excellent. I could see why he had cooked himself. Escoffier could take lessons.\n\n\"This is delicious!\" I exclaimed. \"Who taught you?\"\n\n\"Mama, like I said.\" He grinned for a moment. \"The prototypical Italian mama, Stephanie. About four feet in every direction and if you didn't ask for a third helping, it was a mortal insult.\"\n\nI didn't ask for thirds, but I did ask for seconds.\n\nHe took off his jacket when we did the dishes afterwards. Finished, he held out his hand. \"Come,\" he said. \"Let me show you the best light of the day.\"\n\nHis hand in mine was firm, strong, warm from the dishwater. He led me outside onto the deck. There were a number of wicker chairs and he arranged two of them, held one for me to sit down. The wickerwork felt odd on my bare bum, but it wasn't uncomfortable. I could see that bareness would probably bring me a host of new sensations, of experiences.\n\nI started to say something, but he held up his hand. I couldn't make out what he meant me to listen for. Then I realized - it was nothing. It was silent, far quieter than I was used to in my city world. No car noises, no distant music, nobody talking, no sirens. It was very pleasant. I settled into the chair, looked at the scenery, felt my mood improve still more. \n\nHe looked at his watch. \n\n\"It's about time,\" he said softly. He pointed to a gap between two small stands of trees in the middle distance. \"Watch there.\"\n\nMy jaw dropped just a little a few minutes later when four whitetail deer, two does and two fawns, emerged from one woodlot and calmly crossed into the other.\n\nI don't think I'd ever seen deer in the wild before. When I turned to him, he was smiling. \"They're pretty predictable,\" he said. \"It's coming onto evening. They're on their way to lay up for the night.\"\n\nWe sat for a few more minutes. There was more to this man than it first appeared. \n\nThere was a dark shape high up in the sky, a bird soaring, its wings not moving. I pointed at it. \"What's that?\"\n\nHe looked up. \"Too far away to be sure, but I'd guess a red-tailed hawk.\" He grinned. \"Good neighbours for most farmers. They keep the mice down.\"\n\nI thought about that, then, \"May I ask you a question?\"\n\nHe nodded.\n\n\"You were a firefighter. What brought you here?\"\n\nI could see his face tighten. \n\n\"I'm sorry,\" I said quickly. \"You don't...\"\n\n\"Firemen work long hours. My wife got fed up and left me, moved in with my nine-to-five best friend.\"\n\n\"Oh,\" I said. \"I'm sorry. That must have hurt.\" It was a clue to the man. \n\n\"I couldn't avoid seeing them and it seemed like a good time to move on. There was an opportunity fighting forest fires out west. That's very different than in a city, but I had some solid training and experience under my belt and they gave me a chance. It was outdoors, which I'd always liked. It was a good time. In the off-season, we did a lot of controlled burns, which was a lot more fun than inspecting restaurant kitchens for grease build-up.\"\n\nHis eyes looked at something I couldn't see, something very far away, maybe just a memory. \"It was a solid team, good guys, people you could depend on. We spent a lot of time moving around by helicopter. \n\n\"There's a saying, 'There are old pilots and there are bold pilots, but there are no old, bold pilots'. The pilot who flew us most often in fire season must have coined that phrase, 'cause Micky firmly intended to die of old age. He wasn't cowardly, just prudent. He put his ass on the line more than once, pushing the envelope to extract guys who'd been cut off by shifting winds. The team treasured him, trusted him with our lives.\n\n\"But sometimes the magic works and sometimes it doesn't. There was a massive fire, a firestorm. Know what that is?\"\n\n\"Not really.\"\n\n\"Heat from any fire rises. In a really big storm, the heat is incredible and it rises very quickly. Air to feed the flames has to come from somewhere. It gets sucked in from every direction, close to ground level, sometimes at almost hurricane speeds. It's scary as all hell.\n\n\"In rugged country, mountains especially, it produces all kinds of unpredictable gusts, updrafts, downdrafts. Micky was a damned good pilot, but there's always luck in flying and his ran out. A gust shifted the chopper sideways, no way to see it coming. The rotor clipped a rock and that was all she wrote.\"\n\nMy hand came up, gently touched the scars on his face. Another clue to his distance.\n\nHe shrugged. \"I lived, but I'd fought my last fire. There was a pension of sorts and a bit of insurance, but I had no place to go, nothing to do once I got there and nobody waiting for me in any case.\"\n\nI nodded. Cut loose from a society he cherished, I thought. No wonder... \n\n\"Leo needed company, I guess, and invited me to come back east again. I started going to classes in town to keep myself busy; the alternative was to learn everything I never wanted to know about sugar beets. \n\n\"Then one day the cops were waiting in the yard when I got home. A month later, Leo's lawyer called me about the will and it turned out that I owned the farm and a bunch of other stuff. Most of the land's leased out now to neighbours and the farm equipment's been sold. The 'other stuff' is doing well; farmers aren't stupid. He had investments, owned a bar and shares in a couple of stores. It's enough that I can pretty much do what pleases me.\"\n\n\"Hence me,\" I said.\n\n\"For a start,\" he said. He surprised me by reaching out and running a fingertip tenderly over the side of my face.\n\n\"How are you doing?\" he asked gently.\n\n\"Good. Good, thank you,\" I said. I thought about it for a second. What had been intended as a routine politeness was actually true. I wondered about that.\n\n\"Although,\" I admitted with a wry smile, \"I'll confess to still feeling a bit under-dressed.\" \n\n\"'Under-dressed'? Come with me.\" \n\nHe again held my hand as we went back into the house. He had me stand in front of a floor-length mirror.\n\n\"Wait here a moment,\" he said and stepped into his bedroom. I spent the time examining the other girl, the one in the mirror. She'd started to seem like a stranger to me, somebody I couldn't predict or understand. To my eyes now, she looked almost brazen. Yesterday she'd somebody fairly normal; today...?\n\nToday she was stark-naked in a handsome farmhouse with a man she barely knew. And feeling fairly good about it. It was that I was still struggling to wrap my head around.\n\n\"Close your eyes,\" he said from behind me, his voice soft.\n\nHis hands slipped over my shoulders, my neck. Something cool and heavy coiled around my throat.\n\n\"How's that?\" he asked.\n\nI opened my eyes to see a heavy necklace, wider than my thumb, complex in its design, with shiny coils and links and pieces intertwined and woven about each other.\n\nThis was no mass-produced big box store trinket. It was elegant, impressive, something you might see worn by a famous face on a gala red carpet. I had certainly never seen anything like it in person. \n\n\"Don't wear it in the pool,\" he said. \"Chlorine and silver don't mix.\"\n\nMy eyes wide, my whole attention was locked on its feel under my fingertips, the way it felt on my neck. His hands came down softly on my shoulders. At his touch, I raised my eyes to his before looking again at myself in the mirror.\n\nI was stunning. I was amazed at how good it looked, how good it made me&hairsp; look.\n\n\"Thank you,\" I whispered. \"It's very pretty, Tony. But, no. It's too much.\"\n\nHis hands slipped down, clasped me around my waist. He pulled me back against him into a hug. It was the first time he'd touched me in anything but the most casual way. Now that it had finally happened, I found it comforting somehow. I was beginning to finally see the man's human core.\n\n\"Really?\" He smiled, a real smile. \n\nMy fingers kept tracing the coils of silver.\n\n\"Where is it from?\" I asked.\n\n\"Dubai, years ago. I was on vacation. The pattern is called Persian Chainmail.\n\n\"I bought it thinking I might have a use for it someday. It turns out I did, just not right away. So, tonight...? Stephanie, I couldn't afford to give you a fair price for the way your music and your beauty have pleased me. You'll have to settle for the necklace.\"\n\nIt was time to put an end to that. I turned to look at him in the mirror, spoke softly but firmly. \"Tony, forgive me for putting it this way, but Stephanie's not for sale. I'm a big girl; I knew what weekend was about before I got into your car, but I didn't come here for this.\" My fingertip swept over the necklace links. \"I can't and I won't.\n\n\"I'll stay without it, Tony, but if you insist on my accepting it, then please call me that cab.\"\n\nHis eyes changed. For the first time, he seemed just a little uncertain. And, maybe, a little bit impressed. Without moving his hands, his thumbs rose, swept softly over my skin.\n\n\"I'm sorry, Stephanie. I didn't mean to imply you could be bought. But you are an exceptionally lovely young woman and... how to put this?\"\n\nHe paused, closed his eyes for a second in thought. One hand left my waist briefly, ran over the silver links on my skin. I found myself smiling at that touch.\n\n\"This looks good on you. It looks much better on you than it does in my drawer.\"\n\n\"It's too much,\" I repeated.\n\nThere was a faint smile on his face. \"Too much for me to have been able to admire this all evening?\" he said, pointing at my bareness in the mirror. His hand returned to my waist. He was smiling now.\n\n\"Or too much for...\"\n\nI gasped slightly in surprise as his hands rose, swept lightly over my breasts.\n\n\"...this?\"\n\nHis hands fell again to my waist, fingers linked together.\n\nI was shocked to realize how much I had welcomed that touch. He'd called me pretty, but this had been the first time he'd openly acknowledged me sexually. At least now we were close to familiar ground, to what I thought of as a normal boy-girl interaction, to a situation I could understand. \n\nHis hands moved down to my hips, turned me to face him. I found I was enjoying his touch - grizzly bear strength inside mitts of softest mink. My face rose to his.\n\nHis smile had become gentle. It was a warmer smile than I'd seen on him before. \n\n\"You're an enchantingly lovely young woman, Stephanie, and you're even more so when you wear this. That by itself pleases me. There's more, though. There's real pleasure in your eyes when you look at yourself wearing it and that pleases me still more.\n\n\"So, how about this, Stephanie? How about you wear it so long as you are here?\"\n\nI turned back to the mirror and admired the sight. \n\nMy nipples were still tingling from his light touch. I found myself what actually making love to him would feel like?\n\nLooking back, I suppose it was then that I realized that I was comfortable being naked in front of him. This evening hadn't been anything like being with my former boyfriends, with whom sex had been half-clad and time-limited, in back seats or hoping nobody would take this jogging path for a few minutes. If this was seduction, I was finding to my surprise that I rather liked it.",
        "And, almost but not quite the same thing, while my body being on constant display simply for the gratification of a clothed man didn't mesh with my own strong and independent self-image, I found myself getting more comfortable with that, too. If this was Tony's kink, it wasn't that hard to accept.\n\nAs to the necklace, why not? I was young and pretty; the necklace was superb and Tony obviously enjoyed looking at me wearing it. \n\nI turned back to him.\n\n\"All right,\" I said, softly. \"Until I go. It's beautiful. Thank you.\"\n\n\"You're welcome,\" he said.\n\n\"On one condition,\" I said. \"No, two.\"\n\nHis eyebrows rose, questioning.\n\n\"The first is that I get to wear it watching the sunset. Right now.\" I giggled slightly. \"If that pleases you, sir.\"\n\nHe smiled. \"I think I can live with that, ma'am.\"\n\nThis time, it was me leading him outside. The sunset was just starting and looked as if it would be spectacular. He settled into a chair; I remained standing beside him, enjoying the colours in front of us, feeling the unaccustomed flow of warm air over my skin. It felt strange, but something I could definitely grow to like.\n\n\"What's the second condition?\" he asked.\n\n\"That you at least kiss me, Tony.\" \n\nHe smiled again. His hand moved to the back of my knee, slid leisurely up my thigh, stopped with his fingers on my inner thigh, not quite touching my sex, his thumb outside. \"I think I can live with that, too.\"\n\nI felt a tightness in my stomach, a weight in my loins.\n\nHis hand on my inner thigh began to move just slightly. His fingers slid over the soft skin, a fraction of an inch up and down. He hadn't moved otherwise and was stopping just short of my sex, but I felt my nipples grow stiff in response. This was familiar territory, albeit with a man who really seemed to know what he was doing. I took a deep breath, tried not to shiver.\n\n\"Tony?\" I whispered. \"You promised...\"\n\n\"In a minute,\" he said softly. \"Right now, enjoy yourself as much as I am.\"\n\nI was hardly innocent, but I'd never experienced anything like this before. It wasn't just his soft touch, so arousing, yet so far from the instinctive targets of every man I'd ever been with. I looked to one side, over him, saw our reflection in a window, outlined against half a sky of pinks and oranges and reds. Standing tall, my shoulders back and breasts high, blonde hair shifting in the breeze, dressed only in handworked silver, I was, in all humility, just spectacular. \n\nAnd his hand, his patient, kind, gentle, tantalizing hand, was kindling something deep within me, something primitive, demanding, hungry.\n\n\"Tony...\"\n\n\"Patience, Stephanie. You'll get the kiss you want. In the meantime, I'm enjoying myself.\"\n\nPatience? My stomach was so tight that I was starting to find it hard to breathe. My nipples were hard as rocks; I was pretty sure he was at any second going to find evidence on his fingers of how excited he was making me.\n\nI brushed my hand over his hair, tried to...\n\nTried to what? I couldn't really remember. I felt his thumb slip between my legs at last. His hand staying where it was, his thumb lifted a fraction of an inch. I hissed as it grazed my lower lips, sliding back and forth along my wetness.\n\nThere could be no doubt that he knew now. How could he not?\n\n\"Tony,\" I moaned, deep in my throat, \n\n\"Hush, girl,\" he said, very softly. \"I'm enjoying myself.\" His thumb continued to sweep the length of my sex, over and along and between my lips. Then, pausing, it found my entrance, slipped inside, swirling, stroking, probing.\n\nHoneyed fire exploded, applauding flames erupted, blazed across every part of me. Consumed by it, I sagged, would have fallen had he not pulled me into his lap.\n\nI felt his hand on my jaw, gently lifting my face towards his. His lips finally landed on mine, his tongue probed my mouth, swept over my teeth.\n\nHe pulled away from the kiss. Warm in the fading light, his hands continued to stroke my body. I shivered as the orgasm slowly faded.\n\n\"How's the girl?\" he whispered.\n\nI could only whisper his name, over and over.\n\nHe laughed, pulled me in for a hug before rising, holding me in his arms. \n\nIn his bedroom, he gently placed me on his bed and started shedding his own clothes. For the first time I saw him as he had been seeing me. Tanned, lithe, his body matched his face, desirable in every possible way. Grey hair on his chest or not, it was not an old man's body, sagging and worn. This was muscular, firm, solid. I wanted my hands on it, wanted it for my own. Still feeling ripples within me, I reached up for him, reached for the hard, swaying cock in front of me.\n\nSmiling, he knelt beside me on the bed. His hands swept over me now, cupped one breast, then the other, drifted over my abdomen. I shivered as a tender finger probed lower. I laughed, seized his shaft with my hand, pulled him down towards me. \n\nThere was no need for pretense now, no need for theatrics. We were beyond words, beyond foreplay, beyond any games. I gasped as his blunt, spongy helmet found my opening without searching. It paused, then entered, filling me, stretching me to my limit. Tony's eyes were on mine as he slipped in, further and deeper. It seemed to take forever and I moaned a little, frantically wanting him to be fully in, desperately wishing this endless penetration to go on forever. Orgasmic echoes shivered and cried softly in my body's inner darkness.\n\nFully seated at last, he rested his weight on one elbow and stroked my face with his other hand. It moved down over my neck, lingering over the necklace, then traced its way further down, clasped a breast. He squeezed it, smiling, and I nearly came again at that touch.\n\n\"You are so beautiful,\" he said. \"I've always wanted to say that.\"\n\nStrong fingers shaped and toyed with it. I hovered, just on the brink.\n\n\"From the first time we met,\" he said.\n\nHis fingers pinched my nipple, gently, fondly. I moaned, loudly this time, so very close.\n\n\"I wish I'd said it sooner,\" he said. \"I couldn't. I don't know why. Maybe you were too pretty.\"\n\nHe brought his hand away, slid it under my other shoulder. Resting on both elbows now, his hips began to move his length in and out of me, the rim of his crown sliding over and across and along my eager, welcoming walls, our every movement shifting my hooded button. I did my best to match him, lifting my hips as he moved deeper, putting in a little sideshift each time he withdrew.\n\nI felt another boiling heat launch itself, heard myself cry out, saw his smile as he continued, on and on and on. Abandoning gentleness now, his body started to pound onto me and never had I been so happy for the weight.\n\nAnd a third, heavier, fuller. I gave up trying to not to shout in my happiness. He smiled again, knowing, then I saw his eyes close as his cock began to throb and pulse within me. \n\nHe sagged, breathing hard. After a minute or two, we rolled to one side, him still buried in me.\n\nI stroked his head with my hand, heard his heart slow down, felt the glow of the evening on his skin.\n\n\"Have I pleased you, oh mysterious Mr. Tony?\" \n\nI felt his hand gently stroke over my waist and hip, asked him again. \"Was it enough?\"\n\nStrong arms, now in full country darkness, pulled me in for a hug.\n\n\"For now,\" I heard him whisper. \"For now.\"\n\n<center>+\n\n Thanks for reading. If you enjoyed this tale, please remember to vote or comment.\n\n+&hairsp;&hairsp; +&hairsp;&hairsp; +&hairsp;&hairsp; +&hairsp;&hairsp; +\n\nOh, for those who enjoyed Chapter 1, a sample of Chapter 2:</center>\n\n\"Tony,\" I said, choosing my words carefully, \"What is it that you're expecting of me?\" \n\nHe smiled, brushed my cheek with his hand. \n\n\"Nothing you don't know. Your presence pleases me, Stephanie. You are lovely to see and watch; your being in my house is a joy just for that. Your smiles, your company, your freshness and charm are a bonus.\" \n\nMy breath caught as his hand cupped my breast, his thumb sweeping gently over my nipple. I felt it harden, felt my desire come surging back, saw his awareness of it in his grey eyes.\n\nHis thumb again traced my nipple, taut now with its own needs. \"There are additional bonuses, of course,\" he smiled.\n\n\"You are welcome here as often as you can make it, Stephanie. All I ask is that you replace your clothes with your necklace and provide me sweet music on occasion. Asides from that, we &mdash; you &mdash; can do whatever you want while you are here, but I get to watch you as you are.\" \n\n\"Whatever I want?\" I echoed.\n\nHis smile could be so sweet at times. "
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "cmnf",
        "nudity",
        "sugar daddy",
        "university",
        "students",
        "flute",
        "naked musician"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-01"
}