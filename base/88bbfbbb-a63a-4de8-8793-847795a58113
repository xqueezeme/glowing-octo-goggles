{
    "title": "Succubus Summoning 110",
    "pages": [
        "\n/**\nAUTHOR'S NOTE\nThis is a continuation of the Succubus Summoning series that begins with \"Succubus Summoning 101\"\n*/\n\n\nHell was surprisingly beautiful sometimes, Phil thought as he stared out of the window.  The strange planetary bodies that orbited this realm were sinking down below the horizon, taking the light with them.  The sky darkened from a powder-puff pink to a more sensual shade that brought to mind the secrets hidden between a woman's thighs.\n\nIn the world of the succubi even the colour of the sky could conjure up lustful thoughts, Phil thought.\n\nSuccubi were sex daemons.  They drained the life force of men through sexual intercourse.  Phil and Jake had been thinking too much of the 'sexual intercourse' part and not enough of the 'drain life force until dead' part when they'd decided to summon a pair of succubi for some 'fun'.\n\nIt was pure stupidity.  That level of summoning was way beyond the abilities of a couple of mediocre students at Wargsnouts College for Warlocks and they'd paid the price.  Jake was dead and Phil was imprisoned in Hell, a plaything for the demons.\n\n\"Why so glum, little fledgling?\" Rosa asked.  She was standing by the door next to Verd\u00e9.  \"Do you want a fuck?\"\n\nAs always they both looked completely gorgeous.  They had the faces and bodies of the perfect cheerleaders all the boys -- and probably their fathers too -- wanted to fuck.  Their horns, tails and wings didn't detract from that at all.  They looked more like the cute little monster girls of Japanese anime than nasty threatening demons.\n\nThese cute little monster girls were going to suck out all his life and leave behind a shrivelled husk, Phil reminded himself.\n\n\"What do you want?\" Phil asked.\n\nIt was a pointless question.  They wanted to fuck him and suck out more of his life.  That was all they ever wanted.\n\nThe worst part was Phil's body wanted it too.  His cock was already hard and erect.  It twitched in eagerness at the thought of once again being sheathed in their silken pussies.\n\nRosa saw his arousal and stepped forward.  She fondled the large globes of her breasts and licked her full red lips.\n\nHer expression of lustful desire abruptly changed to annoyance as she was yanked back by the tail.  A girl pushed her way between Rosa and Verd\u00e9 and stood before Phil.  It was the same girl Phil had seen outside N\u00ffte's room.\n\nN\u00ffte.  That was a memory Phil would rather block out.\n\nThe girl's vivid blue hair was short and stood up in spikes.  She was wearing the same cornflower blue dress he'd seen her in before.  Dark blue horns curled down behind her ears.  She looked coyly at Phil with eyes the colour of blood-red rubies. \n\n\"We brought you a visitor,\" Verd\u00e9 said.  \"This is C\u03adr\u03bcl\u0259a.\"\n\n\"Seh-roo-lee-ah,\" Phil repeated.  It wasn't exact, but it was as close as he could get to the alien syllables Verd\u00e9 had uttered.\n\n\"She wants to play with you,\" Verd\u00e9 added.\n\nC\u03adr\u03bcl\u0259a smiled shyly.\n\nPlay?  What did they mean?\n\nC\u03adr\u03bcl\u0259a was clearly a succubus, but she also looked quite young.  Well, very young.  Verd\u00e9 had a hand on each of C\u03adr\u03bcl\u0259a's shoulders and seemed to regard her like a younger sister.\n\nDid succubi have younger sisters?  Did they have childhoods?\n\nPhil didn't know.\n\nLooking at the three succubus's faces Phil noticed something.  Verd\u00e9's long green hair was matched by her glittering emerald eyes.  If he remembered correctly N\u00ffte had jet-black hair and eyes and Nurse Honey had white eyes and blonde hair so fair it was almost white.\n\nRosa and C\u03adr\u03bcl\u0259a were different.  Rosa had a short red bob, but her eyes were icy blue.  C\u03adr\u03bcl\u0259a had vivid blue hair, but her eyes were deep red in colour.  Phil looked back and forth from one face to the other.\n\n\"We swapped,\" C\u03adr\u03bcl\u0259a said, smiling broadly.  \"Rosa scared me with her old eyes so I switched them with mine.\"\n\nPhil looked quizzically at Rosa.\n\n\"We don't like to talk about it,\" Rosa replied, her voice icy.\n\n\"Let's go and play,\" C\u03adr\u03bcl\u0259a said.  She turned on the spot and danced out of the room.  Her little blue demon's tail bobbed up and down jauntily behind her.\n\nPhil was still a little confused.  He looked to Rosa and Verd\u00e9 for guidance.\n\n\"Come on fledgling,\" Verd\u00e9 said, pulling him off the bed.  \"Little C\u03adr\u03bcl\u0259a wants to play.\"\n\nShe put an arm around his waist and escorted him out of the bedroom.  Her body was a little more tense than usual and she hugged him a little tighter.  When Phil looked over at her face he thought he could see glimpses of the depths she normally kept hidden.\n\nAhead of them the young succubus was skipping down the corridor, her tail bouncing excitedly behind her.\n\n\"What do you mean by play?\" Phil asked.\n\n\"She wants to take her turn,\" Verd\u00e9 answered.\n\nPhil wasn't sure he liked the connotations of that.  C\u03adr\u03bcl\u0259a looked awfully young.  She turned back and beckoned them on with an eager smile.\n\n\"Um, she looks a bit\u2026 um\u2026 young,\" Phil said.\n\n\"Of course,\" Verd\u00e9 smiled.  \"Succubi need to be able to satisfy each and every desire.\"\n\nPhil suddenly felt queasy.\n\nRosa burst into laughter.  \"A bit young,\" she snorted, before laughing again.  \"She's older than both Verd\u00e9 and I, and maybe even older than N\u00ffte.\"\n\n\"C\u03adr\u03bcl\u0259a is\u2026 complex,\" Verde explained.  \"She's not as she appears.\"\n\nPhil looked at C\u03adr\u03bcl\u0259a.  That might be, but he really wasn't comfortable with the thought of 'playing' with someone that looked like they could be his kid sister.\n\nThey followed C\u03adr\u03bcl\u0259a up into an area of the castle Phil hadn't visited before.  Rosa and Verd\u00e9 were uncharacteristically quiet.  Phil didn't think he'd ever been in their company for this long without one of them trying to grope or fondle him.\n\nThe character of the castle changed again.  Large murals full of bright primary colours and simple block shapes adorned the walls.  They looked like something a child would paint.  Phil saw pictures of houses with stick figure dad, mum, brothers, sisters and pets.  He saw bright green farms with white fluffy clouds to represent sheep.  He saw brilliant blue seas and vivid orange beaches.\n\nThe murals showed no respect for boundaries.  They leapt from the walls onto the floor and ceiling with bright swathes of colour.  The rainbow splashes jumped in and out of the frames of existing paintings.\n\nThe style of the murals wasn't consistent.  Often they'd begin with simple bright splashes of colour, as if painted by an exuberant child, but then they gradually grew more and more complex until Phil was looking at sections that could have been painted by a grand master.  The styles also overlapped.  Phil saw a pony rendered with almost photographic quality appear in a farmyard full of cartoon animals.  A simplistic stick figure was a participant in an elaborate bacchanalian orgy.\n\nThe innocence of the childlike murals was marred by occasional touches of cruelty and brutality.  In the bright blue ocean a stick figure swimmer was being chased by an oversized shark fin.  In the farmyard scene a cartoon of a sheep was savaging the cartoon of a dog.\n\nOr were his eyes playing tricks on him?\n\nThe swimmer was alone on the ocean, smiling beneath a bright yellow sun.  The cartoon dog sat next to the cartoon sheep in perfect harmony.\n\nYeah, just his eyes playing\u2026\n\nThe pictures changed again.\n\nThe swimmer was gone.  A round circle with two crosses for eyes floated in a splash of vivid red, surrounded by severed body parts.  The cartoon sheep was tearing out the cartoon entrails of the cartoon dog.\n\nPhil's hairs pricked up and gooseflesh rose on his arms.\n\nIn the upstairs window of the family house lurked a dark shape.  Phil felt a powerful rush of fear, as if ice splinters were being driven under his skin with a hammer.\n\nSomething terrible was taking place in that room, but he couldn't quite see.  If only he could look a little\u2026\n\nVerd\u00e9 put her hands on either side of his face and turned his head until he was staring directly into her bright green eyes.\n\n\"Don't spend too long staring at C\u03adr\u03bcl\u0259a's pictures,\" Verd\u00e9 said.  \"You might find yourself becoming part of them.\"\n\nPhil blinked and then shuddered.  He kept his eyes straight ahead.  C\u03adr\u03bcl\u0259a was dancing down the corridor with innocent abandon.  What was she?\n\nThe corridor terminated in a baby-blue wooden door.  Fluffy white clouds were painted onto the panels.\n\nVerd\u00e9 stopped.  \"These are C\u03adr\u03bcl\u0259a's chambers.  We cannot enter without her permission.\"\n\nVerd\u00e9 stared at Phil.  Once more her face swam with strange emotions.  Again Phil thought he could see down to the graceful leviathans turning in her depths.\n\nHe didn't get a chance to look for long as she suddenly wrapped her arms and wings around him and pulled him close to her in a tight embrace.  Her soft lips met his and he melted in her arms under the kiss.\n\nPhil's mind sailed off on a sensual cloud.  Her erotic aura enveloped him completely.  His blood sang through his veins.  Her arms were around him.  Her wings were stretched around his back.  Her breasts were pressed against his chest.  Her lips, those soft luscious lips, were crushed against his.\n\nPhil was submerged completely beneath her sensuality.  He drowned.\n\nShe ended the kiss and finally he was able to come back up for air.  Phil's knees trembled like rubber bands.  The last time she'd been this intense was when she'd taken his virginity.\n\nVerd\u00e9 turned her back on him and walked away down the corridor without a backwards glance.  Still reeling from the kiss, Phil watched her go with a stunned expression.\n\n\"Be very careful with C\u03adr\u03bcl\u0259a,\" Rosa whispered in his ear.  \"Her mind has\u2026 flaws.\"\n\nShe lightly kissed him on the lips before following Verd\u00e9 down the corridor.  Phil felt totally confused.\n\nA hand grabbed his and pulled.  Phil turned and looked down into the impish face of C\u03adr\u03bcl\u0259a.\n\n\"Come on,\" she said.  \"Come and play with me.\"\n\nShe dragged Phil through the door and into a small hallway lined with simple wooden doors.\n\n\"Now where shall we play,\" C\u03adr\u03bcl\u0259a said, her face pursed in concentration.\n\nShe opened a door onto a child's bedroom.  A gigantic bed was covered in giant, overstuffed toys.  Phil's discomfort grew.  This was wrong on every single level.\n\n\"Too sissy,\" C\u03adr\u03bcl\u0259a said, slamming the door shut.\n\n\"How old are you?\" Phil asked, finally plucking up courage to ask the question.\n\n\"461019,\" C\u03adr\u03bcl\u0259a answered.  \"Seconds,\" she added as she skipped from door to door.\n\nShe paused and put a thoughtful finger on her chin.\n\n\"Or is it centuries.  I always get those two muddled up.  Never mind\"\n\nShe pulled open another door.  Phil was surprised to see bright sunshine pour into the hallway.  On the other side was a pretty little suburban garden with a small wooden swing.\n\nOutside?  But that wasn't possible.  They were somewhere near the middle of the castle.\n\nAnd it was night.\n\n\"Too bright,\" C\u03adr\u03bcl\u0259a said, slamming the door shut.\n\nShe went onto the next door.\n\n\"Ah, this is the room.\"\n\nShe grabbed Phil's hand and excitedly pulled him through.  The room beyond looked like a cross between a hidden grotto and something out of the Arabian Nights.  A large round bed hung with delicate silks took up most of the space.  The silk hangings stretched around the room, forming complex curtains and layers on the walls.  Light came from bright phosphorescent blue crystals in tall metal stands.  In front of the bed was a small, perfectly circular pool.  The water glowed with the same phosphorescent blue as the crystals.\n\n\"Perfect,\" C\u03adr\u03bcl\u0259a said.  She jumped up and sat cross-legged on the bed.  She smiled at Phil while her tail wagged up and down.\n\nPhil stood awkwardly by the door.  He didn't feel comfortable with this at all.\n\n\"What are you waiting for?\" C\u03adr\u03bcl\u0259a asked.  \"Come over and fuck me hard, Daddy!\"\n\nPhil blanched.  His stomach did a greasy flip.\n\n\"No,\" he said.\n\nHe couldn't do this, even if she really was centuries old.\n\nFor a brief instant he thought he saw that centuries old wisdom flash in her red eyes, but it was just an instant and then the girl returned.  Her red eyes wobbled and filled with moisture.\n\n\"Why?\" C\u03adr\u03bcl\u0259a said.  \"Aren't you my master?  Don't you want me?\"\n\n\"I can't,\" Phil said.\n\nThe girl departed again and Phil saw something far far older appear behind her red eyes.  A facet of the true C\u03adr\u03bcl\u0259a, he realised, and not the girl she was currently pretending to be.\n\n\"You feel no attraction to this form,\" the girl with the ancient eyes said.  \"It's too immature.\"\n\nPhil nodded.\n\nThe girl returned and smiled brightly.  \"But that's easy to fix,\" she said, brimming with excitement.\n\nShe jumped off the bed and suddenly twirled with the grace of a dancer.  She pirouetted faster and faster, becoming a living whirlwind.  Her hair shook out and became longer.  Her silk dress became a series of veils spinning around a form that shimmered as insubstantially as mist.  The air crackled with energy.\n\nC\u03adr\u03bcl\u0259a slowed down, came to a stop.\n\n\"Is this better?\" she asked.\n\nThe woman before Phil couldn't have been a day younger than ninety.  She had long white hair that flowed down past her waist.  Her face was a mass of leathery old wrinkles.  Her back was stooped.  Most of her teeth were missing and the ones remaining were cracked and yellowed.\n\nPhil backed away in shock.\n\n\"I went too far didn't I?\" C\u03adr\u03bcl\u0259a asked.\n\nPhil nodded numbly, still trying to take in the strange transformation he'd just witnessed.\n\nC\u03adr\u03bcl\u0259a became a crackling blue whirlwind again.\n\n\"Ah, this is right,\" she said.\n\nIt didn't sound right.  The voice was deeper, masculine even.  She sounded suspiciously like a he.\n\nShe also looked suspiciously like a he.\n\nThe light blue silk dress had become a Prussian blue uniform with gold buttons down a flat chest.  Her dark blue hair was cropped short to her scalp.  An immaculate moustache adorned her upper lip.\n\n\"Um,\" Phil started.\n\nHe didn't get a chance to finish before C\u03adr\u03bcl\u0259a swept him up in his/her arms and whirled him around the rim of the pool in an energetic waltz.  If Phil still had any doubts remaining as to his role in this dance, they were answered by C\u03adr\u03bcl\u0259a twirling him out like a top and then bending him back over his/her knee like the blushing heroine of a fifties romance.\n\n\"Romance burns like fire in my veins,\" C\u03adr\u03bcl\u0259a said.  He/She pursed their lips and bent down to administer a passionate kiss.\n\nPhil waved his arms wildly, but was unable to prevent C\u03adr\u03bcl\u0259a's lips from meeting his.\n\nThe kiss was a little\u2026 bristly.\n\nMercifully, it was also short.\n\nC\u03adr\u03bcl\u0259a sensed his reluctance and looked down, confusion in his/her red eyes.  He/She dropped him and thoughtfully rubbed his/her chin.\n\n\"Not right,\" he/she said.\n\n\"Wrong sex,\" Phil gasped.\n\n\"Wrong sex?\"\n\n\"Wrong sex,\" Phil confirmed.\n\nC\u03adr\u03bcl\u0259a span back into another vivid blue whirlwind.  Phil wondered what his chances were of crawling to the door and running away down the hallway before she finished.  He got up and started crawling on his hands and knees.\n\n\"How about this?\"\n\nThe voice was sweet like honey and dripping with seduction.\n\nEven though he knew he shouldn't, Phil looked back.\n\nPhil didn't want to leave the room anymore.\n\nThe girl he saw beyond stunning.  Her figure could only exist in the febrile mind of a super-hero comic strip artist.  She was tall, lithe and also sluttily curvaceous.  Her electric blue hair formed a mane cascading down her back.  She was still a succubus.  Her blue horns curled through her hair like an elaborate crown.  Her eyes were still blood-red rubies.  They glittered as she saw the effect her new body had on Phil.\n\n\"Come to me,\" she beckoned.  \"Come to me and taste pleasures reserved only for gods.\"\n\nPhil had no control over his body.  He was a passenger.  He got to his feet and walked towards the goddess standing before him.  He was a moth and she was the brightest flame in all existence.  Her flames would burn him to ash.  He knew this and still he stepped into her outstretched arms.\n\n\"Oh yes, this is more like it,\" C\u03adr\u03bcl\u0259a said, smiling as she watched his cock stiffen to full erection.\n\nShe cupped a soft hand beneath his shaft.  Phil shivered in pleasure as sparks crackled up and down his length.  The energy seeped into his flesh and tickled around inside his balls.\n\nOh fuck, it was as much as he could do to stop coming there and then.\n\n\"Dance with me,\" she whispered in his ear.\n\nShe balanced on her left leg and lifted her right leg up high, as graceful as a ballerina as she revealed the silken folds of her sex to him.  She put her hands on his buttocks and pulled him close.  Her wings folded around him, squeezing him tight to her until her soft breasts squashed against his chest.  Her leg hooked around his lower back as she pulled him closer still, guiding his throbbing erection into the lush valley between her legs.\n\n\"Fly with me on winds of lust,\" she murmured.\n\nPhil closed his eyes in bliss as he slipped inside her.  Even though it was a regular occurrence now, that first burst of pleasure as his cock slid into the moist sheath of a succubus's vagina always took him by surprise.  His memory could never accurately capture that bliss of being engulfed by their soft flesh.\n\n\"Give yourself to sensuality,\" she whispered.  Her words resonated directly in his mind.\n\nEnergy crackled along his shaft as her walls slowly pulsed around his cock.  The energy settled in his balls and tickled him with little sparks and fizzes.\n\nLaughing, she span around him, a whirlwind of caressing, fondling fingers, breasts and lips.  Her long hair felt like the finest, silkiest of brushes as it swept over his naked skin.  The sensation was overwhelming Phil's mind and body.  He stood at the centre of a raw, untempered hurricane of lust.\n\nNot standing, floating.\n\nPhil was rising up off the floor even as her hips pumped against him with sinuous thrusts.  Her moist flesh slipped and slid against his cock, the friction filling his balls with more and more erotic charge until they felt on the verge of bursting.\n\n\"Yes, yes,\" C\u03adr\u03bcl\u0259a exhorted.  Her voice seemed to be coming from many different points all around him.\n\nThe pressure in his balls became too much.  Phil groaned in ecstasy as his buttocks clenched and he ejaculated a great stream of his seed into C\u03adr\u03bcl\u0259a's quicksilver body.\n\n\"Oooh yes,\" C\u03adr\u03bcl\u0259a sighed all around him.\n\nThe air shivered, buffeting Phil with waves of pleasure.  He continued to rise on the winds of her ecstasy.  He span in the cyclone of her passion.  A whirlwind of fingers, lips and breasts nibbled, licked, caressed, fondled and rubbed against his helpless body.\n\n\"Yes!\" C\u03adr\u03bcl\u0259a shrieked.\n\nEyes fluttering from the over stimulation, Phil pumped another orgasm into the maelstrom whirling round him.\n\nHis semen whipped her into greater frenzy.  Her hips lashed back and forth against him like a striking snake.  The friction of her silken flesh sliding around him -- softly squeezing him -- filled his mind with fireworks explosions of pleasure.  Her mouth -- no a thousand mouths -- sucked his fingers, sucked his toes, nibbled his ears and licked his nipples.  Her hands -- no a thousand hands -- caressed his shoulders, massaged his neck, tickled his sides and fondled his balls.\n\nToo\u2026 much.\n\nToo much\u2026 sensation.\n\nPhil exploded in another orgasm and the violence of the ejaculation ripped through his body like shockwaves.\n\nToo much.  His body was coming apart.\n\nHe felt the first warning twinges in his spine and joints.\n\n\"Submerge yourself in bliss,\" C\u03adr\u03bcl\u0259a crooned.\n\nShe was formless lust enveloping him.  He felt her touch all around him.  He breathed her in and felt her flow through his body, sending crackling streamers of pleasure hurtling through his nervous system.\n\n\"Give yourself to the pleasure,\" she whispered, her voice a gentle caress across the lobes of his brain, \"mind, body and soul.\"",
        "He was in her and she was in him.  Phil orgasmed and felt hers at exactly the same time.  Reality was coming apart at the seams.\n\nShe delved into his mind and laid out his memories like a pack of cards.  Impulsive and quixotic, she shuffled and rearranged them with the same ease.  A jumble of familiar images flowed before Phil's eyes.  Past, present and future merged in one chaotic kaleidoscope.\n\n\"Share your life with me,\" C\u03adr\u03bcl\u0259a whispered.  \"I want to feel your pleasures, triumphs and sorrows.\"\n\nThere aren't many of those, Phil thought.  He was only eighteen and -- recent events excluded -- his life had not exactly been that interesting.\n\n\"Nonsense!\" C\u03adr\u03bcl\u0259a retorted.  \"Why do you lie to yourself?\"\n\nNot lying, Phil thought.\n\nA memory returned.  He was flipping burgers in the back kitchens of some crappy McRestaurant or other.  His colleagues, if they could be termed such, shuffled by like dead-eyed zombies.\n\nC\u03adr\u03bcl\u0259a flicked the memory away as if it was a bad Polaroid photo.\n\n\"Fledgling, we're trying to have sex here.  Now what's this?\"\n\nShe shuffled through his memories and plucked one from the last year of his old school.\n\n\"Who's she?\" C\u03adr\u03bcl\u0259a asked.\n\nIn the memory he was sitting in a classroom and looking at a girl.  She wasn't like the other girls.  He could see that from her black clothes and dyed black hair.  There was a fierce independence about her.  She wasn't afraid to be different.\n\nNo one, Phil thought.\n\nThe goth girl, Tracey Weis.\n\nShe's just a girl I used to see around school.\n\nI used to have the hots for her.\n\n\"You never spoke to her did you?\" C\u03adr\u03bcl\u0259a said.\n\nI never got round to it.\n\nI was always too scared.\n\nThe memory whirled and merged into another.  Phil was lying on the crisp grass behind the football pitch.  A full moon was above him in the night sky.  Tracey was straddling him and sighing as her body moved up&mdash;.\n\nWait!  That never happened.\n\n\"But I can make it as though it did, in your mind.\"  Tracey spoke, but the voice was C\u03adr\u03bcl\u0259a's.\n\nNo!  It wouldn't be real.\n\nTracey/C\u03adr\u03bcl\u0259a smiled.\n\n\"Reality is not immutable.\"\n\nTracey/C\u03adr\u03bcl\u0259a's pussy clenched tightly around his cock and Phil groaned as he came inside her.  The image came apart in a bright starburst of colours.  Tiny hairline fractures ran through the panes of his other memories.\n\nC\u03adr\u03bcl\u0259a continued to sift through them like a prospector searching for gold.\n\n\"Oh yummy,\" she purred, \"this one looks delicious.\"\n\nIt was the moment Verd\u00e9 had taken his virginity.\n\n\"Such a gorgeous creature,\" C\u03adr\u03bcl\u0259a said.  \"All my sisters are pinnacles of sexual perfection.\"\n\nPhil was lost in the memory of Verd\u00e9's soft sighs.  He felt again, vividly, the silken pull of her warm vagina.\n\n\"She was your first,\" C\u03adr\u03bcl\u0259a said quietly.\n\nPhil experienced again the monstrous eruption as he pumped the full contents of his balls into Verd\u00e9's hungry pussy.  The scene flew apart in a bright coruscation of shards.\n\nC\u03adr\u03bcl\u0259a picked through his memories and found more.  There was Rosa on top of him in the bath as he lay on a bed of the softest foam.  There was Nurse Honey rubbing her soft breasts across his shoulders.  There was Verd\u00e9 in the garden with the moons floating above her in a bright pink sky.  There was even N\u00ffte, enfolding him in velvet darkness.\n\nThe memories merged together, the pleasures building up and building up on each other, greater and greater, until they formed a vast peak of ecstasy.  Phil was carried up with them, his conscious mind obliterated beneath an onslaught of soft caresses and silken flesh.\n\n\"Why do you fear us?\" C\u03adr\u03bcl\u0259a asked.\n\nYou're going to kill me.\n\nCracks spread through the circling panes of Phil's memories.\n\n\"If that is your desire,\" C\u03adr\u03bcl\u0259a said.\n\nShe paused for a moment.\n\nThe vast temporal orgy continued, eclipsing all of Phil's other thoughts.  Fractures spread and grew.\n\nC\u03adr\u03bcl\u0259a started shuffling through his thoughts and memories in a frenzy of activity.  Images, tastes, sounds and thoughts blurred into a hurricane raging through his psyche.  At its eye Phil plunged his cock into the exquisite pussy of Verd\u00e9/Rosa/Nurse Honey/N\u00ffte and felt the build-up of an apocalyptic orgasm.\n\nFaster and faster C\u03adr\u03bcl\u0259a searched, sifted and sorted.  She was a blur as she examined piece after piece, discarding most into haphazard piles.\n\nPhil groaned as the memory of a multitude of ecstatic releases ran over and reinforced each other into one unstoppable avalanche.\n\nToo.  Much.\n\nC\u03adr\u03bcl\u0259a stopped and stared at Phil with a shocked expression.\n\n\"You don't know?\"\n\nPhil's mind shattered and collapsed in a rain of glittering shards.\n\n*****\n\nPhil lay on a pure white hospital bed.  A young girl with spiky blue hair and dark red eyes sat pensively on a chair at the foot of the bed.  At the side of the bed sat a woman wearing the black garb of a mourning widow.  Her face was hidden behind a black veil.  Around them stretched a flat, featureless plane.  It was covered in broken shards of coloured glass as far as the eye could see.\n\n\"I'm sorry, fledgling,\" the widow said, her voice rich and aged like a fine vintage of wine.  \"I've shattered your mind.\"\n\nPhil stared blankly into space.\n\n\"It was not my intention.  My other's self control is\u2026 not what it was.\"\n\nThe figure in black got up and stood over Phil's supine form.\n\n\"This is the only kindness I have left to offer.\"\n\nShe bent down as if to kiss him.  Hands as white as alabaster reached up to lift the veil from her face.\n\nA child's hand reached out and grabbed the widow's arm.  The widow stopped and looked down into the face of the child with the bright red eyes.  The child pointed to where Phil was clutching an object in both hands.  It was a single shard of glass, held so tightly a little dribble of blood ran down his wrist and dripped onto the spotless white sheets.\n\n\"Well well,\" the widow said.  \"Interesting you should pick that one,\" she murmured after looking into the glass. \n\nThe widow looked at the young girl.\n\n\"Should we?\" she asked.  \"We might only be saving him for a worse fate.\"\n\nThe girl smiled shyly and nodded her head.\n\n\"If that is what you desire,\" the widow said.  She raised her arms.\n\nA thousand million broken shards of glass sprang into the air like a film running backwards.  They reformed into countless panes of moving memories, the sum total of a young person's life, played across screens as far as the eye could see.\n\n\"Spend some time with the child when you can,\" the widow whispered in Phil's ear.  \"She gets so lonely sometimes.\"\n\nThe widow took the child's hand in hers and they both walked away.\n\n*****\n\nPhil woke to the scent of cinnamon and the feeling of warm lips pressed against his.  Rosa lingered over the kiss until Phil opened his eyes and then continued for good measure anyway.\n\n\"See, I told you he was alive,\" Rosa said.\n\n\"His mind?\" Verd\u00e9 asked.\n\nRosa held up a hand.\n\n\"How many fingers am I holding up?\" she asked.\n\n\"Purple,\" Phil replied.\n\nRosa shrugged.\n\n\"Close enough,\" she said.\n\nShe picked him up and put him on her back.\n\n\"Let's go find Nurse Honey and get you straightened out,\" she said.\n\n\n/**\nAUTHOR'S NOTE\nThanks for all the kind comments.  Succubus Summoning 111 will follow soon.\n**/\n "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "shape changer",
        "magic",
        "warlock",
        "summoning"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-110"
}