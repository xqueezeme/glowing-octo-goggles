{
    "title": "How I Married a Porn Star Pt. 03",
    "pages": [
        "Author's Note:\n\nPart 3 of 4 for this series. As always, I want to thank you all for reading and you're kind comments. I sincerely hope you all enjoy!\n\nFriday Morning\n\nI woke up to find that Sara was still there. She was snoring very gently with her arm still around my waist. I tried to be as still as possible and still give a look over at the clock. It was around 6:30. I was trying not to move too much so as not to wake her, but apparently, I moved a little too much. Her eyes soon fluttered open while she looked around a bit. She then saw me and smiled.\n\n\"That's a nice face to wake up to,\" she said smiling and gave me a kiss.\n\n\"I could say the same.\"\n\n\"Please,\" she said in a mock/cute tone, \"I'm sure that my makeup is all smeared and gloopy after sleeping in it,\" she said letting it hang there. \"Of course, it's probably also the awesome fucking I received last night.\"\n\n\"High praise,\" I said smiling, \"I should get a testimonial from you sometime.\" She smiled and gave me another kiss. She then rested her head on my chest. She let out a yawn and got comfortable. I had to admit I was quite comfortable myself.\n\n\"What time is it?\" she asked lazily. I answered her. \"I should probably go in a bit so I can shower and dress for the expo,\" she said wistfully, making it clear that she didn't really want to leave the bed. We didn't do anything except lay there and enjoy each other's company, talking lightly as I played with her hair.\n\nShe eventually got up, letting me get another look at her amazing body as she collected her clothes left astray from the previous night. She got back into her dress and smoothed it as best she could. She then leaned over and gave me a deep kiss and said that she'd see me later.\n\nI laid in bed for a bit, taking in all the craziness that had happened in the last few days. I eventually got myself out of bed and hit the shower. I dressed with an eye toward the lunch I had with Arthur later and stepped out. Ironically at the same time, Chet emerged.\n\n\"Dude!! You missed out last night!\" he explained. \"It was epic!!\"\n\nI explained to him that I had a very good night as well and we proceeded down to breakfast. I tried to maintain a low profile with Chet there, but with him talking loud and other people hearing me, it wasn't long before someone spotted me.\n\n\"Hey Sean!\" Roxy said coming up to us. Chet's eyes were amazed that this porn goddess knew me. \"How was the rest of your night?\" she asked.\n\n\"Pretty good,\" I told her in greeting. \"This is my friend Chet,\" I said indicating my friend.\n\n\"Oh, well any friend of Sean's,\" she said trailing off. Chet's jaw was on the floor as Roxy asked if she could join us. I told her to pull up a chair and she joined us. Chet was astonished.\n\n\"How did you guys meet?!\" he said astonished.\n\n\"Oh, Sean and I got to be quick friends,\" she said smiling at me and giving a slight wink. Chet just looked at me dumbfounded. I shrugged my shoulders as we got breakfast situated.\n\nDuring breakfast, Chet and I explained how we knew each other, and we got to come to the expo. Chet eventually went to the bathroom and Roxy leaned over toward me.\n\n\"He's kind of a wanker, right?\" she asked in her British accent.\n\n\"Yeah,\" I admitted, \"but he's harmless,\" I said dismissively. \"He'd freak if you'd offer him a blowjob,\" I told her. She damn near snorted out her Orange Juice.\n\n\"I would not blow him,\" she said extremely dismissively. \"You on the other hand...\" That just kind of stood there as Chet came back. Roxy finished up her breakfast and left. She told Chet it was nice to meet him and gave me a kiss goodbye. A deep one. Chet's jaw was again on the floor as she walked away from us.\n\n\"Dude, how the fuck did you pull hot box like her?\" he asked.\n\n\"Well, I didn't call her a \"hot box\" to start with,\" I told him dismissive of his attitude.\n\n\"So, some of the dudes want me to help them at their booth today,\" Chet explained. \"They promised some major hotties are gonna be by. Wanna come with?\"\n\n\"Nah, you go ahead,\" I told him, \"I missed a few booths yesterday and wanted to hit them up.\"\n\nChet seemed pleased that I wasn't joining as it would've meant more competition for him. He blasted me a \"later bro,\" and was on his way. I finished the rest of my coffee and proceeded toward the expo center.\n\nIt didn't seem as overwhelming as it did yesterday. I guess with the new company I was keeping, I was starting to get used to it. I was walking around, looking to see if there was anything new or anyone I recognized. It wasn't long before I heard my name called out.\n\nI turned to where the voice was coming from and saw that it was Kelly Kline from last night. I turned and greeted her, and she gave me a hug like I was an old friend. She was wearing a crop top that showed off her flawless stomach and had it cut low to accentuate her firm C-cups.\n\n\"Last night was so much fun, me and Richard had a great time,\" she said indicating toward Richard back in the booth. He saw us and smiled, waiving nicely as I returned the wave. \"Thank you so much for allowing us to tag along.\"\n\n\"Not at all,\" I replied. She smiled at me.\n\n\"So are you having fun with the convention and all?\"\n\n\"I am, but it is definitely different,\" I admitted. \"I've never been to anything like this before.\"\n\n\"Yeah, our first time was weird as well,\" she said acknowledging the point. \"But you get used to it and it helps to have someone to go through it with you.\"\n\n\"I can imagine,\" I said nodding my head. \"Is it weird for you being in the industry with your husband?\" I asked bolder then I probably should have. She seemed to take no offence to it.\n\n\"I get why people probably think it is,\" Kelly admitted, \"but it really hasn't been. We were married before we got into it, and it allowed us to explore while still being stable.\" I just kinda shrugged.\n\n\"I mean that's what matters right?\" I told her earnestly, \"if it works for you and doesn't hurt the core of the relationship, what else matters?\" She smiled at the comment.\n\n\"Exactly!\" she said brightening up. \"Why let other people tell us what our relationship is?\" I nodded in concurrence. \"We tell each other everything and trust each other. Isn't that the most important thing?\" I again nodded in agreement.\n\n\"By the way...\" she said sidling up closer to me, \"Richard is totally down for a threesome if you're interested...\" That may have been the step too far.\n\n\"We'll see,\" I told her retreating a bit, \"I promised Cassandra we'd go out tonight.\"\n\n\"Oh, that's awesome!\" she said not acknowledging that I was in essence turning her down. \"She's a great girl and needs a good guy like you.\"\n\n\"No pressure there,\" I thought. After some more small talk she went back to her booth and returned with some signed copies of her movies. I thanked her and moved along.\n\nI hit a few more booths and even threw a quick wave over to Tera at her booth. I eventually hit the VIP booth and had a drink in preparation for my lunch with Arthur. Honestly, I had no idea what I was going to talk about with a billionaire owner of a hotel/casino.\n\nOne o'clock turned near, and I made my way over to the location he wrote down. It was a restaurant near the casino that seemed even nicer then where we'd had dinner last night. I gave my name to the hostess, and she immediately escorted me inside.\n\nPeople inside were dressed nice, but not overly. I felt that the sport coat and the button-down shirt was appropriate. I was a few minutes early and found that I arrived first. At 12:59 exactly, Arthur came in and smiled as he extended his hand. I rose to greet him, and we sat down. He ordered a bottle of wine for the both of us and asked if I liked oysters. I told him I did, and he ordered us plenty of them. Then he got down to it.\n\n\"So, where are you looking to go once, you're out of school?\" he asked.\n\n\"Well, Silicon Valley is enticing, and I've gotten some interest there, but I've also been courted by government agencies to work for them.\"\n\n\"Strong,\" he said as the wine was being poured and we sampled. It was far and above better than any wine I'd ever had and probably would've been embarrassed by how much it cost. \"Silicon Valley is always going to entice people in your profession as well. Government too, but there's just so much inefficiency.\" I nodded in agreement knowing enough people who worked for the NSA and other agencies who'd said the same.\n\n\"But if you're really looking to make a mark, I'd be looking at private industry. So many companies have been slacking with their computer infrastructure and not being willing to expand their minds to the importance of it. From security, to apps, to websites, to future expansion; companies are going to be looking for your skill sets.\"\n\n\"It's true,\" I admitted. \"We had to present computer solutions to a group of companies as part of our senior project and very few of them seemed willing to invest in it.\"\n\n\"Short-sighted,\" Arthur said in agreement. \"They only want to protect what they have now and have no eye to what they could have in the future.\"\n\nAt that point, the oysters came, and we started digging in. If my date with Cassandra later was going to be anything like my previous evenings, I'd need it.\n\n\"I'm sure you can figure out what I'm getting at...\" I did but wasn't going to say it. \"In the last day, I've looked into you,\" he admitted, \"you could easily land a job damn near everywhere.\"\n\nI wasn't very sure about that, but he continued.\n\n\"I want you to seriously consider coming to work with me,\" he finally admitted. \"I'd base you out of wherever you want, send you where you need to go. I'd want a complete overhaul of our security and online presence and want you to work with my team to fix it.\"\n\nIn the back of my head, I thought there was a chance of this; but I really didn't expect him to be so blunt about it.\n\n\"I've built my business solely on the ability to recognize potential in people to grow my business and allow themselves to grow at the same time. My CFO started in the mail room, but I knew she had the drive and ability if allowed to flourish. I see that in you, Sean.\" \n\n\"Well thank you, sir,\" I said sincerely, \"That's a very high complement from a person of your stature.\"\n\n\"It's not a complement,\" Arthur returned, \"just cold hard fact.\" With that he pulled an envelope out of his jacket and placed it on the table. \"I don't want an answer today or this weekend,\" he stated. \"And I also don't want you to look at this right now. Take your time, open it alone, and then come to a decision. If I call you in a week, do you think that'll be enough time for you?\"\n\n\"Yes, sir,\" I answered, \"let me give you my number so you can contact me.\" As I was saying that he waved his hand about.\n\n\"I already have it,\" he said, clearly showing his clout. I agreed to look at his offer later, taking the envelope and putting it in my jacket. That's about the time when a visitor came up to the table.\n\n\"I didn't know this was a handsome convention,\" came from behind me as Dennis Hof approached the table. Arthur stood up and greeted him, smiling.\n\n\"Dennis! Always good to see you!\" Arthur said surprising me a bit. It's not every day you see a billionaire rubbing shoulders with a legal pimp. \"Let me introduce this young man here,\" he said indicating to me.\n\n\"Oh, Sean and I met yesterday. How are you?\" I got up to greet him.\n\n\"Very well, thank you,\" I said in reply, \"good to see you again.\"\n\n\"And you,\" he replied warmly before turning back to Arthur. \"Trying to snag the kid, huh?\" Arthur meekly shrugged in a way that made me feel like Dennis wasn't that far off the mark.\n\n\"Well I'll let you two get back to your lunch,\" he said getting ready to leave. \"Good to see you, Sean,\" he told me before walking out.\n\n\"He's a good guy really,\" Arthur tried to say in his magnanimous way. With that lunch continued unabated. \n\nWhen lunch was over, Arthur gave me a firm handshake and an updated room key card, insisting that I use it while in the hotel to cover my expenses. He also gave me $1000 in comped casino chips. He clearly wanted me to take his offer seriously. I thanked him and headed back to the convention center. \n\nTo say that my mind was racing was an understatement. In the space of a few days, I'd had sex with two porn stars, met half a dozen others, have a date with one tonight, met the most famous brothel owner in the world, and now I had a job offer from one of the richest men in the world. I decided a bit of time in the VIP tent sipping on a cold drink would be a good idea. \n\nOn my way to the VIP tent, a familiar face ran into me.\n\n\"Sean!\" Hannah said bringing me into a hug. With her heels on, she slightly eclipsed me, and my face was pretty close to her amazing chest.\n\n\"Hey, Hannah,\" I said slightly muffled. She released me and I saw she was in a leather bustier and a leather hat.\n\n\"Heard you guys had fun night last night,\" she offered.\n\n\"Yeah, I think so.\"\n\n\"Sorry I didn't make it, my babysitter fell through, so I was with the little man last night.\" Could've knocked me over with a feather.\n\n\"I didn't know you had a son,\" I said trying to take as much of the shock out of my voice as possible.\n\n\"Yeah, he's four,\" she said sweetly. \"His father was a useless piece of shit, but at least he gave me him.\" She then produced a picture of him out her cleavage, somehow.\n\n\"He's very cute,\" I said.\n\n\"Yeah, he is,\" she said with love as she looked at the picture. \"He seems like he's growing so fast.\" The last was said with some sadness.\n\n\"Well kids do that,\" I said in the most lame-ass way possible.\n\n\"True,\" she agreed. \"Just a lot of stress for a single mom. I got into this to make money for him, but now he's getting older, and I really don't wanna keep it up.\"\n\n\"Guess it gets complicated with kids involved.\"\n\n\"Yeah,\" she said forlornly. \"Don't get me wrong, I've loved it and wouldn't trade it for a second. But I know that someday he's gonna have to know about all this. I just hope he'll understand.\"\n\n\"I think he will,\" I said supportively. \"You did what you needed to for the both of you. Plus having a MILF of a mom won't hurt his popularity any.\" She giggled and smiled at that.\n\n\"Probably not,\" she said putting her hand on my shoulder in a 'Thanks for listening way'. Then she turned and heard someone trying to get her attention. \"Guess I have to go. What are you up to tonight?\" I started to answer, but she stopped me. \"Oh yeah, you have your date with Cassandra tonight! Nautica told me! Have fun, stud!\" she said walking away.\n\nI rolled my eyes and headed for the VIP tent. I got there and found Petey still behind the bar. He recognized me from yesterday with Arthur and quickly got me a John Daly. I grabbed a table and took light sips from my drink. I was shocked when my phone started buzzing in my pocket. I saw that it was Cassandra and answered, hoping she wasn't calling to cancel.\n\n\"Hey,\" I answered quickly.\n\n\"Hey, Sean,\" she said sweetly, \"I haven't seen you today, where've you been?\"\n\n\"Around,\" I told her somewhat truthfully. \"Still on for tonight?\" I said expecting her to start back peddling.\n\n\"Absolutely!\" she said affirmatively, as I breathed a sigh of relief. \"I can't wait! I heard about a Hibachi place in the hotel, meet there at 7?\"\n\n\"Sounds great, see you then!\"\n\n\"Yes, you will...\" she said with some slight evil in her voice. I went to Petey at the bar and asked him about the restaurant. He asked me to let him make a call. He came back two minutes later saying I had reservations for 7. Petey was definitely getting a good tip. I sat back at my table feeling a bit better about everything. Then suddenly a familiar face came sat at my table.\n\n\"Apparently, you're like Visa, Sean. Everywhere I wanna be,\" Dennis Hof said as he sat down. I had to admit it was a lot of coincidence. \"Enjoying the expo?\"\n\n\"Yeah, it's definitely educational. How about you?\"\n\n\"Oh, it's fantastic,\" he said, \"even better than last year.\" He took a sip of his drink then leaned in toward me. \"So it seems like Arthur's setting you up to work for him, huh?\" Brazen, wasn't he?\n\n\"We've talked a bit about it,\" I managed to get out before he interrupted me again.\n\n\"He's a great guy, salt of the earth,\" he said munching on some bar nuts on the table. \"Also, I know for a fact he treats his people well. Even the bellboys make bank. If he's offering you a job, I'd seriously consider it.\"\n\nI went from thinking he was a buffoon to actually listening.\n\n\"You'll never find another employer who cares as much about his workers as he does,\" he said confidently, \"except maybe me.\"\n\nI let out a brief chuckle, cause quite frankly I couldn't help myself.\n\n\"Maybe, but I don't think Arthur intends the special attention you give to some of your staff.\" I couldn't believe I said it, but he just started laughing.\n\n\"I hope not for your sake, Sean,\" he said over his laughter. \"Besides, that attention comes entirely from them.\"\n\nI raised my eyebrow in disbelief.\n\n\"No, seriously,\" Dennis insisted, \"I've never propositioned any of the girls at the ranch. They come to me. Sometimes to get in good with the boss, sometimes just to have their skills judged, and other times their just fuckin' horny.\"\n\n\"Weird profession,\" I offered.\n\n\"Maybe, but it's still a business. Product, employees, customer service, loyal customer base; all that still is vital to our operations. The fact that its sex just adds a tinge of mystique.\"\n\nI nodded thoughtfully. Considering I was at a convention full of women in various degrees of sex work, who was I really to judge him?\n\n\"You should come out some time,\" he said digging into his pocket and handing it to me. \"Don't lose it, this gives you a free night at the Bunny Ranch with any girl, on the house!\"\n\nI thanked him as he walked away, and I kept sipping my drink. Talking to Dennis did nothing to settle my nerves. I tried to do minor meditation and close my eyes, trying to settle my brain with everything that had happened. If this hadn't been the weirdest two days of my life, I have no clue what would beat it.\n\nI got another drink and decided to walk around a bit. Not so much to look at the booths, but more to stretch my legs. I saw a few stars I recognized. Saw Sara working a booth and couldn't say hi at the time. She did blow me a big kiss and winked at me. I kept walking and sipping until I heard a loud 'Hey Sean!'.\n\nI turned and saw Kelly Madison and her gigantic boobs barreling toward me. She wrapped me up in a tight hug and kissed me on the cheek.\n\n\"How are you?\" she asked very sweetly. \"Did you and Sara have a good time last night?\" The last comment dripping with sensuality.\n\n\"I'd like to think so,\" I said with some honesty, \"how was the rest of your night?\"\n\n\"Oh, we had a ball!\" she said. \"You missed it. Gianna got drunk and wound up on the stage, grinding her pussy into the face of some random dude at the club. $20 bucks says she probably blew him too.\"\n\n\"That's our gal,\" was my retort which got her laughing again.\n\n\"Hey, I heard you and Cassandra are going out tonight.\"\n\n\"That's the plan,\" I confirmed.\n\n\"You better treat her real good,\" she said in a slight matronly tone. \"She's a great girl.\"\n\n\"I agree and I will.\" She laughed and slapped my shoulder.\n\n\"Of course you will, you're a good dude! Had to fuck with you a little!\"\n\nI then saw Ryan over at their booth both waving at me and waving Kelly back over.\n\n\"Guess I gotta head back,\" she said about to turn away, but quickly snapping back. \"Are you going to Kevin's party tomorrow night?\"\n\n\"I haven't heard anything about it,\" I told her truthfully.\n\n\"Oh, you have to,\" she said seriously. \"I'm sure he meant to invite you but hasn't gotten to it yet. He'll probably call you later,\" she said going away. I just kind shrugged and headed back to the room.\n\nAs I'd never been on a real date with a porn star, I really didn't know what to expect so I tried to dress nice, but not over the top. As I was finishing up, I heard a knock on my door.",
        "\"Hey man!\" Chet said barging into my room with two other guys.\n\n\"Hey, what's going on?\"\n\n\"Oh shit, me, Rocky and Chad are hitting up strip clubs tonight. Only the best! You coming?\"\n\n\"I can't, man,\" I said trying not to let on too much, \"kinda got a date tonight.\"\n\nChet's eyes looked like they were going to bulge out of their sockets.\n\n\"Holy FUCKING SHIT! That chick that came up to the table this morning?!\" referencing Roxy.\n\n\"No, not Roxy,\" I said trying to get him to drop it.\n\n\"Come on, man. Who?\" he said like a rabid dog looking for a bite. \"Is she a porn girl? Is she bangin'? Does she have a friend?\"\n\n\"Good night, gentleman,\" I told them ushering them out.\n\n\"Oh come on, how many times did I set you up?\"\n\n\"None.\"\n\n\"What about Jamie Reynolds?\"\n\n\"You came with us and got her to give you a blowjob in my car.\"\n\n\"Oh yeah,\" he said in looking away in memory. \"I gotta give her a call when we get back.\" With that he and his studs of the month left.\n\nI headed down to the restaurant a few minutes early to make sure the reservations were good, and that Cassandra had no problem finding it. Before I got to the host stand, I saw her walking toward me. Good God, did she look amazing. Red dress, stilettos, and showing off every delicious curve she had. It was elegant and slutty all at the same time, which made it perfect for Vegas.\n\n\"You look amazing,\" I told her as she sidled up to me a kissed my cheek.\n\n\"Thanks!\" she said, seeming truly happy about the complement. \"You look good too.\"\n\n\"Yeah, well...\" letting the complement die a bit, trying to seem humble. She hooked her arm into mine and made our way to the host stand. There was a long line, and I wasn't sure if that was for walk-in's or reservations.\n\n\"Excuse me?\" I asked going up.\n\n\"Walk-in line is over there,\" she said without looking up.\n\n\"Actually I have a reservation,\" I said somewhat innocently. She almost huffed as I gave her my name and annoyed when she looked at her list. Until she found my name that is.\n\n\"Oh my God,\" she said quietly, then her eyes shot up to me. I mean it was a reservation, but no need to freak. \"Mr. Cohen, I'm so sorry. Please except my deepest apologies. We have your private table all ready for you.\"\n\n\"Private table?\" unclear about why that was necessary.\n\n\"Mr. Sims changed your reservation when he heard you were dining here,\" she said as she quickly got two menus. \"Let me escort you to your table myself.\" Another person took her station, and we followed her inside.\n\nThe place was very fancy with flames going off everywhere, people cheering and chatting, and elegant waitstaff serving overpriced drinks. She led us back to an area behind a curtain, opening it for the both of us. We saw a slightly dimmer room with a hibachi grill and only two seats. I pulled out the chair for Cassandra and I swear she actually blushed at the act of chivalry.\n\n\"If you think holding open a door for me or pulling out a chair will help you later on tonight,\" she said softly, \"you couldn't be more right.\"\n\nI didn't really think I was going to need that many brownie points, but it was just the way I was raised. The hostess then gave us our menus. She then indicated toward a cute Asian woman over in the corner.\n\n\"Amy will take care of you this evening. Anything you need please let us know. Mr. Sims also wanted me to be sure to mention that anything you order tonight will be complementary.\"\n\nAt this point, I wasn't even surprised with his generosity. I was a deal to close and he was pulling out all of the stops. We ordered sake (which I'd never had before) and suddenly we were alone.\n\n\"This is amazing, Sean,\" Cassandra said a bit wide eyed, \"I don't think I've ever been on a date this fancy.\"\n\n\"Me either,\" I admitted, as this was above and beyond the Chili's that I normally had taken girls too.\n\n\"Guess I must be pretty special,\" Cassandra said with a grin.\n\n\"You don't need me to tell you that,\" I said, thinking I was being suave. She smiled and rolled her eyes a bit.\n\n\"Sean, you really don't have to turn on the charm so much,\" she said placing her hand on top of mine, \"you're pretty well guaranteed to get laid tonight.\"\n\nThat comment hit me and not in a good way. I'd gone on this date with real feelings. Maybe I didn't know what they were or how they were directed, but I figured that's what dates were for, to sort all that out. I didn't want to piss her off, but I thought I should make my intentions more clear, even if it scared her off.\n\n\"Cassandra, I'm not here with you because I think it will get me laid,\" I told her straight, while also putting my other hand on top of hers. \"I've really liked hanging out with you the last few days and wanted to get to know you better. You're really smart, funny and kind; and I just wanted to get some time with you one-on-one.\" Her face flushed with this, and the server brought in the sake, pouring for both of us. Sensing that we needed a minute, she made a retreat out of the room.\n\n\"Wow,\" she said slightly overwhelmed it seemed. \"I have to say, it's been a while since a guy has had a genuine interest in more than my tits and cunt.\"\n\n\"You need to meet better guys, I'd say,\" somewhat forcefully while taking a sip of my sake.\n\n\"My thoughts exactly,\" she said leaning in and giving me a deep kiss. It was mind blowing. Her tongue was so sensuously stroking my tongue, it seemed almost like a dance in my mouth. I couldn't tell you how long our lips were locked, when I suddenly heard a throat clear.\n\nWe turned and saw our server Amy sitting there, slightly embarrassed at interrupting.\n\n\"Sorry,\" she said deferentially, \"I just wanted to see if you were ready to order.\"\n\nCassandra and I giggled at the situation and looked at the menus. She ordered something with vegetables, and I ordered filet and shrimp. She took the orders and our menus.\n\n\"I'll make sure that when I enter with your chef, I'll give you a little warning,\" she added with a wink. I was mortified and embarrassed, but Cassandra just laughed.\n\n\"She probably thinks I'm an escort that you picked up for the night.\"\n\n\"Not a chance,\" I said confidently, \"for one thing, you look too classy. Two, I certainly don't look like I could pull down the cash to afford an escort that looked as good as you.\" She damn near snorted her sake when I said that.\n\n\"You really know how to make me laugh,\" she said with a smile.\n\nBefore the chef got there, we talked about a lot: where we grew up, sports, interests, pasts, travel. She was fascinating. She really loved her life but was starting to get worn down with the industry. \n\n\"I'm kinda tired of performing with guys,\" she said declaratively. \"Some are nice, but some are complete fuckwads and it really starts to get to you. I love performing with the girls though and I've been thinking of moving to more cam stuff and girl/girl.\"\n\n\"So were you bi before you got in or did it develop?\" I asked.\n\n\"I think it was always there,\" Cassandra explained. \"I always thought that certain women were hot and since I've been in the industry, I've had a lot of fun playing with them. It really allowed me a freedom to determine what I really want.\"\n\n\"So what do you want?\" She contemplated the question a bit.\n\n\"I don't think I'll ever get fully out of the industry,\" she admitted. \"I've got so many friends that I love to hang and perform with. But...\" she said taking a breath. \"I do hope that I can find someone who understands that and still wants me for me. Not to try and change me.\"\n\n\"Seems pretty reasonable,\" I admitted.\n\n\"Plus, it's not like there wouldn't be fringe benefits,\" she said coming closer to me. \"If I get to play with the girls, it would be very wrong for my man not to be able to play with them as well, don't you think?\" giving me a slight kiss as she said it. My dick started stirring at that.\n\n\"I guess you'd really have to trust a guy to do that,\" I told her.\n\n\"That's why it has to be the right guy,\" she said looking deep into my eyes. She was about to say something else, when Amy gave us her warning that she was coming in. She backed off a bit and smiled, mouthing 'later' at me.\n\nOur chef came in and put on quite a display. Amy told us that he was their best chef and made everything to perfection. We ate and talked with each other and the chef while we stuffed ourselves. It was a great time.\n\nWe thanked the chef and I signed for the bill, making sure to include a tip that Arthur could pay them.\n\n\"I was thinking,\" I told Cassandra while getting up, \"would you like to go on a walk around the strip and walk off some of this dinner?\"\n\n\"That sounds nice,\" she said as I helped her to her feet, \"I'd like to show you off a bit anyway,\" she said with a smile. We walked arm in arm out and into the Vegas night. \n\nWe continued talking about everything. It seemed like everything I said she was interested in and asked follow-up questions. I was doing the same and she seemed to get closer and closer to me as we walked. We eventually stopped in front of the Caesar's Palace fountain and enjoyed the view.\n\n\"This really has been an amazing date, Sean.\"\n\n\"Cassandra, I really was just thinking the same thing,\" I said with a smile.\n\nThen she hit me with it.\n\nShe told me her real name. The thing that almost all porn stars keep the utmost secrecy on, she told me.\n\n(I am not sharing what this is for this story. I called her this name for the rest of the time depicted here, but I will still refer to her as Cassandra here.)\n\n\"I can't believe you told me that,\" I said looking at her dumbfounded.\n\n\"No one else really knows,\" she said. \"Handful of the girls at best. But telling you was easy.\" She then pulled me into another deep kiss. She felt like she was melting in my arms. Once she broke the kiss, she pulled me into a big hug, her hands roaming up and down my back.\n\n\"I want you,\" she whispered into my ear, \"take me back to your room.\"\n\nWithout another word to say, I walked us back to the hotel, her hand on my back or ass the whole time. We got to the elevator lobby and saw a commotion on the casino floor. I then saw Gianna squealing with joy, rubbing chips onto her chest. Cassandra and I looked at each other and shrugged then got into the elevator. \n\nOnce we had the elevator to ourselves, Cassandra mauled me, her hands all over my body and she proceeded to see if I still had my tonsils. Thankfully, she stopped when we got to our floor as there was a family standing there. She practically dragged me down the hall once I told her my room number. I opened the door, and she quickly placed the 'Do Not Disturb' sign on the knob and made sure all the locks were secure. I put on some music, and she turned and looked at me with hunger. She then walked over to me and gave me another deep kiss, all the while starting to undress me.\n\n\"I wanna see all of you,\" she whispered as she started undressing me. My clothes started hitting the floor all while she was caressing me and kissing me. She took my shoes and socks off while kissing my ankles and spending as much time trying to adore me as possible. Eventually she came back up to me as she dropped my underwear to the floor. She didn't even look at it, just caressed it in her hands like it was a small pet. She kept kissing me and then started kissing down my chest.\n\nShe got to my penis and rubbed it all over her face, like it was soft fabric or something. She kissed and licked all around it, generally acting like it was a prized possession. She kissed the tip and looked straight up at me with passion dripping from her eyes. Cassandra then started sucking on the tip and using her skills. I was already half hard from everything that had occurred up to now and her skills were quickening the process. Soon I was fully hard and deep in her throat. She fucked her face against my cock a few times and then stood up.\n\n\"Undress me, Sean.\"\n\nI repeated her pattern of kissing while my fingers worked. She slipped out of her shoes as I worked to find the zipper to her dress. I slowly but surely worked her zipper down as I moved my hands across her bare back, noticing that I did not feel any bra strap as I did. Her tongue was probing my throat as I slid her dress off her shoulders. Cause it was so fitted to her, I still had to maneuver it until it fell on the floor.\n\nOf course, I'd seen her unclothed before, but this was amazing. A feast for my eyes. I caressed her breasts and they felt so heavy and soft. I moved my hands down her midsection, maybe not the firmest in the world, but perfect for her. Her meaty ass felt amazing in my hands as I massaged it while still engaging in her kiss.\n\nI laid her down on the bed and got my view of her perfect looking pussy. I nibbled up her legs, being able to smell the desire coming from her. By the time I reached her folds, they were practically dripping. I kissed, nuzzled, and licked eliciting moans and praise as I did. It tasted amazing, tangy and sweet all at the same time. I teased and pleased as I performed my art.\n\n\"Oh, Sean!!\" Cassandra said every 15 seconds it seemed like, \"fuck, that feels good.\"\n\nI licked and sucked on her clit and her body started bucking against me as she was in the throes of orgasm.\n\n\"FUCK!\" she let out so that my hotel neighbors could hear. \n\nBut I wasn't done. \n\nI added my fingers to the mix, teasing and giving her G-Spot stimulation. She was constantly moaning and groaning as she fucked herself against my fingers. A few minutes of this and she was insatiable.\n\n\"Sean, please fuck me!\" she pleaded, \"I want to feel your cock in me!\"\n\n\"One more orgasm first,\" I told her as I increased my finger's pace. I was ferocious and within a minute she had an even harder orgasm then the first one.\n\n\"JESUS GOD!!\" as her pussy erupted in pleasure, her breasts seemed to be going in every direction as she convulsed in ecstasy. I then kissed up her body before letting her taste herself on my mouth. She was ravenous.\n\n\"Please, Sean,\" she said. \"I need to feel you.\"\n\nI got a condom and wrapped myself up. I got on top of her and slowly inserted myself inside. She was really tight. I couldn't believe someone in the porn industry was so tight. I slid slowly inside until I was fully in.\n\n\"Ungh!\" was her response, \"that feels really good.\"\n\nI decided I wasn't going to fuck her. I was gonna make love to this amazing woman. We locked in deep kiss as I slowly grinded into her. I could feel her moaning through her mouth as I kept a steady slow rhythm. \n\n\"You like teasing me, don't you?\" she asked.\n\n\"True,\" I admitted, \"but I also just wanted to make love to you.\"\n\nThe comment seemed to have its desired effect as she pulled me into an even deeper kiss as her hands seemed to quickly find my ass, pulling me as deep as possible into her. \n\nI'd obviously had sex previous to this, but I couldn't remember having it with the passion that seemed to be flowing through us. Just a few minutes more and she came gently on me, her pussy tightly gripping me, almost refusing to let me go.\n\n\"That was so good,\" she commented, almost purring. \"I wanna ride you now.\"\n\nWe changed positions and she was soon on top of me, sliding down onto me allowing me a perfect view of her world class breasts. Whether her or Sara had the better pair could be debated forever, but they felt heavenly in my hands.\n\nShe continued the slow pace I had started, relishing the feeling of each stroke they were sharing. She seemed to love my hands fondling her tits and kept looking down at me with desire.\n\n\"Suck on them, Sean,\" she instructed. I didn't need any prodding. I took a breast and started sucking and nibbling on it. She was loving it and pushed her other breast toward me for the same treatment. They were amazing!\n\nCassandra then put both hands on my chest for leverage and started riding me hard, moaning and calling out my name as she did. Her pussy seemed to be internally massaging my cock as she rode. It wasn't long before she let out a primal scream, announcing the arrival of another orgasm. Her movement and sounds set me off and I spilled into the condom.\n\nOnce we came down from our orgasms, she stayed on top of me just looking down at me with amazement and passion. She then leaned down and kissed me with all the passion still that we had previous. I soon slipped out of her as she laid on the bed next to me. She took my condom off and did the most porn star thing I'd seen her do all night. She upended the condom to sample my load, throwing it away when it was done, smiling as it went down her throat.\n\n\"You taste very good,\" Cassandra remarked with a smirk. She then grabbed some water and swirled it around in her mouth, making sure that she got all of my cum in her stomach.\n\n\"I try,\" I said wryly. \"You taste pretty good yourself.\"\n\n\"I know,\" she said with a shrug and a smile. \"This night was amazing, and I don't want to ruin it, but can I ask you something?\"\n\n\"Ok,\" I replied.\n\n\"Can I stay here tonight? I'd really like to wake up with you in the morning.\"\n\n\"I was kinda hoping you'd ask me that,\" I told her smiling. Cassandra smiled big and kissed me yet again. She then laid her head on my chest.\n\n\"I feel so comfortable with you,\" she admitted.\n\n\"Yeah, this is really nice.\"\n\n\"No, Sean,\" she said sitting up a bit, \"I mean I've never felt this comfortable being with someone before. It's weird, exciting and scary all at the same time.\"\n\n\"That's quite a complement,\" I replied, a bit surprised she was being this open.\n\n\"It's true,\" she said ardently. \"I can't explain it. I feel amazing around you. I've never experienced anything like this before. Do you have any idea what I'm talking about, or do I really need to shut up?\"\n\nI swallowed hard. I did feel the same, but my mind was racing.\n\n\"I do know how you feel,\" I admitted. \"It's feels strange, but I really, really like you.\" She smiled, cuddling back up against me as we went to sleep."
    ],
    "authorname": "rumpleminty",
    "tags": [],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/how-i-married-a-porn-star-pt-03"
}