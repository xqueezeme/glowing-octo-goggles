{
    "title": "Holding Out",
    "pages": [
        "Chapter 1\n\nRecently I have been having fun with a girl who loves to masturbate. I actually watched her doing herself at her desk one evening after she thought everyone had left for the day. I worked upstairs and came down to the level she was on to use a piece of equipment for a deal I was working on.\n\nI heard her first of all and thought someone was injured or ill! I walked to where the sound was coming from and there was Joanne with her legs up on her desk and her bum on the edge of her chair. She had her panties pulled to one side and was using her right hand to rub her clit whilst watching something on her computer. Quite mesmerised I just stood still and watched as she brought herself to a spectacular orgasm.\n\nMy first instinct was to creep away but I thought \"What the Hell\" and began to clap instead. In a blur, Joanne leapt in the air, removed her legs from the desk, pulled her knickers up and sat as if nothing was happening. It was almost comical and I did have a chuckle as I said: \"Sorry to disturb you Joanne!\"\n\n\"Oh my God! What did you see?\" she blurted.\n\n\"Just about everything -- except what's on your computer!\" I replied.\n\n\"Oh, I'm so sorry. I thought everyone had left and I was on my own. How embarrassing . . .\" she said as she buttoned her blouse. \"You won't tell anyone will you? I just had to . . .\" she trailed off.\n\n\"Look Jo, I'm not going to tell anyone and I understand. We all do it although many will deny it. And it looked like you were really enjoying yourself. Watching you makes me feel pretty horny too!\"\n\n\"Oh, I'm so sorry.\" She said again.\n\n\"Don't be sorry, it's nice to feel horny. Maybe I'll go and do the same thing!\"\n\n\"Oh God . . . really . . . I've never seen a man do it . . . except for on the net.\" As she nodded to her computer.\n\nI walked over behind her and there on her screen was the frozen image of a guy with cum spurting from his massive cock. I laughed and said that I would probably be a disappointment after what she was looking at.\n\n\"Oh no!\" she said, \"I'd love to see. I'm married but my husband only likes sex under the covers in the dark and I hardly even get to see him naked, let alone touching himself -- which turns me on for some reason.\"\n\n\"Well,\" I said, \"you have got me in the mood!\" as I shifted my erection bulge in my pants which Jo was looking straight at.\n\n\"Jo, I'm married too and although the sex is great, it's not enough for me, so I do it pretty regularly all on my own, usually with something like a good story on Literotica. And strangely one of my fantasies is to watch a girl masturbate. I've never seen it live either!\"\n\nWe looked at each other and although I can't recall the words, we agreed that we could each do the other a big favour.\n\n\"But, not here.\" Said Jo. \"I'm terrified now after what happened.\"\n\n\"Come up to my office tomorrow night at about 6:00. Call me first to check that the coast is clear.\" I said.\n\nThere was a short conversation about whether we should do this and we agreed that so long as all we did was what we did normally anyway, there couldn't be any harm in it.\n\nThe next 24 hours was quite a suspenseful time. I could hardly think of anything else. At lunch I saw Joanne getting in the elevator and as the doors closed she smiled at me.\n\nAt 6:00 pm on the dot my phone rang and it was Joanne. \"Hi, did you mean what you said last night?\" she breathed into the phone.\n\n\"Yes. I haven't thought of much else since!\" I said.\n\n\"Me either! I've had butterflies in my tummy all day just thinking about it.\" Said Jo.\n\n\"Come up and then I can lock the elevators off to the floor so we can't be disturbed\" I said.\n\n\"Give me five minutes to freshen up!\" she said as she hung up the phone.\n\nI heard the \"ding\" of the elevator and walked to meet her. She was stunning in a tight skirt and simple white blouse. Her perfume was heady as he walked ahead of me to my office.\n\n\"I've never been in here before.\" She said as she looked around. \"Very cosy\".\n\n\"Would you like a drink?\" I asked as I headed across to my drinks cabinet. We agreed on Scotch and I poured two sizeable ones as I assured her that we couldn't be disturbed now so she should feel free to relax. I have two small lounges and a coffee table in one corner of my office and we sat across the coffee table looking at each other as we sipped our drinks.\n\n\"Are you comfortable if we take our clothes off?\" I asked.\n\n\"Yes, but lets get it straight, we only touch ourselves, not each other.\"\n\n\"Agreed.\" I said, as I began unbuttoning my shirt. Jo responded by unbuttoning and removing her blouse. Slowly and whilst making small talk we stripped for each other although Jo had more items to remove than me.\n\n\"Stand up.\" I said, \"I want to look at you.\"\n\nJo stood and slowly did a pirouette with a little flourish to finish it off.\n\n\"You are very beautiful\" I said and it was very true. Although summer was over Jo was well tanned all over except for a small triangle which just covered her neatly trimmed pubes. \"You obviously love the sun and I suspect you only wear the bottom of your bikini!\"\n\n\"Now you\" said Jo and made a twirling motion with her finger. I stood, sucked in my gut and flexed my chest muscles as I turned, clenching my butt muscles for effect. My penis was well on the way to a full erection and I don't think Jo saw much other than this as I turned.\n\n\"It's beautiful!\" she said. \"Can I have a closer look?\"\n\nI pulled the coffee table out of the way and went and stood close to her. Jo leaned forward on the lounge and examined me as if she was looking at a piece of art.\n\n\"This 'no touching' is going to be difficult! I have never really looked at a man's penis and his balls before. Mark doesn't even like me touching him when we have sex, so this is a plus for me!\"\n\nI stroked my penis for her and she gasped and held her breast. I had fallen in love with her breasts and particularly her oh-so-suckable-nipples that stood out so prominently from her perfect small breasts. She saw where I was looking and said that they were so small. \"Just perfect\" I said and told her how much I loved her dark brown nipples.\n\nAs if to make them even better for me, she pointed them up and flicked them with her fingers. \"Oh my God, that's incredible!\" she said.\n\n\"What is?\" I said as I moved my penis closer to her face with a drop of fluid hanging on the tip.\n\n\"I would swear that my nipples are connected to my clitoris -- I've never felt that before. Oh, that's heaven\" she said as she paid more attention to her nipples and watched as I picked up the pre-cum and began to lubricate my penis with my hand.\n\n\"I've got to touch myself\" said Jo but I said \"No, wait! I want to see. Lay back and open your legs.\" She complied and bending and opening her knees revealed her already glistening cunt to me. I got down on my hands and knees so that I could take in all of this beautiful sight. I could easily make out her clitoris but I asked her to open it wider and she reached around under her legs and pulled her labia further apart. The entrance to her vagina was plain and just inches from my tongue. But I didn't touch and just told her how beautiful it was.\n\n\"Can I touch myself now?\" she asked and I said OK, but to go slow. Her fingers ran up and down her slit and pushed into her vagina. I could see that they were slick and wet and then she bucked her hips at she first touched her clitoris.\n\n\"That's fucking incredible!\" breathed Jo. \"I'm so close to cumming!\"\n\n\"Don't, not yet. We have to make it last!\" I said.\n\n\"I'll stop. But show me how you do it.\" I went to my desk draw and brought out a small bottle of massage oil that I had brought along for the occasion.\n\n\"Guys are not so lucky with the ready made lube\" I said, \"So I like to use a little oil to make it feel like I'm actually fucking.\" I sat back on the couch, dripped some oil onto my glans then began to stroke up and down my shaft which was good and ready. All the time I watched her fingers softly playing with her cunt. She had her eyes locked on my penis.\n\nI settled back into the lounge letting my legs fall apart, ran my hand down under my balls and with the other hand reached for my Scotch to distract myself a little. Joanne followed my lead and we both saluted each other with our drinks.\n\n\"Let's take it slow.\" I said as I resisted the urge to speed up and release the sperm I could feel building for a stunning climax.\n\n\"Oh, that's so hard. I want to see you spurt your cum. Go on, do it and then we can do it slowly again after.\" She said in a jerky breath as her fingers flew over her clit.\n\nThe dam burst and I couldn't hold back. I watched her flying fingers as she raised her legs and I saw her vagina open as if beckoning me. I stroked myself and grunted as I let go a torrent of sperm that shot up onto my stomach. At the same time, Jo stifled a scream and threw herself between my legs to watch as the sperm jumped from my penis.\n\nThen she collapsed down onto the floor with her hands thrust tightly between her legs. I couldn't move as I watched the sperm dribble down to pool in my belly button.\n\n\"Can I taste it?\" Jo asked. \"I'll just get some on my finger.\"\n\nI agreed and she carefully scooped up some liquid with her finger and sucked on it declaring that it wasn't what she had expected and that one day she hoped to do oral sex, but not with her husband who would never allow such depravity!\n\nThe box of tissues I had put on the coffee table came in handy and we cleaned ourselves up. Joanne commented about how much sperm I had ejaculated and I told he that it must be her because it wasn't usually that much. I also told her how when I was a young lad I could shoot it about 3 feet.\n\n\"When did you start . . . you know . . . doing it? Jo asked.\n\n\"Oh, I was about 12, I guess. I replied.\n\n\"God, I have been doing this since I can remember, just because it felt nice. I would do it at night in bed to relax and soon I would go to sleep. But I didn't have an orgasm till I was about 15 and starting to look at boys in a sexual way. I remember spending hours with a boy at a camp my parents took me to. We just kissed and I let him touch my breasts through my bra. I was amazed at how wet I became and I eventually had to dash to our cabin and touch myself. That was when it happened. I was squeezing my nipples and rubbing my clit and wham, I had my first orgasm. It was incredible and at first I thought something was wrong. But I thought how could something that feels so good, be wrong?\"\n\n\"I couldn't wait to go to bed that night and do it again -- and I've been doing it ever since. I told Mark about it once and he got angry and said that it was wrong and that I must never do it again. He made me promise even! But I couldn't stop and with so little sex in my marriage, I need it at least every few days. Mark is older than me. He's 38 and I'm only 23, so maybe his sex drive has gone off. Technically I was a virgin when we got married 2 years ago and . . .\"\n\n\"What do you mean 'technically'?\" I interrupted.\n\n\"Well, I had never had sex. In fact, apart from my Dad and brother, you are only the second man I have seen naked. But, when I was about 20, I really wanted to have sex. I dreamed about it and tried to work out who I could ask to make love to me. But I never got the guts to actually ask someone. So, one day I bought this beautiful cucumber at the supermarket, and then stole a condom from my brother. I put the condom on the cucumber and fucked myself with it. I got so excited I actually took my own virginity with it, blood and all!\"\n\n\"What did you tell Mark on your wedding night?\" I asked.\n\n\"Well, it was actually quite difficult and it took a couple of attempts over about a week for him to actually get right in, not that he's very big or anything. It's just that he only ever wants to do it with him on top and me with my legs out straight. Your basic missionary position. So we never actually knew when he took my technical virginity and he never wanted to see me naked or anything so he would never have seen any 'evidence'.\n\n\"Joanne, I think you have a rather odd marriage!\" I said, before I could stop myself.\n\n\"I know.\" She said with tears welling up in her eyes.\n\n\"I'm sorry.\" I said softly. \"That was not my place to say that.\"\n\nAt that moment we came very close to touching but we resisted and then Joanne said: \"What the hell, I'm making up for lost time now . . . tell me about your first orgasm. I find it so sexy sitting here naked talking about our sex lives!\"\n\n\"You know, I can't really remember my first orgasm. I think it happened in my sleep and I woke up with the evidence -- so to speak. I knew what had happened because my Dad had explained everything to me when I was about 11 or something. So, as soon as I knew that I was capable of it, I began to try and bingo, it happened. It was incredible then and it still is. I used to spit on my hand to make it feel like how I imagined the real thing would be. Soon I learned that various things like Vaseline really made it feel even better.\"\n\nJoanne was laying back on the lounge and with her legs wide open to me she was gently rubbing circles around her clitoris as she looked at me and listened to me telling stories from my youth. Of course I was beginning to stir too and Joanne slid over onto the floor between my knees to watch.\n\n\"Don't touch yet.\" She said. \"I want to watch it get bigger.\"\n\n\"Show me what you're doing to yourself.\" I said. Joanne stood up, put one leg up on the lounge and turned her cunt to face me. I could smell her, hear the slick squishy sound she made with her fingers as she plunged them into her vagina, then furiously frigged her clit. Joanne bent forward and watched what she was doing and just under that, what I was doing.\n\nI was resisting the urge to touch my penis and I had my hands folded across my stomach. My penis was growing from totally flaccid to full erection without being touched and it was quite a delicious sensation.\n\n\"Oh, that's wonderful!\" said Joanne. \"Now you can touch it.\"\n\nI told her to take the small plastic bottle of massage oil and drip some onto my penis. Each drop made it jump and as I began to slide my hand I watched Joanne squeeze some onto her hand and massage it around her cunt.\n\n\"Wow, that feels divine.\" She breathed as she picked up speed. \"Come on, lets do it together.\" she said.\n\nWe watched each other and built the pace at the same rate and I held back from clamping my mouth over Joanne's left breast as it was inches from my face as she put her left hand on the back of the couch.\n\n\"I'm cumming.\" I said in a haltering voice.\n\n\"Oh fuck, me too . . .\" was Joanne's reply.\n\nAt the second I began to ejaculate, Joanne dipped her body towards me and a single glob of sperm landed in her small patch of pubic hair. Joanne collapsed back onto the lounge opposite me, breathing hard and laughed: \"You missed!\"\n\nI replied that it was hard shooting at that angle and next time I would have the higher ground.\n\nWe had another drink and both of us seemed very satisfied with our encounter. We cleaned up, dressed and took the elevator down to the car park together before going our separate ways. We still hadn't touched each other in any way and it felt quite weird that we could have such an intimate relationship without ever touching, kissing or caressing each other.\n\nChapter 2\n\nA week later I received a very business like email from Joanne asking for another meeting as she had something to show me. I replied that we could meet at the same time the next day.\n\nWe repeated our routine until we were naked and settled back on the lounges with our Scotch.\n\n\"So, what have you got to show me?\" I asked.\n\n\"I'm a little chicken now.\" Said Jo, as she reached for her bag. She pulled out a pink plastic zippered bag and slowly undid the zipper. Then she took out this replica penis. It was soft yet rigid plastic and she passed it to me to have a closer look. I was amazed at how real it looked, skin colour with a circumcised glans. It even had veins and a sort of handle on the end so that it could be \"controlled\". I expressed my amazement at the reality of it and then said:\n\n\"What's it like?\"\n\nJoanne took the dildo back, caressed her face with it and told me that she hadn't tried it yet.\n\n\"I've been saving my virginity for you\" she said with a smile.\n\n\"Well, you'd better get yourself ready to be fucked!\" I said as I moved to be on the floor between her legs. Jo handed me the replica and I felt strangely excited at what was about to unfold.\n\n\"Have you got that oil?\" Joanne asked and I reached across to the coffee table for it. I took the cap off and held it above her cunt which she angled upward to catch the drops.\n\nJoanne began massaging the oil into her folds, vagina and particularly around her clit as she lay back and put her feet on the edge of the lounge and dropped her knees to expose her cunt to me fully. I began to rub some more oil onto the dildo and rubbed it quickly in an attempt to warm it to body temperature.\n\nWith her hips starting to pump upwards, Jo was getting herself ready alright as little moans escaped her: \"I'm ready for it now Tom, stick it in me!\"\n\nI moved the dildo to her cunt and began rubbing it around her lips and over her clit. \n\n\"Oh God that feels so fucking good! I'm imagining that it's your cock doing this to me.\" she said as she furiously rubbed and tweaked her now thick brown nipples.\n\nIt was hard to position the dildo because Joanne was thrashing about as she began to strum her clit with 3 fingers that were a blur.\n\n\"Hey slow down!\" I said. \"You're going to cum before you get fucked by our friend here!\"\n\nShe held her hips steady as I began to slide the head of the dildo into her swollen cunt. It was a great sight and my penis was throbbing without me even touching it.\n\n\"Remember you're a virgin!\" I said smiling up at her as she bit her bottom lip and twisted her magnificent nipples.\n\n\"When it comes to something this size, I AM a virgin\" Joanne assured me. I began to push into her and then pull back, going a fraction deeper each stroke. Joanne was holding her hips perfectly still and making small \"Uh, uh, uh\" sounds as I mini-fucked her.\n\nThe dildo was very slick with her juices and the oil but there was resistance as I went deeper. I was on one knee between her drawn up thighs, the dildo in my left hand and my penis in my right hand.\n\nI decided to change the angle slightly, pushing the dildo up towards the top of her vagina. Joanne immediately began to push herself onto the dildo and was crying out with each stroke.\n\n\"Fuck me! Fuck me harder! Oh that's good!\" she cried and I decided to go for the hilt and rammed the dildo as far in as it would go. She screamed and at first I thought I had hurt her but with her eyes tightly shut, Joanne was moving towards my thrusting hand so that her back was well down the lounge and with her feet on the ground now she was fucking the dildo as deeply as she could.\n\nGripping the handle I began to lift the dildo up so that Joanne was sliding along the top of the fake penis. I knew that she was working her G-spot as hard as she could go. Momentarily I gripped the dildo with my right hand and transferred the slick mixture to my dick. It was warm and I could feel my orgasm building as I watched Joanne reach her ultimate ecstasy as she impaled herself on the dildo one shuddering last time.\n\nAt almost the same instant sperm shot from my penis onto her stomach, breasts and neck. Joanne's eyes shot open and in an instant she had pulled herself off the dildo and was beneath my pumping penis, her mouth wide open. Without touching, I directed another stream of semen into her waiting mouth.\n\nJoanne slumped back onto the lounge, glistening with sweat, her juices and my cum. Her cunt was still angled up towards me and I couldn't resist plunging the dildo back into her right to the handle. I let go and Joanne took control herself. Curling up on the lounge whilst she slowly pumped the dildo in and out in tiny thrusts, giving herself 'after-shocks' as she later called them.",
        "There was a shower in the men's room and some time later as we sipped our whisky, I suggested to Joanne that a shower might be a good way to clean up.\n\n\"God yes! Look at me!\" she said, smearing my sperm around her breasts. Joanne stood up, the dildo still deep in her vagina and stretched herself. \" I don't want to take it out -- it feels so good.\" she purred.\n\nKneeling down, I took the dildo and began to turn the handle round so that the whole artificial penis was spinning around inside her. Joanne stood with her legs wide whilst I continued this to her moans of \"Incredible -- what a feeling\" and \"That's just delicious!\". In doing this, I realised that the dildo came apart and that handle was removable, leaving the handless penis deep inside her. Joanne reached down and with a finger pushed the dildo up so that her pussy closed over the entire 7 inch penis.\n\n\"Can you walk like that? I asked and with a grin Joanne began to walk gingerly around my office. \n\n\"It feels like it might fall out. But if I squeeze my vaginal muscles the right way I can keep it in -- and fuck, it feels so good! It feels like I'm being fucked as I walk along\" she said.\n\nMaybe you can try it coming to work? I said.\n\nWith a wicked laugh Joanna said that she would do just that.\n\n\"Right now I want to know that I can get it out\" she said, sitting down and drawing her knees up to her chest. With a push like a contraction the end of the dildo came into view and I knelt down and screwed the handle back into the rubber penis. I continued to turn it and slowly withdrew and angled it so that the tip was under her mons where I imagined her G-spot to be. Taking the handle between my two hands I began to roll the dildo around in her so that the rubber cock-head was rolling over G-spot. With her bottom lip between her teeth Joanne moved down slightly to position the rolling dildo perfectly.\n\nJoanne began to pant and grasped her nipples with both hands. Her thighs began to quiver and suddenly she let out a cry and thrust herself onto the dildo burying it high in her vagina again.\n\n\"Oh, thank you!\" she said. How can I repay you for two of the best orgasms I've ever had?\"\n\n\"Well, lets go and have a shower and see what we can figure out\" I replied.\n\nChapter 3\n\nJoanne took off to the loo. Watching her walk naked through the office area was quite a sight and although we had experienced several incredible orgasms together, we had never touched. This seemed to be an un-discussed rule between us. We both seemed to feel that if we didn't touch each other then technically we were not having an affair -- only masturbating ourselves. Although the introduction of the dildo moved things to another level with me fucking Joanne with this artificial penis -- but again, I did not touch her.\n\nWhere to from here? Certainly I felt that we needed to move on with our sexual relationship and I determined to ask Jo how she felt and what she wanted to do.\n\nJo came back having cleaned up superficially after our earlier tryst. \"Let's have that nice hot shower\" she said. I had a towel in my gym bag along with toiletries bag with soap shampoo, a razor etc. As we walked to the men's room I said:\n\n\"This might be awkward showering together in this small shower cubical. It will be almost impossible for us not to touch . . .\"\n\n\"I was just thinking about that too.\" Said Joanne. \"You know, this no touching thing applies to sexual matters. Showering is not a sexual thing, it's a cleanliness thing and so the no touching rule shouldn't apply!\" Skipping ahead of me into the men's room Joanne grinned and said: \"We are just going to get clean -- aren't we?\"\n\n\"Absolutely!\" I said as I led the way to the locker room and shower. Joanne turned on the shower and waited for it to get hot while I got the soap, shampoo and the razor from my gym bag.\n\n\"What's the razor for?\" asked Joanne.\n\n\"I thought we might make sure that your pussy is very clean . . .\" I replied.\n\n\"Oh, I've never done that before! Will you do it for me?\"\n\n\"Of course, it would be a pleasure\" I said as we both stepped into the shower and closed the glass door. We were so close now and I said: \"I declare this an official cleanliness session!\"\n\nIn one movement Joanne leapt up, put her arms around my neck, her legs around my waist and I heard a muffled \"Goodeee\" as she began kissing my neck.\n\nThe touching was exhilarating. Her body felt firm and soft all at the same time. Her breasts were squished against my chest and I could actually feel her nipples. I reached down and ran my hands along the lower part of her thighs and up and around her beautiful little bum.\n\nJoanne let go of my neck and slid down my body, my semi-erect penis touching her belly as she reached the floor.\n\nAt the same moment we both said words to the effect of how incredible it was to finally touch and to be touched by the body we knew so well. We babbled for a few seconds and then I bent and kissed her quiet. She was still making little noises into my mouth as if she had more to say, but I wouldn't let her.\n\nOur kiss under the hot water lasted minutes to make up for lost opportunities. Our hands roamed, kneaded and caressed. Joanne felt for the soap and then for my penis. We stood slightly apart, both looking down and breathing through the water and steam. Even to me, my penis seemed larger than I had ever seen it before.\n\n\"I'm just going to give this a good wash.\" Said Joanne as she soaped up and down my shaft, cupped my balls and reached down and under my buttocks to soap my anus where a finger gently probed and rubbed. Then she used her hands to concentrate a stream of water onto my penis and guided it around my scrotum and between my legs. It was delicious and I felt so close to cuming that I had to try to think of something else.\n\n\"You know, I'm not sure that it's 100% clean!\" said Joanne. \"I'll just have a closer look\" she added as she squatted down with my cock at her eyelevel.\n\n\"It could do with a bit of a lick and a polish I think!\" with the last words somewhat muffled as my penis disappeared into her mouth. Seconds later, with a pop, she let go with her mouth and said: \"You know I've never done this before -- it feels so fabulous! But, am I doing the right thing? You'll have to tell me what . . .\"\n\nFor an answer I pushed my penis back into her mouth and held her head as she moved back and forward, gradually getting more of me into her mouth and throat. It was sheer bliss as I leaned back against the tiles and watched Joanne fucking me with her mouth. I tried to stay still and let her do all the work and as I watched Joanne must have figured out how to take all of me into her throat as her lips were against my pubic bone on each stroke now. Then I felt her finger gently wiggling itself into my arse. I moved my legs apart and tried to relax. What a sensation. Her finger was curled back towards the base of my dick -- from the inside, and she was rubbing something there that I'd never felt before.\n\nI knew I was about to come and in a stuttering voice I told her that I couldn't hold back any longer. I thought she'd pull away but instead she quickened her pace and sucked as hard as she could. My sperm shot into her mouth and throat with more force than I have ever experienced before. It was like her finger was some kind of trigger to make me shoot better! Surely my eyes were deceiving me -- Joanne didn't pull back and I couldn't see a dribble from her lips. She took it all and continued to pump until there was nothing left and I was becoming limp.\n\nWith a smile, Joanne looked up at me and said: \"There, I think it's all clean now. That's the one cleaning job I've found that I don't mind doing!\"\n\n\"That was wonderful!\" I said as I kissed her and tasted the remains of my cum in her mouth. Not bad really I thought as I had never tasted it before.\n\nI was slumped against the wall and turned Joanne around with her back resting against me and began to soap her breasts and tummy. She was so relaxed that I almost had to hold her up as I soaped down and over her mound, my soapy fingers playing with her folds.\n\n\"Are you ready to be shaved bare?\" I asked her as I managed to grasp a few hairs just above her slit.\n\n\"Can't wait to see what it feels like.\" Said Joanne as I let go of her and turned her to lean where I had been. Taking the soap and the razor I knelt in front of her squatted between her legs. Her cunt was right at mouth height and I gave it a little kiss to start proceedings. Joanne jumped and said: \"Another first! Nobody has ever kissed me there before!\"\n\nLeaning closer I pushed in under her legs and kissed her warm wet cunt with my open mouth and ran my tongue up and sown her slit, brushing her clit on the upward stroke. Above me I heard Joanne gasp and felt her legs go weak and quiver so that I was just about supporting her on my mouth. I kept licking and pushed my tongue into her as far as I could reach. Then I sucked her clit into my mouth and give it a good tongue lashing as she bucked about above me and held my head in place.\n\nHer taste, diluted by the warm water that ran down her body was quite exquisite and I could feel more fluids coming into my mouth from somewhere. She was cuming and I suspected that this would be a magnificent orgasm. I pushed my index finger up in front of my mouth and slipped it deep into her before hooking it towards me to rub that spot inside her front vaginal wall where the G spot is located. What a reaction! With my finger pushing into the spongy soft sensitive area, right behind where my tongue was working on her clit, Joanne erupted and screamed as she humped my face and spread her legs as wide as she could, even resorting to standing on her toes on one foot and lifting her other leg high up the shower cubical wall.\n\nThe dam burst and I felt her collapsing onto me, totally spent!\n\nDreamily Joanne said: \"Oh my God! Why have I had to wait 23 years for the most intense pleasure I have ever felt?\n\nI laughed and said \"I hope nobody would have done that to you any time before about 5 years ago!!\"\n\nJoanne replied that any time in the last 10 years would have been good. I picked up the razor again and said \"Now, are you ready for this?\"\n\n\"Go for it! I want to make sure that I don't forget what I've experienced tonight and I think that a shaved pussy is going to make me constantly aware!\" said Joanne as I knelt down in front of her and began lathering her mound.\n\nIt only took a couple of strokes to remove her 'landing strip\" and then I began work on her labia which was a little more difficult. To make her labia taunt for shaving I put two fingers into her folds and used them to spread her labia. This meant I was touching her clitoris so it was very hard to make Joanne keep still! We were laughing and she was urging me to hurry up as there was one more thing she wanted to experience.\n\nJust as the last hairs were whisked away and she was admiring her new bald pussy, the water started to go cold! We had been in the shower for about an hour so it was no real surprise. I held Joanne under the cold water as she shrieked and told her that she needed something to cool her down!\n\nWe only had the one towel so I dried Joanne and couldn't help stopping to suck on her magnificent nipples that stood out after the cold shower. As I was still towelling off, Joanne skipped back to my office and I walked in to find her laying on the lounge with one leg up on the back whilst she looked again at her hairless mound and cooed how nice it felt.\n\n\"Let me feel\" I said as I squatted down at the end of the lounge and gently ran my hands over her flat stomach, over her mound and down her inner thighs.\n\n\"That does feel very smooth and oh, so inviting!\" I said as my erection started to make itself noticed.\n\n\"Tom, I want you to do something for me.\" Said Joanne.\n\n\"Anything! Was my immediate reply whilst I ran my hands over her incredible smoothness.\n\n\"Just fuck me!\" she said.\n\n\"I can't do that.\" I replied and watched Joanne's expression change to one of disappointment. Just as she was about to ask \"why not\", I quietly said:\n\n\"But, I can make love to you!\"\n\nThe End"
    ],
    "authorname": "tomtom45",
    "tags": [
        "caught masturbating",
        "female masturbation",
        "office sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/holding-out-1"
}