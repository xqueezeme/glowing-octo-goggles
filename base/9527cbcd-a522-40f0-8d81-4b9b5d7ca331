{
    "title": "The Twelve Zenati Pt. 33",
    "pages": [
        "Authors note: Hello everyone. While I acknowledge there are many people out there with far greater knowledge than me, I also would like to point out that this is a work of fiction. In no way is my writing meant to be a factual guide on mental illness or how to manage relationships. Again, I am grateful to MsSensualiT for her continued help to be my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie.\n\n*\n\n12 Zenati Pt 33\n\n\"Okay, I have to go. You have one job now, remember?\" Noah arched an eyebrow at Marcella.\n\n\"Stay with Gideon and Genesis,\" she said automatically. \"Please don't worry. I promise I won't disappear again.\"\n\n\"Okay,\" he repeated and leaned down to kiss her forehead. He hated leaving her, but he had to go to the circle meeting with Xavier. He had lingered far longer than he should have already, and he glanced at his older brother.\n\n\"We've got this. Go do your thing,\" Gideon chuckled.\n\n\"Yeah, okay,\" he said again, knowing he sounded like a broken record. Noah made himself turn away from the table where they ate lunch to stand with Xavier. He wanted to believe Marcella meant what she said, but their history told him that as soon as he took his eyes off her for more than a minute, she would run.\n\n\"Hello, Zenati's,\" a beautiful smiling woman, approached the table. \"Nathanael is a bit eager to see you all,\" she said, addressing Xavier. \"Don't worry about your family. I have plans to entertain my cousins all afternoon at my home, which is where you are headed coincidentally.\"\n\n\"I thought the meeting was here in the hotel,\" Xavier frowned as Oscar walked up behind his wife.\n\n\"Nathanael is doing much better, but it's still a risk for him to come so far, so the plans changed. But you are all invited to come and make yourselves at home in our home,\" Oscar said.\n\n\"I'd love to spend some time with our cousins. I don't believe we have had to opportunity to talk before. Your branch of the family has declined most of our invitations to the gatherings for a while now,\" Ally said. She watched curiously as the two sisters frowned at each other after hearing this information but said nothing. \"Shall we go?\" She asked, keeping the welcoming smile on her face.\n\n\"I was hoping to see Isadore while Noah was caught in his meeting,\" Genesis spoke up. \"I don't suppose he could meet us there?\"\n\n\"He was expecting that, and my cousin Louis was hoping to talk to Gideon as well. He's a bit obsessed with big metal things that fly, and Gideon is supposed to be the expert to go to about all things mechanical flight-related,\" Oscar chuckled.\n\n\"I think Olivia and Marcie had wanted to see their mother this afternoon. Do you think the meeting will go for long?\" Vivienne asked, knowing her husband would lose all track of time once engaged in a debate on aeroplanes of any sort.\n\n\"I'm sure we can organise something after we have a chat about everything that happened. I wasn't able to meet you properly in Darwin, Marcie, so we have a bit to talk about,\" Oscar said and felt Noah bristle.\n\n\"I'm sure that can wait until the meeting is over,\" Xavier immediately jumped in to forestall any rash words or decisions from Noah. \"Looks like we are all going, so we may as well make a move,\" he said, trying to keep his voice light despite the waves of agitation rolling off the man beside him.\n\n\"Our security is better at the house,\" Oscar said quietly to Noah. \"We have everyone's best interests at heart with this request.\"\n\nNoah nodded, but said nothing returning to Marcella to take her hand in his before following the leaders of the Gambaro out to the waiting cars. He considered what Oscar had said as they drove to the home, which was thankfully not far away. Marcella seemed content to sit in the silence of his brooding without comment.\n\n\"You okay?\" Noah asked in hushed tones as they pulled up in front of the Gambaro mansion.\n\n\"You worry too much. Go to your meeting. I will be quite fine, and I won't go anywhere without you,\" Marcella reassured him.\n\n\"Fuck, Marcella!\" Noah pulled her to him as they climbed from the car. \"Where is my bossy Kitten who would not be taking all this without a fight?\"\n\n\"You want me to fight you?\" she asked, blinking wide eyes at him.\n\n\"No! But the Marcella I know would not be taking this without at least telling people what she wanted to do,\" he sighed. \"It's like you changed overnight, and I don't know what to do or how to react to you now. I love you, and that will never change. I'm just not sure how to help you now.\"\n\n\"I love you too,\" she said quietly. \"You don't have to help me with anything. I'm fine. Everything is fine now. Olivia has Genesis to look after her. Jessa has her kids and the Farnese family to look after her and my mother. Well, she is finally free now that my father and uncle are facing the consequences of what they did to us. Everything is right in my world. There is no need to worry about me anymore. Not even Konrad could get through all the security you have around me now.\"\n\n\"That's true,\" he said, letting his eyes scan their surroundings, noting the security as he guided her inside the house. Noah wanted to believe her, and she seemed so sincere when she spoke. Still, this woman wasn't his kitten, she purred and snuggled against him, but she no longer had any of the spirit that helped her and her sisters survive a life of violence and trauma.\n\n\"No matter what our hosts say or offer, you stay with Gideon and Genesis at all times, okay?\" Noah reminded her as they entered the foyer and found their hosts waiting for them.\n\n\"Of...\" Marcella began in another attempt to reassure him but froze. Her eyes became wide, and her body stiffened before she dropped her head and moved closer to Noah as if trying to hide her face in his chest. \"I need to go. I can't be here,\" she hissed, a sliver of the Marcella Noah knew so well coming out in her voice.\n\n\"What? What happened?\" he asked urgently a moment before Vivienne and Olivia appeared beside Marcella. They spoke in low voices to her, and Gideon moved swiftly to intercept one of the men Noah couldn't make out in the small crowd entering the foyer of the house.\n\n\"He's not here for you,\" Vivienne whispered. \"He's here for the meeting just like every other leader of the tables.\"\n\n\"I doubt he even knows you are here at all,\" Olivia said, backing up Vivienne. \"Let's go into the sitting room, Emma pointed out. It's not you; he's here for.\"\n\n\"It's okay. We can stand here for as long as you need,\" Noah reassured her when she refused to move with Olivia and Vivienne. He watched as Gideon greeted Marcus Battaglia and engaged him in conversation. He watched as the two men moved toward the conference room where the circle was gathering.\n\n\"You ready?\" Xavier asked as he approached Noah.\n\n\"Give me a few minutes. We just had a moment of panic when Marcus Battaglia walked in,\" Noah murmured.\n\n\"Shit,\" Xavier swore and looked down at Marcella before seeming to make up his mind about something and drawing a breath. \"Chella, look at me,\" he said sternly, surprising Noah. Her head came up, and the flash of the warrior in her eyes was momentary, but Noah caught it. She moved to stand without leaning on Noah, focusing her attention on Xavier as the flash extinguished, and she bowed her head again. \"You are under my protection here as you always were in Darwin and as you were in Adelaide. No one will approach you without going through me, and no one will take you from this place except myself or Noah. Am I clear?\"\n\n\"Yes, Sir,\" she answered almost automatically.\n\n\"Good, now you will go with Genesis and our own security team to meet with Emma and Oscar. If you feel uncomfortable in any way, you will tell one of the Zenati immediately. They will come and tell Noah and me. You are safe here. I have made sure of it. Now go while we attend our meeting.\"\n\n\"Yes, Sir,\" she said and looked up with soft eyes before turning to her sister and Genesis and walking away.\n\n\"You seemed to forget she is Chella now. The girl the Battaglia and in particular Apollo trained to be the perfect submissive wife for him. You can't coddle her, or she won't respect you, not as she is at the moment,\" Xavier lectured Noah and walked towards the conference room.\n\nNoah knew that wasn't necessarily true. His Marcie was in there, locked away at the moment, but she was in there. Still, what Xavier had said saved him from having to take on that dominant role with her outside of the bedroom. He knew he had a job to do here, but he also needed to ensure she was safe not only from herself, but from the men who sought to use her for their own gains.\n\nXavier and Noah needed to present the circle with their findings on the Varangian and his guard. Then they needed to discuss the likelihood that it had been him behind all of the strife between the Tables and the Suebi over the past decade. While helpful in recent times, he also believed the Tater had their own agenda, and he wanted Matteo, through his family's links to the mystic community, to seek out their elders for more information. Something was going on with the three Gambaro sisters that made them, particularly Marcella, important to the Varangian leader.\n\n*****\n\nMarcella and the people who were there to protect her were shown into a sitting room with several Gambaro family members. She sat back and let Olivia answer questions about their lives and barely listening until she heard her mother mentioned.\n\n\"Your mother was distraught when your father was arrested,\" Ally explained. \"She required some sedation and was moved to a family clinic so she wouldn't harm herself. You can visit her there, but she may not be the same woman you remember. I believe the last year has been very hard on her, particularly when she was led to believe Jessa had taken her own life.\"\n\nSadness filled Marcella at the horrible world in which her mother had existed over the past few months. Jessa had been the one who was supposed to stay home forever and care for her father once her mother had served her purpose in his life. The fact that her father had to give Jessa up to a blackmailer hadn't gone well for her mother. She wondered briefly if her father had somehow replaced Jessa with another young woman without Marcie knowing. Not that she had been welcome to visit her mother at the family home once she cut her ties with the family.\n\n\"She loved Jessa,\" Olivia said without recrimination.\n\n\"She was allowed to love Jessa, you mean,\" Marcella said softly. Drawing strength from her bound warrior and pushing Chella aside, Marcie came forward. The battered and bruised girl who had survived her father asked, \"Who else was in the house with my parents?\"\n\n\"Marcie?\" Olivia asked tentatively. \"No one else would have been there. You know how Papa was about privacy.\"\n\n\"A contracted woman was living in one of the spare rooms,\" Ally interrupted Olivia, who turned to her with wide eyes. \"She claimed to be contracted to your Uncle Severino but had been instructed to help your mother and serve Nunzio as needed.\"\n\n\"Fuck, I should have known,\" Marcella swore. In her mind, she screamed at the two halves of her psyche, which had left her mother vulnerable when she had found out what had happened to Jessa. She hated to think of what might have happened to her mother if the Gambaro table hadn't intervened.\n\n\"Marcie?\" Olivia asked again just as tentatively as she had the first time.\n\n\"What?\" Marcella barked back at her sister and instantly regretted it. \"I'm sorry, Olivia. I'm just mad at myself for not realising what would have happened once Papa realised he wouldn't get Jessa back at all. What did you ask?\"\n\n\"I asked if you were Marcie again. I need my sister back. I need Marcie, not Chella or Marcella. I want the sister who came to Darwin to protect me from the Suebi. I want the sister who wouldn't back down or leave when I asked her to when I was still recovering from everything that happened to me,\" Olivia said with tears in her eyes. \"I want the sister who didn't back down in the face of Genesis and his family taking over my care and the sister who didn't put up with Noah always being in her way. I want the sister who never gave up on Jessa or me no matter how badly we treated you.\"\n\n\"And I want my best friend back, the protective sister who adopted me as one of her own,\" Vivienne added, caught up in the earnest tone of Olivia's plea.\n\nGenesis said nothing but came to stand behind Olivia as Gideon nodded to Vivienne and motioned to the other ladies to give the sisters some space. He shrugged off the interaction off as normal family tension after everything that had happened to them. He suggested that giving them some privacy was probably the best thing they could do for the sisters who had suffered so much at the hands of their parents.\n\nMarcella stared at her sister without saying a word as a battle raged within her mind, and she fought all that she wanted to do and be for everyone in her life. She wanted to save the people she loved. She wanted to accept Noah's love and that of his family. She wanted to find and comfort her mother and organise for her to travel to Adelaide to be with Jessa so they could both be happy again. The different factions in her mind, though argued without end:\n\n\"We should get up and find Mama!\" the Warrior that was Marcella raged.\n\n\"We should stay here and not run from Noah again. We promised him,\" Chella argued.\n\n\"We should tell Noah about our fears for Mama and ask him to let us leave with Gideon and Genesis to see her and ease her pain,\" Marcie offered between the two.\n\n\"There are Battaglia here! We can't trust anyone here! We have to go alone. We need to get away from this place,\" the Warrior broke free of the remainder of the chains suppressing her dominant personality.\n\n\"They aren't here for us!\" Marcie counselled. \"We need to look after Olivia. She is the one telling us she needs us, needs me!\" her battered and bruised form came out from the shadows allowing the other two to see who wore all of the scars of their choices.\n\n\"You can't help us do anything. You are barely strong enough to show yourself,\" the warrior raged as the submissive shrunk away from the vision of the true woman they were behind all the bravado.\n\n\"Look what your choices have done to Marcie,\" Chella hissed at Marcella. \"Take a good look and ask her to run from the people who would care for her and help her heal only to gather more scars.\"\n\n\"I can protect us. I have always protected the people we love, including us,\" Marcella screamed in denial at the visage before her.\n\n\"Look at her. You can't protect us any more than you could protect Olivia or Jessa or Mama. Look around the room. They fixed the mess our parents and uncle made, not you!\" Chella retaliated.\n\n\"I found the boat and the missing Suebi at Hermione's,\" Marcella raged.\n\n\"No, Marcie found the boat and started the trail to the missing Suebi. You just finished her investigation. You did nothing but push away the people who cared about us. Your actions hurt people or got them hurt,\" Chella said sadly.\n\n\"Well, you can't talk! You have never done anything but accept the punishment that gave her the worst scars and made promises she never wanted to keep, and I couldn't let her keep. Fuck! You are as useless as a one-legged man in an ass-kicking contest!\" The warrior raged.\n\nMarcie watched, as if from a distance, as the two combatants in her mind continued to rage at each other. She seemed frozen in space and time as she closed her eyes and tried to block out the vision of Olivia with tears in her eyes. The image that had pulled her from the shadows of her mind to try and be present again for the one sister who still cared about her.\n\n\"Vivienne!\" Olivia called, watching as Marcella closed her eyes and fell back against the cushioned sofa as if she fainted or something. She had been talking to her for so long without any response while Marcella seemed to look through her. She wondered if what she had said had been what made her sister block herself off from the world around her and the people who cared for her. \"Genesis, do something, please!\" she whispered, her voice cracking with emotion.\n\n\"She's probably just overtired from last night. Noah didn't look any better this morning,\" Genesis reassured her. He and Gideon gave each other a look, questioning if they should disturb Noah in his meeting. The girls had been talking for an hour or more before the conversation about their mother had come up, so he couldn't imagine it would take much longer to deliver the crux of the information. If it were Olivia who had appeared to pass out, he would want to know immediately, if not sooner. Gideon saw the look of worry cross Genesis's face, who then nodded and left the room searching for Noah.\n\n*****\n\n\"X-man,\" Dante greeted Xavier. \"It's been too long. Come sit with me for a minute while the rest of these dickheads get their acts together.\"\n\n\"Have you met Noah?\" Xavier asked. \"Dante was the one who alerted us to Marcella's presence in Brisbane,\" he explained as a way of introducing the two men.\n\n\"Thanks,\" Noah nodded and bit his tongue, wanting to rage at the man for letting her leave his gallery.\n\n\"I don't blame you for being pissed at me. If it had been Peri, I probably would have taken a swing at you already,\" he chuckled. \"I applaud your self-control. You remind me of my brother. He was the strongest, most passionate guy I ever knew. There wasn't anything he wouldn't do for those he loved, but you didn't want to get on his bad side. So please accept my apology and know that I was made to suffer for not holding her against her will.\"\n\n\"What's done is done. I have her now, and that's what matters,\" Noah accepted his apology ungraciously and felt a pang of guilt for losing all of his self-control when it came to Marcella before this lunch and meeting. He wanted and needed her and had loved her, but it hadn't been his kitten, only the docile tamed part of her, and he wanted her in her entirety. He tried to remember back to the beginning and the woman he had first met and bantered with in Darwin. His stupid decision not to sleep with her when she had issued the invitation had been a colossal mistake. So much had happened to both of them since then, but he was determined to help her heal and get his Marcie back and show her real love. Not just his love, but that of a loving family.\n\n\"Hey, Ricco couldn't make it, sorry,\" Matteo said, having found out that it was Xavier who called this meeting, not their host Nathanael who was still considered too injured for a flight anywhere.\n\n\"I'm glad you could make it after everything you went through up in the Kimberley's,\" Xavier said. \"Once you hear our version of recent events, I think you will understand why we asked for you and your brother to attend. Not just because he is a hero, but because there is a bigger picture that we hope you and he can help with.\"\n\n\"That sounds ominous,\" Matteo frowned.\n\n\"Alright, you losers, settle down. The invalid wants to talk,\" Massimo chuckled as the men took their seats around the table.\n\n\"Thanks for that glowing intro, Mo. No chance of my ego getting out of control in this group,\" he laughed lightly. \"This isn't my meeting, but Xavier was kind enough to hold it here so I wouldn't miss out due to my current invalid status. Welcome to Soliman Pelligrini. I trust that Phil has filled you in on why we twelve come together regardless of our stations amongst our tables?\"\n\n\"He did,\" Soliman said in perfect English even though his European accent was quite thick. \"I am honoured to be counted amongst your circle of friends.\"\n\n\"The only way forward is by being united,\" Phil said. \"So put any petty grievances and even some big ones aside for today and listen to what the Zenati have to say without interrupting. If you ever trusted my gift, now is the time to remember that. I don't know the details, yet I know it's fucking important for all of us to listen to the man Xavier brought with him, Noah Zenati. In the same way it was important for all of us to listen to Ricco when he sent his warning out.\" He nodded to Matteo before taking his seat.",
        "\"Fuck, when did Phil grow a pair?\" Solomon Armarti asked the man beside him, Marcus.\n\n\"When we were together in Kuala Lumpur, I think,\" Marcus said seriously, narrowing his eyes at Phil as if in thought. \"Suits him,\" he shrugged.\n\n\"Fuck off, Smartie,\" Phil rolled his eyes but using Solomon's nickname now that there were two in the group with similar names. \"You're up, X-man!\"\n\n\"We haven't all had the chance to get together like this since the MattCat phenomenon and I know you're all eager to share stories of the latest incident that involved all our families. My deepest sympathies Theo for the loss of your mother,\" Xavier started.\n\n\"What is the MattCatt phenomenon?\" Solimon Pelligrini asked.\n\n\"Matteo had withdrawn from our group and mostly from family life until he met the lovely Catriona, hence the MattCatt name. They were the ones to unravel the plot against the mothers of the tables and send out the warnings.\n\n\"I don't want to beat around the bush or waste anyone's valuable time, so I will just lay out the reason for this emergency meeting. We believe we have the evidence to show that everything that has been happening to the tables over the last decade has been orchestrated by a faction that used the Suebi as their soldiers and scapegoats.\" There was a general murmur of surprise and disbelief from his friends. Xavier held up his hands to quiet the group and stated, \"Please, let me explain.\"\n\n\"I know a lot of what the Zenati is about to tell you, and trust me, it's worth giving consideration,\" Massimo boomed, making his friends pay attention. \"We don't call these meetings on hunches or gambles. The evidence is there if you take your heads out of your asses and look properly. That includes me and the troubles that have affected my Table as well. Take notes,\" he chuckled. \"Because your about to hear a pretty fantastic story. The evidence that its more than just a story is piling up, and I bet each of you is sitting on even more evidence to prove the theory these men will put to you. So, as Phil asked in a much nicer way, shut up until they're done.\"\n\n\"One moment,\" Dante interrupted. \"It just so happens that I have bought you all some personalised notebooks for this meeting because although I don't know much of what is going on, I know enough to be sure this meeting was necessary, so the sooner we let X talk, the sooner we can tuck Nathanael back into bed with the lovely Ally,\" he smirked. \"We all know that's the only reason you stay in there so much,\" he laughed loudly and passed around the notebooks.\n\n\"We have evidence dating back as far as the death of Christo Donati. However, more recent times are easier to collate evidence for and find the common denominators,\" Xavier began again. \"In the interests of expediency, however, I will limit what I say to the last five years or so, and you can all judge from that and add your own knowledge from individual family investigations.\" He started with an issue and rivalry between the Gastone family and that of the Farnese family, plotting it out and highlighting some glaring clues about third-party involvement. He spoke about the Pelligrini involvement with the Suebi and the deaths of several members of the Donati family. That coup and the damage that was done to the Battaglia reputation when they were already suffering from the blow to their reputation Marcella's father had caused by sending her not once, but twice under-aged and with false claims of drugs and other misbehaviours took quite a few men by surprise not the least of which was Marcus who was taking notes furiously.\n\nXavier wove the web he was sure belonged to the Varangian. He highlighted the strife each incident caused between multiple tables at a time until each family had a reason to be wary of the others, instead of uniting and realising that they all had one common enemy turning them against each other.\n\n\"Who here doesn't put at least some responsibility for the attempt on all of the mother's lives on Theo and his family? Who here isn't questioning sending any of their family members to the Battaglia for help or training after their reputation has been torn to shreds in recent years? Are they still the great arbitrators, or is the thirteenth meeting more often over small issues because that trust is broken? Who here has made a concerted effort to embrace the new Pellegrini Table by visiting them and wishing them continued success in our country?\" Xavier asked his friends.\n\nPhil cleared his throat and raised his hand slightly, bringing a chuckle to the seriousness of the conversation. And everyone relaxed as Xavier delivered his final question.\n\n\"Ask yourselves, who stands to gain from splintered and suspicious tables as well as the decimation of the Suebi?\" Xavier asked.\n\nFollowing Xavier's question and the silence from the men who surrounded them, Noah got to his feet. It was his job to deliver the Zenati evidence of what happened after the attack on the mothers and the story of the three sisters who had brought at least half of the tables into conflict with each other. As well as their admitting their own culpability in those conflicts, Noah would also highlight their recent suspicions about the Tater's motivations.\n\n\"Before Noah talks as to what has happened recently to make you draw your conclusions and discover the ones behind all these attacks, I'd like to take a moment if I may,\" Dante said, coming to his feet and motioning Noah to retake his seat. Since we all met in Kuala Lumpur last year and went to see MattCat get married, everybody at this table has expressed how much they miss Lio. Xavier may have glossed over that part of his story because he loved him best. Still, I'd like you all to take a moment to remember that one of us, one who belonged to our circles, was targeted and killed by the men playing these lethal games with our lives and those of our families. Don't dismiss what Noah or Xavier said because it sounds outlandish. The facts are often stranger than fiction, and Lio would have been the first one to want to help unravel this mystery with the Zenati and serve justice.\"\n\n\"It would be a mistake to think the reputation of the Zenati is something kept alive only in the history books. His own actions against the Zenati and the three sisters have already doomed the man behind all of the troubles and rifts between our tables. Even as we speak, the Black Blades seek out their enemy to end his games once and for all,\" Noah explained. \"We are here because our fathers would rather sacrifice themselves, than request assistance from the men in your territories. We expect the game master has factored that into his web of misdeeds. Taking on each table alone was his aim with all of the games he has played thus far. The Game Master is Konrad Van Kempen and is the leader of the current Varangian Guard. He put his own people in place to take over from the decimated Suebi in each city that we clear of the clans. How do we know that?\" Noah asked and looked around the table. Then he began to tell the tale of the three sisters and the Suebi in the north and how Marcella had been taken first by the hidden Suebi and then by Konrad, where she had heard and witnessed much of his plans.\n\n\"We have assisted the Zenati in locating and making his fortress in our territory untenable for him to return to hide in,\" Dante interrupted again. \"Using the information that helped us to find the first fortress, we expect each of you could also locate his hiding spot in your territory if he has one,\" he added placatingly. \"We could back him into a corner if we are all seeking to find him and taking out his nests as we find them. True, the Zenati want him and seek him now. Still, each of our family has their reasons to track this man and confine him to the deepest mining shaft in this state,\" he chuckled at an emphatic head nod from Nathanael.\n\n\"I know just the one,\" Nathanael said seriously.\n\nNoah sat down and finally let the men speak openly about everything they heard. Though he hated to admit he had doubted Xavier initially, not one man questioned the validity of their claims about Konrad. As he listened and watched, he saw the full might of the twelve tables brought to bear within this small group. He realised he had left out two crucial facts as Dante had interrupted him.\n\n\"If I may,\" he said into a tiny gap in conversation, \"I wasn't quite done. I have two other things for you to consider. Firstly, knowing that Konrad is putting his own people into the vacuum left by the Suebi, how do we know that the elusive Tater are not working with him rather than just helping clean up the mess left by the Mother's Day attacks?\" he asked. Then when his question was met with stunned silence, he continued. \"The three sisters who have brought strife to up to half of our tables are still being sought by Konrad. One is in the care of the Farnese family and has been secured in Adelaide. The other two travel with us. He is particularly interested in the middle sister who has been the cause of issues between the Battaglia, the Martino, the Farnese, the Donati, the Gambaro and the Zenati to this point.\"\n\n\"Perhaps even the Sergi depending on what side of the border their map says his nest was on.\" Dante chuckled. \"She's been a very busy girl.\"\n\n\"Something to consider if he wants her so badly. Maybe she could be the catalyst to draw him out of hiding?\" Zachariah Gastone suggested.\n\n\"No!\" Xavier said before Noah could react and possibly punch the man for the suggestion. \"She is a very resilient girl who has been forced from one abusive situation to the next her entire life. Understand me when I say this, she will not, in anyone's schemes ever, be forced into situations not of her own choosing again. She is the reason we know about the Game Master's involvement at all. We owe her a debt, not the other way around.\"\n\n\"That explains all the extra security,\" Solomon nodded. \"It seemed excessive even for our circle.\"\n\n\"If they ever need a safe space in the middle of this storm, you are welcome to bring them to us. We would be the least logical carers for anyone playing games, a master or not,\" Soliman Pelligrini offered.\n\n\"Thank you, but I doubt their fianc\u00e9s would allow them that far from their sides,\" Xavier said again, saving Noah from the angry retort he swallowed down.\n\n\"They would be welcome as well,\" Soliman smiled and nodded to Noah, who made no attempt to hide his anger at the suggestion.\n\n\"Well, I understand the necessity of this meeting, gentlemen, but I have a very badly injured wife at home. I have found this very enlightening, and we will start our search and surveillance the moment I return. He will find the A.C.T. a very inhospitable place to roam or call home,\" Marcus promised, picking up the information packet Xavier had provided with the evidence and photos inside. \"Whatever you need, ask, and we will do our best to accommodate. Happy to meet again next month. It's true that circumstances have kept us apart and blinded us to the link behind the troubles we have all faced. Probably best to put an end to that with us if the thirteenth can't see eye to eye yet.\" With that said, he left the room and hurried from the house.\n\n\"It's good to see you all again, but I know most of you came under duress and are worried about your families. Thank you for your time and support,\" Xavier said. \"Matt, can we talk before you leave?\"\n\nPhil and Dante stayed with Matteo. The small group sat closer to Nathanael and Xavier as the other men left, heading back to their own homes. They knew that what was spoken about within the small group would be discussed with them at some point.\n\nNoah stood, panic falling over him as he saw Gideon attempt to push his way into the room past the watchers guarding the door. He hurried over and found Massimo beside him, clearing the way.\n\n\"Let the man through you idiots. The Zenati called this meeting!\" Massimo boomed at the men guarding the door.\n\n\"They wouldn't let me in,\" Gideon grumbled as Noah ran past him to where Marcella had been taken.\n\n\"You have the closest ties to the Tater,\" Xavier began realising something had gone wrong with the rest of his party, he spoke rapidly with his friends. \"One or perhaps two of the Tater have been overly involved with Noah and Marcella giving very cryptic predictions and advice as if playing with them and the Game Master. We have genuine suspicions about their motives. Anything you can find out would be helpful for us because, at this point, we don't trust them at all after Noah and my brother were shot after one of her cryptic warnings.\"\n\n\"I can understand that,\" Matteo drew in a breath and flicked his eyes to Noah before responding. \"I don't know what they will tell me, but Ricco or my wife may be able to find out what you need. What we need,\" he corrected himself.\n\n\"Thank you,\" Xavier said, calming from his anxiety of having to ask Matteo to aid them so directly.\n\n\"Being shot doesn't tickle,\" Nathanael said and looked around, only now seeming to realise Noah had left the room.\n\n\"Noah's was only a graze, but my brother suffered greatly when shot in vital body parts,\" so I can only imagine your pain, Xavier admitted. \"He was shot in the chest at close range trying to protect Noah and Marcella.\"\n\n\"So was he,\" Oscar said, coming into the room as most of the others had left. \"Not protecting Noah and Marcella but protecting the little mother of our family and me. Some sort of hero shit there, trust me. I imagine you feel the same about your brother, so I'm going to insist the meeting end for now so he can become that hero again and save me from that little mother's nagging about him overdoing it when he is still recovering from several bullet wounds. Also, I believe Noah will want to seek some assistance for Marcella that you may need to encourage occurs here with our physicians.\"\n\n\"Thanks for letting us do this here,\" Xavier said and rested a hand on Nathanael's shoulder. \"Rest and recover, my friend. Then you can kick his butt to rest more rather than dogging your every moment of his free time.\"\n\n\"If you knew Ally, you wouldn't blame him,\" Nathanael chuckled. \"I'll talk to you soon, X. We'll get this guy and teach him what the consequences of messing with the tables are. Now go look after your family and mine.\"\n\n\"It's all good. We all need to get home. Particularly those two,\" Phil said, standing with Dante. \"Noah looked like he is about to implode when he left. As does his brother,\" he pointed at the door where Gideon had been trying to get Xavier's attention. The group chuckled as they all stood to walk from the room.\n\n*****\n\n\"What's wrong with her?\" Noah asked Vivienne after hurrying to Marcella's side.\n\n\"She's fine. She just isn't responding to us verbally. Give her some time to process what they told us about her mother,\" Vivienne explained calmly. \"Her breathing, pulse and reflexes are totally within normal limits. It's like her mind has just shut down.\" She ran a nail down Marcella's forearm to her open palm, leaving a white score in her wake, and Marcella's hand curled and flexed at the minor discomfort.\n\n\"Fine, we were leaving anyway,\" Noah said in a friendly voice and lifted Marcella from the couch into his arms. \"She can have all the time she needs on the way home.\"\n\n\"But won't she want to see her mother?\" Ally asked, not understanding what was happening to her guest.\n\n\"I trust you have her in a secure facility,\" Genesis interrupted. \"We will be able to return when Marcella is stronger, but she has endured a lot recently.\n\n\"Let them go, Ally,\" Oscar said, a touch of sadness entering his voice as he watched the unresponsive girl in Noah's arms. \"They have her best interests at heart and will return when she has recovered sufficiently from her ordeal. I appreciate you coming on your way home. My wife would have meant no harm imparting the information about the girls' mother.\"\n\nNoah didn't say another word as he strode from the room and the house. He got into a car awkwardly and found Genesis push in beside him after depositing Olivia into the front seat.\n\n\"She almost seemed like the Marcie we knew before she spaced out,\" Genesis informed him. \"The talk wasn't just about her mother, but Jessa as well. That their mother was allowed to love Jessa, and she asked if anyone else was found in the house when they found her mother and put her in the clinic so she couldn't harm herself anymore. There was a new housekeeper contracted to Severino but placed in the house to serve Nunzio.\"\n\n\"We need to go and see Mama, make her understand that Jessa is okay and that she can go to see her and the boys. We can do that, can't we?\" Olivia asked, her eyes filling with tears. \"Marcella needs to see that Mama is okay, and she would suggest the same thing if she could.\"\n\n\"Massimo,\" Marcella said, not opening her eyes. \"Massimo can take Mama to Jessa,\" she said on an exhalation of breath. \"Save them both,\" she seemed to sigh. \"I can't... Mama won't...\" Her voice trailed off.\n\n\"Please, Genesis. It will help her. Help them all. I know it will,\" Olivia pleaded.\n\n\"Fuck!\" Genesis swore and ran a hand through his hair before stepping out of the car again, searching for Massimo and Oscar with Olivia following him. He waited long enough to take her hand in his before starting his search again. Noah quickly called Xavier and asked him to help Genesis. A few minutes later, Vivienne and Gideon climbed into their car.\n\n\"It's being taken care of, and the Gambaro doctor is meeting us at the hotel. We'll ride with you and half the security team. They will follow us once the plans have been made for the girl's mother to travel with the Farnese and stay with Jessa to help care for the boys,\" Gideon told Noah. The driver started the car and moved off slowly toward the hotel, aware of the unconscious woman in the rear seat, but not saying anything.\n\nNoah held Marcella close to his body. She'd spoken to them, and that was a good sign. He could understand that after everything that had happened in the last few days, she was exhausted. Fuck he was tired, too, if he was honest with himself. He just wanted to get her home and lock themselves in the cabin or his apartment or even the clinic where they had their athenaeum based now and not come out for a week.\n\n\"She spoke to you?\" Vivienne asked.\n\n\"It was more in response to something Olivia said, but yes, she spoke and then seemed to go back to sleep,\" he explained.\n\n\"What did Olivia say?\" Gideon asked, curious as to what was going on with this woman now.\n\n\"I said I wanted to take her straight home, and Olivia argued that she wouldn't want to leave until she saw that her mother was safe. When she heard that, she said Massimo's name and mumbled about him saving them both by taking their mother to Jessa and that she couldn't or wouldn't. Then she blacked out again,\" Noah explained as if getting the story straight in his mind.\n\n\"Even unconscious, she's still fighting to save her family,\" Vivienne sighed and picked one of Marcella's hands up. \"Come back to us, Marcie, we need you, all of you, not just the parts you think we want to see,\" she squeezed her hand and gasped, looking down as Marcella squeezed her hand back.\n\n\"I'm trying,\" Marcella said in a barely audible whispered breath as she turned her face into Noah's body and sighed another breath.\n\n\"Let her sleep,\" Noah said quietly. \"We know she is okay, and as soon as Gen and Olivia make it back, we can make plans to take her home where we can make sure she is safe.\"\n\nVivienne nodded her understanding but didn't let go of Marcella's hand.\n\nThe lack of sleep the night before and dealing with everything that happened this day made Noah as exhausted as Marcella seemed. More than anything, however, he just wanted to get his girl home to the Northern Territory. He could protect her properly there and ensure the Game Master couldn't get to either her or Olivia. Jessa and her mother were now under the protection of the Farnese family. They would probably heal better after being together again.",
        "When they arrived back at the hotel, Noah carried her from the car as he had from the Gambaro house. He began to walk through the lobby towards the elevators with Gideon and Vivienne hurrying alongside him to swipe the cards for access when a voice stopped him.\n\n\"Mister Zenati,\" the concierge called out catching their attention.\n\n\"You go up with them. I will meet you there,\" Gideon instructed Vivienne and turned toward the man hurrying towards them, stopping him before he could intercept Marcella and Noah.\n\n\"How can I help you?\" Gideon asked with a smile and his general cheerful countenance.\n\n\"Ah, it was the other Mr. Zenati who I called. My apologies. A package was dropped off for Miss Marcella Gambaro with the instruction that it was to be delivered to her alone. That was her I saw being carried by your brother?\" he inquired.\n\n\"It was, and it seems you and I need to speak about this more privately. Would you have an office we could use?\" Gideon suggested rather than questioned.\n\n\"Of course,\" the man nodded to his colleague. He led the way behind the front reception area to a large office where the manager usually sat but was at a meeting of his own. \"Is there a problem with the package being left for Miss Gambaro?\" he asked, critically eyeing the Zenati brother.\n\n\"Miss Gambaro has a fairly persistent stalker who has kidnapped her and harmed her already. We have only managed to find her in the last few days and are in the process of taking her home, where she will be safe. No one but our own family should know she is here, so no packages would be sent for her without being addressed to one of the Zenati staying at this establishment. Neither were any of the rooms booked under Miss Gambaro's name. So, I would like to know how someone knew she was staying here in the first place. Then I would be curious as to why you would take instructions like that from an unknown person when the woman is here under our protection.\" Gideon kept his smile and most charming demeanour during his questions.\n\n\"I had no idea. If you had warned us, we would have taken precautions and alerted you,\" the concierge said amiably. \"But Marcella is a Gambaro, and I must place her interests above those of your family, I am afraid.\"\n\n\"We will need the video surveillance of the man who left the package and to speak with anyone who spoke to him during his visit here,\" Gideon instructed, ignoring the man's superior attitude.\n\n\"That's the thing. We found the package and the instructions left on the end of the reception desk. Nobody saw anything or spoke to anyone about the package. Our surveillance video will be at your disposal once it is approved by one of the Gambaro's.\"\n\n\"I will call Oscar myself then, shall I? I was just at his home, and he may question why I would be calling him so soon over something so trivial. I am soon to be Miss Gambaro's brother-in-law. I am sure my brother, her fianc\u00e9, would approve of us intercepting this package before it reached her,\" Gideon said crisply. At the same time, he texted Genesis and Xavier about the package left for Marcie by an unknown person and his need for Oscar to intervene. He then texted Vivienne to let her know he might be a while and asked her to look after Marcella while Noah joined him downstairs in the concierge's office.\n\nIt was mere minutes before Noah arrived. He was so on edge that he was jumping at anything out of the ordinary. He was shown into the office and felt an ominous aura radiating from his brother.\n\n\"What's up?\" he asked Gideon ignoring the imperious looking man who must have been the concierge.\n\n\"It seems that an admirer has left a gift for Marcella, but this man claims that his instructions were to give it to Marcella and no one else. We were just renegotiating those instructions,\" Gideon said casually. \"I expect that Oscar will come with Genesis and sort this out for us as this man will do nothing for us unless the Gambaro's say so.\"\n\n\"If Oscar is with Gen, I am sure we can sort this out right now,\" Noah said, giving the man a dark look and picking up his phone. After a minute on the phone with Oscar explaining the situation, he hung up. He raised an eyebrow at the concierge, who had been looking smug as if he and Gideon had been lying about their meeting with Oscar and Nathaniel earlier.\n\n\"He's sending someone within two minutes,\" Noah said to Gideon, who reclined in his chair as if prepared to wait.\n\n\"Perhaps you could wait in the lobby for your Gambaro friend to arrive. I am a busy man and have a hotel to run,\" he said, dismissing the two men as nothing more than lesser family members of the Zenati. He knew the tables' leaders were not moving far from their homes after the recent attacks across the country.\n\n\"Certainly, and might I wish you good luck in your new job,\" Gideon chuckled and dragged a seething Noah from the office. They had barely made it past the hotel reception desk when a harried-looking man raced through the foyer towards them.\n\n\"Gentlemen, I am so sorry. I am Nicholas Rizzolo, the manager of this hotel. I believe some of the Gambaro family are on their way to assist you with your investigation. There is no excuse for this colossal insult to you and your family. Please come, and I will find what it is you are looking for,\" Nicholas invited. He guided them back into the office where the concierge who had not introduced himself to Gideon was now sitting in the manager's chair behind his desk.\n\n\"You can go now,\" Nicholas said in a brittle tone. \"Just don't go far. I believe Taddeo Gambaro is on his way and will want to speak with you.\" He picked up the phone on his desk, and a minute later, a young woman walked into the office as the concierge left. She placed a package on the desk and left again without a word.\n\n\"The package and the note that accompanied it,\" the manager spoke while picking up his phone. He gave further instructions to the hotel security regarding the footage needed from approximately one until four o'clock that afternoon.\n\n\"Are the watchers who returned with us stationed on our floor?\" Noah asked tightly, making Gideon roll his eyes at his brother.\n\n\"Just open the package and let us handle it from there. Gen is on his way back with Oscar. Once you see it for yourself, then you can go back to her,\" Gideon said just as tightly as Noah had spoken, sharing his anxiety.\n\nThe note said precisely what the concierge had parroted to them. The package was to be delivered to Marcella Gambaro only. The package was wrapped simply in brown paper. Noah carefully opened it, not wanting to destroy any evidence by ripping it apart like he wanted to do. Eventually, a boxed game of Cluedo sat on the desk with three replicated cards stuck to the front of the box. The first card was labelled Miss Gold and showed a picture of Marcella in a gold dress. The second card showed a black blade in the form of a dagger. The third card showed the observatory as a room with a telescope pointed through a high window.\n\n\"The game master ensuring she knows he is watching her?\" Gideon asked.\n\n\"I think there's more to it than that. Probably something only Marcie can decipher, but I won't be waking her or asking her about it until we are back at home and safe from his eyes,\" Noah said. \"You can sort out the idiots and surveillance. Call me if you turn up anything else,\" he paused as he began to walk out and turned to his brother with a sigh. \"I appreciate all of this, Gideon. You know that, right? I trust you and Gen to find everything we can before we leave. We can't leave Vivienne or even Olivia alone with her now. I can't let either of them be hurt while we are down here. There's too much danger if he tries to take her while we are occupied by this stupid nonsensical package which may be exactly what he wanted.\"\n\n\"Fuck,\" Gideon groaned, not having thought twice about leaving his wife to watch over Marcella while the armed watchers secured the hallway outside their room. He watched his brother hurry back toward the elevators and turned back to the manager, who hovered close by looking at the strange contents of the package left for Marcella.\n\nReaching the room, Noah was grateful that Marcella still appeared to be sleeping. Still, he immediately barked at Vivienne, who was standing at the windows enjoying the colourful sunset over the ocean.\n\n\"Vivienne, don't stand at the windows,\" Noah explained after barking the single word move a moment before.\n\n\"Noah,\" Vivienne yelped and moved away from the window. \"What's going on?\"\n\n\"Sorry, Viv, but Konrad's watching the hotel. He knows we are here,\" Noah said. \"He left a message for Marcella. Gideon is working with the Gambaro's to sort out the fact from the fiction downstairs. It's probably dangerous for you to be in here with us, but I want you to wait until Olivia gets here before going back to your own room. Reinforcements are coming to help keep our rooms secure. It should only be a few minutes,\" he ran his hands over his face and shook his head. He was so fucking tired. All he really wanted to was climb onto the bed with Marcella and hold her while he slept as well. Soon he told himself, soon.\n\n*****\n\nThe voices in her head were finally quiet, and Marcella opened her eyes to find herself back in the hotel room bed she shared with Noah earlier that day. One look toward the windows told her little as the curtains were drawn tightly, hiding the fabulous view. She considered getting up to open the curtains but paused as a soft, persistent hand stroked over her shoulders and down her spine. Then the gentle hand moved back up as if petting her or soothing her from a bad dream. She was still wearing the dress she had worn to lunch, one of her more feminine choices. She frowned, remembering she hadn't been herself earlier that day. She hadn't been herself for a while now, and she rolled over, coming face to face with the owner of the hand that had travelled her back.\n\nGreen eyes met brown, and she was surprised to see the mix of adoration and heat along with the concern in his eyes as he returned her stare. She could understand his concern. She was aware he had been dealing with her duelling personalities that came out when she could not process the mixture of fear and confusion particular places or people could trigger. She batted away those thoughts, for the moment, and let herself enjoy the moment of silence from her inner voices as she took in Noah's expression.\n\nShe looked with some concern of her own at the man who had fought with her, tried to protect her and claimed he loved her. Her eyes skimmed over the shape of his jaw, the stubble coating his chin, his lips, his nose, his hair, and - finally- his eyes again. She could get lost in those eyes, she admitted, in that look that just might echo the feelings of hunger and lust she was now experiencing. If nothing else, she knew the chemistry between them was as explosive as ever.\n\nNoah was doing his fair share of admiring as well. In front of him lay the most beautiful woman he had ever met. Her new blonde hair cascaded over her shoulders, hiding her soft, delicate neck and coming to rest right above her breasts. He didn't mind the change of colour, but if he was honest, he hoped she would change it back to the warm dark chestnut it had been.\n\nMarcella's rounded and perfect breasts lay barely influenced by gravity, in Noah's opinion, due to the bra holding them in position while on her side. He could imagine Marcella's dusky nipples hardening invitingly and her skin breaking out in goosebumps as they lay so close inspecting each other. Sweeping his eyes upward, he took in the sight of her perfect lips before, once again, locking eyes with her. He wanted to kiss her so badly but was unsure who he had woken up with, the warrior or the submissive.\n\nAs if his thoughts had become a magnet, Marcella moved to press their lips together. Once she had made the first move, Noah had no problem deepening the kiss into something hot and passionate. Noah reached down and grabbed Marcella by the small of her back, pulling her tight against him. Jolts of energy ran through him from each point of contact their bodies made, intensifying his desire into something passionate that picked her up and carried her along with him.\n\nMarcella's hand brushed against Noah's already solid erection through his boxers, and she hummed into the kiss letting her fingers play over it. Noah lifted one hand to push the strap of her dress from her shoulder, exposing one lace-covered breast, stopping to tease her hardened nipple through the fabric as the other grabbed onto her firm ass, pulling her closer still and kissing her harder. Marcella's husky voice matched Noah's throaty growl as they devoured each other's taste and feel.\n\nNoah broke the kiss first and drew in a deep breath while searching her eyes as if looking for something. The fire was there but not the fight, he realised as she mirrored back the need he felt. Marcella closed her eyes and purred as she felt him kiss his way down her body, taking her dress with him as he went with tugs at the material. Each touch of his lips on newly exposed skin sent tiny ripples of pleasure through her. He worked his way down her neck, his kisses trailing down her collarbone and onto her chest. Taking her other breast in hand, he flicked her bra open. Noah locked his mouth onto the tight, puckered bud of her nipple, his tongue teasing her, flicking back and forth across the most sensitive flesh on her breast. Occasionally, he would bite down lightly, the feeling of his teeth causing her to arch her back ever-so-slightly and moan.\n\nMarcella couldn't take being passive any longer. Her fingers found their way into Noah's hair, and she found herself pushing down on his head, urging him lower and lower. Noah complied, trailing kisses down her stomach and stopping, briefly, at her hips, to remove her panties before brushing lightly up against her clit.\n\nNoah began slowly, licking his way down her slit until his tongue found her hot wetness. He spent some time there, running his tongue around her entrance once or twice before penetrating her and then starting the process again. When her moans became more frequent, he began moving back up toward her clit. At the touch of his tongue on the sensitive bundle of nerves, Marcella bucked against his face, almost grinding herself on to him as she used his hair to guide him. It was all he could do to hold on as he pleasured her, her bucking and rolling hips making even that simple task difficult.\n\nWith every moan from Marcella, Noah felt himself grow harder and harder. He had never felt so filled with anticipation. He needed her, needed to feel her around him. He couldn't wait, every fibre of his being urged him to claim the woman he loved. This was his kitten in her entirety. He was sure of it.\n\nMarcella felt the pressure of Noah's tongue recede, only to be replaced by a new pressure as he slid up the bed in a rush to hover over her. She felt him pressing against her, absently wondering at the loss of his boxers, the head of his cock hot with want and desire. He slowly entered her, stretching her by small agonising increments until she thought she couldn't take any more. Then she was empty, the incredible fullness that had just been a part of her suddenly gone. She whimpered and felt his return with a sudden thrust filling her to overflowing, and the waves of pleasure radiating through her making her whimper again. Her hands sought out anything she could grab, one went back into Noah's hair, his bent posture allowing her a firm grip. The other raked nails down his back as he fucked her with complete possession.\n\nNoah was in heaven. Under him was the most gorgeous woman, the woman he loved, writhing in pleasure as he thrust into her relentlessly. Her moans of just his name at first soon became parts of a constant litany that included the words God and Holy as well as the filthy words that from her lips drove him insane with need.\n\nNoah knew he could get used to this kind of pleasure. He had never needed or felt a woman like this before. Marcella fit him like a glove, her tight pussy enveloping his cock with every thrust. Involuntary muscle spasms causing her to clamp down on him each time he pulled out, making the feeling of her even more exquisite. It was more than that though, he felt her in the warmth of his chest, his need to not only claim her but keep her and protect her from the world outside of this moment in this room. He loved this woman and, at that moment, he could believe that she loved him in the same way.\n\nNoah had never been so glad for the stamina he had built up over the years as he was now. Even still, he could feel his balls begin to tighten, and tingles shoot down his spine, so he pulled out. Taking a moment to breathe, he gently encouraged Marcella to roll onto her belly. Instinctively knowing what he wanted, she thrust her ass into the air, arching her back and giving Noah the perfect entry from behind. Diving back into her pussy, he groaned in pure pleasure as the tight depths of her wrapped warmly around him.\n\nHe began thrusting slowly at first. Marcella moved with him, allowing small mewls of pleasure to escape her, which were like music to his ears. Thrusting harder and faster now, digging deeper into his reserves of energy, he reached around her thigh with one hand to stroke her clit and light her on fire. He wanted her to come again but with him this time.\n\nMarcella's mewls became more and more shrill, her cries of pleasure filling Noah's ears, urging him onward. When she came, she cried out her release, her pussy contracting around Noah's cock, and clamping down on him with every spasm that rocked her body. Noah thrust in deeply one final time, burying himself deep into her pussy and joining her in the ecstasy. They both collapsed onto the bed at the same time. Noah's larger body draped over her more diminutive form as their legs turned to jelly and their bodies completely drained of energy. Noah rolled over and pulled Marcella close, kissing her tenderly.\n\n\"I love you, Marcie,\" Noah said softly, catching and holding her green gaze. \"I know a lot is happening for you and to you at the moment, but that is the one thing I never want you to doubt. I love you, and I can and will keep you safe if you let me.\"\n\nMarcella considered closing her eyes and hiding from the intensity of this man and his love again. She could let the warrior fight with him for her independence or have Chella submit to his wants and desires, or she could sort out her own shit. She said nothing and keeping her eyes on him while letting out a ragged breath. She had things to do and places to go to sort out her shit, and she knew this man wouldn't stop helping her if she could just trust him enough to tell him what she needed and wanted.. She closed her eyes, considering her choices.\n\nShe heard him sigh at her silence and felt him pull her closer. She opened her eyes again and wondered at the heartfelt sigh he made. \"Was he going to give up on her finally? Give her the freedom she had been arguing about wanting and needing? She found she didn't like the idea of him walking away. Even though he was linked so closely to his table. He had said he loved her. He wouldn't walk away now, would he? Had she finally pushed him too far? Would she be free of the tables to live her own life again if he did leave her? What about Konrad? The game playing prick was probably just waiting for a chance to retake her. No, she was better off here for the moment, and the perks of being with Noah weren't so bad while she sorted out what she wanted to do and share with him. She stroked a hand over his chest and rested it low on his belly, making him chuckle.\n\n\"Sleep, Marcie. Tomorrow will be a long day for us both,\" he said gently and rolled her to her side so he could spoon her and hold her in his arms as they tried to sleep the last remnants of the night away. They hadn't planned to stay the extra night but after seeing the doctor and the drama around the package it was thought best to remain where they were with the full might of the Gambaro's surrounding them.",
        "\"I feel like I slept the day away,\" she whispered back. \"I don't suppose this place has an early breakfast special or twenty-four-hour room service?\"\n\n\"I forgot that you hadn't eaten, sorry. I'll see what this place can offer. Do you feel like breakfast food, or would you rather pizza or Chinese takeout?\" Noah offered. He rolled to his back as he spoke, reaching a hand out for his phone to call one of the watchers on duty with them.\n\n\"What time is it? It's hard to tell with the curtains drawn. Why did you block off the view, anyway? Surely, we are high enough that no one but passing seagulls could see in and only if there was a light,\" she asked, frowning.\n\n\"Something happened yesterday while you were sleeping, and we have ramped up security until we get home,\" Noah explained without telling her what was going on exactly. \"You gave us all a scare when you passed out during the conversation about your mother with Olivia and Ally.\"\n\n\"Mama!\" she gasped, lifting a hand to her mouth. \"Massimo, did you ask him to take her to Jessa? They will both be better off with each other than without,\" she said rapidly as if the words couldn't get out fast enough.\n\n\"Yes, but we couldn't organise her release in time for his flight, so she will be escorted to the Farnese family within the next day or two,\" Noah said in a soothing voice. \"How about I order some food before I tell you about everything that happened. What did you say you felt like?\" he asked and concentrated on his phone while he waited for her answer. He didn't want to tell her about the package but knew he had no choice. If he wanted no more secrets between them, then he needed to lead by example.\n\n\"Is the room service menu around?\" Marcella asked sweetly. It was difficult for him to tell even now which of her personalities he was dealing with precisely. While he was almost positive this was the Marcie he knew best, he still felt she had the potential to fire up and become the warrior if he didn't play his cards right.\n\nHe got up pulled on a pair of boxers and located the hotel folders in the small sofa area. When he turned back to the bed, he realised she had followed him after wrapping the quilt around her body and dragging it over to the chairs where she curled up and put her hand out for the menu. Looking at the first page of the menu, she checked her watch, grateful that she could order breakfast at four a.m. Marcella waited, snuggled in the quilt, and curled comfortably in the chair until Noah had finished ordering and had come back to sit with her before asking a question.\n\n\"So, explain the increased security!\" She demanded without preamble.\n\n\"Konrad or one of his men left a package here for you yesterday. When we returned, there was an issue with getting access to it while you were asleep to ensure it wasn't harmful. Xavier and Oscar both deemed it necessary to open it to ensure your safety, and this is what was inside.\" He brought up a picture on his phone and held it out to her. \"It's being swept for fingerprints or anything which might tell us more about who left it for you.\"\n\n\"Hardly looks like I was in any danger,\" she scoffed as she carefully looked over the image.\n\n\"No, but when it was wrapped, we had no way of knowing. I know you're not happy that something addressed to you was opened without your permission. Still, with everything else that has happened to you recently, we thought it better to be safe than sorry,\" Noah tried to apologise without actually saying he was sorry because he wasn't. He would do it again if it meant being sure she was safe.\n\n\"I guess I can understand that,\" Marcella said slowly. \"So, what are the current theories around what these three cards mean, assuming there was no other written message?\" She raised an eyebrow at him, immediately wanting to investigate the package herself. \"Is Miss Gold even a character in the game? I don't remember a Miss Gold.\"\n\n\"Not in the original set. There might be one in the newer online version,\" Noah shrugged. \"We think that it probably means that Konrad as the Game Master is letting you know he is watching you, and I assume me by the black blade.\" He pointed to each card as he spoke, stopping on the observatory.\n\n\"Okay, I'll buy that theory,\" she said. \"Konrad told me he would be watching me. I'm not so sure he would bother repeating the same thing for your benefit, do you?\" she asked.\n\n\"If he thought the tables were a misogynistic cult like you used to think, perhaps he thought we wouldn't believe you and needed to make the point clear,\" Noah shrugged but watched her reaction.\n\n\"Who says I don't think that anymore?\" she asked, tilting her head at him.\n\n\"Your acceptance of Genesis in Olivia's life even before you left to find the Suebi on your own tells me you aren't as concerned about it as you were. Vivienne and Gideon also got your blessing in the end,\" he explained his thinking.\n\n\"I hate to shatter your bubble, and while some of you may have stepped into the twenty-first century, I don't trust any of the Tables enough to entrust my life to them. I would need a lot more proof than just you and your brothers showing that you can be reasonable and good men to shift the wealth of experience I have of the misogynists in action. Olivia and Vivienne don't have that same experience, and I would hardly go out of my way to spoil their happiness if they are sure it lies with your brothers,\" she shrugged.\n\n\"Exactly my point. Your life was a horror movie directed by your father and uncle. The Battaglia returned you once they discovered their mistake, and...\" he stopped as she cut him off.\n\n\"But they didn't believe me, did they?\" she hissed, getting angry at his continued defence of Table men.\n\n\"Think about how many drug addicts who tell them the same story about abuse of power by their parents and then cut them some slack for needing to check out your claims before releasing you,\" he sighed, realising he was back to fighting Marcella for every inch of leeway she gave him. He glanced at the bed, wondering if that was the last time, he would make love to her and have her love him back in the same way. The word love made him blink, had they made love to each other? She had been there with him that time, and he had felt her love or at least her desire for him.\n\n\"What's with the strange frown. This is what we do. We argue to work shit out. I may not trust all Table men, but I have come around to your immediate family at least. I trust your father as I could never trust mine. He helped me at risk to himself when I was trying to find Hermione's. Shit! That reminds me, whatever happened to that paperwork Olivia signed gifting the house to Bea? Was it on the boat when you found it?\" Marcella asked as if her mind couldn't help jumping from one thing to another. \"God knows you try to take over everything else I do. I can't imagine you weren't the first on that boat when you found it.\"\n\n\"I thought you were one of the dead when I got there,\" Noah said quietly but needing her to hear it. \"I was living my very own nightmare as I waited to find out if you were among all the bodies we found.\"\n\n\"Shit, really?\" Marcella asked, hearing the anguish in his voice. \"I suppose there was no way for you to know what happened to all those people or that I had been taken.\" She looked down, feeling wrong about the heartache she heard in his voice, knowing he and Zanto had been shot only days before. \"How's Zanto?\" she asked into the silence his proclamation had left.\n\n\"Recovering, not happy at being left behind when we heard you were with the Farnese,\" he chuckled. \"He'll be happy to see you again. He blamed himself when you left us and saved my life by taking that first bullet. You don't seem to understand, Marcie. We love you, all of us, though I don't love you like a sister as they do,\" he gave a slight quirk of his lips. \"When you left us to seek out the Suebi alone, I wasn't the only one living a nightmare and believing you had been killed.\"\n\n\"You couldn't come with me, and you knew it even though you tried to convince me otherwise,\" she sighed. \"I had to go alone, or I would never have gotten what we needed to free Olivia. I'm so sorry you and Zanto were hurt because of me,\" she said sadly and looked down at her hands.\n\n\"I don't want to argue with you, Marcie, haven't we done enough of that already,\" Noah sighed. \"I survived, and Zanto survived, and it seems you did too despite still being in danger. I just want you to trust me to help you stay safe. If I see you wanting to go off and take huge risks alone again, I'm not sure I could let you go, not alone anyway.\"\n\n\"I don't need you to take over my investigations the moment it gets a little tricky. If I thought you would honestly let me lead, it might be different. Still, our week together only proved you couldn't let me lead alone,\" Marcella said without inflexion. She was just delivering the facts as she saw them without letting emotions colour the conversation.\n\n\"I really don't want to argue with you here,\" Noah sighed. \"You have to know I never meant to take over anything; I was just trying to help and protect you. I think I did a pretty good job of letting you lead for most of that week,\" he grumbled.\n\nMarcella looked at him as if she would argue but seemed to chew her lip as if holding back the retort she wanted to let out. Noah reached out his right hand to take her left and stroke over the ring she still wore.\n\n\"You tried to protect me in the same way I was trying to protect you. That tells me you care if nothing else. Keeping this,\" he stared down at her ring. \"It tells me everything we have shared has meant something to both of us, or am I truly in this alone?\" he asked quietly, trying to keep the anxiety at hearing her answer from his voice.\n\n\"Pfft, you know I was just using you for your body,\" Marcella grinned at him, lightening the mood and avoiding having to answer his question.\n\nNoah chuckled with her but continued to hold her hand as they talked about the week they spent together, avoiding talking about how it ended. They stopped their teasing banter only when the room service arrived.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-33"
}