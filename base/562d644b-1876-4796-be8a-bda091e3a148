{
    "title": "Mason Ch. 13",
    "pages": [
        "Toni pulled back first; she looked up at Mason and backed away. What had she been thinking kissing him like that? She wondered embarrassed. Mason looked at her but didn't say anything at first; he waited for a minute or two before he spoke.\n\n\"Toni....\"\n\n\"Thanks again for tonight.\" Toni said and shut the door.\n\nMason stood on the other side of the door for a few seconds, Toni's response wasn't unexpected and he suspected that she would spend the morning sorting through her conflicting emotions. He was the first man that she had kissed since James and he had no doubt that she would feel some guilt because she had enjoyed the kiss as much as he did. What she needed now was time to process what was happening between them. He told himself that he wouldn't call her until later in the evening in order to give her as much time and space as he could.\n\nMason drove home replaying the kiss in his mind, it was far better than anything that he could have imagined. Toni's returning the kiss told him that she had been thinking of him in a very non-platonic way even if she hadn't admitted it. The time he realized, was coming when he would have to tell her the truth about himself and he felt a flutter in the pit of his stomach. He thought about leaving his car at home and then returning to the condo to rest but decided against it, he didn't want to take the chance that she would hear something and come knocking on the door.\n\nTonight was going to be a long night Mason realized with a sigh.\n\n*****\n\nToni stood staring at the door for several minutes. \"What now?\" she asked herself when she finally headed toward her bedroom. She took off the dress, hung it up, stripped and got into the shower. By the time she got out she was able to admit to herself that she liked the kiss and that it had felt good to be held. \"Why did I stop the kiss?\" she asked her reflection in the mirror. \n\n\"Because you felt guilty and you're scared.\" she said looking at her reflection in the mirror.\n\nShe tried to tell herself that the kiss meant nothing, that it was just a goodnight kiss and that it was just a part of the whole good night ritual but even as she tried to convince herself, she knew that it wasn't true. She liked Mason, \"no,\" she told herself, \"You more than like him, just admit it.\"\n\nIt was almost seven before she drifted off into an uneasy sleep, in her dreams, she was talking to James. He looked healthy and happy to see her. They talked about many things including the last disc.\n\n\"James, I'm sorry, I didn't mean to...\"\n\n\"Sweetness, it's alright. I like him and he'll take good care of you and Jamie.\"\n\n\"But...\"\n\n\"Toni, I released you so go and be happy.\"\n\nToni woke up with tears running down her face, James had given his approval of Mason or had he? Maybe she dreamt of James because.... Because, \"I needed to hear you say it.\" she murmured. \n\nShe looked at the clock, it was already four and Jamie would be coming home soon. She hopped into the shower and was out in less than ten minutes. Jamie and her parents were walking into the condo just as she put her tee shirt on. Toni braced herself for the inquisition that she would receive from Barbara; Ben wouldn't say anything but his ears would be perked up.\n\nJamie ran into her arms as soon as she was in the kitchen.\n\n\"Were you a good boy?\" she asked.\n\n\"Yep and guess what? Gramma wrote down how to make her pancakes. Can we have pancakes for supper?\"\n\n\"Sure, why not?\" Toni replied.\n\nBarbara was already going through the cabinets checking for the ingredients.\n\n\"Ben, why don't you and Jamie run to the store? We're missing a few things.\"\n\n\"I can go.\" Toni said knowing that it was useless to offer. She knew exactly what her mother was doing and knew that she probably put Jamie up to asking about pancakes for supper knowing that she hadn't been shopping yet.\n\n\"No, your dad and Jamie can go.\" Barbara said as she pulled out a piece of paper and a pen from her purse and began writing down what she needed from the store.\n\nAs soon as Jamie and Ben were gone, Barbara pounced.\n\n\"Show me what you wore! Did he like it? Where did he take you?\"\n\n\"Mom, please I just got up, can I have a cup of coffee first?\" Toni asked.\n\n\"Sure you can, you talk and I'll make the coffee.\" Barbara said.\n\nWhen all was said and done, Toni managed to keep the kiss out of the conversation or so she thought.\n\n\"Are you going out again? And did he kiss you?\" Barbara asked.\n\n\"Yes.\" Toni said and elaborated no further and didn't specify which question the yes was for.\n\nThankfully, Ben and Jamie walked in with sacks of groceries. As Barbara made the pancakes with Jamie's help, Ben had his say.\n\n\"We like him.\" \n\n\"Daddy not you too.\" Toni protested.\n\n\"What? I'm just stating a fact.\" Ben said smiling at her.\n\nToni didn't reply because her parents had already made up their minds. Mason Donahue could do no wrong and he had their ringing endorsement.\n\nWhile they were eating dinner, Jamie hopped on the Mason Donahue bandwagon.\n\n\"When is Dr. Mason coming again?\" he asked as he stole a piece of pancake from Toni's plate.\n\n\"Tomorrow night, he wants to take us miniature golfing and then out for ice cream\" Toni replied.\n\n\"I like him, is he going to be my dad?\" Jamie asked innocently.\n\nBoth Barbara and Ben stopped eating to look at her. Toni's face felt hot as she tried to think of the best answer.\n\n\"It's too soon to talk about that and don't you dare ask him that, do you understand?\" Toni said a little more firmly than she meant.\n\n\"Ok mom.\" Jamie said not understanding Toni's reaction.\n\nToni sighed and apologized, \"I'm sorry baby but its way to soon to be thinking like that.\"\n\n\"Ok.\" Jamie replied although he still didn't see what the problem was.\n\n*******\n\nMason fought the temptation to call Toni all day and finally gave up around six. He called her cell phone and was surprised when it went to voice mail. He tried the house phone next and was pleasantly surprised when Jamie answered the phone.\n\n\"Dr. Mason!\" he shouted.\n\n\"Hi Jamie, how are you?\" Mason asked.\n\n\"Fine, are you coming over tonight?\" \n\n\"No, I have to work tonight but I'll see you and your mom tomorrow night.\" Mason assured him.\n\nThey talked for a few more minutes before Mason asked to speak to Toni. As he waited for her to come to the phone he wondered what kind of reception he would receive.\n\n\"Hi\" Toni said softly as she looked around to see if her mother was listening.\n\n\"Hi, is it still alright for me to call you?\" Mason asked testing the waters.\n\n\"I... sure. Jamie is looking forward to seeing you tomorrow night.\"\n\n\"I'm looking forward to seeing the both of you, is six o'clock alright?\" Mason asked.\n\n\"That's fine.\" Toni said.\n\n\"Good, I have to go but I'll call you when I have a break.\" Mason said and then hung up.\n\nToni hung up with mixed emotions, she needed to have a heart to heart with herself before this thing whatever it was went any further and Jamie got any more attached to Mason.\n\nAs soon as her parents were gone, and Jamie was in his room watching videos, Toni made herself a cup of tea and sat out on the patio to think. The first question that she asked herself was if she liked Mason, yes she answered, was she attracted to him? Oh yes. Did she want to see him again? Yes. \n\nToni took a sip of the tea, she didn't want to ask herself the next question, if she did and she answered it the way that she thought she would, it would mean that she had really moved on and let James go. For several minutes she looked at the water pushing the question back each time it surged forward in her brain.\n\n\"Am I falling in love with Mason Donahue?\" she whispered into the evening air.\n\nThere, the question had been asked she thought but she didn't answer it right away. Instead, she asked herself some other questions the main one being, why had Mason lied to her on at least three occasions? And how did she know that he had lied to her?\n\n\"Toni, you're procrastinating.\" she chided herself.\n\nAn hour later and the question was still unanswered. She went inside to check on Jamie only to find him sound asleep still fully clothed. Toni covered him up, turned off the light and shut his door before going to the living room and turning on the television. She channel surfed until she came to the history channel and then kept going; she had no interest in Stonehenge. Finally she came to 'nick at night' and left it on not really paying attention to what mischief 'Will Smith' and his TV cousin 'Carlton' had gotten themselves into. \n\nShe still hadn't answered that question.\n\n******\n\nThe night was passing slowly for Mason, he was relieved that Toni talked to him and gave permission to call her again but he didn't want to push it by calling her again too soon. He made his rounds and tried to avoid Joyce, he simply had nothing to say to her. By ten, the whole hospital seemed to have settled and it gave him some time to think.\n\nHow do you tell someone that you are over 600 years old? He wondered and how in the fuck do you tell them that you're a vampire and that you drink blood as well as eat food? The list of things that he needed to find a way to explain grew with each passing minute. He glanced at his watch, it was just after ten and Jamie should be in bed. Just as he reached for the phone, Joyce bounced in without knocking.\n\n\"Some friend you are!\" she snapped as she sat down uninvited.\n\nMason didn't reply as he sat the phone down in its cradle.\n\n\"I would have worked for you if you needed me to.\" Joyce said. \"Aren't you going to say anything?\" she asked when Mason didn't respond.\n\n\"What would you have me say?\" Mason asked dryly, \"That I'm sorry that I didn't work for you? That I'm sorry that you missed your concert?\" he asked.\n\n\"You really are a bastard.\" Joyce said.\n\n\"I've been called much worse but since you're here, we need to discuss our working relationship.\" Mason said.\n\n\"What in the hell does that mean?\" Joyce asked.\n\n\"It means that I will no longer schedule myself to work the same shifts as you. Would you like to know why? It is because you continue to spread rumors, as I was coming in tonight, I heard some nurses talking about Toni and I sleeping together which isn't true by the way but if it were it would be no one's business but ours. I also heard mention how you missed your concert because, let me see if I can recall the exact words... oh yes, because Toni and I were knocking boots. \n\nNow, we have discussed this privacy issue many times and I'm done discussing it. And while I'm at it, let me clarify the status of our relationship, you and I are not friends. We are colleagues and nothing more; my new schedule starts next week.\"\n\nJoyce was flabbergasted; working with Mason was going to be a feather in her cap when she decided to join a private practice. She really hadn't known how bothered he really was by what she considered to be harmless talk.\n\n\"Mason, look, I am really sorry. I really didn't realize how much the harmless talk bothered you. If I swear to keep my big mouth shut, will you reconsider?\" Joyce asked.\n\n\"Tell me why I should reconsider.\" Mason replied.\n\n\"Because I'm good to work with even if I can't keep my mouth shut and working with you is going to be a feather in my cap when I look for a private practice to join. Mason, I really didn't think that anything that I said was that big of a deal but apparently it is....\"\n\n\"How many times do I have to tell you to stay out of my business?\" Mason asked. \"Isn't the fact that I keep bringing it up an indication that it's as you say a big deal?\"\n\nJoyce didn't reply, Mason was wavering but she also knew that if he gave in, this would be her last chance. He had saved her job once, he wouldn't do it again and he meant what he said about changing nights so that he wouldn't have to work with her.\n\n\"Alright Joyce, this is your last chance, if I hear one word and I find out that it came from you; I change my hours and you get to work with whatever resident happens to be on. Am I being clear?\" Mason asked.\n\n\"I got it but can I ask a question? Why are you so defensive when it comes to Toni Jacobson?\" Joyce asked.\n\n\"I need to make some phone calls, I'll see you later.\" Mason said dismissing Joyce.\n\nA few minutes later, he was on the phone with Toni.\n\n\"Were you asleep?\" he asked.\n\n\"No, just watching some old sitcom reruns. How's your night going?\"\n\n\"Quiet, I just had another talk with Joyce.\" Mason said.\n\n\"Ah, the rumor mill continues.\" Toni said as she sat up.\n\n\"Yes well, I threatened to change my hours if she insisted on being concerned with our business.\" Mason said.\n\nToni frowned, \"Our business?\" she asked.\n\n\"Yes, you know whether we have lunch or not or if we see each other socially, things like that.\"\n\nShe got it, Mason Donahue was a very private person which brought up the question why he was working in an institutional setting but it was more than that, he thought that she needed to be protected .\n\n\"You know,\" Toni said, \"The rumor mill doesn't really bother me so don't feel like you have to defend or protect me. People are going to talk and after awhile they'll move on to something or someone else.\"\n\n\"So you don't mind if people know that we are seeing each other socially?\" Mason asked.\n\n\"I don't mind if you don't\" Toni replied almost surprised by her response. \"For awhile the hot rumor was that there was a love triangle between me, James and one of the nurses who was after James. The story got so blown up that after a week or so it wasn't even believable and people found other things to talk about.\" Toni added.\n\n\"This nurse, did you ever confront her?\" Mason asked.\n\n\"I did but it was after James died and I hadn't been back to work for very long and it was about another matter. Like you I had forgotten about the rumor mill.\" she said not about to tell him that he was part of the discussion.\n\nMason's pager went off and he had to end the conversation.\n\n\"I'll see you and Jamie tonight, sleep well.\" he said before hanging up.\n\nToni hung up and realized that she had never answered the last question that she asked herself.\n\n\"Am I falling in love with Mason Donahue?\" she asked herself yet again as she set the phone down. This time she answered herself. \"I guess I am.\" It wasn't a resounding yes but it was as far as she was prepared to go for now.\n\nAn hour later, the question popped into her head again, and this time, she answered with a resounding yes. Toni fell asleep on the couch and woke up to the sound of Jamie crying. It took her a minute to register that the cries were of pain and fear. She ran to his bedroom and found him curled into a ball crying.\n\n\"Jamie? Baby what's wrong?\" she asked as she sat on his bed and pulled him into her lap.\n\n\"My stomach hurts.\" he cried.\n\n\"Ok baby, show me where.\" Toni said as calmly as she could.\n\nJamie pointed to the lower right side of his stomach. Appendicitis was the first thing that popped into Toni's head.\n\n\"Alright, why don't we go to the hospital and have you checked out?\" Toni said as she carried Jamie to the living room to grab her phone, car keys and to slip on her shoes.\n\nThey were at the hospital in less than fifteen minutes and being seen by an obnoxious resident who acted as if they were infringing on his time.\n\n\"What's the problem?\" he asked apparently not knowing who Toni was or that she was a doctor, he didn't even look at them much less introduce himself.\n\n\"This is my son Jamie and I think that he has appendicitis.\" Toni said.\n\n\"What makes you think that?\" The resident asked in a very condescending way.\n\nToni forced herself to take a deep breath and then described the pain and the location of the pain.\n\n\"We'll keep him for observation\" the resident said and walked away without really examining Jamie.\n\n\"Just a damned minute!\" Toni snapped \"Who is your senior?\"\n\nThe resident froze, only another doctor or nurse would use that term. \"Dr. Ellis, why do you ask?\"\n\n\"Where the fuck is he?\" Toni demanded.\n\n\"In the break room.\" The resident replied now very nervous.\n\n\"Get him now!\" Toni demanded literally shaking. The last time she had been in this ER was with James, it felt like it was just yesterday when she called the ambulance to bring him in. Jamie was crying partly because of pain and partly because he had never seen Toni so angry and scared. Toni hugged Jamie as she glared at the resident until he hurried off to find his senior\n\nA few minutes later, Dr. Ellis appeared. \"What's the.... Toni? What's going on?\" he asked.\n\nAn hour later Jamie was in surgery. Barbara and Ben had come as soon as Toni called and Gina and Robert were on their way. The whole thing had a surreal feeling to it, it was too much like the night that James had died and Toni was petrified. She jumped every time the overhead speaker came on and almost had a heart attack when a code was called elsewhere in the hospital.\n\nShe sat huddled in a corner by herself praying for Jamie and that he wouldn't be taken from her too. \n\n******\n\nMason was doing some dictation when his cell phone rang; he looked at the caller ID and answered as soon as he saw it was Barbara.\n\n\"Mason? Hi, I don't know if Toni wanted you called or not but Jamie is in surgery.\" \n\nMason didn't let her finish, he was already out of his office and headed to the surgery waiting area. He saw Barbara first.\n\n\"What happened?\" he asked as he looked around the room for Toni and saw her huddled in a corner.\n\n\"Appendicitis, they took him in a little while ago.\"\n\n\"Alright, I'm going to go sit with Toni.\" he said patting her arm.\n\nMason sat down next to Toni and pulled her into his arms and held her as she cried. He knew better than to make empty promises that Jamie would be alright even if he believed it to be true. He knew where Toni's head was and didn't speak as she frantically whispered prayers for Jamie\n\nAfter what seemed to be hours, the surgeon came out.\n\n\"Toni? He's going to be fine. You can see him in a few minutes.\"\n\n\"Thank you so much, is he really alright?\" Toni asked.\n\n\"He sure is.\" The surgeon assured her.\n\nToni however didn't relax until she saw Jamie and could actually touch him. Mason touched Jamie's head and then left them alone to finish out his shift. He stopped by Jamie's room on the way out to check on him and Toni one more time before leaving.\n\n\"I'll be back tonight, call me if you need anything.\" he told her as he kissed her on the cheek.\n\n\"Mason? Thank you.\" Toni called as Mason left Jamie's room.\n\nToni had just dozed off when there was a tap on the door. Dr. Ellis and a very nervous resident stood in the doorway waiting for Toni to acknowledge them.\n\n\"Come in.\" Toni said wondering what was going on.\n\nThe resident stepped forward red faced, \"I'm Dr. Hanover and I would like to apologize for the way that I treated you and your son, I didn't know who...\"\n\n\"It shouldn't have mattered who I was.\" Toni said softly. \"No patient or family member should be treated the way that you treated us no matter who or what they are.\" \n\n\"You're right and once again, I apologize.\" the resident said his face still red. He had heard about Toni Jacobson although he had never met her before tonight and from what he heard, this \"chat\" was downright tame.\n\n\"Alright.\" Toni said, \"Just watch your tone when you're dealing with patients and their families and stop acting like we're an inconvenience.\" she added.\n\n\"Yes ma'am.\"\n\nDr. Ellis stood behind the resident trying hard not to laugh, Toni hated being called ma'am.\n\n\"Don't call me that!\" she snapped at the contrite resident. \"It's either Dr. Jacobson or Toni but never ma'am.\"\n\nA minute later, the resident was gone leaving Toni alone with Dr. Ellis.\n\n\"I hear that he's going to be fine.\" Dr. Ellis said.\n\n\"Yeah he is.\" Toni said looking down at Jamie.\n\n\"This had to be difficult for you.\" Dr. Ellis said as he moved behind Toni and put a hand on her shoulder.",
        "Toni moved away and turned to look at him, \"Yes it was but I'm alright now and thanks for bringing Dr. Hanover in to apologize.\" she said.\n\nDr. Ellis looked at her thoughtfully for a few seconds as if he was making a decision and then made it.\n\n\"I hear that you're back into the social scene, any truth to that?\" he asked.\n\nToni wasn't sure of how to respond but said yes.\n\n\"Good to know, I was hoping to take you out to dinner sometime soon.\" Dr. Ellis said.\n\n\"Oh, I.... I'm kind of seeing someone and...\"\n\n\"Dr. Donahue, so that's true as well.\" Dr. Ellis said. \"Is it a monogamous kind of thing or a casual thing?\" he asked.\n\nToni didn't know how to respond because she didn't know.\n\n\"I... we haven't...\"\n\n\"Mom?\" Jamie called.\n\n\"I'm here baby, how do you feel?\" Toni asked thankful for the interruption.\n\n\"My stomach still hurts.\"\n\n\"Ok, I'll see if you can have something for pain.\" Toni replied.\n\n\"About that dinner?\" Dr. Ellis asked.\n\n\"I can't think about that right now, thanks for stopping by.\" Toni said hoping that he would take the hint.\n\nShe pushed the call light and told whoever answered what she needed, when she looked up, Dr. Ellis was still there.\n\n\"What?\" she asked.\n\n\"Can I get you a cup of coffee or something to eat?\" he asked.\n\n\"No thanks, my parents are coming in a few minutes.\" Toni replied.\n\nDr. Ellis left after a few more minutes of chitchat, Toni knew what he was doing, he was trying to figure out her and Mason's status. Toni breathed a sigh of relief when he left; he was a little too intense for her liking.\n\n********\n\nMason lay on his bed wishing that he could be at the hospital with Toni and Jamie but it just wasn't possible, phone calls would have to do until this evening. It still tore at him when he thought about how frightened Toni had been and how relieved he was when they found out that Jamie would be alright. He picked up his phone and called Toni.\n\n\"How's Jamie?\" he asked.\n\n\"Sleeping, they just gave him something for pain.\" Toni replied.\n\n\"And how are you?\" Mason asked.\n\n\"Tired but glad that Jamie's alright. What are you doing still up?\" Toni asked as she realized what time it was.\n\n\"Thinking about you and Jamie.\" Mason replied honestly. \"Do you need me to bring anything tonight?\"\n\n\"No but you don't have to come.\" Toni said, \"There's no need for you to spend your evening off in a hospital room.\" she added.\n\n\"I was going to spend the evening with the two of you anyway, where that happens doesn't matter. So what would you like me to bring?\" Mason asked again.\n\n\"Ummm, some of your really good coffee?\" Toni asked.\n\n\"Done, what else?\"\n\n\"That's it. Mom and dad are bringing Jamie's laptop although he'll probably be discharged tomorrow.\" Toni replied.\n\n\"Alright, I'll see you this evening and try to get some rest.\" Mason said before hanging up.\n\n******\n\nThe day passed slowly for both Toni and Mason. James' parents stayed with Jamie so that she could run to one of the doctor's sleeping rooms and grab a shower and a set of clean scrubs. She wasn't about to leave the hospital under any circumstances. Feeling better after her shower and a hot cup of coffee Jamie made her way back to Jamie's room. He was awake and making faces at his breakfast.\n\n\"I don't like red jello.\" he was telling Gina.\n\n\"Well maybe it'll taste good this time.\" she replied.\n\nToni slipped back out and found Jamie's nurse.\n\n\"I have a very picky little boy that doesn't like red jello; do you have any other flavors?\"\n\n\"I think we do, let's go check. By the way, I think that the doctor is going to let him have a regular diet for lunch if he does ok with the clear liquid breakfast.\" the nurse said.\n\n\"Great! Jamie will be happy to hear that.\" Toni said as he took the containers of yellow and green jello from the nurse, \"and thanks for these.\" she added as she walked away.\n\nToni got back to Jamie's room and heard him crying. \"What the hell?\" she muttered.\n\nGina was sitting on the side of the bed holding Jamie's hand but Robert was nowhere to be seen.\n\n\"Baby? What's wrong, are you hurting again?\" Toni asked setting the jello down.\n\n\"I was just telling him about his father.\" Gina said as she smoothed Jamie's hair back.\n\nAlarm bells went off in Toni's head but she asked calmly, \"what were you telling him?\"\n\nJamie and Toni had talked about James many times, even watching the discs together and he had never cried so what had Gina said to him that had upset him so much? Surely she hadn't told him that he was adopted? \n\n\"Gina, what did you say to him?\" Toni demanded as she sat on the other side of the bed and took a still crying Jamie into her arms.\n\n\"Mom? Am I going to die?\" Jamie asked tearfully.\n\nToni understood now. Gina had told Jamie that James had died in this hospital, what was wrong with the woman? Toni wondered but she no longer cared.\n\n\"Get out.\" Toni hissed softly.\n\n\"What? But we just got here!\" Gina protested.\n\n\"Get out!\" Toni repeated.\n\nRobert passed Gina as she left the room, \"Toni?\" he asked.\n\n\"Later.\" she said. She wasn't going to tell Gina that she could no longer be alone with Jamie with him listening, it would upset him too much.\n\nRobert nodded and left the room. A few minutes later Jamie was calm and eating his jello. Toni assured him that he wasn't going to die and that he would more than likely be at home by the next day. \n\n\"And... guess whose coming to see you tonight?\" she asked knowing that he would be thrilled.\n\n\"Dr. Mason?\" Jamie asked forgetting about his fear and upset.\n\n\"Yep, Dr. Mason.\" Toni confirmed. \n\nIt made her happy to see him happy but now it was time to deal with gramma Gina.\n\n\"Sweetie, will you be alright for a few minutes? I need to go talk with gramma and grampa Jacobson.\"\n\n\"Ok.\" Jamie said as he ate his breakfast and looked at the television.\n\nToni found them in the family waiting area; apparently Robert was less happy with Gina than she was.\n\n\"What in the hell is wrong with you scaring him like that?\" Robert was asking.\n\n\"I was just.....\"\n\n\"Just what?\" Toni asked. \"He's a little boy for god's sake! It's up to me to explain to him how and where his father died not you!\"\n\n\"Toni, I was....\"\n\n\"Gina, I don't care about what you were trying to do, the only thing I know is that you hurt and frightened Jamie.\" Toni said.\n\n\"Is he alright?\" Robert asked.\n\n\"He's fine but Gina, you can't be alone with him anymore.\" Toni said firmly.\n\n\"What? Toni I would never hurt him!\" Gina protested.\n\n\"You just did.\" Toni said. \"The only way you get to see Jamie is if someone is with you. I don't trust you not to tell him that he's adopted. Now, you can go in, say goodbye and come back later.\" Toni said and walked away.\n\nJamie had finished his breakfast and was watching television when she went back to the room; he looked none the worse for wear and apparently he had already forgotten about being upset. Robert and Gina came in a few minutes later to say good bye and to promise that they'd be back later. Toni looked at Gina who refused to meet her gaze; the woman was in need of some serious help.\n\nBarbara and Ben came thirty minutes later bringing fresh coffee and breakfast sandwiches. Ben brought the latest issue of sports illustrated and sat on the bed with Jamie looking at it while Toni ate her breakfast. Toni told Barbara about the incident with Gina.\n\n\"She's still having a hard time.\" Barbara said, \"That doesn't excuse what she did, I'm just saying that it's a contributing factor.\"\n\n\"Be that as it may, she isn't allowed to be alone with Jamie anymore. It was for me to tell him about James' death not her.\" Toni replied.\n\nThe rest of the morning passed quietly with Toni napping when Jamie did bringing back memories of when he was a baby. Gina and Robert came back just before supper bearing gifts for Jamie which made him very happy. One of the gifts was a video game that he had been wanting for his laptop and the other was a stack of books. Of the two of them, Robert was the only one who spoke to Toni.\n\n\"We're going back tonight but we'll be back in a couple of weeks, Toni I'm sorry about this morning.\" he said.\n\n\"Thanks but it wasn't your fault and I know that she's still struggling but I won't have her hurting Jamie even if it's unintentionally.\"\n\n\"I know and I understand, I'll say goodbye to Jamie and we'll be on our way.\" Robert said as he hugged Toni.\n\nThey had no longer left when Dr. Ellis came in.\n\n\"How's the patient?\" he asked giving Jamie a fake smile.\n\n\"Good.\" Jamie replied not smiling back.\n\n\"Good! Hey Toni, I thought that I could bring us some dinner tonight during my break.\" Dr. Ellis said.\n\n\"That won't be necessary.\" A voice from behind them said.\n\n\"Dr. Mason!\" Jamie exclaimed with excitement.\n\n\"Hey kiddo, how are you feeling?\" Mason asked.\n\n\"Better, did you bring a book?\" Jamie asked.\n\n\"I sure did and I'll show it to you in a moment.\" Mason said and then turned his attention to Toni and Dr. Ellis. \"As I was saying, it's very kind of you to offer to bring Toni dinner but it's taken care of.\"\n\n\"I see. I don't believe that we've officially met, I'm Dr....\"\n\n\"I know who you are and what you want.\" Mason said interrupting him.\n\nToni looked from one man to the other, she was in the middle of a passing contest and she was the prize. But it was Ellis who put his dick away first.\n\n\"If you'll excuse me, I have rounds to make.\" he said and left the room closing the door behind him.\n\nMason watched him leave confident that he would spread the word that Toni was off limits; it struck him as ironic that he was using the rumor mill, the one thing that he hated about institutions to his own advantage. As soon as the door closed, Mason bent down and kissed Toni on the cheek fully aware that Jamie was watching. It was something that he would have to become accustomed to Mason decided. \n\n\"I brought the requested coffee and some sandwiches.\" Mason said assuming that Jamie could eat normally. \"Peanut butter and Jelly for Jamie and Chicken salad for us.\" \n\n\"Wow, thanks. \" Toni said and then asked, \"Did you sleep?\"\n\n\"I don't need much sleep.\" Mason replied as he set out the food. \"I forgot, I have something else for you but it's in the car, start without me, I'll be right back.\"\n\nToni watched Mason leave and felt a stirring that she hadn't felt since James and along with it came a feeling of guilt. She suspected that with each step she took in her relationship with Mason a feeling of guilt would come with it and she would have to deal with it as it came. It dawned on her that she had just admitted to being in a relationship with Mason. \"Am I ready for this?\" she asked herself.\n\n\"Mom?\" Jamie called.\n\n\"Yeah baby?\"\n\n\"Are you ok? You were talking to yourself.\" he said.\n\n\"I'm fine, I was just thinking out loud.\" Toni replied.\n\nOn the way to his car, Mason ran into Dr. Ellis who stopped him.\n\n\"She's quite the woman isn't she?\" he asked.\n\nWhen Mason didn't reply, he continued.\n\n\"I wasn't aware that your relationship was monogamous, when did that happen?\"\n\n\"Now you know and when it happened is none of your business.\" Mason replied.\n\n\"You said you knew me, I don't ever recall meeting you before tonight.\" Ellis said.\n\n\"Let me clarify what I meant, I don't know you personally nor do I care to.\" Mason said. \"What I meant is I know what type of man you are, you are like a vulture who takes advantage of women who you think are vulnerable, you pretend to care about their needs and the needs of their children if there are any and then when you tire of them you leave.\"\n\n\"Now you just....\"\n\n\"Listen to me and listen well, stay away from Toni, she isn't available.\" Mason said his dark eyes flashing and walked away leaving Ellis staring at his back.\n\nJamie and Toni were waiting for him when he got back to the room.\n\n\"Why didn't you start eating?\" Mason asked as he sat a bag on the floor.\n\n\"Mom said that we had to wait for you.\" Jamie said.\n\n\"Well I'm here so eat up.\" Mason said as he picked up a sandwich.\n\nAfter they ate, Mason gave Jamie the book he brought with him. While Jamie looked at the book, he picked up the sack and told Toni to sit down. \n\n\"Put your feet up here.\" he said patting his lap.\n\nToni looked at him but didn't move.\n\n\"Come on, you'll be glad that you did.\" he urged teasing her.\n\nToni looked over at Jamie who was engrossed in the book that apparently had pictures. She slowly put her feet up not knowing what to expect. Mason removed the hospital issue slipper socks from her feet and began to massage them. Toni closed her eyes and sighed, she was always a sucker for a good foot rub, a few minutes later she felt something warm and fuzzy being slipped onto her feet. She opened her eyes to see what it was, looking back at her were a pair of purple bunny slippers complete with the big floppy ears, plastic eyes and silly grin. At first she just stared at her feet and then began to laugh. Jamie looked up from his book to see what was so funny and laughed when he saw the slippers.\n\n\"Those are really cool!\" he exclaimed.\n\n\"You like those?\" Mason asked as he pulled out another pair for Jamie but only they were blue.\n\n\"Look mom!\" \n\n\"I see.\" Toni said smiling at him. \"I think that we both owe Dr. Mason a big thanks .\" she added.\n\n\"Thank you Dr. Mason, can I put them on?\" Jamie asked.\n\nA few minutes later, Jamie was sporting his new slippers as the three of them took a walk around the unit. By the time they got back to the room, the entire floor was whispering about the scene.\n\nJamie was released the next afternoon and was more than ready to go. Even though he didn't say anything to Toni, he was still afraid that he would die at the hospital like his dad. The only thing that made it easier was that Mason and Toni both stayed with him during the night. Toni slept on the cot while Mason sat in the chair next to the bed playing with Jamie's laptop. When Jamie woke up, it was light and Mason was already gone.\n\n\"Where's Dr. Mason?\" Jamie asked.\n\n\"He went home already, he said to tell you to check out your laptop.\" Toni said stretching. She was as ready to go home as Jamie was.\n\nJamie turned on his laptop and squealed with delight.\n\n\"Look mom!\" \n\nToni got up and went to see what the excitement was about, she gasped when she saw Mason's face on the screen.\n\n\"Morning!\" he said cheerfully.\n\n\"Morning Dr. Mason! This is so cool!\" Jamie said.\n\nToni was suddenly conscious of her bed head and tried to put it in some semblance of order. Mason watched her as she tried to fix her hair; he couldn't wait to wake up to that look every night.\n\n*******\n\nToni returned to work the following week since Jamie was on the mend. In some ways she dreaded going back, except for Jamie's surgery, she had really enjoyed her time off and talking to Mason via 'skype' had become a routine thing when he was at work. If he wasn't busy, he and Jamie read together that way and if he was, he tried to call to talk to Jamie for a few minutes before it got too late and then he would call her later during the night.\n\nOn her first night back, Toni got an unexpected but pleasant surprise. She was rounding on the floor where Kim worked and overheard her defending Tom.\n\n\"You know what?\" she was saying, \"He was having a really hard time, he lost his best friend and probably thought that it was his fault so back off and leave him alone!\"\n\nToni believed in giving credit where credit was due and pulled Kim aside. Kim stood stiffly waiting for a tongue lashing.\n\n\"Relax Kim; I'm not going to yell at you.\" Toni said. \"I wanted to thank you for coming to me about Tom. Because you did, he's getting the help that he needs and I also heard what you said. Tom's going to need all of the support that he can get when he gets back so maybe between you, me and whoever else we can stir up, we can make his coming back a little bit easier.\" \n\nKim was speechless; she now had a whole new respect for Toni.\n\n\"Thank you for that.\" Kim said softly.\n\nToni smiled at her and walked away, she had just changed her opinion about Kim; she really was a good person at heart in spite of her personal agenda and the way that she had defended Tom made her wonder.\n\nAfter making rounds, she went to the dictation room and began her dictation; she was so engrossed that she didn't realize that she was no longer alone until she felt a tap on her shoulder.\n\n\"Oh hi Mike.\" she said to Dr. Ellis.\n\n\"How's the little man doing?\" he asked.\n\n\"Good and glad to be back home. Thanks for asking.\" Toni replied.\n\n\"So you and Donahue are a couple.\" he stated.\n\nToni didn't say anything, if she did, this would be the first time that she publicly admitted it, and she hadn't even said anything to her parents or Jamie for that matter. \n\n\"He says that you are but I would like to hear it from you.\" Mike said when Toni didn't answer.\n\n\"Why?\" Toni asked. She knew about Mike's reputation for his frequent and varied bed partners and really didn't care as long as he kept their relationship professional and didn't try to add her to his list of conquests.\n\n\"I want to know if I stand a chance. I've always liked you and I've always thought that James was one lucky son of a bitch.\" he replied.\n\n\"The answer to your question is yes, Dr. Donahue and I are seeing each other.\" Toni said hoping that it would end the conversation.\n\n\"Is it monogamous or are you each able to see other people?\" \n\nThat was something that they hadn't discussed but then, they hadn't talked about their relationship either. But if Mason's reaction to Mike's offer to bring her dinner when Jamie was a patient was any indication, she would go with monogamous.\n\n\"Mike, I'm flattered, I really am but Mason and I are in a monogamous relationship. I'm sure you'll know if that changes\" Toni said.\n\n\"Well then,\" Mike said standing up, \"so much for that.\" and walked out.\n\nToni finished her dictation and headed toward the sleeping room, she opened the door to see a vase of flowers sitting on the table alone with a note.\n\nToni, We're having a busy night up here and I probably won't get lunch but I left it in the fridge in your room. I'll talk to you soon. Mason\n\nToni looked at the flowers and then at the purple bunny slippers that she had packed to walk around in.\n\nShe was in love with Mason Donahue. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-13"
}