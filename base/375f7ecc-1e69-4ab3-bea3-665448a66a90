{
    "title": "Claiming Treasure Ch. 31-35",
    "pages": [
        "Vic Knightly's POV \n\nPortland Brotherhood Clubhouse \n\n\"WAKE UP, PROSPECT. We leave in twenty.\" The banging on my door had woken us up, and I looked over at the clock to see it was seven-thirty in the morning. We'd only had four hours of sleep, as the party had gone on well into the night. Spider Monkey had a lot of fun catching up with her old friends, while I got to work the bar, clean up the vomit, and generally do what a prospect does. \n\nI rolled over and sat up, leaving Spider under the covers alone. \"I'm too old for this shit,\" I said. \n\n\"Look at the bright side,\" she said as she buried her head in my pillow. \"The year of prospecting will be less than one half of one percent of your life. It's nothing.\" \n\nI smacked her ass and got up, stretching my muscles as I walked to the bathroom. Five minutes later, I had shaved, dressed, and was ready to go. \"What are you doing today,\" I asked as I sat on the bed by her. \n\n\"Data analysis and listening to phone conversations,\" I said. \"I've got notes on each of the Council members; I have suspicions, but nothing like I had on Millner.\" \n\n\"Yet,\" I said as I leaned down and kissed her. \"Keep going, and see what you can do to clean Millner's accounts before they transfer them to others.\" \n\n\"Alpha Rori did want them treated like the Sons,\" she said sleepily. \"I'll see what I do.\" \n\n\"I love you, Spider. I'll be back by dinnertime.\" \n\n\"Do you expect trouble?\" \n\n\"I hope not. Rori cut us loose to protect her Pack but isn't actively pursuing us. We gave Carson a warning about an attack; hopefully, that is more important than what the Council says to do.\" \n\n\"Be careful, Vic.\" \n\n\"I will. If anything happens, stay with the Club and out of sight of the Council. I love you, babe.\" I gave Spider her kiss goodbye and pulled the blanket up over her shoulders. Reaching into my bags, I took out my combat knife and threaded it onto my belt. My Glock 19 was in its locked case, unloaded and with extra magazines. My Minnesota resident carry permit is not accepted by either Oregon or Washington, so I can't do concealed carry. I'd keep it in the back until we were close to the Pack border. \n\nThe guys were gathering around Thor in the parking lot. \"This is Vic's exchange. He and Spider don't expect hostility with Carson's people, but there may be people watching and waiting for him. He takes the lead, we stay back and support if needed,\" he said. \n\nTurning to me, I showed them where we would be going and what the plan was. \"Spider Monkey found out the bad guys have a spy in Carson's group so we won't be announcing our arrival until the last minute. None of them will leave their property, and none are hostile unless they fire on us.\" Everyone nodded, not wanting a gunfight. I'd asked about people last night, so I knew who the best shooter with a rifle was. \"Before and after the exchange point, all we will have is hostiles. They will be after me. We'll stop here, at the Tipsoo Lake Comfort Station, before heading east. Here's the turnoff. Rattler, you have overwatch. You and your spotter will go ahead of us, exiting here and taking a sniper position on this peak.\" \n\n\"Range?\" \n\n\"Six hundred yards to this point,\" I showed them where the gate was across the private entrance to Carson's land. \"I'll drive the trailer to the gate, alone. The rest of you will be here, close enough to be seen and respond but not enough to threaten them. I drop the stuff off, talk to the guard, and walk back. We pick up the overwatch on the way out.\" \n\n\"Easy enough,\" Thor said. \"Load up.\" We had two SUV's plus mine with the trailer; one of the other prospects, a 21-year-old kid named Bobby, was driving with me. I programmed the GPS and pulled out of the Clubhouse lot as the two cars followed. \n\nIt was an easy drive until we left the Interstate and started up into the mountains. The rains were nearly constant as we climbed, luckily it was warm enough in the spring we didn't hit snow. The rivers were high and fast with runoff as we passed over them. We made our final stop, and I sent Bobby back to the other car. Rattler got out at his point, taking a man with him up the hill. They were wearing camouflage ponchos in the rain; he was carrying the equivalent of the Marine M40 rifle, a Remington 700 with a 24\" bull barrel, bipod, and scope in .308 Winchester. We couldn't depend on cell service up here, so we had radios instead. \"We're in place,\" he finally said. \n\n\"Moving in two minutes,\" I replied. I did have cellphone reception for now, and I made a phone call with a burner. It rang a few times before it picked up. \n\n\"Carson Nygaard's office,\" a female voice said. \n\n\"I've got a delivery from Las Vegas for your guest, I'll be at the west access gate in two minutes,\" I said. \n\n\"Who is this?\" \n\n\"A friend of the family.\" I hung up, turning the phone off again. \"Let's roll,\" I said over the radio. Putting the vehicle in gear, I pulled back onto the road and drove the short distance to the gravel road that led into Pack land. I drove slowly down, looking out for trouble until I reached the gate and stopped. I picked up the radio. \"I'm here, Rattler. You have visual?\" \n\n\"I do. Vehicle approaching, 300 yards out.\" \n\n\"I'm exiting; I'll use the trailer for cover.\" \n\n\"Roger that.\" \n\nI turned the engine off and left the keys in place; there was no place to turn around, and I wouldn't be able to escape while backing up with a covered trailer. Walking back to the trailer, I unlocked it and opened it up. Inside were boxes of Heather's clothes and gear, along with her Harley. I heard a truck approaching and waited by the side of the trailer. \n\nThe Supercab F-150 stopped at the turnout on the other side of the fence. I recognized Alpha Carson as he got out of the passenger seat; he opened the back door, and a big wolf jumped out. It ran around the vehicle gate and straight towards me. \n\nRattler's POV \n\nOverwatch Post \n\nI hated the cold rain. \n\nWe made our way up through the mud and melting snow to the top of the hill. I had a couple of extra camo tarps with me, so when we found a decent spot under a tree to set up, I could use them. I laid one down over the mud and pine needles while my spotter lashed the other to the branches above us. I didn't need my optics getting wet. It only took a few minutes to set up our hide. \n\nI set my scope for six hundred yards, not an easy shot, but well within the range of my rifle. I used a ballistics program on my cellphone to calculate the bullet drop since we were about three hundred feet above the target. Once I had my scope set, Vic moved out and parked by the gate. \n\n\"I'm here, Rattler. You have visual?\" \n\nI could see everything from up here. \"I do. Vehicle approaching, 300 yards out.\" It was a pickup truck, moving slowly towards him. \n\n\"I'm exiting; I'll use the trailer for cover.\" \n\n\"Roger that.\" I watched as the truck parked on the other side of the gate. A big man got out, and then he opened the back door for someone else. It wasn't a person; it was a dog. It was the biggest fucking dog I'd ever seen, twice the size of a German Shepherd, brown with white patches. As soon as its feet hit the ground, it was running for the gate. \n\n\"It's heading for Vic,\" my spotter said. \"Shoot it!\" \n\nI tracked it, but the dog was moving too fast for me to shoot at this range. I let out a relieved sigh when the dog didn't attack Vic. It just wagged its tail and licked his face as he petted and scratched it. \"I think they know each other,\" I said. \n\n\"Safe your weapons, boys,\" a voice said from behind me. I froze; I'd never heard a sound. \"We don't want anyone getting hurt here.\" \n\nI took my finger off the trigger and looked back. Two men with pistols were standing there. I had zero chance of taking them out while lying prone in the other direction with a bolt-action rifle, and my spotter just had a scope out. \"Do what he says,\" I said. I pulled the bolt of my rifle back, ejecting the live round and leaving the action open. \n\nOne of the men moved forward, taking my rifle and my spotter's AR-15. \"Sit down and watch, we don't want to hurt you,\" the man told us. \n\nHe hadn't taken my pistol; that and the fact that they could have killed us easily if they wanted to said we wouldn't die here. We watched as the driver of the truck opened the gate, and the big guy walked forward. He embraced Vic, and we all relaxed. \n\nVic's POV \n\nI smiled as I saw Carson emerge. \"Thank you for coming out,\" I said. \n\n\"I figured it was you when you said Vegas,\" he said. \"I started heading this way as soon as you dropped your sniper off.\" He opened the back door, and a wolf jumped out. She was running towards me, wagging her tail before she started licking my face as she sat by me. \n\nI took a deep sniff; she smelled like Heather and Carson! \"Heather?\" \n\n\"WOOF!\" She started licking my face again. I moved my hands down her flanks, petting her while she had her head on my shoulder, and felt the bumps. \"The twins? How?\" \n\nCarson was up to us now, carrying a big duffel bag and a small Igloo cooler. \"She got bitten in the attack, but we gave her werewolf blood and a mating bite. She pulled through; Doc said the change was slow enough for her healing to save the babies.\" \n\n\"Amazing,\" I said. \"Why is she still a wolf?\" \n\n\"She can't change back until they are born. If she shifted, she'd lose them.\" \n\nIt made sense. I stood up and embraced the Alpha, then looked down at the bag and cooler. \"What's this?\" \n\n\"We're having a family reunion, and Rori brought this along. She got it from your basement.\" I unzipped it; it was our cash. I took out a bundle of twenty-dollar bills and put it in my jacket pocket. \"The cooler is from Doc Myers; keep it refrigerated just in case. There's enough to start the change if it's needed. His number and Doc Olson's are in there. Give her the blood and give them a call, but only if there's no other option, and Spider agrees to the change.\" \n\n\"You'd let her make the change?\" \n\n\"We always thought she'd be a good Beta. Once this crap with the Council is over, we'll find a way to bring you back.\" While we talked, Heather had moved around and jumped into the trailer. She barked, and we moved back to see her sniffing her Harley's saddle and wagging her tail. \"She thanks you for bringing her stuff back,\" Carson said. \n\n\"I should go. I brought some humans along just in case the reception wasn't good,\" I said. \n\n\"You'll always be welcome here, Vic. Fuck the Council and their edicts; you gave us a warning. It wasn't in time to prevent the attack, but it told us we had a mole.\" \n\nI shook his offered hand. \"I won't do it unless we have to. We don't need to attract trouble.\" \n\n\"Take care of Spider Monkey. We're hoping the data she has can tell us how deep the rot has spread in the Council.\" \n\n\"I will.\" I picked up the Igloo and my bag of cash and started walking back to the waiting SUVs. The trailer pulled past the gate, followed by the truck as they returned to the Pack House. I heard Thor recall for the overwatch as I got to the waiting Brothers. \"We're good,\" I said as I opened the back. \n\n\"Did he bring you lunch,\" Thor asked. \n\n\"No, just some stuff for Spider Monkey.\" We pulled out, heading back to the pickup point for our snipers. \n\n\"Jesus Christ, Vic, who are those guys,\" Rattler said as he loaded his rifle into the case in the back. \"Fuckers were on top of us, and we never heard a sound!\" \n\n\"They take security seriously,\" I said. \"They were probably wondering why a guy with a rifle was walking around by their land outside hunting season. Next time, stay hidden.\" \n\n\"Scared the shit out of me,\" he said as he got in the back. \"You get what you needed?\" \n\n\"And more than that,\" I said. \"Let's head home. Lunch is on me.\" \n\nCh. 32 \n\nColletta Grimes' POV \n\nCascade Pack House \n\nThe impromptu get-together wasn't a surprise to the Packs, as supporting Carson in his time of loss. After all, a human bitten by a werewolf was ALWAYS fatal. His family and their mates gathered in his office, along with allied Alphas on Rori's side. Heather was sitting next to Carson's chair, her head in his lap as he scratched her ears. \"She looks good like this,\" I told her as I came in with Frank. \n\n\"She's beautiful,\" Carson agreed. He had taught her how to mind-link, and she had been introduced to the Pack at breakfast this morning. She hadn't marked Carson back yet, but that would happen after she got her strength back. I still couldn't believe her babies had come through her first shift. \n\nBeta Angelina came into the office; she was still healing from her injuries, just like Carson, but both were able to move around now. \"We've got company, Alpha,\" she said. There was a security computer laptop in the office; turning it on and switching the 80-inch LED screen on the wall, Angelina brought up a camera feed. \"West entrance, just down the road to the west,\" she said. The surveillance cameras were new, bought with some of the money Carson had received for helping take down the Sons of Tezcatlipoca warehouse in Los Angeles. It was state-of-the-art technology, but the rollout so far was taking time. Carson's team had placed cameras near the entry roads and Pack House, plus the public roads leading to and from them. It was going to take months to extend the electronic surveillance perimeter around the rest of the territory, including the area near Triple Falls, where the attack had taken place. \n\n\"What do you have?\" \n\n\"Three vehicles parked here. The lead vehicle with trailer has a driver, looks like four each in the two SUVs behind it.\" \n\n\"That's not a big deal, could be hikers,\" Sawyer said. \n\nShe moved the camera, panning up the hillside and zooming in on the two camouflaged men heading to the top. The zoom was enough to make out their rifles. \"Bolt-action sniper rifle and an AR-15,\" Frank said. \"What's up that hill?\" \n\n\"From the top of that hill, they overlook the entrance,\" Angelina said. \"We almost put a camera up there.\" \n\nFrank nodded. \"What have you done in response?\" \n\n\"We're sending men and cars to that entrance. We're assuming hostile, so we're bringing noncombatants to the safe room. The two wolves on patrol in that sector have been sent to the top of the hill to observe and report. They have packs and pistols with them, so if these guys are human, they'll move them along. We get poachers up here occasionally.\" \n\n\"Go down and look at the vehicles again,\" I said. Angelina zoomed in on the lead. \n\n\"That's our trailer,\" Rori said. \"And our truck. I bet that's Vic, bringing Heather her stuff.\" Heather lifted her head and licked Carson's hand, her tail whapping on the ground. \n\n\"Who are the others, then?\" \n\n\"Human friends. He's probably not sure of the reception he'll get,\" I replied. \n\n\"Good, you can give him the bag,\" Rori said as she looked over to the corner. \n\n\"Give Vic some units of blood,\" Chase said. Everyone looked at him funny. \"We had planned to let Vic change her when the rules changed, and she wasn't pregnant. Heather just proved that Mom and baby should survive a bite if they get werewolf blood in time. If Vic has the blood, he can keep her alive until one of our Packs can help.\" \n\n\"I've instructed Doc Myers to put it together with the IV and instructions,\" Carson said. \"I'm going to meet Vic and get Heather's stuff.\" \n\n\"Too bad she can't ride her Harley until she gives birth,\" Rori said with a smile. \n\n\"At least she'll have it here. Come on, love, let's go say hello.\" He grabbed the bag and left with Beta Angelina behind him and Heather trotting alongside, her tail wagging furiously back and forth. \n\nHe hadn't been gone two minutes when his phone rang. The Caller ID was from the Council. I picked it up. \"Alpha Carson Nygaard's office, this is Colletta,\" I said. \n\n\"Ah, Colletta, this is Chairman Coffey. I need to speak to Alpha Carson.\" \n\nI bet he did. \"I'm sorry, Mr. Chairman, but Alpha Carson is running it out on the territory. He's not responding to us yet.\" \n\n\"I'm sorry to hear that. I suppose it's expected to go off the rails after the loss of a loved one,\" Coffey said. \n\n\"Yes, his family has rallied around him. Can I take a message?\" \n\n\"Please let the Alpha know that we are watching him. I shouldn't have to remind him that aiding and abetting a Council fugitive is grounds for removal and imprisonment,\" he said gravely. \n\n\"I assume you are passing this same warning along to all the Alphas? Or are you singling out Carson for some reason?\" I was getting a little pissed. \n\n\"I already warned all the Packs, but your son doesn't always listen now, does he?\" \n\n\"I will pass the warning along, Mr. Chairman. I'm sure he'll give it due consideration.\" What I really wanted to do was reach through the phone and strangle him. Frank could feel my anger and pulled me down into his lap, wrapping his arms around me. \n\n\"You do that, Miss Nygaard.\" He hung up. \n\n\"Asshole couldn't even call me Luna,\" I said. \n\n\"Well, he can't call you Mrs. Grimes because we're keeping that secret,\" Frank said as he pulled me to his side. \"I caught the gist of it. You should warn Carson the Council may have spies out there too.\" \n\nI passed the warning along to Carson, who was pulling away in a truck. \"Don't worry, Mom. I'm not letting him on my Pack lands, and I'm not giving him anything that isn't his.\" \n\nSawyer broke in. \"They might have spies beyond our borders, so better safe than sorry. When he's gone, call the Council and report he left the SUV and trailer with Heather's stuff at your Pack border. You couldn't do anything about it because he had humans backing him up.\" \n\n\"Good idea, bro. Gotta go, we're almost there.\" \n\nFrank pushed me to my feet. \"We should be going soon, love. The plane will be ready to leave in an hour for Washington.\" \n\n\"Good time to leave, I suppose. Rori, we'll see if we can find some answers about your grandfather.\" It took a few minutes to say our goodbyes, and the Omegas had already put our luggage in the car they were driving us in. Carson updated us on the exchange with Vic before we were out of range. \n\nThe pilots were almost ready to go as our luggage was loaded. Frank followed the pilot around on his preflight; he was looking, and more importantly smelling, everywhere as we did. He didn't want another bomb on a flight involving our family. I didn't scent anything, so I joined Colletta in the seats as the pilot closed the door and moved to the cockpit. \"Everything good,\" I asked. \n\n\"Now it is,\" Frank said as he took my hand in his. Once we were up at cruising altitude, he took off my seatbelt and pulled me into his lap. \"Take those clothes off, mate. We only have a few hours, and I'm not wasting a minute of it,\" he said. \n\n\"You sure that's a good idea?\" \n\n\"No, but I'm not changing my plans for you.\" \n\nI smiled and pulled my sweater over my head, tossing it into an empty seat. My bra quickly followed as he unbuttoned my jeans and moved his hand inside. I moaned as his fingers pressed against my wet lips. He worked a finger in while he sucked on each nipple in turn. I was unbuttoning his shirt as my excitement built. The first of my orgasms surged through me as his fingers played me like a fiddle. \n\nWhen I caught my breath, I got off his lap and removed my boots, followed by my jeans and panties. \"My turn,\" I said as he sat up. I helped pull his shirt off and tossed it with my clothes before I pulled his dress pants and boxers down to his shoes. His cock was hard and reaching towards me as I removed his shoes and pants. We were both down to our socks as I knelt between his legs. \"Hands off,\" I told him. \"I need to take the edge off.\" \n\nHe moaned and threw his head back as I leaned forward and took his bulbous head into my mouth. I stayed high for a time, swirling my tongue around the frenulum before popping off and licking up and down his length. When I finally took him deep, he gripped the armrests hard as he fought to avoid cumming quickly. I looked up at him and smirked as I took a breath; if he thought he could make this last, he was wrong. I took him deep a few more times, swallowing around him as he pushed into my throat. ",
        "I came off him, jacking his hard length for a moment while I caught my breath. I reached forward, swiping up the drop of precum on the tip with my long tongue. \"Mmmm,\" I said. \"I need more.\" \n\n\"Oh God,\" he said as I took him deep again. I could feel him getting closer, and as he fought to hold out, I pushed a wet finger into his ass and started rubbing his prostate. \"FUCK! OH GOD, COLLETTA,\" he said as his balls began firing jets of cum into my mouth. I sealed my lips around the head, swallowing furiously to keep up as he filled my mouth with pulse after pulse of his warm seed. \n\nI managed to get it all, even though my cheeks billowed out like a squirrel at one point. I opened my mouth to show Frank it was gone. \"Tasty good,\" I said as I sat back on my heels with a smile. \"Hopefully you'll last long enough for me to have some fun now.\" \n\nHe lowered the seats back, then pushed the armrests out of the way before pulling me up again. \"I guess I need to up my game then.\" I crawled onto the seat, straddling his legs. I squealed a little when his strong arms lifted me and spun me around until my thighs were astride his face, and my chest was pulled down to his. I tried to squirm away, but Frank was much stronger since the change. Having manhandled me into position, he held me tight to him. My wolf and I loved how our mate dominated us in bed. \n\n\"FRANK!\" My legs were hanging free behind the seat as he pulled me down to him. I squealed again as he lifted me until his tongue plunged into my hot sex. I was so close that it only took him seconds for him to set me off again, my legs shaking in the air as his hands held me in place. He ate me through two more as I settled into a 69 position, bringing his cock back to readiness. \"Let me at it,\" I said. \n\nHe helped me move down his body as I straddled his hips, holding his cock in place as I settled down on it. \"Oh yeah, SOOOO good,\" Frank said as I took all of that hard shaft in me. I started to ride him reverse-cowgirl style, slow and steady. I'd drop down fast, wiggle my hips, then grip him with my velvety depths as I slowly pulled him back out. It felt marvelous to tease him like this. \n\nI kept the tease going a bit too long. I heard the loud smack a second before my mind recognized that he'd spanked my ass hard; the pain set off another orgasm. \"Giddyup,\" Frank said as he grabbed my long hair with his left hand and smacked my ass again with his right. I started moving faster as he kept spanking me. He drove me to go faster until my hips were a blur, and the liquid squelch of my sex filled the fuselage. \"Ready to cum?\" \n\nI could barely talk as I braced myself with my hands on the ceiling. \"Almost,\" I moaned out. \n\nHe let go of my hair as his hands moved to my boobs. He pinched both of my nipples hard as he lifted me with his hips, and that was all it took. I screamed my release as my body tensed, and the sensations exploded inside of me. \n\nFranks pulled me back to his chest as I came down from the high. It took a minute to think straight, and another to catch my breath. \"Holy shit,\" I finally said. His fingers were already delving between my swollen lips. \"Not again,\" I said. \n\n\"Two hours of flight time left,\" he whispered into my ear. \n\nAnd he used almost all of it. I was a mess as I cleaned myself up in the small bathroom, using a wet paper towel to wipe the fluids off my legs and body. I traded places with Frank, and we both finished dressing again right as the fasten seatbelt light came on. \"You think the pilots know what happened back here,\" I asked. \n\n\"You don't have to be a wolf to smell the sex back here,\" he said. \"Thank God the seats are leather and not fabric.\" \n\nAn FBI agent met us at the airport and drove us to the J. Edgar Hoover building on Pennsylvania Avenue. The building wasn't busy on the weekend, and after getting through security, we were on our way up to the Director's office. \"Thank you for seeing us on such short notice, Director Patterson,\" I said as we walked through the door. \n\n\"My pleasure,\" he said. \"Mr. Grimes, I didn't expect to see you here.\" \n\n\"My wife and I have a problem,\" he said as he took my hand. \"We're both aware of what she is,\" he continued as Hugh's mouth opened in shock. \n\n\"An active investigation is overlapping with some of our people,\" I said. \"You're aware of the private jet that was recovered this past week in Lake Michigan?\" \n\n\"I am. We have evidence it was a bomb, but not any leads on who did it,\" Hugh said as he sat back down. \n\n\"We believe the target of the bomb was Charles Smith, the grandfather of Rori King,\" I said. \"Charles was in a powerful position for us, one of two North American members of the five-member Werewolf Council. It is that Council that rules the Alphas and the Packs.\" \n\n\"Who would kill him?\" \n\n\"The usual suspect is the one with the most to gain from his death,\" Frank said. \"When the plane went down, the North American Alphas elected Nathan Kirk in his place. He's a close ally of the Chairman, Jack Coffey.\" \n\n\"Do you have any proof?\" \n\n\"Not yet,\" I said. \"However, there was another bombing attempt in Canada recently. Rori's sister in law, Coral Sexson, had chartered a plane. During preflight checks, the pilot discovered an explosive device. The Royal Canadian Mounted Police are investigating. We think these are connected, and the same people are behind both.\" \n\n\"You think werewolves are bombing planes?\" \n\n\"No,\" Frank said. \"Coral detected no wolf smells in the area. We believe they have hired someone to do the work, but the targets are our kind.\" \n\nHe wrote down a note. \"Our investigation will reach out to the RCMP immediately,\" he said. \"The explosive residue evidence has not been released yet.\" \n\n\"This is where our favor comes in,\" I said. \"We want to find the killers, but we know the trail is going to lead back to our kind. We need to find justice without our secret coming out. We'd like you to make Frank a part of the investigation.\" \n\n\"You're DEA still?\" \n\n\"No, I'm retired now. I don't care about rank or pay. We need you to bring me on as an unpaid consultant or something. I need access to the investigation, and I can assist when it starts crossing over into our kind.\" \n\nHe leaned back in his chair. \"I can't condone vigilantism. We have to follow the evidence and arrest the suspects.\" \n\n\"That's not my call,\" Frank said. \"You need to understand that we have a separate justice system, in place for centuries, along with a distrust of human institutions. I'm far from the top of this system, but I will do what I can.\" \n\n\"They will not escape justice,\" I promised. \"Werewolf justice for this is death, no appeal, and no delay.\" \n\nHe thought about it for a moment. \"I need something in return,\" he said. I lifted an eyebrow. \"Your kind has the same senses as wild wolves? Wolf night vision, sense of smell, and speed, while retaining your human intelligence?\" I nodded. \"There are other investigations or situations where I believe your specific talents could be helpful. Homeland security, Presidential protection, even search and rescue. I want to be able to call on you, Colletta, for such assistance when it is needed.\" \n\n\"We have used Pack members like this, usually smaller females who can pass for hybrid dogs. They are better than any service animal you'd ever train.\" I smiled as I thought back to how Chase had used them in Orlando, helping to take down the Sons and their attack. \"They would be teams of dogs and handlers. We would decline offensive operations, but we would be able to support other functions at times. I would expect right of refusal, and the teams should receive compensation for their time; we are not Federal employees, after all.\" \n\n\"I wouldn't mind if some WOULD apply. We could use you.\" \n\n\"I can't see that happening unless our nature was known and accepted,\" I said. \"It's too risky otherwise.\" \n\n\"Fine. I'll take what I can for now. I'll give you a letter designating you as an observer for the investigation, with full access. I expect you'll help the investigation along where possible.\" \n\n\"Thank you, Mr. Director,\" I said. Three hours later, letter in hand, we were on our way to the Chicago Field Office, and the RCMP had shared data with the FBI. \n\nCh. 33 \n\nAlpha Chase Nygaard's POV \n\nCascade Pack House \n\nSomething about the phone call from Chairman Coffey bothered me. I finally figured out what it could be after Frank and Colletta walked out. I brought my mate, my brothers, and sister into the link. I had to form the link because my family couldn't link directly to Rori. \"Coffey's call almost seemed like he knew what was going on here. Less than two minutes after we hear that Vic is here, and he's warning us not to help him? Spider Monkey's information said we have a mole; do we have more than one?\" \n\n\"No one else was in the office,\" Coral said. \"You think someone overheard us?\" \n\n\"We should look for a bug,\" I replied. \"Start looking around. When Carson gets back, we'll have him check his phone system.\" We spread out around the room, and it wasn't long until I found it. Underneath the phone was a thin metal disk with a wire antenna, and it wasn't original. \"Found it. Stay on the link and keep looking,\" I said as I set the phone back down. \n\nCoral looked at me as I set the phone down. \"Are you going to disable it?\" \n\n\"No, then they'll know we found it. Better to let Carson's people figure out who set it and where. If there's one, there might be more.\" Ten minutes later, we hadn't found anything else. Carson was done with Vic and was driving back with Heather. \"Let's meet him outside, where we can all talk,\" I said. \"Carson, call the Chairman like we said earlier. He'll be expecting your bullshit call, so we have to do it, so he doesn't suspect we're on to him. We'll meet you at the fire ring, bring your Betas with.\" \n\nTwenty minutes later, we were all out in the woods, sitting around a fire as we talked. \"This is a fucking disaster,\" I said. \"Who knows how long the Council has been listening to us, or what they know already.\" \n\n\"If it was just today, they know a lot,\" Coral said with a nod. \"Let's see; Heather is alive as are her babies, despite the werewolf bite. We helped with taking down the Sons of Texcatlipoca's drug money. We're helping out Vic and Spider Monkey despite their status as declared fugitives. Oh yeah, and we used blood to allow Heather to change into a wolf, and we're going to do the same to Spider Monkey. Does that cover all the damage we've done?\" \n\nSawyer just shook his head. \"Add in that we're sending Frank and Colletta to Washington, DC to look into Charles' death, and that those two are married. It won't take much of a leap to figure out he's become a werewolf too.\" \n\nThat made me think of another problem. \"The Council overheard that we used werewolf blood to change humans, but they don't know that it doesn't work without a mate willing to take them. It's like having half a recipe, but in this case, doing it wrong will kill people.\" \n\n\"It won't take long before some of them try,\" Sawyer said with a shake of his head. \"It's too tempting. Why wait twenty years for the birth rate to increase when you can have adult warriors overnight? They're going to kill a bunch before they figure it out.\" \n\n\"We're all in danger,\" Coral said. \"They've already tried to kill me, which means they see all of us as targets. We should return to our Packs and defend them.\" \n\n\"I agree,\" Rori said, \"But I think I should bring Vic and Spider Monkey back home. We shunned them and sent them into hiding because we didn't want the Council to know we were still helping them. That's water under the bridge now.\" \n\n\"And the Council knows they are using humans for protection. It won't take long to figure out it's the Portland chapter behind them,\" I said. \"I think it's time Rori and I put on our cuts and pay that chapter a visit. The last thing we need is the Council attacking a Clubhouse.\" \n\n\"And back home, Spider Monkey will have Teri and Brian Steele to help go through the contents. Brian was the IT guy for the Council; I bet he'd be a big help in finding proof,\" Rori said. \"The recording we had of Millner setting up the attack here doesn't help us because he's dead now. Coffey will just blame him. What we need is proof that Coffey is behind the attack on Charles and Coral.\" \n\n\"How are we doing politically,\" Sawyer asked. \"Do we have enough votes to change out the Council?\" \n\n\"We have nothing on Councilman Nathan Kirk,\" Carson said. \"He benefited by Charles dying, but until we can tie him to it, how do we swing votes to remove him?\" \n\n\"And taking Coffey down would require two-thirds of the world's Alphas, not just North American,\" I said. \"I don't think we have that.\" \n\n\"I'd like to take him into a dark alley and settle it the old way,\" Carson said. \"I know it's him.\" \n\n\"It's not what you know; it's what you can prove,\" Sawyer replied. \"So, let's find the proof.\" \n\n\"I'll talk to Mom later, away from here and using a burner phone,\" I said. \"I wouldn't doubt if the Council is listening in on cellphones since there isn't much other than your Pack out here. I'll let her know about the bugging. Check your offices, vehicles, and computers when you get home.\" I shook my head. \"Shit, the Council could have placed bugs damn near anywhere when they were all there for the trial.\" \n\n\"I think we should put some pressure on the Council too,\" Rori said. \"We can't just sit back and wait for them to file charges, or worse convince some Packs to attack one of us. I think we should go recruiting again.\" \n\nI had to smile at that. \"We've lost our Beta with Vic gone, and for a Pack, we're still light on warriors. We've got plenty of money and room, though. I think we put out a reminder that we're open to Pack transfers.\" \n\n\"Our allies have already loaned us some of their people,\" Rori said. \n\n\"Permanent transfers, but not from Allied packs. Take Brian Steele as an example. He's a good Beta stuck in a corrupt Pack. Alpha John Coffey would kill him before he let him leave. Instead, he broke the Pack link and went rogue. He was thrilled to be accepted into our Pack when Ron and Teri returned. Not only did we weaken the Banff Pack, but we also have a guy who's spilling secrets about it. It's kind of like picking up a player on waivers from a team you're about to play.\" \n\n\"Send targeted emails,\" Carson said. \"Direct to all the Betas and Warriors of the Packs that aren't allied to us. I bet a few take you up on it, especially if you say you'll take entire families.\" \n\nCoral laughed a little. \"Everyone knows about the Blessing with your Pack; I bet you get a lot of volunteers desperate for children. I lost most of my Betas and half my warriors between the takeover and the attack here, so add my Pack on the list of ones to which they can request membership. Banff won't know what hit them.\" Blue River was the closest Canadian Pack to Banff. \"It will be the biggest Exodus since Moses.\" \n\n\"Hard to top all the Omegas walking out of Bitterroot,\" I said. \"Waking up and finding out because no one was making breakfast? Classic.\" \n\n\"Make sure they understand this isn't a transfer, or we'll run into problems from Pack laws,\" Sawyer said. \"They need to break the links to their Packs first, then make their way to one of our Packs and request membership. If they don't, the Alphas can demand their return or reparations. I'll call Adirondack and Oxbow Lake and let them in on the plan. We can make things easier for them; if they make it to any of our Packs, we'll arrange transport to Blue River or Arrowhead. Heck, let us know, and we'll buy them plane tickets to Duluth or Calgary.\" \n\n\"I'll send out the email when I get home,\" Coral said. \"Rori and Chase have enough to do. We'll target Banff, Denali, Katahdin, and Monongahela. I want to leave Bitterroot and Casper off the list since Alphas Long and March voted for no punishment at your trial. I'm holding out hope we pull them into a full alliance, and poaching members wouldn't help that.\" \n\n\"Let your Packs know what you are doing,\" I said. \"There will be relatives in those Packs, and they can follow up with recruiting phone calls. There's no better way than a personal invitation.\" \n\nCarson stood up. \"We're lucky that most of those Packs don't allow much in terms of personal possessions; all homes belong to the Pack along with much of what is in them. It gives the Alphas more control of their people, but it makes it easier to leave too.\" \n\n\"We should get going then,\" I said. \"If you could assign someone to sneak us out, Rori and I will head to Portland and catch a flight from there.\" \n\n\"Let's get going,\" Carson said as he kicked snow over the fire to put it out. \n\nFour hours later, we were dropped off in front of the Portland clubhouse with our overnight bags. \"Let's get our Betas back,\" I said as we walked to the gate. We gave our names to the Prospect at the vehicle gate, who called ahead to make sure it was all right. \"Security is up,\" I said as I looked at the armed guard patrolling on top of the clubhouse. \n\n\"Threats. You'll have to ask Thor about it,\" he responded. \n\n\"CANVAS!\" I looked up to see Switch running towards us. He picked up Rori and swung her around before shaking my hand. \"Good to see you again, Frame.\" \n\n\"Good to see you. At least my old lady is in better shape this time.\" The last time we'd been here, Rori had been torn up by a bear. \"What's going on? Spider Monkey turned white and ran for her room when she heard you were here.\" \n\n\"Time to take her home,\" I said. \"I need her help there, and we're pretty sure the bad guys know she's here now.\" \n\n\"Shit. I'll go get her,\" Switch said as he held the door open for us. We dropped our bags by the door and went in. \n\nThor and Sif waved from a table in the back, and we greeted a few people before we made our way to them. \"Welcome to Portland,\" he said as he gave me a Brotherhood greeting. \n\n\"Thanks. We can't stay, though. We have a plane waiting at the Hillsboro airport, and we'll need a ride for the four of us.\" \n\n\"Shit. Is it bad,\" Sif asked. \n\n\"What's going on, Canvas,\" Spider Monkey said as she came over to us. Vic had come out of the back room to join her. \n\n\"Time to go home,\" Rori said. \"Nice cut, Vic,\" she said as she looked at his Prospect vest. The two embraced, and I felt the Pack bond come back before they let each other go. \n\n\"I'll get our stuff packed while you explain it to Spider,\" he said. \"Keep me in the link.\" \n\nI told them what I knew; Coffey had planted bugs, he knew we were working with Spider Monkey, and after the exchange earlier, he probably knew she was here. \"We figure the best plan is to get you some help with going through the data you hacked, and we can't do that if you're on the run. We'll sneak you back into Arrowhead.\" \n\n\"Let's go then,\" she said as she saw Vic coming back down the stairs. \n\n\"The car's waiting in the garage,\" he said. \n\nWe loaded up the Ford Explorer, hiding under a blanket in the folded-down back seat. Switch and Rattler drove, both armed and watching for tails, finding none. We said our goodbyes and entered the executive jet. Four hours later, at $2000 an hour, we'd be in Duluth. \n\nBeta Teri's POV \n\nArrowhead Pack Computer Room \n\n\"Looks like the server isn't compromised,\" I said as I sat back in the chair. I'd run a complete set of diagnostics to verify it. \n\n\"That's good,\" Brian Steele said from the other chair. Rori had immediately accepted him into the Arrowhead Pack when we arrived back home. He knew that the Banff Alpha, John Coffey, had to be talked out of killing him when the Pack and Council servers got hacked. From what he told me on the flight, he'd be dead already if Councilman Nathan Kirk hadn't grabbed John's clawed hand and stopped him. The Council was pragmatic and had brought in additional resources, including me, to deal with the hack. Brian's worry was for what would happen after the crisis ended. All his Alpha had to do was find another wolf with Information Technology skills, and he'd be expendable. ",
        "Instead, he left with me when I figured out it was Spider Monkey who had hacked the Council server. My mate Ron was thrilled to be leaving Banff. He didn't trust the Council as far as he could throw them, especially with his pregnant mate. \n\nI was reviewing the external transmissions when a file caught my eye; it was being sent to a server number I recognized. I pulled the file up just before the program tried to delete it. \"Look into this program,\" I said as I saw the activity. \"I'm going to see what this is.\" \n\nIt was an audio file, about two minutes long. A woman was singing \"The Boxer\" by Simon and Garfunkel, and not singing it well. \"Did anyone just sing The Boxer,\" I sent to the Pack. \n\n\"I did,\" Charlize said. She was one of the Omegas. \n\n\"What are you doing?\" \n\n\"I was cleaning the Alpha's offices,\" she told me. \"I didn't know anyone was listening.\" \n\n\"Stay there,\" I told her. \"Come on, we've got a problem.\" I led him up the stairs as I told Ron and Brian my suspicions. It didn't take long before Brian found the bug on the underside of the desk. \"Leave it for now,\" I said. \"We'll tell the Alphas when they return.\" \n\n\"Where is the transmission being sent,\" Ron asked. \n\n\"The Werewolf Council server.\" \n\nCh. 34 \n\nAlpha John Coffey's POV \n\nBanff Pack House \n\nI felt two more bonds break as I headed down to the computer room. In the two hours since the email from that bitch Coral had come out, I'd lost thirteen members of my Pack and counting. Closing down the borders hadn't worked, as some of the guards left and told everyone where to go. They'd loaded up their cars and left before I could stop them. \n\nI'd issued an Alpha Command to the Pack, forbidding any of them from leaving. Beta Rick had replied with a \"Fuck You, Ass-hole,\" in a 'Terminator' voice before he and Teri broke the bond and left the Pack. It was unfortunate, but Alpha commands only worked while their wolves recognized you as their Alpha. \n\nI burst into the computer room, scaring Lisa Funk as she sat at her terminal. With Brian Steele leaving the Pack and the hack issues over, Lisa was now in charge of the computers for both my Pack and the Council. \"What can I do about this,\" I asked. I handed her the email one of my loyal Betas had received. \n\n\"Two hours ago? Sent to individuals? Not much, Alpha. All the recipients would already have it downloaded into their computers or their phones. I can block the sender's email if you want.\" \n\n\"Do it.\" \n\nShe took the sheet and opened a program. \"It won't stop them from calling friends in those Packs or using other emails. Hell, they don't even need to respond. All they need to do is show up at one of the Packs.\" She looked up from me. \"If you wanted to slow it down, you'd have to sever all email and phone communications, like we had when the server was down. Even then, people can spread the email they've gotten around.\" \n\nI couldn't afford that; it would cut off the surveillance we had in place. \"No. You're right; we shouldn't be chasing the mosquitoes when we need to drain the swamp.\" I walked out of the office, thinking about the best way to do it. \"Dad, we need to talk about Alphas Coral and Rori, they're draining my Pack of people,\" I sent to him. \n\n\"Come to my office,\" he replied. \n\nI arrived a few minutes later, finding Councilman Nathan Kirk sitting in one chair and the Council Doctor, Viktor Andromeyev. The Doc was older than dirt but still sharp as a tack, and I had to wonder why he was here. \"Sit down, boy,\" Dad said. I nodded respectfully to Kirk before taking the remaining seat. \"What's going on with your Pack?\" \n\n\"This email was sent a few hours ago. Rori and Chase are openly recruiting members without the normal transfer process. They believe them when they say they'll be accepted, so I've had thirteen already drop their Pack alliances and leave. I can't stop it,\" I said. \n\n\"How bad are the losses?\" \n\n\"Three low Betas and four Warriors, plus family,\" I replied. \n\n\"You're doing better than Monongahela,\" Councilman Kirk said. \"Matthew just called; he's lost nineteen of his wolves, including his senior Beta.\" \n\nShit. \"Our other allies?\" \n\n\"I haven't talked to them yet,\" the Chairman said. \"I'm assuming something similar is happening there.\" \n\nThis was a nightmare. As soon as the early ones reached Blue River, they'd call back and bring even MORE wolves with them. \"Well, how do we stop it? Fucking Blessing talk is all over the place. I've got loyal wolves who haven't conceived leaving me over this fantasy that being in one of their Packs will help them get pregnant!\" \n\n\"The whole thing is a personality cult and random chance,\" Doctor Viktor said. \"There's nothing you can do to improve your chances of conceiving; the odds are consistent. These Packs are getting a hot streak, but it will all even out over time.\" \n\n\"You may be the only one who believes that, Doc,\" I said. \"Rori kept her Pack since two-thirds of the world's Alphas believe she carried Luna's blessing.\" I looked over at my father. \"The horse is out of the barn with these transfers, so fighting them won't work. We need to take away the attraction. Coral and Rori have to go.\" \n\n\"That is true, but we have a bigger issue. This came in earlier today.\" \n\nHe hit a button on his computer, and a voice played over the speaker. \"That's our trailer. And our truck. I bet that's Vic, bringing Heather her stuff.\" It was Rori, I'd recognize that bitches voice anywhere. \n\n\"Who are the others, then?\" Alpha Carson. \n\n\"Human friends. He's probably not sure of the reception he'll get.\" Alpha Chase. \n\n\"Good, you can give him the bag.\" Rori. \n\n\"Give Vic some units of blood. We had planned to let Vic change her when the rules changed, and she wasn't pregnant. Heather just proved that Mom and baby should survive a bite if they get werewolf blood in time. If Vic has the blood, he can keep her alive until one of our Packs can help.\" Chase. \n\n\"I've instructed Doc Myers to put it together with the IV and instructions. I'm going to meet Vic and get Heather's stuff.\" Carson. \n\n\"Too bad she can't ride her Harley until she gives birth.\" Rori. \n\n\"At least she'll have it here. Come on, love, let's go say hello.\" Carson. \n\nDad paused the recording as we all wrapped our heads around what we just heard. \"That's IMPOSSIBLE,\" Doctor Viktor said. \"You cannot change a human, the bite is fatal every time!\" \n\n\"I know Heather got bitten in the attack, my source confirmed it. Somehow, they used our blood to change her, AND THEY DIDN'T LOSE THE BABIES,\" the Chairman yelled. \"Do you realize what this means? Pack transfers don't mean SHIT if you can make werewolves by the busload!\" \n\n\"If she changed and survived, it's been a little more than a day since the bite,\" Kirk said. \"They could raise an army in weeks!\" \n\n\"And they might be already,\" Dad said. \"Heather wasn't planned. I'm sure they didn't want to risk losing the twins and shifting while pregnant is an instant miscarriage. They said they planned to let Vic change her when she wasn't pregnant, which means Heather wasn't the first.\" \n\n\"Frank Grimes,\" Kirk said. \"He shouldn't have survived that neck wound, and he's with Carson's mother. I bet she changed him, using our blood to spur healing.\" \n\n\"It's been tried and failed before,\" Doctor Viktor said. \"Giving a human our werewolf blood causes the change fever. In some cases, a shift begins, but in all cases the human could not withstand the stress of a shift. It's a hundred percent fatal.\" \n\n\"How do you know?\" \n\n\"The late Alpha of the Ossoro Pack in Russia, his Pack Doctor experimented during World War Two on injured soldiers. He gave up after the first sixty died.\" \n\nThe Chairman looked at him. \"How did you find out?\" \n\n\"I was that Pack Doctor, Mr. Chairman. Perhaps she was not bitten at all.\" \n\nI shook my head. \"This was recorded without their knowledge?\" Dad nodded. \"They had no reason to say what they did if they hadn't successfully managed multiple changes. We have to find out what they did to make it work.\" \n\n\"I agree,\" Councilman Kirk said. \"The knowledge of how to safely change humans would be revolutionary. In the wrong hands...\" \n\n\"Like the hands it's in now,\" the Chairman said. \n\nKirk stood up and started pacing. \"Exactly. In a week, they would be stronger than our combined Packs. In a month, they could destroy us. The Blessing shit was a long-term problem; even if they bred like rabbits, their wolves wouldn't appear for sixteen more years.\" He stopped and looked out the window. \"Call the other Council members into emergency session. We need to act now.\" \n\n\"We have enough to convict Carson and Rori for aiding and abetting a Council fugitive,\" I said. \"Send Enforcers to confine them!\" \n\n\"We don't have the time or the support,\" Kirk said. \"We would have to confine them to their Packs, and it would be weeks before a trial. We had Rori pleading guilty, and the World Alphas did nothing; why would they do something now because she helped her old Beta? There are plenty of Packs whose allegiance is no longer to the Council.\" \n\n\"It's not the Alphas you need; it's the Pack Doctors,\" Viktor said. \"Arrowhead has Alpha Chase, but they also use Doctor Olson from Oxbow Lake to help. Cascade Pack is Doctor Myers. I'm sure both of them were involved in these changes. If you want to stop them, you need to kill the Alphas and the Doctors. If you want the power for yourselves, you'll need those Doctors to tell me how to do it.\" \n\n\"Arrowhead and Cascade are our priorities,\" Chairman Coffey said. \"John, I need you to gather as many warriors as you can in Seattle. I'll send some Enforcers with, and get Denali to send people too. Nathan, get your boy to send warriors to Minneapolis to meet the rest of the Enforcers. Have him get Katahdin to help. I don't know if we can trust any of the others.\" \n\n\"Yes, sir,\" I said. \n\n\"Nathan, you have five minutes. I'll get the other Council members on videoconference.\" \n\nI left immediately, calling my Beta to meet me in my office and giving him my instructions. \"How many do you want to send,\" he asked. \n\n\"Everyone except your mate,\" I said. \"Arrange transportation to the airport and lodging near Sea-Tac airport in Seattle, since we have to wait for Denali.\" \n\n\"Weapons?\" \n\n\"I have a contact who will supply us with what we need. He has 24/7 delivery service.\" The illegal guns weren't cheap, but they aren't traceable. \n\n\"Yes, sir,\" he said as he left. I made the phone call to the Denali Pack. Alpha Alan Robertson was more than happy to help with the 'Rori problem' as long as the Council would back us. \"Don't worry about that,\" I told him. \"They've gone too far this time.\" \n\n\"Good. I hope the Council dissolves their Packs this time,\" he said. \n\n\"If they don't, we'll put good men in their places. The balance of power gets restored, and this Luna crap will end. I'll see you in Seattle tomorrow morning, at the Crown Plaza Seattle Airport,\" I said, my Beta having informed me of where he'd reserved rooms. \"We'll bring the toys.\" \n\n\"See you then,\" he said. \n\nMy father called me back to his office thirty minutes later and handed me a piece of paper. \"Under the Emergency Powers section of the Council Bylaws, I am ordering you to arrest Alpha Carson Nygaard, Heather Rhodes, and Doctor Myers. If any of the others listed are still there, arrest them too. Deadly force is authorized to execute the warrant after one warning.\" I looked at the list; it included Alphas Rori and Chase, Alpha Coral, Alpha Sawyer, and Doctor Olson. \n\nMy hands shook a little; we were going to cut the heart out of our enemy. \"And if the Alphas resist?\" \n\n\"Kill them,\" he said. \"No excuses. I want them in my dungeons or the morgue by tomorrow night.\" \n\n\"I understand, Mr. Chairman.\" I walked out of the room with the paper I needed to get my revenge. \n\nMy Beta had been busy, and two hours later, I was at the airport with thirty-one of my men. Only the Beta knew what we were going for, and I could tell they were nervous. \n\nThe next morning, I met with Alpha Robertson. He brought twenty-six men, and it took a lot of rental vans to carry us all. We drove southeast from Seattle, stopping at an empty trailhead for the planning. \"The Werewolf Council has issued an emergency warrant for the arrest of Alpha Carson Nygaard on charges of experimenting with humans, and aiding and abetting a Council fugitive,\" I said, continuing with the rest of the reading. \"It is our duty to carry this out. Alpha Carson and his allies must be stopped before his activities expose us all.\" There were some heads nodding, others were shocked at the news, while some had already figured out why we were here. \"We go in fast. Alpha Robertson and I will be at the main gate with five men from each Pack and the Council enforcers. The remainder of Denali will be here with your Beta,\" I pointed to a spot on the map opposite the main gate. \"The rest of Banff will divide here and here, on either side of the main entrance. The Council Enforcers will notify the guard of the warrant as everyone else moves in wolf form to meet at the Pack House. We will drive there and take control of the prisoners.\" \n\n\"Rules of engagement, sir?\" \n\n\"Once the gate guard has the warrant, kill any who resist, including the Alpha. Under no circumstances is the Pack Clinic to be attacked. I need Doctor Myers alive.\" \n\nThere was some murmuring about that, but it was over quickly. \"Move into your position and report to your Alphas. Go time is noon, we'll catch them at lunch.\" \n\nEveryone loaded back up into new groups to be dropped off at the rally points. No one noticed that one of the warriors had slipped away into the trees. \n\nCh. 35 \n\nAlpha Rori King's POV \n\nArrowhead Pack House, Alpha Offices \n\n\"Alpha, I think you should take this,\" my secretary said as she poked her head in the door. \"He said it's an emergency.\" \n\n\"Thank you, Ophelia,\" I said. I picked up the phone, confident now that the offices had been swept clean of surveillance. Beta Ron had moved the device we found to his office, where he kept up the illusion in fake phone calls that I was still out of town. \n\nChase, Vic, Spider Monkey, and I had arrived late last night. We'd assigned every extra Pack member to help listen to and categorize the saved phone recordings Spider had gotten from the Council and Pack servers. It was taking a while, but they were making fast progress. If they heard anything interested, it was bumped up to the Betas. Two dozen listeners were a lot faster than a distracted Monkey. \n\n\"Alpha Rori,\" I said. \n\n\"Alpha, this is James Bremerton, I am, I mean I was, a warrior in the Banff pack.\" \n\n\"Are you requesting admittance to my Pack,\" I asked. We'd been getting phone calls, emails, and people just showing up at the gates constantly since the email was sent out. \n\n\"Yes, Alpha, but I bring a warning for the Cascade Pack. The Council has issued an arrest warrant for Alpha Carson, and we're here to get him.\" \n\n\"I know about the warrant. Hang on.\" I opened a link with my mate and my Betas. \"A Banff warrior is on the phone; he told me his Alpha is moving to arrest Carson. Listen in.\" I picked up the phone again. \"Go ahead, James.\" \n\n\"Last night, Alpha John had all of his Warriors and all but one Beta fly to Seattle, that's thirty of us. We met this morning with Alpha Robertson, who flew in with twenty-six Denali Betas and Warriors. We're just outside Cascade Pack territory now, moving into position to attack at noon. They wanted Alpha Carson, Alpha Coral, you and Alpha Chase, Heather Rhodes, Doctor Olson, and Doctor Myers. Deadly force is authorized to execute the warrant after one warning, and if you refuse to go, they are to kill you. This could be a bloodbath.\" He paused. \"I can't do it, Alpha. I didn't want to leave my Pack, but I can't go against the Goddess either.\" \n\n\"You don't have to.\" I took down his cellphone number and gave him a website and a passcode. \"Stay out of sight and log into this in twenty minutes. Thank you, James.\" \n\n\"I've already sent a warning to our allies,\" Chase said. \"Carson already replied, as did Michael.\" \n\nI opened the link to the entire Pack. \"CONDITION YELLOW,\" I broadcast. \"We have information that the Council is using Packs to attempt to arrest your Alphas and Doctor Olson. There is no immediate threat, but prepare all defensive measures and observe.\" The Pack leaped into action; the actions practiced over and over until they were habitual. In minutes, the entrances would be closed off and reinforced, non-combatants would be in the Pack safe room, and everyone else would be at their defensive positions. Beta Ron had assigned the eight new Warriors we'd taken in to shadow our own, so they would end up reinforcing existing defensive positions. \n\n\"I didn't think they would move that quickly,\" I said. \n\nPrevious Night \n\nDuring our flight home, I'd gotten a call from Councilman Yakov Baronsky. \"What can I do for you, Councilman,\" I had said. \n\n\"You can tell me what human experimentation you are involved in,\" he said. \"The Council just met in an emergency session. They presented evidence you are using werewolf blood on humans.\" \n\nI froze, but then I should have expected this. At least our goodwill with the Beloretsk Pack led to Yakov calling us to ask, instead of just rushing to judgment. \"We weren't experimenting, sir. It just happened. When Frank Grimes got attacked, he needed blood. All we had was werewolf blood, so that's what he got.\" \n\n\"Doctor Andromeyev insists that werewolf blood doesn't work.\" \n\n\"It doesn't, not on its own. We figured out how to pull the victims through the change. We've only used it when necessary; the knowledge is too dangerous to fall into the wrong hands.\" \n\nYakov started to laugh. \"The Council said the same thing, right after they listened to a recording of you talking about how you needed to get Vic a bag of something, and Chase said to give him some blood. I don't suppose Carson knew his office was bugged.\" \n\n\"Not at the time, but we found it shortly after. Millner had a mole in the Pack, too. Well, I don't trust the Council after all I've been through lately. No offense, of course.\" \n\n\"The Council voted to arrest you. They said they want to bring you back to Banff to stop you, but I don't trust them either. Once they know how you're doing it, they will kill you like they killed Millner.\" He was right. \"You should think about going public, Alpha. The Council isn't all-powerful.\" \n\n\"We'll talk about it, Mr. Chairman. Thank you for the call.\" \n\n\"Protect yourself, Alpha. You've made lots of enemies.\" \n\nHe hung up, and I turned to Chase. \"What should we do?\" \n\n\"We need to have Frank and Colletta in on this decision, and they're in Chicago.\" He sent them a text. \"We have some time, so let's get Sawyer working on strategy. The Council cannot remove an Alpha from his land unless convicted, and we're not going to let them take us anywhere. With the time to prepare a defense and gather the Alphas for the jury, we have weeks.\" \n\nPresent time \n\nThe Pack leadership had assembled in my office ten minutes after making sure our defenses were ready, and no immediate threats existed. \"What do we do next,\" Chase asked. \n\n\"Councilman Baronsky recommended we go public. We need to do something before we have a couple of dozen barbarians at the gate,\" Chase said. \n\n\"I'll call for the removal of the Council,\" I said. \"This has to end.\" \n\nBeta Ron shook his head. \"Coffey's a slippery bastard; he'll blame Millner for everything. We need more than just bugging the offices to get rid of them.\" \n\n\"They want to be able to change humans,\" Teri said. \"What if we gave that to everyone?\" ",
        "I shook my head. \"You want to give these power-mad Alphas the ability to raise armies?\" \n\n\"How would that work then,\" she said. \"You need a mate to complete the change, and there are only so many widows out there. You can't force a mating on someone; their wolf would never do it.\" \n\n\"There will be wolves like Greg, who decide to take a human as a mate before finding their fated mate,\" I argued. \n\n\"We don't know if Luna would allow that since we haven't tried it. I have to think the blessing of Luna is required for this to happen,\" Teri replied. \n\n\"We can warn them,\" Chase said. \"They may not believe us, but if we do nothing, how many innocent humans will die as they try and figure it out?\" \n\nHundreds, potentially. \"Fine.\" I looked at my clock, it was one-thirty in the afternoon, and we were two hours ahead of Carson. \"Ron, set up a global teleconference in thirty minutes. We need Frank and Colletta on the call, too.\" \n\n\"Who do you want on the call,\" Ron asked. \n\n\"Invite them all, we'll see who shows up,\" I replied. \n\nTwenty-five minutes later, Chase and I were sitting in my office in front of the videoconference, displayed on the large screen on the wall for my staff. Beta Ron was mind-linking the proceedings to those staffing the defensive positions, while the others watched in the safe room. At precisely 1:30, I opened the meeting. Everyone was present except Chairman Coffey, and Alphas Coffey, Robertson, Blackledge, and Kirk. It was clear the Monongahela and Katahdin Packs were the ones coming to Arrowhead. \"Welcome, Alphas, to this emergency teleconference,\" I said. \"I apologize for the short notice.\" \n\n\"What is the purpose of this meeting,\" Councilman Nemmers said. \n\n\"To present evidence as to why the existing Council save Councilman Baronsky be removed for cause. The Councilman was not in agreement with the others.\" That little bomb set things off, and it took almost a minute with everyone yelling before I could speak again. \"As you know, the Council members are subject to recall with a two-thirds vote of the respective continents Alphas.\" \n\n\"This is a serious matter,\" Alpha Long of Bitterroot said. \"I suspect you have evidence, and I'd like to see it.\" \n\n\"As would I,\" Councilman Nemmers replied. \n\n\"First off, a warning. This voice-activated surveillance device,\" I showed the deactivated bug to the camera, \"was placed by the Council within my office. We found a similar device was in Alpha Coral's office; the Council has been in both Packs recently and had access to the offices during that time. A third device was in Alpha Carson's office. In each case, there was a receiver nearby and a program on the Pack server that transmitted the information to the Council server.\" \n\n\"That wasn't us! It had to be that bastard Millner!\" Jurgen Nemmers was standing now. \n\n\"I suppose that is why the devices were still in use yesterday, long after Millner turned into ashes,\" I replied icily. \"Isn't that right, Councilman Baronsky?\" \n\n\"Alpha King is correct; the Chairman played a recording from Alpha Carson's office yesterday. It was the basis for the arrest warrant they authorized under emergency Council rules. Here, let me read.\" He read the warrant to the shocked Alphas. \n\n\"As you all know, the arrest and trial of an Alpha can only occur under strict rules. The Council must authorize the warrant and present it to the Alpha. Enforcers monitor the Alpha to verify they remain on their Pack lands. The Council sets a date for the trial, giving time for the Alpha to prepare a defense and the Alphas to make travel plans,\" I said. \"I should know, I've just been through it all.\" There was some laughter at this. \"I'd like to link in a witness at this time.\" \n\nI brought up a new participant. \"This is James Bremerton; until a short time ago, he was a warrior in the Banff Pack. James, please tell the group where you are and why.\" \n\nThe warrior briefly summarized the events from last night to now, when warriors of two Packs surrounded Cascade Pack lands. \"What were your orders, James?\" \n\n\"Here, I'll play them for you.\" The next voice was that of Alpha John Coffey. \"Once the gate guard has the warrant, kill any who resist, including the Alpha. Under no circumstances is the Pack Clinic to be attacked. I need Doctor Myers alive.\" \n\nI had to let the noise die down before I could continue. \"The attack will begin in twelve minutes, so we have to move on to questions now.\" \n\n\"Alpha Rori, the warrant stated you were experimenting on humans. What exactly did you do?\" \n\n\"Alpha Carson, perhaps you should go first,\" I said. \n\nThe screen widened until everyone could see the big female wolf at Carson's side. \"This is Heather Rhodes. She survived the bite, turning into an Alpha-level wolf, and as you can see, my mate.\" He pulled his collar down, showing the fresh mating bite. \n\n\"Luna Colletta?\" \n\n\"Hi everyone. Do you remember Frank Grimes? He's now my mate.\" \n\n\"Impossible,\" Alpha Hapsburg said. \n\n\"It's true,\" Frank said. They were in a hotel room, and he dropped his bathrobe and shifted into his huge wolf, licking Colletta's face, before changing back and pulling his robe back on. \"We have found a way for humans to become werewolves. It is that knowledge the Council is after; the rest is excuses. They think they will be able to raise armies loyal to them.\" \n\n\"Why shouldn't we worry about YOU doing the same,\" Alpha Fergus Shaw asked. \n\n\"It's not an easy thing. The only way the human can pull through the change is if there is a wolf with them, willing to mate with the emerging wolf immediately. Matings are sacred; both Colletta and Carson lost theirs and chose humans as a second chance mate.\" He pulled Colletta into his side. \"Without her love, I'd be as dead as every other bitten human.\" \n\n\"As would Heather,\" Carson added. \"She even kept her pups.\" \n\nI looked up at the clock. \"Ladies and gentlemen, we must cut this meeting short. In just a few minutes, the Cascade Pack will be attacked by more than forty warriors from two Packs.\" There was a warning siren in the background. \"The Arrowhead Pack as well. May Luna accept the fallen today.\" \n\nI left the videoconference going, shifting the views as Carson and I had talked. The surveillance footage from our two Packs was displayed side-by-side as the remaining Alphas argued. \"Enemies at the gates, Alphas,\" Beta Ron sent from our security center. \n\n\"Cry Havoc! And let slip the dogs of war,\" I sent to all of Arrowhead. My Pack answered with volleys of gunfire."
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "biker",
        "luna",
        "pack",
        "werewolf",
        "werewolves",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-31-35"
}