{
    "title": "Justice Ch. 02: Ghost Riders",
    "pages": [
        "The following is a continuation of two stories, \"Justice Ch. 01: Amos and Andrea\" and \"The Camp Ch. 03: The Coward.\" To understand the full context of what is taking place here, I suggest you read those two stories first.\n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. And please remember, this is a work of fiction, not a docu-drama...\n\n*****\n\nI looked at my image in the mirror and reflected on the events of the last year. It had been one hell of a ride. A little more than a year ago, I found my first wife, Andrea, having sex with her boss in our house. Worse yet, they were doing it in our marital bed. \n\nAndrea wanted me to accept her sordid affair and threatened to destroy me if I chose divorce. The next day, after seeing an attorney, I met a fellow who introduced himself as Justice O. Peace. He turned out to really be my great-great-great-great grandfather, Elijah Jones - a man who was killed while serving in the Union Army under Gen. William Tecumseh Sherman. Don't ask me to explain it, because I still can't.\n\nJustice, or rather, Grandpa Elijah, helped me \"bushwhack\" the two cheaters. Over the next year, I filed for divorce after reporting Andrea missing. I won the lottery and quit my job as a field service IT and network technician, then bought a house in the country. That's where I met Danni Williams, the current love of my life.\n\nShe introduced me to Ringo, my horse, and taught me how to take care of him and ride him. We also dated and fell in love. Her parents, Bill and Kathy Williams, took me under their wing and helped me adjust to country life.\n\nWe got to know each other pretty well over the last few months. Her parents traditionally went to church on Sunday mornings, then enjoyed a large family lunch afterward, spending the rest of the day relaxing. I was given an open invitation to join them whenever I wanted, so I did - mostly to be with Danni, but I also enjoyed Bill and Kathy's company as well. Weather permitting, I would ride Ringo to their ranch, which wasn't very far from my house.\n\nToday, though, wasn't going to be just another Sunday afternoon visit. I intended to propose to Danni and I hoped she would accept. Nervous, I looked at myself in the mirror one last time.\n\n\"Are you ready for this, Amos?\" I asked the image looking back at me. That's my name, by the way - Amos Jones. The image didn't respond, but I did. \"Let's git 'er done,\" I mumbled. I grabbed my hat and my jacket, making sure I had the ring in my pocket, then walked out of the house and headed to the corral, where Ringo was waiting for me by the gate. I had already saddled him up for the ride and I think he knew where we were going.\n\nHe bobbed his head as I petted him down. He was such a gentle creature, and it was hard to believe that something so gentle could harness as much power as he did. I climbed into the saddle and settled in. I loved riding him - I felt on top of the world when I sat in that saddle. Nudging him with my boots, we headed out.\n\nI made it to their place in good time and put Ringo in their corral. Walking to the house, I saw Danni waiting for me at the door. She gave me a scorching hot kiss as I took her in my arms.\n\n\"Long time no see, cowboy,\" she said after breaking her kiss.\n\n\"Yeah, been what, 10 hours?\" I asked, smiling. She smiled back and punched me in the arm, playfully.\n\n\"Come on in,\" she said. \"Mom's got everything on the table and I'm starving.\"\n\n\"Well, let's not keep her waiting,\" I said. We walked in the house, holding hands. Her father, a giant of a man, stood up and shook my hand.\n\n\"Yer getting' pretty good with that horse of yours,\" he said, smiling. \"I'll make a cowboy out of you yet.\"\n\n\"I had a good teacher,\" I said, looking at Danni. He laughed and gestured for us to enter the dining room, where a large table was filled with food.\n\n\"This smells mighty good, Kathy,\" I said.\n\n\"Thank you. I hope you like it,\" she said. What was there not to like, I asked myself. Steaks, mashed potatoes, brown gravy, green beans and homemade bread. My mouth was watering.\n\n\"Well, let's all have a seat,\" Bill said.\n\n\"Um, I have a couple things I'd like to get off my chest first if y'all don't mind,\" I said. They looked at me, no doubt wondering what I was going to say.\n\n\"Go ahead, son,\" Bill said.\n\n\"Well, first off, my divorce from Andrea is final,\" I said. \"And I'm ready to start a new chapter in my life,\" I added, looking at Danni. I pulled the small box out of my pocket and dropped to one knee in front of her.\n\n\"These last few months have been wonderful,\" I said. \"And I don't ever want this to end. I'm madly in love with you, Danni, and I'd be honored if you'd marry me and be my wife.\" Danni brought her hands to her mouth as her mother wiped a tear from her eye. Danni wrapped her arms around me and began smothering me with kisses.\n\n\"Yes, Amos,\" she said. \"I'll marry you. I love you so much.\" I opened the box and put the ring on her finger. She smiled as she admired the ring.\n\n\"It's a beautiful ring,\" she said. \"I've never seen anything quite like it.\"\n\n\"It's the ring my great-great-great-great grandfather Elijah gave to his bride a long time ago,\" I said. \"It's a family heirloom.\"\n\n\"It's beautiful,\" Kathy said. \"And in such good shape. Danni, you'd better take good care of that.\"\n\n\"I will, Mom,\" she said. \"It's never coming off my hand.\" Bill looked somewhat emotional as he stretched out his hand.\n\n\"Welcome to the family, son,\" he said.\n\n\"Thanks... Dad,\" I said. That brought a smile to his face.\n\n\"Well, looks like we have something to celebrate today,\" he added, sitting down. After the main meal, Kathy brought out a homemade apple pie and dished us each a large slice. Afterward, Danni and I went out for a ride and ended up at a large pond on the back side of the property.\n\nAfter securing our horses, Danni and I celebrated our love under the sky. We laid there, naked, on a blanket and looked up at the sky after a couple hours of mad, passionate love. Danni brought up her hand and admired her ring.\n\n\"This really is a gorgeous ring,\" she said. \"Is this the ring you gave Andrea?\"\n\n\"Yes, it is,\" I said. \"If you like, I can get you another one.\"\n\n\"Don't you dare,\" she said. \"I love this ring. Do you think your grandmother Elizabeth would approve of me having it?\"\n\n\"I'm certain of it,\" I said. \"One of these days, I'll show you her journals. She wrote about her husband a lot. She really admired him and wanted to make sure the family never forgot him.\" She rolled on top of me and planted a soft kiss on my lips.\n\n\"Thank you,\" she said quietly.\n\n\"For what?\" I asked.\n\n\"For making this day so special for me,\" she said. \"And for proposing in front of my parents. It meant a lot to them.\"\n\n\"Well, you mean everything to me,\" I said.\n\n\"And you mean everything to me, my husband-to-be,\" she said in response. We laid there on the blanket, kissing and cuddling together naked for another hour before we decided it was time to get dressed and get back to the house.\n\n\"You two enjoyed the view at the pond?\" Bill asked when we returned.\n\n\"We did, Daddy,\" Danni said, giving her father a kiss on the cheek. He smiled as he looked at her.\n\n\"I'm glad,\" he said. \"You know, your mom and I used to go there a lot when we first got married,\" he added with a knowing smile. \"Still do, from time to time, if you know what I mean.\"\n\n\"TMI, Dad,\" Danni said. \"That's just a bit too much information,\" she added with a smile. Bill laughed at that. He turned to me after Danni joined her mother in the kitchen.\n\n\"You done good, son,\" he said. \"Kathy and I are proud to have you in our family.\"\n\n\"Thanks... Dad,\" I said. \"You don't mind if I call you 'Dad,' do you?\"\n\n\"You'd better,\" he said with a big grin. \"And it would mean a lot if you called Kathy 'Mom,'\" he added.\n\n\"I will,\" I said. \"It's getting late and I need to get Ringo bedded down for the night, so if you don't mind, I'm going to head on out.\" Bill nodded his head in understanding.\n\n\"Sounds good, son,\" he said. \"We'll see you soon, I'm sure.\" We shook hands and I went into the kitchen to say my goodbyes. Kathy gave me a big hug. I hugged her back.\n\n\"Thanks for lunch, Mom,\" I said. \"It was delicious.\" She hugged me again, a tear forming in her eye.\n\n\"Thank you for everything, Amos,\" she said. I turned to Danni.\n\n\"Listen, I need to run some errands in town tomorrow afternoon,\" I said. \"Would you like to go out for dinner and a beer tomorrow evening, say about 6:00?\" Danni worked as an attorney and spent the week at her condo in town, since it was closer to her job.\n\n\"Sure,\" she said. \"Just text me the details and I'll meet you there.\"\n\n\"Will do,\" I said. \"Love you,\" I added, giving her a kiss. She returned the kiss.\n\n\"I love you more,\" she said.\n\n\"Okay you two,\" Kathy said, slapping Danni's arm with a kitchen towel. \"I have work to do, so skedaddle.\" We all said our goodbyes and I headed out to take Ringo home. At that moment, I felt on top of the whole world. I had a good horse, and a good woman - life doesn't get any better than this, I thought to myself.\n\nThe next day, I got up early, took care of Ringo and headed into town. I had several things I wanted to get done, and I also wanted to stop by the old house Andrea and I once shared. It was still in my name and I had rented it out to George and Linda Simmons, a young couple looking to start a family. \n\nThey were nice people, took good care of the place and always paid their rent on time. George had even expressed an interest in buying the place and I really wanted to help them out. I considered paying the mortgage off and deeding the place to them, but I wasn't sure what the ramifications of that would be. Would I take a hit on my taxes? Would it affect the property's value? I simply didn't know. I made a mental note to consult with my financial planner to see what the best plan would be.\n\nWhen I finished my visit, I looked at my watch and noticed it was already 4:30 pm, so I sent Danni a text, telling her I would meet her at the Hitching Post. It was the same bar and grill where I had met Justice a little more than a year ago. She texted me back: \"C U there. Luv U.\"\n\n\"Luv U more,\" I said in response. A few seconds later, I saw a text from her full of hearts and kisses. God, I love that woman, I thought to myself.\n\n\"Hey, cowboy,\" she said when she walked up to my table. I got up, kissed her, then pulled out a chair. We each ordered a burger and a beer and discussed the day's events. Danni had just wrapped up a big case she had been working on for months and reveled in the idea of finally having a clean slate for a day or so.\n\nOur plates had just been cleared when I saw him - Justice. Or to be more precise, my grandfather Elijah. He saw me and headed to our table. I stood as he came up and shook his hand. I almost called him \"Grandpa,\" but caught myself just in time.\n\n\"Danni,\" I said. \"This is my good friend, Justice O. Peace. He helped me get through my issues with Andrea. Justice, this is my fiance, Danni Williams.\"\n\n\"Pleasure to meet you, Mr. Peace,\" she said with a smile.\n\n\"Please call me Justice,\" he said. \"Mr. Peace was my pa.\" He looked at her ring. \"That's a mighty nice ring you have there, young lady.\"\n\n\"Thanks,\" she said. \"Amos said it belonged to his great-great-great-great grandmother Elizabeth.\" For a moment, I thought I saw a tear in his eye. He wiped his eyes and smiled.\n\n\"Care for a beer?\" I asked him. \"After all, I owe you one.\"\n\n\"Yes, you do,\" he said. \"And I'd love a beer.\" After the waitress brought our beers, I offered him and Danni a cigarette. They both accepted one graciously. Pulling one out for myself, I struck a match and lit their cigarettes before I lit mine.\n\n\"I'm glad to see you finally got some respectable clothes,\" he said with a smile. \"Nice hat, too. I remember when this old thing looked that good.\" We exchanged small talk for a while but I was curious to know what brought him back.\n\n\"So, what brings you back to these parts?\" I asked.\n\n\"Well,\" he began. \"I got a situation and I could use your help. In fact, I'd be mighty obliged if both of you could help.\"\n\n\"Oh?\" Danni asked. \"What's going on?\"\n\n\"A fella got himself into a situation kinda like what Amos got into with his first wife,\" he said. \"Only this fella's situation is a lot worse. He tried to deal with it himself but he ended up biting off more than he could chew.\"\n\n\"Oh?\" I asked.\n\n\"Yeah,\" he said. \"He went to some camp up in Idaho for three months to get himself fixed up. Came back and it all went to hell - 'scuse my language - on him.\"\n\n\"Where is he now?\" Danni asked.\n\n\"He's being held against his will in a secret underground jail of some kind over at the Acme building by the river,\" he said. Danni and I looked at him in shock.\n\n\"Held against his will?\" Danni asked. \"That's illegal.\"\n\n\"Yes, ma'am, it is,\" he said. \"And he's not doing too good. They've got him on bread and water and they're really messing him up bad.\"\n\n\"How do you know all this?\" Danni asked.\n\n\"I visited with him just a bit ago,\" he said.\n\n\"How did you manage that?\" she asked.\n\n\"I had to trick the guards,\" he said. \"Used my old Ranger badge.\"\n\n\"You were in the Texas Rangers?\" Danni asked. Justice nodded his head.\n\n\"Yes, ma'am,\" he said. \"A long time ago. Served under a different name, though.\"\n\n\"Who was your captain?\" she asked. I realized she was trying to reconcile his story so I didn't say anything.\n\n\"Bill McDonald,\" he said. \"He's long since retired.\"\n\n\"I see,\" Danni said. \"So you were in Company A?\"\n\n\"No, ma'am,\" he said. \"Company B, Frontier Battalion.\" Danni nodded her head slightly.\n\n\"And how did you learn about this man?\" she asked.\n\n\"He asked for help,\" Justice said. \"I was assigned the job.\"\n\n\"And who do you work for now?\" she asked. \"The feds? FBI?\"\n\n\"The highest authority, ma'am,\" he said.\n\n\"You said he was at a camp in north Idaho,\" Danni continued. \"What camp was that?\"\n\n\"Camp Rollins, ma'am,\" he said. \"His name is Mike Bradley.\"\n\n\"Bradley,\" she repeated. \"I know that name. I got something from Camp Rollins a couple months or so about him. Very unusual allegations. I tried contacting him, but I was never able to. I even called my contact at the camp to verify my contact information. Strange thing is, no one ever reported him missing.\"\n\n\"I'm not surprised,\" he told her.\n\n\"What about his wife?\" she asked.\n\n\"They told him his wife was dead, killed in some kind of airplane crash,\" Justice said.\n\n\"You don't believe that, though, do you?\" she asked.\n\n\"Not for a minute, ma'am,\" he said.\n\n\"Where do you think she is?\" Danni asked.\n\n\"Somewhere in Albania,\" he told her. \"She's being sold into slavery and was given a deadly mix of contaminated drugs. She's on borrowed time as it is and there's nothing anyone on earth can do to help her. Right now, she's making her peace with God and hoping she can see her husband before she goes.\"\n\n\"And who's selling her?\" Danni pressed.\n\n\"A lying, sniveling piece of dog crap - 'scuse me - named Doug Carson,\" he said. \"The same one who drugged and imprisoned Mike.\"\n\n\"Doug Carson? You mean, the CEO of Acme Enterprises? One of the richest and most powerful men on the planet?\" Danni asked, shocked.\n\n\"One and the same,\" Justice said.\n\n\"And you know all this, how, exactly?\" she asked.\n\n\"I told ya, I work for the highest authority,\" he said. \"I just know. Don't ask me how. Look, ma'am, I understand you want all your t's crossed, but I have two people who won't last much longer unless something is done. And even after I get Mike out of there, Carson will just find himself another target. I can get Mike out one way or another. I'd rather do it legal-like and I'd like to see Acme torn down. By the book.\"\n\nDanni looked at Justice and I could see the wheels in her head turning.\n\n\"Okay,\" she said. \"Let me go back and do some preliminary work. We can meet here same time tomorrow, if that will work for you.\" Justice nodded his head.\n\n\"I think they'll be okay until then,\" he said. \"But they're running out of time.\"\n\n\"Alright, Justice,\" she said. \"I'll get right on it, I promise. I'll have some answers when we meet tomorrow.\"\n\n\"I appreciate that, ma'am,\" he said. She looked at us, then stood.\n\n\"I'll call you tomorrow, okay, dear?\" she said, looking at me.\n\n\"Sounds good, babe,\" I said. \"Love you.\"\n\n\"Love you more,\" she said, giving me a soft kiss on the lips. She extended her hand to Justice. \"We will talk tomorrow, I promise.\"\n\n\"Thank you,\" he said, taking her hand. \"I'm sorry if I seem short. I know you're a damn good attorney and you're just doing your job. It's just that there's two souls in the balance and not a lot of time.\"\n\n\"I understand,\" she said before leaving. We watched her walk out of the bar.\n\n\"That's a mighty fine woman you have there, son,\" he said, looking at me. \"Reminds me of your Grandma Lizzy at that age.\" I smiled.\n\n\"I consider that high praise, Grandpa,\" I said.\n\n\"I take it, then, that she doesn't know the whole story,\" he said. I shook my head.\n\n\"No,\" I said.\n\n\"You're gonna have to tell her at some point, you know,\" he said. I nodded my head.\n\n\"I know,\" I said. \"I just don't know how I can do that without coming across as completely crazy.\" He laughed.\n\n\"You'll figure out a way,\" he said. \"By the way, speaking of your Grandma Elizabeth, she says Danni's a keeper and you'd better treat her right. Trust me, boy, she's not above giving you a spankin' on your rear end.\"\n\n\"You sound like you'd enjoy that,\" I said. He laughed, then took a sip of his beer.\n\n\"I might,\" he said. \"Been a while since your grandma gave a grown man a spankin'.\" He pulled out a large watch, flipped it open, then shut. He looked at me before speaking. \"I need to get goin', son,\" he said. \"I'll be here tomorrow, same time. Thanks for the beer.\"\n\n\"My pleasure, grandpa,\" I said, extending a hand. He took it in his and wrapped his other arm around me. \n\n\"Good to see ya again, son,\" he said. \"I just wish it were under better circumstances.\"\n\n\"Me too,\" I said. \"See ya tomorrow.\" He touched the brim of his hat.\n\n\"See ya,\" he said, walking away. I paid my tab, then jumped in my truck and headed home, thinking about what Elijah had told me. He was right, I was going to have to level with Danni at some point. But how?\n\nThe next day, I got up early as I usually did, grabbed a cup of coffee, then headed out to tend to Ringo. I could tell he was a bit antsy, so I saddled him up and took him for a short ride. I had the feeling he wanted to run, but I was concerned he might accidentally step in a hole and go down. I went back to the dirt road, and let him loose. Talk about an \"E-ticket\" ride! He ran at a full gallop for quite a while, with me hanging on for dear life.\n\nI got Ringo back, saw to his needs and headed into the house to take a shower. After I got cleaned up, I went downstairs and grabbed a sandwich. Then my phone rang. I saw it was Danni's number, so I answered.\n\n\"Hey, sweet thing,\" I said. \"How's it going?\"\n\n\"Good,\" she said. \"I'm a bit tired, but I'm okay. Listen, do you think you can swing by the condo about 3:00? I need to talk with you before we meet Justice tonight.\"\n\n\"Sure,\" I said. \"Everything okay?\"\n\n\"Yeah,\" she said. \"I just need to get some things straight in my own mind, that's all.\"\n\n\"Okay,\" I said. \"I'll see you at 3:00.\"\n\nI knocked on her door right at 3:00 and she let me in with a kiss. I could tell she had just taken a shower as her hair was still a bit damp.\n\n\"Come on in,\" she said. \"I just got out of the shower. Please, have a seat and I'll get us some coffee.\" I sat down as she went into the kitchen. Her laptop was open on the table and there were a number of papers scattered about. She came back in with two cups and sat them down on the table before taking a seat.",
        "\"Are you alright?\" I asked. I was concerned because she looked tired.\n\n\"Just tired,\" she said. \"I've gotten maybe three hours of sleep since I saw you last night. I started doing some preliminary research last night. As you know, I like to know something about the people I work with. I did a Lexus-Nexis search on your friend, but I couldn't find anything. No birth certificate, Social Security number, tax records, nothing. Not even a drivers license.\" She took a sip of her coffee and looked at me. \n\n\"He also said he served in the Texas Rangers under Bill McDonald,\" she said. \"He got the company and the battalion right, but there's no way he could have served under McDonald.\" She turned her laptop to face me and brought up a browser screen. It was a page about William Jesse \"Bill\" McDonald.\n\n\"Bill McDonald died in 1918 of pneumonia,\" she said. \"That's over 100 years ago. There's no way Justice could have served under him. Not unless he's well over 100 years old.\" She looked at me before continuing.\n\n\"There's one other thing,\" she said. \"I had a lunch meeting with Judge Stone today.\"\n\n\"The 'hanging judge'? Hasn't he been on the bench like, forever?\" I asked.\n\n\"Yes,\" Danni said. \"He and my dad go way back. He's the one who inspired me to go to law school, in fact. I told him a bit of what was going on. When I mentioned Justice, his face went white. I thought he was going to have a stroke.\"\n\n\"Really?\" I asked. \"You mentioned Justice by name?\"\n\n\"Yes,\" Danni said. \"So tell me. Who is he? Really?\"\n\nI took a sip of coffee and weighed my options. I knew I would eventually have to come clean, but I wasn't quite sure how. Danni helped me figure it out.\n\n\"Look, Amos,\" she said. \"I love you with all my heart and I plan to spend the rest of my life with you. But we can't have any secrets between us. I need you to be honest with me. I need to know the truth. All of it.\" I looked at her for a few moments before responding. What was that saying? \"The truth shall set you free.\" This was do or die time. The next few minutes could end my relationship with Danni, and I knew it.\n\n\"The truth is stranger than you can believe,\" I said.\n\n\"I can handle it,\" she said. \"Good, bad, ugly, strange, whatever. I've heard it all before.\"\n\n\"You haven't heard this,\" I said. \n\n\"Well, try me,\" she answered. I nodded my head.\n\n\"Promise you won't put me in a loony bin?\" I asked. She smiled.\n\n\"It can't really be all that strange, can it?\" she asked.\n\n\"You have no idea,\" I said.\n\n\"Well, just tell me and let me be the judge,\" she said.\n\n\"All right,\" I said. \"Here goes. But remember, I warned you.\" I took another sip of coffee and began. \"The day I learned about Andrea cheating on me, I went to the Hitching Post to drown myself in a beer. That's when I first met him - Justice. He came up to me and started talking. He knew everything about me and knew of my problem with Andrea. At first I thought he was a private investigator. Then he suggested we 'bushwhack' the cheaters. The next night, when Andrea brought her lover into the bedroom to cuckold me, he showed up. He didn't even look human, Danni, and his eyes looked like fire.\n\n\"The next thing I know, we're standing in the middle of a dusty street in what looked like an old western town. I went into the saloon and saw them - Andrea, her lover and his three goons. The goons came after me, so I pulled my pistol and shot them,\" I said.\n\n\"You shot them?\" Danni asked, shocked. \"Dead?\" I nodded my head.\n\n\"Yes,\" I said. \"I'm not proud of it, but they were pulling their guns and would have shot me dead if I hadn't. Then, when Roscoe - Andrea's lover - pointed a gun at me, I shot him dead as well. When he fell, their table overturned and the lamp set her dress on fire. I couldn't do anything to put it out. The next thing I know, they're all gone.\"\n\n\"Oh my God,\" Danni said.\n\n\"I asked Justice if they were all dead and he said yes,\" I said. \"He told me they were in a very warm place. We went back outside and he gave me this,\" I added, pulling out my cigarette case. \"It was like a light bulb turned on in my head. I knew who he really was.\"\n\n\"Who is he?\" Danni asked. \"Tell me!\" I opened the cigarette case, pulled out the picture and handed it to her.\n\n\"Look closely at the man in that photo,\" I said. Her eyes widened as she studied the photo. She looked back up me, shocked.\n\n\"Are you saying Justice is really your great-great-great-great grandfather Elijah?\" she asked.\n\n\"You saw him up close,\" I said. \"You talked to him. You have his photo right there in your hand.\"\n\n\"Oh my God,\" Danni said as the realization hit her. \"How is this even possible?\" I shook my head.\n\n\"I don't know,\" I said. \"He promised he would tell me someday. I know my Grandmother Elizabeth wrote about him a lot. Said his sense of justice and right and wrong is part of what attracted her to him. Even after he was shot in the war, she said it was as though he was still there. That's why she never remarried. One entry said she found a lit cigarette in his favorite ashtray one day. No one else was in the house.\" Danni's eyes were wide as I relayed that to her.\n\n\"She handed her engagement ring down, saying she always hoped the woman who wore it would marry a man with the same sense of justice he had, the same desire to stand up for the downtrodden,\" I said. Danni looked at her ring and her eyes watered.\n\n\"You really feel a connection to him, don't you?\" she asked, looking back up at me. I nodded my head.\n\n\"I do,\" I said. \"I can't explain it, but I feel as though I want to follow in his footsteps sometimes.\" She smiled and stroked my cheek.\n\n\"I can sense that,\" she said.\n\n\"So, do you believe me? Are we still a couple?\" I asked nervously. She kissed me softly before answering.\n\n\"I believe you,\" she said. \"And of course we're still a couple. I am going to marry you, Amos Jones, and I plan to give you a house full of kids. And I plan to grow old with you. I love you with all my heart, Amos. Never forget that.\" She wrapped her arms around me and we kissed, our tears mingling together.\n\n\"So, what did Judge Stone say when you told him what was going on?\" I asked after we broke our embrace and collected ourselves.\n\n\"He said if Justice is involved, it has to be something important,\" she said. \"He signed a court order to release Mike into his custody. The order doesn't mention Justice by name, but it says Mike is to be released to whatever authority presents the order. Judge Stone worded it very carefully. He also said he would do whatever he could to help.\"\n\n\"Well that's good,\" I said. \"What else did you learn?\"\n\n\"It seems that several federal agencies are interested in the activities of Acme Enterprises,\" she said. \"I spoke to a good friend over at the DOJ and learned they're ramping up a full-blown investigation. We're talking human trafficking, drugs, illegal arms sales, ties to terrorists, you name it. They need evidence which apparently exists only in the cloud. Problem is, they haven't been able to gain access to anything they can use in court. Apparently, it's buried so deep no one can get to it. They believe there's a computer somewhere in Albania that can unlock that evidence.\"\n\n\"Albania?\" I asked. \"Isn't that where Elijah said Mike's wife is being held?\"\n\n\"You caught that, too,\" she said. \"You think they would be in the same place?\"\n\n\"Who knows,\" I said. \"Can't they get the CIA to track that down?\" She shook her head.\n\n\"Things in Washington are in such turmoil these days I don't think any of them can even use the toilet without risking an investigation,\" she said. \"They're all too busy trying to cover their asses.\"\n\n\"It sounds like your friend took quite a risk telling you all this,\" I said.\n\n\"Yes,\" Danni said. \"There's a lot of frustrated people and they're grasping at anything right now.\"\n\n\"What did you learn about Mike?\" I asked.\n\n\"I pulled up the report I got from Rollins,\" she said. \"And I went over the employment contract he gave them. According to the report, Mike was given an offer of employment with a letter stating he had something of interest for them. The problem is that what they wanted was his wife. She basically became a corporate prostitute and was used and abused in ways you can't even begin to imagine.\"\n\n\"So they plotted this all along,\" I said.\n\n\"Yeah,\" she said. \"His employment contract was for life, and he was promised the same compensation regardless of what he does. But there's a lot of problems with the contract that render it null and void. Putting it all in a nutshell, he was hired and contracted under false pretenses to cover up the company's illegal activity. Add to that the fact that he was illegally imprisoned, tortured, assaulted and his life and marriage destroyed. There's much more, but that's essentially it. It would take me years to draft up all the potential tort cases, and that's not even considering the criminal cases associated with all this. It could be decades before this is all worked out in court, assuming it even gets there.\"\n\n\"I take it you have a plan?\" I asked.\n\n\"I do,\" she said. \"I've already drafted something up, but I want to talk about it with you and Elijah first.\"\n\n\"Okay,\" I said, looking at my watch. I didn't realize how long we had been talking, but saw that we had just about enough time for Danni to get dressed before we had to leave. \"You need to get dressed, dear, it's about time we headed out.\" She kissed me one more time and went to her bedroom to get dressed.\n\nWe got to the Hitching Post about 10 minutes before Elijah was due to show up, and were escorted to a table in a quiet corner of the bar. We just got settled in when he came in. We stood as he was ushered to the table and ordered a round of beer.\n\n\"Good to see you again, Grandpa Elijah,\" Danni said as he shook her hand. He looked at me confused for a moment before speaking.\n\n\"I take it you told her?\" he asked me.\n\n\"I did,\" I said.\n\n\"Well, let that be a lesson to ya, son,\" he said. \"Never try to put one over on yer wife, 'specially if she's an attorney.\"\n\n\"You don't mind if I call you Grandpa Elijah, do you?\" she asked him. He smiled broadly before speaking.\n\n\"I'd be insulted if you didn't, young lady,\" he said as we sat down. \"By the way,\" he said, looking at Danni. \"You once wondered if Lizzy would approve of you wearing her ring. She not only approves, she said to tell ya she can't think of anyone more worthy of it. And I gotta admit, it looks just as pretty on you as it did on her.\"\n\n\"Thank you, Grandpa,\" she said, wrapping her arms around him, her eyes watering. \"I wish I could have met your wife. From what Amos said, she was quite a woman.\"\n\n\"She's the best,\" he said, hugging her back. \"And who knows, maybe one day soon you will meet her,\" he added with a wink. After the waitress brought our beer, we turned to business. Danni pulled out the court order signed by Judge Stone and handed it to Elijah.\n\n\"Here's a court order signed by Judge Stone,\" she said.\n\n\"Would that be Judge Alfred Stone?\" he asked. Danni nodded her head in the affirmative. \"Met him once, a long time ago. Good man.\"\n\nDanni rehashed everything we had discussed earlier in the day, then laid out her plan. Elijah and I listened in silence and his face broke out into a grin when she finished.\n\n\"I like the way you think, little lady,\" he said. \"You better stay on this woman's good side, son,\" he added, looking at me. We all had a good laugh over that. I had to admit, her idea sounded just about crazy enough to work. We talked a bit more about what Danni's friend had told her.\n\n\"So, you think this computer thing is in Albania, huh?\" he asked.\n\n\"Yes, that's what my friend thinks,\" she said. Elijah looked at me.\n\n\"I reckon that means you'll be comin' with us,\" he said.\n\n\"Us?\" I asked.\n\n\"Yeah,\" he said. \"I'm rounding up a posse. They're all good with a gun, but they don't know anything about computers. That's your line of work, remember?\"\n\n\"So, we're going to Albania?\" I asked. \n\n\"That's right,\" he said. \"Carson left for Albania early this morning in a company plane. I've already scouted the place out and I have a plan of attack.\"\n\n\"We'll need to line up tickets, get passports. This could take some time,\" I said. Elijah laughed and shook his head.\n\n\"No need, son,\" he said. \"I've got that covered.\"\n\n\"So, when do we leave?\" I asked.\n\n\"Tomorrow morning,\" he said. \"I'll meet you two at your place at sunrise,\" he added, looking at me.\n\n\"Okay,\" I said. \"Let's do it.\" We all agreed on the plan and stood to leave. Elijah turned to Danni.\n\n\"So, when are you two gonna get hitched?\" he asked.\n\n\"I don't know,\" she said. \"We just got engaged on Sunday and we haven't had a chance to discuss it yet.\"\n\n\"That's right,\" he said. \"That was just before you two went down to the pond.\"\n\n\"You saw that?\" she asked, shocked.\n\n\"Not personally, but I heard about it,\" he said, smiling. \"Don't worry, I was a young buck m'self once. I just hope you don't wait too long to get married, if ya know what I mean,\" he added, glancing at Danni's stomach. Her eyes grew wide.\n\n\"You mean,\" she began. He smiled and nodded his head.\n\n\"Yup,\" he said.\n\n\"How do you know?\" she asked.\n\n\"I can tell a lot by looking at a person,\" he said. \"Best be getting back,\" he added. \"Tomorrow's gonna be a helluva day.\" We said our goodbyes and headed out. Danni decided to ride home with me. \n\n\"Did you hear what Elijah said?\" she asked as I drove.\n\n\"What, that you're pregnant?\" I asked. \"I heard.\"\n\n\"Yeah,\" she said. \"How do you feel about that?\"\n\n\"Happy and excited,\" I told her. \"I'm gonna be a dad. Wow. I guess we'll need to get married pretty quick.\"\n\n\"Do you still want to?\" she asked.\n\n\"Hell, yeah,\" I told her. \"I love you and I can't stand to be away from you,\" I added, kissing her hand. \"When this is over, what do you say we get married?\"\n\n\"I'd love that,\" she said, snuggling up to me.\n\n\"Then I guess I'll have to turn one of the spare bedrooms into a nursery,\" I said. We talked about children the rest of the way home. When we got there, we slipped upstairs and made love before falling asleep in each others' arms.\n\nWe were both up by 4:00 am and took a shower together before getting dressed. We grabbed a quick cup of coffee before Elijah knocked on the door.\n\n\"You ready?\" he asked me. I nodded my head. \"Good. I reckon I oughta deputize ya first.\"\n\n\"Okay,\" I said. He nodded his head.\n\n\"Uh, go ahead and raise yer right hand,\" he said. I did as he said. \"You promise and swear and all that stuff?\" he asked.\n\n\"Yeah, I do,\" I said. He pinned a badge on my shirt.\n\n\"Congratulations, yer a deputy now, with all the protection and authority that goes with it,\" he said. \"And may God have mercy on yer soul.\"\n\n\"Thanks,\" I said.\n\n\"Don't thank me yet, son,\" he said. \"We're just getting' started.\" He turned to Danni. \"You got that court order?\"\n\n\"Here it is,\" she said, handing it to him. He nodded his head.\n\n\"Good,\" he said. \"This probably won't take too long, so I need ya to saddle up Ringo and meet us at the edge of the clearing overlooking Jacobs Ravine.\"\n\n\"Okay,\" she said. \"I'll see you there.\" We all walked outside and Elijah went to his horse. He came back with a rope in one hand and a rifle in the other. I could tell it was a Winchester Model 1892 44-40 with a modified lever. He handed me the rifle.\n\n\"This is for you, son,\" he said. \"It's been modified jes' a bit for ya.\" He pointed to a small pin on the underside of the lever. \"Push that up till it locks and all you have to do is cycle the lever to fire. You don't even have to pull the trigger. Go ahead and give it a shot.\" He pointed to a tree stump in the middle of the back yard. \"Put about five good shots in that stump,\" he said. \"Jes' keep yer eye on the stump and point the gun in the same direction.\"\n\nI pushed the pin until it locked and put the gun in my shoulder the way my dad taught me a long time ago.\n\n\"No, no, son,\" Elijah said. \"From the hip. Shoot from the hip.\" I put the butt of the rifle against my upper leg for support and pointed it the way he said. \"That's it,\" Elijah said. I cycled the lever quickly, five times. I was amazed at how easily the lever cycled. Each time, the rifle fired and I could see all five shots hit the center of the stump. When I finished, I pushed the pin and it disengaged and cycled the action to eject the last shell.\n\n\"WHOOOAH,\" Danni exclaimed. Elijah smiled and slapped me on the back. I was pretty pleased with myself.\n\n\"I'll make a lawman outta you yet, son,\" Elijah said. Danni turned to me, smiling, her eyes gleaming.\n\n\"My husband, the Rifleman,\" she proudly proclaimed. \"Dad's gonna flip when he sees this.\"\n\n\"That was kinda cool, wasn't it?\" I asked her.\n\n\"It was way cool,\" she said. \"Those bad guys don't stand a chance now.\" I laughed.\n\n\"Well, if you two are done playing, we gotta get going,\" Elijah said.\n\n\"Wanna take my truck?\" I asked. Elijah shook his head.\n\n\"No need,\" he said. \"Jes' stand right there.\" As I watched, he twirled his rope over our heads and let the loop of the lariat fall over us. The next thing I knew, we were in an empty corridor. \"Follow my lead,\" he said. \"I'll do the talkin'. You jes' keep an eye on the guards.\"\n\n\"Got it,\" I said. Elijah opened a door and stepped inside. I followed closely behind him. Three guards stood up as we walked in.\n\n\"What can we do for you?\" one of them asked. Elijah pulled the court order from his pocket and handed it to the guard.\n\n\"We're here for Michael Bradley,\" he said. The guard looked the order over and saw the official signature and seal. He turned to another guard.\n\n\"Go get Bradley,\" he said before turning back to us. I kept an eye on both guards, but it seemed they were also keeping an eye on me - or to be more precise, the modified rifle in my right hand. A minute later, the guard returned with Mike, who was still in shackles.\n\n\"Take the irons off,\" Elijah ordered. They complied and pushed Mike in our direction. Elijah positioned Mike behind him and backed up out of the office. I waited until he was nearly out the door, my rifle at the ready, before I backed out.\n\nOnce in the hallway, Elijah produced his lariat and before we knew it, we were on the clearing by Jacobs Ravine. I looked down the hill and could see my house. Danni emerged from the tree line with Ringo's reins in her hands. She kissed me on the lips and handed me the reins before turning to Mike.\n\n\"You must be Michael Bradley,\" she said. He nodded his head.\n\n\"Yes, ma'am, that's me,\" he said.\n\n\"I'm Danni Williams,\" she said. \"I tried to contact you but I couldn't reach you.\"\n\n\"That's alright,\" he said, still shaken from his experience. \"It wasn't your fault.\"\n\nI put the rifle in the scabbard Danni had put on Ringo and turned to see Elijah riding up on his giant horse. With him were seven other riders. I tried to make them out, but their faces were somewhat blurred.\n\n\"Who are these guys?\" I asked. \n\n\"That fella over there's Pat Garrett,\" Elijah said. \"Next to him is Bat Masterson, Wyatt Earp, Doc Holliday, Bill Tilghman, Wild Bill Hickok, and of course, my old boss, Bill McDonald.\" They each nodded their head once and touched the brim of their hat as Elijah introduced them. \"I figured since we're going after the worst, we need the best.\"\n\n\"Pleasure to meet y'all,\" I said. One of them spoke out.\n\n\"You sure you wanna take this tenderfoot with us, Elijah?\" the man said. \"Hell, he ain't hardly outta diapers yet.\" It looked like the comment came from Doc Holliday, but I wasn't certain. \"You ever shoot a six-gun, boy?\" the man asked.\n\n\"Yes, sir, I have,\" I said.\n\n\"I meant, at a man?\" he added.\n\n\"I have,\" I said. \"And I'll do it again if I have to.\"\n\n\"I don't know about this, Elijah,\" he said. \"We're already dead, so they can't kill us again. I ain't got time to nursemaid a mortal young 'un.\"",
        "\"You know anything 'bout computers?\" Elijah asked.\n\n\"What the hell is a computer?\" the man asked. The others laughed.\n\n\"My point exactly,\" Elijah said. \"He's my grandson. He's also my deputy. He's going and that's that. He's protected and he can handle himself.\"\n\n\"Alright, Elijah,\" the man said. \"It's your posse, you're the boss.\"\n\n\"That's right,\" Elijah said. He turned to Mike. \"You ever ride a horse, boy?\" Mike shook his head.\n\n\"No, sir,\" he said. Elijah extended his hand.\n\n\"Alright, come on up,\" Elijah said. \"Jes' hang on tight, cause this'll get a bit rough.\" He turned back to me. \"Kiss yer woman and lets ride, son.\"\n\n\"Yes, sir,\" I said. I hugged Danni close and our tongues wrestled as we kissed.\n\n\"Don't worry, little lady,\" one of the men said. \"We'll have 'im home in time for supper.\" The others chuckled. Breaking the kiss, I got up on Ringo.\n\n\"I love you, Danni,\" I said.\n\n\"I love you, too,\" she said. She turned to Elijah as I sidled up to him and Mike.\n\n\"Elijah Jones, you'd best bring my man back to me in one piece if you know what's good for ya,\" she said loudly. \"You hear me?\" He looked at me, his brows raised as she spoke to him.\n\n\"You sure she ain't related to yer Grandma Lizzy?\" he asked. \"They sure do sound an awful lot alike.\" We all chucked at that. He turned back to her and smiled.\n\n\"Don't worry, Danni,\" he said. \"Yer son ain't gonna grow up without his pa. I promise you that.\" I turned to her.\n\n\"Watch for my text,\" I said. \"And get everything ready for later. I'll be alright.\"\n\n\"I'll be watching,\" she said. \"I love you.\"\n\n\"I love you more,\" I said as I turned back to the front. Elijah looked at all of us before he gave the command.\n\n\"HIYAH!\" he yelled as he spurred his horse forward. We all joined him and I held on tight as Ringo ran as hard as the other horses. I saw we were headed for the cliffs that marked the ravine and wondered if we were going to go over the edge. Suddenly, a large dark hole seemed to open just above the ground and just when I thought we would go over the cliff, we went through the hole and found ourselves someplace else.\n\nI didn't know exactly where we were, but I assumed we were in Albania. It was still dark here and the moon shone bright overhead. We came to the top of a hill and stopped. Looking down, I saw a fenced-in compound with a large building placed near one corner. A large iron gate appeared to be the only way in. \n\n\"What the hell is that?\" Wild Bill asked, pointing at the opposite end of the compound. I looked and saw a fairly new Learjet.\n\n\"That's a Learjet,\" I said. \"An airplane.\" I realized these men probably had no idea what I was talking about. \"It flies, kinda like a bird.\"\n\n\"You gotta be shittin' me,\" he said.\n\n\"I seen something kinda like that back before the Great War,\" Bill McDonald said, referring to World War 1. \"'Cept what I saw was a lot smaller and had two wings.\"\n\n\"We've come a long way since then,\" I said.\n\n\"Reckon so,\" he said in response.\n\n\"That means Carson is here,\" Elijah said. \"And he probably brought reinforcements.\"\n\n\"Ain't that the honcho of this outfit?\" Doc Holliday asked.\n\n\"Yep,\" Elijah said.\n\n\"And I'm sure they all have automatic weapons,\" I said.\n\n\"What's an automatic weapon?\" Wild Bill asked.\n\n\"Keeps firing as long as you hold the trigger down,\" I said. \"A modern version of the old Gatling gun.\"\n\n\"I'm not sure I care too much for this century of yours, tenderfoot,\" Wild Bill said. \"Flying machines, automatic weapons. Shit.\"\n\n\"At least we have electricity, hot and cold running water and indoor toilets,\" I said. The others laughed.\n\n\"How're we all gonna get through that gate?\" Wyatt Earp asked. He had a point. Elijah and the others could probably go right through it as though it wasn't even there. Mike, Ringo and I, however, couldn't, and I didn't think Elijah's lasso was big enough to cover all of with our horses and equipment. Elijah pulled out a long Civil War-era rifle with a scope that ran the length of the barrel. Where he kept it hidden was beyond me.\n\n\"I'll take care of that,\" he said. \"Once that gate opens, you boys go in there and draw 'em out. Raise as much hell as you want. Shoot to kill. Amos, Mike and I will go in the building as do what we need to do. Mike will take care of Carson and his ex while Amos gets the evidence we need against Acme. I'll come back out and help y'all finish the job. Any questions?\"\n\n\"No prisoners?\" Pat Garrett asked. Elijah shook his head.\n\n\"Nope,\" he said. \"No prisoners.\" Everyone nodded their head in understanding. \"All right,\" Elijah said. \"Let's do it.\"\n\nHe lifted the rifle to his shoulder and took careful aim. When he fired, I could see sparks fly at the junction between the gate and the fence. As the gate slid open, the other men raced toward it, their guns blazing. Alarms sounded and bright light flooded the compound as men armed with AK-style weapons ran out to meet the threat. \n\nElijah and I hung back until we were fairly certain everyone was out of the building. We moved forward and entered the building through the large double door the men inside opened as they came outside.\n\nLooking to my left, I saw what looked like an office and headed in that direction as Elijah and Mike went to the center of the building, where a woman was laying on a bed, hooked up to wires and tubes.\n\nI tied Ringo to a post in the floor, grabbed my rifle and my saddlebags and headed inside. There was a laptop sitting on a desk next to a filing cabinet, so I set my rifle and saddlebags down and brought up the screen. Damn, I thought. It was locked. I looked around to see if I could spot anything that might give me a clue for the password but found nothing. In desperation, I picked the laptop up and looked on the bottom. Sure enough, there was a piece of paper taped underneath with a set of letters and numbers. I typed it in and was surprised to find I was in their system.\n\nI quickly looked and saw a number of file folders with documents, video and pictures. I figured I didn't have much time, so I brought up a browser window, logged into my secure online FTP site and began transferring files.\n\nAs that worked, I looked through the file cabinet and found numerous folders marked \"Acme.\" They contained a slew of documents, DVDs and thumb drives, so I crammed everything I could into my saddle bags.\n\nI waited and watched as the file transfer took place. I could hear the sound of gunfire outside and hoped I could get this done before they came back. I looked out the side window and saw Mike standing next to the bed. Elijah had already left to join his posse outside. I could only wonder what was taking place.\n\n...\n\nMike:\n\nAs we got close to the bed in the middle of the building, I looked at the woman and knew it was her - my cheating ex-wife, Gloria. She looked like hell. She had lost a lot of weight and her face was thin. There were several tubes attached to her and I could only imagine what they were pumping into her. I hated what she did, but I hated seeing this even more.\n\nThe big man stopped his horse and helped me down. He looked at me with intense anger in his face.\n\n\"You have two jobs, pardner,\" he said. \"First, you need to help your ex-wife transition. What she did to you was wrong, and she knows it. She's paying the price for that now and she won't last much longer. She's already made her peace with God, and now she needs to make her peace with you. I know this is gonna be hard, but you need to let her do that. If you don't, this'll stick in yer craw for the rest of yer life. Remember, this is for your benefit. Understand me?\" I nodded my head.\n\n\"Yes, sir,\" I said. He nodded his head and handed me the largest knife I had ever seen in my life.\n\n\"The next thing you need to do is kill the sorry sonofabitch who did this,\" he told me. \"Think you can do that?\"\n\n\"Absolutely,\" I said.\n\n\"Good,\" he said. \"My posse and I will give you all the time you need. Don't lose that knife, either. I promised the fella who lent it to me that I'd get it back to him.\"\n\n\"I won't,\" I said. He got back on his horse and went back the way we came. I turned to face Gloria. Her eyes lit up as she saw me.\n\n\"Mike?\" she asked weakly. \"Is that really you?\" I nodded my head.\n\n\"Yeah, it's me,\" I said. \"What the hell happened to you?\"\n\n\"They're killing me, Mike,\" she said. \"After I signed the divorce papers you filed, Doug said we were coming to Europe to celebrate a major business deal. It was only later that I learned he was really going to sell me off into slavery. They brought me here and used me horribly for weeks on end. Then they hooked me up to all this. Doug was really pissed at you and he took it out on me. He told me you were dead. Said you attacked him and security had to take you out.\"\n\n\"Looks like we were both tricked,\" I said.\n\n\"That's right, cuck,\" I heard Doug say. I looked up and saw him standing at the foot of Gloria's bed, smirking. \"How'd you get here so fast? You were just released a bit ago. I'll have to visit Judge Stone and thank him for that personally.\"\n\n\"You fucking bastard,\" I growled. \"You remember what I told you the last time I saw you?\"\n\n\"Yeah,\" Doug said. \"Something about killing me. How's that working out for you? My boys are taking care of those cowboys out there, and then they'll be back. I guess you and Gloria will get to die together.\"\n\nI moved forward and grabbed Doug by the throat, surprising him. He reached up and tried to pull my hand off but was unsuccessful. My rage took over as I looked him square in the eye. He didn't see the huge knife I held in my other hand until after I had thrust it as hard as I could into his abdomen. I made sure to thrust the long blade up so it would enter his chest cavity. The motion nearly lifted him off his feet.\n\nHe looked down in shock and saw the wide blade, his blood flowing over my hand and onto the floor. I gripped his throat tighter and forced him to look at me.\n\n\"Look at me, you motherfucker,\" I said. \"I want my face to be the last thing you ever see on this earth.\" I remembered my training at Camp Rollins and twisted the knife as hard as I could. His eyes opened even wider and a gasp escaped his throat. I saw his eyes begin to dilate and I knew it was only a matter of time before he died. I yanked the blade out and tossed his body to the floor, where he writhed in pain.\n\n\"Burn in Hell, asshole,\" I yelled. As I watched, a strange red glow emanated from his eyes and open mouth. It looked as if he was being consumed from the inside out. It only took a few seconds for his body to disappear completely. Shaking, I turned back to Gloria and sat next to her on the bed.\n\n\"Oh Mike,\" she groaned. \"I'm so sorry about all this. I got stupid and selfish and greedy and thought I could have it all. Don't grieve over me. I deserve this. I deserved the divorce. I deserve to die. All I ask is that you forgive me, please.\" \n\nI thought about what she said and what that other man told me. I realized he was right - if I didn't accept her attempt to make peace with me, this would eat at me for the rest of my life. It was the hardest thing I would ever have to do. I looked back at her before speaking.\n\n\"No, Gloria,\" I said. \"If I wasn't such a coward, none of this would've happened. That's why I went to Idaho. I couldn't stand being a coward anymore. If I was able to stand up to Doug and put a stop to this, things would have been different.\"\n\n\"No, Mike,\" she said. \"That's not true. Nothing you could've done would have stopped him, or me. It would have happened one way or another. This is all on me. I could've said no at the beginning but I chose not to. Besides, you're the bravest man I've ever known. No one has ever stood up to Doug the way you just did.\" I let her words sink in for a moment and realized she was probably right. I looked back at her and screwed up my courage. After all, I had loved her more than anything else at one time in my life.\n\n\"Alright, Gloria,\" I said. \"I forgive you.\" Her face lit up for a second as she attempted to smile.\n\n\"Thank you,\" she said, tears flowing down her face. \"And thank you for avenging me. I can die in peace now. Could you please hold me for a bit? I'm so cold.\" I laid on the bed next to her and put an arm around her, drawing her close to me. She felt so small, so cold in my arms. \"I love you, Mike. I've always loved you. This feels so good.\"\n\nIt didn't take very long, less than a minute, actually, before I felt her stiffen up. I looked at her face and saw her eyes were wide open, staring at something I couldn't see.\n\n\"Oh wow,\" she said. A strange light surrounded her for just a second, and when it was gone, I could tell it was over. Her body was there, but she was gone. Her eyes were still wide, but they were fully dilated and I saw a slight smile on her face. I laid her body down on the bed, closed her eyelids with two fingers and covered her up completely.\n\n\"Goodbye, Gloria,\" I whispered, hoping she had found her peace. Just then, I heard Amos calling me from the other end of the building.\n\n...\n\nAmos:\n\nI watched as the file transfer took place. I thought it was going to take forever. I glanced out the office window and saw Mike facing off against someone. I couldn't see everything as his back blocked my view. A bit later, I saw him sit in the bed next to his ex-wife.\n\nFinally, the transfer finished. I sent a text message to Danni, giving her the address where the files had been saved. I also sent her the password and hoped this was everything she would need. I shut down the laptop and put it, along with the AC adapter, in a saddlebag. \n\nI could tell things were wrapping up outside as the gunfire slowly dissipated. I grabbed everything and ran out to Ringo. Once I had secured the saddlebags, I turned and called out to Mike.\n\n\"Mike,\" I yelled. \"Let's go. Come on!\" He turned and started sprinting toward me. He was abut halfway to me when I saw a door open at the other end of the building. Four of Carson's men, armed with AK-style automatic rifles, entered the building. I yelled at Mike.\n\n\"Hit the deck!\" I yelled. Mike's eyes widened but he got my message and fell flat to the floor. I engaged the trigger pin on my rifle and cycled it several times, firing maybe seven or eight bullets at the surprised men. As I watched, they fell to the floor, dead. A couple of them managed to get a few wild shots off but didn't hit either Mike or myself. I disengaged the pin and cycled the rifle with my right hand, causing it to do a full 360-degree spin.\n\n\"C'mon,\" I shouted to Mike. \"Move it!\" I turned toward Ringo and saw Wild Bill staring at me with a surprised look on his face.\n\n\"Damn,\" he said. \"I ain't never seen a man do that with a rifle. Yer grandpa teach you how to shoot that thing?\"\n\n\"Yes sir, Mr. Hickok, he did,\" I said. He smiled and extended a hand.\n\n\"That's some mighty fine shootin' there, pardner,\" he said. I smiled and accepted his handshake, realizing that I had just earned the respect of one of the old west's most famous lawmen. He turned to walk out the door, giving Grandpa Elijah a friendly slap on the shoulder as he did so. Elijah looked at me with a smile.\n\n\"Good job, son,\" he said. \"I take it you got everything you need?\"\n\n\"I did, Grandpa,\" I said.\n\n\"You know, I taught you how to shoot that rifle, but I never taught you that spinning thing you jes' did,\" he said. \"Where'd you get that from, anyway?\"\n\n\"Saw it on a TV show once a long time ago,\" I said. \"Always wanted to try it out myself.\" He nodded his head.\n\n\"TV, huh? Well, jes' don't let it go to yer head, son,\" he said. \"Ya do that, and then ya start gettin' cocky and careless. Then ya come up against someone a bit faster or a bit better and ya end up dead.\"\n\n\"I understand,\" I said.\n\n\"Still, ya done good, son,\" he said. \"I'm proud of ya. Damn proud.\"\n\n\"Thanks, Grandpa,\" I said.\n\n\"Ya ready to head out?\" he asked.\n\n\"Yeah,\" I said. \"I've already texted Danni with everything she needs.\"\n\n\"Good,\" he said, nodding his head. He turned to the others, who were now gathered at the end of the building. \"We'd better saddle up and get back home, boys.\" We got back on our horses and headed out the way we came. As before, a large hole seemed to open up in front of us and we went through, finding ourselves back on familiar territory.\n\nI rode at the head of the group with Elijah as we made our way down the hill toward my house. Danni saw us coming down and ran out of the house, jumping in my arms as I climbed down off Ringo.\n\n\"Thank God you're safe,\" she cried, holding me tight while smothering me with kisses.\n\n\"Yer fella did a damn good job,\" Wild Bill said as he walked by. I gave Danni a big kiss and stepped back, handing her the saddlebags containing the files and a laptop.\n\n\"I hope this will get you what you need,\" I said. Her eyes widened as she looked in the bags. \"Did you get that stuff off to your friend?\"\n\n\"I did,\" she said. \"It's going to take a few days for them to sort through it all, but she said it's enough to bury Acme.\"\n\n\"I hope they move soon,\" I said. \"Look, sweetie, why don't you look after the fellas while I tend to Ringo?\"\n\n\"Okay,\" she said. \"I'm so proud of you,\" she added, giving me another kiss. They went into the house, tying their horses to a hitching post in the front, as I walked Ringo to his corral. I got him settled down and went inside, gun in hand.\n\n\"Well, fellas, we got one more thing to do today,\" Elijah said. \"Y'all ready to go?\" They all nodded their heads. Elijah addressed Mike, who was still wearing the coveralls he had when we first picked him up. \"How're you holding up?\" he asked. Mike nodded his head.\n\n\"I'll be okay,\" he said. \"It's just going to take a while for me to process all this.\"\n\n\"You want to clean up and put on some other clothes before we meet the board?\" I asked. He looked at me before nodding his head.\n\n\"If it wouldn't be too much trouble,\" he said.\n\n\"Alright,\" I said. \"Go on upstairs. I think I have some things that'll fit you.\" I headed up after him and looked through my closet. I found an old pair of jeans and a shirt I thought would fit and let him try them on. They fit okay, even though they weren't his style, and they were clean. I let him take a shower and get changed. He met us when he came back down. By then, Danni had her paperwork ready to go. \n\nElijah motioned for all of us to huddle close in the front room. He pulled out his lariat and twirled it over our heads. The next thing I knew, we were inside a stately conference room in front of a table filled with nicely-dressed executives. As we appeared, the man in the middle looked up at us, surprised.\n\n\"What the hell is this?\" he asked angrily as the other executives looked at us. \"Who are you people? How did you get in here? What's with the wild west show?\" Mike stepped forward and addressed the man.\n\n\"Mr. Greene,\" he said. \"My name is Michael Bradley, and I'm here to tender my resignation.\"\n\n\"Well, take it to HR,\" he said. \"And hurry up before I call security.\" He picked up his phone, but I stopped him by putting the barrel of my rifle on the telephone. He looked up at me, shocked.\n\n\"I don't think so,\" I said. \n\n\"You can't get away with this,\" he said. \"You're all on video and I'll have you all behind bars.\"\n\n\"Not so fast,\" I said. \"Take a look at your clock over there.\" He looked and saw the same thing we all did - it had stopped. \"You see, time has stopped, at least in this room. So has your video surveillance. You see, we were never here and you have no proof otherwise.\"\n\n\"You're crazy,\" he said. \"We all see you.\"\n\n\"And how is that going to work for you, Mr. Greene?\" Danni asked, stepping forward. \"What are you going to tell the police? That a group of famous western lawmen just appeared in your office out of thin air and threatened you? You'll all be in a rubber room before you get the words out of your mouth.\"",
        "\"And just who are you?\" Greene asked.\n\n\"My name is Danni Williams, and I represent Mr. Bradley,\" she said. \"Here's his offer.\" She set a folder on the table in front of him. He opened it, read the proposal and started laughing.\n\n\"You have got to be kidding,\" he said. \"There's no way I'm going along with this. Ten billion dollars? Never gonna happen.\"\n\n\"That's ten billion, tax free,\" she said. \"That's not including all the costs and my fees, which are also listed.\" He looked at the paperwork again and scoffed.\n\n\"And what are you gonna do if I refuse?\" he asked with a smirk on his face.\n\n\"Well, then, we'll be seeing a lot of each other in court,\" she said. \"This employment contract you had Mr. Bradley sign is a fraudulent document. In fact, his whole employment was a ruse cooked up by all of you to turn his wife into your personal prostitute. We have documents, video, pictures, everything that shows you all complicit in this scheme. We've got you on attempted murder, illegal imprisonment, torture, prostitution, slavery, human trafficking, drugs, the list goes on. You held my client against his will for two months, tortured him and starved him just so you could have your way with his wife.\n\n\"In fact, you've violated just about every single one of my client's civil rights, and that doesn't include the destruction of his marriage and the wrongful death of his wife. And I'm sure there's many more victims we can find. There's enough just in this so-called contract alone to keep you tied up in the court system for 100 years,\" she said.\n\n\"And that's not even including state and federal criminal charges,\" she added. \"Just imagine what Acme's reputation will be once all this hits the media.\" At that, Greene's face turned white.\n\n\"Look, I can't approve this by myself,\" he said. \"We need to discuss it and vote on it, and the CEO has to weigh in.\"\n\n\"Bullshit, Greene,\" Mike said. \"Your company did a good job of training me on your financial controls. You can approve this yourself, right now. As the President and Chairman of the Board, all you have to do is pull up your ACH application, punch in your code and it's done. You don't need Carson here to do that.\"\n\n\"Speaking of Doug,\" another man at one end of the table said. \"Where is he? Where is my brother?\"\n\n\"You're Doug Carson's brother?\" Mike asked.\n\n\"Yes, why?\" he asked.\n\n\"You were Gloria's initial boss?\" He nodded his head and stood up.\n\n\"Yes,\" he said. \n\n\"So, you're the one who got Doug to make her the company whore,\" Mike said. The man walked around the table and stood in front of Mike.\n\n\"Yeah,\" he said. \"She was a damn good fuck and she loved gangbangs. So what are you gonna do about it?\"\n\n\"Help you join your brother,\" Mike said. \"In Hell.\" The man's eyes widened and he took a swing at Mike. Elijah and I moved to stop them but it was too late. Before we knew it, Mike had blocked the man's swing, throat-punched him and put him into a headlock. Mike twisted the man's head, rapidly. We heard a sickening crack, and he fell to the floor, dead. All of us were shocked at what we saw.\n\n\"That was for Gloria,\" Mike said. As we watched, the man glowed red for a few seconds, then disappeared.\n\n\"You just murdered that man in cold blood,\" Greene said. Mike looked at him, hatred in his eyes.\n\n\"It was self-defense,\" Mike said. \"Isn't that what you all saw?\" he asked, looking behind him. Everyone nodded their head.\n\n\"Looks that way to me,\" Bat Masterson said. \"That fella took a swing at you first.\" Greene looked at us, angry.\n\n\"Do you have any idea who you're messing with?\" he asked. Elijah chuckled.\n\n\"Do you?\" Elijah asked. Suddenly, the room darkened and the inside temperature went down several degrees. I saw Greene and the rest of the board looking behind us, their eyes wide with fear, so I turned around. Elijah and the other lawmen seemed to have grown a bit, their features blurred. Their eyes glowed like campfires. Around them were several large, dark, winged beings with flaming swords. A couple minutes later, the room returned to normal, but the fear behind the table was palpable.\n\n\"Okay,\" Greene said, his face still registering shock. \"I'll do it. Just one thing, please.\"\n\n\"What's that?\" Danni asked.\n\n\"What do we get if we do this?\" he asked.\n\n\"Y'all get to keep breathing, at least for a little while,\" Wild Bill said to chuckles. Greene looked at the other board members.\n\n\"Do it,\" the woman sitting next to him said. \"Just do it and get it over with.\" Greene nodded his head and opened his application. He entered the amounts and all the other information he needed, then punched in his code. He followed that with a scan of his thumbprint. We watched as the transactions took place on his monitor. When they had all completed, he looked up at us.\n\n\"Please,\" he said. \"Just go.\" Elijah whipped out his lariat and the next thing I knew, we were back in my living room.\n\n\"That went well,\" I said, sarcastically.\n\n\"So, is that it?\" Mike asked. Elijah nodded his head.\n\n\"For now,\" he said. \"The rest is up to the feds. If they don't do their jobs, though, we may jes' have to intervene. I think we can all call it a day.\"\n\n\"Just a moment,\" Danni said before they left. We all turned to her. \"I spoke to my folks while you were in Albania. They said they'd talk to the pastor of the old country church they go to about having our wedding a week from Saturday.\"\n\n\"That's kinda fast, isn't it?\" I asked. \"I mean, are you sure that's what you want?\"\n\n\"Yes, I want to get married as soon as possible,\" she said. I turned to Elijah.\n\n\"Grandpa,\" I said. \"Look, I know this may sound unusual, but would you do me the honor of being my best man?\" He looked at me, stunned.\n\n\"Shouldn't that be something you ask of your best friend or something?\" he asked.\n\n\"Yes, it is,\" I said. His eyes grew wide as he thought about it for a bit.\n\n\"Why, yes,\" he said. \"I'd be honored to. Would you mind if I brought some guests?\" he asked, motioning to the others.\n\n\"I'd be insulted if you didn't,\" I said. I saw the other men smiling. Elijah nodded his head.\n\n\"Okay, if that's what you want, son, I'll do it,\" he said. \"This is gonna be a bit difficult to explain to yer folks, though.\"\n\n\"Probably not as difficult as you might think,\" I said.\n\n\"Alright, we'll see y'all a week from Saturday,\" he said. We shook hands and they left the house. I turned to Mike.\n\n\"You're invited as well,\" I said. \"That is, if you want to come.\"\n\n\"Thanks,\" he said. \"I'll see how I feel. Right now, I'm starving.\"\n\n\"Sure,\" I said. \"Why don't you stay the night and I'll take you home in the morning if you want.\"\n\nThat night, we finished off the leftover meatloaf I had in the refrigerator, then got Mike settled into one of the spare bedrooms. Danni and I went into the master bedroom and talked for a bit before going to bed.\n\n\"Why the rush?\" I asked. \"I'm not complaining, I'm just a bit curious.\"\n\n\"I realized that life is too short and too precious to waste time and I want to start my new life with you,\" she said. \"That and the baby. I also have a feeling you may be spending more time with your grandfather and I'm a bit afraid that you may leave one day and never return.\"\n\nI held her in my arms and comforted her.\n\n\"I'll always be here for you,\" I said. \"You and the baby are the two most important things in my life. Never forget that.\"\n\n\"I love you,\" she said before kissing me.\n\n\"I love you more,\" I answered.\n\n...\n\nEpilogue:\n\nThe next day, I took Mike home. It seemed that Acme had his car towed back to his place, and oddly enough, the bills had still been paid while he was being held. He thanked me for everything and shuffled into his house. I could tell he was lonely and heartbroken and made a mental note to keep a loose tab on him. \n\nI also asked Danni about the settlement she got for Mike.\n\n\"Is that actually going to hold up?\" I asked. She nodded her head.\n\n\"Oh yeah,\" she said. \"The dollar amount is a lot higher than what you might expect, but it'll hold up if it's ever questioned. Especially under the circumstances. Trust me.\"\n\n\"So, what was your take?\" I asked.\n\n\"Only about three billion,\" she said.\n\n\"What?\" I asked. \"You got them to give you three billion dollars?\"\n\n\"Yep,\" she said. \"Tax free.\"\n\n\"Why so much?\" I asked.\n\n\"Well, it just might come in handy if I'm going to be a stay-at-home mom like I want,\" she said.\n\nThe wedding went off as scheduled, and we all had a blast. Danni was gorgeous in her wedding dress, and I could see the pride in her father's face as he walked her down the aisle. Grandpa Elijah showed up, dressed in a modern tuxedo that matched mine. I almost didn't recognize him. He had a woman with him, a graceful, trim blonde with a floor-length dress and a hat with a veil that obscured most of her face. \n\nThe rest of the posse showed up as well, all of them wearing modern clothes. I could tell they felt uncomfortable in the suits, but they seemed to have a good time mingling with the guests.\n\nThe test came when I introduced Elijah to my parents. I introduced him as Justice O. Peace instead of his real name - that was at his insistence. He acted as though he had never met them, but I could tell my mother saw something in his face. She was the historian in the family and spent a lot of time in Grandma Elizabeth's journals. She cornered me during the reception.\n\n\"That man looks awful familiar,\" she said. \"I get the feeling I've seen him somewhere before.\"\n\n\"Just a coincidence, I'm sure,\" I told her. She said nothing more, but I did get a kick out of seeing her dance with the posse. One day, I would tell her she had danced with some of the most famous lawmen in American history, but not today. Danni's folks also had a good time.\n\nAbout a couple hours into the reception, Elijah pulled Danni and I to the side.\n\n\"We don't have much time left, but there's someone I want to introduce you to,\" he said. His \"date\" showed up and lifted the veil from her face. There she was - Grandma Elizabeth. She appeared young, about Danni's age, and had long, flowing blonde hair that framed an angelic, smiling face.\n\n\"Amos, meet your Grandmother Elizabeth,\" Elijah said. I was shocked and stunned by her beauty. She smiled and extended a delicate hand. I politely shook her hand and introduced her to Danni. Her face lit up when she saw her engagement ring.\n\n\"I don't believe I'm actually meeting you,\" Danni said. \"I've often wondered if you would approve of me wearing your ring.\"\n\n\"Of course, dear,\" Lizzy said. \"I can't think of anyone more deserving. I know you'll be a wonderful wife to Amos and a terrific mother to your children.\" She turned to me. \"And Amos, I want you to know that I'm so very proud of you and I love you both.\"\n\n\"I've read your journal,\" I said. \"And I feel as if I've known you all my life.\" She smiled and touched my cheek.\n\n\"I'm glad, Amos,\" she said. \"You're a lot more like your grandfather than you know. Maybe one day Danni can add her own chapter to that journal. Just know that we're always here for you.\"\n\n\"Thanks, Grandma,\" I said. \"I love you,\" I added, giving her a hug. She hugged me back and I could feel her warmth. It was strange but she emanated a strange warmth that was also quite comforting.\n\n\"Oh, could you please give this to that Mike person?\" she asked, handing me a slip of paper. \"Gloria gave it to me. Said he would know what it is.\" I looked and saw it was a telephone number and an address.\n\n\"Sure,\" I said. \"I'll tell him. Thanks.\"\n\n\"We need to get going, dear,\" Elijah said. \"It's almost time.\" She nodded her head and kissed Danni and I on the cheek before lowering her veil.\n\n\"Remember,\" she said. \"We're always with you.\" \n\n\"I'll be in touch, son,\" Elijah said. He turned to Danni and kissed her on the cheek. \"Welcome to the family,\" he added. He turned to his posse and motioned upward. They nodded their heads and followed Elijah and Elizabeth out. I followed a few seconds later, but they were already gone. I turned and almost ran into my mother.\n\n\"Where did those charming folks go?\" she asked. I could tell she was a bit tipsy.\n\n\"They had to get going,\" I said. \"They have an appointment they had to get to.\"\n\n\"Oh darn,\" she said. \"I promised one of them another dance.\" I smiled to myself. \n\nI gave the note to Mike and thought he was going to pass out when he saw it.\n\n\"Everything alright?\" I asked.\n\n\"Yeah,\" he said. \"It's in her handwriting.\"\n\n\"What is it?\" I asked.\n\n\"The address and phone number of an old girl friend I dated before Gloria and I got married,\" he said.\n\n\"That's a good thing, isn't it?\" I asked. He smiled as he looked at me.\n\n\"Yeah,\" he said. \"A very good thing. I thought I lost this number. Thanks.\"\n\n\"You're welcome,\" I said.\n\nDanni and I enjoyed our two-week long honeymoon in Hawaii and came home. Her folks took care of Ringo while we were gone. I don't know who was happier when we got back, Ringo or me. \n\nI started working on one of the bedrooms, getting it ready for the new baby. Nine months after Danni and I made love at the pond, she gave birth to a strapping baby boy, named William Elijah Jones. Her parents were proud as punch as were mine. Somewhere, I knew my grandfather was smiling.\n\nIt took nearly a year after the settlement, but the feds finally moved in on Acme. It wasn't a pretty sight and news reports painted a horrible picture of crime, sex, drugs and illegal guns. Every member of the board was arrested, along with most of the senior executives. After months of wrangling in the courts, they all received life sentences. More than one ended up committing suicide. The company itself was broken up and the pieces sold off to other interests. Something told me their story wasn't quite over.\n\nMike and I stayed in touch with each other after the reception. He finally connected with his old girl friend and the two of them are planning to get married. She seems to like the new Mike and I've never seen a man happier - that is, until I glance in the mirror...\n\nOh yeah, I did see Elijah again, but I'll tell you about that the next time we meet.\n\nIn the meantime, happy trails...\n\nNotes: The Winchester rifle in this story was patterned after the one used in the old series, \"The Rifleman.\" The modifications mentioned here were patterned somewhat after the modifications used on that rifle.\n\nIt's not known if Bill McDonald, who died in Wichita Falls in January 1918 of pneumonia, actually saw a biplane, however, Call Field was established at the \"Falls\" during World War I as a training site for aviators and observers. Construction began in August 1917 and the 164th Aero Squadron, equipped with six Curtiss JN-4 Jenny trainers, was posted there in November 1917. Two other squadrons joined it in December, one month before McDonald's death. Given that, I figured it was possible that he might have seen one of those old flying crates and exercised a bit of artistic license.\n\nAs for the extremely large settlement, I realize there are some who would say that would never happen. I took some artistic license with that as well, but as I said in the beginning, this IS my universe, so..."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "cheating",
        "divorce",
        "payback",
        "revenge",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/justice-ch-02-ghost-riders"
}