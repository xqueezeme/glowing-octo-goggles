{
    "title": "The Big Tits Club Ch. 39-40",
    "pages": [
        "-- CHAPTER 39: Mari --\n\n****\n\n// INSERT BLUEDRAGON(TM) BLOWJOB \"JERKED AWAKE\" SCENE\n\nShe didn't react at all, didn't even make a sound. I'd just thrust every inch of my dick down her throat, and she took it all with aplomb. And as soon as my hips dropped back down to the mattress, she resumed fucking her entire face up and down in my lap as if nothing had ever happened.\n\nMy eyes fluttered for a brief second, giving me just enough time to see the brunette head bobbing up and down in my lap. Mari looked up at me, her warm brown eyes welcoming me into the world of the waking. And she stopped to smile around a mouthful of meat at full depth, as comfortable with my entire cock in her throat as if she were sucking on a mere cough drop.\n\n\"Mmm, good morning, Angel,\" I greeted while reaching up to caress her cheek.\n\nThe pretty Latina pulled off my cock, beamed, and replied, \"Good morning, boyfriend.\" She immediately put my cock back into her mouth, although she didn't deep-throat it. Instead, she sort of leaned into my hand, letting my cockhead dent her cheek from within. I felt the distinctly odd sensation of rubbing my own dickhead from outside Mari's cheek, but then I pulled my hand away and set my head back down on the pillow.\n\nMari then came off my dick again and flashed me her pearly whites in a broad smile. \"Sleep well?\" she asked sweetly while continuing to pump my shaft with her right hand.\n\n\"Uh-huh. I always sleep well cuddled up with you. You've got a body built for spooning.\"\n\nMari preened and sighed. \"I only wish I could spoon with you every night. I can't wait until next Saturday.\"\n\nI grinned. It was Sunday morning now, and Mari had gotten another 'sleepover' with Belle to excuse her absence last night. We figured she could get at least one more next Saturday night as well. \"Benefit of going first. You got two weekends out of the deal.\"\n\nMari got a slightly sad expression, and for a second I worried that I'd said something to upset her.\n\nBlinking, I frowned and asked, \"Uh, unless you don't want to stay over next weekend. I mean, you don't have to if you don't want to.\"\n\n\"Oh, I want to. I want to,\" she assured me. \"No, when you mentioned getting two weekends, it just reminded me that there's a time limit on this vacation. Don't get me wrong, I'd been dreaming of having a night like last night for years, and it was everything I hoped it would be. It almost made me forget I'll have to give you back to the other girls a week from now.\"\n\nShe looked sad again, and I felt the impulse to tell her it was still possible she wouldn't have to give me back a week from now. If Mari and I well and truly fell in love, she might never have to give me back. But the more mature part of me realized I shouldn't give her inflated hopes like that unless I had some reason to believe I'd deliver, so instead I caressed her cheek once more and said, \"Even though everybody dreads the end of any vacation, we try not to focus on the ending. Instead, focus on getting the most out of each day. Enjoy it for what it is, so that in the end you go home with nothing but fond memories.\"\n\nMari grinned. \"I had some great memories last night.\" Her eyebrows waggled suggestively.\n\nI made a face. \"I dunno... that movie was kinda crappy.\"\n\nMari giggled. \"I meant other memories.\"\n\nI laughed with her. \"I know.\"\n\nWhile the BTC girls had all gone home after my Saturday morning six-girl facial, Mari had returned a little before dinnertime with an overnight bag, eager to start her first evening as \"my girlfriend\". She didn't want to go to a fancy restaurant but neither did she want to just hang out and grab fast food. We settled on a rather normal high school \"dinner and a movie\" date, going out to the local Italian chain restaurant known for breadsticks and heavy cream sauces, and then the stadium seating Cineplex by the mall. Quality films were hard to come by in early-March, and the rom-com Mari picked definitely did NOT fall into the category of quality films. Still, she raised the armrest between us, cuddled up against my side, and snuggled beneath my arm.\n\nIf you asked me, my couch at home would've been more comfortable, and it wasn't like the shitty movie needed a big screen, but I certainly couldn't complain about the company.\n\nWe watched the movie in relative silence. Mari cried a little when the main characters separated in the fourth act due to some stupid misunderstanding that would've never happened in the first place had the main guy just admitted the truth five seconds earlier. She cried again when the couple reunited, so even if I didn't care much for the film, I at least considered the movie a success if she enjoyed it well enough. Even so, I think Mari was even happier to walk around the mall holding my hand like so many of the other young couples around us than she was about the movie.\n\nWe chatted about the film on the drive back to my place, Mari waxing poetic about the mysteries of love and me poking holes in the plotline's lazy writing. But I kept my tone light and Mari playfully defended the movie, and in the end, we agreed to disagree because we were back at my place and I told her I'd much rather suck on her big boobies. Mari agreed that it would be a better use of our time.\n\nI actually didn't get to suck on her big boobies right away. My horny little angel was in too much of a hurry to get laid, and after stripping down to her underwear, my voluptuous vixen bent herself over the foot of my bed, slid the strap of her panties aside, and started rubbing herself while moaning how much she needed her boyfriend to come pleasure her.\n\nSquatting down, I held the strap of her panties to one side and started licking the lovely Latina's succulent snatch from behind. Then I peeled the flimsy fabric down to her ankles and had her step out of them so I could have unfettered access to Mari's lush wonderland of curves. I slapped her big booty cheeks and spread the globes to the sides, giving me room to lick my way up her butt cleavage until I came to her crinkled anus. Stiffening my tongue, I gave her a rimjob and started fingerbanging her cunt. And I didn't stop until I gave her a screaming orgasm.\n\nAfter that, Mari was dying to feel me inside her, and I wasn't inclined to delay, either. So I dropped my pants, centered my cock, and slammed all the way into her in a single thrust.\n\nI fucked Mari to another screaming orgasm from behind with her bent over the foot of my bed. After that, she had me go lie down so she could ride on top of me, holding her hands behind her head and thrusting her tits forward in a way that made those big puppies really dance the way she undulated atop my prick. Only then did I finally sit up and suck on her big boobies the way I'd wanted to in the van. And in the end, when I groaned that I was about to cum, she pulled off me, slammed her face down until my dick was once again lodged in her throat, and she let every last drop shoot straight into her stomach.\n\nWhen it came, my second ejaculation of the night was a little more intense. After Mari's excellent oral skills revived me for another round (not to mention her penchant for wrapping those massive breasts around my shaft), I climbed aboard for a missionary ride. She was truly built for comfort, and I felt like I could fuck her all night. But after she crooned her climax into my ear, Mari raised both of her legs up over my shoulders and grunted, \"Switch holes.\"\n\nI had arched an eyebrow in surprise.\n\n\"C'mon, you know I can take it. Switch holes. I wanna give my boyfriend my ass.\"\n\nWell, I wasn't going to turn DOWN her invitation. Grabbing hold of her hips, I withdrew my super-hard dick still super-wet from Mari's multiple orgasms, and with just a bit of a nudge I popped the mushroom head through her unlubricated anus. After that, the rest was smooth and easy going as I swiftly buried every last inch of myself into her tight anal chute.\n\nBlasting a big load up Mari's bubble butt resulted in us taking a shower together. I inevitably developed another erection while soaping up those massive mammaries. We fell into bed one last time, spooning together with my lover's lush body cradled in my arms. I completed the trifecta by filling up her pussy, and eventually we both drifted off to sleep having finished an absolutely perfect little date.\n\nNow it was morning, and Mari was back for more. Presently, my angel stopped stroking my shaft and slid up my body to straddle my hips. She notched my dickhead into her moist folds and sat herself down. And once we were fully joined once again, my newest girlfriend leaned forward to kiss me tenderly.\n\nWith a wide smile of contentment, Mari intoned happily, \"Let's make some more memories.\"\n\n****\n\nAfterwards, Mari and I got dressed and headed downstairs. Mother was in front of the kitchen range making brunch, and she was not alone. Both Sam and Belle sat on stools at the kitchen island, both of them clad in sports bras and spandex leggings, sweat dotting their brows having apparently gone for a run together.\n\n\"Morning, ladies,\" I greeted, going over to kiss both Sam and Belle with short pecks. I then returned to Mari, held her hand, and puckered up for a quick kiss with her as well.\n\n\"How was your first date?\" Belle asked Mari brightly.\n\n\"'First' date?\" Mari blushed and looked at her feet a little nervously. \"C'mon, guys. It's not like I haven't been on a date with Matty before.\"\n\n\"Those were dates as friends. This was a date as his girlfriend,\" Belle pointed out.\n\n\"Wait, what?\" Mother's head popped up in surprise and she turned around to face us.\n\nSam laughed. \"Long story. I'll explain later.\"\n\nMother furrowed her eyebrows, evaluated Sam's expression, and then looked over at me and Mari. I shrugged, squeezed Mari's hand, and led her over to the dining table where there would be more room. Sam and Belle collected their drinks and came over to join us.\n\nMari scooted her chair over until it was touching mine, and she kept our hands clasped together beneath the table, which forced me to eat with my left hand. Over the past several Sundays the girls had refrained from going into great detail about our sexual activities with Mother present, although I figured that had more to do with us banging so much that sex was no longer a particularly interesting topic rather than an attempt to be more circumspect around my mom. The girls did end up discussing the shitty rom-com, with Mari giving the movie a glowing recommendation and Belle and Sam getting all excited and thinking we should go see it together as a group while I set down my fork and rubbed my forehead trying to mask my disgust.\n\nI'd almost rather they talked about my sex life.\n\nBut eventually the girls moved on to other topics, celebrity gossip and fashion stuff that I tuned out. Mari even got distracted enough to let go of my right hand, so I quickly grabbed my fork and started wolfing down my food.\n\nFinally, Mother announced it was time for her to go, and the girls all said goodbye. That was usually Sam's cue to start flirting with me, perhaps playing footsie under the table or otherwise making some double-entendre designed to put us both in the right mood for her regular Sunday afternoon shagging. But today she didn't, and the girls kept right on going.\n\nIt was Mari who stopped the conversation and realized aloud, \"Waitaminute, you two haven't fucked Matty yet! You left the room yesterday morning while the rest of us were fooling around with him.\"\n\nSam and Belle exchanged a glance, and Sam explained, \"We had some stuff to work out with each other.\" Her gaze was a little hard, an expression that clearly told Mari to 'drop it'.\n\nBut Mari waved her off with a waggling hand. \"Not what I was getting at. What I MEANT is that you two are long overdue. And... all sweaty from the run and everything, you two should totally go take a shower with him.\"\n\nBelle grinned, but Sam frowned. \"But he's your boyfriend this week.\"\n\nMari shrugged. \"It means I'm his primary, but it also means I can share him if I want. And I want.\"\n\n\"You sure?\" Sam asked a little uncertainly, although there was no mistaking the arousal in her eyes or the way she'd started squirming in her seat. \"I mean... I wouldn't mind raising my legs and feeling him slide that throbbing, thick piece of gorgeous meat way down deep inside me... But it's really up to you.\"\n\nMari laughed. \"So is THIS the power trip you girls in charge always get to feel? The sense that you hold the fates of others in the palm of your hand and you can choose... or not choose... to bestow your favors upon an enthralled population?\"\n\nSam looked alarmed and exchanged another glance with Belle. \"Ummm... what?\"\n\nMari grinned. \"I think I like being Matty's girlfriend.\"\n\nThe other girls both laughed. Belle was now visibly squirming in her seat. \"So that's a yes, right? We can fuck him?\"\n\nMari beamed at her bestie. \"I'm gonna enjoy this for now, but I can't believe you even think you have to ask. Once Team Belle, always Team Belle.\" Mari even pumped her right fist into the air.\n\nBelle couldn't shove her chair back fast enough, racing around to grab my hand and start tugging me up to my feet. Sam also got up, but was rather more casual about it. Mari, however, didn't get up right away, and Sam frowned. \"Aren't you coming?\"\n\nMari waved her off with a waggling hand. \"Oh, I'll come up to watch once you guys get started. But I really want him to focus on the two of you. It's like Neevie said yesterday: 'All for one, and one for all.'\"\n\nSam grinned and patted Mari's shoulder, saying sincerely, \"Thank you.\"\n\nBelle had already dragged me halfway down the hall. \"C'mon, Sam. Let's GO!\"\n\n****\n\nAlice was waiting for me and Belle at the parking lot on Monday morning and came over to us as soon as we stepped onto the curb. To my surprise, however, Mari was also waiting for us, and my current girlfriend wrapped her arms around my neck and gave me a searing kiss. With Belle and Alice standing right next to us, nobody paid us much attention.\n\n\"Hey, boyfriend,\" Mari greeted me warmly once we finally broke for air.\n\n\"Hey, girlfriend,\" I replied just as warmly and added a quick peck to her nose.\n\nShe slipped her hand into mine as we turned and walked onto campus. Belle and Alice soon split off to go their own classes while Mari and I found a quiet corner to make out. We didn't have a whole lot of time together, but we made do with what we had. She gave me a final kiss and then hurried away.\n\nAt recess my busty and beautiful girlfriend straddled my lap and we made out pretty much the entire time. At lunch, she took a page out of Neevie's playbook and dragged me out to the minivan for sex. And then in the afternoon, she came over to my house and we fucked like bunnies until four o'clock. Thankfully I was used to such rigorous Monday afternoon exercise, so I wasn't quite wiped out by the time I showed up at Belle's house to make dinner.\n\nSpeaking of Belle, she was quieter than usual. Actually, she'd been pretty quiet around me overall ever since Friday night's near betrayal. We'd barely talked on Saturday morning, even though I wound up cumming on her tits and face. We'd barely talked on Sunday, even though we had a pretty wicked threesome with Sam. To be honest, she was so eagerly horny on Sunday that I sorta forgot about everything until she already had my dick in her mouth, and by then I was happy to just go with it.\n\nBanging each other for physical pleasure was one thing. Having an intimate conversation about the state of our relationship was something else entirely. What had happened between us had not been as cataclysmic as my girlfriend screaming another man's name during sex, so I wouldn't have called Belle and me \"estranged\" or anything like that.\n\nWe were just a little... weird.\n\nMaking dinner together was the first time we'd been alone outside of a couple of short car rides since I'd taken away her house key, and neither of us really knew what to say other than the basic communication requirements of prepping a meal. We weren't awkwardly silent around each other, but we weren't our usual selves, either.\n\nI wasn't the only one to notice.\n\n\"Is everything alright between you two?\" Mr. K asked two minutes into the meal. Thus far the three of us had been eating in silence.\n\nBelle blinked and looked over at her dad. \"What do you mean?\"\n\nHe gave her a questioning look, and then turned to give me a significant glance as well.\n\nI shrugged and replied. \"Everything's fine, why?\"\n\nWith a shrug, he shook his head. \"You two teenagers don't wanna tell an old man like me what's going on, alright. But don't patronize me and say, 'Everything's fine'. Just say, 'We're working through some stuff, but we'll figure it out' or something, alright?\"\n\n\"Everything's fine, Dad,\" Belle drawled.\n\nMr. K swiveled his attention back to his daughter. \"Don't think I didn't notice you just spent the whole weekend sleeping in your own bed. Now I wasn't going to ask, nor do I want all the nitty-gritty details now. I'm just saying: Don't patronize me, alright?\"\n\nI went ahead and volunteered, \"We're working through some stuff, but we'll figure it out.\"\n\nMr. K grinned and reached across the corner of the table to pat my shoulder. Turning back to Belle, he jerked a thumb in my direction and said, \"See? Was that so hard?\"\n\nBelle rolled her eyes and returned her attention to her meal.\n\nBut I chuckled, smiled, and honestly, I felt better.\n\n****\n\nTuesday was more of the same. Mari and I made out with each other before school and during recess and then we had a minivan quickie at lunch. It was impossible to be awkward around Belle or Naimh because Mari was monopolizing all my time anyway. The only real difference from Monday was that Alice got to spend the afternoon with me, just as Mari had promised.\n\nBy Wednesday I was getting used to cruising around the campus with Mari hand-in-hand. Lunchtime was almost over, and on the way to our next classes, she and I turned a corner and came face-to-face with a familiar boy.\n\n\"Oh hey, Gerald!\" Mari greeted brightly, still flush with happiness after a couple of nice orgasms. \"Haven't seen you in a few days.\"\n\n\"Uh, right,\" the guy muttered, frowned as he looked at Mari's hand in mine, and then without another word, he put his head down and walked away.\n\nWith her free hand, Mari started to reach in his direction and open her mouth to say something, but the words died on her lips a moment later. Her shoulders sagged and a frown tugged at the corners of her mouth. It was evident that whatever good cheer she'd gotten from the lunchtime nooner had evaporated in two seconds.\n\n\"I'm sorry,\" I said quietly.\n\n\"What?\" Mari looked over at me and quickly closed both of her arms around mine. She leaned forward and pecked my lips. \"There's nothing to be sorry about. I'm holding hands with my boyfriend, and if Gerald can't handle it that's his problem.\"\n\nI arched an eyebrow. Although I'd been careful to never mention a potential end to our relationship thus far, I forgot myself for a moment and said, \"You're only going to be my girlfriend until Sunday. But if you really like him, Gerald could be your boyfriend a lot longer.\"\n\nMari abruptly pulled her arms away from mine. \"Already made up your mind about me, huh?\" And then she took an extra step back as well.\n\nI frowned, not yet understanding. But I got it a second later, and I shook my head. \"I didn't mean it like that.\"\n\n\"No, it's alright,\" she muttered bitterly and took a deep breath. \"I told myself from the beginning not to get my hopes up that we might be for real. Thanks for the reminder that to you, all this is just a game.\"\n\n\"Mari, I didn't--\"\n\n\"Too late,\" she said dismissively, and then turned on her heel and walked away.\n\nI briefly thought about going after her, but the bell rang, and with a sigh I turned in the other direction to get to my own class.",
        "****\n\nI looked around for Mari after school ended but didn't see her. Eventually I gave up and met Belle at the minivan five minutes later than usual. I asked Belle if she'd seen Mari and my pixie 'little sister' replied that she hadn't since lunchtime.\n\n\"What's wrong?\" she asked, recognizing the concern on my face.\n\nI sighed and explained about bumping into Gerald and then making the offhand comment about Mari only being my girlfriend until Sunday.\n\nBelle listened considerately and then popped her eyebrows. \"I'll call her when I get home, okay?\"\n\n\"Thanks.\" I nodded. \"I really appreciate it.\"\n\nShe gave me a wan smile. \"She's my best friend. You're my... my Matty. I want to see both of you happy.\"\n\nWithout really thinking about it, I hugged Belle close and then bent to kiss her lips softly. But when I went to release her, she squeezed me tight and wouldn't let me back up. Only then did I really remember that we were still in this little limbo state between normal and estranged. I knew that until she got her house key back, Belle would always know that things weren't back to normal between us. And as much as I might've wanted to just put the past behind us, I was waiting for... something... to show me I could trust her again before giving her the key back.\n\nMaybe helping fix things with Mari would be the first step.\n\nTwenty minutes after I got home, the doorbell rang, and I quickly got up to answer it. Feeling relieved, I greeted, \"Hello, girlfriend\" before getting a good look outside, and then blinked in surprise to see Zofi on my doorstep.\n\nThe exquisite brunette grinned at me. \"Well hello, boyfriend,\" she greeted in return and stepped forward to give me a kiss.\n\nIt took me a second but I returned her kiss. While Mari had made clear that Alice would get to keep her regular Tuesday, I wasn't aware of any such promise to Zofi about Wednesday. So when we finally parted, I looked her up and down and asked, \"What are you doing here?\"\n\n\"Relax, I'm not crashing,\" she informed me as I welcomed her into the house. She walked in and started looking around. \"I asked Mari at recess if she'd mind me joining you two. Has she not arrived yet?\"\n\n\"Uhhh, no. Not yet.\" I didn't yet explain that I wasn't a hundred percent sure Mari WOULD arrive. I mean, I'd expected my girlfriend-of-the-week to come by, and I didn't think that what happened at the end of lunch was significant enough to change that plan, but I wasn't totally sure anymore.\n\n\"That's alright.\" Zofi nodded and hefted her backpack. \"Maybe we can actually get some studying done first.\"\n\nI nodded. \"Sounds like a plan.\"\n\nIn the end, though, Zofi and I ended up doing homework for more than thirty minutes without Mari showing up. Zofi asked about her absence, and I answered truthfully that I'd assumed Mari would be coming over but had not actually confirmed that beforehand. Zofi asked what was going on, since she'd assumed it was a done deal as well. I explained about the little run-in with Gerald, and Zofi nodded her understanding. She then volunteered to call Mari's house and see if she was home instead, but there was no answer. Five minutes later, I tried to call myself, but still the call went to their answering machine.\n\nZofi and I went back to work. Neither of us was inclined to mess around with each other behind my girlfriend's back, and the mood wasn't conducive to sex anyway. It wasn't really conducive to studying, either, but I managed to muster up enough focus to at least go through the motions.\n\nThirty minutes after THAT though, the doorbell rang again. I quickly hustled to open the door, checked the peephole, and flung it open.\n\nAnd a lovely, luscious Latina practically knocked me over as she slammed into my chest and sealed her lips over my mouth.\n\nRelief washed throughout my entire body. On a scale of the greatest traumas and worries throughout my entire time on Planet Earth, this little blip in my relationship with Mari wouldn't rate very highly, but I'd still be much happier to minimize the amount of angst in my life. I wrapped my arms around my girlfriend's curves, mashed my lips against hers, and even probed her lips with my tongue until she let me in.\n\nWe kissed and we kissed and we kissed some more. I wound up spinning her around while she practically tried to climb my body, and I ended up just sliding my hands into the back of her pants, getting a really good hold of her juicy buttcheeks and grinding her crotch against my brand-new erection.\n\n\"Okay, okay, the door's still open,\" a voice muttered from outside.\n\nI abruptly yanked my hands out of Mari's pants and looked out through the open door. As it turned out, Mari had not arrived alone. Belle was still standing on the front porch right outside.\n\n\"Oh, hey,\" I greeted belatedly. Holding my girlfriend against my right hip, I looked out the door and asked, \"Aren't you coming in?\"\n\nBut Belle shook her head and peered around the doorway, noticing Zofi standing nearby. \"I think you've got your hands full enough already. Just wanted to make sure you got your special delivery.\"\n\nMari kissed my cheek and beamed at her bestie. \"Thanks, Belle.\"\n\nI smiled, let go of Mari, and stepped outside. Brushing strawberry-blonde bangs back from Belle's pretty face, I bent down and gave her a sweet kiss. She whimpered and clutched my shirt for just a moment, holding me close, before letting go and sighing as she relaxed a bit.\n\nConscious of my girlfriend right behind me, I stopped the kiss before it lingered and backed up. \"Thanks, B,\" I said warmly. \"You came through for me.\"\n\n\"Anytime.\" Belle winked at us.\n\nI arched an eyebrow at her as I walked back into my house. \"Sure you don't wanna stay?\"\n\nShe smiled and shook her head. \"More for Mari this way. I'll see you guys tomorrow!\" She gave a little wave and then stepped into the house just to grab the door handle. Looking straight at Mari, she added, \"Remember... enjoy your vacation.\"\n\nMari nodded. \"I will.\"\n\nBelle smiled one last time and then pulled the door closed, leaving the three of us alone.\n\nMari checked her watch, turned to face Zofi, and apologized, \"Sorry I'm late. You know I wouldn't have minded if you two got started before me.\"\n\n\"Nah.\" Zofi shook her head. \"We actually got a lot of work done. And I've still got about an hour before I have to go.\"\n\nMari giggled and grabbed my ass. \"Plenty of time.\"\n\n****\n\n\"Hngh, hngh, hngh, hngh, hngh...\" I grunted rhythmically at a steady pace that matched my metronomic thrusts in and out of my girlfriend's super-comfy, super-wet pussy that fit my cock like a glove.\n\nI stood at the foot of my bed, holding Mari's meaty asscheeks in my hands with her legs wrapped around my waist. She lay stretched out on her back before me, but I couldn't see most of her lush naked body, covered as it was by Zofi's equally naked although skinnier body in a sixty-nine position. I couldn't actually see what Mari was doing save for the way she gripped Zofi's ass and wriggled her head, but from the way Zofi couldn't quite keep still and kept picking her head up to moan rapturously, I knew the busty Latina was doing an excellent job of cunnilingus.\n\nSpeaking of Zofi, as she approached her own orgasm she pretty much gave up trying to lick Mari's clit in return. The slender brunette pushed up until her arms were locked, which angled her torso forward and made her big breasts sway as she more or less humped Mari's face. Those delicious-looking melons called to my hands, and I reached out to fondle and squeeze them. Zofi stared lustfully up at me, her blue irises flashing. And a moment later she elevated herself higher to grab my head and sear my lips with a fierce kiss.\n\nZofi's tongue was still in my mouth when her climax detonated deep within. She shivered first, a pre-shock, but then abruptly lurched forward as if carried forward by the concussive shockwave of her nuclear explosion. The force of it snapped my head back a bit, but I held her body and stroked her spine all throughout her orgasm. And when her keening moans finally stopped and she dropped her forehead down onto my shoulder, I cradled the brunette beauty in my arms while redoubling my pumping motions into the lush Latina beneath her.\n\nMari gasped for oxygen once Zofi shifted forward to no longer smother the Mari's face with her crotch. Mari gasped again when I started pounding her harder, and after Zofi fully climbed off and shifted to the side, I was able to stare down into my girlfriend's face once more. She grinned at me, her lips, nose, and cheeks still glistening with girlcum. Zofi cuddled herself against my side, so I wrapped my left arm around her and cupped her firm breast in my palm. With my right hand, I reached down to thumb my girlfriend's love button, really working her little nub while she shrieked and whimpered and purred like a kitten.\n\nThat purring deepened at first as she coiled her muscles. I could feel her powerful legs contracting around my lower back. Her abs clenched as she tightened her pussy around me. And even her shoulders curled inward. It was as if her entire body was compressing, creating elastic potential energy and building it up to fuel a massive explosion.\n\nHer purring increased in pitch, reached a peak, and then dipped back down. A few moments later, it once again increased, this time accompanied by an increase in volume as well before descending once more. The rhythm of it was slow, much slower than my pumping, but it was unmistakably a pattern. \"rrrrrrRRRRRRRrrrrrrRRRRRR...\"\n\nUp and down... up and down... It took me a minute to realize the purring matched Mari's breathing, the way her humongous boobs rose and fell as her orgasm built and built and built inside her. I tried varying the intensity of my thumb on her clit, and she wriggled unhappily until I got back to my original pattern she apparently loved so much. And as her breathing pace shortened, so did the purring, and so did the way her entire body pulsed beneath me.\n\nClench... relax... Clench... relax... Clench... relax...\n\nNot just her pussy, but her entire body.\n\nClench. Relax. Clench. Relax. Clench. Relax.\n\nHer arms, legs, and stomach all tightened and then released.\n\nClench-Relax-Clench-Relax-Clench-Relax.\n\nShe was getting closer. I could feel it.\n\nClenchRelaxClenchRelaxClenchRelaxClenchRelaxClenchRelax--\n\n\"AAAAAHHHHHHHHHHHHHH!!!\" Mari howled as she came.\n\n\"AAAAAHHHHHHHHHHHHHH!!!\" she screamed again.\n\n\"AAAAAHHHHHHHHHHHHHH!!!\" she cried out one last time.\n\nAnd then she collapsed.\n\nShe almost made me cum, but not quite. I probably could've let loose and launched away, but I was focused on maximizing her pleasure as I pounded through her orgasm instead of relaxing and letting mine flow. So when Mari stopped shaking beneath me, I came to a stop too, panting for breath a bit before bending forward and smothering my face in her amazing breasts.\n\nMari started giggling and wrapped her arms around my head. She knew how much I loved her tits and she was happy to mash my face into them. But a moment later she squeezed her inner muscles around my still-hard shaft, and she looked down at me. \"Baby, you haven't cum yet?\"\n\nI shrugged and slurped a puffy nipple back into my mouth, suckling innocently.\n\nMari laughed and patted my back before looking up at our sexy companion, gesturing for her to come hither. \"Your turn. Lie down here.\"\n\n\"Oh, I'm good,\" Zofi replied immediately, holding up her hand. \"You guys have already given me two great orgasms.\"\n\n\"But he hasn't filled you up yet. He's been filling me up all the time this week. Alice told me how much you love girls slurping his creampies out of you.\"\n\nZofi blushed cutely. \"Well... uh... I do...\"\n\nMari rolled her eyes and slapped the mattress next to us. \"Then face down and ass up girl! That's an order! Gawd I love being in charge!\" she exclaimed quite happily.\n\nZofi laughed and assumed the position. I realized that I hadn't fucked Zofi from behind very often. She was much more of a missionary cuddler, and I knew I could get a lot better \"tribbing\" pressure on her clit with my pelvic bone that way. So I was pretty happy to get a rare treat, gazing at her skinny body bent over before me, and I quickly pulled out of Mari to settle myself behind Zofi's tight ass.\n\nMari wasn't idle, either. She scooted herself backward across my bed and then kicked a leg over the top of Zofi's prostrate head. That put her pussy within range of the brunette beauty's face, and Zofi was quick to take the hint and fasten her lips onto the Latina's luscious little love button.\n\nMoments later, I slammed forward, skewering Zofi's snug snatch in a single shove. The lissome brunette grunted from the forceful impact of a thick cock invading her tight twat, her moan muffled by Mari's moist muff. And she kept on moaning as I quickly took up a steady rhythm.\n\nI stopped myself before spanking her ass, though. Much as I might've enjoyed doing so with Sam or Naimh, something felt inherently... wrong... about blemishing Zofi's perfect creamy complexion. Plus, I knew she didn't get off on particularly violent sex the way some others did. Instead I settled into a measured cadence, long-dicking her to let her feel every inch smoothly sliding in and out of her sweet slice of heaven.\n\nMeanwhile, Mari stared at me rather proudly while watching me pump the pretty brunette between us, and she bit her lip while pressing Zofi's face a little deeper against her crotch. The nice thing about my deliberate pace was that despite how amazing it felt to be inside Zofi's pussy, I wasn't in any danger of popping off. For the moment at least, I felt like I could last forever, or at least last long enough for each girl to get one more orgasm.\n\nMari came first. She had cum the most already, actually, simmering in a sort of zone of lustful bliss all afternoon. Her body built for sex wasn't perfect just for me, but she had super-sensitive nipples and a clit hardwired to the pleasure centers of her brain. Zofi was both an experienced and enthusiastic rug muncher, and she munched on Mari's rug until my girlfriend threw her head back, shuddered, and squealed in ecstasy. And once she had satisfied one of her lovers, Zofi propped herself up on all fours and started banging her butt back at me to satisfy her other.\n\nBut as much as I enjoyed the increased tempo, I found myself wanting to look into Zofi's amazing eyes before I came. I stopped my thrusting and wrapped both arms around her midsection to hold her in place while raining kisses across her shoulder and upper arm. Zofi hummed happily and turned her face back to kiss me. But once we broke for air, I told her to turn around and lie down.\n\nThe lissome brunette happily withdrew and lay back next to Mari, her head supported on my pillows. I climbed over her in a missionary position, smoothly slid myself back inside, and together we scaled the final peaks of pleasure.\n\nMari took turns kissing first me and then Zofi, just sort of running her hands across both of us. It didn't take long for either of us. I hadn't cum since before the sixty-nine and my balls felt swollen to the size of grapefruits by now. Zofi was getting off on the idea of cuddling me close in this intimate position and watching the ecstasy she was able to give me with her body. Plus, I was finally able to grind my pelvic bone down on her clit in this position.\n\nI proceeded to pick up the pace, pumping her faster and pausing at full-depth to undulate my hips counterclockwise and really carve my dick around the inner walls of Zofi's canal. But it was the mental high of sex that ultimately did more for me than even the physical high, when my lesbian lover leaned forward and murmured into my ear. \"Fill me up, Matty. Fertilize my waiting womb.\"\n\n\"Oh shit, Zofi,\" I groaned, on the verge of release.\n\n\"I wanna feel your wriggling sperm swimming around my uterus. Fill me and make me dream of having your baby. C'mon, Matty! Knock me up. Drown me in your cum! Fill me! Fertilize me! Maaaaatttttyyy!!!\"\n\nZofi's orgasm finally gave me permission to have mine. I closed my eyes and envisioned millions of tiny tadpoles racing through my cock and swimming up through Zofi's fallopian tubes. Moments later, that vision became reality as I slammed forward one final time and blasted away. And I kept grunting and hunching and making my ugly-O face as I did my level best to literally fill up Zofi's womb with sperm.\n\nI collapsed atop my lover and she cooed into my ear how much she loved feeling herself so full. We cuddled together, basking in the bliss. I leaned down to nuzzle my nose against hers, and then tilted my head to softly press my li--\n\n\"You ARE on birth control, aren't you?\"\n\nMari's voice burst through our afterglow, startling both me and Zofi for a moment. We both laughed. Zofi grinned and replied, \"Yes, of course. This is just a little fantasy that we've been having lately.\"\n\nMari stared a little goggle-eyed at her. \"Most every teenage girl I know -- including me -- is TERRIFIED at the idea of getting knocked up. And you two are actually FANTASIZING it?\"\n\nZofi shrugged. \"People have different kinks. This is ours.\"\n\nMari shook her head in disbelief but drawled, \"Whatever floats your boat. Still, I hope your fantasy doesn't prevent me from slurping out every little sperm he just shot into you.\"\n\n\"Oh, not at all,\" Zofi confirmed while tapping my chest until I pulled out. \"I'm always happy to have one of you sucking out Matty's creampie. There's something that's so quintessentially 'BTC' about it. It's the ultimate in us girls sharing him, like that 'All for one and one for all thing' Neevie started.\"\n\nMari giggled before diving in. \"Totally.\" And then she started slurping.\n\n\"Just remember,\" Zofi added, \"it's slurping out the creampie AND snowballing some of it back to me that really seals the deal.\"\n\n\"Mm-hm!\" Mari agreed cheerfully without stopping.\n\nI just chuckled and shook my head in disbelief at the awesomeness of my life.\n\n****\n\nZofi cleaned herself up and got dressed while Mari and I remained in bed. She came over to kiss us both, said she'd see us at school tomorrow, and let herself out.\n\nThat left me and my girlfriend naked and cuddling together. Her spectacular body was just so plush and inviting that I couldn't help but hold her like a teddy bear against my chest. With our lust sated for the moment, we exchanged a few tender kisses but nothing overtly passionate. And after checking the clock, I sighed and asked how much longer she could stay.\n\nMari checked the clock as well, made a face, and then muttered regretfully, \"Only about twenty minutes.\"\n\n\"I wish I could keep you overnight. You make such a good cuddle partner.\"\n\n\"You probably could, actually,\" Mari replied quietly before looking up into my eyes, a touch of wariness in hers. \"But that would require keeping me more than just one overnight.\"\n\n\"What do you mean?\"\n\n\"I mean keeping me past this Sunday. Like... a real girlfriend. If you were my real boyfriend, and I introduced you to my parents and everything, they'd probably let me spend the night with you every now and again. Probably not on school nights, but maybe weekends the way Belle was doing... at least until you took away her key.\"\n\nI pursed my lips and looked away for a moment.\n\n\"Sorry. I know she's still a bit of a sore subject. She really does feel bad about it and wishes she could make it up to you.\"\n\n\"I know she does.\"\n\n\"And I'm sorry, I know I shouldn't be pressuring you at all about the whole 'real girlfriend' thing. Belle's already helped me talk through all that stuff. I mean, even if it wasn't for the other BTC girls, we're only four days into our new relationship. If I was dating some other guy, I would never be making unreasonable expectations about us lasting forever or accusing him of making up his mind early, and it's not fair of me to do those things to you.\"",
        "I nodded. \"Thank you for being understanding.\"\n\n\"We're in a unique situation, and we both agreed from the beginning that this was going to be a one-week vacation,\" she continued. \"Yeah, I got my hopes up a little bit that we might last beyond that and maybe turn into something permanent. But just because I let myself be carried away by that dream doesn't give me the right to get mad at you for thinking we were still having the one-week vacation. I should never have expected you to fall head over heels for me out of nowhere when you've never really shown yourself to have those kinds of feelings for me.\"\n\n\"In all fairness, you'd never really shown yourself to have those kinds of feelings for me either, at least up until Tahoe. Even then, you said you were on Team Belle.\"\n\n\"Well it still would've been nice to think you might have those kinds of feelings for me, or maybe wanted to pursue me but couldn't because of The Rule.\" She shrugged and gave me a dreamy smirk.\n\n\"Please don't think my lack of pursuit was a reflection on you. You're an amazing young woman and I cherish the time we spend together. But if you were really hoping this would be a week for us to discover if there could be something a little more special between us... well... your timing kinda sucks.\" I sighed. \"Maybe going first wasn't such a great idea. I'm still coming off this break-up with Neevie. I'm still coming off this thing where I took Belle's key away. I'm in this weird head space where I'm questioning my understanding of what love is, and I'm not in any shape to start a real relationship right now.\"\n\n\"You mean even if we stayed together, I'd just be your rebound girlfriend? Fair enough.\" Mari looked up at me and rubbed my chest. \"I get it. So in the meantime, like Belle said: I'm just gonna enjoy my vacation for what it is.\"\n\nI smiled and bent down to give her another quick kiss.\n\nWhen we parted, Mari sat up on the bed and twisted around to face me. The movement let her big unfettered breasts hang free, drawing my attention, and she waited patiently until I brought my gaze back up to her face. \"So changing the subject a bit, I'm curious: What's the deal with Zofi and the whole 'Fertilize me!' thing?\"\n\nI barked a short laugh. \"Uh, that's a long story in itself.\"\n\nMari checked the clock again. \"Gimme the CliffsNotes?\"\n\nI blinked and frowned. As far as I knew, Zofi had not outed herself to anyone else other than Sam and Alice, and it wasn't my place to reveal her secrets. But I settled for explaining, \"It just sort of happened. She's on birth control, of course, but I was about to cum and she started whispering in my ear about imagining I was going to knock her up. Like you said, most teenagers would be terrified, but it really turned us both on and I came really, really hard. So did she.\"\n\n\"Yeah, well, don't EVER say that to me in the middle of sex, understand? I do NOT want babies now, maybe not ever.\"\n\n\"Not ever?\" I cocked my head. \"I think you'd make a wonderful mother.\"\n\n\"Yeah well if I ever do that'll be YEARS from now. Like... after thirty.\" She started chuckling. \"Oh, man. My mom would have a heart attack if she heard me say that.\"\n\n\"Why? She wants you having kids sooner than later?\"\n\nMari looked at me seriously. \"My mom had me when she was MY age, and would've had more kids young if it weren't for medical problems. It wasn't even a really big deal when it happened; lots of people in my family have gotten married or had babies before they turned twenty. I know my own parents are expecting me to be married and start popping out kids pretty soon. If I'm not married and pregnant by like... twenty-five... it would be considered quite unusual.\"\n\nI raised my eyebrows. \"I can't imagine being married before twenty-five. And your parents actually WANT you married sooner than later?\"\n\nMari nodded. \"That's why I said they'd probably be fine with me sleeping overnight with you... if I could introduce you as my boyfriend, that is. You're my first, Matty. You're my first everything. The fact that I've gone this long without having a boyfriend worries my mom. She wants me out there, dating, finding a man who will take care of me. I've tried to tell her I don't need a man and intend to go to a top university, get a great job, and be quite self-sufficient thank you very much, but that's a completely foreign concept to her.\"\n\n\"What does your dad think?\"\n\nMari pursed her lips and looked down. She furrowed her eyebrows and fidgeted with her fingers. \"Dad blames himself for me getting raped. He feels like he failed as a father by not protecting me. To him, that trauma explains why I haven't been dating. He thinks I'm still a virgin (apart from the obvious), which again, is extremely unusual for my age. I know all my cousins, including a bunch of the younger ones, have already been... active. So again, IF I could introduce you as my boyfriend, he'd actually be pretty glad. It would mean I'd gotten over my experience and was finally getting back to 'normal'.\"\n\nI arched an eyebrow. \"Does your mom know?\"\n\nShe nodded. \"Yeah, but then she doesn't really understand how much it impacted me. I get the impression she got sexually harassed quite a bit growing up - she's got the same kind of body built for sex like me -- and she was able to handle it just fine and move on to have a normal life.\"\n\n\"That's not fair.\"\n\n\"No, it's not,\" Mari agreed quite emphatically, folding her arms over her chest and looking away for a moment.\n\nI took a deep breath. \"So what were you hoping? That you and I would fall in love, you could bring me home to meet your parents, they'd back off pressuring you to find a boyfriend and start on the path to becoming a teenage bride, and then you could just go off to college and not have to worry about them anymore?\"\n\nMari blushed and flashed me a smirk. \"Some girls dream of marrying a prince and moving into a big castle. I just wanna be able to live my own life without their expectations.\"\n\nI took another deep breath and exhaled. \"Look... I can't say with any certainty that my feelings for you are going to change this week from what they've already been. I care a great deal about you. It's really important to me that you continue to feel safe. But falling in love and becoming your steady boyfriend and all that? I really have no idea.\"\n\n\"That's okay. I've already accepted that.\"\n\n\"At the same time, I was thinking about Zofi.\"\n\nMari snorted. \"Typical. I'm buck naked with a guy staring at my tits and all he can think about is skinny little Zofi.\"\n\nI blinked and looked alarmed. \"I didn't mean--\"\n\n\"Relax,\" Mari laughed. \"That one, I'm just messing with you.\"\n\nI chuckled in and grinned. \"I'm not used to you teasing like that. You're usually the sincere one.\"\n\n\"Yeah, well, ask Belle sometime. She knows I have thoughts just as snarky and sarcastic as anyone's. Sam's not the only one who hides her true face behind a mask. But you were saying about Zofi?\"\n\n\"Oh, well...\" I had to take a moment to collect myself. \"What I was going to say is that as far as Zofi's parents are concerned, I'm her boyfriend. It hasn't significantly changed our actual relationship, and it's really just to get her parents off her back. What I was thinking was that maybe I could do the same for you and your parents.\"\n\n\"What? Introduce you to them, have them scrutinize you and give you the whole father-shotgun conversation and threaten you and your family should you ever mistreat me? I would never ask you to go through that for me.\"\n\nI shrugged. \"You don't need to ask; I'm offering. That is, if you want.\"\n\n\"And what happens if Zofi's parents and my parents ever got together and compared notes?\"\n\nI blinked. \"Uh, well I hadn't thought of that. But the chances seem pretty low. At worst, you can blame me for being a two-timing cheat, but at least until that happens -- IF that ever happens -- you get your mom off your back and your dad feels better AND maybe you and I can have some more overnights together.\"\n\nMari raised her eyebrows. \"You'd actually want more overnights with me? What if you fall in love with one of the other girls over the next few weeks? What if Neevie and you get back together?\"\n\n\"You're my Angel. Regardless of how I might ever feel about anyone else, I'd absolutely want more overnights with you. And we already know any of the other BTC girls I might be with would be perfectly happy to let you have occasional overnights with me.\"\n\nMari checked the clock again. \"I should probably get going. I'm gonna think about it though. Your offer is very... VERY appealing. And I'm touched you'd care enough to go through all that for me.\"\n\nI smiled. \"I do love you, Mariangel, and you're my girlfriend. Of COURSE I'd go through all that... for you.\"\n\nShe beamed at me and leaned in for a sweet kiss. \"I love you, too.\"\n\n****\n\nAlice was waiting for me and Belle at the parking lot on Thursday morning and came over to us as soon as we stepped onto the curb, although Mari wasn't with her today. So with no other girlfriend with \"dibs\" around, Alice was more than happy to wrap her arms around my neck and give me a searing kiss. Nobody paid us much attention.\n\nSam gave me a warm smile when I came in the door for our shared first period. At the end of class, she came over to me, looped her arm through my elbow, and we chatted happily on the way to Calculus for our second period. So far, the day had been going just like any other school day.\n\nThat all changed at recess.\n\nSam and I were walking arm-in-arm from Calculus to our usual lunch table to meet up with the BTC when a sudden commotion from off to our left drew our attention. The noise level escalated quickly, and at first I just looked over in puzzlement. But when a girl screamed, I immediately dropped Sam's hand and took off at a dead run.\n\nThe scream, you see, had been instantly familiar. I'd only heard that exact pitch and tone once before: the night I'd accidentally invaded Mari's virgin asshole and then complimented her on her body built for sex. She'd even started screaming the exact same words.\n\n\"Get off me! Get off me! GET OFF ME!!!\"\n\n****\n\n-- CHAPTER 40: Queen Mari --\n\n****\n\nPushing my way past bystanders at the periphery of whatever was going on, I briefly came to a wall of backpacks formed by the students who had circled around the commotion. \"OUT OF MY WAY!\" I roared, physically shoving people to the sides as I fought to get to the center.\n\n\"ALL STUDENTS! BACK UP!\" a male voice boomed in a tone of authority, accustomed to instant obedience. Some of those in my way separated and started backing off, which gave me an opening to dart through.\n\n\"Mari!\" I shouted as soon as I saw her, huddled on the ground. But she wasn't alone.\n\nShe was clutched together with a boy, both of them holding each other fiercely. It was Gerald. He had his left arm up to try and shield himself from the hammering fists of some punk I didn't immediately recognize. But before I could rush in to reach them, the punk looked around, realized his audience was bailing, and also noticed Mr. Cartwright, Physics teacher and our school's basketball coach, closing in.\n\nThe punk took off at a dead run.\n\n\"Hey! You! Freeze!\" Mr. Cartwright yelled, running after him.\n\nMost everyone else dispersed as well, but Mari and Gerald remained on the ground. I quickly approached them, with Gerald reflexively throwing up his left arm as a shield between us. But I blew right past him to kneel next to Mari, asking, \"Are you okay?\"\n\n\"Wh-wha?\" she blubbered, her eyes filled with water. She didn't recognize me at first and recoiled when I tried to hug her.\n\n\"It's me,\" I said hurriedly. \"You okay?\"\n\n\"Matty!\" Mari exclaimed through her tears, letting go of Gerald and burying her face in my chest. I held her tightly, stroked her spine, and tilted my head left and right inspecting her for scratches or bruises. There didn't seem to be any.\n\nSam was suddenly beside us, barking, \"Gerald, what happened?\"\n\nI turned my attention to the other boy. Gerald had the beginnings of a black eye and was cradling his ribs protectively. He looked at Sam blankly, perhaps still a little in shock himself. I turned back to Mari, my immediate focus on her while Sam repeated, \"What happened?\"\n\nJust then, Mr. Cartwright returned alone, having apparently not chased the punk very far. He was breathing hard and looking around left and right as if the kid would magically appear beside us, then approached and called out in his booming voice. \"Did anyone see what happened?\"\n\nHolly Thompson stepped forward, now with bubblegum pink hair, and explained, \"Asher Kipling. He was following Mari making rude comments about her tits. I was by my locker over there.\" She turned and pointed back down the hallway.\n\n\"Then what happened?\"\n\n\"I didn't see the rest,\" Holly said apologetically. \"I saw him talking to her as they passed, but by the time she started screaming there were too many people in the way.\"\n\n\"He grabbed my ass,\" Mari blubbered, still with her cheek pressed against my chest. \"I told him not to touch me. He wouldn't take 'no' for an answer.\"\n\n\"I heard the commotion and ran up to them,\" Gerald explained quietly, staring off into space a bit. \"He tried to say they were just talking, but I wasn't buying it and put myself between them. That's when he sucker punched me in the face and then kicked me in the side when I fell down.\"\n\nMari was crying again, reliving the experience. \"He jumped on me and started squeezing my breasts. I just kept yelling for him to get off me. Gerald managed to get himself between us again, and then you all showed up.\"\n\nMr. Cartwright nodded and then looked at me, asking gruffly, \"Who are you?\"\n\nI replied immediately, \"I'm her boyfriend.\"\n\n\"Were you here when it happened?\"\n\nI shook my head in the negative. \"Just got here.\"\n\nMr. Cartwright pursed his lips. \"Then you're not a witness. You gotta stay here. Everyone else, come with me.\" He turned and pointed to Holly as well, who sighed a bit reluctantly but nodded.\n\n\"No, please...\" Mari whimpered, clutching my chest. I could see the same terror in her eyes from the LAST time I'd heard her screaming 'Get off me' in that tone.\n\nI looked up at the teacher. \"Suspend me if you have to. I'm not leaving her.\"\n\nWith a weary sigh, Mr. Cartwright muttered, \"Fine, you can come too. But you're not a witness, so you don't get to talk, alright?\"\n\n\"That's fine,\" I agreed.\n\n\"Everyone else!\" He turned and addressed the crowd in a booming voice. \"Go to your third periods! You too, young lady,\" he added to Sam, who sighed but took a step back.\n\nA school security officer arrived just then. \"Mr. Cartwright, everything handled? Does anybody need medical attention?\"\n\n\"Gerald should get looked at,\" I pointed out.\n\n\"Can you walk?\" the officer asked him.\n\nGerald nodded.\n\n\"I need Miss Stuart to meet us at the Principal's office,\" the officer called into his radio, referring to the school nurse.\n\nThe teacher nodded and gestured for me, Mari, and Gerald to get up. Once Holly joined us, the six of us all marched away to the Principal's office, with Mr. Cartwright leading the way and the security officer in the rear.\n\nGerald kept sneaking glances at me and Mari. I felt bad for him. HE was the hero here, not me, but I still had the girl. He also walked stiffly, and I couldn't imagine the pain he was in.\n\nI scanned the other way and noticed Sam pacing us, watching with obvious concern. \"Hey, we're fine,\" I told her. \"Go tell the others what's going on.\"\n\nAt first, she looked like she didn't want to leave us. But a moment later, she nodded and turned back.\n\nI sighed. You couldn't say my life was ever boring.\n\n****\n\nGerald ended up having to go to the nurse's office after we explained everything to Principal Lancaster, and Alice later reported that the school called for an ambulance to take him to the hospital to get a more complete checkup. He'd gotten bruised ribs but nothing was broken, and the black eye would take weeks to go away.\n\nAsher Kipling had been retrieved from his third period classroom and held by school security. The word was that he tried to deny everything at first, and then melted under the Principal's grilling. He was lucky he was still seventeen and therefore a minor, but still got referred to Juvenile Justice for sexual assault. None of us ever saw him again.\n\nI was excused from third period but otherwise had to finish my school day. Mari spent the morning talking with the school counselor and missed lunch with us. And then in the afternoon she got pulled from her final period to also discuss the matter with a sexual assault counselor dispatched from the district office. The school also said it was trying to contact her parents but hadn't had any luck yet. Mari told everyone she was fine and just wanted everything over with, but both counselors said they would be checking in on her again in the future.\n\nAfter school, rather than go home immediately, the BTC banded together to get the full story, and Mari blamed herself.\n\n\"It was my fault,\" she muttered through moist eyes. \"I was so happy I was practically skipping down the hallway. It's been such a great week with my boyfriend, and after what we talked about yesterday, I started thinking that my life is really starting to come together. I guess I was just a little too bouncy and effervescent given this plunging V-neck sweater here, and I attracted the wrong kind of attention.\"\n\n\"Stop right there,\" Sam interjected rather sternly. \"This was NOT your fault. Being 'bouncy and effervescent' does NOT give a guy permission to grab your ass or tits.\"\n\n\"I know, I know,\" Mari whimpered. \"But at the same time I can't help but feel that he wouldn't have done it if my boobs hadn't been gyrating so much.\"\n\n\"This is NOT your fault,\" I repeated and squeezed her tightly since she was in my lap. \"I'm only sorry I wasn't there to defend you.\"\n\n\"Good thing Gerald was nearby, though,\" Belle pointed out.\n\n\"I agree,\" I stated. \"The guy is your hero.\"\n\nMari blushed and wouldn't look at me. \"I suppose,\" she mumbled.\n\nI chuckled at her expression. \"Relax, I'm not jealous about it.\"\n\nShe snuggled a little tighter. \"I told you: I LIKE you being jealous over me.\"\n\n\"Well, let's be clear here. You're MY girlfriend and I don't want you giving him a blowjob as a reward for defending your honor or anything like that. But I'm genuinely glad he was there.\"\n\n\"Fair enough.\" Mari snuggled closer to me and sighed. \"Seriously, I just wanna get OUT of here.\"\n\nI nodded and stroked her hair. \"Let's go.\"\n\n****\n\nThursday afternoons had always been spent at Belle's house, so rather than go into my place and wait for my girlfriend's arrival, Belle and I went straight to her place and spread our books out in her bedroom. Belle, as usual, took her desk. I sat on her bed, leaning back against the wall.\n\nThings still weren't back to normal yet between us, and probably wouldn't be until she got her key back. It was sort of a chicken or egg dilemma. What needed to happen first? It sort of felt like she needed to have the key back in order to relax and open up to me. But then I needed to feel like I could trust her in order to give her the key back. But how could I feel like I could trust her until she relaxed and opened up to me?\n\nIn the meantime, Belle and I continued to go through the motions, neither estranged nor completely comfortable around each other. I wasn't MAD at her, and we still talked. But it was clear to both of us that there was some work still to do. Unfortunately, neither of us knew exactly what work we should do. And in the end, that afternoon became a perfect example of just how strange our relationship had become.\n\nBelle and I did our homework in silence for about twenty minutes before Mari arrived. Once she did, my lusty Latina bombshell immediately started stripping off her clothes as she tackled me onto the bed. The adrenaline rush of the attack had fueled her arousal and received no outlet at school. I had worried that getting sexually assaulted at school would somehow make her withdraw inside herself and return to old traumas - like when she'd gone catatonic that night in January after I'd complimented her body built for sex and she'd promptly freaked out - and I'd mentally prepared myself for a long, drawn-out conversation to discuss what had happened and reassure her that we would support her in whatever way she needed. But Mari reacted in exactly the opposite way, demanding that Belle and I fuck the daylights out of her and wash away all memory of that punk's hands ever touching her body.",
        "\"As far as I'm concerned,\" Mari insisted, \"it happened, but I'm already over it. I want that guy forgotten and nobody's ever gonna bring him up again, alright?\"\n\nAlso forgotten, albeit temporarily, were any issues between me and Belle once we fell into the haze of sexual frenzy. We fucked Mari together. Mari and I fucked Belle together. And the two of them fucked me together. But after I blasted away inside Mari's sweet snatch and Matty's Little Cumslut slurped out the creampie, the three of us sprawled naked across Belle's room, with me slumped in the desk chair and the two BFF's on the bed, Belle using Mari's bosom as a pillow while idly suckling on a puffy nipple.\n\nEven though I'd been pounding my big dick in and out of Belle's tight twat only minutes earlier, as we came down from our orgasmic highs the awkwardness set in again. We cleaned ourselves up and tried to actually get some homework done. But as time went on, that awkwardness only grew, until it was thick enough to be palpable and made it nearly impossible for any of us to actually be productive.\n\n\"Okay, I've had enough of this,\" Mari finally announced out of the blue, slamming her book shut and tossing it on the floor. Belle rotated the desk chair back to face us, her eyebrows furrowed in confusion. I was once again seated on the bed beside my girlfriend, leaning back against the wall, and I too looked over at Mari not yet understanding what had caused her outburst.\n\n\"Had enough of what?\" I asked with an arched eyebrow.\n\n\"You. Belle. This... whatever this is,\" Mari explained. \"She wants her key back but she's not sure what she needs to do to convince you to give it back. You haven't made clear what you want from her to earn it back. Things are apparently chill enough that you don't mind having sex with each other. But at the same time things are bad enough that -I- can't study because you two are being all weird!\"\n\nBelle frowned. \"We're not being weird. I'm... I'm just giving Matty space.\"\n\nI shrugged. \"And I'm letting Belle decide what she really wants from me.\"\n\n\"No, you're both STALLING,\" Mari complained. Holding up her pencil, she flipped it and jabbed the eraser side at Belle, stating, \"You're just going through the motions, hoping he'll magically wake up one day, realize he misses you, and ask you to come back to him. Probably on a Saturday night when he's feeling lonely and maybe sees all the sexy lingerie you left in his closet and realizes he could have a horny hot little sexpot in his bed instead of sleeping alone.\"\n\nBelle blushed and tried to hold back a little smirk.\n\n\"And you,\" Mari continued while turning to point the eraser at me, \"are just going through the motions waiting for Belle to make some grand gesture of apology, swear that she'll never betray the BTC, and promise to love you forever as siblings-with-benefits.\"\n\nWell, she was right, and I blushed and bit my lip while staring down at my lap.\n\n\"So here's what's gonna happen,\" Mari sighed while packing up her binder and sliding off the bed to retrieve her tossed book. \"You two are gonna work this out right here and now. And by the end of the night, Matty, you're either gonna give her the key back or take it away forever. Period.\"\n\nI frowned. \"You can't dictate that kind of ultimatum.\"\n\n\"Of course I can. I'm 'Matty's Girlfriend' this week,\" she insisted while miming the air quotes. \"I'm the primary, which means I give the orders.\"\n\n\"It doesn't work like that.\" I laughed. \"I think you're letting the power trip go to your head a bit.\"\n\n\"Maybe.\" She shrugged. \"Doesn't mean I'm wrong about this, though.\"\n\nI frowned. \"You can't put a timeline on this. If I need another week or two, or a month, to give her the key back, then I need that time.\"\n\n\"No, you don't,\" Mari insisted. \"You either trust her, or you don't. There's no grand gesture that's gonna make everything all better. She's your Annabelle. She's always been your Annabelle. And yeah, she got a little crazy there for a bit, but that just shows how much she loves you, how important you are to her. That part's never gonna change. Have you forgiven her?\"\n\n\"Yes, of course.\"\n\nMari raised both eyebrows and leaned forward. \"Then forgive her.\" With that, Mari slammed the book into her backpack and zipped it closed.\n\n\"Hey, don't go,\" Belle pleaded once she realized Mari was prepping to leave. \"You're my best friend, you've had a really rough day, and we want to be here for you. I know I'd want you and Matty with me for company if some asshole ever grabbed my--\"\n\n\"Stop right there,\" Mari cut her off. \"Didn't I already tell you I wanted the whole thing forgotten?\"\n\n\"You can't just forget him,\" I reasoned. \"And even wild and crazy sex with us can't wash away what already happened. You need to take the time to talk to someone about it, and if not us then someone else you trust.\"\n\n\"Thanks for the lecture, Matty, but I have a little bit of experience dealing with this kind of trauma.\"\n\n\"Sorry, I didn't mean to condescend.\"\n\n\"No, I get it.\" Mari took a deep breath and sighed, looking at first me and then Belle. \"I promise that when the time is right, we can talk about this stuff. But right now, I just don't wanna deal with it, alright? Focusing on you two, focusing on your issues, actually gives me something else I'd rather think about. And rather than stay here reliving what happened at school, I'd honestly prefer to go home knowing you two are working it out, alright?\"\n\n\"Okay, not wanting to talk about it right now I can understand,\" Belle conceded. \"But this is your Girlfriend Week. You have such precious little time with Matty as it is. Matty and I don't have to do this right now, and if having the two of us together is making things awkward for you, I should be the one to leave. Or... well... the two of you can go to his house. We both know he's got a couple more rounds in him and you've got the whole afternoon to be alone with him. Tomorrow is Friday and the whole gang will be together and you'll have to share him.\"\n\nMari gave Belle a firm look. \"Some things are more important to me than sex. You're right: This is my Girlfriend Week, which means I call the shots. And as Matty's Girlfriend, I'm ordering the two of you to work this out.\"\n\nWith that, Mari leaned over and pecked Belle's cheek. She crawled onto the bed and gave me a longer kiss on the lips. And then looking back and forth between both of us, she added, \"If it makes you two feel better, I'll go visit Alice or Neevie for the rest of the afternoon so that I'm not alone.\"\n\nI nodded immediately. \"It would. It really would.\"\n\nMari nodded as well. \"I'll see you both at school tomorrow.\"\n\nAnd then she left.\n\n****\n\nAt least Belle and I were dressed. For some reason I felt like I kept having deep and heavy conversations with girls while they were naked and distracting. Sometimes I even had heavy conversations WHILE a girl was sitting on my dick. In this case, having Belle seated on her desk chair wearing shorts and a t-shirt kept any thoughts of sex at bay, allowing me to focus on nothing but our thoughts and feelings for each other.\n\nAt least, that was the idea. And yet, there was something inherently... wrong... about our current positioning. I didn't like the fact that she was on her desk chair while I reclined on her bed. It didn't feel... natural. And while I simmered on that niggling thought that made me feel moderately uncomfortable, I silently watched Belle likewise cross her legs beneath her on the chair, drop one elbow onto the armrest, and plant her chin on her palm while she scowled with the kind of expression she'd make if she'd just been informed the restaurant cooks had dropped her meal onto the floor and then watched a cockroach crawl over it before serving it to her, but only AFTER she'd already eaten half of it.\n\nNeither of us said anything for a long while. Part of me felt that it was her job to come groveling to me. After all, she was the one who had tried to betray the BTC. She was the one in the doghouse, which meant that it was HER responsibility to somehow make it up to me, right?\n\nBut the greater part of me agreed with Mari. I wanted this resolved, and wallowing in passive-aggressive self-pity wasn't going to help that process any. So with a sigh, I finally gestured with my arm, \"Come here, B.\"\n\nShe furrowed her eyebrows, looking confused, and didn't move.\n\nI extended my arm out to her and repeated, \"Come here.\"\n\nPuzzled but willing to play along, Belle got out of the chair and crawled onto the bed. I gently took hold of her arm and guided her to come sit next to me. And a moment later I tugged down on her shoulder until her head was pillowed on my chest while I reclined back against the wall.\n\nTaking a deep breath, I sighed. Back in our familiar positions from so many of our past conversations, I felt MUCH better. And from the way Belle sighed and wrapped both arms around me in a firm hug, she seemed to feel much better too.\n\n\"I'm so sorry,\" she apologized first. She didn't continue right away, and I didn't respond. She seemed to be gathering herself for what came next, and I was prepared to wait as long as would be necessary.\n\nBut she only waited for a minute before adding, \"I don't blame you for not liking me very much at the moment. To be honest, I don't like myself very much, either.\"\n\nI glanced down at her and stroked her hair. \"Why do you say that?\"\n\n\"I have self-esteem issues, alright? Every girl does. For me it gets amplified being such a little shorty who can barely fit your big dick inside me when you've got all these horny sluts just begging you to slam yourself up their unlubed assholes.\"\n\n\"Well I can't help you there; that's basic physics. All I can promise you is that my love for you is not based on how easily you can fit my dick up your ass. That's crazy talk.\"\n\n\"But it's a factor. I know it is. Everything's a factor.\"\n\nI pursed my lips. She wasn't necessarily wrong, but at the same time... \"There will always be someone else who's better at doing Thing A, and then there will be someone different who's better at doing Thing B. Sure, everything's a factor, but even if we try to sum up every aspect of a relationship in terms of things than span the length of the entire alphabet, the weight we apply to each of those individual things is different, and in the end it's the sum total of whatever complicated calculations you want to make that define how much we mean to each other.\"\n\nBelle looked up at me, a little perplexed. \"You lost me there for a minute.\"\n\n\"Yes, other girls can take my dick up their asses more easily than you. But do you REALLY think I base a girl's value solely on her ability to have anal sex with me at the drop of a hat?\"\n\nBelle shrugged. \"Seemed to be the predominant factor in your relationship with Neevie.\"\n\n\"And a factor that in and of itself was nowhere near sufficient to keep us together. Plus, I think Mari still has Neevie beat in that regard. You, on the other hand, I've always cherished having conversations like the one we're having now.\"\n\nShe made a face. \"These are 'best friend' conversations or 'little sister' conversations, not necessarily 'girlfriend' conversations.\"\n\n\"These are the kinds of conversations that keep two people together for the rest of their lives. When we're old and decrepit geriatrics who can't even think about anal sex without dislocating a hip, it's these conversations that will have the greatest weight on my alphabetical list of factors.\"\n\nShe looked up at me. \"What if I don't wanna wait until we're decrepit geriatrics before I get to be with you?\"\n\nI took a deep breath. \"Is being my girlfriend still what you want?\"\n\nBelle sighed and looked down. \"Which answer will get me the house key back?\"\n\n\"B...\"\n\nShe shrugged. \"The answer is no... and yes... and then no again... and then yes again. I'm not sure. My head says one thing, but my heart says another. I love you, Matty. I'm in love with you. One fight where you took away my key because you realized I was turning into an obsessive stalker doesn't change the core feelings I have inside. I LOVE you.\"\n\n\"And I love you.\"\n\n\"But not as a girlfriend.\"\n\nI took a deep breath, let my head fall back against the wall, and replied truthfully, \"I don't know, actually. You've never actually been my girlfriend, not yet at least. From the looks of it, you'll have to ro-sham-bo with Alice to go next.\"\n\nBelle stared up at me again. \"And if I won the ro-sham-bo, you'd give me an honest shot at being your girlfriend?\"\n\nI shrugged. \"Isn't that the whole point? To explore these feelings and figure out if we're compatible that way?\"\n\n\"Is that what you're doing with Mari? Is this what you call giving her an honest shot? Or are you doing what I think you're doing and just going through the motions until the week is over because you've already decided you're not meant to be with each other long-term?\"\n\nI frowned. \"I'm not 'going through the motions'. In a vacuum, Mari would make a great girlfriend. She's sweet, loyal, caring, great in bed, and today proves that she's more resilient than she looks. I've known her longer than any of the girls except for you, and I feel comfortable talking to her. But the timing is just really bad right now, and I honestly told her that I'm still emotionally wrecked from the breakup with Neevie AND this little awkward thing going on between me and you.\"\n\n\"So I should LET Alice go first to buy myself some more time so you can get your head on straight first. Maybe a no frills non-threatening sex-for-sex's sake week with Alice will help unclog the pipes and clear your brain.\"\n\nI mused on that. \"You're not wrong.\"\n\nBelle sighed and looked away. \"Or maybe I take Sam's advice and opt out entirely.\"\n\nI arched an eyebrow. \"Sam's advice?\"\n\nBelle shook her head slowly. \"She doesn't want to tempt herself any more than she's already tempted. She's dead set on burying her feelings for you and not dating you until after she's graduated college at the earliest. You know she's got her career goals and all that. So she already told me she's going to opt out of Neevie's little round robin tournament for your affections, and advised me to do the same.\"\n\nI blinked twice. \"When did she tell you all this?\"\n\n\"Immediately after Neevie came up with the plan. You know, when Sam and I slipped away while you were banging the other four. Then we came back just in time for Neevie's six-girl facial.\"\n\n\"Ah.\" I remembered their departure, but got so distracted by the end of the boycott and finally getting laid again that I hadn't paid much attention to it at the time or really thought about it since. \"Was that all you two talked about?\"\n\nBelle pursed her lips and looked away. \"Maybe I shouldn't say.\"\n\n\"C'mon, B. Open communication. You want to earn my trust back? It starts with not keeping secrets from me. If nothing else, I've always been open with you, and I already told you that it's gonna have to go both ways if I'm going to trust you again.\"\n\n\"You said you were going to be LESS open with me, actually.\"\n\n\"I said I wasn't going to spill every detail about my feelings for the other girls anymore because you get jealous way too easily. I'll still be open with stuff about myself and about my feelings for you, but that's only as long as you start being open with your feelings for me.\"\n\n\"I HAVE been open with my feelings for you. In fact, I feel like it's me admitting my feelings for you that's gotten me into trouble. Had I kept a lid on how much I'm in love with you, maybe you'd never know and I'd still have your house key.\"\n\n\"Wrong. You TRYING to keep a lid on your feelings is what got them all bottled up under too much pressure until they literally erupted and nearly destroyed everything.\"\n\nBelle's eyes narrowed as she swallowed that idea, decided she didn't like the taste, and promptly made that same dropped-meal-on-the-floor-cockroach face. But she didn't disagree with me. She buried her face into my chest, squeezed me a little harder, and sighed. \"Fine, I'll be more honest with you instead of trying to bury my emotions.\"\n\n\"Good.\"\n\n\"I've already started trying, alright? Admitting my self-esteem issues over not being able to physically satisfy you like the others. Admitting how much I love you and want to be with you forever. But Sam doesn't want me to get my hopes up only to be disappointed. She looks at us and says you're happy with the way things are, or at least the way things were before I tried to break the boycott. I felt taken for granted, but you felt like I was always dependably there for you, and you loved me for it.\"\n\n\"I did love you for it. You were my anchor. No matter what else was going on in my life, whether it was my infatuation with Neevie, my confusion over how to deal with Alice, even Sam's confusing two-tracked personality, I always believed I could count on you. I always trusted that you had my best interests at heart. And then one day all of a sudden, I realized you were just as selfish as everyone else, including me, and then that trust I had was gone.\" I took a deep breath and exhaled. \"It wasn't fair. I was holding you to a higher standard than I could meet myself.\"\n\n\"What are you talking about?\" Belle sat up straight. \"You are the LEAST selfish person I know!\"\n\n\"I'm a walking horndog eager to stick my dick into whichever one of you will let me.\"\n\nBelle rolled her eyes. \"You're a GUY; you're allowed to be a horndog. A truly selfish walking horndog would've stuck it into Holly when he had the chance, but you didn't because you love us. You're the ONLY guy in a club with six hot girls, and you're still the most selfless person in the group. How ELSE have you managed to keep all of us happy and in love with you at the same time?\"\n\nI blinked. \"Because I'm self-centered enough to dislike any of you being mad at me and wanna keep getting laid so I work super-duper hard to try and not piss any of you off?\"\n\nBelle giggled. \"I suppose that's one way of seeing it.\"\n\n\"Well how do YOU see it?\"\n\n\"I see you putting the needs of all six of us ahead of your own. You prioritize Mari's need to feel safe. You prioritize Sam's need to feel independent. You prioritize Alice's need to feel sexy while still being a video game nerd. You prioritize Zofi's need to take things at her own pace. And you prioritize Neevie's need to feel adored. You may couch it in terms of trying super-duper hard to not piss us off. I see it as you working super-duper hard to make each of us feel fulfilled. I see that you've BEEN prioritizing all of us for YEARS already, and we all love you for it.\"\n\n\"And what do YOU need?\"\n\nBelle pursed her lips. \"What do --I- need?\"\n\nI nodded. \"You didn't mention yourself.\"\n\n\"Well... I suppose what I need is...\" Her voice trailed off, and then blinking, she muttered a surprised, \"Huh.\"\n\nI waited her out a moment, and when she didn't continue, I finally prompted, \"You need what?\"\n\nShe turned and gave me a funny look. \"I guess what I need is to feel taken for granted.\"\n\nI arched an eyebrow. \"Huh? Weren't you just complaining about being taken for granted?\"\n\n\"Well when I stop and think about it, what makes me happiest, and more to the point: what makes me feel fulfilled... is being taken for granted by you. Being there for you, being your anchor... those were the best months of my life. I knew how important I was to you. I knew how much YOU needed ME. I guess what -I- need is... to feel needed.\"\n\nI looked down and stroked her hair, and then briefly kissed her forehead. \"I DO need you. I need my Annabelle.\"\n\n\"Then I'm here for you. Always. I promise.\"\n\nI smiled warmly at that.\n\nAnd then we kissed.\n\n****\n\n\"Well, well, well,\" Mr. K drawled from somewhere behind me.\n\nBelle gasped and broke her lips away from mine. She was still seated up on the kitchen counter, legs wrapped around my waist. At least we were fully-clothed and just making out with each other since dinner was done and the table set. We'd just lost track of time and somehow didn't even hear the garage door roll up or down.",
        "I turned around and took a step away from the counter, a stupid look on my face. \"Uh, sorry 'bout that.\"\n\n\"Hi, Daddy,\" Belle greeted her father, blushing pink.\n\nMr. K smirked, folded his arms, and leaned against the wall. \"How's it going, you two?\"\n\nI blinked, and with sudden inspiration, I stood up and smiled. \"We've been working through some stuff, but we figured it out.\"\n\nMr. K cracked up and stood up. \"That's a good one.\" He grinned and walked forward, giving me a pat on the back.\n\nA moment later, his good mood soured and his shoulders slumped as he eyed the dining table. \"Veggie burgers? Seriously?\"\n\n\"They're healthier for you,\" Belle pointed out.\n\n\"Healthier,\" Mr. K scoffed as if it were a dirty word.\n\nBelle and I exchanged smirks and went to join him at the table.\n\n****\n\n\"In or out?\" I gasped, moments from my imminent explosion.\n\nBelle's pale green eyes glittered in the morning light, holding my shoulders and staring deeply into my eyes as I took my pleasure from her wicked hot body and ultra-tight pussy. I was ramming her all the way down to full depth, my cockhead just barely kissing her cervix at the apex of each heavy thrust.\n\n\"In,\" she crooned. \"I want you leaking out into my panties all day so I can scrape up little globs of Matty cum and taste each drop whenever I need a pick me up.\"\n\n\"Ohhh... FUCK.\" The imagery set me off, and I slammed forward one final time to open up the firehose and baste her innards with my scalding seed. Belle giggled and held me tightly, reveling in the sensations as I humped and twitched and groaned until I'd completely spent myself inside her.\n\nFive minutes later my alarm clock went off, telling us it was time to get up for school. Only then did I finally pull out of her and flop onto my back while my little lover actually retrieved her panties and pulled them on to trap my spending deep inside.\n\nTwenty minutes after that, we were both dressed and ready to go. But just before we left my bedroom, I saw Belle looking longingly at my nightstand. More specifically, she was looking at the house key I'd never gotten around to attaching to my key ring and instead had left right next to the alarm clock for an entire week.\n\n\"Go ahead,\" I told her. \"You earned it.\"\n\nBelle whirled on me and promptly punched my upper arm. \"Matty! Don't make it sound like I just whored myself out to get a key.\"\n\n\"I'm sorry! I'm sorry! I didn't mean it like that!\" I squealed before wrapping her up in my arms and kissing her fiercely.\n\nShe settled down to return my liplock and finally sighed. I still held her feet off the floor when she muttered, \"You have NO idea how tempting it's been to just grab it and throw it into my pocket.\"\n\nI shrugged. \"If you had, it just would've proven I couldn't trust you.\"\n\nBatting her eyelashes, she asked me coyly, \"And you trust me now?\"\n\n\"Yes, I do,\" I confirmed. \"I love you, my Annabelle.\"\n\n\"I love you too, Matty.\" She kissed me again. And then she quickly squirmed free of my grip, darted over to the nightstand, and snatched up the key.\n\n\"Just don't give me any reason to take it back again, alright?\"\n\nBelle smiled broadly and nodded. \"I won't. I promise.\"\n\n****\n\n\"So as these final days as Matty's official girlfriend draw to a close, I've come to realize I haven't taken full advantage of the powers that come with my elevated station,\" Mari declared rather bombastically as she sat above us on the edge of the deck while the rest of us soaked in the hot tub. She waved her arms for emphasis, motions that drew my eyes to the way her big tits jiggled in a dark brown bikini with gold metal accents.\n\nWhile Mari continued waxing poetic, I leaned over and whispered to Sam, \"Does she know that being my girlfriend doesn't actually give her the right to bark orders to everyone else?\"\n\nSam shrugged. \"Apparently not, but I'm not gonna burst her bubble.\"\n\nI arched an eyebrow. \"You're letting her set a dangerous precedent for anyone else who gets to be my 'official girlfriend'.\" I actually mimed the air quotes, which drew my official girlfriend's notice and ire.\n\n\"Pay attention to your Queen!\" Mari commanded in a hilariously bad English accent.\n\n\"Oh, you're the Queen now?\" Sam scoffed.\n\n\"And if I'm the royal boyfriend,\" I queried, \"can you still give commands to me?\"\n\n\"Shut up, you're gonna like this one,\" Mari shot back quickly without a trace of the regal accent. With a grin, she waved theatrically and then reached to the gold metal hoop that connected the two halves of her bikini top together. And with the bad English accent back, she declared, \"By order of Matty's Girlfriend, all loyal BTC subjects must now remove their tops!\"\n\n\"She's right,\" I chuckled. \"I like this one.\"\n\nAmused, the other five girls giggled but obediently removed their bikini tops and tossed them up onto the deck. I was suddenly faced with twelve beautifully bare boobies, most of them obscured from view by the hot tub bubbles save for Mari's massive melons.\n\n\"Next! The royal boyfriend must sit up on the deck and remove his trunks so that all loyal BTC subjects may worship at his Altar of Towering Manhood with their mouths and supple breasts.\"\n\nZofi laughed. \"I think Mari's trying to convince Matty to keep her as his girlfriend.\"\n\n\"I think it's working,\" I agreed as I sat up on the edge of the hot tub and pulled off my swim trunks.\n\n\"Sam goes first,\" Mari stated imperiously, now sounding rather like recordings I'd heard of Queen Elizabeth II, come to think of it. She then gestured counterclockwise around the circular hot tub. \"And then Zofi, and Neevie, and so forth.\"\n\nFlashing me a smirk, Sam turned around to kneel on the submerged bench before me, took my growing erection in hand, and bent to take a quick suck before pulling back and trapping my mushroom head with her teeth for just a moment. I shivered and sighed at the sexy sight. A moment later, she hefted her big naked tits, elevated my erection between them, and started doing her cheerleader pom-pom thing with her boobs.\n\nI glanced over at Mari and laughed. \"Definitely working.\"\n\nAlice piped up. \"Wait, does this mean Mari's gonna orchestrate the whole orgy tonight?\"\n\nBelle shrugged. \"If we let her.\"\n\n\"Does this mean -I- get to orchestrate an entire Friday night orgy when it's my turn?\"\n\nNeevie giggled. \"If we let you.\"\n\nAlice pursed her lips and held her right fist over her mouth. \"Man, I'm gonna have to write all of my ideas down!\"\n\n****\n\nDespite being my supposed official girlfriend, Mari barely touched me for the next couple of hours. The others really did let her orchestrate the orgy, and perhaps the \"All for one, and one for all\" concept had really taken root, because Mari was very much focused on the good of the collective instead of on herself.\n\nUnder \"Queen Mari's\" benevolent rule, all six girls gave me blowjobs and titfucks. Belle didn't quite have the volume but she still mashed her perky tits around my cockflesh and trapped my shaft within her cleavage with both hands. The mental high and the visual more than made up for any physical shortcomings. Mari herself went next but only played with me for a little bit before passing me off to Naimh.\n\nSpeaking of my ex-girlfriend, she kept her promise to not make me worry whether or not she was going to mount me. Actually, as the night wore on I found myself wishing she actually WOULD mount me and just get it over with. The more comfortable we became around each other, the easier it was to forget any angst about our recent breakup, replaced with eager anticipation for our \"first time for the second time\". The sex was just too GOOD for me to not want it back. In the meantime, I had to content myself with the obvious heat in her emerald-green irises as she stared up at me with a mouthful of Matty-meat, her red lips stretched wide around my girth bobbing up and down, never breaking eye-contact, communicating her incredible lust for me with her eyes.\n\nAfter everyone had their turn, Mari asked if Alice had ever had hot tub sex before. So of course after getting a negative reply, she quickly ordered the horny Korean babe to bend over the edge of the tub and prepare to be mounted like a dog. Of course, being The Queen, she also ordered Alice to bend over with her face in Mari's crotch. Convenient, that. And my girlfriend and I double-teamed the eager Asian cutie from both ends.\n\nNor were the others spared Queen Mari's directives. Sam and Zofi naturally started making out, but Mari waggled her finger in a 'nuh-uh-uh' gesture, saying, \"You two are ALWAYS hooking up. Zofi goes with Belle and Sam can go with Neevie.\"\n\nThe four girls looked at each other, shrugged, and switched places. I was still banging away at Alice's behind when my Annabelle's head started wriggling in Zofi's crotch right next to me on my right side while Sam and Naimh started making out to my left.\n\nAlice was horny enough to cum first, and then Mari arranged for Naimh to come sit on the deck beside her, put Sam's face in the redhead's crotch, and have me plow into Sam from behind. I wasn't about to complain. I'd had few enough opportunities to pound into Aphrodite herself, the platinum-blonde beauty looking amazingly sexy with my big dick splitting the cheeks of her bubble butt. Watching my gorgeous ex-girlfriend naked and moaning rapturously while Aphrodite ate her out right in front of me was just icing on the cake.\n\nBelle was next, then Zofi, and after fucking all four of them I was ready to blow. Mari called for Belle to park herself in front of my waving dick and gape open her mouth. I pretty much shot my sperm everywhere on Belle's pretty face EXCEPT for her mouth, much to my cumslut's chagrin. But Zofi was more than happy to lick up everything she could reach and snowball it back to Belle on her slippery tongue.\n\nAfter that, we all dried off and headed back into the house, and that's when things REALLY started to get wild.\n\nFirst off, Sam brought a new toy. After Queen Mari directed Alice and Belle to team up and give me a reviving blowjob, I wound up flat on my back across the big couch with Belle riding my dick and Alice riding my face while my two best friends made loud and wet smacking sounds as they made out with each other. Meanwhile, I heard an ecstatic girl's voice moaning, \"Fuck me, Matty! Fuck me!\"\n\nThe words in and of themselves made perfect sense. What DIDN'T make sense was that I identified the speaker's voice as Sam's... who quite obviously was not being fucked by me. Initially, I didn't think a whole lot of it. Belle's exquisitely snug vaginal chute squeezed and caressed my cock every inch that she rose up and down. And I was pretty focused on pleasuring my buddy Alice as she gyrated her crotch on top of my face.\n\nBut then Sam started grunting, \"Soooo deeeeep... You're so fucking DEEP, Matty!\"\n\nCuriosity got the best of me, and I pushed Alice's butt off my face and craned my head around to the source of Sam's squealing.\n\nSure enough, the busty blonde bombshell was curled up in the armchair, her ass at the front edge of the cushion and her legs up in the air while a thick phallus plunged in and out of her juicing slit. What surprised the hell out of me was that Zofi was doing the fucking, wearing what looked like a strap-on dildo, with Sam's legs hooked over her shoulders as she folded her best friend in half beneath her thrusting body.\n\n\"Ummm... THAT'S new,\" I commented with wide eyes.\n\nBelle was halfway into a trance as she undulated around my invading pole that felt like it was halfway up the length of her petite body, rearranging her organs on the way. She groaned gutturally but followed my gaze. And with a dreamy smirk she drawled, \"Oh, that? When Sam gave me her Matty-sized dildo to practice deep-throating, she told me she'd found something better. That strap-on was it.\"\n\nQueen Mari was seated in the loveseat with her legs spread apart and Naimh's coppery head wriggling in her crotch. Through heavy-lidded eyes, my girlfriend moaned, \"I call 'next' to use the strap-on!\"\n\nZofi paused her fucking long enough to laugh. \"It takes some getting used to. Fucking is pretty instinctive, but I think you need a Y-chromosome to automatically know how to thrust.\"\n\nMari shook her head like Zofi didn't understand. \"Not what I meant. You can do the fucking. I wanna know how Matty Junior compares to the real thing.\"\n\n\"It doesn't compare,\" Sam sighed. \"The size is a close match, but there's nothing quite like the real deal. Still, it comes in handy. And I like the Matty Junior name.\"\n\nWith that, Sam gestured for Zofi to back out and go fuck Mari instead. I kept my head up just long enough for Naimh to move out of the way and watch my girlfriend's eyes roll up into her head as she lolled out her tongue and moaned while the strap-on dildo filled her up. That's when Alice looked down between her legs and grabbed my chin. \"Hey there, remember me?\"\n\nI chuckled, set my head back down, and yanked her pussy back onto my mouth. The night was still young.\n\nSo of course everyone had to get fucked by Matty Junior that night. During the downtime after I finally spurted into... Shit, you know what? I don't even remember which girl I came in. You see, the girls wanted to get fucked by Matty Junior AND by the real Matty in close succession so they could have a better standard of comparison. So I wound up playing Russian Roulette with five of the girls (everyone but Naimh), either right before or right after they got fucked by the strap-on. Queen Mari kept things organized, telling me to stick my cock into one girl or another every few minutes while either Zofi or Sam did the honors of wielding Matty Junior.\n\nAnyway, during the downtime after my second ejaculation of the night, the girls compared notes and agreed with Sam's assessment that there was nothing quite like the real deal. Belle said it best: \"Physical pleasure is fun, but the feel of the one great love of my life holding me in his arms and gazing into my eyes while he pounds the shit out of me just can't be replicated by a rubber dick.\"\n\n\"Yeah, well, for now I'm gonna have to make do with what I got,\" Naimh groaned, getting currently fucked by Sam wearing the strap-on. She added, \"And you're gorgeous, Sam, but having you hold me isn't the same as having him holding me.\"\n\n\"You'll get no argument from me,\" the blonde grunted while continuing to thrust away. \"Just hurry up and get your 'first time for the second time'. He keeps staring at you hard enough that I really don't think you'll have to wait any longer.\"\n\nMy ex-girlfriend smiled at me. \"Not like this. Deep down I know he's a romantic softie. He kept asking if WE wanted some grand special date for our first time, but I'm pretty sure HE'S the one who wants to make it special.\"\n\nHer comment hit pretty close to home, and I looked away while the rose coloration rose in my cheeks.\n\nIn any case, after a suitable rest period, I started to think about Round 3. And that's when Sam stood up, looking freakishly hot and scary at the same time with her gorgeous face, voluptuously curved 36DD rack, and a massive fake schlong strapped to her crotch.\n\nThe wickedly hot blonde unbuckled the contraption and handed it off to Zofi, her eyes intense as she stared at me with an amber fire. And in a sensuously husky voice, she announced, \"I want both Matty and Matty Junior in me at the same time.\"\n\n****\n\nMari was the last one to leave the house at the end of the night. She gave me a soul-tingling kiss, murmured, \"I'm gonna miss you tonight.\"\n\n\"I'm gonna miss you.\"\n\nShe gave me a shy smile and then looked past my ear. Belle was seated on the stairs three steps up, her chin in her hands and smiling at us. Looking back at me, Mari added, \"At least I know you're in good hands. I'm so glad you gave her back the key.\"\n\n\"Thanks to you. Forcing us to stop stalling yesterday is what made it happen. You're a good bestie. A lesser friend might've let Belle twist in the wind while you moved in to capture my attention instead.\"\n\n\"Team Belle,\" Mari said with a smile and pumped her right fist. But there was a sadness in her eyes as she said it. It was as if she realized she was closing her own window of opportunity. But after a deep breath, she stood up straight and said brightly, \"Are we still on for tomorrow night?\"\n\n\"Absolutely, as long as you're sure it's what you want.\"\n\nShe nodded. \"It's what I want, as long as you're sure.\"\n\nI laughed and patted her back. \"Of course I am. Don't sweat it.\"\n\nMari gave me a thankful smile and then kissed me again. \"I love you, Matty.\"\n\nI blinked and brushed her bangs back from her eyes. And with honest sincerity I was able to reply, \"I love you too, Angel.\"\n\nWe kissed one last time, and then she departed. I closed the door and turned around. Belle stood up atop that third step and then slowly leaned forward until she literally fell into my arms. I helped her wrap her legs around my waist and we started making out a bit. But then I broke the kiss so I could see where I was going and not snap our necks as I ascended the stairs.\n\nOnce in my room I kicked the door closed behind us and carried my little lover to my bed. We sat up against the headboard, my left arm wrapped around her petite body while she set her head down against my chest.\n\n\"So...\" she began slowly. \"THAT just happened.\"\n\nI blinked and looked down at her. \"What do you mean?\"\n\n\"Just thinking of this afternoon's orgy.\"\n\n\"Ah. Well, I figured it wouldn't be the movie, because that was pretty forgettable.\" When Belle shrugged noncommittally, I added, \"Which part of the orgy? Sam bringing a strap-on?\"\n\n\"Mmm-hmm...\" she mumbled, staring off into space. And without bringing her focus back to the world, she added, \"And that double-penetration at the end. That was... intense.\"\n\n\"Unforgettable?\"\n\n\"I wanna see it again. In greater detail.\"\n\nI laughed. \"Yeah, me too.\"\n\nThat got Belle to turn and face me. \"What, you didn't have enough details while you were balls-deep up Sam's ass?\"\n\nI blinked. \"It was a little overwhelming at the time. Everything felt like it was happening so fast. Plus, I felt a little trapped there in the armchair.\"\n\n\"You looked pretty happy with a gorgeous blonde's anus impaled on your dick, reclining back against your chest while you hugged her from behind and played with her big titties, watching over Sam's shoulder as Zofi pumped in and out of her pussy on the other side.\"\n\nI shrugged. \"Like I said, I felt a little trapped. I could barely pump in and out of her with the springiness of the cushion. Next time I'll wanna be on top to do the thrusting. Or maybe if I was flat across a bed I could at least plant my feet and fuck upwards.\"\n\n\"How did it feel inside her?\"\n\n\"A little weird, actually. I'm not used to feeling a blunt object rubbing my cock from the other side of a flexible wall while INSIDE a girl's asshole.\"\n\nBelle giggled and snuggled closer.\n\n\"But overall yeah... it was pretty incredible.\"\n\n\"You wanna do it again?\"\n\n\"Of course.\"\n\nBelle shivered and slid her hand into my pajama pants. I hadn't cum since filling Sam's ass this afternoon before dinner, and just thinking about it again had me growing rapidly.\n\n\"You imagining Sam getting double-penetrated?\" I asked quietly. \"Or imagining you getting double-penetrated?\"\n\n\"Me,\" she breathed, tightening her grip around my cock and beginning to stroke it.\n\n\"I don't know that we'll ever fit both me AND Matty Junior inside you. You've got... diameter issues.\"\n\n\"A girl can still dream,\" she panted before letting go of my dick and squirming out of her shorts. Shortly after that she was slowly sinking her pussy down around my dick. A minute later she finally landed all the way down in my lap. And with touchdown, she leaned forward and crammed her tongue into my mouth.\n\nFive minutes later, Belle husked into my ear, \"Stick your finger in my ass.\"",
        "She screamed so loud when she came I'm surprised I didn't go deaf.\n\n****\n\nClosing my eyes and taking a deep breath, I collected myself before reaching out and pressing the doorbell. Having already done this once before, you'd think I wouldn't have butterflies in my stomach, but I still did.\n\nI'd already been to Mari's house a few times, to pick her up for the Tahoe trip and then short daytime visits over winter break. But I'd never actually met her parents since they'd merely waved to us from the front porch for the Tahoe thing and then been out of the house for the rest of the visits. I already knew the basics about what they did for a living and the relatives that lived nearby like the younger cousin Mari carpooled with to and from school. We got our stories straight, answering truthfully that we'd been friends for years but only recently developed stronger feelings for each other. No mention would ever be made about me being a part of the BTC. As far as all the parents were concerned, the BTC was a girls-only club (and of course, NONE of them knew what the acronym stood for).\n\n'You got this,' I told myself. 'You got this.'\n\nA moment later, the door opened, I got my first good look at Mari's dad, and I stood up straight in surprise. I don't know exactly what I was expecting -- maybe Edward James Olmos from Stand and Deliver or something -- but this guy wasn't it. Based on Mari's math, he must've been in his late thirties and could have passed for early thirties. He was a good-looking man who wore a rock band t-shirt and had longish hair down to his shoulders. He looked less like a \"dad\" and more like an \"older guy\" I could've imagined hanging out with.\n\nOn the other hand, he still WAS a \"dad\" and he stared at me like a father who suspected I was banging his daughter. He was shorter than me, but still in obviously good shape and built like a linebacker. I got the impression he could squeeze my head as flat as a pancake if he were so inclined. I gulped and immediately looked intimidated, which seemed to please him from what I interpreted as a wicked gleam in his eyes. But I took a deep breath, extended my hand, and said formally, \"Pleased to meet you, Mr. Hernandez. My name is Matt.\"\n\nHe shook my hand, smiled, and silently took a step back while gesturing me into his home.\n\nA woman who was basically Mari's spitting image stood just inside the hallway, and my eyes bugged out for a moment at their similarities. She would be about thirty-six now and definitely was a hot young MILF at that. I had to force myself not to gawk at her impressive cleavage in a daring V-necked sweater and tight jeans that showed off her ass. And when I greeted politely, \"Pleased to meet you, Mrs. Hernandez,\" and extended my hand for a shake, she bypassed the hand and instead came straight over to give me a tight hug.\n\n'Oh, shit,' I thought to myself, my eyes bugging out a bit. My body had betrayed me and developed a massive erection in my pants, and from the way Mari's mom lightly rubbed her belly against it, there was no way I could pretend she hadn't noticed.\n\nMari's mom's eyes glittered as she took a step back and smirked at me knowingly, although she thankfully didn't comment one way or another. Instead, she greeted in a perky voice with a thick accent, \"I'm VERY happy to finally meet Mariangel's boyfriend. We are so thrilled you could come join us! Please... come sit. Dinner is almost ready.\"\n\nMari herself was in the living room, blushing pink and looking even more nervous than I felt. When I walked in she stood up, came to greet me, and we exchanged an awkward hug. Her eyes kept darting over her shoulder to her dad quite apprehensively, and her anxiety fueled mine.\n\n'Oh, this is gonna be a disaster,' I groaned inwardly.\n\nThankfully, though, I was wrong.\n\n****\n\nTwo and a half hours later, I walked out the front door of the Hernandez house holding Mari's hand. I led her to the minivan, chivalrously let her into the passenger side, and then walked around to the driver's door.\n\nOnce we were both seated, Mari's eyes and mine met, and we both let out a burst of air as we simultaneously sighed in relief.\n\n\"Well THAT went well,\" Mari said brightly.\n\nI shook my head in mild disbelief. \"Well, I can think of a dozen times where I totally screwed up. And your father barely said a word! Now maybe girls like the strong, silent type, but for a prospective boyfriend, he's absolutely terrifying. I'm still convinced he's gonna beat me to a pulp the next time he sees me.\"\n\n\"ReLAX,\" she assured me. \"If my dad didn't like you, do you really think I'd be sitting in the van right now with an overnight bag?\"\n\n\"Good point. I think I should get the van started and get us out of here before your parents change their mind.\" I suited action to my words by turning the ignition and then pulling us away from the curb.\n\nOnce we were safely on the road though, neither of us immediately re-started the conversation. Mari was staring thoughtfully out the window, and I didn't feel like interrupting her. But after a few minutes of silence, she caught me looking at her and gave me a wan smile.\n\n\"Whatcha thinking?\" I asked gently.\n\nMari shook her head slowly. \"I was thinking that in a sense, I actually got my wish. We're official now as far as my parents are concerned, like really, really official. So technically, I get to still be your girlfriend beyond tomorrow.\"\n\nI mused on that. \"I suppose you're right.\"\n\nShe waved me off. \"But at the same time, we both know you're not really my boyfriend. Actually, you now have TWO official girlfriends who aren't really your girlfriends. After mine and Zofi's, maybe you should visit the rest of the BTC's parents too.\"\n\n\"No thank you.\" I shook my head although kept my focus on the road. \"Tonight was terrifying enough.\"\n\n\"C'mon. It wasn't that bad, was it?\"\n\nI shrugged. \"Your mom's cooking was really good. And she's very... bubbly. And direct. She certainly knows what she wants and goes after it.\"\n\nMari chuckled. \"She's certainly much more outgoing than me. I think I take after my dad in that respect.\"\n\nI shook my head. \"You're a little of both of them. You can be shy and reserved around strangers, but Queen Mari from last night is a direct descendant of your mom.\"\n\nMari laughed at that. \"I suppose. Of course, reminding me about Queen Mari reminds me of something else.\"\n\n\"Oh, what's that?\"\n\nMari glanced over at me, her eyes glittering. It was quite fortunate that we came to a stoplight just then, because what she said next would've made me crash.\n\n\"I had Belle go and borrow Matty Junior for tonight.\"\n\n****\n\n\"That is REALLY weird to watch,\" I muttered wide-eyed as my girlfriend slowly sank herself down onto the thick phallus that WASN'T my dick. I wasn't jealous or anything, not of an inanimate object, and the BTC consensus that Matty Junior couldn't compare to the real thing reassured me I wouldn't be out of a job anytime soon. But still, it was quite surreal to watch Mari mounted atop the strap-on dildo while Belle laid back across the bed before me.\n\n\"How's it feel?\" Belle asked from below.\n\nAt full-depth, Mari shrugged. \"Feels like there's a fake cock inside me. It's not warm or throbbing like you, Matty. Actually, how's it feel for you, B?\"\n\n\"Weird. Like really weird,\" Belle replied. There's nothing in my pussy, so it just feels like you're sitting on my lap, y'know? There's nothing stimulating about this on my end except the visual. Fuck yourself up and down a bit. Lemme see your titties bounce.\"\n\n\"You mean like this?\" my lovely Latina asked, humping herself on Matty Junior a few inches at a time.\n\nThe motion did indeed make Mari's puppies dance, and Belle giggled. \"I think I get the appeal. It's so different to see a girl doing that motion from this angle. I mean, I've seen you humping up and down Matty while I'm on his face, but from down here they're so much... jigglier.\"\n\nMari laughed. \"Well how about if I do this?\" She bent forward and mashed her massive melons against Belle's face and even grabbed the sides of her titflesh to squeeze them tighter. At the same time, she humped herself up and down again, making her whole body writhe and wriggle.\n\nBelle just raised both arms and legs, her helpless squeaking muffled by Mari's mammaries until she managed to shove her bestie's body up a few inches so she could breathe. Belle promptly cracked up laughing and then slapped Mari's tits from both sides with her hands.\n\nMari sat up and shrugged at me. \"Don't worry, Matty. I don't think you have to worry about us replacing you anytime soon. Trying to ride this thing just feels so... lifeless. I mean, maybe if Belle was on top and fucking me but... ehhh.\"\n\nI grinned and replied, \"I wasn't worried. Anyway, riding Matty Junior wasn't the point of this exercise, was it?\"\n\n\"Nuh-uh,\" my girlfriend intoned in a deep voice. \"I got plans for you.\"\n\nMari bent forward over Belle's body again, draping her tits onto her BFF's face but not quite smothering her. At the same time, she reached back with both hands and pulled on her own asscheeks, separating them apart in an obvious invitation for what she wanted me to do.\n\nUp to this point I'd been sitting up against the headboard, as naked as the girls but otherwise not involved. Well that's not quite true, Belle was stroking my dick with her right hand, really just playing with her favorite toy more than trying to get me off. I sat up straight and prepared to slip off the bed, but Belle reached out and grabbed my leg.\n\n\"Hang on a sec,\" she muttered. \"I wanna try something while we're still in this position.\"\n\nI shrugged. \"What's that?\"\n\n\"Uh, kneel behind me right there.\" She tapped the mattress about a foot past her head for emphasis while grabbing a pillow and tucking in underneath her neck. \"I wanna see how much of your dick I can get into my mouth from this angle.\"\n\nI glanced up at Mari, who shrugged and gestured for me to go ahead. She wasn't in any great hurry to get her DP. So I rolled upright and knee-walked over behind Belle's head. Her body was laid out directly in front of me, still with Mari mounted on Matty Junior at the end. But with the pillow beneath her neck, her face was tilted upside-down, almost the same as when Sam hung her head off the edge of the mattress. And with a 'here goes nothing' shrug, I grabbed hold of my own cock to feed it into her gaping mouth.\n\nBut just before I could, Belle closed her mouth and laughed. \"It is REALLY weird to see your balls from this angle. They're really funny looking.\"\n\nI rolled my eyes. \"You wanna do this or not?\"\n\nBelle grinned and then silently gaped her mouth wide open. At the same time, she reached up with both hands to grab my ass and tug me downward.\n\nMy mushroom head had to squeeze to pop through her small mouth. Her lips stretched to fit around my thick shaft, and I could feel Belle thrusting her chin upward to adjust my angle of entry as I pushed deeper into her mouth and right up to the entrance of her throat.\n\nShe freaked out for a second and started tugging upwards on my ass, so I quickly withdrew all the way out.\n\nBelle gasped and coughed once, but she held her index finger straight up, forestalling my apology. \"My fault. I wasn't expecting you to hit that so soon.\" After taking a few deep breaths, she tugged me back down and mumbled, \"Try again.\"\n\nI checked with Mari once more. She was sort of lazily gyrating herself around Matty Junior, enough to stimulate herself without disturbing Belle too much. And then I stared down again at Belle's upside-down face gaping open as I pushed inch after inch of my dick into her mouth.\n\nThis time, she managed to relax her throat and start taking a few inches inside. I kept my pace steady, careful not to drop my weight down and gag her. She metered my depth with her hands on my ass, tugging when she wanted me to advance and pushing when she wanted me to pull back.\n\nThree times I slowly penetrated my little Annabelle's throat and then pulled out, getting a little deeper each time. The third time I actually felt my balls come to rest on top of her face, although she still had a couple of inches of dick to go. But that was as far as she could take me, and she wasn't about to force herself to the point of vomiting. So with a final push she pressed me away until I pulled all the way out and sat back on my heels. And once she caught her breath, Belle gave me a giddy smile and proclaimed, \"That was pretty cool!\"\n\n\"I call 'next',\" Mari announced with a grin. \"I never even THOUGHT of trying it at that angle.\"\n\nBelle waggled her finger and narrowed her eyes. \"Not tonight. Miss Body Built For Sex ain't gonna deep-throat him all the way five seconds after I couldn't get him all down.\"\n\nMari laughed and shook her head. \"Fair enough. C'mon, Matty. My poor little asshole is lonely.\" She bent forward and repeated her spreading cheeks pose.\n\nI glanced down at Belle, making sure she was done with me. My impish pixie winked and head-nodded me over to her friend. So I slid off the bed and circled around behind my buxom girlfriend with the bubble butt.\n\nMari waggled her ass at me invitingly, but rather than notch myself at her sphincter and slam it in, I reached down to grab hold of her hips and lift her up and off Matty Junior. She looked back at me in surprise, but a second later she had to toss her head up and scream as I swiftly replaced the fake dick with the real thing. I went from zero to sixty in two seconds, my big prick pounding in and out of her pussy really hard and pounding in and out of it really fast, to the point that she had to brace her forearms on the mattress to either side of Belle's body lest she smother her best friend beneath her boobs again.\n\n\"Play with her tits. Suck on her nipples,\" I told Belle.\n\nMy strawberry-blonde pixie grinned and did as ordered. Her pale green eyes flashed as she watched her BFF moaning and groaning from inches away while I hammered her BFF from behind.\n\n\"Bite down on them actually,\" I reminded. Mari whimpered and squealed when Belle's teeth came out to play.\n\nReaching an arm around, I found my girlfriend's clit and bracketed it between two fingers. I rubbed her hard and I rubbed her fast, never letting up on my pounding. She'd gotten herself warmed up riding Matty Junior and watching Belle try to accomplish the reversed vertical deep-throat, and it didn't take long for me and Belle to finish the job.\n\n\"FUCK! FUCK! FUCK!\" she cursed, rapidly reaching the point of no return. \"Oh, bite me, Belle! Bite my fucking nipples. Harder, Matty, harder! You two are gonna make me C-C-CCCCCUUUUUUUUMMMM!!!\"\n\nMari tossed her head, sending her dark brown hair flying. She howled with a gaping open mouth and arched her back, cramming her tits into Belle's face beneath her. I felt her snatch spasming in a series of squeezing ripples that radiated outward from the center of her body, her climax growing while she continued glowing with ecstatic bliss.\n\nWhen her orgasm passed, Mari wobbled on unsteady knees. I pulled out of her pussy and reached beneath her for Matty Junior. The dildo felt strange in my hand but I only had to hold it for a second, keeping it upright before slotting Mari in place and then shoving her body down. My girlfriend groaned as she was suddenly re-filled with thick cock, even if it wasn't mine.\n\nThen she SCREAMED when her ass was suddenly filled with a second cock. And yeah, that one was mine.\n\n\"AAAAAAHHHHHHH!!!\" my angel howled at my unexpected invasion of her asshole. She didn't want any lube, but my dick was absolutely soaked in her orgasmic girlcum and I slid all the way in like a hot knife through butter.\n\nAnd then I went from zero to sixty in two seconds again.\n\nThis time, there was no strength left in Mari's limbs to stop her from collapsing straight onto Belle. The petite girl beneath us grunted from the weight, so I bent forward, scooped Mari up around her midsection with both arms, and elevated her almost vertical. I didn't let up on my anal pounding though, really reaming her out while she flopped around like a rag doll. I could feel the thickness of Matty Junior stretching her cunt and denting the thin membrane separating my dick from the dildo. And after another minute, I realized that Belle was doing ab crunches or something to make Matty Junior pump a few inches up and down as well.\n\nMari drooled onto my arm as her head lolled left and right. She was delirious with pleasure as I sodomized the hell out of her, plundering her pretty ass while Matty Junior pillaged her pussy. She moaned constantly, an unending, \"Fuuuuuuu... Uhhhhhhh... Uhhhhhhh...\"\n\nShe came twice pretty quickly. I could tell because she woke up just a little when each of them shot through her system, jerking upright as if zapped by a bolt of lightning. Her ass also clamped down pretty tightly around my cock, but I kept powering through. After her second one, I started to tire and pushed her forward again. This time, she was awake enough to brace herself on her forearms and keep from collapsing onto Belle. Her upthrust ass also changed my angle, so I raised my right foot and planted it atop the mattress so I could drill into her a little deeper.\n\n\"Fuuuck... Meeee...\" Mari moaned. \"Fuuuck... Meeee...\"\n\n\"We're fucking you, Angel,\" I grunted. \"We're both fucking you. Didja ever think Belle and I would be fucking you with two cocks at the same time? Huh?\"\n\n\"Fuckin dream come true, boyfriend,\" she groaned, glancing back at me with a little gleam in her eye before hanging her head back down. \"Oh holy shit... I feel so full. Both of you... Fuuuuck.\"\n\nBelle went back to biting her nipples, which made Mari tense up and whimper. I hammered away at Mari's ass, rapidly approaching my own release.\n\n\"Fuckin A, Angel,\" I growled. \"I'm gonna cum in your ass soon.\"\n\n\"And I'm gonna slurp it out,\" Belle added with a giggle. \"I'm gonna cram my tongue all the way up that tight bunghole and lick up every last drop. Do it, Matty! Fill her ass with all your sperm. Matty's Little Cumslut is hungry.\"\n\n\"Fuck! Fuck! Fuck!\" Mari moaned. \"You two are gonna make me cum again. I'm... I'm... AAAAAAAAAAAHHHHHHHHHH!!!\"\n\nMari's clenching colon clamped around my cock, not so tight as to stop me from pumping, but tight enough to squeeze out my sperm.\n\n\"HHHHNNNNNGGGGGGHHH!!!\" I grunted as I powered through her compressed anal chute three times, penetrating my prick all the way in before my cockhead started belching vast quantities of ejaculate way down in the depths of Mari's bowels.\n\nBeneath me, I could feel Belle's hands vibrating over Mari's clit, a blur of motion that maximized her best friend's pleasure even as she continued to bite down on a nipple. But alas, all good things must come to an end, and Mari's voice finally went silent while I slumped down over her back, gasping for breath.\n\nMari's forearms gave out again, as did her knees. With my bulk already on top of Mari as well, our combined weight practically crushed little Belle beneath us as she squeaked like a tiny mouse in alarm.\n\nEventually, though, I pulled out and flopped over onto my back. Belle then managed to slump Mari's limp body off herself into the gap between us. And then she rolled up onto one side, tenderly cradling her BFF's cheeks to give her a sweet kiss.\n\n\"How was it?\" Belle asked once Mari's eyes finally fluttered open.\n\n\"Nnnnnnggggghhhh...\" Mari moaned, eyeballs swirling and mouth drooling.\n\nBelle glanced over at me and arched an eyebrow. \"This is a good thing, right? We didn't like... break her, did we?\"\n\n\"If we did, I'm blaming you,\" I groaned.\n\nBelle snorted. \"I'm not the one who shoved a baseball bat up her ass.\"\n\nMari moaned in reply, \"I want that baseball bat back in my ass again. Soooon. Holy shit that was incredible.\"\n\n\"Look who's back in the land of the living,\" Belle enthused happily and kissed her bestie again.",
        "Mari shook her head. \"No, I'm fucking serious. I wanna do that again. TONIGHT.\"\n\nBelle arched an eyebrow. \"You sure? That last one seemed to wipe you out.\"\n\n\"It's my last night as Matty's Official Girlfriend. I'm Queen Mari. I give the orders around here,\" Mari moaned. \"So get down there, slurp up that fucking creampie, and then give Matty a fucking blowjob so he can shove it in my ass again, comprende?\"\n\n\"Yes, ma'am, Queen Mari,\" Belle replied eagerly and immediately slid down to start audibly slurping my cum from her BFF's leaking anus.\n\n\"Was it really that good?\" I asked, gently brushing sweaty locks of hair back from Mari's forehead.\n\n\"Better than good. Thank you, Matty. Thanks, B.\"\n\n\"We live to serve,\" I replied with a grin. \"All for one, and one for all, right?\"\n\nMari grinned. \"Gawd I love this club.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "big tits",
        "big breasts",
        "mff",
        "anal",
        "18-year-old",
        "high school",
        "harem",
        "hot tub",
        "double-penetration",
        "latina"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-39-40"
}