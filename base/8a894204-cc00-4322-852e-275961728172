{
    "title": "Love On the Run Pt. 04",
    "pages": [
        "Author's Note: this is the final installment of Love On the Run. I hope you have enjoyed it. As always I sincerely welcome comments/feedback. You'll note, particularly in Chapter Sixteen, mention of the kellners of Chicago. Sebastian Kellner's story is told in Out of the Past also available on here. If you enjoyed this story, I recommend checking that one out.\n\n<center>Chapter Thirteen</center>\n\nJessie had spent years preparing for this. Life on the run meant she'd spent every moment studying and planning her life around every dark possibility. She was always prepared for a dark shadow to grab her in an alley, for an invader to come through a window, but not this. Agent Soto was someone she trusted, a woman who'd always come off as a solid and trustworthy agent.\n\nSoto had zapped her, so she wasn't going to die right away. Probably Soto worked for Diego, making a double agent who'd discovered there was more money working for the drug lords than fighting them. If anybody on the crew was that kind of rat, Jessie would have put money on Klein.\n\nHer muscles twitched as she lay there, trying to listen to hear f they hit an expressway, or anything familiar. The seemed to be in traffic, slowed, and Soto put on the radio and turned it up, screeching Tejano music. This could only mean in the heat windows were down and cars were close. She could try screaming for help, but that might just get her zapped again, and Jessie wanted to avoid that.\n\nHer hands had been tied behind her back, and Jessie didn't even remember it happening. Getting stun-gunned was a highly unpleasant experience, to say the least. Steadying herself, the tried to think on what to do. What she knew was that if she didn't try to fight back, for every inch they moved forward her chances of living went down. Wherever Soto was taking her, Jessie wasn't expected to survive.\n\nShe wasn't truly sure if she could change her fate, but live or die, Jessie was going down swinging. Her hands were cuffed by a zip line, so she settled for trying to get the mask off. It was a pillowcase, she realized, so using just her lips, tongue, and teeth she began to work it forward.\n\nIt moved along but snagged on her ponytail. Cursing silently Jessie shook her head hoping Soto was distracted. Suddenly the car jerked to a halt and Jessie was thrown forward. She hit the back of the front seats, her nose smacking into the leather, and then was wedged down into the foot well. \n\n\"Mierda!\" Soto yelled. In rapid Spanish she cursed another driver's ancestors and then slammed on the gas. It wedged Jessie further down, and it jerked the pillow case free. Though it hadn't been blocking her air she still gasped, and let her eyes readjust to the sunlight.\n\nThere was no way to get the cuffs off, but there was a trick she'd spent hours perfecting in her life on the run. It wasn't easy flung into the tiny foot well, but quickly enough Jessie had passed her legs through the loop made by her cuffed wrists so now her hands were in front of her.\n\nShe had to get Soto to stop and escape, get word to Julian. Taking a deep breath Jessie slowly pushed herself back to the seat. Once she was settled she lunged and drew her cuffed hands around Soto's neck, choking her.\n\nThe agent wheeled onto a side street, gasping, and the car sped into a parked car at the side of the road. Jessie was thrown forward, sliding between the seats her head hit the dash hard enough she saw stars. She was still cuffed around Soto's neck and the force wrenched her left wrist.\n\nSoto immediately went from her pocket. Dazed Jessie fought her, slinking back to the backseat she grabbed Soto's head. The other woman clawed at her but Jessie fought like a tiger. Multiple times she had faced certain death and never once had Jessica Andrews ever given in, she wasn't going to start now.\n\nWeak and bloodied, the two women struggled. Jessie did all she could to keep Soto from going for the stun gun or anything else, but it was hard. Her feet scrabbled at the window for purchase and as Soto bit her Jessie kicked and the window shattered, held together as it was safety glass. Two more kicks and it was gone.\n\nJessie began to scream for help as the struggled, calling out fire in English and Spanish, knowing that would be the most likely way to get a stranger to call emergency services. Soto slipped her hand free of Jessie's clutch and the next thing Jessie knew her arm was buzzing and once again she went limp.\n\nAs her eye closed, heavy-lidded, she heard Soto murmuring \"c'mon, c'mon\" as a the muffled sound of a line being rung filled the car. \"It's me. We're in trouble. She woke up, chocked me, I hit a car. What do I do?\" Soto paused. \"All right. See you in a moment.\" She hung up and Jessie felt the pillow case being worked back on her head. \n\n\"You little bitch. I don't like doing this, you know? But my mom is sick, I gotta pay the bills somehow. They're not going to kill you, you know? You know exactly what's in that locker, don't you?\"\n\nIf Jessie could have spoken she would have cursed a blue streak, but all she could do was moan.\n\n\"You really fucked up that night, kid. If you hadn't popped Jimmy Juarez he would have been dead the next day, same as Johnny Bones. And instead of living hand to mouth in the countries that make up the Earth's ass, you could have been living the high life. But you can't leave well enough alone, can you?\n\n\"And now, once more, you've ruined it all. If you'd gone with me to the meeting site, I might have protected you. But bitch, I hurt, my sister's car hurts. I'm turning you over to someone who has every reason to make sure you don't live any longer than you have to.\"\n\nJessie just moaned. What the hell was going on?\n\n\"Fucking Julian,\" Soto continued, her speech hurried and nervous. \"If he'd just left well enough alone it would have been fine, the money would have kept flowing. But the fucking boy scout had to ruin it all. Fuck, if you hadn't made those stupid calls to Johnny Bones, he wouldn't have figured it out, and it still would have been fine. But no, you had to go behind everyone's back, make that second call, and fuck everything up. Ah, good.\"\n\nThe sound of a car door sounded very close, then Soto's opened. A strange man greeted her in Spanish, which Jessie understood perfectly, even the Cuban dialect. They were discussing where to meet, a warehouse miles away from the meeting spot or the bus lockers. And the strange man whose voice seemed vaguely familiar.\n\nThe tingling was lessening in her limbs, but Jessie knew it would be long minutes before she could move. Both Soto and the stranger grabbed her, roughly pulled her from the BMW and dumped her into what Jessie realized was a trunk. As the lid slammed shut she heard the stranger promise Soto Jessie would die, as soon as they got what they wanted.\n\nShe knew they meant what they said, but she wasn't dead yet, meaning there was a chance. Jessie took a deep breath, calmed herself, and began flexing her fingers. What scared her most was not knowing where Julian was. From the things Soto had said, she had no doubt they meant to kill him too.\n\n<center>***</center>\n\n\"This smells funny,\" Agent Klein said into his hidden microphone, covering it by leaning down near a garbage can.\n\n\"You're sniffing a garbage can at a bus station,\" Julian said.\n\n\"I meant the op,\" Klein retorted. \"I'm going for a smoke.\" He stormed outside and fished the soft pack from his shit, pulled one out and lit it. Pulling out his cell phone he pretended to speak into it, though he was talking to Julian and the rest of the team. \"Something's up. What's Helen's nine on the meet?\"\n\n\"Just a moment.\" Julian turned the band over on his receiver and tried to raise the older agent. There was radio silence. Switching back to Klein and their team he cured. \"You might be right, something's up. I can't reach Helen.\"\n\nKlein looked right at the window where they were assembled and sighed. He jiggled his cell phone. \"Join the fucking twenty-first century, will ya?\"\n\nJulian barked at one of the younger agents along as support. \"Call Helen, anyone on her team. I want contact!\"\n\nTurning back to the binoculars Klein has his radio off and was talking with an employee. \"What the hell is he doing?\" Julian asked the youngest agent near him, a girl who looked like she'd been recruited straight from high school. Where did they find these kids? He'd never been that young, Julian was certain of it.\n\nKlein had fished the key out and was motioning with it. The employee took Klein back into a small office as they watched. \"Um, sir, I think Agent Klein is figuring out which locker the key opens.\"\n\nSuddenly feeling melodramatic and foolish, Julian felt his temper swell, and tried hard to keep it under wraps. \"Indeed,\" he ground out.\n\nRipping off his headset he broke rank and used his cell phone to try and call Soto or Jessie. Well, at least they were keeping with the plan, neither of the women was to be reachable.\n\nJulian made a decision. No one else was watching the bus station, so he strode out of the offices and down to the open street, ignoring every shout behind him. He met up with Klein as he emerged from the office.\n\n\"Julian?\"\n\n\"Which locker?\"\n\nThe employee adjusted his thick glasses. \"Looks to be ten-twenty-nine.\"\n\n\"Open it, Klein.\"\n\nThe other agent shrugged and they found it among the larger lockers. Klein opened it to dust. It was empty.\n\nFear gripped him. It would be too much to hope Jimmy Juarez could hide millions of dollars and some secret for ten years right in the heart of Johnny Bones' territory without the other man having found out. So what did Jessie have that Johnny Bones could want?\n\n\"Sir?\"\n\n\"Klein, you take over the team here. Shut this locker up. You,\" he indicated the terminal employee, \"we were never here. Do not move, do not breathe on this locker again until I give the ok.\"\n\n\"Where are you going, sir?\"\n\n\"To the meeting location. I can't raise Helen.\"\n\n\"Sir, you'll need a radio. Take mine.\" Klein pulled his receiver and ear piece free, passing it over.\n\n\"Thanks. What the hell is going on?\"\n\n\"Somebody wants your girl dead. Somebody we think is one of us.\"\n\nJulian nodded. \"You're thinking Soto.\"\n\nKlein sighed. \"I don't want to rat on my partner, but yeah. Her mom is real sick, weird disease, fatal, one that baseball player had. The bills are huge. Her salary doesn't cover it and her mom is uninsured. She's making money somehow.\"\n\n\"All right. I'm going to the garage then, retrace her steps from there. Cal the cab company and make sure they were dropped there. Let me know ASAP.\"\n\nKlein nodded and pulled out another cigarette. \"For this, I'm smoking inside.\"\n\n\"Dare to ream,\" Julian said and jerked the cigarette from hiss mouth. \"Do this. An innocent woman's life is at stake.\"\n\n\"Wait, Vasquez? These cartels kills hundreds of people a day. Why is it so hard to kill Jessica Andrews, cheerleader gone wild?\"\n\n\"What do you mean?\"\n\n\"Some very powerful people want her dead, so she should be dead. Why is she alive?\"\n\n\"I don't have time for riddles, Klein. Do what I say.\"\n\nHe ran for his car, heart pounding. The operation was hijacked, the vig was gone, and Jessie was out in the mist. There was a traitor in-house, and this was the sum total of what Julian knew. Time was against them, but he was going to find Jessie, and do it fast.\n\n<center>***</center>\n\nThe car had stopped several times, but she knew they had reached their destination when she heard the driver open his door. Seconds later the trunk opened, but she was still surrounded by black. At least she had located what felt like one of those oversized flashlights cops were so fond of. She'd been zapped and her head re-covered, but her arms were unbound. She gripped the flashlight to her stomach, curled in the fetal position as the trunk lid opened. There w as no additional light so she knew they were inside.\n\n\"Where am I?\" she asked loudly.\n\n\"Shut up!\"\n\nShe'd gotten what she wanted. She heard two others move at that shout so she was facing three men. Quickly Jessie pinched the corner of the hood and clutched the flashlight close. There was movement, and she felt four hands grasp her and lift her. She went with it, and made it look like the hood snagged on the trunk lid, lifting off.\n\nThe two men holding her were muscle, dumb looking, and easily distracted. She grabbed the flashlight and swung it at the head of the one holding her shoulders. Instinctually he dropped her to block. Jessie swung her free hand out to brace herself on the bumper and kicked at the one holding her legs.\n\nShe managed to kick him in the jaw but dropped the flashlight as she tumbled to the concrete floor. Her victory was short-lived as a gun was jammed against her temple.\n\n\"Rise, slowly.\" It was that voice that seemed familiar, but she couldn't place it. \n\nTossing her hair she rose, hands up, and snuck a glance. The man holding the gun was older, built like an aging linebacker. He was completely unfamiliar to her. \n\n\"Who the fuck are you?\"\n\nHe sighed. \"Nothing that dramatic. Just the man whose going to make you talk.\"\n\n\"About?\"\n\nHe moved the gun to her ribs and jabbed her. \"Go inside the house. No, we won't kill you until you've told us what we need to know, but I and my friends will shoot you someplace very painful. And Gianni over there enjoys taking women who cry and try to fight back, so think on that.\"\n\nJessie stood up straight and tried to fake brave. \"Rape? That's the best you can do?\" She wondered if he could tell that scared her shitless.\n\nFor the first time in her life, Jessie found herself waiting to be rescued. She could only hope that by now, Julian knew something was wrong, and he was riding to the rescue. Because, looking around at the two henchmen and the Spartan room with bondage chair, she knew there was no way she was getting herself out of this one. \n\n<center>Chapter Fourteen</center>\n\nJulian was killing mad. No one had shown up at the rendezvous point but somehow had passed Helen and her team, the eyes on point, with the wrong radio bands. Normally a small miscommunication, except Jessie and Soto had never shown, and Soto was off the reservation. \n\nOnce he made sure Helen and Klein were in contact, he made his way over to the garage. The beater was still there, an '87 Pinto with more rust spots than metal. And just as Julian finally found the attendant having a cigarette break Klein called and told him the cab had dropped the women there. \n\nJulian flashed his badge and tried to rein in his temper. \"I need you to go back to the office now. At about nine forty-five this morning two women were dropped off by a cab. I need to know how they left.\"\n\nThe kid smiled. \"The babes? Both tall, one a hot Latina, the other a smokin' redhead?\"\n\nGrinding his teeth Julian nodded and resisted smacking him. \"Close enough.\"\n\n\"They left in a sweet red beemer.\"\n\nHis heart began to beat rapidly. \"You got video here?\"\n\n\"Follow me.\"\n\nIn the cramped booth the attendant backed up the tape. Julian felt like he was going out of his mind until the kid finally had the tape queued up. There, plain as day, he saw Agent Soto driving a red BMW out of the garage, but he couldn't see Jessie.\n\n\"Back it up,\" he said, and the kid did. Julian's phone rang but he ignored it when he saw it was Klein. The other agent could wait.\n\nIt was hard to see, but it appeared Jessie was in the back seat of the BMW. And it seemed she had something black over her head. His blood chilled.\n\n\"What spot was the BMW in?\"\n\n\"Just a moment, man,\" the kid said and switched tapes. \n\nKlein called again and Julian ignored the call as the tape was queued up. What he saw when the attendant it play made him want to bellow. Klein had tried to warn him there was a rat in the unit, but of anyone he could have suspected, Soto was at the bottom of the list.\n\nHe got a partial plate off the BMW and Julian wasted no time calling it in to a friend on the local force. Until he knew if Soto worked alone, he would play it close to the vest. Wasting no time, he got back into his car and hit the streets, heading the direction the car had in the grainy video.\n\nMiami was not the largest city in the country, but plenty big, and know for an overabundance of luxury cars. Finding the right red beemer was like finding a needle in a haystack. He wanted to call Klein and warn him, hell, it was protocol and he owed his team, but in that moment, all he wanted was to find Jessie, and make sure she was safe.\n\n<center>***</center>\n\nJessie glared at the henchmen as they tied her to the chair. Their names were already forgotten in her fear, but she eyed them for weaknesses. The linebacker had chosen well his three goons had no bum knees or bad shoulders among them. She counted six guns and five knives between them, and from the ropes it was clear they'd done this before.\n\n\"Nice, I would have gone for a blood knot personally,\" she told the short one as he tied her feet. She was trying for brave, hoping anything would keep the linebacker from enforcing his earlier threat of rape.\n\nPhysical wounds she knew from experience would heal, but the psychological ones stayed with you. Rape was something she wasn't willing to ever try. To her the women and men who'd come back for that were the strongest people in the world, but she doubted she'd make the ranks.\n\n\"I like knots that hold strong but are easy to untie,\" the goon said.\n\nShe looked away, afraid she'd start screaming like some movie dimwit. If she could get herself out of this situation she would, but she needed help.\n\n\"You want me to talk?\" She asked the linebacker. \"The money is in a bus locker. Jimmy liked keeping things there, drugs and cash. Said it made it harder for anybody to hit him.\"\n\nHe smiled. She out his age at over fifty and he was one of those men with good genes. In his youth he would have been eye catching, and he was built like the footballer she'd been nicknaming him in her mind. He had barely gone soft and while the goons looked malevolent and either bored or crazy as well, he looked clear-headed, and that made him the scariest.\n\n\"We know that. We also know the DEA knows, and we also know Johnny Bones already got the cash. What we need to know is what was with it.\"\n\n\"With it?\" She'd already guessed there was some information with it people were still keen to kill for ten years later, but she had no clue. \"I thought it was just the money.\"\n\n\"Clearly not.\" One of the goons brought the head man a chair, and as he sat down close enough their knees touched the goons took up their positions again. One on the garage door, one on the door to the house, and one on the door leading to the side yard.  \n\n\"Now, how many people have you told about this?\"\n\n\"About what?!\" she nearly screamed.\n\nHe produced a knife. It was a flip blade, about five inches, and had holes in it so it could stab and be easily withdrawn. Not as shiny as knives in the movies, it was much more terrifying. \"How many people know?\"\n\n\"I don't know!\" She struggled, but it was useless. There were ropes around her hands, more tying her arms down, trying her to the chair across the chest and thighs, and yet more at her ankles. All separate she'd have to cut through six bunches looped at least five times to get free.\n\nLeaning forward slightly he ran the knife over her thigh. Jessie tried to fight it, but she jumped, rattling the chair, and they all laughed. \"Do you even know what it is everyone wants?\"\n\n\"No!\"\n\nCocking his head like a dog, his pale hazel eyes bored into hers. \"I wonder if you do. Jessica, it's corroborating proof of a secret you carry inside you.\"\n\n\"Inside m-me?\"\n\nThe rapist goon was closest at the door to the yard and he took an involuntary step forward, eager. She leaned away from him and they all laughed.",
        "\"Yes, deep inside you. And you have no idea? In all those nights after your mother died you spent alone with that creep Juarez, he never told you?\"\n\nShe tried not to think of that time in her life. Her stepfather had always been a creep. After leading her mother down a dark path of drug addiction that led to her death, he had started giving her very unfatherly looks, trying to \"accidentally\" walk in the bathroom.\n\n\"He didn't tell, he ordered.\"\n\n\"Didn't you ever wonder why he was so keen to have you?\"\n\n\"All I know is he was a creep rapist, the lowest of the low,\" she gave the goon on the outside door a hard look as she said the last.\n\n\"No, there's a prize in whoever claims you.\"\n\n\"Claims me?\" Rage filled her. \"I am a human being, not some fucking prize.\"\n\nHe stood and the knife caressed her cheek, forcing her to keep still as the sharp blade slid along her skin. \"Yes, you are. Diego wants you very badly.\"\n\n\"Diego has been trying to kill me. He sent three assassins after me and I sent them back in body bags.\"\n\n\"Did you really think Diego sent killers after you? Stupid girl,\" the linebacker said laughingly, and the goons laughed with her.\n\n\"Yes,\" Jessie ground out.\n\n\"Those men you killed didn't belong to Diego. They belonged to Salazar.\"\n\n\"Who?\" She was honestly clueless, and again they laughed. For some reason that caustic laughter enraged her more than the physical threat of the knife and she jerked her head back. \"Who the fuck is Salazar?!\"\n\n\"Jesus Salazar, the biggest drug lord supplying the west coast.\"\n\n\"I've never met the man, why would he want me dead?\"\n\nThe knife withdrew but the linebacker's eyes glittered. \"Because your stupid stepfather was a rat. He worked for Salazar who put him into Diego's organization as a spy. So when you thought you killed Diego's man, you killed Salazar.\"\n\nHer head was spinning. \"Just tell me what the hell this about!\"\n\n\"Stupid cunt,\" one of the goons muttered.\n\n\"If you're going to hurt me, hurt me. If it's story time, tell me what's going on. Just stop the games!\"\n\nThe knife returned in a flash and Jessie realized her mistake. The linebacker loomed over her, eyes glittering coldly. \"Story time then, but one more word out of your mother and I will cut these clothes off you and let Gianni shove whatever he likes into your stupid twat. Understand?\"\n\nShuddering Jessie slowly nodded. The knife lingered a little longer and she felt a hot prick, then blood trailed slowly down her cheek as they all laughed. Finally the linebacker sat back down and the way he looked at the knife made her think he would lick the blood off, but he just set it down on the bumper of the car.\n\n\"Your mother was quite the slut, it seems. She used to belong to Salazar, but she left for love. How touching. She had you, but she knew the penalty for leaving Salazar was that you were his property. She tried to hide you, but then your daddy died, and Salazar found you. He's smart, and he sent Jimmy Juarez to keep you safe.\n\n\"See, turf wars keep cropping up. Gangs distribute here, but the two main suppliers have always been Salazar and Diego. Imagine what they could do if they combined forces? Salazar has no children, no woman he could trust. So he promised you to Diego. Do you follow?\"\n\nJessie shook her head, lost. \"Salazar, my dear, is your uncle. This means you're his heir, but everyone knows a stupid cunt can't run an organization. So whatever man you squat out a son for gets the entire west coast. If that man was Diego, two empires become one. Jimmy was supposed to be the only one who knew, but he liked to talk when he sampled product. Johnny Bones found out and that was why they argued the night you shot Jimmy. Johnny wanted you too. \n\n\"Then you had to go and kill Jimmy and take off. The problem is what was with that cash. It was the contract. Jimmy was to keep you safe until Diego collected you. Unlike your scum stepfather, Diego likes his women grown up. He wasn't planning to collect you until after college.\"\n\nHer head swam, and some things she had always wondered about made sense. Her entire life on the run came from killing Jimmy after he attacked her. The argument had started when he found out she'd lost her virginity to Henry. No wonder. She almost laughed at the thought of Henry, good, honorable grown boy scout that he was, inheriting a multi-billion dollar drug empire.\n\n\"It's good to know you haven't had any kids yet. But take heart, I won't let Gianni rape you in any way that could get you pregnant.\"\n\nHer heart shriveled in terror. \"W-why?\"\n\nThe linebacker stood. \"Because whoever knocks you up gets the prize. All we have to do is find that contract guaranteeing it, and then that honor is mine.\"\n\nShe cried out and jerked so hard the chair fell back, landing on her bound hands. Jessie screamed in pain and suddenly one of the goons was smothering her, cutting off the noise.\n\nHer mind raced, desperate to stall. \"I know where the contract is!\"\n\n\"Lift her up,\" she heard the linebacker say.\n\nThey did and the sharp pain in her left wrist told it was sprained, possibly broken. A tear slid out. \n\n\"Where?\" He asked almost silkily as the knife danced across her throat.\n\n\"If I tell you, swear to me you won't let them touch me. J-just y-you.\"\n\nHe smiled as if he knew saying that made her skin crawl. \"I do prefer to do my own cutting. They'll video tape it, of course. But I want nothing out of you other than a son. The moment you're pregnant and the sex is confirmed, you'll be their toy. And when you give birth, I'll let them kill you.\"\n\nNausea roiled through her and she fought not to vomit. Time, it's time. It's nine months or more to escape. And stalling now means Julian can find you.. \"Johnny Bones has it.\"\n\n\"If you're lying, I will make sure you regret it.\" She felt the knife again and more blood.\n\n\"I- I swear it's true. He told me he had the money, he knew where Jimmy liked to hide things.\"\n\n\"You two, go and get the contract from Johnny. Gianni, stay here. Put her in the cage for now. I have some calls to make.\"\n\nOh, god, Julian, please come was her last thought before hands wrapped around her throat and began to squeeze hard.\n\n<center>***</center>\n\nJulian felt a rising sense of panic as he stood by the wrecked BMW. Officer Bill Davis, a friend of his on the Miami PD, stood next to him. \"So you lost a witness.\"\n\n\"And a rat. The agent guarding her is working for the very man we're trying to take down.\"\n\n\"Witnesses say she ran, we'll find her. I shouldn't be doing this, but she left a phone. Dropped it six blocks from here, witnesses said it was Soto.\" Davis looked askance at the other uniforms and slipped the cell phone to his hand. \"It's yours.\"\n\n\"Call me the minute Soto turns up.\"\n\nDavis smiled. \"Get out of here, see if the call list gets you anything. I'll call you right away.\"\n\nJulian jogged back to his car. The phone was a cheap model, the kind he knew was prepaid and disposable. There was only one number incoming and outgoing, and he called it.\n\n\"Yo, bitch, I told you, we got her, the old man has her. We're goin' after Johnny Bones now. And I ain't givin' you a ride. Hurry yo' ass up.\" And with that, the stranger hung up.\n\nFinally it was time to bring Klein in. Julian was lost, literally and figuratively. His agent picked up on the third ring and once Julian made sure he was alone he brought Klein up to speed.\n\n\"Well, I can get you Bones' address, but he's not there. See...we lost him.\"\n\nCounting to ten Julian resisted screaming at him but he did curse him out.\n\n\"Nice, man, I speak Spanish too so I know what you said. Something interesting happened. That lawyer of Jessie's, Henry whatshisname kept calling every five minutes. Then, right before Johnny lot his tail he stopped calling and won't answer his phone.\"\n\n\"Got it.\"\n\n\"You want me to send some agents to his place?\"\n\n\"Delay it for an hour. I'm going there now. If I find those thugs that took Jessie I want an hour with them alone.\"\n\nKlein was silent for a long moment and then sighed. \"Women are nothing but trouble. This could get you kicked out for good.\"\n\n\"I don't care, Klein. I just want her safe.\"\n\nAnother pause greeted those words, then Klein laughed. \"You really mean it? This chick is more important than your career?\"\n\nThinking for a moment, Julian realized that was right. 'We'll talk about it later. Give me one hour.\"\n\n\"I can't do more than that. And if you go down, you go down alone.\"\n\n\"Understood. Thanks, Klein. Later.\"\n\nHe hung up and called the switchboard to get the lawyer's address. No matter how much it pissed him off, he knew he wasn't the only man that loved Jessie, and he could only imagine what Henry was doing if he had Johnny bones all to himself.\n\nHe broke nearly every traffic law getting to the large house on the beach, trembling all the way. If Diego's men had Jessie, it was a miracle she wasn't dead. The only thing keeping her alive was whatever information Jimmy had stashed with the money that apparently Johnny Bones had.\n\nWhatever Henry had done to Bones, he prayed the man was alive.\n\nScreeching to a halt Julian jumped from his car and drew his weapon. Something about the house seemed ominous and when he hit the door it had already been forced open.\n\n\"Henry!?\"\n\n\"In here,\" came the voice, nearly a whisper. \n\nJulian followed the voice to a formal living room the size of an apartment. What he saw chilled his bones. Henry stood there, a gun naked in his hand. The floor was covered with violence.\n\nLaying in a growing pool of blood were two bodies. One he recognized and a flash of sadness hit him before grim satisfaction as he looked at Soto's face. The other he didn't recognize at first but once he saw the tattoos he knew it was Johnny Bones.\n\n\"I saw him,\" Henry said in shock. \"I knew something was wrong when nobody told me anything. I saw him and I grabbed him. He told me, told me everything, and then she broke in. I didn't understand at first. She was babbling about Johnny knowing something. Then he began shouting, they pulled guns...she shot him. She would have shot me but i- I got Johnny's gun. I killed her, Julian.\"\n\n\"Henry, put down the gun.\" Julian leveled his, just in case. In the chock of a first kill, there was never any way of knowing what a civilian might do in panic. \"You didn't mean to. Put the gun down.\"\n\nHenry's eyes swung to him finally. \"That's the thing. Johnny told me everything. Jessie's uncle is some guy named Salazar.\"\n\nJulian's blood chilled. \"Jesus fucking Christ.\"\n\nNodding Henry shivered. \"Jessie was supposed to marry Diego, like some fucking third world bride. This scum wanted her. And I found out Soto was working for Diego. Then Johnny started talking about a double cross, they argued, and killed her. I heard what Soto was planning, and I killed her, and I liked it.\"\n\n\"Damn it, Henry, just put the gun down and talk to me. Tell me the rest, but put the gun down.\"\n\nAt long last the lawyer shook his head and stared down at the gun as if realizing he still held it for the first time. He set it on a side table and when he stepped back Julian holstered his own piece.\n\n\"Julian, she was going to double cross Diego and give her to the man she was really working for, the asshole who set today up.\"\n\n\"Who?\"\n\n\"I love her, but I want her to be happy. I was just so...enraged, I had to kill Soto. But him? You can kill him. I just want Jessie free, safe, and happy.\"\n\n\"Who, Goddamnit? Who has Jessie?\"\n\n\"George Beaumont.\"\n\n\"But that's impossible!\" Julian's head swam. George, the man who had sent him into the field to find Jessie, the man who had mentored him in the DEA. The last man he'd ever suspect of being a rat.\n\nAnd his boss had Jessie. \n\n<center>Chapter Fifteen</center>\n\nJessie woke to blackness. Reaching up, her face was not covered, but she felt the two small cuts and dried blood. Turning her head she realized she was in an actual cage, like something from an old movie. The bars were thick, melded to the floor which she lay crumpled on.\n\nBeyond was a bedroom, small and bare. The windows were high and bricked over, the walls white. The overhead light was on and the carpet was filthy. She was in a basement of whatever house they had taken her to. Lightheaded she swallowed and her throat ached. Gianni the goon had choked her unconscious and they had moved her. Her hands and feet were unbound, but as she searched for any weakness in the cage there was none.\n\nEverything was welded tight but the door and it was held by locks on three sides with thick padlocks. The hinges on the final side were huge and solid, no give. There was a small door-within-a-door like a doggy door, but just three inches high and twelve across. Probably meant to pass food, there were deep grooves in front of it as if someone had spent hundreds of hours trying to wear the metal down. The food door had been replaced, the old one probably thrown out when the last occupant had died.\n\nJust who was the linebacker? If everything he said was true she knew she was in for hell. But her mother, sister to a drug lord? Jessie got her light eyes and blonde hair from her mother who had been just as pale. There was no way her maiden name was Salazar, hell it was supposed to be Peterson.\n\nLaying back Jessie closed her eyes. By now Julian had to know she and Soto were missing. He was smart, he'd find her. God, she just wanted it to be over. Diego, Salazar...she didn't care. All she wanted was to go into protective custody with the Marshal service, dye her hair, change her name, and move somewhere where no one would ever find her.\n\nEven then, she couldn't stop thinking of Julian. Damn it, she loved him, truly she did. There had to be some way she could talk him into joining her on the run. She didn't want to live with him but she couldn't live with the risk of anything like this happening again.\n\nThe door opened and Jessie scrambled to sit up, backing against the far corner of the cage as Gianni came in, whistling. The way he looked at her made her flesh crawl as his brown eyes fairly glowed with madness, lust, and violent intent.\n\nInstinctually Jessie tried to make herself smaller, drawing her knees to her chest she hugged them and buried her head against the roughness of her denim clad legs.\n\n\"Boss stepped out for a moment, leavin' us alone, girlie.\"\n\nJessie made no comment. The linebacker had left, meaning as far as she knew there was just her and the rapist. If she could lure him closer, make him open the cage, perhaps she had a shot.\n\nShe thought on all the advice ever given to her in her life on how to avoid being raped, and pondered the opposite. Look afraid. Don't pay attention to the signs. Ignore the feeling in her gut. Don't say no. Make open-ended suggestive comments. Don't struggle or fight. \n\nIn short, fight every instinct I possessed.\n\n\"Aw, so shy?\" he drawled.\n\nShe couldn't form a reply, wondering what the hell she should do, and when he smiled Jessie guessed doing nothing made her look like the perfect victim.\n\n\"That's okay. I'll make you scream.\" He peeled off his shoulder holster and threw it in the far corner, although the gun he tucked in the back of his pants.\n\n\"Y-your boss said n-nothing that c-could get m-me...\" She couldn't even say it. Pregnant. That was why she was there. It was some kind of awful horror film, but she couldn't press stop, couldn't leave the room, and she didn't know all the plot.\n\n\"Oh, there's your sweet little ass. Wouldn't trust your mouth, you seem like a biter.\"\n\n\"I will kill you.\" Rage made her fear burn off some, and she forgot the victim act. The way he spoke told her he had done this before, many times, and that no other form of sex would ever even come close to filling the black hole he had in place of a soul.\n\n\"Oh, little girl, think you can take me? I been workin' for the old man for years, doin' his dirty work. I've killed men twice your size.\"\n\n\"It's easy to shoot someone in the back. Try fighting someone face to face who doesn't fear you.\"\n\nGianni smoothed his thin dark hair back and gave her a crooked evil grin. \"You fear me, I can smell it.\"\n\n\"You can't smell shit.\" She stood up straighter. There'd been a flicker of something behind his eyes, doubt. Jessie could probably get him to open the cage to either rape her or strangle her again. It didn't matter as long as he did. Once the door was open she didn't care if it was a gun or a knife in her face, she would launch herself at him and kill Gianni.\n\nHe pulled keys from his pocket and twirled them around as he drew nearer. Suddenly he stopped and all expression melted from his face. \"You're tryin' to piss me off so I'll open that cage and pull you out. Girl, I didn't get this far bein' that stupid.\"\n\n\"Then good luck trying to rape me.\"\n\nHe cocked his head and an evil grin split his plain face. \"Just need you pliant, is all. Ever been Maced?\"\n\nHer blood turned to ice. Before she could protest, he left the room.\n\nBut in his excitement, Gianni had dropped the keys.\n\n<center>***</center>\n\n\"It's done,\" Julian told Henry.\n\nIn the past ten minutes the lawyer's color had returned, his tanned skin no longer looked nearly corpse-pale.\n\n\"So they'll believe it?\"\n\n\"Yeah, I told them Soto broke in after Johnny kidnapped you and they got each other. I said I'm escorting you in but I left the contract. Once Klein gets here he'll start to piece it together. If we want George alone we won't have much time.\"\n\n\"Julian, would it be safer for Jessie if we sent in a team of agents?\"\n\n\"And have him turn it into a hostage situation? No. The two of us can go in clean. George doesn't think we know anything beyond Jessie is missing. We'll play dumb and take him down. Come on.\"\n\nJulian lead him out towards his car as another screeched to a halt. With instincts honed from wartime service and years in the field Julian dove down and dragged Henry with him, though the other man was already moving.\n\nShots rang out and Julian guessed Soto's friends were there. \"Stay down!\"\n\nHenry did as he ordered, and Julian returned fire.\n\n<center>***</center>\n\n\"Shit.\" Jessie felt her panic grow. The keys were an inch past her furthest stretch. She tried to wiggle her shoulder between bars and the pain was excruciating, but it was not enough.\n\nOutside the room there came the sounds of Gianni throwing things around. Something metal and hollow clanked on a hard surface and then came the sound of papers shifting and falling. \n\nShe pressed and her fingernails brushed against the keys, but pushed them slightly away. It took all she had not to scream or cry. Jessie just bit her lip and tried again, praying to every god ever worshipped.\n\n\"Come on, Jessie,\" she told herself. \"One good on the house, keys right there. He can't find the damn Mace. It's now or never. One guy, you've taken them before. One on one you have a shot. But first you need the damn key.\"\n\nSuddenly she heard the scariest possible sound from outside the room. Jessie heard silence.\n\n<center>***</center>\n\n\"You realize that the neighbors will force me to sell my house.\"\n\n\"Why does a guy who lives alone need all that room?\" Julian asked as he sped towards his boss' home.\n\n\"It was the home I grew up in. I guess I'd hoped to fill it with a family some day.\"\n\nJulian had no response to that but anger. He knew it was irrational, but knowing how Henry felt about Jessie made him see red. Use it, use it for when you see George he told himself as he gripped the wheel tight.\n\nHe made the turns automatically. George had been one of the field guys when Julian had first started. They'd worked together for a while, mentor and mentee, and then George had taken a promotion after a bullet had rendered him useless in the field. His promotion to direct supervisor was fairly recent.",
        "The man made decent money, what the hell did he want to inherit an empire filled with nothing but death, evil, and destruction? Damn it, George was the man who'd taught Julian how much damage the cartels could do, how precious life was. They both had no pure moral objection to drugs, but the swath the resulting crime cut through the streets was what they fought.\n\nOverriding all those thoughts was worry for Jessie. A search of the bodies had produced the contract, and basically whomever knocked Jessie up first was the frontrunner for heir to the west coast drug trade. If anyone had touched her...he would make their deaths slow and painful.\n\n\"At least we know she's there,\" Henry aid in the silence as the car screeched around a corner, heading back towards the center of town.\n\nJulian had made sure to grab one of the henchmen before he bled out and confirm George had Jessie and what was planned.\n\nIt was a ten minute drive in light traffic, twenty in normal, and nine the way Julian drove, but it seemed to take forever. They screeched to a halt around the corner and nearly slammed into the car in front of them.\n\nJulian was out before he turned the engine off and Henry tumbled after. The neighborhood was typical, quiet, clean, and the only people out were those walking dogs or pushing strollers down towards the park.\n\nIt was quiet, and after the noise of the shootout at Henry's it was too quiet for Julian. He drew his gun and they ran towards the house. Not wanting to draw attention Julian motioned Henry to follow him to the door from the yard into the garage. He kicked it in and inside they found a strange chair with shackles on it and cut ropes laying close.\n\nSeeing red, Julian still cut off Henry's bellow of rage. \"Stay behind me, don't leave yourself exposed. Gun up.\"\n\nSo far the lawyer had proven to have impressive street smarts and Julian felt he could trust him to do as instructed. He opened the door the kitchen and it was clear. Julian had been inside this home dozens of times and everything looked as it always did. Orderly, neat, if a little Spartan in traditional bachelor style, though George had accrued more furniture since his divorce was finalized.\n\nSuddenly they heard a scream, a masculine cry, and a thud.\n\n\"Jessie!\" Julian was running, all his training forgotten as he followed the noises to the basement.\n\nHe'd never been down here before and there was one large area and a hallways filled with doors. The large room was empty and so he went crashed down until the last room revealed a vignette. Jessie stood there, bruised and shocked over the prone body of a man. A pool of blood was spreading by his head and there was a hammer on the floor next to her feet. Clutched in the man's hands was pepper spray.\n\n\"Julian,\" Jessie called. Then her eyes rolled back and she fell.\n\n<center>***</center>\n\nJessie woke up shaking. She was in Julian's arms on the floor and behind him Henry stood. Both men looked concerned and enraged.\n\n\"The linebacker will be back soon,\" she said, sitting up. \"Agent Soto is working with him.\"\n\n\"The linebacker?\" Henry asked.\n\n\"George, my boss. Jessie, this is his house. We have to get you to safety. Henry, take her to the office. I'll call Agent Klein to meet you.\"\n\n\"And what will you do?\"\n\n\"I'll wait here for George.\"\n\n\"No, Julian!\" Jessie gripped his arms. \"You don't know what these men want. You're the only one who can keep me safe.\"\n\nHenry sighed. \"Thanks for the vote of confidence.\"\n\nShe glared at him. \"They said my uncle is some drug czar-\"\n\n\"Salazar. We know, Jessie. It's a long story on our end too. Henry, go. Don't take her to a hospital, take her directly to the field office.\"\n\nHenry picked her up. \"Hey! I can walk.\"\n\nHenry smiled at her. \"Let me pretend to be white knight just this once.\" He gave a solemn look to Julian who nodded back.\n\nShe wanted to rail about sexism but the truth was she'd been so terrified and was now so relieved that her body was giving out. \"wait, Henry,\" she said as they reached the door. \"Julian, be safe.\"\n\nThe look he gave her was raw, and for a moment she didn't give a damn about the differences in their lives. She loved him, and he had saved her.\n\n\"Get out of here,\" Julian said roughly.\n\nOn the drive over she cried, refusing to speak to Henry. Was it true her mother had never told her about her uncle? She had never mentioned her family beyond they had died while she w as young. And if this Salazar was really her uncle, how could he basically order her rape? Advertising that her child would inherit an elicit empire was basically a wide open invitation to such.\n\nShe was numb. All Jessie could wonder was what was Julian doing at that moment? Even as Henry led her inside, even as the off-putting Agent Klein took charge of her, all she could think about was Julian. For many moments she had thought she was dead. Despite the threats of rape, Jessie would have fought to the death, the rapists or hers, never submitting. Knowing that, Julian had been the one hope and simultaneously the one regret in her mind.\n\nThe interrogation was lengthy. There were six men and women in and out. They made her pick their boss out of a photo book and sent police to the house. She had to recount the story a dozen times. Jessie kept asking, but no one would tell her where Julian was. At one point she learned Soto was dead, so were the henchmen working for George. It grew late into the night and someone brought her coffee and a cigarette, then someone else got a sandwich and a coke, and still no one would tell her anything about Julian.\n\nOnly when she was falling asleep did Henry intervene. \n\n\"Damn it, Klein, she's told you everything and she's exhausted.\"\n\n\"All right,\" Klein threw his hands up. \"We need to keep her here. She's going straight into the custody of the marshal service, but agent Vasquez has requested we hold off until he gets here.\" \n\n\"Come on, Jessie.\"\n\n\"No, wait.\" She turned back to Klein. \"What is going on with him?\"\n\nHe smoothed his shaggy dark hair back. \"He's tying up loose ends. Look, Jessie, I know there's...something between you. But you're going into witness protection and he works for the DEA. You should prepare to tell him good bye.\"\n\n\"Look, today I was kidnapped, tortured, caged, nearly raped, and probably killed a man in self defense. I don't need any life lessons from you.\"\n\nKlein sent a pleading look to Henry, and Jessie lost her temper. \"Fucking men!\" She stormed out and after encountering a terrified peon in the hall found Julian's office. She locked the door, closed the blinds, and curled up on his loveseat. After so many hours, she finally let the tears fall.\n\n<center>***</center>\n\n\"Jessie?\"\n\nShe woke to darkness, but the voice cut through the fog. \"Julian?\"\n\nAs soon as she said his name they were kissing.\n\n\"Casi te perd\u00ed hoy,\" he breathed against her mouth as their lips slid together.\n\nThat he said \"I nearly lost you today\" in Spanish told her just how worried he was.\n\nHis desperation ignited hers. She grabbed him and tried to rise and they fell to the floor. Julian braced her weight but when they hit he rolled her to her back. He was already hard, and Jessie needed the affirmation of life that was the joining of their bodies.\n\nThey reached for their pants at the same time and it was awkward, but neither laughed. They kissed any bit of flesh available, ears, neck, shoulders, and at last he tugged her pants down. His were open and she had one second to palm his hard length before he slapped her hands away. She wrapped her legs around his waist and then Julian slammed in.\n\nHe gave her no quarter, slamming in and sliding out quickly. She clutched at his shoulders as he plundered her mouth. Arching her back Jessie met his thrusts, his jeans rasping her clit. It was a heady race but Jessie luxuriated in the feel oh him so hard between her legs, so strong around her. She pulled his hair loose and bit his lip, urging him on and he growled.\n\nSuddenly the climax gripped them both, and neither could have said which came first but their orgasms fed on one another. They cried out into one another's mouth and rode it out, fingers digging into flesh, arms locked as steel bands.\n\nEventually they collapsed, but felt one another's heart beat intimately.\n\n\"Julian,\" Jessie murmured when she could talk, brushing his dark from his bright eyes.\n\nHe bit her chin gently and licked it, still given to his animal passions.\n\n\"I love you.\"\n\nHe froze for a long, silent moment as she felt her pulse fill her mouth. \"Say it again,\" he growled.\n\n\"I love you.\"\n\nHe was still hard and pulled out not all the way. \"Again!\"\n\n\"I love yo-oh!\" He slammed back in and it began again.\n\nThis time was slower, and every time he said \"Te amo,\" she thrilled to it.\n\nWhen it passed they lay tangled together, sweaty and replete. \n\n\"It's over,\" Julian said at last, rolling aside. He stood and went to his desk, opening a drawer.\n\n\"What do you mean?\" She sat up and he handed her tissues. \"Thank you.\"\n\n\"I waited for George. I've never been so angry.\" He cleaned himself and sat in his chair. \"I wanted to kill him, just beat him to death. But Klein called. He told me you were here and safe. He set up a perimeter, kept out of the way, and talked some sense into me. I did beat him senseless, resisting arrest.\" His smile was dark and made her shiver as she pulled her pants up and sat on the loveseat. \"But he's in custody.\"\n\n\"Oh.\" She wasn't quite sure how to feel about that.\n\n\"It means you can leave tonight. He'll cut a deal for reduced time, but I'll make sure he serves hard time. But with his testimony we don't need you. Through him we can get Diego and Salazar. Henry's testimony will help and even Soto's mother is willing to testify about what she knew. Soto is dead.\"\n\n\"Oh,\" was all Jessie could say.\n\n\"I have to stay and oversee this. But you can go. The marshal service will be here soon. You should go to college, they'll make sure it happens.\"\n\nIt hit her then. \"And I'll never see you again.\"\n\n\"Jessie, it has to be like this. Unless you go into hiding you'll never be safe.\"\n\n\"What about if you can put Salazr away?\"\n\n\"Because of you we'll be able to take down the two biggest drug lords in this part of the world. But when they fall someone will take over, and they'll come looking for you. I can keep you safe, we'll just keep cutting them down until you're safe.\"\n\nShe felt numb, understanding his gesture, but that part of her that would forever be a scared little girl was whining that she would rather have Julian than be safe.\n\n\"What if you came with?\"\n\n\"Jessie, the only way I could would be if we were married.\"\n\n\"Would that be so bad?\"\n\nHe looked shocked. Jessie swallowed harshly, her throat thick as he stood and crossed to her. Julian knelt at her feet and took her hand in his, but from his expression she knew she was about to be disappointed.\n\n\"Jessie, if I stay I can keep you safe. That's my gift to you. I love you, and I want you to be safe. What kind of life would we have if we spent all our time looking over our shoulders?\"\n\nShe felt tears and turned from him, jerking her hand free. \"Klein could do it, they don't need you. You just don't want to come with me.\"\n\nHe cupped her cheek and forced her to meet his gaze. \"I just don't trust anyone to keep you safe. The only two things I know how to do are go to war and this. I'm no good for you, Jessie. It was a mistake to sleep with you, to fall in love with you, but I don't regret it.\"\n\nHer temper frayed. \"Well I do.\"\n\nHe opened his mouth to reply but a knock came on the door. \"Marshals are here,\" a strange voice said.\n\nJessie rose and opened the door. Some nameless agent stood there with two more suits behind him. She glanced back at Julian but said nothing. There was nothing left to say. \n\n<center>Chapter Sixteen</center>\n\nHer last final exam was a bear, but Jessie made it. Evanston was a nice town and she enjoyed normally walking along Lake Michigan, but she was eager to get home. Freshman year was behind her and she felt like the oldest freshman at Northwestern, so home had become an escape.\n\nIn the end, she had decided not to go with the U.S. Marshals. Instead Henry had helped her the way his father had now eleven years earlier. Sebastian Kellner had been a friend of Henry's when he had gone to Northwestern and though he lived in the Virgin islands now with his wife and son, he had a family home in the city.\n\nIt was a strange townhouse, split in half and allegedly a long sordid family history had filled it. She lived there alone in the left half and often felt lonely, but the neighbors had become friends. Henry had seen to it she got into school on probation, and after two semester with a high average just short of perfect A's she was off probation. \n\nShe'd signed up for summer school, wanting to barrel through her degree. Chicago was a nice change, but she felt lonely. Henry came to visit and they had settled into easy friendship, but she wanted to pay him back. Student loans paid for her schooling now but she promised Henry that as soon as possible she would pay him back.\n\nDespite being twenty-nine surrounded by people ten years her junior she'd had opportunities to date but found herself comparing every man to Julian. Maybe it had been a short, torrid affair, but after such raw passion there was little interest in casual dating to her.\n\nPre law was demanding, but at least she had qualified for a scholarship for the summer. Perhaps she would get a part-time job on campus and start accruing money to pay Henry back. After a decade on the run, evading the law and drug lords, staying in one place and working her butt off in school seemed tame.\n\nAt least she had three weeks before classes resumed for the summer session. That night she thought she'd make a simple dinner of grilled cheese and fries, how American, and watch every movie on her list on Netflix.\n\nHenry would come up in two days and she'd take him to museums, talk about law, and resist asking about Julian. She knew they had become friends and he'd kept her abreast of the case.\n\nAs it turned out it had been Salazar, her own uncle who had sent killers after her. However he had evaded capture and gone into hiding. Diego had been extradited to America and his trial was getting underway. She was under a new name, Cynthia Saunders, and had cut her hair to a pageboy and kept it dyed a coppery, subtle red.\n\nThat was her life. School, homework, eating food Henry paid for in the cavernous house. Two and a half more years and she'd be into law school. Oh, joy.\n\nThe first six months she'd passed her nights sleeplessly, but no assassins had ever come. No call from the DEA demanding she return to Miami to testify. After those sleepless months Henry felt it safe to visit, though he always drove the many hours up there and took as much care to hide his identity.\n\nAfter a long ride on two trains and a bus, she reached the lonely home. She had to unlock the gate then the house, and once inside it was lonely. Maybe she'd get a pet, a dog perhaps. She always felt like she roomed with ghosts.\n\n\"Cynthia?\"\n\n\"Henry?\"\n\nHe stepped out of the kitchen at the back of the house and she appreciated he'd been careful to use her name. \"Are you alone?\"\n\n\"Yeah, just back from my last final. I wasn't expecting you until tomorrow.\"\n\n\"I never travel when I say I will over the phone. Still have to be careful, even though I'm assured we don't.\"\n\nShe set her bag down and rolled her back. \"Oh? Is there news?\"\n\n\"Come on back to the kitchen, I'm finishing up dinner, you can talk while I drain the pasta.\"\n\nHer footsteps echoed hollowly as she walked back to the kitchen. There was breaded chicken cooling on top of the stove with cheese set to melt on top, and a pot of bubbling marinara next to it simmering. Henry had the strainer in sink and poured out a pot of corkscrew pasta.\n\n\"You didn't have to cook.\"\n\n\"I wanted to,\" he said with a smile.\n\nHis hair was longer, long enough to be tied back. \"Your hair, it's a good look.\"\n\n\"Thanks. Sit down while I assemble everything.\"\n\nShe sat on a stool at the high counter where a placemat sported a napkin and utensils. \"So what's the news?\"\n\n\"Your uncle is dead.\"\n\nShe blinked, unsure what to say. Finally, after watching him spoon pasta onto the plates she shook off the surprise. \"How?\"\n\n\"He was in Brazil. The DEA was allowed in on the takedown, the Pol\u00edcia Federal had him under surveillance. He refused to go quietly and he was killed in the crossfire.\" She watched him add chicken and pour marinara over it all.\n\nThere was a bottle of wine next to her and Jessie opened it in shock, pouring two glasses. \"So Diego is in jail about to stand trial and he's dead.\"\n\nHenry nodded and set the plates down at the placemats, pulling off the apron she surmised he'd bought since she owned no such thing. \"Yes. And the DEA and national police of Columbia have effectively shut down Salazar's operation.\" He sat next to her and grabbed his glass of wine, raising it for a toast, waiting for her to do the same. \"You're free, Jessie. Finally. I'd advise you to keep this name, but you don't have to live in fear anymore.\"\n\nShe clinked his glass but was too dazed to drink. Julian's name almost slipped from her lips, but she bit it back.\n\nHe set his glass down and raised his knife and fork. \"What's more, Salazar's assets were raised, but I have connections. Your mother was his sister and when she left the family she left a trust fund set up for her. It's yours, Jessie.\"\n\n\"How much?\"\n\n\"Enough to pay for school, pay me back if you're so determined, buy a house, pay for a wedding, set up college funds for five kids, and still have enough for a very comfortable life.\"\n\nHer head swam and she set her glass down, resting her head on the counter next to it. \"My god.\"\n\n\"Jessie, did you ever wonder why I suggested you go through me for a new life rather than the Marshals?\"\n\n\"Ungh,\" was all she could say.\n\n\"Because the Marshals would have truly made you disappear.\"\n\n\"So?\" She sat up and smoothed her hair back. \"Look, Henry, this is all good news but I'm overwhelmed. I don't feel like eating now.\"\n\n\"Jessie, you won't see me for a while. There's a case I've taken and I'm going to spend a year in Mexico.\"\n\n\"Oh, uh, that's good.\"\n\n\"I leave tomorrow. But I came here to deliver the good news in person.\" He swallowed another bite and turned, taking her hands in his. \"I love you, I'll always love you, but not the way you love Julian.\"\n\nAt his name a wounded animal sound tore from her throat. \n\n\"See what I mean? But because I love you I only want you to be happy.\"\n\n\"What are you talking about?\"\n\nHe smiled, truly handsome, and for a moment she regretted it hadn't worked between them, but life had just forced them apart. The love they'd shared as teenagers had been innocent and perfect, and it was all they had been meant to share.\n\n\"Finish this meal with me and I have another surprise for you.\"\n\nShe groaned.\"I can't take much more.\"\n\nAs they ate he explained how he'd been named executor of the trust, liquidated it, and set a new one up in her current name. Cynthia Saunders had been a real person who'd lived all of twelve days, and the identity was a full one. She would have no problem, but she was locked into the new identity forever.\n\nThere were papers to sign and she forced food down, having to admit it was delicious. He explained the case in Mexico was for the daughter of an existing client, real estate work. She was attempting to build a resort on land her father had left but was being blocked by some nefarious locals. She teased Henry he was doing wild west work and they laughed as old friends.\n\nHe helped her clean up and declined to stay the night, leaving to fax off her papers. He kissed her cheek and told her to stay up until midnight, leaving with a wink.",
        "Jessie changed into comfortable denim shorts and a tank top, popped a bowl of popcorn, and sat in the living room with a bottle of Coke. The entertainment system was huge and not for the first time she wondered why the house lay abandoned. The story of the Kellners must have been something out an eighties nighttime soap opera.\n\nShe watched some thrillers and dozed off on the couch after the third film.\n\n\"Jessie?\"\n\nShe woke to her name, wondering why Henry had returned. \"Ungh?\"\n\nThe light flicked on and the sight that greeted her was a mad one. Julian stood there, deeply tanned, his hair looked darker, almost black, and it was shorter, shaggy to his collar. So many times she had dreamt of him but always he looked as he had the last time she'd seen him. \"Julian?\" She sat up.\n\nHis look was intense and he reached for her.\n\nShe clutched at him and met his lips desperately. If this was a dream, it was a doozy. He tasted like smoke and man, something spicy and unique to Julian. His hands were rough as they slid beneath her tank top, and when he felt her bare breasts unhindered by a bra he made a sound like a whimper.\n\nShe arched into the touch as his thumbs slid across her nipples. Clutching at his arms she wanted more, and felt his shirt realizing it buttoned up. With her own animal cry of lust she ripped it open, buttons popping off. \n\nHer shirt went over her head and he knelt before her. Splaying her hands on his chest Jessie could only throw her head back when his hungry mouth found the tip of a breast. Digging her fingers into his hair now she arched into him, desperate for more.\n\nOne of his hands popped the button on her shorts and slid in, finding her already wet. She shrieked when one thick finger parted her lips and stroked her clit, pumping her hips. At her moans he groaned and ducked his head to her other breast.\n\n\"Juli-An!\"\n\nHe chuckled, turned her, and forced her to lie back down. Julian kissed her lips, sliding his mouth against hrs again and again, his tongue filling her as he jerked her shorts down. He tore the panties and then a thick finger filled her. He twisted his hand until his thumb covered her clit and then he began to move it.\n\nImpatiently she reached down and found his pants secured with a tie. Undoing it she reached and found his cock bare and hard. He cried out against her as she cupped him, squeezing tight, but he got the message. His pants were off quickly and he settled between her legs.\n\n\"Jessie,\" he breathed, holding himself above her his eyes stared down into hers as his cock brushed against her wet folds.\n\n\"Julian,\" she pled, nearly sobbing, and he slammed in.\n\nHe froze there, their eyes locked. She was tight from all those long, lonely months, and it felt as if he were even bigger than she remembered.\n\n\"No,\" he said, a decision reached, and he pulled out. She cried and tried to follow as he climbed off but with supreme confidence Julian pushed her back, but turned her so her feet hit the floor. Kneeling between her legs he cupped her ass, brought her forward, and proceeded to torture her.\n\nJessie slung her legs over his shoulders as he licked, sucked, and drove her mad. A finger joined the effort of his mouth as his tongue flicked over her clit. When the finger speared hr and pressed against the spot inside her, a wall fell and with swift agony Jessie climaxed. Julian moaned in approval, the vibrations pushing her to a fever pitch, and she thrashed on the couch, pinned by him as he refused to give her quarter.\n\nBefore it faded he dropped her, kneeling still he straightened, and slammed back in. She rode him, or maybe he rode her, she couldn't tell. Their bare flesh pressed together as her sliding thrusts met his. She felt full, swollen, needful, and simmered on the verge of another climax.\n\nJulian fucked her hard, desperate. He bit her lip and smiled at her cry, but surrendered to the feel of her tongue sliding along his. Over and over and over they clashed together, sliding in harmony, taking each other deeper and deeper. Jessie lost herself to his driving thrusts, wrapped in his arms, surrounded by Julian.\n\nIt was real, truly real, and tears filled her eyes even as her muscles tightened and her mind spiraled upward. His panting breaths came closer and closer as his hard cock filled her deliciously. She tightened and then exploded, screaming out her pleasure. \n\nJulian roared and filled her with his hot cum, his fingers clamped hard on her hips. Jessie wailed with it, hips jerking, riding out the storm. It felt like an eon before they came down, dizzily kissing.\n\n\"How?\" She asked between kisses. \"When?\" She moaned at the feel of his tongue. \"Why?\"\n\nLaughing, he pulled back.\n\n\"I miss your real hair,\" he said pulling back.\n\n\"I don't like yours short,\" she said, miffed those had been his first real words.\n\nHe pulled out and stood, holding a hand out. \"Come on, Henry tells me you have a great bathroom. Let's clean up and I'll tell you everything.\"\n\nShe lead him up to the master bath where there was a tub that could fit six. She filled it and added some soap before sliding in. Julian ceased nuzzling her and joined her, leaning back facing her.\n\nHe looked at her oddly. \"You know, I don't want to tell you details. I want to leave that life behind.\"\n\n\"What do you mean?\"\n\n\"I quit. Everyone who ever wanted you hurt is dead or in prison. Luckily there weren't that many left. I saw it through and quit last month. In Henry's line of work he needed help, a kind of private detective. That's far more interesting, and less people shoot at me.\"\n\n\"Henry told me my mother had some money, it's mine now.\"\n\n\"It's not that. Jessie, I was the one who begged Henry to help you. If you'd gone with the Marshals I'd never have found you again. You didn't let me tell you what I wanted to that last night.' He sat up and grabbed one of the stacked washcloths, pulling a leg and scrubbing her foot. \"I had to make sure you were safe, but once you were I was going to follow you. The second we rounded up all of Salazar's men I quit. I gave a deposition just two days ago. They think I'm dead.\"\n\nShe blinked, surprised. Jessie's mouth opened but no words came out.\n\n\"Henry did the same thing for me. You're looking at Jonathon Garcia.\"\n\nShe laughed. It was a rich, freeing sound, and once she began she couldn't stop. He watched her, bemused, until she laughed herself out. 'This is mad.\"\n\n\"Henry found work for me here. You'll go to school, we'll squat in this strange joint, and when you're finished we can partner.\"\n\n\"Oh, Julian.\" He meant it. He'd left his life behind for her. They were both free to start again. Tears filled her eyes once more.\n\n\"Jessie, there's only one thing left to ask you.\"\n\n\"Oh?\" She grabbed another washcloth and dabbed at her eyes.\n\nHe dropped her leg and reached for her hands. \"Will you marry me?\"\n\nShe cried harder. \"Yes,\" she sobbed out.\n\nHe jerked her forward and kissed her tears away. They made love again and said goodbye to Jessica Andrews and Julian Vasquez. Staying up all night they planned their lives, both happy to have a plan, a free and bright future. But best of all, there was a future of hope and love and stability; there was no more love on the run."
    ],
    "authorname": "madam_noe",
    "tags": [
        "romance",
        "mystery",
        "action",
        "suspense",
        "erotic coupling",
        "making love"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/love-on-the-run-pt-04"
}