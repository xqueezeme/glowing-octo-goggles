{
    "title": "Ignore the Warning Label Pt. 07",
    "pages": [
        "Author's Note:\n\nThis is NOT the kind of Part 7 that is designed to stand alone. You will be very lost without having read the first six parts.\n\nThis is also the final chapter of the series. Fair warning, it is a long one.\n\nPlease remember that this story is set in 2018, which was the present back when I started writing it.\n\nAs always, many thanks to EGRI, Echo, and everybody else who has been supportive.\n\nGeneral updates about what I'm working on can be found on my author profile.\n\n\n\nPart 7\n\nI love Office Space. I thought it was hilarious when I first saw the movie in high school, but I didn't fully appreciate it until I joined the working world. My daily frustrations include different buzz words -- sprint planning meetings and JIRA tickets rather than memos and TPS reports -- but it still totally resonates with me.\n\nThere's one line from the movie that perfectly describes what the days after moving in with Malcolm were like. It's the scene where the initially overstressed main character comes into work completely relaxed, and describes his amazing weekend on the couch. \"I did nothing. I did absolutely nothing, and it was everything that I ever thought it could be.\"\n\nThat's pretty much what happened that first week. Nothing. We brought a load of clothes over from my place, made plans to rent a U-Haul at some point in the future for the rest of my crap, sat around on the couch, went to and from work and school, and just generally did nothing while in each other's presence. It was absolutely amazing!\n\nThe whole time, it just felt completely natural. Like, having all the time in the world to be together freed us to waste some of it lazing around.\n\nLooking back, something shifted in our friendship after we started having sex. Every time we were together after that, it felt like there was a pressure. Some kind of subconscious need to squeeze the most we could out of every minute. It led us to pack our weekend dates full of activities, without leaving much decompression time to sit back and chill like we'd done so often during our lives before.\n\nWhich isn't to say it was a bad thing. We had a ton of fantastic dates! Still, it was kind of exhausting, and the week of nothing was a relief for both of us from a pressure we hadn't even realized we'd been feeling.\n\nAt least, that's the way I tried to describe it to Nicole when she wanted to hear about all the fun and exciting adventures I'd had since leaving her behind in Jersey City to go and become a Brooklynite. I don't know, I thought it was kind of romantic, bonding with Malcolm in a returning-to-our-roots sort of way. Somehow, that didn't resonate with her.\n\n\"What do you mean nothing was everything you ever thought it could be!?\" None of Nicole's incredulity was lost over video chat.\n\n\"It's a thing from a movie\u2014\"\n\n\"You mean you went all the way to fucking Brooklyn, the most happening place for hundreds of miles in any direction, just to sit on the couch and vegetate?\"\n\n\"It's not like that at all!\" I protested. \"Don't tell me you've never wanted some low-key downtime with Sam.\"\n\n\"Of course! It's great, especially after getting back to the campsite after a hike, or after getting laid, or after getting home from a show or something.\" Nicole gestured pointedly each time she said 'after'. \"Seeing a theme here?\"\n\n\"Oh, come on. You've come to my place plenty of times just to drink and chill.\"\n\n\"That's different!\"\n\n\"How?\"\n\n\"Adding beer makes it a party.\" Nicole said, so matter-of-factly I had to laugh. There was a moment of silence, Nicole's eyes darting around the camera in a way that had to mean she was doing something on her computer.\n\n'Anybody else and it could be innocent... but this is Nicole, the crazy lady who invited herself to my house a mere few days after Malcolm introduced us.'\n\n\"What are you plotting?\" I asked.\n\n\"Don't ask as if you don't know,\" she said with a sassy grin. \"Sam and I will be over there in a few hours. Have you ever been to Insa?\"\n\nThat's pretty much what conversations with Nicole were like -- like she was sprinting ahead and everybody else needed to catch up. She hadn't explicitly asked, but we both knew it would be perfectly fine for me to turn her down. Still, I didn't want too. She was right, it had been a while, and it was probably time to do something more social than going through the motions at work. \"No, I've never heard of it. Is that a restaurant or something?\" At that moment, Sam wandered into frame in the background. She smiled in the camera's direction and waved. \"Wait, does Sam even know you've just invited both of yourselves over?\"\n\n\"She probably expected it when I told her we were talking,\" Nicole said, then called over her shoulder. \"Hey! You're taking a break from wedding planning tonight.\" Sam responded with some colorful words about being the only one putting any work into planning their wedding, to which Nicole rolled her eyes and pointed out that was because Sam didn't trust her with any of the details.\n\nMalcolm wasn't surprised in the slightest to learn we'd been conscripted into dinner plans. He just smiled and reflected that at least Nicole had given us a few hours warning instead of just banging down our door. I still wasn't quite used to the language shift, and hearing him call it 'our' door gave me a little surge of happiness.\n\nIn truth, saying we'd done completely nothing was a bit of an exaggeration. Quietly, stealthily, we'd been feeling each other out. We'd never been quite the Oscar-and-Felix Odd Couple style extreme polar opposites, but it's pretty inescapable that my love of chaos and his general organization would collide. So far, we'd headed off the problem. We'd decided that the dining room table would be my empire, to do with whatever I wanted, and we'd eat our meals from the kitchen-side bar area instead. I thought it was working out well so far. It was hard, but I'd really made an effort to keep the rest of our shared spaces the way Malcolm liked them. Little things, like keeping the bedroom floor clear of the dirty laundry than I was used to dumping on it when I lived alone, made Malcolm smile whenever he caught me putting things in the hamper.\n\nWe'd also had completely plain, non-kinky vanilla sex for the first time. I'm not sure if that's a BDSM couple milestone, but it felt significant. Like, validating that we could put the cuffs and gag away for a little bit and just enjoy some classic cowgirl fucking.\n\nOf course, two nights later, we'd swung completely the other direction and added some new trophies to my collection of pictures of the marks Malcolm has given me. They were pretty impressive, though I say so myself, bold red streaks across my thighs that were still a little tender to the touch. They would probably have healed already, but I kept touching them, enjoying the way the sensation flared up and reminded me of Malcolm giving them to me.\n\n\"Insa, you said the name was?\" Malcolm said from behind his laptop screen.\n\n\"Yeah. Seeing anything good?\"\n\n\"Yeah, Korean barbeque with good ratings... Not the closest choice in the world, though. We'll probably have to take an Uber.\" He paused, clicking around for a few seconds, then looked up at me at the same time as my phone vibrated with a new text alert. \"It says here they've got karaoke. You don't think...\" he trailed off, reading the text I held up for him.\n\nNicole: Btw were getting a crew together and doing karaoke afterwards\n\nNicole: I was going to keep it as a surprise, but Sam made me warn you\n\n\"You know what, that's on me,\" Malcolm said with a laugh. \"It was wrong of me to doubt Nicole and her complete lack of restraint.\n\n----------\n\n\"So, I'm gonna start off today with a little bit of phthalo blue. We'll use the ol' two-inch brush. Grab a touch of the midnight black also -- phthalo blue and midnight black, just gonna mix them together on the brush. And let's go up here, and just using our little crisscross strokes, let's just drop in a happy little sky.\"\n\nVivian focused intently on the screen, where Bob Ross was calling shades of blue sky into being, then rushed to figure out which of the handles in front of her was for the two-inch brush. It should have been easy, that was the biggest one in the set, but they were all jumbled together in her cup. By the time she'd found it and produced the proper mix of colors, Bob had already moved past the sky and was on the bottom of the canvas creating water. His trademark calm, mesmerizing speech contrasted sharply with the speed he painted at; his almost lazy appearing brush strokes deceptively masking how deliberate and practiced they were.\n\nDavid helpfully paused the video.\n\n\"Thanks,\" Vivian said, still trying to catch up mirroring Bob's crisscross brush stroke pattern in the sky.\n\n\"No problem,\" he said from somewhere behind her, then paused to consider her progress. \"You've still got a lot of paint on the brush, try putting a bit more of it up towards the top.\" As she worked her way down, the layer of white she'd put on the canvas started mixing with the blue, creating lighter and lighter shades. The way it faded going downwards, it really did create a bit of depth to the sky, like it was stretching off into the distance.\n\n\"Try to flow with it,\" David added encouragingly, setting the remote by her side, \"it doesn't matter if it turns out good or bad, just try to remember what strokes with the brushes made what effects.\"\n\n\"Right.\"\n\nAccording to David, art was far more about being able to see something than it was about mechanical skill with a brush. Unless you could really see it, no amount of skill would help transferring the image to paint, or charcoal, or whatever medium. The mechanical skill was important, but it wasn't what would hold her back.\n\nApparently, it was kind of like speaking. Nobody ever thought about the mechanics of opening their mouths and moving their tongues to create each individual sound for each word they spoke. They imagined a sentence, then they said it. Musicians did something similar when they progressed to mastery of their instruments. Guitar players stopped thinking of how to arrange their hands to produce notes, and simply imagined the melodies they wanted to play. Without having something to say or a song to play, the mechanics of how to make sounds were useless.\n\nVivian had thought she could see just fine, but it turned out there was a world of difference between looking at something and actually seeing it, and she had a lot to learn. According to David, it was very hard to teach, but it would come with experience. On the other hand, the ins and outs of paints and brushes were a lot easier to teach, so that's what he'd been doing with her. He'd taken her through a variety sampler of different styles, so she could get experience with each and figure out which she wanted to delve into more. Bob Ross's trademark wet-on-wet style was the most recent.\n\n\"I thought we were both going to do this together?\" Vivian said, her voice raising at the end to form a question. David had set up a second canvas for himself right next to Vivian's, but he'd shifted off to the side a bit at the last second before starting the episode of The Joy Of Painting.\n\n\"We were, but then I had a better idea.\" David grinned at her around the edge of his setup before ducking back behind it. From her angle, she couldn't see what he was working on. Whatever it was, it seemed to involve replacing the canvas with a sheet of paper and setting to it with a variety of pencils.\n\nShe resumed the video and set back to learning. Following Bob Ross's lead, she was astonished by how well basic strokes and colors turned into recognizable, and often detailed looking shapes. Going feather-light on the painting knife spreading titanium-white down the slope of the mountain she'd painted created a snow-like layer with a lot of holes in it. Up close, it didn't look like anything, but from a step back, it looked like an incredibly detailed mountainside covered in snow with sections of rock poking through.\n\nThroughout the process, Bob's reassuringly calm voice kept up a steady monolog of encouragement, with a lot of deep philosophical stuff laced in. He framed new elements in an odd way, saying things like: \"Decide where your mountain lives in your world.\" \"You need the dark in order to show light.\" And \"In your own world, you can create any illusion that you want. I think that's what attracted me to painting, I can create any kind of world that I wanted. Nobody is unhappy, it's a pleasant place. Everything is nice here.\"\n\nIt almost felt like Bob Ross snuck those bits in, and they gave Vivian something to think about during her frequent pauses to catch up. He framed the entire process of painting like the artist was a god creating an entire world on the canvas, and everything that happened there was within their control. Maybe David felt that same sense of power and control when he was being creative?\n\nWhen the episode ended, Vivian's painting didn't look half bad. It was very different than what Bob's guide painting looked like, all the proportions were different and Vivian had messed up mixing some of the colors, but what she'd made legitimately looked like a landscape!\n\nProudly, she spun to show what she'd done to David, but he stopped her with a quick word. \"Hold still! No, go back the way you were facing.\"\n\nShe did, wondering what was going on and trying to remember just how she'd been sitting before. Had it been her left or right leg she'd had bent under herself? Probably right?\n\nIt took her a full minute of listening to his pencils scratching away beside her to realize that he was drawing her. Instantly, her cheeks flushed red, and she nearly hid her face in her hands. If anybody had asked, Vivian would probably have put herself right at the top of a list of the world's least likely people to ever get into modeling. It was right at the intersection of two improbabilities -- somebody, for some reason, wanting her to model for them, and her being brave enough to do it.\n\nAnybody else, even one of her former masters, and embarrassment probably would have gotten the best of her. But it was different with David. She'd seen him draw lots of other people before, and that made this feel like it wasn't such a big deal. Still, the command to keep still proved to be difficult. As soon as he said it, her nose started to itch, and she had to fight down the urge to fidget.\n\n\"Could you shift your hair a bit? Back around your ear?\" David asked, and Vivian hurriedly complied, trying to straighten her hair with her fingers as she did and wishing she'd done a more thorough job combing it that morning. \"Hmm,\" David quietly mused. \"Not quite.\"\n\nHe stepped out from behind his paper and started adjusting Vivian, softly but firmly guiding her body with his hands into the position he wanted. Turns out it had been her other leg. \"Most people straighten themselves up when they're taking pictures,\" he said as he gave her a little bit of slouch. \"You were more natural. Like this.\" David moved back and forth, positioning her arms and clothes, stepping back and looking from different angles, then trying something different. \"Now, your hair. Maybe we take some liberties there...\" He trailed off, his hands now running through Vivian's hair. Deliberately, he gathered some of it between his fingers, and Vivian felt the tugging and positioning that went along with getting a braid.\n\n\"You really do dabble in everything,\" she said, impressed to discover hair styling was another of his skills, then added, \"would you like it if I wore it like that more?\"\n\n\"It's nice when you give yourself a braid, but keep it for special occasions.\"\n\n\"Like getting a portrait done?\"\n\n\"Exactly.\" He worked quickly, gathering and winding her hair into shape and letting it fall over her shoulder.\n\nThe whole time David's hands were on her, Vivian was struck by how confident he felt. He'd manipulated her body with the same sense of rightness and ownership she'd come to expect from dominants. It was the first time she'd felt that from him, and it filled her with hopeful warmth. Maybe it was because he was in his comfort zone setting up someone to draw?\n\nSurprisingly, Vivian found herself starting to like the feeling of being the model. Maybe it was a form of confirmation bias brought on from the change she sensed in David, but it was starting to make her feel submissive. Keeping still for him in the pose he'd picked felt a little bit like being tied up, except that she needed to focus on holding still and being obedient for him, which pushed her submissive button even more. She sat just like she had been, facing her painting but no longer seeing it at all. Knowing his eyes were on her made her imagine she could feel them like a physical presence, focusing and sending little ghostly flickers across her skin.\n\n\"You don't have to hold yourself rigid like a statue,\" David said, helpfully. \"You can play with your phone or something, just try to keep that same general pose.\"\n\n\"Oh. Okay.\"\n\nThat kind of broke the bondage analogy a bit, but it still left Vivian feeling charged inside. She brought her phone out, but kept getting distracted from texting with Nicole about plans for dinner. Kinky daydreams floated across her mind's eye of how her position could be changed to make David's picture more exciting. Daydreams that mostly involved more rope restraints and less clothes, which both surprised and excited her. With just a bit of assertiveness, David had transformed her from a shy girl with an instinct for keeping her skin covered to actively imaging nude modeling for him. It made her smile and blush slightly, tingles teasing across her skin in the intimate places she wished were uncovered right now.\n\nIt went on for a while, David's pencils scratching away and Vivian struggling to stop herself from squirming into her chair to scratch the itch growing inside her. Occasionally, he'd give her a new instruction, or get up to shift one of the lights around them, which only intensified her fantasies and built her arousal. Without Nicole's texting banter about forcing Devyn out of the house to distract her, Vivian would have been a complete wet mess by the time David finished.\n\n\"Would you like to see it?\" David finally asked, putting a hand on her shoulder and making Vivian jump slightly.\n\n\"Of course!\"\n\nDavid's portrait of her was not what Vivian had expected at all. It was beautiful, showing her form far more prettily than she thought of herself, and amazingly detailed for how quickly he'd done it. There were none of the smudges and eraser marks that had plagued her own pencil drawing lessons, and his shading made the black and white seem completely lifelike.\n\nIt was her, right down to the slightly embarrassed look she'd had when she realized what he was doing, yet somehow still capturing in her smile how she'd ended up enjoying it. This was how he saw her, as very pretty young woman who appeared friendly and bright. He had seen her completely, and captured her perfectly on paper.\n\n\"I did your face last,\" David said. \"I wasn't quite sure what to do with it because your expression kept shifting. You were really focusing while you were painting, but then you got this cute embarrassed happy look. But then you kept snickering at your phone. What was that all about, by the way?\"\n\n\"Nicole -- you don't know her yet, but she's another friend -- she was gossiping about Devyn and Malcolm and inviting us to go out with all of them tonight.\"\n\n\"Oh, cool. That sounds like fun. Where are we going?\"\n\n\"Brooklyn. Apparently, we're doing dinner, and we have to think of a few songs to sing for karaoke.\"\n\nDavid laughed at the way Vivian's voice gushed with excitement. \"I'm guessing you're not like most people. Most people hear that and panic about having to think of just one song they can perform well enough for a crowd, but I'm guessing you have the opposite problem.\"",
        "Once again, David had her pegged exactly. \"It kind of depends on how deep their song book is,\" Vivian said. \"But yeah, my sister and I went through a phase in college where we did it almost every weekend. It'll be so much fun to let loose with her like that again.\"\n\nDavid smiled wider. \"Does this mean I'll get to meet her tonight too?\"\n\n\"Yep! Nicole said there'll probably end up being twelve or thirteen people.\"\n\n\"You must really like me if you're already introducing me to the family,\" David teased, squeezing her in a tight hug.\n\n\"Meeting Susan is nothing,\" Vivian teased him back. \"If you survive meeting my father, that'll be a real milestone.\"\n\nShe looked back down at the drawing, once again marveling at how well he'd captured her. She'd been amazed when they'd first met and he'd talked having dabbled in knitting, but it turned out he hadn't been kidding about trying a bit of everything when it came to art and anything creative. His apartment was a mess of half-finished projects of every kind, which Vivian was in the process of trying to organize for him. Still, his basic drawings were what he returned to most often, and they always turned out vividly lifelike.\n\n\"David, this is really amazing. I love it. Can I keep it? Please?\"\n\n\"Of course! It's for you.\"\n\n\"Thanks.\" Vivian carefully packed it into her bag, biting her lip slightly as she thought about how to confess what else had been going on with that smile he'd drawn. \"Um -- David? You know how you got assertive and confident handling me before? I really liked that.\" She paused for a second, shoving down the impulse to feel embarrassed, then made sure he understood. \"It felt like you were being dominant with me, and that made me feel submissive. It turned me on.\"\n\nShe fidgeted nervously with her bag. This was the first time her tastes had come up since she'd told him about being submissive the week before. Finally, she glanced up to find David looking thoughtfully back at her.\n\n\"Interesting,\" he said, looking deeply into her as if he were seeing her soul. \"I'll bear that in mind. Honestly, that's easy for me. I guess I always assumed that being dominant had to involve leather and whips and stuff like that.\"\n\nLittle fireworks of excitement went off in Vivian's mind. If that was easy for him, this was going to be perfect! \"It doesn't have to mean anything specific,\" Vivian quickly said. \"That's kind of a common myth. Leather and whips and stuff can be part of it, sure, but in reality, it's just what feels fun to us. It's more like a feeling. I just like feeling like you're in control of me, however that manifests.\"\n\nVivian watched David's expression as she lay herself even more bare to him. First her body, now this part of her inner self. His smile took on a decidedly more charged feel. What did that mean? Did he understand?\n\nSlowly, he closed the distance between them. Wordlessly, using the same firm, assured pressure as before, he guided her arms over her head. \"So, what you're saying...\" He held her arms up with one hand and teased around her waist with the other. \"Is that, if I'd decided the picture would have been better with your boobs in it...\" He slowly raised her shirt up and off of her. \"And I'd just taken hold of you and stripped you like this...\" He smoothly unhooked her bra and slipped it up over her still raised hands. \"That would have turned you on?\"\n\nVivian's heartbeat had jumped into overdrive, and she was nearly hyperventilating. She tried to speak, but the fireworks exploding in her head made thinking impossible. He had it! David had the dominant instinct! He could press her submissive buttons and turn her to goo! So, instead of forming words, she just let her feverishly aroused panting speak for her, and nodded fervently.\n\n\"That's good,\" David said, appreciatively smiling at her breasts, which Vivian felt instantly heat as if his eyes were the sun. \"Because your boobs are far too hot not to model.\" But, to her dismay, he didn't touch them. Instead, he handed her clothes back to her. \"I hope you're still in this mood when we get back tonight, because I've been dreaming all week about that blowjob you gave me.\"\n\nNo! He'd been doing so well! Was he really going to wind her up like this and just leave her hanging! \"We don't have to leave yet!\" Vivian protested, ignoring her shirt and pressing her chest out hopefully.\n\n\"We really should, it's at least an hour to Brooklyn on the subway and it's already\u2014\"\n\nActing mostly on instinct, Vivian quickly dropped to her knees in front of David. It was easy to justify it to herself as educational, training David to associate dominant behavior with orgasmic pleasure. Still, the intensifying throbbing in her core and telltale stiffening of her nipples as she looked up at him made it hard to deny she loved it too. The change in perspective triggered her submissiveness into overdrive, and she shivered slightly feeling lust course through her. Any inhibitions or embarrassment she might have felt stood no chance against the urge to make David feel as hot and horny as she was now.\n\nLooking up into his eyes, Vivian tilted her head and bit her lip in what she hoped was a seductive way. \"You know, another part of being a submissive is making sure I'm always sexually available for you.\" She licked her lips, keeping eye contact while leaning forward slightly to brush her cheek against the front of his pants. \"Whenever my boyfriend wants a blowjob, my boyfriend gets a blowjob.\"\n\nIf the hard bulge she felt from the contact with his pants hadn't made it obvious, the fire burning in his eyes told her all she needed to know. In seconds, he had his pants off and his thick, hard cock right where it belonged.\n\nVivian moaned slightly as her lips and tongue slid over him, loving his heat and the feeling of hardness filling her up. Last time, she'd tried to be rough on herself, and he'd said he'd loved that. Still, after he'd made her cum and he'd had his turn to cum in her pussy, David had chosen a very slow rhythm, easing his full length into and out of her from the very tip of his head to the root.\n\nTime to see if that's what he really preferred.\n\nVivian settled her lips around the head of his cock, taking her time and licking up over his sensitive underside in the way that made David groan delightfully. Slowly, deliberately, she inched down his shaft. One slow lick at a time, keeping her lips locked tight around him, she gave him the same slow and intense penetration experience he'd chosen to fuck her with.\n\nShe paused for a second when he hit her throat, loving the way his cock's throbs seemed to reverberate through her head and send shocks of pleasure directly to her clit. She could fall in love with this penis. Bracing herself, she clenched her fists, took a big gulp of air in through her nose, and pushed forward. It took effort to keep the slow pace, her instinct was to either take him all at once or let him go back out, but she managed it. Slowly, she eased the bulging head of his cock past her gag reflex, and steadily took the last of him.\n\nDavid let out a low, pleasure filled groan that would have brought a triumphant smile to Vivian's lips if they hadn't been crushed against his balls and pelvis. Unconsciously, Vivian flipped her skirt up, slipped a hand into her panties and started on herself. The first contact with her clit sent a surge of pleasure through her, making her moan and her throat vibrate around his cock. It felt like heat was coming at her from both directions, her sopping pussy radiating with it and his cock throbbing it all through her head.\n\nVivian kept the pace, trying to make each stroke in and out of her mouth last for a full count of five. It was hard. Trying not to get lost in the sensations coursing through her while keeping herself steady blowing him made it difficult to remember to do things like breathing. It was so tempting to speed up. Her hand was flying over her clit now, feeling better and better the faster and harder she pressed. But every time David's head passed into her throat, it was like a reaction was ripped out of him. Like he lost control of his body for a spit second, and he spasmed and shook and made sounds that filled Vivian with delight.\n\nThat had to mean she was doing something right!\n\nVivian's pussy clenched hard, and her clit throbbing against her fingers, warning that she was about to cum. Surprisingly, backing off was easy. She didn't want to cum yet. She wanted to cum with David, and she'd been trying to time it so they would get there together. With how much he was shaking and groaning, it was a little surprising it hadn't happened already.\n\n\"I want you to do something for me,\" David said between pants above her. He seemed to be waiting for a response from her, and he gave a second's laugh when he realized Vivian's occupied mouth made that impossible. \"When I tell you to, I want you to stand up and pull your panties down a little. I want to cum all over your pussy.\"\n\nVivian's mind melted. Dreams of twin simultaneous eruptions vanished, instantly replaced by visions of hot pearly white cum covering her. More than bathing her clit in cum, though, Vivian was thrilled that David was getting into it! He wanted to use her to make this fantasy of his real!\n\nIt didn't take much longer. Vivian fumbled blindly with her skirt zipper, getting ready to drop it out of the way as she felt his body tense and his cock expanding, the telltale salty taste of precum flowing freely over her tongue. With a sudden groan, he hit the edge and pulled free from her mouth.\n\nSuppressing her body's sudden urge the gulp down air and massage her throat, Vivian quickly jumped to her feet, her skirt falling to the floor, pulling the waistband of her panties down with one hand and grabbing his cock with the other. He was completely slick with her spit and drool, and her hand flew as she stroked him, trying her best to keep him aimed correctly while pleasuring him.\n\nIt worked best when she nestled the head of his cock between her lips right up against her clit. She could really stroke his shaft firmly without worrying about aim, while pleasuring his head by rocking her hips. David's breath caught and he wrapped his arms around her neck. \"I'm really close!\" He gasped.\n\nDavid pulled her in tighter, forcing their foreheads against each other. Vivian could feel the muscles in his arms tense and see the pleasure written across his face. Best of all were his eyes. David stared down at their joined genitals with a look somewhere between ecstasy and awe. Up close like this, she could see the way his pupils dilated and feel his labored breathing against her cheek.\n\nIt felt good grinding her clit on him like this, but it wasn't quite enough stimulation to tip her over the edge. That didn't matter. The orgasm she'd been close to had slipped to the back of her mind, and all of Vivian's attention was focused on David and giving him even more pleasure. She wanted to make him squeeze her even tighter, feel his cock throb even harder, hear his breathing get even harsher and feel him unleash all his pent up cum all over her pussy.\n\nShe got her wish.\n\nIt was immediately very hot and very wet, and the way she could feel it squirting directly against her clit hit Vivian's mind like a ton of bricks. It was so lewd -- so much like something out of porn, it completely satisfied Vivian's inner slut. It made her feel so sexy, so desired and hot, she loved it and drank in the sensation of every throbbing pulse of cum.\n\nIt took them a few minutes to come down from their sexual high. They both stood motionless, leaning against each other, catching their breath until David finally spoke. \"I -- uh -- thanks. I always wanted to try that. Sorry if it was kind of sudden.\"\n\nHe sounded kind of self-conscious. Like now that he'd cum, he'd regained some inhibitions. \"Don't be sorry! It was really hot.\" Vivian said, wanting to dispel any negativity he might be feeling. \"David, thanks so much for letting me be a part of something you wanted. Fulfilling your sexual desires is exactly what gets me going.\" She very lightly ran her fingertips over her pussy. There was a massive amount of cum there, stuck between her labia, dripping from her clit and coating her panties underneath where she was still holding them down. \"And judging from all this, I'd say you liked it too,\" she said with a wide smile.\n\n\"Of course I did! Sorry, I didn't mean to sound negative, I just \u2014 I don't know \u2014 I guess I worried you wouldn't like me making a mess out of you. It's all new to me. I feel kind of like I've found a genie who's giving me unlimited wishes. I've never been with anybody who's told me to do whatever I want with her before.\"\n\n\"How does that make you feel?\" Vivian asked, suddenly worried that she was overloading him.\n\nDavid smiled, a bit of the edge he'd had before coming back. \"Honestly? Half of me worries that I'll do something wrong and mess it up for you. But the other half feels like he's having a complete joy ride! There's so many things I've imagined all my life, it's like I'm a kid and you've handed me a hundred bucks to go crazy in a candy store.\" He watched Vivian toying with his cum, the smile getting wider. \"Would you like to hear the second half of that particular fantasy?\"\n\n\"Wait. I mean, yes I do, but wait a second.\" It was more difficult to think and have a conversation while playing with cum on her pussy than Vivian would have thought. \"About that first part. I really don't want to pressure you into being something you're not comfortable with.\"\n\nDavid chuckled, \"then I guess we're both worrying about stepping on the other's toes.\"\n\n\"Maybe a little,\" Vivian returned the laugh. \"But, if you'd like it and you're comfortable with it, I can ask some dominant friends of mine if they could share some of their experiences with you? Maybe that would help? I've never really thought about it before, but the internet is full of stories and guides and things about how to be the perfect submissive. I have no idea how Doms are meant to learn their role.\"\n\nVivian would have probably had a panic attack if her partner had suggested she talk to some of his friends about learning to be better in bed. She'd almost held off suggesting it because of that. David, however, looked relieved. \"Yeah, that would help a lot,\" he said. Vivian smiled, almost afraid to believe how lucky she was. He really wanted to get this right, to be with her and follow her along this path, so much so that he was willing to go that far outside his comfort zone without any hesitation. Except, this was David, the disarmingly charming guy who'd swept her off her feet approaching her in the park. Normal shyness didn't seem to apply to him.\n\n\"All right then, I'll ask Malcolm and Sam tonight.\" The hard part now decided, Vivian let herself slip back to enjoying the warm wetness engulfing her vagina. \"Now, what were you going to say about me making the second half of this fantasy of yours come true?\"\n\nDavid's face did a thing that Vivian could only think of as glowing. \"Oh, that's simple. It's perfect because we really should head out now. It just involves you pulling your panties up, getting dressed, and leaving on a nice date with me while you're wearing my cum all over you.\" Vivian felt her eyes get wider and her body rush directly back into full on sex mode. \"Oh, too much?\" David asked, noticing.\n\n\"No, not that. Um... it's just that I think you're going to have to make me cum first or I might explode.\"\n\nDavid laughed. \"You're a very interesting person, Vivian.\" He replaced her hand between her legs with his own and went to work on her. \"And I think I've figured out why you're always late to everything.\"\n\n----------\n\nVivian: Hey\n\nVivian: So, I dont want to impose or put you guys in a spot youre uncomfortable with\n\nVivian: But I could use some help explaining Dom stuff to David and I was really hoping both you Doms might be willing to talk to him?\n\nVivian: I wouldnt ask but I have no idea how to teach him about this kind of stuff other than just telling him what I like\n\nMalcolm and Sam were both included in the group text, so I assumed that's who Vivian meant her request for. Sam was already playing on her phone while we waited for our table, so I passed mine across to Malcolm to read.\n\n\"Interesting,\" he muttered, quickly scanning the screen.\n\n\"She wants me to have a kink talk with this guy I've never even met?\" Sam sounded incredulous.\n\nSam can be a bit prickly at times, especially when it involves men she doesn't know or especially like. Unfortunately, I kind of had to admit her reaction had some merit this time. Wanting to head off that line of thought, I jumped in to defend Vivian. \"She's only asking because she's really comfortable with you two. Trust me, I know she means it about not wanting to impose on you. If she's asking for help anyway, it means she really can't think of a better alternative. She really likes this guy.\" I added the last bit almost pleadingly.\n\nSam sighed and composed herself. \"I know. He sounds like a nice guy from what she's said -- what's his name again?\"\n\n\"David.\"\n\n\"Right, David. I get that it's important to her, and it sounds like he really makes her happy. Still, having that kind of talk with somebody I've never even met?\"\n\n\"I won't pretend I'm thrilled by the idea either,\" Malcolm put in. \"Still, imagine how he's probably feeling. It's probably even more awkward for him than it will be for us. At least we know what to expect, he's probably feeling like he's going in blind.\"\n\nSam sighed again, but didn't disagree. In her language, that was pretty much a yes.\n\n\"Don't be so gloomy!\" Nicole put in brightly. \"It's the perfect first introduction for us to laugh about months from now.\"\n\n\"Not all of us are addicted to cringe humor sitcoms like you,\" Malcolm observed, and Nicole stuck her tongue out at him.\n\n\"We've actually met him already,\" I admitted.\n\n\"Yeah, he's really cool, really easy to talk to, too,\" Malcolm added. \"Trust me, this won't be nearly as awkward as it could be.\"\n\nNicole feigned outrage, \"What! When did you meet the new boytoy? What other secrets have you been keeping from me?\"\n\n\"I have not been keeping secrets! You made me skip over everything else in the story to the part where Malcolm was being all corny trying to be romantic asking me to move in with him.\"\n\nNicole gave me a smirk and turned to Malcolm. \"She never said it was corny when she told me about it. She said she really liked it.\"\n\nMalcolm and Sam laughed while I blustered about Nicole being a traitor.\n\nWe stood in Insa's entryway. Insa seemed to have a wood theme going, the walls and main dining area was mostly bare pine, making it look more like a ski lodge than a restaurant. Alluring smells of cooking meat wafted over us from nearby tables, making my mouth water in anticipation. While we were talking, the rest of the group Nicole had invited turned up. They were all people both she and I knew, which meant they all from the same group of kinksters that was the intersection of our social circles.\n\nThomas and Julie were the newest additions to our clique of youngins inside the larger munch crowd. They were the deceptive type who looked like they would be perfectly at home thumping bibles at Sunday mass, but the two had some of the dirtiest minds I'd ever encountered. Madison and Kate, Sam and Nicole's playmates from the Valmont's party, arrived one after the other. They both dressed like they were trying to make summer last a little bit longer, despite the quickly lowering temperatures of autumn. The way they enthusiastically greeted Sam and Nicole, with tight hugs and lingering touches, showed they clearly had more on their minds than just dinner out with friends.\n\nMalcolm and I backed away to give them some space while I Instinctually braced myself for the wave of jealousy that always hit me whenever I saw somebody being familiar with one of my past lovers.",
        "It didn't come.\n\nOf course it didn't come. Why would it have? I'd only fucked Nicole once, and it had just been a bit of fun, nothing emotionally about it. She was just a friend. A hot friend who liked to flirt and knew how to push my buttons, but she really wasn't anything more than that.\n\nI guess old instincts, like my lifelong one to expect my crippling jealousy, die hard. Malcolm smiled his knowing smile when I shared that with him. \"Does it surprise you so much to find that you're not the same person you were a few months ago?\"\n\nHonestly, it kind of did. I didn't really feel very much different. When had that happened? \"You're not the same person either, you know,\" I told him.\n\n\"Oh?\"\n\n\"Nope. If past-you had gotten that text message, he would have given some bullshit excuse about not being a good enough Dom to be giving anybody advice.\"\n\nMalcolm thought about that for a few minutes, idly toying with my hand in his while we watched the foursome across from us move from flirtations to full on public displays of affection. \"You're right,\" he finally admitted. \"I probably would have.\"\n\n\"Of course I'm right, dumbass.\" I playfully poked at him, earning a laugh and a swat in return. \"If you'd just listened to me from the beginning, you could have bypassed all that needless negativity.\"\n\nHe rolled his eyes. \"Riiiight, because you're a completely unbiased arbiter who can objectively dictate how I should view myself.\"\n\n\"Um -- you're the guy who causes me pain and denies me pleasure. Anything positive I have to say about you should be seen as the purest truth in the world.\" I tried my best to look affronted while saying it, but his smile cracked me, and I ended up laughing.\n\nVivian and David were the last to arrive. Like Madison and Kate, Vivian wore an autumn chill defying skirt along with a long-sleeved top that was reasonably plain, but had a diving neckline that was positively adventurous by her standards. It had taken me a few weeks to realize, but since she'd started dating David, Vivian had made some efforts to look pretty for him. She hadn't put on any makeup tonight, but she sported a nice looking braid that trailed over her shoulder.\n\nSomething else about her seemed unusual, but it took me a few seconds to figure out what. The way her skin flushed slightly, and her eyes stayed glued to David even while greeting her sister and their friends, gave it away. I leaned into Malcolm's ear and whispered, \"they totally just fucked!\"\n\nMalcolm cast an appraising eye over the couple, David now shaking hands with Susan and her boyfriend Dean while Vivian leaned into his other arm. \"She does have the same sort of look to her that she had at the party.\"\n\n\"Yeah, except this time, she doesn't just look generally horny. She's got one dick on her mind, and it's in his pants.\"\n\nMalcolm laughed, his voice taking on a teasing tone. \"You know, just because you spend your entire life with your mind in the gutter, it doesn't mean everybody does.\"\n\nI quickly glanced around, saw nobody looking in our direction, and brought Malcolm's hand up between my legs. \"You say that as if you're trying to imply you don't spend all your time dreaming about my pussy.\" I gave him a teasing wink, then added, as ironically as I could, \"Sir.\"\n\nThere are many ways to fuck up a night of KBBQ. Caring about how many thousands of calories you're consuming is one of them. I'd probably have to spend two weeks at the gym just to burn through everything I ate that one night, but if you're going to splurge on a meal, it might as well be something amazing.\n\nWe wanted one of the long bench tables with multiple grills so we could all sit together, but unfortunately, none were going to be available for another hour. Instead, our group had to split between two smaller tables. Despite the entire thing being Nicole's idea as an excuse to spend time with me, she and Sam took the table with Kate and Madison. Judging by the tone of the shrieks and laughter coming from them, the group was busy planning out what they'd all be doing once they got home. Thomas and Julie joined them. Even though they were kind of third wheeling, it was exactly the kind of brainstorming session they excelled at.\n\nWe ended up with Vivian, David, Susan and Dean. I hadn't realized it before, but despite having been to several munches and a party with them, this was actually the first time I'd had a conversation with both the sisters at the same time. I had an image in my head of them being similar, and they did share a lot in common, but interacting with them together made me feel dumb for overlooking how different they really were. Susan... well, not to be too judgmental, but Susan was the kind of bitch who cared about being the prettiest princess in the room. She was nice enough to talk to. We shared a lot of interests, like how she was somehow even more passionate about following college basketball than either Vivian or I were, which was saying a lot. Still, her obvious vanity grated on me.\n\nShe was also a hardcore UConn Huskies fan. I could forgive Vivian for that crime because she's amazing, but I sure as hell wasn't about to extend another pardon. Especially not when Susan kept waving her hair and batting her eyelashes at Malcolm. Vivian would probably have tried to calm me down by pointing out that Susan did that to everybody, David included, but fuck that. My only consolation was that, out of all of us, Sam was by far the best looking and the best dressed, and judging by the looks she threw in Sam's direction, Susan knew it.\n\nAnother way to fuck up KBBQ is to do it without anybody who knows how to cook. After the mountain of marinated meat we'd ordered arrived, Malcolm made to take up the tongs, but Vivian gently took them from him. I don't think either of us would have pegged her for an experienced griller, but she defied our expectations and kept a steady stream of perfectly cooked meat appearing on all our plates.\n\n\"Let's just say our dad isn't the most liberal guy in the world,\" Susan explained, and Vivian laughed at what must have been an extreme understatement. \"In Japan, he got used to the kitchen being mom's territory, and after she passed, we inherited all the cooking duties.\"\n\nI knew a bit of Vivian's backstory, but that was all news to David. \"Did you grow up in Japan?\" He asked.\n\nVivian shook her head. \"They moved here a few months before we were born. We've visited family there a few times, but that's about it.\"\n\nDean nudged Susan and flashed a wicked smile across the table to David. \"You should get her to speak Japanese for you.\" Instantly, both sisters hid their faces in their hands.\n\n\"You never told me you speak Japanese!\" I exclaimed, much impressed. I've got a bit of a fascination with Japanese, stemming from a teenage anime obsession and a more recent obsession with a band called Babymetal. Malcolm and I had been trying to grab tickets to see them, but Madison Square Garden prices had other ideas.\n\n\"I'm awful at it!\" Vivian protested, and Susan nodded agreement from behind her hands.\n\n\"No you're not,\" Dean said, then added to us, \"they used to use it back in college to share secrets they didn't want the rest of us to understand.\" The sisters made noises of embarrassment, but didn't deny it.\n\n\"We never really had anybody other than each other and dad to practice with. Whenever we visit the family, they always make fun of how bad our accents are.\" Vivian shook her head, embarrassed by the memory. \"Everybody there says we sound like we're basically white, and Dad always looks mortified.\"\n\nDean seemed mostly interested in teasing his girlfriend, but David was just the opposite. He plied Vivian with a string of questions about how Japanese was different than English, what it would take for her teach him, and whether there was any way around brute force memorizing the thousands of characters that made up the written language.\n\nMalcolm and I found ourselves momentarily on the outside of the two couples' conversations, and we exchanged a look, both struck by how happy Vivian seemed by David's interest. Her embarrassment forgotten, she positively glowed -- speaking in excited rushes about how it wasn't that difficult to learn, really, and how much she'd love to be able to practice with him.\n\nI whispered in Malcolm's ear, \"You see the way her face lights up like that? It does that every time he smiles at her.\"\n\n\"Yeah. It's really cute.\"\n\n\"It fucking is!\"\n\n\"It's almost as cute as the face you make when you're trying to be stealthy and I catch you cleaning up.\"\n\nThe smile he gave me could only be described as infuriatingly smug. \"And what look would that be, pray tell?\"\n\nHe laughed, the smile growing wider. \"You've always been so stubborn about keeping your apartment as messy as possible, but you're willing to change your ways now we're living together, in order to make me happy. But, despite being willing to do some organizing and picking up, you're not willing to let that stubborn streak go. So, rather than admit that living in a tidy house is actually nice, you try to hide what you're doing. That's why the look is so cute, you look like you got caught doing something naughty, but in reality, you're doing something really considerate for both of us.\"\n\nEverybody around the table laughed, and I realized too late that our last exchanged hadn't been whispers. \"That is really cute!\" Vivian said, sounding like she'd just seen a cat video.\n\n\"Remind me why I love you?\" I directed at Malcolm, earning another round of laughter.\n\nWe were all in that warm, happy haze that comes after eating far too much amazing food when we finally made it into our karaoke room. I'd been expecting a small space that would feel claustrophobic with all twelve of us, but I was pleasantly surprised. The room was very spacious, with a series of comfortable looking couches and a low table in the middle with three pitchers of beer waiting for us. Maybe it's just me, but I feel like it's hard to walk into a room with cold quality beer and not be happy to be there.\n\nNicole intercepted me on the way to join Malcolm on a couch in the back. \"No you don't, hot stuff!\" She pushed me down on an empty couch, produced cup full of beer out of thin air, pressed it into my hands and flopped down next to me.\n\n\"I thought you'd forgotten about me,\" I said, caught off guard.\n\n\"You? Never! How could I forget my fair giantess?\"\n\n\"Oh\u2014Fuck you, short stuff!\" I playfully nudged her, using a bit more muscle than she was expecting and sending her toppling over. Madison and Kate, lounging on the couch across from us, seemed to think this was the most hilarious thing they'd ever seen, so I gave them a little bow.\n\nNicole, never one to shy away from being the center of attention even if it involved her looking silly, made a show of blowing them a kiss. I leaned into her and whispered teasingly in her ear, \"getting them in the mood for tonight, eh?\"\n\n\"Actually no,\" she whispered back, dramatically raising her hand to shield her mouth like she was telling me a scandalous secret. \"We had to make plans for next weekend. Why?\" She hit me with her most mischievously flirtatious smile. \"Were you thinking of joining us?\"\n\nNicole was only half teasing, and we both knew it. Our polyamorous experiment had been mostly successful, but she understood that I wasn't about to hop into bed with just anybody else on a whim. Still, if I had said yes, they would have all welcomed me with open arms and spread legs.\n\n\"Restraining yourself for a whole week? That doesn't sound like the Firefly I know and love,\" I teased back.\n\n\"I'll have you know I'm every bit the well-disciplined denial slut you are!\"\n\nI laughed, nearly choking on the sip of beer I'd just taken. \"And, as your sister in denial, you can't fool me with that shit. You'd cum your brains out every day if you were on your own and didn't have Mistress Sam to keep you honest.\"\n\nNicole, apparently, couldn't even pretend to deny that. She started to say something about it taking one orgasm obsessed sex addict to know one, but most of it got drowned out by Susan starting the night's karaoke.\n\nNow, I'm hardly a seasoned karaoke veteran, but I've done it enough times to know people generally fall somewhere along a spectrum. On one end, there's those like me, who can't sing for shit but enjoy getting drunk and making fools of themselves with friends. Then, on the other end, there are those who sound fucking amazing and make the me-s of the world sound even worse by comparison.\n\nSusan was definitely a member of the second camp. She and Dean sang the duet from Hamilton where Maria Reynolds seduces Alexander Hamilton and he bemoans his inability to say no to her. I didn't like admitting it, but there was no denying that the way Susan threw her voice around was damn impressive, even though Dean technically had most of the song's lyrics.\n\nIt was a great choice for a first song. We all fell firmly inside the demographic of millennials who had memorized the play from start to finish, and everybody joined in, setting the mood for the rest of the night. Despite the original Broadway version having a downbeat tone, our rendition was raucous and as raunchy as possible.\n\nFortunately for me, most of the rest of us were on more my side of the talent spectrum, so nobody minded when anybody else butchered lyrics or flubbed timings. We mostly kept with things that were easy and everybody knew. Disney songs were popular, but there were others aimed at just being fun. For example, we all died laughing while Nicole bounced around the room slapping asses, singing I Like Big Butts.\n\nThen there were some unexpected surprises. Through long experience, I've come to expect being the only person in any room who can't stand Bohemian Rhapsody, so I was thrilled to be part of the majority who boo'd it down when somebody tried to bring it on. We had some kindred spirit metalheads who joined Malcolm and I trying to cover Disturbed's Inside the Fire. I've always been obsessed with that song, starting from when I was young and liked any song with my name in it, without realizing what the song meant. After that, somehow, I was the only one who didn't know The Bitch Is Back word perfect. I get it from Malcolm, his parents are huge Elton John fans, but where does everybody else dig up relics like that?\n\nBut the highlight of the evening was easily Vivian and Susan. Among nerds of a certain age, there are some pretty safe bets, and even if they hadn't seen much of the show, everybody recognized the opening song from Neon Genesis Evangelion. Unlike a lot of anime themes, which are carried a bit by nostalgic association with their show, Cruel Angel's Thesis is just a really good song that more than carries itself.\n\nIt's also a really fucking hard song to pull off well. Not least because it is completely in Japanese, it also requires very full, powerful vocals or it just doesn't sound right at all. Vivian and Susan nailed it. It had gotten pretty late, and we were all more than a little tipsy, so there was a stunned silence afterwards before we burst into applause.\n\nOf course, that only made them hide their faces in embarrassment, which was adorable. Vivian fairly dove out of the way of the attention, sitting beside me and quickly grabbing more alcohol.\n\n\"That was amazing!\" I told her, enthusiastically tossing an arm around her.\n\n\"Easy for you to say,\" she said in a small voice. \"Any native speaker would\u2014\"\n\n\"Oh shut up with that.\" Nicole cut cleanly through Vivian. \"That was awesome and you deserve credit for it.\"\n\n\"Yeah, check out David,\" I suggested. David sat between Malcolm and Sam on the last couch in the room. They'd been chatting there quietly for a while, but now, David beamed impressed appreciation right at Vivian. That had about the same effect as it had all during dinner, and Nicole and I exchanged a smirk watching Vivian's face instantly flip to delight. \"So, care to explain why you two were the last to get here?\" I teased.\n\nI'm not sure if it's a testament to how comfortable Vivian was with Nicole and I or what, but somehow, this generated much less of the embarrassed flush from her that singing in Japanese had. Actually, in retrospect, her flush right then might not have been embarrassment at all.\n\n\"Oh my god Devyn! I'm such a slut.\" She giggled, casting wicked looks between Nicole and I.\n\n\"Well, that doesn't narrow things down very much,\" Nicole sarcastically observed, which redoubled Vivian's giggles.\n\n\"I'm gonna guess they got distracted by that antique store across the street,\" I matched Nicole's sarcasm. \"It looked like they had some very stylish old shit in there.\"\n\n\"Nope! Guess again!\"\n\n\"It had to have been that church, then. You saw the sign of the cross and you were filled with the urge to repent your hedonistic lifestyle.\"\n\n\"No! You guys...\" She dropped her voice low and leaned in close to us. \"We were having sex.\" Nicole and I each started saying something just as sarcastic as before about how obvious that was, but Vivian kept going in a rush. \"I was going to make him cum in my mouth, but then he did it all over my pussy and panties and made me wear them here. Basically, I've been wearing his cum on my vagina all night, and it's got to be the sluttiest thing I've ever done! You wouldn't believe how hot it's made me feel this entire time. I can't take my mind off it, and every time I think of it, it's like a rush.\"\n\nNicole looked like her jaw was about to hit the ground, which was good because it meant I wasn't the only one. Looking tremendously satisfied, as if our reactions of disbelief were some kind of victory for her, Vivian got up and motioned David to join her for the next song.\n\n\"That was totally going to be my next guess.\"\n\nFor some reason, Nicole didn't believe me.\n\n----------\n\nThe singing slowed as the evening wound down. Conversations replaced karaoke, but eventually those slowed down too as all the food and drink took their toll. There were stifled yawns, hugs and promises to get together again soon as people said their goodbyes until, eventually, Devyn, Nicole, Vivian, and their partners were the last ones left.\n\nVivian gave Susan and Dean one final wave goodbye, then turned back to the remaining group and smiled to herself. Devyn lay sprawled across one of the couches, her head resting in Malcolm's lap like a pillow, her eyes half closed and happy contentment shining across her face as he played with her hair. She looked like a very large cat, especially with her collar nestled around her neck to complete the image. Maybe she should get her some cat ears? They would be so cute on her!\n\nDirectly across from them, Nicole had lain herself out to mirror Devyn. Her red hair fell in waves across Sam's black dress and dark stockings in an eye-catching way. It reminded Vivian of flames across a dark background, a bit like a campfire at night. Whenever Nicole turned or Sam shifted in her seat, it caused the hair to move and made it seem like the flames danced.\n\nDavid was situated on the remaining couch between them. He'd been chatting quietly with Sam and Malcolm for most of the evening, but they'd spread out a bit as more space became available. That was pretty much exactly like her boyfriend. Just like he'd done with Devyn and Malcolm at Barcade, David had arrived amongst a crowd of people he had mostly never met, and immediately become everybody's friend. Vivian had been a little worried about how Sam might react to him. Malcolm was pretty much the only man Vivian had heard Sam say nice things about, but it seemed she might have made another exception for David.\n\n\"\u2014shouldn't be thinking of them as fundamentally different,\" Malcolm was saying as Vivian joined David on his couch.\n\n\"But aren't they?\" David asked.\n\n\"Yes and no. Really, Doms and subs are more similar with some differences than they are different with some similarities, if that makes sense.\"",
        "Vivian felt just as confused by that as David was. Maybe it was because she was joining the conversation late, but still. Dominants were confident, assertive beasts who used their Dom magic to switch sub's brains off and turn their insides to goo. Surely that was a pretty big difference? David expressed a similar outlook, how intuitively one role felt like it was meant to lead, and the other was meant to follow.\n\n\"That's true, on the surface,\" Malcolm agreed. \"Still, if you want to use that metaphor, then Doms and subs are similar in that they're both trying to get to the same place. As it were.\"\n\n\"If by place you mean getting each other off,\" Devyn helpfully contributed.\n\n\"Yeah,\" Sam chimed in, \"and even though the dominant is the leader, they don't get to decide on their own where that place is or what you'll be doing together to get there.\" She gave Nicole's head an affectionate pat, as though to include her in what she was saying. \"That's something you both decide together.\" She paused to exchange a thoughtful look with Malcolm. \"It's hard to describe because the leader slash follower analogy doesn't really work past the surface level.\"\n\nMalcolm nodded agreement. \"Yeah. On the surface, the dominant does lead things and holds all the power. That's what makes it fun for both people. But that's really just the role-playing game. In a broader sense, it's more like a cycle.\" He waved his hands around each other in a circle to try to demonstrate. \"Both Dom and sub are leading the other, and both are following the other's lead.\"\n\n\"You're being too philosophical, Professor,\" Devyn said from Malcolm's lap.\n\n\"Yeah, be considerate of your drunk audience,\" Nicole agreed.\n\nMalcolm shrugged, looking to Sam for help. \"Okay,\" she said, sitting Nicole up and taking firm hold of her as if she were using her as a stage prop. \"Imagine I'm thinking of having some fun with an unruly red-haired sub.\"\n\nNicole smiled wide, \"I like this already!\"\n\n\"Without dwelling on specifics, let's imagine I'm planning to have my none-too-gentle way with her.\" Sam had to pause for a second while Devyn purposed a few specifics she would like to dwell on, while Nicole tried her best to nod approvingly through Sam's grip on her. \"And, as you can probably tell from these two, I wouldn't be the only one having fun. She likes being treated rough. We both want the same thing.\"\n\nThis time, instead of being silly, Devyn seemed more serious. \"You're both making each other happy at the same time, with the same stuff.\"\n\n\"Right, I get that,\" David said. \"The part I don't get is how that works itself out to her being half leader?\"\n\n\"Well, how rough can I be with her? If she doesn't like the activity I've chosen, or if I'm too intense and I push her past what she's willing to take for me, then she can stop the scene. If I really were the only leader like you're thinking, I could keep going regardless, but in reality, I can't.\" Sam paused to think for a second, taking a long sip to drain the last of her beer, then continued. \"Maybe approver fits better than leader. I don't know -- the point is submission is hardly the docile sheep follower role it gets made out to be. I can't just go crazy tyrant. Even though I'm the dominant, I'm limited in what I can do. Nicole trusts me with her power, but she can take it back whenever she wants to.\" She smiled down at her fianc\u00e9, relaxing her hold and going back to petting her hair. \"It's my job as her dominant to make sure she never wants to.\"\n\nDavid stroked his chin thoughtfully. It was the same motion he unconsciously made when he was trying to figure out which combination of colors to use for a tough section of a painting, which made Vivian smile. \"That makes sense,\" he said. \"So, like, as a dominant, part of what you have to do is make sure your sub is having a good time. Otherwise, why would they submit to you?\"\n\n\"Exactly,\" Malcolm and Sam agreed together, and Malcolm continued.\n\n\"As much as we like to play the game and pretend that submissives are just here to serve us and make our fantasies come to life, it flows both ways. They have their fantasies too--\"\n\n\"Fucking right we do!\" Devyn agreed.\n\n\"\u2014And as a dominant, you have to make sure you're catering to her kinks just as much as she does for you.\"\n\n\"Is that what you were trying to say with the cycles and the hand waving?\"\n\n\"Yes, and a bit more.\" Malcolm started doing it again, and Devyn swatted at his hands from below. It was exactly like a cat would have! Vivian had to fight to keep from interrupting Malcolm with laughter. \"Whatever I do as a dominant, I'm looking for how Devyn reacts. Does she like it? Does she not? If she likes it, should I do more of it, or just tease her with the possibility\u2014\"\n\n\"\u2014He always fucking teases\u2014\"\n\n\"\u2014Her reactions guide the scene just as much as I do. It's all back and forth.\"\n\n\"Yeah,\" Sam said, nodding along. \"Honestly, sometimes, I think of myself less as a dominant and more as just a really supportive partner.\"\n\nNicole sighed contentedly. \"The most supportive fianc\u00e9 I could ever ask for. Who else would take such care to make sure my ass is always a few shades redder than the rest of me?\"\n\nThey all laughed together, Vivian wrapping her arms around David and holding him tight. He seemed to understand what they were saying, which was good because it was stuff that had taken weeks for Devyn to work into Vivian's head. With a little flash of embarrassment, Vivian had to admit that she'd been every bit the docile sheep submissive Sam had used as a bad counterexample. As much as her friends tried to make her feel better by laying all the blame for her last failed relationship at Paul's feet, it couldn't be healthy to deny her share. The times she had tried to articulate what she wanted -- needed from him for support, he had deflected, and she had never taken her power back until it was far too late.\n\nBut, as angry as she had been after breaking up with him, she didn't feel that way anymore. It was over, and she was in a much better place. Surrounded by friends, hugging a guy who made her happy, laughing as Devyn explained to David the meaning behind Nicole's Firefly nickname and Nicole threatened retribution upon Devyn's ass. Why dwell on negatives?\n\nThe conversation made Vivian wonder something else about herself. Neither of her ex-masters had been especially interested in finding out what her kinks were, and had mostly seen her as a tool for their pleasure. Which sounded bad in those words, but Vivian had been totally fine with it. More than fine, she'd loved enabling their pleasure. BDSM had been her gateway to enjoying her sexuality without the shame and guilt she'd felt crippled by before. Wanting to be as appreciative as possible of her masters for giving her that gift seemed as natural as breathing.\n\nStill, it put her in a situation now where she wasn't really sure what her kinks were. She'd never had to think about it before! She'd just obeyed, and that had felt great. Was there a kink for simply wanting to make your master cum? Preferably inside her? Or on her? Her inner slut wasn't anywhere near done freaking out over how hot she felt wearing cum filled panties this entire time.\n\nWas there a kink for that? Being the dirtiest possible slut, reveling in how it made her feel, and feeling safe to do it because her master was there to catch her?\n\nSomewhere along the way, she'd started thinking of David as her master. It made her happy, and she clung a little tighter to his arm, smiling at the way his jaw and mouth moved while he spoke. That would be the first order of business when they got home. He'd have to get used to being called Master.\n\n----------\n\nJust before we went our separate ways, Nicole dropped a little bombshell on us.\n\n\"How's the Devyn and Malcolm Porn Studios coming along?\" she asked, as if we were supposed to have any idea what that meant. We looked at each other, confused, wondering what the joke we were missing was, and Nicole sighed. \"Neither of you opened our wedding invitation, did you?\"\n\nBoth our looks instantly turned guilty. At least I had a decent excuse! The only time I'd spent at my apartment had been to grab some clothes to move to my new home. It was probably sitting in my mailbox. Probably. I mean, in today's day and age, who the fuck actually checks their mailbox anymore? If I cared about how many credit cards I'd been pre-approved for, I would just check my email spam folder.\n\n\"See, I told you we should have just sent out digital ones!\" Nicole said exasperatedly to Sam, waving at us like the reprehensible invitees we were. \"If you had read our beautifully well-done invitations, you have seen that yours were personalized and would know that we're asking for something special from everybody we've played with.\"\n\nMalcolm raised an eyebrow at her. \"You're asking for all your playmates to make porn for you?\"\n\n\"No -- no!\" Sam quickly jumped in. \"What we had in mind was some kind of self portrait type thing. Something we can put together, like a collection of all the fun we've had before getting married.\"\n\n\"You say that as if you're planning to change your ways afterwards.\"\n\n\"It does kind of sound like that, doesn't it?\" Nicole smirked. \"But we're not, and we never will. There's just no reforming us.\"\n\n\"So, these trophies you're collecting from all your conquests... They can be anything?\" He and Sam exchanged an understanding look as he described their purposed wedding present. She smiled wide, not even bothering to deny he'd characterized it correctly.\n\n\"Yep, it can be anything.\"\n\n\"But this is Devyn we're talking about!\" Nicole said brightly. \"And every one of us here knows that she's going to want to make porn.\"\n\nNicole and Sam nodded in unison. I turned to Malcolm to find him also nodding. \"WHAT! You do know I have other interests besides fucking porn, right? There's tons of things I could choose for a self-portrait!\"\n\n\"Maybe,\" Malcolm began, his knowing tone tipping me off that I wouldn't like where he was going, so I cut him off.\n\n\"It's supposed to be representative of you too, you know. Any accusations of porn addition apply to both of us.\"\n\nIt shouldn't really surprise me anymore when I walk right into what Malcolm is thinking. \"I was going to say that making our own porn would be a pretty fitting representation of the two of us, given our history.\"\n\nHe was right. It was all over our timeline. We'd met and become friends doing an entirely serious, academic school project about porn. We'd bonded sending PornHub links back and forth, growing to trust one another and building a unique and irreplaceable best friendship. Now that we'd finally started having sex, making our own would be like bringing it full circle. Damn them all, they were absolutely right.\n\nWe were both quiet on the way home in the back of our Uber. Both tipsy and sleepy, my head rested on his shoulder and his head rested on top of mine. It was nice to decompress a bit after so much noise and social interaction, and it felt good to let ourselves sway with the motion of the car and drift.\n\nIt wasn't until we we'd stumbled up to our apartment and were brushing our teeth that he shared what he'd been thinking about.\n\n\"Did you ever meet Vivian's ex-boyfriend?\"\n\n\"What? Oh -- no. I kinda got the sense he wasn't interested into spending any time with Vivian without his cock in her, so meeting her friends wasn't happening. Why? What's on your mind?\"\n\nHe fussed with something on his face in the mirror, going over the same spot again and again before he realized the spot he'd seen was, in fact, on the mirror itself.\n\n\"Damnit,\" he muttered as I laughed at his silliness. \"I'd swear that wasn't there this morning.\"\n\n\"Don't get distracted, what were you thinking just now?\"\n\n\"Oh, right. Well, I was thinking again about what you said about me having changed in the last few months. You know, since we started dating.\"\n\n\"Oh? Have you realized how right I was?\"\n\nI wasn't being too serious, but he was. \"Yes,\" he confirmed. \"Before, after it ended with Chloe, I really did think of myself like I was Paul. That was his name, right?\" I nodded, not sure if I should let him continue or sympathize with him or what, but he continued anyway. \"I felt like the dominant part of me was this self-absorbed sadistic monster. But then, tonight, talking about everything... I don't know, it kind of helps me internalize that I'm not like him.\"\n\n\"Of course you're not! That's never been you.\"\n\n\"I know. I think I've known for a while, but it feels more real now that it did before.\" He wrapped his arms around me, softly squeezing me from behind and smiled at me in the mirror. \"Thank you for getting me here.\"\n\n\"I'm pretty sure you already said that for something similar,\" I said, wishing that compliments and appreciation from him didn't have quite such an obvious impact on me.\n\n\"Have I? Well, it's still true.\" He beamed at me, knowing me too well to take my evasions seriously and understanding just how much his words made my heart melt.\n\n----------\n\nTrust is weird. If anyone had asked her that night in the karaoke room, Vivian would have said she trusted David completely. Trust came naturally to her, even now after having so many bad experiences trusting the wrong people. She never really thought about it, it just sort of happened by default. To trust was normal, and anything else felt weird.\n\nStill, over the next days and weeks of growth, Vivian noticed that the way she felt about her new Master changed. It happened gradually. David didn't want to dive right into full on scenes with her right off the bat. Instead, he wanted to ease his way in with shorter sessions that he called training. It was meant to be practice as well as exploration into various kinks for both of them. Vivian was initially impatient to dive deeper, but somewhere along the line, she realized she trusted him more with each short kinky plunge. Much more. It gave her a warm, almost giddy feeling inside, like she was invulnerable. Like she could fall from anything and David would catch her.\n\nIt started a few days after karaoke night. For David, what he liked in this arena had clicked fairly easily -- being in control and having Vivian as his canvas to decorate and play with. However, when Vivian was trying to explain things she liked and why she liked them, she felt like she was failing because she didn't have very much experience with a lot of things. One thing she tried to describe was how she wanted something like the scene at the Valmont's party where a sub had been completely covered in ropes, unable to move anything, then suspended above the ground.\n\nBondage appealed to both of them, David liking the images Vivian showed him because it seemed the perfect way to combine his talents with the control he found himself enjoying. But, for Vivian, it was easy to convey why that would make her feel helpless and controlled, but she'd never really been tied up like that before, so explaining why it would make her feel safe at the same time wasn't so easy.\n\nBut it helped that David had rope. Of course David had rope in his house. David had everything, if only he could remember what project he'd gotten it for and where it might have ended up. When they finally found it buried at the back of a closet full of supplies David swore he'd find a use for someday, it turned out to be less rope than silky smooth lengths of sturdy cloth. Apparently, they'd been intended for weaving into a chair back, but the buyer had changed their mind at the last minute.\n\nThe material felt soft, flowing between Vivian's fingers, but it had a solidness to it that she doubted she'd be able to overpower.\n\n\"You like it?\" David asked, joining her feeling the ropes, his hands coming up underneath hers and lightly pressing around them.\n\n\"Yeah.\"\n\n\"Would you like me to put them on you?\"\n\nVivian looked up into his eyes, her mouth suddenly going dry on her. \"Yes, Master.\"\n\nIt wasn't anything overly complicated like the hogtie at the party had been. David just made a few loops with the rope, wrapped them around her wrists, and joined them together in the middle. He was so concerned about it being too tight, Vivian thought she could slip them off her hands if she wanted to.\n\nBut that didn't matter. All that mattered was how it made Vivian feel.\n\nDavid's hands felt so firm, warm and authoritative as they handled her. He held her wrists slightly apart, his skin sliding over hers as he wrapped the silky rope around her, holding her in place and taking her freedom away. It made her feel light inside. Vulnerable and held at the same time, and she loved it.\n\nAnd this was just a basic rope cuff tie. How amazing would it feel to be fully tied up by him?\n\nWhen he was satisfied, David backed Vivian up a few steps and lifted her arms over her head. A minute later, she felt herself secured there, the rope attached to something, unable to lower her arms. David took a half step into her. With her restrained like this, his hands were free to roam all over her, and he teased around her waist, up under the bottom of her shirt.\n\n\"Is this what you meant by liking it when you feel helpless?\"\n\n\"Yes, Master,\" Vivian said, her voice sounding soft in her own ears.\n\nHe inched his fingers up over the skin of her belly, spreading tingles over her abs and raiding her shirt up a bit as he went. \"You really do trust me enough to give yourself over like this?\"\n\n\"Of course I do, Master!\"\n\n\"Why?\"\n\nVivian wasn't quite sure what to say to that. It was a little bit like trying to explain why one plus one equaled two. It just did! Still, that wasn't going to be especially helpful to him. \"Um... because you'd untie me if I wanted you to.\"\n\n\"You think I would?\" His hands skipped up over her core directly to her breasts, roughly grabbing them through her bra. \"You think I'd give up having access to your sexy body like this just because you asked?\"\n\nVivian took in a sharp breath, heat rushing to her chest, feeling herself respond all over. Why did he keep asking her to think about things when she just wanted to turn her mind off and be subby? \"Of course you would, Master.\" She paused, enjoying a deep breath and the way her breasts expanded out into his groping hands. \"And that's why I don't want you to.\"\n\nHe laughed, and it took Vivian a second to realize how contradictory what she'd just said sounded. \"You don't want me to let you go because you know I would if you asked? Doesn't that mean you'd want to be free if you didn't think I'd do it?\"\n\nVivian smiled brightly. \"Yep! You've got it.\"\n\nDavid chuckled and shook his head in a subs-will-be-subs sort of way. To Vivian's disappointment, he released her boobs and let her shirt fall back into place. However, a second later, he leaned in even closer to her, near enough to rest his forehead against hers. Their lips nearly touching, he lightly brushed some of her hair back behind her ear then asked, \"is this the kind of thing you had in mind?\"\n\nFinally, a question that required zero thought! \"Yes, Master.\"\n\n\"It gets you hot feeling defenseless and at my mercy, but safe at the same time?\" It seemed rhetorical, but Vivian nodded against his forehead anyway, basically turning it into a nuzzle. \"Well then, show me.\" Vivian felt something forcing her legs apart, then a pressure against her pussy as David pressed his thigh up between her legs. \"Get yourself off.\"\n\nFor a brief second, Vivian didn't realize what he meant. She just enjoyed the way he commanded her, without any hint of a question mark. Then, as she involuntarily squirmed and felt the rush of pleasure that ran through her core from the contact with his leg, it clicked. Her eyes went wide, her breath caught, and her hips leaping to obey.\n\nIt felt so incredibly dirty! She humped his thigh, feeling herself soaking her panties and wondering if she'd leave a spot on his pants. He nodded slightly, approval showing in his eyes. \"Good girl,\" he breathed to her. \"Show me how horny my little slut can be.\"",
        "His slut. His horny little slut. She half sighed, half moaned, feeling herself release into submission.\n\n----------\n\nAs part of brainstorming ideas for our self-portrait, Malcolm wrote a treatise on porn. Yes, that's a real thing that he actually did. \"What differentiates good and bad erotic media? An exploration of successful methodologies, by Malcolm.\" He even printed the thing out and signed his name underneath the title in exaggeratedly big loopy letters.\n\n\"If this is the kind of writing they teach you in that law school of yours, I'm going down there to demand a refund.\"\n\n\"I actually thought I did a decent job with it.\"\n\n\"Oh, you've got some good points. You just never answer the question anywhere of why it had to be sixty fucking pages. You could have just made a bullet point list. Would have been maybe a page and a half.\"\n\n\"Ah... well, that is something we learn. Why bill the client for a page and a half when you can bill for sixty pages?\"\n\nThe best porn tells some kind of story. It isn't just hot bodies, the viewer responds much more if they feel like they have some kind of insight into the people they're watching. Like, at its core, tease and denial porn is just somebody masturbating. Hot? Sure, but it's nothing special. But, if you've been following that person posting their story on Reddit about their journey through weeks of edging and desperation, it becomes much more engaging.\n\nSo that was the first thing we decided. We'd do something that did that. Somehow. We could think of tons of examples of attempts to do something like that, but none of them felt quite right for us. Kink.com did interviews with the models before and after their scenes, Reddit models joined their videos with written posts diving into what was happening in their heads, and others kept up a stream of consciousness in the video itself. Each left us with a different feeling, and we went pretty deep debating their pros and cons. Glossing over the smut, we probably sounded like two movie buffs debating methods of storytelling.\n\nIt would be a bit easier for us because our target audience of two already knew us pretty well, so we wouldn't have to go through our entire life stories before getting to anything juicy. It still left us in a position of being a male/female couple trying to create something two gay women would be into, but Malcolm was pretty confident that wouldn't be too much of an issue. As long as it was plenty kinky and I was the center of the camera's attention, it would be fine. Sam was mostly in it for the symbolic trophy of us she could put on her shelf next to all her other conquests, and Nicole would probably love anything that involved my tits and pussy.\n\nFor them, it almost didn't matter how good or bad we did, but knowing that didn't stop us diving in deep. The more we got into the project, the more fun we had and the more excited we became to create something we could really be proud of. It stopped being something we were doing for them and started being something we wanted to do for ourselves.\n\nWe divided up tasks, and I gravitated towards the technical end. I'd never done anything like it before, and I kind of expected it to suck because of how much people bitch about having to do it, but video editing is actually fascinating. You can do so much if you're willing to put time into it, and after I figured out how powerful tools like Blender can be, I had lots of motivation to learn. Helpfully, most guides and resources had an official look to them, so it wasn't suspicious reading guides at work while my code compiled.\n\nMalcolm, of course, got into planning out everything we'd do once the camera got rolling. It was just like what he usually did, except with some added layers of lighting and angles, as well as figuring out how to get the viewer invested in us.\n\nIn terms of general themes, we played around with a few ideas. I originally liked the idea of doing something with hypnosis, where the viewer could hear everything Malcolm was saying to me, ending in a hands free orgasm. We hadn't gotten there quite yet in our play, but we'd come fucking close, and I really wanted to know what it felt like to tip over the edge that way. It would be really similar to the video of Malcolm doing that with his ex, and that's why we ended up scrapping the idea. Whatever we did for our self-portrait, a re-make of him with Chloe just didn't feel right.\n\nBrainstorming ideas gave our bedtime porn-and-cuddle sessions a whole different charge, as we took on the role of critics and everything we saw became a potential option.\n\n\"I liked the way this guy did the buildup,\" Malcolm said, a bit breathlessly, after we finished a compilation video. It made me grin against his chest, happy that I'd made him cum hard enough to pant like that. This was one of the very rare nights he gave me permission to cum. He'd had me climb on top of him and pleasure him with my pussy, and his 'cum with me' order had surprised me so much I'd almost reflexively forced myself back from the edge and missed the chance.\n\nAs much as I love tease and denial, it's really fucking hard! It makes these moments -- when I get to feel free from the constant pressure of horny frustration and bask in orgasmic afterglow -- priceless. \"Yeah,\" I said, matching his dreamy breathlessness. \"It was cool how all the clips got faster and heavier up until the end.\"\n\n\"It certainly got us caught up in the buildup.\"\n\nI laughed, remembering how both of us had fired each other up. \"Was that the video or me riding your cock, Sir?\"\n\nHe chuckled and pet my hair affectionately. \"Can't it be both?\"\n\n\"Something for us to use?\"\n\nHe paused, stroking my hair as I lay sprawled across his body, enjoying the way his breathing made me sway while our legs gently slid over each other. Sometimes, it sucks being tall. Sometimes, all I want is to be at the right height to let him play with my hair without my feet dangling past his. \"What if we did a bunch of mini-clips like this, maybe pairing some of them together with some text on the side, and used that as buildup for a bigger scene at the end?\"\n\n\"What? Like, text with video like some super old school silent film?\"\n\n\"Maybe. It's just a brainstorm. Could you do that in Blender?\"\n\nI rolled my eyes. \"It does so much more advanced shit than that. That's kind of like asking whether Excel can add numbers.\"\n\nMalcolm gasped, dramatically feigning surprise. \"Does you mean to tell me I could be using Excel as a calculator too?\"\n\n\"Oh fuck you,\" I gave him a playful shove. \"Yes, whatever this idea you're having is, I can put it together in Blender.\"\n\n\"So, you remember how you stole my tie the morning after we had sex for the first time?\"\n\n\"Of course I do, that selfie I sent you with it was awesome.\"\n\n\"Right! And then I spanked you for it.\"\n\n\"You would have found an excuse to spank me anyway.\"\n\n\"Maybe so, maybe so, but regardless, that's the story right there. The flavor of us, you know? What if we had half the screen going through some of our text chains, then had the other half showing the sex that came after?\"\n\n'Well now, there's an idea.' We did have some very colorful sexts, and it was the most us idea we'd had so far. \"I like it, but we didn't record anything we did in the past.\"\n\n\"We'd have to do a bit of acting to re-create things, but it doesn't need to be very long each time. Just something quick to get the flavor of how our play has built up over time. The point is to set the tone for the present day. The main feature of the film, so to speak.\"\n\nHe sounded more excited as he talked, so I had to ask, \"and what would that climax be?\"\n\n\"You know how you've been pestering me to stop being a pussy and give you a really hard pain session ever since you saw Natalie perform with Jeff at their party?\" He raised his voice to imitate mine while quoting me, at the same time, gripping his habitual spot in my hair and using it to force my gaze upwards to his eyes.\n\n\"Of course I do,\" I said, not backing down and getting excited along with him. \"You know I want you to feel like you're able to let your full sadist out with me.\"\n\n\"I think it's time to do that.\"\n\nIt's entirely possible I've got a screw loose. Normal people don't smile when their boyfriends say they're going to torture them. But hey, fuck normal. If Malcolm was ready to do this, it represented a huge victory for me in my quest to help him accept his full self. He still got a little hung up hurting me. I'm not a masochist who draws sexual pleasure from being in pain, so he'd gotten it into his head that doing a full blown pain session without any pleasure mixed in would basically be me taking a very large hit for the team and getting nothing from it myself.\n\nBut, as I'd explained to him many times, it was something I genuinely wanted, not just for him but for myself too. I absolutely love a challenge, and taking on more and more is the natural progression mentality for a gym rat like me. While I don't enjoy the sensations of being in pain, subspace is indescribably fantastic, and being there with Malcolm is something so intimately intense, it's worth basically anything.\n\nBut yeah, beyond any of that, it was Malcolm making good on what he'd said after Karaoke. He was ready to stop seeing his sadistic side as monstrous and stop feeling guilty afterwards for making me cry. That was the best news I could have heard!\n\n----------\n\nVivian and David's second training session was a bit of a fail. They tried a bit of impact play, but it turned out, David wasn't very much of a sadist. Spanking her and feeling her in pain didn't do much for him.\n\nAt least, not when it was just pain on its own.\n\nVivian already felt inept trying to explain why she liked a lot of the things she did, but making sense out of her relationship with pain was the hardest. She wasn't a masochist and she didn't like being in pain, but she did like all the things it did to her. The endorphin high that came along with pain that sent her into subspace was fantastic. On top of that, the release that came with pain was amazing. It felt so liberating to be able to cry and let herself go for a little while. So, although she didn't enjoy the burning, stinging sensations of pain itself, she was disappointed when David didn't respond to it.\n\nIt was pretty funny to catch herself saying things like \"I wish he liked hurting me more\" when she caught up with Devyn while gaming. Whatever would somebody think if things like that were overheard out of context?\n\nSo, their training sessions mostly focused on exploring David's dominance. That clicked for him. He really enjoyed being in control, and Vivian was more than grateful for that. After all, he could have turned out to not be into any of it at all. Something was far better than nothing.\n\nIt wasn't until cuddling afterwards that he'd explain how the idea to blend two themes had come from another conversation with Malcolm and Sam, who had taken him under their wings a bit. All Vivian knew was that David had a shiny pair of nipple clamps with him for their next bit of play.\n\n\"We're going to see just how obedient you can be,\" he said, motioning to her with one finger. Position one. Vivian jumped up, spread her legs shoulder width apart and crossed her arms behind her. According to the internet, she was supposed to keep her gaze downcast in this pose, but Master got rid of that requirement because he liked being able to see her eyes.\n\nHe'd had a serious tone, but it broke for a second and he chuckled at himself. \"Damn -- forgot to get your shirt off first.\" He snapped his fingers. It was such a simple motion, quick and easy from him, but it had a charged effect on Vivian. Again, she sprung into motion, stripping herself naked as fast as possible. It wasn't meant to be sexy -- if he'd given her two snaps, that would have meant he wanted a bit of a striptease -- just get herself bare and back into position.\n\nThis style of direction made her feel like she was a trained submissive. Like she was a toy for Master David's pleasure that he could play with however he wanted, and she really liked it. Her clothes ended up in a heap by her side in five second flat and she stood, proud and poised in her nakedness, breasts pressed out and legs spread.\n\nDavid ran a playful finger round one nipple, teasingly light, just enough to tempt Vivian to squirm and break posture for more stimulation. She didn't. That would be disobedient. \"Good girl,\" he said. \"Your first instruction is simply to keep doing what you are. Keep the position.\"\n\nHe didn't make it easy for her, which was good because it wouldn't have been fun if he had. He sent goosebumps waving across her body with featherlight brushes over her skin, from her neck down to her waste, around to her back and up again. Every time he reached an erogenous part of her, he would linger and dance around it, circling her areola again and again and tracing the very edges of her labia. It was tortuous! The way he looked at her and toyed with her made her blood pump and her bits swell. If she shifted her weight just a little, she'd get some of the pleasure her body was calling out for.\n\nBut more than a bit of pleasure, she wanted to earn him saying she was a good girl again.\n\nEventually, he wrapped his arms around her from behind, firmly cupping a breast and sliding two fingers right into her wet pussy without any hint of resistance. \"Oh my,\" he feigned surprise, \"you are worked up.\" He'd pressed against her clit as he said it, and Vivian's involuntary moan was answer enough. She wasn't allowed to thrust against him, but there was no rule about internal muscles! Clenching down on him felt absolutely fantastic, his fingers firmly pressing against her sensitive insides while he squeezed her breast for all it was worth. \"That's right, let me hear you moan.\"\n\nHe kept up a string of dirty talk, flooding Vivian's mind with hot erotic sluttyness just as he filled her pussy. After teasing her about making her beg for permission, he allowed Vivian to bend the pose a bit to drop her arms crossed behind her back and grope at his cock through his pants. Begging for her Master's cock -- for his permission to touch it -- was so much up her slut side's ally, it set Vivian's waterworks flowing loudly enough to compete with her moans in volume.\n\nBut still, he was teasing her. Vivian's clit was the key to making her cum, and he was penetrating her far more than pressing it.\n\n\"You have to earn this orgasm,\" he said, knowing just what she was thinking. \"If you pass my test, you'll be rewarded with a very hard fucking.\" Well, that sounded perfect to her!\n\nThat's when he brought the nipple clamps out. They had a polished metal shine to them, and were connected by a length of chain that would dangle when they were put on. David brought her back into position, arms behind her back making her chest thrust out, her very engorged nipples completely vulnerable to the cruel steel that was about to crush them. It was far more thrilling to Vivian than worrying, and she eyed the clamps in his hands with a hunger that completely mismatched their purpose.\n\nIt was even more thrilling because David seemed to be excited by putting them on her. There was a strong, dominant hunger in his eyes as he let them go, leaving Vivian's nipples to burn with an intense, throbbing ache that pulsed all through her chest with every beat of her heart. It was so strong, it had been so long since she'd felt pain mixed with lust like this, she felt herself mentally turning off almost immediately. Her eyes closed by themselves, and she took a few slow, deep breaths to just feel everything that was happening inside her. Experience all the sensation -- the intensity of the pain, the sense of being owned and dominated by her Master, vulnerable and safe at once, the burning in her eyes as they watered and the feeling of emotional release that joined with letting the tears go.\n\nDavid had the chain held up in his hand when she opened her eyes. He took her gaze and held it, impressing as much control into his voice as he could, and saying, \"Step backward.\"\n\nShe did it without a second's thought. There was a very brief moment when her breasts extended to cones, her nipples stretching with the tension, then a snap as everything burst into agony. The moment dragged on like time had been slowed as waves of pain assaulted her senses, and Vivian felt herself falling through fog before David caught her weight under his arm. \"Good girl, good girl,\" he repeated in her ear, his voice gushing with a mixture of pride and desire. \"Such an obedient, good girl.\"\n\nVivian's smile through her tears was absolute pure joy. Her Master might not enjoy hurting her simply for the sake of it, but some pain as a tool to demonstrate her commitment to obeying him made it thrilling to him! That made this experience almost better than the orgasms he gave her with his cock after carrying her to bed. Almost.\n\n----------\n\nThe problem with living together with the guy you're in love with is that, when you're in crazy bitch PMS mode and you need to bite someone's head off, there's nobody else around.\n\nI did my best to keep my temper under control for long enough to get my stuff together and get out the door to the gym before work. I really did, but a few snarky comments slipped out, followed by bitter mean sarcasm when he asked if I was all right. It felt good for all of five seconds, and then I spent the whole rest of the day at the office hating myself for it.\n\nWhenever I got like this before, I was used to being able to escape back to my place, or log off whatever game we were playing to hide Malcolm from the worst of my hormonal angst. I'd been really worried about what would happen without having that space to retreat back to, and walking back from the subway station after work, it couldn't help feeling like I'd failed both of us.\n\nI'd been planning to apologize as soon as I got in, but the house was empty except for an absolutely amazing smell and a note on my desk:\n\nWe're doing the second half of the practice bar exam tonight. Probably won't be back until late. Hopefully, the pizza is still warm when you get home.\n\nLove,\n\nMalcolm\n\n'Right, because I would have assumed somebody broke in and left me a note if he didn't say it was from him.'\n\nThe pizza was still warm. He must have only left recently. Not only that, it was the same thin-crust topped by onions, garlic and bacon I would have ordered for myself to satisfy my monthly cravings. The same he'd got me before our first romantic date. I sighed, trying to choke back emotions. 'Fucking mood swings!' He really was far too good to me, and I let a flurry of text messages fly off to him to try to let him know that.\n\nAnd then I gorged myself on carbs. I'd been in a cutting cycle in the weeks since the trip to KBBQ, and regardless of what any gym rat might say about loving to be healthy and work out, cutting SUCKS. Malcolm had better not have been expecting any of this pizza to survive. As guilty and grateful as I felt, it was all fucking mine.\n\nA few hours later, my mood had swung once again, this time landing on horny. I'd been shifting through our old text history trying to pair portions with the videos Malcolm and I had shot so far, and it brought up a lot of good memories.\n\n\"Does it feel different? Doing it in front of a camera?\" Vivian asked over Discord. Her microphone picked up bursts of clicking that probably meant she was playing Overwatch while we talked.\n\n\"A bit. I've gained a ton of respect for camgirls, trying to look into a fucking lens and pretend it's someone you want to be sexy for is really hard, even if you're horny already.\"\n\n\"I mean, like, does it feel like it's thrilling?\" Vivian sounded like she wanted to seem nonchalant, but something in her voice gave away her interest.",
        "I grinned, thinking I knew where her mind was at, and playing into it. \"Yeah it is! We've only done the intro part so far, you know, recreating some of the scenes we've done before, but it's been really fun. Knowing it's getting filmed adds a new spin to it, so it really doesn't feel like we're repeating ourselves.\"\n\nVivian's clicking intensified and she went into a string of instructions to her team. She usually stayed quiet on Overwatch chat except for when a game was close. There was always some dick who made being a woman on the internet awkward.\n\nFinally, she let out a contented sigh. \"Good games guys. So, have you shown it to them yet?\"\n\n\"What? Oh, asking me. Nope, I'm still working on editing and we've got the last scene to film. Right now I'm trying to think of what to say for the birthday forced orgasms scene.\"\n\nVivian gasped slightly in the way she usually did when I mentioned intimate details casually in conversation. \"You've been doing that the whole time?!\"\n\n\"Yep! What did you think I was doing?\"\n\n\"Not porn,\" she said with a laugh.\n\nIt was always fun to make her flustered. \"You wanna see it?\" I asked, teasingly.\n\nIf it were months ago and I'd just met Vivian, I would have been surprised when she instantly said yes. But it wasn't, and I knew my friend well enough to understand how her mind worked.\n\nAs silly as it probably was considering the situation, I quickly hid all the tabs on my desktop with actual porn. Everybody always has a few of those, right? It isn't just me? It probably also says something about us that I had the impulse to hide the smut I watched but was totally fine with showing her my naked body. Hell, I was more concerned about what she'd think of my editing job than worried about her seeing more of me naked.\n\n\"I'm still trying to figure parts of Blender out,\" I said as the scene opened with scrolling text on the left third of the screen while Malcolm tied ropes around me on the right. \"There's a ton of features I feel like I could use better, but maybe for something like this, simpler is better?\"\n\n\"It looks great so far! I like what he's doing with the tie, it looks cute on you with the weaving.\"\n\n\"Yeah! That feels really nice on your skin too. That's something he only learned how to do recently, we did something much more basic back during my actual birthday.\"\n\nVivian muttered under her breath reading, then said, \"that was the day we all played basketball together! I remember that, it was so much fun.\"\n\n\"Yeah, we were figuring out who was going to pair up\u2014\"\n\n\"\u2014I was right about most of them\u2014\"\n\n\"\u2014and the whole time I was plotting to spring my love on Malcolm.\"\n\nVivian sighed, as if she were watching a romantic scene in a Disney movie rather than Malcolm lining the Hitachi up directly with my clit. \"I'm so happy it's worked out so well for you.\"\n\nMalcolm turned the Hitachi on high, the loud vibrations and my reactions to them cutting off the conversation. It wasn't very long -- just 60 seconds. Just enough to get the flavor of what was happening, along with the snippet story from our history. Still, I'd picked the clips to be provocative. Twenty seconds of getting tied, then ten seconds of each of the four orgasms Malcolm had forced out of me.\n\n\"Wow,\" Vivian said, a little breathlessly when the clip ended, \"you look like you had a good time.\"\n\n\"Have you ever had a vibrator pressed against you after you cum? That shit is torture!\"\n\nVivian's voice betrayed that I'd flipped her switch, \"Like I said, a good time.\"\n\n\"What did you think? Did it seem too abrupt?\"\n\n\"What?\" Vivian sounded distracted. \"Oh, no, it was fine. Maybe try to make the text bit shorter? It's a little distracting after you start getting loud.\"\n\n\"Hmm...\" Where could I cut words? Maybe the bit about the munch beforehand?\n\n\"\u2014wonder what David would think\u2014\" Vivian murmured, just loud enough for her mic to pick it up.\n\nMy grin split wider. \"My oh my, what's going on in your head?\"\n\nWhen she realized I'd heard, I swear, Vivian's blush was intense enough to be felt over the internet.\n\n----------\n\nTaking the advice Malcolm and Sam had given him to heart, in all the time they were exploring and building experience, David encouraged Vivian to be open about what turned her on. What fantasies she had, what kind of scenes she would like, and how he could make that happen for her. He was so understanding and encouraging, he made it difficult to feel embarrassed by the graphic details of her inner slut's dreams and desires.\n\nThere were certainly a lot to choose from, but out of everything, one idea had captured her imagination and wouldn't let go.\n\nIt wasn't a completely new idea. It had started with how well things had gone with David feeling naturally assertive when she was his model, and how that made her feel. In her daydreams since, Vivian had imagined how they could capture that same energy again. Still, Devyn had taken things a huge jump further. How was Vivian supposed to keep from imagining herself in Devyn's place when Devyn shared stories and the video of what she and Malcolm were doing?\n\nVivian didn't want to admit, not even to herself. Every time she thought about it, butterflies turned her stomach inside out, and she instinctually fidgeted in her clothes to try to cover herself more thoroughly. It was so extreme, so far beyond having David draw her... and yet, the idea just wouldn't leave her alone. What would it be like to model for David like she'd done before, except naked and, this time, with a camera?\n\nThe pure dirtiness of the idea never failed to turn her on. It would be like she was a pornstar! An actual fact slut! She wouldn't just feel slutty, she would actually be one! She, Vivian, the girl whose friends joked about showing less skin in public than the average nun, would have her body on display and recorded for the ages.\n\nThere would have to be limits. Showing her face was a non-starter. There was only so much she could bite off before the nervousness became too much. But, as Devyn pointed out when she finally wormed the confession out of her, there were tons of models who hid their faces. She recommended a few sites, and Vivian felt the fantasy taking firmer root as she explored. The BDSMGW subreddit especially -- the way people proudly showed off their kinky desires and commenters were so positive and appreciative made it more appealing and less intimidating.\n\nHiding one's face seemed to be perfectly normal there, at least. It wasn't that Vivian was planning to post the pictures anywhere... it was just the rush of the idea that did it for her. It made things seem even more dirty, and she loved everything about that.\n\nAnd so, the theme for her first full scene with David came to be.\n\nFor his part, David was a lot less surprised than she expected. Come to think of it, Devyn hadn't been very surprised either. Did everybody think she was some kind of closet exhibitionist? They'd both had the kind of tone that made them sound like they'd been waiting for her to see something that should have been obvious. Like she was the last horse crossing the metaphorical finish line.\n\nVivian had to smile, thinking about it. Maybe her friends got a kick out of seeing her finally admitting to herself how much fun her inner slut was when she didn't spend all her time feeling ashamed of herself.\n\nOne way or the other, David really liked the idea. He jumped into planning a scene out for them, and as tempting as it was to spy on what he was doing, Vivian held herself back. They talked a lot about what they were both comfortable with, and some things were good to know going in, but it was nice to leave a bit be surprised by.\n\nOne thing Vivian did know that it would involve a lot of rope. David had really taken to it. He said he really liked the artistic way it looked on Vivian's body, the craftsmanship that went into making it all come together, as well as the way it enforced his control over her. All that was perfect, because Vivian loved all that about it too. It was a ton of fun serving as his test dummy while he practiced, especially when he tried out more restrictive setups and had fun with her defenseless body.\n\nSo, after all the anticipation and buildup, when the day for the scene finally came and Vivian found herself being tied, it was familiar territory. She stood in position two -- similar to one, except with her arms up and fingers intertwined behind her head rather than arms crossed behind her -- and enjoyed the uniquely constraining softness that only silky-smooth ropes bring.\n\nVivian had found that she liked leaning her head back and closing her eyes while Master David worked. She could block out everything but his hands on her body and the ever tightening layers of control being draped around her. Little by little, a breath at a time, she could feel herself relaxing into it, responsibility for herself drifting away as Master became a natural part of David's name in her mind.\n\nUnbeknownst to her, David was watching her face, glad that he'd managed to give her what she wanted. Vivian looked exactly like she did when they slept together and she was having a pleasant dream. She did this thing with the corner of her mouth where it twisted up every now and again, and it was incredibly cute. It made it easy to forget she wasn't the innocent girl she appeared on the outside.\n\nMaster David started by draping the rope around her shoulders, letting it fall in two lengths down the front of her body. He straightened it out, leveling the lengths so it was even on each side, which involved a lot more of his hands on her body than was probably strictly necessary, but Vivian wasn't about to complain. Anytime he wanted to grope her nipples or feel her ass, he was more than welcome to!\n\nHe brought the rope up between her legs, one on either side of her pussy, pressing in from either side and immediately making her feel it. From there, it went up her back, until it finally joined with itself behind her neck. From there, Master brought it back around and around her, crisscrossing her body like a web. With great care, Vivian felt him positioning her breasts and running rope under and around them, creating a harness that very slightly constricted each breast around the base, making them stand out from her body a little and feel warmer and fuller.\n\nAs much as she loved being handled roughly, the soft care and meticulousness of Master David's touches made her feel like she was a piece of art he was working on. It made her feel hot all over. Everywhere his attention passed, her focus followed, making his touches seem more intense and leaving her eager for more.\n\nHer arms were next. One at a time, he brought them behind her back and secured them into the web with ropes above her elbows and around each forearm. Finally, with a firm hold on her body and a gentle word in her ear, he guided her down to her knees, tying around her calves and thighs to secure her in a kneeling position.\n\nVivian opened her eyes, blinking to try to get the world back into focus, to find her own reflection right in front of her. At some point, Master David had placed a mirror in front of her, with his camera on a tripod poking out just above it, recording everything that happened.\n\nSeeing it there sent a shock through her. Her eyes darted between the lens and the mirror, nervousness battling against arousal for dominance. She knew it was stupid, the thing had been on the whole time, and it wasn't like anybody would see the pictures unless she showed them, but she'd worked it up in her mind so much that it felt huge and ominous. The familiar urge to cover herself up took hold of her and her heart beat spiked as if she'd broken into a sprint, the foggy, relaxed state she'd been in vanished.\n\n\"Hey, what's wrong?\" David asked, calmly, folding his arms around her from behind.\n\nVivian started to say it was nothing, but stopped herself. \"It's just... real. Not just a fantasy anymore.\"\n\n\"We can stop if you like. It's no prob\u2014\"\n\n\"No!\" Vivian surprised herself with the urgency in her own voice. She was supposed to be done with being ruled by negativity! \"I'm fine. I'll be fine in a minute. I'm sorry I'm being such a scaredy cat.\"\n\nHe shook his head reproachfully at her reflection. \"Don't apologize for your feelings.\" Vivian caught his look in the mirror and started saying sorry again, but caught herself.\n\n\"Yes, Master.\"\n\n\"Good.\" He shifted around her, coming between her and the mirror and blocking the view. It helped, even if it was just for a few seconds. \"I think you might feel a little better after I've dolled you up.\"\n\n\"Dolled me up, Master?\"\n\n\"Yep!\" He said, a cryptic smile working its way across his face. \"Close your eyes again and keep them shut.\"\n\nFor the next... however long it was? Half an hour? An hour? Longer? It was hard to keep track, but Master David showed just how many things he dabbled in. If he ever lost all his art contacts, he could get a job at a salon. He started by putting her hair up. It was hard to tell, but it felt like he was arranging it in some kind of bulb and using something solid to keep it up. Then he started in on her face, and it became obvious why he needed her eyes closed.\n\nReally, it felt more like a spa day than a bondage scene, and with nothing to look at or focus on other than his ministrations, Vivian's mind wandered. Whatever he was doing must have involved multiple layers. The first layer felt like it was something waxy, and that made it difficult to tell what came afterwards. She wanted to hold out until the end, but kneeling for so long made her knees seriously ache, and she ended up having to ask for a pillow to put under them.\n\nShe was being pampered! As she felt him pat at her face with brushes and a sponge, going over her skin again and again like she was one of his paintings, that kept replaying in her mind. Her master was making her beautiful! Neither of her previous dominants had cared much about putting her in fetish clothes or making her pretty or anything like that. They just wanted her for her holes. David... well, he definitely liked her body, but still. It felt wonderful to get so much of his attention. She was literally being treated like she was his canvas, all of his focus and attention direction on her as he turned her into something beautiful.\n\n\"All done. You can open your eyes now.\"\n\nThis time, the reflection looking back at her was unrecognizable. She looked nothing like Vivian, even though it was still the same her from the collarbones down. Her face and neck were as white as snow! On top of that, he'd given her bright red lipstick and dark eyeliner, and put her hair up with a flowery comb. She looked like a Geisha!\n\nHer reflection smiled, and it took Vivian a second to realize she was too. As much as the image was a shock, that was her! She was the geisha on her knees in the mirror, all trussed up with ropes with her master standing over her.\n\nIt felt right. More than right, it felt liberating. As little as it seemed, it felt symbolic of Master being here to catch her. Her nerves ebbed away, and Vivian tilted her head slightly, eyes glued to the mirror, wanting to see other angles.\n\n\"Do you like it?\"\n\nBy his voice, she could tell he already knew full well, but she said it anyway. \"It's wonderful, Master.\"\n\n\"That's good, because we're only halfway done.\"\n\n\"Really? Do you have a kimono and a tea set hidden somewhere?\"\n\n\"Nope,\" He laughed, then held up a paintbrush in one hand and what seemed to be a handful of sticks in the other. \"Next I'm going to make your tits look even prettier.\" That perked Vivian up! While he'd been working, she had unconsciously slouched as far as her bondage would let her, but at the mention of her chest, she straightened so fast it made her breasts bounce. David raised an eyebrow. \"I take it that means you're over your stage fright?\"\n\nVivian turned to bat her eyelashes at the camera, imagining herself as every bit the slut she felt, and feeling nothing but excitement. She was her master's slut, and she was out to play. She twisted back and forth, making her breasts dance. Being on display for the camera felt dirty -- wanting to be seen made it feel even more dirty -- and it only made the throbbing in her core intensify.\n\nFor the first time, she fidgeted against the ropes, impulsively wanting to get a hand between her legs. If she could see how flushed her pussy was in the mirror, that meant the camera could tell how turned on she was getting, which of course only made her want to satisfy her stiffening clit even more.\n\nThe heat only rose as Master David started working on her left breast. He had some paint ready and set in with short, careful dabs on her skin. The sensations of paint and brushes on that sensitive area was so much different than getting makeup on her face. Each stroke felt wet and cool, the bristles ticklingly light, almost making her want to giggle. She even did a few times, but quickly forced herself back under control. He didn't seem to mind, but he held her breast firmly just below the binding rope to make sure it stayed still.\n\nIn one way, it wasn't a very sexual touch. It was almost businesslike. He had a goal to accomplish, and the goal wasn't giving her pleasure. The way he handled her breast, shifting it get the angles with the brush he wanted and gripping her to keep it steady was the same way he'd hold his sketchpad if they were out in the park. But, contradictory though it felt, something about that made it seem even more sexually charged to Vivian. Like, more than simple words, he was using her body like it was his property. It made Vivian feel possessed and owned.\n\nIt was a pretty basic design he was giving her. Two flowers with green stems, their bases crossing beneath her nipple, rising to arc around her nipple on either side, then crossing again above it with colorful bulbs close to her chest. It looked really pretty, and Vivian hoped it would come out in the picture the same way she saw in the mirror.\n\nMaster David paused, eyeing her other breast thoughtfully. \"Honestly, I have no idea if this is going to work or not. I got the idea after we tried spanking, and I've been practicing a bit on myself.\" He brought up one of the thin wooden sticks he'd had before, using one finger to bend it slightly and watching as it sprung back when he released. \"I've got to go fast or the redness will fade on the bottom before I'm done.\"\n\nBefore Vivian could wonder what he was talking about, he brought it right beside her other breast, lined it up underneath her nipple, pulled back the end with his finger while holding the alignment steady, and let it go. It wasn't that hard, and if it had been anywhere else on her body, it probably wouldn't have hurt that much. But this was her boob! It bit into her with an intense stinging that lingered, hot and painful as he quickly lined up the next stroke to intersect the first.\n\nIn the mirror, Vivian watched, surprised by how bold and distinct the red lines he left were against her pale skin. He worked on each line a few times, striking her again and again until the impression was the way he liked, the stinging getting hotter every time. It hurt, but as she settled into it and let her mind accept it, Vivian realized it wasn't that bad. She'd certainly managed much worse. After the initial sharp burst of each stroke, the hurt lost its edge and turned into something closer to a hot achiness that almost felt kind of pleasant.\n\nThe design wasn't perfect. There were more straight lines and angles than the curved flowers on her other breast, and the redness on some of her marks flushed outward from the strike points, but it was close! David stood back and grabbed the camera to get closer shots, and Vivian stared, a little dazed, at her reflection. Two sets of entwined flowers decorated her chest, one colorfully painted, the other marked directly onto her skin. It was so beautiful, Vivian couldn't tear her eyes away. Not just visually, the feel of it was perfect. The coolness of the paint on one breast contrasted perfectly with the heat on her other side.",
        "There wasn't really very much Vivian could do to model for him, tied in her position as she was, but he gave her orders anyway. Face this way, turn that way, bend forwards so the ropes constricted the base of her boobs and made them stand out more, lean back so she was almost laying down so they would pool freely against her chest and he could shoot them from above. For his part, Master David seemed absolutely delighted with how it had turned out. He kept up a steady string of chatter between directions, ranging from compliments to jokes to ideas for what to get for dinner. It was the oddest conversation Vivian had ever had.\n\n\"Spread your legs a bit more of you can. Yeah, that's great, the light catches that pussy juice on your thighs,\" David said, bending down to get her pussy in the foreground and angling the camera up so her boobs stayed in frame. \"Yeah, I've had a hankering for something spicy. Maybe we order Indian food?\"\n\nIf Vivian had ever had a conversation with jumps like that, she couldn't remember it. She didn't know whether to feel horny by the camera aimed right at her clit or hungry. \"Um\u2014yeah, that sounds good to me?\"\n\n\"Thelewala does the best curry, but Rahi has the best naan.\" He shook his head wistfully. \"These are the tradeoffs that keep me up at night.\"\n\nThe casual nature if it seemed like it should dispel the feeling of being dominated, but it didn't. Even when he made her laugh, the whole thing felt so distinctly David. It was his personality through and through, and it fit him more than acting a part ever would. Besides, they had more than enough kinkiness around. It was hard not to feel dominated by somebody who literally had her tied up kneeling at his feet and was snapping pictures of her at his whim.\n\nWhen the redness on her breast finally started to fade, Master David picked her up. He wasn't especially big, but still, he had no trouble swinging her body up into his arms and carrying her away. Unfortunately, this involved getting a bit of her white face makeup on his sleeve, but he didn't seem to mind. \"I guess I've got no choice but to take it off now,\" he chuckled, dabbing at the spot.\n\n\"Hubba hubba! Yes please Master!\"\n\nHe set her down on a sturdy table on her back. The way her legs were tied, they naturally fell open, presenting her sex to David in a very fuck-me sort of way. Naturally, he snapped a picture. Vivian felt like she should be inoculated against the rush that came with the clicking of the camera after so many pictures, but this was such an intimate view! Her legs spread and her pussy, wet and flushed with arousal to the point that it had spread itself open, had to be one hell of a sight. God, it made her feel like a slut in heat desperate to get fucked!\n\nBut Master David, it seemed, had other plans. At least, a different variation on that plan.\n\n\"Are you still doing okay?\"\n\n\"Yes, Master.\"\n\n\"Anything tingling? You've been in those ropes for a while now.\"\n\nVivian shook her head, focusing mostly on watching him unbuttoning his shirt and slipping out of it. Surely he realized that rewarding her like this for making it messy was giving her all kinds of disobedient ideas?\n\n\"Great!\" He said, cheerfully, then slipped two fingers inside her. Vivian barely had time to finish her breath before his thumb found her clit and all the air was forced from her at once. \"That's it, baby, moan for me.\" What was there to do but obey? Master David worked her pussy hard, flexing to drive his fingers in deep while mauling her clit, making fireworks launch all through Vivian's core and burst in her brain. \"I hope you're ready for some orgasms, because I fucking am.\" Orgasms -- plural. A huge, sloppy grin split Vivian's mouth, and David laughed as his voice turned teasing. \"Oh, you like the sound of that?\"\n\n\"God yes Master!\"\n\nHe stopped finger fucking her, and pulled his fingers nearly out of her. \"I don't know...\"\n\n\"Please! Please keep fucking me, Master!\" After the burst of pleasure she'd finally gotten, Vivian's pussy cried out for more, and she struggled against the ropes to buck her hips against his hand, but he kept moving back.\n\n\"Make me believe you really want it.\" His fingers circled the entrance of her vagina, but instead of entering her, ever so slowly, Vivian felt them sink lower...\n\nHer eyes went wide, and her inner slut roared. It had been so long -- not since the last night with Paul -- and Master David was so thick! That's what she was thinking, but her body felt his fingers play over her ass, and her mouth sprinted past her brain. \"I want your cock inside me, I don't care where. My ass is yours, Master, just please fuck me!\"\n\nHe beamed down at her. \"That's my good girl.\"\n\nVivian didn't have much brainspace available to register the cool feeling of lube being spread around her ass. Master David had added to the ropes to tie a vibrator directly to her clit, and that made very short work of any conscious thought. It buzzed at her so hard, it must have created ripples on her skin. Vivian's clit throbbed and her hips rocked, her pussy clenching and her hot insides rejoicing at the pleasure.\n\nMaster took her emotions on a roller coaster ride. He kept a steady stream of dirty talk, laced with plenty of \"my good girl\"-s and \"such a good slut\"-s to keep her feeling high. At the same time, Vivian panicked as she felt him pressing against her asshole, which gave way to triumph as she took him inside without much strain, sinking to panic again as she realized it was just his finger warming her up.\n\n\"You're going to cum for me, and then your ass is mine.\" At least two fingers pressed into her pussy, joining the pleasant pressure in her ass and combining with the pleasure coursing through her clit to push her over the edge immediately. Vivian writhed, her core straining with the effort of clenching down on him, her muscles testing the ropes with involuntary jerks. It felt so good, after all the buildup, all the emotions that had dogged her since before the ropes came on, releasing all the tension left her body feeling weak and her mind very pleasantly hazy.\n\nExcept Master David didn't turn the vibrator off. He did turn it down, probably to the lowest setting, but as her clit came down from its orgasm high, it landed right in hypersensitivity, and the vibrations made her head spin.\n\n\"You really are beautiful when you cum.\"\n\n\"Master\u2014please\u2014\"\n\nShe'd screwed her eyes shut, but she could hear the wicked dominant smile in his voice. The one that came out when he wanted to push his control over her. \"Oh no, my slut. You're not done yet. I've worked my ass off and it's my turn for some pleasure.\"\n\nYeah. That was fair. Vivian did her best to get her breathing under control, to only moderate success before Master David sent her hyperventilating again pressing his cock to her ass. \"Are you ready for me?\" He asked, his voice momentarily losing a bit of its edge.\n\nIf she said no, he would be totally fine untying her. Vivian felt herself glow with a joy that had nothing to do with sex. He would be supportive of her if she wanted to end it now, and that had to make their bond special.\n\nHonestly? She had no idea if she was ready. She didn't really believe she had enough room in there to fit the monster of girth between his legs. Still, anal sex had always been the guiltiest of her guilty pleasure before, and right now she was starving to be penetrated.\n\nShe'd felt dirtier today than she could remember feeling, and she didn't feel any of the guilt that had always plagued her before. She'd loved every second of it, and she was absolutely okay with loving it. But it was more than that. Realizing the last man to get into her ass had been her ex-boyfriend, she genuinely wanted to change that. Reclaim the territory, as it were.\n\nIt made sense in her heart, at least.\n\nSo, despite everything that was happening in her body, there was nothing forced about her smile when she opened her eyes long enough to meet his and tell him \"your slut's ass is ready for your cock, Master.\"\n\nAfter that, Vivian gave up trying to control herself. He was gentle enough with her ass, but when he finally worked his head inside and she was forced wide enough for his full girth, nothing could stop her from screaming. It wasn't that it hurt per-say, it was just so fucking much! Feeling him there, pressing her body so hard, flooding her with sensations intense enough to drown out the vibrator tied to her clit -- it was an absolute flood.\n\n\"Hey,\" he said, leaning over to hover just above her face. \"Look at me.\" Vivian did. His eyes were nice. She stared at them, feeling a little silly for having no other clear thoughts beyond just nice. \"Breathe. Yes, good. Keep breathing, slowly, yeah. Now, relax. You're okay. I'm here with you, everything is okay. Just relax and keep breathing.\"\n\nSlowly, he managed to get an inch inside her. Then another one, rocking back and forth a nudge at a time, pressing forward and waiting for Vivian's muscles to unclench enough to allow him deeper.\n\nIt was exactly the kind of slow, rhythmic fucking he loved. Even with the majority of his shaft still outside, his voice betrayed just how good it felt on his head. \"Holy fuuuuck your so tight. You keep squeezing me, it's amazing. You're amazing.\"\n\nAnd it got easier for her. Slowly, her body came to peace with what was happening, and accepted its fate. Two trips back out for more lube and a whole lot of expletives later, Vivian felt her Master's hips resting against her butt cheeks.\n\nShe had never felt so full before in her entire life. It should have been excruciatingly painful, and maybe she was on too much of an endorphin high to be a good witness, but it wasn't. At least, not anymore. Not now that she'd finally relaxed and taken him. They were connected! Completely connected -- she could feel every single inch of him inside her, stretching her, pressing and throbbing against her in a way that was at once both emotional and dirty. There was something about this that she'd always loved. Something about the absolutely blissed out look on his face, combined with the way she could feel him quiver both inside and out. It almost felt more intimate than vaginal sex.\n\n\"Thank you, Master,\" Vivian heard herself breath.\n\n\"Me? What? I should be the one\u2014\"\n\n\"Thank you for being such a wonderful master and having such a wonderful cock.\"\n\nShe'd never had anybody laugh while anally fucking her before, and it felt like he was laughing inside her. \"You really are a fantastic slut.\" Vivian's heart glowed and warm little clouds choked her up.\n\nThen Master David switched the vibrator back on high, and the equilibrium Vivian had fought so hard for shattered. She didn't build up to an orgasm, her body was so worn out from everything, it just skipped directly to cumming. It wasn't a very intense orgasm at first, but it built as her pelvic floor muscles attempted to contract, which triggered aftershocks around his cock, and lead to another mini-orgasm.\n\nMaster lay over her, slowly pumping into her, his eyes madly dilated and his breathing as hectic as hers. \"We're going to cum together. I'm about to cum\u2014\" he breathed, then stopped moving as his white hot wetness filled the deepest reaches of Vivian's ass. Vivian was all out of hyperbole, but if she'd ever felt a more intimate moment than that, feeling so much of him inside her as they shared their orgasms together, she couldn't think of when.\n\nMuch to her relief, Master turned off the vibrator a few agonizing second after he finished cumming, and he joined her laying across the table. Without untying her just yet, he tilted her over so he could drape his arms around her shoulder and wrap his legs around hers. \"You weren't kidding. This whole Dom slash sub thing is a hell of a fucking ride.\" Vivian nuzzled herself into his shoulder, getting makeup everywhere but neither of them caring enough to notice.\n\nThey lay there, neither wanting to move from the other's side, but eventually Vivian's bondage needed to be undone. It took a long time to get her back to normal, the geisha makeup had a whole ritual that went with taking it off, and they both desperately needed a shower on top of that. The whole time, David seemed as desperate to stay close to Vivian as she was to cling to him. It was touching, the way he made sure she was steady on her feet after so long in ropes and cared for the spots he's hit especially hard on her breast.\n\nHe felt to her like she imagined she must seem to him. She didn't just want him near, she needed him. Just being there with his presence, his voice and his eyes made her feel calmed. He was her rock, and slowly, it dawned on her that she was his too. Did dominants get sub drop? Dom drop? Would he have a panic attack if she'd suddenly run out the door? Maybe it really could go both ways. Regardless, they kept hugging each other, and each embrace felt more fulfilling than the last.\n\nEven though they sex was over, they couldn't keep their hands off each other! They held hands going from one room to the next, David wrapped his arms around her shoulders while she cleaned herself out in the shower, and Vivian clung to him as he clicked through Grubhub menus and ordered them food. They even abandoned his dining table and went to the couch so they could lean into each other as they ate. There was no mystery, both noticed what was happening, but that didn't make it any less magical. It just made both of them feel safe, and that was enough.\n\nThey didn't look at the pictures until they finally got into bed a few hours later. David held his camera between them, flicking rapidly from one frame to the next, cursing himself for not thinking to bring more lights over and wishing they'd had more angles. Vivian listened with one ear, smiling at his artist's perfectionism.\n\nDespite the speed the images flashed by, one thing stuck out to her. Her face in every single shot. Even underneath all her makeup, Vivian was struck by how peaceful her eyes looked. Even knowing how much turmoil and chaos, lust and arousal had been there for a good portion of the scene inside her, through it all, she looked like she felt safe. Even for the pictures where she knew she'd been anxious about having these pictures taken, it was obvious that was only surface level. There was none of the deep fear and crippling guilt she'd fought with during her life with her exes. This version of her knew she was in good hands, and trusted enough to rely on them.\n\nAnd it was absolutely true. She really did feel completely safe in her Master's arms.\n\nShe held him underneath the covers and let her body spoon into his side.\n\nVivian was free.\n\n----------\n\n\n\n\"I know, Sir. Don't worry, I've got it.\"\n\n\"I'm serious. Do you remember what I said, way back when, about being worried you'd push yourself too far without safewording and end up getting hurt?\"\n\n\"I remember, Sir,\" I said, trying to sound reassuring and finding it amusing that, going into a hardcore torture session, I was the one trying to set my tormenter at ease. \"I promise that I'll signal you if I need to. Now stop being a pussy and gag me, Sir.\"\n\nHe smiled darkly and obliged, pressing my mouth open and filling it with my favorite toy. \"You know, now might not be the best time to antagonize me.\" I would have doubled down if he hadn't just cut off my speech, and he knew it. He also knew I was only trying to provoke him, so he gave my ass an affectionate little smack as he moved behind me to fasten the gag in place\n\nThe living room had been transformed into a studio. We'd brought in a bunch of our floor lamps from the bedroom to compliment the light from the bay windows because lighting is everything in photography, as well as pushing the coffee table and lounge chairs out of the way to create a big open area. The huge, crushed leather couch that had already seen a fair bit of play remained behind me, and we'd surrounded the area with four cameras. Well, \"cameras.\" We'd propped up both of our phones, Malcolm's tablet, and my laptop around the perimeter. Not the best quality in the world, but not crap for what they were. One of my chores later would be taking all the angles and synching them up, so when I changed perspectives for the video, the times wouldn't get messed up.\n\nEverything was ready.\n\nIt was almost a surreal feeling for me. Sure, we'd done our fair share of painful scenes. More than one of them had been intense enough to make me cry. Still, each of those felt like they had been about something else. Like, when Malcolm spanked me, that was about him adding some spice and control to a scene where we both gave each other pleasure. He liked marking my skin as much as I liked being marked. The marks were emblematic of him dominating me and me being submissive to him, and that felt like the main focus of those scenes rather than the actual pain itself.\n\nThis was going to be different. This was going to be about Malcolm being a sadist and me being his strong submissive who could take anything he dished out to make his fantasies real. Maybe that's a bit of splitting hairs, but whatever. It felt significant to us. It was Malcolm accepting that part of himself as something he didn't need to apologize for. A part of himself that was as valid as his caring compassion, his infuriating habit of being right, and his laugh.\n\n\"Are you ready, My Love?\" Finding ways to be affectionate without words if just one of the fun things about being gagged. I leaned back slightly, rubbing my hair against his face in an intimate way. \"Great.\"\n\nMalcolm gave one last check to our positioning -- the tablet right ahead of us and a phone getting the side view -- then got started. I'd been expecting him to dive right in and be rough with me, but he guided my legs apart quite gently. Rope started around my waist just above my hips, wrapping snugly around me and joining together at the front like a belt.\n\n\"Close your eyes,\" Malcolm said, slipping into the same calm and even voice he used for trance. \"I want you to focus on feeling. Feel my hands on you\u2014\" he let the rope dangle between my legs and felt up along my thighs \"\u2014feel my clothes against your skin\u2014\" his fingers traced up behind me and up my back, and he wrapped his arms around me, cotton pressing against my chest and little buttons poking against my stomach \"\u2014breathe deep, feel the air filling you\u2014\" he took a deep breath in, guiding me to follow him \"\u2014don't think about anything, just let your mind wander and feel.\"\n\nHe gave me plenty of sensation to focus on, letting his touch linger on my skin, making my mind's eye follow him around and around my body. He lead the twin lengths of ropes down from the metaphorical belt buckle directly between my legs, pressing tightly up between my pussy lips, passing them to either side of my clit and hugging it between them. Then they went up my backside all the way up to my shoulders, where he let them rest.\n\n\"Give me your arms.\" Commanding.\n\nFirst one arm, then the next, guided directly up into the air then bent at the elbow down behind my head so my hands lay flat on my back just beneath my neck. He held my wrists in place with one hand while possessively tracing the fingers of the other along my neck just above my collar. \"That's good, keep breathing slowly, My Love. Try to make your heart beat as slowly as you can.\"\n\nMalcolm seemed to time his movements along my skin with my breathing, rising with my inhalations, pausing along with me, then slowing down as I exhaled. It felt very relaxing, a little like softly swinging in a hammock, and I unconsciously let myself lean a bit of my weight into him.\n\nRope replaced the warmth of his hands against my wrists, wrapping around each one in turn and then joining them together behind my head. Once tied, the tension kept my arms behind my head, with the rope running down my back and between my legs. I gave it an experimental pull, and let out a little squeak as I felt it jerk into my pussy.",
        "\"Sounds like that's working as intended,\" Malcolm chuckled. He gave my ass another swat, this time hard enough to make me jump, which gave my pussy another tug. It pulled the two ropes squeezing my clit taught enough to pressure it, which gave me a quick burst of sensation. Managing that was seriously not going to be easy!\n\nLast of all, Malcolm bound my arms just above my shoulders, trapping my elbows as high in the air as they could go and effectively eliminating any freedom my arms had. It also had the effect of making me stand with my back arched slightly, my breasts thrust out and my hips tilt back, turning both areas into juicy targets.\n\nI was helpless. My body was completely free for Malcolm to do whatever he wanted. It was a feeling that never got old, and I shivered in anticipation. I should probably have been nervous, but I wasn't. It was exciting! Pain is just a temporary fleeting firing of neurons. It sucks while it's happening, but it's so worth it for what it does to Malcolm. I feed off of his excitement and pleasure just as he feeds off my suffering. It makes me genuinely want him to hurt me. Functionally, It's the same neurons firing and chemicals flaring, but because it comes from him, it feels completely different.\n\nI smiled around the gag, feeling myself relax more and more as Malcolm continued his guiding monolog. He shifted around to stand in front of me and leaned in so our foreheads touched. He kept one hand in my hair, holding me firmly, letting me feel controlled while his other hand roamed.\n\nHe moved along my body, working me over with light slaps that intensified in succession to full sounding smacks against my skin. Around my thighs from front to back, up to my butt, and then to the other side and down again. Focusing on one spot at a time made my skin warm up, giving me a pleasant glowy feeling, but that grew to a stinging heat as Malcolm's pressure intensified, always ending with three hard, fast slaps that made me gasp.\n\n\"Don't fight it. Just feel it.\"\n\nHe kept the circuit going, alternating hands but always keeping one secured in my hair. Around and again, covering every inch of my thighs and butt, making my entire lower body sting like mad. It stung, but didn't really hurt. Not yet, but it was getting there. Each time he revisited a spot, the heat seemed to move deeper into my body, skin deep sting giving way to an ache in my muscles that lingered as he passed.\n\nIt was a little bit like getting a very rough massage. With my eyes closed, forehead resting against Malcolm's, near enough to feel the warmth of his breath, it was easy to do as he said and let the feelings wash over me. My mind quieted and my awareness narrowed to the sensations of my slowly heating body. The sting started sooner with each successive round, flaring up higher each time with the heavier strokes. My skin seemed to hum and the entire area throbbed with each heartbeat, but I didn't feel any urge to escape. My body gave little involuntary jerks with each round of heavy slaps, causing my arms to pull the rope connected to my pussy, but even those became less pronounced. Malcolm wanted my body to submit by accepting what was happening to it, and he'd trained me well enough to obey his will.\n\nJust when it started crossing the border into real, full pain, Malcolm stopped. \"Keep your eyes closed,\" he said, softly but firmly. His hands snaked up my front, feeling scorching hot on me. It's easy to forget, but impact play makes blood rush to Malcolm's hands too. It made his touch feel more raw and intense against my flesh. He took hold of my sides and flexed his muscles, squeezing my abs and making my breath catch. I could feel each of his fingers digging into me, and it made the feeling of my body being Malcolm's plaything intensify.\n\nMy breasts got the same rough treatment, but much slower. He caressed them softly, kneading them, letting the anticipation build. Their softness contrasted so much with his firm, unyielding grip that made them ripple and mold around him.\n\nOnce again, the slaps started off light. Taps that made my tits bounce around my chest, accelerating with each successive hit. Except I was much more tender there, and I started feeling it much sooner than my thighs or ass. It was like the lingering ache from lower in my body expanded upwards. Stinging only lasted a few seconds before it advanced directly to pain, but Malcolm kept going. My breath caught and my muscles tensed as I tried to brace myself. Each slap filled my breasts with hot, fiery hurt, building upon itself as they got more and more tender.\n\n\"Relax,\" Malcolm commanded. I let out a low groan, realizing how hard I'd been biting into the gag. I tried to relax, but just as I did, the hardest stroke yet landed. It was psychological, tensing didn't do a damn thing to stop it, but it seemed to make it hurt even more. Which is just what Malcolm wanted.\n\n\"Good,\" he said, approvingly, then smacked my other breast, making me whimper. \"Very good. Hurt for me, My Love.\" I think I nodded. I'm not really sure. I my mind was flooding with sensory overload from all over my body, making it hard to think of anything.\n\nPart of me was surprised Malcolm stopped so soon. He released my breasts and put a finger under my chin. \"Open your eyes.\" If Malcolm had a sadistic switch, it had been pushed to the max. His eyes looking back at mine had so much dominant hunger in them, it was easy to miss the measuring way they probed me. \"You're holding up okay?\" I nodded quickly. My tits still burned, and the ache in my thighs was only just starting to ebb, but of course I was okay! \"Good.\" He stepped back, nodding approvingly. \"A good little warmup, don't you think?\"\n\nIf he was expecting a reaction from calling that a warmup, he should have known better. He should know by now I'm not some weak willed bitch who can't take getting a little roughed up. I nodded again, trying to convey as much confidence as possible, and earning a playful swat at my chest that made me gasp.\n\n\"Well then, the flogger it is.\"\n\nIt was a new toy for us that we'd bought especially for today. Well, mostly new. Malcolm had spent a ton of time practicing with it by giving some old pillows a very kinky time. He'd even made me take some swings with it on him. That's a thing of his -- he thinks Doms need to understand firsthand what they're doing to their subs, which for him involves trying everything he's new to on himself first. At least, everything he's anatomically able to. For obvious reasons, Malcolm's attempts to preview some of my vibrators and dildos I'd contributed to our toy chest were hilariously inept.\n\nThe one we'd gotten was basic enough. Dark leather strands that went well with my collar and cuffs, because we did have a theme going after all. Malcolm liked it because it was supposed to be able to produce a wide range of sensations. Depending on how he worked his wrist, it could feel like a warm breeze or a penetrating stab.\n\nFrom the first swing, it was obvious Malcolm was interested in the intense part of that spectrum. He bent me forward at the waist, pulling my crotch rope through my pussy and making my clit feel every rough fiber, until my ass stuck out. I had to spread my legs to keep my balance, effectively making me even more vulnerable.\n\nMalcolm worked the flogger in upward circles, striking at my upper thighs and butt in rapid succession. Part of my mind applauded how he'd mastered the figure-8 so quickly. His aim was spot on, and he managed to only hit me with the ends of the leather every time. But my body was already so sensitive, the thought only lasted a second. After only a few seconds, the sting hit me, and the feeling of sensory overload grew over me again.\n\nThe way it felt, I imagined I could feel each flogger tooth biting into me, hitting me with a wave of pain that didn't recede at all before Malcolm circled it around and hit me with the next wave. It built and built, enveloping everything in its way. I groaned, screwing my eyes shut, trying to hold still but feeling myself jump and shudder. The flogger wheeled, the sound of it hitting me seeming to bypass my ears and resonate in my head, bouncing around and making the hurt blossom into bigger tendrils of heat all through me.\n\nThen suddenly, I was jerked upright again. Malcolm help his spot in my hair and had wrapped his other arm around me, pulling me into a half hug and hitting me with the full force of his eyes. \"Relax,\" he commanded. \"Let your muscles go.\"\n\nHis words seemed a little muddled in my head, almost like he was talking through a laggy internet connection. By the time I realized what they meant, my body had already obeyed him. \"Close your legs.\"\n\nThis time, he stood in front of me, spreading the burning pain around from the back to consume my entire thighs. However, this time, something shifted. Like before when he used his hands, I didn't fight the pain. The wave built and built, and I just let it all wash over me. Even when the flogger slashed over my pubic mound and made the rope tug through my pussy, I just stood and took it. A low, constant whimpering sound filled my ears, and it took a few seconds before I realized it was coming from me.\n\nMalcolm slowly circled me, keeping up his assault on my senses. He struck out at me from different angles, hitting different spots and making it impossible to keep track of. One second, I'd feel a fresh burst of fire from my thighs behind me, and the next second, my breasts would seem to explode. It almost didn't even matter. My whole body was one big bonfire of agony. A stroke across my ass made my hips shift forward, pulling the rope through my pussy, making me jump and my tits lurch, sending new pain through me. It all built on itself. Everything hurt.\n\nAnd yet, through it all, the more I drowned in the pain, the less is seemed to affect me. I felt everything, every agonizing stroke of it, but I stopped feeling like it was something that was smothering me. Instead, it felt like I was sort of floating above it all, looking down on things from above.\n\nI've never had a moment when I've realized I'm in subspace. I guess it's just part of the chemical cocktail my body floods itself with to respond to all the pain. If I could think about it, it wouldn't be subspace. It isn't just like being high -- it is literally being high. High on hormones my body produces when it's under extreme stress. Or something like that. Afterwards, it makes sense, but at the time, it's always magical.\n\nThe best part of subspace is that nothing beyond Malcolm and I seems important. It's like reality exists in a bubble just big enough to fit the both of us. Like, there's probably ground underneath us, but it's down there beneath where we're floating, so it hardly matters.\n\nIt lets me feel Malcolm's presence much more. I swayed, feeling light and finding balancing difficult, and even as Malcolm circled me, he always appeared exactly where I needed him to support me. He felt safe and firm, so I let myself get caught up in his arms, enjoying the way his face beamed down at me like the sun. His eyes seemed happy. I liked that.\n\nHe set me down on the couch and released the ropes, which set off a new wave of painful blissy feels as my arms came down and my shoulders felt it. I couldn't take my eyes off him. Dropping me into subspace is me putting every single ounce of trust possible on him. I'm basically incapable of giving him the safe signal, he could swing the flogger until his arm fell off and I'd just exist in la-la-land. It's an enormous power trip for him. He loves that he can do this to me, send me to this floaty place, hold me while I enjoy it, then guide me down afterwards.\n\nEvery other time we've achieved subspace, it's involved both pleasure and pain. Two huge sensations overwhelming me, wedging me between them. Doing it with pain alone was new for us, and probably why Malcolm looked like he'd just won the Nobel Prize. I grinned back at him, only dimly aware that something was missing from my mouth to allow that. Let the damn sadist bask in his glory, I was every bit as elated to be able to give that to him.\n\nMalcolm kept some sensation going, feeding me enough to have a controlled descent from the clouds back to earth without crashing at once. I watched him play with my nipples, squeezing them and pulling them out from my body far enough to turn my breasts into cones. That's probably supposed to hurt a lot, but I hardly felt it, and I grinned like an absolute fool. It's fun to be invincible.\n\nIt took a while, but the first thing I did when I felt more or less normal again was kiss him. My body felt completely drained, like I'd done a week's worth of workouts in one go, but it was important. He had to know that I'd always want to kiss him, even after the flogging he'd just given me, so I pulled him into me and forced his lips apart. His surprise didn't last long, and he kissed me back, so passionately he actually pushed me into the couch. His tongue completely overpowered mine, pressing me for all I was worth, making me absolutely glow with how much he wanted me.\n\n\"Devyn, you are one tough woman,\" he said. \"Do you have any idea how much it took to drop you?\"\n\nI couldn't help myself. \"What, that?\" I waved a hand dismissively between us. \"That was nothing. What else you got for me?\" It sounded badass in my head, but the way I panted between words and my hand shook didn't sell it very well.\n\nMalcolm rolled his eyes. \"Bravado aside, you're going to love the way you looked during all that.\"\n\n\"That bad, huh?\"\n\n\"Certainly outdoes everything else in your collection of marks pictures.\"\n\nMalcolm drew me in closer to him and traced some of the red lines across my thighs. For the first time, I noticed the state of my front. Holy shit! There were so many lines! Everything was all red and I had line marks everywhere! My sloppy grin made a full force comeback. \"Awesome!\"\n\nMalcolm chuckled about me and my marks fetish making his job keeping me healthy so much harder, which I shrugged off, pointing out that without me, his life would be boring as fuck. He was being very light, but his finger just grazing over the outlines stung. He really had done a number on me. Snuggling up into him, I watched the fascination on his face. Say what he liked, Malcolm loved the marks he gave me just as much as I did. We were a pair of deviants, unified in our freakiness.\n\nExperimentally, I gave my arms and legs a stretch. Definitely sore, but surprisingly tame. The gym had done more damage to my muscles plenty of times. Beyond that, I was a total mess. Sweat soaked my body and my eyes felt like they'd just gotten over being teary. Pretty much all of me felt soaked and throbby, all except\u2014 Quickly, I dabbed between my legs to check.\n\n\"Damnit,\" I murmured.\n\n\"Hmm?\"\n\n\"I'm bone dry in the one place it matters.\"\n\n\"Oh. No problem.\"\n\nI gaped at him. \"No fucking problem!?! Do you mean to tell me you're not planning to fuck me?\"\n\n\"You are aware that lube is a thing, right?\"\n\n\"You're missing the point,\" I said huffily. \"This is the first time I've ever been dry for you. How would you feel if you couldn't get it up for me? What's the point of me being your denial slut if you need to break out the lube to get it in me?\"\n\n\"I can't tell if you're being serious or not,\" he laughed. \"You're not a masochist, and if you did to me what I just did to you, I probably wouldn't be full mast either.\"\n\n\"Why do you even have lube anyway?\" I muttered. \"Are you jerking off behind my back?\"\n\n\"Oh my, the worst of accusations.\"\n\n\"Evading the question!\"\n\n\"Believe it or not, before you forced yourself into my bed, I had plenty of occasions to use lube. Besides,\" he gave me a chick peck kiss on the cheek, \"aren't you the one who brought over enough masturbation toys to start her own set shop?\"\n\n\"Touch\u00e9.\"\n\nWith everything else we'd been doing, both of us had forgotten about the whole camera setup. We only remembered when Malcolm helped me up to go to the bedroom. We both realized at the same time how much cuddle footage we'd just recorded, and looked at each other sheepishly.\n\n\"Should be bring it with us?\" I asked, trailing off at the thought of how much work that would be.\n\n\"I think we've given our audience more than enough of a show already,\" Malcolm said decisively. \"This can just be between us.\"\n\nMaybe I was still a little out of it, but in the moment, that felt incredibly romantic, and I snuggled myself into his arm for the whole ten yard trip.\n\nBut once we crossed the threshold, I quickly appreciated how much Malcolm had been holding himself back while I was enjoying my little subspace trip. He tossed me bodily onto the bed and jumped on top of me, roughly pinning me down and attacking my mouth with the same ferocity he'd kissed me with before.\n\nThe jarring movements reset the achy sting all over my body, making my body sing again with agony, but it didn't matter. Malcolm's raw passion, being wanted by him so badly, felt amazing. As emotionally drained and physically worn out as I felt, it was still exactly what I wanted. Weakly, I wrapped my arms and legs around him, holding him close, the sting of his skin against my marks be damned.\n\nI have no idea when he got his pants off, and apparently the lube had been in his bedside nightstand the entire time and I'd never noticed it. A shame, really. So many jerk-off joke opportunities missed. Still, it was nice that he didn't have to leave me behind to lube himself up and press into me.\n\nIt turns out that having one's clit and pussy rubbed by ropes tugging around makes it really fucking sensitive. Malcolm filling me up felt amazingly good, but when he finished thrusting in and his body smacked into mine, a burst of pain hit me hard enough to cry out. So much of his weight connected with my sore, beaten thighs while his pubis mauled my abused clit, it was like he'd gotten the flogger out and was torturing me again.\n\nAnd from the look in his eyes, he knew it. He knew exactly what fucking me would do, and he loved every second of it. His pupils dilated, his mouth opened and his breath came out in a long groan of pleasure as he felt my body jerk and writhe around his cock.\n\nIt was hard. It hurt so much, every time he thrust into me felt like my thighs would be rubbed raw, but I wouldn't have traded it for anything in the world. I wouldn't have traded Malcolm's pleasure infused face above mine or the lovingly possessive way he looked down at me for anything. I wouldn't have traded the pride and satisfaction and accomplishment and submissive love it filled me with for anything either.\n\nMalcolm only did this to me because he knew I could take it. He knew exactly how much it hurt, exactly how little stamina I had left, but he still thought I was strong enough to take it for him. Being recognized for that and him taking advantage of it was a compliment that made me feel tremendously proud of myself.\n\nAnd, one thrust at a time, another sensation battled back for dominance of me.\n\nGetting ravaged, filled by cock, feeling him throbbing inside me, spreading hot lust through my core while he bathed the rest of me in his body heat... there was only so long pain could dominate me. Maybe I slipped a little bit back into subspace, maybe I'd never totally left it, but one thrust at a time, moans replaced whimpers and pre-orgasm contractions replaced shudders. I kissed back into Malcolm's mouth, pulled against his back and grinding my breasts into his chest. I wanted all of him, every sadistic impulse, every wild fantasy and every inch of his body. I wanted all of it for myself, and I wouldn't be satisfied until I had it.\n\nMalcolm must have been thinking something along the same lines, because he easily overpowered my renewed energy and used it as an excuse to thrust harder. He had to keep breaking our kiss to catch his breath, giving me a perfect view of his face. Yeah, anything that involves giving him that beautiful pleasure-overloaded look is something I'm into.",
        "Especially when it ends with me getting filled up with his cum.\n\nMalcolm's orgasm felt like the perfect climax to everything. He held me tightly as his muscles could, crushing the air out of me with the force of it while he throbbed for all he was worth against my insides. All I could do was cling to him and enjoy the ride. It's fun to feel these little moments when even Malcolm loses a bit of his control. When he gets overwhelmed by the pleasure I've given him and gets taken away by it.\n\nUsually after a big orgasm, Malcolm likes to lay back and enjoy the afterglow. This time, however, he sprung up and immediately started rubbing my clit. I hadn't really been too close to cumming, but as sensitive as I was, his fingers mixing with his own cum gently circling me felt damn good. My back arched, setting off a chain reaction of achiness, that mixed with the intense pleasure and made my head spin.\n\n\"It's time for you to cum for me.\"\n\n\"It's fine,\" I instinctively started to say, \"you can relax if you want\u2014\"\n\nHe cocked his head and raised an eyebrow. \"Sorry, did that sound like I was asking you a question?\"\n\nHe pressed a little harder, still mostly gentle but my sensitivity amplifying it to shock pleasure right through me. \"No, Sir!\" I gasped.\n\n\"Good. Not every orgasm is a special treat for you, you know.\" He pointedly tapped his finger on my collar. \"Sometimes, I just want to see you cum.\"\n\n*Of course, my orgasm denying dominant picks right now to become altruistic!* If my body had enough battery left in it to fuel an orgasm, it was going to be a surprise to me. \"I'll try, Sir.\"\n\nMalcolm chuckled at my lack of confidence. \"You can take all that flogging with no complaints, but you think a simple orgasm is beyond you?\" He shook his head in mock confusion. \"And here I could have sworn I remember you pestering me to let you have more of them.\"\n\nHe picked up his pace again, adding a bit of stimulation down around the entrance to my vagina at the same time, making me squirm even more. \"Not fair, Sir, and you know it!\"\n\n\"Of course I do.\" He tapped my collar again, grinning. \"What was it you said before? About you making sure my life doesn't get boring? It seems reasonable that goes both ways.\"\n\nI clenched my teeth and nodded, the pressure of everything mounting to the point that it was hard to think again. Feeling pleasure made my body move, and moving hurt, but it also felt good to stretch my tired muscles, and then Malcolm was finger fucking me, and getting more of his cum on my clit, and that was unbelievably hot, so I moved even more, and around the circle again. Around and around, winding me up and making me dizzy.\n\n\"You're going to cum when I tell you too.\" I nodded again, barely registering, but then realizing after what he'd said. But I wasn't on the edge yet! \"Ten... Nine...\" Malcolm started, his smile taking on that evil curve to it and his eyes shining the way they do when he is in full puppet master mode. \"Eight... Seven...\" I stared back into them, the instinct to just submit and obey taking over. \"Six... Five...\" He snapped his fingers right next to my ear, the same trigger sound he'd used in our trance sessions so many times to trigger my arousal. But I wasn't in trance! To my own surprise, my body didn't seem to care whether I was tranced out or not, it responded anyway. I was getting there! Getting close! \"Four *Snap* Three *Snap*\" Each snap made my body jump like an electric current had been sent through it, the light in Malcolm's eyes grew to full flames and the pressure grew so intense in my clit that I suddenly worried I wouldn't make it to the end without tipping over. \"Two *Snap* One! *Snap*\" Malcolm plunged his fingers hard against my g-spot and rubbed furiously over my clit, snapping his fingers hard again and again. \"Cum for me. Cum now, I want you to cum.\"\n\nAnd I did.\n\nMy body absolutely spent itself cumming. My eyes rolled back in my head, my legs clamped shut on Malcolm's hand, and a firestorm of pleasure overcame overwhelmed me. I lost track of the bed under me and anything that might have been unpleasant feeling before, there was no room for it. All I had space for was Malcolm's voice telling me to cum, and the completely involuntary way my body responded. Those snaps seemed to cut right past my brain and went directly to my clit, making it burst in one throb after another of orgasmic ecstasy.\n\n\"Well done. I'm so proud of you,\" Malcolm's voice in my ear. \"You're such an amazing individual, you make me so proud to be your lover.\"\n\n\"Not being fair again, Sir,\" I murmured. \"... suck at compliments...\"\n\n\"Devyn, you just came on command. You're not getting away with that without accepting some praise.\"\n\n\"I had help. Praise your own damn self.\" Without opening my eyes, I could just picture Malcolm's knowing smile. \"And put that smile back where it belongs. Can't a girl lose her mind in peace?\"\n\nMalcolm laughed. He laughed and laughed, occasionally managing to say things like \"truly are one of a kind\" or \"what would I do without you.\"\n\nAgainst my feeble protests, he picked me up in his arms and carried me away. Before I knew what was happening, I found myself in the bathtub with hot water collecting all around me. Malcolm sat on the lip, holding my hand in his, watching me zone out. He looked happy. Genuinely happy in a way that was completely free of any of the guilt or self-recrimination that had sometimes plagued him after an intense session. My heart surged a little in my chest. If he could do all that to me and look like this now, it must mean I'd finally gotten him to a healthier mental place.\n\n\"Malcolm?\"\n\n\"Yeah?\"\n\n\"I love you so much.\"\n\n\"I love you too.\"\n\nI sighed contentedly, and let myself sink into the wonderfully pleasant water. \"Now, about you jerking off behind my back.\"\n\n\"Oh, fuck you, Devyn! \n\n----------\n\nEpilogue\n\nWhoever was responsible for naming townships in Maine wasn't exactly the most original bureaucrat in the world. Nicole and Sam's wedding took place at Sunday River Ski Resort in Bethel. Bethel is a bit north of Denmark, Sweden and Norway, Maine, northwest of Paris, Maine, west of Hartford and Peru, Maine, and south of Berlin, Maine. Driving in from the airport was like teleporting around the world, except despite the exotic names, everywhere looked exactly the same.\n\nMalcolm had always liked weddings. Something about them added a sense of occasion to a party, and this was certainly no exception. Sam's family must have really had connections in high places here, because they'd managed to secure a set of huge lodge type rental homes overlooking the slopes. Each had eight bedrooms, a huge common area complete with fireplace, and a hot tub.\n\nDevyn and Vivian were inseparable the entire trip, and it made Malcolm glad to see the way their friendship had blossomed into something special.\n\nThere had been an official ceremony and reception, but unofficially, the festivities began again every afternoon at a bar called The Matterhorn that Devyn was obsessed with because they served fully customizable pizzas and were not shy about dumping on toppings. It was like a whole different reality. The slopes closed at 4:00, the sun set at 4:30, everybody was drunk by 5:00 and they were all passed out in bed by 8.\n\nMalcolm and Devyn shared a high top with the newlyweds, Vivian and David, trading stories that got increasingly silly as the alcohol flowed\n\n\"Of course, being my parents, they gave us no fucking warning. They just called me like 'Surprise! We're coming to visit you in college for Thanksgiving'!\" Malcolm grinned. He knew the story Devyn was telling, and had always thought it was one of the most Devyn things he'd ever heard. \"So, my room mate Zoe and I suddenly had two days to clean the apartment. Let me tell you, it was no small feat. Neither of us were the neatest people in the world\u2014\"\n\n\"A fact that has never changed,\" Malcolm contributed.\n\n\"\u2014Hush, you! So, let's just say we were behind on the household chores by a bit. Maybe a few weeks.\" Everybody laughed, imagining how much Devyn was understating things. Malcolm laughed hardest because he didn't need to imagine it, he'd seen it firsthand. \"But we didn't let that stand in our way. We knuckled down and got to work. It took nearly the entire two days, but we cleared out so many garbage bags full of stuff, we found spaces in the house we didn't even realize we had. We vacuumed everything, cleaned out the fridge, washed all the dishes -- oh shut up you all! You can't seriously tell me you all kept everything clean when you were in college!\"\n\n\"We can't, our place was probably just as bad as yours,\" Sam admitted, Nicole nodding agreement, but the pair joining along in the group's mirth anyway.\n\n\"It took nearly the entire time, but by the end of the second day, we felt really accomplished. The place was so much better, it felt like a whole new outlook on life. Zoe and I lay back and promised each other we'd turn over a new leaf and keep it looking and feeling great like that...\" Devyn paused for a sip of beer, dragging the punchline out dramatically. \"Then, when my parents arrived, they took one look around the apartment and said 'Devyn, this place is a mess.'\"\n\nEverybody groaned and laughed together, then Nicole jumped in with a story about her time getting used to living with Sam back in school.\n\nMalcolm listened with one ear, watching the way their rings sparked in the light whenever they raised their mugs. That had always been part of the magic of weddings for him. The way such a small bit of metal could symbolize so much. Those tiny hoops bound Samantha and Nicole together more tightly than any rope or bond ever could.\n\nHe wrapped an arm around Devyn, fingering the ring he held in his own pocket. One day, he would put it on Devyn's finger, and it would make official what was already true between him. That she was his and he was hers.\n\nThey already lived and acted like they were married. Devyn even already wore his collar everywhere as a symbol of belonging to him. Still, the rings would be a symbol everybody would recognize and understand, and most importantly, he would have one that symbolized his belonging to her. Malcolm didn't have one of those yet, and he wanted one. He loved belonging to Devyn, and he wanted the world to know it.\n\nOne day, when the time felt perfect, it would happen. Until then, they would continue loving every day together as it came."
    ],
    "authorname": "Lydra",
    "tags": [
        "bondage",
        "consensual",
        "female submissive",
        "flogging",
        "fsub",
        "love",
        "male dominant",
        "mdom",
        "pain",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-07"
}