{
    "title": "Lady in Red Pt. 02 Ch. 21",
    "pages": [
        "For all of her strong words, Senator Chatham was extremely worried. Her daughter, along with twenty-two other girls, including the granddaughter of Vice President Pearson and the daughter of Representative Daniels, were missing. Their bus had simply disappeared. There was no plausible, acceptable explanation.\n\nAll of the girls had cell phones, as would the bus driver, the security people, and the four chaperones. The fact that not one of them had placed a call since shortly after they left the school indicated that they could not. Steve and the other chaperones would understand how worried the parents, school officials, and even law enforcement would be. They would certainly have contacted someone if it were possible.\n\nThe tension of the situation quickly escalated as it became evident that the bus was nowhere on the route it had been scheduled to take. Helicopters and police patrols had traveled the entire length of the route without finding any trace of the bus. The fact that there were some high profile students making the trip made it even more worrisome. The disappearance was no coincidence.\n\nIn less than an hour from the meeting the parents had with the FBI and other law enforcement officials, the media got wind of the situation. The sister of one of the parents had passed the news to her mother-in-law, who had been sworn to secrecy and who quickly told her sister, who then passed it on at her bridge club.\n\nReporters descended on the FBI headquarters in Washington. It didn't take long for the names of the students to be researched, along with the security personnel, the driver, and the chaperones. Somehow, Steve Hammer's name never came up in the early reports. He was reported simply as Steve Smith and very little was known about him. Senator Chatham knew that it wouldn't take long for the media to learn that he was in the thick of the situation. \n\nWith reporters camped outside her residence, as well as her office, Senator Chatham decided not to return to either place. She called her friend and ally, Senator Mason, and quickly explained the situation. Mason promised to find a safe and secure place for her and to call back. Ten minutes later she rang Senator Chatham's cell.\n\n\"Naomi Wilson is here and she assured me that you will be welcome to stay in one of the Lady in Red reserved rooms at their hotel. They have an entire floor to themselves and you'd never be bothered. She's offered to escort you there.\n\n\"There's one other thing. She feels very strongly that Gwen Anderson needs to know what's going on. She told me that if you didn't call Gwen, she would. You know how tight that whole group is,\" concluded Senator Mason.\n\n\"Please tell Naomi that I'll take her up on her offer, and that I'll also make that call to Gwen right now. I've been so worried that I hadn't given her any thought. My husband is in Tokyo on business and he's trying to catch a flight back, but it'll be another day at least, before he returns. I'm feeling pretty overwhelmed about this whole thing. Grace means everything to me,\" sobbed the normally stoic Chatham.\n\nGwen and Charlotte were just sitting down in their home to enjoy a salad for an early lunch when Gwen's phone chirped. She looked at the unknown caller ID, shrugged to Charlotte and answered the call. Charlotte listened carefully to Gwen's side of the conversation.\n\n\"Hello, Senator. I hope you're having a nice day. No, I haven't been watching the news. We just left a lecture and I'm about to have lunch. What's wrong? Is Steve okay? A chaperone for teen girls? That doesn't sound too dangerous. They disappeared? How? When?\"\n\nGwen fell silent as she listened intently to Senator Chatham's explanation of the situation. Her face tightened as she jotted down some notes. \n\n\"I don't have to tell you that Steve will do anything in his power to protect those kids. I'll catch a flight east as soon as possible. Please keep me informed of any new developments. We need to stay calm and think about what we can do to help Steve and those girls. I'll be there this evening!\"\n\n\"What's going on?\" asked Charlotte. \"Is Steve in trouble of some kind?\"\n\n\"He was chaperoning a bus full of teenage girls on a field trip to Philadelphia. Senator Chatham's daughter, Vice President Pearson's granddaughter, and Congressman Daniel's daughter were among the girls on the bus and it's simply disappeared. It's been missing for a few hours and foul play is suspected,\" revealed Gwen as she searched her phone's contact list and punched a number.\n\n\"Hello, Nancy. I need to get to Washington D. C. as fast as possible. The Red Lady is there already, so I can't use it. Call me back when you find a flight for me, and please be aware that this is an emergency. Do whatever it takes.\"\n\n\"Janice and Sybil need to know what's going on. They're on the porch. I'll get them right now,\" stated Charlotte as she hurried to the door. \n\nBoth women turned to Charlotte when she ripped the door open. It was obvious that she was upset. \"What's happened?\" demanded Sybil. \"Is Gwen okay? You don't look too good!\"\n\n\"Gwen's headed for D.C. as soon as she can catch a flight. There's hell to pay back there and Steve's involved. She needs security to be ready to go immediately. I know she doesn't think it's necessary, but I'm sure that it is. Way too much bad shit has been happening lately,\" stated Charlotte.\n\n\"We just heard about the bus full of girls that's missing. Steve's involved in that? How is that possible?\" asked Sybil rhetorically. \"Never mind. We can leave right now and buy anything we need later. What airline is she taking?\"\n\n\"Oh, shit!\" exclaimed Charlotte. \"We need to get you two tickets on the same flight. Let me make some calls.\"\n\nHalf an hour later, Janice, Sybil, and Gwen climbed into a limo to take them to the airport. Two back-up agents had already arrived to stay with Charlotte. Gwen, Sybil, and Janice were delivered to a small airport and in another forty minutes were airborne on a corporate jet.\n\n\"This jet belongs to Steve's grandfather's company,\" explained Gwen. \"He was in the area on business. When our company people went through the list of possibilities for a quick flight, they found his private jet was nearby. He immediately gave permission to use it, and here we are.\" \n\nGwen had already explained the situation on the drive to the airport. \"I knew that working for your company would be interesting, but I never expected it to be like this,\" admitted Sybil. \"From what I've seen of Steve, I'd guess someone's going to be sorry they ever messed with those kids. He looks every bit as tough as his reputation indicates.\"\n\n\"You've no idea,\" replied Gwen. \"I was there when he took out those Chechen killers in Moscow with his bare hands, and when he shot those terrorist in our high school. He's gentle and kind most of the time, but he's hell on wheels when it comes to murderers and the like.\"\n\nGwen and her security detail hurried to the hotel from the airport. Senator Chatham, Senator Mason, and Representative Daniels and his wife were waiting in her suite with Naomi when she arrived. \n\n\"Gwen, you need to hear the latest news. They've just found five of the girls from the school! They were at the King of Prussia Mall above Philadelphia and they were wearing explosives,\" revealed Senator Mason. \"They were terrified, but unharmed. The FBI managed to remove the jackets safely and dispose of them. The five girls are being examined in a local hospital to be sure they're alright.\"\n\n\"Why were they wearing explosives? Did someone make them do it?\" asked Gwen immediately. \n\n\"The girls told the FBI that four men and a woman killed their security guards and hijacked the bus. They switched to a 'Mayflower' moving truck shortly after that and were taken to a cabin in some woods. They were fitted with the explosives and told they'd be detonated when the girls went into the mall.\"\n\n\"Thank God, that didn't happen!\" exclaimed Gwen. \"Maybe the bastards didn't know how to make their damn bombs correctly.\"\n\n\"That's where it gets interesting,\" said Representative Daniels. \"The five girls told the FBI that some old guy that was one of the chaperones managed to get alone with them for a couple of minutes. He disconnected the remote wire so they couldn't be set off by someone else.\"\n\n\"An old guy?\" asked Gwen. \"One of the chaperones was an older man that knew how suicide bombs worked. That sounds fishy to me.\"\n\n\"Not when you know the entire story,\" stated Senator Chatham. \"I told Steve that I was worried about a famous, handsome guy like him being around all of those teen girls. He agreed and said he'd have a disguise on. He knew some people in town that had done some make-up on your movies. He boarded that bus as an overweight, gray bearded man with a limp. He must have been the one to disarm the bombs!\"\n\n\"That does sound like Steve,\" acknowledged Gwen. \"He'll be much more effective if these criminals think he's a fat slob that can barely walk. Boy, are they in for a shock! Do they have any idea where the rest of the kids are?\"\n\n\"There's a heavy police presence in the Valley Forge area. They believe that from what the girls told them, the cabin must be in the woods somewhere in the vicinity, but that still leaves a lot of room to hide,\" reasoned Daniels' wife. \"Plus we have to be concerned about what those bastards will do with the other girls. I just hope your boyfriend can live up to his reputation.\"\n\n\"Mrs. Daniels, I realize you're under a great deal of stress. I can assure you that Steve will do everything humanly possible for those kids. He's already saved five of them. That's five more than anyone else has managed. I can't promise that he'll rescue all of the girls, but I can promise you that he will do his very best, and his best is miles ahead of anyone else. That's what he does, and it's who he is.\n\n\"I'm going to arrange to have a car drive me to Valley Forge. You're all welcome to use our facilities here at the hotel,\" added Gwen.\n\n\"The FBI told us to stay away from the area, and that's what we should do,\" insisted Mrs. Daniels.\n\n\"Suit yourself,\" replied Gwen calmly before turning to her two security personnel. \"You'll be riding with me. If there's anything that you need before we leave, you'd better get it now. We're headed to Pennsylvania.\"\n\n\"If you have room, I'd like to ride with you,\" declared Senator Chatham. \"I'm not going to sit around and wait to learn my daughter's fate.\"\n\nA few blocks away, President Hanson was meeting with Homeland Security, the FBI, and his national security team. He was as irate as anyone in the room had ever seen him.\n\n\"How in hell do these things happen?\" demanded Hanson. \"The granddaughter of the vice president of the United States has gone missing, along with Senator Chatham's daughter and Congressman Daniel's daughter, plus twenty other girls, four chaperones, a driver, and the two security men that we believe to be dead. If there are foreign nationals involved in this, Homeland Security will be wading in some deep shit. This is exactly what you're tasked to prevent!\n\n\"Do we have any more information on this cluster-fuck?\" growled Hanson as he watched the Secretary of Homeland Security speak quietly with an aide.\n\n\"We've located the two security men. I'm sorry to report that they're both dead from gunshot wounds to the head. We're questioning the five girls that were strapped with explosives at that mall. They're pretty upset, but each of them insists that an 'older man' that was a chaperone disconnected a wire and promised them they wouldn't explode.\n\n\"They're all very familiar with Steve Hammer and they all deny he was the man that saved them. My people are trying to determine just who helped these girls and why none of them have seen Hammer. Senator Chatham insists he was on the bus,\" concluded the Secretary.\n\n\"Get Chatham on the phone!\" directed Hanson to an aide. \"I'll get to the bottom of this!\"\n\nA few moments later, Senator Chatham's voice spoke over the speaker. \"Hello, Mr. President. Do you have any news about my daughter?\"\n\n\"Nothing new, Senator,\" replied Hanson. \"You're on speaker phone with my security people. I'm told that you had Steve Hammer go on that bus trip as a chaperone, but the five girls that were recovered at that shopping mall never saw him on the bus. Do you have an explanation for that?\"\n\n\"I have you on speaker was well. Congressman Daniels and his wife, Congresswoman Anderson, and two of her security team are present. I asked Steve to disguise himself so he wouldn't be too much of a distraction to a bus load of teen girls. He's probably the man that disconnected the remote detonators to those vest bombs.\"\n\n\"Goddamn it!\" spat Hanson. \"My team had no idea he was in disguise. They don't have any idea about anything! Can you tell me anything else that I should know? I can't rely on my people to get anything right.\"\n\n\"Mr. President?\" spoke Gwen softly in an attempt to calm President Hanson. \"The most important thing you need to know is that Steve is working to save those kids. Please be certain that law enforcement knows that he's disguised as an older man with a gray beard, a bit of a beer belly, and a noticeable limp.\n\n\"We're on route to Valley Forge as we speak. I intend to be there when Steve manages to put an end to this nightmare. You've got your best man on the inside, so I'd say you're handling this right. You need to be patient and wait for Steve to use what he's learned with the SEALs, and from his father.\"\n\n\"Thank you, Gwen,\" responded a calmer Hanson. \"We did stumble into some luck when Steve boarded that bus. You must be worried sick. I apologize for flying off the handle. This entire episode is extremely upsetting. We appropriate a lot of money to prevent this sort of thing.\"\n\n\"When it's all over, everyone can sit down and determine what needs to be done differently. Right now, we need to do everything possible to find those kids,\" pointed out Gwen. \"If we learn anything new, we'll let you know immediately, Sir. Please do the same for us.\"\n\n\"Okay, and thanks again, Gwen,\" replied Hanson as the connection was terminated. \n\n\"Was that so damn difficult?\" demanded President Hanson as he berated his security team. \"If you don't know what's going on, ask Chatham and Anderson. They seem to have a system that actually works!\"\n\nAs he rode in the back of the moving truck, Steve considered the situation. The three female chaperones were doing a good job of reassuring the girls. There were still some whimpers, but for the most part, the girls were silent as they sat toward the front of the cargo compartment, huddled together. \n\nThus far, his disguise had worked as intended. No one seemed to pay him much attention. When he climbed into the truck, he had struggled mightily. He hoped that the gunmen felt he was a minimal threat and were less like to pay him much attention. \n\nSteve knew that the teen girls were looking at him with a certain amount of disgust. He was assigned to help keep them safe and he appeared to be barely able to move his fat ass from one place to the next. He fought the feelings of guilt and continued to play his part. He had little hope that his captors would release anyone alive. The brutal murder of the two security people indicated that these people didn't expect to walk away from their venture.\n\nIt was dark inside the back of the truck when they finally rolled to a stop and the back doors swung open. Steve was able to see an old cabin nestled in a heavily wooded area off to the side. Everyone was told to climb out of the truck. For his part, Steve dropped to the bed and sort of rolled off, feet-first. He appeared to struggle to keep his footing when he hit the ground, as he lurched a few steps to regain his balance. \n\nOne of the gunmen made a derogatory remark as he prodded Steve in the back with his gun. Limping along, Steve was the last person to enter the cabin. He immediately saw a fifth terrorist sitting at a table stacked with explosives! He was meticulously attaching wires to vests, as well as the explosives. He had a schematic diagram sitting to his left as he carefully assembled what appeared to be vest bombs.\n\nThe entire group was ushered into a large, sparsely furnished room. They were only in the room for a few minutes when a gunman entered, grabbed the nearest girl and dragged her out of the room. About ten minutes later, he pushed her back into the room, but with an explosive laden vest! The other girls squealed and moved to the other side of the room, away from the unlucky girl with the vest. The man randomly grabbed another girl and dragged her into the front room.\n\nThe young girl wearing the vest was sobbing dreadfully, and began bawling her eyes out when her friends abandoned her. Steve slowly made his way over to the girl and kneeled down in front of her.\n\n\"You need to trust me,\" he began. \"I was sent by the school to keep you safe. I know how to neutralize the switch on this vest so it won't explode. Can you be really brave and let me work on it?\" \n\nThe girl was still trembling when she nodded to Steve. He studied the device for a long minute before carefully taking a thin wire between his thumb and forefinger and tugging it. It pulled away from a small terminal as the girl gasped. When nothing else happened, she gave Steve a grin.\n\n\"They may try to send you into a crowd to set off the explosives and kill a lot of people. Don't worry about it. I'll tuck this wire under this buckle and no one will ever notice it's not connected. Once you're dropped off, don't panic or cry, but find a policeman, or even a fireman if possible, and ask for help. They'll know what to do. I promise you this bomb will not explode, okay? But don't tell anyone what I did. They need to think that it'll work.\"\n\nSteve repeated his efforts with each girl that was returned wearing a vest. When the fifth girl was pushed back into the room, the gunman chuckled as he looked over the group. The girls without any explosives on them were as far from the five with explosives as they could get. He moved back into the front room and closed the door. That allowed Steve to disconnect the fifth girl's device. He barely managed to return to the far corner when the gunman reappeared and ordered the five girls to leave the room. \n\nSteve heard a vehicle start up and drive away. It seemed likely that the girls were being taken somewhere to create havoc. He found himself working to calm his nerves as he thought about how frightened the girls must be. An hour and a half later, he heard a vehicle pull back into the driveway. \n\nSoon there was yelling and angry rebukes echoing throughout the cabin. Everyone in the room with Steve was very quiet. Suddenly there was a gunshot! A few seconds later there was another and then silence. \n\nAlthough they weren't speaking in Farsi, Steve had been able to gain the gist of the conversation that ended with the gunshots. A man was very angry at the bomb maker because not one of them had detonated. The man making the bombs insisted he had put them together properly, but the idiot entrusted to detonate them must have screwed up. That's when the gunshot rang out. Steve knew the second shot was simply to make certain the man was dead.\n\nThe woman that had killed the two security men came angrily into the room followed by one of her henchmen. She walked over to the group of girls and pointed out three of them. Her goon grabbed two of them by their arm, while she grabbed a handful of hair belonging to Senator Chatham's daughter and dragged her from the room with the man towing the other two girls. \n\nOnce the door was closed, Steve quietly moved close to it and listened intently. Again, he was only able to follow the gist of the conversation. There were many words and expressions he was unable to follow, but he understood enough to be very concerned.",
        "Apparently the woman was in charge, which surprised Steve since traditionally, women did not lead men in the part of the world these people called home. He almost chuckled as he considered how 'enlightened' they were. \n\nThe woman was taking the three high profile girls with her to a public destination. She would be taking one man with her and leaving the other three behind. Their job was simple. They were told to shoot everyone in the room and then video the blood covered bodies that would litter the floor. It would be broadcast over the internet later that evening.\n\nSteve listened carefully but only picked up bits and pieces of conversation after that. For some reason, the killers were just sitting around waiting. After what Steve judged to be several hours, the woman spoke sharply to the others. That's when it occurred to Steve that they had been simply catching some sleep. Murder and mayhem was a tiring activity, apparently. \n\nHe heard the woman open the outside door. Then he was able to hear the man curse and urge the three girls to go outside. The remaining men discussed what weapons they preferred as they prepared to slaughter everyone in the next room.\n\nSteve had played the situation over in his mind. The kids and the chaperones would not be any help, and would more likely get in his way if they tried. He needed to find a means to take out all three men before they could start shooting their victims. The bus driver was a nervous little mousy guy that Steve quickly determined would be no help. Whatever had to be done, he would have to do himself. He decided to not tell the kids or chaperones anything, because there was nothing they could do, other than cry and panic.\n\nHe formulated plans and discarded them as quickly. Finally he decided on the one he felt gave him and the girls their best chance and made preparations to carry it out. He curled up on the floor a short distance in front of the door and pretended to be asleep.\n\nA few minutes later, the door pushed open. The first man through stopped short when he saw Steve balled up on the floor. The men behind the first one grumbled and pushed the first man forward so they could gain entrance. The first man was forced to step over Steve as the other two crowded behind him.\n\nSuddenly Steve's foot shot up. He kicked the man stepping over him extremely hard in the groin. That man immediately crumpled to the floor in tremendous pain. Steve then swept his leg around and took the second man's feet out from under him. That man lost his grip on his handgun as he slammed to the floor on his back. \n\nThe gun skidded a couple of feet across the floor and Steve lunged for it. He felt something slam into his back as he wrapped his fingers around the weapon. He quickly rolled onto his back and raised the gun. As he did so, splinters flew from the floor area near his head. He fired twice into the man standing over him with a handgun. The man went over backwards.\n\nSteve had barely finished pulling the trigger when the man that had slammed to the floor from the leg sweep struck him in the mouth with his fist. Steve tried to bring the gun to bear but the man grabbed his wrist with one hand as he continued to pummel Steve with his other. From the corner of his eye, Steve noticed that the first man he had knocked down was slowly bringing his weapon around to point at Steve. Steve grabbed the shirt of the man hitting him and rolled toward the third man with the gun. He felt the man in his arms jolt twice as the concussion filled the room. Steve pushed the now limp man on top of the man with the gun. As the man worked to free himself from the body, Steve jumped to his feet. Once the man managed to get his fallen comrade off his torso, he brought his gun around. Steve fired twice and the man went still.\n\nBy now the girls were screaming and crying. Steve ignored them as he quickly checked for pulses on his three adversaries. He found none. He turned and approached the chaperones.\n\n\"You ladies really need to get these kids out of here as fast as you can. It'll be light before long. Just take the kids into the woods and sit still until daylight. There'll be police looking for you. Be sure to avoid that woman that shot the two guards. She could come back. You'll be fine if you stay hidden until the police find you, or you see them.\"\n\n\"Who are you?\" demanded the youngest chaperone. Steve had learned earlier that she was an English teacher at the school. \"You look awfully familiar with that stupid beard about to fall off.\"\n\n\"He's Steve Hammer!\" gasped a blonde girl standing off to Steve's left. \"Now that the beard's off, you can tell. It's Steve Hammer!\"\n\n\"So it would appear,\" acknowledged another chaperone. \"It also looks like he's bleeding pretty badly! That horrible man shot you in the back! Let me take a look at it. I'm a nurse. Get that shirt off!\"\n\nSteve quickly considered the situation. He needed to get after the two murderers that took the three girls, but he knew if he bled too much, he wouldn't be able to help when he caught them. Reluctantly, he unbuttoned his shirt. Once it was open, an ace bandage was seen holding something against his stomach. \n\n\"That's padding to alter my appearance,\" he explained as the nurse arched her eyebrow in question. \"I have to hurry, so let's get this done as fast as we can. There are three girls that still need help.\"\n\nThe nurse quickly unrolled the bandage and used the old shirts that Steve had worn for padding as cloths to wipe the blood from his wounds. She made two bandages from them, placed them over the entry and exit wounds, and had the English teacher hold them in place as she rewrapped the ace bandages around Steve's torso to hold everything in place. \n\nThe girls had all remained silent while the nurse worked on him. Once she was finished, Steve pulled his shirt back on and began to button it. As he did so he glanced at the teen girls and realized that they were gawking at him. He blushed as he finished buttoning his shirt. He was already beginning to stiffen up from the bullet wound.\n\n\"My guess is that bullet missed anything too vital, but loss of blood and/or infection can be very serious,\" worried the nurse. \"My other guess is that these girls never thought they'd be that close to Steve Hammer with his shirt off. You can close your mouths now, ladies.\"\n\n\"I'm headed after the other three. You make sure you get away from this building and wait for daylight. Police will be all over the roads and maybe in the woods before noon. They know we're in the area. Flag them down and you'll be fine. I'm taking the motorcycle that bomb maker rode to get here and going after the others,\" stated Steve as he stepped into the outer room.\n\nOn the floor in the corner was the body of the man tasked to make the bombs that failed to detonate. Steve grimly considered how failure was not an option in terrorist endeavors. Steve noticed a pamphlet for Valley Forge National Historical Park sitting on the counter. Artillery Park was circled in ink. Steve had understood enough of the conversation to know the woman terrorist was going to take the three girls there, probably to execute them in a public venue! He studied the map on the brochure briefly, shoved it into his pocket, then tucked two guns into his waistband and headed for the dead terrorist's bike.\n\nThe sun was just starting to show over the hillside as Steve swung his leg over the motorcycle and turned the ignition key which was still in the machine. The teen girls yelled encouragement to him as he accelerated the bike down the dirt road.\n\nGwen and her group had arrived at King of Prussia in the small hours of the morning. They stopped at the local police station to see if there were any developments in the situation. After a brief conversation and a promise to inform them immediately of any breaking news, Gwen told the group that she was going to ask her driver to take her around the area.\n\n\"I can't sit still and wait. This situation is coming to a head. Those killers must know the bombs on those girls didn't detonate. If they've been listening to the radio in the past hour, they know that Steve is one of the chaperones. They also know that law enforcement is searching the area with a fine toothed comb. It's all going to hit the fan soon, and probably this morning. I'll feel better riding around the area than sitting in a hotel room.\"\n\nThe rest of her group agreed with her assessment and joined her as she directed her driver to explore the roads in the vicinity of Valley Forge. \n\nSenator Chatham's phone rang shortly after sunrise. She listened for less than a minute before ending the call.\n\n\"Four dead men were found in a cabin in the woods not too far from here. They're foreign nationals and the FBI strongly suspects that they were involved in the abductions. They found indications that the girls had been there recently,\" related Chatham as she returned her phone to her pocket. \"It sounds to me like Steve's been busy.\"\n\nHalf an hour later, Gwen noticed that the traffic ahead had begun to back up. Their limo gradually came to a complete stop. Everyone in the car began complaining about the lack of progress and how they didn't have time to be caught up in some sort of traffic jam.\n\nThe crabby attitude stopped suddenly when Senator Chatham's phone rang again. She answered it and listened for about a minute without speaking.\n\n\"Keep looking. If you find Steve, those girls will be close by. I'm sure of that. Was she certain he wasn't wounded too badly? Okay, keep me informed,\" concluded Chatham's phone conversation.\n\n\"Has Steve been wounded?\" demanded Gwen as soon as the senator disconnected. \"How badly is he hurt?\"\n\n\"They found fifteen girls, the chaperones, and the bus driver in the nearby woods! Steve had been in that cabin and apparently he's responsible for the dead men. He managed to prevent them from harming anyone else. One of the chaperones is a nurse and she bandaged Steve up. She said that he'd been shot in the back, but she didn't think any vital organs had been hit. He left the cabin like a bat out of hell because the two remaining killers took my daughter, Daniels' daughter, and the vice president's granddaughter with them. He's on a motorcycle and hunting the bastards down right now.\"\n\nSenator Chatham had just finished speaking when a motorcycle roared past them. The driver was racing down the grassy berm on the side of the road shoulder. \n\n\"Jesus!\" exclaimed Sybil Burke as she pulled her weapon and opened the door. \"That's a goddamn moving van about a hundred yards ahead. That's gotta be Steve on the bike. This is coming to a head right here, and right now!\"\n\nShe left the car and began running down the highway between the stopped cars. Janice pulled her handgun, jumped out the other door, and immediately took off down the side of the road in Steve's wake. Gwen had just managed to step onto the macadam when she saw a figure open the back door of the van and climb inside. As she hurried down the highway, Gwen saw the figure return with a gun in one hand while she dragged a sobbing girl by the hair. Then Gwen saw Steve! He stood a couple car lengths behind the van in the center of the highway. People in the parked cars immediately behind the van began fleeing toward the sides of the road. Even as she watched the scene unfold, Gwen noted that a helicopter was sitting a short ways to her left in a small field.\n\nThe woman with the gun had the teen's hair twisted in her hand as she cruelly forced the girl to stand in front of her, shielding all but the woman's head from sight. She held the barrel to the girl's temple as she yelled demands at Steve. She insisted that he drop his gun or she would kill the girl.\n\nFrom her vantage point, Gwen saw Steve's left hand reach behind his back and slowly pull a gun from his waistband. As he dropped the gun in his right hand to the pavement, the woman quickly swung the weapon in her hand toward Steve and fired!\n\nSteve knew that he'd become the killer's target as soon as he dropped his gun. He had also seen her partner creeping along a line of cars to his left and ahead of him. He forced himself to ignore the man since the woman was the immediate threat to the teen girl. As he dropped the gun in his right hand, Steve took one step to his right as he rapidly brought the second weapon to bear and fired twice.\n\nAll that was showing of his adversary was her upper face. The rest of her was concealed by Senator Chatham's daughter. Steve was extremely concerned about his accuracy. The chance of striking the girl was very real, but he knew that if he died, the woman would immediately turn the gun on the girl and kill her next.\n\nSybil had not been able to catch up to Steve, but she was only a couple of car lengths behind him and to the left side of the road when she saw him drop a gun to the ground and immediately exchange fire with the woman holding the girl as a shield. Suddenly, a man rose up between two cars not thirty feet from her and fired a round into Steve! Cursing her lack of attention, Sybil placed a bullet into the man's head before he could manage a second shot. \n\nShe rushed to the man's body and quickly determined that he was dead, with a large section of his skull missing. Then she moved to the van to find the female terrorist still clutching a gun in her lifeless hand. Sybil noted that neither eye was visible, and there was very little left of the shooter's skull.\n\nShe carefully untangled the crying teen's hair from the woman's left hand and helped her climb from the back of the truck. That was when Sybil realized that two more girls were huddled in a corner in the back of the vehicle. She quickly climbed into the truck and sliced the plastic ties that bound the girls together. She led the trembling girls to the back of the van as bystanders began returning to their vehicles.\n\nAs Sybil helped the distraught girls from the van, she glanced up the road. Her heart sank as she saw Gwen kneeling next to Steve as he lay supine on the pavement! She was obviously attending to his midsection. Janice was kneeling on the other side of Steve, helping Gwen any way she could.\n\nAs she numbly looked over the scene, Sybil saw a woman reporter with a camera man standing on the back of a pickup truck to better film the carnage. Behind them Sybil saw a helicopter. It had 'News Channel 3' written on both sides.\n\nSenator Chatham had managed to wrap her daughter in a loving embrace as tears poured down her cheeks. They were standing just a few feet from where Steve lay on the highway. Sybil rushed up to Gwen and knelt beside her.\n\n\"Gwen, there's a helicopter over there. It'll take too long for an ambulance to get here through this traffic jam and then get back to the hospital. I think that we should get Steve on that chopper and to a hospital as fast as possible.\"\n\nGwen considered Sybil's suggestion as she applied a makeshift bandage to Steve's lower torso. She knew well just how dangerous the situation was. Steve could simply bleed out, and even if he didn't, septicemia was a very real possibility. Looking at the traffic backed up for as far as she could see, Gwen made her decision. \n\n\"Help me get him to the chopper!\" agreed Gwen. \"We don't have any time to waste.\"\n\nJanice had noticed a couple of men in uniform watching everything as they stood alongside an older truck. \"Marines! Could you help us get this man to that chopper? He's too heavy for us to carry!\"\n\n\"Ma'am, we'd be honored,\" replied one of the men as they hurried over and lifted Steve. As carefully as they could, they carried Steve to the helicopter. As they reached it, the news woman approached them.\n\n\"You need the helicopter? Please use it! The pilot can come back and pick us up later. Good luck.\"\n\n\"Marines, could you get him strapped into the seat as gently as you can?\" asked Janice as Gwen climbed in first and turned around to direct the two rugged Marines.\n\nAs Gwen watched, the two men lifted Steve into a seat and passed the belt around to her to buckle him in. \"Ma'am, it was an honor to be able to help you and Lieutenant Hammer. We thank you both for all you've done for those of us in the service. Godspeed and good luck!\" \n\nSybil clamored into a seat next to the pilot as she spoke to Janice. \"Stay with Senator Chatham. The police will have a million questions. Here they are now,\" pointed Sybil as she spoke to her friend. \"Take care of things here.\"\n\nWith that she pulled the door closed and buckled her seat belt as the craft lifted quickly and set a course for the nearest trauma center. Sybil was told the name of the hospital by the pilot. She called and briefed them to expect a gunshot victim in the next few minutes and to be prepared. When they landed, Sybil was glad to see hospital staff waiting for them. Steve was rushed into surgery with Gwen following closely. \n\nSybil glanced at her watch and saw it was just after eight AM. She knew Gwen would be far too busy to make any calls, so she punched in her mother's number and explained the situation.\n\n\"Mom, it's been a hell of a day already. I shot one of the terrorists that kidnapped those girls, but I was a little slow. The guy put a bullet into Steve's abdomen. He's in Jefferson Hospital in Philly right now. I imagine they're preparing him for surgery. Gwen is with him. We need to inform the rest of their group. He saved all of those kids, along with their chaperones and the bus driver. I've never seen a man like him. Okay, you take care of the calls. I'll go back in and wait with Gwen. Thanks, Mom.\" \n\nMallory Burke soon learned that she had no need to call any of Steve's friends and family. Her first call was her last.\n\n\"Paula, this is Mallory Burke. I'm calling about Steve.\"\n\n\"We watched it on the news, unless you have an update on his condition. We're all packing a bag and getting ready to fly to Philly,\" revealed Paula. \"Thanks for the call, and thank Sybil for her help. She may have saved Steve's life. We'll see that she knows how much we appreciate her efforts. I'm sorry to be abrupt, but we're really frantic here. I'll speak with you from Philly later today.\"\n\n\"They're at Jefferson Hospital. Would it be okay if I flew with your group?\" asked Mallory. \"Sybil just killed a man and she sounded a little depressed. I'd like to make sure that she's doing okay.\"\n\n\"Certainly,\" replied Paula. \"We'll be taking off within the hour. Meet us at the Red Lady at the airport. She'll be back and waiting for us by then.\"\n\nAlthough their rules specified hospital personnel only could attend surgery, Lady in Red's generosity to hospitals was very well known. When Gwen explained that she was in her fourth year of med school and she would be most appreciative if she were allowed to observe Steve's surgery, she was quickly shown where to prep.\n\nShe watched the doctors and nurses closely as they worked to stop Steve's bleeding and to repair internal damage from the bullet. Gwen was extremely pleased at the skill and dedication of the hospital staff. Even with that skill level, it was over five hours from when Steve had been shot to when Gwen stepped into the waiting room after the surgery. \n\nSybil had been alone in the waiting room when two police detectives asked her to step into a private room for an interview. Because there were fatalities and it was such a high profile case, she was questioned for almost two hours. Finally she was told to not discuss the situation with the press until further notice and the interview was ended.\n\nWhen she returned to the waiting room, Janice, Senator Chatham, her daughter, along with the Daniels and their daughter were quietly talking among themselves. Janice saw the question in her eyes and shook her head. Sybil took a seat and tried to relax. She must have fallen asleep because when she opened her eyes, the entire Lady in Red family was in the room.",
        "Then she saw her mother hovering over her. Mallory patted her shoulder and smiled proudly down at Sybil. Jordan came to her as soon as she saw Sybil's eyes open. \"You made the difference for our guy this morning! Hiring your group was one of the best things we've ever done!\"\n\nWith that said Jordan hugged the surprised woman warmly and then stepped back so the other members of the family could do the same. Paula was very emotional as she embraced Sybil.\n\n\"It was all on TV. We saw how hard you ran to get in a position to be able to help Steve. You saved him for Gwen and the rest of us!\"\n\nAfter everyone finished thanking her, Sybil had time for a few private words with Janice. \"Gwen is Steve's girlfriend, lover, and probably future wife, but the rest of the women in the group, including Gwen's mother, aunt, and sisters don't even try to hide the fact that they're in love with him. From what I've seen, Gwen's the only one that sleeps with Steve, but it wouldn't take much for him to get the others in his bed.\"\n\n\"Well, duh!\" exclaimed Janice. \"The guy's built like a Greek God, talented, wealthy, generous, ...well you get the idea. I'd be flat on my back for the guy in a New York minute, except there are a dozen beautiful women ahead of me.\" \n\n\"Yeah, but you're single, and on your back a lot any way. These women are married or in serious relationships, but they're all in love with him. It just seems unusual for so many women to feel that way and still get along so well. I have yet to see any jealousy, even among the men.\"\n\n\"It's pretty obvious that Gwen has Steve's full attention,\" responded Janice. \"She doesn't seem to mind that the others are so attracted to him. Lisa warned us that we'd fall in love with a guy or two if we were around them very much. I sure get all wet and tingly when he's around me. I'm beginning to think that you've finally found a guy that piques your interest.\"\n\n\"My interest? Of course! I've never seen his equal. I just wish I'd been paying closer attention and shot that miserable prick before he put a bullet into Steve,\" replied a subdued Sybil.\n\n\"Are you kidding? You ran your ass off just to get there. Then you popped that bastard off as soon as he stood up,\" pointed out Janice. \"You did everything you could. No one blames you for Steve being shot.\"\n\n\"Well, I know the truth,\" answered Sybil. \"I just pray that he recovers.\"\n\nA short time later, Gwen stepped into the waiting room. She looked at her family and friends and managed a small smile. \"He's out of surgery, but not out of danger. The bleeding has been stopped and the bullet removed. The worry right now is infection. Septicemia is extremely serious. He's on antibiotics. We all know how tough he is, so I expect him to recover, but I'm going to watch him like a hawk. It'll be touch and go for a day or two as far as any infection is concerned.\"\n\nPaula grabbed Gwen and hugged her tightly. Soon the others were following suit. Waiting until everyone else had spoken to her, Sybil moved closer to Gwen, but before she could say anything, Gwen wrapped her in a warm embrace.\n\n\"You saved my guy!\" whispered Gwen into the other woman's ear. \"We'll never forget what you've done for our family.\"\n\n\"Gwen, I was too slow! I screwed up. That's why Steve's in the hospital right now,\" sobbed Sybil quietly. \n\nGwen pushed Sybil back, held her at arm's length, and studied her face closely. \"Lisa, will you walk with Sybil and me for a minute?\"\n\nGwen took Sybil's hand and led her from the room as Lisa rushed to catch up. They came upon an empty meeting room and went inside and closed the door.\n\n\"Sybil seems to have some sort of guilt about her role in Steve being hurt today. Does it sound familiar to you, Lisa?\" asked Gwen as she held Sybil's hand.\n\n\"Boy, does it!\" answered Lisa immediately. \"I had that guilt big time a few years ago when a terrorist made me call Steve so he wouldn't kill me. Steve came out and was abducted by the man. He was beaten, in a car crash, an explosion, and then forced to survive a fierce snow storm for a few days.\n\n\"When he was rescued and treated in the hospital, I was the first person he asked to speak to. He had already heard about my guilt. He explained just how it was. He wanted me to rely on his strength and skill. I should never feel bad about asking for his help, and he was extremely proud that I thought well enough of him to call him in my time of need. If I continued to blame myself, we'd never return to where we were before the incident, and the terrorist would have won.\"\n\n\"My situation is different,\" reasoned Sybil. \"I'm supposed to be a professional, recognize dangerous situations, and respond accordingly.\"\n\n\"I saw the whole thing on TV and that's exactly what you did,\" stated Lisa. \"You were amazing, but that's not even the issue. If Steve thinks that you feel you failed, he'll think that he failed or you'd never feel that way. He needs you to be proud of your role today and to be proud of him. There was no failure! You supported him, and together you saved those kids. \n\n\"We all love the guy and we know how he thinks. He's appointed himself as the protector of all of us, especially us females. It's like we're all his women, and in a way we are. He absolutely loves each of us dearly. He hurts when we hurt,\" added Lisa.\n\n\"I can see that he loves all of you, and all of you love him. Aren't you upset that I didn't stop that man before he shot Steve?\"asked a puzzled Sybil.\n\n\"Hardly! We're all delighted that you ran like an Olympic sprinter to reach a point where you could stop that horrible man from ending Steve's life. Steve doesn't mind when a woman saves him, but he really hates it when they have feelings of guilt and it involves him,\" explained Lisa.\n\n\"I'll tell you something else. You've moved into that circle of women that Steve loves and protects, don't you think, Gwen?\"\n\n\"Absolutely! Steve has been telling me how alert and professional you are. He feels very emotional when he thinks about what would have happened to Mom, Diane, Billy, and Theresa, if you and your people hadn't been there that day to save them. Your beauty, skill, confidence, and professionalism were impressing him before. Now he's going to love you. It's what he does.\"\n\n\"I'm not beautiful like you and your friends. I'm not voluptuous like the rest of you. I'm just a skinny girl with a gun,\" joked Sybil weakly.\n\n\"You've badly misjudged Steve if you think the size of your boobs makes any difference to him. You've done a disservice to yourself if you think you're not beautiful,\" replied Gwen. \"I guess I need to sum this up and get back with everyone.\n\n\"I want you to believe that you saved Steve. I want you to believe that you did nothing wrong and everything right. I need you to accept and respond to the way Steve will begin treating you now. I need you to love him back. That shouldn't be too difficult, should it?\" asked Gwen gently.\n\n\"Love him? You're his girlfriend! How can you ask me to love him?\" wondered Sybil.\n\n\"I didn't ask you to sleep with him, and you won't be,\" smiled Gwen. \"All I'm saying is that he will be treating you extremely well when he recovers. Please accept it and be nice back. Do not ever let him think that you feel that you failed him. That will upset him, which in turn, will upset the rest of us. Wouldn't it be better to be one of us than someone we all dislike for upsetting Steve as he recovers?\"\n\n\"When you put it like that, of course,\" blushed Sybil. \"I just don't know how you want me to love him without making a fool of myself.\"\n\n\"Don't worry about that,\" chuckled Lisa. \"We all do that all of the time with Steve. It's pretty much expected.\" \n\nMallory Burke had been concerned when Gwen and Lisa led her daughter out of the room. Was it possible that they did blame her for Steve being shot? Did they believe that her reaction time was too slow? Mallory had come to greatly enjoy the association her company had forged with Lady in Red and the possibility of breaking that relationship worried her. \n\nWhen Gwen, Lisa, and Sybil stepped back into the room, Mallory knew immediately that everything was going to be fine with her daughter. She was smiling and laughing as she stood between Lisa and Gwen, who were also smiling as much as they could under the circumstances.\n\nGwen circulated among her friends and family to discuss Steve's situation while Janice pulled Sybil off to the side. Mallory followed closely.\n\n\"What happened? I thought we might be getting the boot, but you walked back into the room with a big grin plastered on your face. Is everything okay?\" demanded Janice.\n\n\"Very much so,\" responded Sybil. \"Lisa and Gwen just explained the facts of life to me as they pertain to this group of amazing people. I'm to never even hint to Steve that I failed him this afternoon. They think I did pretty damn good and they insist that Steve will, too. I'm just supposed to keep doing a good job and be upbeat. Oh, and I have to love Steve because he's going to love me.\"\n\n\"What the hell is wrong with you?\" worried Janice. \"Is the shooting bothering you? Is that it? You're acting pretty strange.\"\n\n\"You think I'm bothered by killing that bastard before he could shoot Steve again?\" scoffed Sybil. \"Those two just told me that Steve is going to be acting very appreciative toward me and I'd damn well better reciprocate his feelings.\"\n\n\"They want you to sleep with Steve?\" asked an incredulous Mallory. \"That's sexual harassment to the maximum!\"\n\n\"Mother! Love and sex don't always have to be linked. You're old enough to realize that. Everything is fine, but don't be surprised if Steve treats me a little special, like he does about a dozen other women, but not as special as Gwen, damn it!\" laughed Sybil. \"It's all cool. I just hope he gets better real fast!\"\n\nGwen's family decided to check into their hotel and get some rest since it was very unlikely that they'd be able to see Steve until the danger of infection was past. Gwen was given a cot in an unused supply room to catch naps in while she waited for Steve to awaken. \n\nIt was Saturday when Steve was allowed visitors. Paula and Diane used their seniority to be the first ones in. Gwen was seated next to Steve and beamed as Paula and Diane fawned over him for about five minutes. Then Kate and Lisa made their appearance, followed by Jordan and Charlie and then Naomi and Stephanie. \n\nSteve kept insisting that he'd only done what he had to do and it was nothing special, but it was obvious that he greatly appreciated the love and attention of his friends. He soon became tired, so the procession stopped after Becky and Ashley had their time with Steve. \n\nThat afternoon, the guys came through in pairs. Billy accused Steve of faking injuries for the sake of sympathy. Just before he left, he told Steve, \"I know how it feels to be shot in the gut. I hope I never go through that again. I can still remember how bad it hurt. Take care, My Friend!\"\n\nWhen Janice and Sybil stopped in, Steve insisted on a gentle hug from both women. \"You two were amazing that morning. I knew that guy was to my left, but I couldn't even think about him until I took out the bitch that had Senator Chatham's daughter. I was trying to bring my gun up when I saw the guy go over. I knew I wasn't going to be in time, but you were, Sybil. I owe you big time and I always try to pay my debts.\"\n\nRemembering what Gwen had said, Sybil smiled and replied, \"I'm just glad I was able to help. You did all of the heavy lifting, but I'm really pleased that you feel I did so well. It means a lot to me. You've come to mean a great deal to me and I want you to get well as fast as you can.\"\n\n\"I heard you ask those Marines to carry me to the helicopter, Janice. You guys really think fast on your feet. I'm glad that you're the ones watching over Gwen. I know she's safe when she's with you,\" concluded Steve. \n\nLater that evening, Gwen was surprised when President and Mrs. Hanson were ushered into Steve's room. She quickly stood and embraced the president. Then he carefully shook Steve's hand.\n\n\"I had to let you know how much all of us in government appreciate your actions the other day when you saved all of those school kids and chaperones. I'm sorry to say that our track record against terrorists isn't very good. At least not until we factor in the situations you've been involved in. Then the stats improve dramatically. We have an appointment to keep, but I thank you Steve, as does your country.\"\n\nSteve was feeling stronger Sunday morning. Gwen wheeled him around the floor and he visited with other patients and took the time to thank the nurses for their kindnesses.\n\n\"Are you kidding?\" asked a middle-aged and somewhat plump nurse when Steve thanked her. \"My daughter has been driving me crazy asking me about you. It's the most we've talked in years. She's one of your biggest fans, except maybe for her mother.\"\n\nGwen suggested that she pose for a few pictures with Steve and soon all of the nurses were lined up to have a picture taken with Steve. The male nurses asked if Gwen could be in the photo and she quickly agreed.\n\nSenator Chatham, her husband and daughter, Grace, visited that morning. Steve was embarrassed by the praise heaped on him by his boss. He had never seen her so emotional. She kissed him on the lips before she left. Then her daughter did the same, while her husband grinned and offered his hand.\n\nRepresentative Daniels and his wife were the next ones to visit. \"I can't tell you how much we appreciate what you've done for our daughter. My wife and I both feel badly about some of the things we've said about you two. We can't change the past, but you can be certain that we'll be two of your biggest supporters in the future. If we can ever help you in any way, please let us know.\"\n\nFinally, Vice President Pearson and his wife entered the room with their daughter and her husband. \"I was never quite able to understand President Hanson's unusually high regard for you two until this dreadful situation. Now I'm able to see why he's been so high on you both all of these years. I've never seen a couple like you in all of my years in Washington. You've managed to capture the hearts of the American people by good deeds and speaking the truth. It's rare in this day and age. The country is far better for it. Thank you both for what you risked and for what you've suffered to help my granddaughter.\"\n\nGwen spent the afternoon with Steve before flying back to Stanford later in the day. She had missed several days of classes and had to return. Monday morning, Sybil and Janice walked into his room smiling.\n\n\"Gwen insisted that we keep an eye on you this week. Don't worry; we have some very good agents watching over her at Stanford. We're going to help you get around and watch your back while you're recovering,\" promised Sybil.\n\nThe next afternoon Steve was feeling much better, so Janice and Sybil were pushing him down the hall in a wheel chair when an incredibly beautiful blonde woman approached Steve with a huge smile on her face. She bent over to hug Steve before he could attempt to stand. Because he was still seated, the blonde's ample bosom was pushed into Steve's face as she held his head against her chest.\n\nSybil and Janice exchanged glances before Janice spoke. \"Lady, we're responsible for this guy's safety and it looks like he's suffocating. Could you back up and allow him to breathe?\"\n\nThe blonde pulled back slightly and grinned at Janice. \"He does not appear to be suffering. Leave the two of us alone for an hour and I will have him nursed back to health.\"\n\n\"That will not be happening,\" assured Sybil. \"We work for Gwen and I'm quite sure that she would not want us leaving Steve alone with you for even a minute. It looks like you have the equipment to nurse him, but we can't allow that. He's on strong antibiotics and isn't able to make difficult decisions on his own.\"\n\n\"I think he's already reached a hard decision,\" laughed the blonde. \"I keep telling Gwen he's always like that when he's around me, but she insists he's like that when he's around any woman. Tell me, is that true?\"\n\n\"Nadiya!\" groaned Steve. \"It's great to see you, but these ladies don't know your sense of humor. They might think you're serious.\"\n\n\"And you think I'm not?\" asked Nadiya as she ran her hand along Steve's cheek. \"I was so worried when I heard that you had been shot again. You have to be more careful. It breaks my heart when you are hurt in any way.\"\n\nSybil's phone chirped and she quickly answered it. \"Hello, Gwen. She's here right now. Do you want us to shoot her? Okay, I'll just give the phone to her.\"\n\nSybil handed her phone to Nadiya. \"Hello, Gwen. I was just making certain that Steve was recovering properly. They sent you a picture just now? I wasn't trying to smother him, except maybe in love. I'm so glad that he's doing well, but what were you thinking when you left these two lovely women with him? You trust them? But you don't trust me?\n\n\"I'm still seeing Hans. He's very understanding about Steve. I'm glad you like him. For some reason, he thinks you are absolutely gorgeous. He likes Steve, even though he's heard about our romance in New York. Maybe it was only for a day, but I still have the photos and the memories. I'll be in Washington for a few weeks, so maybe we can get together. Hans will be coming in tomorrow. I would hope we could all enjoy an evening out together. Okay, good bye.\"\n\nAs Nadiya handed Sybil her phone she told her, \"Gwen wants me to make passionate love to Steve to aid in his recovery and lift his spirits, so please excuse us. I'll take him from here.\" \n\nNadiya barely managed to reach for the handles of Steve's wheelchair before Janice pulled it back and away from the beautiful Ukrainian. \"We're in charge of his safety and well being. If it becomes necessary for him to,.. to seek release, we'll be in charge of that, too. Gwen was very specific in her instructions, right, Sybil?\" \n\n\"Yes, you're absolutely right, Janice. He has to gradually get into the swing of things. No big breasted, sexual dynamos will be allowed too close until Gwen gets back together with him.\"\n\n\"Wait,\" protested Janice. \"I'm sure that I heard Gwen say red headed, big breasted sexual dynamos would be okay.\"\n\n\"Ladies, in case you've forgotten, I'm sitting right here,\" chuckled Steve. \"I think I should have a say in what sort of dynamos I interact with. As tempting as the offers are, I'm under orders from my personal 'almost' physician to get plenty of rest and to avoid undue temptation tossed my way by beautiful blondes, red heads, or brunettes. In case you haven't noticed, that eliminates each of you.\"\n\n\"You have such a nice way of letting me down,\" smiled Nadiya as she leaned in and gave Steve a lingering kiss on the lips. \"I have to go, but we'll get together when Hans and Gwen are there to prevent any 'undue temptation' as you call it. Ladies, keep your hands off this man. He belongs to my very good friend. If anyone steals him away from her it will be me!\"\n\n\"There you are, Steve!\" boomed a familiar voice. Steve and the women with him turned to see Vincent and Cynthia Rosen.\n\n\"Nadiya! It's so good to see you,\" greeted Vince. \"This is my wife, Cynthia. Nadiya is the daughter of the new Ukrainian Deputy Prime Minister. She and Steve are good friends from years ago.\"\n\n\"Not that good, I'm afraid,\" joked Nadiya as she briefly hugged the Rosens. \"I blame Gwen that Steve and I are not much closer friends than we are.\"\n\n\"You and every other woman on the planet,\" laughed Cynthia Rosen. \"It's so good to see you getting around, Steve. We were worried about you when we heard what happened. We just wanted you to know that we care and we wish you the best.\"\n\n\"You don't have to look for reporters,\" stated Vince Rosen as he saw Steve scan the hallway. \"This is a private, unannounced visit. We're not here to campaign or draw attention to ourselves. We're learning from you and Gwen. We know that real friends don't take advantage of that friendship for personal gain. The two men at the end of the hall are Secret Service.\"",
        "\"It's always good to see you both, and I'm glad there aren't any reporters sneaking around here. You know Nadiya. I'd like to introduce Janice Prince and Sybil Burke. They've been assigned to watch out for me while I'm recuperating.\"\n\n\"We saw how well they helped you that day you stopped that woman from killing Senator Chatham's daughter,\" responded Cynthia Rosen. \"I've got to tell you that we've never been as proud of a friendship as we are with being friends with Gwen and you. Vince and I both want it to continue long after the election, regardless of the outcome. You make us want to be better, more understanding, helpful, and disciplined. You and Gwen have restored the country's faith that honor, integrity, and honesty can benefit individuals and businesses.\"\n\n\"Thanks, Cynthia, but I think you might be stretching things more than a little,\" replied Steve. \"I'll admit that Gwen is incredible. I marvel at her beauty, talent, and brains. She's the one that sets our course. I just try to keep up with her.\"\n\n\"That's the other thing that appeals so much to the nation,\" laughed Cynthia Rosen. \"Your modesty is so endearing! You don't posture, strut, or brag. You just do what you feel is best. It's been a long time since we've had public figures like you two, if ever.\"\n\n\"You're going to embarrass him,\" chuckled Vince Rosen as he watched Steve fidget under Cynthia's praise. \"We just wanted to be stop in and tell you that we wish you a speedy recovery and to thank you for your service to your country and to your community. You make us proud.\"\n\nNadiya kissed Steve again and left with the Rosens. Once they were out of sight, Janice finally spoke. \"You've had the sitting president, vice president, and all kinds of senators and members of congress visit you in the last week. Now what could well be the next president of the United States just stopped in! They all call you by your first name and treat you like a friend. Do you have any idea how amazing that is?\"\n\n\"Don't make too much out of it,\" answered Steve. \"We're still the same people we always were. It's nice to be friendly with important people, but being friends with people like both of you is the most satisfying feeling there is. We identify with folks that do their work and try to be good citizens. That's most of the people in the country. Gwen and I are just two of many.\"\n\n\"You really believe that, don't you?\" marveled Sybil. \"In the short time we've been with you guys, we've seen enough to know that you're no average couple! Everything you both do is better, harder, more dangerous, more everything than what everyone else does. I didn't believe the things I heard about you before we met, but now I realize that don't begin to do you justice.\"\n\nThe following morning, Steve was slowly walking in the hall with Janice when Sybil found them. \"It looks like our patient is doing better! Thanks for taking the night shift, Janice. Go catch some sleep. I'll keep my eye on the guy.\"\n\n\"I bet you will!\" laughed Janice. \"I'd love to stay but I need a shower and a good sleep. I'll be back this afternoon.\" \n\nJust after Janice left, an older, somewhat gruff nurse stopped Steve and Sybil as they slowly walked back from the cafeteria. \"There's some guy named King or something on the phone that wants to talk to you. I didn't quite get the whole name. It's on line three.\"\n\nConfused, Steve glanced at Sybil and then shrugged before picking up a phone from the nurse's station and hitting number three. Sybil stepped back to allow privacy, but she was too curious to go far enough to not hear the conversation.\n\n\"Hello?\" began Steve. \"Hey, Your Royal Highness! It's great to hear from you! Okay, I won't call you that. I'm feeling much better. Well, thank you, and thank The Duchess as well. She's very kind. Maybe we can get together for the holidays or something? Gwen would love that! Let's make it happen. Are you kidding? She'll make the arrangements. Gwen loves hanging with you guys and we love kids, so that's no problem. Okay, see you then, and thanks. Take care of your family.\"\n\nSteve returned the phone to its cradle and turned to rejoin a flabbergasted Sybil. \"Would I be correct in assuming that you just chatted with the Prince?\"\n\n\"He prefers 'William' to titles and formalities. If you manage to hang on to your job and don't piss off Gwen, you just might be our security if we're able to work out some vacation time with the Duke and Duchess,\" teased Steve.\n\nOn Friday, ten days after his showdown on a Pennsylvania highway, Sybil and Janice drove Steve back to Washington. He was discharged that morning with instructions about continuing antibiotics and keeping his rapidly healing wounds clean.\n\nSteve had insisted that since Sybil and Janice were already on site, there was no reason for anyone else to travel to Philly just to ride back to Washington with him. He managed to leave the hospital without any fanfare. Since the press did not know that he left the hospital, there were none waiting at his hotel when he arrived Friday afternoon. \n\nHe was tired from the trip and excused himself to go to his suite to take a short nap. It was almost five when he awoke. Feeling like he hadn't been clean in weeks, he took a shower. As he was drying, he decided to soak for a while in the large hot tub in his suite. He was once again nodding off when he heard voices.\n\n\"You're in the hot tub alone? You could drown or something. Gwen would never forgive me,\" laughed Naomi as she peeled her clothes off and stepped into the tub and sat down next to Steve. \"Don't you feel a lot safer now?\"\n\n\"Truthfully? I feel like I'm in great danger,\" replied Steve with a straight face.\n\n\"You're in danger of getting a big old erection,\" shot back Naomi as she kissed Steve's cheek. \"But that's okay. I always feel flattered when you do.\"\n\n\"Steve! I'm so glad you're back and healing up,\" greeted Kate from the doorway. \"I hope there's room for me in there with Naomi's big ass taking up so much space.\"\n\nSoon Kate was naked and sitting on the other side of Steve from Naomi. \"Janice and Sybil were out in the foyer with their eyes as big as saucers when I got here. I don't know if was because Naomi got naked and jumped in with you, or if they were spying on you before Naomi got here. Naomi and I left our security detail out in the foyer with them.\"\n\n\"We had to be sure that he was in safe hands,\" explained Janice from the doorway. \"This must be some of that sexual harassment we were warned about. We're keeping an eye on Steve and now it appears he's in a lot of danger. Maybe I should call Gwen and ask her about this.\"\n\n\"If you get her, put her on speaker,\" stated Naomi. \"I want to talk with her anyway.\"\n\n\"I'm serious,\" \"insisted Janice. \"I'm calling her right now if you don't leave. I'm supposed to watch out for her interests.\"\n\n\"Please do call her,\" chuckled Naomi. \"This should be interesting.\"\n\n\"Gwen?\" spoke Janice into her phone. \"He's okay, except your sister, Kate, and Naomi are both naked and in the hot tub with him. Now Naomi's sitting on his lap and pressing her breasts against him! Okay, I'll put you on speaker and put the phone on the edge of the tub.\"\n\nShowing an evil smile, Janice placed the phone near Steve's side and stepped back to watch the train wreck. \n\n\"Hello, Gwen. Steve's wounds are healing pretty well. I find if I rub my nipples over them, they heal even faster. No need to thank me. I'm glad to help,\" offered Naomi. \n\n\"She's right, Sis. I'm getting out of the tub and rubbing my nipples all over his back wound, and I think I'm getting a response. It's really quite impressive,\" deadpanned Kate.\n\n\"I'm sure you both are,\" laughed Gwen. \"Steve, are you in much pain? How's your heart rate? Is the 'massage' you're getting helping at all?\"\n\n\"I don't know about that. In a way it feels pretty good, but I'm getting light headed. Maybe I lost more blood than I realized,\" replied Steve in what he thought sounded like a concerned tone.\n\n\"I'm afraid it's simply traveled to a different head,\" suggested Gwen with a giggle. \"I think you all should know that I've authorized Janice and Sybil to shoot any of the usual suspects that may be trying to get too familiar with my guy.\"\n\n\"Sis! You've got to be kidding. Janice is sitting right here with her giant knockers resting in Steve's face! He's even...\"\n\n\"I am not!\" broke in Janice forcefully. \"I'm fully clothed and conducting myself in an appropriate manner.\"\n\n\"Really, Janice?\" questioned Kate. \"Don't you think it would be more appropriate if you were rubbing those big hooters all over Steve's face and helping him to forget his pain?\"\n\n\"Well, since you put it that way,\" grinned Janice.\n\n\"Leave your clothes on!\" ordered Gwen. \"I don't think Steve's healthy enough to have Kate, Naomi, and you topless and rubbing against him. His heart would probably stop from lack of blood.\"\n\n\"If my mother could hear this conversation, she'd be wishing she kept that sexual harassment clause in effect,\" observed Sybil from the far side of the room.\n\n\"Naomi, how does Steve's abdomen look?\" asked Gwen. \"Is the wound healing properly?\"\n\n\"To be honest, Steve hasn't allowed anyone so much as a peek at it. It's below the waterline, if you know what I mean,\" responded Naomi.\n\n\"Steve, please get a picture of the bullet wound in your abdomen and text it to me,\" insisted Gwen. \"I want to be sure it's healing.\"\n\n\"Gwen, can't you fly into D.C. for the weekend? You could give me a complete physical then,\" argued Steve, but with a big grin.\n\n\"Just send me a picture, you big baby,\" replied Gwen. \"I told you that I'm assisting at a surgery tomorrow afternoon and can't miss it. \n\n\"Naomi, just have him stand up and take the picture. I want to be sure he's healing okay,\" persisted Gwen.\n\n\"Okay. You heard her, Steve. Let me get my phone. Then you'll stand and I'll get a good close up,\" promised Naomi.\n\n\"I think I'd like Sybil to take the picture,\" announced Gwen suddenly. \"She's a professional and won't be drooling all over my guy like Naomi and Kate will.\"\n\n\"M..m..me?\" asked Sybil. \"I'm not very good with my phone. Maybe you should have Janice take it. She uses hers all of the time.\"\n\n\"Gwen said for you to take it,\" insisted Kate. \"You're getting paid to follow orders, so get over here and get some pictures.\"\n\n\"I don't know. The hot water might steam up the lens or something. How close do I have to get?\"\n\n\"He'll probably have a hard on after Kate and I rubbed him with our bountiful breasts, so just move it to the side with one hand and snap the picture with the other,\" instructed Naomi.\n\n\"You mean an erection? You expect me to push it to the side to take the picture? I've never done that before. Oh, okay, I'll do it,\" agreed Sybil as she moved close to the tub.\n\n\"Just get on your knees so you'll be eye level when Steve stands up,\" urged Kate. \"Hold the camera in one hand and have the other one ready to slide that big cock away from the wound, okay?\"\n\nSybil simply nodded as she carefully kneeled down and held her phone in one hand while she waited for Steve to stand. She held the position for half a minute before she turned to look at the other women. She gasped when she saw Janice had Kate's phone camera pointed at her. That's when the other women broke into gales of laughter.\n\nSybil blushed a bright red and quickly stood up. As she turned toward Janice, her pivot foot slipped on the wet tile and she went over backwards into the tub! Steve reached down and lifted her head and face out of the water. The other women now had tears running down their cheeks.\n\nSybil had managed to hold her phone above the water when she fell in. She continued to hold the phone high above the surface as she struggled to get out of the tub. By the time she was back standing on the floor, Naomi had wrapped a towel around her shoulders while Kate started running another towel through her wet hair.\n\n\"What just happened?\" demanded Gwen over the speaker.\"Did Steve actually stand up, or did Sybil get into the tub?\" \n\n\"We'll send you the video,\" promised Janice. \"Sybil fell for the whole thing, hook, line, and sinker, but when she finally realized we'd punked her, she tried to come after me. Her foot slipped out from under her and she fell into the tub with Steve. Now she's soaking wet and Naomi and Kate are drying her off. I'd post it on YouTube if Kate and Naomi weren't naked.\"\n\n\"Sybil? Are you upset with us?\" asked Gwen. \"It was all in good fun. I knew you'd love to see Steve naked, so I schemed with the other girls to get you into that position.\"\n\nSybil was blushing and smiling at the same time. \"I can take a joke. You really got me good with that one. I had no idea that you were setting me up. I guess I was trying to prepare myself for sliding that big unit over with one hand while I took the picture with the other. I never noticed that Janice was videoing the whole thing. I bet I looked like a complete fool!\"\n\n\"It wasn't too bad, at least not until you fell into the tub,\" laughed Janice. \"Wait until your mom sees this. Her top field agent trying to take close ups of her client's package! And she was worried that we'd be sexually harassed. That's so funny.\"\n\n\"You won't be showing that to my mom!\" stated Sybil firmly. \n\n\"The video is on Kate's phone. Mine is still by the tub so Gwen can hear us,\" pointed out Janice. \"If that video ever gets out, no one will be able to blame me.\"\n\n\"Okay, Ladies. That was fun, but I'm turning into a prune. How about some privacy so I can get dressed. Then we'll go downstairs for some dinner. I've lived on hospital food too long already,\" complained Steve. \n\nAshley and her security agent joined the rest of the group at dinner. \"Okay, what happened? You guys are like a bunch of teenage girls. Why all of the giggles?\"\n\nMuch to Sybil's dismay, Kate pulled the video up on her phone and passed it to Ashley. Even without being able to see the video, Janice, Kate, and Naomi once again broke into laughter as they listened to the recording.\n\n\"I thought Kate had taken it too far and Sybil would know something was up when she told Sybil to 'slide that big cock away from the wound'. But Sybil just nodded, held the phone in her left hand, and waited,\" laughed Janice.\n\nAshley and the other security women were laughing hysterically as they replayed the video several times.\n\n\"Now we discover that our 'Ice Queen' boss was on her knees waiting to slide Steve's cock to the side to take a picture!\" laughed the woman assigned to Ashley. \"Mallory is always stressing appropriate, professional behavior. Now we have a video of Sybil kneeling and waiting for a hard cock!\"\n\n\"In my defense, that sounds a lot worse than the reality was,\" insisted Sybil. \"I was just following orders.\"\n\n\"Was that the first time you've ever been on your knees in front of a man?\" asked Janice as laughter once again rang out.\n\n\"I'm not even going to respond to that catty remark,\" replied Sybil. \"I will say, however, that I'm supposed to be sure that Steve is safe and his health is improving. I will certainly do whatever is required to achieve that objective.\"\n\n\"Did she just say she'd blow Steve if he wanted her to?\" asked Kate as even more laughter erupted around the table.\n\n\"I never realized that women are even raunchier than sailors when a bunch of them get together,\" observed Steve. \"You should stop giving Sybil such a hard time.\"\n\n\"There's that word again!\" laughed Naomi. \"Is it okay if Steve gives you a 'hard time', Sybil?\"\n\n\"She wishes!\" added Janice as she wiped the tears of laughter from her eyes. \n\n\"Ladies, let's find another subject to discuss. It seems like no matter that anyone says, you make it into a sexual inference. Let's talk about weather or politics,\" suggested Steve.\n\n\"I can do that,\" acknowledged Ashley. \"Gwen is miles ahead in all of the polls. She should get re-elected in a landslide.\"\n\n\"I thought she just got elected last year and all representatives serve two year terms. Can you tell me why she has to run again this year?\" asked Sybil, grateful that the topic of conversation had been changed.\n\n\"True, but Gwen won a special election because the Congresswoman Blake resigned to start campaigning for the senate. All members of Congress are up for election every even numbered year, for two year terms. Every four years is a presidential election, like this year.\n\n\"Gwen is on the ballot this time around, so we don't have to depend on write-ins. She refuses to campaign, or even spend any money on getting re-elected, but she's been doing so many things and getting so much good press that she's managed to gain a huge lead on the two major party candidates,\" concluded Ashley. \n\nSteve had been told to rest and recuperate the rest of the month. He quickly regained his strength. He flew to Sanford and spent a couple of weeks with Gwen. Nadiya and Hans joined them for a weekend and they toured San Francisco.\n\nSteve was surprised at how grueling Gwen's schedule was and how little free time she was able to find to spend with him. It increased his appreciation of her discipline and tenacity in her desire to become a doctor.\n\nSteve was scheduled to return to Washington and Senator Chatham's office on the first Monday in October. Stephanie called him on the Wednesday before he left California. She was working on publicity for the movies that Lady in Red would be releasing soon. \n\n\"Steve, I have you, Naomi, Pete, and Becky scheduled for the night show on NBS Friday night. Pete is a total novice, but Becky, Naomi, and you are pretty savvy with PR. I held out until they promised that you four would be on the entire show, with no other guests. I have you booked on a commercial flight tomorrow afternoon. The Red Lady is in Washington with Lisa and Jason. Maybe we need to buy a second aircraft?\n\n\"Tell Gwen that I'm sorry to pull you away from her warm bed and hot body, but business calls. I'll email you the details for your flight. In case you haven't figured it out, you guys will be promoting 'Singlehandedly' which will be opening the following weekend. It turned out quite well. Of course Naomi and you put a lot of sizzle in that love scene. You can expect to be asked about that.\"\n\nThe next afternoon saw Steve in uniform and sitting in first class with a stewardess fawning over him when a woman wearing Marine fatigues approached him from the coach area. Steve looked up at her from his seat and noticed that another Marine was with her, and he was taking video.\n\n\"Lieutenant, the Marine Corps Ball will be on December 10th and I'm asking if you would be my escort? I realize you have a beautiful girlfriend, but I just had to ask.\"\n\nSteve smiled as he looked at the nervous woman. \"Is the Marine that's recording your request your boyfriend or husband?\" asked Steve. \"I certainly don't want to have a jealous Marine after me.\"\n\n\"He's my brother. We're both going home on leave. We've been overseas and haven't been home in almost a year,\" replied the woman as she watched Steve's face for his reaction.\n\n\"Is he going to the Ball?\" quizzed Steve. \n\n\"Kyle? He doesn't have a date, and no real prospects,\" answered the woman.\n\n\"Then I'll tell you what. If you can talk your brother into escorting my girlfriend to the affair, you and I will have a date,\" replied Steve. \"Do you think you can convince him?\"\n\n\"Are you kidding?\" laughed the woman. \"I don't have to ask him. The other guys in his unit would kick his ass if he turned that offer down. Gwen Anderson won't mind going with a black man?\"\n\n\"Wrong question,\" responded Steve immediately. \"Your brother is a United States Marine. You're not suggesting that women are not safe around Marines, are you? Gwen and I would be delighted to attend the Ball with two Marines, not white Marines or black Marines, but Marines.\n\n\"I'll give you my contact information. We'll make plans next week. I want to thank you for thinking of me, and thank your brother for agreeing to escort Gwen. We'll both be proud to be seen with Marines,\" stated Steve with a big smile. \"What is your name, by the way?\"",
        "\"I'm Denise Williams and this is my brother Kyle. I'm going to be the most popular woman there! Promise you'll only dance with me and my friends?\"\n\n\"I will be your escort and treat you like a lady, but I won't be making any rash promises. I don't know who your friends are, and you may have some superior officers that want a dance. Would you refuse to allow me to dance with them?\" responded Steve.\n\n\"I hadn't even thought of that! You know more about this stuff than I do. I'll be happy just to be seen on your arm when we walk into the ballroom. Anything after that will be icing on the cake,\" gushed the young Marine. \n\nLater that evening, Gwen called Steve to chat with him. \"Charlotte showed me a Youtube clip today. It seems that you found me a date for the Marine Corps Ball. I have to fight off guys trying to get into my little thong every day and you go and set me up with a Marine that's been overseas for a year? I love it! We'll have a lot of fun and show the military that we really appreciate what they do for us.\"\n\n\"I didn't think you'd mind. I should have asked you first, but the sister totally surprised me when she asked. I didn't want to go without you, so I somehow managed to find a guy willing to go the dance with you,\" teased Steve.\n\n\"Yeah, I know how difficult that can be,\" agreed Gwen with a chuckle. \"I'll be watching you guys on TV tomorrow night. Stephanie told me that Becky's movie turned out pretty good. She thinks it'll do quite well.\"\n\nThe next evening was a huge success for the foursome promoting their movie. Steve convinced Naomi to sing with him. They performed 'Unforgettable' live. They enjoyed an easy chemistry and the performance was surprisingly good. Then Steve and Becky sang the old Sinatra tune 'Something Stupid'. Once again, the audience was surprised at how well they did. Steve chose that song so Becky wouldn't feel alone or have to carry much of the load and she loved it.\n\nPete begged off on any singing, stating that he couldn't carry a tune to save his life. He did do well in the interview part, especially when he recounted how he and Becky met. He cleaned up the language considerably, but the story remained interesting to the audience.\n\nSteve answered a few general questions about the recent kidnapping of the high school girls, but refused to discuss the actual shootings. The host quickly took the hint and switched the discussion to the Marine Corps Ball dates that Steve made with the siblings on the recent flight. The four left the taping confident that they had done a good job promoting the movie.\n\nThe following weekend, Lady in Red held the premiere of 'Singlehandedly' in Los Angeles on Friday evening so Gwen was able to attend more easily than if it had been on the East coast. She and Charlotte flew in from Stanford as soon as their lectures were concluded. The following evening, they were in New York City for another premiere. \n\nBy the time the dust settled Sunday night, the movie had grossed just over a hundred million dollars and was considered a huge success. Becky and Pete received great reviews for their acting. Lady in Red Productions increased production of Becky and Pete action figures as a direct result of the movie's popularity.\n\nThe smoldering love scene between Naomi and Steve drew a great deal of attention. Whenever they were interviewed, they were frequently asked if there was any kind of romance going on between them.\n\nSteve gave pretty much the same answer every time. \"Naomi and I are very good friends, but we'll never be lovers. We respect Jared and Gwen far too much to ever even consider anything like that. We don't cheat on loved ones and we never will. We're sorry to disappoint you, but Gwen is the only woman I'm romantically interested in, and I'm so in love with her, it hurts.\" \n\nThe movie continued to draw large crowds through October. Lady in Red planned on releasing Jordan and Charlie's movie at Thanksgiving and Gwen and Steve's at Christmas.\n\nThe weekend before the elections on November 8th, Lady in Red went on the road to perform in Los Angeles and Orlando. Vince Rosen's campaign had reserved two hours of broadcast time for each night. Friday's concert in LA was being broadcast on CBC while NBS would carry the Saturday evening concert in Orlando. \n\nThe broadcasts would feature music most of the time, but with banners crawling across the bottom of the screen urging voters to consider Vince Rosen's candidacy. The candidate himself would speak for a minute every twenty minutes. His appearances would be live, not some taped speech. It was hoped that a large viewing audience would turn to watch Lady in Red and would consider Vince Rosen's request for support. The campaign was very close with Rosen leading by three percentage points. That was within the margin of error in every poll.\n\nAs the day approached, Charlie called Steve to give him the bad news. \"The doctor doesn't want Jordan to travel. She's having some problems carrying the baby and he feels bed rest is the best thing for her. I don't feel that I can leave her alone at this time, so it looks like we'll both be missing in action for the weekend concerts. I'm truly sorry about it.\"\n\n\"Don't give it a thought,\" assured Steve. \"The health of your baby and your wife is the most important thing in the world right now. I'd be disappointed if you didn't follow the doctor's advice, or if you left her alone to appear in the concert. You've been given a wonderful gift and you need to take care of your family. We'll miss you big time, but we'll manage. Vince will understand, so don't worry about it. Just take care of Jordan.\"\n\nSteve and Gwen managed to find a couple of excellent studio musicians to fill in for Charlie. They also decided to feature Jodie Lane and her saxophone more. She was a real talent and the audience always responded well to her performance.\n\nGwen and Steve took the stage at the Hollywood Bowl a few minutes before eight to a thunderous reception. The Rosen campaign had given the seventeen thousand tickets to Rosen supporters to make certain that there would be no embarrassing incidents, protests, or signs and placards for the opposition. Gwen enjoyed the smaller venue. The crowd was very enthusiastic and she and Steve brought their best effort.\n\nThey did all of their hits, but concentrated on ballads and love songs, as requested by the campaign committee. Steve mostly played the piano while the hired musicians did a very good job handling the other instruments. \n\nSteve and Gwen gave Jodie Lane the freedom to play her sax whenever she felt it would add to the quality of the performance and she displayed an excellent understanding of her craft. Several times during the broadcast, Gwen would stand next to Jodie and sing as Jodie delighted the crowd with her sax skills.\n\nSteve and Gwen added two songs by Springsteen in their repertoire for the evening. Gwen altered the lyrics slightly for 'I'm on Fire'. She had the males in the audience groaning as she sensually delivered the lyrics as Jodie accompanied her on the sax. Right after that, Steve performed 'Dancing in the Dark' with Jodie assisting again. The crowd loudly cheered its approval once again. \n\nOnce the two hour show was over, Vince and Cynthia Rosen rushed up to thank Gwen and Steve. \"All the reports we're getting are telling us that we had a huge TV audience! My advisors are delighted with the preliminary results. We don't know how many people left to get a beer or potato chips during my little speeches, but there had to be some viewers that stayed to watch and listen to me.\"\n\nSaturday evening was pretty much a repeat of Friday and Gwen and Steve performed at the Amway Center in Orlando to twenty thousand loyal supporters of Vince Rosen's candidacy. They had become very comfortable performing with an outstanding saxophone player backing them. When the ratings were in the next day, Saturday evening had even more TV viewers than Friday. The last poll before the election was released Monday and showed Vincent Rosen with a six percent lead on his rival.\n\nOn Election Day, Gwen was declared the winner in her district as soon as the polls closed. The networks felt that their exit polls pointed to a landslide victory. The Red Lady had reserved the large ballroom at their hotel for the victory party. Gwen and Steve mingled and greeted people all afternoon and evening. They were extremely pleased to see a large number of citizens from their congressional district made the journey and they made sure to welcome them warmly.\n\nEveryone in the ballroom kept an eye on the several large TV monitors to follow the presidential race. It was almost midnight when the first network projected Vince Rosen as the next president of the United States. More than a few people in the ballroom cheered and clapped at the news. \n\nShortly after that, every major network and news outlet declared Rosen the winner. His victory speech was brief and humble. He thanked his supporters, his family, and his staff. He congratulated his opponent on an excellent campaign and promised to uphold the constitution and serve all of the people of the country. \n\nAt twenty minutes to one, as Steve and Gwen were bidding goodbye to everyone that had come to celebrate Gwen's re-election, the next president of the United States and his wife entered the ballroom. Applause rang out as the Rosens smiled to the crowd as they approached Steve and Gwen.\n\nVincent Rosen hugged Gwen while his wife wrapped her arms around Steve and kissed his cheek. Then Vince shook Steve's hand while Cynthia and Gwen embraced each other briefly. \n\n\"We wanted to congratulate Gwen on her resounding victory and to thank you for your support in a long and difficult campaign,\" stated Vincent Rosen to Steve and Gwen in the now quiet room. \"Many of my aides have suggested that I may not have been elected without your support. We think they could be right. Consider this an invitation to be with my family at the inauguration in January. Thank you both.\" \n\n\"You had sound ideas and presented them well. That's why you won,\" insisted Gwen. \"You and Cynthia must be exhausted from months of campaigning. Steve and I are going to take a short island vacation just before Christmas, when my classes are done for the year. The Duke and Duchess and a few other friends will be there. Would you like to join us?\"\n\n\"It would be nice to have a few days off and soak up some sun,\" admitted Cynthia Rosen. \"I hope you'll bring Billy along so I can push him into a pool or something. Let us know the dates and what island and we'll do our best to be there. Vince really should get to know the Royals a little better anyway. Thanks for asking us. You both have been wonderful to us, even after Steve and Vince started out on the wrong foot.\"\n\n\"It didn't take Steve long to show me the error of my ways,\" laughed Vince Rosen. \"I have to admit I was pretty pissed for a couple of weeks, especially when President Hanson dismissed my complaint so easily. I've tried to be more polite, but direct since then and it seems to have paid off.\"\n\nAs the two couples engaged in conversation, different reporters recorded the scene for later broadcasts. Although they could not hear the conversation, it was evident that Steve and Gwen were on very good terms with the next president of the United States. Photos of the four made every newspaper and internet news outlet across the nation.\n\nThe next morning, Steve was once again in Senator Chatham's office listening politely as she spoke of her concerns. \"I honestly don't know how this situation will play out. You're my aide, but you're also known to be on rather friendly terms with the next president. You and President Hanson seemed to get along very well, but when Rosen assumes office, you'll be on a first name basis with your commander-in-chief. I was never in the military, but I know human nature. Many of your superiors are going to resent that although they outrank you, they won't dare piss you off in any way.\"\n\n\"I've been thinking about the same thing,\" admitted Steve. \"I'm pretty much convinced that my time in the military is nearing an end. I have no desire to put my superiors in an untenable situation, or cause Vince any embarrassment. I've been checking my options. It's looking more and more like I'll leave the service by the end of July. That'll be my eight year mark. Please don't pass this on yet. I'm not certain, and I don't want to make the last few months of service a media circus.\"\n\n\"You know I won't tell anyone without your approval,\" responded Chatham. \"Are you going to concentrate on your music and movie career?\"\n\n\"My friend Jared and I have been receiving some feelers from an NFL team, so we may try playing there. I'm going to be pretty rusty and slow, so I may not make the team, but I'll always wonder about it if I don't try,\" answered Steve.\n\n\"Please tell me it's the Titans,\" blurted Senator Chatham. \"The two of you could get us back in the play-offs!\"\n\n\"Thanks for the vote of confidence, but we were both drafted by the 'Skins', so unless some sort of deal is made, or we're cut by Washington, this is where we'd play if we made the team.\"\n\n\"Are you kidding? I could probably play as well as some of the guys on that team,\" laughed Senator Chatham. \"You'll be playing on Sundays next fall if that's what you want. I've never seen anyone able to achieve goals the way you do. Your discipline and determination are amazing. I'll be at the games, cheering you on, except when you play Tennessee, of course.\"\n\nThe conversation was interrupted when Naomi was shown into Chatham's office. \"I'm sorry to bother you with personal things, Senator, but I wanted to tell Steve that I'll be going to the Marine Corps Ball, too. A good looking Marine asked me last night at Gwen's party. I told him that I'd have to speak with my boyfriend first.\n\n\"Jared just emailed me that's he's fine with it as long as I don't get too far from you. For some reason, he thinks I'm safe around you and you'll stop those good looking Marines from taking advantage of us little girls,\" chuckled Naomi. \"Of course, he hasn't seen the video yet of me naked on your lap when we played that trick on Sybil.\"\n\n\"I'm not even going to ask,\" laughed Senator Chatham. \"I just wish I had been fortunate to have good friends that I could trust so completely. I admire how well you all get along and enjoy each other. I know you'll have a good time at the Marine Corps Ball.\"\n\nValhalla was completed two weeks before Thanksgiving, so the extended family had an early afternoon dinner in the new hall. The dining room was huge, as was the commercial kitchen with every possible upgrade. It featured a walk-in freezer and walk-in cooler. There were several large commercial refrigerators and four big double ovens and a twenty foot length of stove top.\n\nThe women in the family refused to have the meal catered, even with the substantial number of people that had been invited. \"This is really great!\" exclaimed Lisa as she and the others prepared the meal. We all have room to work as well as ovens and stoves to use. I'm glad that we're the first to utilize this amazing kitchen. Our Valhalla is fit for a king and queen!\"\n\n\"And they'll probably be visiting us here before too long,\" added Paula. \"I never dreamed that my family would vacation with the Duke and Duchess, but in a few short weeks that's exactly what we'll be doing.\"\n\n\"I think maybe the real king and queen of Valhalla are already in the building,\" ventured Charlotte. \"Billy mentioned a few times that Gwen is much like the queen in those wonderful movies we made. Steve is obviously the warrior, and together they've created their empire. We've all helped in various ways, especially Jordan and Charlie, but the driving force for Lady in Red, in my opinion, is a certain couple that started it all at a benefit dance.\"\n\n\"Charlotte, you're a great friend, but all of us have contributed to this company's success. You embarrass me with that comparison,\" revealed Gwen.\n\n\"Sis, I really was referring to you and Steve,\" admitted Lisa. \"We've all done some pretty cool stuff, but Steve is 'the man', and you are 'the woman' in this company. We're not jealous about it or anything. You guys have carried us along and allowed all of us to grow and learn. Now we're all pretty accomplished, but you and Steve are the straws the stir the drink.\"\n\n\"I agree,\" stated Jordan as she waddled through the entrance. \"Charlie and I discuss it all of the time. You're the reason we met, the reason, I'm sober, married, and close to giving birth to a beautiful little girl.\"\n\n\"Didn't we tell you to rest?\" demanded Gwen as she moved next to Jordan to take her arm. \"We can handle this. At least sit down and just watch. You can join in the conversation, but absolutely no work for you today.\"\n\n\"I just hope I get through the premiere tonight without my water breaking,\" laughed Jordan. \"I really appreciate that our new movie is opening here in Sparta so I can be at the premiere.\"\n\n\"We wouldn't have it any other way,\" insisted Stephanie. \"You did a super job in that movie. It made me cry, laugh, and get horny at different times. I love the title that we finally decided on.\"\n\n\"I agree. 'Jurisprudence' is a pretty cool word and it's a pretty cool movie,\" pointed out Kate. \"I think it'll be a blockbuster.\"\n\n\"Thanks, Kate,\" replied Jordan. \"And thanks for suggesting the title. Law school is paying off already!\"\n\nWith friends and family, thirty-four people were gathered around the three large tables when Ted gave the toast. He recounted the accomplishments of his family since the last Thanksgiving. He gave thanks that Steve had recovered completely from the wounds he received foiling the kidnapping. Then he mentioned how much joy little Theresa had brought to the family and how much everyone looked forward to loving and spoiling Jordan and Charlie's new baby. More than a few tears were shed during Ted's lengthy toast. \n\nThe meal was a great success and the conversation flowed as friends and family recounted their experiences and memories from years past and their hopes for the future. After a few hours to digest the meal, everyone prepared for the premiere of 'Jurisprudence', which was slated for six PM.\n\nSteve and Gwen drew an enthusiastic round of applause as they stepped out of their limo and waved to their Spartan friends and neighbors. They nodded and spoke to quite a few of the locals as they walked the red carpet. It endeared everyone in the town to the couple. The movies made in Sparta provided good jobs for many residents, but to be mentioned by name by major movie stars was huge to the hometown folks. \n\nLast to walk the carpet were Charlie and Jordan. Everyone watched as Charlie carefully helped Jordan out of the car and up the red carpet. Once Jordan had gathered herself and began smiling and waving, the crowd opened up a thunderous applause. Jordan looked beautiful as she carried the glow of an expectant mom. \n\nOnce again, Lady in Red Productions had a huge hit on its hands. The reviews were excellent and talk soon started about possible Academy Award nominations. Over the long weekend, the movie grossed over two hundred million dollars in the US and around the world!\n\nThe Sunday morning after the opening, Jordan gave birth to a seven pound healthy baby girl in the very hospital for which Jordan had worked so hard to raise funds. It was later in the afternoon when Gwen and Steve were shown into Jordan's room to see the baby.\n\nGwen made all of the appropriate noises as she held the newborn in her arms and smiled from ear to ear.\n\n\"Unless, I miss my guess, Gwen's going to want a few of her own before too long,\" suggested Charlie. \"You'd better get your sleep in now, because everyone says that once you have kids, you never get enough rest.\"\n\n\"When you guys need some rest, or alone time away from this precious little girl, just let us know,\" responded Gwen. \"We'll take little Ruth Cindy anytime!\" ",
        "\"I'm still getting used to hearing her name,\" grinned a tired looking Jordan. \"Charlie's mother was so happy when we named her after her mother. Of course my mom was quite pleased, as you know. You saw her cry when we told her what we were going to name the baby.\"\n\nGwen turned to Steve and carefully handed the baby to him. Steve wasted no time making faces and strange noises to the little girl.\n\n\"We were thinking of teaching her English first,\" laughed Jordan. \"Then Uncle Steve can give her lessons in all of those other languages he speaks.\"\n\n\"Uncle Steve? I like that a lot. I'm Ruth's uncle!\" exclaimed Steve softly. \"She's going to be as beautiful as her mother and we're going to spoil her rotten.\"\n\nGwen and Charlotte returned to Stanford that evening while Steve, Naomi, Ashley, and Kate traveled back to Washington, along with numerous security people. It was a relatively quiet time as everyone prepared for the looming holidays. Lady in Red had leased several large homes on the beach on Grand Cayman Island for December, several days before Christmas. The Duke and Duchess and their children were scheduled to be on the island at the same time.\n\nOn the ninth of December, Time Magazine announced that Steve and Gwen were selected 'Person of the Year'. Their faces were featured on the cover with the caption 'Heroism'. The magazine explained how the decision was reached and recounted all of the achievements the couple had managed over the course of the year. Steve and Gwen were actually surprised when they read the list of accomplishments.\n\n'This makes us sound like heroes,\" worried Gwen. \"I don't know why they included me. You're the real hero.\" \n\nIt appears that the editors felt that a woman that would jump into the icy Potomac to rescue a jerk, fight a smear campaign in congress, defeat a Chechen terrorist in hand to hand combat and then operate on the son of the Russian president with a steak knife and a straw, build an entire hospital for the poor of Kiev, perform on air craft...\"\n\n\"Okay! I read the article! I still think that you're the real hero and I just follow your lead. Saving those girls on that bus was enough without all of the other things you managed in Russia, Washington, North Korea, and all over the world. Time Magazine got it right when they picked you. I'm sure of that much.\" \n\nThe next day, Gwen, Naomi, and Steve took a limo south to National Harbor, Maryland. They had agreed to meet their dates at a local hotel, where they had taken rooms for the night. \n\n\"I'm going to be waiting for you to come in tonight,\" promised Steve as he dressed for the affair. \"You'd better not be late.\"\n\n\"First you set me up with a date, and now you're warning me to get in early? That doesn't sound very romantic,\" stated Gwen. \"Can you offer me any incentive to be back early?\"\n\nSteve pulled Gwen into his arms and kissed her passionately. \"I hope that gives you an idea of the so-called incentive I will have for you tonight.\"\n\n\"In that case, I'll be back before the dancing begins,\" laughed Gwen.\n\nSteve accompanied both Naomi and Gwen to the hotel lobby. They were both absolutely stunning. Naomi was in dress uniform while Gwen wore a long red gown that showed a hint of her ample cleavage, but was modest compared to styles she often wore. She knew that the ladies were expected to show class and decorum at a military ball. \n\nKyle was standing and waiting for Gwen to appear. He seemed nervous when Steve led Gwen up to him for the introductions. Once the introductions were finished and Gwen took the Marine's arm, Steve looked the young man in the eye.\n\n\"I don't trust Gwen with just any man. I know you'll look after her and keep her from any harm. I also know that you expect me to treat your sister the same way. This should be a fun night, but just remember that Gwen means the world to me and I'll be very upset if she has any problems.\"\n\n\"Can you imagine how he'll be when some young man stops in to take our daughter out in twenty years?\" laughed Gwen. \"He's worse than my father.\n\n\"Don't worry about us, Lieutenant Hammer,\" continued Gwen. \"We won't be too far away from you this evening. Besides, I can tell that Kyle is a perfect gentleman.\" \n\nSteve smiled and then escorted Naomi to a tall Marine with a huge smile. Naomi introduced the two men and Steve gave a similar talk to that Marine. \"Dad and Jared would be proud of you,\" chuckled Naomi. \"Luke will be a perfect gentleman, I'm sure. He's a Marine and that's how they are, especially after you give them that speech.\"\n\nThe introductions as they entered the ballroom were revealing. When Congresswoman Gwen Anderson and Private Kyle Williams were introduced, everyone in attendance applauded loudly. Steve felt a swell of pride as he watched how regally Gwen walked into the room and how much she was loved and respected by those in attendance.\n\nHe was somewhat surprised when he and Denise received a very warm welcome when they were introduced. He enjoyed the reception they received and Denise positively beamed. Naomi and her date did not go unnoticed either. Naomi's smile was a mile wide as she entered on the arm of her escort.\n\nThere was a reality show star at the affair and Steve actually felt sorry for her. She had a dress so low in front that over half of each substantial breast was exposed. Her dress was backless and it only came to mid thigh. Steve knew that many of the men enjoyed looking at her, but she apparently had no idea how improper her attire was. \n\nSteve was not overly surprised when the actress wound up sitting at his table, along with Gwen and Naomi and their escorts. He struggled to not show his irritation when the woman somehow wound up sitting next to him. She frequently leaned toward Steve to speak to him and when she did, he had a complete view of her large breasts.\n\nSteve saw smirks on both Naomi and Gwen's faces as he studiously ignored any further glimpses of the woman's ample bosom. He turned to Denise and chatted with her and the other occupants of the table. When the music started, the big boobed actress wanted Steve to dance with her, but Steve politely explained that he was escorting Denise to the affair and would certainly dance with her first.\n\n\"Thanks for coming with me and for giving me the first dance,\" began Denise. \"I know she's beautiful and her breasts are huge so it must have been difficult to turn her down.\"\n\n\"Honestly, I would much rather have you in my arms than some silicone wannabe,\" replied Steve. \"You're a lovely woman and you're real. You're serving your country as a Marine. I find you much more interesting.\"\n\nSteve danced the first several dances with Denise. She had a continuous smile plastered on her face. Her brother was just as bad as Gwen remained with Denise's brother for the same dances. \n\nThere were some stifled chuckles when a big, burly Marine Captain asked Gwen for the next dance. \"I'd like the next dance, I'm Captain Sloan. You really should be escorted by an officer.\"\n\n\"My date needs to give his approval before I'll dance with someone else,\" responded Gwen with a forced smile. Reluctantly, the officer turned to Kyle. Rather than make a simple request, the Captain demonstrated his complete lack of class.\n\n\"I'll have the next dance with your sexy date. You don't mind, do you, Private?\" demanded the man as he stared down at the young Marine.\n\n\"Don't bother responding, Kyle.\" insisted Gwen quite suddenly. \"I really don't care to dance with you, Captain.\"\n\n\"What? You'll dance with this black kid, but not with me?\" asked the stunned and thoroughly embarrassed man. \"You're nothing but a big titted...\"\n\nSteve had watched the interaction from quite close since he and Denise had been waiting for the music to begin for the next dance. Steve hurried over to Gwen and as he offered his arm, he 'accidently' bumped Captain Sloan. The accidental bump was so forceful that it staggered the partially inebriated Sloan. \n\n\"Kyle, would you mind if I...\" was all Steve could manage to say before the very irate Captain Sloan came charging back at Steve with a fist pulled back.\n\n\"Captain!\" barked an authoritative voice from behind Steve. \"You will turn around and return to your seat immediately.\"\n\nSloan hesitated briefly, but his instinct for survival won out over his embarrassment and anger. His face flushed red as he gave a quick \"Yes, Sir!\" and turned on his heel to return to his seat. \n\n\"Congresswoman Anderson, Lieutenant Hammer, I apologize for that unfortunate turn of events,\" spoke a tall, ramrod straight Marine. \"I'm Colonel Hood. Believe me when I tell you that boorish behavior like Captain Sloan just demonstrated is not tolerated in the Marine Corps. Rest assured that he will receive a reprimand and a possible demotion.\"\n\n\"Will Kyle get into any trouble over this?\" asked a concerned Gwen. \"He's a private, and an officer with an agenda can make things very difficult for him.\"\n\n\"Again, I assure you that Private Williams will not suffer from any recriminations. Unless you'd consider the envy of every other Marine at this affair a form of suffering,\" continued Colonel Hood smoothly.\n\n\"Private Williams, may I have the next dance with your date,\" asked a smiling Colonel Hood.\n\n\"Yes sir!\" responded Kyle immediately. \"And thank you, Sir!\"\n\n\"Congresswoman Anderson, would you grant me the honor of the next dance?\"\n\n\"Why Colonel Hood, I thought you'd never ask! I'd be delighted,\" smiled Gwen before turning to Steve. \"Lieutenant Hammer, thank you for your defense of my honor. I promise to save a dance for you.\" \n\nThe festivities were nearing the end when Colonel Hood approached Steve and Gwen at their table. \"I have been tasked to make the request that you dance to 'Lady in Red' before we end the evening. This request comes from General Maxwell's wife, as if that might influence your response.\"\n\nGwen glanced at Steve and then nodded to the Colonel. \"We are here as guests and certainly appreciate your hospitality and tradition. We'd be honored to perform that dance.\"\n\n\"There's one other thing,\" added Colonel Hood carefully. \"Mrs. Maxwell would really like to hear Lieutenant Hammer sing it as he dances with you. She saw it on that damn YouTube once and has been hoping to witness it in person ever since.\"\n\nGwen simply laughed and nodded again as she led Steve to the excellent band that had been supplying the music for the event. Soon Steve was fitted with a microphone. He spoke with the musicians for a short while before leading Gwen onto the floor.\n\nColonel Hood stepped to the stage and introduced Steve and Gwen and told those attending that they had agreed to perform 'Lady in Red' for those in attendance. The music began and Steve swept Gwen into his arms and began singing. No one else was dancing as Steve guided Gwen gracefully across the floor.\n\nThere was a long and loud ovation at the finish. Gwen and Steve bowed several times before Steve led Gwen to General Maxwell's table. Gwen smiled and hugged Mrs. Maxwell and thanked her for making the request. Steve could easily see that the general's wife was very pleased with the performance and the opportunity to speak with Gwen. Steve knew that would please General Maxwell, and a happy general is much easier on the enlisted men.\n\nGwen, Steve, and Naomi returned to their hotel within a few minutes of each other. They sat in Naomi's room for half an hour discussing the evening's events before Gwen and Steve retired to their room. \n\nChristmas time was fast approaching. Everyone but Gwen and Charlotte were already in Sparta a full week before the holiday. The two med students were due in the next day. Most of those present would meet them at the airport, board the Red Lady, and head for Grand Cayman Island and a vacation with the Duke and Duchess. Christmas was on a Saturday and Gwen, Jordan, Charlie, and Steve were once again doing a TV special on Christmas Eve from Sparta. They would return to Sparta Wednesday evening and spend Thursday and Friday preparing for the live telecast Christmas Eve. It was indicative of how relaxed and confident they had become to allow so little time for rehearsals.\n\nPaula and Lisa had arranged to have a large dinner party with friends and family before the trip to Grand Cayman Island. Once again, it was a large and boisterous group. The conversation was lively and the laughter frequent. Once the dessert was served, and everyone was seated, Steve turned to Gwen's father. \n\n\"Sir?\" began Steve in a very serious voice. Conversation suddenly stopped and the room became extremely quiet. \n\nSurprised at the silence, Steve flushed slightly but continued as Ted waited for him to speak. \"Sir,\" repeated Steve. \"I'd like to have your permission to ask Gwen to marry me.\" \n\nPaula raised her hand to her mouth as tears began trickling down her cheeks. Ted remained quiet as he nodded his head slowly in understanding. Everyone else was spell bound as they awaited Ted's response.\n\n\"Son, Gwen's mother and I have discussed this possibility quite a few times over the years. It's my great pleasure to tell you that nothing would please us more. We already feel that you're part of our family. This will simply cement that fact. Welcome to our family, although Gwen will make that final determination,\" added Ted with a huge smile as he held his hand out to Steve.\n\nThe room erupted in applause and whistles as everyone tried to speak at once. Paula stood and hurried over to Steve who rose from his chair to meet her. She threw her arms around him and hugged him tightly as she cried into his chest.\n\n\"Like Gwen will refuse that request!\" stated Kate loud enough for everyone to hear. \"It looks like we'll be planning another wedding. How do two superstars get married anyway?\"\n\nSteve still held a crying Paula in his arms as he spoke to the group. \"I'm asking that no one tell Gwen about this. I'm going to ask the director of our TV special to give me a minute at the beginning of the show to ask Gwen to marry me. Please let it be a surprise.\"\n\n\"I've got to hand it to you, you've got balls!\" laughed Billy. \"Are they going to have a close-up of you crying like a little baby if Gwen turns you down?\"\n\n\"That'll never happen!\" insisted Jordan. \"I think it's one of the most romantic things I've ever heard. Gwen will be over the moon. Charlie showed the way when he asked me in the middle of a concert in front of our hometown. Of course, he was pretty certain of the outcome, too.\" \n\n\"Paula, you've got to let go of your new son-in-law so the rest of us can congratulate him,\" complained Diane. \"I saw this coming that day at the pool. Our family has been blessed ever since.\"\n\nEveryone kept their promise of silence to Steve. They met Gwen and Charlotte at the airport and flew to Grand Cayman. They were joined by the Duke and Duchess later that day. President-elect Vince Rosen and Cynthia Rosen arrived that evening. Photographers were allowed an hour of photographs if they agreed to leave the vacationers alone the rest of the time.\n\nGwen and Steve were somewhat surprised at how much was made of the vacation by the press and people on the internet. There were even conspiracy theories floated about what was actually discussed and planned by the group. For Steve and Gwen, it was simply a relaxing few days with some of the people they enjoyed the most in the world. Politics were never discussed. \n\nGwen, Jordan, Lisa, Kate, Cynthia Rosen and the Duchess did manage to discuss children's health issues and they agreed to make an effort to work to improve conditions for children around the world. Steve, Charlie, Vince, and the Prince discussed sports, fishing, women, and the merits of various brews that they sampled.\n\nRefreshed and invigorated, everyone returned to their homes to prepare for the holidays. Jordan was still nursing her baby regularly but was able to appear on the show for Christmas Eve. This year, the show was from Valhalla. It was the first glimpse of the impressive structure for the public. There was a huge tree in the huge center hall with wrapped gifts piled high. Off to the sides and in other rooms were rows and rows of winter clothing, boots, gloves, and other cold weather gear.\n\nThe show was to begin with Steve and Gwen doing a small sketch they had rehearsed. As Gwen waited for Steve to deliver his opening line, he suddenly dropped to one knee! Gwen gasped and brought her hands to her wide opened mouth as Steve gazed up at her.\n\n\"Gwen, I love you more than I ever thought possible. Would you give me the great honor of becoming my wife?\" asked Steve as he held up a small ring. \"My grandfather gave this ring to my grandmother, and Dad gave it to Mom. Will you wear it as a sign of our love?\"\n\nThe entire set went quiet. Even the small children sensed something was afoot. They went silent and watched the famous couple in front of the cameras.\n\n\"Steve, I've dreamed of this day since the moment we met at the mall years ago. I have never loved before I met you, and I don't think it's possible to love a person any more than I love you. I'll be proud to wear this wonderful ring, be your wife, and share your life. The honor is mine!\" \n\nAs she finished speaking, Gwen grabbed Steve's hand and tugged him to his feet. He slid the ring onto her finger before she slowly wrapped her arms around his neck as he lowered his lips to hers. Cheers, whistles, and applause continued as the two remained in that position.\n\nThe stage was quickly flooded with family and friends. The women pried the couple apart and embraced Gwen. The guys shook a grinning Steve's hand. This lasted for a minute before the station went to commercial so the director could regain control and get everyone back on script.\n\nThe rest of the program was performed perfectly. Viewers at home could not help but notice that Gwen frequently held her hand out and gazed at her ring as tears would trickle down her cheeks. The usual festive feelings were increased by the joy everyone felt for Gwen and Steve. They both beamed as they passed out gifts to children when they weren't performing. \n\nJordan and Charlie were scheduled to perform the closing number. Jordan took part of that time to offer their feelings about Gwen and Steve.\n\n\"We've witnessed something very special tonight,\" began Jordan. \"Two of the people that Charlie and I love most in the world are going to be united in marriage. Valhalla will now have its king and queen, and we couldn't be happier. All that we are, all that we've accomplished, and all that we may ever accomplish has been made possible by these two incredible people. Charlie and I wish them well, and we promise to strive to live up to their standards and expectations. God bless them!\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "election",
        "concert",
        "terrorist",
        "bomb",
        "marine corps ball",
        "duke & duchess",
        "proposal"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-21"
}