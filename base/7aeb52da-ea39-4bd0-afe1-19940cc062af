{
    "title": "There and Back Again Ch. 113-114",
    "pages": [
        "Chapter One Hundred Thirteen: Mourning \n\nAfter a night spent reassuring ourselves with sight, taste, and touch that we were both alive and unharmed, I rose the next morning, tired but feeling better than I'd felt in months. Knowing that battle was hanging over our heads was a heavier weight than I'd thought. Alistair was still asleep, his golden hair slightly scruffy and spread about him like a short, spiky lion's mane, and after a few minutes watching him sleep, I was restless. I eased out of his arms, threw on a pair of smalls and a linen dress, and slipped out of the tent in the early morning light. \n\nMy brother and his love were sitting around the fire, and I snuggled up between them without a word, leeching heat and enjoying the fact of their continued existence. Aedan put his arm around me, and Zevran squeezed my hand as I sighed in contentment. \n\nBoth men were clean, and I assumed they'd made good use of my shower head. I hoped that they'd passed it on, after, and that I'd get it back eventually, but for now, I couldn't even bring myself to care. We sat that way as Aedan made the morning porridge, serving all of us Warden-sized bowls, and we ate together companionably. Leliana, clean but looking somewhat rumpled, came into the camp, blushing slightly as she saw the three of us looking at her. She hurried into her tent, as I narrowed my eyes suspiciously. \n\n\"Where do you suppose she slept last night?\" I asked. \n\nZevran smirked. \"Unfortunate you don't know any ridiculously awesome, talented rogues who could tell you that information.\" \n\nI looked at him in surprise. \"You know?\" A slight widening of his smug smile was his only response. \"Who?\" He continued to grin without answering. \"Come on, share, mio fratello. No fair keeping gossip this good to yourself!\" \n\nHe didn't answer. Aedan was laughing at my irritation, and I knew I had even less chance of getting him to tell me if he thought it was funnier to keep it from me. \n\n\"Don't make me go wake Alistair. I'll make him hold you down while I tickle you.\" \n\nZevran paled slightly, even as he objected, \"But I am not ticklish, cara. It won't work.\" \n\nI examined his face, carefully neutral expression poorly hiding his concern. \"Uh huh, sure you're not.\" I crooked my fingers in his direction, threatening his ribs, and he shifted uncomfortably. \n\n\"You're wasting your time. A Crow does not crack under torture. A Crow-\" \n\nI darted my hand in, finding his vulnerable waist through the thin cloth of his tunic, and squeezed; he squealed in a less-than-manly fashion, and Aedan and I cracked up completely. \n\n\"Fine, fine. I shall give you a hint and see if you can guess. Fereldan, noble, attractive in a broody sort of way.\" \n\nI considered, but then shook my head, gesturing for him to tell me more. \n\n\"Dark hair. Strong arms.\" \n\nI thought about it for a few minutes, and realised I needed one other piece of information. \"Male or female?\" Please don't let it be Cauthrien...please don't let it be Cauthrien... \n\n\"Male.\" \n\nIt couldn't have been, but... \"Nate?\" I whispered. \n\n\"Got it on the first guess, sis.\" Aedan chuckled. \"She's spent a lot of time with our tormented, noble archer.\" \n\nThinking about it, I realised in game, the two never would have met. I had no way of knowing if they'd hit it off. \"Really? How didn't I know this?\" \n\n\"Well, she wasn't exactly advertising it, but you've also been a bit...distracted, I suppose, with your own romantic issues.\" Aedan stuck his tongue out at me. \n\n\"I'm not having romantic issues, for possibly the first time since I've been in Thedas.\" \n\n\"What your dearest brother means to say, mia sorella, is that you've perhaps been more focused on your rather...enthusiastic response to wedded bliss.\" \n\n\"Are you saying I've been having too much sex to notice?\" \n\nAedan put his hands over his ears and started singing to himself to prevent hearing me talk about sex, and I elbowed him in the side as I rolled my eyes. \n\nZevran just laughed. \"Well, cara mia, you know now you've missed out on one budding relationship, but have you noticed who else hasn't been alone in his tent lately?\" \n\n\"Conrad, obviously.\" \n\n\"Well, yes, but no one knew about that, bella donna, even me. No, I mean the other Orlesian Warden.\" \n\n\"Riordan?\" I was startled; in game he'd seemed so...focused. Single-minded, almost. \n\n\"No, no. The more distinguished looking gentleman with the two-handed hammer.\" \n\n\"Dougal?\" I was stunned. \"Dougal's got a girl - wait, is it a girl? - in his tent?\" \n\n\"It's a girl, alright.\" Aedan's scowl transformed to a smirk. \n\n\"I object - I'd have to call her a woman, yes? No mere girl has a magical bosom like hers.\" Zevran outlined a curvy female shape with his hands, and Aedan choked. \n\nI stared at him, open-mouthed in shock. \"Wynne?\" I was shouting, until Aedan gestured to keep quiet. \"Wynne and Dougal?\" I whispered. \"But that's so...\" \n\n\"Perfect?\" Aedan suggested. \"At least, I think it is. She said it isn't serious, just two people who've been through a lot giving the other companionship. He's still going back to Orlais when we're done with the clean-up.\" \n\n\"So she's having a...fling? I'm sorry, I think you broke my brain.\" \n\n\"Cara,\" Zevran chided. \"You should not be so close-minded. They are both adults, yes? And they may have grey hair, but that does not mean they can't enjoy a little physical pleasure to keep the loneliness at bay. I'd think you would be pleased they found any happiness.\" \n\nThe more I thought about it, the less weird it seemed, somehow. Zevran was right. \"I am. I'm happy for them, if they're happy with it. I was just shocked, is all. In the game...well, Wynne wasn't receptive to any of that sort of thing. I'm just surprised.\" I wonder if Greagoir knows? \n\n\"You've changed lots of things, sister.\" Aedan kissed my hair as he squeezed me slightly. \"All of them for the better.\" \n\nI winced as an image flashed through my mind: Duncan, blood pooling around him as Cailan wrenched an axe out of his side. Guessing why I flinched, Aedan hugged me even closer. \n\n\"He had a much better end than at Ostagar. I know he wouldn't regret it - you have to stop blaming yourself.\" \n\n\"I know, I just...\" \n\n\"Just nothing.\" I hadn't noticed my husband come out of our tent while we'd talked. \n\nAedan vacated his spot in favour of sitting by Zev, and Alistair lifted me effortlessly onto his lap as he sat down. \"I know no one else will be able to convince you, but personally, I'm quite sure Duncan is at the Maker's side right now, pleased with how everything worked out, smiling down on all of us.\" \n\nRiordan's voice joined the conversation from somewhere behind me. \"I agree.\" He stepped around Alistair and settled across from us. \"Mourn him, grieve, miss him like I will, but don't take the heroism out of how he died by taking credit for his choices.\" \n\nI flushed, embarrassed. \"I'm sorry. I didn't mean...\" \n\nAlistair pulled me to him, and I turned my head and let a tear fall that I'd been holding in since the subject had changed. I felt ridiculous, but saw only honest concern when I glanced up at everyone watching me. \n\nRiordan smiled. \"No more apologies.\" \n\nI nodded, overcome by the support of everyone around me. I briefly wondered where I'd have been had I never come to Thedas, and the image of myself sitting alone in front of a computer screen rolled past. I put it out of my mind gladly. No time for that. I am not going back. \n\nJust then, the others started filtering out of their tents, and we all got busy serving breakfast to those who hadn't eaten yet. Leliana avoided eye contact, and somehow Wynne managed to emerge from Dougal's tent without drawing a comment. Or everyone but me already knew, and no comment is needed...We knew a summons would be forthcoming for the pyres, and began getting ready as soon as everyone had eaten. \n\nI wanted to talk to Leli - and Wynne, for that matter - but in the bustle, there was no opportunity. I resolved to find the both of them after the service. Instead, I quickly dressed in the set of armour not currently soaked in darkspawn blood before rejoining the group. Everyone, it seemed, had had a chance to get cleaned up; even Oghren had at least rinsed off the worst of the gore. It seemed his good hygiene had become a bit more voluntary - requiring a lot less drunken force-bathing - since visiting Felsi, and I smiled. Everyone's armour had been cleaned and polished courtesy of some of Cailan's servants, except those of us who wore leather; we wore our spare sets. At least for Leli and me, someone had come to take our dirty sets and see if they could be salvaged. We all wore our tabards, Wardens and companions alike, and it made me sad thinking of when Duncan had presented them to us back in Orzammar. \n\nBel returned my showerhead to me, and I tucked it into my bag before we left. \n\nOnce everyone was ready, we went together to Cailan's command tent, where he was giving out instructions to the various battalion captains. We waited until he was done, and he turned to us finally, clasping forearms with most of our group in the strange handshake apparently common in Thedas, kissed hands of the few women ostentatiously, and then he accompanied us to where the pyres had been laid. \n\nThere were actually several pyres, and I didn't even want to count them; each had dozens of bodies, covered in blankets, sheets, cloaks, or whatever other shroud could be scrounged up to serve. There was simply no way to have individual pyres for that number of people, and the bodies were too badly tainted to allow the families to claim them for private pyres. I felt sorry for the families left behind without so much as a chance to say goodbye. \n\nThere was a separate pyre for the handful of nobles who'd perished when the darkspawn ambushed our camp. I didn't know any of them, fortunately, but that didn't make it any less tragic. \n\nThere was one pyre with only a single body - Duncan's. As befitted the hero who (supposedly) ended the Blight, he was laid out, his armour repaired, his body cleaned, his beard and hair trimmed, looking much as he had in life. His weapons were at his sides, his arms crossed over his chest in a sick parody of his usual greeting bow. \n\nI wanted to look away; I couldn't separate the mental image of him dead in my arms from his life-like corpse waiting for a pyre to be lit. But I wouldn't disrespect him by avoiding the reality of his death. I took a deep breath, squared my shoulders, and forced myself to stand straight and hold still. Alistair squeezed my hand on one side, Cailan on the other, and I tried to remind myself that it wasn't my fault, and that I wasn't alone to deal with my grief. \n\nThere were hundreds assembled for the service, all the nobility spread out around our group, the common soldiers, dwarves, mages, and templars behind them; a small dais had been erected so everyone would be able to see. Irving had offered the services of a small group of mages who could amplify what was said, and to the Grand Cleric's dismay, Cailan had graciously accepted before she'd had any chance to decline; as a result, everyone would be able to hear the service as well. \n\nThe Revered Mother giving the service, old and wizened even for her senior position, slowly climbed the dais, and the murmuring and shifting around me died off as everyone gave her their attention. I was surprised it wasn't the Grand Cleric, but as she began to speak in a strong, clear voice, I decided I was glad; this was much preferable to listening to the whiny, superior tone of that old hag. \n\nShe began with several verses from the Chant of Light, listing off their sources with each verse; a few of them I recognised from their game codex, but some I couldn't recall. Most of what she said washed over me without even registering, as I let my eyes travel over the bodies of so many who'd died to keep Ferelden safe. She spoke of the horrors of the Blight, through the dogma of the Canticle of Threnodies, and I couldn't listen. \n\nA few verses, however, stood out, and I felt my grief pour out through my tears as I tried to remain stoic. \n\nHere lies the abyss, the well of all souls.<br> From these emerald waters doth life begin anew.<br> Come to me, child, and I shall embrace you.<br> In my arms lies Eternity. \n\n-Andraste 14:11 \n\nThe Light shall lead her safely<br> Through the paths of this world, and into the next.<br> For she who trusts in the Maker, fire is her water.<br> As the moth sees light and goes toward flame,<br> She should see fire and go towards Light.<br> The Veil holds no uncertainty for her,<br> And she will know no fear of death, for the Maker<br> Shall be her beacon and her shield, her foundation and her sword. \n\n-Transfigurations 10:1 \n\nMy Maker, know my heart<br> Take from me a life of sorrow<br> Lift me from a world of pain<br> Judge me worthy of Your endless pride<br> <br> My Creator, judge me whole:<br> Find me well within Your grace<br> Touch me with fire that I be cleansed<br> Tell me I have sung to Your approval<br> <br> O Maker, hear my cry:<br> Seat me by Your side in death<br> Make me one within Your glory<br> And let the world once more see Your favor<br> <br> For You are the fire at the heart of the world<br> And comfort is only Yours to give. \n\n-Transfigurations 12:3-12:6 \n\nDraw your last breath, my friends,<br> Cross the Veil and the Fade and all the stars in the sky.<br> Rest at the Maker's right hand,<br> And be Forgiven. \n\n-Trials 1:16 \n\nI listened as she spoke, and wished I knew if she was right. Was it possible? Was there a Maker, and was he merciful, like she said? Supposedly he'd turned his back on the world, but somehow, were Duncan and the hundreds of others sitting at the Maker's side, drinking heavenly wine, never again to know suffering? I wished I could believe, wished it with all my heart, and decided that my wish would have to serve in place of the faith I'd never known, hadn't been raised to understand. I hoped my prayers, such as they were, would reach Duncan, my parents, and the Maker himself, and that those I loved, those I owed for my life, were out of the reach of the grief I felt. \n\nHalf-way through I gave up, turning to Alistair and pressing myself against his unforgiving dragonbone armour as I cried; he held me, several of his own tears joining mine cascading down to mix into the mud at our feet. \n\nFinally she finished, and sniffling, I pulled myself together and turned to watch as Cailan deliberately climbed the steps, bowing low to the Revered Mother as she stepped aside. He looked out at the crowd for several silent moments, and I wondered if his nerves had gotten to him, or if he was frozen up there, unable to speak. \n\nFinally he cleared his throat. \"Fereldans,\" he started, \"dwarves of Orzammar, elves of the Dales: we are gathered here today not to grieve the loss of so many dedicated, incredible fighters, though we do, indeed grieve; not to mourn our losses and lick our wounds, though we do those things as well. No, we are here not in sorrow, but in celebration. Today we celebrate the lives of every man and woman here who stood up and said 'I will not go quietly,' and instead chose to fight. We celebrate the strength, the determination, the will and the prowess that make us who we are: fighters. Warriors. Allies. \n\n\"Today, we celebrate that mages, templars, elves, dwarves, and humans, for the first time in hundreds of years, if ever, learned to work together, to build trust, to accept each other's strengths and protect weaknesses. We celebrate the first alliances that may actually last the test of time and stand us in good stead when next the world needs them. \n\n\"We celebrate our differences, and our ability to overcome them in the face of a common cause. We celebrate breaking the horde, stopping the Blight, and ending a dire threat to all of Thedas, without outside intervention. \n\n\"We celebrate the lives of those we lost - those brave souls who are now resting at the Maker's side - and their families, who will need our help to survive those losses and face the future. \n\n\"We celebrate the Grey Wardens, who dedicate their lives, and take these same risks day in and day out, to protect Thedas from evil. We celebrate the Warden-Commander, Duncan, my friend and mentor, who gave his life to ensure that others may live. We celebrate their duty, and ours, so that none might be forgotten. \n\n\"Today, though we do so through tear-filled eyes and heavy hearts, we celebrate victory. And today we show the world that we will not, we will never be broken; not by darkspawn, not by politics and civil war, not by foreign despots or our own, dangerous doubts. Today, Ferelden extends the hand of friendship to the Dalish and to Orzammar, and we ask them to stand beside us as we celebrate the future they fought with us to procure. \n\n\"For Victory. For Ferelden!\" \n\nThe roar of the crowd behind us, repeating Cailan's last words, was ear-splitting, the enthusiasm hard to shake. His speech was intensely emotional, for me and for the rest of us who'd fought so hard, for so long; caught between laughing and crying, I was passed around from person to person and embraced by equally overcome friends. Leliana sniffled and offered me a handkerchief, which I took gratefully. I even ended up hugging Oghren, who pinched my ass and earned himself a head slap from an irritated yet bemused Aedan. \n\nWhen Cailan returned to stand with us, I launched myself at him and pulled him into a hug; I could feel him shaking slightly, whether due to nerves, repressed grief, or sheer relief I couldn't have guessed. \n\nHe turned back and gestured; several soldiers, who stood at the ready with torches lit, slowly approached the pyres and touched the flames to the dry wood. The crowd watched silently as the flames whooshed and caught, rising high into the afternoon sky. \n\nThe last two pyres, the nobles' and Duncan's, had yet to be lit. Cailan stepped forward and accepted a torch from a nearby soldier; he gestured to Alistair to do the same. Alistair put his hand on Aedan's shoulder, and the two stepped forward together to accept a second one. All set, Cailan bowed and carefully lit the pyre holding the handful of nobles, while the new Warden-Commanders did the same for Duncan's. Tears streamed down all three faces, mirroring my own sadness as I bid a last farewell to the man who, had I the choice, I'd have chosen as a father. \n\nThe pyres would burn for hours, I knew, in order to reduce the bodies to ash; some of the mages had been volunteered to use their magic to augment the pyre's flames if necessary, since it had been difficult to find enough dry wood. We all watched for a while, then slowly, the crowd began to disburse. I could hear captains calling out orders to march, and the main body of the army returned to their tasks, breaking camp, patrolling the perimeter, or whatever other activities a standing army did when the battle was over. \n\nI turned to Cailan. \"Good speech, your Majesty.\" I grinned as he huffed at me. \"No, seriously. That was amazing. I'm impressed that you're so eloquent.\" My teasing grin died, and I reached out and squeezed his hand. \"Duncan would have been proud.\" \n\nI'd have said more, but we were interrupted by a breathless scout bursting through a last clump of soldiers and nearly bowling over Riordan in his rush to reach Cailan. \n\n\"Your Majesty! My Lord!\" he called to Cailan and, apparently, Aedan. \n\n\"It's been a long day,\" Cailan complained tiredly. \"It's not exactly good timing, Scout...er...\" \n\n\"Ruald, your Majesty.\" He bowed, belatedly, face flushed in embarrassment. \"I'm sorry, but this can't wait. There's a group of soldiers at the south perimeter, your Majesty.\" \n\n\"I imagine there are several, Ruald. This is important because...?\" ",
        "\"They aren't ours! At least, they weren't fighting in the battle. They've just come from the Wilds, they said. They say...they say they're from Highever.\" \n\nChapter One Hundred Fourteen: Dis-Unity \n\n\"There's a group of soldiers at the south perimeter, your Majesty,\" the scout reported. \"They aren't ours! At least, they weren't fighting in the battle. They've just come from the Wilds, they said. They say...they say they're from Highever.\" \n\nWith that announcement, the change that came over Aedan was patently obvious. He stiffened like he'd been shot, and then spun to make eye contact with me, a huge grin splitting his face. I don't think he believed me that Fergus survived; at least, not completely. He didn't want to get his hopes up. Cailan had been questioning the scout further while Aedan had already begun celebrating, but we both turned to hear the last of the conversation. \n\n\"...Cousland with them?\" I heard Cailan asking. \n\n\"I don't know, your Majesty. They didn't say, but they had a couple of heavily wounded men. They all looked a bit worse for wear, to be honest. The healers have already been sent for.\" \n\nAedan glanced my way with trepidation, and I shrugged. I thought he was better by the time he reached civilization, though the game didn't mention any of his men. \n\n\"Thank you, Ruald. You may return to your duties.\" \n\nCailan spoke to a few of the messengers and others nearby, leaving instructions, while Aedan dismissed the Grey Wardens gathered behind us; when that was all done, Alistair, Zev and I trailed in Aedan's wake as he and Cailan led the way hurriedly through the massive army camp. I jogged ahead, catching Aedan's arm to slow him down slightly. \n\n\"Aedan...\" I began hesitantly, not knowing exactly why I was suddenly so nervous. \"It might not be him. I don't want you to get your hopes up. There may have been others from Highever that survived.\" \n\n\"I know.\" He winced. \"But then again, it might be him. Would he still be injured?\" \n\n\"Not according to the game. But we've seen the game isn't always perfect.\" \n\n\"Still, if it is him? Oh, Maker, I hope it is. I won't say I'm looking forward to telling him about Howe, but...Sierra, we won't be alone anymore. We still have a family.\" \n\nIt made my stomach flutter to think about that. \"Even if it is him...Aedan, it might not be the best time to tell him about me. He's going to have enough to deal with without an unknown sister being dumped on him, don't you think? Maybe we should wait to tell him.\" \n\n\"He's your brother too,\" Aedan argued. \"I won't ask you to pretend not to be family in front of him. He'll be happy to meet you. I know he will. If anything, it might help deal with what we've lost, to see something we have found.\" \n\n\"Aedan...\" \n\n\"Perhaps we should wait and see if he's even there before you two start arguing about who tells him what?\" Cailan was chuckling lightly at our expense. \n\nI scowled at him. \"Careful, your Majesty, or we'll make you tell him.\" He paled, and I laughed. \n\nWe finally reached the south perimeter of the camp, and I could see a small group of soldiers, some seated, some lying down; Wynne was there, with a Circle mage I didn't recognise. The elder mage knelt beside someone, pouring healing magic into him, while the other one concentrated on closing up what looked to be a minor head wound on someone else. \n\nI hung back, nervous, as Aedan bolted towards the group, clearly having recognised someone. Alistair wrapped one arm around my waist as we watched Aedan drop to one knee beside a large blond man. They spoke briefly, then Aedan half-smiled and clapped the man on the shoulder, oblivious to the poor thing's wince. My brother stood and stepped around another soldier before finally sinking down beside the man Wynne was working on with a cry. \n\nAnxiously, I shuffled forward to see Fergus, face streaked with mud and blood, eyes closed, a large gash through the shoulder of the ragged armour he wore, the skin torn and bleeding freely. Aedan leaned over, tucking a strand of matted dark hair off his forehead. Fergus had seen better days; he had a thick, unkempt beard, and his hair was longer than Cailan's; he had a scar running from one ear, across his cheek to his mouth, making his lip pucker strangely. He was filthy and wearing what must have been scavenged armour, but he was unmistakable despite that. He looked a great deal older than he had in game, and I wondered what he had been through since Ostagar. \n\nAs Wynne worked, the gash in his shoulder stopped bleeding, then slowly closed; she rose carefully, obviously drained, and I hurried to her side to offer my support as she got her balance back. None of the small group of soldiers looked able to answer questions, and Aedan was clearly so torn between relief that Fergus was alive and fear - that he might still die, that he'd react poorly to the news out of Highever - that he was in no shape to make the necessary arrangements. Cailan came back to my side from where he'd been talking to the guards who'd initially spoken to the ragtag group. \n\n\"Apparently they were scouting in the Wilds when they were ambushed, just before Ostagar. These were all that survived, and the Chasind rescued them. Several were injured, including Fergus, who apparently had some sort of wound in his back. It's taken all these months for him to be well enough to travel, but then as they approached here, they encountered a group of darkspawn fleeing the battle and had to fight. He was injured again.\" Clearly the guards had had some time to figure out the story before we'd arrived. \n\n\"He'll live,\" Wynne told us. \"He was the most badly injured of the lot. He'll need some more time to heal, and I think Anders should look at the wound on his back - it isn't totally healed yet, or it ripped open again, perhaps - but he'll recover. After that healing, he probably won't wake for another day or so, I suspect.\" \n\nCailan stepped closer, pitching his voice low for only Alistair, Zev, Wynne, and I to hear. \"Apparently he knows.\" I gave him a puzzled frown. \"About Highever,\" he clarified. \"The Chasind had heard the news from refugees heading to Gwaren. He took it...poorly.\" \n\nZev and I traded looks; he turned and went to sit by Aedan, one hand on my brother's back, silently offering support. \n\n\"It's probably better that Aedan didn't have to tell him,\" Alistair mused. \n\nI nodded, slightly relieved both that I'd have another day to face Fergus as his long-lost sister, and that I wouldn't have to watch Aedan break his heart. \n\nCailan stepped away again and made arrangements for a camp near the Grey Wardens to be set up for the handful of Highever men, and then two soldiers with a stretcher carefully carried Fergus up to Cailan's tent, the rest of us following in their wake. Aedan clung to my hand, seemingly not able to talk about his feelings, but his relief and apprehension were communicated clearly through his clammy skin clutching mine. He refused to leave Fergus' side once the new Teyrn was settled in Cailan's tent, and Zevran collected a couple of camp chairs and an extra cot so Aedan could sleep right beside his - our - brother. \n\nI spent a restless night wondering when Fergus would wake; Alistair making love to me distracted me for a while, but as he slipped into sleep, I laid awake, worrying. The next day, several of the men had recovered enough to describe their experiences in more detail. It sounded like it was a miracle Fergus had survived; Anders agreed after examining his back, and he, Wynne, and several others performed a combined heal like they'd done for my knee back at Redcliffe, apparently managing to break up some unfortunate scar tissue and reduce the impact it would have on his movement. \n\nWhen he finally woke, I was in a conversation with Nathaniel, who'd stopped in to visit Leliana but was too embarrassed - or too polite - not to stop and say hello to me, too; we were discussing our future move to Amaranthine. Zevran came, pulling me aside and freeing Nathaniel to seek out Leliana. \n\n\"He's awake.\" Zevran frowned. \"Aedan would like to see you. He has not yet told the Teyrn about you, yes? It has been an...emotional reunion.\" \n\nI nodded mutely and reluctantly turned to head to Cailan's tent. I truly didn't know what to expect; Fergus didn't know me. On the other hand, if Aedan was anything to go by, maybe he'd surprise me and welcome me with open arms. Aedan certainly seemed to think that would happen. I took a deep breath and ducked inside the tent. \n\nMy timing was impeccable - impeccably bad, of course. The two must just have talked about the night Howe had attacked, because Fergus was sobbing, and Aedan was holding him with a look of such abject guilt in his eyes it caused me physical pain. I couldn't help it - I shot Aedan a sympathetic look, and then stepped back outside. I stood beside the tent flap, heart pounding, slightly short of breath, feeling nervous and ashamed all at once. \n\nWho am I to go in there and be their sister? They lost everything. A bloodline doesn't let me share their grief. I'm such a fraud. \n\nI sank down onto the ground, arms wrapped around my knees, head down, shaking a little. I couldn't decide if I was more worried about being rejected, or being accepted. I honestly hadn't spent much time considering what it would be like with Fergus in our lives; now it occurred to me I'd been in denial, avoiding thinking about it. \n\nI sat there for a while, torn between going back in, or walking away altogether, when I heard the two men start talking. I should have left - I knew that eavesdropping wasn't going to get me anywhere good - but I felt paralysed, by guilt and fear, so I just sat there and listened. \n\nAedan was describing the night Highever fell; his voice broke as he described finding Oren and Oriana, defending Eleanor, saying goodbye to Rory, and then finding Bryce in the larder. Duncan had had to carry him out, not because he didn't want to be a Grey Warden, but because he was so set on staying with his parents and defending them to his death. Aedan had opened up to me, as we'd travelled together over the past year, but I realised it must have hurt, not having someone who knew those people he'd left behind to grieve with. Aedan was begging forgiveness, and Fergus was sobbing again, choking out words of understanding, not censure, to my relief. Things went quiet again, as the two cried together, and I assumed, held each other while they mourned. \n\nWhen they started talking again, Aedan began describing our adventures since that night, between being recruited, the Tower of Ishal, meeting us in Lothering, travelling to Redcliffe, then the Circle, Haven, the Brecilian Forest, Denerim, and finally Orzammar. He didn't go into great detail about any point in the tale, just giving a rough overview of the challenges we faced at each place. He mentioned me several times, not explaining my background, to my surprise; he gave hints that there was something mysterious about me - describing how I'd warned them about Branka, for example - but never explained how I'd known. I could almost feel Fergus' confusion mounting as the tale went on. \n\nHe was surprised at learning Cailan had a half-brother, and I noticed Aedan spent more time describing my wedding than he did describing Orzammar. \n\nFinally they talked about killing Howe; Fergus was initially skeptical about Nathaniel's innocence, immediately spewing vitriol about the Howes, but when he heard about his injuries - I hadn't been aware that Anders had healed several horrific burns, bruises, and badly set fractures - he softened and accepted that Nate had been a victim of his father every bit as much as the Couslands had. He'd been friends with Nathaniel Howe for years before the archer's exile; faced with overwhelming evidence, he couldn't deny the obvious lack of complicity in his father's actions. \n\nThey talked about the Landsmeet, then the army training in the field before the final battle. Aedan had avoided talking much about Zevran, but his resolve broke when he explained Zevran taking the killing blow, and I was sure that, unless Fergus was an idiot, he must have known how Aedan felt about the elf; despite that, they didn't discuss it. I imagine they've spent their entire lives not talking about Aedan's sexual preference and what it would mean for a nobleman not to wish to marry.  \n\nInstead, Fergus asked the question I'd expected from him earlier. \n\n\"You've mentioned this...Sierra?...multiple times, but Aedan...who is she? Is she a mage? You talk about her like she knows the future.\" \n\n\"I'm glad you asked.\" I could picture Aedan's smug grin. Ass. \"She isn't a mage, no. But she does, in a limited way, know things about the future.\" \n\nThe explanation of where I came from was as unbelievable to Fergus as it had been to everyone else; he tried to poke holes in the story, speculating that I was a spy, or somehow in league with the darkspawn...like everyone else, he failed to come up with any explanation that made sense given the breadth of my apparent knowledge. No one could possibly be in league with Loghain, Howe, the darkspawn, the dwarves, Uldred, the Dalish, werewolves, and all of the thugs in Denerim at the same time. In the end, it sounded like he was left questioning Aedan's sanity. \n\nWhich I couldn't blame him for, really, but apparently Aedan didn't pick up on that, because instead of getting Cailan, or anyone, really, to confirm his story, he launched into the explanation that I'd been dreading. \n\n\"'Gus...did you know I was a twin?\" \n\nThere was shocked silence for a moment, before Fergus replied, \"How did you find out about that, pup?\" \n\n\"I knew it! I can't believe you didn't tell me. Mother and Father I could understand, but why didn't you ever say anything?\" There was no response, and my mind supplied an image of Fergus shrugging helplessly in the face of Aedan's enthusiasm. \"Anyway. Sierra...Fergus, Sierra is our sister. My twin. We don't know how or why, exactly, but the reason she didn't wake up when she was born was because somehow her mind was sent over there.\" \n\n\"Aedan...\" I could practically hear the disbelief in Fergus' voice. Apparently Aedan did too. \n\n\"Hear me out! Listen, how else would she have come back? How could she know so much? You might be the only person alive who knew we even had a sister. How could she find out, if she was just some charlatan? Maybe it was fate, I don't know. I do know we needed her. She looks just like mother in that painting in father's study.\" That's news to me. \"Her birthday is the same as mine. And in Haven...I told you about the gauntlet in the Temple of Sacred Ashes? We saw Father's spirit, Fergus. He's the one who told us I was a twin. He told me about Sierra not waking up. She didn't believe him either, at first. But I swear it's true. She's our sister.\" \n\n\"Aedan, look, I don't know what's been done to you, but we will get through this-\" \n\n\"Fergus, I'm not losing my mind. I haven't been manipulated by blood magic. She really is our sister.\" \n\n\"Pup...I'm sorry about this, but you've been deceived. I don't know how, and I don't know why, but something has happened. Our sister's dead. She's gone, Aedan. This Sierra...she's got some agenda, some hidden ability...I will get to the bottom of this, but there's something. Maybe she's just using your grief and loneliness against you. But you have to see her for what she is!\" \n\n\"You've been back for all of five minutes, and you're already treating me like a stupid child? What is wrong with you? Fergus, I'm not an idiot. I am capable of seeing the truth myself. Why are you being like this? What happened to you out there?\" \n\n\"What happened to me? Aedan, I spent almost a year recovering from a severe injury, dreaming every night of seeing my wife and son again, only to finally make it back and learn that they are all dead. I didn't even know you'd survived - I thought I was the last one! And now I find out some woman with a vague resemblance to my mother is flitting about masquerading as my sister? I don't think my reaction is unreasonable.\" \n\n\"I hear you, but brother, I swear to you, she is our sister. Besides, what possible motive could she have?\" \n\n\"What motive? Why would anyone want the power and prestige of being from one of the oldest noble families in Ferelden? Don't be na\u00efve. Maybe she just wants a family of her own. I'm willing to believe that's possible. But have you thought she could be using you to get to the Crown? She married a Prince, for the Maker's sake.\" \n\nAedan laughed, a harsh bark lacking real mirth. \"Fergus, she could have had the Crown. Cailan offered it to her. Maker's sake, Eamon tried to force her into it.\" There was a pause; I pictured Fergus raising an eyebrow. \"He thought having the 'long-lost Cousland' as queen could stabilise Cailan's reign. He was completely against Alistair being made a prince. And, by the way, she didn't know Alistair was to be a prince when they married. She expected him to remain just a Grey Warden. Cailan told them later.\" \n\n\"Aedan-\" Fergus' tone was almost desperate now. \n\n\"I understand; you haven't seen what I have, 'Gus. You haven't been here. You've never seen her disappear into thin air, leaving all her clothing behind in a pile, only to reappear later somewhere else. She hasn't saved your life a dozen times by knowing in advance what would happen. The only reason this battle wasn't in Denerim, with massive loss of life, was because she knew where the darkspawn would be, and we've already discussed it isn't possible for her to have been in league with them. \n\n\"Would you just...just give her a chance? It doesn't make up for losing mother and father, or Oriana and Oren, Maker knows it doesn't, but if you let it, she might be the one small point of light in everything terrible that's happened.\" \n\n\"I can't, pup. She is your friend, I understand that, but Rendon was father's friend too. Our sister is dead. I won't risk anything more happening to my family.\" \n\nIt was quiet then, and I felt completely drained. I'd been right; nothing good came from eavesdropping. I wished I could have unheard the conversation. I clambered to my feet, suddenly wanting nothing more than to find my husband and make him hold me until the rejection stopped hurting. \n\nIt wasn't like I didn't understand Fergus' point of view; my story sounded insane, and that was for people who'd seen my strange earth gadgets and clothes, who had witnessed my inexplicable advance knowledge first hand. Fergus had none of that. Hadn't met me, hadn't seen my things, so impossible to exist in Thedas. He'd lost everything, and now someone was trying to fill the gap with an impossibility. Even though every word Aedan had spoken had been true, I'd never be big enough to fill that sort of hole, especially for someone who didn't believe me. \n\nThat didn't mean it didn't hurt. Aedan had accepted me so easily; we had been through so much together, it just seemed natural. I had hoped, somehow, that maybe the circle of people who believed me, who took me as I was, weird foreknowledge and absolute inability to care for myself in Thedas included, would get just one larger. That the little family I had forged for myself could include a wise older brother who would love me just for being me. But with the way he had spoken, I didn't think there was any way I was going to have a relationship with that brother, not now. I worried it would impact Aedan's relationship with me; I didn't want to be what came between the two brothers who had been close friends, before. I vowed to stay out of Fergus' way, and tried to steel my heart to let Aedan go, if I had to, so he could keep what family he had left. \n\nWhen Aedan found me, quite a while later, I was curled into a ball in Alistair's lap, refusing to talk or do anything except cling to Alistair and rock. I didn't even look up as Aedan sank to the ground beside us, sighing heavily. ",
        "\"I suppose you heard all that, then?\" \n\nHe must have taken my silence as agreement, but he turned to explain things to my very confused husband. \"Fergus doesn't believe me. That's she's our sister. He thinks she's either using blood magic to confuse me, or just preying on my loneliness to get close to the crown.\" \n\nAlistair's arms stiffened, and I suddenly worried he'd feel the need to defend my honour to the new Teyrn of Highever. Ironic, considering what he thought of me after learning about the game. I squeezed his arm tighter, and he relaxed again, rubbing my back. \n\n\"Look, sis, give him time. Cailan is talking to him now. And Riordan said he would as well. I'm going to ask Greagoir and Irving to assure him you aren't a mage. He'll come around.\" \n\n\"No, he won't.\" I finally looked up, eyes probably red-rimmed with suppressed tears. \"Aedan, you and I have been through so much...it wouldn't matter if I was truly a Cousland or not. You'd still be my brother in our hearts. But I can't even blame Fergus - I wouldn't accept me either, if I were him. Just...leave it alone. I'll avoid him, we can both act like liege-lord and vassal in public, and that's all. I won't be the thing that gets in between you two.\" \n\nAedan sighed again. \"He's asked to see you after supper.\" Alistair stirred, and Aedan held up a hand. \"Both of you. Cailan will be there, and I'll come, too. We'll bring your things and show him. We can bring him around. I know you're the first to think you don't deserve something, but you will have another brother, Sierra. We'll find a way.\" \n\nI shrugged noncommittally. I certainly wasn't in the position to decline a summons from a Teyrn, especially my future liege-lord, but I held no illusions it would go any way but badly. \n\nDespite that, I tried my best to get cleaned up; Cailan's command tent had been turned into his personal tent, so we no longer had space for a shower. Instead I sponged off in a bucket, Leliana braided my hair in some ornate fashion, and I put on the only fancy dress I'd brought with me - the now-faded green velvet I'd originally brought from Earth. I had my boots, my jeans, my iPhone, my flashlight, and my zippo with me ready to show off, and I still felt like vomiting from anxiety. \n\n<br> Alistair had dressed in clothes as well - his were more functional, linen trousers and a tunic, as we had packed for a battle, not a ball - but his body felt warm against my side, his hand firmly settled on my hip possessively. He'd stayed with me the entire afternoon, not pushing me to talk, but just being there. My rock, as always. Aedan met me outside Fergus appropriated tent and held my hand as we entered together. \n\nFergus and Cailan had clearly been arguing before we'd arrived; Cailan's jaw was clenched, his eyes bright with anger, while Fergus looked more serene, but his ire was betrayed by a prominent vein on his forehead, and his hands balled into fists at his sides. Fergus rose somewhat shakily from the small stool he'd been sitting on when we entered, while Cailan just stood to the side, arms crossed and expression irritated. \n\nAlistair bowed, and I dropped into a curtsy, not perfect, but acceptable after hours of training with Leliana. \"Your Majesty,\" I murmured, and Cailan smirked slightly. \"Your Grace.\" \n\nI stayed in the curtsy, head bowed, as was expected, until given permission to rise - permission which never came. After an awkward minute, where I balanced precariously and Fergus just stared at the top of my head, Cailan broke the silence with a disgusted huff, hurrying over to me and offering his hand for me to hold as I rose. I saw the king and Aedan shooting disbelieving looks at Fergus, while Alistair wrapped his arm protectively around me again. I had to stop myself from cuddling into his embrace, and instead turned back to Fergus with what I hoped was my best impassive expression. \n\n\"You asked to see us, your Grace?\" I tried to keep my voice steady, though I was sure it betrayed my nerves. \n\nFergus examined me for a couple of awkward minutes. \"I've heard a rather unbelievable tale about you, your Highness.\" \n\nI cringed at the title. \"You could call me Sierra, if you wanted.\" \n\nHe stared at me. \"No, I don't think I shall, Princess.\" He shot a sideways glance at Aedan. \"I think it's best if we don't try to pretend you didn't come from nowhere, only to marry into royalty.\" \n\nI felt Alistair stiffen, and Cailan snorted - whether in disgust or something else, I couldn't have said; I held my hand out to forestall the stream of objections I knew would come. \"As you wish, your Grace. Though the only title I claim is Steward, and I entirely blame his Majesty for that as well. I hope my business experience will be of use as one of your vassals.\" \n\n\"Business you conducted back on this...Earth?\" I nodded. \"My brother tells me you have proof.\" I nodded again, lifting the bag I carried. He waved a hand dismissively. \"I'm not interested at the moment. My brother and my king tell me you aren't from here; I can't exactly disagree.\" Cailan shifted, and Fergus coloured slightly, without breaking eye contact. \n\nHe stared at me for another awkward minute. \"I may have to accept that you're not from Thedas. I may have to accept you as Steward of Soldier's Peak, and my vassal.\" \n\n\"And indeed you will, Teyrn Cousland.\" Cailan's tone was firm and final, and Fergus acknowledged it with a nod. \n\n\"But no one can force me to accept you as my sister, when you are not. Maybe you truly believe you are. I hope that's the case. Either way, you've convinced Aedan of it, and nothing I say will change his mind; the same for his Majesty, clearly. So let me just say this right now, with witnesses. I will accept your oath of fealty, and I will treat you the same as any other vassal. I will ignore my personal feelings on the matter. But if I find out you knowingly manipulated Aedan, or anyone else here...if you had any involvement in the attack on Highever...if I believe you to be a threat to my country, my brother, or myself, I will end you.\" \n\n\"Fergus-\" I assumed Cailan was about to reprimand the Teyrn for being rude; I interrupted him. His rudeness was the least of my worries; if he would work with me, I could live with that. \n\n\"Thank you, your Grace. I am sorry if my presence has caused you distress.\" \n\n\"The rest of us have things to discuss. You may go, Princess, unless his Majesty objects?\" \n\nCailan waved apologetically, and Alistair kissed my temple; Aedan squeezed my hand, and then I slipped out of the tent, exhausted."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-113-114"
}