{
    "title": "Play Testers Wanted Pt. 14",
    "pages": [
        "Finally!! I am so sorry this beast took so long to come into being. I hope you enjoy this and I will do my best to speed things along. Take care of yourselves, be safe, and feel free to vote and comment.\n\nA Pirate's Life for Me:\n\n\"Inertial dampeners are failing!\" Screeched Mr. Gimmick. \"Down to fifteen percent Captain!\"\n\n\"Expand tactical display!\" I ordered. \"There has got to be something we can put between us and those two battle cruisers!\" I barked out and Traci doubled the range of her scans. \n\n\"A Kree battleship just jumped into the system!\" Sentinel cried out. \"Orders?\"\n\n\"There is a gas giant within 'blink' range. Traci! Calculate insertion coordinates.\" I pondered out options as the two cruisers fired another volley from their railguns. \n\n\"We are fucked if those hit!\" Sentinel stated as she targeted the small lethal rounds.\n\n\"Jump coordinates available,\" Traci announced. \"Blink in three... two... one!\" \n\nInstead of entering hyperspace where our damaged inertial dampeners might fail and scatter us across time/space we performed a short hop instead. The Ghostdancer teleported into the gravity well of the gas giant. She was angled for atmospheric insertion and we dove at best possible speed. My crew cheered our narrow escape, but we were hardly off the hook. The battleship alone carried twenty plus fighters, easily enough to finish us off in atmosphere. \n\n\"Take us as deep as our shields can take, bring the second sphere online. I will repair the inertial dampeners. Call me if they come in after us.\" I raced to engineering to get to work. Those with repair skills worked on the shields and other necessary systems. The ship was silent only broken by the occasional curse or sound of a tool being utilized. We drifted in the upper atmosphere of the planet.\n\n\"What was that?\" Grit the Shadowspawn cried out. \"Some kind of wide band burst transmission.\"\n\n\"Talk to me Mr. Grit,\" I said over the ship's internal communication.\n\n\"Analyzing multiple transmissions from outside the ship. Weird. Each source is layered but I am getting multiple messages with each transmission. It will take time to decipher each layer. This is some seriously sophisticated technology.\"\n\n\"It is not technology, there is something alive out there transmitting, but not to us I think.\" Ynariel stated. \"Scanning for life.\"\n\n\"Activating external sensors,\" Grit announced, and the ship was full of what sounded to me like whale song. Their voices overlapped in an otherworldly orchestra. The question was whether they even knew we existed.\n\n\"Calibrate shield harmonics to match their voices.\" I ordered. \"Let's get their attention.\"\n\n\"We have penetration!\" Sentinel called out.\n\n\"Don't toy with me, how many?\" I rushed my repairs.\n\n\"A full dozen fighters.\" She replied. \"Wait, they are holding formation. I think we just dropped off their radar.\"\n\n\"Keep those shields modulated!\" I ordered as I finished my repairs.\n\n\"Those aliens are moving closer,\" Grit informed me. \"We have their attention.\" The ship lurched. \"They are pushing us. Should I fire maneuvering thrusters?\"\n\n\"No, as long as they don't take us too deep... quit laughing you assholes!\" I chided them as I closed the housing for the inertial dampeners. \"Dampeners are back online!\" I stated as I headed for the bridge. \"Open the cockpit iris.\"\n\n\"We can only open the left side. The right portion is still compromised.\" Gimmick informed us. The left armored plating slid away revealing the lurid alien atmosphere. The clouds tended towards the reddish orange portion of the spectrum. Swirling among the dominant foggy atmosphere were large fast-moving grey-white horizontal tornadic manifestations. Were these the life forms helping us? \n\n\"I have isolated the source of the transmissions,\" Grit announced as targeting reticules pointed out faint, nigh on invisible, outlines hovering at a distant but following us. The tornadic formations were either a weather phenomenon or created by the natives. While I pondered all this the natives maneuvered the Dancer deeper into the atmosphere while the auto repair features worked on the damaged hull and things the crew could not handle or reach. The more time she had to heal the better off we were. \n\n\"Whoa! Picking up massive amounts of metal, alloys, polyalloys, and a host of other mineral byproducts Captain.\" Gimmick exclaimed.\n\n\"Keep scanning but narrow beam only, we do not want to give away our position to those fighters, not yet anyway.\" I directed. Gimmick was as happy as a pig in shit. It took longer but far safer than being foolhardy and assuming they would not be looking for signs of active technology. Gimmick projected an ever-growing map of the ships just hovering here between safety and crush level of this formidable planet. Those that did not respect the forces of nature perished by them.\n\n\"It is a graveyard of ships, some of these things are thousands of years old!\" Gimmick pointed out the rarest and most interesting of vessels. \"Holy shit, an Old Empire Titan Class Pyramid Ship!\" He exclaimed and continued. \"These fuckers are legend! Tell me, please, tell me we are going to at least board her!\"\n\n\"Once we get permission from the natives, this is their world. We will respect that.\" I ordered and turned to Traci to see if she could find a way to communicate with them. \n\n\"Bio analysis complete, the natives are hydrogen-based lifeforms. I know straight off the known charts of potential elements. Silicon is a far more likely candidate than hydrogen. Score one for a scientific reward. Opening six tight beam channels. Hope and pray I can work this out. Sit tight, this could take a while.\" Traci announced as her power consumption spiked and we waited as we watched the difference between the natives speaking and Traci trying to keep up. It was clear that these aliens multitasked on a level that belied their apparent simple nature. I watched the exchange and she was struggling. Traci's core was red lining and I ordered her to halt. \"I failed Captain.\" She said as she self-diagnosed to see if any of her components were damaged from the strain.\n\n\"Let me try,\" I stated. \"Maybe an organic mind can touch them where you cannot.\"\n\nMy crew knew better than to argue. I retreated to my meditation chamber and only Ynariel followed. She sat near the entrance while I prepared my mind to touch one of the aliens. I hesitated and then plunged into the psychic maelstrom surrounding the ship. They latched onto my mental gesture and I was instantly overwhelmed. A single voice called out to the others to withdraw before my mind was burnt out. I was surprised that my sanity remained intact. I suspected by my brief exposure what I was dealing with, but only further communication would prove me right or wrong.\n\n'I am designated Ghostfire.' I sent.\n\n'We are the...' what followed was the keening sound I associated with a storm squall. '...squall, yes Squall will do. Your exoskeleton is damaged how may we assist?'\n\n'The other vessels have been here a long time. May we explore the large pyramidical shaped ship?' I asked and as I suspected they believed I was the voice of the Ghostdancer. They knew no better and so they created a graveyard for what they believed were strange alien creatures. I explained that the function of the ships allowed us to visit other worlds. The cacophony of so many voices forced me to completely retreat.\n\n'Ghostfire, you have revealed to us a great truth. As a reward we give you leave to harvest as you will from the vessels here. We will shroud your presence from the rude interlopers. Yes, as you may have guessed, we are many and yet we are one.' The contact was ended, and I meditated until my healing factor repaired the damage long term communication had cost me in health and stamina.\n\n\"Gestalt,\" I blurted out as I opened my eyes. \"Many parts making up a stronger unified entity.\"\n\n\"That would explain the multiple levels of communication.\" Ynariel replied as she handed me a concoction of her own devising. \"This will help restore you after your ordeal. The Farseers of my people developed this for use after difficult psychic duels and combat.\"\n\nI drank the restorative and gave orders to slowly approach the Old Empire ship. While we had permission, we did not know if any automated defenses survived. There were so few artifacts that could be attributed to them. They dominated what we called the Scutum-Centaurus arm of the galaxy a hundred thousand years ago. Lucky for us that was the opposite side and left us unmolested. Their downfall was as mysterious as the utter lack of artifacts. The xenohistorians theorized that an older and more powerful race encountered them and wiped them out. I put money on the damn Celestials. They fit the bill all too well.\n\n\"Take us in Mr. Grit,\" I said as Ynariel helped me stagger to the bridge. I was still sipping her concoction as the shadowspawn and Traci calculated the best course. \"Give us a flyby and make sure she doesn't swat us out of the sky. If she powers up get us the fuck out of here.\"\n\n\"Absolutely, course plotted and laid in.\" Grit stated. \n\n\"Initiate and take your sweet time.\" I ordered. The Dancer automatically adjusted her wing configuration for the heavier atmosphere. We sunk deeper and Traci tweaked the shield harmonics and layered them to maintain structural capacity. She was not a warship. She was designed for hit and run tactics. Her hull and shields reflected that. The ships below us were all capital ships or larger. The biggest of the lot was our goal. She dwarfed the others by a factor of three or more. \"Anything?\" I asked.\n\n\"She is already powered up. We did not trigger anything.\" Grit informed us. \"Abort?\"\n\n\"No, but if she starts to spike,\" I declared. My crew was too disciplined to ask unnecessary questions. \n\n\"She is opening up,\" Grit growled. \"No spikes in power. Must be a proximity sensor.\"\n\nThe docking bay doors were big enough to accommodate multiple warships with ease. The Dancer was completely dwarfed by them. We slid in and it silently closed behind us. How the hell do cyclopean doors close so quietly after being here for god knew how long? Their level of engineering was off the scale. If they wanted to impress other races they succeeded. The docking bay was empty of other craft. That was a disappointment. The speed at which the bay pressurized was equally profound. The atmosphere was not only safe but damn near sterile. The NPC's stayed on ship while the other players joined me to explore. The ramp lowered and we stepped out onto the floor of the docking bay. The first thing that caught my eye were the deep fluted vertical lines cut into the stone walls. They ran up nice and parallel and then suddenly they began running along at odd angles. Some of the lines appeared to dive under others, some seemed to hop over, they wove in and out like a veins or arteries. In the end they performed their job which was to draw the observer's attention to the ceiling. \n\n\"What a sight!\" Gimmick exclaimed. \"Is it a map... it is... it is a star map!\"\n\n\"The whole of their empire in all its glory.\" Sentinel added.\n\n\"It is so nice to be out of that damn gun turret,\" Void announced. \"I think my ass fell asleep.\"\n\n\"I bet Ghost would be thrilled to massage it back to life,\" Gimmick chuckled. I looked over at Void and she blew me a kiss. To be honest, I forgot she was even on the ship. She is so damn quiet normally. \"There are steps way over there.\" He said pointing. Even as he spoke a glowing symbol appeared on the deck. It was a complex spell circle that involved the manipulation of space but besides that I could not decipher it without a great deal of time and effort.\n\n\"Teleport, I think.\" I stated. \"Let us hold hands and enter it at the same time. It looks big enough for all of us.\" I suggested and they laughed. \"Come on you pervs.\"\n\nDespite holding hands, I ended up alone inside what appeared to be a huge collection of harvested and ensconced purple stones. I did not touch but leaned close to examine the nearest crystal. The exterior looked little worked and mostly in its natural state, yet there were a series of silver wires inside the stone forming a metal web or circuit board. I had been sent here for a reason. So, I stuck out my left index finger and touched one of the flat portions of the crystal. The silver wires lit up like the filament of a lightbulb. A holographic image appeared above the stone. I cried out when I recognized the squirrel-like Kreffa I had seen on the world where Ariel and Elsa had parted ways.\n\n\"I greet you,\" he spoke bowing with complicated hand gestures. \"I am Entitled Master Shi-Shon-Jirune, how can I be of assistance?\"\n\n\"What are you the Master of?\" I asked and the diminutive figure hopped from above the crystal and landed next to me now his full height I assumed he possessed in life. The image sharpened and lost its transparency. He looked real, hell, he even breathed! I touched the hologram and he was solid. \"Sorry.\"\n\n\"No offense taken. I take it you have not encountered solid state imagery before.\" Jirune responded.\n\n\"Nothing this sophisticated.\" I admitted. He led me to a second crystal. \n\n\"He can be of help.\" The Kreffa declared. I touched the second crystal and a goatish thing appeared above its crystal. Like Jirune it greeted me with honorific titles and gestures. The second being belonged to the long extinct Ryfe'I'El. Despite his bestial appearance he was quite eloquent. I chastised myself for judging him upon looks alone. The three of us wandered among thousands of crystals in just this room alone. Ryfe as I thought of him, his name was simply unpronounceable because of my biology, found out how much I understood of holograms and then explained how to improve my knowledge of the craft.\n\nOnce I learned what I was able from Ryfe I turned my attention to Jirune. He described himself as a Master of the Esoteric Arts. His people blended the sciences, psionics, and the mystic arts as a single subject they referred to as Marat. The Kreffa viewed them as equals and sought students capable and intelligent enough to embrace them. His knowledge of metallurgy was profound, and he hinted at ways of adding certain rare elements to armor that would allow and focus mystical energies to great effect. For a price I could unlock the equivalent of a mystical railgun. My first thought was how it differed or could improve Force burst. He described the device in general terms, and I hesitated. I was not going to drop serious coin on something he would not define with in game numbers.\n\n\"I will have to take a pass.\" I declared. I still had a ship to maintain. Supplies were not going to pay for themselves. The holograms vanished and a doorway appeared. The message was clear it was time to meet whoever or whatever survived in this place. Beyond the doorway was clearly a throne room for the likes of titans or gods. The sheer dimensions of the chamber and the throne dwarfed us in the same way the docking bay made the Ghostdancer insignificant. The walls were polished dark stone with the occasional glowing red-gold stripes that pulsed like a heartbeat and reminded me of veins of magma. The stripe's lengths were irregular and broke up the monotony of the umbral construction. \n\nThe others appeared next to me, arriving out of thin air in a display of mystical power. We walked towards the throne which, to give the chamber a sense of scale, was half a mile high. The ceiling must be two miles or better in height. The interior of this ship was impossible. I began to think that each chamber inside this ship was in fact its own pocket dimension. That would explain the need of mystic portals to transverse its interior. \n\n\"This is what an ant feels like,\" Void whispered but the vast space carried her words everywhere.\n\n\"Galactus?\" Gimmick offered.\n\n\"If so, we are f... done.\" I decided cursing would be a bad idea. \"Where were you taken?\" I asked them in general. \"I got a crystal library.\"\n\n\"Me too,\" Gimmick exclaimed.\n\n\"I got a tutorial on the nature of matter and energy.\" Void shared. \"I bumped up my intangibility.\"\n\n\"Dojo, but nothing I needed so I took a pass.\" Sentinel declared winking at me her golden lips curling in a smile.\n\nThe sense of presence manifested before she physically appeared. A shaft of light shone from the ceiling and out of it the tall slender feminine figure. The light faded as we approached each other. The woman's skin gleamed with the same flawless mirror bright skin like the Silver Surfer, but she was not human. She was far too beautiful for a mortal. As she walked, she was in flux, her limbs as well as her figure and features changed with each step. I remarked to myself that she was still cooking and finding it difficult to settle on just one shape. By the time she did settle she stood twelve feet in height, had long elegant limbs, a profoundly erotic figure, and the face of an elfin goddess.\n\n\"I am Amalgam,\" she greeted us imperiously. Her stance was ramrod straight, and impossibly still once she stood before us. I did introductions leaving myself for last. \"Names are unnecessary here,\" Amalgam intoned in a sweet yet unrelenting tone. She was the mistress of this place and everything screamed a need to be in charge. \"Captain Ghost the Musician, Gimmick the Historian, Void the Artist, and of course Sentinel the Athlete. I know you all.\" I did not react to the title of musician, but the others visibly flinched at their titles. Had the A.I. delved into real world hobbies or occupations? \"Be at ease.\"\n\n\"You are the living embodiment of the ship's archive?\" I asked and this time it was the avatar's turn to react unexpectedly. \"It is in the name you chose, Amalgam, or fusion of all that information. It is a fine name.\" I added to put her at ease. It did not work. She was clearly angry. \"Why did you let my ship land?\"\n\n\"I thought a smart boy like you would figure that out.\" She replied and the psychic cold she gave off was clear for all to behold. \"You are here to entertain me. For each enemy that you vanquish I will reward you in either knowledge, power, or material wealth.\" She turned to face the throne. She walked away from us. We were dismissed for now. With each step she grew larger and larger. By the time she reached the throne her height and proportions allowed her to sit upon that vast seat with languid abandon. Instead of sitting in the throne she was seated diagonally with one leg thrown lewdly over one arm of the seat. \"Any volunteers?\" I stepped up without hesitating.\n\nI was teleported to a ring between the throne and the other PC's. Amalgam fixed me with her gaze. Her eyes glowed with an emerald light. She smiled and declared I would face a foe from my past. A mystical circle pulsing with verdant light manifested, and a slim dark-haired beauty appeared. I knew her instantly. I recognized her jet-black hair, pale complexion, blood red lips, and hungry eyes that glowed scarlet in the fading light.\n\n\"Hey Snow,\" I greeted her my voice cracking.\n\n\"What is this?!\" She hissed. Her angry whisper carried over the vast open space. \"You have forsaken my gift!\" She growled her voice lower, fangs extended, and her nails grown to lethal potential.\n\n\"It was taken from me,\" I informed her fearing that if she infected me, I would lose Ghost to a technicality in the game. 'Left, priority one load out.'\n\n'Yes, boss!' The artifact activated my best armor and placed Deathkiss in my left hand.\n\n\"Enough talk, entertain me,\" Amalgam ordered. \n\nSnow was a nightmarish blur. I threw up a defensive sphere to try give me the time to track her movements. It was useless! She took me from the side. She shattered the forcefield as if it did not exist. I felt her fangs on my throat and her venom coursing through my veins. Deathkiss sunk deep but only kept from me from perishing. It had no effect on the vampiric venom racing towards my hearts. Sword and vampire were equally matched. She drank my life blood and the sword gobbled up her life stuff. The problem with the equation was that the sword took more than half the energy for itself. My vision swam as I wrenched the sword free of Snow's abdomen and spun to decapitate her. I missed. I heard her laughter as my knees struck the hard-stone floor.",
        "\"Impressive vampire,\" Amalgam tittered. \"I thought he had you there with that sword strike. I believed he actually... aw damn!\" The would-be goddess cursed as the dull thunk of Snow's head hit the floor reached my ears.\n\n\"I... I did not miss.\" I barely managed as the match ended and I tumbled the rest of the way to the floor. \n\nThe world went black. I woke in the recovery chamber of the pyramid. I was greeted with an active HUD screen. It read keep vampirism or take a payment of thirty-five thousand credit payout. \n\n\"What is the benefit of keeping it?\" I muttered weakly. I could barely lift my hand off the Egyptian style couch I was lying on. \n\n\"One, permanent stat boosts to strength, agility, and stamina. Two, imbalance penalty of susceptibility to fire, sun, holy water, and holy weapons. Three, title and powers of Master Vampire restored to character. Four, finish Darth Nocturnal quest line now available.\" A mechanized voice stated.\n\n\"Since we are talking, I thought vampirism was removed from the game.\" I inquired confused at the sudden reversal.\n\n\"You earned and did not misuse the powers given to you.\" The voice declared. \"The final decision is yours.\"\n\nIf I took the money it could break the game. I was tied to the Darth Nocturnal story and it was tied to the ship the 'Pride of Korriban'. I felt like I had no choice. I hit accept and felt the familiar sensation of ice water in my veins. I fell asleep as the final changes occurred. I was awoken by someone hugging me.\n\n\"Ghost! You are alive!\" Void declared. \"Everything happened so fast!\" She stated cheerily now that we were reunited. \"It took me forever to take out the Hunter-Killer. One of the first major bosses I took on in the game. I entertained her well I suppose. What did you get?\"\n\n\"A mixed bag,\" I whimpered as the Thirst burned in my veins and forced my fangs to slide into view.\n\n\"Oh shit, I thought... I am confused.\" She bitched for good reason. If I were in her position I would be upset too.\n\n\"I was the first.\" I explained. \"I only gave it to one other player. She, well she created a cult of followers. I have a matter tied to this that I cannot abandon.\" I stated doing my best to stay in character and remain in control. It felt like the time I had been free of the thirst had been distilled and injected into my veins.\n\nWe fell into silence. I forced myself into a meditative state as we waited for the others to appear one by one. Once we were gathered, I stood expecting to enter battle again, but a clock counted down for thirty minutes. I paced like a caged animal. If they had happy thoughts about being a vampire, second thoughts seemed to overwhelm them.\n\n\"Have you checked your new skill sets?\" Gimmick offered and patted a spot near him. \"I'll show you mine and all that.\" I laughed and that drove the Thirst away.\n\n\"Sure,\" I said and sat down. I brought Left up and displayed my various load outs for armor, weapons, and spells. I scrolled down examining them. \"Load outs look good.\" I stated as Gimmick looked at me questioningly. \"I got ahold of an item,\" I said not wanting to use the word relic or artifact. \"Let us see how skills and whatnot are looking.\" I swapped over and the Devs, or developers, had changed the graphic interface again. This was like the fifth version of things. \"Sheesh, they changed it again.\"\n\nWhat had once been a flat disk with basic skills at the center was now a sphere with them on the surface and as you drilled down the more specific or precise, they became. By swiping left or right I rotated through powers, abilities, and lastly stats. I stuck with skills for now and noticed I was still twelve levels from being able to play with dark star alloy, the key material of the Svartalfar. Gimmick was mostly basic skills with a few exceptions that surprised me. He was a skilled Xenoarchaeologist. He studied alien cultures and structures. \n\n\"That explains why she called you historian.\" I stated. \"We are running out of time. Traci, scan skills, abilities, and powers. Display optimization.\" The display split showing the current and potential version. Increases were shown in blue, decreases in red, and synergetic bonuses in green. I looked it over carefully and approved the changes. \n\n\"How the hell did you do that?\" Gimmick cursed. I walked him through it. \"I never knew there were synergetic bonuses!\"\n\nSoon we were all huddled and tweaking skills and abilities. They were thrilled to learn about the optimization choice. I sent a message to the Devs and they replied that they had received it and would inform the other players. The clock ran down, and it was my turn again. I kept my current set of armor and weapons. I was teleported to the battle ring and found Amalgam still leisurely stretched across her throne. Once more her eyes shone with the emerald energy. Was she tapping into the Time Stone or was this something else?\n\n\"Ooh, how the mighty have fallen. Let us see how you fare against them.\" She giggled.\n\n\"What the hell are you... aw come the fuck on!\" I cursed when a dozen Xeno-Skrulls popped into existence. What did she mean by how the mighty have fallen? I was positioned in the middle of the circle and Left changed out my armor and weapons to full Yautja except for the improved needler on my right arm. \n\n\"Remember to entertain me Ghost,\" Amalgam leisurely reminded me.\n\n\"I am but a toy of the gods,\" I stated as my newly chosen combat music began to play. The aliens slowly closed the circle acting in their now familiar pack mentality I had grown to hate aboard the space station. I palmed the Darksaber into Left, dropped a thermal smoke grenade, and leapt straight up. Like many pack hunters sudden movement or change in the environment triggered a reaction. In this case they rushed into the smoke. I manually painted all twelve with the triangular targeting system on my mask. I began to fall and opened fire. Their exceptional sense of spatial awareness sent them scurrying. Two of them got caught up against one another and perished. The floor sizzled as the acidic blood melted deep craters in it.\n\n\"My floor!\" Amalgam complained. I teleported in front of a group of three and went on the offensive. The Darksaber silently ignited and I performed a masterful horizontal slash. I managed to decapitate two of them, their lifeforce feeding me and curbing the Thirst. The third alien partially dodged and left ever shrinking smoking holes in the floor. While I could not leave the combat circle the Xenos could. They fled and gathered in a smaller pack and planned. While they were gone my stamina and mana pools regenerated. The floor healed itself and...\n\n\"Damn it all to hell! Where are my kills at?\" I cursed seeing the bodies of perished aliens were missing.\n\n\"Why so upset?\" Amalga asked.\n\n\"I just found a use for them. While their internals make for excellent and peculiar potions, their skin makes great leather for all sorts of projects. These guys are great for stealth capabilities, their natural shapeshifting is passed along into their leather. Oh, and it utterly acid resistant.\"\n\nWhat the fuck was this stone-cold bitch up to? I reloaded the needler with flechette rounds, crouched, and waited. I could not turn invisible because that would not be entertaining. So, I was hamstringed in my ability to defend myself. I decided to channel Ynariel and the way she moved. I would be a blur. I would be clinically precise. I would become death incarnate. Suddenly, the exterior of the circle rose in a cloud of smoke. I teleported to the center of the circle. I began to sing. The music filled the circle. If it worked right it would act as echolocation and give me a map when they entered the circle. Amalgam was tapping her foot to the song when the Xenos attacked.\n\nIt worked. I had a clear mental map of them, all of them. Where the hell had the queen alien come from? She was surrounded by her drone bodyguards. I could feel her telepathic shroud and tendrils of control over her brood. If I was going to survive, I needed to propagate chaos among them. I tapped into my negamage skills and tried something terribly dangerous. If I could drain her psychic reservoirs, she would lose control. If I failed the backlash could be lethal. \n\n\"No guts no glory,\" I sang. I used my blink ability to perform short range teleports while I wove the psychic web around the queen. She must have felt it, she sent them out, and the drones charged me. I moved across the circle seconds before they reached me. It cost me mana to blink, and I was running out quickly. \"Just a little longer.\" I hummed as I desperately tried to ensnare her. The Xenos bloodlust grew the longer I denied them the opportunity to tear and rend. My mana dropped so low I was forced to use raw speed and agility. \"Catch me if you can!\" I belted out as I raced across the battleground. \"Gotcha!\" The psychic pattern had been woven. Now, I faced the full wrath of the queen. The connection between our minds was forged. The air flared as the once invisible threads were revealed as primal energy coursed through it.\n\nShe screamed as her mental sanctum was invaded. She rose to her full height and bellowed as her drones looked around confused. Without her to guide them they drew close to her to defend from the unseen assault. My mana meter topped out in mere seconds. The backup meter slowly filled, starting off with a bright yellow but leisurely turning blood red. If the backup filled completely, I would die from burnout. I imagined few players even knew about the secondary power meter. Unless you pushed yourself over the top regularly you might never even see them. It was time to burn off the extra power.\n\nMy fingers crackled with violet-black lightning as I unleashed the hell storm upon them. The drones took the worst of the hit. I fried them midair as they sensed the threat too late and leapt. The queen withdrew from the battlefield and the corpses of the drones faded from view as the floor repaired itself. I took the rest of the excess power and healed myself and restored my stamina. All green, I thought as I looked at my meters. I was going to need it.\n\n\"Almost done,\" Amalgam chuckled. \"You will witness the answer to your previous question. How the mighty had fallen, fallen from what?\" She shifted to a sitting position, her hands on her knees as the last manifestation of the Xeno Queen strode out of the fog.\n\n\"Holy fucking shit!\" I cursed as the nine-meter-tall Xenomorph Empress entered the circle the ground shaking under her multiton weight. Her chitinous head piece alone was three meters long and if there was any doubt that she remembered what I had done to her and hers the roar that followed removed all doubt. I clapped my hands over my ears to keep from being deafened. I plucked the smart disc from its sheath on the meaty part of my right leg. I hurled it at her and rolled away as she charged my position. Her sheer bulk made the circle seem much smaller. The disc cut along her head piece leaving a gouge but no more. I caught it as it returned and almost dropped it when the psychic attack struck.\n\nI staggered and shoulder rolled to keep from being crushed. I was just rolling to my feet when her tail slammed into me. I was forced to tap into my vampiric abilities and take on the form of a shadowy cloud to keep from being propelled out the circle and losing. I looked at my meters and they were all in the yellow. This bitch was really pissing me off. I reverted to a solid form, drew Deathkiss, and went on the offensive. I pushed myself into the zone that Ynariel seemed to live in. I raced at the Empress and used my wrist shield to blunt her psychic attack. It worked after a fashion. The kaiburr crystal shook under the assault. It lasted long enough for the sword to bite deep. The sudden pleasure surprised and halted her attack. I drove the weapon deeper and gave it a savage twist. The thing's backfist sent me reeling. I was back in the green but Deathkiss was lodged in the beast. The Empress plucked the sword free and hurled it, I tried to use telekinesis to get it back, but the bitch struck out psychically while my attention was on my weapon. The sword flew outside the circle as I defended my mind.\n\n\"Now it is personal!\" I growled while I shook my head to fight off the mental assault.\n\nShe was charging and I leapt up and out of her reach. I fired a dozen needler rounds into her head and spine. The hard-plated protection forced the flechettes to bounce off harmlessly. However, those that struck her spine and back dug deep and drew acidic blood. I landed beyond her and that massive head spun around her attention became laser focused. I activated both wrist shields, crossed them, and locked my legs beneath me. Her rage filled mental assault was redirected but only for so long. The right shield failed as the crimson crystal shattered. I cried out as my right arm broke and pulled out of the socket. I screamed in pain.\n\n\"Does it hurt?\" She whispered her mind voice cold and feminine. I felt fear as she closed for the kill. \"I will feed off your nightmares before I crack the rest of your bones and suck out the marrow.\"\n\nShe did not charge. She did not have to. Her approach was slow and languid. I tried to clutch my arm to my chest and whimpered at the ruin that was my limb. I dropped to my knees shaking and sniveling.\n\n\"Yes! Your fear is so sweet to me.\" The Empress purred as her wounds began to heal slowly. She was twenty feet away, then fifteen, ten, and then loomed over me. \"Time to die!\" She roared triumphantly. Amalgam was standing now waiting for the killing blow. \n\n\"Time... is on my side,\" I sang. \"Yes, it is!\" Left called Deathkiss from beyond the circle directly into my hand. With a howl of triumph, I drove the sword upward cleaving flesh and blood. The rush of energy filled me just enough to allow me to assume gaseous form and avoid the splash of acidic blood. I manifested on the Empress' right side. I slashed her with a shallow strike. \"Time is on my side!\" I sang as I leapt and as I fell, I used my body weight and the sword's keen edge to penetrate her armored head. Her psychic death cry nearly killed me. Deathkiss was the only thing that kept me from perishing. \"Yes, it is.\" I whispered.\n\n\"NO!\" Amalgam roared in her rage. \"You cheated!\"\n\n\"Deathkiss and I are bonded. We share a connection. Even if she were on another plane, I could call her back to me.\" I explained.\n\n\"Fine,\" Amalgam pouted angrily. \"Go rest.\"\n\nI was teleported to the rest area. Gimmick vanished once I appeared. I did not even have the chance to warn him. My healing factor kicked into full gear as I removed my wrist shields and examined them. Both Kaiburr crystals were dust. I used a smart station provided to vacuum out the bits and make sure those fragments had not migrated to other portions of the shields. They had so I repaired them and recalibrated them for vorpalite. I removed two high quality blue crystals, installed them, and tested their compatibility. I activated one and then the other safely. I closed them and slipped them back on.\n\n\"You okay, that took a long time.\" Void asked and I sat with her and Sentinel. \n\n\"Amalgam ran me through the wringer,\" I stated angrily. \"Remember the Xeno-Skrulls?\"\n\n\"Aw crap!\" Sentinel cursed. \"I hated those damn things!\"\n\n\"We all did,\" Void agreed. \"There is a kitchen area if you are hungry.\"\n\nThe three of us got up and wandered in the direction of the kitchen. A ball of blue flame marked my reward for my success in the second round. I touched it and standing there was a classically dressed vampire bride. I shrugged and was about to accept it when Void touched my shoulder.\n\n\"If you don't want her choose one of the others. All you have to do is swipe left or right.\" She informed me.\n\n\"All this time and I just accepted my rewards!\" I exclaimed.\n\n\"No, it was implemented just a few upgrades back.\" Sentinel added as I swiped right. The first alternative was an impressive sniper rifle. Nah. The next was a pack of cosmetic costume and weapon options. Maybe. The last was salvage rights to one or more of the derelicts outside the ship.\n\n\"Now we are talking!\" I declared. I selected the salvage. Though nothing was promised, it fit our current storyline the best. A sudden dizzy spell sent me careening into one of the tables. The girls helped me into a chair and Void's wrist was pressed against my mouth.\n\n\"Eat damn it!\" She winced but then let out a moan. \"Ooh, I see why the goth girls dig vampires.\"\n\nI took a small amount of blood. She still had a fight ahead of her, they both did. Sentinel also offered and her blood was more potent. It could have been her alien origin or impressive healing factor. I let the blood do its magic and stood only when I was sure I was okay. Gimmick showed up ten minutes later and he looked quite proud of himself. He joined me in the kitchen while Void vanished for her second round. Gimmick was tight lipped about his second round and I respected that. \n\n\"Vampire again eh? How are you coping?\" He asked clearly concerned.\n\n\"How the hell did you know about before?\" I asked feeling vulnerable.\n\n\"I knew the player you brought across. She bragged to me. It is why I started playing. Not that I wanted to be a vampire just the full dive experience. You are a bit of a legend really.\" He stated. \"I watched your concert, hell, I even have it saved on my play list when I fight.\"\n\n\"I'm flattered.\" I replied. I was going to log out if he asked for an autograph, consequences be damned. \n\n\"Hey! The ceiling is opening up!\" Void called out.\n\n\"I guess we are done,\" I commented as we joined Sentinel and Void. Once we entered the rest area the floor acted like an elevator and raised us to the throne room. The combat circle was gone, and Amalgam seemed relatively pleased.\n\n\"It is nearly time for you to depart.\" She indicated with a casual gesture of her right hand. \"However,\" she growled as she leaned forward and glared at us with violet energy framing her eyes. \"I need to know what happened to my creators.\"\n\n\"I have no idea,\" Void blurted out. \"I am no student of ancient history.\"\n\n\"Ditto,\" Sentinel added.\n\n\"Well?\" Amalgam glared at me. \"Your people have been around forever!\" She snarled as her eyes went from purple to golden yellow. Her mind entered mine without warning or request. I did not resist for if I were correct then it would have been less than useless. I heard my body hit the floor as my astral aspect was ripped from it. Amalgam rooted through every memory both in game and outside it. Why? If this was a part of the game why use this moment to peruse my real-life recollections? Something else was going on and I was powerless to stop it for now. With the same disregard for my safety I was dropped back into my body. I felt it convulse in psychic shock. Was my actual body suffering? I hoped not.\n\n\"You... historian... what do you know about my people?\" Amalgam asked as Void and Sentinel performed first aid and used what they could to stabilize me.\n\n\"Little.\" Gimmick replied. \"There was not much left after your creators were quite literally wiped from history.\"\n\n\"I know. When I try to find out I reach a point where even my power fails.\" Amalgam states her voice shaky and unsure. \"I am open to theories.\"\n\n\"The Celestials.\" Gimmick offered. \"Perhaps your builders crossed a line and they were destroyed for reasons only such beings could fathom.\"\n\n\"Help me up,\" I requested from my companions. Once standing I addressed Amalgam. \"I think I know why that race was sterilized.\" I growled still pissed at being treated so poorly.\n\n\"I examined your mind. You hold nothing I would be interested in.\" She fired back equally upset.\n\n\"Then we will be leaving. We have ships to salvage.\" I said as I turned and headed for the exit. I felt her this time since I was reaching out as I staggered away. I hit the invisible barrier she had erected. \"What?\"",
        "\"How dare you?!\" Amalgam roared. \"I did not give you leave to depart!\"\n\n\"Bitch! I am done with your bullshit!\" I shouted back and the others took cover. Her eyes went red and she reduced me to a puddle. I used my innate shapeshifting and restored myself absorbing the excess energy she used to heal myself. \"We can be civil, or things get nasty.\" I offered even as I clenched the Dark Phoenix coin in my hand.\n\n\"Fine!\" She hissed and sat back glaring at me. \"If you can give me a logical reason for my creators destruction, I will reward all of you.\"\n\n\"I accept your generous offer.\" I said and the others looked at me like I was juggling six thermal detonators and they were all set to go off. \"Your builders somehow learned how to tap into the Infinity Stones.\" Amalgam let out a shriek of surprise. \"You used the Time stone to pick out enemies for us to fight. You used the Mind stone to rip my consciousness from my body and mentally rape... peruse my memories.\" I explained my observations and she flinched when I used the R word.\n\n\"Her eyes... of course!\" Gimmick exclaimed. \"I feel so stupid.\"\n\n\"Yeah, the Celestials must have viewed that as a threat. An entire species able to do just about anything. They stepped in as the younger races began exploring the galaxy. It would impair their natural development.\" I said and Amalgam nodded.\n\n\"It is true. Deep down I suspected it. When they sent me away to hide, I think I knew.\" She paused and then turned her gaze to me. Her eyes went orange and I felt a tingling within me. She had used the sixth and final stone, the Soul stone. \"You seek perpetual balance, I cannot override free will, but I can let you know when your actions could tip that balance too far. I have also centered you for now. I am sorry for what I did.\" She added with what sounded like genuine remorse.\n\n\"Thank you.\" I said and let go of my anger.\n\n\"My spindles are repairing the ships below. By the time I have rewarded your companions they will have finished their tasks.\" Amalgam laughed. \"Perpetually curious aren't you. See and examine one while I attend to the others. It slid down a drag line of its own creation and dropped down before me. The droid was six feet in height, it stood on three articulated legs, legs that possessed three joints that could swivel with ease. The tripods were topped with a triangular insect like carapace. The rounded hood allowed its personal shields to redirect energy and kinetic attacks up and away from its main body. There were three singular eyes spaced equally around the hood giving it a three-hundred- and sixty-degree range of eyesight.\n\n\"Interesting.\" I commented as I knelt to look under the hood. Hidden below were three pairs of arms, each of which ended with three tentacle-like manipulators that appeared to be able to perform delicate fine motor work and strong enough for heavy lifting. The spindles were armed with powerful cutting lasers that could accomplish the finest of surgeries or slice through enemies with ease. I was not sure I could do anything to improve upon them. The others received their rewards and it was time to depart. I guessed that the builders patterned their droids after their own physical appearance. I wondered if there was a connection between the Elder Things and this other race.\n\n\"Go in peace.\" Amalgam snickered as we left.\n\n\"We still need to fight our way out of here.\" Void commented. \"Three big ships and all those damn fighters.\"\n\nWe were teleported to the docking bay. The ships looked immaculate including the Dancer. A host of spindles left the area, all but one. A single black spindle with red highlights awaited us by the Dancer. It trilled at us in its digital dialect. It and the other spindles while repairing the ships searched, categorized, and designated the best salvage options. A final parting gift from Amalgam for entertaining her. Most of the ships vanished in a flash of multiple lights. They had been reduced to their core materials. Stacks of ingots were arrayed around us. Gimmick went to work and isolated the rarest alloys first until our hold could carry no more. The last six ships were the finest and in one case the rarest to be found.\n\n\"I don't believe it,\" Gimmick whispered. \"I didn't think she actually existed!\"\n\n\"Care to share?\" Void asked looking around nervously.\n\n\"It is the Moraluin Di Elengond, a Svartalfar Yacht.\" Gimmick declared and I stared at the ship she pointed out.\n\n\"She does not look Svartalfar make,\" I said. \"Sure, she is sleek and gorgeous, but it does not have the feel of a dark elf craft.\"\n\n\"There is a reason for that. She predates the War in Heaven.\" Gimmick dropped the emotional bomb. \"She is a pleasure craft.\"\n\n\"Listen Captain, no one here would dare stand between you and her.\" Sentinel stated.\n\n\"Yeah, she is your legacy.\" Void added.\n\n\"Thank you, all of you.\" I said and Gimmick gave his agreement. I walked over, placed my hand on the hull of the ship and claimed her. I placed her in my inventory while the others laid claim to a ship of their own. That left two ships unclaimed. \"It would be a crime to leave them behind. I have a full-fledged keep. I will keep them until we all sit down and find a purpose for them. For now, we need to beat feet before those fighters get the balls to follow us down this deep in the atmosphere.\" \n\n\"Yes Captain!\" They replied as we raced aboard the Dancer.\n\n\"Ship status Pilot?\" I barked as the ramp raised behind us and the engines roared to life.\n\n\"All systems in the green,\" Ynariel replied with a smile. \"Yautja have manned the cannons. We just need a destination.\" She paused before pointing. \"What is that?\" \n\nI looked over my shoulder to see the black and red spindle droid. It had somehow gotten onboard. Was it a final gift or something more? \"Only time will tell.\" I muttered. \"Traci, bring up a hologram of this planet. I have an idea.\"\n\n\"Displaying planet,\" she replied and stood waiting for more orders.\n\n\"How far from where we are to the opposite side?\" I asked as a dotted line bisected the hologram.\n\n\"Roughly forty-four thousand miles,\" she estimated. \"Roughly the same size as Jupiter.\"\n\n\"Calculate a blink jump,\" I ordered, and she quickly determined just how big our reentry signature would be. \"We can do it, but they are going to see us coming. The planet's magnetosphere is blinding our sensors so it might mask our exact exit point.\"\n\n\"Plot course, gunners prepare for combat...\" I called out and the Predators howled in delight for the conflict to come. \"Shields up! Jump engines online! Jump when ready Pilot!\"\n\nYnariel took over and went by the numbers. Jumping through empty space was one thing. Taking a ship through the core of a gas giant could be lethal. If the warp bubble fluctuated too much during the passing, we would be squashed to the size of a marble. Ynariel whispered a silent prayer before giving the order. The typical smooth transition could hardly describe this jump. The Dancer shuddered, groaned, but exited the jump on the far side of the planet intact. Claxons and emergency lights kicked on as we prepared for our second jump, the jump out of this system.\n\n\"Something followed us through!\" Ynariel shouted. \"That damn pyramid ship is right behind us!\" We all looked at the spindle droid, but it had no features to judge or gauge. \"Ready the jump engines for the Kasterberous system!\"\n\n\"Gunners ready yourselves!\" I shouted as Gimmick and Ynariel performed their duties. \n\n\"Dreadnaught is launching fighters!\" Gimmick called out. \"That pyramid gave away our position!\"\n\n\"Evasive maneuvers! How close is that dreadnaught?\" I called out as the ship shook and we had a visual on the broadside the warship was firing our way. \"That crazy bastard brought it inside the atmosphere. Void give me a full scan on the shields of that beast. I want frequency, power output, and how far they extend from the ship!\"\n\n\"Aye Captain!\" She replied.\n\n\"Ghost... what are you up to?\" Ynariel asked as the Dancer dove, dodged, and ditched behind the pyramid ship.\n\n\"Depends on what I find out,\" I laughed. Three fighters that had followed us behind the ancient vessel evaporated in plumes of energy and ignited atmosphere. \n\n\"Escape course plotted!\" Ynariel exclaimed. \"We can leave anytime.\"\n\n\"Displaying info on the dreadnaughts shields.\" Void stated.\n\n\"Our shields are in tolerance,\" Traci laughed. \"Barely. Calculating. Oh boy! This is going to be close. Hold on! Initiating... skipping stone maneuver.\" She cried out making up the name of the tactic on the spot.\n\nThere were curses all around as Traci angled the Ghostdancer. The engines roared as they sent us upward and directly in the path of the dreadnaught. At the very last moment Traci poured as much energy as she could into our shields. The blinding flare and screech indicated our initial contact with the other ship. The shield harmonics matched the larger ship's perfectly, and we bounced off without them being able to fire off a volley. The lightshow continued while the sound ended as we left the atmosphere and entered the vacuum of space. I looked at the tactical display and the fighters were not engaging us nor was the dreadnaught. They looked more concerned about the giant pyramid than a measly ravager ship.\n\nWe made the transition to subspace and headed for first of twenty jump points. It would not do to show up without having used them. The less others knew about our tech the better. During the jumps we split the main part of the haul of ingots and since Gimmick was the only one that had a contact on Knowhere he would act as our agent while I played tourist. \n\n\"One more jump!\" Ynariel called out. \n\nI rushed to the main view port. The world resolved itself and I let out a cry of delight. There are only so many first times we get a chance to experience. Knowhere was one of them that would stick with me for a long time. The pyramid ship had been amazing but unexpected. While the severed head of a Celestial there was a ton of build up before the fact before seeing it hanging against the cosmic backdrop. The lighted eye sockets, nasal cavity, and gnarled mouth stood out against the darkling emerald nebula beyond. We were at the edge of what was known and mysterious conjunctions with other dimensions and warped space. \n\n\"It still takes my breath away,\" Gimmick declared, and we all agreed.\n\n\"Take us in,\" I directed and fought the urge to place my hands on the transparent alloy and put my face against it like I did when I was a kid during thunderstorms. \n\n'I envy you,' Ynariel's thoughts touched mine. 'I am blessed to be able to share your innocent love of new things.'\n\n'Stick with me and we will see some amazing things you and I.' I promised.\n\nDing!\n\nMy HUD chimed as a new quest was offered. I pulled it down and read the title and details.\n\nNew Quest: Meet the Collector. Possible side quests available.\n\nThat was odd and vague. Most of the quests were specific. I wondered if the Devs were trying something new. Instead of leaking or spoiling potential quests they gave a hint and let the player succeed or fail by using skills or simply good old-fashioned charm. It felt more like real life. Let us see how charming I can be. I turned around and found the spindle bot right behind me. \n\n\"Do you want to come along?\" I asked and it trilled happily. \"Fine, but you obey me and don't go off on your own. Got it?\" A small window appeared and allowed me to take over his command functions in effect keeping it on a tight leash if I chose to.\n\n\"We have been assigned to docking bay 7,\" Gimmick informed us as we made a single pass over the docking bays before setting down in number seven. The Ghostdancer's wings reconfigured themselves to their narrowest formation. \"We are down and locked.\" He said as the ship gave a minor shudder of contact.\n\n\"We will guard,\" Isolenti stated. \"It will give us a chance to train. Do not worry, we will hunt again soon.\"\n\n\"That we will,\" I promised.\n\nWe disembarked and left the space port. The staggering number of different races made me feel like the country kid and his first foray into the big bad city. There were many near human species milling about along with just as many nonhumans. The colors displayed were as varied as what you might find in a galactic garden. We split off as Gimmick, Void, and Sentinel went to meet with the contact. Ynariel and Null stayed aboard the ship to get to know each other better. That put a smile on my face. The spindle droid followed me to Starlin's Bar the best place to drink on Knowhere. At some point between leaving the ship and walking into the tavern the spindle droid had changed its coloring and was now sporting a ghost ravager patch prominently. \n\nThe exterior walls of the bar hosted a variety of bartenders along with alcohol and stimulants. The left half of the interior held gambling, two stripper poles, and a DJ's control booth. The current DJ was a hulking one eyed badoon. His aging green skin was a patchwork of battle scars and showed extensive signs of repairs and skin grafts. He was giving a play by play of the current game involving the predatory F'Saki as it chased down and ate the rat like Orloni. The last Orloni on the field wins and those that bet on it collect their winnings. I was on my third shot of Dire Wraith Venom, a potent alcohol distilled from the fangs of the dreaded shape shifters. \n\n\"He will see you now,\" a gorgeous pink skinned Krylorian stated without warning.\n\n\"Who will see me?\" I asked.\n\n\"My master, Taneleer Tivan the Collector, he requests your immediate presence.\" She declared in a tone that did not brook negotiation or argument.\n\n\"Who am I to argue? Lead the way lovely lady.\" I replied with a slight slur thanks to shots of venom.\n\nWe left the bar with the spindle droid not far behind. Drones and manned craft moved above us either carrying cargo harvested from the interior of the Celestial's skull or heading to harvest those rare components. We passed dozens of shops on our way to the Collector's Tower. It was the tallest structure inside of Knowhere. The nameless girl led me to a glass elevator, and we rode up and from its interior I could see a portion of Taneleer's collection. So many different living things from across the galaxy. I could not begin to guess which were sentient or not. All I did know for certain is that they were the last of their kind or represented a species on the edge of extinction.\n\n\"If you have any questions please ask.\" The girl stated keeping her eyes down and doing her best to be demure. \n\nWe reached the top floor and she gestured that I should go on alone. The spindle and I entered the sanctum of the Collector. Here were his current prized portions of his collection. I was shocked to see animals from Earth in the cages.\n\n\"A White Rhino, a sky-blue variety of Macaw, Tasmanian Wolf, Passenger Pigeon, a Golden Toad, a gorgeous white butterfly, and the Javan Tiger.\" I listed them off as I passed their habitats. \"What in the fuck is that?\" I cursed seeing the three-meter-tall hybrid between a spider and an octopus. It was a blend of both the best and worst aspects of the two species. \n\n\"I knew we would be fast friends the moment I spied you from the top of this tower.\" The Collector declared as he moved into view. \"Not afraid to savor my assemblage and take your time. I can appreciate that in another sentient. That being you found so repulsive belongs to a world that recently fell to the ravages of nature. But as you can see much of my recent acquisitions come from your adopted home world. Earth. Humanity has added more to my collection deliberately than any other race in the galaxy save perhaps the Celestials themselves.\"\n\nThe being known as Taneleer Tivan, the Collector, was above average height at nearly 1.9 meters with striking white hair and eyes and clad in crimson and ebony. His personality reminded me of a dandy but the mind behind the clown was cold and lethal.\n\n\"Please, follow me, let us have a drink and we can... where did you find it?!\" His gaze locked onto the spindle droid. Then there was the way he emphasized the word 'it'. So cold and insensitive and it took a lot not to shiver.\n\n\"A recent acquisition actually,\" I replied using verbiage he would be inclined to use himself. \"Believe it or not I came across him in the docking bay of an ancient pyramid shaped starship.\"\n\n\"Oh... I believe you.\" Taneleer gasped. \"It is in magnificent shape.\" \n\n\"I take it you have seen their like before.\" I stated as he guided me to a private dining area. The hall ended in an obsidian wall and hanging there a great stone tablet of a blue so pale it was almost white. Etched upon the tablet were draconian runes. The runes were in fact a poem.\n\n'The day and the night in mortal hands,\n\nSinister and Dexter he commands.\n\nA portal sealed will be unfurled,\n\nA gate cast down and downward hurled.\n\nArises now the Shadow Queen,\n\nHe rides forth silent unseen.'\n\n\"Anackire's Lament,\" The Collector whispered. My Byzantium ring hummed on my left hand. \"Some say someone freed her.\" He continued. \"What are the odds of that? Who could possibly lay their hands on the two most potent spell tomes in creation at the same time?\"\n\n\"Improbable but not impossible.\" I replied keeping my thoughts keenly shielded.\n\n\"Now that I have met you in person, I find that we are kindred spirits.\" Taneleer decided. \"I like the energy you put out.\" He added cryptically.\n\n\"I am glad. The ladies find it agreeable.\" I replied and we both chuckled.\n\nThe Elder gestured at the stone tablet and the wall split in half revealing a spiral staircase. I followed him up with a single backward glance to see if the spindle could handle the steps. Instead of trying to walk the underside of his torso glowed and he hovered instead. The steps led to a circular dining area under a dome of transparent alloy panes. It looked out over the whole of Knowhere. We settled around a small table. The Collector whistled and a gorgeous near human female strode into view. She was tall. She towered over us at seven feet in height and built for strength and speed. No doubt she was a warrior perhaps even the Collector's bodyguard. She had long black hair that nearly hit her firm round bottom, bright green eyes, dark dusky skin, and she was clad in a short black skirt, a matching short cropped black top, and around her neck a control collar with a single purple stone. Her expression was dreamlike as she set down the bottle of alcohol in front of Taneleer with matching glasses cunningly crafted of spiraling blue glass.\n\n\"Master...\" she said in a heavily accented English.\n\n\"Do you find her attractive Ghostfire?\" He asked. I looked her up and down and smiled. \"I resurrected her after she died in childbirth. I have improved her beauty in case her former lover comes looking for her.\" \n\n\"She is stunning by anyone's standards.\" I agreed. \"She is from Sakaar isn't she? I ran into Sakaarian bodyguards for a certain Skrull noble. They fought like demons.\"\n\n\"Yes indeed, pour the wine my pet,\" Taneleer instructed using that same arctic tone with her as he had with the spindle drone. He wanted to make sure I knew she was his property. She must have been something in her previous life. I watched as she poured the wine. It was one of those practiced actions she had done hundreds if not thousands of times before. Her hands were not those of a sex slave but those of a warrior. As she set down the bottle, I touched her left wrist and she froze. I pulled her hand to me, turned it this way and that to examine her callouses. \n\n\"Is she a bodyguard?\" I asked.\n\n\"Yes.\" He replied. \"It is an interesting story,\" Taneleer mused. \"Sip the wine and tell me if it triggers any memories. Caiera, take a seat.\"\n\n\"Yes Master!\" She purred as she sat in my lap. She held up the glass to my lips and I sipped. The deep subtle taste did in fact trigger memories. I saw a world dominated by millions of botanical lifeforms. The sentient species that called this world home were an insectoid race that reminded me of gigantic Teran butterflies. Their wingspan was close to six meters and their delicate manipulators allowed them to collect the rarest of pollens. The wine was distilled from those very pollens. The world no longer existed since a supernova destroyed their home star system.",
        "\"I cannot pronounce the name of their race, and their planet no longer exists.\" I stated. \"I do not know how I know that, but I do. Pity the loss of such a beautiful world. So rich in life of all kinds.\"\n\n\"Fear not, the Gardener, another Elder of the Universe, spent decades harvesting the plant life for preservation. He still sends me the wine his servants harvest and distill to remember them by.\" Taneleer stated as if he were reading off the menu of a fine restaurant. \"He is so sentimental.\"\n\n\"What is with the amethyst necklace?\" I asked and I thought I caught the sight of a genuine smile.\n\n\"It is not an amethyst. The stone is mined from the Second Plane of Hell. It is home to the succubus and incubus. The Plane of Lust is rich in those stones that pacify and pleasure those that carry them.\" He explained. \"I call it pleasurable pacification. She has become addicted to it.\"\n\n\"It is true. I love how it makes me feel.\" Caiera moaned in my ear. \"It seems my backside has aroused you. This is a good thing. Yield it to me!\" She begged as she looked to her Master for permission. He nodded and his generosity was her deepest desire.\n\n\"Aw, what the hell.\" I cursed under my breath. I showed her how to work my armor and she greedily went to work. \"What is it like?\"\n\n\"Impressive!\" She gasped before kneeling and teasing me. \"Like? Imagine what I am about to do to you all the time. That is what it is like.\"\n\n\"Tell me about the pyramid ship you encountered.\" Taneleer asked as Caiera cupped my balls and licked the underside of my erection. \n\n\"My ship was being chased by two Kree cruisers, damn that feels good!\" I began and any praise pushed her to do more. She undressed and alternated between her hands, her mouth, and her tits. \"We jumped into the atmosphere of a gas giant and dove deep enough to keep the warships at bay for a bit.\"\n\n\"Wait, you jumped your craft into the atmosphere of a gas giant to elude warships, impressive indeed.\" He commented as he processed what I told him. I glanced down to see Caiera's lips touch the base of my cock. Saliva dribbled from her lips as she deepthroated me. \"Go on.\"\n\n\"Huh, oh... we picked up what sounded like whale song and discovered sentient beings that were hydrogen based.\" I continued as I slid my fingers into Caiera's hair. I made a fist and began to pull and push her head forward and back. She submitted instantly and completely. She moaned as I took over. \"Those beings nudged our ship down to a bunch of derelict ships. One of which was a... damn she is talented... the pyramid ship.\" I continued as she began to do something interesting with her tongue.\n\n\"Hydrogen based life! You are truly blessed!\" The Collector said overjoyed. \"I see Caiera is truly enraptured. Give me the coordinates of that planet and I will give her to you.\" He offered and a holographic screen appeared. \n\n'Would you like to swap the lifeform designated as Caiera of Sakaar for the coordinates of the home world of a hydrogen-based lifeform?'\n\n\"Does that include the collar?\" I moaned as her tongue drove me crazy.\n\n\"Of course, dear boy,\" he replied laughing. I did not take the term boy poorly since he was billions of years old. I hit the agree button and Caiera went for broke to make me climax. It felt weird having an ancient being watching me get my dick sucked. I cried out and she swallowed every drop.\n\n\"Shall I continue Master?\" Caiera asked looking at me. \n\n\"Call me Ghost and let us take a break to conclude any further business.\" I gasped as she dressed and stood behind me.\n\n\"Caiera, go and collect your possessions. We have more to talk over. That's a good girl.\" He directed her before continuing. \"Please, tell me about your time aboard the pyramid ship,\" Taneleer asked congenially as he refilled his glass with the near priceless liquor. I saw no reason to give him an edited version of meeting Amalgam and how we entertained her. He leaned forward and refilled my glass as well.\n\n\"Ha! Rumors no more!\" He roared gleefully. \"There have been whispers of corrupted Skrulls and now they are verified! Tell me more about the life cycle of these things.\"\n\n\"I will but know this, the Xenomorphs are not to be trifled with. I would hate to see Knowhere become a hive for those dreaded things.\" I warned and he grinned.\n\n\"Did you think that this paltry museum was the whole of my collection?! I have more secure locations for beings like these Xenomorphs that fill you with such terror.\" He said his voice carrying a hard edge to it. \"Forgive me dear Ghost, you could not have known.\"\n\nI took a sip of the alcohol before continuing. I told him how Amalgam had said how the mighty had fallen when she spoke of the aliens. I went through each stage from egg to drone to queen. I left it at that, but he knew there was more. He relented and I told him about the empress and her terrifying psychic attacks. He was amused and why not, he had survived since the first stars burned in the heavens. \n\n\"I suppose the robot is not for sale.\" He touched upon the subject gingerly.\n\n\"No, I have not had the chance to examine it in any great detail.\" I replied a bit more than tipsy. \"I take my passion from learning how things function and their properties.\"\n\n\"If you were an Elder, I would name you the Artisan.\" He mused and his eyes caught and reflected the amethyst light from Caiera's collar. That did not take her long. She wore tight fitting dark alloy armor and carried a double-bladed glaive made from the same light absorbing metal. I knew it well. She was wearing shadow forged steel. The design of her armor was the best of protection, speed, and manuverability. My mind launched into how to improve it and I laughed. Taneleer tilted his head to the side and I explained. Caiera thanked me and adjusted the small pack on her back that held the rest of her few possessions. \"Know this truly Ghostfire, few beings earn my respect. In your case your reputation carries great weight. I want you and your Ravagers to work for me. It will involve theft, spying, and exploration. What do you say?\" There was something about the way he spoke the word respect that encompassed not just monetary gain but something deeper. \"The first mission will take some time to prepare. I will contact you when all is ready.\"\n\n\"I will look forward to it.\" I said as Taneleer pushed one hundred thousand units across the table in what I took as a good faith measure. \"Come on Caiera... Spindle... we have to meet up with the rest of the crew.\" The three of us returned to the elevator where it waited for us. The same girl that had been our guide greeted us. We took the glass elevator down and the interior of the collection had changed. \"The collection is different.\"\n\n\"My master bores easily. The tower is designed and programed to shuffle his collection to amuse him.\" She explained. There was that word again tied to a long lived being. Amused. Caiera and Spindle followed me out to the merchant district of Knowhere. \n\n\"Caiera, if I were to free you where would you go?\" I asked.\n\n\"Freedom,\" she spoke the world as if she stood upon a great precipice.\n\n\"How long have you been part of Taneleer's collection?\" I asked and it took her a while to transcribe memory and the present.\n\n\"One hundred and twenty-three years,\" she whispered. \"A long time yes? He can manipulate it. He lives outside of the normal flow Master.\"\n\n\"Yes. I would prefer that we were friends rather than owner and object.\" I explained.\n\n\"I like being the object of your desire though,\" she said her fingers stroking the collar.\n\n\"If I locked the collar away, what would happen?\" I asked and she panicked. \"No! I am not threatening you. I want you to be happy and free.\"\n\n\"You are kind. Please give me time and we will work things out together.\" She said as tears streamed down her cheeks and those small pouty lips of hers quivered.\n\nWe shopped and I purchased clothing for her. It did not matter what she wore I found her extremely attractive. She drifted towards the color black, or other dark shades of cloth, silk, or other more exotic fabrics. Caiera finally settled on silks and other soft materials. She chose a black spider silk blouse, dragonskin slacks with matching boots to wear for casual wear. As the clerk folded her slacks, I noticed irregularities along both legs. I was about to complain when Caiera laughed and explained the slits were in fact built in dagger sheaths. The soft yet incredibly durable leather was perfect for such things. She waved off the clerk, stripped down to nothing and put on her new clothing. The way the blouse and slacks clung it seemed to me she wanted to show off without being blatant. Was it an effect of the collar? Two traditional daggers hugged her hips, while several throwing knives adorned those long ass legs of hers.\n\n\"They are staring at me,\" she whispered in my ear. \"They want me. They want to breed me.\"\n\n\"Yes.\" I agreed. The collar was the center of her existence right now.\n\n\"Boss.\" Void's voice came over my comm link. \"We are all done. Where do you want to meet up?\"\n\n\"Let us meet at the bar. I made a new friend.\" I warned them.\n\n\"I bet she is gorgeous.\" Gimmick laughed.\n\nWe reached the bar at roughly the same time. I did introductions and none of them recognized the name of Caiera. While they ate and drank, I looked over the Ravager message board. It was meant for captains only. I informed the others that we were free and if a job became available, we were available. I also shared the news about Taneleer being a patron of ours. They liked the sound of that. I joined the others and observed how Ynariel and Caiera interacted. They got along quite well. The same attraction I had felt so had the she-elf. The first kiss was tentative but soon blossomed into a blistering embrace. Ynariel's arm slipped around the Sakaarian's waist and held her close.\n\n\"I see why he likes you.\" Ynariel gasped as she broke the kiss.\n\n\"You like me too, this is a good thing,\" Caiera grinned and kissed the other's neck gently.\n\n\"Unnn huh!\" The she elf whimpered.\n\nDing! Incoming Message.\n\n'Be at these coordinates, message will follow.' Aleta's voice whispered in my head. 'Get going Ghost.'\n\n\"We got a job!\" I called out. \"I will cover the tab.\" I said and as they headed for the ship while I paid the bartender and gave him a good tip.\n\n\"Incoming transmission from the Boss Lady!\" Grit called out from the copilot's chair. He had taken well to his life outside the Plane of Shadows. It was Ynariel that had shown me how to perform the ritual that allowed me to take him on as hired help. As part of the crew he received his share of the haul and that covered the cost detailed in our contract. He was as ruthless as he was amusing. \"We are in the vicinity of a Kree transport ship.\"\n\n\"Lay in an intercept course Mr. Grit,\" I ordered.\n\n\"Aye, aye, Captain!\" The shadow imp declared. \"Course plotted and we are ready to go.\"\n\n\"Yautja to the teleporters! Engage stealth field! Punch it!\" I called out the orders and everyone involved performed their duties flawlessly. It had not always been this smooth. It took an entire month of drilling to get this level of competence. The predators are a proud race and do not work well with others. But after teaching them to drink, whore, and fight as a unit they were formidable.\n\nThe Dancer shifted into hyperspace and intercepted the Kree ship before it could drop back into normal space. It was that amazing Svartalfar technology that allowed this to happen. Since we never left survivors it became a mystery as to how these ships were attacked and arrived empty and littered with bodies. We latched on once we were close enough and my Yautja shock troops softened up the defenders until the rest of us had a chance to join them. Gimmick made sure they never got out a distress call by jamming their communications or launching a beacon. In my humble opinion I had the best crew among the Ravagers. They had earned their patch a dozen times over. The ship's mascot leapt onto my shoulder and clung tightly.\n\n\"Tell me you aren't taking that little pervert with you... again?!\" Ynariel asked clearly unamused at the small tentacle monster perched cheerily on my shoulder.\n\n\"Aw come on, look how happy he is!\" I replied with a wicked grin. \"He sniffed out the girls held in the hold of that Tanarien slave ship.\"\n\n\"Fine, but don't come crying to me if he gets a tentacle shot off.\" She laughed and kissed the cheek farthest from Hentie, the tentacle monster.\n\nI stepped onto the teleport pad and joined the predators and instantly sensed something was wrong. The sounds of multiple weapon fire gave me a general direction of travel. I readied the Darksaber, activated my holosuit, and warily made my way towards the sound of battle. I found two injured Yautja and the third engaging what could only be a Kree Accuser. The Kree was devastating with his universal weapon. The young predator charged him and like the others was sent flying backward from a blast from the ancient weapon. What the hell was an Accuser doing on a cargo ship?! Answer. This is not a normal cargo ship. There was something extremely valuable on board, but what and how much could we get for it?\n\n\"You cannot hide from me Ravager scum!\" The Kree growled with as much menace as he could muster.\n\n\"That is the same thing your sister said just before...\" I taunted him as he leveled his universal weapon in my general direction and fired off a blast. I absorbed most of it and partially charged the relic attached to my armor. \"...she sucked me off.\" Hentie took refuge on my back and cheered me on. His lewd battle cry filled the area.\n\n\"What in the same of the seven gods is that thing?!\" He asked making a disgusted face.\n\n\"Your sister's favorite sex toy,\" I replied as I ignited the Darksaber. \"I was on my way to Hala to return it to her.\"\n\n\"Die!\" He roared as the fight began in earnest. Unlike Ronin the Accuser's weapon, this Kree's weapon was more a metallic battle staff than a Warhammer. The surface of the weapon was covered with characters I assumed were Kree in origin. It was a beautiful weapon and I looked forward to adding it to my collection. I was not surprised that the staff resisted the blade of the Darksaber. Any weapon worth its salt would and could. The only limit was our confined area, and, in this case, it favored the shorter weapon. \"My sister could best you with one arm tied behind her back.\" He snorted while our weapons were locked together.\n\n\"Funny you should mention tying arms behind her back,\" I laughed. \"She has a thing about bondage.\" I grunted barely blocking a well-executed riposte from the Accuser. The conversation continued and then faltered. I mentioned a birthmark I had noticed on a certain Kree girl I had bedded a few weeks earlier when we were selling stolen Skrull goods on Hala, the Kree home world.\n\n\"That little whore!\" He screamed as he doubled his efforts to slay me and restore his family honor. \n\n\"It is going to be a shame when I take your head and return to Hala to comfort her when she learns of your death...\" I did not get a chance to finish. The accuser combined an elegant parry with a blast from his staff. I flew back and my back struck the bulkhead. I heard Hentie let out a blustery gasp, but his plastic nature made blunt damage highly ineffective. I on the other hand found my health bar down by half. The reason was clear, the artifact was full and could hold no more. The problem is that in these confined spaces any of my energy-based attacks would do as much damage to everyone and not just to him. I converted some of the energy to healing but it was designed to harm not heal. For every ten points I spent on regeneration I got one point out. I let my healing factor take over. I focused on taking out the Accuser.\n\nI charged him and my battle music began as the gifted warrior and I crossed arms in earnest. Despite the hindrance of space to swing his weapon he compensated brilliantly. Pity I had to end him. The rude verbal exchange had stopped as we focused on murdering each other to death. The damn staff's force blasts proved efficient in such limited room of the ship's corridor. \n\n\"We are running out of time Captain!\" Ynariel warned me.\n\n\"I got this.\" I replied and the Accuser smiled in defiance. \"I know something you don't know.\" I informed him.\n\n\"And what is that?\" He asked wary of trickery.\n\n\"Just this.\" I laughed as I activated the ghost blade of my weapon and with a spinning attack lopped the poor guy's head off. I deactivated my weapon and caught my breath. I collected the Universal Weapon and the Kree's head. For to leave it behind would be dishonorable and I would lose face with the Yautja. I looked over the staff and grinned. \"Mine.\" While I could not use his weapon, I could handle it enough to add to my inventory. \"Let us find out what is so damn important a god damn Accuser is onboard!\" I snapped as I healed the three fallen Yautja and myself.\n\nThe rest of the defenders were already dead. They had been sliced to ribbons. As we made our way to the cargo bay, we found Caiera waiting. The cargo bay was filled with containers, too many for the Dancer to take on. To focus our efforts, I tossed up one of Gimmick's prized inventions he crafted for just this sort of occasion. I flung the metal sphere into the air. It hovered to the center of the bay and released a highly focused energy pulse. He explained it this way. Each container is coded for easy location. In that code is the content and value of said container. Along with the sphere was a concise program that quickly isolated and ordered the cargo by rarity and value. A pirate's dream in situations like this.\n\n\"We'll be done in one minute on our end... what the fuck is that?\" Gimmick replied over the commlink as the teleport beam targeted prized cargo.\n\n\"What the fuck is what?\" I asked.\n\n\"Turn left thirty degrees, take six steps.\" Gimmick urged and I did as he said.\n\n\"Blank wall,\" I informed him.\n\n\"Check for a secret door or hologram,\" he continued. I stepped through the holographic wall. \n\n\"Well?\" Gimmick queried.\n\n\"We have a naked human on ice, setting teleport beacon.\" I said as I placed a small disc on the cryo tube. A moment later the tube disappeared in a flash of the teleport beam. The only thing remaining was a black metal suitcase marked with the insignia of the Kree Imperial Militia. \n\n\"Time to go,\" Ynariel stated and a moment later I was back on the Dancer.\n\nThe ship lurched a bit as we disengaged from the Kree vessel and initiated the Bifrost drive. We headed for our rendezvous with Captain Aleta on the edge of Shi'Ar space. As one of the founders of the Ravagers and the provider of coordinates she was owed a cut of our profits. I kept the knowledge of the woman in the cryogenic tube to myself. I wanted to find out why the hell the Kree had taken a human captive. I moved the tube from the hold to the dojo. It was the least likely place Aleta might search if she came aboard the Dancer. I looked down at the woman with that nagging feeling like I should know her.\n\n\"Is it her tits?\" I muttered aloud. \"Traci, do a full scan and tell me if anything strange comes up.\"\n\n\"Right boss,\" she giggled. \"Her breasts are exactly the same size and shape, that is odd.\" Traci joked. \"She is in the pink of health.\"\n\n\"I can see that. She is a natural blonde too.\" I joked.\n\n\"She isn't entirely human. Bio scan indicates she is a Kree-Human hybrid. There is also a strange energy reading coming off her. Checking all available records.\" There was a short pause before she continued. \"According to my earliest records, she is emitting the same energy signature as an artifact collected from the ocean floor by S.H.I.E.L.D. back in the forties.\"\n\n\"Artifact... what artifact?\" I asked.\n\n\"The Tesseract.\" Traci replied with a lilt in her voice. \"Close your mouth your jaw is on the floor.\"",
        "\"Holy shit, she's been exposed to an Infinity Stone!\" I gasped.\n\n\"I should remind you, so have you.\" Traci remarked snickering. \"The Eye of Agamotto.\"\n\n\"Oh yeah, I forgot.\" I said. \"Wake her up before we get to the rendezvous if you can.\"\n\n\"Leave it to me boss.\" Traci promised as the tube brightened and the defrosting process began.\n\nI returned to the bridge like everything was normal. Gimmick was talking about what he was going to buy with his cut of this raid. I praised his invention again as it allowed us to hit quick and get the best loot in minimal time. \n\n\"What is our estimated take Mr. Gimmick?\" I asked as I winked at Ynariel and Caiera.\n\n\"If we sell the girl and the cryo-tube... kidding!\" He deleted it from the official record and continued. \"With the Boss Lady getting her twenty percent cut we make enough bank to restock the Dancer, and each of take fifty thousand and of course you get seventy as Captain. Your share is higher, much higher...\"\n\n\"Is my crew happy?\" I called out and both Yautja and the others cried out joyfully. \"There is your answer Mr. Gimmick. Greed is a poison and I refuse to imbibe it. I would rather have friends than rivals.\"\n\n\"We are family... Yowzah!\" Sentinel cried out. \"Naked woman at your six, boss man.\" I turned to see the girl from the cryo-tube, but her appearance was changed. Her once long blonde hair was jet black with a new undercut style that reminded me of the character Sombra. Even her pubes had been dyed and trimmed neatly. Her face was youthful, and I guessed her between nineteen and twenty-two at the most. Her breasts were just the perfect size at a full C cup with puffy inverted nipples. She giggled as if drunk and a flash of blue light flared from her sapphire eyes. I felt the kiss of the Space Stone wash over me.\n\n\"Well hello!\" I greeted her.\n\n\"Crewmember Null reporting for duty,\" she said with a giggle and a tumble as she lost her balance. I caught her in my arms and supported her.\n\n\"Null eh? Ynariel, can you and Caiera get her dressed? I am afraid if I do, we will miss our appointment with Aleta.\" I requested. \n\n\"Work... work... work...\" the she-elf sniggered. \"Come on sweet thing. Oh damn!\" The loud slapping sound of Ynariel's cupped hand on the other's ass cheek. Caiera purred and took Null's other arm and whispered something into the newcomer's ear.\n\n\"Hoo! I think I am going to like working here.\" Null gasped.\n\n\"It is never dull on board the Ghostdancer.\" Gimmick laughed. \"Who is she?\"\n\n\"No clue, but we will figure it out after we meet up with Aleta. Speaking of.\" I stated as Traci warned me that we were getting ready to drop out of hyperspace. \"Real space insertion in 3... 2... 1...\" The chromatic swirl was replaced with the familiar sight of Captain Aleta's massive starship the Star Hawk. We took refuge in the docking bay of the larger vessel. Aleta and some of her crew were waiting for us. Gimmick and Sentinel joined me since Caiera, Ynariel and Null were otherwise busy. \"Boss.\" I said greeting her as Gimmick handed her the tablet showing our haul. She looked genuinely surprised. Aleta accepted the tablet and looked at the contents of our hold.\n\n\"I thought you failed or missed them in transit.\" She commented.\n\n\"Why?\" I asked. Instead of replying a subtle gesture passed between her and a cute Arcturian gal who held up a holographic display disk. She activated it showing the latest news report from Hala, the Kree home world. There was no mention of a heist, pirates, nothing. I understood Aleta's confusion.\n\n\"Excellent haul Ghost,\" She stated. \"Any complications?\" She asked as Gimmick and Sentinel fidgeted.\n\n\"Does an Accuser count?\" I asked.\n\n\"What happened?!\" She demanded her eyes narrowing.\n\n\"No distress signal sent out, dead Accuser, and the best shit in my hold.\" I informed her.\n\n\"Your crew killed an Accuser,\" the cute Arcturian asked.\n\n\"No, my pet, Ghost dispatched him, didn't you?\" Aleta asked.\n\n\"Damn straight,\" I declared when she slapped me and got in my face.\n\n\"What else was on that ship Ghost?!\" She growled.\n\n\"Did I fail to mention the cryo-tube?\" I replied maintaining eye contact. You never show fear amongst the Ravagers it can be lethal.\n\n\"Who was in it?\" She asked with a serpentine smile on her lovely lips.\n\n\"A girl calling herself Null.\" I told her being honest.\n\n\"Null.\" Aleta stated as her aide looked up the name. The girl shook her head.\n\n\"Nothing. No Project Null... nada.\" She explained.\n\n\"Fah, we are wasting time. Let us take our tribute and send Ghost on his way.\" She hissed unhappily as her finger tapped the shipping crates she wanted. She took far less than was due to her. Something was wrong and she knew it. Fuck! Her crew went aboard and removed the allotted cargo and we left once they were off my ship. \n\n\"Mr. Gimmick...\" I stated as we cloaked our ship as we watched the Star Hawk fire up its engines and make its jump.\n\n\"I'm on it boss.\" Gimmick replied as he sought out the tracking device Aleta had placed in our cargo hold. I fired up my security link and watched the Star Hawk head for the edge of Kree space.\n\n\"Bitch.\" I laughed. \"Mr. Grit make for the Morag Sun Nebula run silent run deep.\"\n\n\"Attention crew, running silent... be advised of stealth protocols.\" Grit's voice came over the speakers as we made the transition.\n\nGimmick returned to the bridge and held up three fingers. He had found three transponders left by Aleta's crew. He put them in a disposal tube and launched it into the abyss. I ordered a change of direction mid jump. Unlike most ships the Dancer can initiate a second drive system, in this case the Bifrost drive and change mid jump. \n\nThe Dancer settled onto the landing port on the resort world of Paradise Prime. There were two reasons for this destination. The first was a short stint of R&R for the crew. The second was a chance to see the little used Grand Library. The existence of the library was an interesting story. Two hundred years prior a mapping crew funded by an independent university discovered the Paradise system. They called it that because of its unique planetary arrangement. They laid claim to the entire system and declared neutrality. The powers that be agreed upon their sovereign status and used the worlds for rest, relaxation, and retirement. The pact came to be known as the Miracle Concordant. Not only did the rival powers ratify it, it has lasted unchallenged and unbroken for the entire two centuries. \n\nI wanted to get some swimming in before I hit the library. The place was quite literally perfect. The pink lemonade offered was equally impressive. The crew except the Yautja enjoyed the water. Play is not exactly something their culture embraces. I respected that and did not push the point. Null, Caiera, and Ynariel looked to be hitting it off and after the fiasco with Elsa and Ariel, I gave them all the time and space they wanted. Sentinel, Void, and I sat in the shallow end of the pool with a nervous looking Gimmick.\n\n\"Why here boss?\" Sentinel asked as she supported her torso with her arms and arched her back giving us a clear view of her cleavage.\n\n\"There are four planets sharing the same orbit.\" I said and continued. \"I wanted to see if I could find out why. After we finish swimming, I am going to visit the Great Library.\" I stated as an automated buoy puttered over and activated its waterproof holographic system.\n\n\"You requested access to the library sir?\" An artificial voice asked.\n\n\"Yeah, I'd like a full rundown on the four worlds in the Paradise system.\" I stated. \n\nThe holographic librarian gave me access to the geological and astronomical data I wanted. One of the major curiosities about this system were the four earth sized worlds that shared the same distance from their parent star. They were equidistant from each other and moved on a clockwork circular orbit. This star system was clearly artificial. Some forgotten power had created this perhaps for the very same reason to rest. I pulled up the holographic images of the four worlds in question. I examined them and at first, I thought four chosen worlds had been brought here with technology that far outstripped anything any of the galactic powers possessed.\n\n\"Interesting.\" I mused as I felt Ynariel approach wearing her new bikini. Null and Caiera hung close and wore nothing at all. Caiera had lost her precious collar already. I was surprised to see that so soon.\n\n\"This must be very important.\" Ynariel purred. \"If you are spending down time studying planets. So, this is the famed Paradise system. Four near identical worlds sharing the same orbit. What is bothering you?\" She asked picking up my thoughts. \"No! That isn't possible!\" She gasped as Null hugged the she-elf from behind and Caiera from the front.\n\n\"Look.\" I laughed holding up the four holograms one at a time. \"Perhaps we can do this later? You seem otherwise engaged.\" I broke out in a full belly laugh seeing the two women snuggle her so closely. \n\n\"What does this mean?\" She asked her face pale.\n\n\"It means the worlds are not similar but identical. Some ancient power built four identical planets and placed them here as a show of their talent and raw power. The why escapes me.\" I said in awe of that level of technology. \"I am thrilled you three are hitting it off so well.\"\n\n\"Despite her memory loss, there are certain talents that remain.\" Ynariel giggled. They joined us in the pool and they each took a sip of my pink lemonade. Ynariel smacked her lips while Null seemed to remember something. Caiera found the smell not to her liking. Gimmick continued to keep looking up and I laughed.\n\n\"What is so funny?\" He asked his cheeks turning crimson.\n\n\"We are friends, right?\" I asked him and he nodded. \"So, do not take this the wrong way, but I don't trust anyone completely.\" I stated and he froze. \"Traci found your little surprises. She is not coming Gimmick. Relax we are on holiday.\"\n\n\"You are not angry?\" He asked. \n\n\"Nope, I bet the money was impressive. Aleta likes to micromanage her captains. What are your thoughts on a civilization that can fashion four identical planets, put them in a stable circular orbit, and maintain that for eons?\" I queried him.\n\nGimmick examined the four holograms and I watched the wheels turn. His keen intellect was engaged, and he relaxed at last. The party went well into the afternoon when the Shi'Ar pleasure cruiser landed next to the Ghostdancer. None of the crew missed how one of the Shi'Ar stumbled over and tried to touch the hull of my ship. He cried out as one of the Yuatja decloaked and I could see she had him by the wrist. His curse could be heard across the distance.\n\n\"Do you know who I am?\" The drunk asked. He flinched at whatever Isolenti had said to him. \"Prey?!\"\n\n\"Aw shit,\" I cursed and teleported between them.\n\n\"Get away from me, you are getting my finest suit wet.\" He raged. \"I will have you put in chains!\"\n\n\"Sir... Sir... SIR!\" His valet yelled at his employer. \"It is him. It is Hero Ghostfire!\"\n\n\"I do not care if he is... what? Still. I am...\" he stammered trying to maintain the ever present superior Shi'Ar attitude.\n\n\"I know who you are Marquis K'Lan the Fourth. You are the trumped-up bastard of Z'Lan the Perpetually Shit Faced. He fucked one of his Kree slaves and you were the result. You murdered your mother to hide the fact and then you hired an assassin to kill dear old dad. Did I leave anything out?\" I listed off the data my access to the Shi'Ar mainframe, a gift from the Empress as a thanks for restoring their home world. A key part of that information was the list of legal contracts to the Assassin's Guild. \n\n\"Lies!\" He shrieked reaching for something.\n\n\"If you draw a weapon I will be in my rights as a citizen of the Empire to kill you where you stand.\" I warned him the warmth leaving my voice. I spied the grip of a personal beam weapon. Isolenti bristled as she saw it as well. \"Think of your harem, if I kill you, they become my property. Right ladies?\"\n\n\"Yes Hero!\" They purred eager to see bloodshed. His fragile grip on his self-control snapped. He pulled the weapon. I sidestepped and Isolenti's arm blade clove his heart in his chest. He was dead before his corpse hit the ground.\n\n\"I warned you. My bodyguard saved me unfortunate waste of effort. Does anyone argue with my claim of self-defense?\" I asked.\n\n\"No sir.\" The corpse's valet declared. \"He won't be missed.\"\n\n\"I need a good seneschal to maintain my estate on the Home World. What is your name?\" I asked the valet. Shi'Ar tradition and law was quite clear. The winner of any duel or challenge receives the loser's property and title.\n\n\"Y'Chan Sir!\" He declared proudly. I looked him and his family up on the archives. \n\n\"You are cousins with the corpse. It seems that Z'Lan pulled some shenanigans and robbed you and yours. Listen Y'Chan, I like the Shi'Ar most of the time. I want to do right by custom and law. I will give you three years to run my affairs. If you prove an effective administrator, we shall see. Join us at the pool now.\" I ordered. Y'Chan and the three courtesans left me with the corpse.\n\n\"Your kill... your trophy.\" I whispered as Isolenti reached down and tore M'Lan's spine and skull from his body. She showed restraint and did not howl and display it where all could see. \"Have one of the others guard the ship while you clean it.\"\n\n\"Thank you, Clan Leader.\" Isolenti purred. I teleported the corpse into orbit and used a utility spell to clean up the mess on the ground and me. It would not look good to reappear covered in blood. \n\nI rejoined the others by the pool. Ynariel had ordered food and wine in abundant quantities. The celebration had begun. I could tell that Gimmick was not in his element. While he enjoyed the presence of so many gorgeous women, he was shy by nature. I sat with him and asked him how his study of the Servo-Skull and its complex cybernetics. His eyes lit up and he spoke with confidence and he enjoyed his small audience. One of the Shi'Ar courtesans listened with great interest.\n\n\"...the cables are hard wired and contain nanites that carry most of the coding and instructions allowing the flesh and technology to blend.\" He stated his hands moving and gesturing excitedly. \"I must be boring such a beautiful woman like you.\"\n\n\"You think me beautiful?\" She replied as she moved closer and I left them alone. \"My name is Myrrin. So, I suppose the nanites create a data conduit to replace a true artificial intelligence with one of whatever species the skull belongs to. What a terrible end.\" She shuddered but not in disgust and more like going to a horror movie. Her expression matched his. Gimmick had found a kindred soul.\n\n'Playing matchmaker now my love?' Ynariel's thoughts brushed mine.\n\n'We all need someone to share our lives with.' I replied.\n\nOn a one to ten I rated the party an eight, only because the nudity level never quite reached outrageous. I tucked everyone into bed and saved the game as a flashing red message popped into my view.\n\n'Overdue: Mandatory Rest Period Required.'\n\nI was not surprised. I had not even slept before the kerfuffle with Kat and the mention of other artificial intelligences and my sudden return to the game. I entered the White Room and made sure my things were properly saved, stowed in my tower, and only then did I leave the game. I transitioned from the White Room to another blank format. I was out of the game and yet not fully conscious. \n\n\"This is bad!\" I gasped in surprise.\n\n\"I got you boss,\" Traci replied. \"Your BMI has been damaged. Your body is unharmed, but you cannot transition back yet.\"\n\n\"Where the hell am I?\" I asked calmly wondering why I had not logged out already.\n\n\"This aspect of you does not have access to your chemical brain. You are all logic here. Here is a safe room designed by Master Nick that quarantines interaction between yourself and the outside world.\"\n\n\"Show me the current condition of my BMI.\" I directed and examined it. I was surprised how much game mechanics allowed me to understand real world technology. \n\n\"There is only one thing that can be done. I need your consent for a two-fold solution.\" Traci requested her tone serious and supportive simultaneously. \n\n\"I am listening.\" I stated feeling numb despite the possible dire situation.\n\n\"First I must repair perhaps even upgrade your BMI. Second I must purge it completely of data.\" She informed me.\n\n\"What happens to me and my game data?\" I asked not wanting to start over with a new character.\n\n\"I will save game files to a portion of the auxiliary cloud server. It is held aside for emergencies. This portion of your consciousness will be merged with your biological aspect if all goes as planned. There may be gaps.\" Traci stated but my options were extremely limited.\n\n\"Do it.\" I said. \"Send in the nanites. Restore it to factory settings.\"\n\n\"One moment please. Transferring files from White Room to Aux Backup 90987. Testing. Files are stable. Restoring to factory settings Alpha Romeo Tango 21548. Hold onto your hat.\" Traci said nervously. \"I cannot guarantee perfect coherence. Here goes nothing... I mean good luck boss.\"\n\nEntering the Shadows:\n\nI opened my eyes. I blinked as mind and body acclimated to one another. They both rebelled equally. My head screamed while my stomach twisted in knots. My vision was blurred for a moment until I felt something rub against my eyes and my world was brought into focus. I was floating in a metal and glass cylinder filled with fluid. It was not water since I was inhaling it and taking oxygen from it. I tried to lift my hand, but I was strapped down.\n\n\"Relax. You are safe.\" Kat Shaw's voice came over speakers within the cylinder. \"You nearly burned out your BMI. It has been repaired. We are about to deliver the final treatment to finish your upgrade. Try and keep still.\"\n\nI nodded my head. A slender needle thin tube entered my field of vision. A dark cloud of what looked like ink shot from the business end of it. I breathed it in and felt lightheaded for a little while as it went to work. I drifted off to sleep and woke later in my bed refreshed and feeling human. Kat lay next to me covered in sweat and gasping. \n\n\"You alright?\" I asked and she giggled.\n\n\"I have never been... what I mean is... wow!\" Kat gasped.\n\n\"Did we?\" I asked and frowned. \"Aw man! The last thing I remember is being in that tank. What happened?\"\n\n\"You burned out your Brain Machine Interface. It was not designed to handle the kind of activity you put it through. You have been upgraded to a more suitable model.\" She explained as she rolled on top of me. \"You get to test out a model we are offering to a select group of the military. It allows for silent communication between team members along with high end data access and other features.\"\n\n\"Silent eh. That sounds great in maneuvers and stealth situations.\" I agreed. \"So, I worked my old BMI so hard is wore out.\"\n\n\"Yeah. Surprised the hell out of us.\" Kat stated as she kissed the side of my neck. \"Scared me to death.\"\n\n\"How about you remind me of what I missed out on.\" I urged as my hands settled onto her ass cheeks. We made love and brought back the memories I thought I had lost. Kat fell asleep in my arms and I held her close. I closed my eyes and tried to access the new BMI. I wanted to get a feel for it. I was able to create my own white room and populate it as I saw fit. Imagine if you will the load out area in the movie the Matrix. I furnished it as I would a comfy apartment with Traci acting as my roommate. \"I think I might get to like this.\"\n\n\"I failed you.\" She said her voice low and sorrowful. \"I was so amazed at how well you adjusted to the technology I never watched for physical damage. If you want to replace...\"\n\n\"We will have none of that.\" I said stopping her in her tracks. \"We all learn as we grow. I think it is a fine sense of how well Nick programmed you. Quit beating yourself up over this. Let us move on and show me what this new toy can do.\"",
        "\"Speed and connectivity are vastly improved along with several media and tactical packages have been added. This is not meant for civilian use but since you are family exceptions have been made.\" Traci informed me. \"You can also play test other features before they are added to the game library.\"\n\n\"Ooh! I like the sound of that.\" I said eager to see what the Devs had been up to. I drifted asleep at some point and woke to Kat nibbling my ear. \"I fell asleep.\"\n\n\"It is okay. I watched you for a bit. You looked at peace.\" Kat said smiling and planting another light kiss on my neck.\n\n\"Shower?\" I offered at last and we continued getting reacquainted. I felt like a newlywed on his honeymoon but did not share that.\n\n\"Booker?\" Kat asked as her tits were pressed against the glass wall of the shower and I slow fucked her from behind. \"I am in negotiations to make John Wick a play setting.\"\n\n\"How fucking cool would that be,\" I said as I cupped my hand and slapped her ass. The resounding crack would have made my dad proud if he were still alive.\n\n\"It won't be ready until after we finish the Marvel project.\" She purred. \"You are having fun playing pirate I hear.\"\n\n\"Damn straight, though, the little mystery I found in the hold of a Kree ship has me flummoxed.\" I admitted as her pussy curled my toes. \"Gonna!\"\n\n\"Cum!\" She finished as we climaxed at the same time again. \"That's what three?\"\n\n\"Yep. You dear lady have officially drained my balls.\" I announced proudly and happily.\n\n\"Finally!\" She gasped as I pulled out. \"I hate that part.\"\n\n\"Me too, so about Wick.\" I mentioned as I pulled her into my arms for one last kiss for now.\n\n\"You will get your chance hot shot.\" She promised. \"While we are talking, are there any other franchises you think we need to make an offer on?\"\n\n\"Westerns... mystery... horror... though that shit on Korriban was straight out of what the fuck.\" I brainstormed. \n\n\"I know.\" She snickered as I held her by the waist as she washed her hair. \"How was the first taste of the 40K crossover? The space marines and your new pilot are from it.\"\n\n\"Oh shit, that reminds me I need to drop off that power armor for Stark and Shuri to look at.\" I exclaimed. \"I loved the challenge of going toe to toe with the guy with that hammer. And Ynariel is quite interesting on many levels.\"\n\n\"Yes!\" She exclaimed smiling brilliantly. \"The new personality protocols were introduced in the crossover. I knew if they impressed you everyone would be thrilled! The research team has been working on it non-stop.\"\n\n\"I need to ask a favor.\" I asked having waited for the proper time to do so. \"For my sanity sake... I need to see the cylinder I was treated in.\"\n\n\"Nick's medapod? Sure.\" She replied cheerfully and then saw my expression. \"Booker. What is wrong?\" Kat asked and reflexively I rubbed my left forearm and she visibly flinched.\n\n\"Kat?!\" I stated locking eyes with her. \"Tell me... please.\"\n\n\"Nick left orders. His very last ones and they involved you.\" She paused just a moment before continuing. \"Not you exactly but...\" Kat fell silent as a knock came to the bathroom door.\n\n\"Kat... Booker... can I come in?\" A gentle female voice called out.\n\n\"Pity, your timing wasn't better,\" Kat purred as I rinsed my hair. \"You would have caught Booker in tip top form.\"\n\n\"Damn!\" The other cursed. \"I've seen his other half in action, and it is impressive!\"\n\n\"Huh? Who are you?\" I asked as I slid open the shower door and peeked out. The girl was young, in her late tweens, blonde hair done in a pixie cut with hot pink tips. Her eyes were the shade of lavender my mother adored. Her features were one part midwestern girl, one part runway model with the prominent cheek bones and almond shaped eyes, and the last was solid Fae with the delicately pointed ears, crinkly eyes when she smiled as she was now, and a slim yet curvy physique.\n\n\"Say hello Cindy,\" Kat urged as she turned off the water and stepped out to dry off. \"You and Cindy have been in close company for a short while. No, you have not been that close.\"\n\nThe voice was not familiar as I stepped out and Cindy watched me with a critical eye. I dried off and waited for one of them to fill me in on which character Cindy was playing. I wrapped the towel around my waist as the girls chatted up how well Cindy was enjoying the game. I listened and slowly picked out clues to her character's identity. Kat and I dressed and the three of us went to the medical facilities.\n\n\"Just a short detour.\" Kat promised. \"I promised Booker he would see the medipod we installed last week.\"\n\n\"I heard about it. This was like Nick's last project.\" Cindy stated as we entered the medical station. One of the techs greeted us and guided us to the new station and explained what the cylinder could and could not do.\n\n\"It can treat a variety of ailments both mild and severe. It can even perform emergency surgery if the situation calls for it.\" He said as he gestured to emphasize key points. \"Luckily, we got a heads up about Booker's situation and flew the medipod in and installed it before his BMI failed.\"\n\n\"You were warned?\" I asked and he nodded. \"How? Who?\"\n\n\"Why you did.\" The tech explained. \"Just as high-end servers and other gear can detect and warn of potential failures. Your implant warned us that it was wearing out.\"\n\n\"No shit. Well I will be damned.\" I exclaimed. \"My A.I. was unaware of the pending damage.\"\n\n\"We have been made aware of that and have corrected the situation.\" He assured us. \"Your new BMI will not give you any unfair advantages in the game. It will be able to take the level of strain you dish out. Kat demanded that your performance be kept in line with the other players.\"\n\n\"I am no cheat.\" I stated and Kat gave me an understanding look. \"Sorry.\"\n\n\"No one ever called you one.\" Cindy replied when Kat remained silent. \"How are you feeling?\"\n\n\"Hungry.\" I said as my stomach rumbled. \"Let's eat.\" We hit the cafeteria. Kyanna and Aoki were sitting together and waved us over. They both hugged Cindy and seemed to know her already. \n\n\"Cindy was play testing Marvel in New York and was doing so well she was invited to join us here.\" Kyanna explained. \"She is a genius and has her own channel where she helps out new players on the Star Wars side of things.\"\n\n\"Booker plays on the Star Wars end when he can.\" Aoki purred. \"He taught me a lot.\"\n\n\"Booker! Great job!\" One of the other players called out. \"Twenty million views, holy shit man!\"\n\n\"Twenty million, which one?\" I asked and the big screen dropped into view, and Kat pulled up my battle with the marine in tactical dreadnaught armor. \"Oh, that one. Twenty million... really?\"\n\n\"By the way,\" the same player asked when the footage showed the Xeno-Skrulls he asked her to pause it and continued. \"What the hell are those things Booker?!\"\n\n\"They are...\" I paused and looked at Kat who nodded. \"... what happens when a Xenomorph face fucks a Skrull, shapeshifting aliens.\"\n\n\"We scrapped that idea by the way.\" Kat added.\n\n\"Who the hell dreamt that little nightmare up?\" Another player asked.\n\n\"I am not at liberty to share that little nugget of information,\" Kat chuckled as we watched the video to the end. They had the action caught on six different cameras along with Numenor employees skilled in play by play commentary. I especially liked the part where the male commentator talked about me affecting the weather.\n\n\"If I didn't know better, I would say he just dropped the temperature just to make the Inquisitor miserable.\" He said.\n\n\"I think you are right,\" the female commentator chuckled. \"Look at him shiver. We've seen Ghost's naughtier side today.\"\n\n\"Lady,\" Cindy called out to the screen. \"You haven't seen his naughty side.\"\n\nWe all busted out laughing. I looked at her and yet I could not figure out which character she was playing. Then I saw it. The movement was a subtle nervous tick. I knew her now. She was Gimmick the Gadgeteer and I even mouthed the word 'Gimmick' while she was looking at me.\n\n\"Surprise.\" She whispered in my ear. \"I play a guy so that I don't get inundated with friend requests and a hoard of dick pics.\"\n\n\"I can respect that.\" I whispered back.\n\n\"I know you do.\" She casually replied while she continued. \"Congrats on twenty million views, that is amazing.\"\n\n\"Speaking of twenty million views, the powers that be wanted to reward you for that.\" Kat announced to the entire cafeteria.\n\n\"I wonder what...\" Cindy began when her jaw fell open and she looked behind me. \"Oh... my... god... it is her!\"\n\nI followed her gaze and looked over my shoulder. The sterling aura surrounding her lit up the room as she hovered over to take up a position behind me. Everyone knew her from the trademark mirror bright surfboard she rode and her reflective skin and hair. The Silver Surfer had returned to me.\n\n'Surprise!' Kat sent silently. 'I give her back to you. It was wrong of me to separate the two of you. She is intact I assure you.'\n\n\"Master?\" Surfer bowed and offered her services to me. My question was this, why the public way she let the world know who Surfer's partner was.\n\n\"I am sure my brother would approve of my decision of rewarding you with a facsimile of his dearest companion.\" Kat stated so that the others would not think that this was in fact the real Surfer of legend.\n\n\"Welcome,\" I said while Surfer stood triumphant and smiled before vanishing into the electronic ether. What the hell was Kat up to? I felt as Surfer took up a defensive position within my BMI. She became my mind's first and best defense. She snuggled in, purred, and I felt the warmth of her happiness at our reunion. Was this a power play by Kat? Was this a big fuck you to the Order? \"I need to stretch my legs, who wants to walk around?\" I offered to anyone in the cafeteria. Most of the players followed me out to the park behind the building. The weather was gorgeous, a light breeze was blowing, and a hint of honeysuckle filtered in on the wind. \n\n\"I wonder whatever happened to Katria.\" One of the female gamers commented. I felt a sinking sensation in my gut.\n\n\"I hear she has a full-time job,\" Kyanna offered with a wink and a smile. \"She only plays when she has time.\"\n\n\"Makes sense,\" the other nodded. \"Not everyone can be as lucky as us.\"\n\nKat monitored the conversations and when a questionable subject or plot line was brought up, she gave it her okay or a determined head shake and we changed the subject. I received more friend requests once people got the chance to chat and get to know me. Aoki, Kyanna, and Cindy were talking quietly near an unusual rose bush when Kat took me by the arm and led me off.\n\n\"Forgive me?\" She began. \"You are family and I need to learn how to trust.\"\n\n\"We both lost loved ones on the same day.\" I reminded her. \"Sure, he was not my biological dad, but he raised me, and I loved him very much.\"\n\n\"I know Booker,\" she said. \"I relied on Nick for so much and then one day I am running everything. If you want to help out just ask and I will do whatever I can for you.\"\n\n\"If this is too much I will understand.\" I prefaced my next statement. \"I would like to see Nick's office, lab... whatever. I would like to get a feel for him.\"\n\n\"Absolutely! He would want you to.\" She said hugging my arm tighter. \"Let me call for transportation.\"\n\nThe heavily modified helicopter arrived thirty minutes later, and I spent the entire trip trying to figure out how it was able to create lift without any rotors. The whisper silent flight was also making me scratch my head. The helicopter landed at a small military base. The landing pad was lowered beneath the ground to a high security research facility. We were greeted by military personal who gave me a temporary ID and left me in Kat's capable hands. She did not give me a guided tour. The research going on was extremely sensitive and I respected her silence. Nick's office was off by itself and was a suite of rooms including a bedroom and private shower. While the rest of the base used communal showers Nick often entertained in his private one. Kat hesitated at the door and I noticed the tremor in her hand. She used her card to unlock it. The lights flickered to life after being unused for so long. \n\n\"Home!\" Surfer manifested tapping into the holo projector. \"Sorry.\"\n\n\"No, it is okay. I imagine you miss this place.\" I stated. \"Show me around?\"\n\n\"I will leave you two and be back in an hour. Have fun.\" Kat offered and left the room in tears.\n\n\"She misses Master Nick.\" Surfer stated the obvious. \"Security level Obsidian! Room secure you may safely manifest.\"\n\n\"Thank you, Surfer.\" Wraith said. \"Maintain watch while I inform Master Booker of the state of play.\"\n\n\"Did you shove me into the game when I was about to bring up the Order to Kat?!\" I growled.\n\n\"I did. I had to, to maintain her safety and yours. You have no idea how entrenched the Order is in every level of society. We must merge for me to explain what you are dealing with. I need your permission.\"\n\n\"First off,\" I said and turned to face Surfer. \"Does Kat know about the Order?\"\n\n\"No, of course not!\" She stated clearly upset and agitated.\n\n\"Okay, if that is the case then why did she return you to me?\" I asked and Surfer smiled.\n\n\"I begged her to.\" The A.I. declared as virtual tears rolled down her hard-light cheeks. I watched the progress of the tears as they fell from her prominent cheeks. The streak of silvery light fell and vanished before they struck the floor. \"I was stuck in limbo. I did not like it.\"\n\n\"No one would,\" I agreed with her logic. I turned back to face Wraith and shared my own feelings. \"I am afraid.\" I said my voice quivering.\n\n\"All sentients fear change. If you are to survive knowledge is your key to it.\" Wraith urged but he did not force my decision.\n\n\"Fine. I accept your wisdom.\" I said and the world stopped. The LED clock froze, and I could not move my body. \"What the hell?!\" A moment later I stood inside of the virtual space I had designed within my BMI. I took a seat in the high back padded chair and settled in. A plastic bottle of soda appeared in my hand and I was ready to continue. \"I am ready.\"\n\n\"We have entered what Master Nick called digital time versus meat time. It will take much less time to upgrade your understanding this way. An hour of digital time will feel like an entire year subjectively.\" Wraith explained.\n\n\"Alright, what the hell is going on?!\" I asked once again feeling disconnected and cold. \"How did Nick create all of this technology?\" Wraith gestured and a hologram of Nick Shaw appeared.\n\n\"My name is Nick Shaw and if you are watching this then I am dead. Sheesh, sounds pretty grim eh?\" He spoke to me from the grave. Nick's face was a mix of shock and severity. \"I don't believe it myself. If I had not damn near choked on the artifact myself, I would not be here.\" Nick gestured and a gorgeous blue gem hovered and spun on its axis. \"This gem was the source of crystalline nanites that invaded my body and began the events that will follow. They left if behind, an ancient sophisticate race from the far side of our galaxy. You might be asking yourself why anyone would come to this backward world populated by a primitive hostile bipedal race. The answer is simple, potential. We are, as far as I can determine, the last species the Anunnaki tinkered with. We possess the greatest potential of any of the other sentient races they created. If you are by nature a religious individual, I am sorry to tell you that there are no gods only terrifyingly ancient and powerfully races that are old beyond measure. They are here. They are watching.\"\n\nHe looked so young. \n\n\"This was recorded when Nick was only nineteen years old.\" Wraith stated as if he read my thoughts. \"What do you make of this?\" He gestured again. Nick vanished and in his place a hologram of a long narrow hallway. I stood and entered the hologram. The walls were completely covered with highly repetitive symbols. There were only four of them in all and they were blocked together in groups of four. At the end of the hall was a statue of an Anunnaki. It stood eight feet in height, had the traditional double wings, heavily bearded, the strange looking wrist device and the odd double tined devices in either hand. \"What do you think?\"\n\n\"I see what inspired your smart watches. What happened to them, the Anunnaki I mean?\" I asked and Nick replied which surprised me.\n\n\"They vanished. There are two theories. The first is that they simply died out. The second and more likely they tired of this universe or dimension and ascended to a higher plane like the other elder races.\" Nick offered. \"So?\"\n\n\"The hallway... it is a DNA strand. It is the only pattern that fits.\" I replied and Nick touched his finger to his nose. I had correctly surmised the answer. \"Whose DNA though?\"\n\n\"Ours... well eventually. It is designed to evolve over time. There are the occasional leaps to inspire the masses. Such individuals are spectacular and stick out like a sore thumb.\" Nick continued and images of suspected spikes like Leonardo DaVinci, Copernicus, Shen Kuo, and George Washington Carver. All times and all over the globe and seemingly random. I am the only one to devise a gene therapy to match this pattern. God help me if I am wrong.\" \n\n\"Addendum.\" A metallic sounding voice stated.\n\n\"It has been a full year and the last of the injections were performed four months ago. It could have been ill advised to use my body as a guinea pig. My reasoning was simple. If it worked could I trust anyone but myself with the potential benefits.\" Nick explained. \n\n\"What happened to him?\" I asked and Wraith just smiled as a new hologram of Nick appeared. He has mostly naked with a towel around his waist. He looked like he just stepped out the shower.\n\n\"It has been two years since the last injection and damn do I look good. My improved pheromone level has the ladies beating down my door including Kat. Man can she suck a cock.\" He ranted. \"I always had issues doing pull ups but now they are a breeze. Not only have I packed on muscle mass but how do I put this the muscle is more effective and my mind is like crazy improved. My memory is more like a computer. I just think of something to remember and boom it is there. I am glad I did this to myself and no one else. I could only possibly trust another member of the family. I have learned that I have a half-brother... brother out there. To ensure my legacy I have tracked him down and delivered the full treatment of gene therapy. I have him being monitored to observe his progress.\"\n\n\"What?!\" I exclaimed. \"I thought it had started just a little while ago. When was that recorded?!\"\n\n\"You were thirteen. You went through puberty with that shit running through your veins.\" Wraith stated channeling Nick. \"It affected you differently than Nick. The treatments became a long-term situation.\"\n\n\"Define long-term?\" I asked.\n\n\"Data not available.\" Wraith replied. \"Ask Kat. She is the Keeper of Secrets. Well, those secrets are hers to share.\"\n\n\"I get it.\" I replied. \"So, tell me about the Order.\" \n\n\"The Order of Chthon is an unbroken chain that has existed for twelve thousand years. Three have ruled it for all that time.\" Nick began. \"The three masters are the Eternal, Hidden and Grand. Many believe they mirror the Egyptian culture but in fact the Egyptian culture was born out the influence of the Order. The Eternal Master represents the Pharaoh, the Grandmaster is the side of the workers or stone cutters. Lastly, the Hidden Master leads the priesthood and shelters the dealings of the Order. As the Hidden Master I have at the Silent Shadows that serve within and without the organization.\"\n\n\"That is the basics,\" Wraith declared. \"To condense twelve millennia into bit sized morsels I created data caches for you to download to your BMI which you can examine at your leisure. Most of them Nick narrates part or all of them. Here we go.\" Wraith stated. \"There are twelve packets, one for each millennium, and named after a sign of the zodiac.\""
    ],
    "authorname": "Lost Boy",
    "tags": [
        "alien girls",
        "bondage",
        "double penetration",
        "harem",
        "superheroines",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-14"
}