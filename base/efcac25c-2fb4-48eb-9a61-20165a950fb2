{
    "title": "Falling Snow Ch. 04",
    "pages": [
        " It's been a little while. Longer than I wanted. I could write an entire summary of what's been happening in my life that's delayed this chapter, but I won't. TL;DR version: Life happened\n\nJust a heads up, there's a bit of violence in this chapter. I wanted to let everyone know, since this is the first time I've had on screen violence in one of my stories. Don't expect these warnings to become a thing. I consider the \"Erotic Horror\" tag to be warning enough for most content. So the only time you'll see a warning, from here on out, is when \"I\" consider the content to be out there. You've been warned, enjoy.\n\n****\n\nDinner was always an interesting time to be out and about on campus. Trails of students stretched from every dormitory to the student union in the center of campus. The spectacle was a familiar one. Every evening, students the world over went in search of food and fun. At this college that meant joining the line of people trekking to the center of campus. \n\nThey reminded Tom of the threads of a spider's web, each thread connecting a building to the central hub of the student union. As Tom looked out the window, he couldn't help but be reminded of the neat, orderly lines of lambs being led to slaughter. The grimy windows of the cafeteria partially obscured the faces of the students on the other side of the glass. It gave them a murky, almost inhuman look. Endless streams of faceless bodies, all moving with a single minded goal in mind. Eat, consume, survive. How boring. \n\nTom shook his head to clear away his train of thought. I've been spending too much time around supernatural predators, he thought. Maybe I need to get out more. \n\nHe'd been in a melancholy mood all day and he wasn't quite sure why. It might have something to do with being unable to find his phone. He always felt naked without it. Although he suspected that his mood went deeper than something so trivial. He felt disconnected, like he was cut off from the world around him. Tom was always quiet. Being an introvert by nature, it wasn't unheard of for him to spend a great deal of time in the company of his own thoughts. But this felt different somehow. He'd spent most of the day brooding in the storm clouds of his own thoughts and only one topic was worthy of such intense focus, Shyira. \n\nTom was deeply conflicted about recent events. On one hand, they were the most exciting times of his life. On the other, he had been made party to some truly dark events. Summoning demonic creatures, murder, arson. Tom felt like he was perched on the edge of a wide abyss, a dark chasm that waited to swallow him whole if he wasn't careful. \n\nHe looked away from the window and surveyed his surroundings. The cafeteria looked entirely different in the evening. The overhead lights had been turned down as part of a campus wide energy saving initiative. The incandescent lights on every table were meant for ambiance over function. The result was lighting that was soft and dim. Tom liked it, not a flame could be seen but the entire room seemed to glow with the golden hue of candle light.\n\nHe sat alone at a small table in the corner of the room. His half eaten food lay in from of him, little more than background decoration for the table at this point. The place was packed. Every table was filled to the brim with students. Groups of students stood overlooking the room, looking for the much coveted table space. Everywhere he looked he could see the signs of a healthy student life. People laughed, smiling as they recounted their day and made plans for the coming night. There was a certain amount of anonymity that comes with a large crowd of people. It was always easy to blend in when you were just another face in the crowd, another part of the background noise of a mass of people. Even the hungry eyes of the people searching for a place to sit seemed to pass over Tom. There are few places lonelier than being surrounded by a crowd of people, he thought.\n\n\"Mind if I join you?\"\n\nShe couldn't have been more than a few feet away and yet she had to all but shout to be heard.\n\nTom looked up to find a tangled mat of brown hair occupying the center of his vision. A pair of intelligent eyes, magnified by thick glasses, stared back at him. She stood beside his table with a straight back, awkwardly holding her tray of food and waiting for his answer. The look she gave him spoke volumes, like his invitation to sit was somehow important. He had no real reason to refuse. Besides, his mother would smack him up side his head if he was ever rude to a lady.\n\n\"Sure, have a seat.\"\n\nThe girl sat directly across from him. Tom watched as she arranged her food in swift practiced motions. She squared her tray with edge of the table before setting her drink in front of her. She finished up by setting her silverware on top of her napkin to the side of her tray.\n\nA place for everything and everything in its place, he mused.\n\n\"I thought for sure you would be dead by now.\"\n\nTom's eyebrows rose slightly at that. An interesting opening statement.\n\n\"Why's that?\"\n\n\"Horny idiots that summon succubi always get their comeuppance.\"\n\nTom gulped. That's not what he wanted to hear right now.\n\nWait, what? He thought. His brain finally caught up with the conversation.\n\nRealization dawned on him, \"You're a witch?\" He said, in that awkward whispered shout of someone trying to heard and not be heard at the same time. \n\n\"Warlock!\" She snapped. \"Don't be sexist.\"\n\nShe didn't seem to care about being heard, not that it mattered with all of the people around them.\n\n\"Um,\" he said, a little bewildered. \"Sorry.\"\n\nShe ignored him. \"So what family are you from?\"\n\n\"What?\"\n\n\"Family, what family are you from?\" She asked again, a touch of irritation in her voice. \"You obviously have some magical talent. Although it can't be that much talent if you ended up in this third rate school.\"\n\nHey! He had to try really hard to get into this school. This girl was kind of stuck up.\n\n\"You know you go to this school too.\" Tom said, suddenly defensive.\n\n\"I,\" she said, emphasizing the word, \"am being punished for refusing to be married off to an asshole of good breeding.\"\n\nTom shook his head to clear the cobwebs. This conversation was going off in a strange direction. \n\n\"You know; I don't even know your name.\"\n\n\"Sara,\" she said simply. \"You're playing a dangerous game you know. Getting yourself involved with creatures from the pit.\"\n\nWhat the fuck! \"It's not like I had much of a choice.\"\n\nSara rolled her eyes. \"Right, because men secretly hate having mind blowing sex with demonic whores.\"\n\n\"It's not like that!\"\n\nSara was about to respond when she suddenly stopped. Her demeanor changed in an instant as her muscles tensed. Her eyes shot widely around the room, looking for something she couldn't quite make out.\n\n\"Listen, this is just a standard wizard's sit down. You don't fuck with me and I won't fuck with you...yada yada yada. I just wanted to add that I think you're an idiot for fucking with creatures from the pit.\"\n\nWith that she got up, leaving her untouched food sitting on the table.\n\n\"Hey wait.\" Tom called after her.\n\n\"See you around Tom, try not to die.\"\n\nTom lost sight of her as the crowd engulfed her. Well that was ominous. \n\nA commotion in the crowd caught his attention. The sea of unwashed masses parted in front of him as a lithe future strutted towards him. Shyira was as elegant as ever as she glided towards his table. Blond hair and cheerleader perfection caught every male eye in the room. Even in her human glamour he could see the raw predatory sexuality that lay just beneath the surface. \n\nShe was dressed to go out. Her little black dress hugged every delicious curve of her body. The neck line dipped dangerously into the deep valley her breasts. The top of the dress was tied around her neck. It left the entire back exposed, right down to the top of her heart shaped ass. The dress showed off her long pale legs and was only an inch shy of public indecency. Like all of Shyira's clothes, it managed to be both raunchy and elegant at the same time, like a noble family's slutty daughter at a state dinner.\n\nShyira apparently decided that shouting to be heard above the crowd was beneath her. With a wave of her hand the sounds of the room dropped off to almost nothing.\n\nShe walked to the side of the table. Leaning down, she planted a kiss on his cheek.\n\n\"It's a sound veil.\" He felt her hot breath tickle his skin as she softly spoke. \"It's just you and me now, baby warlock.\n\nShe bit his ear gently before she sat down across his lap, right above his growing erection.\n\n\"Have an interesting dinner?\"\n\n\"Not really.\" He tried to make it sound casual.\n\nShyira gave him a look.\n\n\"There's a party tonight. One of the mortals told me it's the talk of the campus.\"\n\n\"I'm not really sure I want to-\"\n\n\"Nonsense, everyone who's anyone will be there.\"\n\nOh great, just what he needed, a social event. If it was like any party he'd been at since starting school, he would end up standing in the corner with a cup of beer, bored out his mind. He all but rolled his eyes, his gaze wondering to the room around him. \n\nShyira put gentle fingers on his chin and moved his head until they were once again looking at each other. \n\n\"And you're not just anyone.\"\n\nShyira gave him a serious look. Tom could see something in her eyes he couldn't quite place.\n\n\"Unless of course you're looking to partake in something else tonight? Maybe some high class magical girl pussy instead?\"\n\nA look of alarm crossed his face. \"Shy-\"\n\nShyira gave him the perfect girlish smile as she broke out in laughter.\n\n\"I thought I told you that I don't care if you fuck mortal women. Just as long as you come back to me.\"\n\nThere was a twinkle in her eye as her smile grew a little more serious.\n\n\"Also, it's adorable that you think you can keep secrets from me.\"\n\nAs quickly as her serious tone had come, it was gone.\n\n\"Now come on. We're wasting time.\" She said with girlish enthusiasm.\n\n\"But-\"\n\nShyira grabbed his hand and pulled him out of his seat. When they were clear of the table she grabbed a hold of his arm, pressing her ample breasts into his side as she let him out of the building. \n\nOh fuck it, he thought. Tonight he was going to a college party. God help him.\n\nA thought occurred to him as they passed into the cool evening air, \"Hey Shy, did you see my phone this morning?\"\n\n\"Hmm,\" she said, \"are you sure you didn't leave it somewhere?\"\n\n****\n\nThe last rays of sunset passed below the horizon as the blue and purple tint of twilight took over the world. The street lights clicked on, bathing the street in shadow. They chipped away at the edges of the coming night, like a lone camp fire in a dark forest. To the wise, they were a sign that it was time to return to the relative safety of a warm home and a strong threshold. To the foolish, the harsh artificial light served as a false beacon of hope. The ultimate testament of man's arrogance in believing that he held dominion over the natural world. In reality, the light created a thin veneer over an undeniable truth, that darkness was coming quickly and with it the terrors of the night.\n\nA lone figure stepped out of the darkness and into the light of the streetlight. Her bright pink and blood red hair caught the light as she walked towards the building, announcing her presence for all to see. As if she cared. Aresta clutched Tom's phone as she strode into the campus police station.\n\nShe was met at the door by a pair of police officers on their way out of the building. Their conversation died mid-sentence as they stopped to hold the door open for her. Their slack jawed expression never left Aresta's leather mini skirt covered ass as she sauntered into the lobby.\n\nThe place was a typical run down police station. The place stunk, like cheap disinfectant and dried sweat. Her high heels clicked loudly on the cheap tile flooring as she approached the front desk. When she reached it, she loudly popped her bubble gum, announcing her presence to the receptionist. \n\n\"I'm here to see Detective Palmer.\"\n\nThe older heavy set woman gave Aresta an appraising up and down look, a disapproving scowl on her face. The bubble gum popping beauty was dressed in a skin tight white blouse that left her midriff exposed. Where Shyira was elegant and raunchy, Aresta was just raunchy. Like the hottest girl at the trailer park.\n\n\"You know we're supposed to arrest you before you're brought in for prostitution.\"\n\nAresta removed her stylish sunglasses and dropped them right on top of the woman's clipboard. She flashed her a sunny sweet smile. The woman's scowl only deepened.\n\nAresta lifted her hand and blew the woman a kiss. Passersby would have seen it was a mocking gesture. Only Aresta could see the invisible tentacles of her magic moving towards the woman. As the woman opened her mouth to tell Aresta off she inhaled the sweet euphoric substance floating through the air.\n\nThe woman's eyes were suddenly heavy and lethargic. A glazed over look passed over her face as she blankly stared at Aresta.\n\n\"Tell Detective Palmer that Tom Thornton is here to see him.\"\n\n\"Yes of course,\" the woman replied absent mindedly. She picked up the phone and had a quiet word with someone on the other end.\n\nAresta turned around and leaned against the counter. She surveyed her surroundings as she waited. She winked at a scantily clad woman in handcuffs being led by a female officer.\n\nThis entire school is ripe for the picking, she thought. Shyira should stop fucking around with the boy, the two of them could have some fun with this place.\n\n\"He's coming down to get you.\"\n\n\"There's a good mortal,\" she said, turning around she raised her finger to her lips, \"and remember, I was never here.\"\n\n\"Yes, of course,\" she said, in a monotone voice.\n\nAresta looked at the glazed over look in the woman's eyes. She marveled at her own power of influence over the mortals. Controlling one mortal was easy, controlling an entire building of mortals was outside of her abilities. Luckily there were easier ways to accomplish her objectives.\n\nNot a sound was made as she wrapped herself in a veil, vanishing from the world. Once shielded from prying eyes, the faint smell of brimstone and smoke filled the air as a thin layer of fire covered her skin. Aresta weaved a glamour around herself using her fiery magic. By the time Detective Palmer walked around the corner she was the spitting image of a certain scrawny college student.\n\n\"Tom Thornton, I presume?\" Detective Palmer asked. He flashed a boy scout friendly smile, his hand extended towards Aresta.\n\n\"That's right.\" Aresta said, her voice a perfect copy of Tom's. \"Your message said you wanted to speak with me?\"\n\n\"I just have a few questions about the recent incident on campus.\"\n\n\"You mean the fire?\" She said innocently. \"I'm not sure what that has to do with me.\"\n\nThe detective gave her a much more calculating smile in return, \"Let's talk in my office.\"\n\nThey walked up a flight of stairs and through a series of narrow hallways. In many ways the building seemed to be shutting down for the night. Many of the offices were dark, the motion sensitive lights clicked on one after another as they walked down the hallway. In other ways, the night was only heating up, portions of the building were already bustling with activity.\n\nAresta followed his steady pace at a professional distance. As they walked, no one looked at her, no one watched her ass sway as she passed. It was a strange situation for a succubus to not be the center of attention. It was also a necessary one. Shyira had given her a specific mission to accomplish tonight and so far, everything was going according to plan.\n\nThey finally arrived at a small dingy office at the back of the station. A metal desk sat in the center of the room, between Aresta and the back window. Filling cabinets and book shelves lined the walls on either side. Aresta watched the middle aged detective settle into his seat across the desk from her.\n\nThe air was stale and musty. The faint smell of old paper and dust filled the air. Her chair was uncomfortable, mismatched and old like the rest of the furniture in the room.\n\nThe detective reached into his desk and pulled out a file stuffed with papers. He made a show of setting the file on the desk in front of him. It sat there, a nuclear bomb waiting to shatter the tranquility of the room. He looked up and smiled at Aresta. One look at his smile told her everything she needed to know about the situation.\n\nGood cop...with a twist.\n\nAresta had to stop herself from rolling her eyes. Christ, she thought, are they still using that lame old trick?\n\nShe was meant to be nervous about the contents of the file, sweating over the possibilities that might be contained within. At the same time, the detective's warm smile and boy scout charm were supposed to make her panties damp and her lips loose. She doubted that there was anything in the file, except maybe some old pizza receipts. She was certainly too old to be falling for good cop.\n\nShe smiled back, careful to give off the right impression. Just enough nervousness to be natural in a police station, without going overboard and raising suspicion.\n\n\"As you know, we had a pretty serious incident on campus recently. One of our buildings caught fire.\"\n\n\"I can't imagine what that has to do with me.\"\n\n\"Can't you? You were caught on video fleeing the building.\"\n\nAresta chuckled, \"Ya, no shit. It was on fire.\"\n\nThe detective smiled a cheap, plastic smile filled with humor that didn't reach his eyes. \"Funny. You want to tell me where you were in such a big hurry to get too?\"\n\nShe shrugged, \"I was in a building that was on fire. It was the most exciting thing that had happened to me all week. I wanted to tell my roommate about it.\"\n\nHe pulled out a pad of paper and scribbled a few things down. \"That's all? You wanted to tell your roommate?\" He asked, eyebrows raised\n\n\"Well, it's not every day that something exciting happens.\"\n\nHe nodded, acknowledging that she had spoken without agreeing with her statement. \"Of course.\"\n\n\"You don't think I had anything to do with it, do you?\" She asked, innocently.\n\n\"No one is saying that. We're just trying to cover our bases, get a better picture of what happened.\"\n\nShe couldn't resist throwing this words back at him, \"Of course.\"\n\n\"Now, what was the reason for you being in the building?\"\n\n\"Well...\"\n\nFor all intents and purposes, the interview was going well and yet it wasn't. Aresta could tell that the detective was nervous. A strange tension seemed to fill the air between them. To the casual observer, Aresta's performance of Tom was flawless. The look, the tone of her voice, even her mannerisms were perfect. But after 20 years of experience something raked across Detective Palmer's senses. Something intangible, something unconscious that was beating on the inside of his skull, begging to be heard.\n\nInstinct.\n\nThe detective nervously reached up and felt a medallion through his shirt. An unconscious gesture, one he did a hundred times a day. This time however, something happened. From Aresta's position she could just make out the subtle pulse of light through his shirt. The detective's eyes widened as his gaze settled on the person in front of him. There was a new sharpness in his gaze. It was like he was seeing clearly for the first time since Aresta had walked into the building.\n\nAresta's own eyes widened in response. He could see her!\n\nAs the detective reached for his gun, Aresta moved. She jumped out of her seat. With one clawed hand she threw the table between them aside. In the fraction of a second it took her to accomplish this act the detective had drawn his service pistol out of its holster. It would take another fraction of a second for him to aim the pistol and fire. He would never get the chance. Aresta's clawed hand shot out, her palm striking the detective in his chest with a blunt impact. Bone snapped with a sickening crunch. The gun tumbled out of his hand as his back hit the wall behind him. He let out a wheezing breath as he slumped to the floor.",
        "\"What the fuck was that?!\" She snapped at the wounded man.\n\nAresta stalked over to where the detective sat against the wall, desperately trying to breathe. One of his lungs must have collapsed, the result of a shattered rib rattling around his chest cavity.\n\nHer claws raked across his chest in a lightning fast move. His shirt shredded as she roughly tore the medallion from around his neck. She left deep cuts on his chest in the process. The crimson lines of savagery stood in cold contrast to his shredded white shirt.\n\nIgnoring the detective's cries of pain, Aresta looked down at the dully illuminated medallion in her hand. At first glance, the object didn't make a whole lot of sense. The symbols and runes spanned centuries and cultures, with no real logical pattern. Ritualistic gibberish, she thought. She did, however, recognize the symbols that mattered and they spoke volumes to her.\n\n\"Hunter.\" She said quietly.\n\nAresta grabbed the detective by the throat with one clawed hand. She slowly squeezed his throat. His wind pipe constricted, further reducing his air flow and causing his head to pound. \"I think it's my turn to ask some questions.\"\n\n\"I won't give you anything, demon whore.\" The detective wheezed.\n\nAresta flashed the detective a wolfish smile.\n\n\"Now, now detective. Don't let that boy scout charm leave you now. You need it more than ever.\"\n\n\"Fuck you.\"\n\nShe looked around the office with a critical eye. \"You seemed to have made a mess of your office.\" She dipped one of her high heel shoes into the blood that now covered the floor. \"And would you look at all of this blood.\"\n\nShe extended her pointer finger in front of the detective's face. She waved it back and forth as if admonishing a child.\n\n\"Tisk, tisk. We can't have your neat, orderly little world defiled now can we?\"\n\nHe only stared back, a look of deep hatred and resolve in his eyes.\n\nHer clawed fingers caught fire just inches from his face. Aresta could see the firelight and fear reflected in the detective's eyes. Keeping him pinned to the wall by his neck, Aresta slowly traced over the earlier claw marks on the detective's ruined chest. Flesh seared. The detective gritted his teeth. He didn't intend on showing any weakness to the demon in front of him, but the pain was soon too much for him. He began to make the deep grunting sound of someone trying to swallow intense agony.\n\n\"That's it,\" she moaned. \"No one can hear you, sing for me mortal.\"\n\nThe detective screamed and true to her word, no one outside of the office heard his cries. Aresta continued her work until his chest resembled a mess of cauterized flesh and dried blood. The whole time, her eyes stared unblinking at the man in front of her.\n\n\"You sing beautifully detective.\"\n\n\"Fuck you.\"\n\nShe gave him a satisfied look.\n\n\"Have you had enough? Tell me what I want to know and I can make your death painless.\"\n\nHe spat out blood, \"Why should I, foul beast? You're just going to kill me anyway.\"\n\nAresta gave him a predatory smile, \"Tell me what I want to know and I'll make your death quick. You'll get to go up and meet your maker. Don't tell me what I want to know,\" she said menacingly, \"and I'll drag you into the pit with me.\"\n\nHe shivered uncontrollably with fear at her words.\n\n\"You'll die a thousand times over before I consume your soul.\" She brushed her finger tips over his cheek in an almost loving way, before she pressed them into one of the detectives many wounds. He gave off a quiet sob of agony. \"No heavenly reward for you then.\"\n\nThere was a loud knocking on the door.\n\n\"Shit,\" she spat.\n\nThe detective raised his head, a touch of hope in his expression. He took a deep, ragged inhale of air into his damaged lungs, \"HEL- \"\n\nAresta reached out and snapped his neck with a swift, practiced motion. His cry for help died on his lips.\n\nAresta was as silent and still as a rock as she stared at door, waiting to see if the knocking would continue.\n\nAfter an agonizing moment of silence, the booming sound of the knocking started again. This time it was louder, more impatient. The handle of the door began to jiggle as someone tried to enter the room.\n\nWith no time to lose, Aresta grabbed ahold of the still warm corpse, while throwing open the window along the back wall. With one large step, she leaped out the open window and into the cool night air. The pair were weightless a moment before Aresta's wings opened and caught them. She threw up a magic veil in the process, shielding the demon and her corpse from prying eyes.\n\n\"Shit,\" she chided herself, \"what a fucking mess.\"\n\nShyira wasn't going to like this, she wasn't going to like this one bit. She'd managed to fuck up her one task for the night.\n\n****\n\nThe frat house loomed in front of him as they approached the party. Tom could hear the thumping of the music all the way at the sidewalk. Small groups of people stood around on the grass talking, many of them carrying around red plastic cup filled with cheap beer. \n\nTom was apprehensive already. He wasn't the partying type and this place was about as far away from his comfort zone as they came. Excuses and reasons for leaving were already swirling around head.\n\n\"They say that this is the place to be seen, tonight.\" Shyira said, as she looped her arm around his, cutting off his avenue of escape. It was like she could read his mind.\n\nDo I want to be seen? He thought.\n\n\"Come on, it'll be fun.\" She tapped her hip playfully against his. \"You never know who you might run into. You might meet someone interesting.\"\n\nHe doubted it. This wasn't the type of party to meet interesting people and engage in fascinating conversation. More like get alcohol poisoning and get arrested.\n\nEyes followed the pair as they approached the front door or eyes followed Shyira at least. She was overdressed for this type of party but rather than look out of place, it was like she had set a new dress code with her presence. Tom could already see girls self-consciously fidgeting with their clothing, subconsciously placing themselves in the new pecking order.\n\nThey entered through the front door to find a house packed with people. A small kitchen stood off to his left, currently functioning as a bar. To his right, furniture had been moved to create a dance floor that covered most of the living room. Tom barely had time to look at the room before a mountain of a man bumped into him. \n\n\"Who let this nerd fucker in?\" The man called out drunkenly before stumbling away, his alcohol clouded mind already focusing on something else.\n\n\"My, now rude.\" Shyira said, her eyes narrowing. \n\nOh shit, he thought. He needed to defuse this. He needed to defuse this real quick before he ended up with another corpse in his apartment. \"How about a drink, Shy?\"\n\nShe turned back to Tom, her girlish veneer already obscuring the demonic anger that lay just below the surface. \"I'd rather dance.\" She grabbed his arm and started to pull him onto the dance floor.\n\nHis feet became concrete as he dug his heels in. \"I can't dance,\" he said sheepishly, his eyes on the floor.\n\n\"Of course you can,\" she said confidently. \"There's nothing to it.\"\n\nTom's eyes didn't leave the floor. Shyira pressed her body to his, with one hand she lifted his head until he looked into her eyes.\n\n\"Please,\" she said, biting her lip playfully.\n\n\"I'd just embarrass myself.\" He said softly. \n\n\"You're a man, you're mostly dancing to show off the woman on your arm. I've got the hard job.\"\n\nTom still wasn't convinced. \n\n\"Here, let me show you.\"\n\nShyira stepped into the crowd like she owned it. She ran her hands through her blond hair and down the front of her body as her hips began to sway to the music.\n\nHe wasn't looking at the floor anymore.\n\nHer dancing was a fluid thing, all liquid motion and sensual rhythm, perfectly in sync with the beat of the music. Tom's view of Shyira was unobstructed. None of the men in the room were brave enough or drunk enough to try and dance with her. The crowd seemed to respond to her every moment, like a trance had fallen upon them. From his vantage point, the shift in the room was clear. Dancers got closer together, their movements more sexual, more physical. A few of them were already opening making out on the dance floor. Articles of clothing were soon dropping to the floor like drops of blood out of an open wound.\n\nHypnotic, that's how Tom would describe it. Shyira always seemed to control every room she walked into, even when she was making no attempt to do so. Standing there, watching her, it was clear to him that there wasn't a moral on Earth that could resist her.\n\nAs she passed around the edge of the crowd, she grabbed onto the arm of a young sorority girl. The girl was red of hair and beautiful. Her curly red locks fell to mid shoulder and matched her red lipstick. The girl was dressed far more appropriately for a college party than Shyira was. Tight daisy duke shorts and a low cut top that showed off a lot of cleavage. \n\nThe girl looked momentarily surprised as she was pulled into the crowd, but was soon dancing close to Shyira. Their bodies played a sensual back and forth game. One girl would move and the other would move in response. They seemed to come within a hair of touching each other but never did. The effect made the pair seem like one body moving to the music, in perfect sync with each other.\n\nThe crowd got thicker, body pressed against body and Tom lost sight of Shyira.\n\nThrough the gaps in between the dancers, Tom caught glimpses of Shyira and girl dancing close. Shyira's head rested in the crook in the red head's neck, who's own head was thrown back. Her eyes were closed; her red lips open in a quiet sigh of pleasure.\n\nThe music died. Shyira's eyes cut through the crowd, as if Tom and her were the only people in the room. Locking eyes with her, Tom realized something, as the beginnings of an erection began to stir. Her wanted her. He wanted her badly. Ever since meeting Shyira, he'd spent a lot of time passively going with the flow. Like a leaf in the wind, he always seemed to be at the mercy of whatever was happening around him. Tonight he wanted to be the one taking control. Looking into the endless chasm of her eyes, he wanted nothing more than to throw her up against a wall and hear her screaming his name.\n\nAnother song started up. With these thoughts fluttering around his head, he did something out of character, he stepped onto the dance floor.\n\nShyira smiled at him as he approached her. Not a word was spoken as Shyira laid a hand on the other girl's hip, turning her body until the three of them were dancing a close circle. \n\nTom didn't know what the hell he was doing. He tried to follow the lead of his dance partners. That mostly involved trying not to step on anyone's toes. He tentatively reached out and put his hand on the Shyira's hip. He intended to pull her in for a closer dance. She only smiled a mischievous smile and brushed his hand away. Before Tom knew what had happened he found himself pushed away from Shyira and towards his other dance partner. The voluptuous red head threw her arms around his neck and Tom found himself dancing face to face with her. \n\nHe needn't have worried about his dancing skills. He wasn't good by means but by that hardly mattered at that point. The red headed beauty in front of him took the lead. She used him as a stripper pole as she danced to the music. One moment she would be grinding her body against his, only to quickly drop to the floor, her knees pushed apart as she carefully balanced in her high heels. Just as quickly, she would rise back up, her ass sticking out as she did. Tom couldn't help but enjoy himself. It wasn't exactly his type of music but he could hardly complain about the scenery. \n\n\"I'm Bailey.\" She yelled into his ear.\n\n\"Tom,\" he yelled back.\n\n\"You're a good dancer.\"\n\nBullshit. \"Thanks.\" He yelled back. She must be drunker than she realizes. \n\nThe two of them danced through the song and then through another. Tom got bold has his confidence grew. He cupped her ass and pulled her in until their lips met.\n\nThey shared a long kiss that left them both hot under the collar and gasping for breath.\n\n\"You're a good kisser,\" she said, a dazed over look in her eyes.\n\n\"Thanks.\"\n\nTom leaned in for another kiss, but Bailey put her hand over Tom's heart to stop him.\n\n\"Want to go upstairs?\" She said, her words heavy with lust.\n\nTom looked around the room for Shyira, but to no avail. The succubus was nowhere to be seen.\n\nTom shrugged at her absence. She did say that she didn't care if he was with mortal women. \"Sure,\" he said at last.\n\n****\n\nShyira walked down the sidewalk, her steps slightly unsteady. She was biting her lip. Her eyes were half closed as the first reverberations of Tom's pleasure began to wash over her. She gave a soft moan as her chest rose and fell in an increasingly rapid fashion. Her skin was hot and flushed.\n\nA group of men catcalled her from across the street. They might as well have been on the other side of the world for all she cared. Most demons didn't understand why succubi associated with mortals; why they allowed themselves to be bound to warlocks. This was the reason. The pleasure felt through their bond, amplified by her master's power, was one of the most euphoric experiences in Hell or Earth. \n\nShe was going to enjoy this tonight.\n\nShe always had to be careful with Tom. She took just enough of his life force to sustain herself and keep her grounded on this plain. She would never starve but she would also never be completely full either. Shyira felt the flow of energy enter her from her bond with Tom. It was only a kiss, but it was a kiss that promised so much more. She could feel her full power returning, a trickle at a time. It wasn't a moment too soon. She had things to do, problems to take care of. Problems that required energy, far more energy than she was willing to risk taking from Tom outright.\n\n****\n\nThey weaved through the crowd in search of some privacy. They need not have bothered. The entire room was in the opening stages of an orgy. Clothing littered the ground. Everywhere Tom looked, someone was engaged in some lewd act. Kissing, groping and so much more could be seen around the dance floor.\n\nShyira's doing, he thought.\n\nHis full attention came back to the woman in front of him as Bailey grabbed his arm. She half dragging him up the stairs behind her. He didn't mind, it gave him the perfect angle to look at her ass. Upon reaching the second floor, they came face to face once more. Tom finally decided to take the lead.\n\nBailey's back slammed against the door outside of the bedroom. She gasped in surprise, an excited gleam in her eyes.\n\nShe found herself between a rock and a hard place as Tom's body pressed her into the door. She could feel his erection grinding into her. Her breath came out in an impatient moan as she once again dove back in for another kiss. \n\nShe all but clawed at his shirt. Buttons tore off as her hands moved down his chest in a slashing motion.\n\nTom grabbed her by the throat, gently, but firmly holding her head in place as they kissed.\n\nReaching back, Bailey fumbled for the handle of the door. She awkwardly turned it until it released. They stumbled into the room as the door swung inward. Clothing dropped to the floor as they continued their journey across the room, kissing and exploring each other's bodies the whole way.\n\nThey were both naked by the time they reached the bed. It was clear that they were both done with foreplay. Tom pushed her backwards onto the bed before climbing on top of her. He wasted no time in diving his cock into the velvety heat of pussy. His body pushed her into the mattress as they came face to face.\n\nThat it! He thought. I just lost my virginity...well at least to a mortal girl, anyway.\n\nShe stared into his eyes, her breath hot and heavy upon his skin. Intimacy warred with primal lust as they grew more comfortable with each other's touch. Tom's hand found one of her breasts as Bailey wrapped her legs around his hips, forcing him further inside of her.\n\n\"I'm kind of a monogamous girl,\" she said, \"I normally don't do this sort of thing.\"\n\n\"Y-you don't want to stop, do you?\"\n\n\"Hell no!\" She laughed. \"I just want you to know that. I'm not the type of girl who brings strange boys home with her.\"\n\n\"Is it alright if I move.\"\n\n\"Yes,\" she moaned, \"Fuck me.\"\n\nTom pulled is cock almost all the way out of her pussy. A soft whine of protest escaped her lips as he did. Her protests were quickly silenced as he pushed back into her pussy.\n\nHe started slow. This was his first time with a girl who didn't have wings and a tail, and Tom intended to savior every moment. Bailey's head was thrown back, resting on the sheets. Her eyes were half closed in pleasure as she lost herself in Tom's slow thrusts.\n\nThis lasted until Tom suddenly put his full weight into one powerful thrust. Bailey's eyes snapped open as they settled on the man in front of her. Something in her eyes seemed almost apologetic. Like she somehow felt guilty for not giving her partner her full attention. \n\nThey paused momentarily as they both leaned in for a deep passionate kiss.\n\nTom's thrusts soon turned hard and fast. Bailey found herself grabbing onto Tom's neck, holding on for dear life as he took his pleasure from her body. Not that she had anything to complain about. She had been fucked hard before, but there was something primal about the way he used her body. Something predatory.\n\nHe must have had a wild ex, she thought. \n\n\"Fuck you're good. Are you ready for your reward?\"\n\n\"Yes.\" She said.\n\nTom threw back his head and made the dive into blissful release. His cum shot into her as her own orgasm came crashing down around her. His orgasm was less intense that with Shyira but felt no less amazing because of it. He felt none of the power drain on his system that he had begun associating with sex. None of the bone chilling exhaustion that left him almost unable to move. It was just sex. Plain, old, never really boring sex.\n\nThey collapsed on the bed in a sweaty heap, both of them trying to regain their breaths.\n\n\"God I needed that.\" She said.\n\n\"Yeah.\" Tom breathed, not really listening.\n\n\"No, I really mean it. The last couple of weeks have been really shitty for me. My boyfriend up and vanished without a word. It's had me really stressed out.\"\n\nTom was paying attention now. A deep ball of nerves settled in his stomach as a sinking suspicion crept over him. \n\nIt was like something had snapped into place in his mind. \"Y-your boyfriend?\" He said nervously. He couldn't bring himself to look at her.\n\n\"Ya, no one's seen him in weeks. Becky Linn said that he must have left me, but that bitch has been trying to get into his pants all semester.\"\n\nTom finally looked at her. Something about the way the lights played across her throat caught his attention. A pair of faint puncture marks could be seen glistening on her throat. The pieces began to fall into place in Tom's mind.\n\n\"Listen I have to go.\" He said.\n\n\"What?\" She said, surprised. She wasn't the type of girl who had men walk out on her. \"Well, will you call me?\"\n\n\"Ya Ya. Sure I will.\" He said, not listening again.\n\nAll of a sudden this was the last place he wanted to be. He collected his clothes, while trying to ignore the scandalized look on Bailey's face. All the while, he slowly gave wings to the small spark of anger growing within him.\n\nHe needed to find Shyira.\n\n****\n\nTom threw open the door. It banged against the wall, shattering the silence of the night.\n\n\"Shyira!\" He called out.\n\nHe stomped through the front room, his anger reverberating on the wood floor with every step.\n\n\"In here, stud.\" Shyira called out lazily from the bedroom.\n\nTom threw open the door to the bedroom to find Shyira sprawled naked on the bed. She had dispensed with her human glamour and lay on the bed in all of her demonic glory. A pair of leathery wings lay draped over the bed posts. A pair of pale horns curved out of luxuriant hair the color of freshly fallen snow. Her tail hung loosely over the side of the bed, lazily moving back and forth to the toon of some unheard music. ",
        "\"Who is she?\" He demanded.\n\nShyira looked at him a moment before answering, \"I think you know.\"\n\n\"Biff's girlfriend.\" He said through clenched teeth.\n\nShe smiled, choosing to answer with a question. \"Was she good?\"\n\n\"Dammit Shyira, I'm part of the reason he's dead and I just fucked his girlfriend.\"\n\n\"Exactly.\" Shyira said with heat in her voice. \"If you can't enjoy the fruits of your conquests, hear the laminations of your enemies' women, then what can you enjoy?\"\n\nTom sputtered, exasperated by the woman in front of him. \"This isn't ancient Babylon. That's not how the world works anymore, Shyira.\"\n\nShyira sat up, giving Tom a patient look, like a mother delivering a lesson to an unruly child. \"The seasons change, civilizations rise and fall, but the world,\" she ran her fingers gently across his cheek, \"the world doesn't change, baby warlock.\"\n\nThat's not what he wanted to hear. It was like he was sitting in the student union brooding all over again.\n\n\"That's not the type of warlock I want to be,\" he whispered.\n\nShyira looked thoughtful as she looked at him.\n\n\"You have a long way to go, there's no telling what kind of warlock you will become.\"\n\nTom thought on that long and hard before his thoughts finally drifted back down from, \"what might be,\" back down to the present.\n\nShyira only stared at him, her eyes unreadable. Tom cleared his throat awkwardly.\n\n\"So what, you want Bailey to serve me like you do, like some kind of,\" he searched for the right word, \"concubine?\"\n\nShyira snorted. \"No. If you want a mortal pet to keep around, I'll find you a better looking one.\"\n\nTom gave her a look, \"She's head cheerleader.\"\n\n\"At a third rate state college.\" \n\nThat really irritated him, \"You're the second person to fucking say that to me today.\"\n\n\"I know.\" She paused. \"This is about something other than that little tramp isn't it?\"\n\nHe got very quiet at that. He walked away from the bed, not wanting to look at her.\n\n\"Tom...what is this really about?\"\n\n\"You always seem to be doing your own thing. Sometimes...sometimes I think that you're the one who acts like that master. Just once I'd like you to do what I tell you to do.\"\n\n\"You're so quick to say I don't follow orders. Have you ever actually given me one?\"\n\nThat gave Tom pause.\n\n\"Tom, if you think I've been a bad girl, punish me. Remind me where my place is.\"\n\nTom looked at her, trying to gauge how serious she was before gathering all of his courage.\n\n\"T-then come over here and get on your knees.\" His voice wavered slightly, even as he tried to put steel behind his words.\n\nShyira rose from the bed without comment. Walking over, she sunk to her knees in from of him. She looked up at him from the floor, her lips slightly parted as she waited expectedly to see what he would do next.\n\nHe unzipped his pants, fishing out his cock in the process. With one hand he aimed it at her lips, with the other he grabbed a fit full of white hair.\n\n\"Don't suck. You aren't giving me a blow job; I'm taking your throat. Do you understand?\"\n\nShyira opened her mouth without comment, stuck her tongue out and went \"Ahhhh,\" like she was at the dentist.\n\nThat pissed him off more. He was supposed to be taking charge of her.\n\nWith one hand he pulled her head until the mushroom shaped head of his cock brushed past her lips and into the wet warmth of her mouth. He thrust his hips forward until Shyira's nose brushed the skin of his stomach. Once seated inside of her mouth, he grabbed a white horn in each hand and began roughly fucking her throat.\n\nAs a succubus, Shyira had perfect control over her throat muscles. She didn't make gagging sounds but the room was soon filled with the sloppy wet sounds of someone getting throat fucked.\n\nHe looked down into her eyes. The expression staring back at him was hard to place. There were touches of amusement, laced with the sensual heat of lust, but there were also other emotions swirling around the dark blue of her irises. Something darker and much harder to nail down looked back at him. It reminded him that, whatever Shyira was, she wasn't human. To break their eye contact he pushed her all the way to the base of his cock. \n\nFuck that felt good, he thought. With a normal girl, he could only keep her pushed down to the base for as long as her gag reflex allowed. Shyira didn't have that limitation. He wasn't even sure if she breathed air. For all he knew he could keep her pushed down to the base of his cock all night. Enjoying the wet tightness of her throat. He pulled out.\n\n\"Stick your tongue out.\" He commanded.\n\nShe did as she was told. Her inhumanly long tongue snaked out of her mouth. At full length, it stretched several inches longer than a human. \n\nHe took his cock and slapped it across her tongue several times. He then hit it across her cheeks. One and then the other. He expected her to be angry and was surprised to see only amusement in the deep depths of her eyes.\n\nI guess you can't degrade someone that's the living embodiment of lust. \n\nHe slammed his cock back into her mouth as he continued to fuck her throat. Shyira's tongue didn't return to her mouth. Instead, every time he would thrust forward, she would reach out and lick his balls. He had never felt anything like it.\n\nHe was close now. He knew it and he suspected that she knew it as well. He gave her no warning as the first shot of his cum shot out and hit the back of her throat. He felt a mild drain on his energy as he came. There always was when you had sex with a succubus, but Tom could tell that Shyira wasn't trying to actively take energy from him.\n\nHe wondered why.\n\nShyira began to push forward, intent on taking the rest down her throat. Tom had other ideas. Even in the mist of his own pleasure he didn't forget where he was or why he was doing this. He used his hold on her pale horns to yank her off of his cock just as he shot more of his cum onto her face.\n\nShyira swallowed every drop he deposited in her mouth. When she was finished, she licked her lips, leaned in and kissed the head of his cock in a loving way. Her tongue lashed out and licked the last drop of his cum off the tip of his manhood. When she pulled away a single string of saliva stretched from the tip of his cock to Shyira's lips.\n\nContrary to a lot of myths, a succubus doesn't require her victim to come into her pussy in order to feed. Succubi can feed in any number of different ways.\n\nTom stared down at the mess he had just made of Shyira's face. The milky white color of his cum began to sink into her milky complexion. At this rate her skin would be flawless and clean again in no time.\n\n\"Don't absorb it.\" He said. \"I'm not feeding bad girls who don't follow orders. Let it dry on you face.\"\n\nShe gave him a small girlish smile, that clearly said that she approved. \"Yes Master.\"\n\nFalling back on the bed, Tom's chest rose and fell quickly as he tried to catch his breath. \"Twice in one night is a little much for me.\"\n\nShyira got up off the floor and joined him on the bed. She melted to his side. Her tail wrapped around his thigh as she rested her head on his chest. \"I could give you something for that, we could go a few more rounds.\"\n\n\"Not tonight.\" He tried to put steel behind his words but it came off as more exhausted than anything else. Any other creature from the pit would probably see it as a sign of weakness.\n\nAdorable, she thought. \"Yes, Master.\"\n\nThey enjoyed several minutes of comfortable silence as they both calmed down in each other's arms.\n\n\"So,\" she said conversationally, \"how was your day?\"\n\nTom laughed. \"More exciting than I was expecting.\"\n\n\"Well at least it wasn't boring.\" She murmured. \n\n\"I almost forgot, I might have a good opportunity to check out that botanical garden we saw.\"\n\n\"Oh?\"\n\n\"Yeah, we're having a biology lab their next week.\"\n\nShyira was silent for several seconds.\n\n\"You still need to take combat lesson. This weekend sounds like a good opportunity.\" Shyira touched the bruise on the side of Tom's cheek. \"It will also provide a good opportunity to come to an understanding with Aresta.\"\n\nTom didn't answer. Shyira could tell that he was apprehensive about the training.\n\n\"OK.\" He said at last.\n\nSometime later Tom had fallen into a deep, restful sleep. The kind of sleep that only comes to the exhausted or the innocent. Shyira still wasn't sure which category Tom fell into. She could see a spark of something in his actions, especially when he was angry, but he was still coming to terms with this new life. Yet when he was angry, Shyira closed her eyes as she remembered their earlier encounter. She shuddered at the memory.\n\nOh, how she loved a master who knew how to treat a succubus.\n\nShe quietly closed the bedroom door and walked down the hallway. Her steps were as silent as a fox on the cheap carpet as she entered the room at the end of the hallway. What she found certainly raised an eyebrow. Aresta sat crossed legged on the bed, waiting for her. The stiff corpse of a man of midlife was propped up against the wall. His head was turned 180 degrees away from her.\n\nWalking over to the corpse, she used one elegant foot to rotate the head until she could see his face. A deep grinding sound of bone on bone filled the room as she used her inhuman strength to accomplish her task.\n\nShe looked at the face of the man in front of her. When she spoke, her voice was detached and cold, \"You should be more careful with your men, someday they may be scarce.\"\n\n\"Not today, I think.\" Aresta said.\n\nShe gave Aresta a sharp look, \"Did you at least learn something useful before killing him?\"\n\n\"Yes.\"\n\nShyira was in no mood to play 20 questions. She stood silently staring at Aresta, waiting for an answer like a general would await a report from a solider. \n\nAresta gave into the weight of her stare, she cast her eyes downward in submission, \"We need to keep a closer eye on the boy.\"\n\n\"Your master.\" She pointed out.\n\n\"Right,\" Aresta said, rolling her eyes.\n\nShyira held her gaze for several seconds hard seconds, \"Why?\"\n\n\"The hunters have an operational presence on campus. That cop was one of them.\"\n\n\"So you decided to kill him?\" Shyira raised one delicate eyebrow\n\n\"No I-\"\n\n\"Because I believe your orders were to move suspicion away from Tom, not create more of it,\" Shyira said in a harsh whisper.\n\n\"I tried-\"\n\n\"You tried?! You tried what? We could have watched him or ensnared his mind or done a hundred other things that didn't involve making him disappear.\"\n\nAresta was perfectly still, her eyes downcast, like a single movement might evoke more of her anger. Shyira let out a deep sigh.\n\n\"Well, let's hope you haven't completely buggered this up.\"\n\n****\n\nDean Henry Edwards walked into the campus police stations. It was late. His own offices were all but shut down for the night. The police station, on the other hand, was as busy as it ever was on a weekend.\n\nDrunk, partially dressed coeds sat handcuffed to a row of seats along the wall. The receptionist was having a harried conversation with an older couple at the front desk, while a pair of officers were seconds away from pulling tasers on a struggling suspect. \n\nJust another Saturday night.\n\nHe rode the elevator up to the second floor, intent on having a word with the chief of police. He sensed it the moment he stepped off the elevator. The subtle sense of recently used magic permeated the air.\n\nHe turned away from the direction of the police chief's office and down the narrow hallways that led towards the modest offices used by the detectives. His search led him to the office of one Detective Palmer. It was a name he thought he recognized.\n\nLow level member of the order? He thought.\n\nHe reached up and knocked on the door. The moment his hand came in contact with the well-worn wood of the door he felt it. There was dark magic present in the next room.\n\nHe knocked harder on the door. Buying himself a moment to gather his magic around him. A giggle of the hand showed that the door was unlocked.\n\nHe thought he heard someone begin to cry out.\n\nSteeling himself for what he might find on the other side, he threw open the door and barged into the room. He took in a sharp inhale of breath. The room reeked of magic and fear. Signs of violence littered the room. A desk sat overturned along the side of the room. Dried blood caked the floor. The sticky sweet smell of burned flesh assaulted his nostrils, threatening to empty his stomach onto the floor.\n\nHe heard a large movement of air coming from just outside. Running to the open window, he could just make out the simmering image of a veil being cast in the distance.\n\n****\n\nI'm without an editor for this chapter. So I apologize if the grammar and punctuation are a little rough.\n\nChapter 5 has been started, but that doesn't really mean much, as I only write when I'm feeling inspired. No promises but it should hopefully be a shorter wait than the wait for this chapter. I'm also planning a little short story for Halloween so expect that sometime during October. \n\nHope you all enjoyed it. I read all comments, both public and private, even if I'm not the best at responding. So let me know what you think. -NP"
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubus",
        "demon",
        "university",
        "fire",
        "geek",
        "nerd",
        "warlock",
        "succubi",
        "wizard",
        "frat party"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-04"
}