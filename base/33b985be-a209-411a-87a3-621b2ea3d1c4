{
    "title": "The Office Hottie Ch. 07",
    "pages": [
        "Over the next several days, I refined my naughtiness in the office. The racquetball got used a few times and occasionally, if I wore a dress or skirt, I'd go pantiless. I really loved and enjoyed the feeling of freedom I felt when not wearing any underwear and walking around the office, essentially naked from the waist down. It amps my naughtiness. Taking them off at my desk was hot and arousing, but inconvenient and risky. Instead I'd go into the supply room to remove them. There was still the risk of getting caught, and a couple times almost did, but less so than at my desk and easier to cover if someone walked in on me. Not all my dresses have pockets, so I'd have to carry my panty back to my desk in my hand. The first time I crumpled them up into a little ball and hid them in my fist but soon after that I became bolder and carried them a little looser, almost like I was carrying a rag. Sometimes the best place to hide something is right out in the open. I realized that more boldness meant more risks and the higher the risk the hotter my sexual desires became. I also understood the consequences of getting caught, which also made my desire that much hotter. I knew I would have to be incredibly careful. In addition, it was often a fine line between getting my work done and pleasing my sexual desires. \n\nOne day I'd gone to the supply room to take my panties off, Og and Rok, the lead caveman and one of his minions, was already in there. I almost turned around and left but my naughty meter was pretty high, and I thought I'd have some fun with it. They were talking about a baseball game and barely acknowledged me as I came in. I went to the other side of the shelf they were standing next to, hiked my skirt up and pulled my panties down. They were white, lace bikini briefs and I wadded them up into a loose ball in my hand. Had the cavemen been watching me through the shelving instead of yakking about a game, their eyes would have bugged out at what I'd just done.\n\nI felt Rok actually had some potential, for a caveman. He's in his thirties, tall and slender, worked out a lot and had a chest you could bounce a cannon ball off. His shoulder length, straight blond hair made him very attractive, and his darker blond, thick beard was short and neatly trimmed. I wasn't sure where he was from, but he had a slight accent that added a little more to his attractiveness. The GQ poster boy for the cavemen in our office. He had a good, if not slightly twisted, sense of humor that could always make me laugh and he always treated me with respect. Lose the beard and get a job in some other office and I think we could have something going on. \n\nOnce I felt men were worthy of being with again, that is. I had been really hurt in my last relationship and although it'd been a while, I wanted nothing to do with men right now. I felt I was still going through a healing process, maybe that was why I was exploring my interest in girls. I found them alluring, soft, sexy, and in many ways easier to relate to. I doubted that I would ever really want a relationship with a girl, maybe hang out and have some fun, but I liked men, loved cock, and had a desire to get married and have children someday. But not until I unloaded some emotional baggage first. \n\nWith my panties in my hand, I went around to the other side of the shelf where the they were BSing, almost daring the boys to see them, and proceeded to scrounge through the supplies looking for stuff. My pantiless pussy was loving it and I excused myself between the two of them to get past. I picked up a couple of sticky note pads and some other unneeded items, passed between them again then went to the other side where I could see them, but they couldn't see me very well. My pussy was calling for some loving and I squatted down to browse the bottom shelf. I spread my knees and started fingering myself. I tilted my head back and closed my eyes, listening to them talking, feeling the pleasure in my kitty as I slid a finger in and out. \n\nI couldn't stay too long without raising suspicion, but I got a good fingering in and played with my clit a little. Boys, I thought, pay attention. There's a girl masturbating three feet away from you and you're totally clueless. Well, their loss. I tasted myself on my finger and smiled at their misfortune as I stood up and headed back to my desk, feeling a little wicked sense of satisfaction. \n\nI had learned my lesson about masturbating at my desk and getting too caught up in it, I was much more careful and watchful now. I have to admit though I was actually getting used to going pantiless, I'd take them off and get worked up but I'd get back to my desk then get busy and forget about it. The paperclips I used for nipple clamps lost their appeal too, they were just too difficult to use and I'd tossed them out. I had real ones coming, hopefully at the beginning of next week. Along with my cock, I could hardly wait for it. \n\nFinding new places to masturbate was both a joy and a challenge, the supply room was the favorite even though I almost got caught in there once. The ladies room was the safest but didn't offer the daring thrills of the rest of the office. I did it once in the conference room, that was exciting, but I had to time it just right. Same with the break room although it was safer because I was sitting at the table with a stack of papers to work on. The stair well was getting popular for me and we have a vacant office that I used once but it was a freak of timing that I pulled it off. I often masturbated in my car in the parking lot, usually during lunch. I had to be careful though, security has cameras everywhere. \n\nMy biggest fantasy was masturbating in my boss's office, that seemed to offer the biggest thrill and I was constantly brainstorming on how I could pull it off. Except for meetings, she was constantly in there and often worked late. I had no business reason to be in there other than to drop work off and I know I'd draw attention if I was in there alone for any length of time. Outside of the ladies room or my car, the only time I'd work up an orgasm is if I had a dress on. Funny, one of the girls happened to mention she noticed I was wearing dresses and skirts more often. \n\nBack at my desk I alternated between working and fingering my clit when no one was looking. I was soon worked up enough and went into the supply room to finish up. Kelly was always on my mind and sometimes I would have a little visual treat from her or one of the other girls in the office to masturbate to. I did watch myself, the last thing I wanted was to have a reputation amongst the girls, or worse, the guys. Nobody was in the supply room when I got there, I went to my usual corner, squatted down, and leaned up against the wall. From that position I had a real good vantage point of the door and could see anyone coming in. Earlier I had moved some boxes out of the way to give me a better view of the door from my corner, but I still had to watch it closely,\n\nI ran my fingers over my bare clit, rubbing it back and forth while I squeezed my tits. I un-did a couple buttons on my blouse so I could reach inside and fondle my breast. I was pretty worked up so it didn't take me long to cum. The critical part when cumming was trying to keep my eyes open to watch the door. Sometimes it was easy, other times I would cum so hard I couldn't keep my eyes open and I'd squeeze them shut while I came. Just an instant of inattention could be disastrous if someone came in while I was cumming. \n\nIt was an easy orgasm this time, very satisfying, and I didn't get bothered by anyone. I buttoned my blouse and went into the ladies room to clean myself up, put my panties back on and headed back to my desk. I was really enjoying my sexual freedom, masturbating basically wherever I wanted to, finding new places to cum, and sometimes playing with myself in front of people if I was careful and prepared. \n\nOn the way back to my desk I passed Little Julie, our express delivery girl, looking cute and we traded hellos. She's short, about my height, with small boobs, brown eyes, and pretty, highlighted straight brown hair to her shoulders that she usually wore in a ponytail. I never saw her in a bad mood but never a happy one either, a bit of an enigma she was. A pity, I wondered if she even knew how to smile. \n\nJulie stopped as we passed and called back to me. \n\n\"Excuse me, Lori, right?\" she asked somewhat nervously. \n\nWe'd never formally met, but I'd seen her many times over the past year or so. Business wise, I never had a need or opportunity to interact with her, so I didn't know her well, but she never struck me as the nervous type. \n\n\"Yes,\" as I stuck my hand out. \"Julie, right?\"\n\n\"Yes,\" she replied, her hands were cold as ice. \"I'm looking for the lead, I've got some packages he needs to sign for.\"\n\n\"Oh, all the cavemen are in a meeting right now,\" I blurted out without thinking.\n\n\"Cavemen?\" she asked. \n\nDamn, I thought. It was force of habit around the office and I should not have called them that to her, professional courtesy and all that. \n\n\"I'm sorry,\" I apologized. \"It's... a bit of an office joke between us girls in the office.\"\n\nJulie looked at me and almost cocked her head like a puppy trying to figure something out when a smile lit up her face and she laughed. \n\nWow, what a sweet surprise! She had such a pretty smile which turned her into a sweet girl and her laughter had such a merry little ring to it. I never noticed her eyes before either, very nice. Overall, she was a very pretty and charming girl. \n\n\"Ah, I get it, \" Julie giggled. \n\n\"Yeah, some of us girls have our own tribe in our different areas we deal with,\" I smirked. \n\n\"That's funny,\" she said, covering her mouth and laughing again. \n\nWow, Little Julie seemed like a completely different girl, now that I've seen her pretty smile and heard her laugh. \n\n\"You know, you have a very pretty smile,\" I said, trying to encourage her. \"You should do it more often.\" \n\n\"Um, thanks,\" she replied, as she looked down and the nervousness returned. \n\n\"So,\" Julie said, quickly changing the subject. \"I need these packages signed for, how long will they be in the meeting?\" \n\nI looked at the clock on the wall and shrugged, \"Could be five minutes, could be another half hour. It's hard to tell with those guys.\"\n\n\"Damn, I can't wait, I'll have to return.\"\n\nJulie started bundling packages up and the look on her face told me she did not want to return. \n\n\"I should be able to sign for them and I can drop them on his desk.\" I offered. \"It'll save you a return trip,\" \n\n\"Can you? That would be very helpful,\" she said timidly. \n\nDamn, relax girl. Where was that coming from? I never considered myself overbearing or intimidating before and always made friends easy. \n\n\"Sure thing, Sweetie,\" I shrugged, trying to set her at ease. \"Let me sign them off and you can get out of here.\"\n\nJulie went through all the packages and showed me what needed to be signed. \n\n\"Thanks,\" she sighed nervously with a shy smile. \"That's very helpful.\"\n\n\"No problem,\" I replied and winked, \"If the Neanderthals aren't around next time just come find me.\"\n\nJulie giggled, smiled again and said goodbye. \n\nWow, what a sweet little girl. Now I wondered what she looked like under that frumpy uniform, I thought as I watched her retreating form. \n\nThe rest of the day went by quick. I hadn't been in the gym for a while, so I stopped by for an hour, ran a couple miles and hit the machines for some upper body. The sauna afterwards felt so good, very relaxing, and I could secretly, but respectfully, check out the other women in their various states of towel dress. I showered and headed back to my apartment for dinner and some fur time with Kisa. \n\nI went to bed early for a change and, as usual, felt like masturbating before falling asleep. Seems I always start my day with a jill and end my day with a jill. I wish my cock would get here, I wistfully thought. I usually wear a nightshirt and panties to bed, but I stripped them off and lay naked under the covers while caressing myself. Thoughts of Kelly were always on my mind and visualizing her naked and lying next to me helped my arousal. \n\nMy fingers found their way down to my love button and I drew little circles around it as I squeezed and massaged my boobs. Kelly's sweet body danced in my head and I found myself thinking of Little Julie. What a surprise she was today, in just a couple minutes I found she was a very attractive, sweet girl. I fingered myself and fantasized what she looked like under that uniform, what her little boobs looked like. It didn't take me long to cum and I rolled over and was fast asleep. \n\n= = = = = = = = = =\n\nThursday morning found the office very busy. I wore a pair of jeans and a white button up blouse with a lacy white bra and matching panty underneath. My morning routine went fairly fast, but my boss Sharon dropped several engineering packages on my desk and said they were priority. Fuck, basically drop what I'm doing and take care of this shit. \n\nIt took me a couple hours, but I'd got it done sooner than expected. By then it was lunch and I realized I hadn't pleasured myself this morning yet. I was hungry and while I was eating, I thought of where I wanted to pet my kitty. Unfortunately, my tight jeans ruled out a lot of places except my car and the ladies room. Inconvenient, let alone scandalous, to pull my pants down just to finger myself; even the stairwell was risky. Oh well, ladies room it is. \n\nI cleaned up my desk from my lunch and went in search for someone to perv on before going to the ladies room. Kelly was the usual victim, and she was quite abiding for me as I hovered over her, chatting with her and getting a good look at her cleavage down her top. I fantasized about suddenly leaning over, caressing her breast and kissing her. It was all I needed, and I headed to the ladies room for a post lunch petting. \n\nThe stall furthest away was my favorite, the toilet was closer to the wall and I found I could turn slightly and lean against the wall while I played with myself instead of the cold piping of the toilet. Inside the stall I wriggled out of my jeans and slid them to the floor, my panties right behind them. I decided to go all natural and took my blouse and bra off, hanging them on the hook on the stall door. \n\nI sat there naked with my pants around my ankles, leaning against the wall and my knees spread wide. I re-imaged the down-blouse view of Kelly's tits in my mind, massaged my naked boobs and imagined I was massaging Kelly instead. My nipples were fully erect as I fanned my hands across them, flipping the tips of my nipples with my fingers. I pinched and pulled them with my eyes closed, loving the pleasurable feeling I was giving them. My hands caressed their way down my belly, both hands petting my inner thighs, stroking the area between my thighs and my pussy. I drew a finger across my moistened lips, spreading my juice evenly along them, my body shuddering at the sensation. The other hand found its way back up to my tits, fondling and squeezing them. \n\nI inserted a finger inside, my pussy was so wet it slid right in. I closed my eyes and sighed at the wave of pleasure that swept over me. I moved my finger slowly in and out of me, my palm stroking my clit at the same time, I dragged a fingernail over the tips on my nipples, feeling the sparks move through them and into by breasts. I pinched and pulled my hard nipples to full erectness as my finger continued to stroke in and out. I pinched a nipple between my fingernails and winced at the sweet, delicious pain, moaning at the incredible pleasure I felt. \n\nMy orgasm was coming but I edged it away, telling my pussy to be patient as I inserted another finger. My inner two fingers slid in and out while my outer two stroked my lips, my palm putting the right amount of stroke and pressure on my clit. I heard the bathroom door open and someone walk in. Fuck, I was so close to cumming. I shouldn't have edged it away and came while I had the chance. I stopped my pleasure until she entered a stall and I heard the rustle of her clothes as she sat down. I was ready to cum and slowed my stroking but still kept a finger inside. The orgasm was coming, I let it silently wash over me as I heard the girl peeing. I gritted my teeth and held my breath trying not to gasp, my body silently shook and clamped around my finger as my orgasm passed over me. \n\nI was disappointed that I couldn't let it all out, but that's the way it is when masturbating at work. Still, there was the thrill of cumming while someone else was nearby and oblivious of my sexual pleasuring. My orgasm faded away, I slowly let my breath out and tried to resume normal breathing. I cleaned myself up and pulled my jeans to my knees. I reached for my bra and put it on and silently put my blouse on and buttoned it up. The other girl flushed and exited her stall. I got my clothes organized and the other girl left the bathroom as I flushed and stepped out. I washed, feeling and enjoying the pleasurable warmth in my pussy, the post cum afterglow of my orgasm still present. I looked in the mirror and ran my fingers through my hair to straighten up and walked out. \n\nOn the way back to my desk I ran into cute Little Julie, still looking frumpy in her uniform but sweeter now. \n\n\"Uh, hi Lori,\" she said anxiously. \n\nDamn, what was with her? Why was she so nervous? I'd seen her in the office talking with several people and she never acted this way with them. What was it about me that was so intimidating to her?\n\n\"Hi Sweetie,\" I said with my best disarming smile. \"How are you today?\"\n\n\"I'm good thanks,\" Julie said with a sigh and a timid smile. \"Are the cavemen in a meeting again?\"\n\nTrying to fit in, she is. That's a good sign. \n\n\"They are,\" I replied. \"Need me to sign for something?\"\n\n\"If you don't mind, please.\"\n\n\"No problem, Sweetie,\" I said holding my hand out. \"Let's see them.\"\n\nCrap, there were a shit ton of invoices, I realized as Julie handed them over. Well, I asked for it and I leaned up against the wall as I went through them and signed them off. I had just finished the last one when I noticed Julie was staring at my boobs. I looked down and realized I had missed a button after my last pleasuring, my blouse had blossomed open and she was getting a free show of my breasts in my lacy bra. Fuck, I thought, as I stood up straight and handed the invoices back to her. \n\n\"You like what you see?\" I asked a little too harshly and I instantly regretted it. \n\n\"Oh!\" Julie startled, looking at me. \"I-I'm sorry. Th-that's a really pretty blouse,\" she stammered out as her face flushed with her lame excuse. \n\nThis old rag, I thought wryly to myself? Then it dawned on me as I watched Julie try to gather herself, and suddenly it all became clear. All of her nervousness around me, like a little school girl around the high school jock. She's attracted to me. \n\nI think. \n\n\"It's okay,\" I smiled as I fixed the button. \n\nEmbarrassed and red faced, Julie spun around and started to walk off. \n\nUnsure if I was right, I went out on a limb, \"You didn't answer my question.\"\n\nJulie stopped and turned back toward me. \n\n\"What?\" she asked, looking like she just wanted to run away. \n\n\"Do you like what you see?\" I pressed somewhat uncertain, glancing around. \n\nThe look of indecision on her face was adorable and I waited for what seemed like hours for her to answer. \n\n\"Yes,\" she finally said in a voice like a little mouse. \n\n\"Me, too,\" I smiled back to her, relieved and a little excited. \n\nJulie sighed visibly and her cute lips curled up slightly in a sweet little smile. \n\n\"Let's meet for a drink after work,\" I bravely suggested. \"6:00 ok?\" \n\n\"Um, sure,\" she said, hesitantly. \"Where?\"\n\nI told her the name of our favorite hangout where the office often goes to unwind after work or a softball game. ",
        "\"We call it the Neutral Zone, it's a nice hangout without being obnoxious. They have a free taco bar between 5 and 7 that's pretty decent so you can have a couple drinks without getting toasted.\"\n\n\"Sounds nice,\" Julie smiled. \n\nDamn, I'm a-likin' that smile. \n\n\"Sweet, see ya then,\" I smiled back at her. \n\nJulie turned and walked off with an obvious, new little spring in her step. \n\nWell, how about that, I thought. Sometimes when you least expect it. \n\nBack at my desk I tried to work. I had Julie's smile on my mind and couldn't get over what had just happened. Was she really bi-curious like me or just wanted to be friends? Had she been with a girl before? Was she a full blown lez? Or was she just nervous and unsure of herself and blurted out the first thing she thought of and is in her van right now pissed off and regretting it?\n\nI knew nothing about her and kept thinking about earlier interactions with her to try and figure out more about what she was like. I didn't feel comfortable about asking anyone in the office about her and I'm not into any social media so I couldn't stalk her online. I googled her name and came up with nothing. At least she's not on any police reports, I thought. \n\nMaybe I shouldn't have said anything. It was an innocent look down my blouse and I had it open for the entire fuckin' world to see, so who would have blamed her. Maybe she's thinking the same thing and wondering why I asked her out. Damn, I shouldn't have said anything, this could turn in a wrong direction real quick and real easy. What the fuck? I just asked her to join me for a drink, not to goddam marry me. \n\nMy mind was spinning, and I realized I was babbling to myself like I was in high school again. Relax girl, meet with her, be cool, and just let things fall into place, I coached myself. Who knows, maybe she's a closet psycho bitch and I'll want to forget the whole thing. I'll have one drink with her, assuming she shows, then I'll bail and forget the whole thing happened.\n\nQuitting time took forever to get here. I contemplated doing a no-show, but that would not be right. I was anxious about meeting her, but I set it up so I have to be there. I'll let her do the no-show then it will all be on her, I thought as I drove over to the bar and parked. I looked for her car as I walked through the lot to the main door and realized it was pointless, I had no idea what she drove, and I doubted she would have brought her delivery van. \n\nI was a little early but I went inside and found a place to sit relatively close to the door so she wouldn't have to hunt for me. My stomach growled. The tacos were smelling good and I ordered a glass of wine. The waitress brought it over and I nursed it while I waited. \n\n6:00 came and went. \n\nI surfed, checked my email, and texted a friend while I waited. It was about quarter after and I was beginning to think Julie had pulled a no-show when she walked in the door still wearing her uniform. She looked around unsure until she spotted me, and I waved at her. \n\n\"I'm really sorry I'm late,\" she apologized as she sat down. \"Some last-minute stuff came in that had to be dealt with before I could leave.\"\n\n\"It's ok,\" I replied. \"I'm glad you came.\" \n\nI was? I realized that now she was here the apprehension dropped and I was glad she showed. \n\nThe waitress appeared, Julie ordered a glass of wine and we chatted while we waited for her drink. I liked her right away and we really hit it off. \n\nWe actually had a lot in common; she wasn't into social media, she played softball but was one league above us, she'd never played racquetball but was interested in it. Both of her parents live in town, she was the youngest like me but had two older brothers where I had three. She worked out at the same gym but on the other side of town and we tested each other's biceps then arm-wrestled. We even had similar taste in music, movies and booze. She had gone fishing only a couple of times but loved camping and hiking. It was almost like we were long lost sisters. We finished our wine and ordered another. \n\n\"Let's hit the taco bar while we still can,\" I suggested as the waitress fetched our order. \n\n\"Sure thing, I'm starving,\" Julie replied. \n\nThe place has a great taco bar, and they stock it very well with lots of fillers and a half a dozen different salsas. We both filled our little plates and headed back to our table; I noticed Julie got extra sour cream and guacamole like I did. We both made a couple trips and I got full pretty quick. Good tacos considering cheap ingredients. \n\nWe talked for a long while and soon we had our phones out and were sitting next to each other showing pictures of our families and trips we'd been on. She's a cat lover, I showed her some pics of Kisa and Julie thought she was adorable. Our legs were in full contact to the hip and she would occasionally touch my arm as she talked. Her laughter was sweet, and I liked her touch. I regretted anything bad I'd ever thought about her. I was really liking her, and I think she was liking me. \n\n\"Lori, I'm sorry, I really should get going,\" she said after a while. \n\n\"Oh crap, 9:45, I didn't realize the time had flown by,\" I said looking at my phone and flagging down the waitress for the bill. \n\n\"Thank you for inviting me here. It's been a while since I've been out,\" she said smiling. \n\n\"I'm glad you came, I had a great time,\" I replied, touching her arm.\n\nThere was an awkward silence and the look in her eye said she wanted something more. \n\n\"It is late, and work is early for me,\" I said at last, the wistful smile on Julie's face was in agreement. Just then the waitress dropped off the bill, I grabbed it and pulled out my wallet from my purse. \n\n\"Here, let me help you with that,\" Julie said as she dug into her purse. \n\n\"I got it. Next time it's your treat,\" I winked at her. \n\nJulie beamed that beautiful smile as we both got up and walked out to the parking lot. The awkward silence had returned. \n\n\"Hey, give me your number so we can stay in touch,\" she said breaking the silence. \n\nDamn, I should have thought of that. I smiled and gave her my number, she immediately texted me and I heard my phone buzz. \n\n\"Well, this is my car,\" Julie said pointing at it. \"I had a great time, it's really nice to finally meet to you,\" she said shyly but without the nervousness. I realized she had not been nervous all evening long. \n\n\"Me too,\" I said and reached out to hug her. \n\nThe hug lasted longer than I expected. I felt her arms closing around me as I held her tighter, our bodies in full contact. I turned my head and buried my nose in her hair line, inhaling her body scent, smelling of coconut, sweet herbs, cinnamon I think, and tacos. My lips brushed her neck behind her ear, she exhaled a sigh, her hot breath on my neck. I could feel her body trembling in close contact with mine. \n\nIt had been so long since anyone held me like this. I did not want to let go. I could feel her little boobs mashed against mine as we hugged. Julie pulled back a little, our cheeks brushing each other. She turned her head, her lips were millimeters away from mine, her breath heavy, her eyes were open but looking down at my lips, waiting for me. \n\nI kissed her. \n\nJulie responded with a whimper, her lips parting and closing around my lips, hungrily devouring them, crushing them. Her lips parted and her tongue probed, searching for an entry. My hand caressed her cheek and wove through her hair as I opened my lips, my tongue caressed by hers. We both feverishly kissed, my hand on her lower back pulling her in, her hand on my breast, squeezing as we kissed each other, our breath laboring as we struggled to breath in our lustful kissing. \n\nI broke off, our chests heaving with wanton passion. I swallowed, caught my breath and gazed into her pretty brown eyes. I lightly drew my finger across her face, pulling a stray lock of her hair away, lightly kissed her lips, her nose, and her cheeks. We stood there resting our foreheads on each other. \n\n\"You don't know how long I've wanted to do that,\" Julie confessed, caressing my arm. \n\n\"Why didn't you say something?\" I teased. \n\nShe smiled and we hugged again. \n\nJulie turned to kiss me, her lips nibbling mine just as a car pulled in the parking lot with its headlights glaring at us. We both looked and guiltily stepped away from each other. \n\n\"We shouldn't have done this,\" I said with a serious tone. \n\nThe confused look of shock on Julie's face was precious. \n\n\"Here,\" I finished with an impish smile. \n\nJulie returned a playful smile and we hugged again before I broke off and took hold of her hand, held it against my cheek and kissed it. \n\n\"Good night,\" I whispered, backing away and releasing her hand. \n\n\"Good night,\" Julie shyly replied. \n\nI burned that pretty smile in my mind, turned and headed for my car. \n\nThat night was the first night I hadn't masturbated in bed in a long time. I laid awake thinking. Thinking about Julie, about kissing her, about her kissing me. I grabbed my phone and looked at her text she sent me from the parking lot. \n\n<blockquote>[Hi, it's Julie.]</blockquote>\n\nI added her to my contacts then started to text her back. I deleted it and set the phone down. I picked it back up and started another text then deleted it again, laying the phone on my chest and staring at the ceiling. I was tired, but I could not sleep. I put the phone back on the nightstand and rolled over on my side pulling the covers tightly around me. Kisa stirred and snuggled closer to me. I closed my eyes searching for sleep, but I kept thinking back about kissing Julie, how her lips felt, her scent, how her hand was hungrily squeezing my breast. What was she thinking right now? Was she sleeping? I wanted to text her and find out, tell her I had a great time tonight. But she knows. This isn't high school, I'll text her tomorrow. \n\nSleep finally came, but it was well into the morning."
    ],
    "authorname": "Lorelei907",
    "tags": [
        "masturbation",
        "office",
        "public",
        "public masturbation",
        "public sex",
        "office sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-office-hottie-ch-07"
}