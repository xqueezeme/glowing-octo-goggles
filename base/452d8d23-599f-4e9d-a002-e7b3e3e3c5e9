{
    "title": "Hanky Panky",
    "pages": [
        "\u00a9 2018 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nOkay, this little story was repurposed for the Literotica 2018 Valentine's Day Competition. It's lite, it's trite, it was fun to write and I do hope you enjoy..... Chloe.\n\n<center>* * * </center>\n\n\"You two can work down here,\" Mom said to me. In Cantonese. So Trey wouldn't know what she was saying. \"Not your bedroom, Jenny. That boy, he's a gweilo. Can't trust gweilo boys. Get them in a bedroom with a pretty Chinese girl, all they think about is hanky panky.\"\n\n\"Aiyaaaaah, Mom. It's a school project,\" I complained. In Cantonese. Of course. So Trey wouldn't know what I was saying either. \"Trey and I are supposed to work on it together. I'm not a baby, we need to really focus here.\" \n\nMom wouldn't let me go to Trey's to work on the project (\"can't trust those gweilo boys with a pretty Chinese girl\"). We had to work on it together so he'd had to come over to my house. It'd been sooooo embarrassing explaining that to him. That he'd have to work with me at my parent's house. \n\nYou'd think I'd be used to my Mom embarrassing me by now but I wasn't. It bugged me every time. Chinese parents. Aiyyaaaaah. So old fashioned. Maybe not some, but mine were. I couldn't wait to go away to College. God, they didn't even let me date. How embarrassing is that? Eighteen last month and I still wasn't allowed to date! My non-Chinese friends thought it was because I was a nerd! My Chinese friends knew. \n\n\"Don't sweat about it, Jenny,\" Trey'd grinned when I'd kind of stuttered and blushed my away through my excuses and asked him if we could work at my house. I'd rather have partnered up with one of my friends, but we didn't get a choice. It'd been names out of the hat and Trey and I had ended teamed up together. Could have been worse. Could've been that asshole Dave who liked to call us Chinese girls chinks and slant eyes. That was on a good day. \n\nAsshole. \n\nNope, Trey wasn't ideal, but he was okay. At least he was smart enough that I wouldn't have to do all the pulling on this one. Not like last semester. That useless Richard, la! Trey wasn't bad looking either. For a gweilo boy. Bonus. \n\n\"Okay, let's get to work.\" I pointed him at what was supposed to be our dining room. Except that Mom, Dad and, reluctantly, me, all had workstations there. Mom and Dad, for work. Me, for schoolwork. How embarrassing. \n\nTrey grinned. \"Sure, no problem,\" he'd said, following me in. Sitting down next to me. He did smell nice. \n\n<center>* * * </center>\n\n\"Finished!\" I sat back. Almost two weeks later. Three whole days to spare, although two of those were the weekend. We'd worked together almost every evening. Trey had started staying for dinner. Turned out he liked Chinese food. He could use chopsticks as well. Who'd have guessed? I kind of wondered what his parents thought about him being over here every night. I hoped they didn't think I was his girlfriend or something. That'd be embarrassing. We knew his parents from Church. Vaguely. It wasn't like I hadn't known Trey for years. Right through High School in fact. Just, we'd never spent time together. Really, he was quite likeable. \n\n\"Damn.\" Trey grinned. \"Guess I'm going to have to ask you out on a date then, Jenny. Can't keep using our project as an excuse to come over anymore. Love your Mom's cooking too.\" \n\nI laughed. He'd been teasing me all week. \"And what about Karen, you were dating her last I heard.\" \n\n\"Not anymore,\" he said. \"She dumped me. Said I was spending too much time with you.\" \n\n\"You're kidding me.\" \n\n\"Nope.\" \n\n\"Trey, you staying for dinner.\" Mom's voice carried through the door. Easily. Trey didn't seem to mind her yelling. \n\n\"Sure, Mrs. Lee, love too,\" he yelled right back. \n\nIt was almost Chinese, the way he did that. I had to smile. When he grinned at me, my heart did a little pitter-patter. He didn't seem upset about Karen dumping him either. He even helped me with the dishes after dinner. I wondered if he was serious about dating me. God, I was actually thinking about it. Trey was kind of attractive. Smart. I liked the way he smelled too. \n\nI asked around on Friday morning. It turned out he hadn't been feeding me a line about Karen. She had dumped him and it was because he'd been spending that time with me. She even started dissing me behind my back. Cat. But I smiled when I saw Trey. He smiled back. My heart did a little dance. Maybe Mom would let me date him?\n\n<center>* * * </center>\n\nTrey called me early Monday night. His number flashed up. My heart did that little dance thing. I answered. We talked. All the usual inanities and all the time I was thinking \"will he ... will he...\" And he did.\n\n\"Hey Jenny, I was serious before, you know, last night. How about a date. Tonight? Tomorrow night? Heck, any night?\" \n\n\"I'd love too,\" I said. \n\n\"Hey...\" He sounded all excited. \n\n\"But my Mom and Dad'll say no,\" I said. \"I'm not allowed to date. Definitely not gweilo boys.\" Trey had been around at our house often enough. He knew what a gweilo was by now. In this case, very specifically, him. \"How about coming round tonight, I didn't tell Mom we'd finished the project. We can, you know, maybe we can tell Mom we have to go to the library or something to use some of their reference material.\" \n\n\"Great, why not ask your Mom.\" \n\n\"No,\" Mom said, when I yelled downstairs to ask her. \"Not tonight. Big family dinner at Auntie Stella's tonight. Before I forget, I forget to tell you before. Father D'Souza called, he want you as Altar Girl for rest of the year. I told him yes, you have to go to Church Wednesday evening for rehearsal and tomorrow night we got barbecue at Uncle John's. You tell that Trey he can come round Sunday afternoon maybe, stay for dinner, you two do your project then, okay.\" \n\n\"I heard,\" Trey said. \"Tell your Mom Sunday afternoon is fine, I'll see you at Mass maybe.\" \n\nWell, it wasn't exactly a date but Trey seemed to understand. \n\n<center>* * * </center>\n\nThe whole Altar Girl thing didn't exactly excite me. I'd done it back in elementary school for a couple of years and I was, like, \"why me\" when Mom dropped me off at Church on Wednesday evening. She even walked in with me. Aiiyaaaaah. Like I was a little girl or something. Valentine's Day and I'd seen Trey at School and he'd smiled but no card, no roses. Not even a text. And evening at Church rehearsing altar girl stuff. What a fun way to spend my evening on Valentine's Day. \n\nFather D'Souza was all smiles. \"Mrs. Lee, so good of your daughter to volunteer. I've got one of the old altar boy's here to run her through a refresher, and I wanted to ask your advice about the kitchen downstairs. The contractor's expecting us to drop by his showroom in ten minutes. I'll drive.\" He waved through the open door. \"Young man, come in, come in, here's your trainee.\" \n\n\"Hi, Jenny. Hi Mrs. Lee.\" \n\n\"Trey!\" I was going to kill him. He must've known. \n\nMom looked at me. Raised an eyebrow. But Father D'Souza was already standing, taking her arm, leading her out of his office. Mom looked over her shoulder and spoke. In Cantonese. \"No Hanky Panky in Church.\" \n\n\"Okay, Mom,\" I said. In Cantonese. Why on earth would she say that? Who'd do something like that in Church? Honestly! Mom!\n\n\"We'll be back in forty five minutes, Trey,\" Father D'Souza said. \"Make sure Jenny's good with the whole ceremony, she's helping with Mass tomorrow morning.\" \n\nI was? News to me but okay, it's not like it was rocket science and I'd done it before, eight years ago. Like riding a bicycle, there's some things it's hard to forget. \n\n\"Okay, Father, no problem,\" Trey said, and then we were alone. Him and me. First time seriously alone. With no-one else around. In Church, dammit. Why couldn't it be at home? We looked at each other. A slow smile spread across Trey's face. A slow smile spread across mine. When he took my hand in his, it seemed as if it'd always belonged there. \"You remember the whole walk down the aisle thing don't you?\" Trey said. \"Let's go through the routine in the sacristy.\" \n\n\"Okay,\" I said, following him out of Father D'Souza's office, across the vestibule and into the Church. Hand in hand we walked down the aisle, up the steps, into the sacristy and out of sight. \n\n\"You remember where everything is?\" Trey asked, looking at me. \n\n\"Yes,\" I said, looking back at him. \n\n\"Maybe not these,\" he said, and he reached out and there was a bunch of roses in his hand. \"My Valentine for you, Jenny.\"\n\nBeautiful red Valentine's Day roses and a card and my smile just about split my face as I gazed into his eyes. His wonderful blue eyes. He smelt so good, even better than the roses and somehow the roses were on the counter and I was in his arms, my arms around his neck, pressed against him, his lips finding mine.\n\nTrey could kiss. His lips must have had some kind of magic spell on them, because their touch on mine held me enthralled. That first kiss. On Valentine's Day and that made it even more perfect. I'd never been kissed before. Never, and I know that sounds silly. Sixteen and never been kissed. Well, I was eighteen and never been kissed. Over-protective Chinese parents. Never been allowed to date. Too goody-goody for my own good. Except, now, I wasn't being goody-goody at all. Now, Trey was kissing me and I had no idea what I should do. I was terrified. \n\nNot of Trey kissing me. Terrified of my own ignorance. My own complete lack of knowledge. I wanted to be kissed but I just wasn't sure what to do. Theory's one thing. Practice is another thing completely and as his lips brushed mine, I just froze. His lips brushed my closed lips, something slippery brushed against me next. His tongue? His lips were parting, seeming to urge mine apart. Should I? Was that what I was supposed to do? Heart pounding, I let my lips follow his, opening my mouth to him, eyes wide as his tongue slipped past my lips and into my mouth. \n\nIt was good. To my surprise, it was better than good. His tongue in my mouth was alive, like some beautiful snake, flicking and pushing and sliding against my own tongue, floating against the roof of my mouth, tasting the insides of my lips. Sliding, flickering, feather light pushing, tasting, his lips locked to mine. Without warning, without removing his lips from mine, he withdrew his tongue, gently sucked mine deep into the warmth and wetness of his own mouth and now it was my tongue tentatively reciprocating. \n\nHeart pounding, eyes wide, pressed against him, his arms around me, my tongue explored, tasted, slipped over his before he took control again. His tongue sliding back into my mouth and now it was me doing the sucking, eagerly. His arms held me as we kissed, held me and stroked me, my arms, my shoulders, my back, setting me on fire. More than anything else, I wanted him to run his hands over the rest of me and I was pushing myself against him, aching for more and his hands were on my hips. \n\n\"Ooohhhh...\" A small gasp escaped my lips as his mouth lifted from mine, both of us breathing hard. \n\nTrey's hands squeezed my hips, pulling me tight against him. Suddenly aware of his bulging length underneath the fabric of his jeans, my heart fluttered. My gasp of surprise was audible to both of us. Almost, almost, I pushed myself away from him but something inside me told me to wait, to stay where I was, held tightly against him, looking up into his eyes and I did. I waited, breathed in sharply, one shuddering gasp after another, half closing my eyes, feeling his hard erection pressing against me through our clothing while I waited, for what I wasn't sure. \n\nHidden away in the sacristy, Trey's hands ran over my back, my shoulders, my face, brushing my cheeks, my hair. I was trembling as one of his hands slid around between us, closing firmly over one of my breasts. His hand pressed against me, cupped my small breast through the fabric of my shirt and the light cotton of my bra. I felt his grip tighten on me, touching me where no guy ever had and then his other hand was there, slipping up to the collar of my shirt, his fingers working free the buttons one by one. \n\nIn the still silence of the sacristy, I could hear the snap of each button being worked free, feeling more and more of me being progressively exposed as his fingers worked their way downwards. I was trembling as he unbuttoned me, shaking even, but that hand on my breast, teasing my increasingly sensitive nipple through my bra held me enthralled until my shirt was complete unfastened, wide open, exposing my skin to his fingers. Now I looked down. Looked down between us to see as well as feel his fingers brushing across my stomach, his skin white against my silky olive brown. \n\nI looked down and then I looked up as his hands slid around to my back and casually, easily, his fingers unhooked my bra. That sudden release of tension as he worked the hooks free told me what he had done, my breasts quivered as their constraining support was released. Suddenly shy, I turned away from him, only to find both his hands sliding my bra up, exposing both my breasts, cupping them, caressing me, rolling my nipples under his fingers, all while that bulging hardness now pressed firmly against my butt. Both his hands were on me, squeezing me, massaging me, new sensations washing through me. \n\nShyness and embarrassment overtook me. I'd never exposed my body to a man before, never and even excited and as I was, I was shy. Shy but excited. Embarrassment. Pleasure. Excitement. A growing warmth, a tightness in my stomach, a throbbing wet heat in my sex that almost scared me with its intensity. \n\nLooking down, I could see my nipples. Reddish brown, swollen, rubbery hard, larger than I had ever seen them as they rolled under his fingers, his thumbs. He was tall enough that the top of my head came to just beneath his chin and my head was leaning back against his shoulder, my mouth wide open, panting, whimpering, gasping as his hands explored my breasts while that hard bulge pressed firmly against my butt. Held, helpless, stunned at the speed with which everything had happened, hung there, suspended in pleasure. \n\n\"Trey.\" My voice held helpless longing, desire, confusion, shame and excitement, all in one word. \"We shouldn't....\" I was a good girl. A good Chinese girl and he was doing to me what a good Chinese girl should never let happen. Not until she was married. Or at least engaged. Least of all in Church. Worse still, in the sacristy. \"Trey...\" \n\n\"Jenny.\" His voice held his desire for me, male dominance, assertiveness, want, confidence, passion. He silenced me with a firm squeeze of my breasts with both hands. His face buried itself in my hair, he took a deep, sensual breath, inhaling my scent, shuddering as he pressed against me, the hard promise of his bulging length pressing firmly against my butt. \n\nIt'd finally dawned on me what that hardness was. High School biology classes and those sex education lessons suddenly made more sense as I felt him pressed firmly, solidly against my butt. His fingers and thumbs took my swollen nipples, squeezed them, tugged at them, achingly delicious sensations as his hardness ground against me. \n\n\"Ooohhhhhh.\" Eyes half closed, I cried out at that forceful caress, a cry loud enough to carry through the silence of the Church, loud enough to have been heard if there'd been any listeners. Fortunately, there were none and my cry died away, faded to a muffled whine as I bit down on my bottom lip. \n\n\"Ooohhhh.\" I sobbed again, quietly as I watched him roll my rubbery-full nipples between his thumbs and his forefingers. Without experiencing the pleasure that rippled through me when he did that, I would never have believed how good it felt, how much I wanted him do it again. Watching his fingers, feeling his fingers on me, I knew my Mom had been right all along. Gweilo boys, they wanted hanky panky with pretty Chinese girls.\n\nTrey was a gweilo boy. \n\n\"Ahhhhh.\" He did it again, he rolled my nipples and I whimpered, then whimpered again as he tugged and twisted them. It went on and on, my nipples swollen hard, standing straight out, impossibly sensitive, impossibly large and hard under his fingers, my hands unable to resist, moving to rest over his, wanting to feel his hands moving on me as well as watch them. \n\n\"Your breasts are beautiful, Jenny,\" he breathed into my hair as his hands continued to caress me. I shuddered, rocking with him now as his hips started to move, to push against my butt, promising more, leaving me limp. I watched his hands as they gently cupped me, held me, tormented me. A guy's hands on my naked breasts for the first time, stroking them, brushing my nipples, teasing them. The sight and feel of his fingers on me enthralled me. \n\nWhen his hands guided me around to face him again, I made no resistance. None. My arms went around his neck, my mouth opened to his, I accepted his tongue within my mouth as if it belonged there. His hand on my back, under my shirt, on my skin, urging me closer to him; that hand had me shivering with delight. It was the other touch though. The one that had found its way under my skirt as he turned me. The one that was on my panties, touching me where a good Chinese girl shouldn't be touched until she's got that engagement ring on her finger. \n\nThat's what my Mom said. \n\n\"Trey ... Trey ... stop it.\" Only, I was way too young to even be thinking of engagement rings. I was still at High School. My last year at High, okay, but I was Chinese. My Mom said I wasn't supposed to do anything like this with boys. Especially not gweilo boys who'd do their best to take advantage of a pretty Chinese girl. \n\nWhich made me wonder about my Mom, just momentarily. She seemed to know a lot about gweilo boys and what they did. How did she know all that? Then I forgot all about my Mom. \n\n\"Ohhhhh ... ohhhhh, Trey.\" Oh god, his fingers. They must have some sort of magic spell worked on them too. He was touching me through my panties and I was so wet, so sensitive. His fingers, they were doing things to me. Hot wet ripples of excitement washing through me, turning me to jelly. Molten jelly as he kissed me. As his fingers brushed me where I was so sensitive. So receptive. \n\n\"Ooohhhhhh. .... Ohhhh , Trey .... we shouldn't.\" Soft little moans of excitement as his fingers caressed me, featherlight on me, delicately teasing and tempting. I knew we shouldn't. But we were. He was. I wasn't stopping him. \"We shouldn't Trey, not here.\" What his hand was doing to me was something a guy's hand shouldn't be doing to a girl in the sacristy at Church. No way. \n\nI shuffled my feet a little further apart, shivering, inhaling his scent. Making more room for his hand to touch me where it shouldn't. \n\n\"What if ... what if someone comes?\" We wouldn't know, not in here, out of sight. \n\n\"You're right.\" Trey kissed me again. \"Come on, we need to be able to see if anyone's coming.\" \n\nThat wasn't what I'd meant but it didn't matter. He walked me backwards out of the sacristy, backing me out towards the altar, flicking the light switches to turn the lights off as we left the sacristy. Hidden in the shadows, he backed me all the way to the altar, pushing me up against it so that I was half sitting on the edge, my back to the entrance. Trey could see though, and inside the Church, with the lights off, it was dark up here. \n\nDark enough that we could see anyone out in the concourse long before they opened the doors into the church. With a sigh of relief, I gave my mouth up to Trey's kisses once more, my shirt hanging open, my little white cotton bra pushed up around my armpits. His hand under my skirt, cupping my sex through my white cotton panties. Pressing against me through that thin cotton. My sex seemed to pulse against his hand with a flooding wet heat that held me so that I was incapable of movement. ",
        "Just his touch there was exquisite. Pleasure washed through me, filled me, held me in its thrall. His mouth sealed to mine, his tongue sliding, flickering, tasting inside my mouth, my breasts exposed, his hand under my skirt, on me, I wanted everything he was doing to me. Everything and more. That hard bulge. One of my hands slipped down, explored, brushing the front of his jeans, feeling him there. His mouth lifted from mine, both of us breathing hard, his hand on me. Mine on him and I knew. I knew. Knew I was his. Knew I was Trey's. \n\n\"You're mine, Jenny,\" he breathed. \n\n\"Yes,\" I whispered, looking into his eyes. \"Yes.\" I was. His. All his. \n\nHis hand moved up under my skirt, his fingertips slid under the elastic of my panties, under and down. Down to cup my sex where I was so swollen and hot and wet, liquid wetness for his fingertips to slide in as they pressed against me. His fingers brushed over the sensitive nubbin of my swollen clitoris, a sudden rushing surge of pleasure, his hand rubbed me there, his finger slid inwards between my labia, found my entrance. \n\n\"Ohh.\" I gasped, helpless, his fingertip pushing against me. Pushing, pushing through, entering, sliding up inside me and I was panting. Panting for breath, braced against the altar, supporting myself with both hands as his finger caressed me inside. A man's finger, inside me. Touching me. Caressing me within, slippery wetness coating his hand. So much tension within me, so much excitement. I wasn't supposed to do this. I wasn't. But I was. I was and I wanted this. Wanted what Trey was doing to me so much. \n\n\"Trey,\" I moaned, looking down. Down at his hand under my skirt. My skirt bunched up around his wrist so that I could see his hand inside my panties. See it there at the same time as I could feel his hand on me, his finger moving inside me, pressing against me inside, probing and exploring in me where I'd never even touched myself and it was unbelievably exciting. \n\n\"Jenny.\" His lips brushed mine, his hand was suddenly gone from me, from inside my panties. Both his hands were on my hips, touching my bikini panties. They began to slide downwards, pushed down by his hands as his mouth brushed my lips. His touch on my hips sent little shivers down my spine. Bigger shivers came soon as his hands worked my panties downwards. Dizzy, faint with excitement, I wanted to moan but even my voice wouldn't respond to me. My panties moved below my sex, exposing me. Shame. Embarrassment. Fear. But the excitement I felt overrode everything. \n\nHis hands pushed my panties further down, sliding them down my thighs and still I perched on the edge of the altar, looking down, seeing my panties almost at my knees now, well below my skirt. I was afraid. Afraid of being exposed, afraid of what was going to happen while simultaneously wanting his hand back where it had been, his finger inside me. Touching me. We both watched as my panties dropped to my ankles. He looked into my eyes, smiled, knelt down and helped them over my feet. \n\n\"Lift your skirt up,\" he said, looking up at me as he knelt before me. \n\n\"Ohhhh.\" I whimpered; a gasping little noise of intermingled fear and excitement and anticipation but not of protest. My hands moved to my skirt, gripped the hem. My heart stopped. My hands lifted my skirt, exposing my sex to Trey. Looking down, seeing myself as he saw me as he knelt before me. Slender olive-brown thighs, toned muscles, a small triangle of very short, very sparse black hair. Like many Asian girls, I just naturally didn't grow much hair there. My sex. My labia, swollen, pink, glistening. My clitoris, a small protrusion barely visible but so sensitive. Sensitive even to the movement of Trey's eyes. \n\n\"You're so pretty, Jenny, so beautiful.\" His voice was husky with passion, with admiration, with enjoyment. \n\n\"Am I?\" My own voice a faint gasp. I'd looked at myself before, out of curiosity, but I'd never seen myself like this. Swollen, excited, wet. I could see my labia glistening even in the dimness of the unlit church. Had he seen other girls like this? \n\nHe smiled up at me. \"Yes.\" \n\nThen he kissed me. Kissed my sex with his mouth, his tongue sliding along my slit, tasting me there, sucking on me, his hands holding my hips, his face between my inner thighs. \n\n\"Oooohhhhhhhhh.\" I squealed. I let go of my skirt. I clutched his head to push him away. Shocked and embarrassed. His mouth on me? There? His tongue lashed my clitoris, his lips on my labia, spreading me, opening me. Exquisite friction. Exquisite shame. Excitement. \n\n\"Trey .... Trey... ohhh ...oohhh Trey.\" My hands no longer trying to push him away. Clutching at his head. Hips jerking uncontrollably as his tongue circled my clitoris. My thighs opening, spreading wide. \n\n\"Ohhhh ...ohhhhhh.\" Oh god, this was so embarrassing. So ashamed of myself. His mouth on my sex? How could he? How could he possibly enjoy this? So good. His tongue felt so good. What was he doing to me? Oh Jesus. Jesus Jesus Jesus and I couldn't stop my hips from moving, from jerking. My hands pulled at his head, clutched at him as his tongue licked me, tasted me, drove me wild..... \n\nAbruptly he stood, he kissed me, his mouth on mine and I tasted myself on his lips. On his tongue as I opened my mouth to him. Cheeks burning, skin on fire. How could he have done that? How could he? But his hand was on my sex, his fingers, a finger pushing into me, sliding up inside me and his hand cupped my sex, his hand ground against my clitoris and my hips were moving again, I was moving against his hand, moaning wordlessly into his mouth as he kissed me. Kissed me hard and I was acutely aware of how wet I was on his finger, on his hand where he cupped me. \n\nHis mouth lifted from mine. Ravenous desire looked down into my eyes. \"I want you, Jenny Lee.\" His voice, husky, overflowing with desire, with want, with need. \n\nMy own voice, faint, submissive. \"Trey .... Trey....\" Uncertain of what I wanted, not knowing. But knowing I wanted him. \n\nHis hands, moving me, standing me, turning me to face the altar, bending me forward over the altar, the white altar cloth beneath me, supporting myself on my forearms, my thighs pressed up against the cool wood, my hair a black fan around my head as his hands positioned me. \n\n\"What...?\" I gasped as I was bent over the altar, my hands clutching at the white linen altar cloth, Trey's hands flipping my skirt up to my waist, exposing my butt to his eyes as his feet nudged mine apart until my legs formed an upside down V. I heard his zipper, the rustle of clothing. \n\n\"Ohhh.\" Oh god, oh god. It dawned on me abruptly, he was going to do it to me and bent over like this, I was completely exposed to him. Heart racing, head spinning, I was sure I knew what was about to happen. I closed my eyes and I waited, acutely aware of how liquidly wet and ready for him my sex was. Those textbooks, those sex education classes, suddenly they all made sense to me now except they hadn't mentioned how exciting it was. I was bent forward, positioned, exposed, my sex wetly ready to be taken. Trey was going to take me and I wasn't making any move to stop him. I wasn't moving at all. I was waiting.\n\nBehind me came a long, deep shuddering breath, rustles, the clatter of his belt hitting the floor, fabric landing in a pile. Hands on my butt. \n\n\"Ohhhhhh.\" I squealed, loudly before I realised it was his hands on me, caressing me, his thumbs tracing the curve at the top of my thighs. What was he going to do? I swallowed nervously. I had no idea. All I knew was I was here and he could do anything he liked to me. I'd never felt more helpless and excited and scared in my life as I did in those moments of waiting, positioned for that first use of my sex by a man's cock. By Trey's cock. It was strangely exhilarating, enough so that I could feel my nipples aching, my sex flooding with liquid excitement. \n\n\"God, you're so beautiful Jenny.\" His hands caressed my butt, he move closer, his breathing audible behind me. \n\n\"Ohhhhhh.\" I squealed again, head sagging down as something penetrated my sex with slippery liquid ease, but after a second I realized it was his finger, his finger slipping in and out of me, shivering excitement as it plunged through my entrance, moving the way a cock would move inside me. Bent forward like this, knowing he was standing behind me, looking at me as his finger used me, I was both embarrassed and excited. My sex pulsed with a wet heat that had me gasping, had me wanting him to do what I was sure he was going to do so much that I closed my eyes in sudden shame, feeling his finger sliding in and out of me with slippery ease. \n\nBent forward, naked, exposed, offering myself to him, there was nothing I could hide. I was offering myself for him to take and there was nothing else I would rather have done in that moment. There was even a wet trickle down the insides of my thighs. I was as ready for sex as a girl could possibly be who'd never done it before and I knew it. \n\n\"Move your feet wider apart Jenny.\" Trey knew it too. \n\nI obeyed, more exposed and vulnerable than I'd ever felt in my entire life. Offering myself to him like this was obscenely exciting. Legs splayed wide, I was positioned to be taken. I was trembling with excitement now, every nerve on edge, tingling, alive. He moved closer, his finger eased out of me. His hands stroked my hips, slid across the skin of my butt, his thumbs pulled my labia apart. I shivered at his touch, at the sheer intimacy of what he was doing to me. Twisting my head to peer back, I could see him looking at me as his thumbs held me open, the promise of their touch making me shiver. I knew what he was looking at. My sex. He glanced up, saw me looking at him and smiled. \n\n\"What are you going to do?\" I gasped, looking down the aisle towards the doors. God, I hoped no-one came. \n\nWe both knew what was about to happen. There was no thought in my head of saying no, of asking him to stop. None at all as I bent over before him, vulnerable and exposed, his hands on me. His thumbs, touching me. There. Opening me. \n\n\"Give you something special for Valentine's Day,\" he said. Something brushed against me. \n\nTouched me. There. Where I was so wet. Where his finger had been touching me. Something bigger. A lot bigger. Pushing against me where his finger entered me and I was so wet and ready as he brushed against my sensitive labia. His hands held my hips, gripped me tight, his cockhead pushed gently against my sex where his thumbs still touched me. My labia spread, parted, he eased in between then, pushed up against my entrance, the gentle pressure sending shivers of delight through my entire body. \n\n\"Do you want it, Jenny?\" Trey asked, poised against me and even in my state of scared excitement, I marvelled at his control. I had none, not now. I wanted to be taken, scared as I was. My cultural conditioning said \"no\" but my body said \"yes.\" My body said I needed this and I wanted it. My mouth opened, my body won. \n\n\"You can do what you want to me.\" Surrender. Waiting. So hot and wet and scared and excited. \n\n\"You're going to get it now, Jenny,\" he said, and I knew he was enjoying this. \n\n\"Aaaiiiiihhhhh.\" I knew I was going to get it too and all I could do was bite my bottom lip and whine and hunch my back as his swollen cockhead forced its way through my entrance and paused, just the head of him inside me. \n\n\"Hhhuuuunnnhhhhh,\" was my first reaction, his cockhead inside me. Stretching me. Big. Bigger than I'd expected but it didn't actually hurt. I always thought your first time was supposed to hurt but it didn't. I just felt stretched. Full. I could feel myself where he entered me, feel myself stretched around him and there was that moment of shocked realization as it dawned on me that yes, I was really doing it. Sex. A guy was having sex with me. He was going to fuck me and I was bent over the church altar, losing it. \n\n\"Owwwww.\" I lost it. Lost my virginity. Gone. Trey moved in me, pushed inwards, something inside me hurt, a sharp pain. I cried out, jerked forward only to be brought up hard by the altar. My hands clutched at the altar cloth. Trey's hands gripped my hips, his cock eased a little further into me, deeper inside, stretching me around his thickness inside and I was wet for him, slippery for him, easy for him, a virgin for him as he worked his cock into me. \n\n\"Nnngghhhh.\" I whined, wanting it, afraid of it, excited at feeling his solid intrusion within me. That first inch, penetrating inside me as I melted around him, stretching me inside, stretched me where I encircled him. That sharp pain dissipating fast. That shock of realization. I wasn't a virgin. Trey had just made sure of that. \n\n\"Owwwwww.\" Gasping, heart pounding intoxication. Knowing I was being taken. Knowing that it was happening. That solid presence inside me, the excitement of surrendering myself. Of giving up to Trey what he wanted to take from me. His cock inside me where I'd never been touched. \n\nI wanted more. I wanted Trey. I wanted all of him in me but I had no words. Only those wordless sounds that somehow emerged from my mouth as I remained bent forward over the altar. \n\n\"I want you, Jenny.\" His voice, a low growl behind me. His fingers digging into my hips. \n\n\"Ohhhh.\" My own voice, a soft sob of surrender. \n\nHe moved in me, eased back a little, thrust into me, his hands holding me where he wanted me, his thumbs on the insides of my thighs, his legs against my inner thighs, ensuring I was splayed open for him and I knew he could see his cock disappearing into my sex. Gentle movements, sawing in and out of me, pushing higher inside me with every thrust. Gentle inner pressure that worked him deeper with every movement inside me. \n\nHis cockhead pressuring my vaginal channel, stretching me inside as he penetrated me. Forcing my surrender. Taking my surrender. Taking me. Taking my virginity, my precious pearl. Doing to me what shouldn't be done to a good Chinese girl until she's married. \n\n\"Oooooh.\" Inside me. His cock. Oh god, I was a bad Chinese girl. A bad girl. I loved it. \n\n\"Jesus, Jenny, you're so tight ... so tight and wet.\" \n\nWas I? I had no idea but Trey, I was sure he'd know. He seemed to know what he was doing. Had he done this before? All I knew was he was so big inside me. Huge. Hard. Rigidly hard, forcing my body to adapt to his thrusting length. Oh fuck. Oh fuck, yes... yes. \n\n\"Ooohhhh .... Aaaahhhhh.\" Deeper and deeper. In. Out. \n\n\"Ooohhhh......Uuughhhh.\" Deeper, harder, more forceful. \n\n\"Ooohhhh......Aaaahhhhh.\" Taking me. Groaning. \n\nI was groaning with every movement of his cock inside me, into me. His cock surged deeper inside me, stretching my walls around his thickness, forcing my channel to contour to his rigid hardness, feeling every inch of him inside me, deeper and deeper. \n\n\"Oooohhh.....Uuugghhhhh.\" So deep. So long and thick in me. Irresistible. \n\n\"Ooohhhh.....Aaaaahhhhhh.\" Sliding movements. In and out, in and out, delicious friction against my inner walls. \n\n\"Oh! .. Oh Jesus! ... Trey ... Trey ...oohhhh.\" Further inside me. Higher in me. Exquisite surrender, my forehead resting on the backs of my hands, groaning as he moved in me. Groaning as he continued to push slowly up inside me, working himself inwards, working himself deeper, stretching me, taking me and I knew that the virginity that my cultural background held so precious has been irretrievably lost. That virgin membrane torn irrevocably asunder by Trey's cock piercing me. \n\nI didn't mourn its loss as I bent forward over the altar. I reveled in it. Reveled in that residual pain, reveled in those sensations he was creating within me. Reveled in my surrender to him. \n\n\"So tight,\" he breathed. \"Oh fuck, Jenny, your cunt's so fucking tight.\" \n\nBoth of his hands gripped my hips, holding me in place as he worked his cock backwards and forwards inside me. He moved steadily in me, slow gentle thrusts, his cock deeper into me, pushing, stretching, deeper and deeper. Impossibly deep and how could it possibly be as far up inside me as it felt. I could feel him all the way up, impossibly deep, so large and hard within my sex. \n\n\"Oh god, Jenny, take it ..,. take it all...\" \n\n\"Ooohhhhhh.\" He pushed up hard against my butt and the backs of my thighs, the fronts of my legs pushed up hard against the altar. \n\n\"Ohhhhh....ohhhhhh.\" He held himself still inside me, his body firm where he pressed against me. This was it! All of his cock. My sex clasped him, the inner walls of my channel clutched at him, contoured around his rigid length, feeling him in me, every inch of him and my entire focus was on those sensations, on him inside me, how it felt. Oh Jesus, it felt so good. \n\n\"You okay, Jenny?\" he breathed, one hand gripping me, the other stroking my back, my butt, my waist and I knew what he wanted. He wanted to fuck me. \n\n\"Don't stop,\" I moaned, my body sheened with sweat. \"Please don't stop.\" Because I wanted this, I wanted him taking me. \n\nHe did. His hands held my hips, he moved, taking me with slow steady thrusts. Easing himself back, sliding inwards against the tightness of my channel. I could feel him in me, feel the swollen plum-sized cockhead massaging and stretching the walls of my inner channel as he moved, feel his shaft filling me slowly, feeling my entrance stretched around his thickness as he slid into me, as he withdrew. Without thinking, I squeezed my internal muscles, taking a tighter grip on his shaft, shuddered rapturously at the different sensations that created within me. \n\nOne of his hands left my hip, slid around under me, under my stomach and behind me, he leaned forward, pushing into me harder, more forcefully. His hand slid down, between my thighs, cupping me, sliding over my clitoris. He wasn't teasing me now, he was taking me and I was eager and willing. \n\nBent forward before him over the altar, if ever there was an eager sacrifice it was mine. I'd had gone willingly to the altar, so to speak and in hindsight, as a catholic altar girl, it was no doubt a fitting simile. But neither Trey nor I were thinking by then. Me, I was absorbed in the sensations his cock thrusting into me generated within my body. My entire world narrowed down to my own body and to his. \n\nAnd Trey? He was fucking me. \n\nHe leaned forward over me, his thrusts quicker, taking me deeper and harder. My channel clasped him tightly, each long sliding thrust of his cock drawing a different response from me, new excitement, new sensations. Sensations that I hadn't known I could feel. My hands clutched at that white altar cloth as he rocked into me, his body slapping against mine with every thrust, my body sheened with sweat. \n\n\"Ohhh ... ohhh .. oohhh...\" I couldn't stop moaning, soft helpless little moans and sobs and cries as I arched my back, lowered or raised my head, feeling myself pinned between Trey and the altar as he had me. He might have been taking me, but I was certainly eager to feel more of what he was doing to my body and he was giving me more. \n\nHe was moving harder now, each of his plunging thrusts juddering and moving my body, my breasts quivering under the increasing power of his pounding hips as he took me. I was melting, being drawn ever deeper into a golden haze of pleasure. His hips continued to rock forward, his cock pounding into me now, hard, harder. \n\n\"Jenny ... Jenny ... tell me ... you want ... me to ... fuck you,\" he grunted. \n\nMy cheeks flushed. How could I say something like that? Me? My mouth opened, moved, no words coming out. To say that, to ask him to fuck me, to say that word, that would be shocking and terrifying and exciting. But he was, he was fucking me and I wanted him to keep doing it. Keep fucking me. \n\n\"Oh fuck ... Jenny ... Jenny....\" His grunts as he thrust himself into me, as his cock took me. Fucked me.",
        "Could I say that? Could I ask him to do it to me, ask him to do what he was already doing to me? Just the thought excited me, excited me as much as his hand on me, under me, touching me where he was thrusting into me. \n\n\"Ohhhh ... Trey ... Trey...\" His cock seemed somehow bigger inside me, or was it that in my increasing excitement my walls tightened around him? \"Ohhh ... Trey .... Trey...\" I wanted to say it. I wanted to. \n\n\"Jenny .... Oh fuck, Jenny ....\" He was thrusting harder still, his cock taking me deep now on every thrust, pulling back, plunging into me, his body slapping against the backs of my thighs and my butt and my arms were giving out. I couldn't hold myself up and I was face down on the altar, the cloth cool against my exposed breasts, the wood hard under me. \"You're mine, Jenny .... You're all mine...\" \n\nI was? Oh god, yes ... yes ... I so wanted to be Trey's. His girlfriend. His. Eyes wide, moving on the altar as he thrust and thrust and thrust his cock into me, into my sex, moaning with every move he made, my mouth worked. \"Oohhhh ... Trey .... Yes ... yes ...\" and then, almost inaudibly, \"fuck me.\" \n\n\"Oh yeah, say that again, Jenny,\" he grunted, slowing his pace, no longer jolting me. Long slow slides that made me want to scream. \n\n\"Fuck me,\" I moaned, very quietly, then, louder. \"Fuck me, Trey .... fuck me.. yes... yes ...like that... please ..... ohhhh please fuck me...\" Almost wailing because it was so good and I wanted it so much. \n\n\"Oh yeah, Jenny ... Fuck, Jenny ... oh yeah, I'll fuck you, Jenny ... fuck ... fuck...\" He was. He did. Leaning further forward, his weight pressing on me, almost painful as his cock pistoned into me, hard and fast, one hand under me cupping my sex, his thumb brushing across my clitoris, the other now finding one breast, cupping it in his palm while his finger found my nipple and toyed with it, squeezed it, then tugged at it, tugged hard. \n\n\"Aaaahhhhh ..... aaaaaahhhhh.... Please .... Please .... Trey ..... fuck me ....fuck me....\" I moaned at that, my hands clenching into fists, my head shaking back and forth as I began to gasp, desperate pleas, lost in the moment, lost in the sensations thrilling my body, lost in my need to give myself to him, to take his cock inside me and satisfy him, give him what he wanted. Inside me, something was building, something big that needed to happen, something that built up and built up within me. \n\n\"Ugghhhh .... Ugghhhh .... Fuck .... Jenny .....Uughhhh.\" His grunts as he thrust were hot in my ear, my own moans louder, uncontrolled, uncontrollable. The slap of his skin against mine, the wet noises of his thrusting slides into me echoed around the Church, filling the silence, just as his cock was filling me. Sliding easily in me, my liquid wetness taking him easily, taking every thrust of his shaft and if I could have I would have screamed. \n\nHe liked it when I said fuck. He did. It excited him. And me. \"Fuck me, Trey .... Fuck me...\" The unaccustomed obscenities rolled over my tongue, out of my mouth as Trey's cock continued to pump into me, his hands controlling me, pulling me back onto him as he thrust, holding me as I bucked and clutched at the altar over which I was being taken. It was pure bliss and it was wonderful and it went on and on and I wanted this never ever to stop. It'd never occurred to me that sex, that being taken and fucked, could possibly feel so good. \n\n\"Trey ... Trey ...uuuhhh .... huughhh ... fuck ..... fuck me ... fuck me hard....\" I revelled in what he was doing to me. I'd happily have stayed bent over the altar with Trey doing this to me for hours and the more he fucked me, the better it felt, pleasure radiating outwards from my sex, permeating my entire body. \n\n\"Jenny ... Jenny ....\" Behind me, the excitement as he gasped my name, his grunts of pleasure as he thrust himself into me, as he pulled back until only the head of his cock was in me before thrusting into me once more, penetrating deeply, his movements driving his body up hard against my butt and the backs of my thighs, taking me forcefully. Taking me hard. His breathing fast and heavy and even in my own excitement I could tell he was thoroughly enjoying his use of my sex. \n\n\"Trey ... fuck me, Trey ... fuck me.\" Each thrust lifted us both to new heights, each thrust forcing my legs to splay a little wider apart, my hands to clutch at the altar cloth, each withdrawal drawing a long gurgling moan from the back of my throat. The gurgling moaning gasp of a girl learning the true meaning of receiving and giving pleasure to a man. I was making more than enough noise for both of us. \n\nMore. I wanted more as he pounded into me, my body sliding on the altar with each thrust, my thighs pushed a little painfully up against the edge of the altar. That slight pain only added to my excitement. Now I moved both hands under me, cupping myself between my legs, finding our joining, feeling him sliding into me with my fingertips, moaning as I felt him using me there, his cockshaft thrusting into me, withdrawing, thrusting inwards. The fingers of one hand brushed my clitoris. That single touch was enough to send a small orgasm rocketing through me. \n\nMy sex spasmed around his shaft, clamping down on him in a series of spastic little convulsions that drew a grunt of enjoyment from Trey. Even as I climaxed, I could feel his thrusts turning hard and jerky inside me. His grunts melded with my own sobbing cries and moans and even in my inexperience I sensed that the moment of his culmination was near ... any moment now ... any moment. I knew he hadn't used a condom and even as I lay before him taking his cock, climaxing myself, I was expecting that he'd pull out of me. \n\n\"Ooooh .... Ooohhh.\" His weight on my back crushing me onto the altar, his thighs between mine, splaying my legs wide apart, his breath hot and fast against the back of my head, his cock driving into me, each thrust sliding across my fingertips, fingertips that were dripping with my own wetness. \n\n\"Fuck me, Trey ... fuck me hard .... fuck me hard ...\" \n\n\"Uggghhhh .... Uggghhhhh .... Ugghhhhh...\" Explosive grunts accompanied his thrusting harder into me, plunged deep inside me. \"Take my cock ... take it .. take it, Jenny...\" \n\nHis voice, grunting hoarsely in my ear as he gave me a series of particularly hard thrusts that jolted my entire body. Those hard thrusts, that jolting, his hands on me combined with my own fingers on my sex and on his cock abruptly set me over the edge again. \n\n\"Yes ... Yes, Trey ... Yes.\" I took it. His grunts, his words, they echoed in my head as his cock slammed into my sex, filling me and under that relentless pounding, I lost control, helplessly washed away by my own climax. His cock rammed into me, my sex convulsed tightly around his cock. I shook as a tidal wave of pleasure broke and washed through my body, filling me, melting me, turning me into glowing jelly, my hips shaking uncontrollably as the pleasure washed through my body. In my blind excitement, I wanted to give him everything as he thrust hard into me, my sex clamped down on him, squeezing him as if I held him in my hand. \n\n\"Do it inside me,\" I sobbed, squeezing his thrusting cock inside me as hard as I could. \"I want it in me.\" My first time, I wanted everything. Everything he had to give me and I wanted to satisfy him. I wanted that so much. My hands under me stroked him as he thrust, my fingers brushed him, feeling his cock surge into my, a steel bar thrusting up inside me all the way, throbbing and pulsing under my fingertips as I was helplessly impaled. \n\n\"Jenny .. oh fuck, Jenny, fuck .. take it ... take it all ...\" Trey pressed in hard, keeping himself deeply buried within me as culmination swept him away. His weight crushed me helplessly up against the altar. I was pinned between him and the solid wood even as his hands held me and pulled me hard back onto him. Even as he thrust that steely hardness hard up inside me, crushing himself into me, driving his cock into me. \n\nThat sensation? That experience? The first time Trey came in me, how to describe it? How can one describe the indescribable? His cock had me impaled, thrust deep inside my sex, his rigid length pulsing and throbbing against the walls of my channel as he prepared to flood me with his thickly spurting cum. \n\n\"Yes ... yes ...yeeeeees!\" My voice sobbed, my sex spasmed and danced on his cock, gripping him, clasping him, squeezing down on the rigid length of him as a great golden wave of pleasure swept through me, far more intense than those earlier climaxes, overwhelming me, holding me helpless across the altar as his cock throbbed and pulsed inside me. \n\n\"Nnnugghhhh.\" Behind me, Trey grunted deeply, humped himself hard into me and I felt it. Felt that shotgun blast eruption of his cum spurting outwards in a flooding jet against my cervix, where the tip of him brushed lightly against me. The first time a man had cum inside me. That sensation was brand new, never before imagined or experienced, that spurting eruption within me, his cock throbbing and pulsing where I clasped him, his cum erupting inside my body, spurting within me, flooding my sex with his cum all while I shook and quivered and moaned through my own climax. \n\n\"Nnnuuughhhh.\" Trey grunted a second time, jolting my body, forcing me hard against the altar, moving my body with the impact. White hot blasts of cum spurting inside me one after the other as I sprawled face down across the altar, my legs splayed wide apart. He stood between them, looking down at my butt, my back, the back of my head, his cock pumping his cum into me in an endlessly spurting flood that went on and on and on. \n\n\"Ooohhhh .... Ooohhhhh.\" My sex spasmed on his throbbing length, his cum jetted out, flooding me and even as he was still pumping into me, I could feel it starting to seep out of me, lubricating the movements of his rigid cockshaft within my sex, squelching outwards at the point where our bodies joined, his cum oozing from my sex as his jerky movements slowed at last. \n\n\"Oh Trey .... Trey...\" Lying before him, his cock impaling me, throbbing inside me, I was glowing, my body alive in the aftermath of my own climax, so aware that my sex was flooded with his cum, that he'd taken me and finished inside me. I'd never felt such pleasure, such intoxicating enjoyment and excitement, I'd never been so aware of my own body as I was in that moment in time where he'd finished inside me and we were still joined together, where he was still inside me. \n\nLying on the Church altar, the white altar cloth cool against my breasts, against my cheek, I was unable to move. My body had turned to jello, my legs and arms were outside my ability to command. I sprawled face down on the altar, just as Trey had finished with me, breathing in great gasps, helpless, Trey leaning forward, still pressed up against me, still inside me, his cock faintly pulsing. \n\n\"Oh fuck, Jenny...\" Trey was the first to speak after our shared culmination. \n\n\"Trey...\" My own voice was a whisper, my eyes closed, I was smiling. So that was sex? Wow! I so wanted his arms around me, holding me now but his hands on my butt, caressed my butt. That was fine too. \n\n\"Jenny... I have to...\" I could feel him shrinking inside me, his cum oozing from me. \n\n\"Okay,\" I breathed, and he did, he eased back, his cock slipping wetly from my sex.\n\n\"Ohhhh.\" A little moan as I found myself suddenly empty. Without his cock inside me, I was suddenly lost. It was as if a part of me had been removed, was missing. \n\n\"Ooohhhhhh.\" I sighed now, closing my eyes, feeling his cum oozing thickly from me, almost gushing out of me, flowing out from me where I was wide open. Trey had filled me with his cum, filled me full and I was too weak to move. I could feel it flowing from my wide open and distended sex, the first cum a man had ever shot off inside my body and I wanted it to stay inside me. All of it. I wanted it to flow deeper inside me, I wanted it to remain where his cock had spurted it deep inside my sex. I didn't want to lose it, not a drop, but I was too weak to move. \n\n\"God, you're so pretty, Jenny.\" Trey's voice brought me back to the present. I think I'd almost slept for a moment, my eyes closed, my breathing slowing as I lay on the altar. \n\nOn the altar? \n\nShit! \n\n\"Trey...\" I was panicking. \"Trey, we have to clean everything up before my Mom and Father D'Souza get back here.\" \n\n\"They'll be a while, Jenny.\" His voice was so relaxed, so confident but when I started to move, he helped me stand, lifted me easily and sat me on the altar, took me in his arms, held me. My head resting against his shoulder, my legs either side of him, my breasts pressed against his shirt. Both his arms around me, one stroking the back of my head, the other my back as I clung to him, glowing, alive, happy. \n\nIt was his hand that tilted my face up to look at him. He was smiling. Smiling down at me and I just glowed. \"Jenny, uh, we can date now, right? I'm really serious about you.\" He looked so concerned, so worried. \n\nI giggled. \"Like, I'm going to say no after this, Trey. I'll try and talk my Mom into letting me.\" I kissed him. For a long time. \"If you try and dump me after this, I'm gonna kill you, Trey.\" I smiled. \"Seriously.\" \n\nHis nose brushed mine, his lips brushed mine. \"Girlfriend?\" \n\n\"Boyfriend?\" My heart could have burst with happiness. This was bliss and I could stay forever in his arms. Well, I could but Mom'd be back soon and I needed to, uh, clean up, and, uh... \n\n\"Oh shit! Trey...\" I looked down and panicked. That cum, his cum, it'd been oozing from me onto the altar cloth while I'd been sitting there and, uh, I was sitting in this pink-tinged pool that was spreading. Rapidly. \n\n\"Uhhh ... well, I guess we know you were a virgin, huh, Jenny.\" Trey wasn't concerned, he was grinning. \n\n\"Well, duh,\" I said, just looking. Holy smoke. \"Just how much of that was there?\" \n\nHe was trying not to laugh I guess, coz he kind of snuffled and choked. \"Lot's\" he said. \"Stand up, here, I'll clean up.\" Stepping back, he helped me stand. I looked at the white altar cloth and oh my god. \n\n\"Guess that's what they mean by the blood of the virgin,\" Trey breathed. We both looked at the white altar cloth, blotched red with the evidence of my lost virginity. \n\n\"What're we gonna do with it?\" Jesus, that much blood? There were big red stains on it, along with even bigger wet pink stains. And Jesus, his stuff was trickling down my inner thighs now and when I looked down, there was red there too. Oh god, this was so embarrassing. \n\nTrey didn't seem to think so. \"Hold your skirt up,\" he said, taking the altar cloth, pulling it towards us. He knelt and wiped my thighs, wiping away the red and all that pink-tinged cum. \n\n\"There's so much blood,\" I said, holding my skirt up. Panicking. Jesus, this was worse than my first period. What had he done to me? \n\n\"Hey, relax, Jenny, it was your first time, that's all,\" he said, wiping me everywhere. Everywhere? I was blushing. Burning. God, he was wiping me there. I was beyond embarrassed. \n\n\"I'll do it ... stop, Trey ... I'll do it...\" I made a grab for the altar cloth. He grinned, handed it to me and he was watching while I wiped myself. Sore. I was sore there as well but the worst of it was gone. His cum was beaded through the sparse black fluff at the juncture of my thighs, where he was still oozing slowly from me. I shivered at the sight of it, thinking about, uh, birth control and stuff like that. But first, where were my panties? \n\nI tugged my bra back down, fastened it, looking around but I couldn't see them. \n\n\"Where are my panties? I can't find them.\" I was really starting to panic now. Mom and Father D'Souza would be back soon and I couldn't find them anywhere. I needed them. Badly. I needed to wash my face too and I was all sweaty. \"You better help look, you were the one that took them off me. I really need them. This is messy.\" I glared at him. \"You can laugh, it's your stuff that keeps dripping out all over everywhere. How much of it is there, anyhow?\" \n\n\"Oh Jesus, lots, I think. \" He peered around. Laughed. Pointed. \"They're over there.\" \n\n\"Oh my god, how did they get there?\" There they were alright, sitting right in the middle of one of the chair's the Father's sat in during mass. \n\n\"Umm, I think I tossed them over my shoulder.\" He looked apologetic as he stepped across the dais and retrieved them, brought them back to me. Knelt and held them for me. \"Here, let me help.\" He was smiling. \"They're so sexy.\" \n\n\"I don't think so.\" Plain white cotton? Sexy? Hardly. But I giggled anyhow as I slipped one foot through, then the other. God, Trey, helping me put my panties on. I balanced myself with one hand on his shoulder as he tugged them upwards to my knees, legs suddenly jelly again. \n\n\"What're you doing?\" It was almost a squeal as he let go of my panties with one hand and lifted my skirt up so he could see me. See me there. Oh my god! My cheeks just flamed. My hand pushed at his but it didn't budge his hand. I mean, his arms, they were huge. All muscles. \"Trey!\" Now I did squeal. \n\n\"I want to look at you, Jenny, you're so pretty there.\" \n\nOh god, he was. He was looking at me. My sex. I was such a mess there, I could feel it. That wetness everywhere. He kissed me. He actually kissed me there. His mouth on me. I mean, he'd done that before, but nor after we'd done it. All his stuff, it was there and he kissed me anyway. His mouth on me. His tongue. \n\n\"Oh Jesus, Trey...\" I stopped pushing at his arm. My hand stroked his hair instead. \"Oh God.\" \n\nHe licked me. His tongue was licking me there, pushing in and then he stood up. Just like that he stood and his hands pulled my panties all the way up and onto me as he stood and he kissed me. His lips found mine and we were kissing and his tongue slid into my wide open mouth and there was stuff there. Salty, astringent, thick on my tongue. Huh? My heart jumped as I realized. Oh my god. Oh my god! \n\nI tasted. I looked into his eyes and I sucked on his tongue, licked, tasted. I swallowed. I swallowed his stuff from inside me. Down my throat. Into my stomach. Oh my god. His mouth lifted from mine. His lips brushed mine lightly. \n\nHe smiled. \"See, it's not bad.\" \n\n\"It tastes okay,\" I said, blushing. Licking my lips. Maybe next time....? I smiled. But oh god, my panties. So much wetness. \n\n\"You didn't use a condom,\" I said, not quite accusingly. There was a lot more of it. I could feel it. Inside my panties. I kissed him again anyway. \n\n\"Hey, what can I say, I'm a good Catholic boy,\" Trey said, kissing me back. \"Besides, I didn't have any.\" \n\n\"You better get some,\" I said. \"I mean, I can go to the pharmacy and get those morning after pill things tomorrow morning or Monday but I can't do that too often.\" \n\n\"Want to come shopping with me after school next week?\" Trey smiled, rubbed his nose against mine. Kissed me. \"We can pick some together.\" \n\nI giggled. \"Sure, but I'm not going through the checkout with you.\" \n\n\"Speaking of checkout. I think your Mom and Father D'Souza are going to be back soon.\" \n\n\"What about the altar cloth?\" \n\n\"Don't worry, I'm going to tuck it away in my backpack.\" He grinned at me. \"I'm keeping it as a souvenir, the Church won't miss one. They've must have, like, fifty of them. Besides, it'll be impossible to wash it.\" \n\n\"Souvenir? That's, like, so gross, Trey.\" But, well, my virginity? He wanted a souvenir? I giggled, feeling actually rather flattered. \n\n\"Come on, we better get out and be ready for them.\" Trey balled the altar cloth up and disappeared into the sacristy. Came back with his ruck. \"Let's get down there.\" \n\nWe did, and I'd given myself a quick splash and brushed my hair in the washrooms and we were in the Church concourse when Mom and Father D'Souza returned, catching us by surprise as they walked in through the outside doors. Trey and I, we were holding hands and I was holding that bunch of red roses Trey had bought for me. Looking into each other's eyes. Not really talking, just looking at each other and all I could think of was he'd made love to me and he was my boyfriend and I was sooooo so happy. ",
        "\"Valentine's Day, huh?\" My Mom was looking at the roses I held. \"Hope no hanky panky, you two.\" Mom wagged a finger at me. Thank god she was smiling. Guess she was joking. God, I hoped so. \n\n\"How'd the rehearsal go, Jenny?\" Father D'Souza's was smiling. \"Trey run you through everything?\" \n\n\"Oh, Trey was great, Father.\" True. He'd been great. Except our rehearsal had had nothing to do with altar duty. I had no idea what I was supposed to do at Sunday Mass. Well, I did, vaguely, from years ago, but we didn't have another rehearsal scheduled. I was so screwed. Trey was going to have to walk me through a real rehearsal. Over the phone. I was so calling him after I got home. \n\n.\"Good, good, all set for Sunday then, Jenny.\" Father D'Souza was smiling at me. \n\n\"I guess she is,\" Trey said, grinning, giving my hand a squeeze. \n\n\"Trey, you come round after Mass on Sunday, okay?\" Mom was smiling. What? My Mom? \n\n\"I'd love to Mrs. Lee,\" Trey said. God, he was still holding my hand. I glanced at him. Smiled. \n\n\"No invitation to hanky panky,\" Mom said. In Cantonese. To me. Then, to Trey. \"Just lunch, maybe stay for dinner. Watch movie with Jenny.\" \n\n\"Sure, Mrs Lee.\" Trey squeezed my hand, walked out with me, opened the car door for me, closed it after me once I was in. \"See you at Mass, Jenny. Bye Mrs. Lee.\" \n\n\"Bye Trey, see you Sunday.\" I gave Trey a quick wave as we drove away. Feeling Trey's cum soaking into my panties. Squishy wetness. Feeling myself just a little sore there. A delicious aching soreness, the sort you feel after you've run a hard race and won. That sort of soreness. Really, I wanted to touch myself there. Look at myself. See if I looked any different after what he'd done to me. I felt different. It was kind of strange to think I'd done it. I'd had sex. With Trey. I wasn't a virgin anymore. \n\nAlmost, I wriggled with excitement. Then I gave in and I did wriggle with excitement. I wanted to do that again with Trey so much. \n\n\"You watch that boy, Jenny,\" my Mom said. \"He likes you ... buys you roses for Valentine's Day ... aiiyaah, got to watch those gweilo boys, know all sorts of ways to a girl's heart ..... and he looks like the sort of boy who likes to try on hanky panky with good chinese girls.\" She was smiling. \"I knew a couple of boys just like that before I married your Dad. Those boys, they were lots of fun.\" \n\nHuh? What? My Mom? \n\n\"I think you're right, Mom,\" I said, smiling back now. Yep, of course my Mom was right. Chinese Mom's usually are about things like this, I knew. Trey was definitely the sort of boy who liked to try on hanky panky with a good Chinese girl. Trey was fun. Mom didn't need to tell me, I already knew that. Me, I was going to watch that boy, alright. \n\nI was looking forward to that next opportunity for Trey to get up to some hanky panky with me. Maybe not over the altar in our Church next time though. Somewhere a bit more comfortable. A bit less public. With a bit less risk of getting caught. With a lot more time to really indulge in all this hanky panky stuff. Coz, oh yeah, I wanted more hanky panky. A lot more! \n\nYep. My Mom was as right as a Chinese Mom could be. Gweilo boy. Pretty Chinese girl. Hanky Panky. I did wonder about my Mom and hanky panky though. How come she seemed to know so much about gweilo boys? But hey, I had no intention of asking her for the details. I could find those out for myself. With my very own gweilo boy. Sunday. \n\nPerhaps a little evening stroll in the park. \n\nAnd some more hanky panky. \n\nI couldn't wait. \n\n<center>* * * </center>"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "virgin",
        "18 years old",
        "catholic",
        "high school",
        "valentine's day",
        "church",
        "altar sex",
        "chloe tzang"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/hanky-panky-4"
}