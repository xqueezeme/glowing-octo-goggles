{
    "title": "When We Were Married Ch. 05A",
    "pages": [
        "MONDAY, AUGUST 22, 2005 -- 9 a.m.\n\nMy name is William Maitland. I was married, mostly happily, for 18 years to a beautiful woman who I had realized long ago was out of my league. Reality finally caught up with me nearly five months ago when she bounced my ass out of our happy home to take a young stud professor to her bed. \n\nShe proceeded to file for divorce and then to bedevil me with attempts to talk about things that it didn't help to talk about. \n\nOnce you know your dick isn't big enough to satisfy your wife, know that you leave her cold in bed and the one time you take the bull by the horns, so to speak, take your wife and make her cum with the use of hands, mouth, dick and vibrator, she winds up lying beside you crying in the night, there really isn't much left worth talking about.\n\nToday I am a free man. I'm still living in my postage stamp of a condo not far from the courthouse and the State Attorney's Office where I'm the number two prosecutor. I haven't found a woman to replace my wife in my heart or in my bed. But I have mended fences with my 18-year-old daughter and 14-year-old son, my head is on straight professionally, and I am about to try to send an evil woman to the death chamber.\n\nI walked into the courtroom of Circuit Judge Leonard Pizarro with Jessica Stephens beside me. Pizarro nodded at me. At 70, he was the oldest actively practicing judge on this bench. He was crotchety and a minor tyrant in his domain, but he wasn't a bad judge.\n\nJudy Johansen was already sitting at the defendant's table along with her attorney. I nodded to Lew Walters. As I settled in, he got up to walk over to me and Jennifer. He held his hand out and I took it.\n\n\"I'd say may the best man win, but that would be gloating,\" Lew said with a shit-eating grin. \"So I'll just say, may justice prevail. Which means my innocent client will walk away with her innocence and her freedom confirmed.\"\n\n\"You really think she's innocent?\"\n\nHe looked around to see that no one except Jessica was close enough to hear and said, \"Who cares? I'm being paid to defend her and that's what counts. And with me representing her, and your case, she's as good as acquitted.\"\n\nI couldn't help smiling.\n\n\"You don't have any fears at all that the Angel of Death will swoop down and nail your murderous harpy?\"\n\n\"Come on, Bill. You know the way this is going to go down. You're the grizzled old gunfighter in your last glory days, and I'm the rising young gunfighter. I'm going to shoot your eyes out and walk off in a blaze of glory. It's my time. Maybe you ought to think about moving over to corporate, or handle wills and estates. Leave the courtroom battles to the young, swift and the strong.\"\n\nHis grin took the sting out of his words, and we'd exchanged smack talk plenty of times before as we faced off, but I thought I was going to take particular pleasure if this case went the way I thought it would. He was very good, but he needed to be taken down a peg or two once in a while for humility's sake. Otherwise, nobody would be able to stand being around him.\n\n\"Let's just see who winds up standing, young Luke,\" I said with our friendly Star Wars badinage. \n\nHe just laughed and said, \"The Old Folks Home for Retired Jedi Masters has a room waiting, Master Obi-Wan-Kenobi.\"\n\n\"As always, humility is your greatest strength.\"\n\nHe laughed and walked back to his client. Judy Johansen was a 67-y-old who could pass easily for a 45-year-old. About 5-foot-four inches tall, she had a 38-26-38 inch body that wasn't Miss America shape, but plenty hot for a granny. She was dressed demurely in a pink blouse and dress that went down to her ankles. Very little skin showing and the blouse, while not a potato sack, showed very little curves. \n\nLew knew what was coming and didn't want to give the jury a chance to look at his client as a sexual creature.\n\nThe case slowly started rolling and we trotted out the basics of our case, spelling out to the jury the facts. Judy Johansen was a three-time previously married divorcee when she had met Clark Carroll in 2000. She wasn't poor, but wasn't wealthy either. Carroll, a 78-year-old snowbird who had left behind a chain of profitable neighborhood grocery stores across the Midwest, was worth approximately $50 million.\n\nThey had met at a dance at the gated retirement community where Carroll had moved after his wife of 50 years had died the previous year. One thing led to another and they were living together in a month and married in two months and in six months Carroll had changed his will to leave the bulk of his estate to his new wife. He left each of his two grown children roughly $10 million. That left Judy ONLY $30 million.\n\nClark Carroll suffered from a variety of ailments, but it was an enlarged heart that had killed him a year ago in their Orlando mansion where they had moved after they married. I explained to the jury that we would prove with expert testimony that Carroll received an overdose of a heart medicine and it was this that killed him. \n\nI told the jury we would also prove that Judy Johansen was the only person who could have given him the overdose. She had the means to kill him. She had 30 million monetary reasons to kill him. And, most importantly, she had one overriding emotional reason to kill him. That was in the form of a 6-foot-3, 40-year-old boyfriend she had been carrying on an affair with for more than a year before her husband's death.\n\nLew held his fire during our presentation, waiting for the actual case to begin. He made a brief opening statement to the seven man, five-woman jury, to the general effect that Judy Johansen had been tried in the tabloid press and convicted of making a human error, a layman's error, in administering her husband's medicine that killed him.\n\nHe confidently stated that the prosecution would never convince them beyond a shadow of a doubt that Johansen had deliberately taken her husband's life.\n\nOur first witnesses, most of them officials from the Orlando area where publicity had swirled so strongly that court officials had decided the case would have to be moved, laid the groundwork. \n\nDr. Eugenio Amparo had been Carroll's personal physician and testified that although his enlarged heart was a problem, it was a reaction to one of the medications he was taking that actually provoked the heart attack that killed him. Judy Johansen had been the only person in the house when the medicine was taken and she had admitted administering it to her husband. \n\nThen it was Lew's turn at bat. He got Amparo to concede that Carroll had been a very sick man and his care givers were basically balancing a stew of drugs, any one of which could have killed him.\n\n\"But as long as Mrs. Carroll had followed the instructions I provided her, there is no reason she should have gotten confused enough to make such a drastic mistake,\" Amparo said in a strong Filipino accent.\n\n\"But you're a professional, Dr. Amparo. My client is a lay person. Isn't it possible that under the stress of confusing or strong emotions, she might have gotten confused?\"\n\n\"Possible, but she had been caring for her husband for nearly five years. It would be out of the ordinary for her to have gotten confused after being a caregiver for so long.\"\n\nLew gave him a funny look, then looked back at me and I knew he was getting ready to carve up Amparo, and by extension myself.\n\n\"How long have you been a physician, Dr. Amparo?\"\n\n\"24 years.\"\n\n\"And you practiced in the Philippines for ten years before coming to this country?\"\n\n\"Yes.\"\n\n\"Do you remember a Bayani Amicay, by any chance?\"\n\nAmparo remembered. He looked like he was about to have a heart attack himself.\n\n\"I ....I..\"\n\n\"Wasn't he a patient of yours, Dr.? You had been a practicing physician for nearly eight years when he became a patient. And he also had similar heart problems. And, oddly enough, didn't a similar confusion about medications cost his life?\"\n\n\"That was during a period when there was political unrest, a typhoon off the coast, and the hospital where he was being treated was tremendously overcrowded. There was a great deal of confusion.\"\n\n\"But you signed off on the medication, didn't you, Doctor? You, a professional with eight or more years of medical training and eight years of practice, and you still made basically almost the same mistake that Mrs. Johansen did. Were you prosecuted for murder?\"\n\n\"No.\"\n\n\"Did you lose your license?\"\n\n\"No.\"\n\n\"What happened?\"\n\n\"There....was an out of court settlement. The family agreed to it.\"\n\n\"So you basically paid off the family and walked away without a scratch.\"\n\n\"I wouldn't put it that way...\"\n\n\"I would, Dr. You, more than anyone sitting in this courtroom should be aware of how fragile Mr. Carroll's health was, and how easy it would be to make a fatal mistake. And yet you were willing to sit in judgement of an elderly woman, a non professional, and leave the jury with the implication that there was something suspicious about the mistake she made. Would you care to reconsider your remarks?\"\n\nLew just stared at him until he finally raised his eyes to look at him. Amparo wouldn't look at me.\n\n\"Yes. Mr. Carroll was in precarious health and it is quite possible that a lay person would make a mistake without intending to. Sometimes, we doctors tend to forget that -- lay people aren't doctors or nurses.\"\n\n\"No further questions.\"\n\nLew gave me a little look that spoke volumes and swaggered back to his table. Alright, he didn't really swagger. That's just the impression I got. But, he was going to find out that the old gunslinger wasn't going to go quietly.\n\n\"Re-direct, your honor.\"\n\nLew was expecting, obviously, to have taken the wind out of my sails. Let's see how he liked a gut punch directed at him.\n\n\"Dr. Amparo, Mr. Walters brought up the situation involving a patient of yours that died as a result of a mistake in medication. You admitted to that mistake. Was that mistake your fault, not a nurse or subordinate.\"\n\n\"No, sir. It was my fault. I made the mistake.\"\n\n\"Alright, that's honest of you. You mentioned there was political unrest, there was a storm and overcrowding. And you indicated that those were factors in your mistake. Could you please give the jury a little more detail. What was the political unrest?\"\n\nHe looked down at his hands. After three minutes and the judge growing increasingly restless, I walked over to the witness stand and said softly, \"I know what happened, Dr. Amparo. Would it help if I gave the details and you simply confirm them?\"\n\nI looked at Lew and he was tempted to make an objection, but there are times when you sense things and I knew he was smart enough not to step in a minefield and become the bad guy.\n\n\"At the time, Dr. Amparo, more than 15 years ago, there was political dissension in the Philippine province you and your wife and son lived in, wasn't there? And a major storm had hit the Philippines the previous day. Entire villages had washed away, bodies were still being recovered and the hospital you were working in was so crowded almost every square inch was occupied by cots or people lying on the floors. Isn't that so?\"\n\n\"Yes.\"\n\n\"You had gone in the previous day. You had worked 36 hours without rest, hadn't you?\"\n\n\"Yes.\"\n\n\"And two hours before you made the mistake with Mr. Amicay, you had received a radio message on shortwave from the Philippine Security Forces, didn't you?\"\n\nHe just nodded his head and sobbed.\n\n\"And didn't they tell you that a unit of rebels had ambushed a car your wife and son were driving in on their way home from providing relief aid in a neighboring village. And the security forces told you the rebels had raped and shot your wife in the head. And cut your son's head off and place it on a stake near your abandoned car. Didn't they?\"\n\nHe didn't move.\n\n\"They did this because in addition to your being a physician, you were an elected office holder in the province in which you and your family lived, didn't they? They were sending a message to all government office holders in your province.\"\n\nHe remained silent and motionless, head down.\n\n\"And when you learned this, Dr. Amparo, did you break down? Go into a room and block out the world? Did you find a bottle and get drunk? Or medicate yourself with the narcotics you had easy access to? It would have been so easy. Your entire world had died that afternoon.\"\n\nThe silence stretched until it seemed like the world had frozen in place. I couldn't even tell that the jurors were breathing. I looked over at Pizarro and even he looked stunned.\n\nFinally Amparo raised his head. His face was wet with tears.\n\n\"No. No. I did my job. There were people in there dying, people I could save. I couldn't abandon them. I simply....put my feelings away someplace where they wouldn't hurt. I could grieve later.\"\n\nI looked up and at Lew and there were no words, but I didn't need any to deliver my message: \"Alright hotshot, now that I've cut you off at the knees, let's see how you bounce back.\"\n\nI turned my attention back to Amparo.\n\n\"Doctor, there was obviously a legitimate reason for you to have difficulty concentrating. To your knowledge, on the day Mrs. Carroll gave her husband the wrong medication, had anybody murdered any member of her family? Did she have the responsibility of saving the lives of hundreds of strangers? Was she under any kind of stress similar to what you endured?\"\n\nI glanced back at Lew, just daring him to open his mouth and make any kind of objection.\n\nAmparo just shook his head.\n\n\"No further questions, your honor.\"\n\nPizarro looked over at Lew, and I could swear I saw sympathy in the old judge's eyes.\n\n\"Any further questions of this witness, Mr. Walters?\"\n\nHe just stood at his desk, looked down at Judy Johansen and then at Amparo. I don't normally read minds, but I could read his. There was no way in hell he was going to touch Amparo's testimony now. All he'd do is make the jurors believe he was an unfeeling monster. Checkmate.\n\n\"No, your honor.\"\n\nWe went through more cops and ambulance people and others we needed to get on the record, but Lew was going on instinct. I had stunned him, but I knew he'd be back. When we got to the noon hour, Pizarro said, \"I think this is a good stopping point. Let's meet back here at1:30. Is that okay with you gentlemen?\"\n\nI nodded and looked at Lew. He did also. Then everybody was leaving. Judy J was out on bond and a grown son was here so she went out with him to lunch. When there were only a few people left, Lew came over to me.\n\n\"You sure you didn't make a deal with the devil, Bill? Are you really the Angel of Death? How the hell did you do that?\"\n\n\"Is that you, Lew. You know you shot my eyes out with your blazing guns and I'm helpless here.\"\n\nHe reached out to tap the side of my face and said, \"You won't let me live down my big mouth, will you? Why'd you let me step into that shit? You could have brought out all that info and hurt Granny J without making me look like a fucking moron.\"\n\n\"But it was so much fun making you look like a fucking moron.\"\n\nHe rubbed his chin.\n\n\"Alright I deserved that. Remind me not to tug on the Tiger's Tail in the future. But you know when all's said and done, I'm going to win. You just don't have enough to convict her. They're not going to send a grandmother to the death chamber, not in this state, not with ammunition you've got.\"\n\nI stood up and couldn't conceal a small smile.\n\n\"We'll just have to see now, won't we young Luke. Anyway, you want to buy me lunch somewhere. Feed me and I might take it easy on you during the trial.\"\n\nHe grinned.\n\n\"You know, I ought to try to get you and Debbie back together again. You weren't near this mean when you were fucking her on a regular basis.\"\n\nI know I clouded up and he tapped me on the side of the face, a little harder this time.\n\n\"Come on, man. You're divorced. She's out of your life. You got to be able to take a little shit about her someday. I'm your friend. Probably the best one you got. If I can't razz you about her, you're going to be the walking wounded for the rest of your life. Just get over it, and her, okay?\"\n\n################## \n\nMONDAY, AUGUST 22, 2005 -- 10 a.m.\n\nEven though she was new on the job, she had heard enough from the staff she had interviewed when she was coming onto the job that she knew most of the attorneys and staff who didn't have to be working were going to be down in Judge Pizarro's chambers for the showdown between Bill Maitland and Lew Walters.\n\n\"You want to go down with me,\" the cute Irish public defender Dennis Leary asked her, sticking his head in her office door. \"If you have any game questions, I can do a play by play of the trial.\"\n\n\"You guys will go down there just to watch a murder trial? When it's what you do most of the time anyway?\"\n\nHe grinned and her stomach would have flip flopped in a pleasant way except that bile rose in her throat and she had to turn her head away from him for a moment. She had already planned to make an appointment with her physician. Ever since the weekend she had been getting nauseous and had even thrown up several times. \n\nThe first thing she'd done was buy a pregnancy test and try it out. No way in hell could she be pregnant because she'd been on the pill for years. But...the test had given her blessedly welcome news. Still, the recurrent nausea wouldn't go away. She'd bought Tums and several over the counter stomach medicines. \n\nShe hadn't been nauseous like this in years, and that was when she was pregnant. But she wasn't pregnant. So what the hell could it be?\n\nShe pulled her attention back to Leary. She was aware of his reputation among the ladies and she'd felt the pull of his bad boy personality, but he seemed like a decent guy. And she did want to see Bill in his element, as well as watching Lew do his thing. \n\nIt was funny, but she realized she hadn't seen Bill lawyering in years, since before he had joined the State Attorney's Office. She'd gotten his views of his job in nighttime conversations, and she had gotten the idea of how the people in his world viewed him. But she had never seen it for herself. \n\nNow that they were finally split, just two people who used to live together, she was curious to see him as something other than her husband. She wanted to see him the way others did.\n\n\"It's like watching the NFL finals or the Sweet 16. The Killer Granny trial has gotten people around the country interested. And we have a chance to see Lew Walters, AKA the Shark in action going up against the Angel of Death. They ought to sell tickets to this thing.\"\n\nIt was hard for her to imagine people selling tickets to watch Bill in any kind of action. But she realized it was obvious he had had a life she had never really seen.\n\nShe rode the elevator down to the courtroom with Leary and they sat on the left side of the public seating section. It was four rows deep and most seats on both sides were occupied. \n\nThere were secretaries and attorneys from the State Attorney's Office and Public Defender, as well as a large contingent of local, state and even national media. The \"Killer Granny\" story had already made the national television newsmagazines.\n\nTwo guys had apparently been saving a spot for them and got up and left as she and Leary sat down. \n\nLeary whispered to her, \"This is just the preliminaries. It's like the opening of a boxing match. They're just feeling each other out. But something will break.\" \n\nAs they watched and listened to the two attorneys, Debbie remembered her meeting with Lew. He was still damned hot. Tall and slender and he moved with fluid grace. She watched the women in the spectator section, secretaries, lawyers and some just public types as they watched him. Mona had no idea how much competition she'd have if Lew was even willing to look at other women.",
        "She remembered the way she'd offered herself up to him. Would she have gone through with it if he had taken what she'd offered. She would never know, but looking back she was glad she hadn't had to find out. At the time she had been pissed at Bill and taking his friend had seemed like a good idea. \n\nBut if he had stuck his dick in her mouth, it would have opened up a literal can of worms. How would she have handled two men when she had a hell of a time dealing with Doug. And, looking at the two men occupying the attention of the entire courtroom, she felt a sudden stab of guilt.\n\nShe had destroyed Bill's pride and his manhood. She knew that. Even if she had made up her mind to leave him, she wished she could have done it another way. Having a woman walk out on you couldn't be good for a man's ego. She had to try to put herself into a man's mind, because she had never been dumped by any man. But taking Doug's side in her anger at the UNF event, fucking him in Bill's bed, that had to destroy Bill's confidence.\n\nAnd Bill didn't have any friends, not any real friends. Apparently a lot of people respected him, but he wasn't the type to go out drinking and he'd never gone out to a bar with the guys or to sports events. Because he was either working or home watching television with his wife and kids.\n\nIt was strange, she thought, that she could recognize that now, when she couldn't before. Bill had spent too much time at work, but any free time he'd ever had he'd spent with her or the kids. Maybe he had been dull as hell, but he had always come home.\n\nHis only friend, she realized, was Lew Walters. Lew was the only one he had ever gone out drinking with. Lew was the only guy he'd ever gone to a Jaguars game with. And if she had taken Lew away from him....She felt nauseous again, but this time it felt like heartburn as well.\n\n\"How in the hell could I have lived with myself if I had taken the last thing he really had, his only good friend?\"\n\nShe focused in on her ex. He was dressed in black, slimmed down, head shining under the lights. He moved lightly on his feet. Maybe that was the boxing she'd heard about. She looked around the spectator section and saw that as many of the women were following him with their eyes as were watching Lew.\n\nShe shook her head. It reminded her of the night she had seen him at the gym for the first time in his newer, hotter look. This was the first time she had seen him working in his element. She realized now that the parties she had gone to, the social events, were a different world. He had never been a social animal, a party guy, and so she had seen him ill at ease and out of his element. She wished for a moment she had seen him like this.\n\nShe watched the cross examination of Dr. Amparo by Lew and winced in sympathy for Bill. She wasn't a lawyer, but she could understand the impact of his destruction of the Filipino physician. Even if he had bruised her, she recognized just how dangerous Lew was in the courtroom.\n\nMinutes later when Bill completely flipped the situation, Leary smiled and had to stifle laughter. \n\n\"Is that as bad for Lew as I think it is?\" Debbie asked.\n\n\"Oh, yes,\" Leary said. \"The old man -- Bill -- sucked him in. He had to have known that Lew was going to go after Amparo and would find that mistake that killed the guy in the Philippines. But Lew got lazy. He didn't dig any deeper. If he had, he would have brought out the circumstances and minimized it so the jury wasn't so damned sorry for Amparo.\"\n\n\"Now,\" Leary said, \"They're thinking that Granny really didn't have much of an excuse to accidentally poison her husband, and they sure as hell don't like Lew. It's a bank shot. Bill sunk two balls that time. That was classic.\"\n\n\"And Lew just walked into that?\"\n\nLeary grinned back at her.\n\n\"Walters always thinks he's the smartest guy in any group of three people. He is smart, and he's good which is why he's risen so far so fast. And he's a complete mercenary and opportunist. He'd defend anybody or take any case if the money is right. But...that's his Achilles heel. If you think you're the smartest guy in the room, you're wide open for somebody that's smarter or working harder than you are.\"\n\nShe looked at the two men as they skirmished through the rest of the morning. She was as guilty as a lot of other people, she thought. She had looked at the tall, confident, good looking Lew Walters and just automatically assumed he'd have Bill's number. Bill who was shorter, average looking, shouldn't have been in the game.\n\nThe same way he shouldn't have laid out Doug at the UNF awards ceremony.\n\nAs she was walking toward the elevators, three women were walking ahead of her and Leary.\n\n\"mmmmmm....sister.....that Lew Walters could call me any night....it's a damned shame they say he's married and he doesn't mess around...\"\n\n\"...he's hot alright....but Maitland....he is so damned cold....\"\n\n\"I know. You know they used to call him the Iceman, back when he was married....\"\n\n\"....stupid bitch...they say she threw him over for a kid...one that doesn't make half what Maitland did...\"\n\n\"yeah, he makes good money, he runs that office, and..shit, did you see him when he was doing that re-direct....he's so cold he's scary.....\"\n\n\"...but scary good.....what do you; think he'd be like if you managed to defrost him....\"\n\n\"...I think he'd be a freak...tie you down and....\"\n\n\"....you just like freaks...you crazy bitch....\"\n\nOne of them nudged the other and they quickly looked back at Debbie and Leary.\n\n\"Oh, shit,\" one said and they quickly walked away.\n\nLeary just looked at her and shook his head.\n\n\"Get used to it, Boss. Courthouses are always little Peyton Places...everybody's screwing everyone else or figuring out how to do it. Now that he's free, he's on the market and they're going to go after him. Besides, you threw him back...\"\n\n######################## \n\nMONDAY, AUGUST 22, 2005 -- 1:15 p.m.\n\n\"You knew she was in the peanut gallery watching you, didn't you?\"\n\n\"When?\"\n\nWe were walking back into Pizarro's courtroom and a lot of the pertinent players were already settling into position. I noticed a blonde with long hair and a fairly sedate neckline eyeballing me and Lew and recognized her from one of the television crews.\n\n\"Debbie was in here?\"\n\n\"Yes, Gomer, she was in here. And while I think she's always had a hidden lust for yours truly, I was able to check her out often enough to know she was checking you out. She was getting into you.\"\n\n\"Bullshit, Lew. Look, I know you're trying to tease me, get me into a better mood, but she's got less than any interest in me. You, you might be right about.\"\n\n\"You are so stupid, my friend. I told her that day in Landers' office that you guys should be the poster children for marital dysfunction. You realize, I don't think she ever saw you in action? It's what you are, and all she saw was daddy and hubby. And that's not you.\"\n\n\"Okay, she came down here. People always come down to watch a case like this, but she's probably down here just hoping for me to slip on a banana peel. She sure as shit isn't burning with lust for my middle-aged body.\"\n\n\"I'll grant you that you'd have to be pretty desperate to lust after that old man's body, but you haven't noticed women looking at you before, during and after this trial? Nobody can be THAT oblivious.\"\n\nI sat down at the prosecutor's table and gestured for him to get to his corner. \n\n\"I appreciate the ego building, Lew, but I'm not you. Women don't look at me that way.\"\n\nHe just shook his head and said so softly that only Jessica Stephens walking up to me could have heard his words. \n\n\"I love you, man, but you're so fucking stupid that I sometimes wonder if you should be allowed to live.\"\n\nJessica's eyes opened wide at his words but she didn't say anything. After things got started again I tried to unobtrusively keep an eye on the spectator sections. Lew caught my looking a few times and just shook his head. She hadn't come back. Not that it mattered. \n\nI kicked myself mentally. In a way, Lew was right. I was so stupid about women that I should have been neutered at birth so I didn't pose the risk of passing on my genes to a future generation. I didn't care that she had been down watching the trial. But it still bothered me that she hadn't come back. Explain that? I sure as hell couldn't.\n\nWe continued skirmishing and Lew didn't fall into any more Tiger traps. He was a hell of a lot more careful now. But we were getting ready to get into the meat of the trial and he and I were both watching each other the way gunfighters would walking out onto a western street. It was going to get real very shortly.\n\nI had just stood up after Pizarro asked me for my next witness and it was nearly 3 p.m.\n\n\"Your honor, I'd like to introduce Sergeant Heather McDonald with the Jacksonville Sheriff's Office as our next witness, but I expect her testimony will be lengthy and it's vital to the state case. Could we call it a day?\"\n\nWhen he called it quits, Lew walked over to me and we talked for a bit. Meagan Whitcomb, an attorney in private practice who had been one of our ASAs five years before walked over to the both of us. She was about 5-4, light brown hair, nothing exceptional but everything went together very well. And she was smart as a whip.\n\nShe smiled at me then grinned at Lew and said, \"Having any trouble getting around on those stumps, Lew?\"\n\nHe just smiled back.\n\n\"Round one goes to the Angel of Death, Meagan, but this is a 10-rounder. I'll wear him down and win in the end.\"\n\nShe grinned. God, she had a pair of dimples.\n\n\"I could tell you really had him on the ropes today, Lew. Everybody was talking about the beating you gave him.\"\n\nShe couldn't hold it in and broke out laughing.\n\nHe just smiled and pretended to be embarrassed.\n\n\"Alright, nobody loves you when you're down and out and you've just had your ass kicked. Suck up to Maitland. But I'm coming back.\"\n\nThen he turned to me and said, with a little smirk, \"I'll leave you to discuss the case with Meagan, Mr. Maitland. Just remember, no matter how....engrossed....you get in....talking...with her, you need to get to bed early....to sleep. You old guys need to husband your strength.\"\n\nShe didn't even blush.\n\n\"Bye, Lew.\"\n\nWhen he walked away, the two of us were left standing looking at each other and I was wondering what to say.\n\n\"Do you have dinner plans, Bill?\"\n\n\"Uh -- not really. I was thinking about going back to the office to do a little prep for tomorrow. I....thought...you were engaged?\"\n\n\"I'm not asking you to go to a motel with me, just get something to eat.\"\n\nShe stared at me without a smile on her face. I know I was blushing.\n\n\"I know, Meagan, I apologize. You've got to know my divorce just went through. I really don't know how to be civilized dealing with women any more. It's been awhile and I have heard some good things about how your practice is doing. If I haven't stuck my foot so far down my throat that it can't be extracted, I'd love to go out and have a salad or something with you.\"\n\nShe looked me up and down appraisingly.\n\n\"A salad? Jesus, Bill, I've heard about how you've changed and I could see it for myself when I sat down in here, but you really have turned it around, haven't you?...And by the way, I'm not engaged any more. If it makes a difference.\"\n\n\"It doesn't, Meagan. I've missed those dimples of yours around the office. You always brightened things up.\"\n\n\"Sometimes I wonder if I did the right thing, Bill. I've missed the kind of cases I worked on here. Property disputes and slip and falls and malpractice just aren't the same.\"\n\n\"You did the right thing. Sometimes I wish I'd bailed out too.\"\n\n\"You don't mean that.\"\n\n\"Sometimes I do.\"\n\nAs we walked out the three television crews and four print reporters grabbed at me. I gave Meagan a look and she just shrugged and found a seat on a bench outside a courtroom while I did standups for the television crews and short interviews for the print types including Carl Cameron. Normally he wouldn't have rated next to the big boys, but the Big Man was very sensitive to the coverage he got in his home media market so Carl would always get the interviews he wanted.\n\nThe blonde with Courtroom Extra did an intro in which she told viewers that \"The nationally watched case dubbed the Killer Granny, 67-year-old Judy Johansen, has received even more interest with the involvement of Lead Prosecutor William Maitland, better known recently as The Angel of Death. \n\n\"He is facing off against young attorney Lewis Walters, who has received national attention in a number of high profile national cases. Walters has been dubbed \"The Shark\" for his take-no-prisoners aggressive legal stance. Legal observers have called this showdown the equivalent of a heavyweight boxing match between legal heavyweights.\n\n\"Mr. Maitland, do you understand the national attention being directed to this high profile murder case battle being waged by two prominent attorneys?\"\n\n\"Yes, I do understand it. People are always fascinated by crime and murder is the most fascinating of crimes. But, while I understand the fascination and the lure of this case for media such as yourselves, I want people watching this broadcast to remember that this is not a television show, not a murder mystery movie. These are not fictional characters. \n\n\"Clark Carroll, the victim in this case, was a living human being. His life was taken, stolen from him. He was an old man, but his life still had value and he had years of life ahead of him. The state is convinced, and will prove, that Judy Johansen took his life for her own selfish purposes. \n\n\"As far as I'm concerned, the sport element of this is simply nonsense. I don't care who gets the credit or takes the win. I want to make sure that an evil woman pays for her crime. I understand why you're here and your interest in this case, but I simply don't care.\"\n\nI could be candid because the judge had already sequestered the jury and would keep them isolated until the trial was over, and everyone knew there was no way to keep everyone's lips buttoned tight. We had been told we could comment as long as we didn't give Lew grounds for seeking a mis-trial.\n\nWhen I'd finished, the blonde, Celestial Madonna (where the hell do they get those names?), just looked at me. Apparently the pulpish questions she'd been ready to hit me with stuck in her throat.\n\n\"I...I...uh..thank you for your comments, Mr. Maitland.\"\n\nShe made a 'kill it' gesture to her camera man and he stopped filming. She talked to him for a moment, then turned back to me. There was a hint of ...anger...I couldn't pin it down. \n\nShe made a gesture, flinging her mane.\n\n\"I thought your boss was interested in good PR. This is a fantastic story and that type of shit wasn't the way to get people to come back for more interviews. The Angel of Death crap is a good hook, but you have to work it. You want to try again, be a little more media-friendly?\"\n\n\"No,\" I said flatly, enjoying the expression that flashed across her beautiful features. She wasn't used to being treated this way.\n\n\"My boss is the media hound. I don't give a shit, nor do I care about enhancing your ratings. As long as I win, my boss doesn't care if I give you the finger or kiss your ass. And I intend to win. Not so he'll get good PR, but so that callous bitch will see her death coming and know what the poor bastard she was married to felt like in his last moments.\n\n\"Is that media friendly enough?\"\n\nShe looked at me hard for a moment, then I saw her expression change.\n\n\"Jesus, you're even meaner than your reputation. It isn't an act, is it?\"\n\n\"All me, Celestial. By the way, that can't possibly be your real name, can it?\"\n\nShe gave me a small smile.\n\n\"Jane....Jane Thurman, from Pahokee, Florida. Actually, that interview will work. A really mean bastard will make a good foil for Walters. He's smoother than duck shit, that's an old Pahokee expression. I've covered him before. A hard nosed SOB will make a good contrast. You really think you're going to win? You're going to put her away?\"\n\nI looked into her eyes and for a reason I couldn't pin down, I deliberately let my eyes run up and down her pneumatic form before looking up into her eyes again.\n\n\"If you stick around, Jane, you can see for yourself.\"\n\nShe flashed me an expression I couldn't read, but I felt a little tingle run up and down my spine.\n\nWhere had that come from? It didn't even feel like the way I talked to women. I'd only been divorced for a few days. What was happening to me?\n\nIt took me 45 minutes to get through all the interviews. I fully expected to look around and see that Meagan had vanished, but she walked up to me as I finished the last interview and said, \"Look, you're going to be tied up. How about meeting me about 6 p.m. at River City Brewing Company? We can catch up.\"\n\nI went back to the office and went over strategy for the next day with Heather McDonald and finished up a phone call with Sheriff Knight about the stalled case of Shawn Smith who was still sitting behind a desk while his fellow cops came to a slow boil about my refusal to give him a clearance to go back to duty.\n\nAs I was finishing up my duties, I thought about Meagan and those damned dimples. I began to remember some of the errant fantasies I'd had about her when she'd been around me every day. And NOW I was starting to get nervous about having dinner with her. When I was married, Debbie had been the armor that protected me from my own worst impulses. Now everything was on me. I felt very nervous.\n\n######################## \n\nMONDAY, AUGUST 22, 2005 -- 4 p.m.\n\n\"Are you sure you're feeling well enough to continue, Ms. Bascomb?\"\n\n\"I'll be fine, Doctor. Let me visit your restroom for a minute.\"\n\nShe stepped into the small restroom and spit into the open toilet. And spit again. There was a terrible taste in her mouth. Bile and....something worse. It was crazy, but it almost had a....urine...smell. Where in the hell was it coming from. She cupped her hands and rinsed her mouth out. She took a Tums from her purse and chewed it up, then took another and started sucking it. The Evergreen flavor helped.\n\nWhen she returned to his couch and sat, he looked at her with a look of concern and said, \"You say you've had these symptoms for more than a day? Have you-?\"\n\n\"Yes, I've taken a pregnancy test. That's the first thing I thought of. And I've got an appointment with my gynecologist who's also a good general physician as well. I don't know what this is.\"\n\n\"It's probably nothing, but stomach problems associated with pain and nausea could be symptoms of something serious. Please see your doctor without any undue delay.\"\n\n\"I will, Doctor Teller.\"\n\nShe leaned back against the couch and took a deep breath.\n\n\"What would you like to talk about today?\"\n\n\"You know I've taken that administrative position with the Public Defender's Office? Well, there's a big, nationally publicized case beginning today, the 'Killer Granny' case with Bill on one side and Lew Walters on the other. Most of the attorneys who had some free time went down to watch and I went down too.\"\n\n\"I've heard of the case. I wasn't aware that your ex was handling the prosecution side. And I believe that Walters was your husband's divorce attorney. Must have led to conflicting emotions on your part?\"\n\nShe described what she'd seen.\n\n\"And observing the way that other women were looking at your ex....it made you uncomfortable?\"\n\n\"Not uncomfortable. I understand that he's a free man now and....he's changed his appearance and the way he is....I see that...it's just that....\"\n\nHe smiled at her and rubbed his chin.\n\n\"Ms. Bascomb, it's the oldest clich\u00e9 in the world. We never want something so badly as when someone else wants it. It's why men and women work so hard to make each other jealous.\"",
        "He tapped his finger on the marble Rorschach inlaid coffee table as he leaned forward toward her, his eyes running down her body.\n\n\"You are, as we both know, a very beautiful, very big breasted woman at what is really the height of your sexual appeal to men. Your husband, despite the fact that he has slimmed down and moves better and bald looks good on him, is still a fairly short, average-looking, middle-aged man. \n\n\"You could have a different man in your bed every night without working at it, but it still bothers you that your not-so-attractive husband, whom you divorced - you divorced - is attracting the interest of other women. If he has sex with other women, which he certainly will unless he has a major sexual dysfunction...\n\n\"Does he, by the way? Have a major sexual dysfunction? Was he able to have sex with you, to obtain climaxes on his part?\"\n\n\"Yes. That is, he was able to have sex. I got tired of him and bored with the way he made love, and I'm not sure he really got that much out of it at the end. It was pretty much, wham-bam-thank-you-ma'am if you know what I mean...but that could have been me...I wasn't...but he seemed to enjoy it....\"\n\n\"Well, he appears to be rejuvenated by the divorce, so-\"\n\n\"So getting rid of my ass, as one of his friends told me, seems to have done him a lot of good? He's Mr. Perfect Victim and I'm the fucking Wicked Witch of the West? Is that what you're saying, Doctor?\"\n\nHe looked up at her in what appeared to be a little surprise and then a small smile flickered on his face.\n\n\"Is that how you see yourself, Ms. Bascomb? I didn't mean to make any reflection on you, just an observation that many men -- and women -- seemed to find new life and energy after a divorce. A stressful marriage can be hard on both parties and when that stress is removed, even with the attendant changes and often loneliness while new connections are being made, people do transform themselves.\n\n\"Well, the son of a bitch definitely has done that. Those fucking bitches were practically drooling. If they had been in bed with his flabby ass before....\"\n\nShe felt a wave of hot bile rising inside her and had to rush back to the bathroom.\n\nTeller leaned back in his chair and listened to the sounds from the bathroom. It didn't appear the nausea was medical in nature, because it seemed her husband - ex-husband -- had gone from enraging her to literally making her sick. He played with his unlit pipe, a nervous habit he didn't worry about because it gave him something to do with his hands.\n\nPart of what she was feeling was undoubtedly buyer's -- or seller's -- remorse. She had decided that her marriage was boring, that her husband did not satisfy her sexual needs, and that she deserved more. In a perfect world, Bill Maitland would have remained crushed by her rejection, fat, flabby, unappealing to women, and suffering alone.\n\nShe would have felt guilt and sorrow for her ex, but she would have been assured that she had done the right thing; that he could never have given her the happiness and satisfaction she wanted and deserved. Of course she was being self centered and selfish about that, but hell, that was part of the definition of being human.\n\nBut to find the man she had kicked out of her bed as unappealing and sexually unexciting transforming himself physically into almost literally a different person, to see him in his world as the man he had always been but had never shown her, and to see other women lusting after a man she said she didn't want any longer....\n\nHe had to retain his professional objectivity, and he couldn't take sides because she was his patient and she was a person, not The Wicked Witch of the West, but he couldn't deny a little twinge of enjoyment in the spectacle of a sex goddess burning with growing jealousy for a man she had dismissed as unworthy of her.\n\nBut beyond the human reaction of jealousy, of second thoughts, of regrets, there was more roiling under the surface. There was still that unexplained anger and rage that came through and probably, not certainly but probably, was now being transformed into psychosomatic reactions of physical illness.\n\nNausea was a classic reaction of the body to emotions and feelings that a person couldn't deal with on a conscious level. He had the feeling that it still all traced back to her relationship with her aunt Clarice. There had been problems aplenty in her marriage and whatever had happened with her Aunt didn't create them, but something triggered a massive psychological change.\n\nWhen she returned, so pale she was almost white, he said, \"You definitely need to see a physician. But, would you consider hypnosis? I'd like to see if you could be put under into a light hypnotic trance and try to see if we could get a better idea of some things that happened in your past?\"\n\n\"You think that...would help?\"\n\n\"You told me that these symptoms are recent. If you can remember, did they start occurring about the time your divorce became final, or on the day your divorce became final?\"\n\nShe put her face in her hands and took a few steadying breaths.\n\n\"Actually.....I got some kind of bug....the night the divorce was finalized. I don't remember what I dreamed about, but I must have had a horrendous nightmare. I felt so bad the next day, not just physically, but emotionally, that I basically stayed in bed until that evening. But I know I was nauseous all day long.\"\n\nShe stared at him in sudden realization.\n\n\"That was the day all this started. The day we split for real. My God, not only did he ruin my life while we married, but he's making me sick when we're not even together any more.\"\n\nSuddenly her mood changed.\n\n\"You think I could sue him -- for inflicting emotional distress on me AFTER we split?\"\n\nHis grin answered hers. For being an overly developed sex kitten who had been spoiled and pampered her entire life, there were times when she flashed a wicked sense of humor and he thought he glimpsed part of the reason why Bill Maitland had loved this woman beyond her obvious physical attributes.\n\n\"Unfortunately, if that were the case, Ms. Bascomb, half the divorced population of the United States would be paying emotional damages to the other half...and vice versa.\"\n\nHe played with his pipe.\n\n\"Of course, it would mean vastly more income for divorce lawyers.\"\n\nShe gave him a sad smile.\n\n\"You forget, I was married to a lawyer for18 years and now I'm working in the middle of a whole nest of them. I tend to think like a lawyer. It's like he's haunting me. I guess he's the Spook of Christmas Past.\"\n\nTeller looked at her and realized something he had always known, but hadn't consciously realized.\n\n\"You are a really lonely person, aren't you, Ms. Bascomb?\"\n\nShe just looked at him.\n\n\"Guys are so obsessed with your breasts I don't think one in a hundred ever realize there's an actual person in there, or get that sense of humor. And I imagine women don't want to like you.\"\n\n\"It's okay, Doctor.\"\n\nShe put her hands under her breasts and lifted them slightly, then planted light kisses on each one.\n\n\"Flat chested women can tell you all day what an inconvenience big boobs are. \n\nAnd they are. But when I used to go on dates before I met Bill, I never had to worry about a date being disappointed. I've never had a blind date try to bail on me. \n\nGuys might never look me in the eye, but I've never walked into a room filled with men and been ignored. You have to take the bad with the good.\"\n\n########################## \n\nMONDAY, AUGUST 22, 2005 -- 11:30 p.m.\n\n\"Ohhhh......God...god...that feels good....\"\n\n\"You like that Mr. Maitland? Feel that?\"\n\n\"Oh shit, how can you do that? It feels like you're squeezing it with your fingers...it feels good but stop...I'm going to lose it...damn it's like your jerking me inside....\"\n\n\"There are exercises for the vagina. Any woman can do that if they're willing to work at it, and the younger...aaahhhh that's good....you are the better you get at it....\"\n\nI lay my head back on my pillow and took a deep breath and tried not to squirt inside Meagan Whitcomb's soft center. She rested her small breasts on my chest and her weight on her hands on either side of me. Her nipples fascinated me. They had to be an inch long \n\nand thick as pencil erasers. They were red and bruised now because I hadn't been able to take my mouth off of them in the first frantic moments when we got naked together.\n\n\"Didn't Debbie ever do that to you?'\n\n\"No. God, I didn't know that was possible.\"\n\nShe shot me those dimples again and if it was possible, I got a little harder inside her.\n\n\"She just laid back there and let you enjoy that body?\"\n\n\"No.\"\n\nI don't know why I felt compelled to defend her, but I did.\n\n\"No, she was energetic as hell...a long time ago. She fucked me under the bed plenty of times. It's just that....\"\n\n\"She was so hot she never had to work at it, did she? Not like me with my little boobs...right?\"\n\nI answered her with my mouth, reaching up to suck on one nipple and bit and pull at it until she groaned.\n\n\"Meagan, size isn't everything and you damn well know it. I haven't' been able to take my eyes or hands or mouth off those boobs of yours since your bra came off. \"\n\nI bit her again.\n\n\"You really think you have anything to feel inferior about?\"\n\nI cut her off before she could say anything because she had squeezed down one time too many.\n\n\"Meagan, I can't-\"\n\nShe felt it coming and shouted, \"Cum, cum baby. Give me everything you're got.\"\n\nI bucked upward lifting her body which was lighter than it looked while I squirted and squirted and squirted. Where the hell was it all coming from? It seemed to last a long, long time and when I was finished she just rode me for another half minute and then slid over to lay beside me.\n\nAfter a pleasurable silence, she leaned over and kissed me and said, \"You see what you missed out on, Mr. Maitland. You could have had me years ago. But I never pushed it because you were a nice, married guy.\"\n\n\"What is this Mr. Maitland shit? I think you could call me Bill.\"\n\nShe smiled.\n\n\"Somehow it's sexier fucking you as Mr. Maitland, than Bill. So, Bill, are you sorry you accepted my invitation to supper?\"\n\n\"What do you think?\"\n\n\"I think you enjoyed me, at least there's a lot of you leaking out onto the bed that gives me that impression.\"\n\n\"Shit, Meagan, I've loved every second of it, and you. Do you, uh-\"\n\nShe leaned up on one elbow over me and kissed me on the nose.\n\n\"No, you don't have to call me anytime. And I won't be waiting by the phone. And I won't start stalking you or coming by the office. No flowers. No candy.\"\n\n\"Alright, but-\"\n\n\"Bill, you don't owe me anything. I invited you out. I came here willingly. I wanted your body and your dick and I got them both. I had a wonderful time tonight. We're two old friends who finally scratched and itch. That's all.\"\n\nI looked up and down her slender body with her amazing nipples and a small ass and bent down to kiss her left nipple again, this time gently.\n\n\"I know, but-\"\n\n\"Bill, this was just sex. The kids would call it a booty call. No strings. No ties.. Please, don't get weird around me. If we bump into each other or I come by your office, I don't want it plastered in big letters across your forehead: I FUCKED THIS WOMAN. Okay.\"\n\n\"I know, Meagan. I'm only about 10 years or so older than you, but I feel like a grandpa right. When the hell did I get so old and out of touch?\"\n\n\"The last 20 years or so. You're Rip Van Winkle just waking up to the modern world.\"\n\nShe gave me another kiss and rolled out of my small bed.\n\n\"But for an old man, you're pretty damned good in bed.\"\n\n\"Meagan....?\"\n\nShe smiled down at me.\n\n\"No, I didn't climax. But I had a good time tonight. This was our first time. Sometimes it takes awhile.\"\n\n\"I am sorry.....you sure as hell got me off.\"\n\n\"Do I look like I'm leaving unhappy? Look, let me slip on my clothes, call a cab and get out of here. You've got a big day tomorrow and you need your rest. Good luck.\"\n\nTen minutes later I walked her out to a cab, came back inside and locked the door behind me. I set the alarm and lay down in the bed that smelled of her perfume and our sex. I tried to figure out how I'd gotten here. I really hadn't planned on having sex with a cute girl I'd had a few fantasies about back when I was married. I hadn't planned on having sex period.\n\nMeagan was only the third woman I'd had sex with in 20 years. It should have meant more than it did. Aline was special. Debbie, despite having torn my heart out, had been and always would be special. Meagan was....was.../ was just a pretty, nice girl that I liked. But.....\n\nIt had been casual. That's what it was. It hadn't meant anything. That's what felt so strange. When I'd been married committing adultery, fucking a pretty girl who was willing and eager, would have meant something. Even if the sex was casual, the act of having sex would be a big deal. But now I was single and I could do this and it meant -- nothing?\n\nI felt like I had wandered into a strange land. Stranger in a strange land, that was me. \n\n########################### \n\nWEDNESDAY, AUGUST 24, 2005 -- 11:30 p.m.\n\n\"Mr. Ballantyne, can I call you Gerry?\"\n\nThe big dark haired men dressed uncomfortably in a suit and tie fidgeted in the witness seat as Lew stalked around him, looking for all the world like a tiger circling a tied-down pig in a clearing. \n\n\"Yeah, that's my name.\"\n\nLew looked at him and I swear to God it looked like a bit of drool at the edge of his mouth as he envisioned sinking his teeth into Gerry's tender flesh.\n\n\"Alright, Gerry, let's see if we can get this straight. You're a bartender and you like trolling the dating sites for -- female companionship. Is that correct?\"\n\n\"Yeah. So what. There's no law against hooking up, not the last I heard. I like women, women like me. Works for me.\"\n\nLew rested his elbows on the edge of the witness box and leaned forward toward Ballantyne.\n\n\"The stats I got say you're six-foot-four, 190. You're obviously a good looking guy. Ever have plastic surgery?\"\n\nHe grinned.\n\n\"Nah, everything is the original equipment, up and down.\"\n\nLew rubbed his lower lip.\n\n\"There are rumors, not that I've confirmed but my investigators have talked to a number of your former girlfriends, and they tell me that you are -- let's be polite -- abundantly endowed. That's true, right?\"\n\n\"I got the complete package. Women usually only need one taste and they come back for more.\"\n\n\"I'm sure. What I'm a little curious about is why, with your....attributes...most of your female companionship seems to be a little....how to say this...a little 'mature' for a man of your age. You have testified that you engaged in a year-long affair with Judy Johansen, while she was married to Mr. Carroll. Ms. Johansen is 67 years old. We've confirmed four other fairly lengthy relationships...all with women in their late 50s to 60s. One lady was in her 70s.\"\n\n\"I like older women. So what? They might not be as tight in certain places, but goddamn, they do appreciate a guy who appreciates them. You ought try some. You'd be amazed.\"\n\n\"I'm sure you know what you're talking about, but it does seem somewhat odd that ALL of the female friends we've been able to confirm were women of considerable wealth. \n\n\"Several of them are extremely unhappy with you because of your dropping them after receiving some valuable presents. Others still have strong feelings for you despite your moving on, without paying them back for the motorcycles, condos, vacations, etc., that they provided you while your relationship with them was still going strong.\"\n\n\"What are you trying to say?\"\n\nLew leaned back and the smile vanished from his voice.\n\n\"Oh, I think you know what I'm saying, Mr. Ballantyne. You have made a living romancing older women and accepting gifts and money from them that has allowed you to live well beyond any income you could legally lay claim to.\"\n\n\"You're fulla shit.\"\n\n\"A lot of people might agree with you but we have extensive proof in the form of receipts, bills-of-sale, sworn testimony to that effect. There really is no doubt as to what you are. \n\n\"What I do doubt is your testimony in this courtroom today that Ms. Carroll told you, in your bedroom, that she was going to kill her husband, pass it off as an accident, and spend a lot of the $30 million she would inherit on you.\"\n\nBallantyne sat up straighter.\n\n\"I swore it under oath. I wouldn't lie. Judy did tell me what she was planning. She didn't tell me exactly when, but I knew what she was planning.\"\n\nLew walked to the jury and looked at them while talking to Ballantyne.\n\n\"You have lied under oath and I want you to know right now that when Mrs. Carroll is exonerated, I am going to do everything I can to see you charged with perjury.\"\n\nHe turned back to face Ballantyne.\n\n\"Detective McDonald testified that after she made your acquaintance on the adult dating site, 'Plenty of Fish' and your relationship had advanced to the point of dating, you bragged to her while inebriated about dating and knowing Mrs. Carroll before her husband's tragic death.\" \n\nBallantyne had stopped talking but was looking at me anxiously. I just shook my head slightly. I had coached him to be prepared for what I was sure would be Lew's attack on our star witness.\n\nLew continued.\n\n\"Mr. Maitland has played the tapes made by Detective McDonald which appear to be candid and unrehearsed conversations between yourself and Detective McDonald. You have, as a somewhat unfriendly witness for the prosecution, testified as to the validity of those conversations.\"\n\nHe left Ballantyne and walked to my desk and looked at me with a fairly theatrical expression of disdain.\n\n\"You certainly realize by this time, Mr. Ballantyne, that you were ensnared in a sophisticated sting operation spearheaded by Mr. Maitland and carried out by Detective McDonald. I must admit to being a little curious about one thing, though.\n\n\" As a good, dedicated, policewoman, did Detective McDonald have sex with you to convince you of her cover story as a lonely, wealthy older woman? Did she hold out the promise of future sex as a sweetener for your testimony against Ms. Carroll? How far was Detective McDonald willing to go to convince you to commit perjury?\"\n\nI was on my feet striding to the judge, raising my voice louder than necessary to convince the jury that I was really, personally pissed at this point.\n\n\"Your honor, I insist that you order the jury to ignore this cowardly attack on the character of a dedicated police officer. Mr. Walters knows full well that Detective McDonald did not engage in an unacceptable behavior to obtain Mr. Ballantyne's testimony and that no such illegal or illicit promises of sex were offered for his testimony.\"\n\nLew looked at me and flashed me a tiny grin that the jury couldn't catch.\n\n\"Unfortunately, your honor, I haven't worked as closely, or intimately, with Detective McDonald as has Mr. Maitland, so I really don't know how far she would go to make her case.\n\n\"I know that in the past she has masqueraded as a prostitute, going so far as entering a suspect's bedroom and stripping before fellow officers came in. I'm not sure it's that big a stretch from stripping before a suspect to...going further...to obtain cooperation.\"\n\nBefore I could open my mouth, Lew pivoted, told the judge, \"I'll withdraw those comments your honor and you may ask the jury to disregard them.\"\n\nAfter Judge Pizarro did exactly that, Lew turned back to Ballantyne and launched what I figured would be his main attack on his credibility.\n\n\"Mr. Ballantyne, it's clear from Detective McDonald's testimony that you basically admitted a relationship with Ms. Carroll while intoxicated. Detective McDonald taped those comments and when you sobered up, she and Mr. Maitland badgered you into following up on those comments. ",
        "\"I have to wonder, I must admit, why you were not charged with anything. You admitted you were aware of a plot to kill Mr. Carroll, that you stood to gain financially from the crime, yet did nothing to notify police of what she planned. Most lawyers would say you could easily be charged with -- at the least -- with being an accessory to murder. And yet no charges have been filed against you. Why is that?\"\n\n\"I- you'd have to ask Mr. Maitland.\"\n\n\"I don't think I need to ask him. I think the jury is smart enough to figure out why you haven't been charged. I think they can understand while you were attempting to seduce what you thought was a wealthy older woman, or bragging to her in bed with her, that you would brag about a relationship with a woman involved in a national case.\n\n\"And once you had admitted to that relationship, and had provided information about hotel and motel stays, telephone records and the like, Mr. Maitland and the police could threaten to file charges against you -- UNLESS you lied under oath that Ms. Carroll had planned to murder her husband.\n\n\"I believe, Mr. Ballantyne, that you did have an affair with Mrs. Carroll. That is reprehensive, to be sure, action on the part of a married woman, but as we've made clear, you're a very good looking, skilled seducer of older women. But I believe that there was never any confession by her of plans to kill her husband. \n\n\"I think that has been the state's view since the day he died as a result of a tragic accidental poisoning. I think the state, under Mr. Maitland's direction, trolled the adult dating, matchmaking sites under the assumption that Ms. Carroll had been having an affair. \n\n\"I will give Mr. Maitland and the state credit for undertaking an audacious scheme that must have been daunting. Talk about searching a needle for a haystack. And yet their scheme worked. They confirmed your affair with Mrs. Carroll, which gave them a motive they could argue for her to kill her husband.\"\n\nHe walked over to me and he was very, very good. I don't think anybody that didn't know him intimately would be able to tell that the anger was faked.\n\n\"But, unfortunately, Mr. Maitland has let the publicity about his being dubbed 'The Angel of Death' go to his head. He has mounted a crusade to send every defendant he prosecutes to the state Death Chamber, whether they deserve death or not. Truth or the facts be damned.\n\n\"And so he wasn't satisfied with being able to blacken Mrs. Carroll's character. He had to go for the it all, to provide faked testimony that would make her guilt undeniable. Mr. Ballantyne, I submit to you that Mr. Maitland and Detective McDonald threatened you with prosecution.\n\n\"Even if Mrs. Carroll escaped the death penalty, being tried separately you might still be convicted of a lesser charge. And even a lesser charge might send you to prison for years. Unless...you were willing to 'remember' her telling you of her plans to kill Mr. Carroll. I submit that your testimony against Mrs. Carroll was coerced, and false, designed simply to save your own skin.\"\n\nI rose to my feet.\n\n\"Objection, your honor. Mr. Walters has spun a completely fictitious story to discount Mr. Ballantyne's damning testimony. He does not have a single fact to hang his account on. He has carelessly charged me with violating legal ethics. If he is really certain of his facts, he should have me called up before the State Bar. And he should have Detective McDonald brought up on charges of illegal police conduct.\n\n\"But he won't, because he knows all of this is a smokescreen designed only to distract the jury from the facts in this case. Mrs. Carroll was having an lengthy affair with Mr. Ballantyne. She did confess to him her plans to murder her husband. No threats were made against Mr. Ballantyne to coerce his testimony.\"\n\nPizarro gave Lew a jaundiced glance. He wasn't upset. He waded through oceans of legal crap during his 30 years on the beach. But he did say, \"I'm not going to admonish the jury to disregard your comments, Mr. Walters, because you do have the latitude to present alternate views on the case. \n\n\"However, most of the time, you have to have some small, frail framework of facts on which to hang your theories, and I will leave it to the jury as to whether you have laid any such foundation.\"\n\nLew let it wash off him. He turned to the jury and said, \"I'll leave it in your capable hands as to how much of what I've laid out is speculation. Just remember when you go back into the jury room to consider this case, the character of the state's main witness; a man who has made a living off of seducing and abandoning older women. \n\n\"Ask yourself if you believe he would lie about a former lover to avoid prison time. Just use your common sense and I have no doubt what conclusion you will come to.\"\n\n\"No further questions.\"\n\nI stood up and on redirect asked, \"Mr. Ballantyne, Mr. Walters has made the claim that Detective McDonald secured your testimony by having sex with you, or promising sex. Are either of those claims true?\"\n\nHe looked over at Heather, looking hot and professional at the same time, and gave me a sour look,\n\n\"Yes to the second, no to the first. She had me hotter than hell with cyber and telephone sex. God, she has a hot voice. And when we met she kept me revved up with some kisses and she let me do a little petting. But the bitch never went quite far enough. I thought I was good, but damn, she had me with my tongue hanging out. \n\n\"That's probably how she got me drunk enough that I'd promise the moon to get into her. I never would have spilled the beans about Judy if that bitch -- sorry, Detective McDonald - hadn't had me thinking with my co- with my genitals. She definitely promised me sex to get me to talk in the first place.\n\n\"But she was all business after she got me to talk about Judy. Once she got enough details, she never let me touch her again. And as far as talking about Judy's plans, you didn't threaten me. But I'm not stupid. If I tried to testify for Judy, or clam up, then you would have come after me as an accessory. \n\n\"The only way I could protect myself was to come clean and tell you guys everything I knew. That way, whether you nailed her or not, I'd be in the clear.\"\n\nAs Pizarro closed down the court for the afternoon, Lew ambled over.\n\n\"Pretty good, Master Obi Wan Kenobi, but your key witness is tainted. The jurors know he's a miserable scumbag gigolo who would sell his own mother out. His testimony isn't going to be enough to get you over the top.\"\n\n\"You didn't do a bad job, Lew, but we already knew he was a miserable scumbag. You work with what you have.\"\n\nI looked around at the rapidly emptying court room. She was sitting on the left side of the spectator seats. She was dressed a hell of a lot more demurely than I could even remember from UNF. It didn't help. She could be wearing a potato sack and she'd still radiate pure sex. She was looking at both of us and I couldn't read the expression.\n\n\"Why the hell don't you go over and say something to her.\"\n\n\"Nothing to say.\"\n\n\"Shit, man, this is like sixth grade all over. You want me to slip her a note that you like her and would like to talk to her.\"\n\n\"Lew! There's nothing to say.\"\n\n\"How about, 'now that we're divorced and single I'd love to fuck your brains out, no strings attached'.\"\n\nShe got up and walked out and as usual, just her walking away was a symphony.\n\n\"I wish to hell she hadn't taken that job. This is hell having to see her every day.\"\n\n\"You ever think that's why she did take it. To flaunt what she's got in front of you every day? Maybe encourage you to take a second bite of the apple?\"\n\n\"It's a poisoned apple.\"\n\n########################## \n\nWEDNESDAY, AUGUST 24, 2005 -- 4 p.m.\n\nI was walking toward my office as I spotted Cheryl waving at me. I turned to see what she wanted. They talk about being frozen in place. I stopped in mid-step and almost literally froze.\n\nA blonde memory from the past stood in front of me and then she had her arms around me and her large soft breasts pressed against my chest. I probably was as stiff as a statue as she pressed her lips to mine. Then she backed away and gave me a funny look.\n\n\"I know you divorced Debbie, that stupid bitch, but did you divorce me too?\"\n\nAfter a stutter I managed to get my tongue going again.\n\n\"Clarice....where did you come from?\"\n\nDebbie's younger sister, not quite as pretty, not quite as big-tittied as her older sibling but still one hell of a eye-pleaser, reached out and grabbed my face and planted another one on me.\n\n\"You know that's a hell of a welcome after seven years, brother-in-law, especially for a girl that's had a crush on you for 20 years, give or take a few.\"\n\n\"I'm sorry....baby....I didn't mean...to...it's good to see you.\"\n\n\"Baby...\"\n\nShe smiled and over her shoulder I could see Cheryl's look of amazement and curiousity.\n\n\"Debbie's younger sister,\" I mouthed to her.\n\n\"You remembered, Bill. Am I still your baby?\"\n\nWhen I had met Debbie, Clarice was barely 12 years old, although like her older sister she'd already started developing. Her crush was so obvious and embarrassing that I had had to handle her with kid gloves, including always calling her 'baby sister.' And 'baby' she had remained until she'd moved from the U.S. with her husband Jimmy nearly a decade before. \n\n\"Of course, Clarice, you'll always be my baby.\"\n\nShe gave me another hug and said, \"I came up after Mom told me what's happening. She's written me and we've had a few phone calls. I couldn't believe it.\"\n\n\"Let's go into my office, Clarice.\"\n\nI closed the door behind me and she sat in one chair and I saw in the other face her. She wore a green pants suit/blouse combo that did nice things for her eyes. As with her sister, her chest strained the blouse, but not so ostentatiously.\n\n\"So...\"\n\n\"So, I talked to Debbie by phone when I got into the airport this morning and I'll talk to her this evening when she gets home. I told her she was a stupid bitch.\"\n\n\"Easy, Clarice. People get divorced. Happens all the time. It was just our time.\"\n\nShe reached out and placed one warm hand on my knee.\n\n\"Bullshit. Mom told me about Doug. About her throwing you out and bringing that son of a bitch into your bed. I don't understand why you didn't burn her ass. You're an attorney, in tight with everybody here. You could have ripped her heart out if you'd wanted to. And I can't imagine why you didn't want to.\"\n\n\"Everything isn't so black and white, Clarice. I'll let her talk to you about it. I'm prejudiced. She had her reasons, apparently. She thinks I was the bad guy, if you listen to her.\"\n\nShe reached out again and grabbed my hand in hers.\n\n\"Jimmy and I have been gone a long time, Bill. And I know people change. I could see you guys divorcing. Anybody can split up. But not the way she did it.\"\n\nI squeezed her hand. I could still see the 12-year-old in her.\n\n\"It's history now, Clarice. We're divorced. We're history. She's making a new life for herself, and I'm trying to move on, too. Don't let....don't let what happened get between the two of you. You're sisters...blood...I'm just an ex now.\"\n\n\"No, you're not an ex. You're James Jr. and Kathleen's uncle. You'll always be their uncle, and my favorite brother-in-law.\"\n\nI had seen pictures, but never seen my niece and nephew in the flesh.\n\n\"They're with you? Are you back for good.\"\n\n\"They're at Mom and Dad's right now. I want you to promise to come by. Tonight if you can but sometime in the next week. We'll be here for a week. Jimmy couldn't get off. But we've put in not to extend our contract. We'll transfer over to a civilian branch within the year and be home in a year or a little more.\"\n\nClarice was employed by an agency contracted to the U.S. State Department and Jimmy was employed in the same general area but I'd always suspected he was a government spook, possibly CIA. They'd been stationed all over the world for the past 10 years, the last five years in Tokyo.\n\n\"You coming back to Florida?\"\n\n\"I'd like that but we may be stationed in Washington.\"\n\n\"Close enough. It'll be good to have you back in the states. I wish...I wish you guys had been here...while things were still good.\"\n\n\"So do I. But just remember, no matter what happens with Debbie, no matter who she ends up with, you're family and you always will be.\"\n\n\"I feel the same way, Clarice. Kelly may remember you, but I don't think BJ will. . He was too young. I hope we can arrange for them both to see you and the kids before you have to leave. By the way, what is Jimmy up to?\"\n\nShe just grinned and said, \"Oh, you know, this and that.\"\n\nThen she said, \"I've got to go home now. Promise me you'll come by Mom and Dad's. \"\n\nShe got up and was ready to turn when she turned around and hugged me.\n\n\"You look younger than I remember you. I like the new look. Deb has got to be eating her heart out seeing you get younger and hotter. You know, of course, that if I didn't love Jimmy, I'd be putting the moves on you. I spent years waiting for you to dump Big Sis and realize I was the girl you should have chosen.\"\n\nI smiled at her, seeing that little 13-year-old who bugged me and her sister unmercifully.\n\n\"And now I'm free and you love your husband. Who said God doesn't have a sense of humor?\"\n\nAfter she left I sat back in my chair and thought about the good old days. Until it got too painful and I turned my attention from the past to the future.\n\n############################ \n\nWEDNESDAY, AUGUST 24, 2005 -- 5 p.m.\n\n\"Focus your eyes on the watch,\" Teller said in a soft, even tone. He had turned the lights down to dim, but it was still possible to see objects. Debbie lay on the couch and he sat in a chair next to the couch, having moved the marble Rohrschach coffee table out of the way.\n\nHe held his grandfather's pocket watch which hung at the end of a silver watch chain about ten inches long, above and in front of Debbie's face. She was looking upward with her neck at a slightly uncomfortable angle. He had a recording of a grandfather clock playing softly as background.\n\n\"Stare at the watch, only at the watch, Ms. Bascomb. Let your eyes follow it,\" he said, as he let it swung almost imperceptibly in a very short arc back and forth in front of her eyes. \"Think only about the watch. Look at the way the light plays on its surface....back and forth....back...and forth...and back...and....\"\n\nIt was a classic hypnotic suggestive trance method, going back about a hundred years, but it had always worked for him and thought it would probably work here. The woman was intelligent, strong willed and despite stereotypes, those were the types of people who were often most suggestible.\n\nHe wasn't sure how effective the first session might be, especially if the memory was painful and deeply buried, which it appeared to be. But most memories would eventually surface.\n\n\"You're feeling very, very tired, Debbie. Your eyes are getting heavier. It has been a long, long time since you've slept soundly, deeply. You are so tired. You're trying to hold your eyelids open, but they are getting heavier...heavier...heavier....\" \n\nIn five minutes she was breathing heavily. He got up, grabbed a towel from the bathroom and came out and placed in on her chest, tucking it in under her neck.\n\n\"Can you hear me, Debbie?\"\n\n\"Yes, Doctor Teller.\"\n\n\"Do you know where you are?\"\n\n\"Yes.\"\n\n\"Where are you?\"\n\n\"In your office.\"\n\n\"I want you to relax and think about nothing. You're floating in the center of a featureless void. There is nothing around you. Are you floating?\"\n\n\"Yes.....it feels good....\"\n\n\"You're beginning to feel a rumble deep inside your stomach....there is a rising bitter taste in your mouth...your throat is beginning to spasm...you are swallowing hard trying to keep the bile down....but it keeps getting stronger...are you getting nauseous?\"\n\n\"...y...yessss....oh....\"\n\n\"Freeze the moment. You are frozen....not sick, not nauseous..just....frozen...you are a statue...\"\n\nShe breathed deeply but didn't appear to be gagging.\n\n\"Now, Debbie, I want you to go back....go back to just BEFORE that terrible taste and gagging sensation came over you....where are you? What are you doing?\"\n\nFor a second he didn't recognize what was happening, then the open, slurping, sucking motions she was making with her mouth, distending her mouth so it looked like she was about to scream, the yanking motions she was doing with both hands as if she was milking a cow were unmistakable.\n\n\"Uhh...ummmm...uhhh..ummmmummm\"\n\nStunned, for a moment he thought the expression on her face was sexual frenzy, excitement so great that it could be mistaken for pain, and then he had grabbed the bucket he'd placed near the couch and had her head and was cradling her as she vomited into the bucket.\"\n\n\"ohhh....oohhhhh....ohhhh....ohhh...ohhhhhhhhhh....oh....ohhh..\"\n\nThe spasms as she tried to empty everything in her stomach were interspersed with huge choking sobs. He cradled her head, despite the fact that she was vomiting on him, the table and the floor.\n\nFinally there was only dry sobbing and he continued to stroke her blonde hair .\n\n\"It's okay, it's okay Debbie, it's over, it's past, you're okay now,\" he said, disregarding the smell, the mess on his clothes. It was obvious that something of a sexual nature had occurred, had precipipated the violent nauseau...but what?\n\nFinally, he was able to place her back on the couch, took the filthy towel, emptied the bucket, took washclothes and cleaned the office as best he could. Before he left he'd call the office cleaning staff to come in and leave it spic and span. He had kept most of the worst off her. He used a washcloth to get spatters off her blouse, her arms and hands.\n\nFinally when everything was as clean as he could get it, he leaned close to her and whispered into her ear, \"Debbie, wake up. Wake up.\"\n\nAfter a moment she opened her eyes and instantaneously tried to rise off the couch, but he held her by the shoulders and kept her down.\n\n\"It's okay, Debbie, it's okay. It's Doctor Teller. You're in my office. You're not---not back there. Do you remember anything about what just happened.\"\n\nHer eyes were wild as she looked around the office. It was only sinking in on her where she was. Her nose wrinkled as the smell of vomit hit her.\n\n\"Noooooo....no...where...what happened...what....\"\n\n\"I tried a hypnotic regression to see if I could discover what's been causing your nauseau. And I -- you went back to a very unpleasant episode in your life and became very sick. If it's not clear in your mind, don't try to bring it forward. Just relax now.\"\n\nShe lay her head back and began to cry.\n\n\"What the hell is wrong with me, Doctor?\"\n\nHe looked at her and decided there was no way he could tell her what he'd seen. He wasn't really sure what he'd seen. He knew what it looked like, but there were a lot of things he could have seen -- anything from a voluntary sexual encounter, to a violent rape to a vivid nightmare.\n\n\"I don't know, honestly, Debbie, Ms. Bascomb. But I know that we made progress today. Whatever is at the root of your problems is accessible through hypnosis. We'll just have to approach it more carefully next time. In time we'll see it for what it is...\"\n\n\"I don't know if I want to. I don't remember it and I still feel terrible.\"\n\n\"Do you want to be sick like this, feel like this... forever? If you don't face this, it might keep coming back.\"\n\n\"Doctor...I'm frightened...I'm really scared...I don't know why...but my heart is pounding...\"\n\nHe reached out and grabbed her hands in his own.\n\n\"You're still alive, Ms. Bascomb. No matter what it was, no matter how badly you were hurt physically or emotionally, you survived. You're still here. It's like a physical injury. With time and the proper treatment, you will heal.\"",
        "############################# \n\nFRIDAY, AUGUST 26, 2005 -- 4 p.m.\n\nI stopped at Lew's table. He had stepped away to talk to someone in the spectator section. Judy Johansen sat looking at me with an amused expression. I hadn't talked to her one on one at any time since the trial had started, although I'd spent time cross-examining her. I'd hurt her, but I didn't think I had sealed the deal.\n\n\"You know you're a terrible person, don't you, Mr. Maitland,\" she said with a trace of the Georgia accent from her childhood.\n\n\"Takes one to know one, Ms. Johansen.\"\n\n\"That's Ms. Carroll to you. And I'm an innocent widow. You're a vicious monster who's trying to railroad a grandmother into the Death Chamber. How do you live with yourself?\"\n\nI leaned over the desk and stared into her eyes.\n\n\"I was about to ask you that question, Judy. The man married you, loved you for five years. It wasn't his fault that he was old, that the medicine he was on kept him from giving you the sex you got from your boyfriend. He cut his own children out of his will to make you a rich woman.\n\nI looked around and no one was close. We weren't supposed to talk to defendants when their attorneys weren't around, but who cared. \n\n\"I've often wondered, Judy, how do people like you live with themselves? Even if you get off and you're a rich woman, don't you see his eyes while you're drifting off to sleep. Don't you have nightmares? You must have been a human being once upon a time. You were a little girl. You had parents you loved. Where did you lose it. Or are you one of those monsters that just look human?\"\n\nShe looked at me and I don't think anyone might have ever seen it, but the mask slipped for a moment. She wasn't crazy, like the Cannibal, but there was something cold and dark inside her.\n\n\"I'm going to sleep very well, Mr. Maitland. My husband loved me and he would want me to enjoy all his millions. And I'm going to. I might send you postcards from Fiji, or wherever I go to spend my millions.\"\n\n\"Nobody sends postcards from Raiford, Judy, and that's where you're going.\"\n\n\"You prepared to bet $30 million on that?\" And she smiled.\n\n\"No, but you are.\"\n\n######################## \n\nI acted like I was going through papers on my desk. I was actually shuffling one particular piece of paper while I let the suspense built. We had finished all our witnesses, Lew had made what I thought was the mistake of putting Judy on the stand to try go nail down the impression for the jury that she was a poor little widow woman -- worth $30 million. And in doing so he'd left me a last shot.\n\nI knew he'd thought he'd won. All other things being equal, he probably had. He was about to bust with barely concealed triumph. I loved the guy, but he could be a real pain in the ass.\n\nBut the game wasn't over. There was one last roll of the dice. \n\nI approached the jury. There were seven women and five men, and that was another reason why Lew thought he had an edge. Three of them were in their 60s, the rest in the 40s and under. \n\n\"There's been a lot of testimony, ladies and gentlemen, and Mr. Walters has done his level best to confuse the issues in this case. I congratulate him because he has done his usual masterful job. But, this is a fairly simple case. \n\n\"Judy Johansen married a very wealthy man and her husband changed his will to make her a very wealthy woman -- upon his death. For a year before his death she engaged in a sexual affair with a man 25 years her junior. Whether you believe the testimony of Mr. Ballantyne, her lover, or not, the fact is that she cheated on her husband for a year.\n\n\"Then she made a...mistake. One that very fortunately made her a wealthy woman, removed the inconvenience of a troublesome husband, and gave her the freedom to spend his money buying as many boy toys as she could handle. Fortunate...that accident.\n\n\"Now we can argue about how likely or plausible that fortunate accident was, but remember please that the law does not require that we prove our case beyond ANY doubt, only any REASONABLE doubt. \n\n\"We have proven, beyond any reasonable doubt, that Ms. Johansen had more than sufficient motive to murder her husband, her story of a 'mistake' in providing medication is a joke, and she didn't care enough about him to remain faithful in the last years of his life.\"\n\nLew was looking at me with a pitying glance, figuring I was desperately throwing anything at his client hoping something would stick.\n\nI walked back to my desk and picked up the pile of papers. Jessica nodded at me, aware of what I was about to do. I walked over in the general direction of Lew and his client and shuffled through the papers.\n\n\"In the process of discovery, my office found a number of documents from her husband. One of those documents is this one. I don't believe Ms. Johansen has ever seen this. It was found in her husband's possessions after his death. It was a card that he planned to give to her on her 66th birthday, which would have occurred six days after his death.\"\n\nI walked to a point near Johansen but out of the view of the jury so they had a clear, unobstructed view of the widow.\n\n\"Judy...I am writing this because as you know, I am not a man good with words. When I try to tell you how I feel about you...my tongue gets tangled. I am just a grocer...nothing less.....I loved Ethel all my life, but I don't think I ever told her anything but I love you. We haven't had those years....but I want you to know....I have loved you.\n\n\"I know you married me for my money...that's okay....I'm an old, fat man...I have not been able to be...a man...for you since early in our marriage...you are still a beautiful woman and I know men look at you...I know more than that....and you know what I am saying...\n\n\"But what I want you to know is that...it does not matter. I'm not sure I ever loved Ethel...the way I feel about you....she was a good woman..but at the end of my life, I have finally learned what it is to love a woman...your happiness is more important to me than my own. And I guess that is what it is all about....\n\n\"I will not be around much longer...I'm not stupid..just not that book educated...and when I am gone, all I can hope is that you will remember me and remember that I loved you as much as I could....\"\n\nI glanced at Judy for a moment, then toward the jury, with particular attention to the women.\n\n\"He never signed it, but handwriting analysis proves it was written by Ms. Johansen's husband.\"\n\nI looked back at Judy and saw what I expected to see. I walked over to the jury box. One woman was in her 60s. She was a retired teacher. Her husband had died of cancer five years before.\n\n\"There are tears in your eyes, Mrs. Cochrane. You didn't even know the victim. Why are you crying?\"\n\nShe dabbed at her eyes with a handkerchief.\n\n\"Nothing...just...uh....I thought of Steve....my husband.....he was a very unemotional kind of man. He bought me a vacuum cleaner for our anniversary one year. But I know he loved me. It sounds like what he would have written....\"\n\nI searched the faces of the jurors. The women's eyes were bright, the men looking down the way men do when they're faced with emotional scenes.\n\nI pointed to Judy Johansen and every juror followed my direction. She stared at them like a deer caught in a car's headlights in the night. They were open wide and she was trying to look stressed, but....\n\n\"Mrs. Cochrane, you didn't even know her husband, but his words roused your emotions. Because you have loved a man. Look at Mrs. Johansen. All of you look at Mrs. Johansen. I think she's a pretty good actress but I'll rely on your judgement of human nature gained through your own lives. Do you see even the faintest shred of sadness, of love in her eyes?\n\n\"I could have been reading a grocery list. But these were the words of her husband, a man she says she loved, a man she lived with for years, a man who made her wealthy. He's been gone a year. But do you completely lose all feeling for someone you loved....even someone you liked..in a year's time?\"\n\nI walked back to where she sat with Lew and for the first time I saw a shred of doubt in his eyes.\n\n\"I've laid out the state case and Mr. Walters has stressed the doubts you should have about the state case. But remember, as I said, to convict Ms. Johansen of murder, you don't' have to eliminate ANY doubt, just reasonable doubt. And the key to deciding her guilt is, I put to you, what was in her heart when she made that mistake with his medication.\n\n\"If you believe that she loved her husband and her mistake could have been a mistake, you should acquit her. If you believe that she was a greedy, money hungry opportunist who never loved her husband, I think the facts we've presented more than justify a conviction of first degree murder.\"\n\nI acted like I was going to step away, then turned back toward her and leaned in toward her. She didn't retreat.\n\n\"I think Clark Carroll was happy to die, Judy. I think in his last moments when the pain hit him, he knew what you had done. He already knew about your affair, and despite 'just being a grocer' he knew what the pain meant. I think he loved you. And I think when he knew how you felt about him.... \"\n\nI deliberately walked away from her without looking back. \n\nTUESDAY, AUGUST 30, 2005 -- 1 P.M.\n\nI was in the office talking to a cop in a small county about the case of the man who had beaten his pregnant ex wife to death and was probably going to get away with it when Cheryl stuck her head in the door. She looked terrible, flushed, nose running, eyes weeping.\n\n\"They just called, Bill. They're got a verdict in the Judy Johansen case.\"\n\n\"Call Heather McDonald and tell her to get to the courtroom and then get somebody to cover for you and go the hell home before you infect everybody in the office. Really, Cheryl, you look like death warmed over. Get out of here, get in bed with some chicken soup and just call me every few days so I'll know you're still alive.\"\n\n\"You're a sweetheart, Bill. I didn't know you cared.\"\n\n\"It would take me too much time and trouble to train a replacement.\"\n\nBut she smiled as she left my office.\n\nI grabbed a briefcase and was out the door. The jury had had the case for five days. The judge had kept them deliberating all through the weekend without letting them go home. It made for some unhappy jurors but Pizarro was a stern old bird. He just told them to keep hashing it out until they came up with a verdict.\n\nIt had been a good weekend. I'd gone over to the Bascombs and seen both Kathy and Roy while visiting Clarice and my new niece and nephew. They seemed like good kids. Kelly had come by and she looked so much like her mother it hurt to look at her. BJ had even been drive up by mom and Charles. \n\nI was expecting things to be tense, but Debbie stayed out of the way. Clint Abbott had come by and taken her out before I'd been there more than a few minutes. When she came out of her old room after talking with Clarice I didn't think she looked good. Pale, she gave me strange looks but I tried to ignore her. \n\nWhen Clint came by we shook hands and were able to talk. Debbie's parents seemed to actually like him, or at least they were warming up to him in a way they never did to Doug.\n\nIt still felt strange, but we were almost able to slip around each other like we were long lost in-laws.\n\nAnd now I was walking into Pizarro's courtroom. Lew was already there. I was pretty sure he paid off somebody on Pizarro's staff to always give him a heads up on things like this. \n\nHe walked over to me and held his hand out.\n\n\"It was a good fight, old man. I'm sorry I had to beat you down. No hard feelings.\"\n\nHe couldn't help grinning at the end.\n\n\"Just try not to cry when you lose, kid.\"\n\nHeather walked in behind me and touched me on the arm. I swung around. How she could get hotter, I'll never know. But she wore a light blue blouse over tight jeans and....She had to be the sexiest grandmother that ever walked the earth.\n\nLew noticed my look and said seriously, \"Sergeant McDonald, I'm sorry I had to rough you up in court. It was nothing serious.\"\n\nHe held his hand out and she ignored it.\n\n\"I don't know why you'd want to shake hands with a slut who screws men to get their testimony?\"\n\nHe backed up a bit.\n\n\"It's all part of the game, Sergeant. Nothing personal.\"\n\nShe stared through him.\n\n\"I took it personally.\"\n\nI touched her on the shoulder.\n\n\"You may not believe it now, Heather, but he's a nice guy. I wouldn't be his friend if he wasn't.\"\n\n\"I don't see how the hell you could be, but he sure as hell isn't mine.\"\n\nLew pretended to shiver, then shrugged and walked away.\n\n\"He's an asshole.\"\n\n\"He has his moments, but he's had my back when I needed him, Heather.\"\n\nShe laid one soft hand on my waist.\n\n\"I still think he's an asshole, but for your sake I won't spit in his eye.\"\n\nWe were surrounded by incoming reporters, attorneys, camera crews hustling in from outside, but standing there with her hand on my waist, it felt like we were alone. I had to turn away because I was afraid I was going to embarrass myself. I put my hand on her elbow and said as professionally as I could, \"Have a seat up front Heather. The judge will be in in a minute.\"\n\nAs she turned away from me with that ass twitching in those tight jeans I saw Debbie walking in the courtroom. We exchanged glances and I couldn't help it. I tried not to. Hand to God, I tried not to. But I couldn't help smirking.\n\nWithin five minutes the courtroom was packed, reporters had notepads and a pool representative of the media who'd gotten the role of televising it for everybody, had a hand-held video camera going. Judy came in and stood briefly at the desk talking with Lew. Then she looked over at me. We smiled at each other like old friends, for different reasons I'm sure.\n\nThen the jury was back and everybody was staring at the short, heavyset male mechanic who had been chosen jury foreman. The judge asked if they'd reached a verdict and when the foreman said they had, he asked the foreman to stand up and face Judy.\n\nI watched his lips moving before the words actually penetrated. Then I was watching Judy's face as they hit. And Lew's face.\n\n\"...guilty of murder in the first degree....\"\n\nI'd never seen it before, but reporters actually raced out of the courtroom. Judy's 40-ish son was on his feet yelling at the jury, several extra bailiffs had come toward the spectator section. And Heather was in my arms. She had come around the desk and before I could move was hugging me. Which led to a kiss.\n\n\"We did it, Bill, we did it. We nailed her.\"\n\nI tried to rev back on my emotions, but God, it felt good. I looked at Judy Johansen for a moment and it was like we were the only two people in the room. I wondered what it would be like to have the world by the tail one moment, and be in Hell the next. I don't know that I'd ever seen despair in a human being's eyes, but I did now.\n\nI couldn't say I felt happiness, but I felt satisfaction. For just a moment the world made sense, the scales balanced.\n\nI sank back in my chair with Heather squatting down beside me, holding my hand. Pizarro ordered Judy taken into custody, thanked the jurors and released them. People milled around for awhile. Lew spoke to Judy before she was taken away with his hand on her shoulder, then talked to her son after bailiffs took her. Then he sat down too.\n\nWhen I looked over at the spectator section, Debbie was gone.\n\nThen Lew was standing in front of me. He just shook his head.\n\n\"God damned, Bill. God damned. I really didn't think you could do it.\"\n\n\"Sometimes you get the bear and sometimes...\"\n\n\"Remind me never to play poker with you, Bill. You're getting help from a higher power.\"\n\nHe walked away and then came back.\n\n\"I had to be sympathetic, but honestly, Bill, she was guilty as sin. She killed him. And we both know it. So the good guys won.\"\n\nI walked out of the courtroom with Heather beside me. Local, national and a couple of international television crews were waiting for me. I was going to talk to Celestial Madonna, when I felt a sudden pressure on my hand. I looked over and Heather was squeezing my hand.\n\n\"Oh, don't you remember, Mr. Maitland, we had that....debriefing we needed to get to. Before you do any interviews.\"\n\nI gave Celestial a quick smile and said, \"I'll be back in ten to fifteen minutes. Don't go anywhere.\"\n\nWe barely made it to the State Attorney's floor. It was lunchtime and there were a half dozen SAs out. I knew that Raul Castro was out with the same flu that had probably claimed Cheryl. I stepped into his office, closed the door and locked it behind me.\n\nShe had slid out of those jeans, slipping them down on the floor. Her panties followed. She was unzipping me before I could get my fingers into that wet pussy that she was pushing up against me. I pulled her up and we tried to strangle each other with our mouths until she pushed me away and said, \"Get out of those pants, Bill. They'll have my pussy smeared all over them if you try to keep them on. I'm sopping wet.\"\n\nShe had a point. Thirty seconds later she was naked and I only had my shirt and tie on. Before I could move she had a condom out of her purse and had it on me very smoothly. Then I was buried all the way to balls in the center of her and was trying to push it in further.\n\n\"Fuck me harder you bastard....hammer me...god harder....slam it in me....\"\n\nShe kept slipping away from me and I kept slipping out until I grabbed her and threw her on a desk on her stomach, spread her legs wide and rammed it in on one smooth motion. This way I could pound her doggy-style with every ounce of strength in me and not lose contact. I don't remember if we talked. I remember her making noises and I must have said something, but I could never remember afterward exactly what.\n\nShe was pushing back in a corkscrew motion and grabbing one hand and pressing it so I'd squeeze first one breast and then the other. And then, it wasn't 60 seconds, I felt it coming and I started going home. It seemed like every time I thrust into her as deep as I could go I squirted out high-pressure streams of me.\n\nThen I was leaning forward on her and she had flatted herself out on the desk. It occurred to me I'd have to get in here before Raul got back and clean up the mess, as well as dispose of a used condom in such a way that it wouldn't be discovered and launch a new round of rumors.\n\nI pulled out of her and somehow managed to stay on my feet as she slowly pushed herself away from the desk and turned to face me. She looked down at my deflating dick and said with a grin, \"I think you really, really like me, Mr. Maitland.\"\n\nThen:\n\n\"I don't know about you, but I really, really needed that.\"\n\nI looked at her wet pussy and said, \"I guess I did too. I don't know that I've ever come that fast in my life.\"\n\nShe reached out to touch my cheek and said, \"I guess we both did. I've wanted you for months. It just seemed like today....it seemed like the thing to do.\"\n\n\"It's a good thing we made it here. The way I was feeling, I might have taken you in the courtroom.\"\n\nShe laughed. \n\n\"And I would have let you. Hey, think you could get to a bathroom and bring me some paper towels or toilet paper...so I can clean up the mess you made.\"\n\nAfterwards, somehow without anyone catching us, I walked her back to the elevator and avoided holding hands with her when we passed anybody.\n\n\"Uh, Heather....\"\n\nShe reached out and shook my hand formally for the benefit of anyone who might be watching. \n\n\"We both got carried away, Bill. We've been working together for awhile and we were both really excited and we were dying to celebrate today. There are worse reasons for -- what we did.\"\n\n\"It was a hell of a celebration.\"\n\nShe released my hand and said, \"Go on, you've got interviews. I think we actually did it in 15 minutes. \"",
        "As the elevator opened and she pushed me toward it, she said, \"Your reputation is going to be insane after this. You actually convicted the killer granny. That's one of the first times a woman's ever been sent to Death Row in this state. I'll have to schedule an appointment to get any personal time with you, Mr. Maitland.\"\n\nI spent two and a half hours doing media interviews after which I was almost convinced that I really could walk on water. \n\nAbout 4 p.m. I got a call from the Big Man.\n\n\"Bill, could you trot on down to Courtroom 4. Peters is in court with that hit and run driver, the one that killed those two kids. His attorney is balking at the plea deal we've offered, 15 years with no parole.\"\n\n\"What do you want me to do?\"\n\n\"Just walk in the courtroom and talk to Peters for a few minutes.\"\n\n\"Why? I've just killed almost three hours giving you about a million dollars in free publicity.\"\n\n\"And I appreciate it. Humor me.\"\n\nSo I walked into Courtroom 4 and talked to Peters, a youngish blonde guy who was actually only a few years younger than me but looked like he was still in his 20s. I noted the hit and runner looking at me strangely and then his attorney and he conferred and in a few minutes a woman I thought must be the defendant's wife came over to them and whispered.\n\n\"Your honor,\" the defense attorney said, drawing the attention of Circuit Judge Dominic Dellaro. Dellaro looked up from some papers he'd been studying. \n\n\"Uh, your honor, my client has changed his mind. We'll take the State's plea.\"\n\nDellaro looked at him with just the hint of a smile and asked, \"Are you sure, Mr. Richards. I thought you said your client would never agree to 15 years imprisonment. You were going to fight to prove his innocence.\"\n\nThe defense guy looked at Peters, and then at me, and suddenly I realized the world was a different place.\n\n\"We changed our mind, your honor.\"\n\nDellaro just looked at me and smiled.\n\nWhen I got back to my office the phone was ringing.\n\nThe Big Man sounded like a cat that had just swallowed a covey of canaries.\n\n\"I think I'm going to have you stand around in every courtroom where we have a trial going. At this rate, we won't actually have to try many more cases. Not with the Angel of Death breathing fire and brimstone.\"\n\nI would have joked about it except I was still stunned. I really had frightened that guy into accepting a plea. This was almost not funny any more.\n\nIt got to be about 5 p.m. I was wrapping up loose ends, accepting congratulatory calls, and trying to decide if I wanted to make it to Hurly's or try to get by Carlos' place. It had been a while since I'd done any sparring. The way I felt right now, it seemed I could do almost anything. \n\nI had put away an evil woman, made myself a legal superstar of sorts, had the kind of raw sex I hadn't even thought about in more than 20 years, and did it right in the middle of the State Attorney's Office without anyone being the wiser. Hell, I could probably fly if I put my mind to it.\n\nThe phone rang and I answered it wearily. I really wanted to get out of here. Susie, a secretary who was taking Cheryl's place, said, \"I hate to bother you, Mr. Maitland, but there's a woman out here asking to see you.\"\n\n\"I really don't want to see anybody, Susie. If she's a reporter, get her name and tell her I'll definitely call her tomorrow.\"\n\n\"She...said it's important and that you might want to talk to her.\"\n\n\"She wouldn't give you her name?\"\n\n\"No sir.\"\n\n\"Aw hell,\" I said more to myself than her, then said, \"Okay Susie. I'll give her five minutes. Tell her.\"\n\nI was leaning over to get papers out of a bottom drawer when I heard, \"I'd rather have more than five minutes, but I'll accept whatever I can get.\"\n\nI froze. I smelled her perfume first and then when she leaned over to kiss the side of my face, a kiss that slid onto my lips, I tasted mint. She pulled back from me and was looking down on me and I knew I was dreaming.\n\n\"You wouldn't come to me, Mr. Maitland, so I had to come to you.\"\n\nI was standing holding her around the waist and she was looking into my eyes with those sea-green eyes of hers. I couldn't talk.\n\n\"I have two weeks, Bill. If you don't want me to stay, I'll go. I can fly down south if you don't want me around.\"\n\nI pulled her to me and after a long moment I let her lips go and told her, \"I don't want you to go, Aline. I don't want you to go.\"\n\n#"
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "marriage",
        "divorce",
        "crime",
        "court action"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-05a"
}