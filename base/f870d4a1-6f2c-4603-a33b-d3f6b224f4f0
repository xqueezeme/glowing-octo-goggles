{
    "title": "Two Hundred Dollars Ch. 20",
    "pages": [
        "116 Dollars \n\nBailey took her notebook in hand early Tuesday morning when she realized she hadn't filled it out in several days. \n\nThank god I remembered to do it on Friday. That was hella complicated, what with Laura helping and all the showing and removing clothes. \n\nThat forced her to go over the eight spankings Laura had delivered. \n\nI'm not even going to talk about that, or make a note of the debt, but Kent did pay one dollar. Where do I put that? \n\nHistorically, she'd used the left column for the date. When Laura came over and helped, she'd put Laura's name in the date column so that Laura could have her own row. That made the first two entries easy. \n\n\"2018 11 02 Fr\", the first said, \"$3 show 8sp, 5sp(pd), 4sp(bare).\" \n\nThat covered the eight spankings with the inspection, the second set with her pants down and the third set with her panties off. \n\nLaura's row matched exactly, except it had her name in place of the date. \n\nBailey grimaced, feeling her face burning with embarrassment as she recalled the feeling of Laura's hand resting on her cheek. \n\nIt's funny the spanking part doesn't bother me much, Bailey thought with a frown, it's the memory of her hand cupping my cheek. \n\nAshamed or not, the fact of Kent paying a dollar to watch the spanking meant that Bailey had to make note of it. The pencil felt awkward and almost too slippery in her suddenly clammy hands. \n\nUgh, just write it down. \n\n\"L-&gt;B,\" she wrote, \"$1 8sp\" \n\nThere. Done! \n\nAfter that she'd taken Laura home and, upon her return, straddled Kent. She had no difficulty recording that. \n\n\"$1 5sp(pd)\" \n\nNext up, Saturday and Sunday had matched each other perfectly. She wrote down both dates and recorded three dollars worth of spankings. \n\n\"$3 12sp\" \n\nThat's doesn't cover it, though, does it? If I'm paying four spankings per dollar, it means I'm naked from the waist down. Instead, I was in my underwear. \n\nShe looked up the page and flipped it over, noting all of the abbreviations she'd ever used. \n\n\"pd\" is for pants down, \"bare\" is bottomless, \"double\" when he does both hands, \"wd\" for the wooden spoon. \n\nBailey invented a new abbreviation: \"u/w\" for underwear. \n\nI hope I don't use it much. I need to get naked and get to three spankings for a dollar. Save my ass some trouble. \n\nShe moved onto Monday, a banner day in her accounting because she and Laura had knocked off ten dollars in one shot. \n\n\"2018 11 05 Mo,\" she began, adding on the right side of the ledger line, \"$5.\" \n\nNow we have a problem. I've used \"sp\" for hand spankings, \"wd\" for the wooden spoon, \"wh\" for that whip thingie Laura stole. \n\nWith a shrug, she wrote, \"10pa (pd) 5sp (pd)\" \n\n\"Well, Laura,\" Bailey spoke aloud, \"you wanted to call it a paddling, so we're going with that.\" \n\nSatisfied, she folded the book up, replaced it in her underwear drawer and rolled onto her back on her bed. \n\nThe next problem she had to face involved her body. Bailey wanted to get naked and work her debt down faster. If she let Kent slap her cheeks twelve times while wearing underwear, he paid three dollars. Drop those two measly pieces of clothing and it cost him four. \n\nEvery time she pictured herself naked in front of him, though, a chill went through her. \n\nJust me, standing there naked, as if I'm worth something. \n\nThe shiver came afresh and she fought the urge to pull her blankets over herself. \n\nI've got to find a way around this. \n\n============================= \n\nKent felt glad, for once, that he and Bailey had a couple of days off from all the spanking. She and Laura had burned through a heap of Bailey's debt and their asses had a few solid patches of red to show for it. \n\nThey passed each other occasionally in the hallway throughout Tuesday, but didn't exchange more than few words until Wednesday when she came into his room. \n\n\"I'm still not going to do any today,\" she said as she entered. \n\n\"That's fine,\" Kent said. \"The pace has been a bit rushed.\" \n\n\"My ass needs a break.\" \n\n\"That's what I meant,\" Kent said. \"How are you otherwise?\" \n\n\"Other than not being able to sit down properly?\" \n\n\"Other than that, yeah. How are you and Laura doing?\" \n\n\"Oh, we're good now,\" Bailey took a moment to cautiously sit on the edge of his bed. Deciding she couldn't find a comfortable place, she laid down on her left side instead. \"Friends, right?\" \n\n\"Right.\" \n\n\"How is she taking the whole, uh, orgasm thing?\" \n\n\"What do you mean?\" \n\n\"Remember?\" Kent asked in disbelief. \"She freaked out about being a 'bad girl' and what not. I'm kinda worried we went too far for her.\" \n\nBailey rolled her eyes. \n\n\"What?\" \n\n\"Kent, look,\" she said. \"You've had a girlfriend or two before?\" \n\n\"Yeah,\" Kent looked distinctly uncomfortable as he replied. \n\n\"Well, did you have -\" Bailey cut herself off and quickly reworded her sentence, \"did they have orgasms with you?\" \n\nKent nodded. \n\n\"And they never acted like that?\" \n\nKent shook his head. \n\nBailey took a breath and looked him in the eye, \"We get like that, sometimes, okay? I mean, for some girls.\" \n\n\"Okay.\" \n\n\"Yeah,\" she intoned, \"In Laura's case, with it being her first time having one with a guy, and her weird religious crap in her head...\" \n\nBailey shrugged as she trailed off and looked away from him again. \n\n\"Just think of it this way,\" she explained. \"This is a really intense way to... to do sexuality. The feelings are so much stronger.\" \n\n\"I get that.\" \n\n\"And it gets overwhelming,\" Bailey said, then rolled her head sideways to glare at him. \"At least for us, anyway.\" \n\n\"Laura just got 'overwhelmed', then?\" \n\n\"Yes.\" \n\n\"That's why you made fun of her like that?\" Kent reminded Bailey. \n\nBailey smirked, \"Yeah, it's a lot like how she kept jerking your cock after you were done.\" \n\n\"Oh,\" Kent laced his hands behind his head and looked up at ceiling. \"Oh.\" \n\nThat explains a lot, Kent thought back to his first girlfriend in high school and the first time he'd caused her to have an orgasm. He hadn't even realized what they'd done until later but, in retrospect, her behaviour had gone a little goofy in the immediate aftermath. So Laura got a bit strange. \n\n\"So,\" he paused thoughtfully, \"What do I do the next time?\" \n\nBailey shrugged again, \"Just wait it out. Give her space if she needs it. You didn't do anything she didn't want.\" \n\nKent breathed a sigh of relief, because Bailey had a solid point. \n\nI let Laura lead the way. If she surprised herself, that's something she did. I'm responsible, to the point of not making it worse, but she gets to make her own decisions. \n\n\"And she's okay now?\" \n\n\"Yeah,\" Bailey nodded, \"Listen-\" \n\nShe cut herself off as the door to Carson's room opened. Quietly, the two of them waited as Carson came by, zipping up his winter jacket. \n\n\"Headed out?\" Kent wondered in surprise. \"Bit late?\" \n\n\"Drama class rehearsal,\" Carson shook his head, \"it's the only stage time we could get. See ya guys later.\" \n\n\"Later,\" Bailey waved. \n\nA tangible awkwardness filled the air. \n\nBailey already said no spankings for the day, Kent thought, but that doesn't mean she isn't getting wet right now, lying on my bed. \n\nHe realized with a start that he had consistently relied on her to take the lead. Right from the beginning, from the moment she had proposed this unusual debt repayment scheme, they'd taken every step forward at her provocation. Kent, in designing the rules to administer her spankings, had based everything off not just her consent, but her initiative. \n\nDo I even know how to start anything with her? \n\nSurprised at this realization, he started to speak, thinking to address her and suss out her feelings, but, looking at the ceiling and not noticing the intent in his eyes, Bailey spoke first. \n\n============================= \n\nAt some point, I need to move forward. Why the hell not now? \n\n\"Kent,\" Bailey addressed him, keeping her voice firm. \n\nShe heard a weird stuttering breath of air, but she didn't turn her head. \n\n\"Yes?\" \n\n\"I have a proposal,\" Bailey added. \n\n\"Alright,\" he replied. \"But I thought your butt needed a break?\" \n\n\"I can do one,\" she drawled her voice out. \n\n\"Oka-ay.\" \n\nShe stood up, walked past him and made a single mark on the white board. \n\nCommitted, now do the rest. \n\n\"Just a sec,\" she told him, and stepped out of the room. \n\nHer jacket, a bit wet from the slushy weather they'd had, hung in the laundry room with her scarf around the shoulders. She snatched the scarf down and returned to Kent's room. \n\n\"Stand up,\" she told him. \n\n\"Oh,\" he said. \"Blindfold again?\" \n\n\"Yep.\" \n\nKent shrugged, willing to be led, and she tied the scarf around his eyes. She quickly ducked her head down to check he couldn't see anything along his nose. \n\nAlmost good enough, but still... \n\n\"Hey-\" Kent protested as she pulled down at the waistband of his pants. \n\nDidn't protest much though, did he? And look at that. Is he just constantly erection-ready? \n\n\"What are we doing?\" he asked. \n\nShe tugged on his shirt and pushed it over his scarf-wrapped head, \"This'll make it easier on me.\" \n\n\"Oh,\" Kent acknowledged, raising his arms to let her remove his shirt. \n\nNice enough body, in the clear light, Bailey noticed, not super-muscled or anything, but kinda lean and smooth. Why have I never noticed his body before? It's been right here the whole time. \n\nShe laid the shirt over his chair and took a deep breath. \n\n\"Listening?\" she asked. \n\n\"Listening,\" Kent's lips twisted ironically. \"Not like I have any other way to pay attention.\" \n\n\"Good,\" she said, \"So how many spankings for a dollar, like this?\" \n\n\"I, um, what?\" he asked. \"I guess it would be ten, wouldn't it?\" \n\nOh, damn it, that's not what I meant. \n\n\"I mean,\" Bailey stammered out a clarification. \"What if you're blindfolded but I'm, like, naked.\" \n\nShe watched Kent gulp. \n\n\"Completely naked?\" \n\n\"Yeah.\" \n\nHe's getting even harder. Is this blindfold a turn on for him? Denying his eyes and turning everything else up. He's even panting... no, wait, he isn't. That's me. Why is my heart beating so hard? \n\n\"It should be three,\" Kent said, \"If I could see you.\" \n\n\"But you can't... so?\" \n\n\"Four?\" \n\n\"Sure.\" \n\nThe deal is made. Now you have to go through with it. Have to, have to, have to. It's like a promise, isn't it? \n\nKent wouldn't see it that way, of course, but if she ever wanted to move forward, Bailey knew she'd have to push herself. She observed his nearly naked body, clad in only his dark, loose shorts and her beige scarf. \n\nGod, could I get a picture of him? \n\nShe stepped up to him, pressing her clothed body against his mostly uncovered flesh, and waited a beat. \n\n\"Well?\" she asked. \n\n\"Well?\" he wondered aloud. \n\n\"You need to take my clothes off, right?\" \n\n\"That's my job, is it?\" Kent sounded surprised. \n\n\"Unless you don't want to-\" \n\n\"No, no. I got it.\" \n\nWhere will he start? Oh! \n\nKent took her waist, his thumbs on the front of her body and his fingers around the back, and pushed her shirt upwards, making her skin tingle all the way up her body and back down her spine. \n\nWow, okay. Here I thought only his senses would get amped up by the blindfold. But watching him sightlessly navigate my body is doing it to me, too. \n\nThe shirt cleared her bra and she raised her hands to let him pull it off over her head. \n\nIt doesn't matter which bra I'm wearing, does it? He can't see and it's coming off anyhow. \n\nAt the same time, Bailey realized she hadn't chosen a particularly exciting pair of panties either. \n\nThey're not the ones I wear on my period, but they're still so boring, I'd never let him see it. I didn't plan this out at all. \n\nKent knelt down in front of her and set to work on her excessively tight jeans. Keeping her hands above her head, she sucked in her belly to expedite the disrobing and, able to watch him while knowing he couldn't watch back, saw his lips tighten with focus before she felt the jeans pop loose. \n\nHe slid the jeans down to the floor and then gradually slid his hands up the back of her legs, all ten fingertips burning lines along her skin until he reached her cheeks. His fingers found the lines of the back of her panties, slid under them and cupped her ass. \n\nBailey sighed softly and Kent grabbed the waist band of her panties by hooking his fingers around from the inside. He dragged these to the floor and his eyes became level with her naked pussy, the tip of his nose sticking out just past the scarf. Her body swayed of its own volition and his nose brushed against her vulva, sending a shock into her belly and forcing soft grunt from her lungs. \n\nShe'd kept her hands above her head, but felt a compulsion, borne from so many nights of humping a pillow, to grab the back of his head and jam him into her crotch. \n\nMust keep my hands above my head, she urged herself. What would Kent even think if I grabbed him? What would happen? \n\nAnything could happen, really. He might jerk away suddenly and take off the blindfold. Or, possibly, he might push her onto the bed. \n\nAnd then I'd spread my legs and he'd... \n\nBailey held back a moan at that thought. Kent hadn't even finished stripping her. \n\nHis hands slid up the back of her legs again, up to her naked ass. Maintaining a firm grip there for balance, he stood up, his blindfold subtracting somewhat from the intimidation factor his slight height advantage usually gave him. \n\nShe felt his hand slide up her back to find her bra strap. \n\n\"You gonna be able to get that undone?\" Bailey pushed her voice into insulting sarcasm. \"Or should I-\" \n\nBoth hooks came undone with a flick of Kent's wrist and she felt the underwire instantly slacken and rise to the level of her nipples. \n\nIt's kind of like he is a fucking ninja, actually, when you get right down to it. \n\nShe could easily have lowered her arms and let the bra slide off the front of her body. Instead, she left them high, her fingertips extended, forcing Kent to raised his arms, too. Bailey flexed her shoulders, pulling her arms back, drawing him closer until their bodies touched, her nipples against his chest. His erection brushed against her pelvis, not touching where she needed it to touch, but that could wait a bit. \n\nOkay, I'm naked. I did it. He can't see me, but I made it. \n\n\"Alright, then,\" Kent said, sliding his arms down to her hips, clinging to her in his blindness as a sailor might keep to his compass. \n\nBailey couldn't quite feel him pulling her in, but the pressure between them seemed to increase very slowly regardless. She lowered her arms and put them around his neck. \n\n\"Are you sure you're done?\" she invited. \n\n\"I'm pretty sure you're naked, yeah,\" Kent's voice wavered in uncertainty. \n\nHe doesn't know what I mean, Bailey realized, keeping her sigh internal. \n\n\"Shouldn't. You. Check?\" \n\nKent's erection hardened between their bodies. \n\n\"I guess I should.\" \n\nWith his hands on her hips, Bailey expected him to go straight to her ass. Kent surprised her, instead, by working his way up her back, his fingertips on either side of her spine, gently kneading her muscles all the way up to her neck. His fingers slid under her hair to cup her skull, lifting her chin up like a chalice. \n\nWe should kiss now, she thought, but nothing happened. I probably can't kiss with my eyes open. \n\nUnable to close her eyes, she allowed Kent to tilt her head a little so his cheek could rub against hers. He breathed down the side of her neck, in her ear, warm and slow, threatening her balance more than anything before as her knees began to tremble. \n\nSlowly, careful not to tangle and pull her hair, his hands released her neck and she lowered her own arms, inside his embrace, to hang at her sides. His palms set on the sides of her neck and began moving downward. Kent knelt again and smoothly ran his hands down over her breasts. He squeezed, both hands at once and lifted her breasts up, causing her to gasp with the sudden force, and released her. \n\nOver her abdomen he went and around her back, grabbing both cheeks at once. He followed this by tracing lines down the back of her thighs, over her calves to her heels. Lastly, Kent came up the front of her legs and stood up as he reached her crotch. With his left hand on the small of her back, he placed his right covering her vulva and pushed, once, firmly inward, the tip of middle finger parting her lips just a touch. \n\n\"Oh!\" she breathed. \n\n\"Madam,\" he whispered in her ear. \"I am quite assured of your nudity.\" \n\n\"Good,\" Bailey gulped, trying to regain her composure. \"Now the spanking?\" \n\n\"Uh-huh. How do you want 'em?\" \n\nShe put her arms around his neck again and pulled her body against his, \"Just like this.\" \n\nKent's arms had already wrapped around the small of her back and, at this prompting, his right hand went to her left cheek. He tapped her flesh gently, a little test. \n\n\"Good?\" she asked. \n\n\"Oh, yeah,\" Kent twitched against her. \n\n\"Well?\" Bailey said. \"Go ahead.\" \n\nShe put her head to the right of his, opened her mouth and set her teeth upon the tendon joining his shoulder to his neck, knowing exactly what that would do to him. \n\nKent rubbed circles around her bare cheek, squeezing as he saw fit. \n\nC'mon, boy. C'mon. \n\nShe let her teeth bite into him just a little and felt his body go tense as his arm swung out. \n\nYes. Here we- \n\nA thousand stinging bees struck her left cheek, high and sudden, before she'd even expected it. Her bite had forced Kent to move faster than even he had intended, eliminating the moment of warning she usually took from his body language. Bailey groaned into his trapezius muscle before she could take her mouth away. \n\n\"One,\" she whispered in his left ear, glad that this position prevented his access to the lower part of her cheek, limiting him to the mostly untouched parts of her ass. \n\nThe moment she bit into him again, he struck. \n\nSame spot, but it's only four. \n\n\"Two,\" she spoke, muffled by the flesh in her mouth. \n\nShe bit even harder, wanting to leave a good, solid set of teeth marks in Kent's muscle. Kent groaned in pain and slapped her cheek a third time. \n\n\"Three!\" Bailey blurted out and latched back on to his neck, now sucking as hard as she could, hoping to break a few blood vessels. \n\nKent protested at the vacuum on his skin and struck her one last time, eliciting from her rear the loud, hard crack she'd wanted all along. \n\n\"Four!\" she shouted, releasing his neck at last. \n\n\"Agh!\" Kent replied as he released her. \n\nBailey shifted her head around to the left so he could rub the sore spot she'd abused on his left. His right hand remained around her waist, though, holding them tightly together as they panted in each others' ears. \n\n\"You still naked?\" he asked. \n\nThat was a fairly stupid inquiry, but that's not the real question, is it? \n\n\"Yeah. Why?\" \n\n\"What are you into, today?\" \n\nBailey smirked, knowing he couldn't see her expression, \"Something. I don't know what.\" \n\nKent moved, pushing her backward very slowly, keeping his hand on the small of her back. \n\nTo the bed, she inhaled deeply, feeling her knees weaken. He's moving me to his bed. Oh, Kent, can't you feel me shaking? I can't walk backwards like this. \n\nInstead, she grabbed on tightly to his neck and jumped up. Somehow, he read her movements in time and leaned back enough to take her weight as she wrapped her legs around him. His erection, as she landed, came to settle along her lips. ",
        "There we go. \n\nKent moved slowly towards his bed, careful not hurt himself and trip, until his knees hit the mattress. Depositing her on the bed, he pushed her on her back. \n\n\"I'm going to take a guess now,\" he said, standing between her spread legs, the sides of her calves pressed against his hips. \"But I can't see you, so I can't tell for sure what you want. You'll have to tell me if I'm right or wrong...\" \n\nWith that, he knelt down between her legs and placed his hands on her thighs, exerted a slight pressure to push them apart. \n\nOh, dear god, Kent. Are you really going to...? \n\n\"Not yet,\" she blurted out in a panic, and felt like coward the moment she said it. \n\nTake it back. Take it back. Take it back. \n\nWith a casual shrug, Kent rose to feet, blindfold still in place, and reached for her hips. \n\n\"Sorry, I'm-\" she said, feeling guilty about misleading him. \n\nI bumped myself into his nose like that. He must have thought I was hinting... \n\n\"It's alright, Bai,\" Kent's voice came through soft and warm. \"No worries. What do you want, though?\" \n\nOh, he's not upset? Bailey let her face show surprise only because Kent couldn't see her expression. Of course he's not upset. Stupid. Why would he get angry over that? \n\nShe breathed a sigh of relief. \n\n\"Just like this, okay?\" Bailey put her heels around his back and pulled him until his shaft pressed against her vulva. \n\n\"Nice,\" Kent agreed, a smile taking over the part of his face she could see. \n\nBailey had never tried this position before. She'd humped her pillow and she'd straddled both Kent and her previous boyfriends - using the lengths of their legs or their erections along her lips - but she'd never lain on her back on the edge of a bed before. \n\nI can spread my legs as far as they go, she realized. And he can't see me, so it's okay. \n\nA delicious sense of openness saturated her, sending a new, warm tingling up her spine. Bailey felt her hips loosen and started rotating herself against Kent, who moaned in appreciation and kept his grip on her waist soft. \n\nHis shorts are too rough, too dry. That works with my panties on, but not like this. \n\nAs her lips spread and softened, the feeling of the cotton fabric rubbing against her insides created too much friction. \n\n\"Your shorts,\" she whispered, and he backed off a bit. \n\nThe shorts had a fly opening on them, which she pried at with her fingers, allowing his erection to spring forth. He laid it against her again. \n\nMuch better, she watched his cock bulge against her. But he's letting me drive. Letting me come first. I guess it's too much to ask to have us both come at once. \n\nKent pushed against her, finding the right spot between her clitoris and her pubic bone. \n\n\"Right there,\" she breathed at him insistently. \"Just... right... there.\" \n\nShe knew she could count on him. Not once in her recollection had Kent ever let her down. His only sin, in regards to her, had ever been to spank her too lightly. \n\nBailey ground against him, letting the length of his shaft tickle at her clitoris while the head crushed against her pubic bone. \n\nThis is it, this is it, thississit! \n\n\"Gahhh!\" she screamed out, locking her legs around his back as her orgasm shook her inside out. \n\nHer vocal cords paralyzed after her first screech and she held on as tightly as she could to prolong her orgasm. The position they held, for whatever reason, managed to extend her orgasm into a gentle fade so she could speak again even as it finished. \n\n\"Still. Coming,\" she grunted in a panic. \"Oh. God.\" \n\nThe pulsations inside her vagina relented and Bailey tried to recapture her breath. \n\n\"Okay, okay,\" she whispered, forcing her legs to relax, easing the cramp that had set into them. \n\nKent kept a tight grip on her bony hips and she saw the way he bit his lips, holding himself in control. Every muscle she could see, from his abs up through his chest to shoulders, waited tense and ready. She slipped his erection back into his shorts so she could slide the shorts off completely, and let Kent slide back up to her again. \n\n\"You,\" Bailey said. \"Your tur-\" \n\nKent pushed against her, hitting the same spot and Bailey felt blood rush through her body. Some separate sentience took command of her spine and started moving her hips - Bailey swore she had nothing to do with the manic swivelling motion that seized her body - grinding her clitoris against his shaft once more. \n\n\"Oh, god,\" she felt tears in her eyes as unnamed emotions flooded her brain, forcing a sob from her throat, \"Aga-ain.\" \n\n============================= \n\nKent, unable to see anything, still recognized every other telltale of Bailey's orgasm. From the shivering between her legs, buried in the paralysis of her body, to the sudden inhalation of breath with an extenuated delay before any exhalation. \n\nShe finally let out a long, humming sound he took for an aborted moan. Slowly, the sound became a sigh and a gasp for breath. \n\n\"Oh, god, Kent,\" she whispered. \"Oh, god. Oh, god. Oh, god.\" \n\nA moment later, the death grip of her thighs relaxed around him and he felt her hands pulling down at his shorts, pushing them all the way to the floor. \n\nI'm naked and blind, he thought as his shorts made a pool of fabric around his ankles. All right, then. \n\nBailey had clearly abandoned all of her reserve. He'd never felt her body do what she'd just done, swivelling her hips as if her joints had all come loose from several straight days of yoga. \n\nShe pulled her legs up in the air and her urgency, transmitted from her hands to his erection, pulled him forward into the space between her thighs. Her calves rested on his shoulders and his pelvis pushed against her cheeks. \n\nShe can't take the pussy-rubbing anymore, so she's going with the hands, pointing me somewhere at her upper body. Where is she aiming me? \n\nKent didn't have time to think about that as Bailey had started pumping madly at his erection, one hand tightly holding his testicles while the other jerked hard on his shaft. \n\n\"Fuck, Bai,\" he breathed. \n\nToo bad I'm not going to be able to see this. \n\n\"Yeah,\" she whispered back. \"Come on. Come on.\" \n\nWhat kind of mess is this going to make? \n\nBlindfolded, Kent decided he had to stop caring about that, and let out a loud grunt of ecstasy as the first volley of ejaculation surged out of his loins. \n\nWhere is this going? he still wondered, but felt almost completely disconnected from the consequences of his orgasm. \n\nBailey let out a small squeak, but didn't miss a single beat of her frantic penis-pistoning. Bereft of any other indicators, Kent could only feel his orgasm, as he leaned his body weight into Bailey's long, thin thighs, concentrating all of his energy into the hip thrusts that drove his muscle spasms. \n\n\"Oh, god,\" he breathed, the contractions fading away even though Bailey continued to milk him. \n\nI'm guessing she's getting the last few drops out onto her stomach. What does she look like now? I wish I could see her. \n\nBailey had blindfolded him, though, as part of their agreement today. That made the snugly applied scarf sacrosanct, a little piece of the Sacred Deal that always lay between them. He could no more remove it than he could extract an extra spanking. Instead, Kent stood over her, panting, leaning into her thighs as the two of them recovered. \n\n\"Wow,\" Bailey said after a moment. \"What the-? Oh, okay.\" \n\nShe finally released his penis, which he assumed had reached empty some time ago. \n\n\"Can you, uh, reach your shirt?\" \n\nKent figured immediately how Bailey meant to use it, but he knew he hadn't worn a terrifically important shirt, so he didn't mind reaching over to his chair, fishing for the shirt, and handing it to her. He listened to the sound of her wiping up her flesh. A small, closed mouth, whimper issued forth at one point. \n\nDid she get some on her face? That's what it sounds like. \n\nKent stood back up under his own power, flexing his legs, and pulled his shorts back up. \n\nQuietly, Bailey got out from under him. Kent, feeling his adrenaline fading away, reached for the chair again and thumped down into it while he listened to Bailey getting herself dressed. \n\n\"Okay,\" she said, her breathing still laboured. \n\nShe undid his blindfold. \n\n\"Alright, then,\" Kent looked her over, noting that she held her bra scrunched up in her hand while her nipples showed through her t-shirt. \"One more dollar.\" \n\n\"Uh-huh,\" Bailey suppressed an exhausted shiver and twisted her lips. \"I - I need a shower. Later.\" \n\n============================= \n\n\"So what happened?\" Laura kept her voice so the other denizens of the crowded cafeteria couldn't hear them. \"You look weird.\" \n\n\"I don't know,\" Bailey rubbed her eyes in frustration. \"He was rubbing against me, right?\" \n\n\"This is after a-\" Laura looked around carefully, \"after a spanking?\" \n\n\"Yeah, after we did one dollar,\" Bailey clarified, her voice trembling slightly. \"I just laid back on the bed and he pushed it between my legs, y'know, just like we normally do.\" \n\n\"Not in?\" \n\n\"No, not in,\" Bailey rolled her eyes and held her open palms out in front of her, sliding one across the other. \"Just, along.\" \n\n\"Okay,\" Laura drawled out. \"Then?\" \n\n\"Then I came,\" Bailey said. \"Pretty hard. And I thought I'd do him, right?\" \n\n\"Seems... fair,\" Laura peered at Bailey as if she didn't see any problems so far. \n\n\"But I came again,\" Bailey stared in shock at the blank surface of the small table between them. \"I think?\" \n\n\"You think?\" Laura asked incredulously. \"How can you not be sure? Was it a really, really small one?\" \n\n\"Oh, no,\" Bailey met her friend's eyes. \"It had to have been a big one. I felt everything go crazy, and then...\" \n\n\"And then what?\" \n\nBailey's mouth opened to speak, but she just shook her head in confusion. \n\n\"I don't know,\" she said in a panic. \"Something happened. And the next thing I know, I've got his-\" \n\nShe stopped and looked around the cafeteria to make sure no one lingered behind her. \n\n\"His cock is in my hand,\" Bailey spoke low, through gritted teeth, \"And I've got semen all over me.\" \n\n\"All over?\" Laura whimpered. \n\n\"Little droplets,\" Bailey explained, waving both hands over her torso. \"Scattered everywhere. And a puddle in belly button.\" \n\n\"How everywhere?\" \n\nBailey rolled her eyes and pointed at her cheeks, \"From here all the way down.\" \n\n\"But you did it?\" Laura asked. \"Not him?\" \n\n\"He was in my hand,\" Bailey's eyebrows rose in supplication. \"It must have been me, y'know, jerking him.\" \n\n\"Wow,\" Laura intoned slowly. \"Messy.\" \n\n\"Yeah, I wiped myself up with his shirt and took a shower.\" \n\n\"Wouldn't it be all over your shirt?\" Laura straightened so quickly, she appeared to have been electrocuted. \"You didn't get it all over your new bra, did you?\" \n\nLaura, Bailey had previously realized, had a strong attachment to the transparent bra and panties on account of her part in their purchase. \n\n\"I, um, wasn't wearing a bra.\" \n\n\"Or a shirt?\" Laura leaned forward, her eyes eager. \"Were you naked for this?\" \n\nBailey nodded. \n\n\"Oh,\" Laura simpered. \"Good for you.\" \n\n\"I blindfolded him, though,\" Bailey admitted, her voice still trembling. \"To make it easier.\" \n\nLaura closed her eyes and ran her hands through her hair, updating her imagination of the scene. \n\n\"So we have a blindfolded Kent,\" she said, \"Standing over you? And he just splatters you all over with his stuff?\" \n\n\"Yeah,\" Bailey gently rocked back and forth in her chair. \n\n\"No picture, I guess?\" \n\n\"What?!\" \n\n\"I mean,\" Laura tilted her head and shrugged one shoulder. \"Would have been quite the pic.\" \n\nBailey stammered and closed her eyes, \"I - I suppose. Yeah.\" \n\n\"Are you okay, though?\" \n\n\"I guess so,\" Bailey said. \"It's just that I don't remember the actual part where I did it. Just the mess afterwards. It's so weird.\" \n\n\"Too bad I wasn't there,\" Laura said. \"I'd have been able to tell you what happened.\" \n\nBailey nodded, unable to avoid the draw of Laura's logic. \n\n\"And I could see what he looks like,\" Laura smiled giddily. \"Do you think he'd wear the blindfold again?\""
    ],
    "authorname": "xtorch",
    "tags": [
        "debt",
        "ejaculation",
        "grind",
        "messy",
        "nudity",
        "orgasm",
        "spank",
        "spanking",
        "stripping"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-20"
}