{
    "title": "There and Back Again Ch. 053-054",
    "pages": [
        "Chapter Fifty-Three: Adverse Effects \n\nTomas finally called a halt to the revelry and insisted we get moving towards Soldier's Peak. I showed Leli how to use the music app and gave her free reign to pick songs to listen to while we walked. Everyone stuck close, wanting to listen to the strange sounds coming from the speakers, and even for me it was nice to have even temporary easy access to music I'd grown up with. I hadn't realised how much I'd missed it. The day passed quickly, and enjoyably. The group were quite scandalised when they heard the lyrics to some of the songs, but I noticed Zevran watching me, expression unreadable, and I winked at him. He laughed. Alistair remained sort of pink-faced throughout most of it. \n\nDariel and Gorim asked me more questions about Earth, which I answered openly for the most part, and how I got to Ferelden, for which I had no answers. At least they seemed to believe me, though I supposed that disappearing into thin air and returning with an iPhone helped my case. I pondered whether the outrageous alternate universe theories that had been exploited in so many science fiction novels were truly that outrageous. Maybe there were hundreds, thousands of universes, and sometimes, some way, it was possible to travel between them. I mean, there was more than one origin in the game - maybe there were other universes out there where Aedan had died and a different person became the Warden. If David Gaider somehow had access to all of them, that could be why there were multiple origins... \n\nI was interrupted in my musing when the music stopped; Leliana jumped, though managed not to drop the phone, and handed it over to me quickly in fear that she'd broken it. I realised the battery was dead - we'd been walking, listening to music, for probably eight hours. After all the video taking in the morning, I wasn't surprised. I plugged the thing into one of my two chargers and slipped it back into my pocket. It occurred to me to look into solar chargers when I went back to Earth next. Tomas wanted to walk about another hour before setting up camp; Bodahn, miraculously as usual, knew the location of yet another hot spring along our path, so we decided to push through until we could make it. \n\nAfter supper, we took turns as usual using the hotspring. The guys had won the right to go first (teaching them rock-paper-scissors had been hilarious), so when they were done, the women wandered down and spent a good half hour relaxing. I had been managing to ignore it, most of the time, but I ached after a full day of walking. When the rest of the women went back to camp, I decided to stay and soak a little longer. \n\nThe water was heavenly, and it only got better when Alistair quietly slipped in beside me. We soaked and cuddled together for a while, until he became impatient and pushed me up onto the bank. He took his time exploring my body, and when he finally took me, I was so over-stimulated that I was sure they could hear my shout all the way to Denerim. \n\nWe cleaned up, again, and finally headed back to camp. Almost everyone had gone to their tents already, but Zev and Shale were talking together quietly when we approached. Zev spent a few minutes teasing us about our vocal performance; Shale was totally disgusted, which I'm sure was why he did it. Blushing, Alistair and I ducked into our tent and promptly fell asleep. \n\nIn the morning, I tucked the Iron Man figurine into Alistair's bedroll. I'd realised I had forgotten to give it to him, and I wanted to do it when we had time to talk, so bedtime seemed to make sense. At breakfast, I decided to show everyone the videos I'd made of the computer game. I sat in the middle, with everyone taking turns crowding around me, as I showed my character talking to one after the other of my companions. Everyone was completely amazed at seeing themselves on the little screen and hearing their own voices come out of the speakers. It was fun to watch. The ones I didn't have video of - Dariel, Gorim, and Aedan, for obvious reasons - just laughed with me at the looks on everyone else's face. \n\nWe got packed up, but as we walked my phone got passed around from one to the next as they watched the little video. Finally after watching it for about the third time, Aedan approached me, where I walked hand-in-hand with Alistair, chatting with Tomas. \n\n\"So...why exactly don't you have a picture of me? And who is this woman who's talking to everyone?\" \n\nI glanced over at where he was pointing and froze. Oh crap. I had taken the video of my Cousland interacting with everyone. My female Cousland. I had never planned on explaining the multiple origins in game. I'd never planned to admit it was a game. It was hard to explain, and I worried about the reaction if they learned that people on Earth thought of their lives as a game. I took a deep breath, mind racing, and Alistair leaned down to speak quietly. \n\n\"Are you okay? You're looking rather pale.\" \n\nI stuttered and finally tried to explain. \n\n\"I...in the performance, I think to try to expand their audience, they allowed the person viewing it to...choose the appearance of the character they were inhabiting.\" \n\n\"Why would that expand their audience?\" Leliana had joined us, bringing Morrigan with her. \n\n\"Well, I suspect that, for example, women who were watching would feel more comfortable if they were looking through the eyes of a woman, instead of through Aedan's.\" \n\nThere was a stunned silence, and I looked down, afraid to see everyone's reactions. Aedan barked out a laugh. \"So that woman...is supposed to be me?\" \n\nI looked up, noting Zevran's amused grin and Aedan's incredulous stare. \"Uh, yeah, well, sort of. I suppose.\" I took another breath. Busted; I might as well tell them everything now, before I get caught in a half-truth again. \"But you could actually choose to be an elf, or a dwarf, or a mage too. The overall story didn't change, but the first few minutes you were somewhere other than Highever. The theory went that Dun...Tomas could have gone anywhere looking for a recruit, not just Highever. He could have gone to the Circle Tower and chosen Solona or an elven mage, to Orzammar and chosen Sereda or another dwarf, to the Brecilian Forest and picked a Dalish elf, or to Denerim and gotten an elf from the Alienage. And any of those options could have been male or female.\" \n\nI finally got the reaction I'd been expecting. Aedan started shouting. \"What sort of sick performance was this? So in some of these, what - I didn't survive? I died in Highever with my parents?\" \n\n\"I don't...know. Probably. They never gave any details about any of the other origins once you'd chosen one. There were hints - you'd see a dead dwarf in a Carta dungeon in Orzammar, and if you'd ever tried being a dwarf you'd know that that was where one of the origins died, since Tomas hadn't been there to rescue him - that sort of thing. But if you were an elf, for example, they just never mentioned the Couslands in detail. They showed Howe gloating over being Teyrn, but didn't explain exactly why.\" \n\nI tried to explain my multiple alternate universe theory, where perhaps somehow David Gaider could see into many alternate realities, and not just this one, but also one where an elf or dwarf was chosen as the Warden recruit. Aedan's face was red, angry, and I wasn't surprised when he growled and stormed off. Zev gave me a sympathetic look and then hurried off to follow him; Tomas stopped walking, looking around, and finally sighed and sat down, right in the middle of the road. \n\n\"We might as well have lunch here.\" \n\nEveryone else settled nearby and pulled out rations; Bodahn and Sandal kept going in the cart, knowing we could easily catch up. Leliana tried to force out a conversation to cover the awkward silence, but everyone was too deep in thought to easily keep it up. Alistair hadn't said a word since I'd explained, and barely ate; I watched him, concerned, but he didn't even seem to notice me staring. \n\nAfter maybe a half hour had passed, Aedan reappeared with Zev in tow. He didn't look at me, just growled out a demand for the group to get moving. He deliberately started walking at a quick pace, ahead of everyone else. I snuck a glance at Zev, and he shook his head slightly, obviously not thinking I should try to discuss it with Aedan yet. Before I had a chance to think much more about it, Alistair brushed past me and joined Aedan, and the two men walked silently together, Zevran trailing behind. I stared at Alistair's back in shock - never had he been less than courteous to me, even before we'd been in a relationship. I didn't know what to think. \n\nMorrigan had changed into bird form and taken off, Sten and Shale were already following Aedan, and Wynne followed them with Dariel. Leliana, Gorim, and Tomas were left, looking from me to Aedan and Alistair and back again, expressions worried. Mine must have looked miserable; Leliana took one of my hands, Duncan put his hand on my shoulder, and we followed at the back. \n\nI was upset, torn between feeling guilty and confused. Maybe I should have told them the whole story to begin with, but what could have happened in an alternate universe shouldn't have mattered. This was the universe we had to deal with, and we couldn't go back even if we wanted to, so why did it matter? \n\nI hadn't noticed who'd ended up with my iPhone, and I didn't particularly care at that moment. I walked sadly, head down, barely even paying attention to the road, while Leliana pulled me on by the hand. No one spoke; the usual amusing party banter was conspicuously absent, and the quiet was unnerving. Clearly neither Tomas nor Leli were angry with me, and I wasn't even certain that everyone else had heard, but I wasn't sure what would happen with Aedan, and apparently Alistair was also upset, for some reason he'd yet to explain. Just what we need: drama. \n\nIt seemed the few days of happiness I'd had were too good to last. \n\nI decided, after another hour of feeling sorry for myself, that I was going to try to tackle what was happening head on. This was my family, and they had to forgive me eventually, didn't they? I squeezed Leliana's hand, raised my chin, and sped up slightly to catch up with Aedan and Alistair. I heard steps behind me, and realised that Tomas and Leliana were coming too, and it steeled my resolve. \n\nZevran halted me before I could catch them. \"So, bella donna, now I know why you could not predict relationships, yes? Too many variables.\" \n\nI heard Alistair snort ahead of me, and I flinched at the bitterness I could hear in the sound. \"Sort of. I mean, I can't see you discriminating against an elf or a dwarf, or a woman for that matter, so if Aedan had the same temperament, you'd still be willing to be with him, wouldn't you? Would his height or his plumbing really matter?\" \n\n\"Plumbing?\" \n\n\"Uh...slang for, uh, parts. You know, genitals.\" \n\nHe looked thoughtful, and I watched his gaze switch back to Aedan before a little smirk appeared. \n\nI laughed. \"Right, well, I know what you'll be fantasizing about later.\" \n\nHe laughed, and I saw Aedan's shoulders twitch in what I took to be amusement. Zev reached out and patted me on the shoulder, then pushed me gently towards Aedan and Alistair who were a handful of steps ahead of us. \n\nI stepped in between the two men, reaching up automatically to take Alistair's hand. He grasped it for a moment, and then to my complete shock, dropped it like a hot potato. I stumbled slightly, but caught myself before I fell. I cleared my throat, and my voice cracked as I spoke. \n\n\"So, you're angry with me for not telling you. Can we talk about it?\" \n\nAedan sighed. \"I'm not angry. I'm sorry for stomping off. It's just rather disconcerting to find out that it was only an accident, a trick of fate, that I exist. What if you'd ended up in one of those other - what did you call them? Alternate universes? I'd just be dead.\" \n\n\"And I wouldn't have a brother. But I didn't end up somewhere else. I ended up here. And it didn't seem important to explain the possibilities of what might have been, once I was already here. It was confusing enough trying to explain who I was and where I came from. I wasn't keeping anything from you maliciously.\" \n\nHe finally looked down at me and smiled. \"I know. I'm not angry.\" He stopped and hugged me to him, and I returned the embrace enthusiastically. \"Is there anything else you didn't tell me?\" \n\nI bit my lip and thought about it. \"I...not on purpose. Um. Well, I suppose one thing is the alternatives to making Alistair king after Cailan's death.\" \n\n\"Oh?\" \n\n\"Yeah, well, if he didn't want to be, and you chose not to force him, one option would have been for you to marry Anora and become King-Consort.\" \n\nHe choked and laughed at the same time, a frightening sounding gurgle the only sound that escaped. I worried I'd have to give him the Heimlich or something, but he started to cough and finally caught his breath. \n\n\"Maker's Breath! That would have been terrible! What a nasty thing to do to a fellow. You might not know it, but I've met the Ice Queen. No thank you!\" \n\nI giggled, and we started walking again. \"But you would be so cute together!\" \n\nHe squawked and grabbed me around the shoulder with one arm, messing up my hair with the other hand. \"You take that back!\" \n\nWe laughed a bit more, but as I looked forward, my heart sank. When Aedan had slowed to embrace me, Alistair had kept walking, and was now a dozen steps ahead of me again. My shoulders slumped. I looked over at Aedan, and when he saw where I'd been focused, he shook his head and shrugged slightly. Well, at least I'm not the only one in the dark. \n\nTaking another deep breath, I squared my shoulders and hurried forward once again. I purposefully avoided reaching for his hand, though it left an ache in my chest to do that. \n\n\"Alistair?\" \n\nHe didn't say anything, didn't look at me; didn't respond in any way. \n\n\"Please? Tell me what's wrong.\" My voice was pleading. \n\nHe looked down at me, for the briefest of moments, and I couldn't read the look in his eyes, but it wasn't good. He finally held out one hand, and I saw he held my iPhone. I took it, tucking it into my pack absently. \n\n\"So in this...performance. Wait, what is it called, anyway? I never thought to ask.\" \n\n\"Dragon Age.\" \n\nHe looked confused. \"No, I mean...you talked earlier about photographs and moves and things. Is there a name for this type of entertainment?\" \n\n\"Moves? Oh, movies. Never mind. Um, yeah, they call it a-\" I gulped, trying to decide, but again decided I should just come clean rather than have another dramatic reveal later and have him angry at me again, \"video game.\" I sighed, knowing what he was going to say next. \n\n\"A game? How lovely for them, for you, to make a game out of our lives.\" \n\n\"Alistair, I-\" \n\nHe cut me off. \"It doesn't matter. In this game, then, you - the other Grey Warden - could be a variety of different people.\" \n\n\"Yes.\" \n\n\"And those people...had relationships?\" \n\n\"Some of them. You could try, at least. If I made decisions that a companion agreed with, then they would like me more, and then if they liked me enough and I flirted with them...\" \n\n\"So, if you were a woman, you could have a relationship with who? Zevran?\" \n\n\"Yes.\" \n\n\"Leliana?\" \n\n\"Yes.\" \n\n\"Morrigan? Sten? Shale?\" \n\n\"No! Maker, no.\" \n\nHis next word was so quiet I'd have missed it if I hadn't been expecting it, by then. \"Me?\" \n\nI replied equally quietly. \"Yes.\" \n\n\"That's how you knew so many details. About me. Who I was, what I was. A templar. A virgin. A confused, childish idiot with - what did you call them? Daddy issues. A fool. I wondered how Aedan would have known so many details, but didn't think about it too hard. Now I know - I'd have told you if we were in a relationship.\" \n\n\"No! Well, yes, I knew things about you, but I've never thought you were a fool, Alistair. And you have far fewer daddy issues than I think you have a right to. And you really would have told Aedan all the stuff you told me, if he'd asked.\" \n\n\"But you knew everything. You knew what to say to make me like you.\" \n\n\"I-\" \n\nHe cut me off again. \"Right.\" He ran his gauntleted hand through his short hair irritably. \"Look, I just...I don't want to talk right now. I'm going to go walk by myself. Just...just leave me alone, for a while, okay?\" \n\nBefore I could respond, he jogged forward, putting enough distance between us that I would have to yell for him to hear me. I let my breath out in a shaky sigh, shoulders slumping again. I felt a presence at my side, and looked over to see Tomas smiling sadly at me. I looked away; if I saw any pity in his eyes, I was going to break down and cry, and I still wasn't entirely sure why. \n\n\"Are you alright?\" \n\n\"No. I don't know. You don't seem surprised by any of this.\" \n\n\"I'm not, entirely.\" \n\nI risked a glance, and the sad smile had turned into a wry one. \"You knew? You did! How did you know?\" \n\n\"I didn't, exactly, but...I knew something. You had to ask the name of the 'new Grey Warden' when we first met. So obviously there was more than one possibility as to who it could have been. And you were very careful to avoid gender pronouns. Besides, when you told me what you knew about Alistair, I figured that if you'd only ever seen his friendly side, you might not be so...enthusiastic. And since I know he is only interested in women...\" \n\n\"You figured I must have gotten to know him as a woman.\" \n\nHe nodded. \"The details didn't really matter, because we had to go forward with the situation as it was, not as it might have been. But I had considered going places other than Highever when I was recruiting. Had I had time, I would have gone to all of the places you mentioned, and even a few you didn't. But as it turned out, the horde wouldn't wait. Cailan wouldn't wait. So I was going to recruit Ser Gilmore and head to Ostagar, but then...well, you know.\" \n\n\"I'm sorry. I suppose I should have told you.\" \n\n\"It might have been a good idea, yes. However, you were right - it doesn't matter what might have been. Aedan could have been someone else, but he wasn't. I'm not unhappy at the way it turned out.\" \n\nAedan cleared his throat behind me. \"Neither am I.\" He reached forward and took my hand, and I clung to it a little harder than I would have liked. \n\nI shot a glance at Alistair's back. \"Do you think he will forgive me?\" \n\n\"I'm not even sure what he's upset about, actually.\" \n\n\"Me either. It seems to be something to do with the fact that I had foreknowledge of his preferences. I'm not entirely clear why that would matter, but... Well, anyway, he asked to be left alone.\" \n\nDuncan put his hand on my shoulder and squeezed. \"Give him some time. He'll come around.\" \n\nChapter Fifty-Four: About Face \n\nThe rest of the afternoon was a nightmare. Somehow, the blow to my happiness had also been a blow to my stamina, and I felt bone tired despite adequate rest. I kept up with the group, but it wasn't an easy thing. I didn't talk, didn't look around, just put everything I had into putting one foot in front of the other. Tomas, Leli, Aedan, and even Morrigan had tried to bring me out of my shell, but I just didn't have the energy to respond. I stowed my gear on Bodahn's cart; usually I carried it, trying to build up my strength, but it just wasn't worth it. \n\nLeliana had borrowed my phone again, and was listening to music; every sad song that played brought tears to my eyes, and given how lonely I'd been before coming to Thedas, I had a lot of sad songs on my playlist. \n\nWhen it was time to make camp, instead of setting up our tent as usual, Alistair approached me, expression unreadable, and asked to talk to me. We went off a little ways, close enough to hear shouting in case we got into trouble, but far enough to have a bit of privacy. I sat on a fallen log, worrying; Alistair paced in front of me, which I didn't see as a good sign. I waited for him to start, but as time passed and he just kept pacing, I finally got antsy. ",
        "\"Love? Please sit down and talk to me. Please.\" \n\nHe flinched, and stopped pacing, but he didn't sit. Finally he spoke. \n\n\"You knew what it would take to make me like you.\" \n\n\"I don't understand, Alistair. What does that mean? I knew that you were a good person with a strong moral compass and that you wouldn't agree with doing things that were evil...what does that have to do with anything? I haven't even been the one making the decisions. I don't know what you're getting at.\" \n\nHe knelt down in from of me, putting us at the same eye-level, his movements jerky and almost violent. I was startled, briefly, but then immediately felt silly. This was Alistair. He'd never hurt me. \n\n\"In the game, if the Warden was male, who did I have a relationship with?\" \n\n\"What? No one. It didn't show you with anyone, unless I forced you to marry Anora. Not even months after the blight ended.\" \n\n\"And just how am I supposed to know that?\" \n\n\"I don't even know how to take that. I'd normally say 'trust me', but I'm guessing that's what this is all about.\" \n\n\"How am I supposed to trust you? You knew what would work on me, get me to want to be with you. You manipulated my feelings. Said the right things at the right time to ensure I was interested in you. Who was I supposed to be with? Who was I supposed to fall in love with? You changed things when you came here. How do I believe that one of those things wasn't making me love you?\" \n\nI was utterly and completely shocked. I couldn't even speak. My mouth opened and closed a number of times like a fish while I scrambled to figure out how to use my voice again, never mind actually figure out what I was going to say. He thought I used my knowledge from a previous - fake - relationship to ensure he'd fall for me. I hoped he was joking, but one look at his scowling face and I knew he wasn't. \n\nI tried to be reasonable. He's shocked, he's upset...he doesn't know what he's saying. I hope. \"Alistair, why would I do that?\" I reached up to touch his handsome face, and he pulled away with a sneer. I couldn't keep the hurt out of my voice. \"You're right in that I wanted you to love me, but it was because I loved you. What possible ulterior motive could I have? I don't understand.\" \n\n\"I don't know. I just don't. Maybe you just wanted to not be alone. Maybe you thought I'd be a good protector. Maybe you thought I was gullible enough not to question it, and there's something else you're looking for. You said yourself that I'm heir to the throne, now. Who knows what you might be after?\" \n\n\"What? Think, man! If I was only with you to get access to the monarch of Ferelden, why would I have saved Cailan? And if I did, why wouldn't I just have taken him up on his offer? He'd have made me his mistress, and if I'm as good a manipulator as that, I could have become his wife, don't you think? Especially with all I know about Anora. And I don't need a protector, thank you. I think I can manage quite fine on my own - you're the one everyone is trying to kill. If I stayed away from you, I wouldn't be in any danger. And if I did need protecting, I have a brother who is more than willing to oblige. I tried to avoid you - Maker knows I tried - would I have done that if I was trying to get close to you?\" \n\n\"Playing hard to get, maybe? A strategy you knew would work from your Maker-forsaken game?\" \n\nMy voice cracked in despair. \"Do you really think me capable of that? Of violating your trust, abusing your affection for some sick personal gain? Am I really such a monster?\" \n\nHe stood, turning away from me. \"I don't know. Are you?\" He looked back for one moment, and the disgust written all over his face was agonising. The expression burned itself into my brain, and I sobbed, once, in abject misery. \n\nHe walked away, and I felt my heart rip to pieces as I watched him go. Did he ever really love me? Someone who loved me wouldn't believe me capable of that, would they? \n\nI broke down sobbing, dropping my face into my hands. When I thought of the way he looked at me, the way he avoided my touch...I realised that whatever I thought I'd had, I was mistaken. I'd given my heart, my soul, and my body to him, and he just walked away. I felt violated, dirty. Even though I was sure I hadn't done anything wrong, I was ashamed. I spent a few minutes thinking back over our interactions since the time we'd met, trying to decide if I'd ever used game knowledge to manipulate him. I had used some of the lines from the game, but they were the ones that resonated most strongly with me, it hadn't been calculated. Half of them had been his, because I loved his sense of humour. \n\nI'd tried so hard to stay away from him. I hadn't hoped for the future, hadn't even considered it, until he showed me what might have been, and then ripped it away. I'd never missed hope, because I hadn't known I was missing it; now it left a gaping void in my soul. I'd heard the term 'sucking chest wound' before, back on Earth; I had no idea what it meant, really, but the description matched the pain in my chest as I sat there, sobbing, watching all of the sandcastles I'd built out of hope crumble. \n\nI cried myself out, until my throat was raw and my sleeves soaked with tears. Finally I leaned back, trying to draw a deeper breath through my ragged lungs, attempting to pull myself back together. Regardless of what happened with Alistair and me, we had to work together to end the blight. I wasn't going to leave my brother, or doom Ferelden out of spite; I had to manage this until the Archdemon was dead. And then I could give my notes on the events of Awakenings and DA2 to whoever survived, and go away. Find somewhere to hide, and live out the rest of my life. Aedan would help me, I was sure, or perhaps I could go with Leliana and travel. \n\nI started to rationalise it to myself. This was probably better. Wynne wasn't wrong in thinking love was a distraction. And I'd been right when I thought that Alistair would need a noblewoman to try to have babies with, as heir to the throne. He couldn't be tied to some crazy non-Fereldan. We'd both been fooling ourselves to think that we ever had a chance. It was better that we came to terms with that now, and avoided any future problems. \n\nThe thought didn't stop the trickle of tears from resuming. \"This is better,\" I muttered to myself under my breath. If I said it enough, maybe I would believe it, eventually. \n\nI heard a rustling, and I jumped up, alarmed, as I saw a flash of grey fur through the trees. I unsheathed my daggers and was about to scream for help when an enormous grey wolf with amber eyes approached me. I sighed in relief and flopped back down onto the log. \n\n\"Hello, Morrigan.\" \n\nAnother rustle, and in place of the wolf was the beautiful witch. She smiled at me, but instead of the smirk I expected, it was surprisingly sympathetic. \n\n\"Hello, Sierra.\" She sat down nearby, watching my face curiously. \n\nI wiped away the tears making tracks on my cheeks. \"I suppose you heard all of that, then?\" She nodded, wincing. \"Wonderful. Listen, if you could not tell everyone all the details, I'd be grateful. We need to still be able to work together, and I don't think that will be possible if Aedan kills him.\" \n\n\"I will not tell anyone, Sierra. I knew he was an imbecile, but I never dreamed he would do something this stupid.\" \n\nI looked down. \"It's better this way. I realise that now.\" \n\nHer tone was puzzled. \"Better for who? For you, who is sitting there with your bleeding heart on display? For him, who has just walked away from the only good thing he ever had? I am not exactly a romantic, but even I could see how much you needed each other. For what it is worth, I am truly sorry, my friend.\" \n\nI sighed. \"Thanks. Listen, I think I might like to be alone for a while. Would you do me a favour, and make sure Aedan and everyone stays away? Tell them not to wait up for me. I just need to think.\" \n\n\"As you wish.\" She stood, brushing off her skirt and taking a couple of steps. \"If you wish to talk, I will be nearby.\" \n\n\"Thanks, Morrigan.\" \n\nShe shifted into the wolf again, giving me a mournful look before loping off into the woods. I sat, alone, trying not to think, letting the tears come, and mourning my happy ending. I stayed there until it was dark, finally heading back to camp because I was cold. I'd taken off the rose pendant Alistair had given me, playing with it absentmindedly; I resolved to give it back to him. Perhaps he could sell it, get his money back. I held it in my palm, the chain curled around the silver shape, and entered camp. Everyone had gone to bed, it seemed; Shale was on the far side, ever watchful, and she nodded at me, but no one else was out. \n\nAnd then I saw it. The tent. Our tent. Only it wasn't; Alistair had left the pile of enchanted canvas where it must have fallen when it was taken off Bodahn's cart, and with some spare canvas, had instead erected a small, single-person tent a ways away from everyone else. I could tell it was his - the way he put up a tent, his always canted towards the door a little. He hadn't done me the courtesy of putting up a tent for me, and no one else had apparently noticed. I had nowhere to sleep. It hadn't even occurred to me, with everything else I'd been thinking about, to wonder what the sleeping arrangements would be. I'd known it was over between us, but that small tent, to make it obvious I wasn't welcome, was like a knife in the gut. \n\nI tried to stifle it, but knew a small cry escaped from my lips. I took one step towards the canvas I could use to make my own tent, but my knees gave out and I sank down by the fire. I heard a fluttering and saw Morrigan land in front of me, shifting from bird form as she did, and she knelt down in front of me. I reached out to hand her the necklace I carried, hoping she would understand what to do with it; I couldn't explain it, as the world started spinning and I finally passed out. \n\n********* \n\nI woke with a start; someone was stroking my cheek, wiping away my tears. I opened one eye with a groan to find myself in hospital, a young nurse sitting beside me and trying to wash my face. She jumped a little when I moved, but then smiled at me. \n\n\"I didn't expect you to wake up. I was just about to bathe you, but there were tears streaming down your face and I didn't know what to do.\" \n\nI sat up and rubbed at my cheeks irritably, brushing away the drops of moisture. I was covered with towels to protect my modesty, but little else; fortunately the curtains around my bed had been closed. \"Sorry.\" \n\nI tried to say more, but my emotions overwhelmed me and I broke out sobbing again. I pulled my legs up, putting my face on my knees, and bawled. Shocked, the nurse sat beside me and awkwardly patted my shoulder, probably assuming I'd lost my mind. I was cold, overwrought, and exhausted. I was finally too tired to cry, and completely embarrassed about losing it in front of this complete stranger. \n\n\"Would you like to talk about it?\" \n\n\"No. Really, really not.\" \n\nI looked around and saw basins of soapy water, cloths, and towels, and sighed. \n\n\"If you find me a gown and point me at a shower, I'll save you the trouble.\" I gestured vaguely at the washcloth she held. \n\n\"Sounds good. Be right back.\" \n\nShe hurried off to find me a gown, and I got up and found my bag of toiletries. When she returned, I wrapped the gown around myself, holding the back shut with one hand, and followed her to the shower. The hot water beating down on me felt good, and I sat in there for a good hour, thankful for the hospital-sized hot water tank. \n\nI found clean clothes waiting for me when I got out, and dressed quickly. I wondered who'd been doing my laundry. When I asked, the nurse told me that my guardian had arranged twice-monthly laundry services once she'd heard that I was insistent on being dressed in clothes, not hospital gowns. I smiled; I hadn't liked the woman, but she at least took her job seriously. I went back to my room, laid down fully dressed, and fell asleep. \n\nI dreamt about death and destruction, about dragons and demons, but most of all I had nightmares about the look of disgust Alistair had given me when I tried to touch him. I was shaken awake by another nurse; apparently I'd been crying, noisily, in my sleep. It was late - I'd apparently slept away most of a day - and I knew I wouldn't fall back asleep after those nightmares. I rubbed at my eyes, gritty from too much crying, and then sighed. The nurse asked if I wanted to talk about it, and I declined again. Just what I need - spill my guts to a nurse about Thedas, and next time wake up in the psych ward. \n\nI asked if there was somewhere I could go and just sit, somewhere private; she told me about a solarium at the end of the hall that was likely empty at that time of night. It turned out to indeed be empty, and actually had a fairly nice view of downtown. I looked up, and it was strange; I had grown up in the city, rarely seeing more than a handful of stars, but even though the constellations were different, I missed starlight. I missed lying around a campfire with my brother, cuddling with the man I loved, watching the skies. \n\nI shook myself and looked away; it was unlikely I'd be cuddling with anyone any time soon. Especially not the man I loved. And I did still love him; it was too soon for my feelings to have changed, but the more I thought about it the more I was convinced that he had never really known me. He loved the idea of me, but had he actually loved me he would never have believed I was capable of the kind of cold-hearted manipulation he'd accused me of. I wondered if he'd told the group what had happened, or if Morrigan had; I may have loved him still, but I had to admit to a certain degree of satisfaction at the thought of my brother punching him in the nose. \n\nI sat on a faded green vinyl couch and brooded. I wondered how Alistair and I would be able to move forward. He was a Grey Warden, so he couldn't very well leave, and it seemed I was going to be dragged back to the group again and again, so I couldn't escape either. Although I hadn't been back on Earth this often in months; I hoped it didn't indicate that I was stuck here. As angry as I was, as hurt as I was, I wanted to be back with my brother and my friends. I needed them to get me through this.  \n\nI cried a few more tears, and finally fell asleep on the ugly industrial couch. I woke in the same place a few hours later with a terrible headache and a sore back, and I limped to my room in agony. The nurse from the previous day saw me, and followed me into my room. \n\n\"Are you alright?\" \n\nI winced as I sat down on the bed. \"Headache.\" \n\n\"Want something? I can ask the doctor to let me give you some advil.\" \n\n\"That would be amazing.\" I was annoyed at the absence of health poultices and healing magic. For such a technologically advanced world, the Earth didn't hold a candle to Thedas for taking care of someone's health. Assuming you knew people who knew how to make poultices, of course. \n\nShe bustled back in a few minutes later with two advil and a glass of water; I tossed back the pills with a few swallows of water and laid back to await relief. She told me the doctor would be in soon. \n\nShe was right, and half an hour later, headache-free but still red-eyed, I sat up as he walked in. \n\n\"I haven't seen you awake this often in ages.\" \n\n\"I was thinking the same thing. It would seem...emotional upset triggers me to come back.\" \n\n\"Oh?\" His expression was kind; he'd not locked me up yet. I took a deep breath. \n\n\"Yeah, well, my dream-boyfriend just dumped me, so...\" \n\n\"Oh, Sierra, I'm sorry.\" \n\n\"Me too.\" \n\n\"Does that mean I should expect you back here more often?\" \n\n\"Maker, I hope not!\" I noticed his puzzled expression and thought about what I'd said. \"Ha. I finally start using local jargon just in time for it to be out of place again.\" \n\n\"You don't want to be back here?\" He still seemed confused that I preferred my 'dream' world. \n\nI couldn't really explain it any better than I already had. \"I think my life is there now. I have a brother, friends, a purpose. Boyfriend or not, it's still better than being here.\" \n\nHe shook his head. \"I can't say I understand even in the slightest, but I suppose if it makes you happy...\" \n\n\"Thanks, doc.\" \n\n\"I'll check in on you tomorrow, if you're still here with us.\" \n\n\"Sounds like a plan.\" \n\nThe next two days were possibly the most boring days of my life. Other than mourning my lost relationship, I had nothing to do. I didn't even have my phone to listen to music; apparently it stayed in Thedas with Leli. I wondered if she'd figured out how to charge it yet. I bought another device charger - the gift store had restocked, but only had one - just in case. I asked about ordering a solar-powered charger, and they said they'd look into it. I cried a lot, but without anyone to talk to about it, I didn't make any headway dealing with my grief. I tried reading, but the books at the hospital just didn't have the same appeal as living my own crazy adventure. I thought about booting up the game, but I couldn't bring myself to see even a digital rendering of Alistair. I watched television in the waiting room, but it was just irritating. I finally settled for walking the halls, hoping at least to keep up my stamina. I knew a few days of inactivity would make it harder when I returned. \n\nI had just started to despair that I wouldn't ever be able to return, when I got dizzy. I snagged a passing nurse, blurting out my hospital room number, before sinking down and passing out."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-53-54"
}