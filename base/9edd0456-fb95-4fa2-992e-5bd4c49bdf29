{
    "title": "A Neighborly Bet Ch. 05",
    "pages": [
        "There are quite a few stories that I have written, both stand-alone and series, that I had intended to let end as they stand. However, due to a semi-steady stream of requests to continue the stories, coupled with the fact that I am currently having a case of writer's block on the series that I am working on now, I have decided to go back and continue some of my previous works.\n\n Since I have been getting most of the comments and requests about the \"A Neighborly Bet\" series, I have decided to start here, following a storyline that many had suggested, but I had never intended to go down. Hopefully, I did well by those requests. \n\n As always, I hope you enjoy, and constructive feedback is always welcome.\n\n *****\n\n In the following months after our hotel visit, Christi and Joe's marriage slowly deteriorated until Christi finally reached the breaking point over the summer, just after the neighborhood 4 of July party. \n\n When their son turned 18, Joe started taking him with on his \"fishing\" trips. As soon as I heard that, and knowing the cast of characters, I knew that things were going to blow up in Joe's, and his son's, face. Sure enough, by mid-summer Christi knew all about what really went on during Joe's trips. \n\n Not only did Joe start including his son in the sexual escapades that went on, but Joe's girlfriend wound up getting pregnant and had no idea which of the four men was the father. Christi was so pissed off that she threw both of them out of the house that day.\n\n The next day, when Christi called me and told me what had happened, I immediately gave her the name and number of my lawyer. I also told her that it would probably be wise if we started being more discreet, just in case Joe hired a P.I. and he started following us. I even went and \"borrowed\" an extra company phone for her to use so we could call and text each other until it was over. All of that put a huge crimp in our relationship, but we did what we could, just not nearly as often.\n\n After the preliminary hearing in front of a judge, we knew that we didn't have to worry about Joe doing anything to hurt Christi. She revealed to the judge, a woman, that after they separated Joe had been calling her at all hours threatening and harassing her. (When I asked her about it later, she told me that she didn't tell me about it because she was afraid of what I would do to Joe. That was probably a wise decision.)\n\n Hearing this, Christi said that the judge went on a five-minute rant at Joe, wrapping it up by forbidding Joe, or any \"agent\" of Joe's, from any sort of contact with Christi, including, to both of our surprises, \"any sort of recording of.\" No pictures or phone recordings.\n\n To celebrate her new found freedom, Christi told me that she wanted to go out. I asked her if she wanted me to make dinner reservations, and she told me that she wanted to go out partying for a night. When I asked her what she had in mind, she said that Britt had been talking about a Halloween party in a couple of weeks at a new club that had just opened up.\n\n \"She said that this club is a lot of fun, and that we would have a really good time at their party,\" Christi told me. \"We should go with her.\"\n\n Britt and I had been getting along a lot better lately, even to the point that she would flirt with me in front of her mother, as \"a joke.\" From the look in her eyes, I knew that she wasn't always joking.\n\n \"What kind of costumes do you have in mind?\" I asked her, skeptical about going to a costume party.\n\n \"I don't know,\" she replied. \"We can talk about it later, when all three of us are together.\"\n\n The next night, as Christi, Britt, and I were relaxing in her yard with a bottle of wine, Christi brought up the Halloween party.\n\n \"Britt said that she already decided that she was going as a naughty schoolgirl,\" Christi said. \"So I want to come up with something to go with hers.\"\n\n \"Do you want to go as a schoolgirl too?\" I asked her.\n\n \"No,\" she replied. \"That would be weird, dressing the same as Britt. I was thinking maybe going as a cheerleader.\"\n\n I sat there and smiled for a second before Christi asked me why I was smiling. \"I'm just thinking,\" I told her as I sipped on my wine. \"You, dressed as a cheerleader, and Britt, dressed as a naughty schoolgirl ... I could be in for an interesting night.\"\n\n They both laughed, and a couple of minutes later Britt went inside to use the washroom. As soon as she was inside, Christi leaned towards me and spoke softly.\n\n \"One reason that I want to go to this party is because I want to keep an eye on Britt,\" she said. \"She was supposed to go to this party with some guy that she has the hots for, and he just backed out. She was going to go as a slutty schoolgirl, but had to change her costume\"\n\n \"I know her. She's feeling down, so she's probably going to get drunk and try to get laid,\" she added.\n\n \"What's the difference between a slutty school girl and a naughty schoolgirl?\" I asked.\n\n \"Bra and panties,\" she answered giggling.\n\n \"Oooook ...\" I replied, not knowing what else to say.\n\n \"So, what's your plan?\" I asked her. \"You want to chaperone her?\"\n\n \"No,\" she replied. \"Just keep an eye on her. I just want to make sure that she doesn't get herself into any trouble.\"\n\n Thinking to myself that was exactly the description of a chaperone, I told Christi that if she wanted to go to the Halloween party, I could throw together a coach's costume and we could go with Britt. \n\n \"That would be perfect!\" she exclaimed. \"A coach, a cheerleader, and a naughty schoolgirl! Perfect!\"\n\n \"Hmmmm,\" she said a couple of seconds later. \"I'll be a naughty cheerleader!\"\n\n \"Naughty, not slutty?\" I asked her, teasing.\n\n \"Maybe! You never know!\" she replied with a smile.\n\n Christi and I didn't see much of each other over the next couple of weeks due to our conflicting schedules, but she told me that she and Britt were all set with their costumes, and they couldn't wait to show me. \"Britt wants your opinion on her costume, as a man, before we leave,\" she said.\n\n \"Ummm, ok,\" I replied, wondering why my opinion was so important to her. Her mother could tell her more than I could. \n\n The party was Saturday night, so after I grilled up a nice meal for us to soak up the alcohol, the girls went back into their house to get changed while I did the same. Christi told me that when I was ready, I should just come over and let myself in.\n\n My coach's costume consisted of a pair of shorts, tube socks and running shoes, a t-shirt, whistle, sunglasses and baseball hat. It took me all of twenty minutes to shower and get dressed. After locking up my house, I went over to Christi's and walked in her back door. I quickly locked up the back of her house and as I walked towards the front of the house I started hearing voices upstairs.\n\n I started walking up the stairs towards the bedrooms and it was easier to hear what they were saying. It sounded like Christi was in her room while Britt was in the bathroom at the top of the stairs. The first thing that I heard froze me in my steps.\n\n \"I understand that you're upset and you're horny, Britt,\" I heard Christ say. \"I've been there. But that doesn't mean that you should just go out and let the first cute guy you see climb on top of you!\"\n\n \"God, mom!\" Britt replied. \"I'm not THAT stupid!\"\n\n \"Honey, when you start drinking, you never know what could happen,\" Christi told her. \"Especially when you're this upset AND horny.\"\n\n I thought that was a rather tactful way of telling her that when she is drunk and horny, she tends to get a little slutty.\n\n \"You've got it so easy now!\" Britt cried. \"All you have to do is smile, shake your tits and ass at him, and he's all over you!\"\n\n \"Jealous?\"\n\n \"YES!\"\n\n \"So what do you want me to do, Britt?\" Christi asked after a couple of seconds of silence. \"Loan you Kurt for the night?\"\n\n \"I wish!\" Britt said softly.\n\n \"What?\" Christi called out.\n\n \"I said I wish it was that easy,\" Britt replied.\n\n \"I'll loan you some toys,\" Christi teased as she walked into the bathroom. \"I've got one that's almost as big as him.\"\n\n \"Shut up!\"\n\n I heard both of them laugh, and then a few seconds later Christi asked her daughter, \"You really do like him, don't you?\"\n\n \"Yes,\" she replied softly. \"I really am jealous. I'm happy for you, but I'm jealous too.\"\n\n \"I know, sweetie,\" Christi told her. \"We'll figure something out.\"\n\n \"I hope soon. I'm so damn horny I could scream!\"\n\n At that point I decided to go back down the stairs to the back of the house and announce myself.\n\n I was in the kitchen when I called out and Christi told me that they would be down in a couple of minutes. I heard soft voices upstairs, and then I saw Christi coming down the stairs. \n\n \"Hi sweetheart,\" she said kissing me. She then stepped back and turned, showing me her outfit.\n\n \"So, how do I look, coach?\" she asked. \n\n From her pigtails down to her ankle socks and running shoes, her cheer sweater and pleated skirt, Christi pulled off the look very well. Her breasts swayed under her sweater, telling me that she wasn't wearing a bra, and I wondered what else she wasn't wearing.\n\n \"You're a hell of a tight end, Miller!\" I told her as I looked her over.\n\n \"Yeah, well every time that you're done with me, I feel like a wide receiver!\" she giggled.\n\n \"So are you a naughty cheerleader, or a slutty one?\" I asked, looking her over again.\n\n \"Tonight, I am a naughty cheerleader,\" she told me as she lifted her sweater to show me her bare breasts, \"with a kind of slutty side.\" She then lifted her little skirt to show me the front of her sheer lace thong. Smiling at me, she turned and showed me the thin strip splitting her ass cheeks. \n\n Christi dropped her dress and turned back towards me. \"I've been having trouble doing my splits, coach,\" she said. \"Do you think that you can help me after practice?\"\n\n \"I can definitely help you spread, I mean stretch, your legs out, Miller,\" I replied with a smirk.\n\n \"Thanks coach!\" she replied, jumping up and down.\n\n I laughed at her and she stepped up to me and gave me a hug. \"Hey, what about you?\" she asked as she stepped back.\n\n \"What about me?\" I asked, confused.\n\n \"Well, I'm not wearing a bra, and I am wearing a sheer thong under a short skirt,\" she said. \"What sexy thing are you doing with your costume?\"\n\n \"What kind of sexy thing can you do with a coach's costume?\" I laughed.\n\n Christi looked at me for a second and then smiled at me. \"How about going commando?\" she asked.\n\n \"You want me to go commando?\" I asked her. \"Ok. I can do that.\"\n\n I quickly ducked into her bathroom and stripped off my shorts and drawers, replacing only my shorts. I then walked out and back to Christi. \"What do you want me to do with these?\" I asked, showing her my discarded underwear.\n\n Laughing, she took them from me and tossed them in her laundry room. Just then, Britt started walking down the stairs.\n\n Starting with a pair of Mary Janes, knee socks, and then long legs, I slowly saw Britt's costume. Next was a very short skirt, a little show of belly, and then a thin blouse tied off under her ribs. Britt wasn't nearly as big in the chest as her mother, but from the bounce under her blouse, it was obvious that she wasn't wearing a bra either.\n\n Britt's hair was tied back in a ponytail, and I noticed that she was wearing bright red lipstick. Both women did their make-up perfectly to fit their characters and looked damn good. If I didn't have the start of a hard-on from Christi, I would have after seeing Britt. \n\n \"Wow! You look good, baby!\" Christi said. Britt thanked her mother and then looked at me. \n\n \"So? What do you think?\" Britt asked me.\n\n \"Very nice!\" I replied, trying very hard not to look like a pervert as I looked at her. \n\n \"You think you can handle the two of us on your arms, old man?\" Christi asked, teasing me.\n\n \"The way that you two look?\" I replied. \"Give me a minute to go back home and arm myself, just in case!\"\n\n They both laughed, and we were soon on our way.\n\n The bar was packed by the time that we got there, and we immediately started looking for a table. As we walked around, I saw a lot of naughty nurses, schoolgirls, and cheerleaders, as well as a few cats, witches, and other various sexy outfits. Don't ask me what the guys were wearing. I wasn't paying attention. \n\n I eventually spotted a table just as it was being vacated, so we grabbed it and I went to the bar to get us some drinks. As soon as I got back to the table, Britt took her drink and downed half of it. She then told Christi and me that she wanted to dance. Christi said that sounded like fun, and then leaned in to me and kissed me on the cheek as she told me that they would be back soon. To my surprise, Britt then kissed me on the other cheek before they both walked off to the dance floor.\n\n I sat and watched as Christi and Britt danced, both sets of tits bouncing and swaying and skirts flying as they moved on the floor. From the view that I had, I could see that it was a good thing that Christi decided to wear panties, which made me wonder how Britt was dressed. Thinking about how I was feeling going commando, I wondered how her tits, and especially her sensitive nipples, were doing under her sweater. \n\n After a couple of songs, the girls started getting some attention from a few of the guys. I watched as Christi and Britt both shook off their admirers, but a couple of guys didn't take the hint so I quickly stepped out onto the dance floor and led the women back to our table. As they sat down, I turned to see that the guys still didn't take the hint, so I had to tell them to piss off. Unhappy, they finally walked away, cussing out both me and the girls.\n\n Christi thanked me as I sat down, and to my surprise, even though it looked like she was enjoying the attention, Britt thanked me as well. We all sat for another drink and some people-watching-slash-costume-critiquing, and Christi and I teased each other under the table. Eventually the girls wanted to dance again. This time, they both assured me that they would be much more careful and only dance with each other.\n\n I watched them dance again, their bodies a little looser from the drinks, and enjoyed the view. Britt was getting frustrated as her mother and I teased each other, and I hoped dancing would help her burn off some energy. She definitely looked like a younger version of her mother, making me wonder again what it would have been like if I had met Christi years before Joe did. \n\n To my surprise, Christi kept up with her daughter for a while on the dance floor. I knew that they both had started taking long walks and even done a little jogging, and I was impressed at her stamina. Soon, though, she broke away from her daughter and came back to our table.\n\n \"You looked great out there,\" I told her.\n\n \"Thank you,\" she replied as she sipped her drink. \"It felt weird, at first, being out there dancing with no bra and such a short skirt!\"\n\n \"At first?\" I asked, smiling at her.\n\n \"Yep,\" she replied, returning my smile.\n\n \"Did you enjoy yourself?\" I asked.\n\n \"Oh yeah!\" she replied with a smile. \n\n \"How are you doing, Coach Commando?\" she asked with a bigger smile, as she reached her hand over to my upper thigh.\n\n \"Having a good time watching you,\" I replied with a smile of my own. It wasn't long before Christi had her hand wrapped around my hard shaft and was squeezing it gently while we both watched the dance floor. Britt was still shaking and moving out there, attracting a few guys and looking like she was enjoying the hell out of it.\n\n I reached my hand over and started stroking my fingertips on her inner thigh as she sighed, and said, \"I remember being that age once. But I never got to have fun like this!\"\n\n \"Well, you get to have it now,\" I told her as I leaned in to kiss her at the same time that my fingers slid under hem of her skirt.\n\n \"Yes, I do,\" she replied, kissing me and squeezing my hard cock. Just then we heard Britt telling us to get a room.\n\n \"As soon as we get home,\" I told her as I flicked a finger at her mother's panty-covered pussy.\n\n \"And for god's sake, get your hands off of each other,\" she said. Christi and I looked at each other and laughed as we separated.\n\n I ordered another round as Britt told her mother about the guys she was dancing with, and Britt then demanded that we do a round of shots. I asked them what they wanted, and to my surprise, Britt replied, \"You know what the song says, Kurt. 'Tequila makes her clothes come off'.\"\n\n I quickly ordered a round of tequila shots and then listened as Britt continued telling Christi about dancing. We all did our shots and had our drinks, and as the girls convinced me to dance with them, I ordered another round for when we got back. \n\n I did my best not to embarrass myself, or them, out there. Fortunately, the floor was pretty packed by then, and if anybody was paying attention, they were watching Christi and Britt, not me. \n\n At one point I had Christi rubbing up against me and grinding her ass against me, sliding her ass against my hard bulge. The shock of the night, at that point, happened when Christi and I separated and I turned to see what Britt was doing. She then started dancing with me the same way her mother had, including grinding her ass against my cock. I knew that she had to have felt it, but there was nothing I could do. The real surprise though, was the fact that Christi just watched and laughed as her daughter grinded herself against me. \n\n Eventually, we had all had enough and returned to the table. As soon as we got back, the women decided that they had to go to the washroom. I flagged down the waitress for our bill, so by the time they came back we were paid out. A little while later, after we had our drinks, I was walking out of the bar with both women on my arms.\n\n As a joke, they both got into the back of my car, calling me their chauffeur. I let Britt in first, and she kissed me on the cheek again as she got into the car. As I watched her slide onto the seat she opened her legs far enough to raise her skirt just below her pussy. When she turned in the seat I looked up at her and she was smiling at me.\n\n I closed her door, trying to keep my cock from rising too much, and helped Christi into the car. Because she was wearing a much shorter skirt, it slid up even further as she got in the car, and she then opened her legs as she slid into the seat. For a brief instant, I got a view of her bare pussy lips. I smiled in response to her smirk as I closed her door, and then walked around to get in myself.\n\n When I opened my door, I heard them laughing in the back seat. Thinking to myself that the weirdness just kept on coming that evening, I asked them what was so funny. \n\n \"I called mom a tramp for trying to flash you like that, and she called me a slut for the way that I'm dressed,\" Britt told me, laughing.\n\n They call each other a tramp and a slut, and they laugh? Further proof that women are not meant to be understood.\n\n A few minutes later we were back at Christi's house, sitting in her living room. Britt wanted to do a couple more shots, so I said that I would go next door and get a bottle of Tequila.\n\n \"Kurt, do you have any weed?\" Britt asked me as I turned to leave, her voice starting to slur a little.\n\n \"Excuse me?\" I asked, shocked. \n\n I saw Christi looking at me with her eyebrows raised. \"Yeah, Kurt. DO you have any weed?\" she asked, starting to slur also. \n\n \"Why would you ask me that?\" I asked Britt.\n\n \"I don't know,\" she replied. \"Maybe because you like to sit on your patio late at night sometimes and smoke.\"\n\n Christi looked at me, smiling with her head tilted. \n\n \"Yeah, I guess that would be a good reason,\" I said. \n\n \"Kurt, you smoke weed?\" Christi asked me.\n\n \"Sometimes,\" I replied. \"Not very often. Mostly for medicinal purposes.\"",
        "\"Uh-huh,\" Christi laughed. \"Medicinal purposes!\"\n\n \"When Britt's seen me outside, late at night, I'm smoking to beat my amnesia. When my knee or back are bothering me, I smoke a little for my arthritis.\"\n\n \"And sometimes, I smoke it to get high.\"\n\n \"So, do you have any?\" Christi asked.\n\n \"Yeah, I have some,\" I told her.\n\n \"Go get it!\" she told me. \n\n \"Seriously?\" Even Britt looked a little surprised.\n\n \"Sure! Why not? I haven't smoked since college!\" she told me. \n\n I stood there looking at the two women for a couple of seconds before I said, \"Ok,\" and went next door.\n\n A few minutes later, I was back in Christi's house, sitting with both ladies as I lit up a joint. I had picked up some very potent weed, so I knew that it wouldn't take much to get everyone buzzed, especially Christi. As we smoked, I poured us a round of shots, which we did while we smoked.\n\n Sure enough, after only a couple of hits each, the women were both laughing and giggling again. As we smoked, Christi asked me about my smoking, and I soon felt Britt's leg rubbing against mine, and every time that she reached for the joint or passed it, I would feel her breast, and her hard nipple, brush against my arm. \n\n Soon, I felt Christi's hand on my thigh and she started stroking it lightly. Britt looked at her mother's hand and I felt her leg and breast press even firmer against me. \n\n Once the joint got too small, I leaned forward to put it out, and when I sat back Christi settled into the crook of my arm as she stroked my thigh higher. I heard Britt sigh and she leaned against me, so I put my arm around her shoulder, pulling her into my body. I now had both women turned towards me, resting their heads on my shoulders, and soon Britt mimicked Christi's actions and placed her hand on my thigh.\n\n Britt started making small circles on my inner thigh with her fingertips while her mother stroked my other leg with her hand. As Christi's hand slid further up towards the rather obvious bulge in my shorts, I loosened my arm around Britt and turned to kiss Christi. That movement caused the leg that Britt was stroking to raise a little, and as Christi and I kissed I felt Britt hold my leg down, her fingertips reaching a little higher.\n\n I moved my arm that was around Britt and brought my hand up to Christi's face, holding it as we kissed, and I felt her fingertips softly scratch at the head of my shaft. At the same time, I felt Britt's fingers slide up a little further, stopping just below the leg of my shorts, which had ridden up as I sat. The two sets of fingers were now just a couple of inches from each other, a sensation that while very exciting, was at the same time uncomfortable for me, knowing that Christi wouldn't be very happy seeing her daughter's fingers inches from my hard cock.\n\n I turned my hips a little, trying to force Britt to move her hand away as I continued kissing Christi. Christi moaned softly and pulled her lips from mine as I slowly slid my hand down the front of her sweater. \n\n \"Oh my god,\" she gasped softly into my neck as my fingertips grazed across her stiff nipple.\n\n I held Christi's head to my neck, feeling her lips kissing me, as I reached my other hand down and grasped Britt's wrist and gently moved her hand from my leg. Britt moaned in complaint, huffing loudly as she sat back.\n\n \"What's wrong, baby?\" Christi asked, moving her head to look at her daughter.\n\n \"This isn't helping me!\" Britt whined. \"I'm already horny, now I'm drunk and high, and I have to watch you two making out like a couple of teen-agers!\"\n\n \"No one's making you watch,\" I teased her.\n\n \"Shut up,\" she replied, softly slapping my shoulder. \"You know what I mean!\"\n\n \"Oh my god!\" Christi exclaimed, sounding exasperated. \"Kurt, kiss her so she'll shut up,\" Christi told me.\n\n \"Excuse me?\" I replied as I heard Britt gasp.\n\n \"We all know that she has the hots for you, and you can't deny that she's beautiful and sexy, especially in that costume,\" Christi said, \"so turn to her and kiss her. Make her quit whining about not having a man!\"\n\n \"Mother! What the hell?\" Britt yelled.\n\n \"You WANT me to kiss your daughter?\" I asked, shocked.\n\n \"Yes, damn it!\" she exclaimed as she nudged me toward Britt. \"Maybe we'll get some peace!\"\n\n It was clear that she was having fun teasing Britt like that, but the gleam in her eyes told me that at least a part of her was serious.\n\n At that point I was just buzzed enough that I decided to call Christi's bluff and try to shut Britt up at the same time, so I turned to Britt.\n\n \"Britt, come here,\" I said.\n\n \"What?\" she replied, her eyes opening wide.\n\n \"Come. Here. Please,\" I repeated slowly. I could see Christi watching out of the corner of my eye. She had a smirk on her face, but she also looked like she didn't believe Britt would follow through.\n\n To both of our surprises, Britt turned towards me and slid closer. \"Ok, now what?\" she asked.\n\n Wordlessly, I grabbed her blouse and pulled her sharply to me. As I looked into her eyes, I slid one hand behind her neck and gently pulled her to me.\n\n I heard a soft whimper as our lips touched, and we kissed for a couple of seconds.\n\n \"There,\" I said smiling, still holding on to Britt as I turned to look at Christi. \"Are you happy now?\"\n\n \"No!\" she replied. \"You call that a kiss? Britt, sweetie, are YOU happy with that kiss?\"\n\n Britt looked down sheepishly, embarrassed. \"It was nice, mommy,\" she told her softly.\n\n \"Exactly! It wasn't supposed to be a 'nice' kiss!\" Christi exclaimed. \"It was supposed to be a kiss to shut you up! Kurt, I want you to kiss her like you kiss me when you're seducing me! Kiss her, and make her feel it!\"\n\n Christi had a wild, passionate look in her eyes and I wondered what she was thinking, telling me to kiss her own daughter like that.\n\n \"Sweetie, tell him to kiss you like he means it!\" Christi told Britt.\n\n \"Please kiss me,\" Britt pleaded with me, looking deep into my eyes.\n\n Deciding to call both of their bluffs, I reached a hand up to Britt's neck and grasped a handful of her long hair. I pulled her to me, pressing my lips hard against hers. She whimpered softly again, and moaned as I kissed her harder while I slid my hand down her soft back. I could feel her firm muscles under her thin blouse as my hand went lower.\n\n I could feel my cock start to thicken again and I slid my hand down to her ass and cupped her firm cheek, squeezing it softly. I still don't know what inspired me to do it, but I then grabbed Britt's hips and lifted her onto my lap.\n\n Christi, originally cheering us on, was suddenly quiet. Britt moaned as she rested her ass on my legs, feeling my hard bulge pushing against her. She gasped and moaned, pressing her body against mine and whimpering as she kissed me harder. She then started moving her hips back and forth, grinding her pussy and ass against me. \n\n I had to give Britt credit. She could kiss! If she used her tongue like that during oral sex, she'd make a lot of men, or women, very happy!\n\n I don't know if it was the alcohol, the weed, or just the general mood in the room ... or more likely, a combination of the three, but the kiss quickly intensified and my hands started slowly sliding up and down Britt's legs. My fingers lightly passed over her ass cheeks, and up along the sides of her body. She gasped softly as my thumbs glided over her firm breasts, intentionally avoiding her nipples. I then slid my hands back down to her legs. It wasn't long before my fingertips slipped underneath the hem of her skirt.\n\n Finding nothing but flesh under her skirt, I cupped her soft, taut ass cheeks and squeezed them. Britt moaned softly into my mouth and slid her hips back and forth harder, grinding her pussy against the bulge in my pants.\n\n I reached my hands a little further in, and still found nothing but bare flesh. 'Britt had been going commando all night?' I thought to myself.\n\n \"I took them off before we left the club,\" she whispered in my ear as she leaned in and hugged me, humping against me harder. \n\n We kissed a little longer, and I finally broke it off before things went any further, which was quite possible at that point. Britt was moaning louder and riding me harder, Christi was oddly silent, and I felt like I could burst any second. \n\n I looked up at Britt's face and her eyes were still closed, her breath heavy. With my arm still around her waist, I turned toward Christi, who was breathing just as heavy as her daughter. I noticed that her legs were spread open a little, showing a lot of her thighs.\n\n Holding tightly to Britt, I stood, picking her up and setting her back on the couch, and then turned towards Christi. Reaching down, I took her by the hand and pulled her up onto her feet, and then started pulling her quickly towards her bedroom.\n\n \"What the fuck?\" Britt cried out as I led her mother up the stairs.\n\n \"Good night, Britt!\" Christi called out.\n\n \"Thanks!\" Britt yelled. \"Now I'm going to have to listen to you two all night while I lie in bed alone!\"\n\n \"Britt, it won't be all night,\" I joked, stopping at the top of the stairs. \"I'm good, but I can't last THAT long!\"\n\n Seeing that my attempt at humor fell flat on its face, I added, \"Look, we can go next door, if it will make you feel better. That way you won't have to listen to us.\"\n\n \"That's not going to matter!\" she yelled at me. \"I'm still going to know, and I'm still going to be alone!\" I just looked at Christi and shrugged my shoulders as I led her to her room.\n\n \"That WAS kind of mean,\" Christi said as I closed the door behind us.\n\n \"Would you rather I go back downstairs and keep kissing your daughter, or lay you on your bed and fuck your brains out?\" I asked her as I gently pushed her towards her bed.\n\n \"Oh, me!\" she breathed. \"Definitely me!\"\n\n When I got her to her bed, she held on to my arms and turned us both, so that my back was to the bed. She then stepped closer to me and started kissing me as she slowly lifted my shirt, breaking our kiss only to pull the shirt over my head. Tossing the shirt over her shoulder, she stepped and then slowly pulled her sweater up, tossing it over her shoulder also as she looked me in the eyes. I watched as she started squeezing and massaging her breasts, gasping when she pinched her already stiff nipples.\n\n A few seconds later she stepped closer to me and kissed me again. \"I am so fucking hot and turned on right now, I just want you to fuck me,\" she breathed heavily as we broke that kiss. \"I want you to fuck me hard, and fuck me fast. Just ... fuck me!\"\n\n \"I'm going to suck your cock and get it nice and wet, and then I want you to fuck me.\"\n\n Christi got down on her knees and opened my shorts, dropping them to the floor around my ankles. \"I am hornier than I can ever remember,\" she said as she kissed up and down the length of my shaft and slowly stroked it. \"I want you to give me every THING that you have, every WHERE that I have.\"\n\n She then proceeded to suck me off until she was swallowing my load, moaning as she slowly milked me dry. After I recovered from that, I put her up on her bed and ate what was without a doubt the wettest pussy Christi had ever produced. She had a huge wet spot on the back of her skirt, and her juices were running down her inner thighs and her ass.\n\n About an hour later I rolled onto the bed, slowly sliding my softening cock from her ass and trying to catch my breath. \"Oh my god, baby!\" Christi breathed softly as she turned and lay her head on my chest. \"That was amazing! I don't think that I've ever come that hard!\"\n\n \"Or that loudly,\" I laughed, teasing her.\n\n From the moment that my tongue dipped into her wetness, up until a couple of minutes ago, Christi had been louder and more responsive than I had ever seen from her. If Britt was upset just knowing what we were going to do, she must have been fuming at that point! There was no way that she didn't hear her mother!\n\n \"Oh my gosh! I know!\" she giggled. \"With all of the drinks, and the pot, and then watching you kiss Britt, I was so damn turned on! I couldn't help it!\"\n\n \"It turned you on watching me kiss your daughter?\" I asked, still a bit surprised at it all.\n\n \"Oh my god, yes!\" she replied, lifting her head and looking up at me. \"I was ready to do you right there, but I wanted to see what you were going to do with her.\"\n\n I looked at her as she lay her head back down on my chest and I was stunned. She got turned on watching me make out with her daughter? She wanted to see how far I would take it? What the HELL?\n\n A couple of minutes later Christi's body jerked and then relaxed completely as she fell asleep on me. I lay there, holding her and unable to fall asleep for a couple of hours as I replayed all of the events of the night in my head and thinking about what Christi said. What WOULD have happened if I didn't stop with Britt when I did?\n\n The next morning, I woke up to an empty bed. After a hot shower I went downstairs and found Christi sitting at the table on her deck with a cup of coffee. I poured myself a cup and then went outside to join her. \n\n \"Good morning, sexy,\" I said as I kissed her before I sat down.\n\n \"You're a bad man!\" she replied as she looked up at me.\n\n \"Me? What did I do?\"\n\n \"Everything, to me apparently!\" she said, smiling at me as she shifted in her seat. \"Shame on you for taking advantage of me, drunk like that!\" \n\n \"Taking advantage of you?\" I laughed. \"You practically attacked me, young lady!\"\n\n \"Yeah, I was pretty buzzed last night,\" she said softly. \n\n \"That's ok,\" I told her. \"It's not like you got out of hand or anything.\"\n\n \"Yeah, well Britt isn't very happy with me right now,\" she said. \"With either of us, actually.\"\n\n \"Hey, I'm not the one that was yelling and screaming,\" I teased her.\n\n \"You made me,\" she replied in a little girl's voice.\n\n I laughed, and then asked her what Britt had said to her. \"Nothing,\" she said. \"She was gone when I got out of the shower, and there was a note on the counter that just said, 'Out'.\" \n\n \"That's not a good sign.\" \n\n Christi and I did a little running around that morning, and by the time that we got back Britt still wasn't home. \"I'm sure she's fine,\" I told Christi. \"She's probably just hanging out with her friends, bitching about how mean you are. She'll be home soon.\"\n\n \"It's all your fault,\" she told me. \"If I wasn't so damn turned on, I wouldn't have been that loud!\" \n\n I had a quick flashback to her confession the night before, telling me how turned on she was watching me kiss Britt. \"You're right,\" I said, teasing her. \"It's all my fault for being so freaking sexy and such a porn star-quality lover.\"\n\n \"Shut up, jerk,\" she responded, laughing at me as she slapped me in the shoulder.\n\n A nice long nap that afternoon enabled me to stay up late that night, and I was sitting on my patio enjoying the quiet when I saw the reflection of Britt's headlights as she pulled up. A couple of minutes later I saw her bedroom light come on, and then shut off seconds later.\n\n When I talked to Christ the next day she told me that she had a talk with Britt that morning. \"She's still upset,\" Christi said. \"She was really turned on that night, and my yelling and screaming didn't help any.\"\n\n \"I knew we should have come over here,\" I told her.\n\n \"As loud as you had me, I don't think that would have helped,\" she giggled in response. \"I feel bad for her. \"She's frustrated, and we just made it worse.\" \n\n \"Well hopefully, she gets over it soon,\" I replied, not knowing what else I could say.\n\n \"I hope so,\" she said softly.\n\n \"We talked a little about that night, too,\" she continued. \"part of her frustration is because she said that no guy has ever made her feel like that. The guys her age just care about getting themselves off, and not about her.\"\n\n \"That has to suck,\" I told her. I tried thinking back to when I was that age, and I remembered always at least giving an effort to get my partners off.\n\n \"She also asked if we were really doing anal,\" she added softly. \"I didn't know that I was screaming at you to fuck my ass. I remember that it was the best anal that we had done, but I didn't remember being that loud.\"\n\n I did remember, but didn't realize that she was that far gone at that point. \"I explained to her that yes, I did give you my ass, and that you were very gentle, and that you made it feel that good. I think that just made her even more jealous.\"\n\n Over the next couple of weeks Christi and I went to my house whenever we had sex so we wouldn't upset Britt. Britt barely looked at me when I saw her, which was unusual at that point. Finally, Christi asked me out to dinner one Friday night.\n\n Her asking me out for the night was unusual, so I knew that something was on her mind. As we sat down to eat, I could tell that she wanted to talk, but was reluctant.\n\n \"How's Britt doing?\" I asked her, wanting to start the conversation. \n\n Christi looked at me and then took a big gulp from her vodka and tonic. She then took a big sigh, and said, \"That is why I asked you out tonight. I need to talk to you about her, and about an idea that I have.\"\n\n \"Ok,\" I replied. \"What kind of idea?\"\n\n Christi then went on to tell me more about Britt's history, most of which I didn't know about, and about what she was going through now. Between the way that her father treated her and Christi, mostly ignoring her while favoring her son, her lack of success with dating, and having to not only watch us, but hear Christi in the throes of our passion, Britt was having a hard time.\n\n \"My idea is actually more of a favor,\" she eventually said. \"It would be a big favor to me, and it would really help Britt.\"\n\n \"Ok, so what's your idea?\" \n\n \"I want you to take Britt out on a date for her birthday,\" she told me, taking another deep sigh. She then lowered her voice a little. \"I want you to take her on a REAL date. Like you would take me on.\"\n\n I looked at her for a second, hoping that what I thought she wasn't telling wasn't what I thought.\n\n \"Christi, when I take you on a date, we both know that the goal is that we're going to wind up naked, in bed,\" I told her.\n\n \"I know,\" she replied, reaching for my hands as she looked into my eyes. \n\n I looked at her silently for a couple of seconds, waiting for the punch line that never came. \n\n \"Christi, you're telling me that you want me to seduce your daughter?\" I finally asked.\n\n \"In short, yes,\" she said. \"Although I'm willing to bet that SHE'S going to try to seduce YOU.\"\n\n \"Kurt, you are the best thing to happen to me since my kids were born. You are an incredible lover, you're very patient and gentle ... I can't think of anyone better.\"\n\n \"Britt needs to see how a man is supposed to treat a woman,\" she continued. \"She's told me about all of the guys that she's dated. Not one of them cares enough to take care of her. They are all concerned about getting themselves off, not about her enjoyment. If she moans, they think that they are great lovers. She deserves, and needs, better than that. She needs you,\" Christi continued.\n\n \"But this is your daughter,\" I replied. \"You're telling me that you want me to sleep with your daughter.\"\n\n \"I don't just want you to sleep with Britt,\" she said. \"I want you to make love to her. I want you to fuck her brains out. I want you to make her feel the same way that you make me feel when we have sex.\"\n\n \"Ok,\" I replied a few seconds later, still stunned by what she was telling me, \"let's forget about the fact that you're trying to pimp me, your boyfriend whom you love and who loves you, out to your own daughter. What about Britt's emotions? Aren't you afraid that she's going to have even stronger feelings for me afterwards?\"\n\n Christi looked at me like I was an idiot and then started laughing. \"You know, for a man as intelligent as you are, and as good as you are anticipating my wants and needs, you are still clueless about women, aren't you?\"",
        "\"Are you telling me that you don't think that Britt's going to fall for me?\"\n\n \"You big dummy!\" she laughed, reaching for my hands again and squeezing them. \"Britt is already in love with you!\"\n\n \"You are the only man in her life, with the exception of my father, that has treated her with right, and shows her any respect. Joe barely talked to her when he was living with us, and hasn't spoken to her since he moved out. He only cares about himself and Tony (their son). The boys that she dated were just that. Boys. They used her for her body.\"\n\n \"You are the reason that she turned her life around,\" Christi continued. \"She was a royal bitch before. I know that, and she even admits it now. You helped straighten her out. You showed her love and respect. I just want you to take that love and respect to the ultimate level.\"\n\n I sat there in stunned silence again, still not believing what I was hearing. \"I ... I don't know what to say,\" I finally told her. \n\n \"Sweetheart, you don't have to say anything,\" she replied, squeezing my hands again. \"Her birthday is in a couple of weeks. Tell her that you want to take her out to celebrate.\"\n\n \"Isn't that going to look a little weird, me taking just her out without you? And what is she going to say when I suddenly try to start seducing her?\" I asked.\n\n \"Kurt, she wants you so badly that she hurts. She told me that if I wasn't in the room with you that night at our house, she would have attacked you right there,\" she said. \"You were obviously too horny to notice, but you had a big wet spot on your pants when you pushed her off of you and dragged me upstairs. She was dripping all over you.\"\n\n \"You can tell her that you want to take both of us out. I will pretend that I never talked to you about this, and that I have no intention of being a third wheel. You two go out, and let her do the seducing. Let her think that it's all her idea.\"\n\n \"And she's going to think that I'm just suddenly going to go along with this?\"\n\n \"Probably not, so you pretend to put up some kind of argument, and then she can call me and I'll 'give you permission' to sleep with her.\"\n\n \"You've thought all of this out already, haven't you?\" I asked her.\n\n \"Baby, we BOTH have thought about this,\" Christi replied. \n\n I was silent again, finishing off my drink as I thought about everything that she told me. Finally, Christi spoke again.\n\n \"Sweetheart, you opened a whole new world to me when we started having sex,\" she told me. \"Before you, I would have never even considered doing it somewhere like the jogging trail like we did. I sure as hell wouldn't have done it with my niece only a few feet away, fucking her boyfriend!\"\n\n \"You know that you took my anal virginity. Asshole tried that a couple of times and we got into a big fight about it. I voluntarily gave you my butt. There isn't a single time that you haven't made me cum at least a couple of times. Britt said that she's only gotten off a couple of times with a boy. Total!\"\n\n \"I want you to let her feel that kind of love, baby. I want you to make her feel like that, like she can't get enough, that she never wants it to end. Just like you make me feel.\"\n\n \"And when it's all done, then I will show you MY appreciation,\" she added with a sexy smile. \n\n After we left that night, Christi gave me incentive by giving me road head on the ride home, and then showing me her new lingerie and toys, followed by a demonstration of her new toys. As much as I wanted to give her some pleasure, she insisted that wasn't necessary, that she only wanted to \"take care of me.\" I fell asleep exhausted, thinking about what she wanted me to do.\n\n Over the next couple of days, I thought long and hard about that conversation. I couldn't deny that I was physically attracted to Britt. She was a younger, thinner version of her mother. There was no question that she was a beautiful girl. But she was just that. A girl. My girlfriend's daughter. My girlfriend's daughter that I had made out with in front of my girlfriend. \n\n I didn't know what Christi's reaction would be if I didn't go along with her idea, but I had to believe that it would be rather chilly. Did I really want to risk our relationship like that? But then again, if I DID go along with her idea, how much would THAT risk our relationship?\n\n As I thought about it, the deciding factor was the fact that not only did Christi watch Britt and me kiss, she encouraged it. Her actions when I got her in bed that night after I moved Britt off of me were some of the wildest that I had seen from her. I finally decided that I could either risk pissing her, and her daughter, off by refusing to go along with her wacky plan, or I could take Britt out for dinner, hopefully have a fun, platonic evening. Worst case scenario, I would know that I had slept with a beautiful mother and her daughter. It would be hard for Christi to get angry with me when this was all her idea ... theoretically, at least.\n\n I decided to have the girls to my house for a cook-out Saturday night, where I would casually bring up Britt's birthday. Throughout dinner I could feel a little tension from Britt. This was the first time that we had seen each other since THAT night. \n\n After we were all done eating, the girls sat down to a freshly opened bottle of wine while I had a glass of bourbon. I could see Britt looking at me out of the corner of my eye, and every time that I looked at her she quickly looked away as we all talked. Finally, I decided it was time to bring the topic around.\n\n \"Britt, isn't your birthday coming up soon?\" I asked her. I could see Christi's eyes widen as she looked at me.\n\n \"Yes, it's next Saturday,\" she replied.\n\n \"Do you have any plans yet?\"\n\n \"Not really. Mom said that she was going to take me out for dinner.\"\n\n \"Well, how about I take both of you out?\" I asked. \"We can do dinner, and then drinks and dancing, if you want.\"\n\n Britt gasped softly and looked at her mother. \"Don't look at me,\" Christi told her. \"It's not MY birthday.\"\n\n \"I ... ummm ... yeah, that sounds nice,\" Britt replied as she finally looked me in the eyes. \"Where do you want to go?\"\n\n \"Well, as your mother said, it's not MY birthday,\" I told her. \"You pick a place. Anywhere you want to go.\"\n\n \"Anywhere?\" she asked, raising her eyebrows.\n\n \"Anywhere,\" I told her.\n\n She then looked at her mother, who told her, \"Pick someplace you've always wanted to go. We can get all 'hottied up,' as Kurt likes to say, and have a nice, fancy dinner.\"\n\n Britt looked back at me and smiled. \"Ok, I want to go to Luna,\" she said a couple of seconds later.\n\n I smiled to myself, thinking that the restaurant was located in one of the newest hotels downtown, with a great rooftop bar offering an incredible view of the city's skyline. There was also a great dance club on the main floor, as well as some very nice rooms and suites, making a possible all-in-one destination.\n\n \"Are you trying to bankrupt me?\" I joked.\n\n \"Well, you said ...\" she started, looking worried.\n\n \"Britt, I'm teasing you. I'll call and make reservations for the three of us in the morning.\"\n\n \"Really?\" Britt replied, smiling wide.\n\n \"Really,\" I told her. \"I've heard that there is a great dance club on the main floor of the hotel there too.\"\n\n \"Oh my god! Thank you!\" she exclaimed, getting up and hugging me and pressing her upper body against mine. \n\n I looked at Christ over Britt's shoulder, and she mouthed the words, \"Thank you.\" I just winked at her as I held Britt.\n\n Later that night, Christi \"showed me her appreciation\" after Britt left by giving me an incredible blow job on my patio. For a woman who was unsure and insecure about her oral abilities a short while ago, Christi was becoming an amazing fellatrix. \n\n \"Thank you so much,\" she said as she kissed me after swallowing my cum. \"You made her a very happy young lady.\"\n\n \"It's my pleasure,\" I told her as my hand slid down her back and cupped her ass. \"As was your show of appreciation!\"\n\n \"Well sadly, that's the only 'show of appreciation' that I can show you tonight, thanks to Mother Nature,\" she said. \"I just started this morning, so I'm afraid that is all you're going to get until your date with Britt.\"\n\n \"But just think, that means that you'll be extra horny when you seduce my daughter,\" she added. \"And afterwards, you'll have her as a back-up when it's my time of the month.\"\n\n \"You really think that it's going to get to that level?\" I asked, unsure of how that would work out.\n\n \"Sweetheart, I guarantee it,\" she replied, kissing me again. \"Now, I've got to go home to my daughter. I'm sure that she's going to want to go shopping in the morning for a hot, sexy, and probably expensive, dress for her big date.\"\n\n \"Send me the bill,\" I told her, laughing. \"I'll make it part of her birthday present.\"\n\n \"I'm going to need to pick up a new dress too,\" she replied with raised eyebrows. \"I have to make it look like I plan on being there too.\"\n\n \"I know. I'll cover both of them.\"\n\n \"You're so sweet!\" she squealed, hugging me tight and pressing her breasts against my chest. \"Of course, after I 'have' to cancel, you're going to have to take ME out on a hot, sexy date too!\" \n\n \"Of course,\" I replied, laughing as I swatted her on the ass. \"I wouldn't have it any other way.\"\n\n Yelping and then giggling, Christi shook her ass as I watched her leave and I wondered what I got myself into.\n\n I slept late (for me, at least) the next day, getting up at 7:00. Knowing that if everything went according to Christi's plans on my \"date night\" with Britt, I decided to work on my cardio. I wasn't in bad shape, good enough to keep up with Christi, but nowhere near where I would need to be for Britt, especially if things worked the way that Christi hoped. I hopped on my old 10-speed bike and went for a long ride. By the time that I made it back home, dripping in sweat, Christi's car was gone, telling me that the girls were on their shopping adventure.\n\n I spent the rest of the morning working in my veggie garden, and by noon I was back in the house, showered and resting with a beer while I watched a ball game. I apparently dozed off at some point during the game, because I was awakened by my phone ringing.\n\n \"You are in SO much trouble, mister!\" Christi said as a greeting.\n\n \"Why? What did I do?\" I replied.\n\n \"Nothing, yet,\" she answered. \"But just wait until you see the dress that my daughter picked out for your date! She looks so hot in it, if she wasn't my daughter ... and I was into girls, I would do her!\"\n\n \"Hmmmm,\" I replied, that mental picture entering my head.\n\n \"Keep it in your pants, perv,\" she laughed. \n\n \"Wouldn't that go counter to your big plan?\" I asked, fully awake by now.\n\n \"Yes, you have a point there,\" she replied. \"Ok, keep it in your pants for now.\"\n\n \"Did you find a dress too?\" I asked.\n\n \"Yes, I did. Britt says that it looks hot on me!\"\n\n \"Cool. I can't wait to see it.\"\n\n \"And the best part is that we found both of them on clearance, so we saved you a lot of money!\" she added.\n\n \"Nice,\" I replied. \"So what do the dresses look like?\"\n\n \"You're just going to have to wait to see,\" she told me. \"I'm not going to ruin the surprise!\"\n\n \"Tease.\"\n\n \"No, being a tease would be telling you that they are both lace dresses, and hers is so daring that it's almost illegal. I wish that I had the guts to wear something like that!\"\n\n \"Lacy, and daring. Sounds interesting,\" I said.\n\n \"Baby, 'interesting' is going to be the last adjective on your mind when you see her in this dress,\" she told me.\n\n \"We both even found a pair of sexy heels to go along with them,\" she continued. \"Britt called them 'CFMs'. Do you know what that means?\"\n\n \"Yes,\" I replied. \"That means 'Come Fuck Me.' Like the heels that you wore on our date when we spent the night downtown.\"\n\n \"Yep, but these are even sexier!\"\n\n \"Nice. I can't wait!\"\n\n We talked for a few more minutes, most of it consisting of her teasing me further, and a few minutes after we hung up I realized that she didn't mention buying any sexy new underthings. \n\n After a full, busy work week, during which I had only a little time to talk to Christi, Saturday evening finally rolled around, and after putting on a jacket and tie, I went next door. Christi opened the door wearing a big, fluffy bathrobe. We had already discussed the plan, so I acted surprised.\n\n \"What's wrong baby?\" I asked loud enough for Britt to hear. \"You're supposed to be ready by now. Or almost ready, at least.\"\n\n \"I'm sorry sweetie,\" she replied, trying to sound sick. \"I'm not feeling good.\"\n\n \"Awwww. Poor baby!\" I said. \n\n \"That's ok. You will just have to go and have a good time without me,\" she told me.\n\n \"I don't know if that's possible,\" I replied as I took her in my arms. \"I never have as much fun if you're not there.\"\n\n \"Awwww. Aren't you sweet!\" she said as we kissed. \"You'll just have to do the best that you can. Tonight isn't about me, remember, or even us. It's about Britt's birthday.\"\n\n \"I know,\" I told her. \"I'll try to show her a good time tonight.\"\n\n Christi then pulled me in and kissed me, hot and passionately. She slid her hand down to my ass and squeezed it, pulling me closer to her. \"You'd better show her a GREAT time!\" she whispered in my ear.\n\n \"You look hot!\" she told me as I stepped back from her. \"I love the jacket and tie!\"\n\n \"Thank you.\"\n\n \"Did you make all of the plans?\" she asked quietly.\n\n \"Yep. I already booked a room at the hotel that the restaurant is in. They're holding the key for me, to make it look like a spontaneous thing.\"\n\n \"Nice!\" she said, sliding her hand down and cupping my cock. \"I hope you're ready for a long night and took one of your 'daddy's little helpers'! She's planning on 'trying' to seduce you!\"\n\n \"She told you that?\" I asked. I had told her a few months back that a doctor friend of mine had given me some sample packs of the little blue pills, and their little yellow cousins for nights when we wanted a marathon session.\n\n \"Of course! We already discussed it, and I told her that I wouldn't mind. I told her that I would rather have her be with you than some guy she didn't know, who wouldn't treat her the way that you would.\"\n\n \"You're going to put up a fight, and she's going to have you call me,\" she continued. \"I'm going to tell you that it's ok, that I want you to give my little girl the night of her life, and then I'm going to tell you that if you don't treat my little girl right, I will be very angry with you.\"\n\n \"Ok, but I still think that this is weird,\" I told her.\n\n \"Hold that thought,\" she whispered as we heard heels coming down her stairs. A second later I saw a pair of dark, burgundy heels quickly followed by Britt's lean legs. A LOT of leg. I watched as she continued down the stairs, eventually seeing the bottom of her dress, just inches from her ass.\n\n I continued watching as Britt walked down the stairs, stopping at the landing a couple of steps above the floor.\n\n \"Holy crap!\" I said softly. Standing in front of me, smiling shyly, Britt wore a black satin and lace dress that left little to the imagination. She wore her hair down and had obviously had it done that day. \n\n The dress consisted of basically a satin diamond shape starting at her neck, widening to cover her chest and then coming to a point again at her belly button, with a satin skirt on the bottom. Lace bordered the satin at top, reaching towards her shoulders, covering her stomach, and at the very bottom of the skirt. It was just tight enough around her chest that you could still see the outline of her areola pressing against it. As she looked at me, she slowly held her arms out and turned, showing me a large expanse of bare back. \n\n \"Isn't that a sexy dress?\" Christi asked as I stood there silent.\n\n \"Britt, you look amazing!\" I said. \n\n \"Thank you,\" she replied, smiling brightly at me.\n\n Looking at Britt, I could feel the blood starting to rush to my groin. She took the final two steps down and walked up to me, and then hugged me.\n\n \"Thank you so much for taking me out tonight,\" she said. \"This could be the best birthday, and birthday present, ever!\"\n\n \"It's my pleasure, Britt,\" I told her.\n\n \"It's just too bad that mommy can't join us,\" she added.\n\n \"I know. Maybe next time.\" I saw Christi smiling at me over Britt's shoulder as I slid my hand down her back.\n\n A couple of minutes later I walked Britt out to my truck. She held tightly to my arm as we walked out to my truck, leaning against me for support. \"I'm not used to wearing heels like these,\" she giggled as she squeezed my bicep.\n\n \"Not a problem,\" I told her. \n\n \"I just wanted to look good for you,\" she said. \n\n \"Mission accomplished,\" I replied. \"You look amazing. Incredibly sexy.\"\n\n \"You think that I look sexy?\" she asked, looking up at me as I helped her into the truck.\n\n \"No, I know that you do,\" I told her. \"I guarantee that you will have every man, and probably half of the women, looking at you everywhere we go. And most of them will be jealous of me.\"\n\n A little while later we walked into Luna, and as I predicted, in that dress, Britt turned a lot of heads. I ordered us a couple of drinks and we talked, and I intentionally let her see my eyes roam up and down the length of her body while we waited.\n\n A few minutes later we were sitting at our table, drinking a bottle of wine. While she was subtle about it, it was obvious that Britt was trying to seduce me, leaning low to show some side boob and making suggestive comments, and I just played stupid. \n\n After dinner I took her to a bar on the rooftop of the hotel, known for its great cocktails and a DJ that played any and every type of music that you could dance to. We danced to a few faster songs, with Britt rubbing against me and shaking everything she had, and then the DJ slowed it down. That was when she really started to turn up the heat.\n\n Within a couple of seconds of the song starting, Britt molded her body against mine. She wrapped her arms around me and held me close as we started to move slowly to the music. Having a beautiful girl half my age holding me that close naturally had the blood rushing to my cock, and she moaned softly as it started to push against her stomach. \n\n I felt her push her hips against me, pressing her body a little harder against my growing bulge as her hand slid down my back towards my ass. I responded by sliding my hand down her back, briefly cupping her firm ass. Britt moaned louder and pressed her fingers against the small of my back, pushing me even harder against her when I decided that it was time to pretend to stop her.\n\n \"Britt, no,\" I said softly but firmly as I stepped back. I still held her in my arms, but I placed room between our bodies. \"This is wrong. I'm sorry!\"\n\n \"No it's not,\" she replied as she tried to pull me back to her. \"It's right. It is SO right!\"\n\n \"We both want it. Admit it,\" she told me as she looked up at me. \"I want you so badly, and the way that you kissed me that night, and the way that your body is reacting tonight, I know that you want me, too.\"\n\n \"Britt, that night was a mistake. We were both drunk,\" I argued. \"I love your mother, and I would never do anything to hurt her. I would never cheat on your mother. And I'm old enough to be your father!\"\n\n She looked at me with a smirk and took me by the hand, leading me back to our table. My eyes were glued to her ass with every step.\n\n \"First, I was drunk that night, not you. You knew what you were doing,\" she said, keeping my hands in hers as we sat down. \"I could feel your big, hard dick pressing against my wet pussy when we were kissing, and I know that you enjoyed it.\"\n\n \"Second, I know that you love my mommy, and she loves you. I love her too, and I would NEVER do anything to come between you! I have never seen her as happy as she is with you, and she's never happier than after she spends the night with you.\"",
        "\"I want to feel that way. I want YOU to make me feel that way!\"\n\n \"Britt, I will admit that I find you very attractive,\" I countered. \"You are an incredibly beautiful, sexy young woman. Any man would be happy, and lucky, to have you. But the fact is, I'm with your mother, and I would never cheat on her. I'm sorry.\"\n\n Britt's smile widened and she released my hands. She then reached into her purse and pulled out her phone, and still smiling at me, hit a couple of buttons. I sat back, looking confused, knowing that she was calling her mother.\n\n \"Hi mommy!\" she said a second later. \"You were right. He's putting up a fight. He's so cute and sweet, thinking that he would be cheating on you!\"\n\n She giggled as she listened to Christi talk, and then said, \"Ok, hold on. Here he is.\"\n\n Britt handed me the phone with a proverbial, cat-that-ate-the-canary look on her pretty face. \"Mommy wants to talk to you, mister.\"\n\n I continued to pretend to look confused as I took the phone from her. \"Hi baby,\" I said into the phone. \"How are you feeling?\"\n\n \"You are in so much trouble, mister!\" Christi said. \"I can tell that she is so horny for you, she's going to tear you up!\"\n\n \"You faked being sick?\" I replied, acting like I was angry. \"Why would you do that?\"\n\n Christi giggled into the phone, and I got up from my seat. I told Britt that I would be back and walked to the wall of the rooftop bar, taking in the view of the city while I talked to Christi.\n\n \"Are you SURE that you want this?\" I asked her softly. \"You know that this will change our relationship forever.\"\n\n \"I know it will, baby,\" she replied, cooing. \"I believe, no, I KNOW, that it will change us for the better. I love you more than I can describe, and Britt's in love with you too. She needs you to do this for her. By this time tomorrow, she's going to love you almost as much as I do.\"\n\n \"I want you to fuck her brains out,\" she continued. \"I want you to fuck her so hard, she can't walk tomorrow! And then, when you bring her home to me, I'm going to fuck you until we both pass out!\" \n\n \"Sounds like a plan to me!\" I told her. \n\n \"Good,\" she replied. \"Now, go let my little girl seduce you, and then go give her the best that you have! I want you to pull out tricks that you haven't even used on me yet!\"\n\n \"Then, come home to me, and show me those tricks!\"\n\n \"Yes dear!\" I laughed. \"So, am I supposed to let her know that you 'tricked' me tonight?\"\n\n \"Yes! Let her think that you are still skeptical about it, and make her work for it! Tell her that you're mad at me, and her, for lying to you, and that we will have to have a long talk when you get home,\" she answered.\n\n \"Oh, and Kurt, one more thing that you might want to know,\" she added a couple of seconds later. \"When you finally see her hot, sexy, naked body, you should know that is almost exactly what I looked like at that age, only my bobs were a little bigger. Think about THAT when you're fucking her!\"\n\n The next thing that I heard was the double beep telling me that she had disconnected the call. With the phone still up to my ear, I turned to Britt and saw that she was still watching me as our waitress walked away. I pretended that I was still talking to her mother for a few seconds before I started walking back to our table.\n\n \"So?\" she said as I sat down and handed her phone back to her. I looked at her, smiling widely with her nipples pressing hard against her dress.\n\n \"You, young lady, are in deep trouble,\" I told her firmly. \"I do not like being lied to!\"\n\n \"I know, and I'm sorry,\" she replied in a soft, little girl voice. \"But that was the only way that mommy and I could make this work!\"\n\n \"It was mommy's idea! You should be mad at her!\"\n\n \"I'm mad at both of you!\" I told her, acting very firm. \"I do not like being used and manipulated like this! You both lied to me!\"\n\n \"She and I are going to have a long talk when we get home!\"\n\n \"Oooooohh! Are you going to spank her?\" she replied, giggling and taking my hands in hers again.\n\n \"If you are, can I watch?\" she quickly added.\n\n \"Whatever happens to her is going to happen to you, too,\" I told her. \"You are just as guilty, and you just tried throwing her under the bus by blaming all of this on her!\"\n\n \"Ooooooohh! Will you spank us in front of each other?\"\n\n \"Can you handle spanking both of us together?\" she added with a giggle and a little spark to her eyes.\n\n \"Are you sure that you want this?\" I asked her, ignoring her questions.\n\n \"Yes!\" she replied quickly. \"I want this more than anything!\"\n\n We sat there silently as the waitress brought us a round that Britt had ordered while I was talking to Christi. \"I hope you don't mind,\" Britt said softly. \"I thought you might need another one after you got off the phone.\"\n\n I didn't say anything as I picked up my glass and took a long pull off of it. In the background I could hear the DJ announce that he was going to play a short set of slow music, so I stood and took Britt by the hand, leading her out to the dance floor.\n\n I took her in my arms, quickly pulling her body tightly against mine. I heard, and felt, her sigh as she quickly felt my cock start to harden, and she moaned softly as she pressed her hips against me.\n\n She slid her hand down my back, stopping just above my waist, and I slowly started softly sliding my hand up and down her back. When my fingertips reached her lower back, I leaned in and softly kissed her neck, just behind her ear.\n\n \"I want you to tell me,\" I whispered in her ear as my lips caressed her neck, \"everything that you want me to do with you.\"\n\n Britt moaned as I continued kissing her neck and my fingertips gently slid down the crack of her ass. I could feel a pattern of lace under her dress, covering her firm ass cheeks.\n\n \"Ohhhhhhhh! I want you to fuck me!\" I continued kissing her neck, lightly nipping at the soft skin and now cupping her ass cheek.\n\n \"I want you to fuck me, and make me your slut just like you made my mommy,\" she continued, breathing heavily. \"I want you to do everything to me that you do to her!\"\n\n \"I want you to make me cum so hard, and scream so loud, that mommy hears me and gets jealous.\"\n\n I kissed and nipped at her soft skin as I slowly started to drag my fingers back up her ass crack. She gasped as I stopped to press a fingertip even harder against her rosebud. \n\n \"Ohhhhyyeessssss!\" she moaned. \n\n \"What else do you want?\"\n\n \"I want to suck your cock, and swallow your cum, I want to cum all over your face, and I want you to fill me with your cum,\" she moaned, pressing her ass against my finger. \"I want you to fill all of me with your cum, and cover me with as much of your hot, sticky man-juice as you can!\"\n\n \"Are you calling your mother a slut?\" I asked as I slid my fingers back down to her ass and squeezed her cheek.\n\n \"Ohhhhhhgoddddd! My mommy's such a slut for you!\" she breathed. \"She said so herself! She told me that she would do ANYTHING that you asked her to do.\"\n\n \"I want to do the same thing.\"\n\n \"You're sure about this?\" I asked, squeezing her ass cheek again.\n\n \"Yessssss!\"\n\n \"I have to tell you something,\" she said as she looked up at me. \"I was planning on wearing nothing but this dress and shoes tonight, but I've been so wet all day that I had to put on a pair of panties.\" \n\n \"I put on a sexy thong first, but I was so wet that I leaked around it, so I had to put on what I'm wearing now.\"\n\n \"Nice,\" I replied, sliding my fingers up her ass crack again. As I looked over her shoulder, I could see a woman watching us intently.\n\n \"Yeah, but now I've soaked through these panties!\" she told me.\n\n \"Does it excite you even more, knowing that we're being watched? By a woman? Whose eyes are glued to your ass?\" I asked her.\n\n Britt moaned softly, resting her head on my shoulder as we continued swaying to the music. As we moved, I felt her shift her legs so that she was straddling one of mine. Applying a little more pressure, I slid my hand down her back again, pulling her harder against me.\n\n We danced to one more song before making our way back to our table. The waitress came by as we finished our drinks and at Britt's request I ordered one more round. While we waited, I leaned in and kissed Britt, and then told her that I would be right back. \n\n I quickly went down to the main desk and checked in, getting a key card, and then went back up to the bar. I decided to use the washroom, and as I left I saw the woman that had been watching us dance walking down the hallway towards me. We made eye contact as she approached me.\n\n \"You know, when I first saw you with that young woman, I wondered if you were on a date, or out with your daughter,\" she told me. \"Then I saw you dance with her.\"\n\n \"Well, you certainly seemed to enjoy watching us,\" I replied.\n\n \"She is a lovely looking young lady,\" she said, \"and you two make an attractive, and interesting, couple.\"\n\n \"I have to ask, what is a beautiful young woman doing with a man your age?\" she added, stepping very close to me. \n\n \"Not that it's any of your business,\" I told her, \"but she's my girlfriend's daughter. I'm taking her out for her birthday.\" I looked over her shoulder and saw Britt watching us.\n\n \"Your girlfriend's daughter?\" she gasped. \"Does your girlfriend know what kind of relationship you two have? I'm sure she wouldn't appreciate your hands all over her daughter's bottom, or your kissing her!\"\n\n \"Actually, it was her mother's idea,\" I replied, smacking her on her ass. \n\n \"Oh, by the way,\" I added as I walked away, \"I'm not sure which of us you were enjoying watching more, but I wouldn't take too much time in there if you want to see more. We're going up to our room soon.\"\n\n I heard her gasp as I walked away.\n\n \"Who was that?\" Britt asked with a bit of venom as I sat down at the table. \"Where did you go?\"\n\n \"THAT,\" I replied, \"was the woman that was watching your ass while we danced. I'm not sure which of us she's more jealous of, but she's definitely jealous.\"\n\n \"Why? What did she say?\" she asked, gripping her glass tightly.\n\n \"She asked who you were, and pointed out our age difference,\" I told her.\n\n \"What did you say?\" \n\n \"I told her the truth,\" I replied, smiling. I watched as the woman walked out of the washroom hallway, her eyes immediately going to our table.\n\n Britt gasped loudly, and said, \"You told her the truth?\"\n\n \"Of course,\" I replied. \"Why wouldn't I?\"\n\n She looked at me silently for a second, and then asked, \"Why did you smack her on her butt?\"\n\n \"I just felt that it was necessary. After all, she was being a bit nosey. I also wanted to add to her excitement. Give her something to think about while she watches us, and even more when she can't.\"\n\n Britt looked at me for a second, her eyes narrowing to slits. I saw a smirk slowly appear on her face and then she slid off of her stool. \"Let's give her something to watch and REALLY think about, then,\" she said as she took my hand.\n\n I watched her ass sway under her dress as she led me back on to the dance floor, where we danced to the next couple of songs. Britt danced very close to me, rubbing up against me and grinding on me. The DJ then played a couple of slower songs, and Britt pressed her body against mine and I wrapped my arms around her, holding her close. Sure enough, the woman watched the entire time, her eyes getting bigger as I cupped Britt's ass again. From what I could see, the woman's date was not too happy that her attention was on us and not him.\n\n Britt moaned softly as I squeezed her firm ass cheek and looked up at me. \"So where did you go?\" she asked.\n\n \"I went to get us a room,\" I told her, as I bent down to kiss her softly on the lips.\n\n \"You got us a room HERE?\" she gasped.\n\n \"Yes, here.\"\n\n \"Oh my god! These rooms have to be expensive! You shouldn't have done that!\"\n\n \"Why not?\" I replied. \"Would you rather go to some cheap 'no-tell-motel'?\"\n\n \"Well ... no,\" she answered.\n\n \"Your mother told me to treat you the same way that I would treat her, and I am certainly not going to take her to some cheap 'no-tell-motel' for her birthday,\" I told her, \"and I'm not going to do it for you either.\"\n\n Britt looked at me for a second and then pulled my head down to hers. She pressed her lips against mine, kissing me passionately before pulling her lips from mine.\n\n \"Let's go check out that room,\" she breathed, stepping out of my embrace and taking my hand in hers.\n\n I quickly flagged down our waitress and paid our bill as Britt walked to the washroom. I watched as she stopped by the woman's table on the way back to me, and she leaned down to whisper something in the woman's ear. Britt had a big smile as she walked away, and then took my hand again.\n\n \"What was that about?\" I asked her as I noticed the woman's mouth hanging open.\n\n \"I told her that it's too bad she can't follow us. We'd really give her something to watch!\" she replied, giggling as she pulled me by my hand towards the elevators.\n\n A couple of minutes later I held the door open and followed Britt into our room. Her ass seemed to have an extra sway to it as she walked in, giving me a great visual. \n\n \"Wow!\" she said softly as she looked around the room. \"This is a nice room!\"\n\n \"Holy crap! Look at this view!\" she exclaimed seconds later as she stood at the windows, looking at the city. \n\n \"Well, my view is certainly great,\" I replied, as I looked at the back of her body. She looked over her shoulder and smiled at me as I walked up behind her.\n\n \"Thank you,\" she said softly. \"I'm glad you like.\"\n\n \"No,\" I replied as I slipped my arms around her waist. \"Thank YOU!\"\n\n She moaned softly and lay her head back against my shoulder as I hugged her tightly, pressing myself against her ass. I leaned down and gently kissed and nipped at her neck as I slowly slid my hands up the sides of her body. \n\n Britt whimpered when I cupped her breasts, squeezing them softly. She brought her hands up and covered mine, holding them in place as I gently massaged the small, firm globes. I could feel her hard nipples against my fingers and I squeezed her breasts a little more firmly this time, lightly pinching her stiff buds.\n\n She moaned and pressed her head harder against my shoulder. I then felt her press her ass against my hardening cock, grinding against me as her hands squeezed mine.\n\n \"Oh my god,\" she breathed as I continued to kiss her neck and squeeze her breasts a little harder. After a couple of minutes, I pinched the fingers on one of her hands between my fingers and started sliding both hand down the front of her dress.\n\n \"Oh god,\" she whimpered as I slid our fingers over her mound. I could feel the heat radiating from her pussy through her dress and panties as I pressed my fingers against it. Involuntarily, she guided my fingers with hers, showing me where she wanted me to touch her.\n\n I could feel her labia through the two layers of thin lace and I pressed my finger in between them, sliding it slowly up and down. With my hand on her pussy, slowly rubbing it, the other hand on her breast squeezing it and pinching her nipple, and my lips and teeth still working on her neck, Britt must have been on a sensory overload, because I heard her moan loudly as her body leaned harder against mine and then she reached her hands out and leaned against the window.\n\n \"Oh shit!\" she moaned, grinding her ass against my bulge slowly. \n\n I slowly and lightly slid my lower hand up and soon had the fingertips of both hands on the bare skin at the edges of her dress. I slowly slid both hands under the top of her dress, grazing the sides of her breasts as I leaned in closer to her. I then grabbed one end of the thin ribbon around the back of her neck and slowly pulled on it, finally untying the knot. Britt moaned softly as she felt the dress loosen, allowing my hands to slide in a little further and she pressed her ass harder against me. Britt moaned and whimpered softly as I cupped her bare breasts, gently squeezing them.\n\n I looked at her reflection in the window as I continued squeezing her, and pinched her nipples. Britt's eyes were closed as she ground her ass against me harder and leaned her head back against me. I leaned in closer to her ear and whispered, \"Open your eyes.\"\n\n I watched as her eyes popped open and she looked at her reflection. \"I want you to watch yourself,\" I whispered. She nodded slowly, looking into the reflection of my eyes. \"Watch yourself,\" I reminded her.\n\n I then took the ribbon between my teeth again and pulled on it some more. Soon the ribbon was loose and completely untied, and the ribbon between my teeth was the only thing holding the top of her dress up.\n\n Britt gasped and her body stiffened for a second as I let the top drop, exposing her small breasts. \"Oh my god! What if somebody sees me?\" she asked, her hands flying up to cover mine.\n\n \"What if?\" I asked her, squeezing her breasts. \"Let them watch. Let them be jealous of me.\"\n\n She moaned softly, squeezing my hands still under hers as she pressed her head harder against my shoulder. \"Look around out there,\" I told her. \"There's no one out there. It would be very hard for anyone to see up here.\" As I said the words 'very hard' I pushed my hips forward, pressing my hard against her lower back. She moaned and I watched her reflection as she looked outside, trying to verify what I just told her. \n\n I soon felt her grip on my hands relax, and I started sliding my fingertips around the edges of her breasts. \"That feels so good!\" she whispered, closing her eyes again.\n\n \"Open your eyes,\" I told her as I pinched her stiff nipples hard. Britt gasped and her eyes popped back open.\n\n Her hands slid down my arm, stroking my forearms as I teased her breasts. \"Oh my god!\" she suddenly exclaimed, her hands flying up to her chest and covering her breasts. \"Someone is watching us!\"\n\n \"Where?\" I asked. \"Don't point. Just nod your head in the direction.\"\n\n \"Down there,\" she whispered to her bottom right. I then discretely looked over her shoulder and eventually saw a couple, backlit as they stood in their window, looking up at us. He was standing behind her, doing much of the same things that we were doing. \n\n \"They're ok,\" I told her. \"They're playing just like we are. Let them watch. We can watch them, too.\"\n\n Britt moaned and pressed her hands harder against mine. I knew that she was nervous and unsure about being on display like that, so I kissed her on the neck and then slid my hands out from under hers. \"Stay here,\" I told her. \"Don't move. I'll be right back.\" \n\n I then walked over to the table lamp a few feet away and turned it on, and then walked over to the light switch and turned off the main lights. We would now be backlit, just like they were.\n\n \"There,\" I said as I kissed her neck and slid my hands up to her breasts again. \"Now they can only see as much of us as we can of them.\" She looked down and saw that we really couldn't make out many details of our voyeurs, and nodded her head slightly. She eventually relaxed again and slid her hands back down to my forearms.\n\n I looked at her reflection again and saw that she was watching them. I slid my hands down under her breasts and cupped them, lifting the small, firm globes as much as I could. \"You like watching them, don't you?\" I asked her as I pinched and pulled on her nipples.\n\n \"Y ... yesssss,\" she moaned.\n\n \"Tell me what they're doing,\" I whispered as I nibbled the soft flesh just behind her earlobe.\n\n \"Oh god!\" she moaned as she leaned back against me harder. By now I was basically holding her up as I traced my fingertips across her tits. \"He's squeezing her ... her tits,\" she told me.\n\n \"Are they nice tits?\" I asked as I squeezed hers.\n\n \"Yes!\" she replied. \"They're big, and soft, and she's got huge nipples!\"\n\n \"Oh my god! Now he's playing with her pussy!\"",
        "I slid my hands down her sides, stopping at the thin mound of fabric bunched up around her waist. I started to slowly push the dress down when she dropped her hands and grabbed onto my wrists. \"No!\" she said softly.\n\n \"Move your hands, young lady,\" I whispered firmly into her ear. \"Play with your beautiful tits. Show me, and them, how you like your breasts and nipples played with.\"\n\n Britt moaned softly and nodded her head, and then brought her hands up to her breasts. I pushed her dress over her thin hips, dropping it to the floor and leaving her in only her boy-short panties and heels as she moaned and pinched her nipples.\n\n \"Are they still watching you?\" I asked her.\n\n \"Yes,\" she hissed as I slid my fingers up and down the lace of her tight panties. I could feel the dampness and heat radiating from her pussy as she moved her hips, pressing her mound against my hand.\n\n \"Oh god! Now he's fingering her! I can see her moan!\"\n\n \"Mmmmmmm! Is he doing something like this?\" I asked as I slid my hand down the front of her panties.\n\n \"Ohhhhh! Yessssss!\"\n\n \"Oh shit!\" she gasped, her knees buckling for a second as my fingertips slid down her wet lips on both sides of her clit. Her hands dropped and clamped down on my arms as she steadied herself. \n\n I slowly slid my fingers up and down her slit a couple of times, avoiding her clit, and then dipped one fingertip through the seeping wetness and into her hot pussy. \"Oh shit!\" she whimpered, pressing her hips towards my hand.\n\n With my one arm wrapped around her body, teasing and playing with her nipple, and the other one on her pussy, Britt was moaning louder. Her hips were moving back and forth, alternating between pressing her ass against my cock and then her pussy against my probing finger. I looked at the reflection of her face again, and she was still watching the voyeurs.\n\n \"Oh god!\" she breathed. \"She's getting on her knees! She's going to ... she's going to suck him off!\"\n\n \"Luck guy!\" I replied. \"Do you want to keep watching?\"\n\n \"Yes! No! I ... I don't know!\" she whimpered. \n\n \"Oh my god! Please take me to bed!\" she begged a couple of seconds later, turning her head to kiss me. \"I don't care about them anymore! I just want you! I want to feel you! I want you to make love to me! To fuck me good! And hard!\"\n\n \"Ok little girl. Wave good-bye to your new friends first,\" I told her. I watched as she raised her hand and waved, giggling a second later. I looked over her shoulder and saw that the woman was till on her knees. Both of them were looking up at Britt, waving to her. I then raised my hand over her shoulder and waved at them before reaching down and picking her up.\n\n Britt yelped as I picked her up and started carrying her to the bed. I gently laid her down and joined her, kissing her soft lips. Moaning softly into my mouth, she wrapped her arms around me and held me tight as she kissed me, her bare leg wrapping around me.\n\n I lightly slid my hands up and down her body, her smooth skin soft under my fingertips. Britt moaned into my mouth as our tongues danced and dueled together. I gently squeezed her breasts, lying flat on her chest, and lightly pinched and pulled on her nipples. Then I slid one hand down, lightly tickling her belly on my way below her waist.\n\n \"Oh god, yes!\" she moaned loudly as my fingertips slid across the front of her panties, pressing lightly on her wet lips. She held me tighter and raised her hips up, pushing her mound harder against my hand. I continued caressing her pussy through her panties, avoiding her clit. I pushed my fingers harder against the warm, wet opening to her pussy, forcing a little of the damp lace inside her. \n\n It was then, as she held me tight and started sliding her hands up and down my body, that Britt realized that I was still dressed. \"Somebody has WAY too many clothes on!\" she said, squeezing my ass.\n\n \"Yeah, but I was about to rip your panties off of you,\" I teased, tapping lightly on her clit. Britt moaned and then pushed away from me. Rolling over, she grabbed my shoulders and lay me flat on the bed.\n\n \"I meant YOU!\" she giggled, slapping my arm. \"And you will NOT rip these off of me! I love these panties, and I paid a lot of money for them!\" I didn't say anything as she then sat up and started pulling my suit jacket off. \n\n Soon Britt had my jacket off and my shirt unbuttoned, and was pulling my shirt off of me. As she dropped my shirt on the floor I reached up and started pulling my tie over my head. \"No,\" she said, reaching her hands up to mine. \"Leave it on. You look SO HOT like that!\"\n\n I rested on my elbows and watched her as she straddled my legs and she started on my pants. She unbuckled my belt, opened my pants, and then slowly lowered my zipper. She started pulling on the waistband and I raised my hips, letting her slide my pants all the way down and off of my legs.\n\n Britt exhaled sharply and slowly as she straddled my legs again and looked down at my bulging silk boxers. Silently, she wrapped her fingers around my hard rod and squeezed it softly. Her eyes slowly travelled up my body until she was looking in my eyes. She smiled and leaned down to kiss me before sitting up again. She then hooked her fingers under the waistband on my drawers and started to pull them down as she looked back down again.\n\n \"I've wanted to see this up close for a long time,\" she breathed as she got the waistband down to the base of my shaft.\n\n I raised my ass and she whimpered softly, and then pulled my shorts down just above my knees. My hard cock soon popped free, springing up proud.\n\n \"Holy crap!\" Britt moaned softly as she looked at my rigid pole. \"No wonder mommy's always so happy!\"\n\n \"Can I tell you something?\" she asked, her eyes locked on her hand wrapped around my thick shaft as she slowly stroked me.\n\n \"Of course.\"\n\n \"I've watched you with mommy,\" she said, still watching her hand and my cock.\n\n \"I know,\" I told her. \"I caught you, remember?\"\n\n \"I remember that,\" she giggled as she looked up at me for a second. Her eyes then dropped back to the slow hand job she was giving me. \"That was hot!\"\n\n \"But I'm not talking about that time. I watched you before that.\"\n\n \"Oh really?\" I asked and she giggled again, nodding her head. \"When?\"\n\n \"When you first started fucking my mommy,\" she told me. \"The night of Jackie's party at the bar and I left early. I wanted to leave because Allie told me that she was going to fuck her boyfriend on the bench.\"\n\n \"She told me that I should get there first and hide in the trees so I could watch them,\" she continued as her hand stroked me a little faster.\n\n \"I just got to my hiding spot when you and mommy walked up.\"\n\n \"I got to watch you and mommy, AND Allie and Donnie. That was SO hot!\"\n\n \"You like to watch, don't you?\" I asked as I reached my hand up to stroke her breast. Britt moaned and nodded her head. \n\n \"Yessss!\" she replied, stroking me faster. \"That's so hot!\"\n\n \"What were you doing while you watched us that night?\" \n\n \"Ohhhhh!\" she moaned as she slid her hips forward, resting her pussy against the back of my shaft. \"I played with my pussy.\" \n\n \"I was SO WET!\" she moaned, flexing her hips and pressing her pussy against my hard cock while she continued to stroke me. \"It was so hard not to scream when I came! I couldn't let myself cum too hard because everybody would have heard me! I had to wait until later!\"\n\n \"Is that the only other time you've watched us?\" I asked.\n\n \"No,\" she replied quietly.\n\n \"I play with my pussy, and I cum every time!\" she moaned. Her eyes were still locked on her hand and my cock.\n\n \"Every time?\" I repeated. \"You watch us a lot?\"\n\n \"I've watched you a few times,\" she giggled as she squeezed my rod harder and stroked me a little faster.\n\n I moaned at her actions, and then, without a word, Britt slid back and leaned down, kissing the head of my shaft. I moaned a little louder and she looked up at me. I looked into her eyes as she lay down on her stomach and took a long, slow lick from the base of my pole all the way up to the head. \"Do you like to watch?\" she asked, looking back up at me.\n\n \"Yes, I do,\" I moaned as she flicked her tongue around the rim of my head.\n\n \"Good. Watch this.\" Britt then grasped my cock firmly at the base and wrapped her lips around the rim of my head. Looking up at me again, she then slowly lowered her head, sliding her lips down my length.\n\n \"Oh damn!\" I moaned as I watched her lips go further down my rigid pole. Keeping her eyes locked on mine, Britt was able to take all but about an inch of my hard cock before slowly sliding her lips back up. She then repeated her actions for the next couple of minutes, taking me deep down her throat and then back up, leaving just the head in her lips.\n\n \"I heard mommy tell my aunt Toni that you have a nice cock,\" she said, stroking my shaft and looking closely at it, \"but she lied. You have a beautiful cock!\"\n\n \"Thank you,\" I moaned as she took me in her mouth again. \"I'm glad you like.\"\n\n \"Mmmmmmm! I like it a lot!\"\n\n \"She probably lied so aunt Toni wouldn't try to steal you from her,\" Britt said. \"Aunt Toni is a big old slut! She'd love your cock!\"\n\n She then started sucking me off again, with even more enthusiasm. Britt was an excellent cock sucker! As good as her mother was, Britt may have been a little better. She showed the same passion and dedication, but seemed to have a little more raw, natural talent. Christi told me that I was only the third guy she'd been with, and she didn't do it much for Joe since he wouldn't go down on her, so maybe Britt just had more practice. Whatever the case, she was definitely good! She was very good!\n\n \"Oh damn!\" I moaned as I lay back on the bed. Britt started sucking harder and faster on my rod and I reached my hands down and held on to the back of her head. \n\n Britt moaned as I gathered her hair hanging around her face and held it at the back of her head. She then started bobbing her head faster, slowing down a few times to try to take me deeper. \n\n After a few pleasurable minutes of her sucking my cock, she pulled her lips back and started licking up and down the length of my shaft. As she licked around the base, she dipped her head even lower and licked my balls. She then started stroking me as she wrapped her lips gently around my balls and started sucking on them.\n\n \"Oh yeah!\" I moaned, holding tighter to her hair. Britt moaned with me and then dragged her tongue in a long, slow lick back up my cock. \n\n \"Oh damn!\" I moaned as she lowered her face back down my rod, tightening her lips. Sucking harder on my cock, Britt started working like a woman possessed. She had definitely inherited her mother's passion as well as her body and looks.\n\n That thought brought me back to Christi's comment about how Britt's body was like hers when she was that age. I lifted my head and looked down at Britt, taking in the full view of her lean body, only her ass still hidden under the thin burgundy lace.\n\n \"If I make you cum, can you get it up again?\" she asked as she released my cock and licked around the rim of the head. \n\n \"I know how you old guys are,\" she teased.\n\n \"And just how do you know that?\" I asked her, raising my eyebrows.\n\n Britt giggled and said, \"Angie used to fuck one of her college professors. She said he was a 'one-and-done' kind of guy\" as she stroked my shaft.\n\n \"I really want you to cum in my mouth, but I want to feel you inside me more.\"\n\n \"No worries little girl. I plan on fucking your brains out tonight. A couple of times. I'll get it up again just fine.\"\n\n \"Ooooooohh! That sounds like fun!\" she replied. She then attacked my cock with a determined gusto, desperately trying for my cum. She was doing a damn good job!\n\n \"Oh damn, little girl!\" I moaned a few minutes later. \"Keep that up and you're going to get your reward!\"\n\n \"MmmHMM!\" she moaned, trying to swallow my pole. We locked eyes as the tip of her nose rested just above my pubic hair, and I could feel her tongue trying to wiggle around.\n\n Britt kept her eyes locked on mine as she slowly slid her lips back to the top of my shaft and then back down a few more times. The sight of her beautiful eyes looking deeply into mine, with her firm, shapely ass just below it, combined with the recurring memory of what Kristi had said about Britt's body looking like hers when she was younger and the sensations that Britt was giving me soon brought me to the edge. \n\n \"Oh shit, little girl!\" I moaned loudly. \"You're gonna make me cum!\"\n\n Britt moaned, \"MMmmHHMMMMM!\" again and sucked me harder, taking me as deep as she could and holding me there for a few seconds before sliding her face back and then bobbing her head up and down quickly. It only took a few more seconds before I felt myself going over.\n\n \"Oh DAMN!\" I bellowed as I held Britt's head tightly. I bucked my hips up and down, fucking her face. I felt my balls tighten up and they exploded, spewing their load down her throat.\n\n Britt moaned loudly pulled her face back, keeping just the head of my cock in her mouth as she swallowed my cum. She slowly stroked my shaft, trying to milk the last of my thick load from me as I tried to catch my breath.\n\n \"Holy crap!\" I moaned as I felt the cool air hit my wet, slowly deflating pole when she finally released it. \"That was incredible!\"\n\n \"Thank you!\" she giggled as she crawled up and lay next to me. I turned my body and kissed her and I felt her body stiffen.\n\n \"What's wrong?\" I asked her.\n\n \"Nothing,\" she replied. \"No guy has ever kissed me after they came in my mouth. You just surprised me.\"\n\n I wrapped my arm around her and lay back, still recovering, and she asked, \"So, am I as good as my mommy?\"\n\n \"Little girl, don't ask questions like that,\" I told her as I raised my body to look at her. \"You know better than that.\"\n\n \"Why? What are you going to do, spank me ... daddy?\" she replied, smirking at me.\n\n \"If necessary,\" I told her. \"I would never compare you with your mother, or compare any two lovers, so don't ask me to.\"\n\n \"Ooooo! A sensitive spot!\" she said, raising herself up on an elbow. \n\n \"Don't worry. You can tell me the truth. I'll never tell my mommy!\"\n\n I then quickly sprung up and grabbed Britt by the waist. She squealed loudly as I pulled her to me and lay her across my knees. \"I warned you, you little brat,\" I growled as I ripped her lace panties off of her ass. She gasped loudly at the sound of her panties ripping and started wiggling, trying to get out of my grasp, but I lay my arm across her lower back, keeping her in place. \n\n She yelped at the first hard smack, finally realizing that I was serious. By the time I had given her the fifth blow, she had stopped trying to fight me and she almost sounded like she was trying not to sob. I then held her in place and started to softly massage her ass cheeks and she soon was moving her hips, moaning at my caresses.\n\n \"I told you to stop,\" I whispered as I leaned down to her ear, \"but you wouldn't listen. I hope you learned your lesson.\"\n\n \"Yes, daddy,\" she whimpered as the fingers of one hand started sliding down the crack of her ass. \"I'm sorry.\"\n\n \"And no, you're not better than your mother. You are good. You are very good, but you're not better. One day, you could be as good, but not now,\" I told her, wondering about her calling me \"daddy.\" \n\n Britt just nodded her head as I traced her puckered asshole with one finger. She moaned and gasped, and whispered, \"I'm sorry,\" again. \n\n She started raising and lowering her hips, pushing her ass against my finger, and I rolled her onto her back off of my lap, and she gasped at the feel of the sheet on her sore, red ass cheeks. Silently, I lay between her legs and then grasped what remained of her panties and ripped them off of her, tossing them to the floor. As I looked up the length of her lean body, I again remembered her mother's comment comparing their bodies. \n\n Britt's nipples were rock hard, standing tall on her small breasts, and when I looked down I saw her juices seeping from her smooth, bald pussy, shiny with her nectar. I looked back up at her face and saw her looking down at me with a look of desperation and lust.\n\n I smiled at her and spread her legs as I leaned down. I had to pause as I looked at the sight before me, wondering how the hell I got into this situation, and how lucky I was. \n\n My eyes took in the beautiful, bald pussy in front of me, the different shades of pink glistening with her copious juices. It was obvious that she had done a full Brazilian waxing, as her shin was far too smooth to have just been shaved. My eyes eventually roamed up the length of her body, taking in the sight of her firm, smooth skin, nearly flawless in its appearance and her small, firm breasts, and I again flashed back to her mother's comment. I slowly shook my head, hoping that this was real and not some kind of weird dream that I would sadly wake up from.\n\n I slid my hands down her legs towards her ass and gently massaged the flesh around her mound, avoiding her pussy. She was so turned on that her labia were already spread wide, like a beautiful butterfly, dripping with her nectar. Using my thumbs, I spread the skin around her clit open a little more and then leaned in.\n\n I first placed a kiss just above her clit and she moaned long and soft, raising her hips up to my face. I then placed my hands under the backs of her thighs and pushed them back, opening her legs wide. Leaning in to her, I stuck my tongue out and slid it into her wet pussy, coating it in her juices, and then slowly slid it up her slit, stopping short of her clit.\n\n \"OOOhhhhYYEEEAAAAAHHHHH!\" she moaned loudly, moving her hips in an attempt to make me lick her clit. Teasing her, I flicked my tongue all around her stiff little bud, bringing out louder moans.\n\n Finally, I pulled my head back a little and then dove in, attacking her clit with my tongue. I licked up and down the length of her little shaft, batting around the tip before I pressed my face against her pussy and started sucking on her clit.\n\n \"OH MY GOD!\" she shrieked, reaching down and grabbing my head. She held it firmly as I sucked on her clit and arched her back, pressing her mound against my face.\n\n I gave her clit one more hard suck and then leaned my head back, freeing it from her grasp. \"Hold your legs up,\" I told her, pushing them back a little more.\n\n It took her a couple of seconds to respond, but she eventually grabbed onto the backs of her knees and pulled them back even further. I smiled at her and leaned back down, giving her pussy another long, slow lick.\n\n \"Oh my god!\" she moaned softly when I started licking at her clit again. \"Sooooo gooooood!\"\n\n A few seconds later I wrapped my lips around her clit and started sucking on it again. I slid my hand up and placed a fingertip at the seeping opening of her pussy and it slipped in when she lifted her hips again, causing her to moan loudly.\n\n I sucked on her clit, flicking at it with my tongue, as I wiggled my fingertip around just inside her. Britt was moaning louder by now, her pitch getting higher. Just like her mother did when she was going to have a big orgasm.\n\n I quickly added a second finger and slid them both in, pressing on the top of her pussy. Britt was so wet that both fingers slid all the way in with little effort, even as tight as she was. \n\n \"Oh my god!\" she exclaimed loudly as I curled my fingers around the back of her pubic bone. I released her clit from my lips and started flicking my tongue at it lightly and quickly and she gasped. I felt her legs fall over my shoulders and her hands dropped back to my head. \"Ohmygod! Yes! Oh shit yes!\"\n\n I wiggled my fingers and started jerking my hand back and forth as I pressed harder against the underside of her pubis. \"Oh fuck! Oh yes! Right there! Oh fuck yes!\" she exclaimed loudly.",
        "I started sucking on her clit once more and she gripped my head, pulling it in hard. \"Oh fuck I'm gonna cum!\" she yelled. \"Don't stop! Oh shit please don't stop!\"\n\n \"NNNNGGGHHHHOOOOOHHHHH!\" she screeched a few seconds later as I thrust my fingers in deep and bit down lightly on her clit.\n\n \"OH MY GOD! YES! OH FUCK I'M CUMMMMMMIIINNNNNGGG!\"\n\n Britt's hips were bouncing off of the mattress and I felt her pussy clamping down around my fingers as I continued my oral assault on her. She continued making loud noises, not really saying any words, and her body shook. I could feel my fingers and hand being coated in her gushing juices.\n\n I released her clit from my lips and flicked my tongue softly at it and her ass dropped to the mattress. She released her grasp on my head and her hands dropped to her side. She started moaning softly, her pitch still high but returning to normal.\n\n \"Oh my god,\" she whimpered. I flicked my tongue at her clit again and her body jumped.\n\n \"Oh shit!\" she moaned. \"Stop! I'm so sensitive!\"\n\n I slowly slid my fingers out of her, keeping the pressure on the top of her pussy, and leaned down to give her clit a soft kiss. Britt moaned and I started kissing my way up the length of her body, stopping briefly to lick and suck on her nipples.\n\n I continued my way up and lightly lay on top of her as I kissed her. She wrapped her arms around my neck and held me tightly, moaning into my mouth as she tasted herself on my lips.\n\n \"Holy shit that was amazing!\" she moaned as we ended our kiss. \"That was the most intense orgasm I've ever had!\"\n\n \"Good,\" I replied as I kissed her again. \"I'm glad you enjoyed.\"\n\n \"No wonder mommy says you have an amazing tongue!\"\n\n \"Sweetheart, I'm just getting warmed up!\"\n\n \"Oh my god! You're going to kill me tonight!\"\n\n \"At least you'll die with a smile on your face,\" I teased her. I then raised my hips and moved them around as I looked into her eyes, lining the head of my rehardened cock with her still dripping pussy. Her eyes opened wide and she just nodded silently, and I slowly slid the length of my shaft into her.\n\n \"Ohhhhmyyygoddddd!\" she whimpered as I pressed my hips against hers. Her pussy was hot and wet, and I could feel her walls squeezing my cock.\n\n \"Such a tight pussy!\" I moaned as I pushed against her.\n\n \"You're so thick!\" she replied. I started to slowly slide my cock back and forth and she reached her hands down to my ass and held it. \"Don't move!\" she pleaded. \"Let me get used to you!\"\n\n I bucked my hips forward and she yelped, her eyes popping open wider again. I then leaned down and kissed her, moving my hips in small, short thrusts as she wrapped her arms and legs around me while our tongues danced together and she moaned into my mouth.\n\n I soon started moving my hips again, and I quickly felt Britt moving hers in a matching rhythm. I broke our kiss and lifted my body as I started taking longer strokes in and out of her as she moaned loudly. I lifted her legs and pushed them back and rested her ankles on my shoulders.\n\n \"Yesss! Fuck me! That feels soooo good!\" she moaned as I began moving again.\n\n I started taking long, slower strokes in and out of her, alternating them with a few that were short, fast, pounding. Britt's moans were getting louder and higher pitched, much like her mother's, and she was moving her hips in rhythm with me so I knew that she was getting ready to cum. I slammed my hips forward, bottoming out my cock and causing her to yelp loudly.\n\n I stayed like that, my rod buried deep and her feet behind my head, and bumped my hips against her, pushing just a little deeper into her.\n\n \"Oh my god! That is so good!\" she whined.\n\n I slowly slid my hands up her legs and wrapped my fingers around her ankles. I pushed her legs back and slowly slid my cock out of her, bringing a low moan from her. Still holding her ankles, I rolled her over onto her stomach. Britt yelped in surprise as she settled on her belly and then looked over her shoulder at me.\n\n My eyes slowly traveled the length of her body, from her still-heeled feet up to her sexy eyes, looking back at me as I straddled her legs and knee-walked up dragging my slick cock up between her firm stems until it rested against her pussy. I leaned down and kissed her as I moved my hips around, trying to line it up with her steamy hole.\n\n I leaned back a little and got the head of my shaft in place and then lowered myself to kiss her again as I started sliding back inside her.\n\n I moved her hair away from the back of her neck and started kissing her tender, sensitive flesh as I very slowly slid another inch inside her. I kissed my way to her ear and whispered, \"Slide your hand under your belly and play with your clit.\"\n\n Britt gasped and moaned, and as I started to slowly slide just the first inch or so in and out of her she raised her hip. I soon felt her fingers start to press against the top of her mound and she started to moan a little louder as I straightened my body. \n\n I moved my hands to her hips and held tightly as I continued teasing her with just the little bit of my cock. She moaned again, and then I thrust my hips forward, bottoming out my cock inside her once more. \n\n \"Ooooooof! Oh damn!\" she gasped. I rubbed my pubes against her ass and felt her fingers moving a little faster on her clit. \n\n I started sliding my pole back and forth, fucking her tight pussy again as she continued playing with herself. \"Oohhhh yeeeaaaahhhhh!\" she moaned into the bed. \"So deep! So full!\"\n\n I felt her feet brushing against my ass as I thrust in and out of her so I reached back and grabbed on to her heels. Then I pulled up on her feet, raising her hips.\n\n \"Ohfuckyesssssss!\" she moaned loudly. \"Fuck me daddy! That is so good!\"\n\n I started fucking her faster and harder and reached up and grabbed a handful on her long hair. \"Oh yeah!\" she exclaimed as I pulled her hair. \"Give it to me! Fuck me good!\"\n\n I then shifted my body a little higher on hers a little, changing the angle that I slid in on. \"OH YES!\" she yelled, rubbing her pussy even faster. \"FUCK ME!\"\n\n I took longer strokes, sliding most of my shaft back and then plunging deep again as my cock rubbed against the underside of her clit. \"Ohmygodyessss!\" she moaned.\n\n \"Oh shit! I'm gonna cum! Fuck me! Fuck me so good!\"\n\n I dropped her feet and grabbed onto her firm ass cheeks, squeezing them and pulling them apart. \"Ohmygod! Yes! Fuck me baby!\"\n\n A few seconds later she slapped the bed with her free hand. \"Ohfuckyes!\"\n\n \"Oooohhhhh! NnnnnGhhhhhhaaahhhhhhhh!\"\n\n She grabbed onto the sheets and pulled them towards her.\n\n \"Ohhhhyeaaahhhh! Oh my god, yeaaahhhh!\"\n\n I looked down at her and saw a thin sheen of perspiration coating her back. I thrust my hips forward, bottoming out my pole. \"Ooohhhhhmyyygodddddyyeeeaaaahhhhh!\" she exclaimed loudly as I felt her pussy walls spasm around my shaft. \"NnnnnGhhhhhhooohhhhhhhh!\"\n\n Britt's body shook a little as she came all over my cock. I could feel her juices flowing down my balls as I kept my shaft buried deep. I saw her arm stop moving and she collapsed onto the bed. I waited a few seconds and then started sliding my cock in and out again.\n\n \"Holy shit!\" she moaned softly, her voice still high-pitched. \"Holy crap! You haven't cum yet?\"\n\n \"Not even close,\" I told her as I continued slowly fucking her.\n\n \"Oh my god! I can't believe this!\" she moaned into the mattress as I grabbed and separated her ass cheeks again.\n\n I leaned a little further back and took a few long, slow strokes and then pulled harder on her ass cheeks. Without a word, I started slamming in and out of her tight, wet hole.\n\n \"Oh fuck!\" Britt yelled as I fucked her hard and fast. \"Shit!\"\n\n After a long few seconds I released her ass cheeks and watched them bounce as I continued slamming into her. I then reached up and grabbed a handful of her hair and pulled back on it.\n\n \"Yes! Give it to me!\" she yelled loudly as she started thrusting her ass back at me. \"Fuck me hard!\"\n\n \"Oh my god! I'm gonna cum again!\"\n\n I was starting to wear down and I felt myself getting close to cumming so I slammed my hips forward once more and leaned my upper body down, still holding tightly to her hair. Britt moaned as she felt my body shift on top of hers, and my pole shift inside of her, and then she gasped and thrust her hips up at me as I softly bit and nibbled just behind her ear. \n\n \"I want you on top of me,\" I breathed into her ear. \"I want to watch your hot body ride me.\"\n\n Gasping softly, she turned her head towards me. \"I've never been on top before,\" she moaned as I ground myself against her ass.\n\n Surprised by that, I just told her, \"Well then this night is going to have even more firsts for you.\"\n\n \"Yessssssss!\" she hissed. I then slowly slid my shaft, coated in her thick nectar, out of her gripping pussy as I straightened my body again.\n\n I looked down at her prone body, her back rising and falling sharply, and slapped her ass cheeks with my slick pole as she moaned. I pulled her cheeks apart again and slowly slid my shaft up and down the crack of her ass, causing her to gasp and then moan loudly as she moved her hips in unison. \n\n Moving my body off of hers, I rolled over and slid back until I was leaning against the headboard. Britt moaned softly and then turned her head to look at my cock, standing tall and shining with her juices. As I looked down at it, I thought to myself that it was bigger and harder than it had been in a long time, even with Christi.\n\n Britt looked at my rod and then leaned over, sliding her lips down my length. I moaned as she looked up at me, her nose brushing my pubic hairs. She then slowly pulled her head back and sucked on the head, flicking her tongue around.\n\n \"Oh yeah!\" I moaned. \"You are so good at that!\"\n\n \"Better than mommy?\" she asked me for the second time. Abruptly, I reached a hand down and grabbed her hair, pulling her mouth off of my cock. Holding on to her hair, I quickly slid my body down and then smacked her ass, hard. Britt yelped in surprise, and I said, \"I told you not to ask me questions like that!\" as I smacked her ass again.\n\n \"Owwww! I'm sorry!\" she replied. \"I forgot!\"\n\n \"You didn't forget!\" I told her, spanking her again. \"Don't lie to me!\" I then spanked her again. harder.\n\n \"Now,\" I said as I slid back to the headboard, \"clean my cock off, you naughty little slut!\"\n\n \"Yessss!\" she replied as she rubbed her ass and rolled back over to me. \"I'm a slut! I'm YOUR slut! Daddy's slut!\"\n\n She then plunged her face down the length of my rod, taking me as deep as she could. \"I love the way that I taste on you!\" she said a couple of minutes later as she released me from her warm mouth.\n\n To my surprise, she then added, \"I can't wait to see how my mommy tastes on your big cock!\"\n\n Before I could say anything, she crawled up and straddled my body as she held tightly to the base of my cock. Looking into my eyes, she then slid the head up and down her wet slit and lined it up with her dripping hole.\n\n We both moaned loudly as she slowly lowered her ass, sliding her pussy down the length of my cock.\n\n \"Oh my god!\" she breathed as she slid down further, her hands on my chest. \"I feel so full! Your cock is so thick!\"\n\n I leaned back and watched as she slowly slid up and down on me, going a little deeper each time. After a few minutes she stopped and looked down at our juncture.\n\n \"Holy shit!\" she whimpered. \"I can't believe that I don't have all of you yet! I'm so damn full!\"\n\n I smiled at her and started moving my hips and she gasped, digging her fingers into my chest. \"Yessssss!\" she hissed as she started moving with me.\n\n I looked down and saw that she still hadn't taken all of my cock, so I slid my hands to her hips and then pulled her down hard. Her eyes popped open wide and she yelped, and then moaned softly.\n\n \"Ohmygod! Ohmygodohmygod! How did you do that? I've never even had a toy this deep!\"\n\n I just smiled at her and told her to ride me as I smacked her ass cheek. She yelped again, and then started sliding her ass back and forth, grinding her bare clit against me as my cock slid inside her pussy.\n\n \"Oh fuck, this is good!\" she moaned as she started moving her ass. I watched her small tits shifting in her chest as she moved her ass even faster.\n\n Britt's moaning got louder and she gripped my chest harder as she rode me. Before I let her cum though, I slid down a little until I was lying flat and pulled her with me. As soon as she started riding me again I did something that made Christi cum, and at the very least gush profusely if not squirt, every time.\n\n As she continued riding me I reached up and pulled her body down to mine, pressing her small tits into my chest. I then slid my hands down to her ass, grabbed her cheeks, and pulled on them again, and at the same time I started jack-hammering up into her. Britt reacted almost identically like her mother did, yelping as she wrapped her arms around my shoulders.\n\n \"Ohmygodyes! Fuck me! Oh shit! On fuck! Oh my god!\" she exclaimed loudly as I continued pounding into her. \n\n After a couple of minutes, she tried to straighten her body and I quickly reached a hand up and grabbed her by the hair again, and pulled her back down to me. Britt latched her lips onto mine as I continued fucking her fast and hard and she started moaning louder into my mouth.\n\n Soon, she broke our kiss and turned her head. \"OHMYGODYES! OHMYGOD! OHMYGOD! OHMYGOD!\" she yelled. \"OHSHIT! I'M CUMMING! OHMYGODI'MCUMMING!\"\n\n I held her tightly and I felt a sudden surge of pussy juice pouring down my balls. Britt screamed in ecstasy as her pussy spasmed around my shaft.\n\n \"Holy shit!\" she exclaimed a few seconds later. \"Stop! Holy fuck! Stop!\"\n\n I released her hair and slid my hand from her ass, placing both hands on her hips as she collapsed on top of me. \"Holy shit!\" she moaned softly. \"What did you do to me?\"\n\n \"I made you cum,\" I told her as I slowly moved my hips up to her. \"I made you squirt.\"\n\n \"Cum? Squirt?\" she moaned as she looked down at me. \"That felt like a million explosions going on inside of me! I've never felt anything like that!\"\n\n \"Good,\" I replied as she moaned again. \"I'm glad that I could do that for you!\"\n\n \"Holy crap!\" she whimpered. \"I'm still trembling!\"\n\n Britt then looked down at me with pleading eyes. \"Please make love to me now,\" she asked. \"I want you to cum for me. I want to feel you cum inside of me!\"\n\n \"I can do that,\" I told her, smiling at her.\n\n \"But we have to move,\" she whined. \"You have to be on top. You drained me!\"\n\n I pulled her back down to me and kissed her again and then, holding tight to her, I rolled us over, placing her on her back.\n\n \"Yes!\" she hissed as I lay on top of her and gently thrust my hips forward, pushing my pole further in. \"Oh god! Please make love to me now! Fuck me like you love me!\"\n\n I felt her heels press against the backs of my thighs as she wrapped her legs around mine, and I leaned in, placed my hands on the sides of her face and kissed her. Britt moaned into my mouth as we kissed and I started moving my hips, sliding my rigid pole in and out of her pussy.\n\n I soon felt her raising her hips to reach mine as I made love to her, and it wasn't long before I pulled my lips from hers and she started moaning louder.\n\n \"Ohhhh yeeaaahhh!\" she breathed. \"Yesssss!\"\n\n After a couple of minutes, I straightened my body and slid my legs forward, elevating her ass and draping her legs over the tops of mine. \"Oh fuck yeah!\" she exclaimed, feeling my cock rubbing against the underside of her clit.\n\n With my hands gripping her hips, I started fucking her faster, bringing out louder moans. Britt was raising her hips up at me harder, and from the sounds of her breathing I knew that she was going to cum again soon.\n\n I then took one of her hands off my forearm and brought it down to her pussy. Her eyes opened wider and I just smiled and nodded at her. \"Oh yeah!\" she moaned as she started sliding her fingertips across her stiff clit as I continued fucking her.\n\n \"Oh shit! This is so good!\" she whimpered. \"Do you make mommy do this for you too?\"\n\n \"I don't make your mother do anything,\" I grunted as I fucked her harder. \"She does it because it makes her cum harder.\"\n\n \"Oh yeah! Fuck me harder! I'm gonna cum again!\"\n\n \"Me too, baby,\" I replied. \"I'm not going to last much longer!\"\n\n \"Yes! Fuck me! Cum with me!\" she exclaimed loudly, rubbing her clit faster. \"Fill me up!\"\n\n I slid my hands up the backs of her legs and pushed them back. Britt pressed harder against her clit and moaned louder as I looked down at her body, immediately remembering once again Christi's words comparing their bodies. That thought, along with the sight of her body and the feel of her hot, wet, tight pussy quickly pushed me to the edge.\n\n \"Oh damn, baby! I'm gonna cum!\" I grunted as I fucked her faster.\n\n \"YES! Fuck me! Cum with me! I'm so close too!\"\n\n \"OHMYGOD! OHMYGOD! OHMYGODYESSS! FUCK ME! OH FUCK, I'M CUMMING!\" she started screaming as I felt her pussy clamp down on my cock again.\n\n Britt's body was covered in a light coating of sweat and she started shaking. Her hand flew back up to my arm and she squeezed down tight with both hands as she humped her hips back up at me. \n\n That was all I could take. I started slamming my cock deep inside her and quickly felt my balls start to contract. \"Oh damn!\" I bellowed seconds later as I buried myself deep inside her. My balls exploded, spewing their load against her cervix. \"Oh shit!\" \n\n \"YES! OH FUCK YES! I CAN FEEL YOU FILL ME UP! OH MY GOD, SO GOOD!\" she screamed as she dug her nails into my arms.\n\n I groaned loudly as I continued cumming. I could still feel her pussy pulsing around my shaft as my hips bucked up against her.\n\n \"Oh my god!\" she moaned a little softer. \"I can feel you throb inside me! That feels so good!\"\n\n \"Oh damn!\" I moaned again as I felt the last of my load slowly drip from me. Britt reached up and wrapped her arms around me, pulling me down to her. She then started kissing me passionately as she pushed her hips up at me again.\n\n Finally, after a few more seconds, I broke our kiss and started rolling off of her, sliding my slowly deflating shaft from her pussy. I collapsed onto the bed, rolling onto my back as I caught my breath. I heard Britt moan softly, and then I felt her roll over, laying her head on my shoulder as she draped her arm across my chest. \n\n \"Holy shit! That was fucking amazing!\" she breathed.\n\n \"I'm glad that you liked it,\" I told her as my hand slid up and down her back.\n\n \"Liked it?\" she asked. \"You made me cum more tonight than I ever have. EVER! TOTAL!\"\n\n I squeezed my arm around her shoulder a little tighter and she sighed as she whimpered softly. I soon felt both of our bodies start to relax, and just before her body jerked as she fell asleep, I heard her whisper, \"I love you daddy.\""
    ],
    "authorname": "cuninglinguist61",
    "tags": [
        "neighbor",
        "proposal",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-neighborly-bet-ch-05"
}