{
    "title": "There and Back Again Ch. 156",
    "pages": [
        "Chapter One Hundred Fifty-Six: Success and Failure \n\nWhen I finally met with Rolan, Anders, and Solona, it was even more difficult to explain everything than I'd expected. The first hurdle was that Rolan and I had never discussed my origin or knowledge. He'd been told by others, of course, but had never had the opportunity to ask me questions. He wanted to know what I knew about him from the game. \n\nI lied. For the first time since coming to Thedas, I looked straight into someone's eyes and lied. \n\nI didn't think I could explain his relationship with Anders post-Awakening without giving away the problem with Justice, and I had no intention of telling anyone else about that possibility. Bad enough Solona, Aedan, and Alistair know. And besides, Rolan had been through so much worse, and come out the other side a better person. Learning that he'd betrayed Anders and been killed for it in the game really wasn't going to help anyone. So I told him all I knew was that he had joined the Wardens after the end of the first game, and I knew nothing about him after that point because the focus of the second game was Kirkwall. \n\nI didn't think I'd totally gotten away with it \u2013 I had never been a good liar. But he didn't push, and I changed the subject quickly to the problems they were likely to face in Kirkwall. \n\nRolan was, of course, anxious about the Chantry and Meredith's response to two mages living openly outside of the Gallows; he had a few acquaintances in Kirkwall, and planned to touch base with them as soon as possible after arrival. Anders was more interested in Karl, the clinic and refugees \u2013 of course, things could be quite different given the aid from Cailan, so there wasn't really any way to predict what would happen. Solona seemed to be the most concerned with the big picture, which was somewhat unfortunate given that she was so uncomfortable in groups \u2013 she'd be less able to use the knowledge in hiding. We talked at length about Hawke \u2013 obviously I knew little about the personality of this specific woman, I literally only knew her gender because Leliana had heard of her in Lothering, but I could at least shed light on the family situation and likely events leading to her flight to Kirkwall, as well as the general types of situations she would run into. \n\nAnd then something occurred to me. \"Maker's Hairy Ass! Solona, you're an Amell, right? Are you from Kirkwall?\" \n\nIt turned out that my memory, while late to provide the details, wasn't wrong; Solona was indeed Hawke's cousin. I wasn't sure if that made it better or weirder for the three of them to be looking up Hawke once they arrived in Kirkwall, but as I explained what I could remember of the Amell background, Solona was positively enthused about the prospect of meeting family. \n\nIt was the best I could do. I gave Solona my notebook, made her promise to write me, and called it a day. \n\nWe got word from Aedan, just as we were finishing up, that the three would be leaving for Denerim in three days to board a ship bound for Kirkwall - the day after the ritual to hopefully awaken Faren. Cailan had organized some sort of escort, several ships to travel together in an armada, and there was to be a formal ceremony of sorts when they arrived acknowledging the Wardens' presence in Kirkwall; they couldn't be late. The timing was awful; Anders wouldn't be around for any follow-up healing Faren might need afterwards, or to help out if something went wrong. \n\nWith a frown, he left us to go look for the healer Aedan had recruited, Donal, muttering about training and books and theories under his breath. I hope this healer's good, or we could be in trouble! Solona just chuckled as she watched Anders go without even saying goodbye. \n\n\"This is going to be good for him,\" she said to me as I escorted her towards her room. \"I think he's really looking forward to doing some actual healing. Just patching up wounds after battles isn't all that challenging. And you said there will be lots for him to do in Kirkwall?\" \n\n\"Oh yeah.\" I thought about the city as portrayed in the game \u2013 with dirt poor or homeless Marchers and Fereldan refugees living in squalor. \"Hope he likes plagues. Darktown is horrific, from what I understand.\" \n\nShe sighed, expression torn between amused and unimpressed. \"Wonderful.\" \n\nI grinned, bumping her shoulder with mine gently. \"Nothing saying you have to live there. I rather expect the Viscount will make arrangements for you to stay in Lowtown at worst, or even Hightown. Though then you'd be surrounded by prissy nobles.\" \n\nShe laughed. \"You know you're a noble, right?\" \n\n\"Yeah, but not a prissy one.\" We shared a grin, and then she slipped back to her room and I joined Alistair in the dining room for supper. \n\nThe evening was uneventful; a few of the Wardens had night patrol duty, but the rest of us enjoyed supper and some after-dinner cards \u2013 and drinking, courtesy of Oghren. Of course. \n\nI didn't drink much, as was my usual habit, but Alistair had a nice buzz on by the time we reached our bedroom. I'd been half-assed flirting with him for much of the evening, to everyone's amusement, batting my eyelashes at him and turning normal comments into not-so-subtle innuendo when I had the chance; I kept it quiet, making sure no one else heard, but it hadn't been difficult for anyone to pick up on what was happening. Mostly just for fun \u2013 I enjoyed seeing my husband flustered and blushing, feeling his muscles tense as I ran my hand surreptitiously up his thigh or whispered something naughty in his ear \u2013 but also to help alleviate a little bit of insecurity that had crept in since the terror demon had whispered its treacherous words straight to my brain the night before. \n\nI was sure it wasn't going to happen, but...what if Alistair no longer found me attractive? I'd hemorrhaged all over his lap, lost the baby neither of us had even known we'd wanted... \n\nI knew he loved me. I repeated it to myself over and over in my head, but couldn't seem to help worrying about it. What if...? \n\nSeeing the heat in his eyes when I murmured something outrageous, or watching him stare at my mouth as I nibbled suggestively at some fresh fruit that the cook had scrounged up from somewhere was the reassurance that I needed that we were going to be okay. And I hadn't teased him for nothing \u2013 I had every intention of carrying through on my promises the moment I had him to myself. \n\nSo my surprise was complete and total when a slightly stumbling, less than entirely sober Alistair wrapped me \u2013 clad only in one of his tunics, a look I knew he found irresistible \u2013 in a blanket, cuddled me to his chest as he climbed clumsily into bed, and promptly fell asleep. He was snoring before my head hit the pillow. \n\nI laid there, staring at my husband in the near-dark as he snored loud enough to wake the dead, completely bemused. How did I misread the situation so badly? I'd been so sure he was responding to my less than innocent, though still relatively subtle hints. Maybe the alcohol, I wondered? Perhaps he'd been drunker than I thought, and unable to perform? He hadn't seemed that out of it, but... \n\nA darker, more worrisome thought came to me. What if I was right in the first place? What if he's struggling with the miscarriage, and doesn't want me anymore? I tried to banish the thoughts, but it was difficult when I was so disappointed in myself and could only assume he felt the same. \n\nI tried to console myself with how tightly he clung to me, even in his sleep. I was wrapped like a burrito, so my mobility was poor anyway, but Alistair's arms were heavy around me like he was desperate not to let me go. He held me so tightly I couldn't even move my own arms to wipe the unwanted tear that trickled down my cheek. That's got to be a good sign, right? \n\nIn the end I fell asleep still tightly wrapped and held, cheeks damp, having firmly decided that I was going to assume nothing was amiss \u2013 and try harder for my seduction the next day. \n\nAlistair was already half-dressed when I woke in the morning; he finished buckling his armour, kissed my cheek, encouraged me to go back to sleep, and slipped out of the room, all without explaining where he was going. I was drowsy and warm, and the next time I blinked, it was much later and Maeve was at my door, offering to help me get ready for the day. \n\nI didn't really need the help, but given how quickly she had me in my armour with my hair braided, I wondered if I was in the way of her finishing her chores for the morning. I was out in the hallway and heading down for breakfast, Avanna my silent shadow, before I even knew it. \n\nAfter I ate, I met Seranni in the sparring ring outside. It was cold, but I knew that we'd be working hard enough to stay warm \u2013 and then back inside before we risked getting a chill. I stretched a little, swinging my practice daggers around to get used to their weight, and then we began. \n\nMy months of fighting, travelling, and training showed. I was stiff and a bit out of shape from such limited activity over the past couple of weeks, but I beat Seranni soundly as we clashed in the ring. I heard some cheering as I helped her up after an unexpected hit had sent her stumbling to the ground, and looked up to see a handful of soldiers, a couple of Wardens, and Alistair, all watching. The noise seemed supportive, not cruel, and Seranni sketched a cheeky bow at those catcalling, laughing at herself unselfconsciously as she settled her stance to try again. I could feel Alistair's eyes on me almost like a caress, but he said nothing, just giving me a small proud smile before I turned back to Seranni and attacked again. \n\nAfter a couple of rounds, we slowed down, and I pulled two of the soldiers into the ring on which to demonstrate some of the attacks I'd used on the petite elf. We spent an enjoyable hour practicing together. I felt it the moment Alistair left, his gaze no longer on my back. \n\nI spent the afternoon in my office, working through the ever-present paperwork \u2013 schedules, recruitment plans, correspondence from Cailan and Nathaniel, and the like. Anders and Solona dropped in on me with questions they'd thought up about Kirkwall, and I answered as well as I was able. Aedan came by to discuss plans for the Wardens \u2013 he intended to set up multiple small outposts around Ferelden, including Denerim, Ostagar, and Orzammar, and we discussed who best to send to each place. \n\n\"I'd like them to rotate, to some extent, so everyone knows what's happening at each location \u2013 I don't want to be stuck with positions unfilled if there's injuries or whatever.\" \n\nI nodded, pulling out a small map of Ferelden and placing it on my desk so we could look at it. \"Wulf in Denerim, with someone else \u2013 someone human, at least at first. Two should be plenty, but it's going to be your best place for recruiting, and having more than one race represented would be best.\" \n\n\"You just want Wulf to get together with Kallian, you old romantic,\" he teased. \"Not that I'm opposed, but overall I can't place everyone based on matchmaking.\" \n\nI stuck my tongue out at him. \"I notice that doesn't stop you from keeping Zev with you,\" I pointed out. \n\n\"Or leaving Alistair here. I know, I know.\" He smiled at me. \"So Wulf and...someone, in Denerim. Rolan, Solona, and Anders in Kirkwall, obviously, so then who else?\" \n\nWe ended up coming up with a list we could agree on; most of the Wardens would rotate, at least occasionally, including Aedan, though Alistair would stay at the 'home base' with me and be in Denerim only when required as the husband of the Steward of Soldier's Peak and as Prince of Ferelden. The rest would have a main assignment, but spend at least some time each year at the other posts including the Peak. And with more recruits as time went on, more would be at the Peak at any given time. \n\nIn the end, we decided that Wulf would go to Denerim with Conrad to set up a base there, but eventually Conrad would be replaced by one of the new recruits, leaving Wulf in charge. Bel and Sigrun would go to Orzammar and spend time with the Legion and Queen Sereda's military caste, and when Faren eventually recovered, the three would rotate between the dwarven city and the Peak. Alim, Justice \u2013 Vander? Vustice? Maker, I need to decide what I'm going to call them, at least in my head; it bothers me pretending Vander no longer exists \u2013 and one of the templar recruits would accompany Loghain to Ostagar to set up a base among the elves who were going to be living there; Velanna and Seranni would go to Weisshaupt \u2013 and Dougal was going to come from Jader to escort them. Which would leave everyone else \u2013 Aedan, Zevran, Jowan, Oghren, the Tranquil recruit (whose name turned out to be Lana), Donal, one templar recruit, and eventually Conrad based out of the Peak. \n\n\"Recruitment is definitely our first focus,\" Aedan commented. \"We won't be caught again without enough Wardens to defend Ferelden, whether from a raid, a Blight, or something else like the Architect, Andraste save us. Wulf can work on it in Denerim, but I'm thinking I will end up going on a bit of a recruitment tour around Ferelden. Dougal also told me about a Warden named Blackwall who spends most of his time wandering from town to town recruiting; he promised to ask the man to come here, and send future recruits our way as well. \n\n\"I'm sure the Orlesian Order won't be happy, but they can't say much after they refused to allow their Wardens to aid us during the Blight. Reading between the lines from Dougal, it sounds like they've nearly had a rebellion on their hands over that. I'll be curious to see if I hear from the First Warden about that treaty we proposed after all.\" \n\nI shared knowing smiles with my brother, who then left to inform his Wardens of their assignments \u2013 for after the recruits returned from the Deep Roads, except for Conrad and Wulf, who'd be leaving with the Kirkwall group in a couple of days. \n\nThat night, Alistair was distracted at dinner; he would only say 'Warden stuff' when I asked him what was wrong, but he was clearly lost in thought, barely noticing me at his side \u2013 never mind my unsuccessful, self-conscious attempts at flirting. I finally met the new recruits formally, managing not to cringe when I was introduced to Lana. And Aedan was right \u2013 she was gorgeous, with lustrous jet black hair and flawless pale skin; the effect was ruined, for me at least, by the Lyrium brand standing out starkly on her forehead and her vague, disinterested expression, but I wondered again whether she'd been the focus of any abuse in the Circle. \n\nDonal was a gruff type, quite the change from Anders, but amiable enough; I thought he and Loghain would probably get along like gangbusters. The two templars I'd actually met before Greagoir left \u2013 they'd been two of the six who'd helped me with the Architect's mana. They could have been twins, actually, which amused me for some reason; something to do with how all templars look alike in their helmets, I supposed. They weren't related, though; apparently their red hair and freckles were a coincidence, though they were mistaken for each other at Kinloch frequently. Their names were as unremarkable as their appearances \u2013 Daniel and Patrick \u2013 and I took to referring to them, in my head at least, as Fred and George. Which amused me even more, though I suppressed the laughter that threatened when I thought about it. \n\nAfter supper, Alistair told me to go upstairs without him, and he'd join me in bed 'shortly'; when I finally fell asleep later he still hadn't come to bed, and he crept in sometime in the night without waking me. \n\nI woke in the morning frustrated \u2013 horny and worried. I couldn't help but think Alistair was avoiding me, somehow, and given recent events I had trouble convincing myself it wasn't to do with the miscarriage \u2013 with me. \n\nI laid there for some time, watching my husband sleep; he'd changed over the year-and-a-half I'd known him, his hair a little longer, his chin a little more stubbly, but his age didn't show on his face, especially while unconscious. His face was unlined, and he looked peaceful. And gorgeous; just admiring the planes of his face, his long eyelashes, his strong jaw, made my heart speed up. He looked like home \u2013 in the sexiest way possible. I'll never understand how I got so lucky, and I'll be damned if I lose him \u2013 for any reason. Determined to demonstrate my admiration \u2013 and once-and-for-all eliminate the worry that he would no longer want me, post-miscarriage \u2013 I squirmed carefully along his body until I could crouch over him, my torso touching his lightly but no weight pressing down on him to wake him up. \n\nI pressed a soft kiss to his forehead, nuzzled his long, perfect nose with my own, brushed his lips lightly, then tilted my head to get at his neck with my lips. I was gentle, letting my nipples graze softly over his chest while I licked and kissed from his ear down to his collarbone; I could feel my nipples pebble against his skin, and knew that if I was to check my lady parts, they'd be already completely soaked in anticipation. I cautiously threw one leg over to straddle his hips, irritated by the discovery of his sleeping trousers, but capturing his morning semi-erection between my thighs and letting my moist warmth envelope him through the fabric. \n\nSatisfied with my position, I gave myself permission to wake him up. I proceeded to weave my fingers into his hair, pulling his unresisting lips to mine for a deep kiss, while at the same time rocking my hips purposefully, sliding myself along his covered length and moaning softly at the friction. I hope he doesn't like these trousers \u2013 if I have my way, they're going to be absolutely despoiled when I'm done here. There was a tweak of discomfort as my pelvic muscles contracted, but it was mild and easy to ignore, and so I did. \n\nI felt it when Alistair began to awaken; his lips firmed, pressing back against mine, and his erection followed suit, as I slowly gyrated against him. His hands wrapped around my thighs, before sliding up over my ass, one staying there and stroking teasingly as the other migrated further to slide into my hair, taking a firm handful and crushing me to him. I moaned and ground my hips against him again, relishing the gasp this drew from my still adorably sleepy husband. \n\nThe kiss lasted only a few more seconds before I felt his hand grip my hair more securely. He tugged, and I followed, expecting to have him tilt my head and attack my neck; instead, he untangled his fingers, letting my forehead drop to his shoulder as his hand on my ass gentled and gradually withdrew. His hands clenched at his side, not touching me. \n\n\"Sierra,\" he said, in a disapproving tone of voice I'd heard very few times since we'd been together. \n\nI froze. It wasn't the teasing, seductive tone that meant he wanted to ravish me his own way; not even the careful tone that meant he was confused or worried but willing. It wasn't a tone that made me want to grind myself against him again to test his resolve, to tempt him to dally with me against his better judgement. It was a tone that said, unequivocally, no. It was nothing less than a full rejection. \n\nRejection. I stifled a gasp as the pain of it curled around my heart. It hurt, more than I could ever have imagined it would. He doesn't want me. I couldn't breathe, couldn't figure out how to suck in the air my body was suddenly so desperate for. He said no. He's never said no. The words of the terror demon echoed through my mind, taunting me. 'He won't want you again; you're going to end up alone.' My head was spinning, frantically processing bits of data, trying to make sense of what was happening. I could feel his pulse through his hard shaft, pressed up against my core through trousers soaked with my wetness. I could hear his breath in my ears, though it sounded distant, far away through the pounding in my head. My husband doesn't want me anymore. ",
        "It felt like I was drowning and burning all at the same time. I couldn't, I wouldn't let him see how deeply wounded I felt. If he didn't...didn't feel that way about me anymore, if the miscarriage had meant the end of my husband's desire...I wasn't going to guilt him into anything he didn't want to do, wasn't going to be that pathetic person who would beg for his affection, put up with a lie and use his good nature to tie him to me, to coerce him to stay. I remembered the song from back on Earth \u2013 the Sheryl Crow one that started our relationship \u2013 where she implored her lover to lie to her and never leave. I will never be that woman. \n\nI wouldn't be strong enough to leave him \u2013 I knew that \u2013 but I wasn't going to ask for the lie. \n\nI fell back on feigning nonchalance, drawing a shaky breath and forcing a neutral expression onto my face before sitting up and extracting myself from our now-awkward position. \"Right.\" I was surprised by how steady my voice was, though I sounded enough like the Tranquil I'd met the night before to make me cringe. \"I've got to go see what's happening with Faren. Do you know when we're supposed to start?\" \n\nI studiously avoided looking at his face as I scrambled off of him, and then off the bed altogether. I was naked, and suddenly incredibly self-conscious about that fact, but I couldn't do anything to draw attention to it or Alistair might guess how I felt, might get to feeling guilty, and I couldn't have that. \n\n\"Hey,\" Alistair objected, but I escaped just as he reached for my arm, \"wait, Sierra\u2014\" \n\nI rummaged quickly in my wardrobe and found some smalls, yanking them up my legs; I knew they were going to be soaked through in no time, but there was no way I was taking the time to have a bath, not with Alistair in the room. \"I almost forgot the ritual was today, we've been so busy lately,\" I blathered on, as though I hadn't heard him; I didn't even really listen to what I was saying, never mind give him space for a response, mostly because I feared the alternative \u2013 I wasn't going to keep it together if I had too much time to think, too much awkward silence would make it even worse, and there was nothing he could say that wasn't guilt-ridden or likely to cause more problems in the long run. \n\n\"I do hope it works \u2013 I wonder how long it will take?\" I threw on a dress, tugged my hair into a rough bun, and turned towards the door before even glancing back at him. I must have moved even faster than I thought, because he'd only had time to sit up and swing his feet out of bed, and I didn't have to look at his face to know he was feeling concerned and confused all at the same time \u2013 his stiff posture said it all. Just seeing him from the neck down \u2013 I wasn't going to make eye contact, I wasn't \u2013 sent a wave of pain through me. His strong arms, shoulders, pecs, and abs still made my mouth water, and I wanted nothing more than to bury my face in his chest hair and breathe in his scent \u2013 but I couldn't. And it hurt. \n\n\"I'll see you down there?\" \n\nHe might have said something, but my heart was pounding so loud I didn't hear it. I waited until I saw his shoulders move in a way that told me he nodded \u2013 and I fled. I opened the door to our bedroom and raced through it, pulling it hard behind me to make sure it closed even as I kept going. I startled the guards standing outside the door to our suite, and heard scrambling as Avanna pulled a sharp turn to follow me as I nearly ran down the hallway. \n\nI'd made it halfway to the dining room when I realised that I was not going to have breakfast with everyone else \u2013 Aedan and Zev would know something was wrong at a glance. I'm not up for having that conversation, thank you very much. I stopped, considering avoiding the meal altogether \u2013 but my stomach took the opportunity to growl loudly, and with a sigh, I changed directions, heading straight to the kitchen instead. \n\nI'd never spent much time in the kitchens \u2013 other than my tour, I hadn't been there at all, hadn't even spent the time to do planning with the cook. But I had a rough idea of where things were, and I snuck in slowly, not wanting to draw attention to myself or interrupt whatever activities were underway. To no avail \u2013 the cook noticed me the second I put one foot inside the door, and rushed over immediately, expression worried. \n\n\"My Lady! Can I help you?\" She wrung her hands anxiously, dropping into a sort of awkward half-curtsy while trying not to touch anything \u2013 her hands were covered in flour. \n\nI'd asked all the servants not to curtsy, but most of them had difficulty going along with that \u2013 while they also worried I'd be actually upset with them for disobeying me. The result was an awkward bob that made both of us feel weird. The unspoken 'what's wrong' question was obvious, and I took a deep breath, trying to put my own problems behind me and do my job. Which doesn't involve terrorizing hapless cooks. \n\nI smiled warmly and put my hand on her shoulder. \"No, no. Please don't curtsy! I don't want to bother you. I'm just in a bit of a hurry this morning, and I was hoping to grab an apple or something to eat while I work.\" \n\nShe grinned, relief palpable, and gestured for me to follow her. \"You're too kind, my Lady. It's a right treat to work for someone who don't think she's above us regular folks, let me tell you.\" I flushed and she grinned. \"I can do better than an apple, my Lady. You're too thin anyway, if you don't mind my saying. Here.\" I had lost weight, with all the stress about the Architect, not that I'd expected anyone to notice. I blushed again, and her smile turned motherly. \n\nShe wiped her hands on a nearby towel, then grabbed a small plate and began piling items on it as she walked. She nabbed some pieces of sliced fruit, some cheese, a juicy sausage, and a few small pastries that had clearly just come out of the oven; she gestured at one of her helpers, who slathered two thick slices of bread with butter and put them on top. \"You just send someone down when you get hungry mid-morning, and I'll send something up.\" \n\nI took the plate gratefully \u2013 Avanna shook her head when asked if she wanted anything \u2013 and left the kitchen with my breakfast, at a loss for where to go to eat it. I finally sighed and headed up to my office, leaving Avanna outside and closing the door firmly behind me. I dropped into my chair, put the plate on my desk, and rubbed my face ruefully. I'm too busy for this, right? Right. Work. I can do that. \n\nI ate while I worked, keeping busy to stop myself from thinking; it was perhaps an hour later when a brisk knock on my door made me jump. I looked up just in time to see the door swing open and Aedan's handsome face peek around the frame. \n\n\"It's time \u2013 Anders says they're ready. You coming?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-156"
}