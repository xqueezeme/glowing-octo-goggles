{
    "title": "Christmas Truce",
    "pages": [
        "Copyright Oggbashan November 2013\n\nThe author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons. \n\n*************************************************\n\nI was sitting at my small easel, painting yet another watercolour of the Essex countryside. I produce several pictures a week, send them to my dealer in London, and make enough money to add a few luxuries to my bachelor existence. This might be my last one painted outdoors this year, as the autumn colours were fading. The next strong wind would strip the trees. \n\nI might have a problem painting during the winter months. The room I called my studio was piled with completed work. My dealer had refused to take any more of my paintings for the time being. Although they sold, they moved slowly and he had too many. So had I. If someone important noticed me, wrote about me, praised my work. I could dream.\n\nI remembered talking to Jonas Smith, our local blacksmith about his unused barn. It was the old monastery stable, built to last a thousand years, stone-walled and the roof is tiled. It would be far too large for me but if I might be able to persuade other artists to rent space there, we could be a local community of artists. In the short term it would solve my storage problem -- if I could afford it.\n\nI had explained what I might want to the blacksmith. We had walked round to the barn. We opened a small access door in the large main doors. The space inside was enormous but clear, except for a grey painted wooden partition cutting off a third.\n\n\"I could sweep the chimneys,\" he suggested. \"They haven't been used for years and there could be birds' nests in them. But this is the soundest building in the village, and on the highest ground except for the church. It has never flooded even when most of the village was awash.\" \"I remember the floods. When was the last major one? 1897? I was in South Africa then.\"\n\n\"Yes, Major Jones. You're right. 1897 was the worst one in living memory. I get worried sometimes about the new houses built on land that flooded then. I was just taking over from my father as the village smith. The worst part was the thirst.\"\n\n\"Thirst?\"\n\n\"Yes, thirst. We were surrounded by water, flooded with water, but it was sea water. It got into all the wells and made the water undrinkable. We survived by collecting rainwater. After 1897 many people added tanks to their houses to collect and store rainwater but I think many folk have begun to forget to use them. If it floods again...\"\n\n\"Let's hope it doesn't.\"\n\nI admired the massive space, lit by a clerestory. Some of the panes in that were missing and boarded over. Most were still glazed but very dirty. If the missing glass were to be replaced and the existing panes cleaned, it would be well-lit during the day.\n\n\"What's beyond there?\" I asked, pointing at the grey paint.\n\n\"That? The army put a lot of stuff in there in 1917. They were going to use this barn for troops but never did. They offered the contents to me in 1919 for a few pounds. I bought it but that was a mistake. I should have asked them to take it away.\"\n\n\"What did you buy?\"\n\n\"Tables, chairs, beds, bedding and field rations I think. I haven't looked.\"\n\n\"Tables and chairs could be useful. What are they like?\"\n\n\"As I said. I haven't looked.\"\n\n\"Could we?\"\n\n\"I suppose so.\"\n\nThrough an unlocked door there was a massive pile of equipment, tons of it. I recognised several items -- a field kitchen, hand-pulled water carts even chemical toilets. The tables and chairs were metal framed. Everything was unused, just dusty. There was enough for several hundred men. \n\nJonas and I had agreed on a rent for the barn, if I wanted it. I might just be able to afford it. It would be easier if someone else shared the building. I told him that I would let him have a final yes or no by the New Year. If I sold a few more paintings?\n\nI stopped day-dreaming and added more details to the current painting, destined to join the growing pile in my cottage.\n\nI heard faint footsteps on the gravel path that was once the tow path when this part of the river was navigable. They came closer and stopped. I turned round to see who was coming, before returning to paint.\n\n\"Hello,\" she said from behind me. \"Do you mind if I watch you for a while?\"\n\n\"Of course not, Mary,\" I said. I kept painting. This light wouldn't last much longer and I would have to stop for today.\n\n\"I'm not Mary,\" she replied slowly. \"I'm Magda.\"\n\n\"Mary,\" I repeated. \"I knew your parents. They called you Mary. I knew your husband Michael. He was in my regiment. He called you Mary. He was a good man.\"\n\n\"He was, wasn't he? I miss him. But the entire village calls me Magda now.\"\n\n\"I know. It's cruel of them.\"\n\n\"True. In public you call me Mrs Hughes.\" Mary's voice was sad. \"The women call me Magdalene, after the reformed prostitute. But I'm unreformed.\"\n\n\"To me, Mary, you are a woman who has had a hard time. You've lost your parents and your husband. Yet you support yourself and help others, even if you do it discreetly. You're my comrade's widow. Michael Hughes was my friend...\"\n\n\"...but he died at Passchendale.\"\n\nI couldn't help a shiver as she spoke that name so lightly. I had lost so many of my men there. \n\n\"...and you were a regular officer, Major Jones, in the army by choice. Michael was a corporal, called up to serve and die, whether he wanted to or not.\"\n\n\"So were so many. He did his best for his regiment, for King and Country. You should be proud of him.\"\n\n\"I am. But being proud of him didn't pay the rent nor put food on my table. What I am does far more than that.\"\n\n\"I know. You own your own cottage and have the only inside bathroom in the village, with hot water on tap.\"\n\nMary laughed.\n\n\"That's a capital investment for my professional life. I insist that all my customers have a bath first. I think for some of them the attraction of a hot bath is more than their need of me. But you never come.\"\n\n\"No Mary. I didn't die during the War, but I lost the part that...\"\n\n\"...would interest me? I know. I helped nurse you when you came back. I know your body as well as or better than those of my customers. You weren't aware of me at the time, too full of painkillers to know where you were or who was looking after you. You look much better now.\"\n\n\"Thank you, Mary. Your care of me helped. I knew you had been a voluntary nurse during the War, but I hadn't known you had nursed me.\"\n\n\"Some of the nurses wouldn't touch that area. They were ladies. I wasn't and aren't. I'm a woman.\"\n\n\"A good woman,\" I insisted.\n\nThat made Mary laugh again.\n\n\"Tell that to the Mothers' Union -- or the Marines. You must be the only person who thinks I'm 'good'. I know what I am.\"\n\nMary came to my shoulder and peered at my painting.\n\n\"You're no Constable, are you, Major Jones?\"\n\n\"Constable? Of course not. But my works sell well enough for me.\"\n\n\"Why have you left that tree out?\" Mary pointed across the river.\n\n\"Because it would spoil the composition. Like Constable, I paint the view as it should be, not as it is. That tree is too large, in the wrong place, and draws the eye away from the horizon.\"\n\n\"Where you are putting a church steeple that isn't there.\"\n\n\"Why not, Mary? It's our church steeple. The buyer won't know that it's behind me.\"\n\n\"Do you ever paint people?\"\n\n\"Sometimes, as part of the scenery, but I don't usually do portraits.\"\n\n\"Or nudes?\"\n\n\"I'd need a model to do nudes, and oils, not watercolour. I can do them. I used to when I was studying Art. But that was a long time ago, before the Boer War. You were a child when I painted my last nude.\"\n\n\"Do nudes sell?\"\n\n\"Perhaps better than my landscapes, but...\"\n\n\"You need a model. How about me?\"\n\nI put my brush down carefully and turned to face Mary. Up to now she had been a voice at my back or shoulder.\n\n\"This wasn't a chance meeting, was it?\"\n\n\"No, Major Jones, it isn't. I knew that you would be here.\"\n\n\"Why do you want to be a model for a nude painting, Mary?\"\n\n\"I suppose it is vanity. I know my way of life is going to ruin my looks eventually, but I'd like to be remembered as I was. When I'm old and plain I'd like a picture of me in my prime.\"\n\n\"Why not a photograph?\"\n\n\"Because a photograph would show me like Cromwell -- warts and all. Not that I have any, but an artist would paint me at my best, like you with this landscape -- emphasising the good parts, omitting or modifying the less good, and producing an image of me as I would like to be seen.\"\n\n\"You've thought about this for some time, haven't you?\"\n\n\"Yes.\"\n\n\"And why ask me?\"\n\n\"Because you're the only artist I know, one I trust, and one I respect. You treat me as a person, no, a lady. No one else does. They treat me as the village whore, which I am.\"\n\nI stood up, leaning on my cane. I had finished work for today. The light had gone.\n\n\"Can we go for a walk while we discuss this, Mary? I've been sitting too long.\"\n\n\"Of course, Major Jones.\"\n\nI packed up my equipment. I could leave it where it was. No one would touch it.\n\n\"If I'm considering painting you nude, Mary, I think you had better stop calling me 'Major Jones' and use my Christian name.\"\n\n\"Yes, Alexander,\" Mary said, bobbing a mock curtsey. \"If I can be Mary with you when everyone else calls me Magda, you can be Alexander when everyone else calls you Major Jones.\"\n\n\"Thank you, Mary.\" I held out the crook of my arm to her.\n\n\"No, Alexander, I'm not taking your arm like a lady. I'm going to support you like a nurse. Lean on me.\"\n\nShe came to the side away from my cane, took my arm and rested it across her shoulders. Her arm went around my waist. We started to walk downstream, away from the village.\n\n\"Is this OK, Alexander? I don't want you to tire yourself.\"\n\nHer support was effective. My right leg, normally straining as I walked, was much easier while she steadied me. I wasn't putting much weight on her, but the difference was noticeable.\n\n\"Yes, thank you, Mary,\" I said. \"Like this, I feel I could walk for miles.\"\n\n\"Not miles, just to the next river bend. There's a bench there...\"\n\n\"I know there is.\"\n\n\"Of course. I forgot. You had it put there.\"\n\n\"It reminded me of better times. Or did.\"\n\n\"I even know that. You proposed to your fianc\u00e9e there.\"\n\n\"But...\"\n\n\"She married another while you were in South Africa.\"\n\n\"Yes,\" I said heavily. \"You seem to know a lot about me.\"\n\n\"Michael thought you were a hero. You are, aren't you?\"\n\n\"A hero? I have a medal that says I was. I don't think I was, or am. I was just in an awkward situation, did my best, and was noticed. Many men did far braver things than I, but weren't seen to do it.\"\n\n\"You underestimate yourself. It wasn't one medal. I know your full service history, your medal citations...\" Mary emphasised the plural, \"...and what your regiment think of you.\"\n\n\"What can I say? You seem to know everything. Why the interest?\"\n\nMary stopped walking. We had reached the bench. Her face looked at mine, studying it.\n\n\"My husband thought the world of you. When he died, you wrote to me. I still have that letter and treasure it. You did more. You arranged for his parents and mine to live rent-free for the rest of their lives. You sorted out the War Office when they were being difficult about my widow's pension. You even sent an allocation of your pay to support me when that pension wasn't being paid. You did that for several of the village's widows. Yet you weren't a rich man. If it wasn't for your paintings you would be nearly as hard up as the rest of the village. You gave from your little to those who had less. And yet you wonder why I'm interested in you? You're the only good man I know, and I know too many of the bad ones.\"\n\nShe kissed my cheek.\n\n\"I'm embarrassing you, aren't I?\"\n\n\"Kissing me doesn't, Mary, but telling me about myself does. I'm a wreck of my former self, old, damaged and just existing. I'm not the gallant Major of the War. That's...I was going to say a couple of years ago but it feels like another life, an eternity ago, with many unpleasant things I'd rather forget. I lost more than my manhood in the War. I lost friends, too many friends. Sometimes I wish I was with them.\"\n\nMary's arm tightened around my waist.\n\n\"You're not with them. You're here. You're alive. I want you to live.\"\n\nShe paused, kissed me again.\n\n\"I need you.\" She said emphatically.\n\n\"YOU need me?\" I was startled.\n\n\"Yes, Alexander, Major Jones. I need you. Have you any idea how isolated I am in this village? You are the only one who treats me as a person with feelings. You do more. You treat me like a lady. You listen to what I say as if I might say something worthwhile. To the men I'm a sanitary convenience to put their fluids in. To the women I'm a disgrace, a shame, and a constant unspeaking critic of their adequacy. \n\nWorse -- I'm a drain on the family finances. Even the church rejects me. I creep in at the back despite disapproving glares. I daren't go to the altar rail for Communion. I could be publicly rejected because although I have confessed, I live in my sin every day, and will be repeating it tomorrow.\n\nIt's getting to me. The venom is constant, day by day. If it isn't words, it's looks, gestures and hatred. I could stand it if the men acknowledged me, or even appreciated what I do for them. They don't. They use me, pay me, and leave me, often without a word of thanks...\"\n\nThis time I hugged her. I kissed her cheek. A faint smile was marred by a tear or two rolling down her face.\n\n\"See, Alexander. You've made me cry. No other man in the village would dare kiss me where we might be seen. But you? You'd do it in the village square if I asked you, wouldn't you?\"\n\n\"If that's what you wanted, Mary, yes. I would.\"\n\n\"And you say you're not a hero? You're my hero.\"\n\nMary guided me to sit down on the bench.\n\n\"Your hero?\"\n\n\"Yes, Alexander. Mine. My only friend. A friend who would defy the whole village if I asked him to. That sort of friendship is rare indeed.\"\n\n\"I'm sorry that others treat you badly, Mary...\"\n\nMy words were stopped by a kiss on my mouth. Mary gently placed herself on my lap, avoiding my right leg. She rested against my shoulder. \n\n\"I want you, Alexander,\" she whispered. \"I want you for myself. I want to own you, as my...\" \n\nShe stopped. I looked at her. She seemed frightened to continue.\n\n\"Why have you remained a bachelor, Alexander? Your fianc\u00e9e married more than a decade ago.\"\n\n\"Yes. That hurt, at the time. Afterwards? I knew years beforehand that war was coming. I'd be involved. I didn't want any woman to become my widow.\"\n\n\"But the War's ended.\"\n\n\"And I'm not the man I was. I'm not even a man according to some.\"\n\n\"You're more of a man than many who are whole in body. You can't have children. So what? Many men have the equipment but still can't.\"\n\nI sighed. So few people saw my injury like that.\n\n\"Mary, that loss was painful. It isn't as painful now as my leg is. If I had been a young man when the War started I might have regretted my loss more. I was already past the age of thinking of starting a family. If the losses in the War hadn't been so great I'd have been retired in 1915. The army needed me to stay. I hope I was of some use, more use than I am now. What am I? A journeyman painter who can make a basic living. That's all I have left.\"\n\n\"You might make more by painting nudes, Alexander.\"\n\nThis time I laughed.\n\n\"You win, Mary. I'll try to paint you, nude, and make you look as wonderful as I think you are.\"\n\n\"Wonderful as you think I am? Those are not the words of just a friend, are they? I didn't know you thought of me like that. Why do you?\"\n\n\"You don't know? I would have thought it was obvious, Mary.\"\n\n\"Obvious? What a fool I am. You love me, don't you?\"\n\n\"Yes, Mary. This ancient crippled fool loves you. It might be ridiculous of me, but I love the finest woman I know. It's pointless, but you brighten up my life every time I see you.\"\n\n\"Pointless! You old fool! It's not pointless! You might be. I don't care. I want you as you are. I want you for my husband to keep for myself, and to keep myself just for him. I'd retire as the village whore tomorrow if you'll have me!\"\n\n\"Hang up your 'Closed' sign, Mary. Will you marry me?\"\n\nHer lips urgently covering mine gave her answer.\n\nWe walked back to my painting site wrapped around each other. Mary picked up my equipment and carried it. We stopped in the centre of the village square beside the War Memorial listing so many of my comrades. Mary put my equipment down. She turned to me.\n\nI leant my cane on the steps of the War Memorial, took her in my arms and kissed her. We could feel the distaste from the passing villagers but we didn't care.\n\nThe next morning we went hand in hand to see the Vicar. He was startled when we told him that we wanted to marry, and that the first banns should be read next Sunday. He was even more surprised when Mary told him, while holding my hand, that she had already retired as the village whore, and that she would be joining me for Communion at tomorrow's Morning Service.\n\n\"A good choice,\" he spluttered. \"The attendance tomorrow will be small. The news will be all over the village by Sunday. It won't be a shock when the Banns are read. I wouldn't want a disturbance in Church.\"\n\nSilly fool! It will be a real shock to the village. The women will take years to accept Mary as a reformed character, but the men will be angry now. They might not have appreciated Mary for who she was, but they will miss WHAT she was.\n\nWe walked to church hand in hand next morning. I was still holding Mary's hand as we approached the altar. I could hear whispering in the congregation as Mary accepted the Eucharist but when we turned round to walk back to our pew we did in complete silence.\n\nThe Vicar's short sermon was on the Prodigal Son, and the forgiveness of sinners who had repented and reformed. There didn't seem to be much forgiveness in the assembled villagers. We walked out of church with a large empty space around us, as if we could infect anyone who came too near.\n\nIt rained hard during the week. Mary had locked her back door, the former entrance for her customers, and put a sign 'Closed' on it. In her private bedroom, not her place of business, we had made up a roaring fire while I tried to sketch her in the nude. My first few attempts went on that fire as fuel. I was too busy studying Mary as a lover and not being professional enough as an artist.\n\nEach day I arrived after breakfast and left before dark to avoid upsetting the villagers more than they already were. Whenever we went out in the village, alone or together, the disapproval was obvious.\n\nIt came to a head on Saturday evening. As usual, I went to the public house for a couple of pints. The place fell silent as I walked in. The landlord looked tense. His wife, serving behind the bar was obviously worried but she pulled my pint and set it on the counter. I paid her and turned to face everyone. Most avoided my eyes, but Simon, the blacksmith's son, put his drink down and strode towards me.\n\nHe stood in front of me, his hands on his hips.\n\n\"I suppose you are pleased with yourself, Major Jones,\" he shouted. \"You've taken our only...\"\n\n\"Shall we continue this discussion outside?\" I said calmly.\n\n\"Outside?\" Simon hadn't expected that.\n\n\"Outside,\" I insisted. I walked out. Simon followed me. All the customers followed him and stood in a semi-circle outside the public house.\n\n\"If you are going to insult the lady who has agreed to be my wife, Simon, you will need to back your words with actions. Mrs Hughes has retired. What she was, she is no longer.\"",
        "\"She was a whore!\" he shouted.\n\n\"I agree. She WAS. She isn't now. She's going to marry me.\"\n\n\"And you aren't even a man!\"\n\n\"I'm man enough to face you, Simon. Like to try?\"\n\nHe rushed at me, fists flailing. I stepped aside and he stumbled as he tried to stop himself. I turned to face him again. He came in again. I grabbed his right arm and threw him over my shoulder. Was it my fault that the duck pond was just behind me?\n\nThe drinkers roared with laughter as Simon emerged dripping. At least I had some sympathisers, if only as a game old 'un facing a strong young 'un.\n\n\"I'll get you for that!\" he roared.\n\n\"I don't think so. Why don't you accept that you're going to lose?\"\n\nHe rushed again. I swivelled and threw him back in the pond. This time the laughter was even louder. As Simon emerged again his father Jonas came forward and put a hand on Simon's shoulder.\n\n\"Give up, son,\" he said in a kindly voice. \"The Major has thrown better men than you into that pond. He could keep doing it all night.\"\n\n\"How?\" Simon grunted.\n\nSeveral of the drinkers laughed.\n\n\"Because in the army he was a chief instructor of unarmed combat, you fool!\" Jonas said. \"He could have thrown every man of our regiment into that pond.\"\n\nThe father turned to me.\n\n\"Major, you have upset many of us with your choice of bride. You know why. But nothing we do or say would change your mind, would it?\"\n\n\"No. She's my choice. I'm hers.\"\n\n\"Then we'll have to let the best man have her, and that includes you, Simon. I'm sure the Major has no hard feelings and will shake hands with you. Just watch he doesn't throw you back with the ducks.\"\n\nGrudgingly Simon offered his muddy hand. I shook it. I raised my voice so that everyone could hear.\n\n\"Tomorrow, the banns for our wedding will be read in church. If any one of you raises an objection, you can do so from the duck pond. Understood?\"\n\nThat was greeted with laughter, but someone asked:\n\n\"What if a woman objects?\"\n\n\"Then I couldn't throw her in, but Mrs Hughes might.\"\n\nWe all went back into the pub. I was surprised to be bought a couple of pints and actually be given best wishes for my wedding by some.\n\nAt the end of the evening, when it was quiet, the landlord shook his head.\n\n\"Major Jones, you might have won some over tonight but you and your wife will have a lot to live down. It won't be easy, nor quick.\"\n\n\"I know. But she's worth fighting for.\"\n\n\"She's a good woman,\" the landlord's wife surprised me by saying, \"despite what she's been.\"\n\n\"Thank you for that. I know she is.\"\n\n\"And some of the village treat me nearly as badly as her because I serve the men.\"\n\n\"I'm sorry -- for them. Neither of you deserve that.\"\n\n\"I've appreciated that you have always spoken to me as if I'm a lady, Major Jones.\"\n\n\"Why not?\" I replied. \"You are.\"\n\n\"She is,\" the landlord agreed. \"My lady, and my wife.\"\n\nI left them holding hands and smiling at each other. At least I had some allies.\n\nWe were in church Sunday morning for Communion and the first reading of the Banns. There were audible intakes of breath as our names were announced but no one spoke against us. \n\nThat afternoon it started to rain, and it rained on and off all week. The ground was soaked and unable to absorb what was falling. But it was late in the year, approaching Christmas. Bad weather wasn't unusual.\n\nAfter the second Sunday, Mary and I had begun to think about how we would live after our marriage. It would make sense for me to move into her cottage and sell or rent out mine. Her former workroom could be a small studio, or we could convert one of the outbuildings to make a larger one. But it might be easier and cheaper to rent Jonas Smith's barn.\n\nOn Monday it was still raining. Just as I was leaving for Mary's cottage the postman handed me a letter from my London dealer. I didn't open it until I was sitting at Mary's kitchen table drinking a cup of tea. As I read it, my hand started shaking.\n\n\"What is it, Alexander?\" Mary asked. \"Bad news?\"\n\n\"No,\" I said slowly. \"Far from it. I don't believe it. You read it. There must be some mistake.\"\n\nI gave her the letter. She read it. Her face paled as she reached the part that had startled me.\n\n\"He's sold ALL your paintings to an American dealer? And the American wants more? And your bank has been credited with that much? That's more than...\"\n\n\"My army pension for ten years. If he sells the rest...\"\n\n\"You'll be rich, Alexander.\"\n\n\"Not rich - except by the standards of the village. But I need to get my other paintings on the way to London. I'll go to the railway station this afternoon. They can send a van for them.\"\n\n\"You'll get wet, Alexander,\" Mary protested.\n\n\"I think I'll get wetter if I delay, Mary, the barometer's falling. I don't like the feel of the weather. I want those pictures gone and the village ought to think about a possible flood.\"\n\n\"A flood? Surely not.\"\n\n\"This cottage is safe. So is mine. So is the church and Jonas' barn. But some of the village? If the barometer falls much further the tide will rise higher than normal.\"\n\n\"Will we have a wet wedding?\"\n\n\"I think so, Mary. Umbrellas will be needed.\"\n\n\"And what about the reception? Will we have one? If so, where?\"\n\n\"If you'd like a reception, we'll have one. Who will come? We don't know. As for where? That is a problem, isn't it?\"\n\n\"We certainly couldn't have it in the church hall, Alexander. The Mothers' Union would have a fit. The only other place large enough is the public house, but women can't go there.\"\n\n\"I know. Even you have never dared go inside the pub.\"\n\n\"What about the blacksmith's stable?\" Mary suggested. \"He hasn't used it for years. It's weatherproof.\"\n\n\"The blacksmith's stable? Of course. I have discussed renting it from him but I wasn't sure I could afford it. Now? The suggested rent is small change. And...\"\n\nMy brain was whirring fast. The stable was large, dry and had equipment for a large number of soldiers. Yes, it could be used for our reception. It could be my studio and store room for completed paintings. Both would use a small proportion of that vast space. But if a flood was on the way?\n\n\"And?\" Mary prompted.\n\n\"Mary, this is a hard time of year for the village isn't it?\"\n\n\"Yes. My trade used to dwindle in the weeks before Christmas. No man had any spare money. With this continual rain many of the agricultural labourers will be sitting around with nothing to do and no income. Why?\"\n\n\"If I am going to use the Smith's barn it needs cleaning and tidying up. I could employ some men, give them some cash in their hands when they're short, and have the place ready for our reception, and as a studio for me, and as a place of refuge if the floods come.\"\n\n\"There's one problem with that, Alexander,\" Mary said cautiously.\n\n\"There is?\" I had expected enthusiastic support.\n\n\"Yes. The problem is us. We are the most unpopular people in the village at present. Do you think the Mothers' Union will let their husbands and sons work for you?\"\n\n\"Oh. That IS a problem. I'm sure there's a way. But I'll talk to Jonas Smith on the way back from the railway station. I need that barn. The walk might give me ideas.\"\n\nBy the time I reached the station I was wet through. I warmed and dried myself by the solid fuel heater in the Goods Office. The arrangements to send my paintings to London were arranged easily. They would send a horse-drawn van tomorrow morning, crate and pack the paintings and they would be with my dealer by the evening. They had done it before, but not in such a quantity. I paid by cheque on my now bloated bank account.\n\nI was soaked again on the way to the forge. Simon was working at the bellows while his father hammered at a new hinge. I waited until the hinge was finished.\n\nSimon wiped his brow with his sleeve.\n\n\"Sorry for being stupid the other evening, Major Jones,\" he said.\n\n\"You were set up by your mates,\" I replied. \"They knew you didn't have a chance but egged you on, didn't they?\"\n\n\"I suppose so. They had a good laugh out of me.\"\n\n\"Then we can forget it, can't we?\" I held out my hand. He took it.\n\n\"What can we do for you, Major Jones?\" Jonas asked.\n\n\"Your barn,\" I replied. \"We discussed it before. I want to rent it please.\"\n\n\"You're sure? You didn't think you could afford it then.\"\n\n\"I've sold some of my paintings. I can -- now. And something else. Would you sell me the stuff the Army left?\"\n\n\"If you want it, you can have it all for what I paid for it. Four pounds.\"\n\n\"OK, Jonas. It's a deal. Can I write you a cheque for that and a year's rent?\"\n\n\"A year? In advance? Certainly. That will be a great help. Once we've finished this job the forge will be out for weeks. No one wants any work done.\"\n\n\"Can we go to the barn, Jonas? There are some things I want done there and I think you can help.\"\n\n\"OK. Simon -- close the fire down and go and tell your mother I'll be a little while.\"\n\nWe walked the short distance from the forge to the barn. The rain was still pouring down but inside the barn it was completely dry.\n\n\"Why did you want to come here, Alexander? You know what it looks like.\"\n\n\"I didn't want Simon to hear. I'm unpopular with him, and not just for throwing him in the pond.\"\n\n\"I'm sorry to say that you're the most unpopular man around, Alexander. Simon was a fool to say what many men were thinking.\"\n\n\"When I said I'd sold my paintings, it was true, Jonas. But I've sold ALL of them and I'm sending all of them that I had in stored my cottage to my dealer. I have suddenly become my bank manager's best friend.\"\n\n\"That won't help your popularity, Alexander. Not only have you deprived the village lads and their fathers of their entertainment, you're in funds when most of us are not.\"\n\n\"How many men are out of work, do you think? Or underemployed?\"\n\n\"I haven't thought about it. A dozen, maybe twenty. But those men are the support for their families. There could be fifty or sixty people facing a very lean Christmas, particularly if this rain keeps on.\"\n\n\"Mary told me that if I offered to employ some men, their wives and mothers would object. Do you think that is true, Jonas?\"\n\nJonas rubbed his chin thoughtfully.\n\n\"Magda, sorry, Mary could be right. Women can be awkward. Particularly as some of them are beginning to realise that their husbands used to visit her on the quiet. The men are sulking. The women are feeling their anger, sometimes their fists. If you then offered them work? It might make things worse. I don't know.\"\n\n\"But if YOU employed them? There would be no problem, surely?\"\n\n\"And how could I afford that? I'm short of work myself. As a smith I can keep busy making tools and metalwork that I could sell later, but I've been doing that for weeks. I can't live on no income for ever.\"\n\n\"I think we could concoct a cover plan. What I want done is mainly in here, under cover. If the rain holds off for a while I want those windows cleaned, and glass replaced where they're boarded over. Who could do that?\"\n\n\"I know a couple who could. The thatcher, for one. He only works as a thatcher when it's dry. What else?\"\n\n\"I'd like the whole place cleaned and whitewashed up to the window level. Any man could do whitewashing. I'd like all the Army equipment got out, cleaned, greased if it needs greasing, and made to work if it isn't now. Enough of our men are former soldiers and are familiar with it. I want tables and chairs in the centre, the chemical toilets set up behind screens there and there, and at least one Field kitchen with its flue up a chimney -- that one?\"\n\n\"Are you expecting an invasion of troops, Major?\"\n\n\"No, Sergeant-Farrier Smith, I'm not. What I'm afraid of is another flood like 1897. Keep quiet about that. I don't want to alarm people if it isn't going to happen, but IF it does, this barn could be a shelter for those who are flooded out.\"\n\n\"A flood? I think you could be right. I hope you're not. I hope you waste your money unnecessarily, but if it does come, yes, this barn could be a life-saver.\"\n\n\"I want to use the barn for our wedding reception.\"\n\n\"Your wedding reception? Surely you could hold that in a small room? Who would come? You have no relations still living. Neither does she. And the villagers won't come. Yet this place could house hundreds.\"\n\n\"You could tell those who doing the work that you have rented the barn to me at a price that includes the work, but you'll get the long term benefit of my spending. Would that wash as a story?\"\n\n\"It might be enough. The men want work. They need money. As long as they think I'm paying them they won't balk at a fiction. If they were actually working for you? That would be a problem.\"\n\n\"OK. I want this place prepared to house all those who might be affected by a flood that we hope won't happen. I want those water carts cleaned, flushed, and filled with sweet well water. Where's the nearest well?\"\n\nJonas laughed.\n\n\"That is the sad part about 1897. The village was short of water with all the wells polluted with sea water. But there was one well which wasn't. They didn't know it existed. Neither did I. But there it is.\"\n\nHe pointed to a square of wooden planks in the centre of the barn's wall directly opposite the main doors.\n\n\"It's good water?\"\n\n\"The best. It never runs dry. It's deep because we are so high but the water can be pumped up.\"\n\n\"Have we got a pump?\"\n\n\"Yes. There are at least three in that pile of Army stuff. If they don't work I've got one in stock. But they should work.\"\n\n\"Then that's another task. Set the pump up. Dig a drain to take the surplus outside. We'll need a sump for emptying the chemical toilets. But why am I going on? You're a sergeant. You've helped set up as many camps as I have. Get it done, as soon as possible, and I'll pay what it costs.\"\n\n\"Yes, Sir!\" Jonas saluted.\n\n\"What about the fireplaces and chimneys? Are they sound?\"\n\n\"As I said before, they need sweeping. I'll get Simon to do them.\"\n\n\"Stoves?\"\n\n\"Army stock.\"\n\n\"Coal?\"\n\n\"No. We'd need some to keep this space warm, to run the field kitchen and later to dry out the flooded houses -- if there is a flood. You're spending a lot if the flood doesn't happen.\"\n\n\"I think it will, Jonas. I think it will.\"\n\nI wrote him a cheque for the annual rent, the army equipment and fifty pounds to pay the men to work on and in the barn.\n\nI set off back to the railway station to order some coal to be delivered to the barn. I was soaked again by the time I got there. I ordered and paid for twenty tons. That would be delivered tomorrow afternoon. I squelched back to the forge to arrange with Jonas where the coal should go.\n\nWhen I reached Mary's cottage I was shivering. She took one look at me and ordered me to have a hot bath. While I was enjoying the unaccustomed luxury she went to my cottage to get a complete change of clothing for me. \n\nShe dried me with a warm towel and dressed me in clothes that had been warmed in front of her kitchen range. That was bliss. While we sat in the warm kitchen listening to the rain still pouring outside I told her about everything I had arranged.\n\n\"I don't like to suggest going out again now, Alexander, but we need to see the Vicar soon. We haven't discussed the details of our wedding with him, not even the exact date. The banns will be read for the third time on Sunday. We can marry any day after that.\"\n\n\"When do you want it to be, Mary? You're the bride, the most important part of the wedding.\"\n\n\"The Saturday just before Christmas? \"\n\n\"That sounds good.\"\n\n\"Do we want the choir?\"\n\n\"Do YOU want the choir?\"\n\n\"No. It might cause offence. They would have to come and they might resent that. But I'd like the bell ringers. They would be in the ringing chamber with their free beer...\"\n\n\"Bell ringers? Beer?\"\n\nThose words made me think hard.\n\n\"Bell ringers get free beer,\" Mary thought she was answering my questions.\n\n\"Of course they do. But workers like free beer too, don't they?\"\n\n\"Yes...\"\n\n\"And we'd need beer for the reception...\"\n\n\"For whom? There will be you, and me, and...\"\n\n\"I know. No one else. But if the flood came?\"\n\n\"Then the pub would still be well above the water, Alexander.\"\n\n\"But the village might be cut off, isolated, until the flood receded. The pub could run out. I'll have to talk to the Landlord, AFTER we've seen the Vicar, arranged the date and the bell ringers.\"\n\n\"Witnesses!\"\n\n\"Witnesses?\"\n\n\"We need witnesses to the wedding. At least two. Who?\"\n\n\"The Landlord and his wife? They don't like the way the village is treating us.\"\n\n\"Then perhaps you should ask them before we talk to the Vicar.\"\n\n\"OK. I'll go there as soon as they open, when they have no customers, and we'll go to the Vicar tomorrow. Bell ringers...\"\n\n\"What about bell ringers?\"\n\n\"They give the flood alarm, don't they?\"\n\n\"They do? I've never heard a flood alarm. I suppose I must have done in 1897, but I don't remember.\"\n\nThat evening I dashed across to the public house. The Landlord and his wife were delighted to be asked to be our official witnesses. I asked them if they knew how the flood alarm was given. They didn't know. But they would order several extra barrels of beer, at my expense, and set them up in the barn. Tomorrow lunchtime one would be tapped for the workers.\n\nThe next day Mary and I took advantage of a short break in the rain to visit the Vicar. We arranged the date and time of the wedding, 12 noon on the Saturday before Christmas, that we would have no choir but wanted a peal of bells when we left the church. I paid him the appropriate fees, and for the bell ringers activities, and beer.\n\nI asked him about the flood alarm. He knew that it was a continuous sounding of the tenor bell, at shorter intervals than for a death. I told him about my fears for a repeat of 1897. He shared those worries and suggested that he include a reminder about the flood alarm in the services on Sunday. I asked that he should tell people at risk to move as much as they could upstairs, if they had an upstairs, and to go to the smith's barn if the flood warning sounded. \n\n\"I thought I detected an officer's hand in the work on that barn, Major Jones,\" he said. \"You're getting prepared for a flood, aren't you?\"\n\n\"Yes. I hope we don't have one, but if we do, the village will be better prepared than in 1897.\"\n\n\"Yet you two are the most unpopular people in the village at present. That is a really Christian attitude. I'll pray for both of you and for myself for being uncharitable...\"\n\n\"Thank you,\" Mary and I said together.\n\nWe were still unpopular at church next Sunday. The work on the barn was progressing and the impact of the extra money on the village's happiness was beginning -- if only the rain would stop.\n\nAfter the service Mary and I walked the short distance to the barn. We could have walked most of the way under cover along the remains of the monks' cloister if the side door from the church had been open. \n\nJonas met us inside the barn. Being Sunday, work had stopped. The light, now the windows had been cleaned and replaced, was good even in the rain. In bright sunlight the interior would be very well lit.\n\nMuch of the work was still in progress. The well had been uncovered, a pump fitted, and the cover replaced. Jonas demonstrated that the pump worked effectively. The toilets were in place even if the screens were still just skeletons of joinery.\n\nThe field kitchen gleamed, its flue disappearing into a chimney. The other fireplaces had a variety of large closed stoves, some of which could also be used for cooking. The water carts were clean, white and full. Half of the walls had been whitewashed and there was staging in place to do the rest.\n\n\"Come and look at this,\" Jonas said. He seemed enthusiastic. Behind the grey partition there was a pile of cleaned bed frames. Beside them, under a dustsheet that he lifted, were dozens of mattresses, pillows, sheets, blankets. There were many similar piles.",
        "\"They're all new, never used. They're better quality than I have at home.\"\n\n\"Then take some for yourself, Jonas,\" I said. \"There's more than enough for every villager and to spare.\"\n\n\"I couldn't.\" he said.\n\n\"Yes you can,\" Mary said as I nodded in agreement.\n\n\"If you say so, Major.\"\n\n\"Do you want me to make it an order, sergeant?\"\n\n\"No. That won't be necessary. I'll take some.\"\n\n\"What about the rations?\" I asked.\n\n\"They're edible. Palatable? They aren't and never were, as you and I remember. But there's enough for two hundred men for six weeks. We won't starve be we might go back to hating ration packs.\"\n\n\"Will this be finished by next Saturday?\"\n\n\"Earlier I hope. Do you want it finished early? The men want to drag it out. They need the money. Some of them were desperate when I approached them.\"\n\n\"I'm worried that the flood might not wait for us. What would this place be like if the flood happened tonight? Could we cope?\"\n\n\"Yes, Major. It would be a bit chaotic. We could hang dustsheets to make the toilets private. The whitewashing would stop. But we could have beds made up within a couple of hours. We could give people a hot drink within half an hour, and hot food in an hour. If we had refugees from the flood we'd get them involved too.\"\n\n\"What about evacuation from the areas at risk?\"\n\n\"That could blow your cover wide open. There are a dozen handcarts ready for use to move people's belongings. There are many more around the village. If we did need to bring furniture and other effects, they could go behind this screen when the beds, tables, chairs and equipment are in use. Most people don't have much. I think we could get all of it in easily. I've chalked out spaces for individual families, leaving a corridor for access.\"\n\n\"For how many families, Jonas?\"\n\n\"A maximum of forty. If we had more than forty we would have to split men and women into dormitories. I can't see it being as many as forty, can you?\"\n\n\"Twenty is probably the worst -- unless a flood is much higher than 1897. Then what, another five or six houses? Certainly less than thirty.\"\n\n\"I agree, Major.\"\n\n\"What about the children?\" Mary asked suddenly. \"Come over here, Mag, sorry, Mary,\" Jonas asked. Next to what would be the women's toilets was a space with a couple of tables and half a dozen chairs. There was a pile of paper and a box of pencils.\n\n\"This is the best we could do without letting the men know this isn't for your wedding. This is apparently where you will open your wedding presents and make notes on who sent what. But it is a schoolroom or nursery or just a place for children.\"\n\n\"Wedding presents!\" Mary snorted. \"I congratulate you on your imagination, Jonas, but we won't need room for wedding presents. There won't be any.\"\n\n\"I know,\" Jonas said heavily, \"but if we are to preserve the fiction that all this is for your wedding, it does make nonsense sometimes.\"\n\n\"Thank you for trying,\" I said. \"Do you think any of them have guessed that this ISN'T for our wedding?\"\n\n\"Yes, Major. Almost all of them have. They are all ex-soldiers and can tell that this is a preparation to house people. But they can tell their wives, who haven't been in here, that it IS for your wedding. Any woman who walked in here would know at once that this is a sham.\" \n\n\"But none have?\" Mary asked.\n\n\"Except my wife, and she knows what is really happening.\"\n\n\"Thank you, Jonas,\" I said, \"for all you have done and are doing. I hope we have some more time, but my barometer is still dropping. I haven't seen it that low for years. If a flood comes now -- we can cope. If it comes next Saturday, we'll have done the best we can do. If it doesn't come...\"\n\n\"We'll have a large empty space for us to walk around in after our wedding, and you'll have a studio the week afterwards, Alexander.\"\n\n\"I don't want a flood. I hope this is a waste of effort, that gave some people some work when they needed it.\"\n\n\"If that is all it did, Major, the villagers ought to be grateful.\"\n\n\"But they won't be, will they Jonas?\" Mary said.\n\n\"No. They won't. You know that. I know that. They are more likely to forget it, or to resent you two even more. I'm sorry. That's how it is.\"\n\n\"We're sorry too,\" Mary said. \"But thank you Jonas.\"\n\n\"Is that all, Major?\" \n\n\"Yes, Jonas. Unless the flood comes tonight.\"\n\nWe walked back to Mary's cottage. I was pleased with the work done, the preparations made, but sad that the village still resented us. Mary's shoulder supported me as I sagged. The amount of walking I had done in the rain was taking its toll on my weak leg. I stumbled as I crossed the threshold. Mary stopped me from falling.\n\n\"That does it!\" She exclaimed. \"Sit down!\"\n\nShe guided me over to the settee in front of the living room fire. She took my coat and hung it in the hall.\n\n\"Stay there!\" she ordered. \"I'll be back soon.\"\n\nShe opened the front door and left. I stayed. She was back within a few minutes with a bundle under her coat.\n\n\"I've brought your pyjamas, your wash kit, and some clean underwear. You are staying here tonight, and resting there for the remains of today.\"\n\n\"But...\"\n\n\"But what? My reputation, Alexander? What reputation? I'm the retired village whore. If I keep my husband shortly-to-be overnight in my cottage or even in my bed, what difference will that make to what they think of me? None! Whatever you say, you're staying put.\"\n\n\"Yes, dear,\" I said, mock-meekly.\n\nThat made Mary laugh.\n\n\"I didn't mean to turn into a virago, but you have been wearing yourself out for a village that doesn't care about us. I care about you, and it's time you thought about yourself. You are going to rest that leg. Before we go to bed you are going in a hot bath. When you get out I'll be beside you. And you'll be beside me all night, even if I have to tie you to the bed.\"\n\n\"That won't be necessary, Mary,\" I said quietly. \"I accept your invitation with pleasure.\"\n\nMary flushed. She knelt by the settee and stroked my face. She lifted her face and kissed me gently. \n\n\"Is it easier for your leg if you sit up, or stretch out?\" she asked.\n\n\"Sitting up,\" I replied, \"as long as it isn't in a draught.\"\n\n\"I'll get a blanket and wrap it round your legs. That do?\"\n\n\"Yes, thank you, Mary.\"\n\nShe did, gently. I stayed there for the rest of the day, even eating my evening meal from a tray. There was a real difference by the time Mary helped me out of the hot bath. My leg was less painful and it was easier to walk on. Mary even helped me to climb into bed. She had just removed the stone hot water bottles. She snuggled against my back like a warmed blanket. She was still hugging me when we woke the next morning.\n\nShe wanted to help me to shave. Although I trust Mary, I don't trust a beginner with a cutthroat razor. She propped me up while I shaved.\n\nThe next few days followed the same pattern. Mary wanted me to rest, to allow my leg to recover. The constantly falling rain weakened any resolve I had to venture outside. She visited Jonas each evening for an update on the progress on the barn. By Thursday evening the message came that everything would be finished by the end of tomorrow, the day before our wedding.\n\nWas Mary keeping me prisoner in her cottage? I don't think so. She was wrapping me in her love and she was really worried that I had overextended myself. She didn't object when I said I had to go back to my own place on Friday afternoon. It would be too much for the village to take if the groom had left for the wedding from the bride's bed.\n\nMy full dress uniform was still in perfect condition. I was entitled to wear it because I was still, in theory, in the Army reserve until the end of next March. The country would be in a dire strait indeed if it needed my services, but the uniform would look good on a bridegroom. There was another reason. Respect for the uniform, if not the man, might reduce any overt expressions of disapproval. \n\nThe next morning I shaved and dressed carefully. My leg felt much better but I missed Mary's arm supporting me as I shaved. Never mind. She could do that as my wife, tomorrow.\n\nWhen I left my front door I was surprised that the village appeared deserted. The rain had temporarily stopped but the clouds were gathering for another onslaught. As I turned to see the church my heart lifted. Between the Lych gate and the church door was a double line of uniformed soldiers.\n\nAs I walked between them, they saluted smartly. I returned their salute. At the door stood two more soldiers, both sergeants. They saluted. I returned their salute. They walked beside me into the empty church.\n\n\"Major Jones,\" said Sergeant Jonas Smith, \"We old soldiers decided that we couldn't let a Major be married unattended. I'm reporting to be your Best Man.\"\n\n\"And I,\" said the Landlord, \"am going to act as the Bride's father. I have told her I would and she has accepted. The Bride's substitute mother is waiting at the front.\"\n\nShe was. The Landlady was sitting on the Bride's side in the front pew. She smiled at me as I approached.\n\n\"Thank you,\" I mouthed at her. Why? I could have shouted it out loud.\n\nThe landlord turned left to join his wife. \n\n\"I'll get a signal when to bring her in,\" he said, remaining standing.\n\n\"Have you got a ring?\" my Best Man asked nervously.\n\n\"Yes,\" I said, patting the appropriate pocket.\n\n\"Shouldn't I be looking after it for you?\"\n\n\"Of course.\" I handed it to him.\n\nThere was a knock on the inside of the church door and a soldier's head poked round.\n\n\"My cue,\" said the Landlord and nearly ran down the aisle.\n\n\"What now?\" I asked my Best Man.\n\n\"You'll know when the Bride is coming,\" he replied.\n\nI did. A bugle sounded followed by a dreadful attempt at a Bridal March on several bugles at once. They stopped after a shout and started again. I turned round to see my bride giggling as she entered the church. She was wearing a deep blue dress, carrying a branch of pine needles, with a silver scarf on her head but NO veil. She was marched up the aisle as if she was late on parade.\n\n\"He's nervous,\" she said to me, indicating her adopted Bride's Father.\n\n\"Never done this before,\" he admitted. \"Only had sons.\"\n\n\"You're doing fine,\" I said as the Vicar emerged from the Vestry.\n\nI heard a clatter of Army boots behind me as our escort took up position in the pews.\n\n\"Brothers and Sisters...\" the Vicar started to say. \n\n\"Not many sisters,\" the Bride's Mother said aloud, startling the Vicar.\n\n\"Have you looked in the gallery?\" he whispered to her and us, \"I think you will be surprised.\"\n\nShe turned. We couldn't.\n\n\"Brothers and Sisters,\" the vicar started again. \n\nThe Bride's mother hissed at us. \"Almost every woman who's not in the Mothers' Union, and most of the rest of the men. The Chief Mother will be annoyed.\"\n\nThe Vicar continued with the service. When we sung the first hymn the first sound from the gallery was a shock to the assembled soldiers. They stumbled in the first verse but recovered for the chorus.\n\nBy the second hymn the congregation of soldiers was well aware they weren't alone. The rendition from above and below was loud. The service proceeded without a hitch until the Vicar got to \"Do you Alexander...?\"\n\nHe started to say \"take Magda\".\n\nThe Groom, the Bride's Father and Mother and the Best Man all hissed at him \"Mary!\"\n\nHe recovered. \"Take Mary,\" and I did. She accepted me.\n\nWhen we all went into the vestry to sign the Register I asked my Best Man if we had enough food and drink for the reception.\n\n\"You're going to be surprised, Major. I'm astonished that you slept through last night. The tide rose, the flood started to come, and we evacuated everyone. They and their belongings moved into the barn last night. The children are there and the Mothers' Union are preparing to feed the whole village.\"\n\n\"The Mothers' Union!\"\n\n\"Yes, husband. The Mothers' Union. Jonas came to me last night when we knew the tide was rising. I went to see the Chief Mother, that Lady, and gave her the rough edge of my tongue. I told her what you had done, what was happening, and said that if she didn't shift her backside and get organised, the Mothers' Union would be a useless bunch of overrated bitches.\"\n\n\"Ouch!\"\n\n\"She responded with a few choice epithets for me before we agreed to a temporary truce for the sake of the village. That truce won't last more than a few days, but now everyone knows what you've done, they decided to make our wedding memorable. Our reception is for the whole village, friends and enemies. The chief bitch is even baking a Wedding Cake. It might be poisoned, but it should look good.\"\n\n\"The next tide is due in half an hour, Major,\" my Best Man said. \"That will be the real test. The flood will come. It will be as bad as 1897.\"\n\n\"And everyone and everything is out of danger?\"\n\n\"Yes. Thanks to you two. We've saved everything except their houses. They should clean up when the flood's gone.\"\n\n\"Are you ready to rejoin the congregation?\" the Vicar asked.\n\n\"Yes. Lead on...\"\n\nBack in the church the gallery had moved down to the nave. Bride and Groom walked out through a packed church, except for the gap caused by our soldier guard of honour lining the path. The bells rang out as we left the door. They sounded as we walked the short distance to the barn, stopped, and the tenor bell started tolling repeatedly.\n\n\"The flood is here,\" my Best Man announced as if we didn't know.\n\nInside the barn the Chief of the Mothers' Union came forward to greet us.\n\n\"Congratulations, Major and Mrs Jones,\" she said, \"Alexander and Magd...\"\n\n\"You can call me Magdalene if you want,\" my bride said in a carrying voice, \"but every time you do, I'll call you...\" her voice dropped to a whisper, \"Hippolyta\".\n\n\"You wouldn't?\" she whispered back.\n\n\"You know I would...\"\n\n\"Alexander and MARY, and thank you for providing this place of refuge from the flood.\"\n\nOf course the truce didn't last. Mary and the Mothers' Union would never see eye to eye. It lasted a week, long enough to give time for the flood to recede and the mopping up to start.\n\nI painted Mary nude many times but never sold any. A pair of life size versions hang in our bedroom. One is of her idealised and subtly improved. I prefer the other. That is exactly as my eyes see Mary known as Magdalene, the woman I love for who she is."
    ],
    "authorname": "oggbashan",
    "tags": [
        "major",
        "alexander",
        "magda",
        "mary",
        "whore",
        "flood",
        1897,
        "mothers' union",
        "barn",
        "nude"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/christmas-truce"
}