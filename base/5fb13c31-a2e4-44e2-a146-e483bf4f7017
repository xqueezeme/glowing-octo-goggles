{
    "title": "Army Brat Ch. 06",
    "pages": [
        "Note: Chapter 5 got away from focusing on Danny so this chapter will bring him back. I'm planning on this one being the last one so get your tissues ready. Please read chapters 1 thru 5 to catch up. All rights reserved. \n\n*\n\nTodd hid behind the louvered door in the laundry room and saw Ellen heading towards him towards the small bathroom by the garage. She looked a little unsteady on her feet which meant that Candy was successful in slipping some drugs into the punch. After she entered the bathroom he moved like a cat and used the key that Candy had given him. \n\nEllen locked the door and moved to the sink to check out her hair and makeup. The room seemed to be spinning so she had to grab onto the counter. After cupping some cold water in her palm she splashed it onto her face trying to wake up. She didn't hear nor see the lock disengaging but did see the light going off. \"Hey!\" \n\nBefore she could turn around Todd swiftly moved inside, turned off the light and locked the door behind him. \"Shhh...it's me Danny,\" he whispered softly so she couldn't tell the voice. \n\nEllen giggled when she felt his hands moving to her waist. \"What do you have in mind?\"\n\nTodd was too close to answer without her knowing it wasn't Danny's voice. He moved forward and lightly kissed the nape of her neck. \n\n\"Ummm...that feels so good.\" \n\n*****\n\nLisa laughed at the fools in the swimming pool wearing only their underwear. The boy Tom, who brought her outside, was standing behind her. \"Are Candy's parties always this wild?\" \n\n\"Always,\" he grinned as he moved forward and pressed his hardness into her ass. \n\nLisa wanted to make friends but this boy was coming on too fast. She moved forward away from his erection and turned. \"Excuse me but this was poking me.\" She grabbed onto his hard dick and squeezed as hard as she could. \n\n\"OUCH!\" Tom groaned. \"PLEASE LET GO!\" \n\nLisa smiled and peeked over her shoulder to see Danny in the large sunroom but he was missing. \"Excuse me but I have something to do.\" When she let him go he dropped down onto his knees moaning. \n\nLisa moved swiftly inside and saw one of the girls on the softball team she had met. \"Have you seen Danny?\" \n\nThe girl pointed down the hallway. \"He's with Candy.\" \n\n\"Shit,\" Lisa said as she hurried down the hallway. The first three rooms were empty but the last one was locked. She knocked. \"DANNY!\" \n\n*****\n\nDanny's legs were wobbly as he leaned back against the door. His hand was on Candy's shoulder pushing her back as she tried to open his slacks. \"I'm......in...here,\" he managed to say. \n\nLisa tried the lock again. \"The door is locked.\" \n\nDanny used his free hand to reach behind him and open the lock. When it clicked open he shifted to the side which caused the door and Lisa to fly into the room. \n\nLisa's body tumbled into the room and crashed into a shocked and naked Candy. \n\n\"What the fuck?\" Lisa asked when she looked down at the nude girl lying under her. She turned back and saw Danny shaking his head trying to regain his senses. \"You fucking bitch.\" \n\n\"What are you going to do about it?\" Candy grinned up at Lisa with her perfect teeth.\n\nLisa smirked. \"Just this.\" She brought her right arm back, made a fist and blasted it downward onto the unsuspecting girl's perfect nose. They all heard the popping sound. Seconds later streams of blood poured from the red nostrils. \n\nLisa moved off of the crying girl and grabbed Danny. \"Where is Ellen?\" \n\n\"I...don't know,\" he said with his arm over Lisa's shoulder. She supported him as they walked back to the sunroom. The girl on the softball team rushed over to help. \n\n\"Have you seen Ellen?\" \n\n\"No.\" \n\n\"See if you can wake Danny up while I go and look for her.\" Lisa handed Danny over and moved down the hallway towards the bathroom. \n\nShe saw a girl standing by the closed door. \"Who is in there?\" \n\nThe girl grinned. \"I'm not sure but it looks as if the light is off and some messing around is going on.\" \n\n\"Shit,\" Lisa said as she tried to open it. She turned and looked on the top door frames for a key and saw one a few doors away. \"Stand back, \"she said to the girl. \n\n*****\n\n\"Do you want to do it here?\" Ellen whispered back to who she thought was Danny. He didn't answer as he lifted her dress and pulled down her skimpy thong. \n\nTodd got the panties off and pushed her upper body forward to fuck her from behind. He heard some talking outside and knew he only had a few seconds. \"Are you ready for a real fucking?\" He said loud enough for her to realize that he was not Danny. \n\n\"WHAT!\" Ellen cried out hearing the familiar voice. \"NO TODD STOP!\" She tried to push back but his body was up against her ass and she couldn't move. She felt his hard cock jamming forward under her raised buttocks and tried to reach down to stop it from entering her. \n\nTodd heard the door open as he was about to push forward. He was almost in when a hand reached around the front of his face and fingernails dug into his cheek. \n\n\"AHHH SHIT!\" His body moved backwards to stop the digging nails. When his body moved back Ellen quickly turned and kneed him as hard as she could in his privates. \n\n\"OH FUCK!\" he cried feeling the blood dripping down his cheek and the throbbing pain in his balls. His first reaction was to swing outward. \n\nEllen didn't see the hand coming forward but did feel the blow as it struck her left shoulder. Her body fell to the floor but she reached down and managed to not hit her head. \n\nLisa leaned over to help Ellen when Todd pulled her up by her hair and pushed her as hard as he could back out the door. \n\n\"You fucking bitches. I'm going to kick your asses.\" Todd screamed as he pulled up his pants. As Ellen tried to crawl out the door he pushed her with his foot causing her to crash on top of Lisa. They both turned and looked up as Todd reached down to smack them around. He didn't see Danny standing next to him. \n\n\"Beating up girls now.\" Danny said as he grabbed onto Todd's wrist and jerked the boy out of the bathroom and then down the hall towards the front door. He twisted the arm behind Todd's back and held it there until he managed to get the front door open and both of them out into the cooler air. \n\n\"Fuck man let me go,\" Todd begged. \"HELP...SOMEONE HELP!\" \n\nDanny was pissed. \"I should fucking kill you.\" He pushed Todd against one of the cars and smiled. \"Let's see how you can fight another guy.\" \n\nTodd knew he couldn't run because a bunch of the kids were standing by the house and were watching. He hoped that Danny had taken some of the relaxant drugs. \"I can kick your ass too,\" he said before lowering his head and running like a ram towards Danny's stomach. \n\nDanny shifted quickly to the side and brought down his elbow on the top of Todd's back. \n\n\"AYEE!\" Todd yelled before his face and body crash landed down onto the sidewalk. He lifted his head and felt blood now coming from his forehead. \"You fuck!\" He scrambled to his feet and pulled a lawn light from the ground. After ripping out the electric wire he turned and smiled. \"I'm going to stick this up your ass.\" \n\nDanny moved into the defensive position his father had taught him. He had never really faced someone who really wanted to hurt him so he hoped that it would work. As Todd held the light high to bring it down Danny leaned as far back as he could. The light just missed his face and stomach. \n\nTodd knew he was in trouble when Danny's elbow shot forward into his bloody face. It felt like he had been hit by a freight train before it suddenly went dark. His limp body tumbled down onto the sidewalk. \n\nEllen and Lisa rushed over to make sure Danny was OK but Danny pushed them aside. He moved down to Todd and saw him coming around. \"Whew..I thought I killed him.\" \n\nTodd's first reaction when he came to was to strike outward. He swung his fist outward and caught Danny's chin. Danny fell to the side and tried to get up but Todd came at him again. As Todd tried to hit Danny again Lisa jumped onto his back and started hitting the back of his head. \n\nLisa wrapped her legs around his waist to give her enough leverage to use her fists. As she kept hitting his she looked down to see Ellen kicking into his crotch. \n\n\"GET THEM OFF OF ME!\" Todd begged as he tried to cover his crotch and the top of his head. \n\nDanny sat up and smiled as the two women in his life pounded the asshole's body. Finally when Todd seemed to give up he pulled them away. \"That's enough.\" \n\nThe three of them stood over Todd and looked at the total mess they were. Their clothes were torn and dirty. But none of them were seriously injured. \"Let's get out of here.\" \n\nDanny's arms draped over their shoulders as they headed towards his car. It was Ellen who said it first. \"Bula-bula.\" \n\nLisa laughed. \"Bula-bula. \n\n\"Bula-bula,\" Danny chuckled. \n\n*****\n\n\"DAD!\" Ellen yelled when they got into her house. \"We need your help!\" \n\nAllan jumped up from his computer and ran to the front door. \"What the hell happened?\" \n\n\"We're OK,\" Danny said. \"Just a few bruises.\" \n\nAllan quickly looked them over and got a few ice packs for their injuries. \"What happened?\" \n\nIt took about three minutes for Ellen to finish. \"And if it wasn't for Lisa I'm afraid what might have happened.\" She took Lisa's hand and held it. \n\n\"I didn't drink the punch,\" Lisa smiled. \n\n\"I should call the police,\" Allan said. \"Todd should be in jail.\" \n\n\"Attempted rape might be hard to prove,\" Ellen said. \"He will say that I wanted it.\" \n\n\"And whatever drug she used is probably gone from our systems,\" Danny added. \n\n\"What if they call the police?\" Lisa asked. \"I think I broke that girl's nose.\" \n\n\"They wouldn't dare,\" Allan grinned. \"Then we go forth with our charges.\" \n\n\"There were a few witnesses that will substantiate our story.\" Ellen said leaning back. \n\n\"How bad is Todd?\" \n\nDanny laughed. \"His face is a mess and I'm sure his arm and chops are hurting. Maybe you should call my mom and let her know what's going on. She will probably come over here.\" \n\nAllan nodded and smiled. \"Good idea.\" After the kids moved to the den he called her. \"Don't hang up,\" he started. After telling her what happened she headed their way. \n\n*****\n\nJanet hurried into the house. \"Where are they?\" \n\n\"They are fine. Danny is in the den and the girls are up in Ellen's room.\" \n\nShe looked into his eyes knowing how much she missed them looking at her. \"I guess I should go and see my son.\" \n\nAllan moved closer but not touching. \n\n\"Allan...I...\" Her trembling hand moved to his. \n\n\"Me too,\" he whispered as their bodies came together. \"I've been miserable.\" He leaned back and looked at her. \"I'm so sorry.\" \n\n\"We have a lot to talk about,\" she said before hugging him closer. \n\n\"I love you so much. I only want you.\" \n\nJanet smiled and leaned back again. This time their lips came together. \n\n*****\n\n\"Thanks for saving me,\" Ellen said to Lisa who was behind the frosted glass shower door. She removed her torn dress and then her bra. \n\n\"I want us to be friends,\" Lisa responded. She turned and peeked at Ellen's body through the door. \"I'm almost finished.\" \n\nEllen pulled off the panties and leaned against the sink. \"You are welcome to sleep over if you want.\" \n\n\"I don't have a change of clothes,\" Lisa said as she pulled open the shower door and stood dripping wet naked. She checked out Ellen's perky hard nipples and blonde bush. \n\nEllen too visually admired Lisa's firm and well stacked body. \"I'm sure you can fit into some of my clothes except maybe for the breasts.\" She could see that the girl was a size or two larger. \n\n\"I'm sure you have something loose enough,\" Lisa blushed. She grabbed the towel from the bar and stepped out. \"I bet Danny would like to see us now.\" \n\n\"Yeah,\" Ellen grinned no longer jealous. As Lisa moved closer Ellen turned and passed her without touching bodies. \"But he's been through enough for one night.\" \n\n\"We better take it easy on him,\" Lisa grinned. As Ellen moved into the shower Lisa greatly admired her round ass. \n\n*****\n\n\"Well look who is here and didn't even come to check out my injuries,\" Danny said seriously to his mother who walked in holding Allan's hand. \n\n\"I was heading this way,\" Janet grinned. She moved closer and saw the bruise on his chin. \"Did you forget to duck?\" \n\n\"No, I forgot about letting sleeping dogs lie.\" \n\n\"Tusk...tusk,\" she said. \"How bad did you hurt him?\" \n\n\"Nothing seriously. Lisa got him with some fingernails and Ellen kicked him in a delicate place a few times.\" \n\n\"And...\" \n\n\"And, maybe I hurt his arm and messed up his face a little,\" Danny said without expression. \"I know that I need to control my anger but..\" \n\n\"But he deserved it,\" Janet said. \"He deserved it when he cut you on that slide into second. I 'm glad you waited.\" \n\n\"Hi Mrs. Upton,\" Ellen said as she and Lisa walked into the room wearing matching white terrycloth robes. \"I'm glad you are here.\" \n\nJanet glanced at Allan. \"They don't look as bad as you described.\" \n\n\"We needed a nurse,\" Danny laughed. \"And now we need to go somewhere else.\" He grabbed Ellen and Lisa before exiting the room. \n\n\"I think I was set up,\" Janet said sitting on the sofa. \n\n\"It was Danny's idea,\" Allan quickly said not wanting to get into more trouble. He sat next to her and took her hand. \"I hope you will forgive me.\" \n\n\"Yes, but if you have sexual fantasies warn me ahead of time.\" \n\n\"No, that's it...I mean not anymore...you know...I..\" \n\n\"Let's just keep it as a fantasy. I'm not ready to share you with anyone at least not yet.\" She pulled his lips to hers and quickly met this tongue.\n\n\"Not yet,\" Allan repeated in his mind.  \n\n*****\n\n\"Where are we going?\" Danny asked as he followed the two girls wearing robes up the stairs. He tried not to peek but he could see both of their bare bums. \n\nEllen turned and saw where his eyes were. \"Quit looking at our butts. We need to find a guy for Lisa.\" \n\n\"Hey!\" Lisa yelled before pushing her robe downward. \n\n\"Sorry,\" he blushed. They moved into Ellen's room and over to the bed. The girls moved onto the queen size bed and left room for him in the middle. \"Do you want me to lie there?\" \n\n\"Yes,\" Ellen grinned. \"Don't worry we won't attack you.\" \n\n\"Actually I was hoping that you would,\" he joked as he climbed over his girl and fell back on the pillow. \"Let's see. I think that Corey is about to break up with his girl.\" \n\n\"COREY STORM!\" Lisa said sitting up. \"God, he is in my Biology class and is so cute.\" \n\n\"I'll talk to him tomorrow,\" Danny grinned. \n\n\"Thank you!\" Lisa said as she moved down to hug him. \n\nDanny felt her braless breasts against his chest and turned to look at Ellen. \n\n\"It's OK. I trust you two.\" Ellen grinned. \n\nThey stayed on the bed for another hour before Danny got up to use the restroom. When he returned Ellen took his hand. \"I'll walk you to the door. Lisa is sleeping over.\" \n\n\"Can I sleep over too?\" He grinned. \n\n\"No,\" she said firmly. Danny waved good night to Lisa and walked down the stairs next to Ellen. \"HELLO! WE ARE COMING DOWN!\" \n\n*****\n\nAllan had his hand down the top of Janet's dress and was fondling her soft breast while she nibbled on his earlobe. \"What did you mean by not yet?\" \n\nJanet grinned. \"Let's just say that I experimented some with my best friend after high school.\"\n\n\"Geez...tell me about it.\" \n\nJanet reached down and was not surprised to find him rock hard. \"Our parents went away leaving us alone for the weekend and..\"\n\n\"HELLO! WE ARE COMING DOWN!\"  \n\nBy the time they got to the living room Janet had fixed her clothes and was sitting innocently. \"I'm going home,\" Danny said. \"Are you coming?\" \n\n\"I uh...I uh was planning on spending the night here,\" she said wondering what his reaction would be. \n\n\"Is it OK?\" Allan asked his daughter. \n\n\"Yes, but please use the radio,\" Ellen grinned. \n\n\"We will,\" Janet smiled back. \n\nEllen walked Danny to the door and they stopped. \"Thank you for saving me from Todd.\" She pulled his lips down to hers. After frenching for a minute they parted. \n\n\"I'm glad that Lisa and you are getting along.\" \n\n\"She's your friend and therefore she is mine too.\" \n\n\"God, I love you so much,\" he whispered. They kissed again but when his hand moved under her robe and cupped her bare buttock she pushed him back. \n\n\"See you tomorrow.\" \n\n*****\n\nDanny met the four of them at Church on Sunday and they all had a big dinner later that afternoon. It was after the dinner when Danny asked Ellen to take a ride with him. \n\n\"Where are we going?\" Ellen asked as they backed out of the driveway. \n\n\"Somewhere special.\" He took her hand and drove towards the Army base. \n\n\"We just passed the base,\" she said as the main gate passed by. \n\n\"I know,\" he said looking straight ahead. \n\n\"Where are we going?\" \n\n\"I want to introduce you to someone.\" He said as he turned the corner and headed down a small single lane road. \n\nEllen sat forward as she looked ahead to see where they were going. It was when she saw the gravestones that she knew. She didn't say anything as he turned into the military cemetery and headed up a steep incline. \n\nDanny's eyes were already getting teary which quickly spread over into her eyes. By the time they stopped near his father's grave both were wiping their cheeks. \n\nEllen didn't know what to say so she got out of the car and took his hand as they walked up a small path. She squeezed his hand tightly when they stopped and looked at his grave. \n\nDanny stared at the white cross head stone and his father's name engraved on it. \"Hello dad. There is someone here that I would like for you to meet.\" \n\nEllen wiped the tears from her eyes and hugged around his waist. \n\n\"This is Ellen Dad. You see she is someone that I love very much.\" He wiped his nose and continued. \"God, I wish you were here to see her and meet her. I know you would love her as much as I do.\" \n\nEllen leaned up and kissed his cheek. \"He is here Danny. He knows that we are here.\" \n\nThey both stood looking at his name. \"This is the first time I've been here since we buried him.\" Danny said. \"It looks different because the hole is gone and the grass and flowers are here.\" \n\n\"Thank you for bringing me here,\" Ellen said still sniffing. \"I love you so much Danny.\" \n\nDanny turned and pulled her into him. They hugged and broke apart. \"I know that he is gone and won't be back. But, since I have you it doesn't hurt so much.\" \n\nEllen patted his back and wiped her face on his shirt as they hugged. \n\n\"Do you want to go?\" He asked. \n\n\"Only when you are ready,\" she answered. After five minutes he took her hand and led her back down the path. She stopped about half way. 'There is something that I want to do.\" \n\nDanny was puzzled as she walked back to the grave. He saw her lean over and put something on the headstone. She turned and walked back. \"What did you do?\" \n\n\"I told your father that you were in good hands and not to worry.\" She smiled. \n\nHe looked down and noticed that her necklace was missing. \"You put your necklace on his head stone. But it meant so much to you.\" \n\n\"My grandfather gave it to me when I was little and told me to give it to someone special,\" Ellen said trying not to start crying again. \n\n\"But you never met my dad.\" \n\n\"I think I know your dad very well. I'm glad that you took after him.\" \n\nNeither said much driving back to town. Lisa, Janet and Allan were sitting on the patio drinking Pina Colada's when they walked out. \"So are you going to tell us where you went?\" Janet asked. \n\nDanny was silent so Ellen spoke. \"I met Danny's father.\" \n\n\"Oh my god,\" Janet said standing up and moving to her son. \"You went to the cemetery.\" \n\nDanny hugged her and did his best not to cry. \"It looked nice. There were flowers and grass.\" \n\nLisa too stood up and moved over to hug him along with Ellen. ",
        "Allan smiled and moved into the bunch for a group hug. \n\n*****\n\nOn Wednesday night the Panthers played against a tough team that had given them some trouble the past few years. Danny was not a secret anymore and most teams knew who he was as well as his .729 batting average. \n\nCoach Wright called them together before they took batting practice. \"Yes, we are undefeated but the team we are playing today will give us nothing. They have a great coach who has taught their team to be basically sound in everything. We will have to play perfect baseball to be in this game.\" \n\nAs the others took the field Matt called Danny over. \"I'm batting you at lead off again. Do your best to get on and make them throw you strikes.\" \n\n\"Yes sir,\" Danny grinned. He looked into the stands and saw his mother sitting next to Ellen and Lisa. The girls were talking and laughing and not even looking his way. He was starting to get jealous of their new close friendship. \n\nAs they stood for the National Anthem Danny noticed a guy dressed in Army fatigues standing out by the right field foul pole. He didn't recognize him and figured that he was an Army guy who wanted to watch him play. \n\nThe other team jumped on the Panther pitcher and before they knew it they were three runs down. It was really the first time that they had fallen behind this early. \n\n\"Come on let's get them back,\" Matt yelled as Danny walked to the plate. \n\nDanny hit his right heel with his bat and held up his left hand as he dug his spikes into the batter's box. The pitcher was a tall skinny left handed thrower who had a lazy windup but a quick fast ball. He remembered what the coach said about making him throw strikes and took the first two pitches for balls. It was a perfect pitch count to hit but he again laid off a pitch down the middle for a strike. \n\nDanny stepped out and saw the third baseman sneaking in for a possible bunt. He readied himself for the next pitch and turned to bunt. As the pitcher followed thru Danny jumped back and smashed a hard roller down the third base line. The third baseman had no chance of catching it. \n\nDanny flew past first and on the way to second he saw the ball take a crazy bounce off of the wall in left field. As the fielder recovered to grab it he rushed to third and saw Coach Wright with both hands down meaning for him to slide. He knew the ball was coming from his right so he hooked slide to the left side of the base. \n\n\"SAFE!\" The umpire yelled. \n\nDanny stood hoping the coach wasn't pissed about him taking a chance coming to third but he was smiling and pumping his fist at the bench. Down three runs they needed some confidence. \n\nThe pitcher had backed up home in case the throw was coming that way so as he slowly walked back to the mound Coach Wright pulled Danny aside. \n\n\"If he winds up I'm going to send you home on the second pitch.\" \n\n\"Home,\" Danny repeated. He had never stolen home before. \n\nDanny took his lead and watched the big guy take a wind-up. He counted the seconds it took the pitch to reach home plate. The batter swung and missed. Danny turned and looked at the coach and saw the steal sign. \"Shit, I hope the batter saw it too,\" he thought. \n\nDanny waited for the pitcher to get set on the rubber and took a walking lead. As the pitcher started his windup Danny's walk turned into a full gallop. \n\n\"HE'S COMING HOME!\" The third baseman yelled. \n\nThe pitcher couldn't stop and tried to go faster but it still took a while for the ball to leave his hands. Since he hurried the pitch the ball sailed high. \n\nDanny put his head down and smiled when the batter stepped out of the way. He saw the catcher move forward as he moved into his slide. If the ball had been on the mark Danny would have been out. Since it was high it gave the split second he needed to touch the plate first. \n\n\"SAFE!\" The home plate umpire yelled with both arms spread outward. The Panther fans went wild screaming and clapping. \n\nDanny felt soreness in his left ankle as he got up and tried not to limp as he moved to the bench. \n\nMost of the fans didn't see it but Janet noticed it right away. \"Danny is hurt.\" She moved swiftly off the stands and into the dugout. \"Are you OK?\" \n\n\"Yeah,\" Danny lied. \"I'm fine.\" But she knew better. \n\n\"Get me some ice,\" she told a couple of players. Luckily the Panthers caught fire. The next two players got hits and then Corey smashed a three run homer to the opposite field. \n\n\"It's a bad sprain,\" Janet whispered after checking it out. \"I think you need to sit the rest of the game out.\" \n\n\"No Mom no..please. I'm ok.\" He said as he tried to stand on it but made a face when he felt the pain. \n\nThe other team decided on a pitching change which allowed Coach Wright to come over and see what the commotion was about in the dugout. \"What's going on?\" \n\n\"He hurt his ankle on the slide,\" Janet answered. \"I don't think that it is broken.\" \n\n\"I can still play coach,\" Danny said. \n\nThe coach looked at the swelling. \"Not today son. You need to take care of that ankle.\" He looked at the second string infielder. \"Warm up.\" \n\n\"Please coach. I can still play,\" Danny begged. \n\n\"We got the lead back and your health is more important,\" the coach said patting him on the head. \n\n\"Come on,\" Janet said. \"We need to get it x-rayed.\" \n\nEllen and Lisa met them at the parking lot. \"I'll be back so stay here,\" Danny grinned. \"Lisa has to meet Corey after the game.\" \n\nAfter Ellen kissed him they headed to the hospital where Janet could get a quick x-ray performed. \n\nThe other team got a run in the third inning and had the bases loaded in the seventh when Danny hobbled back into the dugout. Jimmy took the pitching mound trying to get the last out. Buttons was in the stands yelling along with the other fans. \n\n\"Come on Jimmy!\" Danny yelled to let him know that he was back. \"Give him the one-two-three!\" \n\nJimmy smiled over at Danny and leaned in for the sign. He shook off the fastball and nodded when the screw ball sign appeared. He and Danny had talked about the one-two-three being an outside screw ball, an inside fast ball and the screw ball again. \n\nThe batter leaned in and waved weakly at the screwball. He realized that he had swung at a bad pitch. He moved closer to the plate and jumped back when the inside corner fast ball flew by him. \n\nSTEEE....RIKE!\" The home plate ump yelled. \n\nThe batter and opposite team coach complained but the ump's glare shut them up. \n\nThe batter moved back to his normal position and was leaning back when the screw ball cut back over the plate. \n\n\"STRIKE THREE.....BALL GAME!\" \n\nThe players came in to shake the other teams hand and Danny hobbled out on a crutch to do the same. \n\n\"How bad is it?\" Corey whispered hoping their season wasn't suddenly in jeopardy. \n\n\"Just a sprain,\" Danny smiled. \"I should be OK in a week or so.\" \n\n\"Great,\" Corey grinned. \"Say is that girl here that you told me about?\" \n\n\"She's over there by Ellen,\" Danny whispered. They both looked over and saw Ellen and Lisa wave. \n\n\"Nice,\" Corey said. \n\nDanny was gathering his gear in the dugout and heard someone behind him. He turned around to see the Army guy in fatigues. \"Oh hi,\" Danny said smiling. \n\n\"You're Danny Upton right?\" The young soldier asked. He looked really nervous. \n\n\"Uh..yeah. I'm Danny. Do I know you?\" He didn't look much older than Danny. \n\n\"I uh...I served with your...with your...father.\" \n\n\"Wow, that's great. I'm glad you stopped by,\" Danny held out his hand for a shake but the soldier held back. Danny knew something was wrong. \n\n\"My name is PFC. Charles Young.\" \n\nDanny had heard the name before. \"I've heard of you somewhere.\" \n\nThe soldier suddenly dropped his face downward. \n\nDanny moved over and put his hand on the guys shoulder. \"Are you OK?\" \n\n\"It was me,\" the soldier said. \"It's was my fault.\" \n\nDanny still didn't know what was going on. \"I'm sorry I don't understand.\" \n\n\"Your father died because of me,\" he said softly. \n\nDanny remembered the story of how one of the young recruits panicked during a hot fire practice and stood up in harms way. His father pulled him back down but not before himself receiving a fatal bullet. \"Oh God. You're the one he saved.\" \n\n\"Yes, I wish it had been me,\" PFC Young said. \n\nJanet was standing around the corner listening to the conversation. She knew it was time to intervene. \"Don't say that. Don't ever even think that.\" \n\nDanny and Charles moved back as she walked in. \"Josh gave his life to save yours. Because of you being alive it makes it mean something.\" \n\nJanet moved into the soldier and hugged him. \"I've wanted to get in touch with you. Please don't blame yourself for what happened.\" \n\n\"Thank you Ma'am for saying that. Things have been pretty lousy and I've thought about leaving the Army.\" \n\n\"Josh would want for you to stay,\" she smiled. \"Whatever you do remember that we do not blame you.\" \n\n\"Yes Ma'am,\" he said trying to smile and wipe his eyes at the same time. \"I'm going to make every ball game that I can.\" \n\nDanny smiled. \"I'll be looking for you.\" \n\nPFC Young left and Danny hugged his mother. \"I did blame him in the beginning.\" \n\n\"I know,\" She whispered. \"But your dad would not have wanted us to.\" \n\n*****\n\nEllen sat alone as she watched Corey getting to know Lisa. She was about to go down to the dugout when she heard Andy's voice. \n\n\"SIS...TER!\" \n\nShe turned and smiled as her little brother ran across the stands towards her. She looked over and saw her aunt but not her mother. \"ANDY!\" \n\nEllen scooped him up and hugged him. \"What are you doing here?\" \n\n\"To see you,\" Aunt Helen answered. \"It seems all he talks about is you.\" \n\n\"Is that true Andy?\" She asked leaning back to look into his eyes. \"Did you miss me?\" \n\n\"SIS...TER!\" He kissed her cheek and wiggled to get down. As he sat on the bleachers Helen walked over to her niece. \n\n\"Your mother couldn't make it.\" \n\n\"Don't call her my mother,\" Ellen said trying not to be nasty to the woman. \"She stopped being that when she left me.\" \n\n\"I understand,\" Helen said sitting next to her. \"She messed up and I'm not sure if she still knows what she wants.\" \n\n\"That's an understatement,\" Ellen smirked. \"But, thank you for bringing Andy here. I do want to be a part of his life.\" \n\n\"Well, that's the thing. Maria left last night and wrote me a note to watch Andy for a while.\" \n\n\"God, she did it to him too.\" Ellen leaned over and kissed the top of his head. \"Maybe it would be best if she just moved away again and stayed away.\" \n\n\"I sorry Ellen. I don't know what to say.\" Helen wiped her eyes feeling sorry for the young girl and the younger boy. \n\nEllen saw her father's car pull up behind the dugout. \"Andy, there is someone I would like for you to meet.\" \n\n*****\n\nAllan was at the hospital when Danny and Janet arrived. After getting the x-ray and wrapping the ankle he stayed to finish a report. When he pulled into the parking lot he saw that the game was over and most everyone had left. As he walked towards the bleachers he saw his daughter carrying a young boy. \n\n\"Well who do we have here?\" Allan asked with a big grin. \n\n\"What's your name?\" Ellen asked. \n\n\"AN...DEE!\" he said with a smile. He looked at the strange man and quickly turned around in Ellen's arms. \n\n\"This is your father Andy,\" Ellen said as she twisted him back to the front. \n\nAllan looked into the boy's eyes and knew that he was his son. \"God, he looks so much like you did at the same age.\" \n\n\"He's your son Allan,\" Aunt Helen said walking around. \n\n\"I have a son,\" Allan said getting choked up. He took the boys hand and felt him grip it hard. \"And you are so strong.\" \n\n\"Well look who finally made it,\" Janet grinned as she helped Danny hobble their way. \"And who is this cute boy?\" \n\n\"AN......DEE!\" he said again. \n\nJanet and Danny moved over and gave him high fives. The bunch of them headed towards the cars. \"What's for dinner?\" Allan asked. \n\n\"The river restaurant,\" Ellen answered. \"And Aunt Helen and Andy are coming along if it's OK with them.\" \n\nHelen smiled. \"We would love to. Wouldn't we Andy?\" \n\nAs Allan and Janet headed toward his car Ellen stopped them. \"Do you mind if I ride with my father? I have some news that he needs to hear.\" \n\n\"Uh...sure. I'll ride with Danny.\" \n\nDanny stood back not sure what was going on. \"Say where is Lisa?\" \n\nEllen grinned. \"She jumped into Corey's car.\" \n\n\"Oh,\" he said winking.\n\n*****\n\nBy the time they got to the restaurant Allan knew about Maria taking off again and leaving Andy behind. \"She might be back tomorrow.\" \n\n\"But if she doesn't come back or even if she does can't we file for custody?\" Ellen asked. \n\n\"Whoa,\" Allan said sitting the car. \"We are not sure that he is really mine.\" \n\n\"Dad.\" \n\n\"Well Ok. It looks like he is but we have to take this slow.\" \n\n\"I'm sure Janet will welcome him.\" \n\n\"Janet?\" \n\n\"Oh come on. You know you are going to ask her to marry you.\" \n\n\"It's that obvious huh?\" \n\n\"Yeah but you better not do it before Danny asks me?\" She laughed as she jumped out of the car. \n\n\"WHAT? STOP! COME BACK HERE!\" \n\n*****\n\nThe weekend coming up was the one that Janet and Allan had planned on getting away to the cabin. Now that they had made up they had a lot of things to discuss. It was after school on Friday that Ellen sent her dad off to pick up Janet. She called Danny's cell phone as her father's car backed out. \n\n\"They are almost gone. Daddy is heading your way.\" \n\n\"Let's see five minutes to get here and another five to load the car and say goodbye. I should be there in about twenty minutes or so.\" \n\n\"Are you sure your ankle is not too sore to mess around?\" She teased. \n\n\"What ankle?\" He laughed. \"As long as I stay off my feet I should be fine.\" \n\n\"If you are not on your feet where will you be?\" She whispered. \n\n\"You know,\" he whispered as he saw his mother carrying down her small suitcase. \n\n\"Tell me,\" she insisted. \n\n\"Inside of you,\" he said quickly before Janet came within understanding what he was saying. \n\n\"I bet you can't last more than five minutes,\" Ellen whispered. \n\n\"That's a bet,\" he said. \"I'll call you tonight about dinner. I love you..bye.\" \n\nJanet smiled. \"Like you will wait to see her until dinner and what was that about a bet?\" \n\n\"Nothing uh Ellen said Mr. Brand is on the way so we need to get you outside. It's a long drive to the mountains.\" \n\n\"OK but you better behave yourself. No wild parties and no fighting.\" \n\n\"Sore ankle remember?\" He smiled. \n\n\"Yeah right,\" she snickered. They heard Allan's car horn and walked outside to say goodbye. \n\nDanny waved at Dr. Brand and his mother as they drove away. Danny hurried to lock the door and then ran to his car. His extra clothes and toothbrush were already packed away in his trunk. Five minutes later he pulled into Ellen's driveway and rushed to the front door. He saw the note. \"Come inside and remove all of your clothing.\" \n\n\"With pleasure,\" he thought. He peeked inside and saw that it was quiet. After closing the door and stripping he hoped that it was not surprised birthday party as he walked naked down the hallway. After peeking into the empty first floor rooms he took his time going up the stairs and heard soft music coming from the master bedroom. \n\n\"El...len...\" he said as he neared the open doorway. \"Where are you?\" He turned the corner and froze. The curtains were drawn making the room dark and except for the candles on the night tables he would have had trouble seeing her lying in the middle of the bed under the sheet. \n\n\"It's about time,\" she smiled. \"Is that for me?\" She asked looking at his hard rod. \n\n\"Yes. So about this five minute bet. What do I get if I win?\" \n\n\"Anything you want for the whole weekend,\" she said feeling the juices already seeping out. She took the top of the sheet and slowly pushed it off her firm breasts and cherry red nipples. \n\n\"That's not fair,\" he grinned. \"Also, I'm not sure about how we should do it. I mean my ankle and all.\" \n\n\"You should be on the bottom and let me do most of the moving,\" she giggled. \"And what do I get when you don't make the five minutes?\" \n\n\"The same,\" he grinned figuring a loss might be better than a win. \n\n\"Good.\" Ellen turned back the sheet until he saw that she had shaved her pubic hairs away. \n\n\"Na...na...now that is really NOT...FAIR!\" \n\n\"All's fair in love and bets,\" she giggled. Her left leg rose upward which opened her outer and then inner lips. \n\n\"I'm not looking,\" he said as he slithered onto the bed next to her. He closed his eyes and reached out for her body. \n\n\"Look at it Danny,\" she whispered. \"Look how smooth it is for you to touch, and kiss and.......fuck.\" \n\n\"You're so bad,\" he said while peeking down as she rubbed her fingers into her damp slit and pushed the lips outward. He started to push her onto her back but she resisted. \n\n\"I'm on top remember? Your ankle is hurting you.\" \n\nDanny felt his body already on overload. \"Hurry and get on and we can start the five minutes.\" \n\nEllen giggled and moved over him. She looked down between their naked bodies to line up her moist valley. \n\nDanny waited for her to slide down onto his shaft but she rubbed up and down it instead. \"That's definitely not fair.\" His hands cupped her ass to stop the water slide. \n\n\"It doesn't matter because you still won't make five minutes,\" she said while she opened her legs wider and reached under to guide his cock into her moist depths. She looked at the clock on the night table and the numbers changed to 6:35. \n\nDanny tried to think about something else as her pussy squeezed his rod and moved up and down. Her soft breasts and hard nips rolled over his stout chest as her lips kissed up his neck to his lips. \n\n\"Oh shit,\" he moaned while looking over to see only one minute had passed. \"That clock is broken.\" \n\nEllen used all of her knowledge and tricks. She suckled on his earlobe and played with his hard nipples. She heard his breathing become irregular and more rapid and knew he was about to pop. \n\nDanny finally zoned out what was going on. He thought about all the homework he had that weekend which was not a pleasant thought. As her tongue, fingers and pussy worked on him he smiled and relaxed. \n\n\"Shit,\" Ellen thought feeling his body go less tense. She turned and saw that almost three minutes had gone by. She went into plan B. \"Your cock is soooo big and hard. It's filling my pussy up.\" \n\nDanny had heard her say the \"f\" word a few times but never heard her talk this dirty. He twisted his head and ear away because she had broken his thoughts about homework. \n\n\"Come back here,\" she giggled. \"I'm going to fuck you all weekend Danny. We are going to fuck in every room and in every position we can think of.\" \n\n\"Don't,\" he groaned looking over to see that less than a minute remained. \n\nHer body was in full rhythm now sliding fully up and back. \"Cum inside of my hairless pussy Danny. DO IT!\" \n\nDanny gritted his teeth and tried his best but felt the first cum blast escape and then the flood gates opened. \"OH SHITTT!\"\n\nFive seconds later the clock moved to 6:40PM. \n\nIt was an hour later as Ellen sat on the sofa naked that she moved her left foot to Danny's lips. \"Suck my toes.\" \n\nHe smiled and did as his master said and moved upward with her commands until his tongue dove deep into her sex. He realized that oral sex on a hairless pussy was a whole lot better. \n\nDanny was spent around midnight after fucking her twice and getting her off orally twice. \"Rest up baby because we still have two more days,\" she giggled. \n\n*****\n\nAllan and Janet waited almost an hour before she stood and held out her hand. \"Are we going somewhere?\" He asked. \n\n\"Yes, I'm taking you to heaven,\" she giggled. They stripped on the way to the bedroom and by the time they made it under the sheets their lips were locked and their tongues mixing. ",
        "Normally they would take their time enjoying the foreplay but thinking about it during the long ride had raised their passions until they couldn't wait. \n\n\"Hurry,\" Janet commanded while reaching between her legs to find his hard shaft to direct it into her depths. \n\n\"Slow down,\" He begged knowing that he was so close. \n\n\"Don't need to,\" she laughed. As soon as he entered her she rubbed once over her clitty and climaxed. \"NOW ALLAN NOW!\" \n\n\"Oh shit...ME TOO!\" Their bodies kept moving together for another minute before they collapsed. \n\n\"So tell me more about this fantasy,\" Janet whispered while she toyed with his limp dick. \n\n\"No, it made you upset and I'm not going there again,\" he said pulling her fingers from his spent manhood. \n\nShe moved her fingers up to his nipple and played with it for a few seconds. \"What made me upset was that it involved Maria.\" She sucked the hard bud into her lips and flicked it back and forth with her tongue. \"Maybe I wouldn't mind trying it with another woman.\" \n\n\"Jesus,\" he moaned as she squeezed his growing manhood again. \"You don't have to.\" \n\nShe smiled feeling the blood gushing into his cock. \"Are you sure? This is telling me something completely different.\" \n\nJanet moved her body upward until she could suck on his ear. \"There is someone at the hospital that I would consider.\" \n\n\"Who?\" His cock was fully enlarged. \n\n\"Jenna.\" \n\nAllan thought of the young red haired woman who had recently divorced her husband. \"Why her?\" \n\n\"For two reasons,\" Janet answered. \"First of all she reminds me of my high school girlfriend who I experimented with.\" \n\n\"You experimented. What did you do?\" \n\n\"Let me tell you the second reason.\" \n\n\"Ok.\" \n\n\"She has been coming on to me in the nurse's locker room.\" \n\n\"Tell me. What did she do?\" \n\nJanet grinned. \"She told me about how horny she was since she has not been with anyone for over a year. And, that her husband had left her for another man.\" \n\n\"Ouch,\" Allan grimaced. \n\n\"And that's when she said she should find another woman to make it even.\" \n\n\"Were you alone?\" \n\n\"Yes, I didn't know what to say and didn't stop her when she kissed me.\" \n\n\"Kissed. Like on the cheek?\" \n\n\"Nope. Kissed like with her tongue.\" \n\nShe felt his cock jerk. \"This does turn you on doesn't it?\" \n\n\"Yes, what happened then?\" \n\n\"We kissed for over a minute and then I pushed her back. I told her that I was in love with you.\" \n\n\"And....\" \n\n\"And, then she said that you could join us. But, I told her that it wasn't going to happen. This was over a month ago.\" Janet shifted her body downward until her lips engulfed his ready to fire cannon. This time he lasted a little bit longer. \n\n*****\n\nBy the time Sunday rolled around both Allan and Danny were totally wiped out. Danny actually went home early to finish his homework which surprised his mother when she came in the door. \"What happened? Ellen and you didn't break up right?\" \n\nHe laughed. \"No, we had to finish our homework assignments and couldn't do it while we were together. How was your weekend?\" \n\n\"Not bad,\" she said trying to look bored. Finally a big smile broke out. \"It was wonderful.\" \n\n\"No engagement ring I see,\" he joked. \n\n\"I didn't want to scare you,\" she said as she reached into her pocket and pulled out a huge diamond. After she put it on she held it up. \"What do you think?\" \n\n\"I think I'm about to be dating my sister.\"\n\n***** \n\n\"That's great!\" Ellen yelled when she found out the news. She hugged her father and quickly called Danny. \"Did you hear?\" \n\n\"Yes,\" he answered. \"So now you are going to be my sister.\" \n\n\"Step-sister,\" she corrected. \n\nThat night they got together and opened a bottle of champagne. They were all one happy family. \n\n*****\n\nDanny's ankle healed a week later but he stayed off hard practicing in preparation of playing the Army high school team. College recruiters were all over him and after interviewing with Arizona State, Georgia, North Carolina and Miami he had just about all he could take. \n\n\"There is one more outside,\" Coach Wright said. \n\n\"But, that's all I agreed to,\" Danny said puzzled. \"Who is it?\" \n\n\"West Point,\" the coach answered. \"But I'll send him away if you don't want to speak to him.\" \n\n\"West Point,\" Danny repeated. The thought of going to West Point had not entered his mind. \"I need to call my mother first.\" He picked up his phone. \n\nJanet had just moved to the small nurse's room when her cell phone buzzed. She saw that it was Danny. \"So which school do you like the best?\" \n\n\"Ma, West Point is here to speak to me.\" \n\n\"No, that is not an option,\" she said very quickly. \"Tell them that you are not interested.\" \n\n\"But Dad would want it,\" He said knowing that she would be upset. \n\n\"Danny no, I'm not going to lose you as well.\" \n\n\"But...\" \n\n\"NO!\" \n\nDanny hung up the phone and looked at the coach. \"We are not interested.\" \n\n*****\n\n\"We are glad to get you back,\" Corey said to Danny as the bus headed down the interstate towards the base. \"So are you 100%?\" \n\n\"The answer is yes,\" Danny grinned. Actually the ankle was still sore if he bent it a certain way but he didn't tell anyone. As the bus neared the gate they saw the people standing by the edge of the road. \"What is that all about?\" \n\n\"Welcome home Danny and Janet Upon,\" Corey read on the first sign. \"That should answer your question.\" \n\n\"Damn,\" he said looking out the window at the number of people both young and old waving American flags and waving. The bus stopped at the gate and two high ranking officers stepped on board. They spoke to the coach who turned to Danny. \n\n\"Danny, would you come here a minute?\" \n\nThe rest of the bus was dead quiet as the noise from Danny's cleats filled the air. He stopped in front of a man with two stars. \n\n\"Danny, I am here to welcome you and the team. It is an honor son that you have come back to us.\" He stuck out his hand for Danny to shake. \n\n\"Thank you sir,\" Danny said feeling uncomfortable being in front of his team mates. \"My mother and I really appreciate the welcome that you are doing for us.\" He shook the other man's hand and after the two left the rest of the team gave him a hard time on the way to the field. \n\nThe team had not played on the base before and was surprised at the size of the seating and all of the cars parked nearby. \"Jesus,\" Corey whispered. \"How many people are here?\" \n\n\"I don't know,\" Danny answered. The team was directed to the back of the visitor's locker room which connected to the dug out. \n\n\"I hope my mother makes it in ok.\" \n\nDanny stopped when he entered the stadium because a wave of Army green and grey filled the stands. \"Come on,\" Corey said before grabbing his wrist. \n\nAs they moved out of the bleachers the people in the stands all stood and applauded. Danny tried to hide among his fellow players but they kept clapping. \n\n\"Danny you have to wave or something,\" Coach Wright whispered. \n\nDanny blushed and moved out of the bunch. He looked around and waved his hat. They clapped louder and then stopped when he put on his glove and headed out to warm up his arm. \n\nThe stands were full about ten minutes before the game was supposed to start. He looked for his mother, Ellen and Allan among the group wearing civilian clothing but didn't see them. Finally he moved over to the fence and waved at Buttons. \"Where are they?\" \n\n\"In the general's box,\" she said pointing up into the private seating around behind home plate. \n\nDanny saw Ellen stand and wave. He waved back and went back to swing some bats expecting to lead off again. \n\nCoach Wright walked over when he saw him on the on-deck circle. \"I'm batting you clean-up.\" \n\n\"But I like to lead off,\" Danny said. \n\n\"You know you can fool some people about your ankle but not me. I need you to bat clean-up.\" \n\nDanny frowned and put down the bats. \n\nThe teams were announced and Danny tried to focus on the game. The Army pitcher was a big left handed thrower who seemed to be throwing over 90 mph. \"Just make him throw strikes,\" Coach Wright yelled from the third base coaching box. \n\nThe first two Panthers made quick outs with weak ground balls which brought up Corey. Corey dug in and worked the count to three balls and a strike. As the next pitch came down the middle he went with the pitch and almost took off the pitcher's head. \n\n\"Good job Corey!\" Matt yelled. \"Come on Danny. Make contact.\" \n\nDanny fixed his batting helmet and headed towards the plate. As soon as his name was announced the people in the stands again stood and clapped. \"This is not right,\" he thought as he looked around and waved. Finally they sat back down. \n\nAlthough Danny was an Army celebrity the players on the Army team had heard enough. They were upset that their own fans were rooting for another team and another player. As Danny dug in and readied himself for the first pitch he saw it coming into his hip. He quickly jumped back without it hitting him. \n\nDanny smiled and looked at the big dumb looking pitcher before looking at the coach for a sign. Again he dug in and again he readied himself. The pitch again came inside but Danny was expecting it. He turned into the fast ball and smashed it high down the third base line. \"Go.....go...stay fair,\" he said running to first base. He knew it was fair when the fans started screaming. \n\n\"Lucky shot,\" the second baseman said to him as he rounded second. Corey was waiting for him at home as he crossed the plate. \n\n\"Two zip,\" Jimmy said to Danny when he walked into the dug out. They watched the next batter strike out and headed out to the field. \n\nJimmy had control problems in the bottom of first and allowed a run on a sacrifice fly. \"Sorry guys. Let's get it back.\" But the big thrower stuck out the next three Panthers in order.\n\nJimmy got his control back and set the Army team down in the bottom of the second. The score remained 2 to 1 as Danny went to the plate with Corey on second base and two outs. The catcher called time and huddled with the pitcher on the mound. They both looked at the dugout and at the Army coach who pointed to first. \n\n\"Shit,\" Danny whispered as he got ready to hit but the catcher stepped out and caught an intentional ball outside. As Danny ran to first with an intentional walk the Army fans booed their own team. \n\nDanny stood on the base seeing the Army players getting pissed. \"Sorry man I know how you feel,\" he said to the first baseman that only snared back at him. \n\nThe fifth batter worked the count to full and made great contact hitting the ball down the first base line. Danny took off with the pitch and was rounding second when he saw the coach waving him to third. As he slid into the base he felt the ankle pop again. \"Oh Shit.\" \n\n\"Are you OK?\" Coach Wright asked after calling time out. \n\n\"Yeah, I'm fine,\" Danny said with his ankle hurting like hell. He looked up in the general's box and waved to his mother. \n\nLuckily the next batter stuck out. As Danny limped to the dug out Coach Wright pulled him aside. \"I'm replacing you at second.\" \n\n\"No coach please. I need to play. Please don't take me out.\" \n\nCoach Wright looked at his bench. \"Aaron, go and play second. Danny I'm putting you at designated hitter.\" \n\nDanny's eyes lit up because he knew that Aaron would be better at second than he would with one leg. When the announcement was made the fans booed until they heard that Danny was staying in. \n\nWith the score Panther's 3 and the Army base 1 Jimmy gave up a run in the bottom of the fourth on a towering home run to center. The Army player looked to be around twenty-five as he touched home plate. No one scored in the fifth and with the score 3 to 2 the Army team tied it in the bottom of the sixth. \n\nDanny came up third in the seventh with two outs knowing that they needed a run and also knowing that he could barely walk to first base not less run there. Since the sore ankle was the left one he dug in with his right foot with most of his weight. He took the first pitch for a strike and the next three for balls. Again he set his right foot and again he took the strike. Now with a full count and with the game on the line he glanced up at his mom and took his normal stance. His left ankle felt like it was about to fall off when he turned on it and made contact with the ball. \n\nThe whole stadium turned and watched as the ball headed towards the wall in left center. It was so high that both outfielders had a lot of time getting to it but as they both jumped to pull it down it hit the top of the wall and bounced into the stands. It was Danny's second home run of the game and one that put the Panther's ahead. \n\nDanny gritted his teeth and hopped down the first base line. Tears from the pain poured down his face but he was not going to stop. He heard the fans and his team mates cheering as he touched first base and limped towards second. As he neared the base he saw the second baseman toss down his glove on the ground and start clapping. He turned and saw the other Army infielders doing the same and then the whole Army bench. Baseball suddenly didn't matter to those in attendance. They were there to honor a fallen soldier and found out that his son was just as tough and devoted to his team. \n\nDanny stopped after stumbling past the shortstop that ran over to help him but he put up his hand. \"I'm ok.\" \n\nCoach Wright also moved over to offer him support but the umpire waved him away. \"You can't help him coach.\" \n\nDanny made it to third and looked at home plate which looked like a mile away. As he took the first step he tried to put weight on his foot and stumbled down onto his knee. \n\nCoach Wright looked at the umpire. \"You do whatever you have to do.\" He moved over and hooked his arm under Danny's. They slowly moved towards home plate together and then the opposing coach ran out of his dugout and grabbed Danny's other arm. \n\n\"DANNY! DANNY! DANNY!\" The fans from both sides screamed together. \n\nDanny forced a smile up at his mom and the girl he loved as he stopped and tapped home plate with his good foot. \n\nThe opposing coach looked at the umpire. \"You better signal that he scored.\" \n\nThe umpire smiled and signaled a run up to the official scorer. \n\nThe whole team moved out to help him back to the bench. He was met there by Allan. \"Let's look at that ankle son.\" He realized that he called Danny son again and froze. \n\n\"Thank you dad,\" Danny grinned. They quickly put ice on the ankle and Danny knew that he was out of the game. He looked at Jimmy. \"It's now up to you.\" \n\nThe next batter struck out and the Army team got the tying run on second but Corey made a diving stop of a line drive and doubled the man on second. The Panthers had won the game but no one left the field or the stands. Someone started to clap slowly and then the others joined in. A few minutes later the applause was loud and intense. \n\n\"Help me out there,\" Danny said to the coach and his new dad. \n\nDanny moved through his team mates and stood in front of the many soldiers and their families. Tears rolled from his eyes as he waved and then saluted. \"I love you all.\" He turned and moved into his mother's arms. \n\n***** \n\nDanny looked up from the back seat and saw the car moving up the cemetery hill and held Ellen's hand as they neared his father's grave. Janet pointed out to Allan where to stop and then they all helped Danny make it to the headstone. \n\n\"Is that your necklace?\" Allan asked his daughter looking at the old chain and heart on the white cross. \n\n\"It was,\" Ellen answered holding Danny upright. They stood silently in many thoughts until Janet spoke. \"Josh, you would have been very proud of your son today. Yes, he hit two home runs and played with a very bad ankle but you would have been proud because he showed the courage and leadership that you always did.\" \n\nJanet moved over and held Allan's hand. They were all looking at the grave and did not see the team bus and the families in the cars that had pulled up behind them. The whole team spilled out of the bus and moved up behind Danny. When he heard their footsteps he turned and smiled. \"You all being here means so much to me.\" \n\nThe coach walked through the players, past Danny to the grave. He pulled out a baseball signed by all of the team and put it by the cross. \"Thank you Josh Upton for giving us Danny.\" \n\nMatt moved to Danny and hugged him and the team moved up and lightly smacked him on his back. They moved back to their cars and buses and left the family alone again. \n\n\"I guess we need to get your ankle checked out,\" Allan said. \n\n*****\n\nThe ankle was sprained and again Danny had to stay off of it for a week. Ellen brought him home his homework and made him do it before he could hold and kiss her. The team squeaked out two wins without him and then the state playoffs started. \n\n\"I'm ok coach,\" Danny said after walking into his small office by the gym. \"The doctor gave me the release this morning.\" \n\n\"Good,\" Matt smiled. \"We need you because if we can win the next four games were will be state champs. Take it easy in practice for the next few days.\" \n\n\"Yes sir.\" \n\nThe week went by quickly and the Panthers easily defeated the first two teams in their division and the second ranked team in the other division. The championship game brought them up against Todd and his new team. \n\n\"Now concentrate on the game,\" his mother said at breakfast that morning. \"But if he hurts you again I'll be the one after him.\" \n\nDanny laughed. \"After the whipping he got at Candy's party I don't think Todd will be doing much fighting.\" \n\nThe game was held at the University of Georgia's field of which holds 3,291 fans. Normally the state high school playoffs were lucky to get 1000 fans. Today was the first time that fans were turned away. \n\nDanny moved back to lead off batter and smacked two singles in the first three innings but was stranded on the bases. Todd doubled in the top of the third and slid easily into second base under Corey's tag. He brushed himself off and smiled over at Danny. \"You chumps are going down.\" \n\nDanny glanced over at Corey who smiled as he hid the baseball in his glove. \n\n\"You better get a big lead because as slow as you are I doubt if you can score on a hit,\" Danny said giving it back to him. \n\n\"I'll outrun your slow ass any day,\" Todd glared back. \"I don't need a big lead.\" \n\nDanny watched as Todd backed off of second base while keeping his eyes on Danny. \n\n\"TODD GET BACK!\" His coach yelled from third base. \n\n\"Shit!\" Todd cried out as he turned to see Corey running at him. He lifted his foot to step safely back on second when Corey tagged him out. He had fallen for the old hidden ball trick. \n\n\"Dumb shit,\" Corey laughed as he held up his glove with the ball in it. It was all Todd needed to send him over. He turned and without warning smashed Corey in his face with his fist. \n\n\"That's it!\" Danny yelled as he ran towards Todd who turned with fear. \n\nTodd was able to sucker punch Corey but he didn't want anything to do with Danny. As the teams cleared their dugouts and ran towards second base Todd took off running towards the gate in left field with Danny at his heels. \n\n\"Come back here you chicken shit!\" Danny yelled. Normally he could have caught him but he didn't want to test his ankle. He stopped at the gate and watched Todd running down the street. By the time he made it back to the infield the teams had gone back to their dugouts and the managers were talking with the umpires. He hoped that he had not been kicked out. \n\nCorey was standing on second when Danny walked up to him. \"What's going on?\" \n\n\"Todd was ejected but now they are talking about us.\" \n\n\"We didn't do anything,\" Danny whispered. \n\n\"The umpire heard me call him dumb shit,\" Corey said worried. The scored was zero to zero in a very important game. \"And I guess they saw you chasing him.\" ",
        "The fans were restless as they waited for the umpire's decision. Finally both managers walked out of the discussion both looking pissed. The second base umpire looked at Danny and Corey and with one motion turned and pointed towards the exit gate by the dugout. \"WHAT?\" Danny yelled. \"You're kicking us out?\" \n\n\"Not you son,\" the umpire said as the fans started booing. \"Luckily you didn't catch the other player.\" \n\n\"But...\" \n\n\"Let it go Danny,\" Corey said. \"We don't need you getting ejected too.\" \n\nAs Corey walked off the field to the loud boos from the fans the coach walked over to Danny. \"I need you to take short.\" \n\n\"Coach, Corey didn't do anything.\" \n\n\"The umpire said that he started it.\" \n\nDanny was upset but kept his cool. He moved over to short and had trouble at first getting the range on his throws to first base. \n\nWith Todd and Corey out the game stayed scoreless. With a runner on second with two outs in the seventh inning Danny walked to the plate. The pitcher was not that fast but had a lot of other pitches including a change up that he used effectively. \n\nDanny stepped in without expecting a fast ball. The first pitch was low and the second one outside. With first base open he knew the pitcher was being very careful. He also knew that if he threw another ball that their manager would intentionally walk him. Danny called time out and moved out to talk to Coach Wright. \n\n\"What's wrong?\" The coach asked. \n\n\"If I get another ball I think that they will walk me,\" Danny said. \"I mean that's ok but I would like to get a pitch to hit.\" \n\nThe coach too wanted Danny to hit. \"What do you want to do?\" \n\n\"Even if the pitch is out of the strike zone I want to swing at it. If the pitcher gets ahead in the count I think he might challenge me.\" \n\nThe coach smiled. \"Go for it.\" \n\nDanny moved back into the batters box and waited for the pitch. He saw the pitch heading high and outside and lunged to hit it but missed. With the count two and one he swung again at a ball low almost in the dirt. Now with an even count of two and two he figured the pitcher was coming at him. \n\nDanny expected the change up and waited for it. He timed it perfectly and drove the ball down the first base line. As he rounded first he saw the base runner rounding third. \"GO.....GO!\" he yelled knowing that they only needed him to score. \n\nThe right fielder grabbed the ball on one bounce and rifled the ball towards home. Danny stepped on second and turned to watch as the runner smashed into the catcher who was blocking the plate. Their bodies smashed back onto the ground. The fans were standing watching the dust clear and the bodies untangling. The umpire waited to see if the ball was still in the catcher's mitt but it was empty. He didn't see the ball until the catcher rolled over. \n\n\"SAFE!\" \n\nThe Panthers had won the state championship. A huge celebration erupted on the field and then in the dugout. Danny was named the most valuable player in the tournament and the news reporters were waiting for him as the team walked out towards the bus. \n\n\"Danny! Are you going to college or to the pros?\" A cute blonde reporter yelled. \"We hear that you might be the number one draft pick.\" \n\nDanny smiled and shrugged his shoulders. \"I'm not sure.\" He looked at Ellen who was standing with the families by the bus. \"I guess we need to talk.\" \n\nSchool was almost out and the college recruiters called or texted almost everyday. Ellen and Danny sat with their parents to make a decision. \n\n\"Let's go around the table,\" Danny said looking at Allan first. \n\n\"College,\" Allan said. \"I know that you might be the first pick and get a huge signing bonus but you are still young.\" He looked at Ellen. \"Both of you are.\" \n\n\"Mom?\" \n\n\"We don't need the signing bonus. Money is not an issue so I agree with Allan.\" \n\n\"Ellen?\" \n\n\"I don't care about money or even college. I just want us to be together.\" \n\nThey all looked at Danny who looked back at his mother. \"What would dad want me to do?\" \n\nJanet sat back. \"Wow. I'm not sure. When you were born he said that you would be a better baseball player than he was. But once a news reporter asked him if he wanted you to grow up and be like him. He said.....he said that he wanted you to not make the same mistake that he did.\" \n\n\"And....\" \n\n\"He never finished it but we both knew that he wished that he had gone to college first. Danny we made the decision to go into the pros because we needed the money. We needed the money because we wanted you to have what we didn't have.\" \n\n\"A chance to go to college.\" Danny finished. \n\nDanny and Ellen took a walk after dinner. \"I'll be turning down at least a two million dollar signing bonus.\" \n\n\"I know.\" She held his hand tighter. \"But who says that you still won't be offered one after you finish college?\" \n\n\"True,\" he grinned. \"I want what is best for us.\"\n\n\"I didn't want to tell you yet but I got a letter from Georgia today. They accepted me.\" \n\n\"I thought that they turned you down already.\" \n\n\"They did. I guess the baseball coach had a long talk with them.\" \n\n\"Yeah, he's been after me for a few months now. But what if I decide to go pro or go somewhere else?\" \n\n\"They said I would still be eligible.\" \n\n\"What do you want to do?\" He asked. \"Everyone keeps asking me but I want what you want.\" \n\n\"GO BULLDOGS!\" \n\n*****\n\nThe news media jumped all over the fact that Danny had turned down millions to go to school. Since he was staying in Georgia his popularity in the state was astounding. To make it even better Corey and Jimmy also accepted full rides to the U of G. \n\nThe wedding was rushed ahead before Danny and Ellen left for school. It was a huge ceremony that filled the Panther baseball stadium. Huge tents were erected in the outfield and only the best music and food was on display. Ellen was Janet's maid of honor and Danny served as Allan's best man. Grandma was picked to be the flower girl. \n\nAs the wedding party sat down at the huge front table Danny stood up with his champagne glass to make a toast. The stadium was completely silent. \n\n\"I'd like to make a toast to the wedding couple. It is my honor to be selected as best man by my new dad because not only has he made my mother very happy we have developed a special relationship as well. As you all know I lost my father not too long ago and an immense emptiness filled my heart. I'm happy to say that a lot of that emptiness has gone away. Thanks mostly to my new family. \n\nPeople have asked Ellen and me about having our parents dating. At first we didn't think it was such a good idea. But then what happened was that the love we had crossed over to each other.\" He stopped and grinned at Ellen. \n\n\"So before I make the toast I have something to do.\" Danny put down the champagne and walked around his mother and new father. He dropped to his knees next to Ellen and took her hand. \n\n\"Ellen will you marry me?\" \n\n\"Oh my God,\" Janet said with tears running from eyes. She hugged Allan as they all looked at the shocked girl. \n\nEllen took a deep breath and lifted Danny up to face her. \n\n\"YES! I WILL MARRY YOU!\" \n\nThe whole stadium suddenly broke out in huge applause. It was a bonus none of them had planned on. They watched as Danny and Ellen kissed and then the four of them hugged. \n\nDanny moved back to the microphone. \"Wait! Please be seated!\" \n\nHe held up the champagne glass again. \"To a very special couple. May their lives be filled with lots of love and happiness!\" The six hundred guests took a drink and then clapped. \n\nIt was later as Danny danced with his mother that she smacked his butt. \"You should have said something.\" \n\n\"I'm sorry to steal some of your show but I thought that it was a good time.\" \n\n\"It was,\" Janet whispered. \"But when are you planning on getting married?\" \n\n\"We will wait until at least our junior year,\" Danny answered. \"As long as you can help us with the rent.\" \n\n\"Since you are turning down millions of dollars I think we can afford to support you two for a while.\" \n\nIt was later as Allan and Janet made their way around the tables that they stopped and picked up little Andy. As Janet swung him around in her arms on the dance floor Aunt Helen pulled Allan aside. \n\n\"I didn't want to tell you during the wedding ceremony but I received a letter today from Maria.\" \n\n\"What did she want?\" \n\n\"It's not what she wants. It's what she doesn't want.\" She turned and looked at Andy who was laughing while pretending to dance with Janet. \n\n\"Andy. My son?\" \n\n\"He's yours if you want him,\" Aunt Helen smiled. \n\n\"Oh my god,\" Allan said with more happy tears. \"This is the best day of my life.\" He ran over to Janet and Andy and hugged them in the middle of the dance floor. Aunt Helen watched as he whispered to his new wife. She waited for Janet's reaction and knew that it was good when she turned Andy to her and kissed his forehead. \n\nAndy wiped off the kiss which made everyone laugh. \n\nIt was a few weeks later as the family walked towards the boat. Danny stopped and grinned as he read the boats new name. \n\n\"BULA-BULA.\" \n\n*****\n\nEnding note: Some of you still would like for this story to go on so I left out the epilog in case I might want to do it someday. I received a lot of emails telling me about their lives as Army Brats and how this story brought back some good memories. We should all think about what sacrifices the families of our service men and women go through and make sure we support them in any way we can. Thanks again, send me your thoughts and don't forget to vote. Love you.....Slick. Bula-bula. "
    ],
    "authorname": "Slickman",
    "tags": [
        "army",
        "teenage",
        "baseball",
        "sports",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/army-brat-ch-06"
}