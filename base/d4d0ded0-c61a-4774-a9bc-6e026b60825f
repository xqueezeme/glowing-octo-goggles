{
    "title": "Helldancer",
    "pages": [
        "Here you go, my people: The sequel to 'Dealmaker'. Yes, I know this one to a really long time to write. I apologize for that. Honestly, I had never intended to continue 'Dealmaker' because I had no idea where to take the story. But I've had so many of you ask for me to continue it that I decided to give it a try. Congratulations, people, your perseverance worked.\n\n\"Claire.\"\n\nThe voice, deep and melodic, resounded in the encompassing darkness. The blackness was so consuming, she believed for an instant that she was dead. Fear gripped her mind, crushing down on her thoughts. What if she was dead?\n\nShe paused. Pressing her hand to her chest, she felt the familiar pounding if her heart. She relaxed a bit, letting out a heavy sigh of relief. If she had a heartbeat, that mean she wasn't dead. Elation washed over in waves. She was still alive, but was clueless as to where she was.\n\nMemories trickled back into her mind. The church, the priest, the demons... it all came back in a blinding wave of misery and angst. She rubbed her eyes with her palms, trying to scrape the delirium from her mind. Her arms brushed against soft fabric, smooth and warm under her flesh. The fabric rubbed against the rest of her body as she moved, informing her that she was naked. That was strange...she'd been completely dressed when the demons had come to collect her.\n\nHow the hell?\n\n\"Claire.\" That voice, stronger this time, brought her back to reality.\n\nStartled out of her musing, she pushed herself up onto her knees. Soft sheets fell around her, pooling around her ankles and hands. As soon as she sat up, an enormous pile of embers flared to life, illuminating the cavernous room. Rocky walls, twenty feet high and covered in a slick spattering of blood, stretched up to meet at a point above her. Claw marks marred the greasy surface, and thick globs of slime dripped from the stalactites on the ceiling.\n\nPanicked and confused, she scrambled backwards, crashing softly into a mountain of thick pillows. Struggling to claw herself out of her plush prison, Claire shoved the pillows to the side and hauled herself to her feet. Allowing her eyes to adjust to the new light, she scanned her new surroundings.\n\nShe had been sleeping on a pile of thick blankets spread out on the stone floor, the pillows shaped in a semicircle around the makeshift bed. The room was bereft of furniture save for the bonfire now burning brightly. She shivered, not out of cold but of fear, and began rubbing her arms for comfort.\n\nDeep laughter resounded in the shadows. \"Good girl. I'm glad to see you're awake.\"\n\nSurprised, she whipped around to see the white demon reclining in an enormous chair carved straight out of the wall. He was leaning to one side in the chair, his white arm resting on the intricately carved surface. His other hand tapped long talon-like nails on the stone. He was smiling at her, a warm grin that calmed her nerves a bit. His twisting black horns were stained orange from the firelight, making him look as though he wore a crown of flames.\n\n\"I trust you had a good sleep.\" He cocked his head to the side, curious. His voice, as deep and seductive as ever, swirled intoxicatingly around her skin.\n\nStill shaky, she forced herself to swallow. \"Y-yes.\"\n\n\"Good, good. We did the best we could making our world comfortable for you. Though it's probably not as welcoming as your own bed would be.\" He smiled wider, his lips parting to reveal rows of black teeth gleaming like onyx in the soft firelight.  \n\nFrightened, she stumbled back a step, tripping over the pillows once again. She fell backwards, landing on her ass with her legs spread wide. Her companion grinned, clearly enjoying the new view.\n\nRegaining her sense of modesty, she pulled her legs back and wrapped her arms around her knees, blushing furiously. Fuck. She'd been cursed to belong to hell since she was a child, abducted by from a church by a hoard of demons, and stuck in this slimy pit with one of her captors. And the first mistake she'd made was giving her new owner a full view of her pussy. How much better could this possibly get?\n\n\"My goodness. You're certainly well-equipped, aren't you?\" His smile softened, though his eyes remained as hungry as ever.\n\nShe looked away, ashamed. Years of being raised by an overbearing religious zealot did nothing to prepare her for being the sexual plaything of demons. If anything, her grandmother had set her up for just the opposite.\n\nOh, yes, Claire. This is the perfect way to start things off.\n\n\"Ah, I apologize.\" Rising up out of his throne, the demon quickly made his way to her side and held out a clawed hand. \"I meant no harm by it. I was simply complimenting you on your form, nothing more. You have a lovely figure.\"\n\nShe stared at his hand for a moment, the sharp talons making her uneasy. Cautiously, she reached her hand out like she had done at the church and placed her hand in his. Icy as she remembered, the hand closed around hers and gave a gentle pull, hauling her to her feet. The demon let go of her hand, wrapping his clawed fingers around her shoulder to steady her as she regained her balance.\n\nShe looked up at him once she got her bearings straight, taking aback momentarily by his appearance. His face, while nothing more than a malformed copy of a human face marred with scars, was beautiful. Sharp angles contrasted against gleaming white skin. Never having been this close before, Claire could now see tiny veins of black tangle into intricate patterns on his skin. His beauty brought her guard down an inch, making her foolishly trustworthy.\n\n\"There we are. Not so frightened now, are we?\"\n\nShe shook her head, still cautious but far lees nervous. \"I still don't-\"\n\nThe demon laughed to himself. \"Of course, how rude of me. You have no idea where you are or who you're with.\"\n\nShe nodded silently, patiently waiting for an answer.\n\nHe reached down and took her hand again, raising it high as he bowed low. \"I am Thaltos.\" He pulled her hand to his mouth and gently kissed it.\n\nSomewhere in the back of her mind, Claire guessed that Thaltos was the gentleman of his group. From what she remembered of his pack, the other two looked like they wanted to eat her.\n\nHe raised his head to smile at her. \"Darrow and Silthos are on their way. I've told them you were starting to wake, so they should be here any moment.\"\n\n\"Darrow and Silthos? Which one is-\" She struggled to remember Thaltos' companions looked like.\n\n\"Darrow is red-skinned and has horns like mine. Silthos is taller and has orange eyes. Does that help?\" He cocked his head, smiling hopefully.\n\nShe shook her head slowly. \"Not really.\"\n\nThaltos tried again. \"Darrow has the tail.\"\n\nNow she remembered. That tail was a dead giveaway. \"Yeah, okay. Now I've got it. Darrow was...oh.\"\n\nHis smiled faded. \"What?\"\n\n\"Darrow was the one who looked like he wanted to devour me.\" A small spark of fear raced up her spine, setting off warning bells in her head.\n\n\"Ah, yes. Darrow and his evil smile.\" Thaltos sighed and hung his head. \"I warned him not to do that.\"\n\n\"I take it he doesn't listen well.\" She smiled softly, her nervousness now completely gone.\n\n\"Unfortunately, no. Darrow doesn't take direction well unless he's under threat of pain.\" He made a disgusted face, one that exposed his frustrations with his companion.\n\nShe stood silent for a moment, trying to think of a way to lighten the mood. As kind as he was to her, Thaltos was still a demon, which meant that he was capable of ripping her to shreds of he wanted to. The last thing she wanted was to be in pieces because one of his friends had pissed him off.\n\n\"While we wait, could you tell me where we are?\"\n\nInstantly, his face brightened. \"Where do you think we are?\"\n\nShe paused for a moment, looking around the room again. \"Hell looks a lot different than what grandma told me it should be.\"\n\nThaltos threw his head back and laughed. \"Yes, well, I don't recall anyone ever having an accurate description of this place. They would like to think it's all fire and brimstone, but our world is much more complex than that.\"\n\n\"Really?\" She cocked her head, curios. \"How so.\"\n\nHe paused for a moment. \"Have you ever read the Greek descriptions of Hades?\"\n\nShe nodded. \"Some. I know that the famous people are shipped off to paradise or something like it. Normal people just wander around in darkness, gloom and depression.\"\n\nThaltos threw his arms wide, grinning at her. \"Welcome!\"\n\nShe stared at him slack-jawed. Well, this was a welcome she hadn't been expecting. She'd been waiting to see screaming souls being dragged into pits of fire, not an overly-friendly demon escort that grinned every five seconds.\n\nHell of a welcoming committee.\n\nHe lowered his arms, concerned. \"Is something wrong?\"\n\nShe shook her head. \"That was just more excitement than I was prepared for.\"\n\nHe smiled at her, content that he had done no permanent damage. \"When in Rome, my dear. Now,\" he stepped forward and looped a massive arm around her shoulders, \"how should we start. Should I give you a tour? Introduce you to the others? Maybe give you a good, thorough-\"\n\n\"Ha! So she is awake!\" A new voice, gritty and deep, interrupted his musing. \"You weren't lying to us!\"\n\nShe turned to see Darrow and Silthos enter their small chamber. Both seemed to materialize of out the shadows, appearing from the darkness as if they were born from it. She could see small threads of the inky shadow cling to their skins as they stepped forward, almost trying to keep her new company from leaving their loving embrace.\n\nNeither demon seemed to notice the shadows desperately clinging to their bodies. Two sets of eyes, one black and one a soft orange, stared at her hungrily. Darrow, obviously the more sinister of the two, wore a smile that could have frightened even the most hardened killer at Pelican Bay. His long, thin tail whipped back and forth excitedly. Silthos' smile was softer, but just as ravenous. His eyes narrowed as he studied her, coming to rest on her small breasts. He licked his lips as if staring at a veritable feast.\n\nWell, this certainly made her feel safe.\n\nDarrow continued to grin wickedly. \"Those idiots finally gave us a good one. At least this daughter is something we can play with.\"\n\nSilthos licked his lips again. \"Small, but I think she'll do fine. Pretty, too.\"\n\nTerrified of being eaten alive, she stood frozen in place, her muscles locking up out of fear. Thaltos moved instead, stepping forward and blocking her from their sight. The newcomers stopped, narrowing their eyes at him. Silthos' lips parted slightly, and she heard the low rumble of demon's growl escape his throat.\n\nDarrow held up a thick arm, waving a sharp-nailed finger at his friend. \"Not fair, Thaltos. We're supposed to share her.\"\n\n\"And we will. But first wipe those depraved smiles off your faces and try to act civil.\" He crossed his arms over his broad chest. \"She's ours to ravage, yes, but I don't want her terrified of you two before we start. Especially you, Darrow. The girl's been scared of you since the church.\"\n\nThe other demons retracted their snarls instantly, relieved that they wouldn't have to fight to get their share. Darrow did his best to soften his smile, but ultimately abandoned the attempt and stone there stone-faced. Silthos had better luck, pulling back his grin to a softer, warmer smile.\n\nShe let of a slow breath. Although her fear still boiled slightly in her gut, this was certainly better than the hungry grins they had worn before. At least she no longer felt like the roast pig at the center of a feast. Now she felt like one of the appetizers.\n\n\"Good. Now we can get started.\" Thaltos winked at her.\n\n\"It's about time,\" Silthos snarled.\n\nThaltos whipped around and growled at his companion. \"Keep your patience! The girl's been dragged through shit just to get here. The examination can wait until she's comfortable.\"\n\nDarrow placed a clawed hand on Silthos' shoulder, dragging him back a step. \"Relax. We have the girl now, so there's no need to start a brawl over when we get her. It's not like she's going anywhere.\" Trying to contain his enthusiasm, he turned to her and gave the softest sly smile he could.\n\nShe sighed to herself. Darrow was right: She wasn't going anywhere. There wasn't a chance in hell that they'd let her go or that she'd find some escape hatch, so she might as well get used to being here. Gathering whatever strength her bones still had, she reached up and tapped Thaltos on his shoulder. He turned his head and peered down at her, his eyebrows raised in interest.\n\nClearing her throat, she smiled weakly. \"It's okay. Really, I'm fine. You can do what you need to. I'll be alright.\"\n\nThaltos' eyes lit up. \"You're certain? I'd prefer to start once you feel more at home.\"\n\nShe shook her head. \"I'm fine.\"\n\nHe smiled at her. \"Wonderful!\"\n\nTurning to face her completely, he placed his massive hands on her shoulders and held her still. He moved her body this way and that, maneuvering her limbs and torso to make every inch of her body visible. He pushed her hair back and stepped away, joining the others. They stood in a line, scanning her body in silence. She swallowed loudly and attempted to block out any feelings of indecency or humiliation. It's not like her embarrassment would matter now; she was in hell after all. She tried to lose herself in her own mind, occasionally hearing bits of their conversation.\n\n\"She's small.\"\n\n\"Yes, but she's in great condition. Not a scar anywhere.\"\n\n\"I don't know. I still say they conned us. For all we know, they could have given us a Brazilian model.\"\n\n\"Or a spinster hag. I agree with Thaltos. For what we gave, I think we got a pretty good return. I say we keep her.\"\n\n\"I don't know. I want a better look at her first.\"\n\nDarrow stepped forward, stopping just inches away from her body. He circled her slowly, dragging one long clawed finger along her skin to trace the lithe lines of her waist and hips. His nail barely scraped her skin, just enough to make her jump in surprise. He snorted at her fearfulness, amused that this tiny creature thought she could handle them. Still, he said nothing detrimental and continued to trace her figure. He stepped behind her and cupped her small breasts in his scaled hands, testing their weight in his palms. She whimpered softly but gave no resistance.\n\nAfter completing his inspection, Darrow stepped back and stood in front of her, his arms crossed over his chest. He scanned her one more time, his black eyes giving her one last assessment before nodding.\n\n\"Fine, then. I stand corrected. She's small, but she'll do.\"\n\nShe left out a silent breath of relief. By the skin of her fingernails, she had barely missed whatever hell would have come her way of she had not met her standards. She shuddered to think what might have happened to her if they had not found her appealing.\n\n\"She is a virgin, right\" Darrow turned to look at the other two. \"They didn't sell us short, did they?\"\n\n\"Can't you smell it on her?\" Silthos asked incredulously. \"I'm twenty feet away and I can smell that she's clean!\"\n\nDarrow turned to face her again, his eyes narrowing. \"I don't trust my senses. Those humans have found ways to lie to us before. I want to make sure she's unspoiled.\" The corners of his mouth turned up in a sickening smile.\n\nThat smile turned her stomach inside-out. She backed away from him, horrified at what he might do. Darrow, still smiling at her, mirrored her movements by stepping towards her. It was clear to her that he intended to rip her wide open to make sure she was a virgin. This faux stalking was simply entertainment before the main show.\n\nThaltos stepped forward, his body straightening to become a massive wall of flesh and fire. \"You will not harm her!\" His voice boomed around the room, loud enough to shake the spears of rock on the ceiling.\n\nDarrow stopped in his tracks, looking over his shoulder at his fellow demon. \"I wasn't planning to. I just want to make sure her hymen's intact before we play. Once we break it, we can go wild with her.\"\n\nThaltos took another step forward. \"Absolutely not. She is to remain clean until we decide to claim her fully.\"\n\nDarrow wheeled around, his black eyes blazing. \"But we have to make sure she's pure. They could have sold us a rotten product and dressed her up to fool us. I want to make sure she's unspoiled!\"\n\nThaltos's expression remained stern, though his eyes had softened a bit. \"Use your tongue, then.\"\n\nHer jaw made a crater in the floor. She struggled to pull the pieces of her composure back together, trying not to scream in anguish. His tongue? Oh, fuck no! That creature's tongue was the last thing that was going to be probing around in her body. Even if she had to claw their eyes out and drag her way up form the depths of this hellhole, she would not let that thing touch her.\n\nEven Darrow's mouth unhinged a bit. \"Are you sure? That's not the most common way to see if a girl's a virgin.\"\n\nThaltos shrugged. \"Knowing the length of your tongue, it should be easy for you to find out. To be honest, I'm a bit curious myself.\"\n\nSilthos turned to look at him. \"You are? I thought you accepted the word of humans without an issue.\"\n\n\"I do. But Darrow brings up a good point. I've seen those maggots use a few ingenious ways to fool others of our kind, so it might be a good idea to make absolutely sure she's clean. Darrow, use that world-class tongue of yours and tell us if she's spoiled or not.\" One slate-grey eye winked at her. \"Who knows? She might enjoy it as much as you do.\"\n\nA softer smile twitched on Darrow's lips, growing brighter as he turned to face her. He held his hands out in front of him, cracking his knuckles as if preparing for a fight. A thick tongue slipped out between his lips and caressed them, leaving a thin sheen of saliva.\n\n\"If you insist.\" His eye widened, excitement flickering in their black depths. \"Come here, girl, and we'll see how chaste you are.\"\n\nStill shell-shocked by Thaltos' change of heart, she barely had enough time to register her own emotions before noticing that Darrow had closed the distance between them. Moving faster that she could react, he bent down and wrapped on thick arm around her back. He scooped her onto his shoulder and carried her to the magnificent chair Thaltos had been sitting in earlier.\n\nHe set her down gently, taking care not to drop her. Her body twitched as her flesh touched the cold stone, though she managed to control herself long enough to scoot as far back into the chair as she could. What she had feared was now inevitable, but only as long as he could reach her.\n\nDarrow laughed at her efforts, amused that she still had fire in her bones. He reached out and wrapped his clawed hands around her slender ankles, pulling her gently back to the edge of the chair. She winced, not in pain but out of fear. She dug her nails into the stone, trying desperately to counter his movements. It didn't work, and he succeeded in dragging her ass to the very edge of the chair.\n\nStill grinning at her, he sank to his knees and placed his hot hands on her knees. Instinctively, she snapped her legs closed, giving one last attempt to avoid the unavoidable.\n\nHis smile faltered for a moment as he watched her legs close. Obviously determined to make sure she was a virgin, he slipped his claws between her thighs and jerked them apart, bracing his arms on the stone seat of the chair so she couldn't close them again. Leaning close, he ran his disgusting tongue along the inside of her slender thigh, making her flesh twitch.\n\nHe pulled back and let out a sharp laugh. \"Virgin or not, this one's delicious.\" He looked over his shoulder. \"Thaltos, you should try this one. She's sweeter than honeyed wine.\"",
        "Peering over his muscular shoulder, Claire watched as the lead demon nodded slightly.\n\n\"In time, Darrow. Tell us if she's clean first.\"\n\nDarrow nodded and returned his attention to her. Still holding her legs steady, he leaned in again and flicked his tongue out, running it along the length of her slit. She jumped, biting her lip to stifle her moan. He licked her a second time, pushing his tongue harder against her delicate sex. She writhed against his grip, a vain and useless attempt to break free.\n\nHe pulled back an inch, licking his lips with glee. \"Honeyed wine.\" His eyes flicked up to meet hers, a vicious smile on his mouth. \"I'm going to enjoy you.\"\n\nWithout giving her time to brace herself, Darrow leaned forward and pressed his mouth fully to her sex. She gasped sharply and bit her lip harder, a bead of blood forming on the tender skin. His tongue pushed past the sensitive lips of her sex, twisting and turning as it explored. Her legs twitched against his grasp, this teasing only making her body tremble harder.\n\nHis tongue crept along the delicate insides of her pussy, searching for that elusive answer to his question. Farther and farther it moved along, teasing and taunting her body with gentle flicks and caresses. It moved slowly, trying to find that small bit of -- There! The tip pressed against a fleshy barrier, poking and prodding to test it strength. Excited as she now was, Claire hoped that would be enough to satisfy his endless questioning.\n\nBarking out a muffled laugh, Darrow retracted his tongue and leaned back from her body. \"She's good, all right. Pure as the day she was born.\"\n\nThaltos grinned. \"Excellent.\"\n\nDarrow turned his head to grin at his friend. \"She's a tasty one, too. I swear, Thaltos, you need to try her.\"\n\n\"All in good time, my friend, I assure you.\"\n\nBut Claire wasn't concerned about the purity of her body or how she tasted. As much as she hated to admit it, Darrow's explorations had fired her body up in a way she'd never experienced. Her body writhed against the hard stone of the chair, trying to find something that would relieve the spark that had been ignited in her veins. She closed her eyes and moaned softly, hating her fate yet needing some kind of relief.\n\nThaltos, thankfully, noticed her discomfort. His cocked his head and gave her a soft smile. \"Darrow, look what you've done. You fired the poor thing up and then left her with nothing. Finish her off.\"\n\nDarrow turned back to her and grinned. \"With pleasure.\"\n\nHe moved faster than her eyes could follow, burying his face between her thighs a second time. His tongue slipped into her pussy again, this time dolling out stronger strokes to her delicate flesh. She threw her head back and closed her eyes, her body twitching every few seconds from his delicious teasing. She dug her fingers into the ornate carvings of the chair, her nails digging small gashes in the stone.\n\nThe pleasure confused her for an instant. She was in Hell after all, so shouldn't she be wandering around a pit of sludge or something? This hardly seemed like the usual punishments she'd read about from her grandmother's books. They should be chaining her to the walls and stripping her flesh from her bones, not devouring her sex like a ravenous animal.\n\nA strong lick directed at her clit wiped the questions from her mind. Her mind spun at the new burst of pleasure, her skin beginning to tingle and her body burning. She squirmed restlessly against Darrow's grip, trying to find some way to quell the hunger in her veins. Her fighting was in vain, and her body continued to crave more and more of his hellish teasing.\n\nDarrow noticed her struggles and let out a muffled chuckle into her pussy. He moved his arms away from her legs, slipping one enormous hand under her thigh and lifting her leg, hauling her slender limb over his shoulder and hooking her leg over his muscled back. He repeated the motion with her other leg, the motion bringing her body closer to his mouth. Pulling back an inch, he wrapped his lips around her clit and sucked gently, making her body twitch even harder.\n\nClaire let out a strangled moan as she collapsed into the chair. Having her body tormented like this made her questions ever wanting to leave. As much as she hated to confess, this was exactly what she needed. Years of being under her grandmother's watchful religious eye meant that she was never able to receive any kind of pleasure until she left that house. Here, she could let loose and indulge in every wicked fantasy she had.\n\nHer captor gave her clit one last flick with his tongue, sending her over the edge. She gave a grating howl of pleasure as her body exploded. Her back arched, her toes curled, her fingers dug into the stone chair. Her legs tightened around Darrow's neck as her body pulsed, reveling in the first orgasm she'd ever had. She grit her teeth as she rode the waves of ecstasy rushing through her veins, determined to enjoy this to the very end. Her lover -- what else could he be now? -- gently licked her body clean, continuing to tenderly pleasure her as she slowly came down from her high.\n\nMoments later, her breathing evened out and her body relaxed. She slumped into the cold stone of the chair, a thin sheen of sweat coating her flesh. She struggled to swallow, her throat now barren from her harsh cries of pleasure. Her head rolled to the side, her eyes fluttering close while she regained her balance.\n\nDarrow lifted her legs off his shoulders, gently letting them go as he stood. \"I'm telling you! This girl is made of honey!\" He reached out and brushed a stray lock of hair from her face. \"You will never find a woman who's sweeter than this one. You made a good deal, Thaltos.\"\n\nThe older demon laughed softly. \"And to think you doubted me.\"\n\nWith a monumental effort, Claire managed to turn her head to look at Darrow. His night-black eyes shined in the flickering light of the fire, elation and hunger swirling within their depths.\n\nHe smiled another wicked grin. \"Yes, I apologize for that. She'll do just fine.\"\n\n\"I'm glad you approve.\"\n\n\"Alright, so we know she's a virgin now. When do we get to play with her?\" Silthos stepped forward a bit, anxious to have his turn.\n\nThaltos held out a hand, stopping his companion in his tracks. \"Not now. Darrow's exhausted her. She won't have any strength left to handle us. We'll give her a day or two to recover first. Then we can play.\"\n\nSilthos stepped back, crossing his arms and scowling in disappointment.\n\nThaltos turned to smile at her. \"She's done for now. Both of you can go back to the room and prepare a bed and food for her.\" He slowly made his way towards the chair. \"I'll carry her in. She can rest for the night.\"\n\nDarrow and Silthos nodded silently. Giving her one last wink, Darrow raised her hand to his lips and kissed it, his eyes never breaking from hers.\n\n\"I look forward to exploring you more, miss Harding.\"\n\nHe backed away from the chair, moving to the shadows of the room. Once again, tiny strands of darkness reached out and caressed his skin, pulling him back into their depths. They did the same with Silthos, pulling both creatures deeper into the blackness until they had disappeared.\n\nThaltos continued to walk towards her, stopping just inches from the chair. He smiled softly and leaned forward, slipping his hands under her body to lift her us. She lay in his arms, her body limp, staring up at the spike-covered ceiling. A vague memory of being carried by him while watching the church beams pass slipped into her mind, bringing a small smile to her lips.\n\nThaltos turned, carrying her in his arms as he made his way to the shadows. \"You preformed very well tonight. I'm proud of you.\"\n\nShe offered the strongest smile she could. Her smiled faded briefly as her thoughts turned to ponder their plan. They had said they wanted to play with her. What did that mean? Would Silthos dangle her upside-down over a shark tank while trying to play ring-toss with her? Would Darrow devour her whole? She shuddered, trying to stop the images from running through her mind.\n\nThaltos chucked. \"I know what you're thinking. Don't worry about Darrow. He won't eat you. He's just excited to have a playmate. They both are. We've made numerous deals with humans, none of whom have kept their end of the bargain. You're the first prize we've actually claimed.\"\n\nShe smiled and settled into his arms, trying to fight the sudden exhaustion that had steeled over her body. She watched through heavy-lidded eyes as they neared the shadows, the small tendrils of darkness reached out to greet them.\n\n\"We'll have you fed once we get you to our room. You can sleep when you're finished. You have a big day with us tomorrow, so eat your fill and sleep well. We'll wake you up in the morning.\"\n\nShe felt the first strand of shadow touch her skin, their silky warmth wrapping gently around her wrists. More followed, tangling around her skin and hair. Others slipped around Thaltos' flesh, pulling them deeper into the darkness. Feeling safe and warm, Claire let her eyes close completely and leaned her head against his chest, relaxing completely as the continued to be pulled into the shadows.\n\n\"Go to sleep, Claire. I'll wake you when we're there.\"\n\nShe nodded, allowing her mind to drift into the warm recesses of sleep. As frightened as she was, at least here she would be taken care. At least here she would be comforted and befriended, even if her friends were demons. At least her she would feel loved.\n\nThaltos took one last step into the shadows, letting both of them be swallowed by the darkness. Whatever secrets those shadows held, she felt certain he would let her see the most glorious ones. Where he went, she swore to follow.\n\nSee? I didn't abandon you. You asked for something and I delivered. All it took was a few months, a lot of patience and a college degree (okay, fine, so that has nothing to do writing this, but still...). If you want me to continue the story, just ask and I'll be happy to whip something up. For you, my people, anything... well, almost anything."
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "hell"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/helldancer"
}