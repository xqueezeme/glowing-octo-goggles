{
    "title": "Lost Empire Ch. 50",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry - Lucie (for the moment) \n\n________________________________\n\nBacking up from Derrick the tall sandy blonde suddenly hit a bulk head, his eyes dancing around the room. \"The last I heard you were still recovering. What is this?\"\n\nSmiling a moment Derrick was about to try and explain when the hologram of Tempro appeared. \"We seem to have a slight problem.\" The tall man's eyes got large as he swiped his hand through the hologram.\n\n\"Commander?! What in the hell is that!? It's not real!\" The tall man said.\n\nTempro turned to look at the man. \"I am indeed real sir. Please refrain from doing that again Sergeant Norman! I find it rather rude!\" Turning Tempro repeat what he'd just said. \"It appears we have a slight problem, Sire.\"\n\nSergeant Norman shook his head, Sire? What in the hell was going on? He thought he was dead, had consigned his self to that fact. Then suddenly he was lying on a deck able to breathe looking up into the eyes of the greatest man he'd ever had the pleasure to serve under.\n\n\"I'll try to explain in a bit. Go have a seat then we can talk as soon as I take care of this.\" Derrick told the wide eyed man as he went to a seat dropping like a stone into it. \"What's wrong? Derrick asked Tempro.\n\n\"It appears that the engines of the freighter are on overload. I am detecting critical levels climbing.\" Tempro told Derrick.\n\n\"Can you amend what is causing the overload problem?\" Derrick asked then went to the panel behind his visitor.\n\n\"I'm not completely able to access the system. At present I have alleviated the excess plasma pressure. I am afraid that this has only delayed the problem.\" Tempro replied.\n\nDerrick nodded as he started to type at am almost frantic pace. Hitting enter every ten seconds Derrick just hoped he had enough in to effect the change. \"Yes Sire, control now at seventy five percent. I have managed to shut down two of the four plasma injectors. Total destruction averted though survival rate of all onboard is at only five percent.\" Tempro told Derrick.\n\n\"Just who are you?\" The Sergeant asked when his eyes got large watching Derrick's hands. They seemed to be flying faster than the Sergeant thought was humanly possible.\n\nDerrick only smiled at the man not stopping what he was doing. \"I told you I'd explain. Let me save the ship ok? Then we can talk.\"\n\n\"Save the ship? How? You aren't going to affect anything from there!\" The tall man almost shouted incredulously.\n\n\"Believe me it's possible.\" Derrick said as he kept typing at a furious speed.\n\n\"NO!\" The tall man said as he rose heading for the command deck. Two electrodes came out of the wall emitting a shock to the tall man. Falling against the wall then slowly sliding down the wall a look of surprise on his face.\n\n\"Thank you Tempro, control?\" Derrick asked.\n\n\"Control at eighty five percent. Now commencing the shut down of the third engine. Chances of survival have moved into fifty percent range Sire.\" Tempro advised Derrick.\n\nNodding Derrick kept typing stopping a moment later staring at something. \"Tempro, access to all engines such as these, can also be bilateral can it not?\"\n\n\"Checking Sire. Yes Sire! Now accessing the fourth engine through its lateral twin engine. Shut down has started. Sire! I suggest we remove ourselves to another position I am detecting several heavily armed ships approaching!\" Tempro almost shouted.\n\nDerrick nodded, \"Yes, that would be the Rangers. Go Tempro before they enter normal space!\" There was a familiar whine then they were in trans-warp. Two seconds later they were outside the system. \"Good this ought to be far enough.\"\n\nWalking to the tall man Derrick helped to get the man to his feet. Still a little in shock the man asked, \"What the hell was that? Worse than that time my vest took three slugs!\"\n\n\"That was an electric shock. Yeah I know, leaves a bad taste in your mouth.\" Derrick told the man with a smile. \"So how about an explanation?\"\n\n\"Yeah that would be real good right now. Because as of right now; I am confused as hell!\" The tall man said to Derrick.\n\n\"Ok, to start 'bout a year ago I was way out, working for a salvage company. I was bored falling asleep when I heard something. I ignored it then decided to take a nap that's when it all started...\" Derrick started into the story. It was about an hour later when Derrick finished.\n\n\"Wait! You say six to seven years have past? She married someone else? Shit! Figures she never was one to stay loyal long. I'm so damn glad that President Maury got his in the end. Son of a bitch only cared for what he could get! Commander?\" Sergeant Norton suddenly asked. \"What of my daughter? Of everything I regret, missing watching her grow into a woman is the one that hurts the most.\"\n\nDerrick hid a smile he wanted to tell the man but thought better of it. The surprise that he was sure Sergeant Norman got would be worth it. \"All I can tell you at this moment is she is alive. Much beyond that I can't say.\"\n\nThe man nodded as he looked at Derrick. Something was going on, though getting the Commander to tell him was impossible.\n\nDerrick smiled, \"It's ok Dan,\" the man's head snapped up with surprise. \"I think you'll like whatever she is doing no matter what!\"\n\nSergeant Daniel Norman, nodded to Derrick even more certain that Derrick was hiding something. Sighing he guessed he'd just have to wait. \"So have long before we get back?\"\n\n\"Well...\" Derrick started. \"I have a few stops to make before we do.\"\n\n\"A few stops? What... wait I wasn't the only one who died am I? You're going to try and save all of them. Alright I'm in! All the way! Who are we going after?\" Norman asked excited.\n\n\"In my time the only ones that didn't make it were you, then Jimison almost a year later during a robbery. Two years later there was a transport accident that took the lives of everyone on it, including Shilo and Grant. All of the ships were partly owned by that bastard Maury. I have looked over all the records, each of you had been manipulated to be where you were.\" Derrick told Daniel through clenched teeth.\n\nDaniel was nodding his head. A lot of things that had happened the day before were starting to make sense. \"What about Jimison? Shit! The bastard President owned that also didn't he!!?\"\n\n\"Yes! I intend to get all of you; I am still trying to reunite the empire. I have Hartwell; he's my space fleet Commander. Dempsy,\" Here Derrick sighed.\n\n\"Still trying to stay an enlisted I guess?\" Norman said with a smile.\n\n\"Oh yes! Though how I got him to accept the rank of Colonel for as long as I have is beyond me. Then again it might have to do with the hunt for Trianas Macley. Plus the fact that he finally ended her.\" Derrick replied.\n\n\"So he finally restored his honor. Damn straight! Oh, sorry sir.\" Daniel, said.\n\nDerrick nodded. \"It's quite alright Dan. After the hell she and her husband tried to put us all through, I for one am glad she's gone. So, if you're game I think it's about time we got the team back together.\"\n\nSergeant Norman snapped to attention, \"As I said sir I am in all the damn way!\"\n\nSmiling Derrick nodded as he started to type instructions into Tempro's command console. Moving to the command seat he advised Sergeant Norman to get secured. \"Alright Tempro as per the instructions I gave you, advance\"\n\n\"Affirmative Sire!\" Tempro replied to Derrick. An odd red wave flowed out from the front of Tempro then the ship moved into it. It seemed they were only in the wave a mere minute then they were back out.\n\n\"Position?\" Derrick asked.\n\n\"We are two weeks short of a year after the freighter incident. We are on the dark side of the number one old Republic export world. Light shield has been activated no indication of detection Sire.\" Advised Tempro.\n\n\"Status of your IMT?\" Derrick inquired.\n\n\"Well over fifty percent of the changes you originally made have been corrected. I suggest another twelve hours are required to ensure we don't have any problems like last time.\" Tempro said.\n\n\"Good, we have almost that long before we move. Shelby I want you in orbit also for back up. With everything that has happened lately I want to make sure this time.\" Derrick told Shelby.\n\n\"I stand ready to help Derrick.\" Shelby replied.\n\nDerrick looked over at an almost completely confused Norman when he stated. \"What can I do? He was my friend also, sir.\"\n\n\"So I take it you are volunteering?\" Derrick asked.\n\nA smirk came to Norman's lips, \"As if you really have to ask? Told you sir anything I can do, I'm in all the way.\"\n\n\"Good,\" Derrick said a huge smile on his face. \"Here's what I'm going to need you to do...\"\n\n__________________________________________________________________\n\nLucie Hartwell was walking toward the command deck when she ran into her brother. \"Have you got any word from our brother or uncle?\" Joseph Hartwell asked her.\n\n\"Me? I thought you would know by now. I just got back an hour ago.\" Lucie replied. \"I thought you had command over the entire fleet as it is.\"\n\nA look of frustration crossed his face as he replied, \"I did though if you remember right before, all this happened I was forced off duty. Unfortunately I remain there until the Emperor releases me back to duty. Therefore sister of mine I have no access to anything!\"\n\nLucie face changed to a grimace then she pointed a finger poking Joseph in the chest. \"Look damn it! Don't blame me for your stubbornness! Had you gone to him in the first place instead of trying to do it all yourself, then YOU wouldn't be in this situation! Personally I think he should have busted you down in rank too. Problem is he depends on you more than you think!\" Poking Joseph hard again she finished, \"You're damn lucky you too are such good friends. Remember that! You are friends not enemies Let the man help you! Or the next time it won't be him you have to worry about!\"\n\nWith that Lucie Hartwell turned in a huff storming away down the hall. Joseph could only stare after her shaking his head. Damn! When had she gotten this forceful? Then a smile crossed his face, damn if he didn't like it!\n\nMoving off a few ideas started to form in his mind. Ideas his sister had helped to get started. He wasn't completely cut off; almost, but not quite all. Nodding he started toward his quarters we'll see he thought we'll see!\n\nKimison was monitoring the time line, watching. More and more things were starting to move to where he knew they should be. A sudden flashing on the console drew his attention. Nudging Rayburn the other man looked at the readings as his eyes went large. Looking at the chronological order of events then what year it was he looked at Kimison in shock.\n\n\"Empress!\" They both yelled as they both started to enter data as fast as they could.\n\nShelby quickly was behind them. \"It appears we have another reading on them Mam.\" Kimison stated.\n\nLooking over the data Shelby's eyes went large. \"You're both sure? Six and a half years ago? Where was this anomalous reading detected?\" She asked.\n\n\"Just after the hatch failed on the cargo ship Contra, it... Oh my god!\" Kimison said as he face suddenly went ashen white. \"That's the ship...\" Kimison started then choked up.\n\nRayburn was rushing to Kimison before the man finished speaking. Rayburn's face was also ashen as he looked at Kimison. \"Are you thinking what I am?\" Rayburn almost whispered.\n\nKimison could only nod, then stated to a slightly confused Shelby. \"He going after them, I just know it!\"\n\nShelby looked again at the data still unsure, \"He's going after whom?\"\n\n\"The rest of us; the rest of the squad. My god! He could actually do it!\" Kimison said in awe.\n\nShelby's mouth dropped open, the rest of his squad! Everyone of them were the best in a very long time. Then they were thrown away like so much garbage after they were put out. Shaking her head this wouldn't happen as long as she or Derrick were alive!\n\n\"So he's almost back! Good! I just hope he's not upset that we waited to execute the Duke. Even as worthless as he is!\"\n\nKimison and Rayburn both smiled, \"No I think he will be extremely pleased. The fact that you took him with as little bloodshed as you did. The Commander always liked it that way, the less death the better.\"\n\nShelby smiled she knew Derrick pretty good though no where as well as these men. A moment later Lucie Hartwell appeared at the command door way.\n\n\"Empress? Do you think we should tell her?\" Rayburn asked a little worried.\n\n\"No, keep this to your selves until were are completely certain. As of right now it is only conjecture, even if it is based on some rather strong evidence.\" Shelby advised them.\n\nEspying the Empress, Lucie made her way quickly to her. Bowing Lucie waited a moment. \"Yes Lucie? Something I can help you with?\"\n\n\"Yes Mam. My other brother and uncle are still in hiding on the Duke's planet. I haven't seen either in quite some time.\" Lucie started.\n\n\"You want permission to go to the planet to find them I take it? You also want to take your brother.\" Shelby said completely surprising Lucie.\n\n\"Uh... yes Mam.\" A shocked Lucie said.\n\nSighing Shelby shook her head no, then held up a hand to quiet Lucie. \"I cannot allow the two most important people after the Emperor and myself to do so. I can see that you have forgotten. We are on board one of the most advanced living machines in existence. I am more than sure that they can find who you are looking for.\" Then a sly smile crossed Shelby's lips. \"I am also sure that when we bring them here they will be as shocked as you are right now!\" Shelby finished with a small chuckle.\n\nLucie shook her head a moment then she also started to chuckle. She could see the shock then the anger that Uncle Trent would have. Then again her brother William would just be fighting tooth and nail mad! \"Uh... yeah Empress if I might make a suggestion? When you do find them, I think Joseph and I should be present. William has a temper that makes Joseph look calm at his most upset.\"\n\n\"I believe you have a good idea. Yes I think the both of you should be there. Perhaps it might spare some or a lot of injury.\" A now smiling Shelby told Lucie.\n\n\"Thank you Empress,\" Lucie replied then left a huge smile on her face as she went to find and tell Joseph.\n\n____________________________________________________________________\n\nRandall Jimison looked at the note he'd received a few hours ago. Someone wanted to meet him that had information on where the Commander was. Shaking his head this smells most definitely like a damn trap. They almost always were, at least the last ten had been. Shaking his head again he thought he ought to ignore it. He had been almost the last year now.\n\nGrowling Jimison thought of Norman, he should be alive with his daughter. Lord knows that bitch of a wife of his had driven him to take that job. Laughing a moment he could hear the man telling him to get his ass out of here and off this world. Nodding Randall thought that would be a good idea if he had the creds.\n\nLooking again at the note this one was a little different. If this was a trap they had a lot of knowledge that only members of the old squad knew. Damn, it was by far the most tempting that he'd gotten in a long time. If he didn't know better he thought it was from Daniel but that was impossible! He'd been dead almost a year now, no this was a sick twisted joke and Randal wasn't amused in the least!\n\nWith a heavy sigh Randall got up getting dressed. Donning the best disguise that he could he stopped to look at his reflection. God he thought, this really sucks for a disguise, a hat and a pair of dark glasses? Now he felt like an idiot he could most certainly tell it was him.\n\nAcross the street a tall man with sandy blonde hair watched as Randall left his apartment. Shaking his head he'd have to show Randall how to use disguises better. Anyone who'd ever seen him could tell it was him. Moving with a surprising speed the man crossed the street following Randall. Reaching up The sandy haired man touched a spot on his chest as the air shimmered around him.\n\nRandall started to get a strange feeling that he was being followed. Looking back he only saw an old woman moving up quickly on him. Huh, he thought, guess I am getting paranoid as he looked at his time piece. Good he would get there with enough time to check it out. \n\nStopping to wait to cross the street the old woman caught up to him. Obviously she couldn't see that well as she ran into him almost knocking him down!.\n\n\"I'm so sorry,\" came the kindly voice of the older woman. \"I seem to be so blind today.\" Helping her up Randall was surprised when she started to brush him off!\n\n\"No mam I am sorry I should have heard you coming. Really mama let me clean you off.\" Randall offered as the older woman thanked him then moved off down the street.\n\nRandall shook his head why did that old woman look familiar? Even as he made his way to the restaurant it still seemed to nag at his mind. Damn he thought I'll never get any peace until I figure it out! Sighing he decided that it'd have to wait as he was almost there.\n\nStopping well short, Randall started going over everyone he saw that weren't moving on past. Almost twenty minutes later he still hadn't spotted anything out of the ordinary. Shaking his head this seemed far too easy. Though he desperately needed the information, this still smelled like a trap.\n\nAcross the street the same old woman was reaching into a pocket as she also waited for something. Looking at his time piece Randall was about to leave when a very familiar man appeared at a table. Randall's eyes went wide as he recognized the man. Turning Randall had taken a step when the man shot out of his seat yelling and pointing at him.\n\nAh shit! Randall thought as troops started to appear from the shops. I'm screwed Randall thought as almost all of the troops opened fire on him. No one saw the older woman as she started to move her hand in her pocket. A number of rapid, complicated movements then she was smiling. Randall went down as the heavy spray of projectiles hit him.\n\nThe man at the table shouted as then weapons quieted. Walking up to Randall the man placed a hand on Randall's chest then smiled. \"Good! That's the second of the ten. Call disposal!\" Several men shouted then started to make calls on their radios. Several minutes later a vehicle pulled up, the driver unrolled an anti-grav stretcher. Rolling the body on it the driver activated it then loaded it into vehicle. Nodding to the man that was obviously in charge the driver climbed in then left.\n\nThe older woman smiled as she watched the vehicle depart. Walking into an alley, out of sight, there was a flash of light then nothing as the alley was empty. The driver drove out of the city opposite of the way he should have gone. Pulling into a wooded area the driver nodded as he looked around. Opening the back the driver touched a spot on his chest. All the blood and holes that were covering Randall suddenly vanished as he tried to sit up what the hell? He couldn't move!\n\nTouching his chest again the driver stated, \"It's done, lock on we're ready.\"\n\nThere was a flash then they were both in the med bay of Tempro. Randall's eyes were darting frantically around then they went wide as Daniel Norman walked into view! Then a moment later the Commander appeared like a ghost! What in the hell was going on! Then a third man that Randall didn't know suddenly appeared as if he were also a ghost! Ah shit, Randall thought, I really am dead!\n\nDerrick smiled, that had been close thankfully Tempro and Shelby had control of the holo-projector and micro shield.",
        "\"You'll be fine in a few minutes Randall. We had to stun you to make your 'death' believable. Tempro we are moving to dock IMT me as soon as we are back. Very good work, for your first time with the equipment Daniel.\"\n\n\"Thank you sir, always been a quick study. Though I have to say these are pretty sophisticated. I'm just glad I was able to help. It's ok Randall, according to what I read you ought to be able to talk in a bit. Hopefully the Commander will be here by then. I'll let him explain, I'm still having a bit of trouble wrapping my head around it all.\" Daniel told Randall who was still staring at him like he wasn't real.\n\nA moment later Daniel heard, \"wha da ell ar ou?\"\n\nDaniel sighed he really wished the Commander would hurry up. \"Give it a few more minutes Randall then try to speak.\" Again Randall's eyes searched frantically around the room there had to be a way out there had to be! Then unfortunately his arms and legs started to tingle. With an almost howl Randall started to shake.\n\n\"Tempro what in the hell is going on?\" Daniel asked afraid that Randall was going to die. A moment later there was a flash then the Commander was standing beside him.\n\n\"Tempro administer a mild stimulant to counter the stun drug!\" A moment later Randal relaxed a huge smile on his face.\n\n\"Hi Commander!\" Randall said. \"Hey Dan! Hey you know what? You're dead! Yes you are! I saw you on the news floating going out the hatch. Was it fun?\" Then Randall started to giggle like a child. \"Wow is this all yours? Nice!\"\n\nDerrick could only shake his head he'd hoped that the low dose wouldn't have an adverse effect on him. Plus the fact that he was drunk of high or just plain feeling good from a mild sedative. Well live and learn Derrick thought.\n\n\"It should all be out of his system in an hour I hope. Not all that sure with Randall as sensitive to drugs as he is.\" Derrick informed Daniel.\n\nDaniel nodded then was about to comment when several alarms went off.\n\n\"Sire I have several patrol ships approaching. As of yet they haven't detected us, though if we move I am afraid they might.\" Tempro informed Derrick.\n\nDerrick nodded as he stared at the readings of the Ranger ships. \"Damn it! Have you picked up anything that indicates an alarm?\"\n\n\"No Sire, nothing. Wait Sire. I'm picking up a message about the president visiting today. That might explain the extra security. I am afraid we might be here a while.\" Tempro explained.\n\n\"Alright, for now, search ranger records about anything strange happening here on this day. I for one do not wish to destroy Ranger property or personnel.\" Derrick told Tempro as he vanished to go through the records. Sitting back in the command chair Derrick sighed the closer they got to their time the harder it seemed to get!\n\nIt was a little over an hour later when Randall jerked awake. Looking around he shook his head. That had to be the weirdest dream he'd ever had where the hell was he?\n\n\"So feeling better?\" A voice that he thought to never hear again said behind him.\n\nWhirling he stopped short as behind the Commander was Daniel! \"You died almost a year ago!\"\n\n\"No I was blown out the hatch. I was saved by the Commander, let him explain.\" Daniel said then sat as Derrick again told the same story he had Daniel.\n\nAnother hour had Randall shaking his head. \"So almost five and a half years have passed. Like Dan said this really is hard to wrap your head around. So am I last or are there anymore?\"\n\nDerrick nodded, \"Two years from now Shilo and Grant are killed in a transport accident. The entire ship and crew were lost. Like with the both of you Maury had a hand in theirs and your deaths.\" Leaning close Derrick said between clenched teeth. \"I made that bastard suffer though I wish it had been longer! I...\"\n\n\"Sire!\" Tempro broke in. \"I believe I discovered something! In an hour a automated ship will explode not far from here. I believe that it will blind their sensors long enough for us to slip away. Though one more thing Sire, from the way the ship exploded I do believe we destroyed it.\"\n\n\"Alright I want everything ready to go when it gets here.\" Turning to look at Randall Derrick asked. \"So are you in?\"\n\nSnapping to attention much like Daniel had Randall shouted. \"Hell yes sir!\" Then he saluted Derrick.\n\nDerrick rolled his eyes, \"Alright both of you smart asses! Get ready!\"\n\nAn hour later there was a huge explosion in orbit of the planet. Every sensor was blind and offline for almost ninety seconds. \"Now Tempro!\"\n\nA red wave came from the front of Tempro rippling space in front of it. Accelerating into the ship vanished.\n\nThis time Derrick thought they were in it a few minutes then they were suddenly out. Looking out Derrick immediately recognized the abandoned ship yard though three and a half years ago it was part active.\n\nLooking at the chronometer Derrick could see that they didn't have much time though... \"Can we go back a bit Tempro?\" Derrick asked.\n\n\"No Sire, I am detecting high levels of ripalon energy. We will have to leave here if we are to use the temporal displacer.\" Tempro informed Derrick.\n\nDamn Derrick thought. \"Ok we don't have a lot of time, in and out simple retrieval.\"\n\nBoth men smirked as did Derrick, they had never had any mission that was simple."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-50"
}