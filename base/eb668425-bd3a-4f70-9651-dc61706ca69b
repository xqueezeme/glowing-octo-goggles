{
    "title": "Fictional Fantasies Ch. 03",
    "pages": [
        "Dear Reader - Please read the previous chapters of Fictional Fantasies first, to fully appreciate this story. Please do also provide your feedback which will encourage me to continue publishing subsequent chapters!\n\n-------------------------\n\nThe following morning, instead of the physical wreck she had expected to be, Meg was amazed to find herself feeling invigorated and energised. She happily participated in each writing class and took an active role in the class discussions. At lunchtime, Meg was called over by the Receptionist, who handed her a small parcel. Heart leaping, knowing it could only be from him, Meg rushed back to her bungalow and ripped open the packaging. Inside there were four items; a black silk blindfold, a tube of sensitivity lubricant gel, a condom and a scrawled note. It read:\n\nIf you're willing, go to the below address tonight at 8pm. The house belongs to a mate of mine who's abroad. You will find an outside Jacuzzi with a wonderful view of the ocean at sunset. Undress, put on the gel, relax and enjoy. Once the sun has set, put the blindfold on and I will join you.\n\nPuffin's Reach, Harbour Lane, Springdale.\n\nMeg's whole body seemed to quiver in anticipation. This would be the night, if she were brave enough to go through with it, that she would actually have sex with this gifted and talented stranger who had so quickly become such a big part of her life. Summing up all her courage, Meg acknowledged that there was no way she could back out of this offer. Glancing at her watch, her heart began to race with the realisation that she only had a few hours to wait. Quickly undressing, she all but skipped into the bathroom. There was no way she could let herself back out of this opportunity, but a cold shower was definitely required first.\n\n*******************\n\nThe house hadn't been difficult to find and Meg slowly pulled up in the gravel driveway of Puffin's Reach, turned off the ignition and let out a long sigh. An insistent pulse had been beating around her entire body for the past few miles, as she travelled closer and closer to her destination. And closer to him...and to whatever he had planned. For although he followed the general theme of the stories she had published, he seemed to throw in plenty of random flourishes of his own. It was clear that the man had a very active and intelligent mind, coupled with a considerably twisted imagination and Meg didn't mind admitting that he intimidated the hell out of her.\n\nThe property itself was a sensation. A beautiful manor house with sprawling gardens perched on a small cliff edge with wide views across the sea. As anticipated, the sun was making its steady way down towards the horizon, a mass of oranges and pinks starting to radiate across the sky. With her feet crunching on the gravel drive, Meg looked into the windows of the house as she passed it. It was dark inside; there was clearly nobody was around. She hugged the package she had been sent closer to her chest for comfort and kept walking.\n\nThe Jacuzzi sat in the centre of a decking area, steam and bubbles rising from the surface of the water like a primeval geothermal hot spring. A pile of soft, white towels stood on a nearby table along with an open bottle of champagne in an ice bucket and a pair of long stemmed flutes. Meg's eyes darted all around and concluded that the property wasn't overlooked by any neighbours. Confident that there wasn't a soul in sight, she quickly did as she had been instructed, removing all of her clothes, spreading gel on herself and dropping quickly into the luxuriously warm water.\n\nAs he had no doubt anticipated, the gel took immediate effect, causing Meg to gasp in surprise as the bubbles and warm water swirled around her most intimate area. Meg settled herself down comfortably, poured a glass of champagne and did as she had been requested to do, enjoying the most perfect sunset she had ever seen.\n\nAs the sun sank lower and lower against the horizon, the feeling of anticipation inside Meg built to a ridiculous level. When only the tiniest sliver of sunlight remained, she nervously reached for the black silk scarf she had placed beside her and wrapped it around her eyes, tying it firmly behind her head. Still slightly disbelieving that she was going through with it, Meg sat back down in the warm, swirling water, took a deep breath and waited. The noise of the gurgling water drowned out everything else and Meg was unable to judge the passing of time. Making the best of the situation, she dipped her shoulders under the water to keep warm and lay her arms along the top of the Jacuzzi. Then she opened her legs to enjoy the most heavenly sensations and let her relaxed body float unhindered in the water.\n\nIt was, therefore, an incredibly sexy sight that Jack first encountered when he strolled silently down to the hot tub. Standing back, he watched Meg for a short time. She looked totally relaxed. He found himself admiring not only her delicious body but the pure guts it must have taken for her to have driven here tonight. He was effectively a stranger to her, but one that she had put her trust in. The realisation rocked him slightly and he found himself feeling slightly protective of her.\n\nWatching Meg's gorgeous breasts jiggling on the surface of the moonlit water quickly aroused Jack and it was a welcome relief to slip off his white linen shirt and ripped Levis to free his swollen erection from its confinement. Jack entered the water so quietly on the other side of the gurgling tub that Meg was initially unaware of his presence. Sitting beside her, he placed a hand adjacent to her chest. Meg gasped in shock at his first unexpected caress across her hard nipple, and then smiled secretly to herself.\n\n'You are beautiful,' murmured Jack. 'Good evening, Megan.'\n\n'Good evening,' she replied into the darkness. There was a long pause. 'What can I call you?'\n\n'What would you like to call me tonight?' he smiled, his continuously caressing hands moving slowly over her breasts. 'Sam? Doctor? Master?'\n\n'I'd love to call you by your real name.'\n\n'Do you remember that you promised to submit to me three times, Meg?' asked Jack teasingly. 'As payment for me continuing to touch you on our first evening together?'\n\n'Uh-huh,' replied Meg cautiously, feeling her pulse increase at the mere memory of that night.\n\n'Well, I have an inkling that I might be requesting my first payment from you tonight,' he explained, lazily circling his hands across Meg's hips and sending delicious sensations coursing around her body. 'So I think calling me 'Sir' will probably be most appropriate, don't you?'\n\n'You expect me to submit to you tonight?' she asked quietly.\n\n'Perhaps,' he replied teasingly. 'Although I won't know for sure until I test your limits, will I?' Meg gulped, marginally terrified but extraordinarily aroused, unable to form a coherent response.\n\n'I'm not calling you Sir!' she blurted out, suddenly feeling feisty and needing to stand up for herself. Jack burst out laughing.\n\n'We'll see,' he smiled. 'With a little experimentation, I'm sure I can discover the right combination of levers and pressure points to make you change your mind. But what's wrong with calling me Sam, anyway? I thought that's who you wanted?'\n\n'No,' gulped Meg, as his fingers moved further down to stroke her inner thighs. 'Since that first night, I've only thought of you.'\n\n'That's because, although I'm not imaginary, I'm not part of your real life either.' His fingers moved slowly towards her core. Meg automatically opened her legs wider and he began to stroke her gently, producing a groan from deep within the base of her throat. 'Imagine if you found out my name's Trev from Coventry. I'm a bald, fat bricklayer with a wife, four kids and a penchant for pigeon racing. Wouldn't that ruin the magic?'\n\n'Not if you carry on doing what you're doing and I get to keep the blindfold on,' gurgled Meg, desperately trying to keep control of herself whilst his long, curious fingers set to work. His laugh was delightful and Meg found herself grinning in reaction to it. This bloke sounded completely gorgeous and always smelt clean and expensive; there was no way he was the pigeon fancier that had just been described.\n\n'You know the other item I put into the parcel? Are you sure you're OK about that?' he asked. Meg knew that he was referring to the condom and, in a rather roundabout way, checking he had her consent for what they were just about to do.\n\n'I'm sure,' replied Meg. 'You haven't bothered to ask permission before,' she teased.\n\n'But this is a little different, don't you think?' he replied, retracting his fingers, slowly taking hold of her hips and guiding Meg into the position he required. Meg found herself being eased into a kneeling position on the seat of the hot tub. As far as she could tell, she was facing towards the sea and he was behind her. He had spread her thighs very wide apart. She felt extremely exposed but incredibly sexy with the fast flowing water cascading over her body. Meg could vaguely hear the noise of a condom wrapper being torn. Before she knew it, he was leaning against her back, gently running his fingertips around the soft flesh of her outer lips.\n\n'I don't mind admitting to you,' he murmured, gently kissing the nape of her neck, 'that I've been desperate to get inside you for a long time. I apologise in advance if things get out of control.'\n\nTurned on by his words, Meg angled her hips, desperate for him to enter her. She gasped in anticipation as the tip of his cock brushed against her. As he nudged once more, something felt wrong to Meg. Why wasn't he able to slide inside her? There was no doubt she was turned on enough. Moving one hand behind to try and assist, she was shocked to realise the cause of the problem.\n\n'Je-sus!' she breathed, returning her hand to the side of the Jacuzzi where she clung on desperately. How the hell was something that size going to fit inside her? The few men Meg had previously been with, she had managed comfortably enough. This guy was in a different league. She automatically clenched her muscles in fear and anticipation.\n\n'That's not going to help,' he grunted. 'You need to try and relax. Just like last night,' he added, referring to the large vibrator he had used on her.\n\nHe repositioned himself against her and then moved his hand forward to hold open her soft lips against a narrow stream of bubbles being ejected from under the water. He manoeuvred Meg to ensure the stream of bubbles whisked relentlessly around her swollen bud forcing her to cry out loudly with pleasure. As Meg moved closer and closer to orgasm her strong internal muscles clenched and then released, allowing Jack to slowly edge himself deeper and deeper into her.\n\n'Good girl,' moaned Jack, bringing his rotating thumb into the mix. 'Nearly there.'\n\nAs the tip of his incredible cock leaned firmly against her cervix, filling her to the hilt, Meg came loudly and violently. Powerless to prevent herself from desperately squeezing her over-stretched muscles forcefully around him, her cries echoed noisily out to sea. As Meg eventually began to relax once more, Jack slowly commenced rocking his hips, the steady pendulum movement causing a mind-blowing sensation for both of them.\n\n'Oh my God,' gasped Meg. 'This is...this is...'\n\n'Fucking amazing,' growled Jack, struggling with the effort of maintaining the rhythm. 'I've never felt anything like this.'\n\nIt took all of Jack's concentration not to thrust violently into Meg; it would be so easy to come; the sensations he was feeling were beyond incredible. Breathing deeply, he just about managed to hold it together whilst waves of pleasure crashed over Meg again and again. At length, the interval between Meg's orgasms lengthened as she slowly acclimatised to the wonderful sensation of being so tightly filled. Meg felt Jack lean across her and was surprised to feel her blindfold being removed.\n\n'Eyes forward,' instructed Jack. 'No looking behind you. I'm doing this because it doesn't seem fair that only I get to see this amazing view.' Meg opened her eyes and she slowly grew accustomed to the darkness. The moonlight bounced off the surface of the sea and a huge starry sky spread out in front of her. Had she not been so thoroughly distracted, she might have been able to pick out the constellations of Cassiopeia and Orion twinkling down on them.\n\n'What an incredible sight,' breathed Meg.\n\n'It certainly is,' smiled Jack, continuing to tenderly rock his hips, glancing down at Meg's gorgeous, naked form and rounded bottom.\n\n'I could look around,' mumbled Meg. 'I could find out who you are.'\n\n'Yes, you could,' replied Jack. 'But, be warned. If you do, I stand up and walk away. You'll never see me again.\n\n'Don't leave,' begged Meg, arching back against Jack's body. She could feel herself scaling the heights of pleasure once more, as Jack began to slowly rotate his hips, grinding himself into her.\n\nIt was a little while later that Jack sensed Meg was starting to tire. This was hardly surprising, smiled Jack to himself, given what he'd subjected her body to over the past twenty-four hours. In Jack's mind, it was definitely time to ramp things up again and ensure Meg's energy remained high, right until the end. He slowly trailed his fingertips down the length of her spine. Meg only became aware of his devious intentions when his little finger found the tight rosebud of her bottom.\n\n'No!' a shocked Meg cried loudly.\n\n'You've never written about this either,' stated Jack, continuing to move rhythmically against her. 'Is that because you've never experienced it?' A tense Meg nodded.\n\n'I know you'll enjoy it,' teased Jack. 'Just consider it research for a future story.'\n\n'No, you can't,' replied Meg. 'I won't.'\n\n'Won't?' asked Jack playfully. 'Well we'd better make this your first payment of submission then.'\n\n'No,' growled Meg as he gently circled his wicked finger around her tight entrance.\n\n'Meg. You're the one who agreed to this form of payment. You must have known I'd be asking you to do something against your will? I was never going to ask you to submit to making me a cup of tea, was I?'\n\n'But...'\n\n'And whilst you're submitting to me,' continued Jack, folding his long body against her back, 'each time I ask you a question, I need you to answer me using the words 'Yes Sir''. He was amused to feel Meg's spine stiffen and hear her hiss quietly in disagreement. 'So, may I continue?'\n\n'No!' said Meg forcefully. 'I will not be submissive.'\n\n'You don't say,' said Jack sarcastically, raising his eyes to heaven. With that, he placed his lips against her neck. As though by reflex, Meg's head automatically dropped against her opposite shoulder, giving Jack full access to her tender skin.\n\n'May I continue?' he repeated, kissing Meg's neck teasingly, in time with his gently rocking hips. Meg groaned at the intensity of their coupling. He was so close to her now; their heads were touching. She had a desperate desire to turn and kiss him.\n\n'Yes,' she murmured at length. Jack quickly nipped his way from the base of her neck up to the lobe of her ear, causing Meg to wriggle and shriek out in shock as, by fighting him, she accidentally jolted her body further down on his unforgiving cock.\n\n'Yes Sir, remember?' said Jack, as he reached her ear lobe and his teeth closed gently around it, causing Meg to gasp. There was a long pause, which spread out between them. Jack didn't move, although he could feel his cock throbbing harder than ever inside her. He loved the challenge of a battle of wills with a feisty, sexy woman. Especially a battle he would bet good money on winning.\n\nAs the seconds stretched out, Jack repositioned his hand at the front of Meg's tense, combative body, placing his thumb firmly at the base of her clit. Torturously slowly, he slid his thumb upwards, slowly pulling back her clitoral hood and fully exposing her sensitive nub beneath. Ignoring Meg's gasps, leaving his thumb in place to hold her open to him, Jack then used his forefinger to follow the same path upwards, running gently along her now fully unprotected, over sensitive clit, gently tapping on the exposed peak. He was grateful there weren't any neighbours nearby as her urgent cries filled the air and drifted out to sea.\n\n'Too intense,' grunted Meg desperately. 'Too much.'\n\n'I know, that's why I'm doing it' replied Jack wickedly. 'Yes Sir?' he repeated once again, stroking his finger back down.\n\n'Yes...Sir,' groaned Meg at length.\n\n'Good. And do you want to know what it feels like to have my finger and my cock filling you at the same time?' continued Jack, taking pleasure in tormenting Meg further through her forced submission. Again, a long silence followed.\n\n'Answer me,' demanded Jack, moving his cock slowly out of her and then slamming forwards with a single, sharp thrust. Meg cried out in shock and pleasure.\n\n'Yes Sir,' she croaked unwillingly.\n\n'Better,' approved Jack, gently releasing her and returning himself to an upright position.\n\nSucking his finger and returning it to Meg's tightly puckered hole, Jack began a set of staccato thrusts, forcing Meg to once again ramp her way up towards the incredible height of another orgasm. Just as she took her final breath before releasing her orgasm, Jack pushed his index finger forwards. After an extended moment of resistance, Meg's body finally yielded, accepting the previously unwelcome entry. The sensations that flooded Meg's body were overwhelming. Shrieking with pleasure, confused by the joint emotions of shame and ecstasy, her torso flew forwards against the side of the Jacuzzi. As her internal muscles tightened wildly around Jack's solid cock, forcing him to thrust harder and harder, he was eventually unable to prevent a desperately violent climax that rocked them both to their cores.\n\nIt was several minutes before their breathing and racing hearts both returned to a vaguely sensible rate and Jack slowly withdrew from Meg. He replaced her blindfold, slumped down on the Jacuzzi seat and pulled a limp Meg towards him, allowing her to sit across his thighs. Despite her stunned state, leaning against him, Meg slowly became aware of the smooth skin on his flat stomach, muscled chest slightly peppered with hair and a length of leg and body height that confirmed he was pretty tall.\n\n'You were amazing,' he murmured eventually. 'And although I do enjoy acting out your fantasies, I think next time, it should be one of my choosing. Is that fair?' Meg nodded, the implication of his words not really hitting home. She was simply joyful that he was planning for there to be a next time. 'I'll send you the story in advance, so you can have a read and fully comprehend what fate awaits you,' he grinned. 'I'd better go.'\n\nAs he made to get out of the Jacuzzi, through her enforced darkness, Meg reached out and stroked his head. She encountered thick, soft hair which her fingers were able to glide easily through.\n\n'Please can I see your face? Please can we meet properly.'\n\n'You can take the blindfold off any time you like, Meg. But once you do, this is over. Permanently.'\n\n'Why?'\n\n'To keep the magic alive for you,' he replied, exiting the Jacuzzi and dressing.\n\n'It's still alive,' smiled a satisfied Meg laying back in the water. 'I've just felt the most gorgeous head of hair and you smell divine, so I can be pretty confident you aren't a bald bricklayer!' Bliss. There was that wonderful laugh again. She could listen to that all day. 'At least tell me what colour your hair is,' she requested.\n\nHe paused, before replying. 'Black.'\n\n'And your eyes?' she asked grinning.\n\n'Don't push your luck, young lady. If you don't want this to stop, count to a hundred before you remove your blindfold. You're amazing. Good night.'\n\n'Good night,' she replied to the darkness of the empty garden that surrounded her. Several minutes later, Meg heard the throaty roar of an expensive sounding car and knew that she was safe to remove her blindfold. She slowly dried herself, dressed and, feeling physically exhausted, meandered back to her car. As she opened her door, she saw a note alongside an expensive-looking black box on the drivers seat.",
        "\"Wear this whenever you can and think of me. I'll definitely be thinking of you.\"\n\nCarefully opening the box, Meg found a clitoral stimulator to be worn inside her underwear. She noticed that there were no controls to enable her to turn the device on or off and smiled. Instead, her pleasure would be in the hands of her mystery man, whenever he decided to text instructions through to the device. She knew her initial assessment that his imagination was twisted hadn't been too far off the mark.\n\n------------------------------------\n\nIf you enjoyed this story, please do vote with 5 stars, to enable others to find it. Thank you!"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "writer of erotic fiction",
        "stranger",
        "hot tub",
        "tease",
        "control",
        "england",
        "hot sex",
        "orgasm",
        "big cock",
        "blindfold"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fictional-fantasies-ch-03"
}