{
    "title": "Knights of the Round Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 9 - Blood and Orange \n\n\"What?\" gasped Lt. Perlman. \"But... but...\"\n\n\"Please.\" I said, my hand extended towards the door in invitation. Totally stunned, Tanya drove her wheelchair out of the office. In the anteroom, she was placed in line behind Cindy, in front of Sergeant Carswell. Sergeant Rudistan could not hide his grin, and I was pretty much losing my ability to keep a serious face, as well.\n\nThe initiates were taken into the Main Conference Room while I and the rest of the Orange Order Members began gathering everyone into the Main Auditorium. I heard hundreds of Police iPhones chime or ring as my email to loddy-doddy-everybody went out.\n\n\"This... this has to be a mistake.\" said Tanya in the Conference Room. \"I'm... I'm retired now, I'm not-------\"\n\n\"Yes, you are still one of us!\" Cindy Ross said, easily sensing what Tanya was going to say.\n\n\"Lt. Perlman,\" said Ronnie Kirkpatrick, \"when the ballots went out, I was overwhelmed with Officers asking if they could vote for you. I checked with the other Members, and everyone agreed that you were active duty for part of the year, retired medically only by force of the Council... and as Captain Ross said, you are still one of us.\"\n\n\"You damn right you are.\" said Chief Griswold, his mustaches twitching merrily. \"We asked the Iron Crowbar, too, and he saw the logic immediately. All we needed to hear. We don't know if this will happen again, but you were voted in unanimously... unanimously, Miss Perlman, that is hard to do... and we will hear no objections to this honor that you absolutely deserve.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I want to congratulate you on yet another outstanding year.\" said Chief Moynahan. \"You have done an outstanding job in one of the most harrowing years any Police Force has ever had. We've had a few wounded, but everyone is still with us, and that's the best news I can have as your Chief. And now Commander Troy will say a few words before introducing our new initiates.\"\n\n\"Thank you Chief.\" I said, taking a microphone and walking along the aisle instead of standing at the podium on the dias. \"I also want to congratulate you on being the most outstanding Police Force in the State, the Nation... heck, in the World!\" There was some laughter and light applause.\n\n\"I also want to say something else, something serious.\" I said as I stood in front of them. \"There are people out there trying to create racial strife and division. There are people full of hate that are shooting police officers in the back, physically assaulting police officers, and accusing police officers of racially-motivated physical abuse.\"\n\n\"I know, ladies and gentlemen,\" I continued, \"that you will rise above all of that. We do not, and should not, care about the hatred of others and the divisions they try to cause. We will enforce the law on behalf of everyone, and without regard to the ethnicity of the criminals or their victims. We do not care about black, white, Wildcat Red or University Blue. We care about Police Blue, about being the Thin Blue Line and Band of Brothers and Sisters that we are. We will do our jobs with distinction, and for each other. Take care of each other out there, ladies and gentlemen, work as the great Team you are, and we'll all go home and hug our kids after a job well done.\"\n\n\"Okay,\" I said, feeling that my message was being absorbed, \"let's meet the newest members of the Orange Order. First, Sergeant Carswell!\" As Carswell came in, everyone began applauding, slowly standing up as one as he came in and stood next to me. Then there was a lull as I announced the next name:\n\n\"And Lieutenant Tanya Perlman!\" I practically yelled. The massed crowd of Officers erupted into a huge round of very loud applause as Tanya was wheeled in by Teresa Croyle, and parked next to Carswell, who was applauding her along with me and the Chief.\n\nAs the gathering of Officers cheered, Tanya tried to remain composed, but lost the battle. Tears began streaming from her eyes and down her cheeks, and the Officers just began another, louder wave of applause...\n\n* * * * * * * * * * * * * * * *\n\nChief Griswold asked that I drive my Police SUV, and he told Sergeant Rudistan to ride with us. We had TCPD cruisers in front of Tanya and Carswell, Cindy guiding them in her robes and carrying her orange-glassed lantern, and Teresa driving Cindy's SUV behind them, with Della Harlow riding shotgun.\n\nTanya had been outfitted with a non-motorized wheelchair, as we were worried the battery on her 'tank' might run out. I'd also fashioned a metal stick with a hook and put it on the front of the armrest so she could hang her green-glassed lantern on it. She pushed herself for the most part, but Sergeant Carswell would push her up hills and down hills, and sometimes just to spot her some rest.\n\nAs Chief Griswold slept in the shotgun seat, I was watching carefully around Town. I did not expect to see anyone jump out at us, though one never knows, but I was watching the buildings, seeing if anything unusual was going on, and especially watching to see if we were being observed.\n\nAt the start of the Patrol of Honor, people had lined the roads around Courthouse Square. They turned on their cellphone lights or lighted candles, creating a beautiful sea of sparkling light. They also applauded Tanya when she went by them. Cindy would later tell me the mental outpouring of love rivaled what she always felt at 'The Vision'.\n\nAs usual, we went down MLK Jr. Avenue. In past years there had been a smattering of people that watched. This year, there was just no one. People went about their clubbing, barely paying us attention... or giving hateful looks to us. I wasn't sure why, but I felt very relieved when we got out of that area.\n\nChief Griswold had told me to wake him up just before 2:00am. I did so, at 1:50am. \"Drive back down to the Junction Station Depot, Crowbar.\" the Chief ordered. I did so.\n\nAt the Junction Station Depot, the Chief told me to park, then for us to come inside with him. When we got inside, I was shocked. There were two red-glassed lanterns on the table, and the room was lighted only by red lights and red candles burning normal candlelight. It was eerie, and almost a depiction of Hell itself.\n\nThere were four other people in the room. One was Corporal Ronnie Kirkpatrick. Next was the Intendent, Adele Peabody. Third was Fire Marshal Zoe Singer. The last was a retired TCPD Officer named Efram 'Ed' Elliott. He had run Internal Affairs for years, and had retired before I'd come to the TCPD.\n\nThey were all wearing robes and looked like monks. Chief Griswold came around from behind us, also wearing a robe like theirs, and he joined them in front of us.\n\n\"Gentlemen,\" said Kirkpatrick, \"we are brothers and sisters of a very special part of the Orange Order and the Fire Chief's Order of Distinction. There are others of us among the Police and Fire Departments, and our mission is to protect the Citizens and our good brethren from those that would destroy us. At this point, I must ask you to commit to an oath of secrecy, which will not commit you to join us. If you do not wish to go further, you may leave with no hard feelings nor retribution.\"\n\n\"Count me in.\" I said, knowing the people in front of me would not be a part of this if it was not for the good.\n\n\"I'm in, too.\" said Rudistan, who'd wisely decided that jovial humor was not called for at this juncture. We swore an oath of silence, and then Chief Griswold asked up to sit down. \n\n\"Guys,\" he growled, \"I think you both know we've had some real bad apples in our Police and Fire Departments in the last few years, as well as politicians and others that are corrupt. There are people who not only don't follow the rules, but attempt to use the rules themselves as weapons against us. While we all love the Constitution and the Rule of Law, there are times when those are used to constrain us and enable our enemies.\"\n\nI was nodding my head as Griswold continued: \"You know how I love Star Trek. And if you follow that show, you've heard of what they call 'Section 31', and its secret, secretive operations. In real life have such units at the national level... and we have a few people here that are part of our group, that are willing to do what must be done.\"\n\n\"We call ourselves the 'Blood Order'.\" said Zoe Singer. \"The Orange Order and Fire Chief's Order Inner Circles are the people from whom we recruit our members. Every one of us are persons of integrity and distinction.\"\n\n\"I need not say,\" said Chief Griswold, saying it anyway, \"that the Iron Crowbar has been pretty much a one-man Blood Order unto himself. And now, Don, we're here to offer you some help.\"\n\n\"You already have been helping, I perceive.\" I said, seeing all those times Myron and Mary's hacking went unchecked, and my blocking of I.A. listening in on me had not been challenged... not to mention data coming to me that was not collected by ordinary means, and setting up Bryce...\n\n\"Not much gets by you, Crowbar.\" growled Griswold. \"But apparently the existence of the Blood Order did. Frankly, we're stunned you didn't catch on to us. We started years ago, when Westboro was starting his Career of Crime, and was bringing Malone and Brownlee and other filth you never knew into our Police and Fire Departments. Assistant Fire Chief Jefferson was one of them. We were trying to stop them, and realized we needed extracurricular moves to do so. We might've gotten Malone and Brownlee, but we see now that the Consultant of Crime was too far ahead of us.\"\n\n\"Gentlemen,\" said Kirkpatrick, \"the two of you have shown that you are ideal candidates to join us. Sergeant Rudistan proved his worth when he helped you the night you and Captain Ross worked over Steven Moschel... oh yes, we knew about that...\" he said, seeing the look in my eyes. \"You did what had to be done. And we made sure everyone else looked the other way. One day, we will ask Captain Ross to join us. For now, what is your own answer? If you refuse, you may go in peace, and nothing more will ever be said.\"\n\n\"I'm in.\" said Rudistan, who could not resist adding: \"Unless the Iron Crowbar refuses and wants me to be in his personal Blood Crowbar Order.\"\n\n\"I think I like having the numbers behind me.\" I said. \"I'm in.\"\n\nWe went through a ritual. One was straight from Conan Doyle's The Valley of Fear: we were masked, and two points were pressed into our eyes as we were told to step forward. When we did, the resistance disappeared. We also had blood drawn, as did everyone there, which was dripped into a bowl. Then some alcohol was poured in and lit aflame.\n\nAt the end, Adele Peabody said \"There is a medal that comes with your induction. However, you do not wear it on your public uniforms; only when the Blood Orders meet do you wear the medal or ribbon.\" With that, our medals were pinned upon us. They looked like Orange Order Inner Circle medals, except the middle stripe was blood red, and the medallion below looked like a spider web on a five pointed star, with a red lantern in the middle, and the inscription \"Do What Has To Be Done\" on the outer edge. I suspected this was adopted and adapted from a Military Intelligence insignia.\n\nYes, there were secret handshakes, which was more like touching on the wrist in a certain way with the other hand, to let the other know we were part of the Blood Order. The non-initiated would never realize it.\n\n\"All right, let's get back on the road.\" said Griswold. We left that red-lit chamber with our red lanterns and went back into the cold of the night.\n\nPart 10 - Champions and Balls \n\nAs the first threads of dawn appeared in the eastern skies, the initiates were steered back to Junction Station. They (and Cindy) left their lanterns hanging outside. Once inside, Cindy was awarded her Inner Circle medal, then Damien Thompson pinned Carswell's medal on his uniform shirt. And then Chief Griswold pulled all kinds of rank to pin Tanya's medal on her shirt himself.\n\nAt breakfast we had the standard Orange Order fare: eggs and beer. Of course we had other things, too, especially Your Iron Crowbar's favorite: bacon. Tanya was exhausted from the patrol, and said she would probably fall asleep before finishing hers.\n\n\"I still cannot believe anyone thought of me, much less voted for me.\" Tanya said as we ate.\n\n\"I'm not sure where it started, but I was getting dozens of Uniformed Officers coming up and asking.\" said Kirkpatrick. \"But you were active duty almost half the year, and everyone knows it was the right thing to do.\"\n\nAnd Chief Griswold said it best when he said \"We had to have all three of Crowbar's Angels in the Orange Order. Wouldn't be right any other way.\"\n\n\"I'll drink to that.\" I said, raising my beer mug in a toast, then drinking heavily from it. Others agreed, including Cindy and Teresa, and drank from their mugs as well.\n\n\"Looks like we'll be driving the Commander home today, instead of the other way around.\" Cindy said to Teresa.\n\n\"Yep.\" Teresa replied. \"So... how was it guiding them?\"\n\n\"Tiring, like the initiation itself.\" Cindy said. \"But the good thing about it was that I got to call the bathroom breaks. Nothing like having all that power in my hands.\" Cindy cackled with glee, then Teresa cackled even more evilly...\n\n* * * * * * * * * * * * * * * *\n\nI opened my eyes out of a deep slumber to see the eyes and face of a three-year-old sitting on my chest and looking into my face. My three-year-old, Carole, was the culprit, of course.\n\n\"Wake up, Daddy!\" she said. \"Mommy says it's time to get dressed for the Po-leece-man's Ball.\"\n\n\"Hey Cutie.\" I said, waking up and looking around. Laura was by the bed; she had deposited our daughter on top of me to wake me up.\n\n* * * * * * * * * * * * * * * *\n\n\"Mmmmm, you are gorgeous.\" I said to my wife as we readied to go. Laura was wearing a black gown that, without trying, showed off her magnificent body to perfection. She was wearing high-heel black pumps, and with her raven-black hair partially piled on her elegant head, she all but towered over me.\n\nI was in my formal uniform, with medals over my right pocket and the Medal of Valor with oak leaf cluster around my neck. Molly took pictures as she told Carole that Mom and Dad were going to a 'grownups party'. Carole didn't seem to mind; she was catching on fast that when Molly babysat, Carole got extra desserts after dinner....\n\n* * * * * * * * * * * * * * * *\n\nWe were at the Civic Center this year, in the grand ballroom. Most of the Officers and their spouses or dates were in the cash bar room adjacent to the big ballroom, waiting to go through the processing line. Those of us in the line were in the room, with Chief Moynahan discussing where we were sitting, where the line would be, etc. Me, I was noticing Melina, who was looking pretty hot in her light blue evening gown and matching light blue high heel pumps. She was not as tall as her sister Laura, to Daniel Allgood's good fortune... I'm tall enough that my ego can handle a tall(er) wife; I'm not sure Daniel would be so secure.\n\nI also noticed, or perhaps felt, that something wasn't quite right with my ex-wife. She seemed tense, and I was not sure why. \n\nThe formal line started up. At first there was a greeter, in this case Sr. Patrolman Hicks. He announced who was coming through to the Mayor and his wife; then to Sheriff Allgood, who then introduced the persons to his wife; Melina then passed them along to Chief Moynahan, who was without a date; the Chief passed the persons on to me and Laura; then on to Della Harlow and her husband.\n\nI always tried hard to remember my Officers and their spouses and children's names, and it was for this occasion. This was the only real contact I would have with many of them the entire year, and I wanted them to think they were more than nameless, faceless Officers viewed from the Brass in the Ivory Tower. So I became the bottleneck as I spoke to all of them as they came through, remembering a positive action or the birth of a child, and so on. Chief Moynahan later told me that he was impressed, and that it was good for their morale when their leaders remembered them.\n\nTo my surprise, Chief Emeritus Griswold came through the line with his wife. He had declined to be part of the receiving line, and later said it was fun going through the line for the first time in many years.\n\nAnd of course, Todd and Teresa came through. There was no outward problem between them and Daniel and Melina; just hosts greeting guests. But I felt the vibe, and it was saying 'awkward'...\n\nWe went to our places for dinner. Those in the receiving line were also at the front table. I looked out over the Officers sitting at the round tables, and I remembered being told the story of what Teresa's Lieutenants and Sergeants had done for her 'round table' throne. She was sitting with Todd at a front table, with Myron and Mary Milton, Theo Washington and his wife, Teddy Parker and Janice Holloway (who was looking mighty fine), Joanne and Seth Warner, and David Krueger and his date, a lovely young lady that I had not met.\n\nAnd then it struck me... where was Cindy?\n\nShe had not come through the receiving line, I realized. I whipped out my Police cellphone and fired off a text. She replied that she was there. I looked around and finally saw her at a very back table. I felt relief and concern at the same time.\n\n\"Playing Secret Service Agent again, darling?\" Laura said to me. She'd noticed the small, clear earpiece with a clear wire going down the back of my jacket.\n\n\"Of course, dear.\" I said. \"The Wildcats are playing for the Conference title.\"\n\n\"If the Bulldogs make the title game,\" Laura asked, \"will everyone else have those little earpieces?\"\n\n\"Oh, noooooo.\" I said. \"We'll have to change our schedule if that happens. Nobody will come; they'll be watching the game.\"\n\n* * * * * * * * * * * * * * * *\n\nThe Wildcats had gotten to a 10-0 lead over the Tigers as they went to halftime. Right at that time, we began the speeches. First went the Mayor, who expressed his and the Council's appreciation and support of the Police Force. I could've built a clipper ship out of his wooden voice. Then came Sheriff Allgood, who put a little more energy into his voice as he complimented the Force on the great job they did this past year. Then came Chief Moynahan, who made a point to notice \"that young patrolman and his lovely wife\", that being the Griswolds. \n\nMoynahan then said \"I'll bring up Commander Troy now, who I'm sure will lead a toast... so get those drink glasses filled up!\" There was some laughter, then I came to the podium.\n\nI looked around the crowd until they became silent with anticipation. Then I said \"Ladies and gentlemen... it has been one heck of a year!\" People laughed, and then some applause started.\n\n\"We faced some big challenges this year.\" I said. \"I asked you, all of you, from the Patrol Officers to the Detectives, to the Special Ops teams, to do a lot. And you did a lot, and you did it with professionalism and distinction. I can tell you that there are many good Police Forces out there... but this is the only Police Force with which I would care to serve.\" I was interrupted by applause. I raised my glass and said \"So yes, I will be leading a toast... to the finest Police Force anywhere, and to you special people and your families that make it so. To the TCPD!\"",
        "\"TO THE TCPD!\" rose a chorus as everyone stood up and raised their glasses. We all drank our toast.\n\nI then brought up Della, who introduced our Orange Order recipients. Tanya was there with Jack Muscone, who was wearing a full tuxedo and looking sharp. She obviously couldn't stand up, so she wheeled herself to the front. Then she asked for a microphone.\n\n\"I just want to tell all of you,\" Tanya said, and I knew she wouldn't get through this without crying, \"that your voting for me means more to me than I'll ever be able to say. And no wheelchair or Council will ever stop my heart from loving all of you, and I will be one of you until my heart stops beating forever. Thank you, thank you all!\" \n\nI don't need to say that Tanya was not the only one crying by the time she was done. And I noticed the Council Members that were there... Thomas P. Cook and Kelly Carnes were not appreciative of the shot Tanya had taken at them, and had dark looks on their faces. Then they realized that my eyes were upon them. Be afraid, you bastards, I thought to myself. Be very afraid.\n\n* * * * * * * * * * * * * * * *\n\nI danced with Laura, danced with Teresa while Todd danced with Laura and flirted mightily with her, and I danced with Chief Griswold's wife. Then I went and found Cindy, who was sitting at the back table.\n\n\"May I have this dance, mademoiselle?\" I asked her.\n\n\"Certainly, mon Commandant.\" she replied. As we danced, I asked \"Why the back table?\"\n\n\"I have no date, and I'm not really into it.\" Cindy said.\n\n\"Why didn't you bring Ariel?\" I asked. \"Or you could have asked your father to attend with you. I'm sure he'd eat this up.\"\n\n\"Ariel had made previous plans.\" Cindy said. \"But that's okay; I am not good company tonight. And my father is staying holed up in the compound in Coltrane County. Just between us, I think he's seriously concerned about his security.\"\n\n\"I should talk to him, then.\" I said. \"Okay, let's go to the bar area and check on the football game.\"\n\n\"You check on football.\" Cindy said. \"I'll get a drink at the bar.\" And so we did. I was pleased to see the Wildcats had a 20-3 lead in the fourth quarter. I noticed Cindy sitting at the bar with her drink, so I went back to the ballroom. Melina was available for a dance.\n\n\"How are the Wildcats doing?\" Melina asked.\n\n\"Up 20-3, getting late in the fourth quarter.\" I replied.\n\n\"Good.\" Melina said. Then she asked \"Is Cindy okay?\"\n\n\"I think she's a little lonely.\" I said. \"Her heart has taken a couple of crowbar beatings these last few months.\"\n\n\"Yeah.\" Melina said. \"I would say it was too bad about her and Jenna Stiles splitting up. But between you and me, I thought Jenna wasn't right for Cindy. Something's just not quite right about Jenna. I would say it's because she's a redhead, but then I'd be getting a crowbar spanking, now wouldn't I?\"\n\n\"Well, maybe just a spanking, the good kind.\" I said. Melina chuckled, but it was somewhat derisive.\n\n\"You and Laura are so perfect for each other.\" Melina said. There was something inscrutable in her eyes as she said it. But I didn't have time to notice, as I was listening to my earpiece.\n\n\"And there it is.\" I said, as I listened to Wildcat Radio through my earpiece. \"Final score, 20-3. The Wildcats have won the Conference championship!\"\n\n\"Go Wildcats!\" Melina said.\n\nPart 11 - Dark Matters \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the lovely redheaded MILF reporterette at 7:00am, Monday, December 5th, from in front of City Hall. \"Channel Two News has learned that Council Members Thomas P. Cook and Kelly Carnes have demanded a meeting with Sheriff Daniel Allgood and Police Chief Sean Moynahan, to explain why Tanya Perlman, who is medically retired from the TCPD and now works for the State Crime Lab, was inducted into the Police Force's Orange Order Honorary Fraternity last weekend!\"\n\nBettina went on: \"Mr. Cook and Mrs. Carnes say that the Orange Order honorary is intended for current police officers, not SBI Agents that voluntarily left the Police Force months before, and they say they will introduce Council action to disband the Orange Order and the Fire Chief's Order of Distinction.\n\n\"Reached for comment, Sheriff Daniel Allgood stated that it is the Police Force who decides its Orange Order membership, not Thomas P. Cook, and that he has no intention of meeting with Mr. Cook nor Mrs. Carnes over this matter. He also said that he would be instructing the Police Force and its Police Chief to likewise not respond to Mr. Cook nor Mrs. Carnes.\"\n\n\"In other news,\" Bettina said, \"all recounts in the State have been concluded, and the result is that Governor Val Jared actually gained 26 votes. Many votes for former SBI Director Jack Lewis are being questioned as fraudulent, as well... including one person who has been dead eighteen years but has voted in every election in the City since his death. But the end result is that the fraud claimed by Democrats has not been proved to be true. Republicans in the State are demanding that the Democrats pay for the recounts, which are expensive, citing that the taxpayers should not have to foot the bill for Democrats' whining about losing.\"\n\n\"And don't miss my special prime-time report on the upcoming session of the State Legislature, where my special guest will be State Senator Katherine Woodburn...\"\n\n* * * * * * * * * * * * * * * *\n\n\"I cannot believe what I just saw and heard.\" said Joanne Warner as we drank coffee in the MCD room.\n\n\"I am soooo ready to beat down Thomas P. Cook with this crowbar.\" said Cindy as she tapped the green crowbar into the palm of her other hand.\n\n\"I'm beginning to see the good uses of crowbars myself.\" said Teresa Croyle. \"Speaking of Crowbars... where's Commander Troy?\"\n\n\"He's in his office. He met with the Mouseketeers, and now he's working on something.\" said Cindy.\n\n\"Ma'am,\" said Theo Washington, \"he said he was going to meet with us about the Holden killing this morning. So maybe it's something about that.\"\n\n\"You're likely right, Theo.\" Cindy said. \"About that, and some other things possibly related to it. We're going to meet with you and Davis later this morning.\"\n\n\"Am I too early?\" asked Jermaine Davis, coming into MCD.\n\n\"Not for coffee.\" said Theo. \"Get some, and bring in a can of coffee when the next coffee call goes out.\" Jermaine showed his true potential to be a Detective: he poured himself some coffee immediately, as any good Detective would.\n\n* * * * * * * * * * * * * * * *\n\nAt 5:00am this same Monday, December 5th, I'd had to forego my morning exercise... because Myron and Mary Milton had asked me to come in. They came to my office, along with David Krueger, and plugged their computers into my television monitor so I could see the data. Coffee had been made and was being consumed. And I might add that a certain bug-killer had a fresh battery, and was in use.\n\n\"Sir,\" said Krueger to begin, \"we've been working on Westboro's financial systems and it's many hubs, nodes and spokes for quite a while, so we're pretty used to what to look for in these types of cases. We've found several distinct threads.\" He turned to the others.\n\n\"First,\" said Mary, \"some strange actions regarding T-Square. He's been meeting here, in the City, and in other places with a number of black singers and rap artists, ostensibly on musical collaboration. But we are finding that at the same time, there are coincidental meetings of State and even Federal officials in the same general locations, and at the same times.\"\n\n\"Sounds like the Silverfish robberies occurring at the same places and times as Jonas Oldeeds appearances.\" I said, remembering the 'Silverfish' case.\n\n\"Yes sir, and we did learn from you, and were able to spot this because we had the precedent and the knowledge.\" said Mary. \"So, since the Government conferences are governed by public records acts, we quietly snuck in and gathered the records of the attendees, then glanced into their finances. It's a tangled web they weaved, but in the end we've come out with four names that kept showing up. One of them is T-Square. Another is 'Big Ice', who is pretty stridently anti-Police and has been a rival of T-Square up to now. Third is 'Jasmine Nix', female black singer, and a virulent Police hater, and last is George Schwartz, a white man and a financier who supports and finances left-wing causes.\"\n\n\"Any relation to Blade Schwartz, who ran for Governor under the Libertarian ticket?\" I asked.\n\n\"No sir.\" said Myron. \"Blade Schwartz is actually part or all Native American and picked up the 'Schwartz' name for reasons unknown. George is a German immigrant, naturalized American citizen, but has deeply Socialist roots. He's also very anti-Semitic and hates Israel with a passion.\"\n\n\"So he's working with these black celebrities as well as Government officials?\" I asked.\n\n\"So it would appear.\" said Myron. \"If I may continue on, sir, the picture will come more into focus.\" I nodded and he continued: \"George Schwartz has also come up in association with the Citizens for Police Accountability. We've uncovered links between Ken Eidex and Jay Swenson and Mr. Schwartz... links like money from accounts he controls moves to accounts they control. And his money is going to the group itself. In other words, George Schwartz is in contact with black celebrity rappers and with anti-Police groups, as well.\"\n\n\"The party never stops, does it?\" I asked. \"Okay, what else?\"\n\nDavid Krueger said \"On what would seem to be the other side of the coin, a couple of White Supremacy groups showed up in our research. One is called 'White Roots'. They are a very basic, stereotypical motorcycle club of white-only Southerners that are distributing drugs, maybe some arms, and generally yelling 'White Power!' at any television camera they see. On the face of it, they're the absolute poster child of white redneck motorcycle gangsters.\"\n\n\"And underneath that high-gloss exterior?\" I asked. Krueger smiled.\n\n\"Some strange goings-on, sir.\" said Kruger. \"They were rumbling through Charlotte, North Carolina, and the FBI just happened to get a video of some of their members going into a car mechanic shop. Then, out the back door came these men in business suits and briefcases, wearing eyeshades. One of the motorcyclists had a red birthmark on the back of his hand... and so did one of those businessmen.\"\n\n\"Oh, this sounds good.\" I said.\n\n\"Yes sir.\" said Kruger. \"So the FBI called in some satellite assets, and followed the cars of these so-called 'businessmen'. They drove to a building that is the headquarters for a bank-------\"\n\n\"Let me guess the name!\" I said, interrupting. \"Would it happen to be... 'WorldBankTrust'?\"\n\nKrueger just slapped his notes on his knee and said \"Nothing gets by him, guys.\"\n\nMary was grinning. \"Isn't that the name of the bank that that Barclay guy worked at, Commander? The AG that you just busted for murdering his daughter?\"\n\n\"Yep.\" I said. \"Myron, I see why you married this woman. Beautiful, and all those brains, too.\"\n\n\"Yes sir, that's right.\" Myron said proudly. Mary was blushing but very happy with the compliments.\n\n\"And yes, it's the same bank.\" I said. \"Myron, what do we think of coincidences?\"\n\n\"About the same as Dame Agatha Christie, sir.\" said Myron. \"As you've recited to us countless times.\"\n\n\"And I will continue to do so.\" I said, smiling brightly. \"So, David, keep going.\"\n\n\"Yes sir.\" said Krueger. \"So these guys went to WorldBankTrust, then came out, went back to the garage, and motorcycle gangsters drove off. But maybe this will surprise you, Commander: we studied the money flows from WorldBankTrust and other banks to Superior Bloodlines, and there's some movement there... but what surprised us is that the North Carolina banks were just a conduit for the money. The origination sources are banks in Boston and all over New England.\"\n\n\"Wallace Bedford is from New Hampshire, is he not?\" I asked.\n\n\"Yes sir.\" said Mary. \"He and a couple of other BigPharmaCorp board members are from up there. And Professor Moriarty, that being Pastor Westboro, had bought property in the mountains of New Hampshire and we believe he planned to move up there.\"\n\n\"Sir,\" said Myron, \"why would Westboro move to New England?\"\n\n\"Well, let me just say this.\" I said, leaning back in my comfortable chair for the story telling. \"A lot of people believe, and are taught and are told, that all the racism in America is in the South. And indeed, more blacks live in the South than anywhere else, and they are a greater population of the percentage, there. But in the 1960s, even in all the Civil Rights and MLK goings-on, Atlanta was called 'the city too busy to hate', and largely avoided the problems that Birmingham and other places had. And in the decades since, I'd say the South has done a better job battling racism than many other places.\"\n\n\"Now if you want true, pure racism,\" I continued, \"go to Boston and New England. Remember the busing riots of the 1970s up there? And ESPN takes shots at the Atlanta sports teams every chance ESPN gets... they're so fucking highbrow that they think the South has only rednecks and blacks. The New England States are where the Republican Establishment thrives and always did... and the blue-blood Elitists of the Republican Establishment hates the Grassroots and hardworking Americans as deeply as the Democrats do. They see all Americans as hayseed redneck racists that don't know any better and need the Establishment to be their masters.\"\n\n\"Anyway,\" I said, \"it is no surprise to me that we are finding the true backers of Superior Bloodlines, not to mention White Roots, up in New England, especially Wallace Bedford and his friend Mitt Baker, who was arrested in the Apple Grove/Providence Springs fiasco last Spring.\"\n\n\"Well, sir,\" said David Krueger, \"there is one more thing. Guess who has been facilitating the laundering of the money from the New England banksters to the North Carolina banks and to the White Supremacy shell groups?\"\n\n\"Uhhh... oh, wait... George Schwartz?\" I guessed.\n\n\"Yes sir.\" said Kruger, and I think he was happy to see the surprise on my face.\n\n\"Wow...\" I whispered, mostly to myself. \"So the same guy... is behind both sides of all this?\"\n\n\"So we read the riddle, sir.\" said Krueger.\n\n\"We have no idea why, sir.\" said Mary.\n\n\"Even my father was surprised about that one, sir.\" said Myron. \"Oh, and the reason we were talking to him about it, is because he was helping us get the info from the Government computers.\"\n\nI sighed. \"You guys are going to get me put in jail, one of these days.\"\n\n\"Sir, they can't do much worse than they've already tried.\" said Myron, meaning my torture at the hands of the deranged Dr. Casey B. Walker.\n\n\"Yes they can.\" I said. \"Oh yes they can. But never mind that. You guys have done great work. I definitely need to find some ways to reward you...\"\n\n* * * * * * * * * * * * * * * *\n\nAs the Mouseketeers left my office, I turned to my computer to find an email had been sent to me by Martha the M.E. What was stunning about this particular email is that it had been sent fully encrypted.\n\nI used the decryption program on it to see the contents. I saw why Martha encrypted the results, and those results were shocking.\n\n\"Sir,\" the email read, \"these findings are being classified and will remain under seal. The lab results of the State Crime Lab are being sent separately, and they did not find what we did here. Our test show that Holden was injected with a neurotoxin. The breakdown products are similar to what was injected into you by your nephew at Ward Harvester, but also have differences. These drugs appear to be closely allied to 'truth serums', drugs that incapacitate a person and cause them to tell the truth under interrogation.\"\n\n\"Also, after getting these results, we re-examined Holden's brain. There is some physical damage to the brain in the areas that these drugs would be expected to affect.\" The email went on with a more detailed anatomical explanation.\n\nI sat back in my 'Command Chair' and went into a long reverie...\n\n* * * * * * * * * * * * * * * *\n\nI was going to go to the coffee klatch, but my suppositions were redirected by a phone call from Eddy the Bounty Hunter. He wanted me to meet him at the Fairgrounds behind Police Headquarters. That wasn't too hard: I went out, got into my SUV, drove to the very back of the parking lot, went through a fence whose door and lock would open when I used my badge and punched in the correct code, and walked through the line of brush to the other side.\n\nEddy was there, dressed in his trenchcoat and fedora hat, looking too much like me for his own good. \"Good morning, Commander.\" he said. \"I have something from your friend 'Ice Cube'.\" He extended a manila envelope, which contained documents, photographs, and two jump drives.\n\n\"He asked me to tell you a few things.\" said Eddy. \"He thinks something is about to happen. 'Imminent', he said. And I've found out a couple of things on my own. First, all shipments of hard drugs to this County were suspended after Thanksgiving. T-Square and all the other gangs are re-routing them away from here.\"\n\n\"Second,\" continued Eddy, \"I'm getting word that Government agents are coming in here. Some DEA, but mostly the US DOJ... not FBI, but DOJ itself. Very weird, but the feeling around Town is that something is being set up.\"\n\n\"And third,\" Eddy said, \"there's been some chatter about Dr. Eckhart coming to the Civic Center in December. I've been looking into that myself, and I'll see if I can come up with anything. But I would advise you to have your people check it out, and maybe even postpone or cancel the event if you find any threats to Dr. Eckhart. I might even add that some of these Government people are the ones that might be a problem for Dr. Eckhart; the FBI has never really stopped considering him an enemy and a threat.\"\n\n\"Thanks, Eddy.\" I said. I fiddled with my Police iPhone. \"Okay, money is deposited to your account. And more to follow if you give me further information on what you just told me.\"\n\n\"If I find anything, I'll let you know.\" Eddy said. \"But I'll be honest, Commander... this is unlike anything I've seen before, even when Westboro was getting desperate and moving against you. I think it's big, and while I'm looking into the Eckhart situation, I'm going to go visit other areas of the State for a while... most very good for my health to take a vacation to Coltrane County or Rivers County, you know?\"\n\n\"I sure do, Eddy.\" I said. \"And what would be even better for your health? Don't dress so much like me. Someone is going to make the mistake one day, and I don't want to be investigating your murder.\"\n\n\"No worries, Commander.\" Eddy said with a grin. \"As long as I don't carry a crowbar, I'll be fine...\"\n\n* * * * * * * * * * * * * * * *\n\nThe information from J.J. 'Ice Cube' Perry, via Eddy, was astounding. Once I decrypted it, I examined it on my secure computer. There had been a demonstration by 'Citizens for Police Accountability' at the Campus Police Headquarters. 'Ice Cube' had taken pictures of the people there from a camera that looked like a button on his shirt. He also detailed that while the speeches were going on, people in the audience were telling others that other, bigger demonstrations were to come, and to check the group's website for a codeword that would signal the beginning of it. The codeword was the phrase 'Pink Knights'.\n\nOkay, I thought to myself, we're armed with that. Then I looked at the pictures. Perry had taken some pictures toward the stage as he observed from within the group. No telling what he'd been disguised as... I was looking at a woman just in front of him. Her hair was in a braid along her back. Her face was turned enough to the side that I could see she was wearing heavy makeup and glasses under her baseball cap, the bill of the cap down low. She also had a small face-painting of a red flower on her cheek.",
        "But that did not matter. I could see an arrangement of moles and 'beauty spots' on the back of her neck. I'd seen that arrangement of spots before. I had seen that arrangement time and again as I woke up in the morning... for eight years. I was in the unique position to know that the woman I was looking at... was my former wife, now Melina Allgood.\n\nWas she undercover? I thought to myself? Was she gathering intel herself? Or was she part of this? \n\nI didn't have time to consider it further. I put Melina into a compartment of my mind, and drove on with more immediate matters.\n\n* * * * * * * * * * * * * * * *\n\nAt 8:30am, Cindy gathered Theo, Joanne, Teddy and Jermaine into Classroom 'E', with the whiteboards being brought in, then she called me and I came in.\n\n\"Okay, guys,\" I said, \"I can tell you that the FBI and I have developed some information that will likely cause the Holden murder case to reach levels beyond our pay grades. But before that happens, it's been a good exercise in Detection, so let's discuss it. Anyone want to put out any theories, based on the data we have?\"\n\n\"Yes sir.\" said Joanne. \"I was going to say it the other day: it looks like Holden was killed elsewhere and at an earlier time, and the car shooting was a stage play, to make it look like it happened there and then.\" Everyone else agreed.\n\n\"I also agree.\" I said. \"Any ideas why?\"\n\n\"My theory, sir,\" said Theo Washington, \"is that T-Square is somehow behind it. And my reasoning is that it does not appear Mr. Holden was physically abused, which they might have done if they wanted information on T-Square. He thought his employee was a good one, so when he had to kill him, for whatever reason, he did it painlessly and swiftly, then staged the shootout. As to the reason why, I don't know, but my best guess is that Holden overheard something that was too critical to let him live over.\"\n\nI nodded. \"There's some good in there, some very good thinking. There's also a few things that I don't think will hold up. Okay, anyone else?\"\n\n\"I'll take the opposite side, sir.\" said Joanne. \"I think this was done as a warning to T-Square.\"\n\n\"By whom?\" I asked.\n\n\"I'm not sure yet, sir.\" said Joanne. \"Maybe a rival gang to T-Square. We know he's tried to be the power behind drugs and weapons smuggling into this area, and failed in the past because Captain Malone would favor another gang and come down hard on T-Square's people because they were black. So maybe this is another group coming in, and they killed Holden as a message to T-Square.\"\n\n\"So why the elaborate scheme to make it look like a car chase and street shootout?\" I asked.\n\n\"To fool us, the Police and the citizens, sir.\" said Joanne. \"And also to hide who they are, which is why they took out the GPS and messed up the street cameras.\"\n\n\"Uh oh,\" said Cindy, seeing my face, \"you're about to say it, aren't you? 'Teachable moment'...\"\n\nI said \"Yes and no... I did ask everyone for ideas, and I like having ideas expressed and we work out the solution by sifting these ideas through the sieve and see what falls through and what holds. So I appreciate the ideas. Having said that, Joanne, I hope you're ready to have your ideas tested.\"\n\n\"Yes sir.\" Joanne said.\n\n\"So let me ask this: why couldn't everything you said have been done by dispensing with the cars, just jamming the cameras, and just shooting Holden at his home or as he stood on the street corner?\"\n\n\"Uh... I guess they could.\" Joanne replied.\n\n\"The term 'Occam's Razor' means the simplest solution is likeliest the correct one.\" I said. \"And I think that partially applies here. You may be right that it was a message to T-Square, but they sure went to a lot of effort just to make that happen, don't you think?\" Everyone was thoughtful as they considered my words.\n\n\"Okay,\" I said, \"I am at a point where I can give you some limited information. Unfortunately, some of it is going to the FBI and in a classified way, so I cannot give you all the details. What I can tell you is that Holden was captured in his home. He was not physically assaulted, but he may have been drugged and interrogated. Then the scenario was played out where he was shot multiple times, loaded into his own car, taken to the scene, kicked out of the car, his dead body shot again, then the other car, with the driver of his car in it, raced on out of there.\"\n\n\"So I liked what Theo said, and based on the data he knew, it was plausible. But it is not likely that T-Square was the one behind his employee's murder. Ergo, that leaves it more likely that it was a warning to him. But I have some doubts about that, as well. Just what is it they were trying to warn T-Square about? If it were a drug pipeline issue, they either cut a deal with T-Square, or they go to war and fill T-Square, not his bodyguard, full of bullet holes. I did not quite catch that report of an open gang shootout between sides, so I am discounting that for now, and also for now I am discounting any kind of warning to T-Square. So many other ways to do that. So... what hypothesis does that leave us, Detective Davis?\"\n\n\"First of all,\" said Davis, \"I remember you telling T-Square to watch his back, because it was his bodyguard that was killed. So you must've known then they weren't just trying to warn him, or you'd have not stated the obvious to him.\"\n\n\"This guy is good.\" I said to the others. \"What else, Davis?\"\n\n\"You just said they captured him, sir?\" said Davis. \"And interrogated him? Then they must've wanted information from him. Don't ask me what, though.\"\n\n\"Ah, that is very good.\" I said. \"Seriously, Davis, that's good thinking: simple, fits the facts, doesn't extrapolate or twist too much. I agree with you: the perps were trying to get some kind of information out of Holden. Now, what information could that be?\"\n\nJoanne said \"T-Square's security arrangements?\"\n\n\"Or his itinerary.\" said Theo.\n\n\"No.\" said Teddy Parker, finally speaking up. \"With Holden captured, and especially with the Commander's warning to him, T-Square would change things up, take extra precautions. And while not all details are made public, his appearances are known in advance, as he's selling tickets to his events.\"\n\n\"That's true.\" said Cindy. \"So Holden knew something else that they wanted to learn. Maybe something he overheard T-Square talking about?\"\n\n\"Or maybe they thought he knew something.\" said Davis. \n\n\"Ah, another excellent point, Jermaine.\" I said. \"We're getting warm, as the children say in that game they play. Okay, so I'll change the subject a bit, and ask: who had the sophistication to do what was done to the street cameras? And interrogate Holden without leaving hardly a mark on him?\" \n\nThe room fell silent. Then Jermaine caught on. \"Sir, you just said that the FBI is getting involved. So I'd guess the Government, either ours or someone else's.\"\n\n\"This guy actually listened to what I said, Captain.\" I said to Cindy, as if that were a rare thing. \"Very good again, Davis. Yes, the Government, at the State or National level especially, would have the means.\"\n\n\"And so...\" I said, getting up, \"... you can understand that this one is beyond my pay grade, which is not much more than your pay grades. Jermaine, you'll have to put a uniform back on and go back to Precinct 2. I've already sent emails to your superiors, Sergeant Carswell and Precinct Captain Thompson, stating that I have been highly impressed with your work, and when the time comes to put some people on the Detective Track, you'll be boarding the train.\"\n\n\"Thank you, sir!\" said Davis. He got up, shook my outstretched hand, and excused himself.\n\n\"Okay, the rest of you, start winding this down and put in your reports.\" I said. \"We'll keep a watch on it, but I have no expectation of catching the perps any time soon, as they were likely hired guns.\"\n\nPart 12 - Rounding It Off \n\n9:30am. My meeting in the Sheriff's office at City Hall was also attended by the Sheriff, Chief Moynahan, Cindy Ross, and FBI Special Agent in Charge Jack Muscone at my request. We sat at the round table in the Sheriff's Office.\n\n\"Okay, Don,\" said the Sheriff, \"you have some information for us?\"\n\n\"Well, let me put it this way.\" I said. \"We've been investigating the murder of Holden, and some bigger threats have come to light. We have black militants potentially planning something in this area, and at the same time we have militant white supremacists planning something. On top of that, we have politically-motivated groups also planning to start some trouble. They're either waiting for some pretext... such as us Police having a strong presence at the University-State Tech game... or they'll try to create a pretext, with a complaint Media very eager to help, and go from there.\"\n\nI outlined what I'd learned about the financial connections, though leaving out some details, especially the findings of the M.E. I did not mention the possible threats to Dr. Eckhart and 'The Vision' seminar just yet.\n\n\"I don't get this.\" said Sheriff Allgood. \"You're saying that it's all interconnected? That the same people are behind both sides?\"\n\n\"Essentially.\" I said.\n\n\"But why?\" asked the Sheriff.\n\n\"I could say it's a matter of following the money.\" I said. \"These characters profit from the chaos, and they profit no matter who wins. But it's about more than money; it's about control, political control, over every aspect of our lives.\"\n\n'So what can we do about this?\" asked Sheriff Allgood. \"What can we do to take down T-Square and end the conflict?\"\n\n\"Sheriff, are you saying T-Square is the only one that's the problem?\" asked Jack Muscone.\n\n\"Well... isn't he?\" asked Allgood. \"If he's taken down, doesn't the whole problem go away?\"\n\n\"No.\" I said flatly. \"You still have 'Citizens for Police Accountability' out there. You still have 'Proactive Citizens of Greenworld' ready to come right back in here and go after Crown Chemicals or BigPharmaCorp. You still have other militant Black groups ready to take T-Square's place... in fact, I'd suggest T-Square is less hostile than some of those others will be. This Jasmine Nix woman has recorded songs about murdering Police Officers, and she has called for the assassination of all Police Officers in the nation.\"\n\n\"And that's what I'm saying, that's where the problem is coming from.\" said Allgood.\n\n\"And that's ignoring the other problem, Sheriff.\" said Jack Muscone. \"Three BigPharmaCorp Board members, including openly racist Wallace Bedford, intend to make war on innocent blacks and start a race war. Do you know how many innocents of all ethnicities would be caught up in that? And how many might be killed?\"\n\n\"So stop it in its tracks. Get T-Square.\" said Sheriff Allgood. \"That averts a race war, and then we can go after the other agitators. Isn't that right, Commander Troy?\"\n\n\"No Sheriff, that is not right.\" I said. \"You know what happened in Apple Grove, Sheriff. You know because I told you. Wallace Bedford wants that to happen again, and all over the Nation.\"\n\n\"So why is this County being targeted?\" asked the Sheriff, who was growing red-faced with me having called him out.\n\n\"Because we have a big ol' University right here.\" I said. \"Because we have T-Square's Music Empire right here. Because BigPharmaCorp is right here. Not blaming them as a company, but some of their leadership are bad people. And it goes on from there.\"\n\n\"All right.\" said Allgood. \"Thank you for the report, Commander. I need to talk to Chief Moynahan, so if you'll stay, Chief, the rest of you can go.\" That was what we call a 'dismissal', and the rest of us left.\n\n\"Is it too early to go to the Cop Bar for double cheeseburgers?\" asked Muscone.\n\n\"Yes.\" I said. \"So come to my office at Headquarters, have some coffee, and let's talk.\"\n\n* * * * * * * * * * * * * * * *\n\nIn the superlative comfort (relatively speaking) of my office, Jack, Cindy, and I talked about what was going on.\n\n\"The Sheriff really wasn't wanting to hear about anything but taking down T-Square.\" said Jack Muscone. \"You think he really believes taking out T-Square solves everything?\"\n\n\"I don't know.\" I said. \"But we should be wary of his motives.\"\n\n\"Don,\" said Cindy, \"I've worked with you long enough to know that you held a hell of a lot back in that meeting. Do you trust present company enough to tell us?\"\n\n\"I dunno,\" I said, \"this guy keeps wanting to burn me at the stake.\" Jack and Cindy both chuckled at that. I then said \"Yes, I trust both of you. I'm debating whether or not to just tell you, or wait until the Chief gets back and include him in the discussion.\"\n\n\"I'm impatient.\" Cindy said, an accurately truthful statement if ever there was one. \"Tell us now, and then you can tell the Chief what you think he should know.\" I did not need to be told that Cindy's bug-killer was on.\n\n\"Okay.\" I said. \"Martha the M.E. has gotten wise and is testing for neurotoxic drugs nowadays. They found some breakdown products in Holden. Truth serums on steroids, is what they looked like to me. Martha buried the report in hoops of digital steel, i.e. she classified it, and I put a seal on top of that. Drugs like that are not common, and the Federal Government is the most likely culprit in their use.\"\n\n\"Unfortunately, you're right.\" Jack said.\n\n\"So that's why you said the Holden murder was getting above our heads,\" said Cindy, \"and why you think the Government's involved.\"\n\n\"Yes, exactly.\" I said. \"And I don't want it getting out about that. And I'm not telling the Sheriff about it.\"\n\n\"Why not?\" asked Cindy. \"You don't trust him?\"\n\nI opened my safe that was on the floor against the wall to the left side of my desk, under a thin wall cabinet that could be opened to reveal whiteboards. I took out a photograph and showed them.\n\n\"This was taken at the recent demonstration by Citizens for Police Accountability.\" I said. \"Recognize her?\"\n\n\"Heavy makeup, big glasses.\" said Muscone. I saw Cindy's eyes widen as she looked over Jack's shoulder. She looked up at me.\n\n\"Those moles...\" she said.\n\n\"Yep.\" I said. \"That's what I saw, too.\"\n\n\"I guess I don't get it.\" said Muscone. \"Did you do facial recognition on her?\"\n\n\"I don't have to.\" I said. \"I saw those moles and spots on her neck for eight years.\"\n\nJack gaped in astonishment. \"That's your ex-wife?\"\n\n\"And now the Sheriff's wife.\" I said. \"I don't know what her reasons for being there was, and she may have been undercover. But coupled with the Sheriff wanting to go exclusively after T-Square... I'm being choosy about who I talk to about this...\"\n\n* * * * * * * * * * * * * * * *\n\n11:30am, Monday, December 5th. I was called into the Chief's office, and he had me sit down.\n\n\"I just wanted you to know, Mr. Crowbar,\" said the Chief, \"that the Sheriff has given me instructions that taking down T-Square and putting him behind bars is this Police Force's first priority.\"\n\n\"For what crime, sir?\" I asked.\n\n\"Whatever we can find.\" said the Chief. \"I don't disagree that we could possibly find over time some connections to drug distribution, and put him in jail for that... for maybe two years at the most. But that does not matter to the Sheriff. He is going to be asking me, you, Ms. Ross, and even Lt. Masters for frequent reports on our progress in pursuing T-Square.\"\n\n\"Hoo boy.\" I said.\n\n\"It gets worse, Mr. Crowbar.\" Moynahan said. \"The Sheriff says that if he comes to believe that our priority is not T-Square, then he will have to insist that your status of a Consultant with the FBI be terminated, and that you not participate in the SBI Reserve program any lonngerrrr.\"\n\n\"Wow, he must really want me to become a full-time FBI Agent.\" I said. \"Or take over the SBI like the Governor wants me to do.\"\n\n\"I mentioned that, especially the first part about you leaving for the FBI.\" the Chief said. \"He seemed... unfazed by that.\"\n\n\"Well,\" I said, \"the agreement for me to be an FBI Consultant was approved by Chief Griswold, by you, and ratified by the Council itself, months ago. I'm not sure the Sheriff can unilaterally say that the contract is no longer in effect.\"\n\n\"Yes, we can get our legal eagles and fight it out.\" said the Chief. \"But the bottom line is that the Sheriff insists on taking down T-Square.\"\n\n\"What do you think of all this, Chief?\" I asked. I think Moynahan got the gist of what I was asking.\n\n\"I think...\" said the Chief, \"... that our Sheriff is a bit one-sided in his thinking. He studiously ignores the threat of the white supremacists, while concentrating on the perfidies of the militant blacks. And just so you know, Mr. Crowbarrrr... I am not, nor have I ever been, a man that could legitimately be called a racist. I have Cavalry officers and men that will testify to that, and I think you know the measure of me, as well.\"\n\n\"I do, sir.\" I said. \"I am not sure if calling the Sheriff a racist is fair, but I do know someone who is fully on the side of the whites.\" I showed him the photograph.\n\n\"Do we know this woman?\" asked the Chief.\n\n\"We sure do.\" I said. \"If she seriously wishes to deceive me, she needs to have those moles and spots removed from the back of her neck. Cindy recognized them, and I recognized them even more... because I was married to her for eight years.\"\n\nThe Chief looked up at me. \"You mean, this is...\" He paused, then said \"I was right behind her in the line at the Policeman's Ball. You're right, Don, I remember seeing that mole on the back of her neck!\"\n\n\"That's right, Chief.\" I said. \"Which is why I might not've mentioned everything going on.\" I told the Chief about Martha's findings, and the full story of the financings, and also about the threats to Cindy's father, Dr. Eckhart. The Chief was stunned.\n\n\"So... what do we do?\" he asked.\n\n\"Keep on keeping on.\" I said. \"We will make sure the Sheriff thinks we're working on T-Square... and we won't be lying; I need to know what he's up to with these other black celebrities and groups... and we will also be looking at Wallace Bedford and his groups. I'll be doing that more with the FBI, of course.\"\n\n\"And I thought it was bad when Westboro was alive and kicking.\" said the Chief.\n\n\"Oh, that was worse, Chief.\" I said. \"This is easy compared to him.\"\n\n\"I'm glad one of us thinks so.\" said the Chief. \"But even Westboro's machine did not have the reach of the United States Government...\"\n\nI had to admit that the Chief had a point, there...\n\nPart 13 - Epilogue \n\nAt 2:30pm that afternoon, I was again called into the Chief's office, this time with Cindy Ross in tow. I did not have my red crowbar, but observed that my partner did have the green crowbar as we went in. And when I saw who was there, I knew why.\n\nState DOJ Regional Director Harold Bennett was there, and also the Deputy Director of the FBI. And with them was SDOJ Agent Tasheeka Jones. My mood instantly darkened, and I think my face showed it.\n\n\"Commander,\" said Harold Benton, \"we'd like to clear the air on some misunderstandings.\"\n\n\"I think things are very clear, and there have been no misunderstandings.\" I said coldly. \"Your agent interfered with my murder investigation, harassed my Officers, misidentified herself, which is a crime, and has been told to stay out of this County. Where is the misunderstanding in that?\"\n\nBenton tried to explain: \"Agent Jones was sent there by me, in cooperation with the FBI. We were evaluating your Police procedures, which we found to be stellar, and also examining the psychology of your Officers.\"\n\n\"We do not need psychological evaluations, Mr. Bennett.\" I said, my voice icy. \"If we do, we have competent people to do that.\"\n\n\"Those evaluations were for my benefit, Commander.\" said the FBI DepDirector.\n\n\"My answer is the same, Mr. Director.\" I said.\n\n\"I needed to know about you and about Captain Ross, as my consultants.\" said the DepDirector. \"About your reactions to certain things. Sending Officer Davis to your Detective team was part of it. I'm pleased to say you have passed the tests, and my questions are answered.\"",
        "\"What questions are those, sir?\" asked Cindy.\n\n\"I'm not at liberty to say in this public situation.\" said the DepDirector.\n\n\"I'll tell you later, Kato.\" I said. \"It's pretty obvious... and pretty insulting.\"\n\n\"They're asking you to forgive the insult.\" said Chief Moynahan. \"Why don't we move past this.\"\n\n\"No hard feelings, Commander?\" said Tasheeka Jones, extending her hand. I just glared coldly at her, turned on my heel, and walked to the door.\n\n\"You're a racist, aren't you, Commander Troy?\" Jones yelled after me. I turned back.\n\n\"No, I'm not a racist.\" I said. \"YOU are the racist, and the race-baiter, just by asking that question, just by dropping the race card at the first opportunity. I'll stand on my race relations record, Agent Jones, and you can go fuck yourself.\" I turned and exited the room, slamming the door behind me.\n\n\"He is a racist.\" said Jones. \"And I will be making that statement in a formal report.\"\n\n\"The hell you will, bitch!\" Cindy snarled, coming up to Jones. She held up a framed photograph, which was of my daughter Tasha that had been sitting on my desk. \"See that baby girl in that picture? That's Commander Troy's daughter. His daughter! She's not exactly lily-white, is she, bitch?\"\n\nCindy pushed the rounded end of the green crowbar into Tasheeka Jones's chest. \"No, Donald Troy is not a racist. He is not a misogynist. He doesn't waste time on sexual orientation. He's the most honorable man I've ever known, and if you slander him I will shove this crowbar so far up your fat ass that you will never be able to sit down again. Now get out of this County, bitch, because if I ever see you again, you will be arrested... but you will never make it alive to jail.\"\n\n\"Are you threatening me?\" Jones started, and Cindy pushed the crowbar harder into the woman's chest.\n\n\"You damn straight I am.\" Cindy said.\n\n\"Ms. Ross...\" said Moynahan.\n\n\"Shut the fuck up!\" Cindy yelled at him. \"I'm tired of this shit. I'm tired of my cousin, who has damn near lost his life and his family's lives for this County, being treated like shit like this! And if some fucking bitch comes in here and calls him a racist, she can expect to get fucked up, bad. If you want my badge, Chief, you can fucking have it. But Agent Jones has crossed the line. And I will never forgive nor forget. As the Commander said, bitch: 'go fuck yourself'!\"\n\nWith that, Cindy exited the office. The slamming of the door was heard as far down the hall as the Duty Desk at the other end of the building.\n\n* * * * * * * * * * * * * * * *\n\nI had caught Cindy as she came into the hallway, and steered her into my office. We sat down together on my sofa and I told her to breathe as her father had taught us.\n\n\"I do appreciate you taking up for me.\" I said.\n\n\"Don, we don't need this.\" Cindy said. \"We do not need this shit. We do not have to be here, we do not have to stay here. We can join the FBI. We can go somewhere else.\"\n\n\"Calm down, my friend.\" I said. \"We are where we are supposed to be, and they know it.\"\n\nThere was a knock on the door, and the FBI Deputy Director opened it. \"Can I come in?\" he asked. I waved him in.\n\nHe took one of the hot chairs, sat on it, and faced us on the sofa. \"I can see that that was fucked up from the beginning. I apologize to you both for my role in it.\"\n\n\"Don, you were going to tell me what that role was?\" Cindy queried.\n\n\"Seeing what our reaction to Agent Jones would be.\" I said. \"Seeing if we reacted as white people to a black woman. Again... very insulting.\"\n\n\"I know, and again, I'm sorry about that.\" said the DepDirector. \"And I've learned what I wanted to know, especially about Captain Ross. I was impressed with the way you took up for Don, and so was your Chief... though telling him to shut up might require some contrition...\"\n\n\"You did that?\" I asked, grinning. \"Damn, you are my blood kin!\"\n\n\"And never prouder to be.\" Cindy said firmly. \"Okay, Mr. Director, you have your answers... and a couple of pissed off Consultants. I daresay a dinner on you is in order.\"\n\n\"She's good at negotiating for dinners.\" I said. \"Again, blood kin to me.\"\n\nThe DepDirector tried to laugh to ease the tension. \"Okay, that's fine. I'll call Jack Muscone and ask him to join us as well, if that's okay with you...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Come on in, Davis.\" said Precinct Captain Damien Thompson. With him in the office was Sergeant Carswell. Davis was bidden to be seated, and he did so.\n\n\"We got the Commander's report.\" said PCpt. Thompson. \"He spoke in some very glowing terms of you, and your potential to be a Detective.\"\n\n\"Thank you, sir.\" said Davis. \"And thank you for giving me the opportunity. It was really good.\"\n\n\"Good.\" said Thompson. \"So tell us, Davis... what about Commander Troy? What's he really like?\"\n\n\"He's straight up, sir.\" said Davis. \"He's no racist, but he's aware of the issues going on. Especially with T-Square. I think T-Square is afraid of him, and well he should be.\"\n\n\"Why is that?\" asked Sergeant Carswell.\n\n\"Sergeant,\" said Davis, \"that man, the Commander, his eyes just look through everything. Every time he looked at me, it felt like he was looking right into my head behind my eyes. He's seeing it all before we know what's there to be seen. He was all over this Holden murder, saw through what the perps were doing, and I got the idea he saw it from the beginning.\"\n\n\"So, you think we can trust him?\"\n\n\"I know I trust him, sir.\" said Davis. \"At least I know it won't pay off to not trust him.\"\n\n\"Okay good. You're dismissed.\" said PCpt. Thompson. \"And if we can ever get any Officers into the Detective Track, you'll be right there if you want to be.\"\n\n\"I do, sir. Thank you, sir.\" said Davis. He exited the room.\n\n\"Feel better?\" asked Carswell.\n\n\"Oh yeah,\" said Thompson, \"I never really doubted the Commander, and Davis just confirms that. But we'll see what happens when the balloon goes up. And that day is coming...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Darling,\" said Laura as I sat and petted Bowser and thought and thought and thought, \"you've been a million miles away ever since you got home.\"\n\n\"I know.\" I said. I finally decided. \"Honey, we need to talk.\"\n\nI moved to get up, and Bowser got the hint. He bounded off my lap and upstairs to where Carole was. I went over and sat next to Laura, first picking up a manila envelope.\n\n\"I need to show you this.\" I said.\n\n\"And it took hours of petting the dog to decide?\" Laura asked.\n\n\"Let's not joke about this one, honey.\" I said. \"It's serious.\" Laura immediately felt my vibe.\n\n\"Okay, what is it?\" she asked. I took the photo out of the envelope.\n\n\"This was taken by a Confidential Informant at the 'Citizens for Police Accountability' rally the other day.\n\n\"I don't see.... ohhhhhhh.\" Laura said. \"We don't need facial recognition to know who that is, do we?\"\n\n\"No, we do not.\" I said. \"I don't know if she was undercover, if she's working on something, and I don't want to step on any operational toes...\"\n\n\"I don't know of anything.\" said Laura. \"And we both know the story of what happened to her mother, and her rather strong feelings about blacks.\"\n\n\"Yes.\" I said. \"And from what you just said, I deduce that you know that there's a connection between this group, and white supremacists.\"\n\n\"Yes, the FBI's Deputy Director and some others in Washington also know.\" said Laura. \"They know about these groups, and what they're trying to do, and that there are cells in the CIA as well as people in the Department of Justice that think as my sister does and want these white supremacists to succeed.\"\n\n\"So...\" I said, \"what do we do about Melina, here? Is she involved in this?\"\n\n\"I honestly don't know.\" Laura said. \"I'm trying to wind down and retire. She's with another group completely, in counter-intelligence.\"\n\n\"Walker's old stomping grounds.\" I said.\n\n\"No, he was something different,\" Laura said, \"and as we found out, something worse. Melina was a 'wet boy', taking out enemies that had come to the United States, then moved into a higher position with another group. I'm not supposed to be telling you this, of course.\"\n\n\"Well, I'll understand if you don't.\" I said. \"But there's her picture, I have a murder victim in our morgue whose threads lead to these groups, and a Sheriff that is beginning to show a lack of clarity in his vision.\"\n\n\"I'll check up on it, and see what I can find out.\" Laura said. \"So... we're not going to solve that tonight. Shall we go to bed and solve my problem of my sexual desire for you?\"\n\n\"Well,\" I said, standing up and taking Laura's hand, \"how can I say 'no' to your desires to research those desires?\" Laura giggled, and we made our way upstairs to the master bedroom...\n\nFinis... for now. "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/knights-of-the-round-ch-03"
}