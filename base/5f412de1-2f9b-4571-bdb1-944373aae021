{
    "title": "Arcanum - Of Steamwork and Magic Ch. 06",
    "pages": [
        "IFS ZEPHYR MIRACLE! SURVIVORS TELLS ALL! \n\nHalf-Orc Walks Away from Fiery Death! \n\nGreetings, fellow Tarantians! It is I, Victor Wright, your faithful and vigilant editor, bringing you an exclusive story that only a paper of this breadth and quality could possibly do! Just yesterday, our humble offices were visited by none other than the sole survivor of the IFS Zephyr blimp tragedy (please see photograph, pg 2), and he deigned to share his account of the final minutes of that fateful voyage with me, which I now share with you! Be warned! This story is not for the faint of heart! 'Tis a tale so real and frightening, that I recommend it only to those with the most iron-like will and constitutions! \n\nUpon questioning, the gentleman -- one Rayburn Cog, a half-orc who has conspired through great diligence and effort to attain a nearly human-like grace and intellect despite his base and polluted roots -- had this to say about his harrowing experience: \"Well, me hear big boom! It shake whole flying-ship-boat! Me much scare! Me no see nothing! No nothing outside! No nothing in cabin! I hear sound! Rat tat tat tat tat! Very scary! It sound like gunz! Me go and hide and me hear vrrrroom! Noise! Like big engine! But there are two! They small! Very scary!\" \n\nAs impossible as it sounds, it seems the Zephyr had been attacked by some other sort of flying craft! Upon landing, our hapless half-orc stumbled upon frightful evidence that the flying craft that had attacked them had been piloted by villainous Half-Ogres bearing strange symbols and marks. \"Me find crash machine! It on fire, but me find medallion! Me then get attack many time as me head to home in Tarant, best city in world for orcs for me find work here! But me sad. No other nice people on blimp alive. Very sad.\" \n\nSo, dear friends of the city! What are we to make of this? What were these strange craft and these mysterious assassins? Why did they attack such a noble craft as the Zephyr? Flying bandits? Or something even more dark and insidious? Are we not safe even in our fair skies? We at the Tarantian urge you to contact your Senators and Representatives in the Industrial council and urge them to be Ever Watchful of the Enemies beyond the boarders of our marvelous city and our stupendous kingdom! For if these strange assassins and their flying machines ever come around here I, Victor Wright, am positive that we will give them a stiff Tarantian hello with our fists and our righteous anger! \n\nAs for our hapless, benighted half-orc? What will happen for Mr. Cog? Well, I suggest he find work in one of our many factories, where his kind can attain some service to their betters! \n\nI closed the paper and pursed my lips. Virginia and Sally were both craning over my shoulders to read, while 'Magnus' was leaning around my side, taking what advantage of her smaller stature that she could. I casually folded the paper up, then walked over to the nearest rubbish bin that had not been vandalized by some ruffians -- as we were still in the poorer end of Tarant's warehouse district. I had spent the evening and morning with Esmeralda and emerged to find that my companions had made themselves as comfortable as they could within her home. Some awkward conversation over breakfast had led to us setting out with the sun still only barely peeking over the edges of the narrow roofs that dominated the Tarantian warehouse district. \n\nAnd now we had seen what my interview with the Tarantian had wrought. \n\n\"Well, uh... \"Virginia rubbed her shoulder. \"At least he wasn't calling for war with Arland?\" \n\n\"Quite right, old girl,\" I said, adjusting my tie to ensure it laid properly against my neck. \n\nThen I promptly vandalized the rubbish bin. \n\nOnce I was finished, I stepped away from the dented metal bin, adjusted the collar of my suit jacket, brushed dust from my shoulders, sighed, and said: \"Come. We have an address to investigate.\" \n\nSaid address being provided by a spiritual medium left me feeling somewhat uncertain, even if Esmeralda clearly had some kind of precognitive powers and magickal ability. And so, I made sure to hand my revolver to 'Magnus' while my own hands gripped by trusty repeating rifle as we came to the address provided: 57 Mulligan Bone Avenue. This entire street was nearly empty, with only a few mangy dogs laying about near the porch of an apartment building that was only occupied by the rats. It seemed the women of this neighborhood had gone off to work as servants, while the men were going to work in factories. The actual building numbered 57 was the smallest on the street -- a squat house that looked as if it was planned to be renovated into another apartment soon. \n\n\"Lets try talking,\" I said to my friends, then opened the door to find that the interior of the building was sparse and barren, save for a single large crate, and a single large half-ogre leaning against said crate, glaring about himself sullenly. I lifted my hand. \"Ho, good ogre,\" I said, smiling slightly. \"I don't suppose you know anything about a paint-\" \n\nThe half-ogre, it seemed, knew quite a lot about a painting, for he immediately picked a cudgel from the ground and sprinted towards me. 'Magnus' and I laid down a remarkable amount of shot in the next three or so seconds. Most of them struck the half-ogre square in the chest, but it was the last fired by 'Magnus' up through the half-ogre's jaw and into their brain. The bullet didn't quite manage to blow through the skull, and so instead, it ricocheted around inside of the head. The end result was that the half-ogre hit the ground and skidded forward to come to a rest near my boots. \n\n\"Nice shot, Magnus,\" I said, grinning slightly at the young dwarfess. She looked a bit shocked herself. \n\n\"Well...yes,\" she said, twirling the revolver on her finger, then offering it to me. I holstered it, strode forward, then swept back the front of the crate to reveal the stolen painting. 'Magnus', Sally, Virginia and I all stood before the painting, taking a moment to admire it. Though admire might not quite be the right term. The image of the painting was that of a red robed figure striding across what at first appeared to be a silvery river. But the water was not in fact water. Nor was it metal. IT was interlocking, ghostly figures. They flowed together in some places, but they were clearly humanoid. They looked up beseechingly while the red robed figure strode forward. His face was concealed by a dark hood, and the painter had added a trick that made the hood seem deeper and darker than it could have been. It should have looked amateurish, like an artist trying to avoid needing to paint facial features. Instead, the effect was quite unsettling. \n\nThis figure was walking towards a silvery elven woman, who was dressed in a diaphanous gown that rippled in an unseen, possibly magick wind. Her face was turned aside, and a veil of black satin was draped over her eyes. She stood on the far side of the river of spectral forms and looked as if she was turning away from the red robed figure. In disgust? In horror? No. The painter had cast her features with the tormented expression of one suffering the greatest heartbreak. \n\nWe stood, looking at the painting. In the dimness of 57 Mulligan Bone Avenue, with the gunsmoke still in the air, mixing with the stink of freshly spilled blood, the painting took on an even more dark and ominous air. Sally broke the sound with a lugubrious snort followed by her plugging one nostril and blowing the other out on the floor. \n\n\"So, which -- hic- iz Kerghan?\" Sally asked. \"And which is, uh, Persephone?\" \n\n\"Well, as Persephone is a feminine name,\" I said. \"I would wager that she's not the one in the red robes.\" \n\n\"She could- hic -- be!\" Sally said, then thumped her thick, gray knuckles on her own expansive chest. \"I got a boy's name!\" \n\n\"Sally?\" Virginia asked. And with that, the eerie, somber mood of the portrait was shattered. \n\nThe Garringsburg residence was a fine mansion located rather near to an even finer mansion at the end of the road. Rapping on their front door while Sally held the painting underneath her arm, I glanced at Virginia, who smiled at me slightly. She seemed to be fairly confident in me. I sighed, then adjusted my shirt, then looked back at the door. The door opened and a maidservant opened it. She blinked, seeing two rather well dressed strangers on the front porch. I smiled at her and said: \"Hello. May you tell Mrs. Garringsburg that we have retrieved her painting?\" I grinned a bit wider. \"Tell her it was found by one Rayburn Cog.\" \n\n*** \n\n\"What a smashing story!\" Mrs Garringsburg said, beaming at me as she sipped from her tea cup, pinkie outstretched. \"Bandits, fortune tellers, constables, mistaken identities, oh, what a lark!\" She let out a little chortle. \"And you're the on front page of the Tarantian, meaning this is merely a minor to do for an adventurer like you. And, might I say, you're so much more...more...\" She waved her hand, then realized she had no polite way to finish the sentence, and so decided to rally by plucking some cheese and crackers from the small silvery tray that her maidservant had brought. Said maidservant somehow managed to brush against me every time she needed to bustle about the room. Sometimes, it would be her arm. Other times, the sleekness of her hip. When she could, it would be her breasts, pressing firmly to my shoulder. \n\nI smiled. \"You can say eloquent, Mrs. Garringsburg-\" \n\n\"Oh, please!\" the luminously redheaded woman said, putting her hand on her own ample bosom -- which itself was contained with a lacy purple dress with whalebone corset. \"Call me Judith!\" \n\n\"Well, Judith,\" I said, trying to not let my eyes roam. But Judith had taken the half hour between us knocking on her door to us being invited to her sitting room to dress to impress. She had applied some light rouge to her cheeks, a warm red lipstick to her mouth, and slight eyeliner to her eyes. Primping had given her hair had turned what were already vibrantly red locks into a cascade of crimson delight that spilled along pale shoulders, shown by a dangerously well cut dress. Still, I endeavored to keep my eyes on her green ones, and so saw them glitter with delight as I continued on: \"But the newspaper did not exactly prepare you for the true character of my company.\" \n\n\"Well said, very well said indeed!\" Judith said, nodding as she sipped her tea. \"Now, tell me more about this awful incident with Madame Beston, I always said that she was a fraud, absolutely guaranteed it, why she took five guesses to even come to the conclusion that my dear departed grandmother was named Penelope, quite an atrocious showing.\" \n\nI chuckled. \"It was a grisly affair. I, honestly, would have preferred to not get mixed up in the competition of two fortune tellers. But I can say that Madame Beston thought I would behave rather the same way that Mister Wright believes I should...\" I grinned. \"Like a bandit. Not like a gentlemen.\" \n\n\"Mm...\" Judith said, her eyes flicking down from my eyes across my body, then up again. \"But I believe you still have...a bit of banditry in your blood. Enough to put paid to the ruffians who stole my painting. Correct?\" \n\nI shrugged. \"Well. The final blow was struck by my good companion Magnus here-\" \n\n\"Quite right,\" Judith said, distractedly. \"Uh, say, Mr. Cog, uh, would you perchance be able to carry that heavy painting to my boudoir? That's where we hung it when, uh...Mr. Garringsburg bought it.\" She coughed, politely. \"I would, but Maria here is the only servant home at the time and she cannot carry a whole painting, not one that size...\" \n\n\"I can try, my lady!\" Maria said, taking this chance to brush against me again. \n\n\"Uh-\" Sally said. \n\n\"No, Mr. Cog must see to it, and I can direct him exactly where to put it!\" Judith declared, standing up and setting the tea cup down. She beamed at me. Or maybe I should say, she bared her teeth. Rather like a hungry wolf. I glanced at Sally, who was looking down at her muscular forearms. Then she looked at me and give me a huge grin, wink, and thumbs up. \n\nOh Sally. At least Virginia and 'Magnus' were doing their best to look abashed and ignorant. \n\nMrs. Garringsburg led me up the stairs to her room, giving on a running narration, as if she was too nervous to allow a moment to go by in silence. I, in all honesty, only heard every other sentence. While the painting was not heavy, exactly, it was large and unwieldy, requiring two arms and a great deal of concentration to keep it from banging into the stairwell, or knocking other paintings off the walls, or gouging the frame. I caught only that Mr Garringsburg was so very busy with his new factory, and how she had taken a tour once and- \n\n\"Oh, those poor wretches barely had shirts, it near broke my heart,\" she said, sighing. \"Their green backs were entirely bare as they worked the machines...\" She trailed off and then shook herself, then opened the door to her bedroom. The placement of the painting I could have managed without her guidance -- it was the large, blank spot on the wall with the mountings for a painting to be hung from. Despite this, Judith gave me quite a few directions on where exactly to place it and I, grunting, followed them. Once the painting was settled, I stepped back. Within its proper home, the painting merely looked tacky. \n\n\"It's quite a marvelous work,\" I lied. \n\nThe faint click of the latch behind me made me turn. Judith Garringsburg stood there, her hand on her throat. Her voice was soft. \"Mr. Cog, it is positively dreadful, and you know that as well as I,\" she murmured. \n\nI nodded, slightly. \n\n\"My husband bought it to prove how much gold he could spend on a positively dreadful thing...\" she started to walk forward. \"My husband, Mr. Cog, is a gnome. Did you know that?\" \n\nI shook my head, mutely. \n\n\"Do you know what it is like being the housewife of a gnome?\" her voice was softer still. \"A gnome who works and works and works at that damn factory every day of his life?\" She reached out, her finger touching the tie around my neck. \"You say you are a gentleman and not a bandit, Mr. Cog...\" Her voice grew softer. \"But maybe...do you have enough bandit in you to...\" She paused, then whispered something so soft that even my sharp orcish hearing could hear it. My heart was going quite quickly and my breath had caught -- while I had known where she was guiding me, it was always an exciting moment... \n\n\"To what, Mrs Garringsburg?\" I murmured. My finger tucked under her chin, then lifted it. \n\n\"To...\" She gulped. \"Ravage me.\" \n\nI smirked, slightly. \n\n\"To take me...\" her voice became quieter. Her eyes were lidded. Her mouth formed the words more easily every second as she leaned in. Her nose flared, inhaling my scent between each purred sentence fragment. \"To claim me, to rip my clothes asunder, to fuck me. To plow my naughty human cunny with your big fat green dick and paint my womb with your cum, gods, I need your cock right now.\" Her palm clutched between my legs and my own hands cupped her ass, drawing her closer as I cut off the torrent of increasingly foul dirty talk with my tongue. My hands started to work along the back of her dress, undoing button after button after button, tugging upon strings, pulling apart corsets -- hearing the creak of fabric and the clatter of bone. And then as I stepped back and left Judith panting and mewling for more, her clothing simply dropped around her shoulders. She shimmied her hips from side to side, working herself free of her dress and then stepping over to the bed. \n\nThere she sat and there I marveled at her. She was youthful and perky, but her breasts were easily the largest that I had seen on a human woman. They were full and round and sagged ever so fetchingly. Her nipples were hard little nubs, thrusting out against her pale skin, while her thighs were already spread, showing her thick puff of crimson red pubic hair. She was clearly not simply dying her hair, then. I grinned and leaned forward, catching her mouth, kissing her fiercely as her hands fumbled at the buttons of my shirt. She drove my shirt off my body with a restrained need that I found quite charming -- taking care not to rip the fabric, but nearly ending up popping the buttons off anyway. My shirt ended up on the floor and the young Mrs. Garringsburg ended up with her cheek pressed to my abdominal muscles, cooing quietly. \n\n\"So very strong,\" she whispered, reaching slowly up to circle one of my dark, emerald green nipples with her fingers. I grinned, then stroked my mustache with one hand. \n\n\"More than just strong, Mrs. Garringsburg,\" I said, my hand dipping to my belt. It slithered from the loops on my pants and Judith smiled faintly. Then her smile vanished as my pants and her jaw dropped at a nearly simultaneous beat. Her hand shook as she gingerly reached out, placing her palm on the base of my cock, her eyes going slightly unfocused as she whispered under her breath something along the lines of 'great gods' as her fingers barely managed to encircle my thick shaft. Her mouth closed with a soft plop noise and she shook her head to try and clear it, even as her hand lifted my cock upwards, so that her eyes could drink in my length. \n\n\"You're going to fucking wreck my cunt with this,\" she whispered, her voice growing husky. Her decorum had slipped before, but now she was stripping it as rapidly as her dress. \"Mm, you're gonna shove this big fat green dick into my human cunny and paint my womb with your fertile orcish cum, aren't you?\" Her voice became a croon, her eyes growing lidded as she started to pump my shaft with her hand -- adding a second to fully encircle my cock. My member had already been hard, but hearing such a cultured, refined accent say such filthy words made my heart race as if I was on the battlefield. \n\n\"Yes,\" I rumbled. \n\n\"You wanna knock this silly little human bitch up and leave her with a green baby to show to her limp dicked little shit of a husband, yeah, you're a bad orc, aren't you...\" Judith leaned forward, sucking on the very tip of my cock. Her tongue slowly encircled it, teasing the fold of my foreskin, tasting the precum that dripped liberally from my tip. Her eyes closed and she made a muffled moan, almost gagging on the tip of my cock alone as she pushed her mouth forward. She drew back, her lipstick having smeared and spittle connecting her dick-sucking lips to my member. \"Look at me drooling over this subhuman dick...I'm such a fucking slut for green cock, doesn't it disgust you?\" Her voice was breathy. \n\nIf Judith Garringsburg wanted degradation...well... \n\nAfter that newspaper article, I could stand degrading a human today. \n\nI grabbed the back of her head and forced her nose against the joining of my shaft and my balls. Her nose flared and she inhaled my scent as if I was a line of snuff. Her hands went from my cock to my balls, squeezing and fondling them in her palm as she mewled and whimpered and kissed at the folds of my scrotum. I growled. \"You love worshiping my fertile balls, don't you? Kiss what's going to knock your silly ass up...\" I grinned down at her as she opened her mouth, gingerly sucking one of my balls into her mouth. Her eyes closed and she shuddered, her pendulous breasts swaying as I saw her back arch, as if she was in the throws of orgasm. I squeezed her hair tighter, grinning. \"Take both in that whore mouth of yours.\" \n\nShe opened her mouth wider, and managed to take my entire sack into her mouth, mewling as her tongue slurped and slipped around my balls. I nearly came right then and there -- less from the physical sensation and more from the delirious sense of power as this married, wealthy human woman sucked on my balls. I pushed her head back and she made the most adorable little gasping noise as I forced her head away. Her mouth hung open and she looked nearly drugged as I put my cocktip to her mouth. Her mouth already hung open, and I slammed down her throat with brutal disregard. Simultaneous noises reached my ears -- the faint patter of her juices spurting against the bed as she showed her approval in the most base way, and the loud sound of her gagging on my cock. Her palms slapped to my thighs, and I looked down to see her eyes slowly closing as she looked up at me, a mixture of abject bliss and pleading desire in those eyes. I shuddered, then drew back, allowing her to gasp in air through her nose...and then plunged forward again. Her nose flared and I could feel the tightening of suction around my cock as her throat worked, trying desperately to breathe around me. ",
        "I kept her at this -- varying the length of time between breath, noting how it drove her more and more wild, her thighs spreading, her hands pressing down to the bed, as if she was assuming a more and more animalistic position as I choked her, then let her breathe, then choked her. It was impossible to hold back. I thrust deep into her throat once more and felt my balls clench as my own pleasure boiled over. Thick, hot strands of my half-orcish cum spurted down her throat, filling her belly. But as I came, I drew out with a low, eager groan. Her nose flared, and then my cum was filling her mouth, then splashing her face. Messy spurts coated her sweat soaked, drool splattered face, her makeup smearing and mixing with my cum. Another spurt struck her chin, and started to drip onto her full breasts. \n\nShe swallowed, then opened her mouth, drawing in ragged gasps and pants, her eyes closed as her messy face looked up at me. Judith Garringsburg, in a single short blowjob, had been transformed into a messy back-alley whore, waiting for her next load of cum. \n\n\"A proper place for a human bitch,\" I growled. \n\nI dragged her from the bed, grabbing her arm and hauling her down to the carpet. It was still soft, but a bed felt far too civilized for the blazing passions within me. I was still hard enough to hammer down steel nails, and Judith was soaked and ready for me. But as I loomed over her, pushing her face into the carpet, the only noises she could make were little mewling whimpers. It was as if I had completely broken her, turning her into more of an animal than the most bestial of orc. Her thighs spread with a wanton desperation, and the soft fluff of her red pubic hair glistened with her moisture, some droplets beading on her public hair. I pressed my cock to her married cunt and claimed her with a single room shaking thrust. Her whole body rocked as her full breasts mashed against the ground, her spine arching like a cat's as she accepted my cock. Her cunny was so fucking tight that it nearly squeezed me out on her first ripping orgasm. She screamed, you see. Screamed to the high heavens, her fingernails digging into the carpet and her knuckles turning white as she threw her head back. \n\nAnd here? \n\nHere Judith Garringsburg, trophy wife of Mr. Garringsburg, found her voice once more. \n\n\"Fuck me! Fuck, unhh, my worthless human cunt with, unnh your green dick, unnhh, yes! Knock my unnh slutty uhh! ass up ahh! screw me, ruin me!\" She moaned. \"Make me your bitch for all time, Rayburn ahh please! Gods yes!\" \n\nEach word was gasped out between my titanic thrusts. The loud plap plap plap sounds of my cock plunging into sex, the sound of my balls slapping her belly, the sound of her own juices dripping onto the floor, all of it mixed with her torrential stream of desperate profanity. Her eyes were closed and her face was twisted into a mask of pleasure as my hands dug into the soft folds of her thighs. The feeling that burned through me was like a flash fire, though. It was so rapid, so all consuming, so hot that it was actually burning up the fuel needed to maintain it. My own orcish endurance was being stretched to the limit by Judith's cunny -- squeezing and slurping and tightening on me like the world's most silky vice, ever other thrust it seemed. She was cumming and cumming and cumming, her voice growing hoarse as she screamed out her pleas. \n\nEven an orc couldn't keep going as long as he wished in such a situation. \n\nAnd so, a shockingly short time later, I was slamming into her one last time, my hands planted on her shoulders to keep her pinned to the ground, and I roared out my own wordless bliss. My balls clenched and I felt my cock erupt with thick stands of hot, orcish cum. My balls twitched several times as I emptied myself, filling her womb with spurt after spurt of my seed. I could feel it forcing its way past her cervix, feel it pooling inside of it. I swore I could feel my sperm eagerly seeking her eggs as she shuddered and twitched beneath me. Then, as if I were a puppet with its strings collapsed, I nearly collapsed atop her, panting and gasping. \n\nBut... \n\nI was a gentleman. In the end. \n\nEven if I was occasionally a roguish one. \n\nAnd so, rather than simply laying across Mrs. Garringsburg's back, I contrived to fall to the side while tugging her atop me. It took immense effort and focus, considering the state of my limbs as well cooked spaghetti noodles, but in the end, she was laid atop me, not I atop her, and this seemed to suit her quite well. She sprawled against me, her eyes closed, her breath coming in lazy, languid gasps. Her fingers stroked my chest, teasing some of the few hairs that sported there. I smiled as I looked at the baroquely overdecorated ceiling of her boudoir, and simply drank in oxygen and silence as she nuzzled against me. \n\n\"I...\" Judith started, her voice hesitant. \"I didn't...I've never...\" \n\nI caressed her hair, gently. \"Shh,\" I rumbled. \"I'm an outlander half-orc, Judith. I'm never coming back...\" I smiled at her. \"And I've lived long enough and seen enough wealthy men to know that they always have a mistress here and there.\" \n\n\"Well, of course he has a mistress!\" Judith said. \"B-But he's a man.\" \n\nI grinned at her. \"I think a woman should have just as much a right to sleeping around as a man. Which, I believe, makes me the most slack-handed, poorly argued, self centered egalitarian the world has ever seen.\" \n\nJudith slapped at my chest with one palm. Then, frowning. \"Egalitarian? They're those biddies who are always up in arms about something silly, right?\" \n\n\"The vote, usually,\" I said, dryly. \n\nJudith was silent for a time. \"The vote...I wouldn't know what to do with the vote.\" My hand slid along her back, squeezing her rump as I chuckled slightly. \n\n\"You don't?\" I asked. \"Well, you might be too young to remember the war with Dernholm, but your mother must have told you about it, right?\" \n\nJudith nodded, slightly. \"Yeah...\" She reached out and managed to snag a handkerchief with one hand. She used it to gently wipe away the smeared semen and makeup and spittle that still dripped on her face. AS she wiped it away, she said. \"Two of my uncles never came back from that war.\" She frowned. \"I see your point, though...if I could vote, I could vote against such silly things...\" She sat up, drawing her legs under her. \"And maybe we could do something about this epidemic of drinking. You know, my husband sometimes comes home so tipsy that he urinates on-\" She drew herself up short, but I sat up as well, grinning at her. \n\n\"No, no, voting on such things is how you can effect change in the world,\" I said, nodding. \"Change comes from three places, my dear. The first and least dependable is the will of the majority, for change nearly always threatens those in power and the powerful have ways of slanting thought one way or the other.\" I shrugged. \"The second is from the ballot box. If one can finagle a new law requiring that one, say, treat women a certain way...well, then perforce society must change. How long ago was it that dueling was common in Tarant? Well, now, there are laws against it, and a mere generation later, and dueling is nearly unheard of.\" I nodded. \"The third method, of course, grows from the barrel of a gun.\" \n\nJudith blinked at me. Then, smiling, she reached up with her thumb and rubbed it against my forehead. \"No green paint,\" she said, her voice sly. \n\nI scoffed. \"Judith Garringsburg!\" \n\nShe laughed, then leaned in and kissed me. The kiss was as tender as our earlier fucking had been brutal. Her tongue darted into my mouth gingerly, and before I knew it, her hands were cupping my cheeks as she slung her leg over mine. She ground against me and her tongue darted home, pressing to mine. I found myself rising, despite myself, to the ocassion. She pressed back, her ass-cheeks clinging to my cock as she rolled her hips in slow circles. Without breaking the kiss, I reached down, lifting her up with my palms. She spread her legs with a wanton willingness, and before either of us knew it, I was once more gently churning her pussy with my shaft. But this time, we were going slowly and gently. I laid back and let her control the pace, lifting and dropping her hips while her palms pressed to my muscular chest. Her ruby red hair dangled about her face in a messy cascade of curls and she drew slow breath as she looked into my face. \n\n\"I, ah,\" she murmured. \"I had no idea...ah...a man could be so...\" She closed her eyes, shuddering slightly. \"Big and bestial...and yet so...intelligent...\" She leaned forward, kissing me hungrily on the mouth. My hips started to drive up into her and I spent a good long time watching the delightful show of this well curved woman bouncing on my lap. Every movement she made set her breasts to jiggling in the most delightful way, while her face had a unique beauty that became more and more apparent the more and more pleasure coursed through her body. Her fingers caressed along my chest. \n\n\"Ray! Yes! Yes! Ray!\" She moaned, her voice filling with joy as her hips rose and fell, her ass jiggling with each drop. Her eyes closed and her back arched again. Her sex clenched upon me and I lazily let myself climax once more. My eyes closed and I felt my cum dripping around my cock, frothing out of her pussy and puddling along the floor. Slowly, Mrs. Garringsburg collapsed against my chest, her breasts pressing to me. I squeezed her to me, then kissed her again. She moaned into my mouth. \n\nSlowly, she drew back and a single strand of saliva connected our lips together, gleaming in the sunlight that streamed through the windows. \n\n\"How can I ever thank you for this?\" her voice was very soft. \"For this one moment of joy?\" \n\nI caressed the back of her head. Slowly, I smiled...but despite the fact that this was always going to be part of the plan, I felt a faint twinge of guilt. But I quickly reminded myself to at least take cheer in one thing. It was quite possible that I'd see Mrs. Garringsburg again -- if I once more visited Tarant. It was not impossible. \n\nAnd so, I smiled at her. \"Wellllll...\" I caressed my hand through her hair. \"Do you happen to know one...Mr. Bates?\" \n\n*** \n\nWith us firmly ensconced within the kitchen while Mrs. Garringsburg -- dressed and showered using that delightful indoor plumbing that seemed all the vogue in Tarant -- and her maidservant headed out to speak to Mr. Bates, it came time to try out my little napkin recipe. Sally, 'Magnus' and Virginia all stood a safe distance away while I laid out my tools and my supplies. The first was a set of batteries and capacitors and the second was a single coppery ring. I worked some cabling around it, speaking as I did so: \"It is well known that an electrical current can bring a seeming vitality to the dead. Uh, one Mr. Brightberry, a halfling technologist, has been known to successfully reanimate frog legs with his electrical currents. Similar electrical phenomenon have been seen to cause spontaneous movement in the living.\" I smiled. \"The theories behind this device I am planning to construct, called a Charged Ring, is that via the use of two rings and a capacitor, I will be able to run an electrical current through my body, and thus, enhance my reflexes and speed.\" \n\nThere was a long moment of silence. \n\n\"That sounds dangerous,\" Virginia said. \n\n\"Virginia, old girl, you regularly call upon unnatural powers to restore vitality to the recently injured,\" I said, my voice dry as I started to work upon my ring, holding it up so my eyes might have a better grasp of what my fingers were doing. \"I'm not sure that you have a place to determine what is or is not dangerous.\" \n\nVirginia sniffed, then crossed her arms over her chest. \"Well, it is my duty as a member of the Panarii, to keep you safe. That includes lightning bolts!\" \n\n\"A lightning bolt has nearly a billion jouls of energy,\" I said while I threaded cable and then carefully began to attach the capacitor. \"This alkaline electrolyte capacitor can barely contain-\" \n\nI blinked, my ears rung, and my mustaches smoked. Several of my companions were leaning close over me and I slowly shifted from side to side on the ground. I became slowly aware that my heart was hammering and my fingers stung. What was more remarkable was the amount of shattered glass and crockery around my shoulders. I sat myself up, helped somewhat by Virginia and Sally. \n\n\"What hit me?\" I asked. \n\n\"Nothing!\" Virginia said, sounding alarmed. \"You just touched the ring and...\" She scowled. \"Nearly a billion jouls of energy, you said!\" \n\nI beamed. \"This is quite remarkable!\" \n\nVirginia looked less than amused. \n\nThe next few hours were spent in some safer experimentation, using some makeshift insulators. The end result was quite invigorating, once I ensured that the current would not discharge entirely through my body in a single instant. Instead, the rings ran a continual current through my body, invigorating me and enhancing my speed and reflexes. I demonstrated this with several juggling acts, drawing my pistol, aiming down the sights, even showing how swiftly I could reload, or evade slowish attacks flung by our doughy half-ogress. In the end, even Virginia unbent enough to admit that she was relatively impressed. \n\n\"Though,\" she said. \"I still expect it to electrocute you at some point. And not in a good way.\" \n\nFortunately, this was about when Mrs. Garringsburg returned with the word that she had informed Mr. Bates of our intention to see him, and that he had given permission for us to visit. And so, we set out. Me in my freshly pressed shirt (thank you, Maria) and the rest in their servant or guardian getup. Not that Virginia's dressing as a body-guard was all that far off from what she was in truth. Still, as we headed down the road, she grew more and more nervous as she looked about herself at the larger, more fancy houses and mansions. \n\nAt the end of the road, though, we came to a mansion that rivaled them all for sheer size and opulence. It had three wings and several stories, with at least four chimney stacks belching smoke into the air from the boilers that had to heat the place and provide the electrical power that served the various technological experimentations that must be taking place within the home of the foremost inventor of Arcanum. The guards by the front gate -- dressed in a way rather similar to Virginia all things considered -- looked at me and Sally with some disdain, but they let the gates swing inwards and allowed us entry to the grounds themselves. \n\nPast the gardens, to the front doors of the mansion, to the stairs within, and finally to the smoking room of Gilbert Bates himself. The room was easier to describe by far: Red carpeting and a large replica of Van Sant's To Charge Upon A Dragon dominated, with the painting being set above a fireplace and between two curved bookshelves covered with textbooks on history, natural philosophy, and the like. There were several smaller tables that held books that had been read part-way-through and left for later, and betwixt those tables were large, comfortable looking chairs. Seated upon one of these chairs was Mr. Gilbert Bates himself. \n\nHow to describe Mr. Bates? \n\nThe first thing that struck me was the fierceness of his eyes. Even in his eighties, his eyes remained hard and pitiless and focused, like that of a man who would not let a single thing slow him down. He went clean shaven, leaving his wrinkled, drooping face entirely exposed, and he preferred not to wear a hat nor wig, allowing the balding pate and liver spots that flecked his brow to be shown to the whole world. What hair he had left was become completely white, and was clipped short. His lips were thin and narrow. He, in a word, looked every part the caricature of the greedy capitalist. But there were fine details that added shading here and there...detail that came through in the person. \n\nIt was the set to his lips, the faint crinkle at the corner of his eyes, the way his skeletal thin hands rested in his silk clad lap. He looked sadder than any man I had ever seen, with those small motions and those small details. \n\n\"Mr. Bates,\" I said, my voice soft. \n\n\"What sort of ruse is this?\" Mr. Bates asked, his voice a tight growl. \"I was informed that the man from the papers, the one who rescued Mr. Garringsburg's painting, was coming to-\" His eyes widened fractionally. \"Wait. That headline...\" He reached out with one skeletal hand, picking up the newspaper that bore the headline of IFS ZEPHYR MIRACLE! SURVIVORS TELLS ALL! and thrust it at me like it was a weapon. \"You Rayburn Cog?\" \n\nI smiled. \"That I am, Mr. Bates. And I have traveled nearly half of Arcanum and through innumerable dangers and back-tracking and mysteries and the like, all of it to bring this to you.\" I held out my hand and sitting upon my green palm was the silvery ring that had brought me this far. \n\nMr. Bates slowly dropped the newspaper to the table. Then his finger thrust out towards me. It shook, subtly, but it shook. \"Great gods, how did you get that ring?\" \n\n\"I was given it by a gnome as he lay dying, after the crash of-\" \n\nMr. Bates stood. And suddenly, I became aware that he had a guardian. Standing so still as to be nearly unnoticed, even by me, was an immense, heavily muscled half-ogre, who stepped forward slightly with the movement of his master. But Mr. Bates did not need any additional assistance, and he spoke forcefully: \"A gnome? What manner of tomfoolery is this? Are you certain, boy, that it was not a dwarf?\" \n\nI blinked, then glanced at 'Magnus', who looked as quizzical as I did. \n\n\"No?\" I said. \"Not unless he was a dwarf without a beard and skinny as a rail...\" I sighed. \"He said only to find the boy, to give the boy the ring.\" \n\nMr. Bates put his hand to his chin. He walked hurriedly -- as hurriedly as a man of his age could, at least -- towards the liquor cabinet and pulled forth a bottle, which he then poured into a small glass. He took the drink to settle his nerves. \"Tell me this, and tell it to me now,\" he said, his voice rough. Ragged. \"Did this gnome have a scar above his left eye?\" \n\nI thought back. In the aftermath of the crash, there had been smoke and there had been distraction aplenty, but now that I considered it deeply, I was fairly certain that the 'gnome' had definitely had a small notched scar above his left eye. I nodded, slowly. \"Yes, he did,\" I said. \n\nMr. Bates closed his eyes. \"By Alberich...\" he whispered. Then, loudly. \"By Alberich!\" He turned to face me. \"I know it in my heart, boy. That was no gnome. That...\" He shook his head. \"That was Stennar Rock Cutter.\" \n\nMy hand went to my cheek, instinctively. \"But his beard-\" \n\n\"Yes, I know!\" Mr. Bates said. \"A dwarf would rather die than shave their beard. It's madness. But, please, tell me, what did he say before he died, tell me everything.\" \n\nI nodded, then took a seat. I had a feeling that this would be a long conversation -- and soon, my companions had taken their seats as well. It said much of Mr. Bate's agitation that he didn't even note that Sally had taken a seat as well, despite being a half-ogress servant. I told him exactly what Stennar had told me: Of how I had to 'find the boy', and how Stennar had escaped some great evil. Slowly, Mr. Bates frowned and stroked his narrow chin. \n\n\"I know that dwarves see time differently than humans,\" he said, quietly. \"He must have realized that, by now, I was an old man.\" He looked at his hand, his wrinkled skin, his thin fingers. He sighed ever so slightly. \"Perhaps...\" He paused. \"Perhaps it was because I was but a boy...when I betrayed him. When I betrayed all of them, all those years before.\" ",
        "My brow furrowed. \"Forgive me for prying, Mr. Bates, but...this mystery seems to be only deepening. If you could share what you mean, maybe we could cut to the truth of it.\" \n\nMr. Bates nodded, slowly...and launched into his tale. \n\n*** \n\nThe Tale of Gilbert Bates \n\nGilbert Bates had been born into wealth, privilege, and success. His father and his mother both left him immense wealth -- shortly before their demise on the high seas. This left the young child alone with nannies and tutors and butlers and more, all servants within the Bates household, all seeking to mold the child into a proper scion of Tarantian nobility. But the queen had gone missing and the king was suspected as being a part of her abduction and murder -- nobility was becoming out of fashion as the People's Council agitated for republican revolution. Gilbert, at the time a mere boy of twelve, was ushered out of the increasingly riotous city in a carriage and taken to Stillwater, where he would be taken under the wing of family friends until the 'unsettledness' in Tarant died down. \n\nIt was here, at the tender age of twelve, that Gilbert met his first dwarf. Walking the streets of Stillwater, the dwarf was a cheery stonemason from the nearby Black Mountains Clan, who had come to fashion a new statue for a local cult or another. Watching him at his work, Gilbert became fascinated by the strength, the attentiveness, and the craftsmanship. The dwarf explained to the curious lad that he had once taken twenty years considering which kind of stone to use for a single tile of a single part of a mosaic. That was how he had become so skilled as he was -- centuries of time, spent honing a single craft. \n\nAnd thus, the dwarf left, unaware he had left behind a seed within Gilbert that would change the whole world. \n\nTwo years later and the situation in Tarant had worsened. The King was now dead, murdered at the hand of a republican mob, and Gilbert was fourteen years of age. His protectors in Stillwater would not allow him to visit the dwarven mines...and so, Gilbert did what he would often do later in life: Whatever he wished, no matter what the consequences. He set out with a hunting musket and a saber and made his way to the mouth of the Black Mountain Mines. There, he threw himself before the rather bemused dwarves and begged of them: Teach me all that you know. \n\nThey laughed. \n\nThe mockery had been kindly, in the way of an older fellow being amused at the antics of one too young to know better. But they still bit deep within the soul of young Gilbert Bates. He was tempted to flee from the Black Mountain Clan, to leave them to their own devices. But his stubborn refusal to be wrong -- to come slinking back to his home away from home in Stillwater, to prove that his dreams of dwarves and their customs were just so much poppycock -- kept him within the mines until he met Stennar Rock Cutter. \n\nStennar Rock Cutter's brother had been the one to visit Stillwater, and Stennar remembered the stories he had heard of the eager young human. And so, Stennar took the boy in, gave him food, spoke to him, and learned of how bright and clever young Gilbert was. Seeing his eagerness, Stennar took Gilbert to a hall where dwarves kept their failures. He showed the cracked pottery, the broken bronze, the steel that had come out dark and bloody from some ancient magma forge. He showed Gilbert the swords that bent and the hammers that were weighted poorly and, at last, he showed Gilbert the engine. Crafted by a dwarf three centuries ago and then put aside as a curiosity and a toy, the engine was...ingenious. \n\nBy lighting coil and boiling water, the engine could create motive power. Not much, and it would be slow and rickety, but within a few days of examining the device, Gilbert had new designs in mind. He worked feaverishly and in secret and soon, he had vastly improved the engine. He took it before the councils of the Black Mountain Clan. There, he showed them the engine. He showed how it could drain mines or hammer stone flat. How it could travel faster, or maybe even fly through the air. \n\nThey laughed. \n\nAnd this time, the mockery had no soft edge. Gilbert had been living with them for a short time -- only half a year -- but they said that they had hoped he had learned something in his time here. \n\nA dwarf? \n\nUsing something else to do his work for him? Replacing the strength of his arms and the cleverness of his mind with steam and coal and fire? Preposterous! No, worse. Insulting. The dwarves laughed, and then the leader of the Black Mountain Clan declared that Gilbert's new engine would be placed right next to the old. \n\nA failure. \n\nStennar Rock Cutter came to Gilbert's room the next day to console the boy. \n\nAnd found him gone. \n\nTwo months later, a human corporation -- The Watts Coal and Mineral Company -- was approached by a clean shaven fourteen year old boy who claimed to be nearly fifteen. Mr. Watts had been told by his father, his uncle, his two brothers, and his wife that trying to compete in the northern reaches of Arcanum with the dwarven clans who sold their mineral and coal goods to humans was bound to fail. A dwarf would always out-mine a human, even if they worked at their own schedule. And they had been, in the main, right. \n\nYes, the Watts Coal and Mineral Company provided more coal, but the expense of keeping up with dwarven miners nearly offset the cost. \n\nThat is... \n\nUntil Gilbert Bates' steam engine began to pump water from the lower levels of the mine, allowing faster extraction and easier working conditions. And when Gilbert Bates constructed the first steam-carriage and the first tracks were laid by the Gilbert Bates Railroad Company. And when Gilbert Bates constructed the first Bates Electrical Coal Power Plant in downtown Tarant, under the auspices of the newly formed Industrial Council, which took over after the dissolution of the People's Council. Now, Watts was booming -- but it boomed in the shadow of Bates Electrical, Bates Railroad, Bates Armory! \n\nThe inventions and the wealth drove one another, pushing themselves further as Tarant transformed from chaotic backwater to domineering giant, striding across Arcanum like a colossus. \n\nAnd at last, as an eighteen year old man with more wealth than any had ever acquired since the waning days of the Age of Legends, Gilbert Bates returned to the Black Mountain Mines. He came in his fine suit, with his briefcase full of the evidence of his genius, his wealth, his power, to show those mocking dwarves what they had turned aside. \n\nHe returned to a tomb. \n\nEmpty. \n\nDevoid of life. \n\nSilent. \n\nAnd then the figures emerged. Robed. Dark. They bore knives and magicks and they spoke to the young Gilbert Bates. They said that should he ever return to these mines, should he ever seek out what happened to the Black Mountain Clan, they would do something far worse than simply killing him. Gilbert Bates fled. When he returned home, the inventions continued. The war came, and Tarant wrested control of Dernholm's northern provinces from the king in Cumbria, and Gilbert Bates became more mature...and less fearful. \n\nHe hired men and women both, adventurers all. He sent them to the Black Mountain mines and beyond, to find what had happened to the dwarves of his youth. They returned with only tales of darkness and traps and monsters striking from the shadows. \n\nThose that returned at all. \n\nAnd as Gilbert grew older, the number of resourceful souls willing to travel into the darkness of the wilderness grew thinner, and thinner. At the last, Gilbert grew old and tired. Now other men invented. Other men built companies. He oversaw what he had made, alone in his mansion -- forever hearing the echoing sounds of the dwarves laughter. \n\nNever being able to tell them he was sorry. \n\n*** \n\n\"Stennar must have known that giving the ring to you would lend veracity to your story, and lead you to me,\" Mr. Bates said after he finished his tale. \"Now, if only we knew what he meant by the evil.\" He frowned. \"Clearly, it must be related to those robed figures!\" \n\nVirginia coughed. \"Well, uh, Mr. Sir, uh, Bates,\" she said, then coughed again. \"This does bear some striking similarities to the prophecies of the Panarii -- uh, darkness. Evil ones. All that.\" \n\nMr. Bates did not look amused. He reached up and adjusted his suit with both hands and, in the most posh way I could imagine the words being said, said: \"I don't put much stock in religious ramblings myself. But if you feel it could be of some assistance, you can visit the Panarii and their panhandlers at their temple on the end of Lion's Head Circle.\" He shook his head. \"I am more concerned with who killed Stennar and why and what all of this has to do with the Black Mountain Clan. There must be some clue left at the mines, something neither I nor my associates have found.\" He looked directly at me. \"You seem to be resourceful. Why...being a half-orc, even reaching my room at all is a quite prodigious accomplishment. Would you be interested in searching the mines for some clue?\" He paused. \"I can make it worth your while, I can assure you.\" \n\nI tucked my chin forward, considering. \"Well, it'd be a poor show to come so far and only leave this quest half finished,\" I said. \"Besides, these tall, dark robed fellows that scared you so frightfully sound alarmingly similar to the fellows who have been trying to stab me and my friends with a monotonous regularity.\" \n\nMr. Bates laughed, but there was little mirth in the sound. \"Before you go, then, Mr. Cog, do you have any questions of me that might assist in the quest?\" \n\n\"I admit,\" I said. \"I'm not sure if there is anything more that we can discuss, beyond generalities.\" I shrugged. \"I'm a bit of a technologist myself-\" \n\n\"You?\" Mr. Bates asked. \n\nI smiled. \"I left my best work, a repeating rifle I fashioned my own self, with your guards.\" \n\n\"As well you should,\" Mr. Bates said, frowning. \"There have been some issues with armed orcs at several of my factories, the guards would not take kindly to you letting yourself in with firearms.\" \n\nI felt a tiny little tremor begin behind my left eyebrow. \"Trouble at your factories?\" I asked, trying to sound neutral. \"Might I know more, good sir?\" \n\nMr. Bates narrowed his eyes ever so slightly. \"Why do you want to know...\" He put a certain pause between his words, to end emphasis at the end of the sentence. \"Half orc? You're not a labor sympathizer are you? A unionizer?\" He loaded the word with the same scorn I'd have shown to the lowliest rapist. \"I can assure you Mr. Cog, my workers are the happiest and most satisfied greens to work in the whole of Tarant. They're glad to have the jobs I give them. I treat your people better than any other factory worker in all of Tarant.\" He lifted his chin. \n\nMy tremor had become quite noticeable now. To see this man, sitting in a mansion that could have covered a good quarter of Shrouded Hills, with servants and maids and body-guards alike, living alone without family or kin nearby, one so fabulously wealthy that he could have purchased the entirety of Tarant University and given it away without even noticing the expenditure...to see him speaking about an orc wanting a decent day's pay for back-breaking, limb endangering labor...it made me nearly as furious as that damn news article. It called to mind, in a single instance, the vast stinking heap of the Boil and the desperately poor men and women and children who lived there under the guns of the Tarantian military, kept from rioting by sheer force of arms and wrought iron cages. \n\nAnd so, I must confess. I lost my temper. \"Oh, I'm sure you do, you racist oppressor!\" My voice rose to a snarl at the last as my hands clenched in my lap. \n\nMr. Bate's cheeks went nearly chalk white -- not in fear, but in fury. His gnarled hand clenched and if he had a cane, I was sure he would have shook it at me like a weapon. \"How dare you, sir!\" He did not bellow -- he hissed. \"I will not have a subhuman labor agitator insult me in my very own home!\" \n\nMy heart hammered and the sudden image of drawing my pistol from my holster and shooting his brains out flashed through my mind. If I had had the pistol, I may have done it. But leaving my weapons with the guard seemed to have been the right decision, for having a few extra moments to weigh flying at the man with my bared fists...no. No. I shook my head, forced myself to count to ten, and felt the rage that could sometimes flare in me so hot and bright...recede. Once I was able to speak, I forced out the words: \"Forgive me. I did not mean to insult you so.\" \n\n\"Well...I can hardly blame a member of your race, with your blood, for getting a mite irritated,\" Mr. Bates said, his voice still haughty. \"You lesser races are all lacking in restraint, after all.\" \n\nI can take your pomposity no longer. Death to the bourgeoisie! The words rang in my head. But I made sure to keep them within my breast. Instead, I stood up, slowly. \"Of course, and lacking restraint, my feet can barely be kept from wandering.\" I smiled. \"We should get ready to go. The Black Mountain Mines wait for no man.\" \n\n*** \n\nThe snarling mouth of an immense dragon is one thing to hear of in books and stories. It is quite another to stand before the nose-ridge and see that the nose-horn that would have grown from the original egg tooth is roughly the same size as your entire body. I shook my head as I took a slow step back from the petrified skeleton, while Virginia slowly read: \"The great dragon Bellerogrim was discovered in the year of our lord Nasrudin 1756 by Sir Walter Ginsberg. The lair is an open exhibit at 773 W by 849 S in the Morbihan Plains...\" She looked up from the plaquard that was set beside the immense skull. \"This is a fake, apparently. WeLl, a replica.\" \n\n\"It is a fake!?\" I asked, gesturing to the massive skull. \"The worksmanship must be remarkable!\" \n\n\"Rayburn!\" 'Magnus' spoke up. I turned to find that she had stopped examining the ancient iron chest was being exhibited in the far corner of the Tarantian Zoological Society. \"What the bloody hell are we doing here?\" \n\n\"Well,\" I said. \n\n\"We should be on our way to the Black Mountain Mines!\" 'Magnus' said. \n\n\"Shh!\" Sally hissed, then pointed her broad, gray-green finger at the sign that had been hung up by some fellow who had a far higher opinion of the chances of large crowds being drawn to the Zoological Society on a lazy Sunday morning. The sign, of course, admonished all...to be quiet, for the sake of fellow visitors. \n\nWe were the only people in the building. \n\n\"Magnus, old boy,\" I said, looking down into her eyes. \"We're here because Mr. Bates is paying us by the day.\" \n\n'Magnus' arched an eyebrow. \n\n\"And I want to bilk that old racist git for every last sovereign he has,\" I finished. \"So, why not spend a few days, or at least one, taking in the sights?\" I looked at the replica skull of the last of the Great Dragons. \"It was worth it for this beauty alone.\" \n\n\"Spoken like a true half-human,\" 'Magnus' said, stroking her fake beard. \"We dwarves actually remember, racially, what it was like ta have these daft lizards flying around, breathin' fire an' spilling their souls everywhere...\" She continued to mutter under her breath, while Virginia's slightly bored expression remained fixed right until she saw the 'petrified hatchling.' That produced a most lady-like squeal of excitement from her as she leaned against the railing that ringed off the pedestal. The dragonette looked as if it had been curled up to go to sleep on some pile of cold before the lava had swept over it. I leaned close, smiling. \n\n\"It is a cute little thing,\" I said. \n\n\"Ahhhhh!\" Virginia squealed. \"He has little feather tufts!\" \n\nI stroked my mustache. \"I wonder what this brash youth would have been like gallivanting about.\" I grinned at Virginia. \"Might give me some competition in the art of making women swoon, eh.\" \n\nVirginia blushed, coughed, and then forced herself to look calm and dignified. \"Yes, well, carry on and all that.\" She said, incoherently, then blinked. \"Sally! What are you doing?\" \n\nSally had leaned over and was prodding at the front of the ancient iron chest. The chest, according to the placard, had been found and never opened, not in nearly two hundred years of recorded history. Sally stood, then looked at me. \"It said here, we can try it -- nothing's been able to...\" She paused, wobbled, then burped. \"Nothing has been able ta' open it, see?\" She thumped the side of the chest. I frowned, leaning forward as I examined the lock on the front. The chest itself was a rectangular one and stood nearly as tall as me, so it was no difficulty to look at the lock itself. \n\n\"It seems to have a great deal of interlocking parts...\" I murmured. \"And...\" I cocked my head. \"Possibly a magickal component, hand me my pocketwatch, Virginia, I-\" \n\nSally slammed her fist onto the top of the chest. The chest shook, rattled, and started to click. I sprang backwards, and Virginia flung herself between the chest and I. \n\n\"Sally!\" I shouted. \n\n\"What?\" our drunken half-ogress asked, wiping her knuckles on her chest. \"Z'at always worked fer my old sea chest.\" She grinned. \n\nThe clicking continued, rattling and popping...and then the chest clunked and then swung smoothly open, whirring and popping as it came to a rest, the door hanging fully outwards. Within was a rolled piece of vellum, somehow protected from aging by its time within the chest, and several long, tube shaped iron drums, each fashioned to have a different symbol upon the bases. I gaped. \n\n\"Well, fuck me sideways,\" Sally said, grinning. \"It -- hic -- worked!\" \n\nWe all stood in stunned silence. \n\nThen a voice called from the back of the Zoological Society. \"Did something break?\" \n\n\"Grab it and go!\" Virginia blurted out. Sally bundled up everything within the chest to her arms and bumped the door shut with her hip. It slammed shut and latched and our sorry little quartet rushed for the exits before anyone could even identify us. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "infildelity",
        "adultery",
        "big cock",
        "cockshock",
        "human",
        "half-orc",
        "orc",
        "green skin",
        "steampunk",
        "action"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-06"
}