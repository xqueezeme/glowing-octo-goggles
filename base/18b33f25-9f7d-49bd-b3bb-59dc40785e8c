{
    "title": "My Little Ventrue Pt. 07 Ch. 22",
    "pages": [
        "~~Jack~~\n\nHer. It was her. No doubt about it. As if someone popped a balloon in his face, snapping out of his memory to the present was loud and painful.\n\nThat was Susanna's childe, and Jack's great grandsire.\n\n\"In the name of peace,\" Antoinette continued, \"these three hunters were invited to the ball to be shown that Dolareido, my city, is not as devolved as other cities with a Kindred presence. We are better than our baser desires.\" She adopted an evil smile, and looked back to the hunters. \"Mingle with my Kindred, dear hunters. Be at ease, and enjoy the pleasures we provide, for they are many.\" It sounded less like an offering, and more of a command.\n\nJack's eyes flicked over to the hunters. Harcourt, Marge, and Dennis, three humans who were very out of place, but Antoinette was manipulating them into being merged into Dolareido, or at least not hostile toward it. Considering what she said, no one would be stupid enough to dose them with blood and bind them with the Vinculum, or kill them, and especially not embrace them. But that didn't mean they wouldn't get manipulated into a night of amazing sex and Kisses. And the hunters knew it, too.\n\nBut the surprise of seeing them at the ball was nothing compared to the surprise of seeing his great grandsire. Elaine. An elder, and a member of the Ordo Dracul. Antoinette's friend. He rubbed his head, seeking the feel of buzzed hair against his fingers and scalp, desperate for the soothing sensation. His great grandsire, alive, in the Ordo, and his lover's friend. Think think think.\n\nThere were no way this was coincidence. Elaine must have known who Viktor was, she sired him after all. She must have known about Julias then, since Elaine had visited Dolareido several times before, according to the Prince. And, if Antoinette and Elaine were friends, that meant Elaine likely knew about Jack. She knew he was Julias's childe. She knew he was Viktor's grandchilde, and her great grandchilde.\n\nWhy did she come now? There had to be--the crows! At the hospital. When he'd first let the curse out, and it'd summoned a legion of crows, that shit had hit the news. The Invictus had done an excellent job suppressing the fallout of that, but that didn't mean people hadn't learned about it. Or maybe Antoinette had just told Elaine about Jack's curse directly, considering researching shit like that was probably something the Ordo did.\n\nShe had to know about him, and she had to know about the curse. Did she know it spoke to him? Did she know it had contaminated his mind, had him half convinced he'd devolved into a killer, before he broke the seal. The curse's desires had morphed and solidified into a separate personality now, no longer tampering with his mind covertly, but overtly. Did it do that to her, too?\n\nJack snapped his head around. Where was he, where was he? There, Jen, and S\u00e1ndor. He slid over to them, taking advantage of how Maria, Michael, Garry, and Jacob all came up to shake Elaine's hand. They were a nice distraction for Antoinette. She'd want him to come up to her in a moment, but he needed to know something, and know it now.\n\n\"S\u00e1ndor,\" he whispered, once was close to the man.\n\n\"Jack,\" the monster said. He almost slid away, once Jack got close. Right, the man was a Begotten, and while other Kindred could sense the curse, and how it inflated Jack's Beast, S\u00e1ndor could see it in all its twisted, disturbing glory. Perfect.\n\n\"Jack?\" Jen said. Jack leaned in closer. Hint, be quiet. She raised a brow, but stopped talking.\n\n\"S\u00e1ndor, that newcomer, Elaine. What does her Beast look like?\"\n\n\"Her Beast?\" S\u00e1ndor, one brow slightly raised, looked at Jack, then around at the Kindred around him, then to Elaine, who was shaking hands with Maria. \"Normal. The only one here with an unusual creature beneath the skin, is you, Jack.\"\n\n\"Really? Uh, how about... chains? Anything like chains, or something that could be tying her Beast down? Like, a binding?\"\n\n\"No, Jack. The creature of shadow and fog, claws and beaks, fangs and talons and feathers, the strange malleable cloud that is the Beast, is the same in her as I see in everyone. Only the... titanic monstrosity in you, is different.\" Quite verbose for the gargoyle.\n\nFrowning at him, S\u00e1ndor took a small step away from him, toward Jen. And Jen didn't miss a beat, hooking her arm with his again, and smiling up at him before throwing Jack a 'sorry about this' look.\n\nJack managed a smile for her. It was obvious she was manipulating S\u00e1ndor, so obvious that S\u00e1ndor must have known, and Jen knew that he knew. It was kind of cute, honestly, how the Begotten was just too closed off and stoic to stop her from dragging him around like an arm candy himbo. And it was obvious she was using him as a tool to help Triss. The girl had a kind heart, despite her demeanor.\n\nSighing, Jack nodded to S\u00e1ndor. \"Thanks.\"\n\nHe didn't wait for the Begotten's response. The elders were done greeting Elaine, and were dispersing back into the crowd, after giving the hunters some distrusting glares. Right on time, Antoinette looked around for him, and Jack met her eyes as he walked toward her.\n\nElaine's curse was... gone? No chains? Jack could still remember the Beast from the vision, and how it'd been covered in chains until he'd destroyed them. The other Begotten had seen them on him, but hadn't called them out; a classic 'nobody asked' sorta situation. And now that the curse was loose in Jack, the Begotten were afraid to even get close to him. Except Fiona of course, but Fiona was Fiona. If S\u00e1ndor said Elaine's Beast didn't look mutated or bound, he believed him.\n\nAs he approached his great grandsire, Antoinette, his mom, Daniel, and the two ghouls, Jack reached into his core, and did his best to sense what he could. His Kindred senses, his Beast, found nothing out of the ordinary. It did its usual song and dance with Antoinette, though now that his Beast was a twisted, cursed thing, what used to be a purely submissive gesture, wasn't nearly as passive. It bowed to Antoinette, but because it wanted to, not because it had to.\n\nHe could feel his mother's Beast, shrinking into itself at being surrounded by so many elders. His approach didn't help, and he winced as he watched his mom turn to him, freeze for a moment as her Beast shuddered at the sight of him, before her conscious mind pushed past it. The older his mom got, the better she'd get at listening to her Beast and Kindred instincts, and that was going to be painful for him, if he didn't get rid of this curse.\n\nAnd maybe, just maybe, considering Elaine's condition, he could do just that.\n\n\"Mom,\" he said, \"you look amazing.\" And he did his best to avoid looking at how much of his mom's skin the dress showed. Hard to do. He'd never seen her look so amazing, and as much as he could see his mom had hit probably ninety percent maximum embarrassment load, there was a bit of pride and joy in there too. She liked looking good, and having so many eyes on her. Once she got past the embarrassment phase, her Daeva blood would kick in, and she'd enjoy being in the limelight like Antoinette, Isabella, and Othello did.\n\nMuch as he felt he should be kinda freaked out by the idea of his mom likely having orgies in her future, he was too damn distracted by the tall blonde who'd jumped out of his memories.\n\n\"You do too! But, I look like a harlot.\" His mom frowned as she looked down at herself.\n\n\"Please,\" Elaine said, grinning and waving a hand with a small flick, the barest touch of a English accent coming through. \"If you are a harlot, then your sire and I may as well dance naked in the streets.\"\n\n\"As if you have never done so.\" Chuckling, Antoinette walked past Elaine, up to Jack, bent down, and leaned in for a kiss. He gave it to her, drawing on every bit of teaching Julias had ever given him on how to manage a poker face. It was enough to fool his mom and the ghouls, but the three elders? No chance. At least he could mostly trust Daniel to remain indifferent.\n\nAntoinette's brows furrowed, and she blinked at him twice, searching for whatever it was that was bothering him. He smiled for her, letting her know he realized she knew, and silently mouthed 'later'. She nodded, but a speck of uncertainty remained on her face.\n\n\"My love,\" she said, \"this is Elaine.\" No last name, like her, like Daniel, like Jacob. \"A Ventrue, and valued dragon in the Ordo Dracul. Elaine, this is my little Ventrue, Jack Terry of the Invictus.\"\n\nJack glanced around quickly before looking back to Elaine. If people watched too closely, they might notice Jack's behavior, and he knew he didn't have the skill to not give something away if everyone was watching.\n\nThe crowd had begun to mingle again, and the hunters were promptly surrounded by some very hungry looking vampires. But before things got crazy, the witches of all people, save Jacob, went over to join the hunters. Well, Harcourt knew them, so they were a decent familiar face in the crowd for him. More and more Kindred drifted toward the hunters, even the younger ones, all pretty excited that some hunters had actually helped defeat the threat. No one at the party had expected to actually get the opportunity to talk to them, and potentially, maybe even feed on them.\n\nNo one even looked at Jack or Elaine anymore. Perfect.\n\nJack offered his fellow Ventrue a small bow and nod. \"You look lovely, Elaine.\"\n\n\"Don't I?\" Laughing, Elaine tossed her hair back over her shoulder. \"I was told that this ball would be less scandalous than what I would normally expect from my good friend. A lie, obviously.\"\n\n\"Not a lie,\" Antoinette said with a touch of laughter, \"but I did suspect the joyous occasion would have my Kindred happy to show skin.\" After motioning to the crowd around her, she laughed again, and stepped in close enough to Elaine that they were almost touching shoulders as they looked at Jack. Damn, they were tall. \"Have the Begotten not arrived? I see the gargoyle S\u00e1ndor, but neither Fiona or Athalia.\"\n\nHis mom nodded with her sire's question.\n\n\"They haven't.\" Sighing, Jack looked around the crowd again, then gave his mom a quick 'I don't know' glance, before looking to the two elders again. \"They might. Night's still young.\"\n\n\"I hope they do,\" his mom said. A moment of silence followed, and everyone pursed their lips for a moment. The chance they'd show up was small, especially if Fiona wasn't here yet; Azamel probably keeping them home.\n\n\"Samantha.\" Antoinette leaned down over her childe, and set a hand on her shoulder. \"Go, mingle. Bring Ashley and Julee with you, and introduce yourself to some Kindred.\"\n\nSamantha gulped as her eyes went wide. She looked at her sire for a second, then looked around again. Judging by how she squirmed, she couldn't help but be intimidated by all the skin on display. Combined with her young Kindred age, it'd be hella intimidating for her to approach strangers.\n\n\"Um, you... don't want to introduce me, sire?\"\n\nLaughing, Antoinette shook her head. \"I introduced you to the Primogen. Beyond that, you need to make an effort yourself. But, I suppose this is your first ball. Find Natasha, and ask for her help.\"\n\n\"Oh right. Natasha.\" Nodding, Jack's mom started walking past, but not before stopping beside him and smiling at him. \"Um, have fun?\"\n\nHe choked on a surprise laugh. Good god, his mom. \"I've done this before, a few times actually. And my date is hosting the ball, remember? I'll be fine. You, on the other hand, need a shove in the general direction of fun. You're not my mom here. You're a new vampire with powerful connections.\"\n\n\"Powerful connections,\" Antoinette said, nodding.\n\n\"Powerful connections!\" the two ghouls said, and they pulled Samantha off, practically against her will judging by how she dragged her heels.\n\nAntoinette leaned toward her sheriff, and whispered something. Jack couldn't hear over the music, but it probably amounted to 'keep an eye on her'. Daniel nodded, and stepped away from them until he was near a wall where he could watch the crowd.\n\nThat left Jack standing alone with the two elders. Ok, so, tell them? There was no way he could keep his awareness of Elaine secret for very long. They might not figure out what was going in his head, but they'd realize something was up in no time.\n\nHe looked at them, and tried to focus his thoughts. Hard, so very damn hard, when both women were utterly gorgeous. Antoinette's dangling hip straps masquerading as a skirt had let the entire city see her micro thong, and how little it covered. The corset, which had cinched her waist so tight it was basically a torture device, was ornate and beautiful. And while it raised high enough to cover her breasts, the cups that held them sat very well, and were barely existent. A hint of both her areola were visible along the top of the corset, and both breasts were pushed up to create the most arousing pair of enormous pillows he'd ever seen.\n\nElaine and her see-through dress cut through the pretense of wearing revealing clothes, and instead opted to literally reveal everything to anyone who looked long enough. The simple dress with its two dangling black straps over her breasts, and the long skirt with an equally long split, did look gorgeous, but the fact he could see through it added an air of command that he recognized as very Ventrue. And she was almost as tall as Antoinette, with huge breasts, a tight waist, and wide hips. If she'd bleached her hair and put on red contacts, she'd have looked pretty damn close to the Prince.\n\nBoth sumptuous women were looking at him, Antoinette with a hint of confusion, and Elaine with some obvious intrigue. She looked him up and down, and slowly licked her lips as her eyes lingered on his stomach.\n\n\"Your little Ventrue,\" Elaine said, voice dark and husky, \"is a delicious thing.\"\n\n\"Is he not?\" After giving Jack a wicked grin, Antoinette motioned for a nearby waitress to join them. Soon, the three of them had glasses in their hands, and were sipping blood, nonchalant and relaxed. They weren't relaxed. The three of them were trying to figure out what was going on, without saying it. Fucking Danse Macabre.\n\n\"Thank you,\" he said to his great grandsire. \"I... understand that you've been friends with the Prince for a long time?\"\n\n\"Centuries.\" She took a step closer to him, then another, and once she was almost close enough to touch him with her shoulders, she started to slowly walk around him. She may not have had a foot of height on him like the Prince did, but she still had good eight inches; more, with the heels. \"She speaks highly of you.\"\n\nHe tracked her with his eyes, but didn't turn his head to follow her. Couldn't show weakness to a fellow Ventrue, or he'd be asking for trouble.\n\n\"She's the best thing to ever happen to me,\" he said.\n\nElaine crooned as she came back around to the front of him, and stood shoulder to shoulder with the Prince. \"You two are utterly adorable together. I hope to get to see more of you. A lot more.\"\n\nAnd there it was, what Antoinette warned him about. The sly grin. The direct eye contact, with another lick of her lips. A slide of her fingers over her ear to adjust her hair. She'd stuck her hip out more than she needed to, and as she folded her arms under her bosom to relax, one arm out at the elbow holding her glass, she made sure to hug her breasts as she did it. The body language was blatant: look at me, I am beautiful, and you want me.\n\nWell, she certainly was beautiful, but he wouldn't touch her with a ten foot pole if Antoinette didn't want him to. Kinda the whole deal with a trusting relationship. But the fact Antoinette had basically given him permission to invite Elaine into their bed, and had shared stories with him of the naughty things she'd done with her old friend, put a wholly different spin on the situation. A beautiful, half-naked curvy woman was hitting on him, and his girlfriend liked the idea of having her in their bed. Antoinette, naked, breasts pressed to Elaine's, both of them wriggling on him, writhing, and--\n\nGod damn it, it sucked being a man, sometimes. Even without the Blush of Life, his dick was trying to lead the show, and it demanded more boobs. Good fucking god, focus! Do not listen to the dick. The dick is not your friend. The dick wants immediate satisfaction, and the consequences be damned.\n\n\"I... can't say I'd mind that,\" he said. Ok, yes, that was dangerously close to asking her to join him and the Prince. Not quite, but almost. Christ, asking a vampire, half a millennium old, to join him for a threesome? Or... fivesome? She's your great grandsire for fuck's sake. Susanna's childe! Be more concerned with how she got rid of the curse, of her possible motivations for coming here, not how to get that dress off her.\n\n\"Neither would I,\" Antoinette said. She stepped up behind him, and while she held her glass of blood with one hand, the other reached down, traced along his buzzed hair, down his neck, down his chest, and down to his exposed abs where his shirt was open.\n\nOh god, he was squirming. Squirming squirming, like the first night he spoke to Antoinette in Bloodlust. It didn't matter that the curse had given him the strength of an elder, and that in a contest of pure strength, he felt he could probably win against most of the elders in the room, if not all. But Elaine was a woman, an older one at that, with centuries of all sorts of experience. He was a child compared to her, and to be the target of her flirting, and Antoinette's as well, was making him wriggle like a worm on a hook.\n\nJack gulped down another sip of his drink, did his best to not stare at Elaine's breasts through her dress, and looked up at Antoinette beside him. Did she know who Elaine really was? It didn't look like it. Should he say it? No, not here in the middle of the ballroom floor.\n\n\"Um...\" Shit. Get control of your words. \"I wanted to ask, what brings you to Dolareido, Elaine? Experiments for the Ordo?\"\n\nShe grinned at him as she watched him. Almost like an evil scientist, complete with evil smile, she kept her eyes on him, taking mental notes of him. If she'd had a pad in her hand and a white lab coat, it'd have fit perfectly.\n\n\"The Prince's delving into the world of ephemera is of great interest to many in my order. I would love to see what she has learned lately.\"\n\n\"That's... not it.\" Ugh, he shouldn't have said it. He should have just nodded and smiled, pretending to believe her. But it would have been written on his face that he didn't believe her, anyway. Better to at least admit that he knew something.\n\nElaine's smile changed. It didn't disappear, but it did change, no longer the playfully evil PhD scientist, and now something far more serious. It was the sort of smile Michael put on when he was negotiating.\n\n\"Oh?\"\n\n\"You're here for something else.\" He quickly glanced to Antoinette, still behind him, but she looked intrigued more than anything.\n\n\"Am I?\" The sparkle in Elaine's eye announced her excitement that he had the balls to confront her like this. \"Then do tell, Jack Terry. What am I here for?\"\n\nSo much for not bringing this topic up in the middle of the ballroom floor. Ugh, being surrounded by beautiful women did a number on his thinking ability.\n\n\"I--\" No. Wait. Be smart about this. For once, stop being direct and honest about things, and try playing the game a bit. \"Let's talk after the ball?\"\n\n\"Oh. Dangling a carrot in front of me?\" Elaine laughed, reached out, and touched his shoulder. \"Very well. I await with bated breath. Ann, I shall rejoin you in a moment or three? I wish to speak with that blasted sheriff of yours.\"\n\n\"Please do, Elaine.\"\n\nWith a small nod, Elaine grinned at Jack again, gave Antoinette a proper smile, and walked off in search of the sheriff.\n\n\"Why does she want to talk to Daniel?\" Jack said.\n\n\"She has been interested in my sheriff for many decades.\"",
        "\"He doesn't reciprocate?\"\n\n\"He does not reciprocate with anyone.\" Shrugging, Antoinette stepped around him again, and smiled down at him. \"You believe Elaine wishes to learn more of your curse.\"\n\n\"I assume you told her about it. Or that she's here to look into whatever summoned those crows that showed up on the news.\"\n\n\"I did tell her, weeks ago. I trust her with much, my love. Though, I would trust her with my life, before I trusted her with all my secrets; professional rivalry, you see. Many in the Ordo have dealt with strange phenomena, such as this curse that plagues you.\"\n\n\"Yeah, I would have told her too, if I were you.\" Sighing, he looked down, and stared at his shoes. How to handle this? What to do?\n\n\"Something bothers you, my love, something to do with Elaine. What is it? If she is being too direct about her desire to partake of you sexually, that--\"\n\n\"No no, that's not it. Er, well, I mean... I got the impression she enjoyed making me squirm.\" He couldn't help but smile as he looked up at his love. \"Easy to see how you two get along.\"\n\n\"Ah oui. Birds of a feather.\" She leaned down, and kissed him proper, lips to lips. And of course, she didn't close her eyes when she did, keeping them open a crack, until he eventually closed his. \"If it is not her sexuality that has frazzled you, what has? It seemed as if you knew something, something I do not.\"\n\nHe could keep it a secret. Antoinette wouldn't even hold it against him if he did, not really. The Danse Macabre was played by everyone, and that meant he should always make decisions with that in mind. But now that Julias was gone, he didn't have anyone to come to with this. Everyone else was a friend, but Antoinette was a genuine force, a powerful figure in the Danse, and most of all, someone whose motivations he trusted.\n\n\"It can wait. Tell you later tonight? She can come, too.\" Might as well tell them both, since Antoinette trusted Elaine so much.\n\n\"I suppose I must acquiesce.\" Laughing again, she kissed his ear, and started to walk. He was expected to follow, and he did. After all the shit that'd happened to him the past few months, he was damn happy to shut off his brain for a while, and do whatever Antoinette wanted.\n\nExcept, he couldn't stop thinking about Elaine. And sure, some of that was because she'd basically offered herself up to him and Antoinette, sexually speaking. But his thoughts kept pulling to the elephant in the room: she was his great grandsire, and her curse was gone. Great grandsire! Curse, gone!\n\nHe settled his mind for a moment, and waited for the twisted thing in his guts to speak up. Nothing. He was sure the curse would start talking, but it said nothing. Afraid, maybe, of Elaine? She was a walking, talking example of someone from his bloodline who no longer had the curse; assuming it was the woman from his vision, and not some identical twin. It damn well better be afraid. Now that the hunters were gone, he didn't need the curse.\n\nHe looked to Elaine again, who had found Daniel, and was proceeding to get up in his face until she was almost nose to nose with him. Daniel wouldn't back down, but it was clear he wasn't interested, or his poker face was amazing. Considering how gorgeous Elaine was, Jack bet on the former.\n\nAntoinette did her rounds. She always made sure to check up on every single Kindred she could whenever she hosted, or came to a ball. Maybe it was to personally insure every vampire in her city was afraid of her; a little fear was healthy. Maybe it was so she would always be able to identify people by their faces if the need ever arose. Maybe it was because she genuinely enjoyed getting to personally meet every single Kindred in her city. He couldn't imagine it being that, but the fuck did he know, antisocial as he was.\n\nThey found his mom after a while, Ashley and Julee sticking with her like cute bodyguards. Natasha, Arturo, and Matthew were introducing her to the rest of the Uratha. And the Uratha, were getting quite drunk.\n\n\"Jack!\" his mom said, joining him in what seemed like an effort to escape some heavy gazes. While the Kindred at the ball weren't Blushing Life, so they could keep their hormones out of the picture, the Uratha had no such option. When a woman in a revealing dress starts talking to you, he couldn't blame any dude -- or gal -- from kinda staring.\n\n\"Mom. I see you met Avery, Matthew, Arturo, Monica, Brianna, Caleb, Noah, Clara, Erica, Carter, and Mason -- and Tilly.\" Tilly, dressed in a red dress that hugged her body so tight, every curve was visible, stood with Mason, a grin on her face. At least, until she saw him. The grin vanished, replaced with a mix of trepidation and concern. Another vampire who was afraid of him.\n\nThere were a few more in the pack, but they weren't there, out mingling with the rest of the crowd.\n\nAvery smirked at him. \"Think you can charm me by memorizing our names?\"\n\n\"It's a start, isn't it?\" He returned the woman's smirk, before looking to Antoinette.\n\n\"Avery,\" the Prince said, \"I hope you and your family are enjoying the ball.\"\n\n\"We are,\" she said. \"Jacob's still being an asshole though. I'm trying, Prince, really trying to make nice and play nice, but that fucker's going to throw a punch eventually.\"\n\nFrowning, Jack looked around until he spotted Jacob. He was speaking with Beatrice again, and the rest of his witches, who'd left the hunters now. S\u00e1ndor wasn't far off, but Jen had let him go, probably so she could speak with her fellow witches and her boss. That might have been a mistake, considering several women had taken the opportunity to approach the Begotten now. Jack would have been tempted to save him, but it was clear that the women were getting nowhere, unable to break the man's cold exterior.\n\nHe looked around until he found Damien. He was with Jessy and Eric, and he looked a bit sad. No Fiona yet. Maybe no Fiona at all. Much as that'd suck, he was glad Athalia wasn't--\n\n\"Now arriving, Begotten Fiona Young, and Begotten Athalia Gardner.\"\n\nAntoinette threw up a hand, and somehow, someone somewhere saw the cue, and stopped the band. Everyone froze and turned. Just like when Antoinette arrived, the silence was deafening, the only sound the rubbing of fabrics as everyone looked at the front door. Athalia, and Fiona.\n\nDamn it.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe raised his head, looked to the door, and smiled.\n\nFiona came down the stairs a little faster than was probably expected. No slow, sexy walk for her. She bounced the whole way down, which of course, was damn sexy in its own way. In the tight red dress, it meant lots and lots of jiggling. Red? Darker. Burgundy? It contrasted her pale skin and freckles beautifully, and her big mountain of frizzy red hair matched it nicely as her curls sat on her bare shoulders. The dress had ruffled off-shoulder straps, and the chest hugged her breasts tight with cups of the thin fabric that showed the shape of her nipples. The skirt was long, but the split nearly reached her hip. She had burgundy shoes, too.\n\nNo way did she have clothes like that lying around. Someone had to help her get those. Maybe Athalia? Fiona had worn a purple dress to the last party, something classy but with plenty of cleavage, and an open back. That dress had hung loosely, but the burgundy thing she was wearing was a lot tighter, and was actively pressing her breasts up and together. As she practically hopped down the stairs, her breasts bounced up and down on top of their cups, to they point they almost leapt out of them. Lord, give him strength.\n\n\"Damien!\" she called out, fully ignoring the fact the ball had gone quiet. She jogged over to him, nearly tripped in her heels, recovered, and continued. Once she got to him, she threw her arms around him and pulled him down for a kiss. Not a small peck on the cheek, but a big kiss, long, dramatic, and one that demanded he hug her in return, half just to keep from falling over. His hands found her naked back, and he groaned quietly into her lips.\n\n\"Fiona,\" he said once she released him. \"I'm glad you came. Did Azamel get in the way?\"\n\n\"Nae! She was angry, sure, but nae angry enough to stop me. We're late cause I had to convince Athalia to come.\"\n\nDamien slowly lifted his gaze from her, to Athalia, and did his best to keep a frown off his face. He succeeded, but he knew Fiona could see the coldness set in his eyes. He felt it, too.\n\nAthalia wore a black dress, and while Damien would have expected a black dress on Athalia, something meant for mourning, this one was not. It was gorgeous, a strapless, tight thing with some ruffles along its front and cleavage. The skirt reached her ankles, no split, and the cleavage wasn't ridiculous like everyone else's tonight. Modest, by Dolareido standards. Her long black hair was tied into a braid behind her head, and her eyes were just as cold as Damien's felt.\n\nShe didn't want to be here.\n\nWith a slow breath, Athalia took a step down the stairs. The clack of her heels echoed in the silence. With each step, she glared around at the crowd, as if daring them to say something, daring them to confront her, daring them to make something of her arrival. No one said a word. No one moved. The only movement was Daniel, who stepped away from Elaine, and joined Athalia at the bottom of the stairs. For a moment, Damien thought his fellow Mekhet might attack her, cut her to bits, or kick her out. But, a small glimpse of his eyes past his glasses showed something Damien had never seen on the man, ever, except when Lucas had held Tash hostage. Compassion.\n\nDaniel held out a hand for her. With a heavy sigh, she took it.\n\nJust when everyone started to relax, someone else stepped out from the crowd. Samantha. Oh no. Damien stared at the young Daeva as she made her way across the ballroom floor, dripping of anxiety and fear. Jack came up behind her, but she turned and glared at him. For all her obvious fear, she wanted to do this alone, that much was clear. Poor Jack. The kid backed off, and stood with Antoinette again.\n\nAntoinette. Damien had almost forgotten about her in the moment, but when he looked at her, he could see a small smile on her lips, her eyes locked on her childe. Pride, in her childe and the courage she'd mustered. All Samantha's courage did was make Damien expect the worst, but he was Mekhet, that was his nature. But, that awareness didn't mean he was about to lower his guard, as the fledgling Daeva approached the shadow monster.\n\n\"Athalia,\" she said, once she was close enough. She had to look up to meet the monster's gaze. \"I'm Samantha Terry.\" The ballroom was completely silent, no movement, no music, and everyone could hear their words clearly.\n\n\"... I see.\" Athalia's gaze lowered for a few, long, painful seconds, before meeting the vampire's again. She opened her mouth, ready to say something, but the words died in her throat. Eye contact died seconds later, and her eyes fell again as her shoulders slumped.\n\nTen seconds went by. Ten long, horrible seconds, the only sounds the breathing of those with working lungs in the ball. Ten seconds of Athalia, frozen, staring at the floor, while Samantha looked at her.\n\nSamantha spread her arms, reached out, and hugged the woman.\n\nThe tension in the room melted away. A lot of held breaths released, and people began to stir around, quiet whispers turning into murmured conversations, as people watched the strange scene. Samantha whispered to Athalia, and combined with the returned noise, Damien couldn't make it out. But the look of palpable relief on Athalia's face said more than words ever could.\n\nSamantha was too nice, way too nice, nicer than even Fiona, and that was saying a lot. But, maybe that's what the city needed, because after what happened less than a week ago, it was amazing to see Samantha crack Athalia's rage and sorrow with nothing more than a hug. After a few seconds, Athalia returned the hug, and blinked away some rising tears.\n\n\"I thought so,\" Fiona whispered up to Damien.\n\n\"You thought so?\"\n\n\"Aye. After what we saw at her home, with Mary and Jack, I knew Samantha was a kind lass. Took a while to convince Athalia it'd be awright to come.\"\n\nDamien smiled down at Fiona, and pulled her into a half hug beside him. If it'd been him, he'd have told Athalia to stay away. There was no reason to risk something like this. Except, there was. It never crossed his mind that maybe, by having the two women interact, that closure could be found for both of them, or that he should even be concerned about that. But seeing the two meet and speak with each other, seeing something meaningful happen, seeing -- practically feeling -- untold tensions he would never be able to appreciate, dissipate before his eyes, was moving.\n\nHe looked to Jack again, and smiled. The kid looked back to him, rolled his eyes, but smiled too. No need to say it, Damien could tell what he was thinking. His mom's niceness worked, this time. It might not work the next time.\n\nThe crowd resumed their conversations. The heaviness that had hung in the air was gone, and Damien could feel how lighter everything grew, how free. Like a bunch of children with no cares or concerns for tomorrow, people started talking louder, laughing, and smiling. The band started playing again, and picked a happier classical piece.\n\n\"La finta giardiniera overture,\" he said.\n\n\"What?\" Fiona said.\n\n\"Uh, a piece by Mozart.\"\n\nThe redhead beamed up at him. \"Ye listen to classical music?\"\n\n\"Maria makes me. There's a lot more depth to classical music than modern, and she insists I develop my ear.\"\n\nFiona swooned, an exaggerated and playful, half sarcastic sound. \"Yer so deep.\"\n\nHe rolled his eyes, took Fiona's hand, and made his way toward Jack. A glance to Samantha and Athalia showed they were still talking, and with Daniel next to them, Damien figured he could relax. If something happened, the sheriff would deal with it, and judging from the expression on Athalia's face, nothing would. Her rage was broken, defeated by Samantha's kindness and compassion. For now at least.\n\n\"My Prince,\" Damien said as they arrived. \"Mister Terry.\"\n\n\"Mister Burksen,\" Antoinette said, eyes settling on him with a balance of disdain and appreciation. Yeah, she didn't like the Lancea et Sanctum, and him by extension, but she appreciated his existence. Better than nothing. \"Miss Young, I am glad you could come. I see that you brought Athalia under better circumstances than I could have imagined.\"\n\n\"Aye! I convinced her to come, but 'twas Athalia who calmed down on her own.\" Sighing, the young girl shook her head and shuddered a little. \"She was so sad, ye ken? When I told her 'twas Samantha who invited her, she didnae know what tae do! But,\" Fiona scooped a glass of red wine, did a quick sniff test to make sure it wasn't blood, and took a deep sip, \"but she came. I'm glad. Maybe the two of them can become friends?\"\n\nAntoinette looked doubtful, but she looked to her childe and the shadow monster on the ballroom floor with consideration, before looking down at the tiny redhead. \"Perhaps. My childe could become friends with a stone, if the stone was willing to share a word with her. The question is, will Athalia be capable of doing so.\"\n\nJack laughed, nodded, and took a sip of his own drink. \"I'm glad I was wrong. I'm glad I... I'm glad.\"\n\n\"Should ye talk to her?\" Fiona said. \"Athalia, I mean. She might--\"\n\n\"No no, no, bad idea.\" Shaking his head, Jack downed his drink, and grabbed another one as a waitress came by. To Damien's surprise, someone had undone a few buttons of the server's shirt, exposing a black bra underneath the white fabric. Good Lord, it was happening already. \"I... I think we should give Athalia her space. The fact she came is a miracle, and after... after what happened, I'm sure it'll be weeks before me or Triss can say a word to her, without it escalating.\"\n\nDamien nodded. \"Makes sense. Let's leave her be, and--\"\n\n\"Who tae fuck is that lass?\" Fiona downed her drink, and stared off into the crowd. \"The tall one, with the tits!\"\n\nWhile Antoinette laughed and rolled her eyes, Damien saw the wince on Jack's face. Damien had noticed before, when Elaine first stepped into the Black Hall, that Jack had reacted to her presence differently than Damien figured he'd would. Considering the woman was Antoinette's close, personal friend, it probably meant Jack would get to see Elaine naked in short time, and likely more. Something to be excited about, considering the sexual Olympics Antoinette enjoyed. But Jack hadn't looked excited. He'd looked shocked, and worried.\n\n\"That is my friend, Elaine of the Ordo Dracul,\" the Prince said. \"Elder, and Ventrue.\"\n\n\"Does she know we can see through her dress?\"\n\n\"Undoubtedly.\"\n\n\"Awright then.\" Fiona grabbed another glass from a waiter, did a double take at the waiter's exposed chest, and downed half her new glass of red. \"I see we're having one of thoooose parties.\"\n\n\"Do pace yourself, little Begotten.\" Antoinette made a small gesture to the glass in Fiona's hand. \"I will throw you to the street if you vomit on my floors.\"\n\nFiona scoffed, but didn't down the other half of her drink. \"Awright awright.\"\n\nDamien laughed. Too cute. Poor girl looked heartbroken.\n\nJack looked past them to Elaine again, and Damien followed his gaze to the Ventrue. She really was utterly gorgeous, a tall blonde with large curves despite her thin waist. If it wasn't for the rumors about her, about how dangerous of a dragon she was, Isabella probably would have been over there already to recruit her for her show.\n\n\"Antoinette,\" Jack said, \"do you mind if I speak with Jacob?\"\n\n\"Hmm. Be careful, my love. The old snake has been missing quite a bit, since the incident. I am sure he is up to something.\"\n\n\"Yeah, agreed. Damien, back me up?\"\n\nDamien nodded. \"Fiona, can you--\"\n\n\"I'll take her,\" Jessy said. The Gangrel came up to join them, slipped an arm over his girlfriend's shoulders, and grinned down at her. \"Fiona and I haven't talked in ages.\"\n\n\"I saw ye at Bloodlust a week ago!\"\n\n\"Ages.\" Nodding, Jessy took Fiona with one arm, Eric with another, and guided them in the direction of Isabella. If Damien had to guess, Jessy was going to show Fiona off for her fellow Invictus. And based on the looks Isabella gave Fiona as they approached, it was working.\n\n\"Your girlfriend is gorgeous,\" Jack said, smiling at him as the two of them made their way toward Jacob.\n\n\"She is. I'm very lucky.\" He was tempted to compliment Antoinette as well, but it seemed pointless. They'd talked about her absurd beauty before, and considering how Antoinette was dressed, any compliment seemed almost like an insult. The Prince was beautiful, unnaturally so. The white hair, red eyes, and unusual... proportions, weren't natural. Bringing up her beauty always felt strange to him, as if broaching a subject the Prince might find offensive.\n\nShe certainly was beautiful, no doubt about that, like some mythical entity from a bygone era. But Damien preferred the very real, lovely Fiona, to the almost monolithic presence of the white-haired dragon.\n\n\"Think Isabella will recruit Fiona?\" Jack said.\n\n\"Potentially? I hadn't thought about it.\"\n\n\"Isabella's plays can get pretty sexual. And I'm sure she'd love to have a tiny, curvy redhead in her crew.\"\n\nA hint of something Damien had rarely felt, but instantly recognized, shot up his spine, hot and unwanted. Jealousy. It was not a sensation he was used to. Thoughts of Eric and Fiona being together before Damien was with her did spark the feeling, a little. Thinking of Isabella doing things to Fiona also sparked the feeling, and the feeling increased as he thought about the crafty Daeva manipulating his girlfriend.\n\n\"I trust Fiona,\" he said.\n\nJack laughed and shrugged. \"I didn't think it was a matter of trust, at least not Fiona's. Isabella, on the other hand... well, she is a Daeva, and I wouldn't put it past her to try a little Majesty on Fiona.\"",
        "That, Damien did not like the sound of. \"Do you think she'd be so horrible as to... slip Fiona some of her blood?\"\n\nHis friend winced at that. The power of the Vinculum was extreme, and they had no idea if the Begotten were immune to its effects. Since it could affect both kine and Kindred, Damien guessed it could affect anyone.\n\n\"Hard to say. I'd guess no, if only as a favor to us for killing the hunters who killed her student Barry.\"\n\nThat was true. Damien, Jack, and the witches were heroes in a sense. As much as the city's Kindred looked at them as if they were dangerous, they also looked at them with a mix of pride and wonder, too. Pride, because it was Kindred who defeated the enemy. Wonder, because it was Kindred they knew, who'd managed to defeat a deadly threat, deadly enough to enslave a Begotten and kill Julias Mire. No one in the city would have expected them to succeed in what looked like a suicide mission on the outside.\n\nThey were champions, according to the announcer. Or at least, Jack was, and the rest of them were the champion's guard. An accurate enough assessment, and enough of a title boast that Damien noticed several women were looking at him, women that had ignored him in the past. Which made him wonder if Fiona would feel jealousy like he did. Considering the amount of wine she was inhaling, if she did feel any jealousy, she might throw a punch before the night was done.\n\nThe image of little Fiona throwing a tiny fist at some Kindred's face, was strangely hilarious.\n\nThe two of them arrived at Jacob, who'd been rejoined by Aaron and Beatrice in the meantime. Jennifer was still taking S\u00e1ndor around the room, introducing him to Kindred without missing a single name as far as Damien could tell, save for the recently embraced. Impressive of her, to memorize so many names and titles.\n\nJack and Damien nodded to Triss and Aaron, they nodded in return, and Jack stepped up to Jacob.\n\n\"Jacob,\" Jack said, \"been looking to talk to you.\" Not the most respectful greeting Damien had ever heard, but it seemed fitting. Jacob didn't like pleasantries, or formalities.\n\nThe Nos smiled, an evil looking expression, and he ran his fingers back through his hair. \"Me? You're the hero of the night, Jack, you and the crew you took with you on your... excursion. Should be me looking to talk to you.\"\n\n\"You're the one who has Elen. You know damn well I'd be coming to talk about that.\"\n\n\"Touch\u00e9.\" Jacob raised his glass, didn't bother to wait for Jack to reciprocate, and took a sip. \"Don't you worry your pretty little head about it, Clarice.\"\n\nJack stepped in a little closer, until only a single foot separated the two men. \"I worry, Jacob.\"\n\nDamien looked between them, and found his hand reaching for his sword. His sword wasn't there. No one was allowed to carry arms in the Black Hall, and that was particularly problematic for Mekhet. Nosferatu and Daeva were quite strong, and Gangrel and Ventrue were tough as hell. Mekhet were neither. They used their speed and stuck to the shadows. Out in the open like this, he'd rely on a sword and gun, and without them, he felt naked.\n\nIf Jacob and Jack started fighting, it'd be chaos in seconds. Jacob could summon insane strength, maybe even greater than Jack's curse, and he could bestow literal nightmares on the Ventrue. Jack's curse could summon a legion of creatures to his aid, and could likely manifest endurance to match Jacob's strength. Jack could also attempt to Dominate the man. If he succeeded, that would be terrifying.\n\nSo Damien stood there, feeling terribly useless, but smart enough to keep watching and look for any detail that might be useful. Beatrice and Aaron had backed off, giving Jacob enough space to have his conversation, but close enough that they could jump in if something happened. Damien nodded to them, and they nodded to him, a bit of camaraderie forming. They'd all survived the same mission together. That had to be worth something, as far as trust was concerned.\n\n\"Elen is under my... protection,\" Jacob said, grinning into his drink as he sipped. \"Her flesh chamber has collapsed, since she hasn't been able to manage it, bound as I have her. And no hunters have even attempted to find her.\"\n\nJack frowned, and stayed where he was. It'd have been too close for comfort for Damien, to have someone standing this close to him, but Jacob didn't seem to notice, or care. \"She's ancient, Jacob. How is she even still alive?\"\n\n\"Her magic keeps her alive. She's done some interesting things to herself. She doesn't eat, doesn't sleep.\" He chuckled, and dipped his glass left and right until the blood swirled inside it. \"Pretty fucking disturbing shit, if I do say so myself.\"\n\nDamien smirked at that, for a second. Jacob calling anything disturbing, was disturbing.\n\n\"What do you plan to do with her?\" Jack asked.\n\n\"I plan the to enact the great ritual of Nunya.\"\n\nDamien blinked. \"Nunya?\"\n\nBefore Jacob could respond, Jack put up a hand and looked to Damien. \"Nunya business.\" Oh, a joke. Forever the trickster, and juvenile, deranged lunatic, was Jacob. Damien and Jack both rolled their eyes, before Jack continued. \"I felt something, when S\u00e1ndor broke the ritual. Something that felt familiar.\" Jacob smiled, but said nothing. \"You nearly let Triss die, so you could have a shot of stealing Elen? What, was that a plan? Something you've been cooking up since we learned about her? Pretty damn cold.\"\n\nBeatrice took a step toward them, but Jacob held up a hand, and she stepped back, frown growing.\n\n\"Cold, is it?\" The man shrugged as his smile went through twenty phases. Was he angry, sad, happy, furious, manic? It was impossible to tell. Damien tried, analyzed Jacob every chance he could, but the man was such a question mark, that Lucas had warned him about the Nosferatu on several occasions before his extended torpor, and several times again thereafter.\n\n\"Yes, it's cold. She could have died, Jacob.\"\n\n\"All my witches were there. One of those fucking dogs was there. This assassin-in-training,\" he gestured to Damien, \"was there. And let's not forget, the Strix curse was there.\" His grin grew until Damien thought his lips would split at the cheek. \"You know, that horrible abomination you willingly used? A dark, twisted thing that you've embraced? A very witchy-witch thing to do.\"\n\nJack snarled, and Damien found himself taking a step back. In the past, Jack snarling would have meant little. These days, it meant quite a bit.\n\n\"I haven't embraced it.\"\n\n\"Ha, sure you haven't.\" He took another sip, before he nodded in Elaine's direction. \"You know her?\"\n\nThat made Jack freeze. Damien raised a brow as he looked between the two men, and it was clear the Nos had said something to disturb Jack. The old man always knew what to say to get under a person's skin. Damien could only be content that Jacob never seemed interested in harassing him. Once, Jack had told Damien that Jacob had been interested in him, when he worked for Lucas. That interest had died when Lucas died. All the better.\n\n\"I don't know her.\"\n\n\"Sure you don't. You looked like you saw a ghost when she came in.\"\n\n\"I... don't know her.\"\n\nLaughing, Jacob sipped again, shrugged, and looked to Elaine. She'd rejoined Antoinette, apparently done with her conversation with Daniel, and the two of them chatted with the werewolf pack.\n\n\"I'll find out eventually, Jack. You know I will.\"\n\n\"I'd prefer if you just stayed out of it.\"\n\nWith that, Jacob stepped close, until only six inches separated him from the small Ventrue. It was enough to stir Beatrice and Aaron a step closer, but they calmed when Jack didn't move.\n\n\"Then let's make a deal.\"\n\nJack frowned, but remained where he was. \"What deal?\"\n\n\"Don't interfere with me and mine, and I won't interfere with you and yours.\"\n\n\"Interfere with me? What could--\"\n\nJacob leaned in until he was almost kissing Jack, and he chuckled. \"Think about it.\"\n\nThat time, Jack did back away a little, and he looked to Damien through the corner of his eye. Which was a mistake, because it let Jacob know they had an inkling of what he meant, but it was a mistake anyone would have made.\n\n\"Jacob... we're all on the same team, right?\" Jack said.\n\nThe elder grinned his usual, crazy grin, shrugged, and stepped back. \"I think we are. Sometimes, I don't know. Maybe that's a problem that needs fixing.\"\n\n\"That you don't know?\"\n\n\"That we might be on the same team.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\n\"I cannot tell if I like her or not,\" Elaine said, rejoining Antoinette. She gestured to the wolf woman the two of them had finished speaking with, moments before.\n\n\"Avery? She is... difficult to deal with, I admit. Less so than Simon, though.\"\n\nElaine nodded as she stood shoulder to shoulder with her, sipped her blood, and looked out at the crowd. The two of them stood in the center of the ballroom floor, and while the crowd gave them their space, people had begun to enjoy themselves to the point they no longer avoided them due to their Beasts' fear. By the end of the ball, perhaps her Kindred would no longer avoid her at all, drunk on blood and desire.\n\nShe grinned subtly at the thought. No, her city would never fully be comfortable with her, both due to her altered body, but also due to her position. She was the Prince. This was her city. Such was the way of things.\n\n\"Daniel,\" Elaine continued, \"seems to be... interested, in Athalia.\"\n\nAntoinette looked past her friend to her sheriff, who stood in a corner with the Begotten, and her childe Samantha.\n\n\"Yes, I fear he is, old friend.\"\n\n\"A shame. I would very much like to crack that cold exterior of his.\"\n\n\"You have known my sheriff for centuries, and have made no progress. Why pursue him so?\"\n\nShe tapped a finger against her chin, looked over her shoulder, and let out a quiet sigh as she looked at the man. \"I am not sure, honestly. I cannot help but sense much sadness in him, and I would very much like to warm him.\"\n\nAntoinette doubted that was all there was to it. Elaine, like many women, craved what they could not have.\n\n\"There has been much sadness in his life, but with the return of his childe, a grain of joy has been found. That joy is perhaps the only reason he speaks to Athalia.\" Antoinette sipped her own blood, and lightly traced a finger along her old friend's beautiful shoulder. \"Could you not have worn something less brazen?\"\n\n\"I am more covered than you.\"\n\n\"You cannot see through my clothes.\"\n\nShe shrugged. \"And you cannot see through mine, unless you stare.\"\n\nAntoinette laughed at her friend's knowing grin, and looked around. People were staring. Many had never seen Elaine before, and were obviously enraptured with her beauty. Antoinette could not blame them.\n\n\"You knew very well my love would gawk, from what I told you. Poor Jack has not been able to stop looking at you.\"\n\n\"That is your own fault, for planting images in his head.\" She sipped her drink, and looked to the boy as she did, currently conversing with Jacob. \"I admit, he is very handsome. And the way he squirms is... very... appealing.\" She licked her lips, sipped again, and kept her eyes on Jack as she swayed gently with the music. \"I did not expect the intensity in his eyes, the sheer openness of them. But after seeing his mother, I can see where his eyes came from.\"\n\nAntoinette nodded, but her eyes lingered on Jack and Jacob. While it brought her limitless discomfort to see the old snake talking with her lover, she trusted Jack. He had proven capable of managing the curse, at least to some extent, and he was proving intelligent enough to handle scenarios she would never have trusted a neonate to handle. Speaking with Jacob, an elder, someone no neonate would willingly speak with, was something Jack was equipped to handle, intellectually, and now thanks to the curse, in power.\n\n\"He knows something,\" Elaine said.\n\n\"Oui, that he does. But I do not know what. My love said he would tell us though, and I trust him.\" It did have her mind running in circles trying to predict what that knowledge would be, however. He had looked upon Elaine with the awe and lust Antoinette had expected to see, that she had helped create with her stories, but he had also looked at her with the shock of someone surprised. For the second life of her, she could not figure out why.\n\n\"He leaves us in suspense.\"\n\n\"That he does.\"\n\nElaine giggled, and looked back to her as she sipped her drink. \"A man after my own heart.\"\n\n\"Then I regret to inform you, that he is taken.\"\n\nThey laughed. It was a strange, silly discussion, talking over a man like young girls. To the Ordo, little meant more than the mastery of their coils, and talk of romance was largely discarded once they reached their ancilla years, let alone into their elder years. She had not spoken with Elaine like this since she had sired Tony, so long ago, blurry memories she could not recall beyond vague notions. It sent a joyful chuckle through her, to once again be talking of something as simple, juvenile, and yet as all powerful, as love.\n\nShe guided Elaine toward one cluster of Kindred she looked forward to speaking to.\n\n\"Miss Leauvion,\" Antoinette said with a nod to Isabella. \"Attempting to recruit Miss Young into your troupe?\"\n\nThe Daeva smiled at her, a fake and pompous thing, but well crafted and seamless. Such a gorgeous creature, Isabella, with her long dark blonde hair, sharp features, above average height, and piercing blue gaze. She did not look dissimilar to Elaine, though Elaine, a touch taller, wore her hair free instead of in ponytails, and had brown eyes.\n\nA tiny flicker in Isabella's eyes betrayed her, a glance at Antoinette's bust and corset that clearly dwarfed her own. A petty thing, for Antoinette to enjoy a grain of pride and ego in that moment, but she did. The men about clearly looked at each other in a similar manner, and not-so-subtly analyzed physiques to see who had the broader shoulders and flatter stomach. Such was life, and unlife, an unending game of comparing the self to others.\n\nIf Isabella devoted herself more to the future of the Invictus, instead of her own pursuits and obsessions, as many Daeva did, she would no doubt have risen in the ranks of her covenant. But no, she spent her days mastering the art of acting, teaching her troupe to act, and by large, she had succeeded. Her plays were held in high regard, but were ultimately of zero use to the Invictus. The arts would never earn the income of a corporation brought to its knees by blackmail, or insider trading, tools the Invictus often used.\n\n\"She is beautiful,\" Isabella said, smiling at Fiona and earning a loud giggle from the intoxicated redhead. \"But I do not believe she holds the... discipline, to be an actress.\"\n\nJessy snorted on a laugh. \"You mean she probably can't memorize lines.\"\n\nLittle Fiona's eyes set into a hard glare, and she took a weak swing at Jessy. The vampire let her, and Fiona's fist bounced harmlessly off Jessy's arm, while Fiona simultaneously spilled some of her wine from her other glass.\n\n\"I can memorize lines!\"\n\n\"You couldn't memorize a menu.\"\n\n\"I... I...\" Suddenly, the tiny girl started to weep. Not a loud sob, but tiny sniffles. \"Yer right! I couldnae! I tried, but they had to let me go. Fired!\"\n\nJessy blinked at her, before leaning in and hooking her arm over the woman's shoulders. \"Ok, guess I was a bit on the nose there. Don't worry about it. You don't want to work for this bitch anyway.\"\n\n\"I beg your pardon?\" Isabella scoffed, and looked to her lover Hella beside her. \"Can you believe this?\"\n\nHella offered her lover some silent condolences, and Antoinette turned her attention to the nearby hunters. They were surrounded by Isabella's troupe, a group of beautiful young Invictus Kindred, and things were quickly growing sexual. They had stepped quite close to the hunters, and the female Kindred were not only touching them with roaming hands, they were exposing their legs and breasts in subtle, flirting displays. Predictable, considering Isabella and her proclivities, but Antoinette did not mind. In truth, she had hoped for this, that the Kindred would approach the hunters with aim to seduce.\n\nIf hunters could come to Dolareido, leave Dolareido, and spread word that the city was to be ignored by their ilk, it could save her great trials in the future, especially after so many died under Jack's hand.\n\nThe small group of Kindred surrounding the hunters stepped aside when Antoinette and Elaine approached. The hunters had seen her dress already, but not Elaine's, and the three of them looked to the elder Ventrue for several moments, jaw's dropping, before looking to the Prince. The two men did their best to hide their growing erections.\n\n\"Harcourt, LeBlanc, Hemmer, I trust you are enjoying yourselves?\"\n\n\"Um, y-yes Prince,\" Harcourt said. The man may have been a strange, overt, and silly individual, but he had courage.\n\nElaine grinned at them as she sipped from her glass. \"But you have not tasted the wine.\" Before Harcourt could respond, she flicked her hand upward in dismissal. \"We can smell the lack of alcohol on your breaths.\"\n\n\"Um... well, we thought... maybe it wasn't a good idea to get drunk in a room filled with vampires and werewolves and monsters?\"\n\n\"Nonsense.\" Antoinette snapped her fingers, and several servants joined them immediately. One of them had wine, and she dismissed the other two, before motioning the final servant, a waitress, toward the hunters. \"Your lives are in no danger, and you are to be rewarded for your aid in defeating Jeremiah and Angela.\"\n\nThe woman, Marge, stepped up beside her friend. With a slow, trembling hand, she took a glass of the wine.\n\n\"Thank you. B-But, you can understand why we're so... scared, right? We're still your prisoners.\" With a trembling hand, she raised the glass, and took a cautious sip. \"The three of us, we're vampire hunters. We're all very aware of the things you can do to us with a glance, or a drop of blood.\"\n\nMarge was a beautiful woman, a touch short with a lean, almost skinny physique. Her curly brown hair reached her shoulders, and her brown eyes stared at Antoinette as she sipped her wine. A black woman, with light skin and pink lips. To think of her as a vampire hunter was difficult. She looked more an innocent doe than a hunter. Perhaps that was part of her hunting tactics, to feign weakness, before striking.\n\nDennis, a white man with short blonde hair and green eyes, took a glass as well, and sniffed it several times. The fool must have known sniffing wine would never discover tampering, but he did anyway. He was taller than Harcourt, bigger, and while Harcourt was an attractive man, it was clear some of the women nearby with similar tastes to Jessy, were looking to Dennis. Though, a glance Jessy's way showed the Gangrel was looking at Marge, more than the men.\n\n\"You have my promise that no harm will come to you,\" Antoinette said, and she spoke a touch louder so those nearby could hear over the music. \"Any who attempt to place you under the Vinculum will quickly find themselves witnessing a sunrise.\"\n\nThat earned at least a small bit of trust from the hunters, and the three of them took another sip of their new drinks, though none of them looked down when they did, eyes up, scanning.\n\n\"Still can't believe you're really letting us be here,\" Harcourt said.\n\n\"Forever a visionary, the Prince,\" Elaine said. \"Be happy your bosses met their end in Dolareido. I have lived in cities where your corpses would be left for the crows. But here in Dolareido, my lovely friend insists on peace where she can find it.\"\n\nAntoinette rolled her eyes, but her smile remained. Elaine did love to joust with her, and she enjoyed the game.\n\n\"If and when I decide to let our three hunters leave the city, their opinions of Dolareido will have changed.\"",
        "\"I don't think we'll give up our jobs,\" Harcourt said. Fear was in his face. It terrified him to admit that truth, but he knew very well she had discerned it on her own.\n\n\"I do not expect you to,\" she said. \"But, in the future, perhaps you will consider the reality that not all Kindred so blindly give into their hungers? Not all paranormal creatures willfully listen to the call of their inner monsters.\"\n\nIsabella, her troupe, Jessy, Fiona, and Eric all stood nearby, all looking at her, all listening. She had not meant to give a speech per say, but there it was.\n\n\"I... think we can agree to that,\" Marge said. \"We've all had dealings with friendly vamps before. Just, usually, while surrounded by not-so-friendly vamps.\"\n\n\"Ha.\" Jessy laughed, and took a step closer, taking Fiona and Eric in with her. \"We're all friendly in Dolareido. Well, except for eyeless over there.\" She pointed over her shoulder with a thumb toward Jacob, who still spoke with Jack and Damien. \"And maybe her.\" Again, she made the gesture, this time for Maria. \"But, yeah, considering the situation your bosses had you in, we're all pretty damn happy with the three of you. You especially, Harcourt.\"\n\n\"I got a lot of people killed,\" the man said, voice heavy.\n\n\"Yea but, from what I hear, it was a shitty situation that would have ended a lot worse if you didn't do something.\" Shrugging, she nodded in Isabella's direction, then in the direction of the Carthians, the witches, the werewolves, then in the direction of the rest of the Invictus. \"You guys are welcome at the party, so get partying! Get drunk, get laid, get Kissed. These whores here will make sure you're all well taken care of.\" She gestured to Isabella's actors, who only smiled at the playful insult.\n\nAntoinette suppressed her urge to groan at Jessy's brazen words, but it was not as if the woman was incorrect. A glance around showed that the ball was going, quite predictably, in a sexual direction. While she had originally doubted the paranormals would actively engage in sex in her ball, she had not put a ban on such an activity. That tantalizing possibility drew many Kindred toward the thralls and ghouls, with obvious intent to render them catatonic in sexual bliss, only to be taken back to their lair to be thoroughly ravaged. Tonight, it would not have surprised the Prince if the kine were ravaged here instead.\n\nShe grinned as she noticed Harcourt gulp. Yes, his eyes had begun to look past the Kindred that currently surrounded him, and out to the rest of the ball, where the creatures of the night were beginning to give into their more appealing natures.\n\nMany of the female kine's dresses no longer covered their breasts. Dresses had been pulled down, revealing bosoms of all sizes, bare and beautiful. Skirts had been pulled aside, and panties removed, giving free access to their smooth, wet slits. Not far from Antoinette and the group around her, one woman had a set of fangs in her neck as a man hugged her from behind, and fingered her, earning tiny squeaks of desperation and pleasure. Not far from her, was another female kine, and this one had been stripped bare, not a shred of clothes left on her save for her cute heels. Two men and two women surrounded her, Kindred, and all four of them had their hands on her, massaging, kneading, prying, opening, fingering.\n\nOn the other side of the ballroom, where some tables were adorned with trays and glasses, a male lay on his back. His shirt was open to reveal his chest, and one Kindred leaned over it to both kiss and Kiss his muscles. Another Kindred, a woman, stood between the man's legs, and had the kine's shaft in her hand, through the man's boxers. Judging by the small trail of blood on the corner of her mouth, she had already fed, and was eager to see the kine orgasm as her friend also partook.\n\nNot far from them, another male kine was in the same position, lain upon a table. Two women were Kissing him, each draining the man slowly, with obvious intent to milk his pleasure, and their own. Another Kindred stood between his legs, and was letting her impressive bust devour the man's length. She had pulled the black straps of her dress apart to reveal her breasts, though Antoinette could see she had yet to feed. She was waiting for her turn, and would likely have her chest coated in cum before it was. Naturally, after having been dismissed by Isabella earlier, Othello was enjoying his ghoul's touch, and sharing her with one of the female Kindred as well.\n\nFor all this blatant sexuality, it was witnessing the Uratha involve themselves that earned a smile from Antoinette. Avery's attempt to communicate with Jacob had been doomed to failure, but that did not stop her pack from integrating themselves with the rest of the Kindred. Mason and Tilly were enjoying themselves, chatting and laughing, and from the body language, Antoinette expected the man to be inside his girlfriend within the next fifteen minutes, likely pinning her to a wall while she Kissed him. Natasha, sweet Natasha, stood with her boyfriends, and while she was trying to talk, the two men were touching her. The balance of frustration and enjoyment on her face was delightful.\n\nThe werewolf Brianna stood with a man, and--no, two men, both Kindred. Surprising. Antoinette knew them, Invictus neonates about to enter their ancilla years, a Ventrue and a Gangrel. Both of them were close to her, quite close, enough for chests to be touching her shoulders, and for the two of them to have their lips to her neck. The Ventrue had a hand pressing against the front of her long skirt, fondling and caressing through it against her panties, and the Gangrel was hugged from behind with one hand, while his other hand fondled one of her breasts through the lacy dress. The only reason they had not removed the dress from the drunk, and clearly excited werewolf, was that her dress covered her shoulder to ankle. Mostly see-through, with only a few coiling bits of solid black to hide her nipples and underwear, the dress was ultimately too thin a fabric to prevent thirsting Kindred from indulging themselves with her body.\n\nOnce they sank their fangs into her, they would have to hold her up to keep her from falling in orgasm.\n\nMore of the Uratha mingled with the Kindred. Carter spoke with several female Kindred, young things that were clearly intrigued by the man's older looks. One of them was quite content to press her breasts into his arm, and the other looked to be quietly begging for the man to lower his neck, so she could Kiss him. Her hand massaged the erection Antoinette could see pressing against his pants. Caleb was in a kissing match with a very fiery woman Kindred, and his hands were kneading her ass with abandon. Noah was doing his best to fend off the advances of literally five women, though as their attentions grew more and more blatant and erotic, Antoinette could see the rising hunger in the werewolf's face. Erica and a Carthian were also engaged in a rather passionate kiss, and grinding their bodies against each other against the side of the stairway. Judging from where their hands were going, they would be the first to charge past foreplay and into actual sex.\n\nAntoinette gestured to Harcourt, and then to the scene around them. The hunters, finally noticing the extreme eroticism that surrounded them, each downed their drinks, and reached for seconds. Fiona giggled and reached for a drink to do the same, eyes scanning the sexual wonders around her, but a small slap on the hand from her Gangrel friend stopped her.\n\n\"Ha, I know, right?\" Jessy said to the hunters, while simultaneously holding off Fiona's advancing, fist-throwing body with a hand to the small woman's forehead, arm stretched out. \"I--Samantha!\" Jessy abandoned Eric and Fiona, and slid over to grab Samantha's hand as the woman approached. \"Girl, can't believe you did that.\"\n\nAshley and Julee, no longer needed as guard for Samantha, rejoined Antoinette.\n\n\"Did what?\" Samantha said, though as she said it, her eyes looked around in shock at the sexual displays. Her gaze lingered on Brianna especially, as the woman, still being fondled and stroked through her dress, quickly approached orgasm, judging from the embarrassed expression on her face, and the hanging jaw.\n\n\"Forgave Athalia.\"\n\n\"Well, I... um...\"\n\n\"Miss Herrington,\" Antoinette said, with a hint of ice in her voice, \"do not broach such personal subjects with my childe so freely.\"\n\nJessy winced as she realized her mistake. \"Ah, right. Sorry.\"\n\nWith an annoyed sigh, Antoinette looked over her shoulder to Athalia. She remained with Daniel, and likely would continue to do so until she left; he was the only one at the party she knew, that she did not despise. It was too much to hope that the woman would socialize and enjoy herself tonight, not after losing her daughter a mere four nights past. But, she was speaking with Daniel, and he with her. That alone was a surprising step.\n\nJack approached, Damien behind him, their conversation with Jacob done. Aaron joined the old Nosferatu, while Beatrice rejoined Jennifer as she continued to walk S\u00e1ndor around the ball. They talked with the Carthians, Garry mostly, and they spoke with some Invictus; it was more accurate to say that Jen spoke. Beatrice seemed largely disinterested with speaking with others, except for perhaps a few short exchanges with her old covenant leader. S\u00e1ndor seemed largely disinterested with speaking with anyone at all. Watching the young Ventrue try and break the Begotten made Antoinette smile, as she made the inevitable comparison to Elaine and Daniel. Elaine's efforts with Daniel had proved fruitless over the decades, but perhaps Jennifer's efforts would find better results.\n\n\"Prince,\" Jack said, returned. He nodded to everyone, and his smile grew as he stepped up to his mother. \"Mom. Glad things worked out.\"\n\n\"I told you they would.\"\n\nThe boy's smile faltered for a moment. Undoubtedly, he was struggling to suppress his natural desire to argue, analyze, and bombard his mother with irrefutable facts that proved his point. But the boy had grown wisdom, and decided to not pursue his overwhelming urge to debate. Later, Antoinette would entertain his need to do so, and let the boy vent.\n\n\"I'm glad you were right.\"\n\nWith a happy smile, Samantha hugged her son, gasped, and looked past Jack to some of the sexual sights beyond.\n\n\"Jack, cover your eyes!\"\n\nHe raised a brow, looked behind him, and before he could say anything, Jessy roared with laughter. Poor, sweet Samantha, attempting to hide her son from the sexual feast around her.\n\n\"Lass,\" Fiona said, accent far thicker than before, \"yer wee lad fucks three lassies almost every night, ye ken?\"\n\nJack, Eric, Damien, and Jessy laughed more, some others groaned, and before Fiona could continue, Damien took her hand, and pulled her away from the group. From the look on his face, he was not upset with her, but a sympathetic look from him for Jack made it clear he was doing his friend a favor.\n\n\"I'm going to pretend I didn't hear that,\" Samantha said with a nod.\n\nElaine laughed, a hearty sound that had everyone smiling. \"Come now, young Daeva. Embrace the pleasures around you. Your enemy is defeated, and food is in excess. What possible reason could you not have to indulge yourself?\"\n\n\"I... I'm not sure I'm ready to indulge myself, like that.\"\n\n\"And,\" Jack said, \"I'm not entirely sure I'm ready to see my mom indulge like that. We can at least wait until the party's over?\"\n\nAntoinette smiled down at her lover, leaned in, and set a kiss on his forehead. \"A reasonable request.\"\n\n\"And... um.\" Samantha scratched her arm several times as she cast her gaze past them, to the eyeless Nosferatu standing with Aaron. \"Can Natasha show me around again, sire?\" Yes, Natasha had not shown many to Samantha, before Athalia arrived and interrupted.\n\nIt took effort to keep the frown off her face. \"Yes, I am sure she will. Go speak with her, before she vanishes into the night to be with her lovers.\" A momentary trade of eyes between her and her childe made it clear what she thought of Samantha's intent. Speaking with Jacob was not an intelligent idea, but the current venue was one of the better ones, if the foolish girl insisted on such a dangerous game.\n\nSamantha nodded her head to her, pat Jack on the arm once, and walked toward the pack of wolves, where Natasha stood near Avery, Clara, Matthew, and Arturo.\n\nJack watched after her, sighed, rolled his eyes, and looked to the hunters. \"I hope you three can enjoy the party, after the shit that's happened.\"\n\n\"Ch'yeah,\" Harcourt said. \"I mean, before, I definitely would have said no. But, after getting to meet a bunch of you, and... well, getting to meet her,\" he gestured toward Samantha, \"I can... relax a little more.\" As if to seal his point, he downed his second drink.\n\nJack smiled at them, and Antoinette watched the tension in his shoulders fade. Forever her Jack concerned himself with the reactions of others now. No doubt her assault on Mark in her tower likely weighed on his mind, and the possible ramifications it would have with Azamel. And, as much as the night was meant for celebration, to relax, enjoy, and bask in the feast, the boy looked left and right constantly to take stock of the situation. But, as the night went on, and not only did the Kindred succumb to their sexual hungers, but the Uratha did as well, she could see the stress on her lover ease. He was slowly abandoning his role as peace maker, for the night at least.\n\nThe stress returned, when he looked to Elaine.\n\n\"Jack,\" Antoinette said, \"the ball goes well. I believe that, perhaps now would be a good moment to speak to Elaine and I, of what you wished to speak of?\" And, it would be good to distract him before he interfered with his mother's intent. Antoinette did not agree with Samantha's actions, but would not stop her, either.\n\nHe looked up at her, met her gaze for several moments, searching, before nodding. \"Sure. Is... there somewhere private we can talk?\" There was hesitation in his words. He would have preferred to have this conversation later, but she ached to know what secret her lover hid from her. One did not need to be a Mekhet to be lured by the promise of knowledge.\n\n\"I believe the roof will suffice. Coming, Elaine?\"\n\n\"Of course.\" Elaine smiled, her usual, confident, but analyzing smile. A Ventrue smile.\n\nAntoinette guided the two Ventrue through the crowd, though truthfully, the crowd parted for them. Those in the throes of passion were far too lost to acknowledge her presence though, and did not move from their perches; she did not mind. She smiled at them as she walked past, and let her eyes rest on Brianna for a moment longer than the others. The two men had finally begun to truly Kiss her, each taking one side of her dark neck, while rubbing her clitoris through her skirt. The effect was pronounced. The werewolf's moan was quiet, and almost lost to the music, but her quivering legs were far more obvious, and the two Kindred held her close to keep her from falling.\n\nThe Gangrel lifted her long skirt. She did not stop him. Soon, the fabric was pulled up to her hip, exposing her long, dark legs, and the tiny black panties she wore underneath the mostly see-through dress. The man slipped his fingers underneath the underwear, and began to finger the woman in earnest, earning some rumbling groans from the Uratha that sounded far more wolfish than human. Such a delectable display. Were it not for the kine being treated to similar pleasure around her, Antoinette doubted the werewolf would have let the two vampires feast upon her, let alone feast while fondling, caressing, and fingering. Brianna was blending in.\n\nBetter still, was how the other Uratha did not seem disturbed by this. They had expected it. Their integration with Dolareido was complete, more or less, and while Antoinette did not appreciate them sticking their long noses into her business or her city's business, she had to admit, they had their value.\n\nUp the stairs, and past the band, she guided the two Ventrue to a third stairway, something far less luxurious and lavish. Up and up it went, until a door opened onto the roof of the Black Hall.\n\nThe Black Hall was not a terribly tall build. Quite wide, its ballroom its single purpose. And she had insured no towering skyscrapers stood too near, allowing for the building to stand beautiful in its surroundings. It certainly did not carry the power and imposing demeanor of her grand Elysium Tower, but it was beautiful.\n\nJack walked to the railing, nearly waist high, thick and ornate marble with curving surfaces. He looked out to the city streets for a moment before turning his back to it as he folded his arms across his chest. Where Antoinette had expected to find a smile on Jack's face, as the looming possibility of seeing Elaine naked drew near, she instead found neutrality, and perhaps a touch of concern. Even anger.\n\n\"Jack,\" Antoinette said, standing next to her friend, \"what is it?\"\n\nThe boy looked at her for only moments, before his eyes settled on Elaine. Again, where Antoinette had expected to have thoroughly corrupted her lover's thoughts, so that he could think of nothing else except for her and her friend nude, she instead found something else entirely in his gaze. His eyes were locked onto his old friend's eyes, as if battling her.\n\n\"How much do you know about Elaine?\" Jack said, asking her, but gaze locked onto the elder Ventrue.\n\n\"I... have known Elaine for centuries. She is a fellow dragon, and we have shared in our experiments, our secrets, and more.\"\n\nWith a slow, heavy sigh, Elaine's unending, confident smile faded, and she looked down. \"How did you find out?\"\n\nWhat? Antoinette snapped her head back to look to her love, then to Elaine, but said nothing. It appeared she was the ignorant one in this exchange.\n\n\"Before I broke the curse free of its seal, it showed me things. It showed me... shadows of memories, of things my sires experienced, before they embraced their childe. I saw things Julias did before embracing me. I saw things Viktor did, before embracing Julias. And I saw things Viktor's sire did, before she embraced him. A whore in the streets of England, playing her games, until she found someone she...\" He shrugged, and rubbed his head as he looked down. Much as he was trying to sound confident, it was apparent the conversation was painful for him. \"And, I can remember Susanna, my great, great grandsire, embracing--\"\n\n\"Elaine,\" Antoinette finished for him. She took a small step back from her old friend, and squinted her eyes at the woman.\n\nElaine let out a long, sad sigh, looked up, and offered her a small smile. \"I guess my secret is out, Ann.\" Slowly, she looked to Jack, and the small smile remained. \"Hello, my dear great grandchilde. I am... glad, that the curse has not undone you, as it nearly did me.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "suspense",
        "mystery",
        "vampire",
        "werewolf",
        "romance",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-22"
}