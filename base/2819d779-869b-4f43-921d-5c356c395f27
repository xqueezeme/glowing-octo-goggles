{
    "title": "Becoming Who We Are Ch. 06",
    "pages": [
        "Copyright \u00a9 2021 to the author\n\n**\n\nLuke sat in his room, the place he spent most of his free time these days. He looked idly around the small room and his gaze fell on an old photograph on his dresser. In it, his mother smiled into the camera as she held John and himself on her lap. On the bottom, she had written, \"Myself and the twins (6 months).\" He wondered, not for the first time, why his mother had turned into such a virulent virago, to use one of Mrs. Garcia's recent vocabulary words.\n\nSomeone tapped on his door.\n\n\"Come in.\"\n\nThe door opened and Mark poked his head inside Luke's room.\n\n\"Got a minute?\"\n\n\"Sure.\"\n\nMark walked in, clad in their father's tuxedo, the bow tie hanging loose.\n\n\"Whoa! Look at you! Where are you going?\"\n\nMark grinned.\n\n\"I'm taking Melina to Homecoming.\"\n\nLuke grinned back.\n\n\"That's great.\"\n\n\"Yeah. Anyway, could you help me with the tie? I've been trying to do it in the mirror, and I just can't get it.\"\n\n\"Sure.\"\n\nLuke hopped off his bed and stood before his brother. He frowned with concentration as he worked at achieving a perfect knot.\n\n\"How's that?\"\n\nMark turned around and looked in the tiny mirror above Luke's dresser.\n\n\"Looks okay from here. What do you think?\"\n\nLuke surveyed his brother critically. He could find no flaw. The tux might have stretched slightly across his shoulders, but otherwise Mark looked as though he were about to intone, \"Bond. James Bond,\" to a beautiful blonde.\n\n\"Perfect.\"\n\nMark smiled.\n\n\"Thanks, bro. Well, it's time to pick her up. Wish me luck?\"\n\n\"You don't need luck. You always have good luck. I wish you success, though.\"\n\n\"Thanks.\"\n\nMark turned on one well-polished heel and walked out of the room, his step light and springy. Luke listened to him run down the stairs. He gently shut his bedroom door and lay back on the bed.\n\nWhile one part of his mind wished Mark well, another envied him. He looked so good in the tux, and Melina was so smart and pretty. It just wasn't fair. Why did his brothers have to have all the talent and looks in the family? Maybe if he had a handsome face and quick wit, his mother would love him too. But that would never happen. He would never be as good as his brother. He would never be anything but trash.\n\nAfter Mark rang the doorbell, he heard thundering footfalls as someone -- he devoutly hoped it was not his date -- ran down the stairs to answer the door.\n\n\"Good evening, Colonel,\" Mark said formally. \"I've come to pick up Melina.\"\n\n\"Come on in,\" Col. Taylor said, smiling. The boy certainly looked well in a tux. He wondered fleetingly if he should suggest that Mark think about applying to West Point. As the two walked up the stairs, the colonel shook his head. Did he have to consider every kid he met as a potential cadet? Ah, well. Once a Pointer, always a Pointer.\n\n\"My daughter's not quite ready yet,\" the colonel said. He didn't add, \"You know how women are,\" but the sentiment hung in the air nonetheless. \"You might as well wait in the living room. Is that her corsage? Good choice. She loves roses. Well, I'll go let her know you're here.\" The colonel strode from the room as if off to a war briefing.\n\nHe stopped at the bathroom, hearing feminine laughter. He tapped at the door.\n\n\"Honey? Mark's here.\"\n\n\"Thanks, Dad. Tell him I'll be right out. Mom's doing something to my hair.\"\n\nHe shook his head, but grinned. It seemed all too recent that she had run to him with scraped knees and a bloody nose from a fight with a bully. He wished Julie was here, then suddenly wondered if Julie would like seeing her younger sister all dolled up. Julie had preferred herself in the starring role. He shrugged. Kids grew up.\n\n\"She said to tell you she'll be out in a minute,\" he relayed to Mark. The boy turned his head from the books he was examining and grinned at the colonel, who returned the smile. \"Ever read any of those?\"\n\n\"No, sir,\" Mark said. \"Military history and languages have never been my strong points. I speak enough Mandarin and Cantonese to get by at the restaurant, but my father and my brother are the linguists in the family, especially my brother. He can pick up anything. I think he's on his fifth language now. German.\"\n\n\"What others does he know? Besides English, of course.\"\n\n\"Mandarin and Spanish. He knows some Cantonese, but he's not fluent.\"\n\n\"Good picks, all of them,\" the colonel said heartily. \"If I had it to do over again, I would have learned Spanish and Chinese, not French and Italian.\"\n\n\"How come?\"\n\n\"They're the languages of the future. China's a bud ready to blossom and you can't ignore the importance of Spanish. I did use my French in Vietnam, though.\"\n\n\"Were you in the war?\"\n\n\"Yes. It's the most beautiful country I've ever seen. I just wish I could have seen it under different circumstances. We're still paying the price for our involvement there, you know. Too many veterans have never gotten over what happened to them there. I'm one of the lucky ones. I went over fresh out of West Point, a clich\u00e9 of a second lieutenant: idealistic, excited and arrogant. I never stopped to think how scary a real war would be.\"\n\nThe click-click of heels caused both their heads to turn. Melina stood in the doorway, letting them take in the sight of her swept-up hair, her royal blue sheath, and impeccable make-up, then walked slowly into the room and turned like a runway model.\n\n\"Wow! Honey, you look stunning!\" her father said. \"Doesn't she, Mark?\"\n\nMark could hardly speak, his mouth felt so dry. 'Stunning' barely covered it, in his opinion. He felt his mouth hanging open, and closed it. Both of the Taylor women noted this with smug satisfaction.\n\n\"You will definitely turn the head of every guy at Homecoming,\" he finally said. \"I can't believe how beautiful you look. I mean, not that you aren't beautiful at other times, but, wow.\"\n\n\"Son,\" the colonel said, \"it would be good if you kept quiet until you get your bearings back. Now let's get this corsage pinned on. Here you go, Katie.\"\n\nMrs. Taylor beamed at Mark.\n\n\"What an elegant corsage,\" she said. \"Red roses, baby's breath -- I see it matches the rose in your lapel. It'll look terrific on Mel's dress. Come here, honey, and let me put it on your shoulder.\"\n\n\"I'll just go get the camera,\" her husband said.\n\n\"Oh, no, dad, not the camera!\" Melina said, alarm in her eyes. \"You'll make a Hollywood production out of this.\"\n\n\"I promise to keep it simple,\" he lied.\n\nTwenty minutes later, the two escaped from the house feeling like felons who had just made a jailbreak.\n\n\"Your dad's really into photography, isn't he?\"\n\n\"Sorry. He always used to do that with Julie. I don't know why I didn't see it coming and hide his equipment.\"\n\n\"He seemed to know what he was doing, though. Do you think he'd let me have any of the prints if they come out?\"\n\n\"You'll be lucky if he doesn't come to your house and force them on you.\" She paused as he unlocked his mother's Lincoln. \"Do I really look okay?\" she asked.\n\n\"More than okay. In fact, you'd better drive. I'll probably crash us into a tree because I won't be able to keep my eyes on the road.\"\n\n\"Flatterer.\" She looked pleased.\n\nBy the time they reached the dance, the gym was as crowded and hot as only a room containing several hundred young people with robust hormones can be.\n\n\"Man, it's packed,\" Mark said, surveying the tables of laughing kids and gyrating dancers. \"I didn't realize so many people went to White Rose High.\"\n\nAs several heads turned to inspect the new arrivals, Melina felt a surge of nervousness. She firmly suppressed it. A statuesque black girl wearing a clinging, shimmering white dress approached them. She smiled, and they realized they knew her.\n\n\"Oh my gosh,\" Melina shrieked above the din. \"Lakeesha! You look perfect!\"\n\n\"So do you! That dress looks way better now than it did on the hanger! And Mark! You aren't exactly hard on the eyes either! I was going ask you to sit with Evan and me, but you're looking so good, he might get jealous.\"\n\nShe gave him a saucy wink, and he grinned. What an outrageous flirt. He felt perfectly happy with his date, but he felt a pang of envy for Evan.\n\n\"I might be jealous of him,\" he responded. \"You look like a goddess, and I bet you would never let him out of the house unless he looked equally god-like.\"\n\nLakeesha put her hands on her hips and shook her head at him.\n\n\"Melina, I can see this boy's going to have a tendency to get out of line. You'd better sit with us, just so Evan can knock some sense into him if Mark needs it. C'mon.\"\n\nThey followed their friend through the crowd to a table at the far end of the gym. They saw Evan deep in discussion with a couple they did not know. All three looked up when Lakeesha appeared -- her dress had that effect. Evan grinned, then saw the others.\n\n\"Hey, who's this? The kung fu warrior and his beautiful lady?\" He gave Melina the once-over and winked. She winked back, already liking him. \"And I do mean beautiful. You give Lakeesha some serious competition for queen of the table.\"\n\n\"Queen of the table?\" Lakeesha said in mock outrage. \"Queen of the table? Don't you mean queen of the world?\"\n\n\"You always aim so high, darling,' Evan replied, leaning forward to kiss her. \"That's why I love you.\"\n\n\"Get a room!\" the other boy told them. He looked at the new arrivals. \"Hi. I'm Darryl and this is Rebecca. She goes to Sacred Heart.\"\n\nRebecca nodded at them, a little shyly, Melina thought. She wore a backless magenta dress that set off her deep brown skin. Darryl looked cool and handsome in his dinner jacket and kente cloth cummerbund.\n\n\"Hi, Rebecca. I'm Melina. That's a great dress.\"\n\n\"Thanks,\" Rebecca said. \"So's yours. I love that color.\"\n\nThese preliminaries out of the way, the six got down to the serious business of Homecoming: drinking, dancing and talking. As the night wore on, they noticed the guys at a nearby table become louder and drink out of silver flasks. Near the end of the evening, as a soft, slow song began, one of the guys, a blond boy with a burly footballer's build, made a remark clearly intended for their table.\n\n\"I tell ya, it's getting to where you can't go anywhere without running into some fucking chink,\" he drawled. \"I swear, I hate them worse than anything, even roaches.\"\n\nMelina stiffened. Mark's expressive face shut down into a perfect impassive mask. His friends looked at him and looked at the other table, where the blond boy was craning his head to see if he had gotten a reaction.\n\n\"What do you wanna do?\" Evan asked in a low voice.\n\n\"Best just to ignore him,\" Mark said. \"Tell a joke, so we can all laugh.\"\n\nEvan complied, bringing a ragged chorus of giggles from his friends. They all spoke at once to restore the party mood.\n\nAt the other table, Jeff Rohrbach frowned. He felt loose and ready for a fight, and that stupid jerk wasn't playing his part. He tried again.\n\n\"Yeah, they're all yellow in more ways than one,\" he said, a little louder. His companions shuffled their feet and looked anywhere but at him. Kids at other tables turned around and quickly glanced away when they saw who had spoken.\n\nMark took a deep breath and let it out slowly.\n\n\"Do you want to dance?\" he asked Melina.\n\n\"Is it a good idea?\"\n\n\"It would get us away from Mr. Congeniality over there. We're kind of in a corner back here, and I have a bad feeling about him. I bet he's just aching for a fight, and I'm not in the mood to give him one.\"\n\n\"All right.\"\n\nThey got to their feet and found their friends rising too.\n\n\"I love this song,\" Lakeesha said in a carrying voice. She reached for Evan's hand. \"Come on, baby.\"\n\n\"Me too,\" Rebecca said.\n\nAll felt the eyes of the blond boy on them as they wove through the tables to the dance floor. Lakeesha in particular felt her blood boil. How dare that stupid ass say that?\n\nThey reached the floor, and split into pairs near the center. Melina put her anger aside and relished the feeling of Mark's arms around her. She felt him pull her closer and she snuggled up with enthusiasm. They looked into each other's eyes and before they knew it, their lips met in a soft, warm kiss. Her insides melted as her eyes closed. It felt marvelous! Neither saw Lakeesha and Evan look at them and then grin at each other.\n\n\"And now, ladies and gentlemen, it's time for the last dance of the evening,\" the DJ intoned over the loudspeaker. \"Enjoy!\"\n\nAs they heard the song's a capella opening, Mark and Melina continued to sway gently together. He savored the feel of her in his arms. He could stand forever like this.\n\n\"You're wonderful,\" he whispered into her ear.\n\n\"You're not so bad yourself,\" she smiled.\n\nHe tilted his head back to look into her laughing eyes. He kissed her again, clutched her tightly to him, and closed his eyes. Thus he did not see the stocky blond athlete glaring at him from shadows.\n\nAt the song's end, most of the couples parted with reluctance. Homecoming dances and proms have a bittersweet magic for people on the edge of adulthood. They knew that tomorrow they would again face the homework, pimples, parents, siblings, buddies, and sermons that make up most teens' lives. And so most prolonged the end of this night, when they looked their best and life seemed limitless.\n\nMelina, Lakeesha and Rebecca had left nothing at their table, so they quickly wended their ways to the door and parking lot. All inhaled the crisp October air with relief. It almost seemed a shock, albeit a pleasant one, after the humid, hot air of the gym.\n\n\"Well,\" Lakeesha said as they strolled away from the school, \"this has been a great night. I had a very good time.\"\n\n\"Definitely,\" Rebecca echoed. \"It was good meeting you two,\" she added, turning to Melina and Mark.\n\n\"Likewise,\" Mark said, grinning and putting an arm around Melina's waist.\n\nThe six said their good-byes and split up. Mark did not loosen his hold on Melina, and she leaned into his shoulder as they approached a thick-trunked maple. What a lovely night, she thought. And to think she had actually been mad at her dad for moving them here! A quick movement caught her attention and she straightened abruptly as the mouthy blond boy from the other table lunged at them.\n\n\"Mark!\" she shouted. But Mark had already seen the threat and put himself between Jeff and Melina. She looked around wildly and thought she saw a figure running toward them. She looked back to the drama before her and hastily stepped back.\n\n\"You fucking chink,\" the boy said in a slurry voice. \"Who the hell do you think you are, taking a white girl to our dance? Why don't you go back where you came from?\"\n\n\"What is this, nineteen sixty-four?\" Mark countered, warily sizing up his opponent, who had remained in the shadow of the maple. \"I hate to be the one to tell you this, but the Chinese have been here a hundred and fifty years now. It's time to adjust.\"\n\nWith a roar, the boy rushed him. Mark stood his ground until the last possible moment, then stepped neatly to one side and gave Jeff a shove as he passed. Melina winced, hearing the rip of fabric as he hit the sidewalk. She decided to step back a few more yards, realizing she might prove more a liability than an asset to Mark.\n\nJeff rolled over and bounced back to his feet.\n\n\"You'll pay for that, motherfucker!\" he shouted. Gathering the few wits he had left, he walked unsteadily to Mark, intending to grab his jacket. His football-honed moves proved inadequate against Mark's defenses. Once more, he found himself on the ground.\n\nMelina heard footsteps behind her and whirled around to face whatever fresh challenge life had in store. She recognized Evan and relaxed. He ran past her and up to Mark's side.\n\n\"How's it going?\" he asked, looking at the ripped, rumpled wreck near the tree.\n\n\"Not bad,\" Mark said in a conversational tone. \"Mr. Congeniality here apparently doesn't like my face.\"\n\nMoaning, Jeff suddenly threw up.\n\n\"I'd say your work here is finished,\" Evan said. \"Let's go.\"\n\nThey had reached Melina when they heard Jeff's raspy voice.\n\n\"I'll get you, you son of a bitch. You'll pay for this.\"\n\nThe three turned their backs on him and walked away.\n\n\"So where's your car?\" Evan asked.\n\n\"Not too far from our friend, unfortunately,\" Mark said, grabbing Melina's cold hand. He gave it a gentle squeeze. He felt giddy with adrenaline.\n\n\"Why don't you come to my car and I'll drive you over?\" Evan said. \"By that time, he'll probably be gone and he won't be able to match your face with your car. I know that guy. He's a mean one. You got off lightly tonight, but you don't want any trouble with him when he's sober.\"\n\nOnce in the Tangs' plush Lincoln, Melina leaned back and exhaled.\n\n\"You okay?\" Mark asked.\n\n\"A little shaken up,\" she said. \"I wasn't exactly expecting some goon to jump us.\"\n\nHe reached over, took her left hand in his and stroked it tenderly.\n\n\"I wasn't either,\" he admitted. \"I was awfully glad when you got a few steps back. He looked like the kind of guy who wouldn't have any problem hitting a girl. In fact, did you notice the girl with him inside? I'd bet anything she was covering up a black eye.\"\n\n\"Really?\" Melina asked, diverted. \"How come?\"\n\n\"The way she had her make up on,\" Mark said.\n\n\"You're a guy. You're not supposed to notice things like that.\"\n\n\"True, but if you lived with my mother, you'd notice every little nuance around you too.\"\n\n\"What do you mean?\"\n\n\"Oh, nothing. Let's not talk about her. Anyway, you did exactly the right thing by moving away. I was worried you'd get hurt. Not that I'd have let him, but things happen.\"\n\n\"Well, I thought you were just amazing,\" Melina said. \"It was just like what you talked about last weekend. And he didn't even touch you. You still look like someone on a movie poster or something.\"\n\nMark laughed.\n\n\"Which movie? The Swamp Thing?\"\n\nShe smacked his hand playfully.\n\n\"Hardly. More like something starring Cary Grant or Pierce Brosnan or someone like that. You know. Dashing. Debonair. All the better adjectives beginning with 'D.'\"\n\n\"What a sweetheart you are,\" he said. \"I'm sure glad you called me Monday.\"\n\n\"So am I,\" she said as the car rounded the final corner before her house. \"I've never been to a Homecoming dance before, and I'm not sure one could ever be better than this one. I had the best time.\"\n\nHe stopped in front of her house.\n\n\"Come in?' she asked.\n\nHe glanced at his watch.\n\n\"Okay. I'm supposed to be home in thirty minutes, though.\"\n\n\"Then come in and spend twenty-five with me. That gives you five to get home.\"\n\n\"Deal.\"\n\nThey found the Taylors in the living room. The colonel motioned them in.\n\n\"So how'd it go?\" he asked.\n\n\"Great!' they said simultaneously.\n\nMelina's father smiled.\n\n\"Well, if that's not a ringing endorsement, I don't know what one is,\" he said.\n\n\"It's definitely ringing, Dad. Mark took me to an Italian restaurant and the food tasted terrific. And at the dance, we sat with Lakeesha and Evan and two of their friends. They were a lot of fun. I haven't laughed so hard in a long time.\"\n\n\"That's great, sweetie,\" Mrs. Taylor said. \"I don't when I've seen you glow quite like this. What did you think, Mark?\"\n\n\"What she said,\" Mark replied with a grin. \"If it hadn't been for that stupid bully, the night would have been perfect.\"\n\n\"What stupid bully?\" Col. Taylor said, instantly alert.\n\n\"Oh, some guy mouthing off at the table next to ours,\" Mark said, deciding to minimize the incident.\n\n\"He did more than mouth off,\" Melina said. \"He tried to jump us after the dance. But Mark was too quick for him. He was great, Dad. I wish you could have seen him.\"\n\nMark shook his head.\n\n\"She exaggerates. I just helped him find the sidewalk a couple of times, is all.\"\n\nThe colonel shot Mark an approving glance. If the kid had a hair out of place, he couldn't see it.",
        "\"Well done,\" he said heartily. He rose. \"Want anything to drink?\"\n\n\"No, thank you,\" Mark said. \"To tell you the truth, I'm still pretty keyed up.\"\n\n\"Natural reaction after a fight,\" the colonel said. \"I'd offer you the use of our treadmill, but frankly, you're not dressed for it.\"\n\n\"Thanks anyway, sir,\" Mark said. \"Besides, I told my parents I'd be home by twelve-thirty, so I have to leave soon anyway.\"\n\n\"Don't call me sir,\" the colonel said. \"Mr. Taylor, or Colonel Taylor if you can't bring yourself to say mister, will do just fine.\"\n\n\"Joe, I could use a glass of water,\" his wife said mildly.\n\n\"Oh, uh, yeah,\" he said. They both rose.\n\n\"Well, we'll let you kids say good night,\" Mrs. Taylor said. \"I think Melina can see you to the door, Mark.\"\n\nThe colonel extended his hand to Mark, who took it. Nice grip, he thought. The boy really would make a fine cadet.\n\nOnce her parents had passed out of hearing range, Melina heaved a sigh.\n\n\"I'm glad they're gone. Do you want to sit down?\"\n\n\"Sure.\"\n\nThey sat on the couch, suddenly aware of certain possibilities. Neither said a word at first. Then, as the seconds ticked by, Mark shuffled his feet, and Melina turned to him.\n\n\"This is pretty awkward, isn't it? I mean, I keep thinking about that kiss on the dance floor.\"\n\n\"You do? So do I. That was an excellent kiss.\"\n\n\"Yes. I don't anyone's ever kissed me like that before.\"\n\n\"Like what?\"\n\n\"Like that -- like he, I don't know. Like you did.\"\n\n\"Like this?\"\n\nHe leaned over, put his hands on her shoulders, and kissed her gently.\n\n\"No,\" she said thoughtfully. \"I think we need to stand up to do it right.\"\n\nThey stood.\n\n\"Now let's try it again. Put your arms around me like you did while we were dancing.\"\n\nHe complied. Smiles quirked both their mouths.\n\n\"Now try it again.\"\n\nAnd he did. And it was good.\n\nVery good.\n\n**\n\nJeff Rohrbach woke with a throbbing head and the sort of vile taste in his mouth that comes only to those who drink too much, throw up and then neglect to brush their teeth before falling into bed. He groaned. What the hell had happened to him?\n\nHe rolled onto his back and immediately regretted moving. He hadn't felt this bad in a long time. Lying still for several minutes, his eyes closed, he willed himself either to go back to sleep or to feel better. Neither wish came true.\n\nBut while good health and rest eluded him, memories did not. Recalling the game yesterday brought a wan smile to his lips. The Warriors had won when he intercepted a pass with just seconds remaining and ran it back the length of the field for a touchdown. After that, he had gone to an afternoon keg party to celebrate, where he had gotten drunk and picked a fight with his latest girlfriend. She had made him so mad he had given her a quick punch. A few other kids saw it, but he had ignored them and nobody had said anything. Later, as he drove her home, he had apologized for blackening her eye and promised he would never hit her again. He had sweet-talked her into bed at her place before getting ready for the dance. Jeff had brought his suit to her house so he wouldn't have to return to his. His old man had turned even nastier lately and Jeff hated being around him.\n\nHe frowned. In the parking lot, he and his buddies had filled some hip flasks with booze, drunk the leftovers and swaggered into the gym as if they owned the joint. After that, his memories became more fragmented. He recalled laughing, steamy heat, and people staring at him. His frown deepened. He had a feeling something significant had happened later, but he could not recall what it could be. A vision of dark hair and eyes flashed across his brain. That was it! Now, who was that and why was he important?\n\nHe opened his eyes and studied the ceiling. Of course. That Oriental kid. The one he picked on. But wait a second. It couldn't be that kid. Jeff knew he terrified the skinny little knob, so this had to be someone else. Someone else? He scowled, then winced at the return of the throbbing in his head. But who?\n\nWhoever it was looked like his favorite victim. Of course, Jeff thought sarcastically, they all look alike. But even so, this new kid looked enough like the other one that they had to have some sort of connection. A brother? Jeff sighed. His brain was not up to major mental calisthenics right now. He'd think about it some more later. He did remember shouting at the kid and falling into a tree and a sharp pang of hatred. And hadn't a girl watched it all? He wished he hadn't drunk quite so much. He really ought to cut back on the booze. It slowed him down.\n\n**\n\nAs Jeff tried to make his booze-beclouded brain work properly, Evan and Lakeesha sat in church, surreptitiously holding hands underneath her coat. Their parents knew it, of course; parents always know, even if they don't let on. But the Jacksons and Thompsons had known one another since childhood, and they approved of the relationship between their children. Not only did both kids have ambitions and dreams for their futures, but they had proven themselves trustworthy. Mrs. Thompson and Lakeesha had had several frank discussions about the reasons to save sex for marriage, and the woman felt confident her baby would do the right thing. Evan, too, held strong views on the subject. Everyone expected the two would get married, probably after college, and thus cast a benevolent eye on the kissing and hand-holding they observed.\n\nLakeesha smiled with pleasure as the chorus belted out a hymn that practically blasted the roof off the building. She loved this church, especially now that the new minister brought so much energy to it. In elementary school her family and the Jacksons had been the only people in her neighborhood who went here. Now it seemed as if everyone did. They had three choirs instead of one; classes every weekday evening about all kinds of subjects from finances to building good relationships; and a basketball team that knocked the stuffing out of every other church team in the city, even the Catholics, who had dominated church league hoops since the seventies. Lakeesha looked around her at the richly hued human tapestry: the old ladies in their fancy hats, the serious little girls with their braids and ponytails, the boys in their short-sleeved shirts and clip-on ties, the young men in their crisply ironed dress shirts and slacks, and the older men in their suits. She sighed happily.\n\nEvan looked at her out of the corner of his eye and grinned. He had never seen her look so stunning as she had at the dance, and to him, she still retained the beauty and mystique of the previous night. True, her church dress covered a good deal more real estate than that shimmery white number, and certainly she wore much less make-up right now. But the essential girl remained the same, and he loved her. He gave her hand a little squeeze and she returned the pressure.\n\nIt was a shame about Mark and Jeff -- Evan had known the Rohrbach boy since third grade. Even then, the kid had had a mean streak. But he generally did not direct his nastiness toward black kids, and before last night, Evan had never faced off against him. Their worlds hardly intersected. Evan led a life of Honors classes, fall and spring track, church, martial arts, and now, Lakeesha. Jeff hung with a different crowd, took mainstream classes, treated his girlfriends badly, and lived for football and baseball. Evan hoped Jeff had been too drunk to remember the events at the maple tree.\n\nThe congregation rose for a hymn and Evan put these thoughts aside as he leaned over Lakeesha's shoulder to see the hymnal. His baritone voice and her alto joined in joyful noise.\n\n**\n\nThe Taylors sat at their kitchen table savoring a late breakfast of fresh waffles and syrup, ham slices, coffee and milk. The waffle iron had only recently joined the stable of kitchen appliances and Colonel Taylor particularly enjoyed using this new toy. They had spent most of the morning dissecting the previous day's events -- the game, especially the interception that had turned into the winning play, the dance, and of course, the fight. The colonel praised Mark lavishly. Mrs. Taylor, an amused smile on her lips, echoed his endorsement.\n\n\"Anyone for a third waffle?\" the colonel asked.\n\n\"No, thanks, Dad. I'm totally stuffed.\"\n\n\"None for me either,\" Mrs. Taylor said, stretching. \"I have to be at work in an hour and if I eat anything else, I'll want to take a nap instead. Thanks for the offer, though. They're very good.\"\n\n\"I guess I'll have one,\" he said. \"It looks like there's enough batter for only one more, anyway.\"\n\nHe had just closed the lid of the waffle iron when the phone rang. Despite Melina's dash to the receiver, he reached it first.\n\n\"Hello?\" he barked.\n\n\"Hi, Dad,\" a female voice said.\n\n\"Julie?\"\n\n\"None other. How's it going?\"\n\n\"Fine, honey. Your mom has to leave for work soon, so let me put her on now.\" He put his hand over the mouthpiece. \"Mel, go get your mom. It's Julie.\"\n\n\"Sure.\"\n\nUpstairs, her mother picked up the other extension and Melina walked slowly to her room. Julie couldn't afford to talk for long, and her parents would, no doubt, tell Julie all about her adventures, assuming Julie's escapades didn't steal the show. In her room, her eyes lit on the pile of textbooks she needed to study that day. She let out a gusty sigh. She had never felt less like doing homework. She kept replaying last evening in her mind, especially the slow dances and kisses. She could not help but smile. What a night! Thank heavens she and Pete had broken up. She wondered what Mark was doing. Perhaps he was thinking about her, too. Her thoughts trailed into an agreeable haze and she sat for several minutes thinking of him. A knock on her door startled her.\n\n\"Hon? Julie wants to talk to you...\"\n\n\"Tell her I'll be right there.\"\n\n**\n\nMark had woken not long after dawn. He hadn't intended to do so, but once his eyes opened, he felt a tide of joy surge over him. He lay for a couple of minutes, relishing the memories of the previous night, then lightly leaped out of bed. He felt too good to try to go back to sleep. Instead, he donned his sweats and hurried down to the basement.\n\nHe found his father already there, well into his morning tai chi exercises. He gave Mark a scant nod as the boy took a position beside him and began his own routine. They worked out in mutual silence for nearly half an hour before the man gracefully wound down his program and reached for a towel to wipe his face. He sat on the floor and watched his son's body flow from one posture to the next, like waves merging into one another, then changing into entirely new forms as they reached shore. Mark had excellent control and muscular tone, he thought, taking pride in his son's abilities.\n\nHe felt a twinge of regret as he realized how little time he spent with his son these days. Mark would soon become a man, he knew. He hoped the boy would find more happiness than he had. Ai-ya! What an American thought! But he was an American, and perhaps such thoughts were appropriate now. He shook his head ruefully. Wei never would have entertained such a notion during his own adolescence. Back then, he had only hoped his family could survive until the madness of Mao's Cultural Revolution passed -- if it ever passed. His father was accused of having rightist tendencies and sent to a work camp when Wei was barely seven. Afterward, the entire family lived in fear of further fragmentation in the name of the people. How different Mark's life was.\n\nThe boy finished the final posture, closed his eyes, took a deep breath and let it out slowly. His eyes opened and he joined his father on the floor.\n\n\"You do tai chi well,\" his father remarked. \"You remind me of water and waves.\"\n\nMark grinned.\n\n\"That's my goal: to be like water, just like Bruce Lee said.\"\n\nHis father did not answer, and an awkward silence hung over the room.\n\n\"Thanks for lending me your tux,\" Mark said. \"I hung it up last night after I got home, so it shouldn't have any wrinkles.\"\n\n\"Good,\" his father said. He paused. \"How was the dance?\"\n\n\"Excellent!\" Mark said. \"We had the best time.\"\n\n\"Tell me about this girl you took.\"\n\n\"Oh, Melina's great. She's very pretty, and smart, and nice.\"\n\n\"Your mother tells me she's white?\"\n\n\"Uh huh.\"\n\n\"Hmm. You plan to see her again?\"\n\n\"I hope so.\"\n\n\"Hmm,' his father said again. Mark had a feeling he knew what would come next, and indeed, his father did not deviate from what his son imagined he would say. \"You're growing up, xiao huangdi. In China, I would expect you to do as I say until you leave my home, but we are not in China. We are both Americans, and American men make their own decisions. I won't tell you not to see her again. But I will tell you that she has the potential to make you eat bitterness, to break your heart, as they say here. White people prefer their own kind. She might enjoy the novelty of having a Chinese boyfriend, but she'll grow tired of it in time.\"\n\nMark bit back the response that came to his lips and thought of another.\n\n\"Did that ever happen to you?\"\n\nHis father shot him an astonished look.\n\n\"To me? Oh, no. I had not been here long when I met your mother, and after I met her, I never looked at another woman of any race.\"\n\n\"Then how do you know?\"\n\n\"Your mother told me,\" he said simply. \"A white boy led her on -- is that the right expression? -- and then dropped her for a white girl. It hurt her very much.\"\n\n\"Yes, she told me something about that. But can she, or I, base our opinions of an entire race on one boy's behavior twenty-five years ago?\"\n\n\"It is not just her opinion. Many of my friends have had similar experiences. But I suppose you will have to learn for yourself.\" The older man sighed. \"I wish you well.\"\n\nThey heard footsteps above them and both arose hastily and made for the stairs. From the sound of the steps, they could belong only to Mrs. Tang. Neither relished the thought of spending half an hour in the early morning with her. Attending church with her was bad enough.\n\nAfter a quick shower, Mark's body hummed with energy. He trotted down to the kitchen, where the rich smell of brewed coffee filled the air. Although he hated the taste of coffee, he loved the scent and inhaled it deeply. He opened the refrigerator and reached for the bowl of fruit salad and the milk. Grabbing his favorite cereal from the pantry, he made himself a light breakfast. He had just finished when Mary meandered into the room.\n\n\"Morning,\" she mumbled. Then her gaze sharpened, an expression he had often seen on their mother's face. \"So how was the dance, Romeo?\"\n\n\"Not bad, twerp,\" he said.\n\n\"Did you kiss her?\"\n\n\"Kiss who?\"\n\nMary gazed at him in exasperation.\n\n\"Your date, you moron. I mean, unless you were busy kissing someone else.\"\n\n\"Maybe,\" he said archly. \"Maybe not. I don't kiss and tell.\"\n\n\"So you did, then.\" She made it a statement, not a question.\n\nHe did not dignify her remark with a response.\n\n\"Oh, lighten up,\" she said, assembling her breakfast. \"I'm just kidding.\"\n\n\"We had a very nice time,\" Mark said. \"Practically perfect in every way, except for a jerk who made some racist remarks and then tried to pick a fight with me.\"\n\n\"Why?\"\n\n\"Beats me. I never saw him before. He apparently didn't like my face.\"\n\n\"What did he look like?\"\n\n\"Big, blond, thick-necked jock. Probably a football player or something.\"\n\nMary frowned.\n\n\"One of the guys who jumped me looked like that. I wonder if it's the same guy.\"\n\n\"Could be. I mean, how many big, blond, thick-necked anti-Asian racists can there be in this town, anyway?\"\n\nThey looked at each other, concerned.\n\nWith a jingle of keys, Mr. Tang strode in, dropped the morning paper on the kitchen table, and turned toward the door.\n\n\"I'm opening today,\" he said, referring to the restaurant. \"See you later.\"\n\nMark reached for the paper.\n\n\"I wonder if there's an article about the game yesterday,\" he said. \"One thing about papers in a town this size, they do a good job with high school sports.\"\n\nHe flipped to the sports page and tugged it away from its comrades. A headline below the fold caught his eye: \"Rose Blooms for Homecoming: Big Win for Warriors.\" He spread out the paper on the table. A small photograph below a large action shot caught his eye.\n\n\"Hey! That's the guy from last night!\" he exclaimed, pointing at the mug shot.\n\n\"Let me see,\" Mary said, pulling the paper toward her. She stared at the smiling image on the page. \"My God! That's one of the guys that jumped me.\"\n\n**\n\nIn the distance, Melina heard the phone ring. She stretched and rolled her shoulders to relieve the stiffness that had settled into her upper back. Glancing at her clock radio, she realized two hours had passed since her last break. As if on cue, she heard her father's firm knock on her door.\n\n\"Melina?\"\n\n\"Yeah, Dad?\"\n\n\"Phone's for you. It's Mark.\"\n\nShe jumped out of her chair, checked her impulse to set a twenty-five meter hurdle record in order to reach the telephone, and walked calmly to the door.\n\n\"Thanks,\" she said, smiling up at her father.\n\n\"Any time,\" he said, equally serene. He chuckled to himself. She didn't fool her old man. He had heard the initial flurry of activity and seen the look in her eyes. He diagnosed a bad case of young love as he listened to her thump down the stairs.\n\n\"Hello?\" she said.\n\n\"Hi!\" Melina could hear the smile in Mark's voice. \"How's it going?\"\n\n\"Just great,\" she said, her spirits rising skyward. \"How about you?\"\n\n\"Terrific. I just wanted to call and see how you were doing today and maybe find out if you wanted to come over or take a walk around the college or something?\"\n\n\"Uh, sure! Great. When? I mean, I have some homework I need to finish first, but I should be free in about half an hour or so.\"\n\n\"Sounds good. I'll come over and get you around three.\"\n\n\"Great! I'll be ready.\"\n\nMelina hung up the receiver slowly. This seemed far too good to be true. The boy she liked actually felt the same way? And behaved like a gentleman? Astonishing!\n\n\"Where are you off to?\" her father said.\n\nShe jumped.\n\n\"Oh, I didn't know you were behind me, Dad. Mark invited me to go wander around the college grounds with him. Is that okay with you?'\n\n\"Is your homework done?\"\n\nShe made a face at him.\n\n\"Just about. I told him to give me half an hour, and I should be done by then.\"\n\n\"I can't find anything wrong with this plan, so go and have fun. The leaves are past peak, but they're still pretty nice. I'd like you back by dinnertime, though. Say, six o'clock. These days, it's practically dark by then anyway.\"\n\nShe nodded.\n\n\"Deal.\"\n\nShe hurried upstairs to finish reading her history chapter, completing it with five minutes to spare. Rushing to the bathroom, she did a quick groom, brushing her teeth, rinsing her face and slathering lotion on it against the dry autumn air, pulling her hair back into a tidy ponytail and applying light coats of mascara and lipstick. She assessed the results in the mirror, grinned at her reflection, and dashed back to her room to don her favorite faded jeans, magenta sweater, and weathered hiking boots. Pulling on a blue fleece jacket, she thudded down the stairs just in time to answer the door.\n\n\"Hi!\"\n\nHe smiled up at her.\n\n\"Hiya, gorgeous. Ready to go?\"\n\n\"Yep.\"\n\nShe turned and called over her shoulder, \"Mark's here. We're leaving now.\"\n\nHer father appeared at the top of the stairs and greeted their visitor.\n\n\"Have fun, you two. It's such a splendid day, I may go for a hike myself.\"\n\n\"Have a good time, then,\" Melina said, hoping neither man would suggest that her father join them. She loved her father, but she had her limits. \"See you later.\"\n\nShe bolted through the door and shut it carefully behind her.\n",
        "\"Afraid he was coming with us?\" Mark asked slyly.\n\n\"A little,\" she admitted.\n\nThey laughed at the same time.\n\n\"So where are we going?\" she asked, looking at the rowhouses and trees.\n\n\"Well, I do hate being cooped up on a such a nice day, so I thought a long walk first, then back to my house for a little while. Is that all right with you?\"\n\nShe nodded.\n\n\"Sounds like a plan.\"\n\nThey walked in silence for a block, enjoying the buildings and the crisp clean clouds in the brilliant blue sky. Near the end of the block, he matched his arm's swinging to hers, and managed to capture her hand. She smiled and gave his hand a little squeeze as they wended their way toward the college.\n\n\"One thing that amazes me about cities, even cities this size, is how they can change so suddenly in just one block,\" Melina said as they crossed the street and left the rowhouses behind him. Now the homes stood on their own wide lots, with plenty of trees and grass between them and the sidewalk.\n\nMark nodded.\n\n\"New York's like that.\"\n\n\"That must have been a great place to live. How come your family moved?\"\n\nMark pursed his lips, then sighed.\n\n\"My parents had a restaurant up there. One night last winter, we were closing up -- well, actually, my dad was closing up. I was back in the kitchen -- and this guy came in just as my father was getting ready to lock the front door. We had seen him before -- he used to order chow mein and egg rolls and that kind of American stuff, and you do get to know people after a while. So my dad let him come in, thinking maybe he had a late order. Well, he didn't have an order, and he did have a gun.\"\n\n\"You're kidding me!\"\n\n\"Wish I were. Anyway, to make a long story longer, my dad had already put away most of the take -- he had just enough to start the cash drawer for the next day.\"\n\n\"Start the cash drawer?\"\n\n\"Yeah. Um, haven't you worked retail or fast food or anything?\"\n\n\"No. My parents won't let me. I'm supposed to study and get a scholarship.\"\n\n\"I know the feeling! Well, to start a drawer, you put in whatever amount of cash you think you'll need the next day to make change for the first few customers. They all seem to pay for a five-dollar tab with a twenty-dollar bill,\" he said, sidetracking for a moment. \"I don't know why. Anyway, it's pretty awkward not to be able to make change, so you have to have some low bills and coins for starter money. That way, you can make change. At some places, it's fifty bucks, at other places, it's a hundred.\"\n\n\"Oh. Okay.\" She gestured for him to continue.\n\n\"So this guy comes in, pulls a gun and demands the money we've made for the night, which my dad doesn't have because he already sent my mother to the bank's night deposit with the two biggest guys from the kitchen. So he hands over the starter money: a hundred bucks in tens, fives, ones, quarters and dimes. This annoys the guy. Greatly.\"\n\n\"Uh huh.\"\n\n\"He starts waving the gun around, threatening my dad if he doesn't come up with more money. Then he notices all of us watching through the kitchen door. He swings around and points the gun at us. We drop to the floor, and a good thing, too, because he shoots at us.\"\n\n\"Good Lord!\" Melina cried, aghast.\n\n\"Well, he didn't hit any of us, but he did scare the hell out of us. The next thing we hear is him yelling at my dad and my dad telling him to take the money. Then we hear another shot and a big thud as my dad hits the floor. Then we hear the guy swear and the door slam. Lee -- he's my dad's second-in-command -- gets up and runs out to my dad. He screams that my dad's been shot and call nine-one-one.\"\n\n\"That's awful. How badly was your dad hurt?\"\n\n\"Well, it looked just terrible. Blood everywhere, my dad moaning, then my mother screaming when she and the kitchen guys walk into the middle of this mess. But the doctors said my dad was really lucky. The bullet missed all the arteries and veins and organs and everything. An inch lower, and it might have been all over. But in the end, he was okay.\"\n\nMelina heaved a sigh of relief.\n\n\"Thank God!\"\n\n\"Yeah. After that, they decided to sell and move here, where there's a lower crime rate and everything.\"\n\n\"What happened to the guy?\"\n\n\"We're still waiting for his trial date,\" Mark said, disgust coloring his tone. \"My dad is supposed to go up and testify next month, but the guy's lawyers may change it again. They've already delayed it once.\"\n\nThey continued scrunching through the leaves and thinking.\n\n\"Your dad must be in good shape,\" she remarked. \"Being shot's pretty traumatic.\"\n\n\"Yeah, well, he does his tai chi and he's a pretty strong guy anyway,\" Mark said. \"To tell you the truth, I think it actually affected my mother more. She was the one who made him sell and move down here. He wanted to stay there, on the 'lightning never strikes twice' theory. But she put her foot down, and when my mom puts her foot down, you'd better not be under it. My dad pretty much does whatever she says.\"\n\n\"So she's, um, a strong-willed person?\" Melina asked, trying to be tactful.\n\n\"She's a bitch on wheels sometimes,\" Mark said after a long pause. \"She didn't used to be, when we were little, but since my brother died, she's just gotten worse and worse. She's not so bad to Mary and me, but she can be cruel to Luke.\"\n\n\"How come?\"\n\n\"He lived,\" Mark said simply. \"Kind of like that movie, Ordinary People, come to think of it.\"\n\n\"You mean the book?\"\n\n\"Was it a book, too?\"\n\n\"Yeah.\"\n\n\"Oh. Well, the point is she can't forgive him for living when her favorite son died. I hate to say it, but I really do think she wishes Luke had died instead of John. I mean, she practically said so a couple of Sundays ago.\"\n\n\"Poor Luke.\"\n\nHe sighed.\n\n\"I don't know why I didn't see it before, and now that I see it, I can't believe I missed it for so long.\" He paused again. \"I wish I could do something about it.\"\n\n\"I thought you told me you stick up for Luke now.\"\n\n\"I try to, but I can't help but feel like I could do more.\"\n\nMelina stopped and pulled Mark to a halt as well.\n\n\"Look,\" she said in a tone that suggested he'd better listen up. \"Do you feel guilty because your mom favors you over him?\"\n\n\"Uh,\" Mark said, extremely uncomfortable by this turn in the conversation. He searched for words, and could only blurt out one: \"Yeah.\"\n\n\"All right then. What would happen if you talked to your mom about it?\"\n\n\"She'd deny there was a problem.\"\n\n\"But there is a problem. You said so.\"\n\n\"Yeah...\"\n\n\"And you don't think she's interested in doing anything about it?\"\n\n\"No.\"\n\n\"How about your father? Can you talk to him?\"\n\n\"Not really. He'd say not to worry about my brother, that it's not my business.\"\n\n\"Hmm.\" She thought for a moment, then gave a decisive nod.\n\n\"So that leaves you and Luke. What does he say about it?\"\n\n\"You know,\" Mark said, \"you're awfully bossy sometimes, aren't you?\"\n\n\"Yes,\" Melina answered. \"And I'm also awfully observant sometimes, too. For instance, I've noticed that you're changing the subject.\"\n\n\"I don't want to talk about it,\" Mark muttered.\n\n\"Look,\" she repeated. \"This bothers you a lot, doesn't it?\"\n\nHe nodded.\n\n\"So why not talk about it and get everything out in the open? It seems to me that you've been holding everything inside for so long, you're about to erupt or something.\"\n\n\"It's too personal.\"\n\n\"Too personal?\" she said in disbelief. \"You kiss me like you're about to drag me off to some cave somewhere, and I'm being too personal?\"\n\n\"It's not the same thing.\"\n\n\"It is too! Look, pal, you can't have one kind of ... of intimacy without expecting other kinds, too.\"\n\nThey walked in mutually sullen silence for a minute or two before Melina spoke again.\n\n\"I don't know if you've noticed, but I'm crazy about you,\" she said, touching his arm. \"I can see this really bugs you, and I want to help make things better.\"\n\nSomething clicked inside Mark's brain. He blinked once or twice, then drew her into a big hug.\n\n\"Sorry I was a jerk. It's just, getting things out in the open is not how we deal with problems in my family.\"\n\n\"Mine either, until a couple of years ago. Then my dad read this book, and he got my mom to read it, and everything changed.\"\n\n\"What book?\"\n\n\"I can't remember the title, but it was about taking responsibility for your own behavior and through that, influencing others and, like, bringing out the best in them. In fact, that bit about the pause button you were talking about during the martial arts lesson? That was in there.\"\n\n\"Oh.\" Mark perked up. This sounded like his sort of book.\n\n\"I wasn't too thrilled about all this at first, and I kind of resisted for a while, but it really seems to work if you let it. My parents and I get along way better than we used to.\"\n\n\"There was a time when you didn't?\" Mark wasn't sure he believed this.\n\n\"Sure. I used to hate my dad for moving us around so much and always treating us like privates in his own little army. In fact, I was not too happy when we had to move here, and I did act like a brat for a while. But both my parents kept listening to me and showing me they cared about me -- which my dad never used to do -- and then I started making friends, and everything got a lot better. And last night was the best of all.\"\n\nShe gave his shoulder a little squeeze and he put his arm around her waist and pulled her closer to him.\n\n\"It was great for me, too.\"\n\n\"So,\" she said. \"Now that we have that cleared up, what does Luke say?\"\n\nHe chuckled.\n\n\"The girl never quits, does she?\"\n\n\"Never. It comes from being a West Point grad's daughter.\"\n\n\"Is that where you get it? I figured it was your own killer instinct. Anyway, Luke doesn't really say much of anything lately except yes and no. He knows our mom wishes he had died instead of John, and he shouted that one at her during an argument. But mostly he just takes the abuse and doesn't stand up for himself. But that's typical. I don't think he's ever stood up to a bully.\"\n\nHe realized what he had just said and stopped talking. Was his mother a bully? She certainly got her way all the time; and no one could deny that she picked on Luke.\n\n\"Why do you think he won't stand up for himself?\" Melina was asking.\n\n\"He just says people should respect him, and he shouldn't have to fight them for the respect he deserves.\"\n\n\"But you can't be a doormat and not expect people to wipe their feet on you.\"\n\n\"Exactly,\" Mark said. \"I've told him that plenty of times. But he won't listen. It's like he's had all the spirit knocked out of him since John died.\"\n\n\"What was John like?\" Melina asked after a respectful pause.\n\n\"John?\" Mark cocked his head as he thought. \"John was pretty much the perfect Chinese son. Very smart, good at athletics, made friends easily. The kind of guy you'd love to hate, except you couldn't help liking him.\"\n\n\"He sounds like the perfect son, period. Was there anything he wasn't good at?\"\n\n\"Hmm. He never was all that good at spelling or languages. I think he and Luke were what's called mirror image twins, where one's right handed and the other's left handed, and one's naturally good at math and science, and the other one's really verbal and artistic.\"\n\n\"So Luke's the artistic one?\"\n\n\"I guess so. I mean, he hasn't done any drawing or painting since we were little kids, but he was always good at that kind of stuff.\"\n\n\"And your parents don't want him to be?\"\n\n\"My parents want him to be John.\"\n\n\"But he isn't. Why can't they deal with that?\"\n\n\"Don't know.\"\n\nBy now, they had reached the campus and were strolling across an otherwise empty playing field. Melina thought for a minute.\n\n\"Does Luke want to be John, or does he feel like he has to become John? Like the kid in Ordinary People?\"\n\n\"I don't think so. I think he just wants to be left alone to do what he does best.\"\n\nHe sighed. \"Can we talk about something else now?\"\n\n\"Sure. What?\"\n\n\"Well ... you've already brought it up, and since we're already being serious, well, what about last night? Do you want to go out again?\"\n\n\"You have to ask? Of course I do.\"\n\n\"Well,\" and he hesitated, \"why?\"\n\n\"Because I think you're a great guy. You're smart and sweet and everything I ever wanted in a guy.\"\n\n\"What about Pete?\"\n\n\"Oh, him.\" She waved a dismissive hand. \"Well, let's just say that wasn't meant to be. Tracy may be a nut case, but she's not necessarily all wrong about him.\"\n\n\"Meaning?\"\n\n\"I did a little asking around. Everyone said he has a tendency to go through girlfriends like people with hay fever go through tissues. I don't like the thought of being treated like a, a disposable commodity.\"\n\n\"Disposable commodity?\"\n\n\"Yeah. We learned about those in economics last year.\"\n\n\"Oh. You do come out with some interesting phrases. That's one reason I like you. I never know what you'll do or say next.\"\n\nShe beamed.\n\n\"Thanks. Anyway, to bring the Pete Hess chapter to a close, I still like him, and we'll probably be friends one day. But I definitely don't want to be his girlfriend.\"\n\n\"Just as well. Did you see him at Homecoming?\"\n\n\"No! Was he there?\"\n\n\"Yeah, but he left not too long after we got there.\"\n\n\"Was he with someone?\"\n\n\"I think it was that clarinet player, Felicia.\"\n\nMelina exhaled.\n\n\"That's okay. She won't let him take advantage of her. She knows him too well.\"\n\n\"Jealous?\" he asked teasingly.\n\nShe shook her head.\n\n\"Not really. I hope they had a good time. Not as good a time as we had, mind you, but a good time.\"\n\nThey sat in companionable silence for a few minutes.\n\n\"So what's next?\" she asked.\n\n\"You mean, for us?\"\n\n\"Yeah.\"\n\n\"What do you want?\"\n\n\"Well, it seems to me we've had one very successful date. Agree?\"\n\n\"Fervently.\"\n\n\"And before that, we had a very successful friendship. Agree?\"\n\n\"Vehemently.\"\n\n\"So, vocabulary boy, it seems the next logical step is to decide if we want to: a. spend some more time getting to know each other and go out again; b. not go out again, but continue being friends; or c. I don't know what c. is, but I'm sure there is one.\"\n\n\"The only other alternative I can think of is to not ever see each other again. Which I don't really regard as a real option.\"\n\n\"Me either.\"\n\n\"Let's vote. If you favor option a, kiss me. If you'd prefer option b, sock me in the shoulder and tell me what a great pal I am.\"\n\n\"Like there's any question,\" Melina said. She leaned forward and lightly kissed him on the lips.\n\n\"That's settled then,\" Mark said.\n\n\"The only other question is what we tell other people. Are we boyfriend and girlfriend? Good friends? Just going out? Or what?\"\n\n\"You have a tendency to make things complex, don't you?\"\n\n\"It goes hand in hand with my incredible bossiness.\"\n\nThey both laughed.\n\n\"What do you think?\" he asked.\n\nShe considered this.\n\n\"I think for now, we're going out. I think maybe it's too soon for the whole boyfriend/girlfriend thing. That sounds pretty serious.\"\n\n\"Okay. One question.\"\n\n\"What?\"\n\n\"Do I still get to kiss you at every opportunity?\"\n\nMelina sighed.\n\n\"How did I ever hook up with a such a dummy? Of course you do. In fact, you ought to right now.\"\n\nAround five, they headed back to his house. Mark felt torn between pride in his not-quite girlfriend, and anxiety that his mother would say something embarrassing. His spirits rose as he realized his mother would soon leave for the restaurant, so the window of opportunity for disaster looked fairly small.\n\nThey walked in through the back door and into the kitchen, where they found Mrs. Tang assembling a casserole for her children's dinner. She gave Melina a sharp look even as the girl smiled at her.\n\n\"Mom, this is Melina,\" Mark said.\n\nIn an instant, Mrs. Tang's expression changed from disapproval to welcome.\n\n\"Hello, Melina,\" she said. \"Mark's told me a lot about you. You must be a very special young lady.\"\n\nIf Mrs. Tang had spent hours devising a remark less likely to make a guest feel at ease, she could not have found a better one. Melina hesitated a bit before responding.\n\n\"Thanks,\" she said. \"He's told me a lot about you, too.\"\n\n\"All good, I hope,\" the woman said. Mark picked up a faint edge to her tone.\n\n\"You sound like a very interesting person,\" Melina said. \"I'm looking forward to getting to know you better.\"\n\n\"Oh. Well, that's very nice of you, Melissa.\"\n\n\"Melina,\" Mark corrected her.\n\n\"Sorry,\" Mrs. Tang said. \"It's not a very common name. In fact, I don't think I've ever heard it before.\"\n\n\"Probably the most famous Melina was a character in a James Bond film in the eighties. That was after I was born, though.\"\n\nAn awkward pause settled over the threesome.\n\n\"So did you have a nice time with Mark last night?\"\n\n\"Absolutely. You have a terrific son, Mrs. Tang.\"\n\n\"He's a good kid,\" Mrs. Tang said. \"He makes us all proud.\"\n\n\"I really like Luke, too,\" Melina continued.\n\nMrs. Tang stiffened.\n\n\"How do you know him?\"\n\n\"Mark and Luke and I walk to school together most days,\" Melina said, yielding to her impulse to see how far she could push this. \"Luke's really smart, and sweet, too. I don't have a big brother, but if I did, I'd like one like Mark's.\"\n\n\"Really?\" Mrs. Tang said faintly.\n\n\"Sure. He's terrific. I like him a lot.\"\n\nThis praise left Mrs. Tang, and Mark, unsure as to how to proceed.\n\n\"So what's that you're making?\" Melina said, changing the subject smoothly. \"It looks good.\"\n\n\"What? Oh, this. An Italian chicken kind of thing. My mother used to make it.\" She glanced at her watch and took back the reins of the conversation. \"Well, I've got to be off soon. How long were you planning to stay?\"\n\n\"Not too long,\" Melina said. \"My dad wants me home by six.\"\n\n\"Oh, that's all right, then,\" Mrs. Tang said, placing the casserole on the oven rack. \"Normally, the children aren't allowed to have friends over when we're not here, but I can't imagine you'll find much trouble to get into in half an hour. Mark, this needs to come out when Melina leaves. Make some snow peas or green beans to go with it.\"\n\n\"Okay,\" Mark said.\n\n\"Nice to see you again,\" Mrs. Tang said to Melina.\n\n\"Thanks.\"\n\nMrs. Tang trotted up the stairs to fetch her purse and put on her blazer. That girl had some nerve talking about how \"smart\" and \"sweet\" Luke was, she thought angrily. Luke was nothing of the kind. She would have to discourage Mark's interest in this one.\n\nAs she fussed with her keys and coat at the front door, Mark asked, \"So what did you and Dad decide?\"\n\n\"Decide?\"\n\n\"About the guy in the picture.\"\n\n\"Oh. That. We probably won't press charges. It's been so long since Mary was attacked, we're worried they won't believe her now. Besides, one pending court case is more than enough. We really don't need any more trouble.\"\n\n\"Oh,\" Mark said. \"Okay. Well, see you later.\"\n\n\"All right,\" Mrs. Tang said. She lowered her voice. \"See that Melina gets home on time. I wouldn't want her to be late.\"\n\nMark shook his head at the door as it closed behind his mother. She really didn't tell lies very convincingly. He knew all too well why she wanted Melina out of the house."
    ],
    "authorname": "vanmyers86",
    "tags": [
        "pennsylvania",
        "high school",
        "bully",
        "asian",
        "first love",
        "dance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/becoming-who-we-are-ch-06"
}