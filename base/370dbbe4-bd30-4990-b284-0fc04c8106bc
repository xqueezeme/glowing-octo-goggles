{
    "title": "Days Forgotten but Not Lost Ch. 08",
    "pages": [
        "Once again, I wish to thank GaiusPetronius for his helpful edits and suggestions on this series. \n\n***** \n\nJune 21, 2001 \n\nPatient: I'm just calling to let you know that I won't make my appointment this week. \n\nCounselor: If you need to reschedule, you'll have to talk to my secretary. \n\nPatient: No, it's OK. I just wanted to let you know that... I found her. I'm with her, and... and it's OK. \n\nCounselor: Just OK? \n\nPatient: I'm going to tell her everything tonight. \n\nCounselor: Everything? \n\nPatient: Well, that's going to take some time. All the important stuff, though. \n\nCounselor: We've disagreed in the past on what that includes. \n\nPatient: Your definition this time. \n\nCounselor: Good. And if she... doesn't take it well? \n\nPatient: Then... I guess maybe you should keep that appointment open after all, just in case. \n\nCounselor: (chuckles) Well, despite what you may think of me, I really hope I don't see you on Saturday. \n\n******* \n\nCall me thick, call me slow, say what you will, but when Scott told me that I was Ginny Bowers, I couldn't believe him at first. I had to be persuaded. It wasn't an \"Aha!\" moment at all, but something that just started to make sense as Scott helped me connect the dots. I had all her books, but they didn't look like they had been opened until I started reading them the year before. Her last book was published a year before my accident, and nothing had come out since. Her last novel had been written around the time of our divorce, which was why it had such a noticeably sadder tone. The pictures in the cabin of me posing with each new book... \n\n\"Who is R.S.M.?\" I asked as my mind turned over the facts. \"Almost all her books were dedicated to R.S.M.\" \n\nScott shifted around on the rock and looked at his feet. \"I... I thought you knew about that, too... \" He sat up and wrapped his arms around his bent legs. \"Reuben... Scott... Melik,\" he said slowly, separating each name. \n\n\"Ru... \" I muttered. \n\nHe nodded. \"I didn't plan to go by my middle name with you. But then again, I wasn't planning to talk to you at all that night. So when you caught me off-guard, I reacted... I don't know... poorly, I guess. Maybe I thought that when you heard my name it might evoke memories that I wasn't ready to deal with.\" \n\n\"So... \" I began, my fingers tracing the letters R+M scribbled on the rock at different points, with dates going back more than ten years, \"you were stalking me, right?\" \n\n\"No!\" he objected, \"Not really. Well... sort of, I guess. It was a crazy coincidence, you know, the first time we met after your accident.\" \n\n\"When I startled you to the point of spitting out your drink?\" \n\n\"Can you blame me? I was trying to just get away for a little bit. I was thinking about you, and so I went back to the bar where we first met.\" \n\n\"We met at Darla's place?\" \n\n\"Before it was Darla's, yeah. Anyway, I turn around and there you were. We'd been divorced over two years. You talked to me only through a lawyer. You hated me - you had slapped a restraining order on me, even. I could get in trouble for being in the same room with you. And then there you were, hitting on me in a bar. I didn't even know about your accident.\" \n\nI started to laugh. \"I wish I could go back and see the look on your face again, knowing all that.\" \n\n\"When I got back from cleaning up in the bathroom, you had moved on. The old guy at the bar told me what had happened to you. He and I had never met, so I got his unfiltered version.\" \n\n\"Zeke? I didn't think he knew,\" I mused, wondering it maybe Darla had said something to him. \n\n\"Zeke knew because you should have known Zeke. You weren't friends or anything, but he did your taxes for years. When you didn't recognize him, he pieced it together, and Darla confirmed his suspicions.\" \n\n\"Aww, I had no idea. I've been seeing him for two years and he's never said anything.\" \n\n\"Well, don't feel too bad. He told me he's hoping you'll get forgetful and desperate enough to take him home one night.\" \n\n\"Ewww,\" I shuddered. \n\n\"Anyway, after I found out what was going on, I watched from a distance that night as you picked up a guy and walked out the door with him. I felt sick to my stomach. I had still been hoping that the divorce was just a really low point for us and that we would eventually get back together. So I started making weekends at Darla's a habit. I don't know why. I think I just wanted to make sure you weren't being hurt. Or maybe I wanted to see what your new life was like. And yes, I was partly hoping I could win you back. I just hadn't figured out how to do that.\" \n\n\"And then, one slow night at the bar,\" I commented, \"and I took away your chance to finish planning anything.\" \n\n\"Boy did you,\" he said, shaking his head. \n\n\"I bet you were glad things moved so quickly,\" I said wryly. \n\n\"Huh? Are you kidding? It was agonizingly slow,\" he lamented. \n\n\"We slept together the first night, Scott... Ru... whatever.\" \n\n\"Not that,\" he sighed. \"I knew that part would be easy...\" \n\n\"Ru!\" I snapped. \n\n\"You know what I mean,\" he said, a little dismissively. \"You were there to pick up guys. How easy would it have been for me, knowing you as well as I do, to convince you to take me home?\" \n\nI exhaled loudly and shrugged. \"You're right. Go on.\" \n\n\"I've told you this already. It's not just your body I want. It's you. And that would take time, especially since, well... you didn't even know who you were, really.\" \n\n\"And so the garden, and the food...\" I reflected. \n\n\"Exactly. And a bunch of little things that I hoped might spark a subconscious sense of attachment.\" \n\n\"When were you planning to tell me who you were?\" I asked, knowing we still hadn't gotten to the hard questions. \n\n\"I didn't have a plan,\" he groaned, shamefacedly putting his hands up to his forehead, then slowly dragging them down. \"Part of me wanted to see if we could just start fresh. A new life together, a happy life again. Cut ties and move somewhere new. I wasn't pretending to be someone else. Everything you know of Scott is true - it's me.\" \n\n\"But if I remembered... or when we inevitably talked to someone who knew you... like my mom... \" \n\n\"I knew there'd be hell to pay.\" \n\n\"She really doesn't like you,\" I commented softly. \n\n\"Hm? Oh, Sylvia you mean? Yeah, she hates me,\" he said with a hint of a laugh. \n\n\"What's the story there?\" \n\nJust then the honk of a car horn broke the stillness of the afternoon. \n\n\"Let's go talk to Irwin,\" Scott said, sliding off the rock. \"I'll tell you on the way.\" \n\nWe walked back to the path and Scott told me of our real first meeting, in Darla's place, back when it was a college hang-out. We were in a creative writing class together and he approached me to talk about an upcoming assignment. It was Scott who first started telling me I should write more. We dated, and after our first night together, I wrote an erotic story about it. Scott insisted I had real talent, the kind that could sell books. I finished my first novel before I graduated. I completed a pre-med degree but never went any further in that field. I had become a devoted writer. \n\nMy mother hated it; she had wanted a doctor in the family. She said I'd wasted four years and she blamed Scott for all of it. She scowled through the wedding. Even when I found modest success in my career, she told me how ashamed and disappointed she was. She told me she wanted me to pay her back for all the money she had wasted on my education. Just to spite her, I sent her a check for almost twice that - all the money I'd earned from my third book. She never cashed it. But she also never mentioned money again. \n\nJust then, we were coming into the clearing and saw Irwin by the lake, squatting down and looking at the boat, which he had pulled ashore. We walked up to him and he said, \"She's almost sea-worthy. Reuben, can you run up to my truck and grab a bucket of pitch? There's one little spot here I'm worried about.\" Scott looked at me and grinned, then jogged away. Of course Irwin had a plan to get me alone for a minute. \n\nOnce Scott was out of earshot, Irwin asked without looking away from the boat, \"You OK?\" \n\n\"I'm fine, Irwin, thank you. We're finally talking some things through. We've been together for a few weeks now.\" \n\nIrwin raised his eyebrows and half-smiled. \"OK, then,\" he mumbled. Then standing up he said, \"You know, I think that spot'll be fine for a while. I'll come fix it next week.\" \n\nWe walked back to the cabin, where Scott was still rummaging around in the bed of Irwin's truck. \"I don't see anything, Irwin,\" he hollered, playing along with the ruse. \n\n\"No? Well, maybe I forgot it. Never mind, then.\" Irwin climbed into his truck and leaned out his window as he started it up. \"Cheryl sent some more supplies up, in case you was staying,\" he said, nodding to Scott. \"I put them on the porch.\" \n\n\"Thanks!\" I yelled, waving as he drove off. Scott was already carrying the box inside. I followed him in and he went right to the kitchen. Evening was coming, and we were both hungry. Scott busied himself in the kitchen, and I tried to help. \"You never really could cook,\" he said with a smile. \n\n\"I'd rather just blame that on the amnesia,\" I said. \n\n\"A convenient lie,\" he joked. \n\n\"Scott... I think I'm going to keep calling you that for now... you're avoiding talking about something.\" \n\nHe was silent for a moment while onions sizzled in a pan. \"I know,\" he said solemnly. \"Let's talk about that after dinner, OK?\" \n\n\"Alright,\" I conceded. I tried to think of something happy. \"Tell me about Thailand,\" I said. \n\nWithout looking up from the pans in front of him, Scott smiled. \n\n******* \n\nWe ate dinner on the living room rug. Cheryl had sent steaks and wine. I think she was hoping things were going well between us. I wished it was a bit colder outside, cold enough to warrant a fire. As we ate, Scott turned the pages of the scrapbook, filling in the stories of our trip to Thailand. \n\nWe had been married almost two years. When we had gotten married, funds were low. My mother had cut me off financially, thinking she could bully me away from the path I was on. We used what little we could spare to pay for the simple wedding. But then my first novel was published, and Ginny Bowers was a hit. The second book was published just six months later and kept the momentum going. On our one year anniversary, we started planning a honeymoon. At that point money was really no object. Scott's teaching paid the bills (barely) as long as we lived simply, so all my earnings were free to be saved, invested, or spent. Fortunately, we did little of the latter and a lot of the first two. But Thailand was our big splurge. \n\nFor three weeks over the winter holiday we backpacked in Chiang Mai, explored Bangkok, lounged in Hua Hin... It was wonderful. We were young and in love. We really did run out of condoms before kayaking out to a private island for a few nights. Scott said it was the most exciting love-making we'd ever experienced. The thrill and intimacy of going bareback was something we only ever risked during those three days. \n\nI told him of my dream from the first night in the cabin. He said it sounded about 20% fantasy and 80% reality. Imagining again our time on the beach caused me to consider skipping any further conversation for the night and take him to bed. Whatever conflict was between us could wait until the morning, I thought. \n\nScott may have been thinking the same thing, but instead of acting on it, he stood up, carried our plates to the sink and rinsed them off. Wiping his hands on a towel, he said, \"Let's go out to the boat.\" \n\nStill on the floor, I turned my body towards him and asked, \"Now? In the dark?\" \n\nHe gave me that warm smile that inspired trust. \"Even if you don't remember it, try to imagine floating on the lake and staring at the stars.\" \n\nI closed my eyes and did imagine it. \"It would be like floating in space,\" I whispered. I opened my eyes when I heard Scott at the front door. \n\nI quickly stood and looked around. \"You never wear your shoes,\" he said. It still amazed me how well he knew what I was thinking. \n\n******* \n\nScott had found only one of the oars, but it was enough to get us away from from the dock and out to the middle of the lake. We floated in silence, him leaning back and me between his legs, resting against him. His arms were on the edges of the boat, and I pulled them close, wrapping myself in his embrace. Scott had brought a large fleece blanket in case it got too chilly. I spread it out on my lap and draped it over our legs. \n\n\"About seven or eight years into our marriage,\" he began, \"it got rough. Some of it was the usual - just stress. Your books weren't selling as well as they used to, and that upset you. I think you were worried you'd lose your contract. Anyway, we also started talking about kids, which we were both eager to have. But... I was worried. You had some... issues... that complicated things., and I didn't want to start a family until...until you made some changes.\" He was obviously uncomfortable and was choosing his words carefully and delicately. \n\n\"The pills?\" I prompted. \n\n\"You know?\" \n\n\"I've guessed. I found some in the cabin.\" \n\n\"Did you...?\" his voice quavered. \n\n\"No,\" I whispered, fighting tears. Scott exhaled slowly. \"No, I didn't. I flushed them. I wanted them so badly, though.\" I squeezed his arms tighter around me, wanting him to keep away all the things that frightened me. \n\n\"I know,\" he said, after a moment of floating in the stillness of the night. \"You had gotten addicted to pain killers. You thought I didn't know how bad it was, but you couldn't really hide it from me. When I suggested rehab before trying to get pregnant, you flipped out on me. It was bad timing, too. You had been distant, and I was lonely. Vicky started working at my school that fall.\" \n\nAt the mention of Vicky's name, I stiffened involuntarily. \n\n\"She pursued me... but that doesn't excuse what I did. I still made my choices. I'm responsible for them. I blamed you at first, but that was a cop-out. After a few weeks, a few weeks of just... harsh words between us... I gave in. Vicky and I went to her place after work one day. She and I lasted almost six weeks. With Vicky it was just a physical thing, mostly. I mean, she said so many nice things and was so very eager to please, and a guy can't help but like that, too. Especially when you... when we had been missing that in our marriage.\" \n\nHe was silent for a moment. I started to get lost in thought, imagining what it must have been like to live with Scott but to always be at odds with him. What was it like to lie down at night next to a man that you didn't even want to talk to? \n\nHe continued, \"You were here at the cabin for a lot of that time, and Vicky tried to act like she and I were dating or something. It became clear she thought I was going to leave you for her; she kept saying I had never loved you and that she and I were soul mates. I knew that wasn't true at all. I knew that what I felt when I was with her paled in comparison to what you and I had. So I ended it.\" \n\n\"I bet she went ballistic,\" I said. \n\n\"Actually, no. Worse than that. She was totally calm and totally convinced I'd come back to her. She said she'd wait for me.\" \n\n\"She's still waiting, and scheming, I think,\" I said. \n\n\"Yeah, well, Vicky was never your friend, so her showing up in your life after your accident is proof of how far she's ready to go.\" \n\n\"I was wondering about that,\" I commented. \"Her whole story of our friendship was starting to seem contrived. So she basically showed up in my life and tried to erase you from my apartment, didn't she?\" \n\n\"Looks like it.\" \n\n\"But we were divorced. Why did she still need to worry about me?\" \n\nScott sighed and squeezed me a little. \"The divorce was all you. I made it clear to you and to Vicky that you were the only woman I loved. Whether or not you and I were together, you were a threat to her.\" \n\n\"The divorce was all me?\" \n\n\"All you. After I ended the affair, I brought you up here to talk about it. That was when we took the pictures you saw.\" \n\n\"Oohh...\" \n\n\"After a really good day or two of starting to reconnect and heal and even talk about rehab, I told you about Vicky. In retrospect, it was horrible timing. Anyway, I swore it was over and I asked you to forgive me and to go with me to see a marriage counselor. I swore I'd do anything to make it right. But I had hurt you badly. I don't know...I thought...I don't know. There was a lot of fighting and a lot of crying. What it came down to was you saying that you couldn't forgive me. You said that as long as you lived, you would never be able to forget how I'd betrayed you. And that was it. It was a long, silent ride back home.\" \n\nI closed my eyes and thought about that, trying to imagine what the end of a marriage looks like. \"How... strange,\" I finally said. \n\n\"Strange?\" \n\n\"Turns out I did forget. And that was all it took to get us back together.\" \n\nScott sniffed a little laugh. \"Oh, that was all, huh?\" \n\n\"No big deal,\" I said, squeezing his arms tighter around myself and leaning my head on his arm. \n\nI looked up at the stars. My problems seemed so small and inconsequential. My life seemed so short and frenetic. I waited for Scott to go on. I didn't mind the silence, though. The lapping of the water against the boat was enough to fill my ears and my mind for now. \n\n\"That's it?\" I finally asked. \n\n\"Hm? Yeah, pretty much.\" \n\n\"That doesn't sound right,\" I mused. \"Why would I react so strongly to... to that? It seems, maybe, a little disproportionate, you think?\" \n\n\"I didn't blame you for it. Look at it this way. You're used to being alone. But the old Millie had been rejected by her mom over me. She changed the whole course of her life and married me. You would tell me that I was your everything, and I don't think you were just being sappy. You meant every word of it.\" \n\n\"And then you betrayed me,\" I said softly. \n\n\"It was about the worst thing I could have done to you. I didn't think of it that way at the time. I just thought of satisfying myself. Vicky was... a convenient body at my disposal. The way I treated her was bad in its own way. I tried to apologize, but she only wants to hear one thing from me.\" \n\nCraning my head back to get a look at his face, I asked, \"And she's not going to hear it, right?\" \n\n\"Never, love.\" \n\n\"Did you ever tell her you loved her?\" \n\nLaughing, he said, \"No. And it irked the hell out of her because she had been saying it since day one. She was so sure we were meant to be.\" \n\n\"Not was. Is. She is still sure of it.\" I shifted around to get more comfortable. The rise and fall of his chest moved my head slowly up and down. Cool air moved across the lake, and I could smell the mint on the breeze. I felt myself dozing off. \n\nScott ran the back of his fingers along my cheek. Softly he told a story of how I had once fallen asleep in his arms just like this, on the boat at night. I must have dreamed something startling, because I awoke with a shout and a full body spasm. Trying to stop me from going into the water, Scott had over-corrected and we flipped the boat. I would later joke that Scott had engineered the whole thing just to get me naked in front of the fire. He would point out that I was the one who had started it all. \n\nI smiled. I liked listening to him tell stories of us. An owl hooted nearby and I wondered where on the lake we had ended up. \n\n\"So what now, Millie?\" Scott asked very softly. ",
        "\"You mean for tonight or... or for us?\" \n\n\"I think sleep is in order for tonight,\" he said with a yawn. \"My question was regarding the future. But maybe you still need to think about it?\" \n\nI felt too sleepy to make any big decisions. And I did want to sit by myself and think about what I'd heard that day. There was an awful lot to take in. \"Yes, we need to talk more tomorrow, after I have a chance to think.\" \n\n\"I understand,\" he said, slowly rubbing the exposed skin of my arms with his hand. \"You always were an internal processor. Take your time. And if you need, take your space. I can go back whenever you want, or I can hang around. It's summer break, you know.\" \n\n\"Oh, you're staying right here for now,\" I told him. \"I might have more questions. But I reserve the right to kick you out on your ass at any time.\" \n\n\"Fair enough,\" he chuckled. He probably knew it was an empty threat at that point. \"But at least let me stay the night. After finally getting all that off my chest, I think I'm fixing for the best night's sleep I've had in a while.\" \n\n\"Well, that's too bad,\" I said, smiling in the dark. \n\n\"Hm?\" \n\n\"I said that's too bad. Because I'm all worked up from writing this story and I could sure use some help clearing my head.\" \n\n\"That was always one of the best things about being married to Ginny Bowers,\" Scott sighed. Then pushing me up into a sitting position, he grabbed the oar and said, \"You know, I think I just felt a surge of energy come over me. Perhaps I'm getting my second wind.\" \n\n\"Don't worry, lover,\" I said, grabbing his jaw and pulling him in for a kiss. \"You'll get your sleep tonight. But not until R.S.M. inspires another few chapters.\" \n\n******* \n\nScott got us back to shore somehow. I really couldn't tell where we were. There was no moon, and the stars were bright, but not so bright that they lit the way to the cabin. But Scott knew. It felt so easy to trust him. As he rowed us back, I said softly, almost to myself, \"You tried to kill yourself.\" It wasn't a question - just a comment, a reflection on how much he'd been hurting. \n\n\"I did,\" he said. \n\n\"Why?\" \n\nThe oar dug into the water, pushing us a little bit more into the darkness. Scott's breathing was getting heavier. He spoke in short sentences in between pulls on the oar. \"We'd been divorced over a year. It was your birthday. I couldn't even call you. I couldn't find a way back to you. And I knew you weren't happy either. I thought neither of us would ever be happy again. And I knew it was my fault. Your mom called to remind me that I'd ruined your life twice: first by marrying you and then by cheating on you. And I wanted it to stop hurting. Then I found a bottle of your pills in my stuff. I thought it was fate.\" \n\nI didn't know what else to say, what else to ask. It seemed like enough. I didn't need to know more, not now. \n\n\"Your accident was about a month later. I never heard about it; I was still in a funk.\" \n\nI felt a slight chill on my arms and rubbed them. \"I'm sorry, Scott. I shouldn't have asked.\" \n\n\"Yes, you should have. I'm glad you did,\" he said. \"Hang on.\" \n\nHis warning barely registered, giving me just enough time to grip my seat before the boat slipped alongside the dock. Scott grabbed a post to stop us, then climbed out and secured the line. Once the rocking had subsided to a minimum, I stood up and took the hand Scott offered to help me up. We walked the short distance of the pier and I smiled when my feet left the coarse wooden planks and found the cool, dry grass. Scott put his arm around me and led us towards the cabin. It was a gorgeous night. A breeze was rustling the leaves and the gentle lapping of water on the shore was soothing. Everything in the air felt... perfect. \n\n\"Wait,\" I said softly. I breathed in deep. \n\n\"It's so different with the mint,\" Scott commented. \n\n\"Different bad?\" I asked, wrapping the blanket around my shoulders. The night was much cooler than the day, and the change was refreshing. \n\n\"No... just different. Something new. I don't think I'd want it the old way again. It wasn't bad before, but this is better.\" \n\nI turned to face him, making out hints of his serene smile in the darkness. Putting my hands around his waist, I had only meant to kiss him. But I was suddenly struck with an inexplicable urgency. I looked down at my hands on his sides, then began unbuckling his belt. \n\n\"Millie?\" he questioned, looking down, trying to find my eyes. I unzipped his pants and began lifting the hem of his shirt. Scott raised his arms in compliance and I dropped the garment to the ground next to us. No sense in tossing things around in the darkness. \n\nOnce he was shirtless, Scott got in the game and removed my shirt in one quick motion. I shook my hair free then gasped as Scott knelt in front of me and took a breast into his mouth. His strong hands roamed around my torso, evoking chills along their path. When I began to whimper at his attentions, Scott tugged at my shorts. Wiggling my hips a bit, I helped him get me fully naked. \n\nScott abruptly stood up in front of me, pulling down his pants and kicking them to the side. \n\n\"How do we...?\" I began. \n\nGlancing around, he answered, \"I'm not sure.\" \n\n\"Have we ever...?\" \n\nLaughing, he said, \"No, never.\" \n\nThen, as if a solution had suddenly occurred to him, Scott stepped into my embrace and then sat down, pulling me with him. Landing on his shirt, he crossed his legs and made a comfortable seat for me. I settled onto his lap and circled my legs around his waist, feeling his erection tapping at my bottom. Scott picked up the blanket from where it had fallen, and he wrapped it around our bodies, making a cocoon from which only our heads emerged. Arms wrapped around each other, we kissed, fiercely at first, then slowly and with the calm of unhurried lovers. We had all the time in the world now. There was no moon to mark the hours, morning might never come. It mattered not. \n\nI began shifting around. I sensed his need, a need I shared. Sliding a hand between us, I reached down and gripped his warm shaft. It pulsed with need and eagerness. I moved my hand up and down, teasing and preparing him. Scott broke our kiss with a gasp. I smiled mischievously, wondering how long he would let me keep that up. Fortunately for him, I had no intention of finding out. I aimed his tip at my opening, ensuring it was placed just right. Then I angled my hips so that I could slide down onto him, his entry unhindered thanks to my own arousal. \n\nScott spread his legs a little, giving me room to sink further down onto him. I pulled myself towards him with my heels planted on the ground behind him. A few wiggles of the hips and we were fully joined. I knew that if there had been enough light, I could have looked down to see my lips wrapped around his base. We could not possibly have been any closer. \n\nI held on to the blanket that covered both of us. I didn't mind the chill, knowing we would soon be sweating. Nor was I worried at all about privacy. The blanket did keep away any bugs that might be tempted by all that otherwise exposed flesh, but mostly what I liked was the way being wrapped in the blanket seemed to symbolize how the two of us together occupied our own private world in that moment. \n\nScott pressed up towards me slowly with very slight movements. His shaft seemed to swell inside me with each thrust. I leaned back a little, still keeping my arms around his neck, and began a very small rising and falling motion in his lap. I hardly pulled up at all, not wanting to lose the feeling of him so deep inside me. Pressed so tightly against him, I could rub my clit at the place where we were joined, and I gasped at the mixed sensations of pressure and smoothness. \n\nAmid the swelling pleasure from our contact and our simple swaying together, I felt a storm of mixed emotions. I was bitter over the loss of years between us and was angry that I could find no one to blame for that. I wanted to be with Scott if only as an act of defiance against whatever fates and furies had driven us apart. I leaned in close and gripped Scott out of desperation. He returned my embrace with a muted moan. \n\nI was elated over finding a real connection to my past - not just a casual connection but the one person who could really pull back the curtain and tell my story back to me. I rubbed my face against his until our lips found each other. Our kiss was punctuated with soft, breathy cries as my grinding became a little more vigorous. \n\nI was confused over how to feel about his deception. He had lied to me - far more than just withholding the truth - and that had caused me a great deal of frustration and pain over the past several months. He had also, earlier, hurt me and been unfaithful. Even though this version of me hadn't experienced that betrayal directly, it still figured in our history and our relationship. I paused and put my head on his shoulder, facing away. My eyes were adjusting more to the darkness and I could discern the outline of the trees against the infinite sky. Scott held absolutely still for a moment. \n\nI was sad, and I grieved over the pain we had both suffered after our divorce. I wondered if I had had second thoughts, if I had ever wanted to reconcile. I wondered if I had tried to escape the pain with more pills, just as Scott had. I felt sad for all the nights I had gone to bed alone, probably missing him in every way. I pushed down, pressing against him and making sure he filled me. I wanted to be reminded that I wasn't that woman anymore, I wasn't alone. He was here, filling me, holding me, supporting me. It was his breath hot on my shoulder. It was his lips finding my neck. It was his hands moving down to cradle the curves of my bottom, guiding my motions. \n\nThat sadness gave way to a moment of true contentment. It was a contentment tempered by the memory of loss, and that potent mix surged through my body, heightening my desire for him. Regardless of what had passed between us - years ago or weeks ago - I loved him now, and we were together. When the sun came up, would my heart agree that that was enough? \n\nI let his arms move me, increasing the power of our thrusts. I was getting close, I needed his touch. Whimpering, I reached behind myself and grabbed his wrist. I pulled his hand between us and pushed it towards my need. Scott understood, and his arms pivoted until his thumb was circling its target. \n\nI began crying out, knowing how close I was to experiencing the fruits of our labor. I put my hands on his face and stared at him. I felt the tension build and I saw Scott's brow wrinkling in his own beautiful agony. Suddenly, he stopped rubbing me and used both hands to force me all the way against himself. With a shout of release, he began to spray inside me. I was so close and would not be denied. Pressed tightly against him as he pulsed inside me, I gyrated my hips, finding that last bit of contact I needed. My breasts squished against his chest, igniting the explosion toward which we had been building. \n\nWe both shook, our lower bodies twitching and grinding. Together, we held on, arms around each other, riding out the storm of pleasure and catharsis. I cried out softly, surprised as each spasm overtook me. Coasting down, I felt Scott return the blanket to our shoulders. I had no memory of it slipping off. Though I knew it wasn't true, it seemed as if the crickets and all other night creatures had gone respectfully silent as we climaxed, only resuming their chatter as we caught our breath. \n\nSuddenly, unbidden, Scott began to laugh. We were both panting, our foreheads touching. He couldn't see my quizzical look. \n\n\"Maurice Knight. Isn't that what she said your ex-husband's name was?\" \n\n\"Are you serious?\" I gasped. \"What brought that on?\" \n\n\"I just got it. I bet you were at the cafe on Clifford Street when she told you, the one next to the deli, right?\" \n\n\"Oh my God, that's right... How did you...?\" \n\n\"Maury's Night Club and Lounge. It's right across the street. She probably looked right over your shoulder and made up the name.\" \n\n\"Should I even ask why that popped into your head just now?\" \n\n\"A song. We went there once, you and I did. Someone was singing on stage. I'd never heard the song before, but I've never forgotten it since - something about how... some people turn their memories into chains, while others turn them into wings.\" We sat there breathing heavily, heads still touching. Scott's hands moved slowly up and down my back. \"I want to make more wings with you.\" \n\nI laughed lightly. It was a little sappy, but meaningful and touching nonetheless. \"Tonight was a good start,\" I assured him. Then, with a quick kiss to his sweaty forehead, I moved off his lap and stood up. Scott gasped as his sensitive head slipped out of my depths. Then he stood up, picking up our clothes before leaving the ground. If anyone had been around to see it, we would have made quite a sight on our way back to the cabin: both naked, one with an armful of clothes and the other wrapped only in a blanket. I felt his spend leaking past my entrance and dripping down my thigh. There had been no question of \"protection,\" in any sense of the word. I wasn't concerned. Just like that perfect moment in Thailand, this had been so perfect, so right. \n\nOnce we stepped inside, Scott tossed the clothes to the floor then quickly grabbed me around the waist. I squealed in surprise as he picked me up. Still clutching the blanket, I wrapped it around both our bodies as he carried me to bed. Laying me gently on the mattress, he crawled into bed next to me. Sheet, fleece, and a lover's warm embrace surrounded me as I drifted off. \n\n******* \n\nIt amazed me how easily I rose before the sun here in the mountains. Maybe it was the birds beginning to chirp that signaled to my subconscious mind that night was nearly done. I rolled onto my side and propped myself up on one elbow. The cool sheet slipped off my breasts and my nipples hardened when they were so suddenly exposed to the slight chill of the room. I looked at the man sleeping soundly next to me, his face barely visible in the pre-dawn gray. \n\n\"You never were an early riser,\" I mused. \n\nI found a shirt and sweatpants to wear before starting the coffee maker. Soon I was down by the lake, dangling my feet off the dock and watching the sunrise. It was inconceivable to me that I wouldn't stay with Scott. I had been planning that before I learned about our history, and nothing I had learned since then had affected my intentions. But I needed time to think about how I felt in light of new revelations and about what next steps were in our future. \n\nI was afraid. That was one thing I hadn't expected. Scott had chased away so many of my fears, but the thought of being with him again made me anxious. I had to think about why that might be. By the time the sun was visible in the sky, I understood that most of what bothered me was the same fear that drove me in and out of the arms of strangers for all those months. It was the fear that anyone who got to know me - even Scott - would realize that there wasn't really a person for them to know. Only the shell of a person remained. \n\nScott had pushed past that once. But this was different. Sure, he was patient, but what about in a year? In five years? In twenty years? When would he get tired of me not remembering our past? Of not remembering Reuben? What then? When he realizes that that treasury of shared memories is something I can only access through him, will he finally realize I'm not the woman he once loved? \n\nMy thoughts were interrupted by the gentle thumping of Scott's footsteps behind me. Holding two mugs of coffee, he handed me one, saying, \"I thought you could probably use a refill by now.\" \n\nI took it from him and said, \"Thanks. How long have you been up?\" \n\n\"About five minutes,\" he answered. \"But if I know you... and I do... you've been out here since the crack of dawn.\" \n\n\"Just before that,\" I corrected him. \n\n\"May I join you?\" he asked. \"Or...?\" \n\n\"It's fine,\" I smiled. \"You can stay.\" \n\nSitting next to me on the dock, he said, \"I'll try not to read too much into that statement.\" \n\nI crinkled my brow, not catching his meaning at first. Then I realized how I'd worded my invitation. \"That too, I think,\" I assured him. \n\nHe exhaled loudly. \n\nWe sat side by side, arms touching, sipping from our coffee mugs. The day was beginning to show hints of the warmth it had in store. \n\n\"Is the lake swimmable?\" I asked, thinking of how nice a dip would be if it got hot. \n\n\"Anything is swimmable if you fall out of a boat,\" he dead-panned. \n\nI nudged him with my elbow and said, \"You know what I mean.\" \n\n\"I never liked the thought of sharing it with the snakes and leeches, so I don't think of it that way. It's a little dirty, but otherwise safe, I guess.\" \n\nI hummed in understanding. \n\nAfter a few minutes of comfortable silence I said, \"I can't shake the sense that fate has given us a second chance.\" \n\nScott stayed silent and let me think through how to put into words what I wanted to say. I could tell he knew the best way to have a conversation with me. \n\n\"The old me told you I couldn't forgive you because I could never forget what you'd done. And yet here we are. I've been forced to forget, like a big reset button has been pressed on our lives. I don't feel like I have the right to forgive you; I don't feel like I was the one hurt by what you did. But for what it's worth, I do forgive you.\" \n\n\"Thank you,\" he whispered, clearing his throat. \n\n\"I guess... I guess knowing about what happened is different from remembering it. If I remembered experiencing it, I might feel differently. But it just doesn't affect me in the same way, so I don't feel like my forgiveness is that meaningful.\" \n\n\"It still means something,\" he interjected. \"Much more to me than to you, I think.\" \n\n\"But what hurts me more - this me, not the old me - is just the overall deception you've been a part of for months now. I wonder if I would have preferred for you to just have been up-front with me. To say, 'Hey, I'm Reuben. I used to be special to you. I'd like the chance to be that guy again.'\" \n\n\"I'm sorry about the deception. Really, I am. And if I had thought for one moment that the direct approach would have worked, I would have gone for it.\" \n\n\"You were so sure it wouldn't have worked?\" I asked skeptically. \n\n\"Who wants to hear from an ex-husband they don't know anything about?\" \n\n\"Good point.\" \n\n\"And best case scenario, let's imagine you had given me a shot. What was it like hanging out with friends and family after your accident?\" \n\nI shuddered. \"Awkward. Stressful. Uncomfortable. Lots of expectations laid on me. Jokes I didn't get. Always feeling like an outsider and a disappointment.\" \n\n\"Yeah, I did my research on that,\" he said, giving me the first indication that he had put some thought into getting back into my life. \"It would have been an uphill battle for both of us, one that you probably wouldn't have been highly motivated to fight.\" \n\n\"And I did launch a surprise attack before you had your battle plan ready...\" \n\n\"Too true,\" he agreed. \"But all I knew for sure was that, one way or another, I had to woo you.\" \n\n\"Woo me?\" I smiled. \n\n\"Woo you. Yes. If I could get the new you to love me for who I was, then I thought we might actually have a shot at making this work. But that... Vicky,\" he said her name with disgust, \"really set things back.\" \n\n\"I have to say, you're actually making sense. And I could probably second-guess all your decisions in retrospect. You could have told me sooner, you could have handled something better, whatever. But what I've decided is that I'm not going to focus on the details but on your heart. I believe... I choose to believe that you really love me and that you weren't acting selfishly. I think you really had my... our... best interest at heart. That's enough for me right now.\" ",
        "\"Thank God,\" he said softly. \n\n\"It won't always be enough, mind you. This is a special case. I'll be watching you like a hawk from now on.\" \n\n\"Don't worry. I have no more secrets,\" he swore, putting his arm around me. Our mugs were empty and sitting on top of the poles on either side of us. The sun was up and the day was looking beautiful. My stomach had been ruled by nervousness that morning. But that had given way to excitement as I talked with Scott. But then excitement gave way to hunger. I thought of our breakfast options, and I made some comment to that effect. \n\n\"The mosquitoes will be out soon, too,\" Scott added. With a quick tap of my toe on the water, I stood up and turned around. Scott picked up our mugs and joined me in heading back to the cabin. I stopped mid-way, gripping Scott's wrist and pulling him close to me. I pulled his head down for a tender kiss to start the day. \n\n\"I love you,\" I told him. Then I felt the need to clarify. \"The new me loves you. Not because of our past, though. I fell in love with Scott, the guy I found reading in the bar in March. Our history adds another dimension to that, but I can't love you with all the memories you have when you love me. My love feels... thinner. So maybe I can't love you in the same way that the old me did, but such as I am now, I do love you. I wish there was more.\" \n\nScott moved some hair from my face and tucked it behind my ear. \"It doesn't matter,\" he said. \"I love both of you... all of you. To me, you're one whole person.\" \n\n\"It doesn't feel that way to me,\" I lamented, gazing off past the treetops. \n\n\"I know,\" he said with a hint of sadness. Then smiling, he added, \"But... if you let me, I can try to be a bridge between the two. And you're more like her than you realize. She'd be proud of you.\" \n\n******* \n\nEpilogue \n\nAs we were packing up to leave the next day, I saw a red marker in a drawer. I picked it up and smiled at Scott. \"We almost forgot,\" I said. \n\n\"I'm glad you remembered,\" he said, and we both laughed. \n\nAfter that afternoon, our rock bore some new initials. Among the hundreds of scrawled letters with dates going back to the 1920's, we added M&amp;S, June 2001. \n\nCheryl was beaming when Scott and I left together. She didn't pry, and in return I promised to be back in a few weeks. I still had a book to finish, after all. I told her we could talk then. Especially if she would teach me how to bake. Irwin bellowed with laughter and said something about drinking from a fire hose. \n\nDuring the next few weeks, with Scott's help, I pieced a few more things together. I had relied too much on Vicky after my accident. She had changed my phone number while I was in the hospital (clever girl), which explained why no one ever called me. She hadn't known my email address, so I had a few years' worth of messages to sort through. Neither had she known about my other bank account, one connected to my Ginny Bowers income. It had accumulated a healthy sum in two years' time. Nothing ridiculous, but enough to support me after I quit my job and got my next novel ready for publication. My old publishing contract had expired before my accident, so it was time to shop around again. Thankfully, I was in no hurry. \n\nI still remember almost nothing from before the accident. I have mixed feelings about that. I wish I did remember, but I also know that there was a lot of sadness that is now out of my memory forever. Scott is my living memory. He's very good at quickly picking up on things he needs to explain. When it's just the two of us, he seldom needs to do that; he's here in the present with the new me. He'll tell stories of our past, but not in a way that makes either of us sad. Usually his stories serve to ground us and to remind us how thankful we are to have each other. And sometimes, comically, I find myself jealous of the \"other woman\" in Scott's past - I'm jealous of the first Millie and the joy she shared with him. \n\nVicky's purging of my apartment had been thorough. She destroyed everything she removed, including my address book, years of photos (everything since college), and even our wedding album. Though I have no proof, I'm sure she took my wedding ring, too. Her obsession knew no pity. I swore I'd never forget what she did, but then Scott warned me to remember what had happened the last time I said something like that. We told Vicky we wouldn't press charges (not that we had much evidence, anyway) if she suddenly decided to move away and start a new life. That was the last we heard of her. \n\nAnyway, Scott and I mourned the loss of those things for a while, but we eventually began to consider it like a natural disaster - something that just happens, something that can't be helped. You just have to move on. We even started referring to things lost in \"Hurricane Vicky.\" Somehow, that makes it easier. Also helping is that we are busy making new memories, including a new, simple wedding album. It has a few pictures of our first wedding - ones we scrounged from some family and friends - as well as a slew from our second wedding. It was a very small, intimate gathering, and my mother is there, seen scowling in the background of the photos. \n\nScott is resuming his photography, and I started planning trips that will help us fill up plenty of photo albums. The rest of that summer was like an extended honeymoon, filled with travel and sex. It was amazing that the garden survived. We started planning to retun the extra bedroom to its original status as a darkroom for Scott's photos, but by the end of the summer, it was clear we'd need to use it as a nursery instead. Neither of us had had the courage to ask Cheryl and Irwin for condoms, so those two nights reconnecting at the cabin was all it took to force our attention away from the past and onto the future. \n\nSometimes I jokingly introduce Scott as my ex-ex-husband. It's funny to hear him go by Reuben with other people. I usually call him Scott. Sometimes, though, like when I'm angry, or surprised, or lost in sexual pleasure, the name Ru slips out without me noticing. I like it. It's as if the old Amelia is assuring us that she's still there, and she approves. And when Ginny Bowers' next novel is published it will have a new dedication: \n\nTo Scott: Keeper of my memories and bridge between all that was and all that can be \n\nThe End \n\n*******"
    ],
    "authorname": "nageren",
    "tags": [
        "amnesia",
        "forgiveness",
        "outdoor sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/days-forgotten-but-not-lost-ch-08"
}