{
    "title": "Not Another Christmas Movie",
    "pages": [
        "Authour's Note:\n\nThis is my contribution to the 2019 Winter Holidays contest. I hope you enjoy! Special thanks to norafares and Pixel The Cat for editing on a rush so I could get this posted. You are the best!\n\nThis story is a Christmas romance. Put on some carols and sit back to enjoy my take on a cheesy Christmas movie, featuring the cynical but lovable Nicki as she meets the handsome, Christmas-obsessed Cole. This story features love, cynicism, tragedy, gratuitous erotic scenes, and peppermint hot chocolate.\n\n**\n\nI love you and you love me<br>And that's the way it's got to be<br>I knew it from the start<br>'Cause Christmas ain't the time for breaking each other's heart<br>Merry Christmas, I don't want to fight tonight with you<br>\u2014Merry Christmas (I Don't Want To Fight Tonight), The Ramones\n\nI never thought it was such a bad little tree. It's not bad at all, really. Maybe it just needs a little love.<br>\u2014A Charlie Brown Christmas, 1965\n\n*\n\nChristmas Eve 2015\n\nIt was the last thing I set up each year: the Christmas village. \n\nOh, sure, the majority of it was set up for the entirety of December. But each year, I treated myself to a new piece. It was a collectible set, incredibly popular, and the most precious thing I owned. I would dream about the next thing to add: one year, it was the toy shop. Another, the post office. Townspeople, a tiny skating rink, lamp posts, mailboxes. It grew a little more every year.\n\nThat year, it was the town Christmas tree. I had been dying to get that piece. It was my favourite one, but by far the most rare. Beautifully crafted, it had working lights and little icicles hanging off the tiny branches. After years of trying to find it, it was finally mine. \n\nI couldn't contain my smile as I placed it in the center of the Christmas village. The previous year, the village had grown so large that I had to buy a new console table just to display it. It sat in front of our living room window, the snowy yard beyond a perfect backdrop for my tiny wonderland.\n\nEverything was perfect.\n\nThe candles were lit. The room was scented with chocolate, peppermint, and pine from the fresh tree in the corner. Aside from those flickering candle flames, light twinkled off the shiny baubles hanging on the tree. I hadn't been able to convince Frank to install a real wood-burning fireplace in the living room, so the yellow glow was artificial, but it still lent a beautiful backdrop to the red stockings hung on the mantel. \n\nEach year I tried to make our house look like something out of a Hallmark movie, and I was certain I'd knocked it out of the park that year. My decorations were beautiful, classy without being garish. There were festively decorated cookies on the ceramic plate sitting on the coffee table next to cups of peppermint hot chocolate, and the hum of soft carols filled the room. Instead of the cozy flannel pyjamas I usually wore on Christmas Eve, I was wearing a little gift I'd gotten for Frank. Lacy, with red and white trim, it covered just enough skin to be considered clothing. \n\nI couldn't wait for Frank to come home. Since the calendar turned to December, I had hardly seen my boyfriend. There were Christmas events to go to, gifts to buy, presents to wrap, charitable services to perform; that was just my schedule. Frank had been working constantly, coming home late almost every night and leaving before I woke up each morning. He worked so hard, my Frank. \n\nBut that was over. The next day was Christmas, and Frank wouldn't be working. We would wake up, exchange gifts, giggle and cuddle and maybe fuck under the Christmas tree, and then I would get to work preparing Christmas dinner. Our parents were both set to come over sometime in the afternoon, we'd have a huge meal and lots of drinks, and that would be it for another year. \n\nI curled up on the couch, pulling my favourite plaid Christmas blanket over me as I turned on a cheesy Hallmark movie. I wasn't sure what time Frank would be home, but I wanted to be ready and waiting for him when he was. I sent him a quick text \u2014Can't wait to see you. Surprise for you when you get home. xoxo. But mostly xxx\u2014and bit my lip in excitement. \n\nEverything was perfect.\n\nThe movie was cute, full of Christmas magic and unrealistic drama. As predictable as it was, I was charmed by the silliness of it all. At some point before the ending, I fell asleep, dozing lightly on the couch while I waited for Frank. My plan had been to listen for the sound of his car, then move under the tree so when he walked in, he'd see me waiting for him. \n\nBut he was late. Really, really late that night.\n\nThe closing of the door woke me up, and when I opened my eyes, he was standing at the entrance to the living room. The room was dim, lit only by the decorations and the fireplace, and I couldn't quite see the expression on his face.\n\nI smiled, hoping I still looked sexy. \"Hey, darling. Merry Christmas.\" \n\nHe chuckled, a dry sort of laugh.\n\n\"I missed you,\" I said, pushing the plaid blanket off and shivering as the chill of the air hit my revealed skin. I stood up, letting Frank take in the sight of me in the skimpiest lingerie I'd been able to find. \n\nHe didn't say anything.\n\n\"Are you all right?\" \n\nAgain, that dry chuckle.\n\n\"Frank, what's wrong?\" \n\n\"What the fuck are you wearing?\"\n\nI recoiled at his words, slurred harshly at me from across the room.\n\n\"Are you drunk?\"\n\n\"Oh, fuck off, Nicki.\" \n\nMy mouth dropped open. \"What? What did I do?\"\n\n\"What did you do? What did you do. Oh Nicki, what the fuck didn't you do. Look at this goddamn place.\" \n\nI glanced around. Everything was still in place. I looked back at him. \"I don't know what you mean.\"\n\n\"This house! It's like an explosion of Christmas shit! Look at this\u2014what the fuck is this?\"\n\nHe stormed into the room and picked up the tree I'd gotten for the Christmas village.\n\n\"Look at this. What a waste of fucking money. What'd you have to pay for this piece of shit, huh?\"\n\n\"I don't understand why you're upset. Where is this coming from?\"\n\nHe laughed again, slamming the tree back down on the table. I winced as two of the townspeople went flying, one crashing to the floor.\n\n\"Of course you don't understand. Every goddamn year. December rolls around, and you turn into Santa's jolliest fucking elf and I don't see you for the entire month. You go to every party, spend a shit ton of money, and then have the fucking audacity to stand there and say you don't understand why I'm upset.\" \n\nI sputtered, completely disarmed by his words.\n\n\"Spit it out, girl! What is it? I-i-i-i can't?\" he mocked. \n\n\"Why are you being so mean?\"\n\n\"'Why are you being so mean?'\" he repeated in a nasal voice. \"Fuck off, Nicki. You're a whore for Christmas. Look at you. Dressed up like a slut, thinking I'm going to come in here and fuck you after you've been completely out of my life for almost a month. You think that's normal? You think it's normal for people to be so goddamn enamoured by a fucking holiday that they don't see their boyfriend for a month?\"\n\n\"Frank, just calm down. We can fix this.\"\n\n\"Fix it? How the fuck are you going to fix it? Throw some goddamn tinsel on it and say it's better?\"\n\n\"You're upset. Maybe we should talk in the morning.\"\n\n\"Answer the fucking question!\" He stormed across the room and I winced, drawing back towards the couch. He stopped on the other side of the coffee table, an arm's length away. \"Do you fucking think it's normal?\" \n\n\"Y-you've been w-working\u2014\" \n\n\"We haven't fucked in a month, Nicki, you think that's normal?\" \n\n\"You haven't been home!\"\n\n\"Neither have you!\" \n\n\"Frank, I'm sorry! I was just\u2014\"\n\n\"I don't give a shit if you're sorry! It's too fucking late for sorry!\"\n\n\"Why didn't you tell me any of this?\" Tears were spilling down my face. I could smell the alcohol rolling off him, even from where I stood. Each word blew a wave of whiskey-scented air in my direction. \n\n\"Because you haven't been home!\" \n\n\"Are you seriously this pissed because you haven't gotten laid for a month?\"\n\nHe burst out laughing. \"Oh, I've gotten laid, just not with you, you fucking frigid bitch.\" \n\nI couldn't speak. My stomach was free-falling, turning over and over again as his words echoed in my mind. \n\n\"You are goddamn obnoxious,\" he said. \"All of it. These decorations are obnoxious. This fucking candle\u2014what the fuck is this, Santa shat in a bowl and you lit it on fire? You're obsessed with Christmas and it is fucking obnoxious, Nicki, I can't take it anymore.\" \n\n\"You're cheating on me?\"\n\nHe stopped, suddenly realizing what he had said. His mouth was open, but nothing came out.\n\n\"You're cheating on me, you think I'm obnoxious, and you're telling me all this on Christmas Eve.\" \n\n\"There it is again, Christmas-Christmas-Christmas,\" he muttered.\n\n\"Get out.\"\n\n\"What?\"\n\n\"Get out, Frank. Get the fuck out of my house.\" \n\n\"It's our house.\"\n\n\"Get out!\" I shrieked. I picked up the closest thing to me\u2014one of the cookies off the ceramic plate\u2014and threw it at him. \"Get the fuck out, get out! I never want to see you again.\" \n\nHe dodged the cookie. \"It's Christmas Eve, where am I supposed to go?\"\n\nI threw another cookie, and it hit him on the shoulder. \"I don't give a shit. Get out!\" \n\nHe took a step back as I threw another, then another. Then the plate. \n\nIt smashed on the floor, shattering loudly. I screamed, and cried, and screamed some more, until he finally left the room and the house, slamming the door behind him.\n\nOnce Frank was gone, my destruction didn't have a target. I tore garland off the railings. Collectibles went flying, figurines and decorations smashing on the floors and the walls. I knocked the tree over, listening to the decorations crunch as they broke, kicking it until the branches broke off.\n\nThen the Christmas village. I shoved it to the floor, all but the town tree, which I picked up and hurled at the fireplace. It hit the mantel, exploding into a shower of expensive, obnoxious dust. \n\nYou're obnoxious, he said. \n\nSobbing, I blew out the candles. The scent was making me sick. It was obnoxious. \n\n**\n\n2018\n\nHave you ever told someone they have a weird smile? \n\nI had a friend growing up who had a weird smile. One corner of her mouth turned up higher than the other, and her lips kind of overlapped. It was charming, to be honest. Weirdness like that is what makes people beautiful and unique. \n\nBut when we were in middle school, this boy she liked told her she had a weird smile. He wasn't trying to be mean, at least not intentionally. But his ignorance had a lasting effect. To this day, she covers her mouth when she smiles. I didn't notice it at first. We were in high school when someone asked her why she put a hand to her mouth every time she smiled. She shrugged it off and lightly said that she didn't like her smile, but there was a shadow of heartbreak in her eyes when she looked away. \n\nWhat I'm trying to say here is that words scar us. The most beautiful thing about someone can become a source of shame when it's pointed out in a negative light. It was so ingrained in my friend's head that she had a weird smile that she couldn't bring herself to show it to people. \n\nFrank did that to me with Christmas. \n\nThe year after we broke up, I tried to be my regular self, full of Christmas spirit and cheer. I tried to go to the events and parties and bake cookies for everyone. But in the back of my mind, Frank's words echoed.\n\nObnoxious.\n\nObnoxious.\n\nObnoxious.\n\nI never replaced the decorations. Whatever hadn't been broken, I had left in the house before I moved out. My mom had gotten a few things for me to decorate my new place with, but I'd given them to neighbours. Frank had destroyed any love I had for the season. \n\nThe year after that, I quit my job and started freelancing as a public relations consultant. The work took me everywhere, and I wasn't in town for Christmas that year. Or the next, which was the year I met Cole.\n\nI was working for an accounting firm, helping them navigate through a PR disaster after some high ranking staff members were caught toeing the line between ethics and illegal activity. Most of the fallout had blown over by the time I started with them, and I was charged with helping repair the firm's reputation. Straightforward enough, though there was a lot of work to be done during the four-month contract I had signed. \n\nMy desk was in a kind of no-man's land between the break room and HR. At first, I had been annoyed by the placement. Most of the places I consulted for gave me an office, or at the very least, a private corner somewhere to do my work. But the PR team was an afterthought and they didn't have a real space set up.\n\n\"This isn't going to work,\" I said to Angela. She was one of the VPs and had come to my desk to welcome me on the first day in late September. \"How am I supposed to handle calls and get anything done with people coming and going all the time?\"\n\n\"I know it's not great, but it's just temporary,\" she said.\n\n\"It's pointless. Your firm has contracted me to help with this fiasco, but if you won't give me the proper tools...\"\n\nI trailed off as I spoke. Angela took it as a threat, and began stuttering about finding a better space, but in actuality I had gotten distracted by a tall drink of water making his way down the hall.\n\nThe man was astoundingly attractive, like breathtakingly so. Dark hair, styled neatly but not so perfectly as to make him look stuck up. Well-fitting suit, but no necktie. Dark eyes, deep and gorgeous and intense. The only thing that marred his perfect face was a large but barely noticeable scar that ran along his cheek, parallel to his jawline. And that smile. Some people have those smiles that just... well.\n\nThe second I saw him, I wanted him. I didn't know anything about him, but I wanted to jump on him like a dehydrated person would jump into water. \n\nHe was talking to someone, a somber-looking woman wearing an ill-fitting skirt suit. As he spoke, her face flushed and she nodded eagerly. He flashed that smile at her again and she tottered down the hallway towards us, seemingly intoxicated by the man's presence. \n\nIf Angela caught me staring at him, she didn't say anything, but she turned towards the man. \"Cole! Hey, can you come here a sec?\" \n\nJust like that, he was striding down the hall towards us. My stomach flipped as he approached.\n\n\"Morning, Ang. What can I help with?\"\n\nAngela turned back to me. \"Nicki, this is Cole Shepherd. He's one of our HR managers. Cole, this is Nicki Calina, our contract PR consultant. Maybe there's something he can do to help us with this little problem.\"\n\nHR manager. My eyes flicked down the hallway, where the HR department was conveniently located. \n\n\"You know, maybe it'll be okay,\" I murmured. \n\n\"Well, what's going on? Maybe there's an easy solution.\" His voice was friendly, and approachable. It was perfect for an HR manager, smooth and calming and infuriatingly sincere. I wondered what he would sound like directing me to get on my knees and\u2014\n\n\"We're just concerned about her desk location. She makes a great point. How can we expect excellent PR services if she's in a busy hallway?\" Angela had leaned on the edge of my desk, posing in an almost-unnatural way. It was good to know that Cole's presence didn't affect just me and the woman in the skirt suit.\n\n\"I might just be overreacting,\" I said hurriedly.\n\n\"Not at all,\" Cole said. \"I think Facilities mentioned something about a spare room on the fifth floor. If I'm remembering correctly, it was meant to be a new space for IT, but maybe\u2014\"\n\n\"Oh, I don't want to put anyone out.\" I could feel heat rising in my cheeks.\n\n\"Are you sure?\" asked Angela. \"As we said in the interview, we are taking this very seriously and we want to make sure you have everything you need.\"\n\nI twirled my pen as both Cole and Angela looked at me. \"You know, maybe just if there's somewhere quiet I can use to make calls when I have to give statements? A spare boardroom or something?\"\n\n\"Absolutely,\" Cole said. \"I'll let Larissa know that you have full access to the HR boardroom whenever you need it. If it's booked or being used, use my office. I'm just down the hall, three doors past the boardroom.\" \n\n\"That's perfect.\" I tried not to stutter and flashed what I hoped was a winning smile. \n\n\"Wonderful. So glad this will work. If we find any other spaces that might work, I'll be sure to let everyone know that PR is the priority for it,\" Angela said. \n\n\"That's great.\" Cole grinned and I nearly melted in my chair. \"I have to run to a meeting, but I'm sure I'll see you regularly, Nicki.\"\n\n\"Every time you walk down the hallway!\" I tried not to cringe at the cheery ridiculousness that came out of my mouth.\n\nLuckily, Cole laughed and extended his hand. \"You bet. Nice to meet you, and welcome to the team.\" \n\nI shook his hand, trying not to imagine what his fingers would feel like against literally any other part of me, and put on the most professional tone I could muster. \n\n\"Just temporarily. I'm here on contract until the end of December.\" \n\nAfter he and Angela left, I took a deep breath and tried to calm myself. Cole had me feeling all sorts of things, and none of them were remotely work-appropriate. Not to mention, he was an HR manager. It's one of those good life rules that everyone should follow: never develop a work crush on the fucking HR manager. Guess what their job is? Dealing with people who can't keep it in their pants at work. It's a crush that's doomed to be either tragic or unrequited. \n\nI resolved to remain professional and ignore any inklings of feelings, appropriate or otherwise, towards Cole. I planned to treat him the same way I would any other staff member, and there wouldn't be any problems.\n\nThat plan lasted all of a day.\n\nOn my second day of work, Cole stopped by my desk.\n\n\"Morning, Nicki! Enjoying yourself?\" \n\nI smiled politely, refused to imagine what that question would sound like with his head between my legs, and nodded.\n\n\"It's been great, thanks. How are you?\"\n\nCole smiled. \"Another day in paradise. Listen, I know you've met the execs and the PR team, but I wanted to make sure you also meet some of your other colleagues. The day-to-day people you'll be around. Would you be up for having lunch with me and meeting some people?\"\n\n\"That sounds awesome. Do you eat out?\" \n\nI tried not to gag on my words as they left my mouth without consulting my brain.\n\n\"I mean, go out for lunch. Or eat here. In the break room. I brought a lunch with me, I didn't know if there was much to go for around here and I don't really know anyone so wasn't sure who to ask. You know? Just... just not sure.\"\n\nCole was probably a decent HR manager, but his poker face was shit. The sparkle in his eyes was apparent as he fought not to laugh at my Freudian slip and subsequent rambling. \n\n\"I was going to order something in, as a little 'welcome to the team' gift,\" he said when I finally stopped talking. \"Any preferences?\"\n\n\"Nope.\"\n\nBy lunch that day, I had gotten a hold of myself just enough to prevent any further embarrassment. The next morning, he stopped by my desk again.\n\n\"Morning, Nicki! How goes the grind?\" \n\n\"Good, thanks. How are you?\" \n\n\"Ready for another day in HR paradise. Hey, just so you know, on Wednesdays they bring doughnuts in for the afternoon coffee break.\" He winked conspiratorially. \"Pop by my office and let me know when they get dropped off?\"\n\nI couldn't keep myself from grinning. \"Deal.\"\n\nAs soon as I saw Larissa, the receptionist for our floor, enter the break room with a stack of pink boxes, I slid out from my desk and popped my head into Cole's office.\n\n\"Knock, knock,\" I said, then cringed. \"I don't know why I did that. I could have just knocked, I guess.\"",
        "Cole looked up from his desk and grinned. \"That can be our code word for 'it's doughnut time.'\" He practically bounded out from behind his desk. \"Come on. Let's get there before the sprinkled ones are all claimed.\"\n\nOn Thursday, Cole asked how I took my coffee.\n\n\"Black, like my soul,\" I muttered.\n\nHis surprised laugh startled me and I jumped, realizing I had answered without thinking.\n\n\"That's a good one,\" he said. \"You seem more of a purple soul to me, though.\"\n\n\"Indigo is the lightest I'll go.\"\n\n\"Indigo it is. Want me to grab you one? I was just getting myself a refill.\"\n\n\"That'd be great. But actually, can you add some cream and sugar?\"\n\nHis laughter echoed down the hallway and I couldn't help but join in. \n\nThe next week, we were eating lunch together almost every day. The week after that, no one could figure out why he was calling me Martha, and I didn't care to explain how Cole had teased me about constantly taking negative press and telling everyone \"it's a good thing.\" And the week after that, we were officially dubbed office spouses by Karen from Legal, despite me rolling my eyes at the ridiculous concept of being a work wife. \n\nI liked Cole as a person, I really did. It wasn't just the gloriously broad smile or his musical voice or those strong, soft hands. It wasn't just because I wanted to run my fingers along that scar on his cheek until my hands met his chin, tilting his face up to kiss me. He was quick-witted and funny, but also one of the nicest people I had ever met. The chemistry between us was indisputable, despite the fact he was annoyingly cheerful all the time, and I tended to take a more cynical view of things.\n\nMore often than not, I could be found rolling my eyes at Cole's enthusiasm for something and he could be found laughing in surprise at some dark joke I'd made. As the weeks went on, I found it harder and harder to follow that good life rule of not developing a crush on the fucking HR manager. More than once, I caught myself staring at Cole. And definitely more than once, I caught him staring back.\n\nThe nice thing about being a contract employee is that there was a clear end date. So while it was my own personal credence not to fuck anyone I worked with, there was a set deadline on my employment there, after which Cole and I would no longer be working together.\n\nI didn't think Cole was the kind of person I'd end up doing anything besides fucking, but that was all right with me. Relationships were a pain, especially when I moved around so much, and I couldn't deny that my attraction to Cole had started off as a solely physical thing. Sometimes, though, when I caught myself staring at him before he did, I thought maybe there was something more. It was a terrifying thought, and I pushed it from my mind with a vengeance. \n\nI say all this so that it's clear just how jarring it was when Cole walked up to my desk on the morning of December third wearing a Santa hat and a sprig of holly pinned to his suit jacket.\n\nIt was like the start of a crappy Hallmark Christmas movie. There I was, the rough-around-the-edges heroine, hilariously funny and super hot, of course. Sitting at my desk, minding my own business, when the joyful and wholesome, incredibly handsome male lead entered the hallway. I could almost hear the promo playing over us.\n\nCole loves Christmas. He would celebrate every single day, if he could. But a tragic incident in Nicki's past has left her with a hole in her heart where her Christmas spirit should be. What happens when these two unlikely friends must face their differences? This year, Nicki might just get some Cole in her stocking and save Christmas in the meantime. \n\n\"Ho ho ho!\"\n\n\"No.\"\n\nCole laughed. \"What?\"\n\n\"No Christmas stuff. This is a Christmas-free zone.\"\n\nHe leaned against my desk. \"I would have thought this is right up your alley.\" \n\n\"I don't celebrate Christmas.\" \n\nIt was one of the few times I rattled Cole. His eyes widened and he cringed.\n\n\"Shit, sorry. Am I being insensitive?\"\n\nI shook my head. \"Nothing like that. I'm not religious or anything. I just don't like Christmas.\"\n\n\"You don't like it? What's not to like?\"\n\nI tried to laugh, but it was definitely forced. \"It's kind of obnoxious, you know?\"\n\nCole clutched his chest. \"Obnoxious? Spreading Christmas cheer, far and wide for all to hear? It's glorious!\" \n\n\"Hmm. Count me out.\" I turned back to my computer and pretended to type up a press release. \n\n\"Not a chance. You wait, Martha. Like you always say, 'it's a good thing.'\"\n\nI smiled in spite of myself. \"You do you, Cole. I'm not a Christmas person.\" \n\n\"Challenge accepted.\"\n\n\"That wasn't a challenge!\"\n\n\"Too late, it's accepted. By the end of the week, you'll be dripping with Christmas spirit.\"\n\nHe sauntered down the hallway like an oversized elf, and I rolled my eyes. Thoughts of Cole often had me dripping with something, but it sure wasn't Christmas spirit. Despite his insistence, I assumed he would drop the issue. \n\nI realized very quickly that I had underestimated Cole. \n\nWhen I arrived at work the next morning, there was a small red box on my desk. Frowning, I picked it up, opened the lid, and immediately rolled my eyes. A small ornament was inside, shaped like a chimney with a set of legs poking out the top. I put my purse and coat away, picked up the box, and walked to Cole's office.\n\nHe was sitting at his computer and did an awful job of pretending to look casual when I walked in holding the box.\n\n\"No,\" I said.\n\n\"Good morning to you, too.\"\n\n\"Cole, I don't do Christmas. Take this back.\" \n\nHe blinked up at me. \"Take what back?\"\n\n\"The gift! I don't want it.\" \n\n\"Gift? I didn't bring any gift. Must have been Santa.\" \n\nI glared at him. \"Okay then. Cole, somebody left this box with a decoration in it on my desk. I have no use for decorations because Christmas is stupid. Would you like it?\"\n\n\"Nope. You should hang onto it, just in case you realize that Christmas isn't stupid.\" \n\n\"You're obnoxious,\" I muttered, and stormed out of his office.\n\nThe next day, I was hunched over my keyboard typing furiously when I heard squeals of excitement coming from down the hall. Larissa's voice drifted from her reception desk.\n\n\"Of course I love Christmas! Thank you so much, Cole! This is the perfect afternoon pick-me-up.\"\n\n\"Enjoy! It was my mom's recipe.\"\n\nI glanced down the hallway out of the corner of my eye. Cole was walking towards me with a large white tray, the bobble on his Santa hat bouncing as he came my way. I steeled myself and continue typing.\n\n\"Afternoon, Nicki!\" he exclaimed. \"I didn't see you at lunch today.\"\n\n\"Couldn't get away,\" I muttered. \n\n\"You must be hungry. Cookie?\"\n\nHe held the tray towards me and I stopped typing. The tray was filled with soft gingerbread cookies, and I could smell the spices from where I sat. My mouth betrayed me and began to water. I'm not joking when I say that they were the most delicious looking cookies I think I had ever seen. Deep brown, with glittering sugar sprinkled all over the cracked tops. Between the intoxicating scent and the fact that I hadn't eaten since a quick piece of toast at breakfast, I couldn't help myself.\n\n\"Yeah, actually.\"\n\nAs I reached for one, Cole pulled the tray back. \"One caveat. You have to say 'I love Christmas' to get a cookie.\" \n\nNormally when Cole grinned, I melted a bit. At that moment, I wanted to slap him.\n\n\"Fuck off.\" I opened my desk drawer and grabbed a bag of baby carrots, glared at Cole, and bit one.\n\n\"Oh, come on,\" he protested. \"You can't just say that you love Christmas? Not even for my famous gingerbread?\"\n\nI threw the other half of the carrot at his head and returned to typing.\n\nHis insistence continued, and my mood didn't improve over the next few days. I stopped greeting Cole when I saw him, and didn't go to the break room to grab anything unless I was sure he wasn't there. Maybe it was petty of me, but I didn't want to celebrate Christmas. It was a miserable time of year, and I was upset that my friend wouldn't drop the damn issue. \n\nOn Monday, Cole came in carrying a large Crock-Pot and dropped it off in the break room. I couldn't tell what he was doing until about an hour later. Larissa had dipped into the room to grab a refill of coffee, and when she walked past my desk after leaving, the scent of chocolate and peppermint followed her. \n\nThey don't say that scent is the strongest memory trigger for nothing. The second I inhaled, I was transported back to my old living room, watching my world shatter around me as the tree from my Christmas village hit the mantel. I bit my lip, willing the bile that had jumped into my throat back down, and pushed memories of Frank from my mind. \n\nMy mood declined as the scent of hot chocolate permeated the office more and more. It was lunchtime when Cole finally went back to the break room. Voices rose in delight as he served up peppermint hot chocolate to everyone\u2014\"real hot chocolate, not that garbage made from powder,\" he kept saying\u2014and people hurried to and from the break room to get in on it. I caught sight of the treat more than once. People carried festive red and white paper cups topped with whipped cream, red and white sprinkles, and a mini candy cane.\n\nI refused to admit that it both looked and smelled delicious. Peppermint hot chocolate used to be one of my favourite things in the world. I hadn't so much as sniffed it since that horrible Christmas three years earlier and I was determined that it wouldn't sway me. Christmas was stupid. Christmas was obnoxious. And peppermint hot chocolate was not worth admitting otherwise.\n\nThe break room quieted down and people returned to their desks and offices. Slowly, but surely, the aroma of hot chocolate faded until it was just another distant memory. I used the lack of distraction to bury myself in the project I was working on, and it wasn't until the aroma began to strengthen again that I realized Cole was standing by my desk.\n\nHe was holding a mug, still steaming, a glob of whipped cream on top. There were no sprinkles, no candy cane, and the mug was just one of the regular break room ones. \n\nCole opened his mouth to speak, but I cut him off.\n\n\"What am I supposed to do to get a cup of hot chocolate? Sing you a carol? Suck off Santa?\"\n\nHe looked embarrassed and shook his head, placing the mug on my desk. \"I'm sorry.\"\n\nI hadn't been expecting that, and I'm sure my face showed how suspicious I was.\n\n\"Really, I am,\" he said. His hand flitted to the side of his face, almost unconsciously touching the scar there. \"I know you're busy with work, but I also know you're avoiding me. I'm sorry I pushed the Christmas thing on you so much.\"\n\nHe seemed sincere, but then again, he always seemed sincere. It was up to me whether to trust him or not. Sighing, I nodded.\n\n\"Thank you, Cole. I accept the apology. I'm sorry I threw a carrot at you.\" \n\nHe snorted and within seconds, we were both laughing. After he went back to his desk, I stared at the mug for a long time.\n\nOne sip couldn't hurt, I reasoned. Just to try it. He'd gone out of his way to make sure it was as un-Christmassy as possible. It was just a nice thing for one friend to do for another. Besides, if I didn't drink it, I would have to get up and go to the break room to dump it out. What a waste.\n\nI took a sip and my eyes closed involuntarily as I nearly shuddered. The damn thing was fucking delicious.\n\n**\n\nThings didn't quite go back to normal after Cole's apology, but they didn't get worse. We ate lunch together the next day, and he didn't bring up Christmas at all. It was tense, at times, but at least we were friends again. \n\nNot that it mattered much. While my contract was technically until the end of the month, the office was closed between Christmas and New Year's. I would be on call for emergencies, but it was just a matter of days until I was done at the firm. \n\nI thought I was home free. No more Christmas cookies, no more nagging to get into the spirit. Just me and Cole, hanging out at lunch, making bad jokes and blowing off steam.\n\nLittle did I know that it was a ruse. Cole started pushing again the very next day, even without bringing it up to my face.\n\nI didn't really respond to it at first. I managed to put up with the fact that someone set up a Christmas tree near my desk. Placement wise, it made sense. The break room was right there, lots of people used the hallway... really, it was justified. \n\nThe day after that, garland went up on the walls around my desk. I gritted my teeth, but ignored it. \n\nWhen a strand of twinkling lights appeared surrounding my desk, that was a line. As soon as I walked in that morning, I took the lights down and shoved them under the Christmas tree. After the weekend, they were back up, and someone had put a set of elf figurines on the edge of my desk. \n\nSomething inside me snapped when I saw them. It was my last week at the firm, and I was done with Cole's bullshit. I took the lights and the garland down, picked up the figurines, and marched into Cole's office.\n\nHe was on a call and frowned as I stormed in, but his face changed when he realized what I was holding.\n\n\"Sorry to cut this short, but let me call you back later, okay?\" \n\nHe hung up the phone as I closed the office door behind me and dumped the decorations on his desk.\n\n\"Stop it,\" I said.\n\n\"Nicki\u2014\"\n\n\"No. Just stop.\" My heart pounded as I stood in front of him. \"Next time, I'm throwing them in the garbage.\" \n\nHe had the decency to look ashamed. \"I'm sorry. I didn't think it was that big a deal. I was just trying to cheer you up about the season.\"\n\n\"You don't know anything about me. Drop it.\" \n\n\"So tell me. Let's unpack this.\" He leaned forward and put his chin in his hand, mimicking a thinker's pose. His fingers grazed the scar that marred his otherwise-perfect cheek as he stroked his smooth face. \"Why do you hate Christmas so much, Nicki? You don't seem like the Scrooge type.\" \n\nNow, if this was one of those gloriously cheesy Hallmark movies, things might have gone a little bit differently. My mouth would drop open and I'd sputter for a moment, before collapsing in the chair across from Cole and bursting into tears.\n\nHe would be immediately concerned at the out-of-character reaction. The slightly cynical but strong and adorable female lead, crying?! What kind of trauma could she have faced to do such a thing here, at a workplace, at Christmas?\n\nI'd spill the story out to him. Slowly, as I explained the actions of my ex, I'd regain control of my breath, my sobs only coming at convenient points in the dialogue so that the viewer could understand what I was saying. \n\n\"And that's it,\" I'd say in a shaky but clear voice. \"I just can't stand any of it anymore, Cole. How could I possibly be happy again?\"\n\n\"Oh, Nicki,\" he'd murmur. He'd rise from his chair, moving around the desk to kneel beside me. \"How could anyone treat you so horribly?\"\n\n\"I don't know,\" I'd sniffle.\n\n\"Let me help you,\" he would whisper. \"Let me show you that Christmas can bring good things, too.\"\n\nAnd then, of course, he'd kiss me. Very politely and with no tongue, because come on\u2014kids might be watching! And it would be super clear that I was into it, but for dramatic purposes, after a moment I'd pull away and gasp.\n\n\"I have to go!\" I'd say, rising from the chair and bolting from the room.\n\nBut that's what happens in movies, not real life. In reality, I was definitely adorable, but this slightly cynical and strong female lead wasn't about to start crying. No, crying would mean that I was sad. And I wasn't sad.\n\nI was pissed.\n\nMy heart raced faster, heat rising in my cheeks. \"Not that it's any of your business, because it isn't, but something shitty happened to me at Christmas and I don't like being reminded of it.\"\n\n\"What happened?\"\n\n\"It's none of your business.\"\n\n\"Maybe I can help.\" \n\n\"How could you possibly help?\" I kept myself from shouting, but just barely. \"Put a candy cane on it and some tacky decorations and say it's better?\"\n\n\"That's not\u2014\"\n\n\"Not what? Not what you've been doing this whole month?\"\n\n\"I just thought that maybe if you told me what happened, you would feel better.\"\n\nA dry laugh barked out of my throat. \"You want to know? You really want to know? Three years ago, I was just like you. Only worse. I loved every stupid thing there was to love about Christmas. I was the jolliest motherfucker you'd have ever met. And I was so jolly and so obsessed with Christmas that my boyfriend got sick of it and fucked another woman. And told me about it. On Christmas Eve.\"\n\n\"That's\u2014\"\n\n\"The idea of Christmas makes me sick. I broke everything, I got rid of it because he was right. It's obnoxious. It's stupid. And I want you to stop trying to make me think otherwise.\"\n\nCole nodded, his eyes wide and face serious. \"I'm sorry, Nicki.\"\n\n\"Good for you. That's just fucking great. I don't care.\" I turned to leave, then whirled back towards him. \"I'm glad that Christmas is a happy, fun time for you. But I swear to God, if you don't stop, you're going to have another PR disaster on your hands when it gets out that I'm being harassed by someone in HR, of all things. So leave me alone.\" \n\nI flung the door open, meaning to slam it behind me but thinking better of it just in time to let it close quietly behind me. \n\nThere was no one in the hallway, and I took a moment to regroup before walking calmly back to my desk. Just as I sat down, Larissa came out of the break room.\n\n\"Oh, what happened to those cute little elves you had?\" she asked. \"It was so festive over here.\" \n\nI know people usually don't literally bite their tongues when trying to keep from snapping at someone, but my teeth were painfully embedded in mine before I could stop myself. \n\n**\n\nThe first thing I did on Tuesday morning was call Angela.\n\n\"I need a private space for this week. I don't care where, I just can't handle being in this hallway while trying to finish this up.\"\n\n\"Give me half an hour, and we'll find something.\" \n\nWhen she came to my desk twenty-five minutes later, she had an empty box with her.\n\n\"I have the perfect solution,\" she said, handing the box to me. \"There's not a lot of meetings this week, so you can take over the HR boardroom. I had Larissa move anything that was booked, and this way you don't have to go too far.\" \n\nIt wasn't the perfect solution. I had hoped to be moved further away from HR, but at least the boardroom had a door I could shut and I wouldn't have to see Cole's stupid face thirty times a day. Less than an hour later, I'd moved into the boardroom and was surrounded by blissful quiet for the first time in weeks.\n\nDespite my annoyance with Cole, I was disappointed to lose him as a friend. I was sad that I'd never get to explore whatever there had been between us. Whether it was just a quick hook up, or that \"something more\" that terrified me so much, it wasn't going to happen.\n\nWe had spent three months flirting and joking around and getting to know each other. Three months discovering there was definitely a spark between us. That was all gone. Yet another Christmas loss. \n\nIt wasn't an easy week. It was long, and busy, and frantic in trying to get everything accomplished. It was lonely, and dejecting, and while everyone else was looking forward to the break and spending time with their families, I had nothing to go home to. My next contract was in the same city, but didn't start until February. I would have an entire month of nothing.\n\nBy Wednesday afternoon, I had started feeling guilty for yelling at Cole. I replayed my words over and over in my head. Each time, it became more and more apparent that the words weren't mine. They were words that had been spoken to me, words that had scarred me, and I had thrown that pain back at Cole. ",
        "He certainly wasn't blameless in the entire situation, but neither was I. \n\nOn Thursday, I sat in the boardroom twirling a pen between my fingers long after everyone had left for the day. I still had a stack of things to finish, but I couldn't focus.\n\nFrank, just calm down. We can fix this.\n\nHow could you possibly help? Put a candy cane on it and some tacky decorations and say it's better?\n\nHow the fuck are you going to fix it? Throw some goddamn tinsel on it and say it's better?\n\nI'm sorry, Nicki.\n\nI don't give a shit if you're sorry! It's too fucking late for sorry!\n\nGood for you. I don't care.\n\nFrank's words and Cole's words and my words. All tangled up in my head like the Christmas lights I'd thrown on Cole's desk, playing like a grotesque version of a Hallmark movie. I knew exactly what it felt like to be on Cole's side of the conversation, and I'd still said those horrible things to him. \n\nI had two options, I reasoned. I could end my contract at the firm, turn my back on the whole thing, and never think about it again.\n\nAlternately, I could apologize to Cole, end my contract at the firm, turn my back on the whole thing, and never think about it again.\n\nThe first option was attractive. I wouldn't have to put myself through the embarrassment of an apology or own up to my mistakes. I could walk away, ignore what had happened, and move on with my life.\n\nIt was a great option, really, and I considered it strongly. The idea of dragging my sorry ass into Cole's office to ask for his forgiveness was daunting, at best. Why bother, when I was so close to being done?\n\nBut there was the problem of that stupid little nagging voice in the back of my heart, telling me that apologizing was the right thing to do. I owed it to him. I owed it to myself, to prove to myself that I was better than Frank. Frank had never apologized, not even for the cheating. Did I really want to take an action that put me on the same level as my ex?\n\nI packed my things up. There was no chance of getting any work done that night. Begrudgingly, I promised myself that I'd go to Cole's office the next day and apologize. \n\n**\n\nI didn't go to Cole's office to apologize.\n\nI intended to, I really did. It was the first thing I intended to do that day. But when I got to the boardroom, Angela was already waiting for me.\n\n\"I know it's your last day,\" she said as soon as I walked in. \"I am so sorry to spring this on you, but one of the executives got a DUI last night driving home from a meeting with a client.\"\n\n\"What? Who? What were they thinking?\"\n\n\"I know. It's bad. Can you help put some things in place for when this gets released?\"\n\nSo instead of going to Cole's office to apologize, I spent the first part of the day dealing with the fallout of some overpaid shithead's decision to endanger anyone with the misfortune of driving the previous evening. Fortunately, or unfortunately, depending on how it's looked at, it wasn't an entirely uncommon disaster in the PR world, and I made quick work of getting everything in place. \n\nBy the time I was finished, it was almost lunchtime. I intended on going to Cole's office to apologize, but between my lack of motivation the previous evening and the loss of the morning, I was way behind. If I skipped lunch, I reasoned, I could finish up the rest of my tasks and go to Cole's office mid-afternoon to apologize. That would be better, wouldn't it? More considerate, I thought. It wasn't fair for me to take up his lunch hour with my apology. \n\nAnd then I just... didn't. \n\nTwo o'clock rolled around. It would seem contrived, I told myself, to go to his office right at two. Like I'd scheduled it. I should wait a bit.\n\nAt two-thirty, I was in the middle of a complicated spreadsheet I was preparing for posterity. I couldn't step away.\n\nThree o'clock was coffee time, and I recycled the \"inconsiderate to take up his break time\" excuse.\n\nAt four o'clock, I ignored the time.\n\nAt four-thirty, I nearly had a panic attack when I couldn't think of a reason not to go to his office, and that was a good reason not to go to his office.\n\nAt four-forty-five, I ignored the time again.\n\nWhen five o'clock hit, I put my head in my hands.\n\nI knew I was a shitty person. A shitty, selfish, stupid\u2014\n\n\"Nicki, can I come in?\"\n\nIf he had knocked, I hadn't heard it, nor had I heard him open the door. His voice was tentative and serious, a mask for the nervousness that entwined in his words.\n\n\"Hey, Cole. I meant to come see you today.\"\n\n\"You did?\"\n\nI nodded, still not looking at him. \"Come on in.\"\n\nHe shut the door softly behind him. I took a deep breath, told myself to do the right thing, and looked up.\n\nCole was standing at the other end of the boardroom table. He had his jacket on, a black wool pea coat that made him look classy and fashionable. His hair was slightly ruffled, the Santa hat he'd been wearing for the past three weeks clasped in his hands instead of glued to his head. \n\nWe looked at each other hesitantly for a moment, neither willing to break the silence. Finally, Cole cleared his throat.\n\n\"I'm sorry,\" he said quietly. \"I was way out of line. I acted unprofessionally, and worse, I was a horrible friend to you.\"\n\n\"I owe you an apology, too.\"\n\n\"You don't.\"\n\n\"Yes, I do.\" I folded my arms and bit my lip, willing my voice not to shake. \"I should not have yelled at you. I could have explained the situation to you in a much less emotional way. And I shouldn't have tried to bring you down. Just because it's a bad time of year for me doesn't mean I should shit on how other people celebrate it. I'm sorry, Cole. I was pissed with what you were doing but that didn't warrant the reaction I had.\"\n\n\"I disagree. I think you have every right to be pissed.\" A half-smile played across Cole's lips. \"But I accept your apology.\"\n\n\"I accept yours, too. I'm... I wanted... I wish I had come to your office sooner.\" \n\n\"Why's that?\"\n\nNow, if this were a classic Christmas movie like the masterpieces on the Hallmark channel, things would have gone a little differently. I, as the gruff but lovable heroine with a tragic backstory, would tell Cole that he'd helped me get over my lack of Christmas spirit. I'd shed a single tear, sadly lamenting that my time at the firm was done and I wouldn't get to see him every day. Then, with a sniffle, I'd tell Cole I love him, and for some reason that wasn't totally clear to the viewer, had to leave because we couldn't be together.\n\nWith every bit of tense drama I could muster, I would collect my personal items and try to run from the room. Conveniently, that would mean I'd have to bypass Cole, who was still standing near the doorway. He'd stop me with a single touch on my arm that I could easily shake off, if it were real life, and throw the Santa hat clasped in his hands across the room.\n\n\"Don't you see, Nicki?\" he'd declare. \"It's meant to be. We're meant to be. All I wanted for Christmas\u2014\" cue sappy music featuring jingle bells \"\u2014was for you to be happy.\"\n\nThen he'd touch my face, and we'd finally kiss. It would be reasonably chaste\u2014these are family movies, after all\u2014but as the music swelled and the credits began to roll, the viewer would just know that Cole had hoisted me up onto that boardroom table. He'd bunch my skirt up at my waist (because in the movie, I'd be wearing a skirt even though it was the middle of winter and I hadn't worn a single skirt since starting at the firm), wrench my legs open, and fuck the Christmas spirit right back into me.\n\n\"It's my last day. I didn't want to end on a bad note. If I hadn't been a pussy about things, we could have had lunch or something,\" is what I actually said. \n\n\"How about dinner?\"\n\nI raised my eyebrows. \"Like, now?\"\n\nCole grinned and that familiar melting feeling crept through my body. \"Yeah. My treat. To make up for\u2014\"\n\n\"You have nothing to make up for.\"\n\n\"Fine. As a thank you for the past few months.\"\n\nI smiled. \"Okay. Let's do it.\"\n\n\"Great, I know just\u2014\"\n\n\"On one condition.\"\n\nCole stopped, looking at me expectantly.\n\n\"No Christmas stuff,\" I said. \"Please. Just a normal, regular dinner.\"\n\n\"Deal,\" he said. \"If you feel like I'm pushing or even veering in that direction, just tell me. I promise I'll stop.\" \n\n**\n\nCole kept his word. Dinner went by without a single mention of the season, aside from a small \"happy holidays!\" from the waitress as we left. \n\nHe took me to a nearby restaurant that he said was one of the best in town. It didn't look like much from the outside, but then again, the best restaurants never do. Once we were inside, it looked like a hipster's wet dream. Exposed brick walls, rich wooden tables that were artfully distressed, mismatched coffee cups and cutlery that probably came straight from the closest thrift store. It was as cool as it could be without being cool.\n\nI gave it a pass on the trendy-but-not-too-trendy decor because Cole was right. The food was phenomenal. Nothing came served in a garden shovel and there were no deconstructed sandwiches or anything on the menu. It was just good food using great ingredients. Even stuffing myself past the point of comfort, I wasn't able to finish my portion, and had to ask for it to be wrapped up to take home.\n\nWithout the Christmas cloud hanging over us, things felt normal. By the end of the meal, it was like the entire month of December hadn't happened. We talked and laughed, joked about work stuff, and gossiped about little rumours and stories we'd heard. \n\nBut it was not normal, at the same time. The jokes were a little more risque, the talking edging on the side of flirting. Those stares we used to hide became significant gazes, lingering just a little longer than they should have. We weren't colleagues anymore, and that chemistry we'd been ignoring since September was threatening to bubble over.\n\nHooking up with Cole had fallen from my wish list around the same time he'd put the Santa hat on. That night, it came back with a roaring insistence, and those little smiles he was giving me weren't helping. A month ago, it would have been a dream come true. My body wanted him, there was no denying that. The rest of me did, too, and it was impossible for me to ignore that it wasn't just physical. \n\nI cared for Cole. I had felt bad about our fight, and it wasn't just because he didn't deserve to be spoken to the way I had spoken to him. It was because I kind of... oh God, I kind of liked him. In a \"stay for breakfast the next morning\" kind of way. In the \"something more\" kind of way. \n\nI didn't know if that was an avenue I wanted to explore. For one thing, a relationship with Cole would mean having to handle the Christmas drama like an adult at some point. For another, relationships were complicated. I hadn't been in a serious one since Frank.\n\nFinally, I had no idea if that was something Cole wanted. And the same dreadful worry in my stomach, the one that had made excuses not to go to his office and apologize, was keeping me from admitting how I felt.\n\nMaybe I should just fuck him and be done with it, I thought. After all, there was no discernible reason that he would want a relationship with me after the way I'd acted. I was lucky he even wanted to be friends.\n\nThe evening went by too fast. I felt a pang of disappointment when the waitress dropped the bill on the table\u2014\"No rush, but do you need the machine?\"\u2014and grabbed for it, but Cole pushed my hand away gently. I shivered as his fingers brushed against mine, and hoped fervently that he didn't notice.\n\n\"I said it was my treat.\" He pulled out his wallet and nodded to the waitress, who had the machine with her despite the insistence that there was no rush. Once paid, she nodded brusquely at us and left the table.\n\n\"Well, thank you,\" I said as we got up to leave. \"That was delicious. I'm stuffed.\"\n\n\"Me too. Told you, best place in town.\" \n\nIt was that awkward part of the night, where neither of us really knew what was going to happen next. The night was clear and brisk, only mildly chilly. We stood outside the restaurant entrance for a moment, the uncertainty palpable. \n\n\"Did you want to go for a walk, maybe?\" I asked.\n\n\"Do you need a ride home?\" asked Cole at the same time.\n\nI blushed, embarrassed at having misread the situation.\n\n\"Oh, no, I can get home from here\u2014\"\n\n\"No, a walk would be great, let's\u2014\"\n\nWe stopped again and chuckled awkwardly.\n\n\"Let's go for a walk,\" Cole suggested. \"It's a nice night.\"\n\n\"Are you sure? If you have somewhere else to be...\"\n\n\"Nowhere else I'd rather be. I just didn't want to monopolize your evening.\"\n\nI tried to hide my smile at his words and failed miserably. \n\n\"Know any good places to wander?\"\n\nCole nodded. \"There's a park just a few blocks away.\"\n\nWe walked slowly, in that unhurried way people do when they have nowhere in particular to be. For a while, we didn't say much, but it was a comfortable silence. \n\nJust before we reached the park, Cole spoke up.\n\n\"Can I ask you something?\"\n\n\"Sure.\"\n\nHe hesitated, seemingly trying to think of how to phrase whatever it was, and mindlessly brushed his fingers along the faint scar on his jawline. \n\n\"Okay, it's a serious question. And we don't have to talk about it if you don't want to.\"\n\n\"Cole, you promised no Christmas stuff.\"\n\n\"It's not specifically Christmas related.\" He stopped walking and turned to me. \"Look, I know I've only known you for a couple of months, but you've always seemed like the kind of person who doesn't let other people control your life. I just wanted to know more about what happened with your ex and how it made you stop loving something you enjoyed so much.\"\n\nHe was absolutely right: I did not want to talk about that in the slightest. The happy buzz I'd been riding for the evening came to a staggering end. \n\n\"That's a pretty heavy question. I thought it was bad form to talk about exes on a date.\"\n\nCole raised his eyebrows. \"Is this a date?\"\n\nThe second the words left my lips, I had started blushing. \"I mean, no, but I just... I was joking.\" \n\n\"Oh.\"\n\nSighing, I tilted my head back and looked up at the darkened sky. \"I don't know what to tell you. Logically, I know he was the asshole in the situation, but I can't help blaming myself. Every time I try to get past it and celebrate, I just hear his voice in my head telling me how obnoxious I was.\" \n\n\"That sounds frustrating.\"\n\n\"It is. And I just... I can't get past it. It's easier to just ignore the whole thing.\" \n\nCole nodded. \"I can see why you'd say that. It's hard to move past a painful experience, especially when it's tied so closely to a holiday.\" \n\nI shook my head miserably. \"You don't understand. But thank you for trying.\"\n\nHe started to say something, then stopped. \"Do you miss it? Celebrating, I mean?'\n\nPursing my lips, I looked at Cole. He was watching me, his face earnest, ready to back off at any second. I think he knew he was toeing the line of what he had agreed to. There was something about the way he was looking at me that stopped me from snapping at him, though. He wasn't pushing the issue. He wasn't trying to force me to be happy. He just, earnestly, honestly, sincerely wanted to know. \n\nIt was that look that made me search my own heart for the answer. The easy thing would have been to say no, I didn't miss it, and let the issue drop. But it wasn't the truthful answer.\n\n\"A little bit,\" I admitted. \"But not enough to put myself through those memories. Don't take it as an invitation to start pressuring me.\"\n\n\"I won't,\" he promised. We started walking again, the noise of the city fading as we entered the park. \"Can I offer some unsolicited advice?\"\n\n\"Is it still unsolicited if you ask prior to offering it?\"\n\n\"I think so. Solicited advice would require you to ask for it.\"\n\nWhat the hell, I thought. \"Sure.\"\n\n\"Make new memories. Start new traditions. Stuff you didn't do before,\" he said. \"I mean, it's no secret that I go all-out for Christmas, but it's not like that's a necessity. If you miss it, even just a little bit, don't let your shithead ex ruin it for you forever.\" \n\n\"It's easier said than done, Cole.\"\n\n\"I know.\" \n\n\"You don't.\"\n\n\"Nicki, I really do.\" Again, he started to say something but changed his mind. \"It kills me that someone took something you loved away from you. The fact that he was able to do so is a testament to how horrible of a situation it was, and I sympathize. I really, honestly do. But you just said that you miss it. Even missing it a little bit is a reason to try to get it back.\" \n\nI could feel anger flaring up. The chill of the evening was even more obvious as my cheeks flushed, burning hot in the crisp air. My instinct was to yell again, to tell Cole to back off and that he had no idea what he was talking about. \n\nBut something else stopped me. The instinct to be defensive, to run away from my problems instead of facing them... that wasn't who I was. That instinct was a response, something that had been learned after I had been told my love for Christmas was what ruined my relationship. My true instinct was still there, buried somewhere beneath the layers of scars I'd obtained from having my heart broken, and it screamed at me that Cole was right. \n\nI was quiet for a long time while I processed Cole's words, and it was only when he mumbled something that I realized it.\n\n\"What was that?\" I asked.\n\n\"I said I'm sorry for overstepping.\" \n\n\"No, you didn't overstep. I was just thinking.\"\n\n\"What were you thinking?\"\n\nAgain, I paused. New memories, new traditions. Stuff I hadn't done before.\n\n\"I could really go for some hot chocolate right now,\" I said. \n\nCole's face betrayed his surprise, but he got his expression under control quickly. \"Peppermint?\"\n\n\"Yeah.\"\n\n\"I know just the place. Not as good as the stuff I make, but close. Are you up for a bit of a drive?\" \n\nI would have been fine with stopping at the nearest Starbucks, but I wasn't going to turn down more time with Cole. We drove through the city, past the outskirts of town, and when he turned down a gravel road nearly half an hour later, I looked at him in surprise.\n\n\"Where are you taking me? Should I be worried they'll find me in a ditch somewhere?\"\n\nCole laughed. \"Not a chance. Anyway, we're headed there.\" He pointed at a property just down the road, a patch of bright light in the otherwise dark countryside. When he turned in, I raised my eyebrows.\n\n\"This is a tree lot.\"\n\n\"Yep. But they make the best hot chocolate in the area. Other than mine, of course.\" \n\nThe place was quite busy. I guess the Friday before Christmas was a popular time, and Cole had to drive around a bit before finding a parking spot. When I got out of the car, it was both my Christmas dream and my nightmare.\n\nIt wasn't a big, professional operation. The place was clearly someone's farm. At the far end of the lot, there was a cute house that was positively dripping in Christmas lights. The trees filled one section of the yard, where a man was busily helping family after family purchase the most beautiful trees I'd ever seen. In another area, a woman was serving hot chocolate from a wooden booth. Portable fire pits dotted the yard, and people milled about, sipping hot chocolate and warming themselves in the golden glow.\n\nI couldn't see where they were, but speakers around the yard blasted Christmas carols. An older teen boy was helping families into a wagon full of hay. The horses at the head of it snorted as they waited, steam rising from their nostrils in the chilly night air. \n\nChildren hollered and giggled. Lovers strolled holding hands and sipping hot chocolate. It was a scene I'd watched in a million Hallmark movies come to life. Somewhere deep inside, my heart melted, and I forgot about Frank and being obnoxious and hating Christmas. As I took in the sights, my eyes filled with wonder.",
        "No, wait. Not wonder. Tears. \n\nI blinked rapidly, refusing to cry as the joy started crashing down inside me. I fought the echo of Frank's voice in my head, a voice that was somehow louder than the music blasting from the speakers. Biting my lip, I got a hold of myself just as Cole came around to my side of the car.\n\nHe took one look at my face and his smile faded. \"We can leave.\" \n\nI shook my head. \"No, this is fine.\"\n\n\"It's not. You're clearly not fine.\"\n\n\"I'm fine, Cole,\" I snapped. \"Let's get some fucking hot chocolate.\" \n\nHe looked alarmed, but I pushed past him and started towards the wooden booth. New traditions, new memories, I told myself. Frank would have never come with me to a place like this. He never even came with me to get a Christmas tree. \n\nCole caught up with me as I walked. I slowed my pace as he fell in step next to me. \n\n\"Are you\u2014\"\n\n\"Don't,\" I interrupted. \"You were right. I can't let my shithead ex ruin this forever. We're here, I want some hot chocolate, and I need to take the plunge to get past my issues with this.\" My face burned as I spoke, and I couldn't look at him. \"It's a lot easier with you here. Please help me.\"\n\nI don't know what Cole was thinking, or what his face looked like, or if he was smiling or concerned or what. It didn't matter. The next thing I knew, his hand was in mine, enveloping my fingers in a warm embrace. \n\nNeither of us addressed it. We didn't talk about it, didn't comment on the new development. My heart fluttered as he touched me, and then it just was. \n\nWhen we got to the little wooden booth, the lady serving hot chocolate smiled at us.\n\n\"Merry Christmas, folks! We have regular and peppermint tonight.\"\n\n\"Peppermint, please,\" I said.\n\n\"Make it two,\" added Cole.\n\nHe let go of my hand just long enough to grab his wallet, but I stopped him. \n\n\"My turn,\" I said, and paid the lady. \n\nHe didn't argue, just put his wallet away. Once she handed us each a steaming cup of hot chocolate, he took my hand again, and we wandered away from the booth.\n\nPeople passed by, parents chasing their kids and families rushing to be next in line for the hayride. They dodged around Cole and me as we walked, sipping our drinks, not saying anything. The chill of the air, the music, the smells, and sounds and lights... it all felt right. His hand in mine felt right, and it was invigorating and terrifying all at once. \n\n\"Still doing all right?\" he asked softly. \n\nI nodded, not trusting myself to speak.\n\n\"We can go whenever you want.\" \n\n\"Thanks.\" I glanced across the lot. \"Can we go look at trees?\"\n\n\"Of course. Do you want one?\"\n\n\"No. I just want to look at them.\" \n\nThere were rows upon rows of trees. Near the front were the little ones, apartment-sized trees that would have fit in my tiny living room nicely. Slightly taller ones, all full and lush. Towards the back were monster trees, the kind that would need a flatbed truck to haul home. We strolled through all of them, hand in hand, sipping peppermint hot chocolate as the fresh scent of pine surrounded us.\n\nWe were in the last row, surrounded by trees at least ten feet tall, when I finished my last sip of hot chocolate. \n\n\"Want to get going?\" asked Cole. \n\n\"Yeah, I think so.\" \n\nHe took the empty cup from me and nested it in his. \"Thanks for the hot chocolate.\"\n\n\"Thanks for bringing me here.\"\n\nThere was a moment, a Hallmark movie moment. Cole was facing me. There was no one else in that row of trees. It was just us, surrounded by gigantic pines. Even the music from the speakers seemed quieter. The only way it would be more cinematic would be if large, soft snowflakes started falling.\n\nThe sincere, kind-hearted, handsome male love interest looked down at me, the Grinchy female lead whose heart was in the process of repairing. I tilted my head up to meet his eyes. We gazed at each other, both nervous, both wanting what came next but scared of moving first.\n\nI was going to do it, I decided. I was going to kiss him. I stepped forward just slightly, raising my hand with the intent of touching his cheek, finally touching that scar of his, and Cole reached for me and\u2014\n\n\"You folks need a hand?\"\n\nI jumped back as the man selling the trees popped his head out at the end of the row.\n\n\"No, just looking,\" I said.\n\n\"Let me know if you need help lifting anything,\" he said. \"We've got lots of trees left. The perfect one for you is in here somewhere.\"\n\nI smiled politely. \"Thanks.\" \n\nAnd that was it. No more moment. \n\nCole cleared his throat. \"We should get going.\"\n\n\"Yep. Yeah. Good idea.\" \n\nWe started walking, hands kept firmly to ourselves. The Christmas-filled world of the tree lot returned brashly as we made our way down the main aisle towards the exit, and if it wasn't for the fact I had been determinedly staring away from Cole, I wouldn't have seen them.\n\nA small section, just behind the register. The trees in that little section were as ugly as a tree could be. Stunted, short, with branches sticking out in all directions. Most of them were rather spindly, missing branches, bowed and bent in the most natural of unnatural ways. \n\nAbove them was a hand-painted sign. \n\nCharlie Brown Specials $14\n\nI stopped in my tracks and burst out laughing.\n\nCole was a few steps ahead of me and turned, a half-smile creeping across his face as he watched me double over with laughter. \n\n\"What's so funny?\"\n\nI pointed, almost in tears. \"I need one. The trees over there. I need to bring one home.\" \n\nI picked the most pathetic-looking tree I could find. It was barely three feet tall, twisted and gnarly, and looked as though it might collapse at the very idea of having an ornament hung on it. Luckily, I only had one ornament. \n\nYear after year in my previous life, I had searched for the biggest, lushest, most beautiful Christmas tree possible. I had turned down trees for having a branch in slightly the wrong place, or not being quite tall enough to fit in with my vision. And as stupid as it was, I felt a kinship with that ugly-ass tree. It was broken, twisted, not quite right. But it was still there. And I was going to take care of it.\n\nI paid for the tree and Cole loaded it into the car.\n\n\"I have to ask,\" he said as we bumped down the gravel road.\n\nI knew what he was going to say. \"I have no idea. I just saw that sign and those poor trees and I just... I had to have it.\"\n\nHe laughed. \"Do you need decorations for it? We can stop somewhere.\"\n\n\"I have one.\"\n\n\"One decoration?\"\n\n\"Come on, Cole. Do you really think it could handle more than one decoration?\"\n\nHe grinned. \"Maybe it would surprise you with how much it can handle.\" \n\n\"Maybe,\" I conceded. \"But I really just needed a place to put the one decoration.\"\n\n\"Well, you have two decorations.\"\n\n\"No, just one.\"\n\n\"Two, if you still have the one Santa left you at the beginning of the month.\"\n\nI chuckled dryly. \"Yeah, I have it. Which is a total of one.\" \n\n\"Oh.\" We were both quiet for a moment before Cole spoke up again. \"Can I ask something else?\"\n\n\"Sure.\"\n\n\"When we were standing in the row of trees, just before the owner asked if we needed help...\"\n\nAnd of course, at that exact moment, my cell phone rang.\n\nI was both grateful and annoyed, but decided I was thankful for the distraction. I knew where Cole was heading with his question, but emotionally, I was already exhausted. Between the stress of the day, the worrying about apologizing, the \"will-they-won't-they\" of the evening, and coming to terms with my Christmas baggage, I was just about spent.\n\n\"Sorry, I have to take this,\" I said, grabbing my phone.\n\n\"Nicki? Hey, it's Marcus,\" said the voice on the other end of the phone.\n\n\"Marcus?\" I didn't know a Marcus.\n\n\"Yeah, Marcus from Legal, with the firm? Angela gave me this number, said you were the PR consultant?\"\n\n\"Oh, right. Sorry, I... yes, what can I do for you, Marcus?\"\n\nWell, it turned out that Marcus was a bit of a moron. I closed my eyes as he tried to describe what he needed, finally spitting out that the executive with the DUI had withheld some information regarding his indiscretion the night before. Specifically, he had withheld the reason he was meeting with a client so late, why he had been drinking so much, and what the client's husband had discovered upon his return to the house. The husband was not especially happy with the \"full service\" package our executive had provided to his wife, and was now threatening to sue in addition to the DUI. \n\n\"You know what, this will be a lot easier if I just come in,\" I said, cutting off Marcus as he barraged me with questions. \"Does this have to be tonight or... okay, no, that's fine. I can be there in about a half hour... No, unless you want another PR disaster because you asked an employee to speed in order to get there faster, a half hour's the earliest I can do... Great, glad we have an understanding.\" \n\nI hung up the phone and turned to Cole. \n\n\"Your company has executives with the intelligence of an inbred turkey. The collective intelligence of one single inbred turkey.\" \n\nHe burst out laughing. \"So I need to bring you back to the office?\"\n\n\"Please, if you don't mind. Oh, fuck. Except I have the tree.\"\n\n\"I can bring it by your place. Do you have a spare key or something?\"\n\n\"It's all door codes to get in. I can't put you out like that, though. If you bring me home I'll just walk to the office after.\"\n\nCole shook his head. \"Don't worry about it. Text me the codes, I'll drop you off at the office and bring the tree to your place. It's not a problem at all.\"\n\nIt was a problem, in that it meant that my evening with Cole was coming to an end, but I didn't say that. On the bright side, it meant that I finally had Cole's number and hadn't needed to go through any awkward rambling to request it.\n\nHe brought me to the office, where I was immediately immersed in a sea of chaotic panic. Legal clung to me like I was a life preserver, and I was tasked with calming their incessant whining. It took a couple of hours, but we managed to handle the PR side of things. As for the lawsuit, well, that was Legal's problem.\n\nWhen I finally managed to extract myself from the tornado of panic and leave, I checked my phone. Cole had texted shortly after he'd left me at the office.\n\nDropped the tree off, heading out now. Hope everything's all right. Let me know if you want a ride home when you're done.\n\nI bit my lip, trying not to smile. He had just been to my place, he was well aware that it was just a couple of blocks away from the office. \n\nAll done. Just walking home, I'm almost there. But thank you for the offer.\n\nAs much as I wanted to take Cole up on the offer, just so we could continue, I was mentally done. All I wanted to do was go home, maybe have a glass of wine, and stare at my stupid little ugly tree.\n\nThat evening had been more like a Hallmark movie than any other evening in my life. Had the movie version of my life continued, I would have opened my apartment door to a winter wonderland.\n\nDecorations would be everywhere, and it would smell like peppermint hot chocolate. The Charlie Brown tree would be set up in the corner, my single ornament hanging off it. I would be astounded, my eyes wide as I took in the setup. \n\n\"Cole?\" I would call out, but he wouldn't be there. The viewer would watch as my face flashed emotion after emotion. Astonishment, followed by confusion, followed by a flash of anger, then sadness. My breathing would quicken, and a tear would fall down my cheek.\n\nAnother would follow it, and then I'd be full-on crying, walking around the apartment as I pulled decorations down. Moments later, the apartment door would open and Cole would walk through holding a brown paper shopping bag.\n\n\"Nicki?\" he'd say.\n\n\"Oh, Cole,\" I'd sob. \"I can't accept this. You shouldn't have bought me these things. This is too much. Please, take them back.\"\n\n\"Calm down, calm down.\" He'd put the bag on the kitchen table and rush to me, embracing me while I clutched decorations to my chest and cried. \"I didn't buy all this. It's just things I had from my own place.\"\n\nI'd sniffle and he'd let me go. \"Why are you doing all this for me?\"\n\n\"You don't know?\" he'd say. Then, he'd pick up the bag he put on the table. \"I lied. I did buy one thing for you.\"\n\nHe would pass me the bag, and I'd open it. Inside, for some reason, would be the town Christmas tree from the Christmas village I had destroyed. \n\n\"I saw it and thought of you,\" he would explain, even though I had never told him about the Christmas village.\n\n\"Oh, Cole,\" I would cry, because even though I'd been a bad-ass cynical bitch for most of the movie, I would suddenly be a highly emotional and tenderhearted damsel. I wouldn't find it creepy at all that he had decorated my home without my permission, because somehow that single evening of handling my baggage would have cured me permanently. \"Cole, I love it. I love you.\" \n\n\"That's all I wanted for Christmas,\" he would quip, and then we would kiss. Cue jingly music, cue fade to black, cue imaginary scene with us fucking on the couch beside the ugly-ass Christmas tree. \n\nIn actuality, when I got to my apartment, the tree was leaning against the wall in my hallway. Cole probably hadn't gone more than two feet in my apartment, because he was a respectful and decent guy. I was thankful for that, seeing as there were dirty dishes all over the kitchen and a load of laundry piled in the armchair. \n\nI set the tree up in the corner of the living room, and dug through the junk piled on my counter until I found the little red box Cole had put on my desk. I took out the ornament and hung it from the sturdiest-looking branch, which still dipped threateningly under its weight. \n\nNew traditions, new memories.\n\nI didn't have Christmas pyjamas anymore, but I found the comfiest old pair of flannel pants I had and changed into them. I didn't have any hot chocolate, but I did have a bottle of peppermint schnapps and decaf coffee, so that would have to do. Then, settling in next to my Charlie Brown tree, I flipped on the TV.\n\nThere were a million Christmas movies to choose from, but I didn't want to watch some cheesy holiday romance. \n\nAn old friend had once insisted that Die Hard was a Christmas movie. I had vehemently denied it, passionately arguing that Christmas movies were not action movies. But when it appeared on my screen, I knew it was the perfect choice. \n\nThat would be my new tradition, I decided. Schnapps and coffee, an ugly tree, and Die Hard. \n\n**\n\nI didn't hear much from Cole over the next couple of days, but that was to be expected. He probably had family functions, Christmas parties, all those fun holiday things to take care of. I was single, alone in a city where I didn't really know anyone. \n\nI spent the time soul-searching. By that, I mean shopping. I didn't go all-out and buy every Christmas decoration I could find, but I did get a few more things. Most of them were in the clearance section, things that were broken or missing a piece and were cheap. I fixed them up, displayed them alongside my ugly tree.\n\nI bought a few other things. Hot chocolate, because why deprive myself? Christmas cookies, just because. Even a few gifts, which I sent via overnight mail to my parents. My mom had called immediately after receiving them, panicking because she hadn't sent me anything. I had specifically asked her, and the rest of my family, to stop buying me Christmas gifts because I wasn't buying anything for them. It took nearly an hour for me to convince her that I wasn't dying and had just wanted to let them know I was thinking about them. \n\nThe only thing I bought for full price was for Cole. I had found a small ornament, a replica of Charlie Brown's tree from the cartoon. That, along with a copy of Die Hard I had gotten for him, were the only presents under my tree. \n\nAround dinnertime on Christmas Eve, I took a picture of my decorations and texted it to him.\n\nHope I'm not interrupting any family celebrations. Just wanted to thank you for helping me get a little Christmas spirit back. \n\nI was surprised when my phone went off just a few moments later.\n\nLooking good! Love the decor. You even have a present! Any big plans?\n\nPresent's not for me. Probably just going to watch Die Hard again. Maybe we can get together sometime after all your family stuff?\n\nMy heart pounded as I hit send. We still hadn't talked about the hand-holding, hadn't even broached the topic of the almost-kiss. I wasn't even sure that he would want to, but I had to find out. \n\nHe didn't text back right away, and my heart rate slowed until I felt like it was falling. I tried not to let it hurt, and was just about to turn Die Hard on when it went off.\n\nI'm actually just around the corner from your place right now. I know it's last minute, but want to meet up?\n\nI raised my eyebrows and turned off the TV.\n\nWell that's lucky. Sure! \n\nGreat. I'll be there in five minutes.\n\nI raced into my bedroom and changed out of the flannel pyjamas as quickly as I could. Equally frantic, I tidied up the apartment, throwing clothes into the closet and dirty dishes haphazardly into the dishwasher. When Cole buzzed to be let in five minutes later, I was breathing hard, but the place looked reasonably presentable. \n\nHe knocked on the door and I opened it, expecting to see smiling, happy, Christmas-spirit-filled Cole. I had even imagined he might be wearing a Christmas sweater, or at least his Santa hat. But when I flung the door open, Cole was standing there with a somber look on his face.\n\n\"Hey,\" I said lightly. \"Everything okay?\"\n\nI motioned for him to come in, but he hesitated. \n\n\"Can I ask a favour?\" His voice was soft, characteristically serious. \n\n\"What's up?\"\n\n\"Would you... I have a thing I need to do. An errand, kind of. Would you... will you come with me?\"\n\nHe seemed so vulnerable, so nervous. Hesitant to ask, but needing support.\n\n\"Sure, Cole.\" I slipped my boots on and grabbed my jacket. \"This isn't some like, surprise family Christmas dinner or something, is it?\"\n\nHe shook his head. \"No. It's... I mean it's kind of a family thing, but there's no one there. It's not... I'm not bringing you to meet anyone. It'll be easier to explain when you see.\" \n\nI had never seen Cole so out of sorts, but I trusted him. We got into his car and sat quietly through the ride. I tried to think of where we might be going, and when we were near the outskirts of town again, I hoped my instinct was wrong.\n\nWe drove through a quiet area with mature trees lining the road. Cole turned past a stone gate and into a private-looking driveway that wound through the trees. If possible, the car grew even more silent as I stared out the window. The pit of my stomach tightened with dread as I realized I had been right.\n\nThere was no designated parking lot, so Cole just pulled to the side of the road. It wasn't until we got out of the car that he looked at me, a forlorn uncertainty in his eyes. He held a small paper bag in one hand, and I reached out and took his other hand.\n\n\"Show me where,\" I said softly.\n\nWe trudged through the snow, carefully following a path of footprints until we reached the top of a hill. A single pine tree, decorated with shining ornaments, stuck out of the snow behind three headstones covered with garlands, poinsettias, and decorations.\n\nErica Shepherd<br>April 3, 1963 - December 25, 2007\n\nDonald Shepherd<br>August 23, 1959 - December 24, 2007\n\nCarrie Shepherd<br>November 15, 1984 - December 24, 2007\n\nCole let go of my hand and opened the paper bag. Inside was a small angel figurine, made from a bell and mirrored gems. He placed the figurine on his mom's headstone as I watched silently.\n\n\"My whole family loved Christmas,\" he finally said. \"We were that family. Christmas photos every year. Matching sweaters. I hated it a bit when I was in my teens. Carrie did, too, but Dad always said it was what Mom wanted and what Mom wanted, she got. ",
        "\"The previous four years, Carrie had been away at school, so she really only came home for a few days each Christmas. Mom had missed it, you know? And she was so excited that year because Carrie was done and was working back here. She was a teacher. A really good one. The kids loved her. And it meant that Carrie got some time off at Christmas, I had time off... it was just like when we were growing up.\n\n\"She wanted to visit my grandma that night. On Christmas Eve, I mean. Gran had been really sick, was living in a nursing home. And Mom absolutely insisted we wear the matching sweaters that night. So we piled into Dad's car, went out and visited Gran, cheered her up. Mom was so happy, but I remember she cried on the way home. She thought it was Gran's last Christmas and, well, I mean no one wants to... you don't want to think it's anyone's last Christmas.\"\n\nHe paused, brushing snow off Carrie's headstone before continuing. \n\n\"I don't remember much about the accident. Carrie and I always fought about who had to sit on Dad's side, because he had to push the seat back further than Mom did. And I won, because I was taller than she was so I needed more legroom. So when we got hit, she was on the driver's side with him. I slammed against the window\u2014cut my face up pretty good and passed out\u2014but somehow, that was it. Everyone else... well. Carrie and Dad were gone before the car even stopped spinning.\n\n\"Mom made it through the night. I got to talk to her again before she...\"\n\nHis voice caught and I reached out, touching his arm. My heart was breaking for Cole, and I was struggling not to cry as he spoke.\n\nHe cleared his throat. \"She knew, you know? She knew she wasn't going to make it. And she just said to me that I had to keep making Christmas special. And I promised her I would.\" \n\nI was blinking rapidly, but it wasn't helping. A tear spilled over, tracing an icy path down my cheek.\n\n\"I said I'd make sure I celebrated for all of them. I owe it to them.\"\n\n\"Cole...\"\n\nI pulled him towards me as he roughly brushed his hands against his face. \n\n\"I'm so sorry,\" I whispered. \"I'm so, so sorry.\" \n\nWe hugged quietly for a few moments until he cleared his throat. \n\n\"I didn't bring you here to make you think your situation was better by comparison. I just wanted you to know that I understand. I really do understand. And I needed you to know why I have to celebrate it.\" Cole's eyes were red, but he looked at me intently. \"It's a non-negotiable part of my life.\"\n\n\"I understand.\" \n\nWe turned back to the graves, gazing down at them, and I reached for Cole's hand. He held it tightly as we stood there, quiet in our introspection, and didn't leave until soft flakes of snow began dotting the night sky, landing softly on our shoulders and in our hair like floating tears. \n\n**\n\nI used to wake up early on Christmas morning. As a kid, there was a reason for it. But I never stopped, even as I grew up. Year after year, I would wake up long before the sun and excitedly prepare for the coming day. \n\nThe day after Frank had left me, on Christmas morning, I woke up late. I had barely slept the night before, and when I finally did, I slept until nearly noon.\n\nThe following year, I had the same problem. I slept fitfully and stayed in bed until long after I should have.\n\nThe year after that, I had purposely stayed up drinking until late in the evening, and rolled out of bed sometime in the middle of the afternoon with a splitting hangover. \n\nThat year, the year I met Cole, the day after we had gone to the cemetery, I woke up early. \n\nThe sun wasn't up yet, but I couldn't go back to sleep. I got out of bed and made a coffee, forgoing the peppermint schnapps in favour of regular milk and sugar, and settled myself in the armchair across from my spindly Christmas tree. \n\nHad it been under any other circumstances, I would probably have asked Cole to come to my place the previous evening. But his message had been clear: if we were going to explore that avenue, I had to accept Christmas. I didn't have to celebrate it the way he did, I wouldn't be expected to be engrossed in it the way I used to, but he would not be cutting that part of his life out for me.\n\nAnd I would never, ever have asked him to. Not after what he shared with me. I might have been a cynical bitch, I might have gotten angrier than I should have and yelled when I should have listened, but I was not heartless. \n\nHe had said that it wasn't meant to make my past seem trivial by comparison, and I truly believed he didn't intend for me to feel that way. How could one not, though? What Frank had done to me was awful, but what had happened to Cole was unimaginably cruel. \n\nYet somehow, he handled it. Somehow, Cole rose above what had happened to him, and celebrated for people who couldn't. \n\nI had been attracted to Cole the moment I first saw him. It seemed like eons earlier that he had walked down that hallway, grinning in a way that made my body burn. That version of me would have been happy jumping into bed with Cole, having a good time for a night or two, and moving on.\n\nSomewhere along the line, that version of me had changed. I didn't want to jump into bed with Cole for a night or two. I wanted to live with Cole. I wanted him in my life, in my heart, and yes, in my bed. I wanted to be the one he reached for when he was sad. I wanted to pay him back for helping me cut loose the baggage Frank had left me. I wanted to wake up beside him on Christmas morning, I wanted to make new memories and new traditions for the both of us. \n\nAnd there it was. The icy-hearted cynic of a female lead was softening, discovering that yes, she could love again. Yes, the sexy, mysterious man with a heart of gold was someone she could see herself with. That after all of it, her Christmas spirit was there, deep inside, waiting to be set free yet again.\n\nThe sappiness of it all made me roll my eyes, but it didn't make it any less true.\n\nMy eyes fell on the wrapped gift under the tree. Cole had thrown me off when he came over the day before, and I had forgotten to give it to him. Not that it would have been appropriate after what he had shared, in any case. \n\nI stared at it for a long time as I sipped my coffee. When the first rays of sunlight started seeping through the window, I drank the last sip and got up.\n\nOnce my hair was brushed and I had changed into jeans and a sweater, I grabbed the present and my keys. If my life were a Hallmark movie, a particularly eagle-eyed viewer would point out that I had no idea where Cole lived, and how could I possibly have gone to his house without knowing his address? The other viewers in the room would shush that person, telling them to just enjoy the damn movie. \n\nI'd get to Cole's house, knocking on the door just as the sun came up behind me. A confused-looking Cole would answer, hair tousled artfully as the last traces of sleep clutched at the corners of his eyes.\n\n\"Nicki? What are you doing here?\" \n\n\"Cole, I needed to see you. You've changed me. Changed my life. I needed you to know that at like 7 AM for some reason.\"\n\n\"But Nicki, my tragic backstory...\"\n\n\"I accept it, Cole. If you can accept mine.\"\n\n\"Of course, but\u2014\"\n\n\"But nothing. You brought me my Christmas spirit, Cole. You found it for me. And I won't lose it again, not if you're with me.\"\n\n\"I'll always be with you.\" \n\nAnd then he'd grab me and we'd kiss as the golden glow of the sunrise flashed across the yard, making the snow glitter festively as Christmas music played. Cole would conveniently not have morning breath, I would conveniently not have coffee breath, and the credits would roll as he pulled me inside.\n\nThen that one cynical viewer would scoff. \"How did she even know where his house was, though? Come on, who can believe that? And who just goes over to someone's house unannounced? She woke him up! I'd be pissed.\"\n\nIt was a good point. What actually ended up happening was that I paused, put my keys down, and picked up my phone. \n\nMerry Christmas. Do you have plans today?\n\nI sent it and started fixing myself another cup of coffee, not expecting that I would hear back right away. Surprisingly enough, he responded just a couple of minutes later.\n\nMerry Christmas. Just woke up. Haven't made plans for the day. \n\nShit. I cringed guiltily.\n\nSorry. Didn't mean to wake you up. \n\nYou didn't. \n\nOkay. Wanna have lunch or something?\n\nThere was a long pause between my question and his response. I tried not to let it get to me or make me sad. He just woke up, I reasoned. Maybe he fell back asleep. Or went to the bathroom. Or needed a moment to come to emotional terms with what I had just asked him. Who knows? I didn't, because he hadn't texted back yet.\n\nI was half-done my coffee when my phone finally went off again.\n\nSorry for the delay. Yes, I would really like that. \n\nI snorted. \"Sorry for the delay,\" I muttered sarcastically, then immediately felt bad about it. Cole wasn't into playing games. It was either a practical delay or an emotional one, and I could certainly understand either.\n\nCool. Don't think much is open today. Wanna come here or do you want me to come to your place?\n\nAgain, he didn't respond right away. After a few minutes, I texted him again.\n\nPlease don't stress out about this. Are you more comfortable staying home, or do you want me to make you something here?\n\nHis next response only took a few seconds.\n\nLOL. Was it that obvious? If it's good with you, can I come there? I need to get out of the house.\n\nI smiled at the phone.\n\nYep. Come over whenever, just let me know when you're on your way.\n\nI spent the rest of the morning panicking about what to feed Cole when he arrived. I didn't hate cooking, but it dawned on me that my usual fare of a tuna sandwich and salt-and-vinegar chips wasn't exactly a festive meal. Sandwiches felt like a good choice, though. Casual, but I could dress it up a bit. I had a small roast that I'd planned to use for meal prep. Cheese, mushrooms, onions. I could make a decent beef dip with that. And I had potatoes. I decided potato salad was a good side, even though it was more of a summer dish, and got to work preparing it. \n\nBy the time Cole arrived a few hours later, the potato salad was chilling in the fridge, all the sandwich ingredients were ready and just needed to be broiled, and I had even folded the laundry scattered around the living room and put it away properly. I was patting myself on the back for tidying up the place when Cole knocked on the door.\n\nHe wasn't wearing the Santa hat, or the sprig of holly. He also hadn't shaved, and a spatter of scruff covered his chin except over the spot where his scar cut along his jawline. \n\nBut he was smiling, and that smile lit up his face. I couldn't help but grin back.\n\n\"Come on in,\" I said.\n\nHe took off his shoes as I took his coat. I realized that it was the first time I had seen Cole in anything besides a suit. Other than the previous night, of course, which barely counted since he was wearing his winter coat.\n\nCole always looked great in his suit, but the sight of him dressed down sent a warm tingle through my chest. He wore nice fitting jeans and a sweater. Nothing fancy, but he looked comfortable, and that was enough to increase my heart rate just a little bit.\n\nThere was a moment of awkwardness after I put his coat away.\n\n\"Do you want a drink? Uh, water, coffee, orange juice... beer or wine, if you're inclined to day drink. Oh, or coffee and schnapps.\"\n\nHe raised his eyebrows. \"Coffee and schnapps?\"\n\n\"Yeah. I invented it. It's like peppermint hot chocolate but replace the chocolate with alcohol.\" \n\nHe insisted on trying it, so I made two of my special coffees and we made our way over to the couch. \n\n\"Look at this,\" he said, lifting up one of the clearance decorations I got. \"This is... something.\"\n\nI laughed. \"It was on sale. Isn't it hideous? I had to rescue the poor thing.\"\n\nThe decoration in question was a small wooden figurine of birds wearing Christmas hats. In theory, it was a cute idea, but the thing looked like it had been carved by someone who had never seen a bird in real life, and painted by someone else who had tried to make their own paint out of toothpaste and food colouring. I had gotten it for less than a dollar because one of the beaks had been broken, but it had been easy enough to fix with a little glue.\n\nCole grinned. \"It's probably the ugliest thing I've ever seen.\"\n\n\"I know. I love it.\" \n\n\"Your tree looks good there. Actually, I think it's even healthier than it was when you got it.\" He touched the wrapped present underneath it. \"You didn't open your gift.\"\n\n\"Oh, that's not for me. It's for you.\" \n\nCole glanced up in alarm. \"Oh, I didn't\u2014\"\n\n\"Don't,\" I interrupted. \"You've put up with more than enough crap from me and done a lot for me in the past few weeks. It's nothing big. Open it.\" \n\nWe sat on the couch and Cole opened the present.\n\n\"Charlie Brown Special,\" he said, grinning when he saw the ornament. \"This is amazing, thank you.\"\n\n\"It's no big deal,\" I said, blushing slightly as he shot that smile of his at me. \n\n\"And... Die Hard?\" He frowned, chuckling a bit.\n\n\"Best Christmas movie ever,\" I stated. \n\nHe burst out laughing. \"I never thought of it that way. This is awesome, Nicki. Thank you.\" \n\n\"Don't mention it,\" I replied. \"Thank you. For... everything.\"\n\nAn air of seriousness fell between us, and a nervous tangle began in my stomach. Cole didn't say anything, and I stared down at my hands, trying to think of what to say next.\n\n\"I'm shit at this,\" I finally said. \"Look, I thought... the past few months, working with you... now that we aren't working together... fuck.\"\n\n\"I know what you mean,\" he replied softly. \"It's been great. It really has. And then I felt like I kept fucking it up with the Christmas thing. I meant what I said last night. It's a non-negotiable part of my life.\"\n\n\"I'm good with that,\" I said. He raised his eyebrows at me. \"I am. I can't promise you it will always be easy, but you were right. New traditions, new memories. I like these memories that I'm making with you. I want more of them. I just want... more. I don't want to just have sex with you and then never speak again.\" \n\n\"Wait, that was an option?\" Cole said. \n\nMy face must have been cartoonishly waylaid, because he burst out laughing. \"I'm kidding. Call me old-fashioned or whatever, but I don't like doing that. I want more, too.\" \n\n\"Thank Christ,\" I muttered. I could nearly feel my heartbeat through my skin. \"Look, do we have to talk about this more or can I just kiss you? Because I've been waiting for ages and I'd really like\u2014\"\n\nHe cut me off with his kiss, and I was incredibly thankful for it. I grabbed at his neck, clinging to him as his hands found my waist and pulled me closer. \n\nI was hungry for him. I couldn't get enough of his lips, soft and demanding and tasting of peppermint and coffee. Cole returned in kind, eagerly exploring my mouth. His tongue slipped past my lips and flicked against mine. \n\nMy body reacted immediately. It wasn't a slow warmth spreading from my head to my toes; it wasn't a gradual build of arousal. No, it was like electricity shot from his hands as they pressed gently against me and his mouth as it claimed mine. All at once, I wanted all of him. \n\nA soft noise escaped my lips and Cole pulled back. \"Too fast?\" \n\n\"For me or for you?\" I gasped.\n\nHe laughed. \"For you.\"\n\nI launched myself into his lap as he trailed off, straddling his thighs and grasping at the front of his sweater as I pressed my lips to his again. I felt the corners of his mouth turn up as he smiled.\n\n\"Not... too fast... then?\" he asked between kisses.\n\n\"Nope.\"\n\nHe touched my hips, hands sliding over my sweater along the side of my body. It was almost infuriatingly slow, almost tentative. All I wanted was to rip off his sweater, unbutton his jeans, and take him inside me. I nipped lightly at his lips as he wrapped his arms around my body.\n\n\"Too fast for you?\" I breathed.\n\n\"Depends on what you mean.\"\n\nI pulled back, opening my eyes as a tremor of uncertainty cut through the electrical current of his touch.\n\n\"What do you mean, what I mean?\" \n\nCole looked at me intently. \"If you mean 'too fast' as in, 'Do I think it's too soon to have sex,' no, I don't. I've wanted you for months. I feel like I've known you for years. I want you more than I can even say.\" He kissed me lightly before continuing. \"If you mean 'too fast' as in, 'Do I want to spend a little more time in this moment, unwrapping you... exploring you... touching you everywhere...'\" Another kiss fell on my lips, a bit more intense that time. \"It's Christmas Day. The best part of opening gifts is the anticipation.\" \n\n\"That's the most romantic thing I've ever heard,\" I mumbled.\n\n\"Really?\"\n\n\"Yeah. You sap.\" I batted lightly at his shoulder. \"But let's try it.\"\n\nHis lips found mine again and again. Slowly, then quickly, then slowly again. I relaxed on his lap, my grip on his sweater loosening until I was just resting my hands against his chest. His hands wandered lazily, tracing the curve of my waist, running along my back, just grazing the waistband of my jeans. \n\nIn time, I began exploring, too. I touched his chest, feeling the muscles beneath his sweater. Then his shoulders, broad and strong and relaxed. My fingertips trailed along his neck until I felt the roughness of his facial hair beneath them, broken by the smooth scar on his jaw.\n\nI followed its path along his cheek, mapping it beneath my touch. Cole sighed softly against me and tightened his grip, clutching my body to his. My lips left his and travelled along the same path as I feathered light kisses along his jaw.\n\nHe didn't say anything, but the intimacy of the act seemed to seal our fate. As my lips left the path of his scar and journeyed towards his ear, Cole's hands slipped beneath the ribbing at the bottom of my sweater. I shivered as his fingers met the skin on my stomach, lingering for just a moment before they began gliding further and further up.\n\nOne hand found the edge of my bra as the other moved to my back, holding me in place. He walked his fingers along my ribs, tracing the outline of my breasts. They trailed up along my cleavage, then continued along the top of the cup. Once he had made a full circle, his hand finally moved over my breast and squeezed just slightly.\n\nHis quiet groan made me smile as I kissed the spot below his ear, where his jaw met his neck. I kept kissing that spot as Cole's hand grew bolder, gripping my breast more firmly as he kneaded it. My nipple was achingly hard, pressing against the fabric of my bra and into the palm of his hand.\n\nHis breath was soft against my neck, and after a moment he buried his face against it. My hair tented over his head as he kissed my neck, his lips and tongue leaving a scorching trail as he nuzzled against me. I stifled a soft moan as his hand slipped into my bra. His fingers found my nipple, rolling it between his fingers before cupping my breast again.\n\nBetween my legs, things were getting slick. My pussy throbbed, begging for attention, and up to that point I had ignored it successfully. But when I felt Cole's body reacting, a growing hardness pressing against me, I couldn't help myself. Ever so slightly, I rolled my hips. The slightest of moans escaped my lips as I added friction between us, and Cole groaned again as his hips thrust up almost involuntarily. \n\nHis grip on my breast tightened, then released as he pulled his hand out of my bra. It joined the other one behind my back and he deftly unhooked my bra. I grinned as his fingers tangled with the straps and pulled back.\n\n\"For sake of ease, how about we just take off a layer or two?\" I said.",
        "Cole didn't protest as I lifted the sweater over my head, sliding the bra off my shoulders without ceremony. After pushing both articles to the floor, I made to kiss him again.\n\nHe stopped me and I leaned back slightly, resting my ass against his thighs. \"Something wrong?\"\n\nCole shook his head. His eyes were all over me, lips slightly parted as he stared. I licked my lips, then bit the lower one, suddenly nervous as he kept staring at me. \n\n\"You sure nothing's wrong?\"\n\n\"Nicki,\" he breathed. \"Nothing about you is wrong at all. You're more beautiful than I ever imagined.\"\n\nI blushed, chuckling awkwardly. \"Did you imagine me often?\" \n\n\"Way more often than I should have.\" \n\nI couldn't hide my smile and Cole's eyes finally met mine as he grinned back. Our lips found each other again and his hands were everywhere, easing along my waist, circling my nipples, and running along my back to my hips. I wound my hands through his hair, pulling softly as we kissed. \n\nHis arousal was impossible to ignore, and I couldn't stop myself from grinding against it. The feel of his hardness beneath me, knowing it was because he wanted me, was infuriatingly enticing. I wanted it. I wanted to feel his cock inside me, wanted to taste it, stroke it, ride it... my panties were soaked, nearly to the point that I was worried I would get my jeans wet. \n\nI had enough of the anticipation. At the very least, I needed to unwrap Cole.\n\nI pulled away from him and tugged at the bottom of his sweater. \"Off,\" I said simply.\n\nHe obeyed without protest, removing the garment without delay. I licked my lips, placing my hand against the soft spattering of hair in the center of his chest. Out of the corner of my eye, I saw pale lines of scars on his shoulder, more jagged than the one on his face.\n\nMy lips found those scars, too, and I kissed each one before moving on. My fingers trailed along his ribs, over his stomach, against his chest. Cole's hand found my chin and brought my face to his again, kissing me as I explored his body. \n\nIt was a nice stop, but not what I wanted. All the while, Cole's cock was still pressing against me, and I was tired of the layers of denim between us. Pulling away, I slid off Cole's lap.\n\nHe looked up at me as I stood in front of him, and I maintained eye contact as I undid the button on my jeans. I pushed them down my hips, kicked them to the side, and tried not to smile at the sharp intake of breath from Cole. I let him look, watching as he licked his lips, not moving until his eyes met mine again.\n\nOnce they did, I stepped forward, then knelt in front of him. Cole's eyes were wide as I held his gaze, reaching for the button on his jeans from my spot between his legs. I unbuttoned them slowly, only looking away from his face as I carefully pulled the zipper down. \n\nHe helped me pull the jeans off his hips, raising them as I guided them down his legs. I smiled as I looked at the package in front of me, still wrapped in his boxers, but straining to get out.\n\nI touched it gently, gripping him through the fabric. Cole made a small noise as I stroked lightly, and I brought both of my hands to the waistband of his boxers. I pulled them down slowly, carefully, savouring the anticipation. \n\nHis cock came into view, fully erect, a drop of pre-cum glistening on his thick tip. Once his boxers were off completely, I wrapped my fingers around him, feeling the warmth of his smooth skin beneath my hand. \n\nI didn't look up when Cole inhaled sharply again, just continued my leisurely examination of his cock. It really was a good-looking cock. I ran my fingers along a vein, circled the thick head, and back down to the base of his shaft before gently cupping his balls.\n\nCole's head tilted back as he groaned. I glanced up, smiling, and leaned in closer. My fingers curled around his shaft as I brought my lips to the base, placing light kisses along his cock. When I reached the bulb at his tip, I flicked my tongue out and licked from the underside of his cock to the top, tasting the pre-cum that had leaked out.\n\nHis hand tightened on the couch cushion, and when I looked up again, he was looking back. \n\n\"Too fast?\" I asked innocently.\n\n\"Fuck, Nicki...\" he whispered.\n\n\"Soon,\" I said. \"But for now...\"\n\nI flicked my tongue out again, licking his head as I maintained eye contact with him. Cole's face looked almost pained and his breathing grew heavy.\n\n\"Please... will you... you know?\"\n\nRaising my eyebrows, I blinked at him. \"What do I know?\"\n\nHis face was flushing, though I'm not sure if it was from lust or from awkwardness. \"You're going to make me ask?\"\n\nI grinned, kissing his dick lightly as I nodded.\n\nHis eyes closed briefly and then reopened. \"Please, put it in your mouth.\"\n\n\"'It?'\" I repeated.\n\n\"Fuck... I don't think I've ever...\"\n\n\"Not big on the dirty talk?\" I giggled and placed another kiss on his cock. It twitched beneath my lips. \"Hmm. 'It' seems to want you to ask me properly.\"\n\nCole put his hand on my cheek and stroked it lightly. He took a deep breath, his voice strained as he spoke. \"Please... Nicki, will you please suck my cock?\"\n\n\"So polite,\" I murmured. \n\nThe noise he made as I wrapped my lips around his cock was a mix of a groan and a sigh. It was a sound I loved, something I knew immediately I wanted to hear again and again. I loved the noises Cole made. So many men that I'd been with were quiet. They expected me to be loud, to cry out and shriek and scream, but other than some grunts and heavy breathing, they didn't make much noise themselves. \n\nCole was different. Cole wasn't comically loud or particularly noisy, but he wasn't afraid to show his appreciation. I heard a lot more of those deep moans as I inched my mouth down his cock, working his shaft with my hand as I enjoyed his taste.\n\nI wasn't one of those girls who didn't have a gag reflex, but with a bit of work, I could get Cole's cock most of the way into my mouth. When my nose pressed against his pelvis, he groaned again. I could feel his hand fluttering near my head, nervously wanting to touch me but unsure of what I wanted. And with a cock stuffed in my mouth, it wasn't like I could provide an answer if he had asked.\n\nLooking up at him with his cock still shoved down my throat, I brought my hand to his and pulled it onto my head. Cole bit his lip, his hand hovering lightly against my hair for a moment. I started bobbing my head back and forth, and it only took about two repetitions before his hand was tangled in my hair and helping set the pace on his cock. \n\nMy pussy was still soaked, and I still wanted nothing more than for Cole's cock to sink inside me, but I also didn't want to stop sucking his cock. At any point during that blow job, I could have pulled back and demanded that Cole fuck me, and I don't think he would have been able to turn it down. But the noises he was making... I didn't want to stop. I wanted him to come in my mouth. I wanted to taste him. \n\nAfter all, I reasoned as his cock hit the back of my throat, it wasn't like we had anywhere else to be. I could fuck him all day and all night, if I wanted to. \n\nAround the same time I made the decision to keep sucking him off until he was done, Cole started panting. His hand stilled, gripping my hair tightly.\n\n\"Nicki... Nicki, babe, I don't want you to stop but... uh... if you don't... ahh... slow down... fuck...\"\n\nHe tried to still my head, and I pulled his cock from my mouth just long enough to look up at him and smile.\n\n\"I know. I want you to,\" I said, then wrapped my lips around his cock again and attempted to swallow it.\n\nHis hips jerked forward just slightly and he hit the back of my throat just a little too deep. I gagged, but caught my breath quickly and resumed my pace. Cole groaned again, and suddenly both hands were on my head and he was panting heavily. \n\nI didn't stop. I just kept taking his cock, listening to his grunts and moans, letting his hands guide me as I brought him closer and closer to the edge. Glancing up, I caught Cole watching me suck him intently. If I hadn't had his cock halfway down my throat, I would have smiled.\n\nJust a few moments later, his hands tightened in my hair.\n\n\"Nicki, I'm gonna... pull back now if you don't want...\"\n\nI did want, but I couldn't say that. I settled for shoving his cock down my throat again and again, hoping he got the message. \n\nHe groaned and suddenly his cock was spasming in my mouth, twitching as globs of cum shot into my throat. I slowed my movements, sucking lightly as he finished, his hands gripping my hair for dear life. \n\nWhen the last drop of cum dripped onto my tongue, I pulled my mouth off of Cole's cock and swallowed. Licking my lips, I looked up at him.\n\n\"Doing all right?\" I asked lightly.\n\nHe had collapsed back against the couch, breathing hard. \n\n\"Jesus, Nicki,\" he whispered. \"Holy shit.\" \n\nI laughed as I wiped my mouth and stood up. \"So, is that a yes?\"\n\nHe nodded, extending his arm towards me. I settled onto the couch next to him, surprised when he pulled me in for a kiss.\n\n\"That doesn't bother you?\" I asked when he pulled back.\n\n\"What?\"\n\n\"Kissing after... you know?\"\n\n\"Oh, I have to be specific, but you can call it 'you know?'\" He chuckled as I stuck my tongue out at him. \"Why should it bother me? Does it bother you?\"\n\nI shook my head. \"I just have been with a lot of guys who didn't like it, I guess.\" \n\nCole kissed me again, lingering as he did. \"They're idiots, then. You just sucked my cock. Least I can do is kiss you after, especially since I want to kiss you all over after something that amazing.\" \n\nHe punctuated his sentence by pinching my nipple. I giggled as he kissed me again, then again, and again. Then he was directing me with his hands, gently pushing me back and guiding me to lie down. When I was on my back, he nestled himself between my legs, pinning me against the couch as we kissed.\n\nOne hand held his weight; the other touched my breasts, his thumb moving over my nipples as he continued kissing me. Then he was touching my ribs, hand gliding down my stomach until it reached my panties. Those fingers of his slipped under the waistband, over my mound, and to my dripping pussy. \n\nA muffled sound of delight emerged from Cole as his fingers dipped into my slit, slick with my juices. A soft noise passed my lips as the tip of his finger dipped into my entrance, then traced up to my clit. He never stopped kissing me, just began fingering me lightly as I moaned against his mouth. \n\nIt might have been that I was more turned on than I had ever been in my life. It might have been Cole's magic fingers. Hell, it might have been a Christmas miracle. But whatever it was, it was not going to take long for me to come.\n\nI think Cole intended to go down on me, but I wrapped my arms around him, holding him tightly to me as my orgasm built. I could feel it coming: the tips of my toes were tingling, my thighs were starting to burn, and deep in the pit of my stomach, a fire was roaring. My nipples were hard, my fingers clenched against Cole's back, and I gasped for air. \n\nDespite how close I was to the edge, the orgasm itself was slow. I felt each part of my body react. My head tilted back, my eyes squeezing shut as Cole's lips moved to my exposed neck. \n\nI moaned. He kept fingering me. \n\nI squirmed. He didn't stop. \n\nAnd then I teetered off the edge. I peaked; I came, like falling in slow motion as fire shot through my body. I writhed beneath Cole, crying out as pleasure spread from my core, overtaking my senses. Clutching him tightly, I nearly cried with relief as his hand kept its pace against my clit.\n\nAll too soon, it was over, and I breathed deeply as Cole's fingers slowed, gently stroking my pussy as my body relaxed. His lips moved against my neck, muffled words that I didn't quite hear.\n\n\"What was that?\" I asked.\n\nHe lifted his head and grinned at me. \"I said, do you always come that fast?\"\n\nI laughed and swatted his arm. \"You'd be insulted if I asked you that.\"\n\n\"Yeah, but I have a recovery period, whereas I can do that to you again... and again...\" His finger dipped teasingly into my entrance again.\n\nI pressed my lips together, blushing slightly. \"Not usually that fast, no.\"\n\nHis finger pressed against me again. \"And can I make that happen again?\"\n\nI nipped at his lip. \"If you're really, really good at it.\" \n\nCole made a soft noise of agreement as he kissed me, finally withdrawing his hand from my panties. \n\n\"I'm up for the challenge. Why don't we move somewhere with a bit more space?\"\n\nLeaving our clothes in the living room, I took Cole's hand and led him to the bedroom. \n\n\"Sorry,\" I said as we entered. I may have put the laundry away, but my bed was unmade and the room certainly wasn't its tidiest. \"I should have cleaned up more.\"\n\n\"Hmm? Didn't even notice.\" \n\nI turned to look at him. Cole's eyes flicked up.\n\n\"There's a way better view in front of me,\" he said. \"Though, if I could change just one thing...\"\n\nHe stepped forward, directing me to the bed. I hurriedly pushed the blankets to the side as I sat, then lay back as Cole moved to the edge of the bed.\n\nLeaning forward, he peeled my panties down my legs. I watched as he pulled them off, dropping them to the floor as he looked at me. He paused for a moment, then brought his hands to my knees and gently guided my legs apart.\n\n\"Much better,\" he murmured. \n\nI felt completely exposed, lying vulnerably on my back with my legs spread as Cole feasted on my body with his eyes. His hands rested lightly on my knees as he took me in, eyes lingering on my pussy. When I couldn't bear it any longer, I shifted slightly.\n\n\"You're staring,\" I said.\n\n\"Sorry.\" His eyes met mine, his face serious. \"I mean it, Nicki. You are so beautiful. I can't believe this is finally happening.\" \n\nIn another life, one that seemed to have existed only hours before yet felt like a distant memory, I would have come up with some snarky response. But Cole's eyes were so sincere, his words so heartfelt, that I couldn't think of one cynical thing to say.\n\nInstead, I reached for him. \"Come kiss me.\" \n\nHe climbed on the bed, nestled between my legs again. The feel of his body was intoxicating, his skin brushing against mine as he moved over me. Then he was kissing me again, and that magical feeling of electricity ran through my body as his lips covered mine. \n\nBetween us, I could feel his cock beginning to recover. It twitched, thickening just slightly as we held each other. The thought of finally having him inside me was more than enough to make me shift beneath him.\n\n\"I want you,\" I mumbled against his mouth.\n\n\"I know,\" he said. \"Just a little bit longer. In the meantime...\"\n\nHis words trailed off, as did his kisses. They trailed down my neck and along my shoulder. His lips found a spot on my collarbone that tickled, and his tongue darted out to make sure it really was ticklish. His lips moved lower, kissing the tops of my breasts. As he licked down my cleavage, he brought a hand to my breast and gripped it gently. His lips moved up and sucked at my nipple, and I couldn't stop the high-pitched whimper that left my mouth. \n\nI touched his head as he licked and sucked my breast, hair weaving through my fingers as he worshiped my body. Cole released that breast and turned his attention to the other one, mirroring his actions on my other nipple. \n\nOnce he had decided I'd been thoroughly teased, he began planting kisses along my ribs. Both hands came to my waist and gripped me tightly as he nuzzled his way down my stomach, leaning back further and further as he made his way to my pussy. \n\nI bit back a moan as he kissed the top of my mound, only to have him kiss along my hip and down the top of my thigh. My legs weren't left wanting as he caressed them with his lips, dotting kisses all the way down to my knee before he began moving back up the inside of my thigh. As he inched closer and closer to my center, I trembled, wanting... no, needing him desperately. \n\nBut Cole wasn't done. He mimicked his actions on my other leg, and by the time his kisses landed on my inner thigh again, I was a wreck. \n\n\"Please,\" I gasped. \"Cole, please...\"\n\nHis tongue flicked out and traced along my lips with the lightest of touches.\n\n\"Please what?\" he said, a hint of laughter shrouded in his deep voice.\n\nI knew what he was doing. \n\n\"Lick my cunt, Cole. Put your fingers inside my pussy, suck on my clit, do whatever you want. Just do it now, please.\" \n\nI doubt he was surprised at my language, and he looked up at me as he lowered his face to my pussy. The intensity of his gaze caused me to shiver, and when his lips finally touched mine I sighed in relief.\n\nHe licked my pussy, all right. No man had ever eaten me out like that, and as he was sucking my clit and curling his fingers expertly to hit my G-spot, I decided no one else ever would. Cole could have proposed to me right then and there, and I would have asked what time the courthouse opened the next day. \n\nI came twice with Cole's mouth between my legs. The first time was another slow buildup, warmth rising through me. I knew I was close, and I grabbed at Cole's head as I cried out. My stomach clenched and my legs seized around his head, and all the while he kept lapping at my clit leisurely. \n\nAs I relaxed against the bed and my legs dropped away from his ears, I expected him to pull back, but Cole wasn't done. He rolled his tongue against me gently, conscious of my heightened sensitivity and able to use it to his advantage. As I caught my breath, he looked up at me again.\n\nThere was a crafty gleam in his eyes as one of his fingers moved along my slit, lower and lower, until it was just pressing against the puckered entrance to my ass. He paused, raising an eyebrow at me for permission.\n\n\"Oh, God,\" I gasped. \"You're going to be the death of me. Yes. Do it.\"\n\nI felt the soft vibrations of his chuckle against my clit, involuntarily trembling at the sudden sensation. Cole kept his attention on my clit, feathering it lightly and gently, as his finger circled my asshole.\n\nMy eyes fluttered shut as his finger pushed inside my ass. I tried to relax as he fingered me, and as I did, his intensity on my clit increased. Pricks of pleasure tingled through my body, and there was no slow ascension towards orgasm that time. One minute I was in a haze of pleasure, enjoying the feeling of Cole's finger and tongue and breath against me. The next, a rapid climb began, and I could only hold on as I plunged over the edge, coming with a wild shriek as stars flashed in my eyes. \n\nCole removed his finger from my ass and his tongue from my clit as I panted. My legs were like jelly, my toes numb. As my eyes opened again, I saw him kneeling between my legs, grinning as he wiped his mouth on the back of his hand.\n\n\"Where the hell did you learn to do that?\" I asked weakly. \n\nHe laughed and bent forward, pressing a kiss to my stomach, then my ribs, then my chest and finally my mouth. I kissed him back eagerly, the taste of my pussy still clinging to his lips.\n\nThere was a hardness against my hip, and despite the intensity and quantity of the orgasms I just had, I wanted it inside me. I didn't know if I was capable of another one, but I was desperate to feel him. The need of it consumed me, and I pushed myself up on my elbows.\n\n\"Get on your back,\" I told him. \n\n\"Why?\"\n\n\"Just do it.\" \n\nHe rolled off of me and onto his back. I crawled to the edge of my bed, knocked two or three things off my bedside table, and rummaged around the drawer until I found a condom. \n\nWhen I turned back to Cole, I took in the view for a moment. He was watching me as he lay there, the corners of his eyes crinkling as he smiled. I smiled back and moved towards him, handing him the condom without a word. ",
        "He put it on quickly, and as soon as he was done I straddled him. Reaching down, I guided his tip to my entrance. I didn't tease him, didn't hover over his cock or slide him along my slit. As soon as he was positioned to enter me, I sank down, exhaling as my body welcomed him inside.\n\nCole groaned as my pussy enveloped him. Once he was inside, I stilled for a moment, shifting my hips back and forth as I adjusted to him. His hands moved to my sides, I pushed my hair over one shoulder, and began riding him.\n\nHis length was perfect, filling me comfortably as I sheathed him inside of me again and again. My breasts bounced as I moved, and Cole's eyes were focused on them like a laser. He was making those noises again, little groans as I worked his cock, sounds that sent a sparking pulse through my body. I kept a medium pace, not slow but not frantic, enjoying the sensations and the noise and the absolute happiness I felt in that moment. I wanted nothing more than to stay like that.\n\nOn the practical side of things, however, I had physical limitations. Cole had brought me to orgasm three times. Three intense, consuming times. As much as I wanted to, I couldn't keep fucking him like that forever. I leaned forward, bringing my torso closer to Cole's, and kissed him as my movements slowed. He understood, and thrust up into me as I rested against his chest, his hands moving to my ass and gripping lightly as he took over. \n\nHis cock was still inside me when he sat up, his chest meeting mine as his hand pushed against the small of my back. I moaned softly against his mouth, a wave of delight winding through me, and ground against him instinctively. The intimacy of the moment was euphoric, our bodies pressed together and joined. My arms were around his neck as he hugged me close to him, kissing as we slowly moved against each other.\n\nI don't know how long we stayed in that passionately close embrace, but eventually, Cole directed me to lay down, plunging inside of me as I wrapped my legs around his waist. Despite my doubt that I was capable of coming again, the familiar stirring inside my stomach began. I slipped a hand between us, fingering my clit as Cole drove into me.\n\n\"Yes,\" he urged. \"Come on, Nicki. Let me feel you come.\"\n\nIt was unsteady at first, a sparking and flickering that I wasn't sure would catch. In any other situation, I would have been uncertain that I could finish before he did. But Cole was on his second round, and his stamina was much higher than mine. He kept fucking me, whispering in my ear, and the flickering became a burn that consumed me completely. \n\nI don't know how long it took for Cole to finish. It may have been minutes later, or hours. The state he had me in had no concept of time, only pleasure. I came against him, my pussy gripping his cock as I tensed, my legs holding him close to me as I cried out. I rode that wave for as long as it took Cole to come again, shuddering as he groaned in my ear. \n\nWe held each other tightly afterward. Cole got up at some point to throw the condom away, and when he came back I had tugged the blankets over me. He moved underneath them, pulling me to his chest as we recovered. I couldn't remember a time that I felt so intoxicated off sex, so completely satiated, and so physically drained. \n\nCole kissed my hair. \"Are you all right?\"\n\n\"Mmm.\"\n\n\"Did that mean yes?\"\n\nI snorted and nodded.\n\n\"Can I ask you something crazy?\"\n\n\"Mmm.\"\n\n\"Is it too early for me to use the L-word?\"\n\nMy eyes flew open as my heart began to pound. He couldn't be serious. Chemistry or not, we had only known each other for a few months. On top of that, whatever was happening between us had only officially become a thing that day. It was absolutely crazy. It was absolutely too early. \n\nAnd I absolutely didn't care.\n\n\"No, it's not. I think I feel the same way,\" I whispered.\n\n\"You don't know how happy that makes me,\" he said, cuddling me close. \"I can't wait any longer. Let's have lunch.\"\n\nLunch.\n\n\"Asshole,\" I muttered, trying to wriggle out of his grip.\n\nCole burst out laughing. \"I'm joking! Nicki\u2014stay still\u2014I was joking!\"\n\nI swatted his arm as I tried to escape his grip, blushing and laughing and grumbling at him the entire time. Cole tried to capture me, finally managing to grab my wrists and pin me to the bed on my back. He grinned as he looked down at me, and I smiled back at him.\n\n\"Got you,\" he said.\n\n\"You got me. Good luck getting rid of me.\" \n\n\"Oh, you're not going anywhere.\" He dipped his head to mine, kissing me softly. \"I love you, Nicki.\"\n\n\"I love you, too.\" \n\nHe kissed me again, his grip on my wrists releasing so I could wrap my arms around him.\n\n\"Cole?\" I asked after a few moments.\n\n\"Mmm?\" \n\n\"Lunch sounds really good right about now.\" \n\nWe both laughed and he nipped at my lip.\n\n\"Merry Christmas, Nicki.\"\n\n\"Merry Christmas. I love you.\" \n\n*\n\nChristmas is the time to say \"I love you\"<br>Share the joys of laughter and good cheer<br>Christmas is the time to say \"I love you\"<br>And a feeling that will last all through the year<br>--Christmas Is The Time To Say I Love You, Billy Squier\n\n**\n\nI hope you enjoyed, and thank you for reading! Whatever you celebrate at this time of year, may it be joyous. \n\nLove, Cheryl"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "christmas movies",
        "christmas romance",
        "christmas spirit",
        "fm",
        "love story",
        "multiple orgasms",
        "office romance",
        "oral sex",
        "safe sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/not-another-christmas-movie"
}