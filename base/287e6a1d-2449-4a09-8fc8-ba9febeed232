{
    "title": "All The Way In",
    "pages": [
        "Another reader request; this is my take on a very overused trope. Hope you enjoy it! \n\n* * * \n\nThe waves surged, in and out, like foamy grey rolling pins flecked with seaweed, and between the ominous-looking water and the gritty snow on the sand under my feet, I couldn't help but wonder what the fuck I was doing here. \n\nAh, but then I felt the chilly fingers gripping my left hand, and I glanced that way to see the woman in the blue swimsuit, and I knew. \n\n* * * \n\nJesus Christ, I had it bad. Really bad. \n\nMy heart started thumping even before I got to her door, even before I turned into the Science Department hallway, while I was still on the stairs. Going down the stairs; there was no excuse at all for breathing hard, especially for a guy who'd run track for four years. \n\nBut no. My little heart was going pitter-patter anyway, because I had it bad. \n\nNot that it's unusual for guys to have crushes on their teachers; hell, my buddy Ryan had been crushing on Audrey Temple since he was a freshman. She was just a guidance counselor, but still. He talked about her for a couple years like he wanted her to be his mother, then for a couple years more like he wanted her to be his wife, but then he'd found a girl. And since then he didn't talk about Ms Temple anymore. \n\nBut no. I had it bad. \n\nI'd taken Ms Dubinsky's bio class as a sophomore, and I'd done spectacularly badly in it; I'm an English and social studies guy who also puts together the yearbook and runs cross country, so I'm already nerdy enough, thanks. I don't need science aptitude to add to the mix. But, despite my C+, I'd finagled my way into her AP class the next year, pulling a C-. \n\nI don't imagine she thought I'd opted for the second year because it was biology I loved. No, it was her. \n\nShe was, quite simply, the greatest woman on earth. No doubt. She was beautiful and sexy and sprightly and buoyant and all those other words you're supposed to throw into Gatsby essays. She tended to speak in exclamation points. She dressed fantastically; some teachers had taken to wearing yoga pants lately, and most science teachers dress down anyway. Not Ms D; it was all skirts and nice, stylish sweaters and smart jackets with tanktops underneath. She was brilliant; obviously she knew biology, but she seemed to know about everything else too: international relations, politics, engineering, all with a pleasant and genuine manner that let you think she didn't mind discussing things like that, as long as things didn't go too off-track. \n\nShe was shorter than me, but most people are, so no big deal. She had a lovely heart-shaped face with huge, frizzy brown hair that seemed to have a life of its own; huge brown eyes, a little pixie-button nose, and a full, smiling mouth that always seemed to have dark lipstick on. Even her glasses, sprinkled with little polka-dots, lent her an air of geeky fun. \n\nShe was not a large woman at all, but she wasn't skin and bones either; she obviously worked out, and seeing her running once, long after school as our cross country team headed back from the Marsh, with her wild hair bobbing and her sturdy little legs bare, had formed an early backdrop to some of my more feverish fantasies. \n\nBut now I was a senior, closing in on my last semester, very ready to be gone. And still, I had it bad for Ms Dubinsky. \n\nI was halfway hoping she wouldn't be in her classroom when I went by; it wouldn't solve my problem, but at least I wouldn't need to confront her. School had just ended, though, so she'd probably be there, and as I dodged oncoming freshmen and sophomores, drifting around the halls in a kind of Brownian motion, I tried hard to get my breathing under control. \n\nShe was teaching out of Room 102 these days, a new spot for her; she'd taken over the good bio lab after old Mr McCarthy retired last year. I crept up to the door, my registration form in my sweaty hand, and took a deep breath as I stepped over the threshold. \n\nHoly fuck, she was in a dress today. I'd always loved her in a dress. This one was striped black and white all the way down, narrow stripes that emphasized every little nook and cranny and curve. I swallowed and hoped she hadn't seen me look straight at her hips, flaring out so wonderfully beneath her tight little waist. \n\nShe was smiling, radiant as always. Her glasses were low on her nose, and I felt a sudden urge to reach out with a trembling finger and push them up for her. \"Well, well! Todd! Haven't seen you in awhile!\" She was warm and wonderful and delightful, like she'd really missed me. \"What can I do for you?\" \n\nYou can marry me, my brain shouted back at once. Thanks for asking. I swallowed again. \"Uh, hi! I'm dropping off my registration? For the Student Government conference?\" I forced a smile. \"Remember, I couldn't go last year, and you said I should come to this one?\" \n\n\"Awesome!\" Her quick fingers brushed back a stray tendril of hair. \"Yeah, of course I remember! It's in New England this year. Come on in, sit down. We'll get you signed up.\" The dress clung to her ass, too, and I found myself searching for her underwear straps as I followed her over toward her desk in the far corner. God, I had it bad. \n\n\"I read that.\" I'd worn out my phone trying to figure out where the conference was being held; I don't travel much. \"This'll be my first plane flight.\" \n\n\"Don't be nervous,\" she said at once, settling into her chair. Her hair continued trying to fight its way out of its messy bun. \"There are like ten of us going. You'll have plenty of friends there to make sure you don't freak out.\" \n\n\"Ah.\" I sat on one of the lab stools and tried to make myself quit trying to look down her dress. \"Who else is chaperoning? Mrs Julian?\" \n\n\"You know it.\" She glanced around the room to make sure no underclassmen were still around, then sighed cutely. \"One more year, then I get to take over Student Government myself. Mrs Julian can be... challenging to work with. But you're an English whiz-kid; you know how she operates.\" Indeed I did; Julian was the lead English teacher, and she'd been mercilessly setting departmental curriculum since my older sister had been a freshman. She was a bitter, vengeful little muppet. \"But you'll be okay. If you want to, you can just hang out with me!\" \n\nJesus, was the woman trying to torture me? She meant nothing by it; it's the kind of thing she said all the time. But my God! I'd be jerking off for weeks, just based on that one little statement. She was scanning my registration form, her quick eyes flickering. \"Do your parents need to sign this?\" \n\n\"I'm eighteen.\" \n\n\"Cool. And you misspelled the destination,\" she chided. A quick, warm glance at me, full of mischief. \"You won the English Comp award last year... a typo, Mr Barry? How dare you?\" She was grinning, shaking her head, searching for some white-out. \"It's not your fault, really; it's a complicated word.\" She twisted her busy mouth into a small frown, trying to remember the spelling. \"Some Indian name. Moosanucket? Moosannanucket? I might be leaving out a syllable, but I know it ends in -ucket!\" She grinned some more. \n\n\"Like bucket?\" She was trying to put me at ease, and I was trying to obey. \"Shuck it?\" \n\n\"Suck it?\" She let her face lapse into an incredulous, wide-eyed look of shock, complete with a little round O of a mouth. \"My goodness! I shouldn't have said that, should I?\" She was laughing, though, and I joined in; it was not out of character for her to be herself, especially with seniors. \"That's what people say about me,\" she mused, shaking her head as she attacked my form with her white-out. \"When I'm not teasing, I'm mocking. No offense, Todd.\" \n\n\"None taken,\" I managed at once. God, she could read the phone book to me and I'd be captivated. We both paused, thinking uncomfortably of other things that rhymed with bucket, and then I felt like I should say something. \"It's Native American, Ms D. Not Indian. The history department would be angry at you.\" \n\n\"They can get in line.\" She chewed at her lip, nodded at my form, and stuck it into a manila folder next to her laptop. \"Cool. You're all set, Toddster. Just bring the deposit by, and you can pack your bags. We leave on the fifteenth.\" She blinked as I held out an envelope. \"What's that, sweetie?\" \n\nSweetie! I melted. I shook the envelope. \"Here you go, Ms D. There's a check in there.\" The trip was costing me my entire summer's wages, but I didn't mind. It's why I'd gotten the job. She looked at me sideways, her head cocked cutely, and reached out snakelike to snatch the envelope. \n\n\"I like a man who shows up prepared.\" She slit the envelope with her fingernail and pulled out the check. Her beautiful eyes widened. \"Wow! The full amount!\" She looked up at me, impressed. \"I'll be honest, Todd, most of these checks come from parents. It's nice to see that you've got your own account. Shows responsibility.\" She flickered a glance up and down toward my shoes, then smiled a bit enigmatically. \"But then, conscientiousness was never your problem, Todd-o. Was it?\" \n\nI shrugged, at ease now, just a couple of people talking. I'd always loved her habit of nicknaming everyone; it made me feel obscurely special. \"I think I like Toddster better.\" She grinned widely, and I sighed. \"Yeah, I'm just dumb at bio. No big mystery there.\" \n\nShe sat back in her chair and stretched her neck. \"You'll find something you can do well, Toddster, never fear.\" She smiled some more, looking calm and wistful and grown-up and altogether lovely. \"Well, I've got to get to hallway duty. Listen for the announcements about the conference meeting; Mrs Julian will be putting together a schedule, a packing list... you know. All that jazz.\" She nodded at me. \"It'll be great to have you along, Todd. I'm happy you're coming!\" What was it about her, this way she had of making everyone feel like you were the most important person in the world when you talked to her? I stood up. \n\n\"Uh, thanks Ms D.\" I wondered whether I should say it, but eventually I just went ahead and blurted it out. \"I miss your class this year.\" \n\n\"It misses you too, Toddster.\" She smiled so sweetly, even if it was just a stock response from her. \"See you soon!\" \n\n\"If I'm lucky,\" I replied, faltering a little, but she was still smiling as I left. \n\n* * * \n\nThat evening I locked my bedroom door before dinner and jerked myself madly, splattering a long lively line of spunk that reached all the way to my own chin. Took about three minutes. \n\nGod, I had it bad. \n\n* * * \n\nI had no idea what to do at the airport, which was not a feeling I enjoyed. I hung close to my buddy Ryan, whose parents had enough money to fly them out to California every summer. \"Dude, I'm telling you, it's no big deal. Just do what the security guys tell you, shut up, and smile. It's nothing.\" \n\nI smiled uncertainly at him and glanced over at his girlfriend, Leah, whom I'd known since kindergarten. She and I had parents who moved in the same circles and made the same money, and she'd never been out of the state. She seemed a little nervous, too; the airport was a fucking mess, like some sort of Asian marketplace in the movies. Everything was noise, crowds, orderly confusion, and the overwhelming sense that everybody else knew what was going on while you were in the dark. \n\nBut at least Mrs Julian, at the front of the line, knew where to go. She led us like Patton, briskly and efficiently, relying on Ms Dubinsky at the back of the line to pick up any stragglers. There weren't any male chaperones, and I wondered how the school got away with that... until I realized that with ten kids traveling, only three of us were guys. \"Like, how are we going to do the sleeping arrangements?\" Ryan had fretted. \"There are only two beds in the hotel rooms.\" \n\nThe other guy was Jeff Pike, who'd never once spoken to a girl as far as anyone knew. He was in StuGov because, apparently, he actually truly did want to go into politics. \"I'll take the floor,\" he said immediately, and loudly. \"You guys can have your own beds.\" He'd looked around as he'd said it, desperate that none of the girls thought he'd ever sleep in the same bed with a guy, but Mrs Julian had overheard him. \n\n\"We'll get a cot,\" she'd said shortly, clearly busy with logistical matters more important than Jeff Pike's sexuality. \"Stop complaining.\" \n\nNow, with the plane landing at some little coastal airport in New England, I was feeling a lot calmer about the whole trip. It turned out air travel was pretty mundane, when it came right down to it; there'd been some turbulence as we'd come up the coast, and the food had been a disappointment, but we'd neither crashed nor blown up nor been hijacked, so as it turned out the teeming confusion of the airport back home had been the only bad part. \n\nThat, and the jamming swarm of people trying to all get off the plane at once, clogging the aisles. Leah and I joined them, popping out of our seats like jack-in-the-boxes as soon as the plane stopped. And until we'd stood waiting for five full minutes, we didn't know why Ryan had been laughing at us from his window seat, where he'd been relaxing the whole time, watching the ground crew out the window. \n\nAs I had the entire flight, I snuck a glance at Ms D, sitting a few rows ahead. I couldn't see her, of course, but her hair was lively as it bobbed over her seat-back, in constant motion. We'd shared the flight with the StuGov kids from Florida or Arkansas or some other bullshit state, and I could hear her swooping voice sharing ideas and banter with their advisor, a big old dude with a syrupy accent. \n\nI was obscurely jealous of him. \n\nWe loaded onto a bus with the kids from the boonies, all of us introducing ourselves with that mix of shy curiosity that geeky students all seem to share. The bus was a nice one, with reclining seats and carpeting, and there was a group from Georgia already aboard. I stared hard at Ms D in her cargo shorts and the bright-green StuGov t-shirt we all wore, as she stood in the aisle with her clipboard. \"Okay, listen up, Seaborne kids!\" Then she went down the list, doing her headcount with speed and a smile for every kid who answered; I treasured mine, of course, storing it away so that I could sigh over it later. \n\nIt was going to be a long weekend. \n\n* * * \n\nCargo shorts were an error, she admitted as we all arrived at the hotel. \"It's like thirty degrees out!\" she exclaimed to anyone who'd listen, shaking her head at her own stupidity. \"Why didn't anyone tell me?\" \n\n\"We sort of figured you'd know,\" Ben said wryly. He was a local, a kid from the nearby university, and he already had our girls giggling at his accent, lacking its Rs. \"It's coastal New England in January. You're luck there's not more snow than this.\" \n\n\"I guess,\" Ms D shrugged, but she didn't really seem upset. She never did. \"I'm changing into an Antarctica snowsuit as soon as we get to the hotel.\" \n\n\"Mmm.\" Ben was unimpressed. \"The Welcome Banquet is tonight, after everyone gets here. Then tomorrow is morning workshops and the Polar Dip in the afternoon. Sunday is more workshops, the Closing Dance, then you guys fly out on Monday morning.\" \n\n\"Yup!\" Mrs Julian had made all of us detailed copies of that same schedule, but Ms D was far too polite to tell Ben that. \"Thanks so much for taking care of us!\" \n\n\"How cold's the water for the Polar thing?\" That was Tracey Clerk, our class president. She was already turning pale and shivery, but then that's the price she was paying for her zero-percent body fat. \"I'm freezing already,\" she added unnecessarily. \n\nBen made an unabashed glance at her breasts. \"Really cold,\" he told her shortly, evidently deciding she wasn't worth his time. \"You can opt out, if you want; it's a fundraiser, so you can just contribute money instead of getting in.\" \n\n\"Nope.\" Mrs Julian's voice from the other side of the bus aisle was crisp. \"Seaborne High School will have 100% participation tomorrow.\" She glared around at all of us. \"It's for charity. No excuses.\" \n\nI nodded dutifully, figuring there was no way she or Ms D would go in. To be honest, I was nervous about it myself: sprinting into the midwinter Atlantic for charity was not what I thought of as a wise plan. Ryan, who'd done this in a lake in Minnesota at a family reunion, had already told me the score. \"Dude, it's so cold! You'll feel like your goolies are shriveling up and floating away.\" \n\nI thought about that; it was not an appetizing notion. At last, I stirred in the bus seat. \"Goolies?\" \n\nHe shrugged uncomfortably. \"I'm not going to sit here on a bus filled with kids from all over the country, talking about body parts.\" He blinked at me. \"You can't figure out what I'm talking about, from context?\" Beside him, Leah was leaning over to stare at me, giggling into her hand. \n\n\"Dude. I just thought it was a funny word, is all.\" \n\nBeside me, Jeff was leaning forward. \"What are you guys talking about?\" \n\nI leaned back in my seat, closing my eyes to the full-blown laughter from goddamn Leah. \"Nothing, bro.\" \n\n* * * \n\nThe room already smelled funky, and our stuff had only been in there for like four hours. This perplexed me; I'd washed all my clothes before I brought them, and I had to assume my fellow males had done the same. I followed my nose to Ryan's bag. \"Motherfucker!\" I wailed. \"Dude. Your bag smells like ass.\" \n\nRyan, kicking his feet up onto his bed, looked over at me. \"That's quite an outburst, Todd,\" he said smugly. \"All my clothes are clean.\" \n\nI frowned and looked at the offending bag, considering. \"Well, what about the bag?\" \n\n\"Huh?\" He was already texting Leah, and we'd dropped her off at her room like forty seconds ago. The Banquet had been as awkward as expected. \"What are you talking about?\" \n\nI rolled my eyes. Damn Ryan's rich parents, who'd never made him do his own laundry. \"Bro, when you put clean clothes into a stinky lacrosse bag, your clean clothes start to smell like your stinky lacrosse bag.\" \n\nHe frowned. \"Do what, now?\" \n\nI kicked his bag toward the dresser. \"Dude, put your shit in the drawers before everything goes rancid!\" Though, I reflected, it probably wouldn't matter; they'd been in there all day, stuffed into an airplane hold. \"Then, we'll burn the bag.\" \n\n\"Hands off my bag, Todd.\" Into this small moment of tension came a brisk knock at the door, then the completely unexpected voice of Ms Dubinsky. I froze at the sound. \n\n\"Hello?\" Another knock. \"You guys decent? I have to come in and do a room check!\" \n\nRyan and I looked at each other, my eyes no doubt more frantic than his. We were indeed decent; the Banquet had called for button-downs and nice slacks, and we'd only been back in the room for a few minutes. \"Uh, sure!\" I stammered. \"Come on in!\"  \n\nThey'd apparently given the chaperones our keycards, because the door snicked open on its own. \"Hi guys!\" Ms D said brightly as she came in. \"Just checking in. How's it going?\" \n\nI tried not to look. She was wearing nice school clothes, but there's a difference between school clothes during a day at work and school clothes during a two-hour dinner. She looked fresh and gorgeous and polished and classy, standing there in a black dress with gold speckles here and there, and strappy gold sandals. I thought of telling her she looked nice, but for starters, Ryan was right there. Also, \"nice\" didn't even begin to describe her. \"We're good, Ms Dubinsky,\" Ryan replied politely, and I saw his eyes flicker down her body. For a moment I felt obscurely offended on Ms D's behalf, but that made no sense; I'd just done the same thing. So instead, I felt obscurely offended on Leah's behalf. \n\n\"Great!\" She scanned around the room. \"Where's Jeff?\" \n\nI nodded toward the closed bathroom door just beside her. Ms D made a face, her pretty lips twisting. She nodded and, unexpectedly, kicked out sideways until the bathroom door rattled. \"Jeff, sweetie? Can you hear me?\" She didn't wait for a response; she knew he could. Instead, she just raised her voice. \" ",
        "\"So I'm in charge on this floor, Mrs Julian is upstairs with most of the girls. Lights out at ten. It's eight now, so that gives you two hours to watch TV, unpack, work on your skits and packets, whatever. You can watch TV, but if you try to unlock the pay-per-view, Mr Bourne will suspend you when you get back. Understood?\" She looked hard at both of us, and got nods in return. \"Jeff?\" A strangled affirmation came from beyond the bathroom door. \"Excellent. Mrs Julian and I know what the pay-per-view is for.\" \n\nShe crossed nimbly toward the mini-fridge, stepping over our bags, and opened the door. I saw her finger bob several times as she counted the little bottles in there. \"Missing bottles on Monday morning? Also a suspension.\" She wrinkled her forehead, trying to think whether she'd missed anything, then flashed her usual bubbly grin. \"I think that's it. We'll peek in to do a bed check sometime after ten, so we only want to see three male heads on those pillows. Right?\" Jeff flushed. \"We might even be in here more than once, to keep you people honest!\" \n\nI blanched. She was going to peek in on us sleeping? The idea was vaguely arousing. When I glanced over at Ryan he was grinning slyly, as if he wanted to make some kind of joke about female heads under comforters, but thank God he chose to keep his trap shut. Ms Dubinsky stood there, her pretty nose wrinkled, looking off into the distance. \"What stinks in here?\" she asked us finally, standing right over Ryan's lacrosse bag. \n\nRyan giggled, and around that time the bathroom door opened and Jeff walked out, looking uncomfortable. \"Um, Ms Dubinsky, what about my cot?\" \n\nShe checked her clipboard. \"Manager's sending it up soon. If it's not here by 9:30, call me in Room 118.\" She wrinkled her nose again and glared at Jeff. \"Jeff, really? What did you eat?\" \n\n\"What?\" Jeff's face flushed scarlet. \n\n\"Forget it. Mrs Julian or I better see you guys at after ten.\" She flashed us each another of her effortlessly radiant smiles, and then she was out the door. \n\n* * * \n\nI couldn't sleep, and as the clock marched past 10:30 I could feel myself getting tense. Jeff lay snoring on his cot in the corner by the TV. Ryan, who had disappeared between 9:00 and 9:59 and come back smelling like Leah's hair, was similarly exhausted. \n\nI was almost asleep myself, finally, when the lock clicked shortly before eleven. I saw the crack of light around the door. It eased open slowly, my eyes slitting into something that looked an awful lot like sleep, but I was still watching with bated breath as Bretta Dubinsky stole into my hotel room. \n\nThe door closed with a vague little click, Ms D clearly making an effort not to disturb us, but the brief flare of light from the hallway had been enough to show me a fleeting glimpse of running shorts and a cut-off sweatshirt. She tiptoed into the room, her hair up in a messy bun, and leaned over toward us as she squinted, making sure she saw three heads and no long hair, and then she was gone; I saw her body one more time, silhouetted against the hallway light, her bare legs gleaming, and then the door closed. \n\nThere was nothing for it. I whacked off furiously in the bathroom. \n\n* * * \n\nWhen the bus left the next day for the Polar Dip, it carried a bunch of nervous kids who weren't from New England. Hence, the nervousness. \n\nA dusting of snow had fallen the night before. My dad had taken us to the mountains once when I was ten, but other than that I'd never seen snow. I stared out at it as the bus trundled toward the beach, lost in thought, worried about how this was going to go. I had my board shorts on under a pair of tracksuit bottoms, and the post-lunch chill in the air after a morning of overly peppy StuGov workshops had been hard to deal with. \n\n\"So, like, why are we doing this again?\" Jeff was feeling glum. He most decidedly did not want to go into the ocean today. \n\nI shrugged. \"I guess it's a popular fundraiser up here. A lot of schools and stuff do it, the organizers said.\" I glanced over at him. \"Dude, you know you shouldn't go in there in pants, right? Then, you'll just come out wearing wet clothes.\" \n\n\"I don't care.\" Jeff was convinced pneumonia was in his future. \"I'm fucking freezing. I'm not taking anything off until I get back into a heated room.\" I shook my head; the kid was crazy, then. He'd freeze after he got out. Me, I planned to go in nothing but my shorts, so that I'd have something dry to put on afterward. \"They say they'll have blankets there, anyway,\" he sulked. \n\nI looked back out the window. The Georgia kids were in the back; they didn't live near the ocean, so they were busy gabbling excitedly about waves and sand, but to me the beach looked just like a rockier version of what we had back home. Ahead of us, the first bus was pulling in; the moment of reckoning had arrived. \n\nI saw frizzy hair bob a couple of rows ahead of me as Mrs Julian told Ms Dubinsky to get up and give us a pep talk. She was more than equal to the task, for it seemed she was coming into the water with us after all. \"Listen up, Seaborne kids!\" she called loudly, looking exhilarated. \"Everyone goes in! I want to see water up to your thighs at least!\" She glanced out the window. \"Here's the plan. We all line up holding hands, and we charge into that freaking water together! No fear!\" \n\nTracey was glancing back at all of us, her eyes shining. The Georgia kids seemed uninterested. \"No fear!\" Tracey hollered. \"I'm going all the way in! Who's with me?\" \n\nAll the way? Her? Not a chance; she was a pencil. The cold would kill her, literally. She still got a rousing response, though, the kids around me all drunk on bravery they hadn't yet been called on to show. Even the Georgians seemed to like her, and we all trooped off the bus, chanting \"No fear! No fear!\" like a battalion of Celts getting ready to charge the Romans. I was last off, my lesson learned after that long, humiliating wait in the airplane aisle, sighing to my feet behind a Jeff who looked almost too morose for words. \n\nMs Dubinsky leaned casually against the front seat of the bus, checking people off as they went charging by. She shook her head at the sluggish Jeff, then caught my eye with a wink. \"He looks like he's about to go face a firing squad,\" she observed, checking my name with a flourish. I stopped and gestured at her to go ahead, and she grinned. \"My! Aren't you a gentleman!\" I followed, shaking my head along with her, and we walked together onto the snowy sand behind the yapping crowd. \n\n\"Are you, uh, going to follow Tracey's advice?\" I asked her shyly, mostly because the silence felt awkward. \"You going all the way in?\" \n\nShe glanced up at me. \"Are you?\" \n\n\"I will if she does,\" I said, and I forced a smile that, amazingly, Ms D returned with her usual dimpled warmth. \n\n\"So, no.\" We laughed, the snow-dusted sand already sneaking into our shoes. \"Tell you what, Toddster,\" she went on, looking out to sea, \"I will if you do.\" \n\n\"Well!\" We passed a long folding table where the college kids had put an insulated cooler full of hot chocolate, Ben among them looking bored. \"In that case, I guess I'll hold you to that, Ms D.\" Kids ahead of us were stripping off their sweats and shirts, leaving them piled on towels and blankets, talking far too loudly to cover their nerves. \"Do we raise any more money if we get our hair wet?\" \n\n\"No,\" she shrugged, \"but we get bragging rights, like if we go in further than anyone else.\" She looked sideways at me. \"As short as I am, I'll probably drown.\" \n\nThe reply came rolling out without me even thinking about it. \"I'd save you, Ms D.\" Fuck me! Had I said that? She'd think I was a creep! \"I mean, that is...\" \n\n\"I believe you, Toddster,\" she replied simply, with another of those full-dimple grins, and suddenly we were in the thick of the crowd, where the sand grew firm and wet, and there was nothing in front of us but the cold, grey waves. \"Come on. Let's get this overwith!\" \n\nRyan, next to me, was already in nothing but a pair of shorts, pretending he wasn't freezing his nads off; who the fuck was he trying to impress? He already had a girlfriend. I looked around and realized that many other kids, especially the ones from the South, were following Jeff's lead and leaving on as much clothing as they could get away with. In the distance, safe from the water, a local TV crew watched in bored disbelief. \n\nI ripped my shirt self-consciously off, then glanced around to be stupefied by the sight of Ms Dubinsky, carefully peeling her yoga pants off her legs. I'd seen those legs before, running or under skirts or last night, by the slivered light from the hotel hallway, but these legs failed to stop until they reached the blue one-piece she had on, her thighs and hips sleek and well-defined, the swimsuit leaving nothing to my fevered imagination. \n\nShit. She was luscious. I stared hard at her, knowing she'd eventually turn my way and that I'd need to pretend like I'd seen nothing, but holy shit. Her ass was flat, but who cared? It was Bretta Dubinsky's ass! Above that her waist closed in tightly, with nothing at her belly but flat, well-worked abs, toned by what must have been hours in the gym. Her boobs were not massive, but they were perfect anyway. Her skin was already red and blotchy from the cold, but I couldn't have cared less. She was less than two feet away from me, both of us surrounded by cold and hyperactive flesh, the chatter rising to a crescendo as Tracey and the main Georgia girl and the rest of the Executive Board, all girls, all in their briefest possible swimsuits, grabbed a bullhorn and started getting this rabble into some kind of order. \n\nAbruptly, I found my left hand being grabbed by cold, strong fingers. \"Hold hands!\" people were yelling, laughing, and with a flush of confusion it slowly dawned on me who it was holding my hand. \n\nMs Dubinsky, of course. \n\nI fumbled on my other side for Leah, her face shining up at me from where she stood shivering next to her boyfriend, but I was busy staring loose-jawed at where Ms D's hair crackled beside my face. Shit. I had it bad. Really bad. She shuffled her bare feet in the frozen sand, bouncing up and down like a boxer about to unleash herself, her whole body taut, and I swallowed as I forced myself to look away. \n\n\"On your marks!\" A roar from the Executive Board people, clustered before us in cheerleader poses, asses outthrust with the bullhorn no longer needed. Both hands tightened on mine, and I felt my throat tighten. \n\n\"Get set!\" Ms Dubinsky turned toward me, her eyes massive without her glasses, pink with excitement and cold. \n\n\"All the way in, Toddster!\" On her other side was Kaylen Taylor, her mouth a wide black O, screaming. \"Let's go.\" \n\n\"Sure!\" I replied lamely, unable to process any of this; it was happening so quickly, and I didn't even hear anyone call \"Go!\" before the whole line was surging forward, mouths wide open, arms straining from the pressure of each others' fingers as we sprinted for the sea. \n\nThe waves surged, in and out, like foamy grey rolling pins flecked with seaweed, and between the ominous-looking water and the gritty snow on the sand under my feet, I couldn't help but wonder what the fuck I was doing here. \n\nAh, but then I felt the chilly fingers gripping my left hand, and I glanced that way to see the woman in the blue swimsuit, and I knew. And before I could even think rationally, the shouts and yells were erupting into a vast, percussive gasp as our feet and ankles hit the cold water, and then our knees, and the line disintegrated like a riot before a police line as kids stepped high or fell over or stopped short or just stood there, bouncing in the shallows. \n\nBut not Ms D and I. She was pulling me in, and when she looked back at me I saw gritted teeth and narrowed eyes, and I felt Leah slip out of my grasp as I went with her. She'd left Kaylen far behind, but on the far side I saw scattered groups of kids still plodding forward toward the rollers. I blew out a harsh, sharp exhale and followed the blue swimsuit, and the water hit my abs and holy shit, Ryan had been right: my goolies suddenly felt like they'd been kicked, hard, straight up into my body. \n\n\"Jesus,\" I gasped, but then the wave hit and Ms Dubinsky was flying back, barreling into me. Instinctively I grabbed for her, my hands grabbing whatever they could, and as I tumbled to the seafloor she was straight on top of me with her hand fumbling down, panicked, to gain leverage. It was the shock of my life when I realized where that chilly and ended up: straight in my lap, directly on top of my tortured balls, and for a moment time stopped, my world all silence and bubbles and ice and the flailing teacher on top of me. \n\n\"Fuck!\" I heard her grunt as the water raced back out, leaving her perched in my lap with her mouth and eyes wide, her wild hair raining salt water. She glared at me wildly, blinking the water out, but I could see over her shoulder as another wave was already gathering itself, and still her little hand was shoved into my lap. I glanced down, stupidly, and then so did she, and we both twitched to our feet coughing. \n\n\"Come on,\" I called, and I headed back toward the sand like a refugee, her frozen fingers gripping at my upper arm as we tumbled up out of the water. We were the last two out, it looked like. I heard heaving, gasping, spluttering, and I realized it was me, and suddenly it was freezing, colder in the open air than it had been in the water. \n\n\"Fuck,\" Ms D said again, quieter, and we stopped right where the sand began to get loose. She turned toward me with her hair all over her face, her mouth a wide-open grin. \"That was fucking amazing!\" Then she clamped her hand over her mouth. \"Sorry!\" \n\n\"That's okay.\" My teeth were a pair of castanets, and it wasn't Ms Dubinsky's face I was looking at. Her swimsuit was vacuum-formed to her body, every part of her sleek and shiny, and suddenly she had a pair of nipples that must have stuck out half an inch into the sky-blue lycra. \"You all right?\" \n\n\"Yup.\" She seemed curiously subdued all of a sudden, her eyes drifting lower, down past where my chest hair was just starting to wisp out near my nipples and under my belly button, and I saw her little pink tongue come slipping out to collect the salt water from her lips. \"I'm fine.\" I got a sudden urge to hug her, but then she was dragging her eyes back up to my face and there was something new in her eyes as she winked. \"Nice job, Todd-o.\" \n\n\"Toddster,\" I corrected automatically, but then the dimples were back and she was turning away, sauntering, shivering, yelling for Tracey, and I was left gulping in great gusts of frigid air. Someone spoke beside me, and I blinked myself back into consciousness. \"What?\" \n\nLeah stood there in a long fluffy towel, shaking and smirking. She gave a harsh snort. \"Most guys get smaller in cold water,\" she observed smugly. \"You're, uh, not.\" \n\nI looked down, horrified to see that she was right: my cock crossed my upper thigh like a fat cucumber, plain to see in the soaked board shorts. \"Jesus! I'm sorry!\" I scrambled for a blanket, but Leah just shrugged. \n\n\"Sorry for what? Why should I be offended if a guy gets a hard-on around me?\" She shook her head sadly. \"It's no big mystery why you can't keep a girlfriend, Todd. You clearly have no understanding of girls. Besides,\" she added meaningfully, nodding sideways at Ms Dubinsky's retreating back, \"I'm pretty sure I'm not the one you're popping for.\" She waggled her eyebrows. \"Right?\" \n\nI looked in disbelief at my growing erection, then at that slim freckled back with its blue swimsuit. When I finally looked at Leah, she was unsuccessfully hiding a grin. \"You can't tell anyone, Leah.\" \n\nShe giggled. \"Who would I tell, Todd?\" She batted her eyelashes, then looked around until she saw her boyfriend. \"Now if you'll excuse me, I'm going to go warm up with Ryan. You, uh, have fun.\" She winked. \"Alone.\" \n\nI shook my head after her, wrapping myself up like a burrito. Fucking Leah. She was a great girl, and pretty sexy, but I'd been friends with her since forever and she was Ryan's girl, so I always found her a little intimidating. I watched now as she disappeared into Brett's towel, giggling as he wrapped her up; no doubt what was going on under there. \n\n* * * \n\nI collapsed into my seat on the bus, a different one than before, still tubed into the blanket; I was far too cold to unwrap and put my clothes back on. I closed my eyes and rested my soaked hair against the back of the seat, listening vaguely to the blessed roar of the bus heater as the driver just sat in front of me and leered at all the girls coming aboard. There were still seats all over the place, so it surprised me when Ms Dubinsky stopped at my row. \"Seat taken?\" she asked lightly in her jacket, water soaking through her yoga pants. \n\n\"Uh, no! Please,\" I insisted, nodding down at the aisle seat. She smiled at me as she sat. \n\n\"Not going to put your shirt back on, huh tough guy?\" She wasn't mocking me, though; just making conversation, and she accepted my shy smile as a reply. \"You're okay, right?\" \n\n\"Absolutely.\" Amazingly, she seemed to want to talk to me. I searched for something to say. \"Thanks for, uh, inspiring me. You know, to go all the way in.\" \n\n\"Oh!\" The dimples deepened. \"It was my pleasure, Toddster.\" Then she looked away for a moment, her voice losing a bit of its usual verve. \"Um, but I did want to apologize,\" she told me, her voice very low. I had to lean in to hear her, flinching as her freezing wet hair touched my face. She looked around to make sure nobody was eavesdropping. \"I didn't mean to, you know... touch you. When I fell.\" Her eyes were still huge; she looked so very, very different without her glasses. \"Shouldn't have dropped an F-bomb, either.\" \n\nI must have blushed; in any case, my face felt warm. \"Oh, no no, Ms D,\" I protested, holding my hands up. Like I was surrendering. \"I'm the one who's sorry.\" I cut it off immediately, furious with myself for even opening my mouth. I'd been about to apologize for staring at her tits, which of course I couldn't do. She looked at me quizzically. \n\n\"For what?\" Shit. She wasn't letting me off the hook. \n\n\"Uh, falling.\" \n\nShe raised one eyebrow, realizing it was bullshit. \"Underneath me? That's hardly something to apologize for.\" Suddenly I realized she was looking at my chest. There was a weird pause while I moved the blanket up onto my shoulder, as surreptitiously as I could, and then she was speaking again. \"Really. You should put a shirt on. You'll catch cold.\" \n\n\"Uh, okay.\" I obeyed. She looked away, chatting with someone across the aisle, but there was a weird feeling now; all I was doing was putting on a shirt, but it seemed almost... well, intimate, doing it with her right next to me. Weird. I felt very nervous. \n\n* * * \n\nBut as awkward as things had gotten at the Dip, and then on the bus ride, they got a whole lot worse before dinner that evening. \n\nI'm not going to blame Jeff. Really, truly, I'm not. Sure, he'd done three monster shits in the hotel bathroom, but he claimed it was just the plane ride. Plus, when the hotel manager came up later to investigate, he tried to assure us they'd had a problem like that before, that it was something to do with the slope of the ground outside, and that it couldn't possibly have been caused by just one person shitting. \n\nBut regardless of the cause, the effect was a sickly smell of raw sewage in our room, a tidal wave of disgust wafting faintly out into the hall even before we were able to put our keycards in the door. We'd been driven back by the stench; Leah, moving with us, had vomited right there in the trash can in the hallway, and as soon as Mrs Julian had been informed, she exploded at the staff. ",
        "\"What is the matter with this place?\" she thundered, and we actually heard her use the word \"shit\" before the manager hastily shut his door, while the three of us waited outside with our sandy, frozen swim trunks still on. Ms Dubinsky was upstairs getting the seven girls ready for dinner. The staff was very nice to us: free coffee and cookies, an offer of a free meal, all the complimentary toothbrushes we could ask for. \n\nBut the upshot was not good. Mrs Julian emerged from the office red-faced, as angry as I'd ever seen her, looking like she'd just bent the manager over and kicked his ass. \"So, boys,\" she began, \"it's like this. The hotel is all booked up, and this... this gentleman here,\" she went on, jerking her head sideways at the manager, \"says he's not going to have a replacement room available this weekend. Your room is... well, it's uninhabitable, and he's not even sure it'll be okay by tomorrow night.\" \n\nShe was watching our faces, hers stern and deeply angry, but not at us; she was angry for us, which made me feel a lot better about myself. \"The wait staff is going to go in and get your things. Right, Mr Tighe? Because we're not going to make these young men go back into that stinking cesspit? Right?\" \n\n\"Certainly, ma'am.\" A dominatrix would not have enforced more obedience than that. \n\n\"Good. So, for tonight...\" She licked her lips, considering. \"Look, there's no good way to go about this. School policy prohibits cohabitation among students, Ryan,\" she said pointedly; she knew, of course, that he and Leah were dating, \"and policy also says there must be a chaperone sleeping on every floor our kids are on. So it's not as if Ms Dubinsky and I can share a room and give you boys one of ours; I've already been in touch with the Principal, and he's been very insistent about that.\" \n\nShe sighed and laid down the law. \"So Ms D has one bed in her room, I've got two in mine. That means two of you are going to stay in my room and one of you will be with Ms Dubinsky.\" She glared at us. \"On the floor; Mr Tighe here can't get a cot until tomorrow, at the earliest.\" She glared daggers at the poor man, who looked like his penis had shriveled just from being in the same room with her. Mrs Julian could be chilling that way. \n\n\"So.\" She considered very carefully. \"I'll confirm this with Ms Dubinsky before dinner, but Ryan? You will be in my room.\" She left nobody in any doubt that the reason for that choice began with an L and ended with eah. \"Jeff, you too; you're short, so you can easily share with Ryan.\" \n\n\"I'll take the floor,\" he said immediately, pale. He was still shivering from the Polar Dip. \n\n\"No, you will not.\" Her voice was ice. \"For now, once Mr Tighe's people get your things, you may change in the pool room? Right?\" She glanced at Tighe, making it clear that was where she wanted them to change; what he wanted did not matter. Then she nodded to herself, and her voice softened. \"This is a bad situation, boys, no doubt about it. But we'll make it work.\" The voice hardened right back up, going back to its old flinty self. \"Won't we, Mr Tighe?\" \n\n\"Oh certainly, Mrs... uh, certainly!\" \n\n\"It's Mrs Julian. Now, bring these young men their things. They'll be showered and changed and clean and neat in twenty minutes, or the refund you're giving us will be even greater. Yes?\" \n\nWe were warm, dry, and presentable in fifteen. \n\n* * * \n\n\"So, yeah.\" \n\n\"Yeah.\" Ms Dubinsky was not her usual peppy self. I got the distinct impression she was nervous, which blew me away; why such a fantastic woman would be at all nervous around a yutz like me was quite beyond my comprehension. She'd walked with me back to her room after dinner in an uncharacteristic silence, and when we'd walked into her room we'd just stood around looking at each other. \"Well, so, I'll just come on out and say it, Todd: I'm not sure I ever figured I'd be bringing a student to my hotel room.\" She looked at me, sharp as ever in a pencil skirt and one of those bright pink scoop-necked shirts with the short, short sleeves; she'd brought a little jacket thingie to go with it, but she'd slung it across the bed as soon as she'd walked in. \n\nI looked down at my shoes and shrugged. \"Well, it's sort of a first for me, too, Ms D.\" \n\n\"Even though it's, you know, allowed,\" she went right on, as though I hadn't spoken. \"Everyone knows the circumstances, the principal knows, you called your parents... it's fine. All good. But it's kind of...\" \n\n\"...a weird and unexpected situation.\" \n\n\"Yes!\" She snapped her fingers, briefly her old self, her hair jiggling like it had its own life. \"There you go!\" She sighed, and finally she sat down on her bed. \"Right.\" \n\nI felt like that meant I was allowed to sit, too, in the uncomfortable chair by the window. The heater whirred beside me. \"I mean, you could just pretend I'm not here,\" I pointed out. Shit, why was I feeling awkward? None of this was my fault; I was the wronged party here. \"I'll just hang out on the floor, out of the way, like Cinderella.\" \n\nShe looked at me levelly for a long moment. \"I was thinking more like Harry Potter,\" she said at last, frowning. \n\n\"Nope.\" I shrugged. Her legs had started swinging against the bed, and I made myself look away. \"There's no staircase here, you know, with the space underneath?\" I frowned. \"Isn't it Cinderella who slept on the floor at the foot of the bed?\" \n\nShe laid her chin in her hands, thoughtful for a moment, then nodded decisively. \"I have no idea, Toddster. But whatever.\" And then she smiled once again, and I started to feel a little better. She smoothed the skirt over her thighs. \"But I'm taking the floor, Todd. You can have the bed.\" \n\n\"No!\" \n\n\"I might have to insist, Todd,\" she said severely. \"You're my guest, and I feel like I'm supposed to take care of you, so you take the bed.\" She eyed the dirty carpet. \"I don't mind.\" \n\n\"But the floor won't hurt me, Ms D. I'm young and...\" \n\nShe glared at me, tossing her heavy curls. \"You be careful what you say here, kiddo. The next words out of your mouth could get your butt kicked.\" \n\n\"I was going to say,\" I replied loudly and slowly, feeling my face flush, \"I'm young and stupid and I won't even notice I'm on the floor, because I'm an idiot who doesn't think before he speaks? Maybe?\" \n\n\"That's about right.\" She was relaxing at last. She frowned and looked at me, her legs swinging. \"Okay,\" she said at last. \"You're a nice kid, so I can see this is going to become one of those things where we go back and forth all night arguing uselessly about who's right. So yeah, I guess I'll take the bed.\" She sat up abruptly, her body erect on the mattress, and reached up to take off her earrings. \"I'll go in the bathroom to change,\" she muttered as she clawed behind her ears. \n\n\"No.\" I got quickly to my feet, frightened at the thought that I was inconveniencing her. \"No, I'll just take a walk. How long do you need, Ms D?\" \n\nShe looked up at me with a smile of immense, radiant warmth, enough to make me feel guilty I'd ever jerked off to thoughts of her. She looked incredible, and pure and perfect. \"You're sweet,\" she blurted. \"Five minutes; I stink, but I'm not going to hog the shower.\" \n\n* * * \n\nI came back in with a pair of candy bars from the vending machine. \"Here,\" I offered, holding one of them out. \"Want one?\" \n\nJesus, I thought. The effortless sexiness continued. She sat on the bed in what looked like the same running shorts from last night, the kind short enough and loose enough to show the line of her ass as she sat against her pillows with her knees drawn up, picking mulishly at her own toenails. I tried not to look. A short t-shirt completed the look, riding up in the back to expose a quartet of humped vertebrae as they marched up her back. I couldn't see any bra straps, and yes, I looked. She glanced up from her toes and grinned. \"That's sweet.\" \n\n'I know. It's chocolate.\" Her grin grew sly, but I'd surprised myself saying anything so flirty. \"Take your pick, Ms D. It's like a hostess present.\" \n\n\"Why thank you, sir.\" I tried not to look between where her smooth thighs were drawn up, but of course I failed; her shorts were pulled tightly against her mound. She seemed not to notice as she selected the peanut one. \"You brought one for yourself, I notice.\" \n\n\"No. You can have them both. I wanted to make sure I got one without nuts, you know, just in case.\" \n\nShe frowned, thought about it, and finally nodded. \"Yeah. Allergies.\" She took a healthy bite. \"Well, no worries. I'm good with nuts.\" Too late, she heard herself say the double-entendre, and her face went pleasantly scarlet. \"See?\" she complained. \"You're not the only one who isn't thinking about what he says, Toddster.\" She remained flushed as she nodded at the other bar. \"Knock yourself out. Then you can change.\" \n\nI glanced down at her clothes. \"You're going out like that?\" \n\nShe scowled. \"Got a problem with my outfit, dad?\" \n\nI held both hands up, disarming her. \"Now now, Ms D. I'm just trying to keep you out of trouble. It's a hotel full of unattended high schoolers. I'd feel bad if, you know, kids from other places got the wrong idea about you.\" It came out glibly, sounding confident, and distantly I wondered where I was getting this kind of game. I had no clue where I was getting my schwerve from, but as I got more and more comfortable with this weird situation, I was tossing off one-liners like you read about. \"We can't have you dishonoring Seaborne Memorial High School, Ms Dubinsky.\" \n\nShe sat back against the headboard, her little boobs jiggling bralessly, and I swallowed involuntarily. \"My my,\" she rapped right back. \"I'm honored by your concern, but I've got to ask: what have you done with that nice, gentle Todd Barry boy?\" She grinned again, her teeth packed with chocolate, and then she uncoiled her limbs. \"Fine, if you're so worried,\" she shrugged, getting smoothly to her feet. \"I've got to go pee anyway. Holler when you're done changing.\" She frowned seriously. \"I forgot: they called while you were out. No cots, Todd. But you can have all the blankets and crap; I only need one pillow.\" The hotel had provided about five. \n\n\"I'll be fine.\" I watched her bare legs as she passed me on her way to the bathroom; she shut the door without a backward glance, and now I had a problem: I only ever wear boxers when I sleep. \n\nI had a t-shirt, but I'd brought it for the Polar Dip and it was wet and filthy, tossed into a corner of my bag like a child in time-out. I had plenty of button-downs, which was what we'd been told to bring, but she'd laugh at me if I claimed I slept in those. So, after a painful few moments of vacillation, I chiseled out the nasty t-shirt, grimaced as I put it on, and then dropped my trousers. I heard the toilet flush. I checked to make sure my boxers weren't gaping open, then cleared my throat. \"Ready, Ms D.\" \n\nThe door opened immediately, and she came out with a keen glance and a bright smile at me. \"Much better.\" She meant the bathroom, but she stopped short at once. One look, and she read my mind. \"You're not wearing that filthy mess just because you're feeling modest, Todd.\" \n\nI shrugged. \"I'll be fine.\" \n\n\"I can smell that from here.\" She frowned and peered closer. \"Look, there's sand all over that thing. I'm a biology teacher, Todd. Believe me when I tell you it's unhealthy for you to sleep in that.\" She reached up, stretching, to undo her wild hair. \"It's not like I didn't see you without a shirt on, like, five hours ago,\" she pointed out. \"I won't be scandalized.\" \n\n\"I don't know.\" I frowned, trying unsuccessfully not to look at her chest. If she noticed, she didn't say anything, her hair flooding down over her shoulders. \"It's different this way. I mean, I'm in my boxers.\" \n\n\"So?\" She mussed at her curls, blinking owlishly. \"It ain't the boxers I've got a problem with, Todd-o. It's that nasty-ass shirt.\" \n\n\"Toddster,\" I corrected. \"And watch your mouth, Ms D. You were the one apologizing earlier for dropping F-bombs.\" \n\n\"Yeah,\" she mused. \"But you can't blame me for that. I was being pummeled by the full fury of the raging Atlantic.\" She said it mockingly, sliding back along the bedspread until she hit the headboard again. \"I'm not responsible for anything that happened in the water today. I was in survival mode.\" \n\nI stared at her, reminding her silently about what else she'd apologized for, and finally she lowered her eyes. \"Well,\" she said after a moment, \"it's a disgusting shirt. But you do what you have to do.\" She leaned her head back, then leaned lithely over to grab the remote. \"You could have had the hotel wash it. From what Lynn Julian told me, she could have gotten the manager to do anything for you.\" \n\n\"Huh.\" I was back in the chair, the sand grating at my back, and I decided. \"Well, since you've seen it anyway,\" I said, totally self-conscious, and then the soaked shirt took its previous place stuffed into the corner of my bag. I sat back in nothing but my underwear, wondering how this had happened. \"You happy now, Ms D?\" \n\n\"Very.\" She was flipping mindlessly through the channels. I saw her glance once over at my chest. \"Better not tell anyone about this, Todd. You'll get me fired.\" \n\n\"I would never,\" I said, very sincerely, and then she settled on some news show and we shut up for awhile. \n\n* * * \n\nI was swathed in the comforter and one of the manager's extra blankets, smeared across three separate pillows and deep in sleep, when a horrific impact knocked me awake. \"Goddammit!\" I cried, sitting up on Ms Dubinsky's floor. \"What the hell?\" \n\nA shape sprawled across me in the dark, an arm resting on my naked chest. I heard a muffled \"Fuck this shit\" from right beside me. \"Sorry, Todd. You okay?\" \n\nEverything was confusing, but my eyes were getting used to the bluish light coming softly in through the curtains and all I saw were legs, smooth legs, flailing across my body. I put my arms out blindly, encountering flesh and the whipping strands of her hair. \"Um. Ms Dubinsky?\" \n\n\"I tripped.\" She dragged herself up and off me, sitting now on the floor beside my head. \"You okay?\" she asked again, clearly concerned. \n\nI shook my head. \"Yeah. I'm fine. What the fuck, Ms D?\" \n\n\"Sorry, Todd. I was coming in from the bed check, and I totally forgot you were here.\" She was leaning over me. \"You sure I didn't hurt you?\" \n\n\"No,\" I admitted, doing inventory. I was hard as a rock; I had no way of knowing whether that had happened before she fell on me, or after, but whatever. \"I can scoot out of the way...\" \n\n\"Shit, Todd, no. It's two in the morning. Just go back to sleep.\" She hovered for a few more seconds, then I felt her fingers warm on my bare shoulder. \"Good night, Toddster.\" \n\n\"Mmm,\" I replied, but I was already drifting back under. \n\n* * * \n\nShowering was, to say the least, awkward. \n\nI was still swaddled on the floor as the bathroom door opened in a cloud of steam. Out she came, like some sort of mist-goddess, her head turbaned in a hotel towel and the rest of her body wrapped in two more, almost like a toga clasped hard under her armpits. \"Sorry, Todd,\" she called; she was saying that a lot lately. \"I used a bunch of the hot water.\" \n\n\"That's fine.\" I was renowned for my brief showers. I stretched out under the various scraps of hotel linen, my hands behind my head, and looked up over my head out the window. She was naked under the towels, I realized slowly; that's why Ms D was just standing there uncomfortably, expectantly, waiting for me to get out of sight. \"Oh. Sorry. Um, should I go?\" \n\n\"I can get dressed in the bathroom, I guess, once the humidity clears out. I don't want all my stuff to wilt.\" She didn't move, leaning against the wall with her shoulders still beaded with water. \"Or if you, like, want to go in and shower...\" \n\n\"Sure.\" I laid still a few seconds more, then kicked the sheets off me, working to unwind my legs from the blankets, and by the time I realized my dick had popped straight out of the slit in the front of my boxers, it had probably been flopping around for awhile. \"Shit.\" \n\nMs Dubinsky looked away. \"Yeah, uh, I was going to mention that.\" She was bright red rising out of the towel. Blushing and apologizing; it was all she was doing to me these days. She made a big show of not looking while I stuffed myself away, humiliated. \"Well,\" she drawled, trying to make light of it, \"I did tell you I didn't mind if you wore your boxers.\" \n\n\"Yeah.\" I had to piss very badly, and I inched past her with my head down. \n\nThe bathroom fan wasn't loud enough to drown out my embarrassment. Christ Jesus, why hadn't I just buttoned the stupid button on the front of the boxers? What was wrong with me? I couldn't even stall in there; there wasn't enough hot water, the temperature starting to inch downward even before I got myself soaped up. I emerged shivering, dripping onto the cheaply tiled floor, and looking stupidly at the towel rack. \n\nShit. Ms Dubinsky had taken all the towels. Oh wait, correction: she'd left one of those little hand towels barely big enough to cover my pubes. I stared at myself in the mirror, mute with horror, shaking my head. What else could possibly go wrong? \n\nI'd have to ask her for help. The alternative was to stand here and drip-dry, or wait until she left and sneak out to use the blanket or something; both seemed awkward. She'd wonder what I was doing in here all this time; she'd seen my hard-on at the Polar Dip, she'd seen my soft dick dangling just a few minutes ago; she'd assume I was in here, spooging on the wall. \n\nDisaster. \n\nIn desperation I went to the door. \"Uh, Ms D?\" My voice sounded hoarse with embarrassment, and I cleared my throat. \"Ms Dubinsky?\" I finally thought to turn off the rattly fan, then tried one more time. \"Ah, Ms Dubinsky?\" \n\n\"Todd? What's up?\" I heard her soft footsteps in the scrunchy old hotel carpet, then they stopped as she hesitated outside the door. \"Um, is everything okay.\" \n\n\"No.\" I hoped I didn't sound too mournful, like a whiny kid denied his cotton candy. I deepened my voice a tad. \"You took all the towels, Ms D.\" \n\n\"Shit! No way.\" She paused again. \"All of them?\" \n\n\"All but this.\" I opened the door just a crack, standing well back from the slit, and thrust my hand through with the stupid little hand towel. \"I'm freezing.\" \n\n\"Oh, sorry! Just a sec.\" She lunged back; I heard her rummaging over by the bed. \"Aw Jesus, Toddster, I'm sorry; I already used both of them. Like, they're all damp.\" \n\n\"I don't care. Just pass it through.\" Her voice got louder as she headed back my way, and I cracked the door again. \n\n\"Yeah, that little hand towel probably doesn't do much for you, huh?\" She wasn't mocking me; she sounded like she was mortified. \"At least it's not as cold as yesterday.\" \n\n\"No shit.\" Neither of us was even thinking about it anymore, swearing easily in front of each other; it didn't even feel weird. \"Wouldn't matter, if you weren't such a towel hog.\" Her hand punched through the open door, holding a large damp towel. She shook it. \"Thanks.\" \n\n\"Towel hog,\" she repeated, scoffing. \"This is my room; you're just a guest. How can you accuse me of hogging all my own towels?\" There was a ring of humor in her voice, just on the other side of the door. \"I'm entitled to everything in this room, Mr Barry, and don't forget it.\" \n\n\"Some kind of hospitality,\" I groused. \"Now, if you'll excuse me...\" She must have seen my foot and calf as my leg crossed the gap to kick the bathroom door closed. The towel was damp and wrinkled and smelled deeply of Ms Dubinsky's hair, and as I whipped it around my body I was suddenly overwhelmed by the thought that this same towel had just been wrapped around her naked body, and holy shit. \n\nNow I was thinking about spooging on the wall. ",
        "But I didn't, trying not to think about where the towel had been as I used it, hastily, to swab my balls. I finished up, ran some shit through my hair, slapped on some deodorant, and wrapped the towel tightly around my waist as I headed out. \n\nShe was on the hotel phone, sitting with her back against the headboard and her legs stretched across the unmade bed; stockings, no shoes. It sounded like she was talking to Mrs Julian, or possibly Tracey; it was all about meeting times, headcounts, stuff like that. She glanced at me as I passed, but it's not like she stared; she'd seen my chest already, anyhow. I busied myself at my bag, stepping over the wad of blankets on the floor, and then there I was, left with a need to put on my clothes. \n\nYesterday I'd have headed straight back into the bathroom to change; now, I wasn't sure I wanted to take the time. We were running late. Ms D was still gabbing on the phone, so I just stepped into my boxers and pulled them up underneath the manky towel, unwrapping it as I got the underwear all the way up. I was pretty confident I hadn't shown any crack, but I made especially sure I buttoned up the front hole of the boxers. She'd stopped talking on the phone around the time I stepped into my khakis, and I put my shirt on in silence. When I turned around, still buttoning the front, she was watching me thoughtfully. One of her knees was up, her foot resting on the mattress. \n\n\"You know,\" she said thoughtfully, \"it's possible I could get into a lot of trouble, sitting here watching you put your clothes on.\" She smiled though, teasing lightly. I smiled back. \n\n\"Well, I guess I won't tell if you don't,\" I shrugged. \"You deserve to get into trouble though, Ms D.\" I swallowed, but I couldn't resist. \"Towel hog.\" \n\nShe rolled her eyes. \"Jesus. Still?\" A complicated, convulsive series of body movements got her to the edge of the bed, and then up onto her feet, poised like a dancer. \"You've got to get over that, Todd-o.\" \n\n\"It's gross,\" I pointed out, fixing the last button. \"Using a teacher's towel? It's unsanitary.\" \n\n\"Oh, pfft.\" She blew a raspberry. \"Like I'm some kind of diseased hag. You're young and healthy, like you said yesterday.\" She winked. \"You'll get over it. I'll make it up to you tomorrow; you can take the first shower.\" She grinned. \"And use all the towels.\" \n\n\"I'll hold you to that.\" \n\n* * * \n\nThe day was packed with workshops and panels and lunch and then more classes and symposia and expos and other kinds of things like that; we took notes, did skits, smiled a lot, and eventually filed down for the Closing Dance. I'd changed alone, adding a tie and a suit coat, since Ms D had been in a faculty workshop or something. We strolled into the hotel ballroom as a large gaggle, all of us tired after the conference but excited to be at the dance. \n\nWhich wasn't much of a dance. \n\n\"Obviously, the conference budget went toward too many luxury buses for the fucking Polar Dip, because the DJ sucks.\" This was the piquant comment by Leah as soon as she walked in, arm-in-arm with Brett on one side and me on the other. She's seldom wrong about such things; Leah is an excellent dancer with a large family, which means many weddings. She knew DJs. \"Look at him,\" she said in disgust. \"He doesn't even have a turntable.\" \n\n\"Babe, nobody has a turntable anymore.\" Brett sounded totally relaxed, like he didn't have a care in the world, and I knew why: everyone but Mrs Julian and Ms Dubinsky knew he and Leah had ditched about half the day's workshops, sneaking back to her hotel room to spend the hours fucking in all sorts of ways. I wasn't surprised she'd taken my arm on the way down; I'd have wanted a break from Brett by then, too. \"It's all digital now.\" \n\n\"Well.\" Leah scowled. \"Not in my world.\" She pressed herself against my arm as Brett took a detour to figure out what table we were at. \"I'm fucking sore,\" she declared, steering me toward the soda bar. \"Buy me a fucking Coke.\" \n\n\"Why doesn't Brett do that?\" I whined. \"Isn't that what goes along with him being your boyfriend?\" \n\n\"I'm kind of sick of him right now,\" she admitted. \"Too much energy,\" she went on vaguely. I grabbed a pair of watered-down Cokes in small plastic glasses, and Leah wasted no time getting a little flask out of her pocketbook and adding some rum. \"Care for some?\" \n\n\"Oh! Uh, sure, thanks.\" We clicked our cups together. \"To a fun conference and a safe flight home.\" \n\n\"To sitting down,\" she snapped back, \"and leakage control. Look, there's Brett.\" We meandered that way, Leah a warm and comfortable presence at my side; I'd always liked her. \"So, how's life with your new roommate?\" she asked me with elaborate casualness. \"Brett says the manager didn't get the room fixed up, so you guys are stuck with the chaperones again tonight.\" \n\n\"Oh?\" I hadn't heard. \"Fine. She tripped over me last night.\" \n\n\"No!\" She glanced up, her eyes dancing. \"How the fuck did that happen?\" \n\nI shrugged. \"Dude, they do like three bed checks per night. So she was coming back in and must have forgotten I was there. She fell right over me.\" \n\n\"Wow.\" She considered. \"That sounds exciting. Did she cop a feel?\" \n\n\"Leah!\" We coasted to a stop at our table, Brett looking a little miffed that we hadn't gotten him a beverage. \"You need to relax. Your mind is in the gutter.\" \n\nShe blushed, she and Brett exchanging a very grown-up smile. \"Well, you're right about that,\" Brett pointed out casually. He stood slowly gave her a wink, and stalked off toward the bar. I rolled my eyes. \n\n\"You two are disgusting.\" \n\n\"We're not disgusting. We're horny.\" She sat down, shifting around with an odd look on her face until she got comfortable. \"So, yeah. Gutter? Maybe. But trust me, dude, I saw Little Todd at the beach.\" She giggled. \"Big Todd, actually. And I'm not the only one. She was totally checking out your package.\" \n\n\"Leah,\" I said, pained, \"can't we all just have a pleasant evening without having to hear you talk about my penis?\" \n\nShe giggled again, and with a very feminine smile she left me alone for awhile. \n\nThe dancing was not something I was looking forward to. I'm not very social, so I just sat there nursing Leah's over-rummed Coke, messing around on my phone. That's what I was doing when I heard a voice over my shoulder. \"'Sup, Todd-o?\" \n\n\"Toddster.\" I turned to see Ms D, wearing the same thing she'd been wearing that morning. \"Dressed up, did you?\" \n\nShe made a face. \"This isn't a real dance,\" she observed, glancing around. \"DJ sucks.\" I covered a smile. \"I'm not sure I'm going to stay long; old ladies need to get back and change. I've been in these shoes all day.\" She leaned down against the table. \"So, look,\" she added, after a deep breath, \"Mrs Julian spoke to the manager, and you guys are screwed again. I guess the plumber needed to order parts, and your room is still uninhabitable.\" She looked around the room. \"I feel bad, but you're back with me tonight.\" \n\n\"Worst news I've heard all week,\" I deadpanned; she wasn't sure how to take that, but smiled anyway. \"It's not the end of the world.\" \n\n\"I'll take the floor this time.\" \n\n\"You will not.\" I shook my head vehemently. \"Just don't trip over me.\" \n\nHer smile was warm and bright. \"Cross my heart and hope to die.\" She glanced around again. \"Gonna dance tonight, Todd? Any girls you've got an eye on?\" \n\nI swallowed, my throat suddenly dry. \"Nah, I'm not much of a dancer. To be honest, I was kind of thinking of an early night, too.\" I paused, then realized I didn't really have a room to go back to. \"That is, I was thinking of that. But you'll want to stay up, so I'll let you have some alone time.\" \n\nShe laughed pleasantly. \"Oh, please,\" she chided. \"Don't you dare. I feel bad enough about this whole thing; I'm the one who should be giving you some space.\" She licked her lips, lizardlike. \"I can go kill time somewhere else.\" \n\n\"No, no. Really. I'm fine here.\" \n\nShe stared at me a moment, nodding slightly. \"Tell you what, Toddster. I'll say my goodbyes and head up there now. It'll take me about ten minutes to change. Then you come on up and I'll be in the hotel gym.\" She shrugged. \"I feel like a little exercise. You can relax without me messing with you. Sound okay?\" \n\nThe dance was a boredom factory; half the kids were sitting, a quarter dancing, the rest no doubt out in the parking lot doing drugs. Sounded fine to me. I looked up and met her eyes, soft and brown behind those quirky frames. \"Sounds like a plan.\" \n\n* * * \n\nI did almost forget about her, sitting in the chair with the stupid Steinbeck I had to read for AP English. After awhile, I started to get cramped and stiff; I thought about it a few moments, then decided Ms Dubinsky wouldn't mind if I lay down on the bed, on top of the comforter, with the basketball game on TV providing background noise. And that's where I was, lying on my stomach with the book, wearing boxers and that same dress shirt when in came Ms D. \n\nI smelled her before I saw her, though in fairness I heard her before I smelled her, thanks to the rattly doorlock mechanism. \"Wow.\" I didn't look up. \"Did they have the heat cranked up in there or something?\" \n\nShe tsked. \"This is the smell of effort, Todd,\" she replied primly. \"It's hard work keeping my old bones up to speed.\" I glanced over at her at last; she stood there in her workout clothes, really nothing I hadn't seen when she ran, and certainly more than she'd had on at the Polar Dip. But now she glowed, shining with sweat, her tight tanktop blotchy. \"I didn't mean to bother you.\" She grinned widely, seemingly happy with the whole world her hair high in a ponytail. She dripped on the carpet. \n\n\"You're not bothering me, Ms D.\" I let her see me wrinkle my nose. \"The smell is.\" \n\nShe scoffed at me as she tossed her keycard by the TV. \"You're fresh!\" There was definitely something to her now, something playful; it was in her eyes and her manner. She'd had a good workout, I could tell; I always felt best after a good run. She sauntered across the front of the TV, right in front of me with her tight little body on display. \"I'm going to take a shower, as I'm sure you'll agree is a good plan.\" She was digging around among her stuff, her ass facing me, and I stared unabashed. She was pulling out some clothes. \"I'm out of running shorts; I might have to improvise on a sleeping outfit tonight,\" she mused, still teasing. \n\n\"Whatever.\" I made like I was engrossed in my book, but no; predictably, I was starting to go hard against the mattress. I'd be rolling onto my side the moment she passed into the bathroom. \"Careful, though. Remember, you owe me all the towels tomorrow morning. So don't screw any of them up tonight.\" \n\n\"Ah!\" She giggled. \"What, should I just drip dry?\" \n\n\"No,\" I suggested, smiling. \"Just use that stupid face towel from this morning.\" \n\n\"Shit,\" she rolled her eyes. \"I could use that to wipe my forehead, but the rest of me would still be soaked.\" She seemed unaware of the double-entendre, but who could tell? She was not herself... actually, no. She was her best self, all her normal quirky energy combined now with the glow of good health and exercise. She was different, anyway. \"I'll leave plenty for you, Todd, don't worry!\" She trailed her arm behind her, waving with another giggle, as she passed from sight. \n\nInstantly I was up on one elbow, fishing around inside my boxers as the bathroom fan kicked on. I was hard as a rock, fat and sweaty. I knew already how my plans would go tomorrow: the flight home, a ride back from the airport, and then an epic wankfest the instant I got home. The shower was quick and businesslike, apparently just enough to rinse herself off; she took her time afterward, and when she emerged from the bathroom she was already dressed. \n\nSort of. \n\n\"I left the towel draped over the bar,\" she hummed, smiling, her hair in damp kinky waves around her neck, but I wasn't really listening: when Bretta Dubinsky improvised pajamas, she didn't appear to feel that coverage was a major requirement. I hadn't seen her bring a bra into the bathroom. Her old t-shirt stopped somewhere about half an inch north of her belly button, while down below she wore nothing but a pair of pink panties, though to be fair they did cover her flat ass. She smiled at me, deeply dimpled, when she saw my reaction. \"You shouldn't look at me like that, Todd; I'll start to feel self-conscious.\" \n\n\"Oh, sorry.\" I wasn't. She was a knockout, every inch of exposed skin driving me insane. \"It's just... I mean, sorry.\" I was in the chair again, having moved back out of her bed, and she cocked her head at me. \n\n\"It's okay, I guess,\" she admitted, and a little shiver passed through her as she stood up straight. \"You've looked at me before, anyway.\" \n\nI had no idea what to say to that, so I didn't; I just replied with a vague nod before diving back into my book. \n\n\"Why'd you move?\" She sat down on the edge of the mattress and peered across into the mirror. \"If you're more comfortable up on the bed, feel free. I can take the chair.\" \n\n\"No, that's fine.\" I was sideways, my legs over the chair arm. \"I like to move around, Ms D. I get restless.\" \n\n\"I remember.\" She was gathering her hair into a loose ponytail, a damp stain spreading down her back. \"You were a wigglebug in class. Always shifting around.\" She glanced over at me. \"I'm the same way. I just can't stay still.\" \n\n\"Yeah.\" I paused, wondering whether I should bring it up, and she caught my hesitation. \n\n\"What?\" She was looking at me quizzically, still playful with those bookish eyes shining. \"Say it, kiddo.\" \n\n\"Well, I was thinking it would be difficult for you to do your bed checks in... you know.\" I looked down at her panties, and she followed my gaze. \n\n\"Oh, like I shouldn't be barging into students' rooms in my underwear?\" She laughed. \"I'll probably put on a skirt. Not that it matters; it'll all be girls' rooms. I don't need to check on Mrs Julian and the other boys, and I'll be checking on you, like, all the time.\" She winked. \"Besides, I think the only room I'd really need to check would be Leah Walinki's.\" She watched my reaction. \"You know, to make sure your friend Brett is staying honest.\" \n\nI opened my mouth, then closed it before I could get Brett into trouble, but she just stared at me. So I shrugged. \"You might be too late, Ms D.\" \n\n\"Oh, I know.\" She nodded briskly. \"They were back here all day together. I know all about it.\" She raised her eyebrows. \"What? We're not stupid, Todd. We know exactly what's going through y'all's minds.\" She snorted. \"Not that it's that tough, with those two. Talk about sexual chemistry!\" \n\nI stayed silent. \n\n\"I thought they'd be screwing in the water during the Polar Dip, but I guess not,\" she mused. \n\n\"That's gross, Ms D.\" \n\nShe looked at me for a long minute, then smiled again, mischievous. Her hair was safely out of the way. \"Must have been a little too cold,\" she reflected. \"I know I was cold.\" She hesitated again, then went ahead and said it. \"You knew I was cold, too.\" \n\nThe image hadn't ever really left my mind, the sight of her two nipples pointing at me like accusing fingers, and I felt myself blush. \"Ah, yeah.\" The elephant was in the room now. \"I, uh... I mean, it was pretty obvious.\" \n\n\"Wasn't the only thing that was obvious,\" she sassed back, and I had to have been completely scarlet by that time. \"Not to worry though, Toddster,\" she sang. \"I teach biology. I understand how bodies work. You know. Reactions... instincts... all of that.\" She was leaning back to grab the remote. \"Well. Mind if I change the channel?\" \n\n\"Uh, sure.\" \n\n\"Great.\" She was back to her cool, confident self, shuttling rapidly through the channels. \"Just let me know if it's too loud.\" \n\n* * * \n\nShe tripped over me again when she returned from her bed check just before midnight, and this time I sat up rubbing the face she'd just smashed with her knee. \"Aw Christ, Todd, I'm sorry.\" She reached automatically out to rub my jaw, checking for blood in the dark. \"I just forgot again. Look, this is fucking stupid. Just get up into the bed; I'm tired of tripping over you.\" \n\nStill half-asleep and with my jaw aching, I was in no mood to object. I was hoping this was all a dream, that I could just go back to sleep and forget about the whole thing, and so I hauled myself to my feet and staggered to the bed, stumbling under the cool, clean sheets with a sigh of relief. \n\nI was still half-asleep, my eyes roving around the room in the faint light through the curtains, watching as shadowy Ms Dubinsky stepped back out of the skirt she'd thrown on for the check. She hesitated, then slid silently into the other side of the bed just as I faded into blessed unconsciousness. \n\n* * * \n\nI was very confused when I woke up out of a dream, starting, raising my head from the pillow. I had no clue where I was for a second or two, and I blinked into the night several times before I finally focused on the red digits of the alarm clock on the far side of the bed. \n\n1:47. \n\nWith a sigh, I slumped back down onto the pillow. But something was weird, something that wouldn't let me lapse back into unconsciousness. It took a few muddled moments before I figured out what was wrong. I'd come back down onto the pillow only to feel like my head was being shoved into a tumbleweed. \n\nMs Dubinsky's hair, a forest of still-damp curls all around my face. \n\nSlowly realization dawned: her hair was against my face. That meant her body was against my body: the warm, solid lump pressed against my bare chest was her back. Those sleek things I had my legs stuck to? Those were her legs. And... holy fucking shit! \n\nI guess I shouldn't have been surprised that I had a hard-on, all things considered; vaguely I remembered a throwaway passage in my psychology textbook last year that said you often got an erection while dreaming, and plus I was on edge sleeping in the same room as Ms Dubinsky, and I was just an eighteen-year-old, ready to get hard at the drop of a hat. So it should not have been a big shock. What was a big shock was the horrible, delectable realization that my cock was wedged in Ms Dubinsky's asscrack. Well, not really in the crack; there was some daylight between us down there, maybe half an inch, so my dickhead was actually resting on the inside curve of her lower cheek. The left one. \n\nAll this went shooting through my mind in a sort of subconscious analysis, one part of my brain functioning rationally while all the rest was spazzing the fuck out. \n\nAfter all, I'd never, ever spooned anybody before, and around the time I came fully awake I realized for the first time just what an amazing feeling it was, lying warm and snug in a bed with a woman's body folded against my own. That wasn't all, either; I found I had my hand lying casually across her belly, feeling the warm bare skin there, and I was even pretty sure my thumb was slightly inside her shirt. Even more: a slight pressure on my thigh told me her hand was there, resting comfortably with her fingers curving possessively around toward my butt. My other arm, I soon discovered, was underneath her head, a line of her drool collecting in my elbow pit. \n\nShe felt firm and warm and juicy and protected, even loved. It was incredible. She also, as I slowly figured out, felt awake. Because, though I hadn't noticed it at first, the hand on my hip was moving, its fingers stroking lightly along my leg. And her other hand? The one that remained unaccounted for? It rested on top of her belly. Well, that is, it rested on top of my hand. On top of her belly. And those fingers were alive too, gripping mine firmly, intertwining. \n\nSo, wait. My brain made the final leap: if I was spooning her, and she was awake, and she was caressing my leg... she must want me to be spooning her! ",
        "The revelation floored me, which ought to show just how oblivious I'd been after her signals since yesterday. But still it was a shock, and while I lay there in paralysis, she was exploring me quite calmly. The hand on my thigh was rising, feather-light fingertips along my boxers. Her breathing was low and steady; I could tell, since I had fingers hovering on top of her diaphragm, and I hoped mine was as steady as hers; I wasn't sure I wanted her to know I was awake. \n\nThat would mean I'd need to say something, and I had no fucking clue what to say. \n\nShe was obviously aware of my erection; that went without saying. I'd dated before; not terribly often, but enough to let me know, unequivocally, that girls had a sixth sense for guys' hard-ons. Not that I blame them: any decently observant guy is constantly looking for hard nipples. Why wouldn't the ladies do likewise? \n\nI matched her breathing, and then she seemed to come so some sort of decision, because her hand moved fast to its next stop. Straight onto my penis. \n\nThere was a change in her breathing then: she held it, her body totally still, waiting to see whether I'd stir. But I was careful not to, her hand jammed down into that little space of daylight between our hips; she moved her butt forward a tad to give her even more space, and there I was, hot and hard in her palm through the insubstantial cloth of my boxer shorts. \n\nShe started breathing again around the time her hand began to measure me. She went from the swollen tip all the way down to where my balls lay trapped between my thighs, tracing all the contours through my shorts. I was very careful not to move a muscle, in abject fear lest I break whatever fucked-up spell had made the gloriously divine Ms Dubinsky get the urge to grab my junk. I certainly wasn't complaining. \n\nUp and down went her softly tracing fingers, her body tense against mine. I'd had my dick touched by a girl before, but not like this: that had been awkward and sticky. This was capable, confident. Seductive. \n\nAnd at one point her fingers drifted higher, up and over the top of my cock, where precum had already stuck my boxers to my skin. She stopped there, holding her breath again, wondering what my reaction would be when her fingers slowly, shyly, made contact with the curly little pubic hair that connected my belly button to the root of my penis. They waited there, somehow mischievous, and I couldn't stop myself: I sucked in my gut, making a gap between my belly and my waistband. \n\nAn invitation. \n\nShe stirred in my arms, then, her voice carefully neutral. \"So you are awake,\" she mused. \"I was wondering.\" \n\nI gulped, still not sure what to say. \"I, uh...\" It came out in a husky croak, and I coughed a little to clear my throat. \"I don't think you should be doing that, Ms Dubinsky,\" but it wasn't an objection. As she knew. \n\n\"Sure,\" she agreed, and her fingers went without further hesitation down into my boxers. Her hair flapped wildly in my face as I blew out a long breath into it, feeling her clean hand descend to grip my greasy flesh. \"No, you're absolutely right about that.\" It didn't stop her from grabbing me, hard, her fingers a vise. \"I shouldn't.\" The head in front of my face shifted, her pointy little nose in dimly-lit profile now. \"But I am, though, so... y'know.\" \n\nHer hand was firm on my cock, the fingers confident, certain, experienced. I was breathing hard now against her neck, and she giggled. \"Your breath tickles, Todd,\" she said, her voice now a little bit shy. \n\nI wondered how I should act, then decided to just go ahead and say the first thing that came to mind. \"So's your hand.\" \n\nShe laughed then, low and throaty, breaking whatever ice there could still have been at that point. \"I'm not trying to tickle you, Todd,\" she purred. \"I've got other plans.\" Why? My brain was screaming, but thank God I didn't say it; already, I understood what a fucking moron I'd need to be to screw this up. \"I saw you at the Polar Dip, Todd. I saw how you reacted. You know. Afterward.\" \n\nAh yes. Leah had, of course, been right. I swallowed, starting at last to relax a tad. \n\n\"And I knew that you saw, too,\" she went on. I raised my upper leg a bit, and she took the hint and dragged out my balls. Her hand never, ever stopped moving. \"You were so cute, on the bus.\" \n\nI laughed ironically. \"Cute is my middle name.\" \n\n\"Bullshit.\" She was turning in my arms then, twisting to face me, and suddenly this was actually fucking happening; I felt her sexy little body up against me, her breasts pressing against me, a leg flung casually across my thighs. \"Your middle name is 'sexy.' You like it when I say that, Todd-o?\" Her lips were on my face now, grazing my sketched-in stubble. \"You like hearing me call you sexy?\" \n\nI laid my head back, feeling the smile grow on my face. \"It's Toddster.\" \n\n\"No,\" she said at once, \"it's whatever the fuck I want it to be,\" and then she was half on top of me with her hand still very busy, and I felt sweet lips on mine and I was in heaven. She had a strong, busy jaw and a quick tongue, and she kissed like a pent-up sexual tornado, sucking me in, nipping at my tongue. It was a scorched-earth kiss, possessing me, staking out her claim. When she pulled away, she had her hand all the way underneath my balls. The sheets had fallen away by now, my waistband stretched, and my cock reached all the way to her elbow in the low light. \"Well now,\" she said, and I could hear the grin in her voice, \"you'll have to excuse me a second.\" \n\nAnd with that, she curled up into a compact, muscular ball and, without any further delay, took my penis into her mouth. Even as she did so she still had her fingers working my balls, tracing along my crotch, even fluttering across my asshole, and in no time at all she had her lips halfway down my dick. \n\nThere was no chance I was going to last more than about thirty seconds. She was too hot, and I was way, way too horny, and the wickedness of the situation already had me on edge. I grabbed her head and pushed my hips up off the bed, eager to cum, gasping. \"Ms D... I'm not going to be able to stop...\" \n\nShe came off me with a loud, wet popping noise, and even in the dim light I could see how wild her eyes were. \"That's the point, dumbass,\" she grated. \"I want you to cum so you'll last longer when I fuck you.\" And then she was right back down on top of me, her lips pulsing against the crown of my cock, and I was gibbering, trying to get myself deeper, but she kept pulling back, teasing me, and then her finger went straight and sure into my anus and there was no chance I could do anything but erupt. \n\nShe pulled off again, her hands still busy, and pressed her body toward mine and I was spewing semen all over both of us, my cock trembling like a ruptured pipe. \"Yeah,\" she whispered, her breath hot in my mouth, and I turned my head and pushed my tongue greedily into her mouth as my cum kept raining down. This kiss was even hotter than the last, her mouth tasting like me, but I didn't care. I was giving it back to her now, accepting all this and wanting it and crazy for it, devouring her. \n\nShe finished with a powerful suck at my lower lip, trapping it in place for a second before playfully letting it fall back. My dick lay twitching across my upper thigh, and her fingers moved slyly up my body, spreading the cum into little puddles. \"Just lie there and breathe,\" she advised. \"I'm on cleanup duty,\" and then her tongue was running all across my chest and neck, and I'll tell you: there's nothing sexier than the smacking sound of a gorgeous woman slurping your semen off your body. She wasn't shy, licking into every nook and cranny; I felt her dig into my armpit, my crotch, the shadowed linty recesses along my scrotum, and all the while her tight little body was bending and twisting over mine. \n\nGood Lord. How had this happened? She was already providing the answer as she threw herself back down onto the pillow beside me. \"Sorry, Toddster,\" she murmured. Her breath stank of my cum. \"I just couldn't help myself. It's your fault, though.\" \n\n\"My fault?\" I looked down myself, at the sticky fluids all over my chest, the head of my penis poking out of my trashed boxers, with my distant toes tenting the sheets. \"What are you talking about?\" \n\nShe stared at the ceiling, speaking to me with no eye contact. \"You're a sweet, quirky cutie. You've got a great sense of humor. You clearly admired me, just the other day, and you're a total gentleman.\" She shrugged. \"Sometimes? For some girls? That's enough. Plus,\" she went on thoughtfully, \"I woke up in the middle of the night with your dick in my butt. That kind of let me know you were interested.\" She was looking down at herself. \n\nI felt the silence stretch, remembering what she'd said just before I spewed. \"I can't believe this,\" I admitted. \n\n\"Same.\" She didn't sound uncertain, though. \"I've never done anything like this, Todd. What can I say?\" She turned her head at last, looking over at me with a smile. \"A woman knows when she's attracted to a man. Sometimes, there's just no explaining it.\" She frowned a moment, thoughtful. \"Still,\" she mused, \"it might be best if, you know, we keep this to ourselves...\" \n\n\"Oh, absolutely.\" I was settling down at last, finally convinced this was real, that it was actually happening. \"You're the last person I'd want to get into trouble.\" She reached over to stroke my nipple. \"I'm not sure I can believe this shit.\" \n\n\"Believe it.\" She leaned over and planted another kiss on my cheek. \"But you're not perfect, though; you're like a lot of men in one way.\" \n\n\"Oh?\" I was beginning to think it might be fun to reach over and start touching her, and I was certain she wouldn't stop me. \"I'm sure you'll tell me, Ms D. You were always very critical.\" \n\n\"Yes,\" she grinned, her teeth flashing in the night. \"I'm an excellent grader. No, your problem is that you can't control yourself. You ruined my shirt, for example.\" \n\n\"So sorry.\" \n\n\"Sure...\" she hoisted herself upright, a sleek figure in the moonlight through the window, and her shirt came sweeping off. \"Cum all over my shirt; you're a pig, Todd. You need to watch where you put that.\" She stayed up, leaning casually with her arm against the pillow; she knew I'd be admiring her, watching as her breasts danced. \n\n\"I'll be more careful in the future,\" I choked out, hearing the thickness in my voice; I could feel a twinge in my dick already. I still couldn't believe my luck as my finger, moving like it had a mind of its own, drifted up along the skin of her side and around, then, to flick her nipple. She giggled. \"Thanks for the critique.\" \n\n\"Well, in fairness,\" she was saying, her voice a little hoarse as she watched me play with her right tit, \"if we do this right, you're not going to have to worry next time.\" \n\n\"No?\" God, she was fine; sculpted by the gym and by her genes, she was perfection. I wondered why she wasn't married, what an unlucky string of men she'd left in her wake. And now I was going to be added to the list, and I didn't even care; I was grateful for it. Her breast filled my hand perfectly, hanging proud above the subtle curve of her ribcage. \"How's that?\" \n\nShe giggled as I tickled her armpit. \"See, next time, your dick's going to be right where I want it.\" She reached quietly over, shoving my boxers aside, and took hold of my dick again; once more she was possessive, casually so. \"Aim won't matter, if you know what I'm saying, Todd.\" She jiggled my balls, playfully, as if she'd been doing it for years. \"The range will be... say, exceptionally short.\" Her smile was crafty now, her beautiful eyes slitted. \n\nI sighed, feeling myself recharge. The clock was now pegged at two minutes after two in the morning. I abandoned her breast, reluctantly, and my fingers fell back down her body to hook into her waistband. She was sitting still, her legs folded gracefully beneath her. \"You're my favorite teacher, Ms Dubinsky,\" I told her softly, my voice thickening up again. \"I mean, even before this trip.\" \n\n\"Fuck.\" She smiled again. \"This is what I mean. You'd be amazed at how few men would ever say something like that. Like it would violate some guy code, or something.\" She winked in the dark. \"I like that. I think you'd be saying shit like that even if I wasn't playing with your scrotum.\" \n\nI burst out laughing, the whole situation still surreal, and she joined in, and then her face was coming back toward me, our smiles met, and then it was all wandering hands, snaky tongues, and saliva. The feel of her naked little body against mine was heaven; wherever her hands touched me I goosebumped. \"I feel like this is high school,\" she whispered into my ear at one point. \"Like, I mean, as if I was back there, too.\" She laid on another probing kiss, then looked down my body. \"See? Amazing, how fast you popped back up.\" She reached down and gave a fond squeeze. \"It looks so pathetic, poking out of your boxers.\" \n\n\"Well then. Allow me to fix that.\" I brought my legs up to my chest and pushed the useless shorts down out of the way, kicking them forgotten into the corner; I doubted I'd need them again. Then I brought my feet back down an arched my butt slightly, my erection high and proud; I wasn't used to being lusted after, but I figured she'd like it. \"Does that look any better?\" \n\n\"Well, shit. Now I'm overdressed.\" She stared at me, daring me, and I brought both hands to her hips and begin to drag her panties down her thighs; smiling greedily, she maneuvered to help me. \"I haven't trimmed in a few days,\" she muttered as she lay on her back. \"Be gentle.\" \n\n\"You really think I'll care?\" I propped myself up sideways, somehow certain what she wanted: she was waiting for me to play with her pussy, and I was itching to oblige her. She lay there docile, her legs spread just a bit with the darkened room casting shadow on the hollowed space between her hipbones, and into that shadow is where my hand went. I watched her eyes the entire time, both of us quiet, and when I felt damp hair under my fingers I leaned in and kissed her. \n\nAt the same moment I dropped my hand into her lap with my middle finger hooked, and I sighed as I finally touched her. But that sigh was nothing compared to the reaction I got from her; her body arched, rigid, as if she was being electrocuted. My cheeks puffed out as she squealed loudly into my mouth, her legs flying open, and there she was: all around my finger, her vagina was a hot sloppy mess with her body thrusting up toward me, and all the rest was instinct. \n\nI added a second finger. I'd done this before, once, with Abby Kleinman about a month ago; we'd both been nervous and tense, but hell. At least I'd found the right hole. \n\nAt some point after awhile I realized she was heading rapidly toward a climax; her face was right beneath mine, and I saw nothing but a blank expression with eyes that weren't there, and a mouth that couldn't close over her little whines and wails. By then I was stabbing methodically into her with both fingers, my thumb putting pressure at the top of her slit, and my world was completely dominated by one certainty: my handjob, as inexpert as it was, as blindly as I was trying to luck into the right series of moves, was working. She was getting off, her body hunching over my fingers, the whole naked sweaty tangle of arms and legs and boobs trembling at my touch. \n\nThere's no other way to put it: I felt like a fucking god. I was, somehow, taking the most beautiful woman I'd ever seen and reducing her to a quivering mass of orgasmic jelly, and I didn't even feel like I was working that hard. Her knee caught the side of my head as it flailed; neither of us felt it, and I came in low with my teeth gleaming toward the nearest hard, stubby nipple. \n\nShe went off just as my hand was beginning to cramp, crying out into my ear with a cracked \"Motherfucker!\" and a convulsive grip of her fingers against my wrist; even if I'd wanted to, I couldn't have gotten my wet fingers out of her. I'd never seen eyes so wide, her head catapulting toward me, our lips meeting savagely. She moved straight out of her orgasm with a deadly serious look on her face, setting her foot on the mattress to drive us over; she had a plan. \n\n\"Get on your back.\" Her voice was a gasp, as if she was speaking with held breath. \"I'm going to ride you.\" \n\nI flopped gratefully over with a sore, dripping hand and a dick gone even harder than it had before, or at least it felt that way: there's nothing sexier than a woman cumming off your fingers, and making her squirm had turned me on far past the point of self-control. She left me no time to recover, crawling on top of me with desperate need. I reached blindly, finding her flesh and gripping it hard, but she didn't seem to care what I did; she reached down, lifted my cock callously, and then she dropped onto me with all the subtlety of a sledgehammer. \n\nInstantly I felt a roaring silence, a sense of stillness in the air as she fell all the way down my cock. Her vagina had me trapped, squeezing hard and hot and wet, and the sensation took my breath away. She towered over me with her body firm and flushed, her breasts high and trembling, her head flung back, and I just lay there balls-deep in her with my hands on her hips. We stayed there for a long beat before she sighed and relaxed, bringing her hands to my chest. She smiled down at me. \n\n\"Nice job, Toddster,\" she cooed. \"You like this?\" \n\nI had a spark of inspiration. \"What was it you said to me at the Polar thing?\" I was grinning like a dumbass, feeling as good as I ever had. \"'All the way in?' I think that was it...\" Her eyes lit up as she got the pun; by this time, I could see her just about perfectly even in the dim light. She smacked my chest. \n\n\"You naughty boy,\" she murmured. Her hips were already in motion, grinding slowly across my lap. She hesitated, then leaned down toward my ear. Her pussy was a tightly gripping hand around my shaft; she let it pulse a few times, raking her hair out of her own face. \"Am I your first, Todd?\" \n\nI'd been dreading that question, but I wouldn't lie to her. I shrugged underneath her. \"Look, you know how it is, Ms D,\" I managed. \"I'm always studying all the time...\" \n\nShe laid her finger across my lips. \"Shut up. I'm happy to be of service, Todd,\" she whispered. \"I'll be your second, too.\" She humped up and down, her hips and thighs supple. \"And your third. Fourth... fifth...\" Each word was punctuated by a small kiss around my face, sudden and quick like a striking snake. She straightened up, no longer grinning. Now she had a challenging scowl and her hips were moving in wider, more sensuous circles. \"Would you like that, lover?\" My whole body tingled at the word. \n\n\"Yes please.\" Her skin was slick and hot under my palms; I was totally fucking overwhelmed. \n\n\"And then, when we're through,\" she went on, steering my hands up to her breasts, holding them there tightly, \"I'll fuck you some more.\" She had a wonderful sense of timing, lifting herself straight up off my dick and then slamming back down just as she finished the sentence, and I was trying desperately to stay with her as she picked up speed. She was hissing words at me, her saliva striking my face as our bodies slapped together. \"You can be my little booty call, my fucktoy. I can bring you over to my house and let you put it in my ass; how about that?\" \n\nShe was incredible, and of course I was completely speechless. Never in a thousand years would I have expected words like that from the kind and slightly goofy Ms Dubinsky. Dimly I remembered her thrashing body, my thumb at the top of her pussy, and I moved a hand blindly down there to give her an experimental poke in the same spot. The shiver I got in response, accompanied by the kind of strangled gasp that made me think she was having a heart attack, told me I was on the right track, and at last I was able to do more than just lie there with my hands cupping her ass. ",
        "Not that there was anything wrong with that either. \n\nBut this was better; she started thrashing now with a really, really sexy sway and a feral growl in her throat, her hips rocking with a filth I couldn't ever have imagined in such a woman. My finger stayed welded to the top of her slit, all greasy by now, pressing firmly into her as her body moved up and down; I could feel my own dick, solid inside her, and I pressed on her mound against its pressure. She was panting into my face, working herself into a lather, and I was dimly aware that the bed was making alarming noises. \n\nThis went on a few moments with the two of us just trying to keep up with each other, but I soon felt that warning, boiling sensation behind my balls, like someone was knuckling my crotch, and I scrambled to gather my thoughts and warn Ms D. \"I think I'm going to cum,\" I gasped, hearing the strain in my own voice. \n\n\"Keep doing that, with your finger,\" was all she could manage; she was laboring now, and trying to get herself off, and so I tensed my cock and tried to think about soccer and gritted my teeth until, with three or four hunched, full-length thrusts, I felt her fluttering around my shaft. She slumped over, her body plastered to mine with my face once again covered with her sweaty hair, and I was so close... I took over, fucking up into her body as fast as I could while holding her asscheeks clutched in my hands, and just as my abs were starting to protest I felt it rising up out of my balls, and there it was. \n\nBliss. Cumming into a woman for the very first time, and it was unbelievable. \n\nShe chuckled, exhilarated, as she felt my penis leap inside her. \"Mmm,\" I heard her hum, so sexily right beside my ear, and I was unloading far up into her body, hard eager spurts of semen, almost as strong as though I hadn't already busted just half an hour before? Twenty minutes? \n\nWe were kissing again before I was even finished, long, slow, sloppy, smothering kisses, and there was saliva everywhere; but who cared? There were so many fluids sloshing around that bed by that time; what did one more matter? \n\nSpeaking of which, I soon found myself lying in the wet spot, half draped across her body. I had my head near her shoulder with my nose just about pushing into her armpit, which would have been repulsive to me just a few hours ago; now it seemed totally natural. She was running her fingers all up and down my body, and after a few moments I started to respond the same way, and the night crept past in silence. \n\n\"I shouldn't have done that, Todd-o,\" she murmured, but she didn't sound like she was serious. \n\nI thought about that, then nodded against her skin. \"Probably.\" I craned over to kiss her again. \"But I'm not complaining.\" \n\n* * * \n\nShe made me take a shower with her the next morning, which was another first. Or second, or third, depending on what sort of act we were counting by that time, but both of us were limping slightly as we dragged ourselves toward the bus later. We'd agreed not to even try to sit together, or talk together, or do anything together except trade phone numbers. So I slumped down into a seat beside Jeff, who stirred. He'd been looking out the window at the girls from Arkansas. \"I know, man,\" he sympathized. \"I didn't sleep for shit, either.\" \n\n\"Wha-?\" The sudden flash image of Jeff Pike and Lynn Julian, doing nasty things to each other, was sudden and strong. I shuddered. \"What do you mean? \n\nHe shook his head, pale. \"Turns out I just can't sleep right, being in a hotel room with a teacher. You know?\" \n\nI looked away. \"Yeah. I know.\" Leah was across the aisle, already curling up against Brett for the short ride to the airport. \"I know, dude.\" \n\nHe went back to his coffee. A few rows ahead of me, I saw Ms D's corkscrew curls bobbing as she looked down, and then my phone warbled. \n\nI smiled. Jesus Christ, I had it bad. Really bad."
    ],
    "authorname": "Voboy",
    "tags": [
        "student",
        "teacher",
        "younger guy",
        "seduction",
        "tease",
        "romantic",
        "older woman",
        "first time",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/all-the-way-in"
}