{
    "title": "Mine...Yours Pt. 05",
    "pages": [
        "Author's Note: I appreciate so much the comments I have received. I hope that you all who read this are enjoying the story thus far, and will continue to read what I write. I would like to thank my editor End of Story for help with my improper use of words. Also thanks to the rest of those people, you know who you are. Yes, I would name them, but you want to read a story, not my notes.\n\n*****\n\nChapter 15: Kitchen \n\nI awoke to the sounds of...clattering? No, not clattering... Rattling? Clanging? Clinking? I give up. Sounds woke me up! I rolled over and looked at the alarm clock. The red digital display was proudly showing the time, it said, \"12pm.\" Joy. Six hours sleep may be enough for some, but getting home that early in the morning and realizing I had forgotten to buy sheets for Lucretia's bed made me cranky. That's why normal people make lists, so their poor overworked brains don't have to deal with that crap! The...sounds continued, and seemed to be coming from the kitchen.\n\nI got up and started to run in place lightly for a minute or two to get warmed up then began to stretch. I thought about what happened last night while doing this. I hated the fact that my friends and I had that standoff. I went over it again in my mind and saw several ways I could have gone about things differently, but I knew that was pointless. Normally we go over our mistakes to learn from them. I didn't see much I could learn from that situation last night. Then again, I'm not the brightest bulb in the box, so maybe I missed something that could help. I need to talk to William; he would probably get one hell of a shock meeting my new roommate! I went downstairs, walking past the kitchen to get to the basement and poked my head through the doorway to see what was making the noise.\n\nWhat the heck?\n\nI saw my succubus, sitting at the kitchen table, sorting through gold coins. No, sorting is the wrong word. She was stacking them in little towers to see how far up she could get them before they fell over! Even as I was watching, one of the towers started to lean, and then tipped to the table making that odd sound I was hearing upstairs. Her tail seemed to lash in minor frustration as she promptly pushed the coins aside, clearing a space in front of her. Then she selected one of them, looked it over, and swallowed it! \n\n\"Hey!\" I shouted, stepping into the room. She started in her chair, knocking another tower over causing some of the coins to roll onto the floor. She looked up in surprise as I loomed over her and grabbed her chin. She started to struggle but I held on determinedly as I started prying her mouth open. \"Don't you eat those, gold is not good for you! Trying to poison yourself?\" She began growling as I hooked my fingers behind her jawbone and pulled.\n\n\"Let go!\" she snarled.\n\n\"Open wide and say Ah.\" I replied.\n\n\"I'll bite you again!\"\n\n\"Don't you dare you jumped up excuse for a fruit bat.\" I muttered. \n\nI fished around in her mouth and...there! I found it just to the back of her tongue near her uvula. I got two fingers on it and pulled it out, her saliva dripped from it like clear syrup...EW!\n\n\"What was that about Greg?\" She asked hotly. I wiped off the coin on the corner of my sleep shirt and set it back on the table. I looked at the pile of gold and then it hit me. There was a lot there! I remember showing Mother the jug and saying I wanted the value of it. She must have misunderstood, or she purposefully misunderstood. I only met her once but that sounds like her. I had maybe, $500 or so, in change in that milk jug I showed her. I think she took the value to mean the WEIGHT of the jug. I was now looking at a plastic milk jug filled with gold coins shaped like quarters, nickels, dimes, and no pennies. Huh. I guess golden pennies were too much to ask for. \n\n\"This is my gold right?\" I asked.\n\n\"Obviously.\" Lucretia replied in a huff.\n\n\"Then shouldn't you ask my permission before eating my gold?\" \n\nShe thought about it, and I saw her black eyes narrow. Then a sheepish expression crossed her features. Her tongue extended towards the table and I had a moment of shock. It was long, pink and pointed, probably as long as my hand and wrist. It was also very thick; I wondered how it fit in her mouth! A moment later her throat started making convulsions and several more gold coins fell out on the table! This was followed by a few odd looking rocks and what looked like a white agate of some sort. Lucretia quickly picked up the rocks and the white agate and swallowed them again. \n\n\"What the hell was that?\" I asked, feeling a little green around the gills. \n\n\"The contents of my crop.\" She said plainly.\n\n\"The what of the what?\" I asked faintly.\n\n\"I use stones and such to help grind the food I eat. It fits in my crop.\" She patted the lower part of her neck with a clawed hand. \"I looked at some of the stones here, but most are too brittle. I tried one of the coins and it seems to work well.\"\n\nI was still trying to wrap my head around the whole \"crop\" thing, but then the original thought came back to my head. \"Gold is poison to us, like lead. I take it it's not poisonous to you?\"\n\n\"Nope.\" She looked down, then scratched at the base of one of her horns and wouldn't meet my eyes. \"Sorry about taking your things Greg. I thought you wouldn't mind.\"\n\n\"Really?\" I sounded unconvinced.\n\nI was quiet, waiting for her to say something. She squirmed in her seat. Silence, wonderful weapon commonly used by wives, angry mothers, and smart schoolteachers! The silence grew, and I knew she had to be feeling uncomfortable with it. Finally...\n\n\"Okay! I didn't even think and just did it all right? Are you happy now?\" she grumbled. \n\nI chuckled in my throat and then slid the coins back over to her. \"Thanks for asking, you can put those back in your crop, or whatever you call it.\" I watched in queasy fascination as she took the handful of gold coins and swallowed them in a gulp. That's just...weird! I wonder if she has to actually chew her food before she... \n\nAh well, that's a thought for another time. I started to head down the stairs.\n\n\"Where are you going Greg?\" She asked. I turned to see her standing behind me, her wings folded tightly with the claws on the arches around her throat, made her look like she was wearing a weird bat cape. I suddenly had a picture of her in my mind hiding her face behind it and saying, \"I'm BATMAN!\" I tried not to laugh, but a little of it came out any way and she cocked her head to the side questioningly. \n\n\"Never mind that, I'm just going down stairs to work out a bit before I have a shower.\" I told her. \n\n\"May I come?\" she asked. An innocent question to be sure, but... This area was my inner sanctum as it were. I didn't like to train in front of other people; it made me feel self-conscious. Maybe it's a sign of insecurity? I think more it's that I didn't like people watching me, studying my moves. Some of them were a little brutal. Oh whom am I kidding? There were a lot of moves that were brutal. For example, everyone sees in a fight someone getting punched in the face, the guy takes it and then after a pause comes back swinging. Now, take that same individual and have them get a quick fingertip jab to the throat...what happens? You guessed it, well maybe you did. The man goes down! No it doesn't collapse his windpipe; it takes a lot more pressure to do that than you would think. It does make him choke and gasp for a while and he has to rethink his whole fight strategy. Usually by that time I am hoofing it and I am far away by the time my attacker is back on his feet. Better than pepper spray.\n\nI am a paradox. I absolutely LOVE to fight. The rush, even the pain is all-secondary to the feeling of fighting. It is pitting your self against another person or persons and finding out who is better at it. It is a primal calling that all males have. Some females too but generally speaking males have it the most. If you don't believe me, listen to this. Close friend of my family was against getting her sons any sort of weapons, or toy weapons. The kids weren't even teenagers yet and had no self-control. It makes sense, Mom's love to protect their children. So she gave them stuffed animals, and Legos and so forth. She came home the other day to her rug rats in the back yard running around the backyard squeezing round after round from their teddy bears legs at each other with the appropriate machine gun sounds effect coming from their mouths. This was followed by bags of Lego \"grenades\" tossed at each other.\n\nBoys will be boys.\n\nBack to the point, I love to fight I just don't like hurting people. There it is, my paradox. To fight you have to 1. Be willing to hurt someone. 2. Give yourself permission to hurt someone. That means I am stuck. I don't like hurting someone and I am not allowed to hurt people. Well, I am, but things will go really bad for me if the cops are ever called! Me being a sex offender, they come down really hard on anyone with that label. It would almost be better to take the beating and hope you live through it, then call the cops so your attackers can do thirty days in jail. Of course then they get out and come after you again. \n\nThis is why I train, by myself. I don't want anyone to know what I can do. I don't want anyone, who knows me to know what these hands can do, and have done. There is a fear in peoples eyes that won't go away when they know that you've...yeah. I think you get the point, and it's depressing as hell to talk about. \n\n\"Not today, Lucretia. Tomorrow, I think would be better. You gonna be alright up here?\" I asked. She looked like she wanted to say something, but then stopped and reached out to touch me, but I didn't want to be touched right then and moved back. Stupid depressing thoughts making me all moody and crap! She moved again closer and I held up my hands.\n\n\"What are you doing?\" I asked. She blinked.\n\n\"What you did for me yesterday.\" She replied.\n\nI was now confused, but then she came closer and hugged me! What the heck? She bared her throat to me and tilted her head to the side. I hugged her back, kinda quickly with a little pat on the back and tried to step away.\n\n\"Bite me. You'll feel better.\" She said, holding me tighter.\n\n\"Uhm...what?\" I said smartly.\n\n\"You let me yesterday, you showed me trust, you were open. I want to show you trust.\"\n\n\"I don't want to bite you!\" \n\n\"But you feel sad, and scared?\" She said, drawing back to look me in the eye.\n\n\"I always feel sad, and scared...how do you know that though?\"\n\nShe held up her right hand and showed me the scar, then took my right hand and closed them together, our scars touching on our palms. I hissed my breath out in surprise, the same time she murmured in satisfaction. \n\n\"I feel what you feel, Greg. I don't know why you feel the way you do right now, but I don't like it.\"\n\nI heard what she said but was still, wow! This explained a bit to me of why I was thinking the way I was last night...or early this morning. Depends on your viewpoint of the time frame I guess. I was probably picking up on what she was feeling as well in the middle of her fracas with Hilda. I thought about it some more. I didn't make much headway though since I had a naked woman, uh, succubae pressed to me. She wasn't doing the whole body press that we had talked about yesterday. It was almost a companionable embrace. I know saying that makes me seem like a connosuier of fine hugs, which is silly. I do have my standards though.\n\nLots of people see kissing or sex as the most intimate thing you can do with someone, and they are right. It is a sharing of bodily fluids and a joining of souls as it were. Think about this though, a hug is an enormous expression of trust. Someone, who is not you, is putting arms around your torso or neck. Do you have any idea what a person could do to you in that position? I see both women and men who are \"huggers.\" They just hug every person they meet like it was a handshake. It makes me shudder to see them do it, and to know I used to be like that before...yeah, no more depressing thoughts today.\n\nLucretia was still holding my hand in hers and was now watching me quizzically. \n\n\"Your emotions really move quickly.\" She observed.\n\n\"That's me. Gregory Brooks, the emotional yo-yo.\" I shot back.\n\n\"What's a yo-yo?\" Lucretia asked.\n\n\"A child's toy. I'll get you one, you might like it\"\n\nI moved in suddenly tilting my head to the side and gently clamped my teeth on the right side of her neck. She gasped, her hand squeezing mine sharply and her wings fluttered for a moment. Looking over her shoulder I could see her tail arc, shiver and then go limp. A smell that was both sweet and slightly tangy, like tangerine peels came to my nostrils. I wondered what it was, mentally shrugged it off. I let go with my mouth and gently licked the spot I had bitten to sooth it. When I pulled back I saw Lucretia's eyes were large, and her mouth was parted and she was panting slightly. \n\n\"You okay?\" I asked, arching my eyebrow at her.\n\n\"Never better.\" She murmured faintly.\n\n\"Good, I will be back after I finish working out and take a shower. Then I can show you how to bake cookies.\" I told her. She nodded an affirmative and I went down the stairs to my basement.\n\nI pushed myself pretty hard in my work out, at least with the weight-training portion. I am always careful pushing too hard with the isometrics. They put a huge strain on the body, so it's no good to push hard in that and blow out a muscle group. Just what I need, getting a \"flat\" when I really need to get some work done!\n\nI finished and ran in place for a bit, shaking my arms, when I felt eyes watching me again. I did a slow turn and saw nothing out of the ordinary. Was it my imagination running wild again? Was it...? \n\n\"Lucretia!\" I shouted. I heard her answer from the doorway. Was she waiting for me there?\n\n\"Yes, Greg?\"\n\n\"You actually can help me, come on down here!\" I called up. I kept scanning the room, even engaged my Sight. I saw nothing, but could still feel eyes watching me. Lucretia came down stairs and I asked her to hold one of the heavy bags so it would not move. I wrapped a couple towels around my fists and began warming up with basic three and four punch combos. She shifted into her larger form and held the bag rock steady.\n\n\"How many forms do you have?\" I asked out of the blue. I was trading feet, back and forth kicking about the level of my thighs near the bottom of the bag.\n\n\"I usually switch between this one, and my human form.\" She replied. I thought about it, asked another question.\n\n\"So what is that third form of yours? This one seems like the one you use for combat.\"\n\n\"Correct. That third form, is uh, what I look like on the other side, in my world.\" She sounded almost bashful telling me that. I had no idea why she would sound shy, I mean, I don't have a picture or anything to show you all, and I am not going to spend a thousand words describing her. She was beautiful, not in any one way or...I really am not good at describing it. I know I have done it earlier to a certain extent, so you can reference back to that if you want. I just know that I saw her and thought she was exotic, scary and a whole bunch of other words to define pretty! Being all, bashful, like that I suppose I should say something.\n\n\"I think you're really cute.\" Cute? Yeah Greg, that's a good word. Especially telling it to an Amazon like that. Still it made her smile, if she didn't have those shark teeth in her mouth it might even be a nice smile! She could probably strip all the flesh off a steak with one pass through those jaws!\n\n\"You think so?\" she asked.\n\n\"Yeah, I do.\"\n\n\"Then why won't you let me sleep in your bed with you?\"\n\nI was just starting a kick when she asked that and somehow I tripped over my own foot and fell against the bag, which in her current state she held easily.\n\n\"Excuse me...what now?\" I gasped.\n\n\"Why won't you let me sleep with you, in your bed?\" She said again. \"Since you are my Mas...Greg. My Greg.\" She amended after seeing my expression change. \"I don't understand why you won't take me to your bed. I thought it was a dream of most men...and women to have one of us sexually. I thought you just didn't find me attractive.\" She saw I wasn't kicking the bag, so changed back to her smaller winged state. She moved from behind the bag and posed herself.\n\n\"You tell me I am too, no, that's not the wording. \"WAAY too damn sexual!\" That I need to tone it down.\" Her hands slowly slid over her body. \"Do you not want me?\" She asked. \n\nMy mouth went dry. It had been such a long time for me, and the feelings of affection, of possession filled my chest. She was Mine! All Mine! Did I not pay the price? Had I not bound her, exposed her to some of the deepest parts of what made me who I am? If anyone had a claim to sample and taste those lips, to lose myself in her body it was ME! \n\nThen my head got back in the game and it tamed my raging hormones with a bullwhip and a cattle prod! At least, the mental equivalent of them at any rate. \n\n\"Do you really want to talk about this now? We still have food to prepare and guests coming over? This may be a long conversation.\" I said quietly. She crossed her arms and tapped a sharp black claw on her dark grey lips in thought.\n\n\"Tell me some now so I can think on it, and we will talk tonight?\" She offered. \n\nThat seemed fair enough.\n\n\"I am worried about you draining me dry if I let myself be exposed to you like that. I also don't think it would be good for us to enter into a sexual relationship with you being a student and me being a teacher.\" Though I had to admit I'd had a few fantasies about that when I was younger. There was this one teacher I had in High School, man she was hot to trot with legs...uh...ahem. Never mind!\n\n\"Let's not forget, I don't have the best track record with women. My \"girlfriend picker\" seems to be broken in the old noggin and I usually pick the worst ones possible for me to date. Oh, and another thing. This one is probably the most important one of them all and I should have listed it first. I don't know you very well. We only met like, what, two days ago? I don't know about you but I am not fond of just jumping in the sack with someone until I get to know them better.\"\n\nHer mouth opened in surprise at that one and she started to speak, but I held up my hand to forestall her. \"There you have it, now, think on what I said. Save your questions and comments until after our guests leave, okay?\" Her mouth bobbed open like a fish a few times, then she nodded and we went back upstairs. I wasn't looking forward to the conversation we were going to have later, but on the plus side, after Lucretia came down I hadn't felt the eyes on me anymore!\n\nChapter 16: Cooking\n\nShopping with a succubus was a fairly normal occurrence. Not too much different than shopping with a woman, except you didn't have to hold her purse while she tries on a bunch of clothing that she doesn't buy. Of course I used to do that too. I liked nice clothing, the way the cut of a shirt lay on my collar and side. Even choosing my T-shirts carefully to fit my frame so I looked good. Now, if it says my size on the tag I just don't care as long as it is in a plain color. \n\nCooking with a Succubus is a totally different experience! I told her eggs were food when I set them out. She picked one up and ate the whole thing shell and all. What's worse, she LOVED it and proceeded to empty the carton as fast as she could! I was able to salvage half a dozen while she happily munched and scarfed the rest. Then she got into the butterscotch chips while I was creaming the sugars together. Then she dropped the oatmeal on the floor so I had to get a new container of it and had her sweep the mess up for Mrs. Rat in the back shed. Then she got her finger stuck in the blender, which didn't do much damage to her, but bent the blade on my mixer. A few tweaks with my multi-tool got it working again, but now the blades clacked a bit at high speeds. The crowning moment was when she found my dates. ",
        "She tried one, popping it into her mouth, and froze stock-still. Her eyes got this far away wistful look in them and she began to chew slowly and methodically. I swear she almost looked teary eyed. She took a handful and set the rest aside for the cookies. Slowly, one at a time she ate them seeming to savor the flavor like it was a fine wine, or scotch.\n\n\"Something you want to tell me?\" I asked, while washing out the mixing bowl. I had the first batch in the oven. She didn't appear to hear me. \n\n\"Lucretia?\" I asked louder.\n\n\"Hmmm...what?\"\n\n\"Something you want to tell me?\" I motioned to the dates clutched in her grey hand.\n\nShe gazed down at them and smiled, \"They taste, I don't know, like home to me!\" I raised my eyebrows in surprise. \n\n\"You folks have dates, in your Plane they have that kind of fruit?\" I asked incredulously.\n\n\"No, I never tried them before, but...they taste like home. I don't know why.\"\n\nWell that was some food for thought! Get it, food for...never mind.\n\nI had the first batch out after about fifteen minutes or so, and had them on the cookie towels to cool when the doorbell rang. \n\n\"Hey, Lucretia, get your game face on, and get the door for me will you?\" I called.\n\n\"Sure thing Greg.\" Her human form trotted past me in the same clothes that she wore last night, sans boots and hoody. I could hear the front door open and voices speaking.\n\n\"Hi! I'm Lucretia, who are you?\" \n\nHuh? Lucretia should know my neighbors on sight after meeting them the way she did last night. I looked at the clock; it was a little after two. It's too early for the Gatewatch, so who could be at the door?\n\n\"Gregory?\" a mature woman's voice called out I heard a male voice say something and Lucretia suddenly darted back into the kitchen. \"Greg...it's your parents. They are here, what do I do?\"\n\n\"Well, invite them in, and uh, bring them back here to the kitchen.\" I said, falteringly. Oh, crap. How are they going to, what am I going to, why did this have to...\n\nSigh.\n\nMy mom came in with a bowl of fruit salad in one hand and my father holding her other hand. He had to duck his head a little to come through the doorway. They both wore glasses and had typical features one would expect of a married couple at the ages of fifty to sixty years. Happy, content and loving. At least that is how I hope most people look when they reach that age of life.\n\nMy mom smiled and hugged me immediately and dad shook my hand. He gave an appraising look at Lucretia, with a hint of suspicion. Honestly, after everything that happened to me with Dawn and the legal system I think my parents were almost hit harder than I was. You see my parents are real down to earth honest to god Christians. They believed that you do what is right, follow God's law and everything is fine. Then this all happened to me. Their faith in the legal system was shattered and they found out that the police don't protect the civilians, they protect the law. Look it up in their oaths, you'll see I am right. So they had a paradigm shift that happened after all their lives believing something, then found out it was false. They have also heard the threats, and I made sure to let them know about the specific threats made to them because of me. That way they could defend themselves. Yeah, bunches of laughs all the way around.\n\nLucretia looked more closely at my dad and cocked her head to the side. Mother looked at her and asked,\n\n\"Gregory, who is your friend?\"\n\n\"Ah...um...mom, dad, this is Lucretia. She's my new roommate.\" I walked over and put my arm around her shoulder.\n\n\"Lucretia, this is my mom and dad, Mr. And Mrs. Brooks.\" I gave her a little tap on the shoulder and she seemed to wake up out of whatever she was thinking. She quickly walked up to my dad and shook his hand saying, \"It's very nice to meet you Mr. Brooks.\" He engulfed her hand in his, but shook gently. His lips turned up at the corners in a wry smile.\n\n\"Pleasure to meet you as well, Lucretia.\" He returned. He watched her carefully and shot me a look as Lucretia moved in front of my mom. I just nodded my head. His eyes widened and we waited to see what would happen next.\n\n\"It's nice to meet you Mrs. Brooks.\" Lucretia held out her hand to shake but mom didn't take it. She moved closer and asked, \"Are you one of Greg's, gobliny, friends?\" Lucretia seemed confused, I could see her mouthing \"gobliny\" as if trying to understand it.\n\n\"I think I understand. You're asking if I am human...or not?\" she replied after some hesitation.\n\n\"That's right dear.\" Mom said with a smile. Lucretia looked to me for guidance and I waved her on.\n\n\"I'm not human, I am...gobliny?\" Lucretia said it like a question.\n\n\"Did you make me well?\" Mom asked, her eyes were smiling but her voice trembled.\n\n\"No, that was Mother...my mother.\" Lucretia said. \n\nMom swept Lucretia into her arms and held her tight! My succubus let out a little \"oomph\" of surprise, but then allowed herself to be loved on, as only a mom knows how to do. My dad's eyebrows were raised and he looked a little tense, I stepped next to him and we watched as Lucretia carefully returned the hug.\n\n\"She is...what, Greg?\" Dad asked quietly.\n\n\"If I tell you, do you promise not to freak out and let me explain?\" I returned. He seemed to think a moment. \n\n\"Is my wife in any danger?\" He asked.\n\n\"Not today. Certainly not from Lucretia.\" I answered as honestly as I could. He nodded.\n\n\"Lucretia is a succubus.\" I said quickly. Hearing this mom froze for a second, then she leaned back just enough to look into my roommate's face.\n\n\"Lucretia, sweetie? What does that mean?\" My mom is a people master, not sure if that is a title, but it's a good description. She has such a huge and thoughtful heart she does things that most people don't think to do. When mom goes to another person's house to visit, she brings a gift. If someone gave her a pack of chewing gum that person would get a thank you card in the mail. If you are talking about someone who is there, as if they aren't there, she will bring them into the conversation. Like she just did now.\n\nLucretia looked trapped. Sure it was just my gentle mother holding her, but she had a look on her face of being cunningly snared! She glanced at my dad, looked to me, almost pleadingly. \n\n\"It's okay, she's my mom, you can tell her.\" I said gently.\n\nLucretia gulped, \"I am an Outsider, from a different world. I um...a succubus seduces men and women and drains them of energy. I am not very good at seducing so Gregory is teaching me how to do that.\" She looked down, and away to the side. My mom, bless her heart, did not let go of my roommate. She moved her pleasant face closer to Lucretia's.\n\n\"Are you going to harm my son?\" she asked. I could see Lucretia trying to figure out how to answer that.\n\n\"Not on purpose, everything is so different here, but...no, I don't think I want to.\" She said finally.\n\nMy mom thought about this for a moment, then moved her hand to gently bring Lucretia's head to face her again. \n\n\"He is my son, and I love him...\" Mom's voice broke and she cleared her throat. \"I love him so much. I don't know all the ins-and-outs of how you came to be together, but please take good care of him and he will take good care of you.\" Mom stopped speaking and looked deep into my roommate's eyes, then smiled faintly. She must have been pleased with whatever she saw there. Mom leaned closer, gently bumping her forehead against hers. I heard her talking and saw Lucretia get a startled expression. I could guess that mom said something to her, I just wasn't sure what.\n\nThen they separated and mom patted Lucretia's cheek before turning to face us. \"I think the next batch of cookies is ready to come out of the oven.\" Mom declared.\n\nThe next fifteen minutes I started bringing everyone up to speed on how Lucretia came to be in my life. I didn't spend too much time on all the occurrences that happened in my head. I know dad would have understood, he and I having some father/son conversations about how I was doing with my thoughts and feelings. I just didn't feel like airing that stuff out yet. They both noticed that I was warmer emotionally. I would laugh more as we joked and talked. I also really TALKED with them. For the past several years I had become more and more withdrawn, even to my parents. Funny how that happens when a tragic event happens. They just seemed so happy that I was acting more like the son I had been before.\n\nI explained the Gatewatch to them, and the problems that we had run into. Most people would probably never tell their parents any of this stuff. I have found that has led to many problems in those people's lives. Think about it. If your parents love you, and are not abusive or insane, you have a tremendous resource at your disposal. Kind of cold and calculating to put it like that but there it is. You have someone, and if you're lucky, two someone's who want what's best for you. They have sacrificed and loved for you all their lives. They have much more life experience than you have, and you can pump them for information. \n\nIt is foolish not to use other people's experiences to learn from, since in all likelihood you will have to learn it yourself either from making mistakes or poor choices. I won't even tell you about the time I thought I could change the oil in my car by myself and didn't need my dad to help me. Let's just say it was an embarrassing...yeah; let's leave it alone.\n\nI told them how the Gatewatch would be there at 3:30pm, and they told me they wanted to be there for it. I was surprised but pleased. Nice to have two people in my corner already, especially when mom told us we needed more than cookies and fruit salad. She took over the kitchen, roping Lucretia into helping her. My poor little succubus was in the middle of a whirlwind of activity first setting out plates (all mismatched) and cups (half of which were chipped so had to be replaced) along with silverware on the kitchen table.\n\nSoon we had little appetizer snacks of ham wrapped pickles and those little cheese, cherry, pineapple toothpick snacks. This along with some chips and salsa and the salad mom brought and my cookies...looked like we were having a party!\n\nWhile Mom and Lucretia were in the kitchen putting the final touches on the food, Dad pulled me aside into the living room.\n\n\"Son...are you alright?\" he asked softly.\n\nI nodded.\n\n\"I remember talking to you about your neighbors. You really liked them a lot.\"\n\n\"I still do Dad.\" I was wondering where he was going with this. \n\nHe put his hands on his hips and looked at the ceiling for a second then seemed to come to a conclusion.\n\n\"Have you decided what to do if the...Gatewatch...choose to not let you keep Lucretia?\"\n\nOh...hadn't thought of that.\n\nI knew that I hadn't broken any of the rules. I hadn't summoned my succubus. There was no Veil tearing ritual to get upset about. She had been bound to me, legally...and I was still alive. To me, nothing was wrong. This had all just been a misunderstanding on their parts. Then it hit, their job description was to stop this from happening in the first place. Probably like how law enforcement personnel view medical marijuana growers. They are so used to stopping the growth and usage of weed, that to have a legal grow operation in their town must make their heads hurt! Well, that does kind of put things in a different perspective. I may have done nothing wrong, but I still have an Outsider living in my house! Good question, what would I do? The answer was simple.\n\n\"I made a promise Dad. I am not going to abandon Lucretia. I made a deal with her mother, and I promised her that I would stick with this.\" I said firmly.\n\nDad smiled and gave me a man-hug. \"That's my boy!\"\n\nThen the doorbell rang and I heard a voice say, \"When did he get his doorbell fixed?\"\n\nChapter 17: Cards\n\nI took a deep breath and saw dad give me a nod. Okay...After wiping my hands on my pants I opened the door to see Gwen, Hilda, and Jemima waiting on the front porch. \n\n\"Hey guys, come on in!\" I said cheerily. They all three exchanged incredulous glances and followed me into the living room. Gwen saw my dad, and turned her head at the sounds in the kitchen. \"I thought it was just going to be us, talking...\" she ventured.\n\n\"I figured I would explain everything to both you and my parents at the same time.\" I said. Hilda cast a shocked glance to my dad who just smiled and nodded. Jemima looked around and asked. \"So where's the succubus?\" \n\nAs if on cue Lucretia came from the kitchen holding a bunch of glasses in her arms and handed them out to everyone, my dad first. After my friends saw my dad take the glass with no hesitation they took theirs. Mom came out of the kitchen with a pitcher of iced tea. I don't own any tea! \n\n\"How did...?\" I began before mom smiled knowingly and answered before I finished. \"Lucretia made it! I can't believe how handy she is in the kitchen.\" My roommate must have magicked up some of that stuff but how did she know how to replicate it my first sip told me, mom always carries a water bottle of tea with her. Probably gave her a taste and then she made more of it. Makes sense...oh...wow! I will never have to buy Mountain Dew again!\n\nAfter we all had our drinks we meandered into the kitchen and started serving ourselves some food. The Gatewatch looked a little peeved. They probably figured Lucretia and I would be huddled together and fearful of them coming over. Or maybe we would put up a bold face and be argumentative. I hoped they didn't think they were walking into a trap and we would be lying in wait for them. These women were my friends. I don't do that to my friends. I snickered to myself at a sudden thought I had. Lucretia looked up, as did some of the others at the sound. \n\n\"I was just thinking,\" I said to my roommate. \"...I spent so many years avoiding women after Dawn, and now look at me!\" I waved a hand taking everyone in. \"Three of my best friends are women, and just a few days ago I got another friend, who is also female!\" I shook my head with another chuckle. \"We all try to make plans and try to control our lives and Fate just has to put his fingers in and stir things up. Damn, why do I even try?\"\n\nI put a cookie in my mouth to make room for the fruit salad on my plate. Gwen was giving me a strange look, and Hilda and Jemima seemed contemplative. Lucretia was giving me a smile, and when she walked by me she paused for a moment.\n\n\"Say it again?\" She asked me.\n\n\"Say what?\" I wondered.\n\n\"That I am your friend.\" She supplied.\n\n\"If I do, will you stop eating my eggs like bon-bon's?\" I kidded her.\n\n\"That depends on what a bon-bon is.\"\n\n\"It's like a Hershey Candy bar, but better. Sometimes they...ah. Yeah, it's a type of chocolate.\" I didn't want to go into the intricacies of different types of confections right then so I just gave up. Then I gave her what she wanted. I looked into her eyes, smiled, and said it.\n\n\"You, Lucretia, are my friend.\"\n\nIf her smile got any brighter, I would need sunglasses! I saw the Gatewatch...well, watching, our interactions. Dad was smiling at us, and mom was being mom and walked by us giving Lucretia an affectionate rub on the shoulder and bussing my cheek with a quick kiss. \"You two are cute!\" Mom said as she snagged two more cookies. I almost said something about watching her sugar intake then remembered, mom was all healed up. I looked more closely at her plate and saw she had five more cookies on there! She saw my expression and laughed.\n\n\"I don't have to worry about glucose levels anymore Greg! Just have to worry about getting fat!\" She told me around a mouthful of cookie. I could see Gwen wanted to ask, but was trying to be polite. I decided to explain.\n\n\"Lucretia's mother offered me my choice of...uh...compensation for teaching her daughter how to act like a human. One of the things I asked for was healing my mom so that she wasn't a diabetic anymore.\" Gwen's eyes got really wide.\n\n\"What else did you ask for?\" Hilda asked, she was holding her plate with one hand and the other arm was across her stomach. She had her head cocked to the side and her expression was, hard to describe. I'll say this to you all...I hate it that women are so inscrutable. When a woman wants to be, they can turn on the mystery and you can't get even an inkling of what's going on in their heads! Of course they want you to figure it out so I cheated. I turned on my Sight and looked more closely at my friend. \n\nHer body was relaxed, but her animal self, looked like it had lost its best friend. Kind of an interesting way to put it I guess. I glanced at the other two and I could see the same thing, sorrow and heart ache. They truly thought I was trapped in a bad situation and Lucretia was going to kill me! Well, that may be true, but I wasn't prepared to see the guilt that was lurking like a dark cloud over all three of them. It made sense as I thought about it. I was a loner and because of circumstances in my life I kept people at a distance. They pushed me into becoming social, and then I sort of fell into having friends. I started to have a life again.\n\nI had gone to their party, gotten attacked by something that had been coming for them, and gotten injured. I don't see it as their fault, but they do, they...see this whole affair as their responsibility. They see me as trying to make the best out of this situation to survive. That was it, they are all overwhelmed with shame, and guilt, and a desire to see this whole thing put right. That's why Gwen told me that she was sorry and that it had to be done last night when we were attacked.\n\nHilda, no...I can think of her as Hildy now. Her animal specter was looking between Lucretia and I with sorrow. I had never really Looked at her very closely before, except for the first time when she moved in. Hildy never seemed to hide all that much. She was open, honest and you could take everything she said at face value. On closer inspection though, what was all that sorrow about? Her specter turned to see me staring and I got the surprise of my life. Yes, I have had a lot of surprises until now, but this is the first time THIS ever happened.\n\nHer specter noticed me watching, and looked back at me! \n\nDoesn't sound like much to you, but my power just always let me observe; now it was interacting. Her specter was looking directly into my eyes and there was a sense of loss, of losing something, of...hard to describe. It felt like knowing you were going to get a Christmas present then it got lost in the mail. You don't know what it was, but you knew it was something cool. Now your going to be calling your rich uncle who sent it to let him know it was lost. You know he is going to tell you what it was and that will make you feel terrible because now you actually have a value to put to the present.\n\nI was feeling really confused until Hildy noticed I was staring at her and met my eyes as well. With both her and her specter staring at me I realized what it was that she was feeling and my heart did a belly flop in my stomach. \n\nShe really liked me! Not just liked me as \"Hey, Greg's a great neighbor! You all should have a cool neighbor like Greg who makes badass cookies!\" No, this was. \"I think I like Greg, and I really want to get to know him better. I think, he could make it so I don't feel so lonely either. I am never going to get the chance now, because if that succubus doesn't kill him then he is going to fall for her and I am never going to get the chance to get to know him the way I want to! I am going to have to live next door to him knowing that she is trying to seduce him when I wanted him for myself! I finally find someone who doesn't care that I am...!\" \n\nI shut down my sight and closed my eyes at the same time. The feelings and the information were getting a little too intense. I opened them to see Hildy staring at me, puzzled.",
        "\"When this meeting is over, you and I are going to plan a time to get together. We need to have a talk.\" I said to her levelly. Hildy now looked really confused, she probably felt as confused as I was. It didn't make sense to me though. Why would she feel any attraction for me? I am...well, ME? Nothing awesome going on over here. Hildy, man, she's got the body, the looks and the strength to get anyone she wants. I am short, wide, and average in the looks. Sure I am strong, and got a sense of humor when I want to, but I am nothing to write home about. \n\nWe finished our meal, and went back into the living room for the meeting. I could bore you with all the questions, and the statements. I won't, it would take way too long. The general gist was this. \n\n\"No you didn't break any rules, but we are concerned for your safety.\" \n\nSee, that is called shortenizing. I took an entire afternoon of rhetoric and put it into one sentence. Nothing I could say or do would dissuade them of the fact that I was dealing with a predatory Outsider who would in all likelihood kill me. Lucretia couldn't even repudiate the arguments because I had asked her to always tell me the truth. She didn't look happy about telling other people though. \n\nI saw Gwen quietly placing some of those weird looking cards of hers facedown on the coffee table while we were still debating. I was nervous about kicking in my Sight again after Seeing what I did with Hildy, but I needed to know what she was up to. I had seen what she did with those cards last night, and I had no desire to get into a fight here in my house. I saw the lavender glow of her power through the cards, and I saw a woman's slender hand touching Gwen's shoulder from behind. She had long black hair held back with what looked like a bandana of sorts. Not like the ones of today that you see, but long and flowing. It was like a scarf but meant to wrap the head and trail behind in the hair of the person as an accent.\n\nShe was watching me, and watching Lucretia closely. Then she whispered something in Gwen's ear and touched the deck of cards. The young witch of the Gatewatch slid two more cards onto the table, and flipped them all over. I had assumed they were tarot cards, but really old. I was wrong, each card was blank. I was looking at them with my Sight, and they were blank. \n\n\"You can see things that others wish to hide.\" A ghostly voice said next to my ear. I turned and the woman with long hair was looking me up and down with frank appraisal. I wondered if I should say anything, but I didn't want to appear crazy by talking to things other people couldn't see. The woman glanced at the cards and gave me a small mischievous smile. \n\n\"You may see things most do not see, but some you are not meant to.\" She glanced aside and I followed her gaze to my dad who was watching us both, while the others were paying attention to the cards. Wait, my DAD can see this woman? She gave him a brief, slow nod that he returned. With a final smile to me, she moved behind Gwen and whispered something in her ear before she vanished.\n\n\"I don't know what to say, Hildy, Jemima.\" Gwen said slowly. \"The cards don't lie. He broke no rules, and while he is in danger there is nothing we can do about it. It's out of our hands.\"\n\nJemima's hiss raised the hair on the back of my neck and Hildy's growl made my chest tremble. My mom stepped forward and said peaceably, \"I know your all concerned over my son, but haven't you noticed...\" They interrupted her.\n\n\"You have no idea what that monster there could DO to your son!\" Jemima spat.\n\nHildy glared at mom and started to push her aside to confront me, and stopped. My Dad's hand had grabbed her wrist. The werewolf girl turned to meet my Dad's gaze with a snarl and then froze at the expression in his eyes.\n\nMy mom once told me that my father was a very powerful, driven, and motivated man. That he seemed to have an ability to push others, and to get results in whatever endeavor he was a part of. She also told me that at times he scared her with how intense he could be. \"Your father is a safe man Greg. Just do not confuse him for being tame. He is safe, not tame. I wouldn't ever want to tame him, it would destroy who he is.\" I was seeing a little of the wildness come out in this big man as he pulled Hildy closer.\n\n\"My son is who you have the problem with...go talk to him. But you touch my woman, my wife, my MATE like that again...?\" His voice had been quiet, but there was an undercurrent to it I had very seldom heard, but it sobered up Hildy as fast as a bucket of ice water.\n\n\"Understood Mr. Brooks.\" Hildy said quietly. He very slowly let go of her wrist, and then walked back to the sofa to sit down. I blinked. He had covered a lot of ground to get from where he was sitting to get to Hildy, and that fast? Wow.\n\nGwen spoke up then, \"I wasn't finished with my card reading.\" Jemima sat back down next to her friend and watched Gwen studying her cards. Hildy was slowly pacing back and forth her eyes flicking to all of us in the room one after the other.\n\n\"What were the terms of your binding with Lucretia?\" Gwen asked as she studied the last card with disbelief. I shrugged.\n\n\"I wanted to keep it simple, so I just used one word. I called her Mine.\" Gwen waited, they all waited. I held up my hands in a shrug, \"That was it, I just said, \"Mine.\"\n\nGwen seemed not to get it, but Jemima did. \"You claimed it all! Nothing held back? You didn't give a time limit, set restrictions, anything?\" I thought about it and looked over at my succubus and cocked an eyebrow at her. She shook her head. I brought my gaze back to Jemima's. \"Not that I am aware of.\"\n\nHildy was pacing faster, glaring at Lucretia before she growled out, \"You must be lying! You gave a succubus free will? What holds her in check? She could decide to attack us right now and we'd be hit with no warning!\"\n\n\"You are his friends.\" It was the first time Lucretia spoke during this meeting. \"I don't want to hurt his friends, or his family.\" She said this last part with a nod to my parents, causing my mom to smile at her.\n\n\"Yet you still can't tell us you won't harm him? How can we believe you?\" Jemima asked. Gwen was really frowning at her cards, suddenly she gasped as if she had an epiphany. Wonder what that longhaired woman whispered in her ear this time?\n\n\"I got it! I understand now!\" She quickly stacked her cards back up and put them in the pocket of her skirt. Then she ran past us into the kitchen. She returned with three glasses and two bottles of my Mountain Dew.\n\n\"You be careful with those Gwen, I don't like people getting into my Dew.\" I cautioned. I am fiercely protective of my beverages, especially my Dew! She had my favorites, the original green and the slightly newer blue raspberry. She set two of the glasses down on the table on either end and set the third in the middle.\n\nShe handed Lucretia the bottle of blue Dew, and me the green and then turned her attention to the spectators. \"This is why it's working!\" she declared all excitedly. \n\n\"Hildy, she is restrained and yet has freewill. Jemima, you're right, nothing was held back, this is what happened!\" Gwen turned to Lucretia, \"Go ahead and fill the glass half full.\" She turned to me and asked me to do the same thing.\n\nWhen we were done Gwen picked up the glasses and spoke again, \"Now, Gregory made his claim on Lucretia, he said she was \"Mine\", and in so doing he wanted all of her, total control.\" She poured Lucretia's glass into the empty one in the middle off the table and continued her monologue. \"As we all know once something is taken there is a void. It must be filled, and Lucretia was now empty, everything was taken. Gregory could have left her like that, powerless and defenseless. For some reason he decided to give everything of himself as well.\" \n\nThat surprised me. I didn't know that was going to take place. I just knew that inside my head Lucretia looked lost and I offered what I felt was right, was just. If I demanded all of her it was only fair I give all of myself. That's probably why it was so easy to get my aspects past the Door. Huh...yeah. I am so going to need a good therapist when this adventure is over.\n\nWhile I was pondering Gwen surprised me and tried to take the Dew out of my hand and I tightened my grip! \"Hey, don't just snatch my drink from my hand, warn a guy next time!\" Gwen just grinned at me, and I allowed her to take the glass from my grip. \n\n\"So Greg then gives all of himself to cement the binding.\" She poured my green Dew in with the other, filling the glass to the top. \"Now we have a whole lot of material, and it needs to get put back or we have two empty husks walking around.\" Gwen tipped the glass and poured half of the mix into Lucretia's glass and half into mine. I was starting to get an idea of how serious this bond was, and why I have been starting to act differently than I normally do. Sure I have been apathetic at times, but I am also jovial and hard working, loyal and all that. I tend to try to do what is right by the dictates of my conscience. Lucretia though, is cold, calculating. She is prone to anger and violence. She is protective of what's hers, and full of rage and spite and...oh shit. Lucretia's eyes were wide as well watching me. I think she was getting it too.\n\nAlmost mechanically I raised my glass to my lips and as if she was my reflection in a mirror Lucretia did the same. We each drained our glasses and set them on the table, still staring at each other.\n\n\"So what exactly does this mean?\" My mom asked into the silence as we were being watched.\n\n\"It means,\" Gwen continued. \"It means that Gregory has done something no one has attempted before.\" \n\nShe stared at me almost bordering on awe, and surprise and a little bit of fear. \"I don't even know what to call it. She is an extension of him, and he is an extension of her. They still are who they are, but...I don't know.\" She turned to look at Hildy, \"She won't attack us because Greg wouldn't want to because we are friends. That is the control Greg has. He has as much control over her as he has over himself.\"\n\nI glanced down at the bite mark Lucretia left on my hand yesterday then looked back up at her. She snickered and I chuckled. Apparently I get into arguments with myself! I looked at the scar in my palm and rubbed it with my thumb and saw my succubus shiver. So, she's apart of me, at least the way I understand it is that our personalities have mixed somehow. We both gave of each other so much we averaged out in the end. I probably should feel scared or something, but now that I understand it, I don't feel so bad.\n\nMy dad was looking thoughtful as the party wound down. I wouldn't say the Gatewatch was particularly happy with the outcome of tonight's meeting, but we had come to an understanding. I had also gotten permission for Lucretia to go next door and visit Gwen and Jemima. Sure, I am a great guy to hang out with, but I am sure that Lucretia needs to be around others. After all, I know in my own head I am not the best example of what humans are, or how we act. Gwen was fascinated by this whole thing, and wanted to talk to Lucretia more. She also wanted to take her out with the girls since all women need girl time. I wasn't sure how I felt about that, but I figured I would burn that bridge when I got there. \n\nFinally everyone was gone, and Lucretia was helping me with clean up. \"Greg, can we talk now?\" She asked me. I really didn't want to, so I gave myself an out. \"Wait until the dishes are done, then we can talk.\"\n\n\"Why do we have to wait, we are alone?\"\n\n\"Maybe I want to give you my undivided attention?\" I said with a smile.\n\n\"I wish you would.\" Lucretia said so softly I almost missed it. I glanced at her and saw her blush. It was so cute. She was so pretty and she smelled so good. Like vanilla and dish soap with a hint of tangerine.\n\nI hurriedly glanced back to the sink and said kind of sharply, \"Change back to your true form Lucretia.\" She frowned at my tone of voice, but did as I requested.\n\n\"What was that all about?\" she asked.\n\n\"It's easy to forget what you are when you look like a human woman. I need the reminder of what you are.\" I answered.\n\n\"Why?\" she asked, the edge of her wing brushing along my arm as I turned on the taps to do the dishes.\n\n\"Because it is a lie, when you are in human form. No matter how you look and sound, you are not a human. With you I always want the truth, even if it's uncomfortable.\"\n\nShe was quiet, contemplative. It seemed she was almost shrinking away from me. So I handed her a dishtowel.\n\n\"What's this for?\"\n\n\"I need you to dry the dishes and put them away as I wash them.\" I said, handing her a rinsed cup.\n\nWe were silent for a time and I was enjoying the quiet. I found that I really did like her next to me, even in this form, I found her very attractive. Finally I thought to ask a question that had been nagging at me. \n\n\"Why does your skin sparkle?\"\n\n\"Sparkle?\"\n\n\"You know, spots in it are shiny.\" I touched her arm where those little pieces of black glass seemed to be imbedded. \n\n\"That's obsidian. I know it's from this Plane, for some reason it's in my skin, I don't know why.\"\n\n\"Does it hurt?\" I asked. I know, sounds like a stupid question, but I just thought rocks in my skin would feel uncomfortable.\n\n\"No!\" she said with a laugh. \"It's my skin, so why would it hurt?\"\n\nCouldn't argue with logic like that. We finished the dishes and I took her hand in mine and led her upstairs to my room. It was night out, and the sky was clear so I opened the North window and climbed out onto the roof of my house. \n\n\"I could have just flown up here you know.\" Lucretia muttered.\n\n\"True, but someone might have noticed. It's dark and no one looks up anyway so you re safe to stay the way you are.\" \n\nWe sat down just a few feet down the ridgeline of the roof and I laid back, arms under my head. Lucretia watched me for a moment then did the same. I waited for her to speak, but she didn't say anything.\n\n\"Why is sex so important to you Lucretia?\" I decided to get the ball rolling in this conversation.\n\nLucretia stayed quiet. I turned to look at her but she was just gazing at the stars. The streetlights blocked most of them in a soft orange glow, but you could still see some.\n\n\"I never really looked up at the sky much at home.\" She said softly. \"Funny when you think I flew in it often enough, I should have taken more time to look at it.\" She turned her head to look off in the distance, toward the horizon. \"That is where your sun sinks?\"\n\n\"We call it sun sets, but yes.\"\n\nShe repeated the words and seemed to be thinking.\n\n\"Sex isn't important to me Gregory. Why do I need that when I can take what I want with a kiss? I wanted to know if you find me sexually attractive. I wanted to know if you would let me sleep in your bed.\"\n\nI thought about it, \"Why shouldn't I have thought you meant sex? Sure seemed like it they way you were phrasing it.\"\n\nShe rolled over on her side, one wing lying along her body like a blanket. \"I like to know you think me attractive, I know you hate the word but I am going to say it. Succubae like to know their Master enjoys looking at them. As you humans say, \"Plain and Simple\" that's it. Even the old Master I had liked looking at me, though I suspect it was for different reasons. As for sleeping in your bed, I am lonely.\" \n\nI gave her a questioning look. She continued. \"When I am home, with my family, we all sleep together huddled as a group. I miss it. I miss laying half on Mother and half off with Rulli's horns along my hip and Astar's feet tapping against mine. I have spent time out in the desert by myself, but when I am home...\" Her voice dwindled off and she reached her hand out and laid it on my elbow. \n\n\"When you're home you have the closeness with your family. This is your home and you have a room that's big, that's all yours, but you are lonely when you try to sleep.\" I saw the glint from her horns that let me know she had nodded.\n\nI sighed, so it wasn't sex. It felt really good to know that, at the same time a small part of me was disappointed. That part of me doesn't get to vote on anything anymore so it was easy to make it shut up. Then a reckless thought occurred to me that made me grin.\n\n\"Lucretia, do you have to feed each time you kiss someone?\" I asked.\n\n\"No.\"\n\n\"If I give you a kiss, do you promise not to feed on me?\"\n\nMy question was met with silence. Then I felt her shift and come closer to me. Then a cool thin blanket covered my chest and hips. It moved slightly and felt like soft leather. I am guessing...wings?\n\n\"You do find me attractive then Master?\" she said almost disbelievingly.\n\n\"I already told you I did...are you just fishing for compliments?\" I asked. I let her calling me Master slide this time. I think I shocked her with my question so a slip of the tongue once in a while is okay.\n\nI heard her giggle. \"Many times people say one thing and do another. It's nice to hear it said and shown.\" \n\nI felt her nuzzle her nose into my cheek. \"Tell me what you like about me Greg?\"\n\n\"Why?\"\n\n\"I would like to hear it.\" She said simply. \n\n\"You ARE fishing for compliments! No shame, none at all.\"\n\n\"Yes...please?\"\n\nOh she had to break out the big guns and say please! I rolled over so I was facing her and snuggled in closer.\n\n\"I like your horns...\" I started\n\n\"Really? They are not too long?\" she interrupted.\n\n\"Hey, I'm complimenting here. If you want to interrupt then I am going to stop talking.\" I growled jokingly. \n\nShe giggled again and snuggled closer.\n\n\"I like your eyes. They have a nice almond shape to them that makes them expressive even though they are one solid color. I think your skin is spectacular, and I have wanted to count your obsidian spots for a while now, just to get an idea of how many you have.\"\n\nI leaned back a bit and kissed her nose. \"I like it that you obey me, but you are not a push over, you challenge me...but in a good way.\" She seemed confused.\n\n\"It's hard to explain, but you're not...you stand up for yourself. I think that's sexy as hell.\"\n\n\"Thank you...\" she started to say.\n\n\"I'm not done yet. I like your wings, I know human women don't have them and that's fine, I couldn't imagine you without them...you would just look wrong. I even like your tail, I can watch it swish to know what kind of mood your in. Just so you know, hold your tail still playing poker, it's an obvious tell when it's twitching. You will never be able to bluff.\"\n\nI raised my head to look down at her. \"Now, my lovely Lucretia...may I give you a kiss?\" I heard her choke for a second and I put my hand on the side of her face. \"You alright?\" I asked, concern in my voice.\n\nIt took her a moment to speak and then I realized that she seemed to be near tears! \"Did I say something wrong, did I offend you? I'm sorry, was I not supposed to mention your tail? Is that like a succubus taboo or...\" A clawed hand covered my mouth, and she raised her head so it was close to mine.\n\n\"No one has ever said...that was so nice...you stupid, wonderful...! Raah!\" Then she yanked me down to her and kissed me!\n\nShe tasted of the cookies we had for the party, and her lips were cool against the almost burning heat of my own in comparison. My arms slithered around her shoulders and I held her tight to me. Her hands slid down from my neck to my waist where she pulled me even tighter against herself. I gently pulled her horns, tipping her head back and used the tip of my tongue to draw lazy circles on her throat. That seemed to drive her a little crazy as with a harsh growl she flipped me over onto my back and sat astride my hips. I got a good view of her with her wings spread, teeth bared in a fierce grin. The little lights of the city seemed to reflect off of all the shiny spots of stone in her flesh. She looked like a beautiful stone sculpture come to life.  ",
        "Just as Lucretia looked about ready to pounce on me I put a hand on her chest between her breasts stopping her. She whined, almost an avian croak the way it came out.\n\n\"Just kiss me, sweet Lucretia.\" I commanded softly. She took a deep breath, and slowly nodded. She fell forward catching her weight on her hands, now placed on either side of my head. I took her face in my fingers, looking up into eyes at once so alien to me, but for some reason they were becoming so precious. Our lips gently met, and I tasted the tip of her tongue, as it brushed my own. I felt her shudder above me a couple times as our kiss dragged on for a few minutes. Then she lay down on top of me, snuggling like I was a body pillow.\n\n\"Lucretia?\" \n\n\"Yes Greg?\"\n\n\"Time for bed.\"\n\n\"Don't want to move.\"\n\n\"Come on.\" I chided.\n\n\"Stay here?\" I thought about it, smiled. Why not? You only live once!\n\n\"How about you sleep in my bed, with me. I tend to get too hot at night and your nice and coooooOOHL!\" I shouted as suddenly I was flying through the air in Lucretia's grasp! Her wings beat with heavy flaps as we shot through my open window and sprawled on the floor. A few tugs and I was lying on my mattress and a purring Lucretia was in my arms.\n\nI started laughing, and she joined in with me. \n\n\"Thank you Greg.\"\n\n\"Your welcome.\" I replied warmly. I could feel her lips just under my ear and her teeth grazed my skin every few breaths and it made me smile. It made me think of what was said at the meeting and I gave a quiet chuckle.\n\n\"What is it?\" Lucretia asked.\n\n\"Just thinking of what the neighbors said.\"\n\n\"Which part?\" she queried.\n\n\"The part where they were worried about whether or not you would kill me.\" I said. I gave the top of her baldhead a quick kiss. \"They seemed upset that you seemed undecided.\"\n\nLucretia was silent for a moment, and then her hand pulled my head down so we were face to face.\n\n\"Know this Greg...\" She sounded so serious that all humor left me. \"...I will never, ever kill you...unless you want me to.\" Her eyes started to glisten again and she gave me one last quick kiss before burrowing her face in my neck and tangling her legs with mine. Judging by her deep breathing she had fallen right to sleep. It took me a while before I could do the same.\n\nTo be continued..."
    ],
    "authorname": "payenbrant",
    "tags": [
        "lonely",
        "sex offender",
        "succubus",
        "vampire",
        "werewolf",
        "witch",
        "romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-05"
}