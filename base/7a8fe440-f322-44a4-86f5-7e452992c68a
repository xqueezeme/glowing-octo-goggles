{
    "title": "Autumn Light",
    "pages": [
        "This is my entry for the . Let me know what you think via votes and comments -- they are appreciated, as always. And thanks to Jess, for the nudge to write something. It's been a while.\n\nI was staring at the television when I heard a wail from outside my front door. It made me jump. I glanced at the clock and was surprised to see it was already eight o'clock. Surely it had only been six o'clock a few minutes ago?\n\nI clicked the TV off with the remote and listened. There were some low voices, one of them more high-pitched and tearful.\n\nI got up, walked over to the door, and opened it. In the gloom of the October evening were a witch and Wonder Woman. Actually, two girls, one very young, probably no more than seven. She was the witch. The other one was much older, perhaps eighteen or nineteen, and dressed as Wonder Woman in blue hot pants with white stars and a low-cut red and gold bodice. Wonder Woman was fussing over a cut on the witch's leg. Beside them were two small buckets, with the bright, reflective wrappings of various pieces of confectionary just visible.\n\nThey both looked up at me as the light from the doorway illuminated them.\n\n\"Your path is DARK!\" said the witch accusingly. \"I tripped on it!\"\n\n\"Sssh, Charlotte,\" said Wonder Woman. \"It wasn't his fault. You were running. I told you not to run.\"\n\n\"I'm sorry,\" I said. \"I did mean to put some lights on the path. Do you want to... come in and clean that up properly? I've got some iodine somewhere.\"\n\n\"Not the stingy stuff!\" Charlotte's lip trembled again. \"I don't want the stingy stuff! Please don't let him put the stingy stuff on it, Tara!\"\n\nTara soothed her. \"I won't, don't worry. You don't need it. It's only a graze.\" She looked up at me. \"Perhaps some water and a sponge, just to get it clean?\"\n\n\"Sure,\" I said, and opened the door wider and gestured them in.\n\nThey picked up their buckets and came inside. I led them through to the kitchen and found some paper towels. Tara dampened a couple under the tap and gently wiped Charlotte's leg. Charlotte was much calmer now, and looking curiously around my house, and then fixed her eyes on me.\n\n\"What's your name?\"\n\n\"Simon,\" I said.\n\n\"Don't you like Halloween? Tara said because there were no lights on your house, you probably didn't like it, and you didn't want people knocking on your door. But I said maybe you just forgot.\"\n\nShe looked at me hopefully.\n\n\"Yes,\" I said. \"I did forget.\"\n\nShe beamed. \"So you don't mind us knocking? If we had knocked... if I hadn't fallen over.\"\n\n\"No. I don't mind.\"\n\nShe nudged Tara triumphantly. \"See! I TOLD you.\"\n\nTara gave me a brief, apologetic glance, then glared back at her young companion. \"You still shouldn't have run off.\"\n\nThis was already distant history to Charlotte. \"I'm a witch,\" she told me. \"I was supposed to have a broomstick but I forgot it.\"\n\n\"You look great,\" I said. \"You don't need a broomstick.\"\n\n\"And Tara is Wonder Woman. Her outfit's a bit tight because she's grown a lot since she last wore it and she forgot her jacket so she's a bit cold. And lots of the boys are staring at her boobies.\"\n\n\"CHARLOTTE!\" Tara was crimson with embarrassment. She did look in some danger of spilling out of her top, which was probably several sizes too small for her. She was a very pretty girl, I noticed. Long black hair past her shoulders, blue eyes, slim and pretty. I noted all this very indifferently, of no more interest than the contents of somebody else's shopping list. But I did feel a bit sorry for her.\n\n\"It is a cold night to be out without a jacket,\" I said. A thought struck me.\n\n\"Be right back,\" I said, and went upstairs to our bedroom. Still \"our\" bedroom. Not mine.\n\nI opened some closets and rummaged. After a minute or so I found what I was looking for, and took it downstairs.\n\n\"You could wear this,\" I said to Tara, and held out a light blue jacket, the nearly exact same shade as her blue hotpants. \"I think it kind of goes.\"\n\n\"It's like a Wonder Woman jacket!\" said Charlotte excitedly. \"Put it on, Tara!\"\n\n\"Oh no... I couldn't... this looks really expensive... it's lovely, but... I'll be fine, really.\"\n\n\"Take it,\" I said. \"Please.\"\n\nShe looked at me uncertainly. \"Well... I could bring it back later, on our way home.\"\n\nI shook my head. \"Keep it. I've got... lots of my wife's clothes. I keep thinking I should go through them, take them to the charity shop or just throw them out or something. Please -- keep it?\"\n\nShe was still reluctant, but weakening. \"Well... if you're sure?\"\n\n\"I am,\" I said.\n\nCharlotte looked at me solemnly. \"Doesn't your wife need them any more? Did she grow out of them?\"\n\n\"Something like that,\" I said, and smiled at her.\n\nCharlotte smiled back. \"You're nice! And Tara said you might be an axe murderer! Or a... rapper, or something.\"\n\n\"Charlotte!\" The blush was back.\n\nI shook my head. \"I haven't axe murdered anybody for years, Charlotte, don't worry. And I was never a... rapper.\"\n\nShe giggled. \"So - what DO you do?\"\n\n\"Don't be so nosy, Charlotte! It's none of your business.\"\n\n\"Have you heard of architects? Well, that's what I do. I design houses and buildings for people.\"\n\n\"Like castles?\"\n\nI shook my head. \"Sadly, nobody's ever asked me to design a castle for them. Wish they had.\"\n\n\"I'm going to live in a castle when I'm older.\" She looked at me doubtfully. \"Perhaps I'll ask you to design it for me.\" I sensed she would rather give the commission to somebody with a better track record of castle design, which was very sensible.\n\n\"Thank you,\" I said. \"I'd appreciate that.\"\n\n\"I need to pee,\" she announced. \"Where's your bathroom please?\"\n\nI pointed her towards the downstairs cloakroom and she trotted off. Tara was now wearing the jacket, and it fitted her very well. By pulling it tighter around her it covered up most of her cleavage, and I thought that the boys outside and any neighbourhood dads answering the door to her later wouldn't thank me for that.\n\n\"This is really nice of you,\" she said. \"Thank you.\"\n\nI shrugged. \"You're welcome.\"\n\nThere was a pause.\n\n\"Sorry,\" she said softly. \"I realise who you are now. I'm really sorry about what happened. About your wife.\"\n\nI nodded. Another slightly strained silence. We heard the toilet flush.\n\n\"I'm afraid I don't have any sweets or anything I can give to her,\" I said. \"If I'd thought about it... I'd have bought some, just in case.\"\n\nShe looked at me sympathetically. \"That's OK.\" Then a thought struck her. \"But I'm sure she would like something from you. Do you have a bowl or a plate or something?\"\n\nI gestured to a cupboard. \"In there.\"\n\nTara opened it and chose a brightly coloured soup bowl. She put it on the side then quickly darted over to one of the buckets. She grabbed a handful of sweets from it and then dropped them into the bowl.\n\n\"That's my bucket,\" she said. \"She won't notice mine's gone down a bit. And I shouldn't eat them anyway.\"\n\nThere was the sound of a door opening and Charlotte came back into the room. Tara looked at her fondly.\n\n\"Ready to go?\"\n\n\"Yep!\"\n\nTara glanced at me. Taking my cue, I reached over and took the bowl from the counter and held it in front of her.\n\n\"Something for your collection,\" I said.\n\nHer eyes lit up. \"You do like Halloween!\" Then she looked at Tara gravely. \"Next year, we have to come and remind him to put lights up.\"\n\nShe took a handful of sweets, and carefully put half of them into her own bucket and then the remainder she dropped into Tara's. I liked her very much already, but I liked her even more after that. And I liked Tara too, for her quiet thoughtfulness in giving me something I could share with Charlotte.\n\nAs I watched them disappear down my path, I found myself smiling again. I couldn't remember the last time I'd done that.\n\n**\n\nI had no expectations of seeing either of them again, but a couple of days later I came home to find a note lying on my doormat. The paper and envelope were blue and scented, and the writing was neat and careful.\n\nDear Mr Garrison,\n\nThank you again for helping me clean up Charlotte's knee and for giving me the lovely jacket. I really like it but if you change your mind and want it back I'd quite understand.\n\nI did wonder though if you'd like some help in sorting out all the clothes you said you had to go through? Some of my girlfriends and I would be very happy to do this for you? I'm sure we could sell quite a lot on Ebay or other sites, or you could just give it to charity shops if you like. But don't just throw them out -- I think that would be a real waste.\n\nAnyway, if you don't want us to that's fine. But we'd be happy to do it for you -- please?\n\nYours sincerely,\n\nTara Ross\n\nBelow it she'd written out her mobile number and an email address.\n\nI thought about it. It was a job I'd been putting off. And I knew I had to do it. I liked the tact of her note, with no direct reference to my wife. It was just a simple offer of neighbourly help. I suspected what was also unsaid was that she and her friends would really enjoy it. Whole closets of fashionable, expensive, nearly new clothes -- unworn in some cases.\n\nI pondered. Why the hell not? So I texted her.\n\nThanks for the offer of assistance with the clothes. Most appreciated. Most evenings convenient after 6. Let me know. Best, Simon G.\n\nA few seconds later my phone buzzed and there was a simple smiley emoji from her.\n\n**\n\nA few evenings later I opened the door and Tara was standing there with two other girls. It took me a while to recognise her as when she'd been Wonder Woman her hair had been jet black. Now she was a brunette. And this time, rather than a costume, she was dressed in a simple brown skirt and a dark green sweater over a white blouse.\n\nShe laughed at my confusion. \"It was a wig! Didn't you realise?\"\n\nI shook my head and she laughed again. \"I'm kind of pleased it worked so well. This is Alice, and this is Claire. And Jess was going to come but can't tonight but might come another night if we need to.\"\n\nWe said our hellos. Safety in numbers, I thought. Very wise. After all, I could well be an axe murderer. Or a rapper.\n\nI led them upstairs to the bedroom. I'd carefully removed my own clothes to the spare room, so everything there was Terri's. I opened the three large closets, all tightly packed, then pointed to the four suitcases on the bed that I'd taken out of the other room.\n\n\"And there's even more I need to bring down from the loft. I'm afraid it's quite a lot to go through. It might be easier if you just take it all away and sort through it in your own time.\"\n\nTara looked doubtful. \"But... there's so much! I mean... this will take ages. And I think it will be much easier if we can do it here, where everything's together. If we take it to our houses... my dad will have a fit if I turned up with even a quarter of all this.\"\n\n\"Mine too,\" said Alice. \"We could take it away if you really want, but I think if we could work on it here for the next few evenings that would be better.\"\n\n\"Well,\" I said, a little feebly. \"You decide what's best. I'm going to be sleeping in the other room, so you can take as long as you want, I guess.\"\n\nClaire had gone to examine some of the clothes in the first closet. \"Some of this stuff is really beautiful... most of it, actually.\" She looked at me shyly. \"Would you mind if we bought some of these things from you? I'd love this top... but you could probably make more money on Ebay than I could give you for it.\"\n\nI shook my head. \"I really don't want anything for it, thank you -- please take what you'd like.\"\n\nThe girls looked at each other. I could see they were tempted, but they weren't greedy.\n\nTara said: \"How about if we choose... say, four things each? And you can check what they are, just in case there's anything... really special that you'd rather we didn't take.\"\n\nI shook my head again. \"Take six things each. Eight if you want. Ten. And there's nothing I want to keep, I promise. Nothing.\"\n\nMy words must have sounded a little bitter, as the girls suddenly looked very subdued. But I didn't know what else to say, so I decided to just leave them to it. I turned and left the room.\n\nHalf-way down the stairs I realised I was being rather graceless and rude. So I turned and went back. Claire was sitting on the bed staring at the suitcases while Tara and Alice were rather listlessly poking through the closets.\n\nThey all looked up at me as I came back in. I forced a smile.\n\n\"Listen,\" I said. \"I want you to enjoy doing this. And you are really helping me. You didn't know Terri, but she... she would have really liked you all, I'm sure. She loved hanging out with her girlfriends, all of them trying on clothes and suggesting things for each other to wear. So... please, have fun doing it. Help yourself to whatever you want and help me get rid of all the stuff you don't need or like or... whatever. OK?\"\n\nThe girls looked at each other. Then Tara looked at me. \"OK,\" she said. \"Thank you.\"\n\n\"No need for that,\" I said. \"You're the ones helping me, like I said. Just one condition.\"\n\n\"What's that?\" The girls looked serious again.\n\n\"If two, or three, or four of you all want to take the same thing... I'm not going to adjudicate -- you sort it out between yourselves. Rock, paper, scissors, or whatever, OK?\"\n\nTara smiled. \"No problem. We'll have a fight to the death if we have to.\" Then she realised what she'd said and her hands flew up to her face. \"Oh god -- sorry! What an awful thing to say!\"\n\nShe looked mortified but I just laughed. \"Well, I'd rather you didn't do that, but as long as I don't have to get rid of the body.... Whatever works for you.\"\n\nThen, with a final reassuring wave, I closed the door and left them to it.\n\n**\n\nFor the first hour or so it was fairly quiet. Then, presumably as they got more relaxed, there was a more general hum of chatter and the occasional giggle coming from the upstairs bedroom. I turned up the television slightly to drown out their intermittent noise. I didn't mind it, exactly, but it felt wrong to be listening to it.\n\nI found myself staring at the TV rather than watching it. But I was used to that. I'd sat through multiple seasons of various drama series over the previous months, and for the majority of them I'd struggle to name the major characters. Grief has its own agenda, its own timetable. I was better than I was. But it was still raw.\n\nI jumped when Tara gently tapped me on the shoulder. It must have been an hour or so later.\n\n\"I'm sorry,\" she said. \"I didn't mean to startle you.\"\n\n\"It's fine... I'd forgotten you were there, that's all. Found anything you like?\"\n\nShe looked at me, slightly amused and incredulous.\n\n\"Oh... there's so much lovely stuff! You have no idea.\"\n\nI shrugged. \"No... I'm sure I don't. Terri -- my wife -- always used to say that she shouldn't have bothered wearing anything except jeans and old t-shirts... I always liked her in those most of all... I couldn't tell a... Versace from a... well, anything else, really.\"\n\nShe looked at me. Her expression was sympathetic and friendly. She really was very beautiful. A similar slender build to Terri, similar height. I noticed now that facially there was a resemblance too. The same slightly upturned nose. Large brown eyes that should have been a little too big for her face but somehow weren't. And, without the black wig, her long brown hair was the same shade and thickness, though Terri had worn hers shorter.\n\nShe coloured slightly under my scrutiny. I realised I'd been staring and dropped my eyes.\n\n\"So... you girls need anything?\"\n\n\"Well... actually I just wondered if you'd mind if I made some coffee or something? We're really thirsty and we'd like to keep going if we can.\"\n\n\"Sure... I can make you some coffee.\"\n\n\"No -- really, I'll do it. Just show me where everything is and I'll make you some. Just tell me how you like it.\" She coloured a little more. \"Like milk, and sugar, and... whatever.\"\n\nShe followed me into the kitchen and I showed here where the things were. Luckily I'd bought some milk earlier that day. Other than that the fridge was mostly empty. I caught her stealing a glance at the bare shelves but she didn't say anything.\n\n\"Splash of milk, one sugar for me,\" I said.\n\n\"Got it. Thank you.\" I think she was a little relieved when I left her to it. I went back to the living room and sat down again, feeling about a hundred years old. I turned down the television slightly. I liked hearing the sound of her moving around in the kitchen. The slight clink of cups and the hissing of the kettle. It was almost as if I could pretend everything was fine and it was Terri back there, sorting out one of her undrinkable herbal teas and a coffee or hot chocolate for me.\n\nShe brought me my drink and I thanked her, and she said they'd be about another hour before they had to go, and I said that was fine, and she said it might take them every evening for the next week or so to go through everything properly, and I said that was fine too. Then she went back upstairs and I went back to staring at the television.\n\nA few hours later I woke up and the house was dark. Somebody had put a blanket over me and switched off the lights. I went upstairs and peered into the main bedroom. The clothes were all out of the closets and there were various piles arranged neatly if a little randomly around the room. If there was an underlying system it wasn't immediately obvious to me. I closed the door, carried on down the corridor to the other bedroom, and crawled under the duvet still fully dressed. I slept badly, but that was normal for me.\n\n**\n\nThe following evening there were three of them again. No Claire this time, but Tara introduced me to Jess, a redhead in a very tight t-shirt which made it quite clear she wasn't wearing a bra. I thought there was a slight coolness in Tara's tone when she introduced us, but I could have been wrong.\n\nI told them to make their way upstairs and let them get on with it. This time there was more giggling right from the start. Jess had a distinctive laugh which was infectious and sometimes I caught myself smiling at it. God knows what they were talking about. Probably better I didn't know. But this time I didn't turn the television up so loud. I just sat in my chair and enjoyed the noises of people -- younger people, attractive people -- having fun. If Terri had been here she'd have loved to join them, I thought.\n\nBut they're here because you're not, Terri, I thought. Damn you. Sorry.\n\nTara came down after about an hour and, unprompted, made us all coffee. She also produced a packet of biscuits and put some on a plate for me.\n\n\"Also,\" she said. \"I spoke to my mother and... well, we're having a casserole tomorrow night and there's always loads and so she said I should bring you some.\"\n\n\"Oh... that's very kind but really there's no need.\"\n\nShe looked at me solemnly. \"I think you'd like it. My mum's a pain in the ass sometimes -- most of the time really - but she's a good cook.\"\n\nI laughed a little at that, and she looked pleased. \"Fine. Thank you. And thank her, very much.\"\n\nShe went back upstairs and the giggling and chat continued. I felt suddenly very lonely, and wished I could just go and sit with them for a while, to bathe in their company, not speaking, just listening and soaking up their youth and good humour and warmth. But they were trying on clothes and I was at least a dozen years older than them and it was much better for everybody that I stayed where I was. But already I knew I would be very sorry when the clothes were sorted and they would have no further reason to visit.",
        "\"So get out there, you stupid sod,\" said Terri angrily. \"Get out there into the world and meet people again.\"\n\n\"What?\" I looked up, startled.\n\n\"Did you say something?\"\n\nTara was standing at the doorway, looking concerned. I got to my feet, glancing around, a little shaken.\n\n\"Sorry... I must have been dozing again... I thought I heard something, that's all.\"\n\n\"Oh.\" She was uncomfortable. Not about what had just happened, I realised. There was something else.\n\n\"Um... I hope you don't mind. This is a bit embarrassing. There were... well, some letters in one of her drawers.\"\n\n\"Letters?\"\n\n\"Yes... in her... underwear drawer. I think... probably from you. And... well, I just wanted to give them to you, so you can... put them somewhere safe. Or I can... get rid of them for you.\"\n\nShe was scarlet, but she was also determined. Yes, it was an awkward situation, but she was going to do the right thing. I think that's when I first fell in love with her, just a little.\n\n\"Oh... those letters.\"\n\n\"Yes.\" She held them out to me. Perhaps a dozen or so letters that I'd written to Terri. Some were early on, but it was a habit I'd kept up. Sometimes when I'd been away from her for a few weeks, alone in a hotel room, I'd written to her. Very old-fashioned, but also very intimate. And I'd held nothing back. Everything I thought about her, everything we'd done together, everything I wanted to do to her or that I wanted her to do to me.\n\n\"Did you... read any of them?\"\n\n\"No!\" Then she paused. \"Well... actually I read... a couple of pages. I'm sorry. I didn't really realise what they were until... well... I stopped as soon as they... I'm so sorry, I know I shouldn't have. I'm really sorry. I can -- we can all go, if you want.\"\n\nI shook my head. I stared down at the letters. \"They were from a different lifetime,\" I said. \"Thank you, Tara.\"\n\nShe stared at me for reassurance. I think she found it, because then she nodded, and turned away. Then she turned back.\n\n\"You really, really loved her,\" she said quietly. \"I hope... somebody writes me some letters like that one day.\"\n\n\"I'm sure they will,\" I said. \"You're very special, Tara, and I'm sure one day you'll get... a whole flood of letters. Much better than mine.\"\n\n\"Maybe,\" she said. But she looked doubtful. Then she gave me one last shy, sweet smile and went back upstairs to join her friends.\n\n**\n\nThey weren't able to come over the weekend and the house felt strangely in the evenings without them. But on the Monday they were there again and the process was much the same. It was all four of them this time. I showed them how to get into the loft and where the bags of clothes were and left them to it. They were from when Terri was younger, and if anything these clothes excited the girls even more than the ones they'd gone through from our bedroom. They were more casual, cheaper and more daring, things she'd found in various charity shops or in some cases had made herself.\n\n\"Are you really sure you don't want to keep any of these?\" Tara was looking concerned. \"I really feel... you should keep a few things. For the memories.\"\n\n\"I won't forget her,\" I said. I tapped my head. \"She's up here. Not in any of those clothes. And... I should think about moving on with my life. It's been... a few months now. It's hard to move on with all these things of hers all around me.\"\n\nShe looked desperately sad for me. \"No - it's been nearly a year, Simon.\"\n\nI was startled. Then I stopped and thought about it. A year? Yes -- it had been the previous December, a few weeks before Christmas. How had time moved so fast? How had I... what had I been doing all that time? I honestly couldn't remember.\n\n**\n\nThe following evening I opened the door and it was just Tara standing there alone, holding a large dish with mitten style gloves to protect her hands.\n\n\"It's still really hot,\" she said. \"You should put it in the oven if you're going to eat it later though.\"\n\nShe hurried past me into the kitchen and I closed the door then followed her. She set the casserole dish on the side and then bent down in front of the oven, looking for the right dial. I had the distinct impression she wanted to look busy.\n\n\"Where's everybody else this evening? Are they on their way?\"\n\n\"Oh....um, Alice is busy. And so's Claire... and Jess has... music practice.\"\n\n\"Oh. That's a shame. Well, perhaps I'll see you all tomorrow evening. Or perhaps you've all got a bit bored? It can't be that much fun, really.\"\n\nShe was immediately indignant. \"It's SO much fun! You have no idea. We're not bored at all, honestly!\"\n\n\"Well... I'm glad to hear that. So... tomorrow evening? Or perhaps some nights next week?\"\n\n\"Yes. Either of those would be fine.\"\n\n\"Great.\" I looked at her expectantly. She was squirming a little, like a toddler needing the bathroom. I don't think she even knew she was doing it.\n\n\"Unless... well, maybe I could go through a few things this evening?\"\n\n\"On your own?\"\n\n\"Sure! Why not?\" She looked at me defiantly.\n\n\"Well... would your parents be OK about that?\"\n\n\"I'm nineteen!\" she said, suddenly looking rather fierce. \"I can do whatever I like.\"\n\n\"Of course you can,\" I said soothingly. \"But... if I was your parents... I'd still want to know where you were and who you were with. That's all.\"\n\n\"Well, they know I'm here. And they know you're here. And Alice was going to come. And she still could, if I text her.\"\n\n\"I thought she was busy?\"\n\n\"She is.\" This didn't sound entirely convincing. \"But... if I really asked her, she could come over. But she doesn't NEED to, does she?\"\n\nAt some point in the last ten seconds a subtle shift had occurred. Shy, slightly embarrassed young girl had become slightly teasing, slightly more assertive young woman.\n\n\"I guess she doesn't,\" I said. \"Though -- it may not be as much fun on your own?\"\n\nHer eyes sparkled. \"I think it will be. I'll get first choice on everything! Honestly, the others are so pushy about choosing their things. And I'm always so meek and easy going and don't want to cause any trouble so I always let them have their way. Well -- not tonight!\"\n\nThis was the longest speech I'd heard her give, and she suddenly looked rather self-conscious. Shy embarrassed girl was temporarily back, it seemed. But I just nodded gravely.\n\n\"OK then,\" I said. \"Go forth and... take your spoils!\"\n\nShe gave me a mock salute and turned and headed towards the stairs. I watched her go. She'd taken off her jacket and left it on a chair in the kitchen, and I realised now she was wearing jeans and a faded grey t-shirt. The sort of thing Terri knew I would always compliment her on. In fact, watching her go up the stairs, she could almost have been a brunette version of Terri.\n\nI walked thoughtfully into the living room. My refuge.\n\nBe careful, I thought. Be very, very careful.\n\n**\n\nI admit, I was counting the minutes until an hour was up. That was when she usually came and made coffee. Well, \"usually\" based on all of a few nights. Hardly a trend. She probably wouldn't. She'd want to stay a safe distance away. Or make the most of having first pick of everything. Perhaps I should make the coffee, and take it upstairs to her? Or would that be intrusive? It was my house. Can you be intrusive in your own house? Surely not. But... she might be trying some clothes on. She might be standing there in just her underwear, appalled at my crass interruption. Well, I could knock. I could leave it outside the door, on a tray, and knock, and tell her it was there, and then I could go back downstairs and that would all be fine. Wouldn't it?\n\nJesus. This was pathetic.\n\nThen I heard the bedroom door open and the sounds of her coming down the stairs.\n\n\"Splash of milk, one sugar, coming right up,\" she called cheerfully.\n\n\"Thank you,\" I said. \"That's very kind.\"\n\nI sat back in my chair and listened to the sounds of her in the kitchen. I realised every time she'd been there I'd just been sitting in front of the television. I picked up a news magazine and opened it. There. Now she wouldn't think I was a total slob.\n\nShe brought me my coffee and put it down on the table beside me.\n\n\"Mind if I join you?\" she asked. \"Oh, you're reading... I won't disturb you. Sorry.\"\n\n\"No, it's fine,\" I said hastily, pushing the magazine to one side. \"Please... take a seat.\"\n\nShe settled herself down onto the couch and placed her coffee carefully on the table in front of her. She looked around the room. There was a photo of Terri and I on the mantelpiece, and she got up again to go and look at it closely.\n\n\"She was really beautiful,\" she said. \"Just... god.\"\n\n\"Yes,\" I said. \"She really was.\"\n\nShe looked at me. \"Do you like talking about her, or not? I was reading about... people who've been bereaved, and of course it says everybody handles it differently, and some people find it really helps to talk about the person... who's gone... and some don't want to at all, and it can be hard to tell, and often the best thing is just to ask the person. If they want to talk about it -- them -- I mean.\"\n\nShe trailed off, and looked at the floor. I was very touched by her doing that research.\n\n\"Thank you, Tara,\" I said. \"That's very thoughtful of you. More thoughtful than a lot of people would be.\" I paused, and thought. \"I don't know if I really feel very strongly one way or another, if I'm honest. It doesn't upset me to talk about her. But... I don't feel like there's lots of things I'd like to say, either. I'm just sort of... indifferent, I guess.\"\n\n\"You're still numb,\" she said. \"That's understandable. She was so young... and you must have loved her so much.\"\n\nI nodded. She took a sip of her coffee.\n\n\"I'd like to hear about her,\" she said. \"It's funny, going through her clothes... it's a very intimate thing. I can tell a lot about her, at least I think I can, just from the clothes she liked. I think I know what she liked to wear when she wanted to cheer herself up, or when she was feeling a bit down in the dumps, or when she really wanted to make an impression, or be sexy, or... whatever.\"\n\n\"She was always sexy,\" I said. \"I never met a woman who was so... well, perhaps it's not appropriate to talk about that with you. But... she could wear anything and I think every man in the room would turn and look at her when she came in.\"\n\n\"I don't mind... I'd be really interested...\" She looked a little exasperated. \"This idea of... what's appropriate. I think sometimes people worry too much about that. We should just be honest. I mean... I've had boyfriends!\"\n\nI thought about it. She was right. What did it really matter?\n\n\"She was... the most sexual person I've ever met,\" I said quietly. \"Until I met her, I.... guess I was rather na\u00efve about women. I knew men were very focussed on... well, sex. God knows I used to think about it a lot. I never realised just how important it is to women too. Sometimes... god...\"\n\nI paused, not sure if I should continue.\n\n\"Sometimes... what?\" Her voice was gentle but insistent.\n\n\"Sometimes... she would almost rape me when I got home. I mean... not in an aggressive way, but she would be so... horny. So eager to get me into bed. She used to say... she used to say that it was... certain days of her cycle. And ... that would be amazing. She wasn't big, not particularly strong, to look at her you'd never guess... but sometimes when I was with her I was amazed by her passion, almost like a frenzy... it was all I could do to hold on and just... weather the storm.\"\n\nTara picked up her coffee and sipped it. She didn't take her eyes from me.\n\n\"And... other times she was so gentle and loving and yet so... open. I don't think it was possible to shock her, not really, not when it came to sex. She would whisper things to me, even though it was just us there, she'd whisper them so quietly I could barely hear her... and they'd be so... wonderfully filthy... she knew... she just knew how to... excite me.\"\n\nThere was a long silence. I looked over to see if I'd embarrassed Tara. But she didn't seem to be. The expression on her face was something else. Wistful? Envious? Thoughtful?\n\n\"God,\" said Tara, eventually breaking the silence. \"You... I'm so sorry... to have somebody like that, such a perfect partner in every sense... and then to lose them.\"\n\n\"Oh... she was a long way from perfect,\" I said. \"If she was here now she'd be howling with laughter at that idea. Yes, she was sweet and sexy and kind and loving and naughty and beautiful... but she had the most vicious temper too. Sometimes she and I would argue and she was just... she would get so furious with me. She was like... a storm. Scary and awe-inspiring at the same time.\"\n\nI looked at Tara. \"And when she was like that... you just couldn't reason with her. She was just... like a wild thing. And that's... that's...\"\n\nI stopped.\n\n\"That's what?\"\n\nI got up from my chair and went to look at the picture on the mantelpiece. I had my arm around her waist in the picture. I could still feel the touch of her hip on my fingers. The slight swell of her breast resting on my arm. After the photo had been taken I had lifted my hand and stroked her nipple through her blouse and she'd swatted it away, laughing, telling me not to be such a greedy schoolboy.\n\n\"That's what, Simon?\"\n\nI turned and looked at Tara. Her face was concerned and sympathetic. She was very lovely.\n\nI went and sat back down. I stared at my hands. At the floor. At the picture. Then, finally, back to Tara.\n\n\"That's how I killed her,\" I said.\n\n**\n\nShe stiffened slightly. I'm sure for a second that joke about me being an axe murderer must have flashed across her mind. But then her body relaxed, and instead she did a wonderful, simple thing. She knelt in front of me, and took her hand in mine.\n\n\"You didn't kill her,\" she said. \"It was a car accident. A terrible, sad, unlucky accident. That's all. I read about it, Simon. I read all about it and I'm so sorry, you have no idea how sorry I am... it wasn't your fault.\"\n\nI squeezed her hand.\n\n\"I made her so mad,\" I said. \"I said she had a terrible temper but sometimes I could be so mean, too, I knew how to push her buttons, I knew just how to make her so angry, and we'd been having one of our rows... we didn't have many, maybe once or twice a year... and I made her so mad. I wanted to do it, I knew exactly how to do it, and it was selfish of me because of what I knew what would happen later... and she was so mad when she got in the car and she was driving too fast and she was thinking about me and how mad she was and she wasn't paying attention and she didn't see the other car and thank Jesus the other person was OK otherwise... otherwise it would be even worse. But I killed her, Tara. I really did.\"\n\n\"No!\" Her voice was vehement. \"No, you didn't. That's... awful that you had a fight just before, but it was still just bad luck. Nine times out of ten, ninety-nine times out of a hundred - she'd have gone out and been fine and then she'd have cooled down and she'd have come home and it would all have been fine. Sad for me but good for you. It wasn't your fault, Simon.\"\n\n\"Maybe,\" I said. But I knew she was wrong. If I'd just been a little less mean, a little less selfish... Terri would still be there.\n\n\"Didn't you hear what she just said?\" Terri's voice was behind me. Amused but cross. \"For god's sake, listen to this girl PROPERLY! And tell her the rest of it!\"\n\nI turned and looked at the kitchen doorway, where the voice seemed to have come from. But there was nobody there.\n\nTara followed my eyes, then looked back at me. \"What is it?\"\n\n\"Nothing... I thought I heard a noise... it's nothing.\"\n\nI let go of her hand, and smiled at her. Probably not one of my best smiles but I thought quite a good effort in the circumstances.\n\n\"You should maybe call it a night,\" I said. \"Come back with the others tomorrow.\"\n\n\"I don't want to leave you alone. Not like this.\"\n\n\"I'll be fine. I'm a big boy, Tara. Really.\"\n\n\"I'm going to make us some more coffee.\" She got up and looked down at me. \"Though - I saw there were some herbal teas in the cupboard... can I have one of them? Otherwise I won't sleep.\"\n\nI nodded. \"Of course.\"\n\nShe went through into the kitchen and I trailed after her. I watched her move around the kitchen. God, she was so like Terri to look at.\n\n\"What would have happened later?\"\n\n\"Sorry... what?\"\n\nTara was squeezing her tea bag in her mug of hot water. She wasn't looking at me. I thought it was deliberate. Perhaps she guessed what it was. Terri had told me to tell her. Tell her the rest of it, she'd said.\n\n\"Well... after we'd had a row. We always made up. Big time. The bigger the row... the more... the better it was after. Probably... people wouldn't say that wasn't healthy. But it was how she was. How we were.\"\n\nTara prodded her tea bag a few more times. \"So you think you were... extra mean... just so you could have... amazing sex later?\"\n\n\"Jesus... that sounds so shallow when you say it like that. But... yes... I think that was part of it. Maybe not even consciously.\"\n\nI thought for a moment. \"I remember... waiting for her to come back... I was... aroused. Waiting for her. It usually took her an hour or two to calm down. It didn't take long. That was another good thing about her... she didn't hold a grudge, never stayed angry for long.\"\n\nTara smiled a little. \"That is... was... nice. I think my Mum's been holding grudges against my dad for about twenty years.\"\n\nI said, \"Well, perhaps the rampant make-up sex for them will be worth it. Any day now.\"\n\nTara had been sipping her tea when I said that and now she spat some out, shaking with laughter, spilling hot scented liquid all over my floor.\n\n\"Please... please don't put that picture in my head\" She was spluttering. \"God, I'm going to charge you for the therapy!\"\n\nI laughed with her, pleased that the mood had lightened.\n\n\"I've spilt tea everywhere!\"\n\nI got some paper towels -- the same ones that only a few days previously had been pressed into service to tend to a wounded witch's knee -- and we knelt together on the floor, mopping up the spillage. Suddenly I was very physically aware of her. I'd seen she was beautiful, but my sexuality had been switched off for a long time. Suddenly it was back with a vengeance.\n\nSomehow she must have become aware of the change in me. Or perhaps she felt the same. With a sudden movement she got to her feet and moved away from me.\n\nYes, I thought sadly. She should go. That would be best.\n\nBut she didn't. Instead she just looked at me, her eyes on mine.\n\n\"She never came home to you,\" she said quietly.\n\nI shook my head.\n\n\"You were waiting and waiting and you wanted her so badly... and she never came home to you.\"\n\n\"There was a knock on the door... and I saw the police lights on the car outside... and I knew. I knew she was never coming home again.\"\n\nAnother long moment. Then she seemed to decide something.\n\n\"I look a little like her,\" she whispered quietly.\n\n\"You do... you're beautiful... you could almost be her sister, Tara.\"\n\nShe looked at me for a while. Perhaps it was just a few seconds. Perhaps a whole minute. I know time seemed to change, to freeze, just for a while. Then she walked over to face me, our bodies only a few inches apart. She reached up and touched my face, a gentle intimate stroke. Then she reached over and switched off the light.\n\n\"Go and sit back down,\" she said. \"Switch off the lights in there too.\"\n\nNot understanding, I watched dumbly as she turned and walked away, opening the front door and going through it and closing it behind her. But I did as she said. I went back into the living room and killed the lights and sat in my chair, with just the pale moonlight coming in through the window faintly illuminating the room.\n\nThen I heard the door open, and I heard Terri come back into the house one final time.",
        "**\n\nShe came into the room and stood facing me. I could make out the silhouette of her but not her face which was lost in shadow. She pulled her t-shirt up over her head and I could just make out the white material of her bra. Then that was gone too, unclipped and discarded onto the couch beside her. I could see the darkness of her areola.\n\nShe kneeled in front of me and undid my belt. Then, as I lifted myself up, she tugged down my trousers and underwear in one easy movement, pulling them over my ankles and then pushing them aside.\n\nMy cock was so hard. I hadn't believed I would ever feel anything again, but at that moment I felt intensely alive again, alive and passionate and alert. Terri would nearly always start by sucking me. And she knew I loved it when she sucked me topless, her own trousers or skirt still on. I don't know why I found that half-nakedness arousing, but I did. There was no way Tara could have known that.\n\nUnless it wasn't Tara in the room with me. Perhaps Terri had really come back, one last time to say goodbye.\n\nThat was ridiculous. Of course it was. But try as I might, I couldn't make out the face of the woman knelt in front of me. The woman bending down to take me in her mouth. The woman whose lovely firm breasts I could now feel pressed against my legs.\n\nI groaned as I felt first her breath and then the graze of a tongue on the tip of my cock. Just the faintest of touches. A tease, delivered by a woman who knew exactly how to lovingly torment her man. Not the act of a young girl with a new lover for the first time.\n\n\"Suck me,\" I gasped. \"Please, fuck, put me in your mouth.\"\n\nInstead, the tongue retreated, then was applied instead to my balls, swirling softly around them before advancing up my shaft. Agonisingly slowly. Exquisitely slowly.\n\nFinally the tongue reached the top and paused. I waited. My whole body was tense with expectation. I found myself whimpering under my breath. Please, please... PLEASE.\n\nHer mouth took me and I almost came. I don't know how I didn't. The sensation was so wonderful that it was almost like an orgasm, waves of pleasure going through with such intensity that I was sure I must have climaxed and filled her mouth with my milky seed. But, as those waves subsided, I realised I was still hard, still ready, still eager for more.\n\nI reached down and held her head, gently but firmly. I began to fuck her mouth, thrusting back and forth into that delicious wet heat. Now I heard her whimpering, and I sensed, rather than saw, one of her hands sinking down to frantically loosen her jeans and reach in to touch herself.\n\nMy thrusts increased in tempo. Back and forth, in and out, scarcely able to believe just how good and magical it felt. Did we do that for two minutes? Ten? Twenty? I don't know. But at some point the pleasure became almost too much, and my hunger took a new form. I needed to be inside her, I needed to feel her body closer to mine, to possess her, to lose myself in her.\n\nI changed my grip on her head, taking a firm handful of her hair in my hand and gently raising her face up to me. It was still bathed in shadow. I lowered my lips onto hers, greedily tasting her mouth and the traces of me that lingered on her lips. She put her arm around me and pulled me closer, pulled me out of the chair and down on top of her, lying on her body on the living floor. I felt her hips pushing against mine, impatient for our bodies to be merged.\n\nI lifted myself up from her for a few brief moments, enough for her to reach down and push her jeans down and off. Then my own shirt was gone too, and our two naked bodies strained against each other in that kind, sheltering darkness.\n\nMy cock pushed against her stomach. I was too high up her body and I slid down slightly, exulting in the feel of her nipples against my chest. She spread her legs even wider for me and now I was poised, ready to plunge into her. I could feel her wetness coating the tip of me. I just had to push forward and I would be there. The instinct to do that was almost overpowering.\n\nBut... Terri and I had our games, and this was one of mine. Often -- too often, probably -- I would tease her when we reached this point. I would stay just outside her, or perhaps with just the first few millimetres inside her, and I would ask her if she should carry on. Sometimes -- and this was naughty -- I would solemnly ask her for her consent to penetrate her. And she would scratch at my back and howl and buck her hips and try and force me into her, and I would try and stop her for as long as I could before gratefully relenting.\n\nSo I stopped, and waited. And whether it was Terri or Tara beneath me I don't know but the sound of exasperation and desperation and need that came from her could have come from either of them, and strong arms went around me, surprisingly strong arms, and her legs wrapped around mine and pulled me down and with that my game was effortlessly swotted aside. She wanted to be fucked, and nothing was going to stop her getting what she wanted.\n\nI had forgotten just how intoxicating it was to be inside a woman. To have your animal needs met and matched. To know that her body and mind were as lost in this moment as yours were.\n\nI'm not ashamed to say I used her that night. That wonderous body beneath me seemed to anticipate my every move, taking me to the edge of orgasm more than once and then somehow leading me back from the edge with subtle changes of position and rhythm. I was soaked in sweat as I pounded her silky, responsive, perfect flesh.\n\nShe rolled me onto my back and straddled me. I was close now, very close, almost desperate to erupt inside her. I could feel her muscles squeezing my cock, somehow both encouraging my climax and preventing it in the same movement. I reached up and cupped her breasts. Her nipples were hard beneath my palms.\n\nThe room had been dark, almost pitch black, but now a car must have passed by as for a brief moment a beam of light from the window illuminated her face, just for a split second. I gasped, because it was Terri. Then the light washed over her again, and it was Tara. And then we were back into the comforting blackness, and she was bent over my chest, whispering softly in my ear. A voice that could have been either of theirs, or perhaps neither, or perhaps -- as I like to think -- some strange, wonderful hybrid of the two.\n\n\"Come in me. Please my sweet man... come in me.\"\n\nI groaned and surrendered. My body jolted as I unleashed my load inside her. As I came I felt her own body responding, her own orgasm washing through her, and I put my arms around her and held her close, never wanting to let her go.\n\n**\n\nWe lay like that for a long while, my cock still encased deep inside her. Probably at least half an hour. Then, as I stroked her back, I realised there were goose bumps along her back. The room had grown cool.\n\n\"Hey,\" I whispered. \"We need to get you warm.\"\n\nThere were soft murmurings. Her face was buried in my chest. Then she stirred, and looked up at me, and now I could clearly see it was Tara, of course, as it must have been all along. She looked at me a little shyly, but also, I thought, with a touch of pride.\n\n\"I hope that was OK for you,\" she said softly.\n\n\"Oh Tara,\" I said, and reached down and kissed her. She murmured again with pleasure at my kiss, returning it deeply.\n\nReluctantly I broke the kiss. With a slight grunt of protest she slid off me and we got to our feet.\n\nI led her upstairs to the shower and ran the water as hot as I dared. Then we both squeezed into the stall together, taking turns to rub soap into each other and then wash it off. It was a lovely, intimate finish to a very special evening.\n\nAs we dried each other off Tara looked at me. She looked rather timid and abashed, which made my heart ache.\n\n\"I don't normally... I've never done anything quite like that before. I mean, I've had some boyfriends, but I only slept with one of them... so you're only my second, really. I must have seemed... really slutty.\"\n\n\"You were wonderful,\" I said. \"You could never be slutty, Tara... you were just perfect and lovely and you have no idea how much... how much I needed you. I didn't know it either... but I do now. It's like... a whole load of shadows have just been taken away.\"\n\nShe looked reassured, though still slightly anxious. \"And I know a lot of it was about Terri... but some of it... some of it was about me too, wasn't it?\"\n\n\"Yes. It was.\"\n\nI held her face in my hands and kissed her. \"You're right... some of it was about Terri. About saying goodbye to her. But... I wanted you Tara, I think I wanted you since I saw you on that first night, on Halloween... I just needed a bit of a push, that's all.\"\n\n\"Do you think she'd mind?\"\n\n\"No,\" I said. \"I think Terri would have been delighted. She may even have sent you here, for all I know. That's probably nonsense... but I'd like to think so.\"\n\n\"Yes. I'd like to think so too.\"\n\nThen she kissed me again. \"I really had better get back.\"\n\nShe got dressed. I just put on a dressing gown. When she left I was just going to go to bed, and I thought I would probably sleep better than I had done since Terri died. But there was a new ache inside me as I watched her get ready to go.\n\n\"Do you think, um, you and the girls will still want to go through the clothes?\"\n\nShe considered. \"You mean, should I tell the girls that because you and I have... been to bed, they can't get any more free clothes?\"\n\n\"I was wondering something like that, yes.\"\n\nShe pondered. Then her face broke into a mischievous smile. \"I think... I think if that was to happen they would scratch my eyes out.\"\n\nI felt a huge sense of relief.\n\n\"So... you might be back tomorrow?\"\n\n\"Yes,\" she said. \"I'd say that's a definite possibility. And I'll have to bring Claire and Alice. I think another couple of evenings and we'll have it all done for you.\"\n\n\"I see. That'll be... great. To have it all done. And... after that?\"\n\nShe looked puzzled. \"After that?\"\n\n\"I just wondered if... if I was going to see you again... just you, I mean.\"\n\n\"Just me?\"\n\n\"Yes,\" I said patiently. \"Just you. Me and you. You know... like this.\"\n\n\"Ohhhh.\" She gave a noise of understanding. Then she shook her head.\n\n\"I don't think that would be appropriate, do you? Not really.\"\n\n\"No... I suppose it wouldn't.\"\n\n\"I mean... you are a lot older than me.\"\n\n\"Yes. I am.\"\n\nShe puffed out her cheeks, as if deep thought. Then, just as the shadows seemed to be rolling back over me, she walked over and put her arms around my shoulders. There was a spark of mischief in her eyes. A very Terri-like expression.\n\n\"It's very, very sweet,\" she said, \"that you think you have a choice.\"\n\nThen she kissed me, a long, firm, passionate kiss that made my head swim.\n\n\"I'll see you tomorrow,\" she said. \"And the day after that and the day after that and the day after that until you can't stand the sight of me.\"\n\n\"I don't think that'll ever happen,\" I said.\n\n\"We'll see. I hope not. But we'll see. Now I really have to go.\"\n\nAt the top of the stairs she turned and looked at me one final time.\n\n\"Simon?\"\n\n\"Yes.\"\n\n\"I would like one thing. One day. Not yet -- when you're ready.\"\n\n\"Anything,\" I said. \"Anything at all.\"\n\n\"Write me a letter,\" she said. \"Or write me something, something just for me. That I can keep in a box when I'm old and look at it and remember everything about me and you. Please?\"\n\nI nodded. \"Sure,\" I said. \"I could do that.\"\n\nAnd then she was gone, and I heard the door shut behind her, and I was alone again in the house. Properly alone there for the first time, and that was how it should be.\n\n\"Thank you, Terri,\" I said to the empty house. \"I love you.\"\n\nThen I went to bed. But, despite my prediction, it took me longer to get to sleep than I thought it would. My mind was too busy thinking of all the things I would write for Tara."
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "older man",
        "younger girl",
        "mature",
        "romance",
        "halloween",
        "spooky",
        "gentle",
        "dressing up"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/autumn-light"
}