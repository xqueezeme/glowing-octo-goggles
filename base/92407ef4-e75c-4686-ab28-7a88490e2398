{
    "title": "Geek's Big Break Pt. 09",
    "pages": [
        "This is a work of fiction, written for fantasy purposes. It includes unrealistic sexual practices and fantasy situations. If you like your erotica more reality based, then pass on this series\n\nAll participants involved in sexual scenes are 18 years old or older.\n\nIF you haven't read the first eight parts, I'd do that first. Here's a short overlook of parts 1-8:\n\nChapter 1: Gio McLoed's older sister Fiona sees her brother's big fat cock, measures it and then sucks and fucks it, taking his virginity. Unknown to the two, his mother sees them and videotapes them to blackmail Geo into fucking her.\n\nChapter 2: Gio shows the Anderson Twins his Big Fat Cock and realizes his sister is right. He takes both twins as cum sluts. Tiffany willingly and Tara reluctantly. Then he humiliates them by having them make their Jock boyfriends watch them both fuck and suck him. Fiona gets informed she is also one of his sluts and after a token resistance even agrees to let him breed her. Then Gio gets two surprises, the first when Mister Anderson turns his daughters over to him, the second when his mother wants to know why he isn't fucking her.\n\nChapter 3: In which Gio's mom learns what she has to do to get her son's big fat cock. Then sucks and fucks him in the entranceway to their house. Begs her son to make her pregnant and is carried to bed completely satisfied. The next morning Gio straightens out some issues he caused, decided who to impregnate and who not to and tells his growing harem where they all will reside for the foreseeable future. The Twins and Gio arrive at school to face an angry Brock and Chris.\n\nChapter 4: In which Gio protects Tiffany and Tara from their exes and gets hauled to the office. We find out a secret about Gio and his hobby. He takes control of the Vice Principal and makes her his school time slut and forces her to find him women to relieve his pressure at school. Then he takes his mom in her office at works and they get caught in the act.\n\nChapter 5: In which Gio sends Tara home with Greg for a night of Daddy/Daughter Delight. Realizes he has to 'give' the Anderson Twins to the true love of their lives, their own Father. Then has to convince Fiona she is more to him than a convenient cum dump, but truly one of the loves of his life. All while dealing with school, his rising responsibilities as Master of a harem and figuring out who to sell his social media app too.\n\nChapter 6: Tiffany decides she wants to belong to Gio but he's sent her back to her Dad with Tara who wants to be Daddy's Breeding Princess.\n\nGio continues to try to impregnate his mom. She arranges for Gio to get a Financial Valuation done on his Clicktalk app. Gio meets a new girl, and is given a dressing down by Greg Anderson for the way he handled Tiffany and Tara. He also gets a loaner bike while his is being fixed and meets the Tailor who promises him custom fit clothes befitting a young adult.\n\nChapter 7: Gio meets the owner of a local adult store; Pink Cherry who helps him with outfits and collars for his women. He returns home and makes things right with Tiffany, accepting her as his sex slave and collaring her as such. Mia shows up to tell him how to increase the Value of his company. Becky Long, Abi's mother arrives and learns about Gio's new life. Later she returns with Abi and they ask Gio for help to get away from the Chadwick men.\n\nChapter 8: Gio sets out to make Clicktalk a more productive company. Abi, Gio and the twins withdraw from school. Abi and Gio go to open a business bank account. They buy an engagement ring for Abi, visit with Cherry and give her a ride on Gio's enormous cock. Then head out to buy a new motorcycle.\n\nDon't forget to add to your favorites if you like the story and drop me a comment to let me know what you want to see next.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGio and Abi had gone from Cherry's little love nest to the Harley Dealer where the owner had shown them the new Harley Electric Motorcycle. After a test drive and realizing that with the amount for his old bike the owner gave him in trade, the brand new electric bike was the same price as the used loaner bike, Gio bought it.\n\nHe'd always been a green freak wanting his mom to add solar panels and try to get them off grid as much as possible. The fact that the new bike would run him everywhere he needed in town on a single charge a week was a significant selling point to him. Then he'd taken Abi across the street to the Ford dealer and he'd test drove and signed a contract with a down payment on the new Ford F-150 Laredo hybrid truck. Again, it would stretch the fuel milage because it would mostly use the self-charging electric motor in town seamlessly switching to the gas engine at higher speeds or heavy loads. Being four-wheel drive on command would make it safe for his wintertime uses and the seating for five would give him and the girls a way around when they were all together, even if another girl like Mia or Cheri joined their little family. But he'd decided five girls plus his and Abi's mom was going to be it for their family for now.\n\nIf his mom and sister both got pregnant, that would make nine or ten living in the house that felt crowded with just five in it the other day. He might seriously need to think about having his mom and Becky both sell their places and moving somewhere bigger and better. Somewhere with more rooms for his growing family. Not only that, but with the problems they were bound to have with the Chadwick's eventually and others maybe a more secure place too. He needed to find a place that gave them room to live and work,the sooner the better. But all of that would hinge on if he could continue to make money with his new company.\n\nGio and Abi arrived at home to see a moving company truck in the driveway. Becky Long was standing in the garage directing the movers who were loading the furniture from the basement into the truck. Gio looked at his fiancee's mother and his as yet uncollared family member. \"What's going on here?\"\n\nBecky stepped close \"I hope I haven't upset you, Gio. I made some changes today based on things I saw last night and our conversation this morning.\"\n\n\"What changes?\"\n\nHe could see the worry on Becky's face, and he knew part of it was because she could see the displeasure on his. Not that it upset him she was making changes, but that she had done them without his input. It said little that his newest sex slave was making decisions about their home on her own. He realized that a large part of it was that she wasn't used to conceding control to anyone in her home life. However, she had made it plain that she wanted to be part of his group of women and in that dynamic He was the one in charge. While she may have been used to deciding at home, she needed to realize that those days were over.\n\nGio followed her into the house and down into the basement, where all the furniture had been replaced with all the bedroom furniture from both houses. Along the walls were the dressers and chest of drawers from each bedroom, and what he assumed were the ones from Abi and Becky's rooms in their house as well. There were also six new wardrobe closets lined up along one wall. Six King-size beds had been bolted together, three across and two deep, creating the largest single bed Gio had ever seen. It took off a good amount of the space in the center of the room. At the foot of the bed, mounted to the wall, was the smaller tv that had been in the living room upstairs. Below it on the wall a shelf with a satellite box on it. \"Welcome to our new family sized master bedroom. I figured if last night was any sign all your women will want to continue to sleep with you and this will allow us room to play together and sleep together.\"\n\n\"Where is the furniture that was down here going?\"\n\n\"I'm having it moved next door to the combination living room dining area as the waiting room for our office suites. I've ordered office furniture for the bedroom's next door giving us an office for each of the company officers. I cleared out the office on the main floor in this house and thought you could set it up as either a nursery or a playroom for more intimate encounters where you don't want our entire group involved.\"\n\nGio nodded. \"It's a good temporary solution, but it wasn't your place to make that decision Becky.\"\n\nShe bit her lip. \"I'm sorry. I thought you'd be happy.\"\n\nGio pulled her into his arms and kissed her. \"I'm not saying I'm unhappy I saying that it wasn't your decision to make. You have asked to wear my collar, to be owned by me. That means it is my decision to make. I'm the Master, your daughter is the Mistress of this house it was our decision to make. You should have waited and told us your idea not just decided and made it happy. If it has to do with the legal aspect of the company, then you will give me your recommendation and I'll probably take it, but it's my decision to make. Same at home every one of you women can give your opinion and we will often ask you to tell us what you think. But it will be mine and Abi's decision to make and ultimately mine. Do you understand me?\"\n\nGio could see the tears in Becky's eyes. \"Of course Master. I'm sorry I upset you.\"\n\nGio lifted her head so that she was looking into his eyes. \"You did upset me, Becky. Not because you made a decision, but that you didn't talk to me about that decision. I will let it slide because I can see that it upset you to realize you displeased me. However, next time I will punish you and not in the ways you like.\"\n\nGio thought about how much fun he could have with Becky right now with strangers in the house. He and Abi had talked, and they realized her mom needed not just pain mixed with her pleasure but that she also craved being humiliated. She was a true BDSM slut who needed to be belittled and abused within the constraints of her limits. Today he was going to push her to find her hard limits. \"Before we get into anything else, I need to know what your safe word is, Becky. There will be no warning word in this home, just your absolute stop now word what is it?\"\n\nBecky shivered as she thought about her daughter's childhood friend pushing her to her limits. Would he understand she needed more than just pain? Did he truly understand what she craved. That part of the reason she was so susceptible to Clarence Chadwick's manipulation is that she needed to be humiliated? \"Submarine, Master, my safe word is submarine.\"\n\nGio nodded \"Then unless you say Submarine, I won't stop until I'm ready if you say Submarine, everything will stop for twenty-four hours. Are we in agreement?\"\n\n\"Yes Gio.\"\n\n\"Good girl.\"\n\n\"Be ready to accept your collar tonight. We may or may not have guests when that happens. People not of our family will watch your daughter and her fianc\u00e9e hurting you, collaring you. They will watch us treating you like the worthless sex slave that you really are.\"\n\nShe moaned as he continued to talk. He understood. \"Yes! Oh Yes Master thank you.\"\n\n\"As a matter of fact.\" Gio whispered in her ear. \"Why should I wait? Strip and assume the position right now.\"\n\nBecky's eyes got round with surprise. \"What?\"\n\n\"You heard me slut get undressed and assume the waiting to be collard position right now.\"\n\nBecky didn't hesitate she started removing her clothes. Was he going to collar her now with none of the family here but all the movers upstairs waiting for her?\n\nAs she dropped the last of her clothes and kneeled at his feet, he looked down at her. \"Look at you so eager to be my slut that you would strip knowing there are strangers in the house. Any minute now, one of those movers could come down here looking for you. Wondering where to put that furniture next door. What will he see? Not the powerful career woman who has been telling them what to do all day but a nasty, horny, cougar kneeling before her daughter's fianc\u00e9e bare ass naked. Now beg me, slut, beg me to put my collar on you. I want to hear you begging me to collar you, to spank you, to fuck you and make you mine.\"\n\nBecky felt her pussy flood with her excitement and run down her thighs at the thought that one or more of the men who had been moving the furniture at her direction all day might see and hear her begging to be used as a sex slave. \"Oh, Please Master, please collar me, Spank me! Stick your big cock in me and ruin me for any other man make me yours, Master.\"\n\nGio texted Abi and told her to send Tiffany over to the other house with the movers and that all the furniture was to go in the dining/living room open space in her old house.\n\nOkay. What's going on down there? Came the response from his fianc\u00e9e.\n\nI'm playing with your mom as punishment for her making decisions of her own. I'm going to get her worked up and make her so close to cumming. Then I'm going to deny her any release until after we collar her tonight.\n\nA new text came on the heels of his. I want to play too!\n\nGio laughed and walked around behind Becky. \"I don't think you understand me, slut. I want those men upstairs to hear you begging me really scream and beg me. Make them so curious that they all come down to see what's going on here. Just think, all those strange men seeing you kneeling here begging to be my nasty little pain slut, my dirty little sex toy. Wanting me to spank you, to turn your ass baboon red and then your pussy before I shove my cock in you and fuck you. Will it shock them? Will they laugh at you? Old enough to be my mother yet wanting me to fuck you? Will they think you are a Nasty old cougar with no self-esteem?\n\nI wonder if it will excite them to see you like this? Maybe I'll invite them to jack off all over you? To cover you in their nasty cum while you beg me to use you, to own you.\"\n\nWhile he was talking, he texted back to Abi. Come to the top of the stairs and wait. Bring the bag from Cherry's with you. Don't come down until I text you too. When you do stomp like your one of the movers coming to see what all the noise is about.\n\nThe response came. You are so wickedly good to us.\n\nBecky started screaming at the top of her lungs. \"TAKE ME GIO, FUCK YOUR PAIN SLUT. PUNISH ME, COLLAR ME, USE ME. MAKE ME YOUR NASTY FUCK TOY, HURT ME, OWN ME. PLEASE MASTER, DON'T WAIT, FUCK ME NOW!\"\n\n\"Louder slut, I don't think they heard you. If someone doesn't come down to see what's going on, I won't collar you tonight.\"\n\nBecky looked worried now. Was this part of the game they were playing, or did he mean it? She was so turned on thinking of those men coming down here and covering her in their spunk as her master watched.\n\nYet she was scared Gio really meant it when he said he wouldn't collar her if someone didn't come to see what was going on. She screamed so loud her throat hurt. Just when she thought her voice was going to give out as tears ran down her face, she heard the sounds of heavy footsteps coming down the stairs behind her. But the voice wasn't what she expected.\n\n\"Gio McLoed, what in the world are you doing to my mother?\"\n\nGio smiled. \"Teaching her she isn't in charge anymore. Look at what she did while we were gone.\"\n\nAbi looked around as Gio continued to taunt and cajole. \"Your mother seems to think she is still in charge. She assumed that all of you girls would want to keep sleeping with me so she made our playroom into the new Master Bedroom.\"\n\n\"Well, she was probably right.\"\n\n\"I know she was right and I'm not saying it isn't a good temporary solution, only that she didn't have the right to make that decision. She isn't even part of our family yet. I mean she is you mom, but she doesn't belong to me or to you. She isn't even our lowest slut. She's nothing. Even if she was our lowest fuck toy, she had no right to make this decision. So I thought it was time to remind her of her place. By the way, her safe word is Submarine. I informed her there is no soft limit, just the hard one. If she uses her safe word, we won't play with her for twenty-four hours.\"\n\n\"Yes, but this isn't punishment for her, Gio this is her form of play I mean, look at that puddle of girl goo dripping on the floor.\"\n\n\"I know I'm getting ready to tell her what her punishment was when you came and interrupted my fun. I thought about making her let all those movers cum on her but I think that just excited her more.\"\n\nAbi laughed. \"She's such a nasty slut, isn't she? So what do you think we should do to punish her?\"\n\n\"PLEASE PUNISH ME MASTER, MISTRESS. PLEASE I WAS BAD I NEED TO BE PUNISHED.\"\n\nAbi got down on her knees and looked at her mom in the face. \"Look at you. So eager to be punished. You are such a nasty slut. So, turned on by the thought of us hurting you, humiliating you. You want us to abuse you, don't you? You're all but creaming yourself at the thought.\"\n\nBecky wailed she was so turned on. \"YES MISTRESS, PLEASE PUNISH THIS SLUT! PLEASE I NEED IT SO BAD.\"\n\nTwelve\n\n<p align=\"center\">~~~~~~</p>\n\nJust then, they heard more footsteps coming down into the basement. \"Oh, this is where you all are.\"\n\nGio looked up to see his sister Fiona in her downstairs outfit. \"That looks so good on you sissy-slut.\"\n\nFiona blushed. \"I'm glad you like it since you picked it out.\"\n\nGio nodded. \"I did, but you can't all keep wearing the same thing every day. We need more clothes like this for around the house. Slut wear that's easy for me to play with my toys.\"\n\nFiona flushed at the thought of Gio playing with her. It had been all she could focus on all day at college, getting home and having her Master use his big fat cock on her. \"What's going on anyway there is no furniture upstairs in the bedrooms.\"\n\n\"Becky took it upon herself to move us all down here. That's why we were just about to let her know what her punishment was.\"\n\nFiona nodded. \"I see it sounded to me like you all were playing and I just wanted in on the playtime.\"\n\nAbi walked up to Fiona. \"Are you all horny from thinking about your brother at home playing with his toys while you were in class, Fiona?\"\n\nFiona bit her lip and looked her brother's fianc\u00e9e in the eyes. \"Yes, Mistress.\"\n\n\"Is that what you think has been going on? While you were at school trying to concentrate Tiffany, Mom and me were here; getting you little brothers big, fat, cock all to ourselves?\"\n\nA moan slipped from Fiona's mouth as Abi's hand went up under her short schoolgirl skirt and stroked her already damp pussy. \"Get undressed sissy-slut and I'll let you brother play with you. Look at him Fiona. He's all hard and ready from tormenting my mother. He needs to cum and cum and cum do you think you can handle him as worked up as he is?\"\n\nFiona moaned again as she saw her brother's cock straining against his suit pants. Abi's fingers sliding around and around her clit without touching it, causing her to become wetter and wetter. She started removing the outfit she had just put on, exposing her hard nipples and dripping snatch to her brother, Abi and Becky Long. \"Oh, you need it bad, don't you, big sister? You need your little brother's big hard cock inside your hungry pink palace?\"\n\nFiona was shaking with need. \"Yes, Mistress.\"\n\n\"Well, you can't have it. Not yet, because you have to get past me first. Do you think you can do that, slut? Do you think you can please your mistress enough for me to let you have my fianc\u00e9e inside your slutty little fuck hole?\"\n\nFiona's answer was to drop her short skirt beside her already discarded top and plaster her lips to Abi's, plunging her tongue into the other girl's mouth and rubbing against her. She reached out and started removing Abi's clothes until the two young women were both standing in between Becky and Gio, completely bare, their bodies pressed against each other as their lips and tongues continued to duel together. Fiona's hands wrapped around Abi's naked body as she pulled her tight against herself mashing their tit's together and she rubbed her body against the younger woman's like a cat in heat.",
        "Abi pulled her mouth away from Fiona's and cooed in the girl's ear. \"That's right, big sister. Make me cum, and I'll let your brother fuck your tight little pussy. The faster you get your mistress off; the sooner your master can give you what you want. All while my naughty mother watches you get what she wants. To fuck our Master.\n\nJust think about it, Fiona. If you can make me cum, then your brother will fuck you and fuck you. Your mommy isn't here to claim his cum. He'll be able to dump all that thick virile baby making cum deep in your hungry womb. Maybe he'll put a baby in you before your mommy get's hers.\"\n\nGio knew that this wasn't the first or even second time he'd heard Fiona and Abi talking about him, knocking his sister up. Was that really what Fiona wanted? A baby? His baby? \"Wait. Fiona, Abi. Stop a minute.\"\n\nBoth girls stopped rubbing on each other and turned to look at the man in their life. Gio finished stepping out of his pants that he'd started to take off earlier when his erection grew too painful, pressing against his pants. \"All playing aside. This is the third time today Abi you've said something about giving Fiona a baby. Is that what you want, Fiona? Do you want me to make you pregnant?\"\n\nFiona hung her head. She didn't want to disappoint her brother and master by telling him what she really wanted. Abi took her by the chin and lifted her head until they were looking into each other's eyes. \"Fiona, last night you took his collar and promised him you belonged to him, but he promised you things too. He promised to accept you, to care for you, to give you what you needed. How can he do that if you aren't honest with him? Tell you brother what you want. Tell him all of your dream and let him prove he is worthy of your submission to him.\"\n\nFiona nodded and looked her brother in the eye. \"I WANT TO QUIT SCHOOL!, GIO I HATE IT! I'VE ALWAYS HATED IT. THAT WHAT DAD WANTED NOT ME.HE WANTED ME TO GET MY MBA AND CPA SO HE'D HAVE A FREE BUISNESS MANAGER.\"\n\nGio was shocked at his sister's statement. \"Jesus Fiona, then what do you want?\"\n\nHer voice dropped from yelling to a whisper. \"I want what I always wanted, Gio. I want to find a man who has enough money that I can stay home and take care of my family. I want to have babies and be a stay at home wife and mother it's all I've ever wanted.\"\n\nGio's head hung in shame. \"And I've destroyed your dream by putting my collar on you.\"\n\n\"NO!\" Fiona wailed as she clutched her brother. \"DON'T TOSS ME AWAY NOW! YOU MADE ME LOVE YOU AND YOU PROMISED TO LOVE ME. YOU PROMISED ME, GIO!\"\n\nAbi hugged the woman to her as she looked at her fianc\u00e9e. \"Don't you get it Gio, she doesn't want to be some man's housewife. She wants to be YOUR housewife. Fiona wants to care for YOUR home, YOUR family. She wants YOUR babies. NOT SOME MAN'S YOUR'S! She wants what society says she can't have. But she can have it. We can all have it.\"\n\nGio looked at her and shook his head. \"I can't marry all of you. While incest among consenting adults may be legal here polygamy isn't.\"\n\nAbi smiled. \"It isn't, you're right legally, you can only have one wife. However, there are those who live an alternative lifestyle. There are even ministers and officiants willing to do polyamory marriages. That's what it's called when a group marries each other a polyamorous lifestyle. Multiple spouses, all married to each other, all equal in each other's lives. A polyamory\"\n\n\"That's what you want? Both of you?\"\n\nAbi and Fiona nodded Becky cleared her throat. \"I don't want to marry you all, but I want to be part of the family.\"\n\nGio looked at her. \"It wouldn't be legal, anyway.\"\n\nBecky laughed. \"Since when has a marriage being legal changed anything? The only place it wouldn't matter is in court or at the doctors, but we could fix that. You and Abi get legally married to each other. Fiona and Tiffany get married to each other legally. Thus, you all are family. The only downside would be if Mia joins us and then she could enter a polyamory marriage with you all and legally marry Cecilia. Making all of you family. I'm the mother-in-law, so no one would question us all living together that way. And legally you'd all be related by either blood or marriage.\"\n\nGio thought about it, but none of this was dealing with his hard-on and thinking straight was difficult with so much blood pulsing in his cock and his testicles heavy with sperm that needed to be released. \"Let's talk about this more later for now, everyone get on the bed it's time for us to get serious before someone else shows up and needs us.\"\n\nTiffany came down just as Gio was telling everyone to get on the bed and she kneeled at the end of the bed. \"I said everyone sex slave Tiffany. Get those clothes off and get on the bed.\" Becky went to stand and climb on the bed, and Gio caught her by the arm. \"Not you slut. It's time for your punishment. If it was any of these others, then I'd use this on them.\"\n\nGio reached into the Pink Cherry bag and pulled out the leather covered paddle. \"But I know you'd just enjoy it. So here is your punishment. Everyone in the family is going to torment and torture you from now until time for your collar ceremony. You will resist nothing they tell you to do or do to them.\n\nIf you want the torment to stop, then your only way to make it stop is to say your safe word. If you say Submarine, no one will touch you for the next twenty-four hours, as we agreed. But that would also mean you don't get collared until tomorrow night. If you cum before I lock my collar on you, then everything stops and you won't get collared until tomorrow night. Do you understand?\"\n\n\"Yes, Master.\"\n\nGio shook his head. \"Not master slut, not yet you haven't accepted my collar yet. So I'm not your master. Just your potential master until you say yes to my collar and I lock it on you. Until then you will call me Sir, not Master. You will call Abi, ma'am, not mistress. Now bend your ass over the end of that bed and don't you dare raise up or cum while I warm up your ass with this paddle. Remember, if you cum or use your safe word, everything ends. You will thank me for every blow and ask for another. If you fail to do so, I'll start over. Only I know how many I plan to give you. It could be one or it could be one hundred and one.\"\n\nBecky bent over the end of the bed with her head on the mattress, her ass in the air. Gio swung the paddle and laid a solid blow on her right cheek \"Thank you sir, can I have another, please.\" She moaned, and he landed a blow on her left cheek. Back and forth he went until he could see she was about ready to cum just from the twenty blows to each side of her ass cheeks. \"Get your ass on that bed, head hanging over the foot. It's time for some genuine pain, you pain slut. I'm going to fuck that mouth and you're going to take my whole cock no matter how much it chokes you or hurts.\"\n\nThen, without warning, Gio slammed his cock as far back into her throat as he could go, causing her to cough and gag and see stars as his enormous dick punched into the back of her throat. \"You still have four inches to go, slut. You better figure out how to get my entire cock in that throat of yours or I'm going to punch a hole in the back of your head.\"\n\nBecky tilted her head more and as he came to the back, she swallowed and felt his cock slide into her actual esophagus four inches. She kept swallowing even as she realized she'd taken the whole thing, but now she couldn't breathe.\n\nGio just kept his quick fast thrusts as she swallowed and swallowed. The sensation like nothing he'd felt before. It was tighter than a cumming pussy or ass but felt a lot the same. He realized she couldn't breathe and watched her closely until her face turned purple and her eyes started to roll back in her head, and he pulled out of her throat and took a few more shallow pumps, stopping just before choking her.\n\nHe looked down up the bed to see Fiona, Abi and Tiffany laying in a triangular daisy chain, eating each other's pussies. \"You three get over here. Abi, left breast; Tiffany, right breast Fiona, eat this slut's pussy but don't you even touch her clit.\" Gio whispered to Abi to bite her nipple with every fifth suck and to Tiffany to bite every seventh. Then he slammed his cock back into her throat as deep as he could. She choked, then swallowed, and he was deep in her esophagus again.\n\nBecky was in heaven as much as she could be without having an orgasm. Her mouth hurt from being stretched open for so long. Her throat hurt from Gio's rough treatment, but she was distracted from the sweet pain by the sucking pleasure at her nipples and the licking at her pussy. Then she screamed as first one nipple and then the other felt the sharp bite of the girl's teeth. It was so exquisite that she almost came and fought to keep from it.\n\nGio laughed as he pushed deep into her throat again, taking away her air, giving her something else to think about besides the pleasure and pain mixing. Then as he went shallow again, allowing her to breathe first one nipple, then the other was bitten again, and the pain shot straight to her neglected clit that was so full of blood that it was visibly standing at attention.\n\nHe slammed back into her throat as she screamed, choked and then swallowed him back deep. Gio knew she was close, and it was time to give her a break. He reached into the Pink Cherry bag and pulled out the three alligator clips he'd bought earlier and handed them to Abi. \"You know what to do.\"\n\nShe nodded and sucked hard on her mother's left nipple, then pulled off and placed the cold metal against her mother's Areola and release the clamp so it snapped shut on her nipple. Her mom howled around Gio's cock as the tiny groves of the clip closed on her hard nipple, trapping all the blood in the nipple where it was. Then she had Tiffany move, and she did the same thing to the other nipple.\n\nBecky saw stars as they subjected her second nipple to the alligator clamp. It took every once of her willpower not to cum from the startling pain that pulsed deep into her engorged clit. She howled again and felt Gio Jerk out of her mouth with a howl of his own as his warm cum sprayed across her face and neck, over her breasts and even onto her belly.\n\nHe instantly jumped up on the bed and pushed his sister away from Becky's pussy and he swiped her clit three quick times with his tongue. Having her buck and wanting more, even as she fought not to cum. Then he was gone.\n\nGio climbed behind his sister, Fiona and shoved his still hard, throbbing dick into her pussy. \"You want my baby, Sis? Then you 're going to get it. I'm going to hammer your pussy and cum so deep you'll be begging me to stop.\"\n\n\"GIVE IT TO ME, GIO. GIVE ME YOUR CUM, GIVE ME YOUR BABY! BREED ME MAKE ME A MOMMY FOR YOU.\"\n\n\"OH YOU'RE GOING TO GET IT ALRIGHT.\" He exclaimed as he pounded her as hard and deep as he could without hurting her. He nodded to Abi, who moved down to her mom's pussy and spread her lips so that her clit was fully exposed, and she clamped her mouth on her mother's bundle of nerves, giving it a gentle suck causing her mom's hips to buck up into the air.\n\nThen Abi pulled away and snapped the alligator clamp on Becky's clit as far inside as she could. Becky screamed at the throbbing pain and started breathing like she was having a baby to control the need to cum.\n\nBecky focused on one thought: They wouldn't break her. She wouldn't cum and she wouldn't ask them to stop, no matter how much they tormented her. She really was already a hair past any previous limit she'd allowed herself to go pain wise. If it hadn't been for Gio's promise that she wouldn't get her collar tonight if she broke, she'd have yelled submarine after the second clamp had gone on her nipple.\n\n\"GET UP BECKY ON YOUR FEET.\" Gio yelled as he continued to fuck his sister who screamed that she was cumming and begging him to give her a baby at the same time.\n\nBecky struggled to obey, and it took both Abi and Tiffany to help her stand on her legs that felt weak from trying to resist the urge to cum. Every move caused the clip on her clit to stimulate and cause pain at the same time. \"You're struggling to hold on, aren't you, slut?\"\n\nBecky thought about denying it. \"I am Sir, that last clamp almost made me cum.\"\n\n\"Yes, I can see that I think we will give you a little break. Assume the collar me position at the foot of the bed until I'm done with these other sluts.\"\n\n\"Thank you, Sir.\"\n\nGio chuckled. \"OH no little pain slave. Don't thank me yet the night hasn't even started yet. I promise when I clamp that collar on your neck, you'll be past begging us to let you cum.\"\n\nBecky kneeled in the proper position, legs spread to show her soon to be master and mistress her dripping pussy. Hands on the back of her neck, elbows out, back straight with her forty double D breast thrust out Nipples still clamped and aching. She knew it was unwise to taunt the people in control of her pain, but her pride wouldn't let her concede anything more than she already had. \"I can take anything you think you can dish out, Sir.\"\n\nGio laughed. \"The day is still young. There are humiliations and torments galore yet to come. I wonder if you'll make it through your collaring ritual without using your safe word? It's my goal to find your absolute limit and make you break little pain slut.\"\n\nBecky whimpered with anticipation even as she tried to stay perfectly still in the collar me position. Every little shift caused delicious pain to throb over her clit and deep inside her pussy. She needed whatever Gio and Abi wanted to give her. She was like a junky getting a fix after rehab. So full of need she couldn't think past getting the next bit of pain or pleasure.\n\nGio turned his attention back to his sister, who had calmed a little while he'd dealt with Becky. She had cum so hard on his cock earlier that she hadn't been making since in the things she screamed. Now Fiona seemed to be back in control and was humping back into his cock, trying to get him to go harder and faster again. Instead, he changed his position, shoving down on her back, moving her into a more submissive position. As he did, he felt the opening of her cervix against his cock.\n\nHe still had a good three inches of his cock outside of his big sister. This was the most she'd ever taken. But at this angle he could feel her cervix and he knew that if he was slow and patient, he could work the rest of his cock up through her cervical opening and into her womb. He pushed, and he heard her gasp. \"What are you doing, Gio?\"\n\n\"I'm going to give you what you want, Fiona. This time you're going to take my entire cock. I can feel your cervix, and I'm going to push through that opening and into your womb. I bet if I dump my cum into your uterus instead of just your Virginia we can beat the odds of your birth control pills after all they are only ninety percent effective, anyway. If I'm in your womb when I cum, I bet we'll beat that ten percent and knock you up.\"\n\n\"OH GOD GIO! I CAN FEEL YOU STREATCHING MY CERIVIX: OH, OH, OH GOD. YOU'RE REALLY DOING IT! YOU'RE ACTUALLY GOING TO GO INSIDE MY...\" Fiona screamed as she felt the pop as his cock head pushed past the top of her cervix and fit into her womb. Then, a moment later, she felt as his balls settled against her body.\n\nFor the first time since she'd found out how big he was and straddled his big fat cock, Fiona had all thirteen and three quarters of it inside her. Gio, her baby brother, was three inches deep in her womb. Then he pumped shallow and fast, just until his cockhead bumped against the opening in her cervix and then deep into her womb again and again.\n\nShe was fuller than she'd ever been and it mixed the pleasure with the pain of having his thickness stretching her cervical opening. Then it happened. Fiona experienced the most intense orgasm of her life. To call it a cum was misleading. She wasn't cumming; she was violently exploding from her brother's rough fucking.\n\nHer pussy clamped and released so hard she thought she would pass out. Add to that feeling, her cervix started clamping against the thick cock shoved past it as well. Fiona lost all coherent thought as her brain melted in the pleasure Gio's cock was putting her through.\n\nGio felt her pussy clamp on his hard cock, but the strange part was feeling her cervix pulsing, too. It was like being massaged twice in the same place, a warm vice squeezing his shaft so hard he couldn't move more than a few centimeters and then just under his cockhead, getting the same squeezing flutter only faster. It was enough to set his own orgasm off, and he roared as he unloaded deep in his sister's womb.\n\nJust when he was sure he was done cumming, Abi was behind him, shoving her finger up his ass and rubbing in tight little flicks against his prostate. Gio went off like a roman candle again, shooting rope after rope of his thick, virile sperm right into his sister's open womb. Coating every inch. When he was empty and spent, Gio collapsed and slipped out of his sister who was still cum drunk from her own stellar orgasm.\n\nTiffany and Abi got Fiona turned over and her ass up on several pillows, tilting her cervix up, keeping Gio's fertile seed deep in her womb. While neither of them had gotten to ride Gio's cock, they were okay with it because they knew he'd be up again before the night was over. They could wait. This time had been for Fiona to help her achieve her goal of having Gio's baby.\n\nThirteen\n\n<p align=\"center\">~~~~~</p>\n\nGio rolled off the bed. He walked over to his dresser and pulled out a clean pair of pants and a t-shirt. No need to get dressed up. Knowing that the expensive suit he'd gotten was not just tailored to him but dry clean, he put the pants and jacket into the wardrobe that already had some of his clothes in it. Yes, he'd invited Mia over for dinner so they could talk about the company. If, however, there was any hope of her joining their little family like he hoped, she might as well get used to seeing his big fat cock. If she didn't join them, at least she'd know why he had so many women in his life.\n\nHe also needed to talk to Tiffany about what Abi had mentioned, all of them getting married to each other, living this polyamorist lifestyle as a polyamory marriage. His life had sure changed in a week's time. This time last week, he'd been sure he was going to end up the last Virgin on earth. Now he had a house full of women, all who wanted to fuck him senseless several times a day.\n\nGio needed a distraction and went up to his old room. Thankfully, Becky had been wise enough to realize that his desk and computer set up were off limits to anyone else. The first thing he did was check the company's financial account. The automatic transfer from his online money friends account into his newly secured bank account was more than double what it had been earlier that morning. It was his first full day of having the simple button on his ClickTalk app and he'd already made almost half a million dollars. Surely it would have to slow down some soon. Yet each day more people and business were adding ClickTalk accounts to their social media presence.\n\nHe closed out that account window and opened one to order some new top of the line gear for working. If he was going to make a go of ClickTalk and G.L. Creations LLC, then he need something better than an old used server and a cheap computer. He started with the computer, going online and custom ordering a top of the line computer set up with Multiple Monitors. He purchased the coding software he'd always wanted and then he added a pen and drawing pad and the top of the line graphic design software suite he'd also always wanted to learn.\n\nHe saw that they also had an online training software he could order for both the coding software and the graphic design suite, and he added it as well. He entered his temporary debit card and payed for the purchases.",
        "Next, he went to another site. This one was the company that had the best expandable server towers racks and blades on the market today. He bought a rack and several blades. He also bought two top of the line towers that the rack and blades could be connected to creating his own miniature server farm. That would allow for ClickTalk to expand how Mia had suggested and still give him plenty of storage and operating speed and power for adding other games and apps.\n\nThey would use one tower only as an internal server for those working for the company. An intranet, as it were. The external tower or the one connected to the internet would be separate and the only link would be through the set up Gio and ordered for himself. Once he got to know his soon to be hired team of graphic designers and coders, he'd give access as he felt comfortable. He'd also need to add a couple of different internet connection modems and routers. One dedicated to the ClickTalk and working app server, another for employees to use. A third just for himself. He'd call his cable access company tomorrow and talk about getting those set up next door quickly.\n\nOnce done, he logged off, feeling like he had made some progress. He had a couple of personal things to take care of computer wise and he'd try to do that later this afternoon, but right now this whole Polyamorous/Polyamory relationship thing was heavy on his mind. He really needed to talk to Tiffany and see if she was feeling the same way as Abi and Fiona. If so, he would need to make some serious changes in their lives again.\n\nHe went downstairs onto the main floor and followed sounds of his 'women' chatting and laughing. He entered the living room and saw Tiffany and Fiona setting on either side of Abi on the couch, each dressed in their downstairs uniform. Becky was still naked, sitting in one of the stuffed straight-backed chairs, still wearing only the three alligator clamps. Gio noticed that the woman's nipples and clit had changed color and he thought they might have miscalculated the need for blood flow to those parts. He didn't want to damage her, so he walked over to her.\n\n\"Becky, I'm going to have to remove the clamps I don't think it's safe to leave them on any longer. When I remove them, the pain is going to be excoriating and it will probably make you cum on the spot. Because of that, I'm giving you permission to cum when I remove them. The game is supposed to be fun and yet give you what you need. Not be impossible for you to survive. So I'm going to amend the Submarine rule in that if something looks dangerous after a while you can inform us and that won't be a true Submarine.\"\n\nBecky's eyes began to tear up as she nodded. \"Thank you Gio.\"\n\nGio smiled at her. \"You should have said something when they went numb.\"\n\nShe nodded. \"I know, but I didn't want to wait twenty-four hours for my collar.\"\n\n\"You won't for this.\" Gio looked at Tiffany. \"Get me a towel please I want to put it under Becky before we remove these clamps. I'd rather not soak mom's fake Queen Anne chair.\"\n\nTiffany came back with a black garbage bag and two towels and the first aid kit from the bathroom. \"Stand up Mrs. Long.\"\n\nBecky stood, and Tiffany put down the garbage bag and then the two towels. \"Better to be safe than sorry later.\"\n\nGio nodded. \"Good thinking. Also, a good idea on the first aid kit. Help me get this off her. You take her right nipple, I'll take the left and her clit. I think it would be better to remove them all at once and I don't want to jerk them off this time. I think we left them on too long for that.\"\n\n\"How do you want to do this?\"\n\nGio looked at Tiffany. \"I'll count to three, then we open them. Watch out for her to cum a bucket load. Pink Cherry told us that wasn't uncommon.\"\n\n\"Okay, ready when you are.\"\n\nGio grabbed the two clamps he was going to remove and noticed Tiffany did the same with hers. \"Okay, here we go. One. Two. Three.\"\n\nHe opened the clamps, as did Tiffany. Becky sat for a second as color seeped back into her nipples and then she screamed As the pain hit and her pussy pulsed with the overwhelming rush of both the pain and pleasure. She soaked the towels under her and then collapsed into the chair as she fainted from the intense mix of pain and pleasure and the most intense orgasm she'd had in years.\n\nGio picked up Becky and Tiffany, took the towels and bag off the chair she went and got a washcloth and another towel and cleaned up the older woman. Gio sat her back in the chair and snapped an Ammonia Ampoule and waved it under her nose, waking her up. \"Wow, that was a big one.\"\n\n\"And the last one until after we collar you do you understand Becky?\"\n\nShe nodded \"Yes Sir.\"\n\nHe smiled and helped her stand again, holding on as she got her feet under. \"Good Girl.\" Gio looked at his sister next. \"Can you go downstairs and grab the outfit in the Pink Cherry bag? It's Becky's downstairs uniform. She may dress for now. Take her with you and help her get ready for the rest of the evening.\"\n\nFiona smiled at him. \"Of course, Gio that's part of taking care of our family. By the way, I ordered dinner from the Mediterranean Garden they will deliver it around five thirty. I got enough for ten. A fresh salad and some Greek style pasta and seafood dish I'd never heard of and baklava for dessert. I thought Mia might enjoy something from home.\"\n\nGio laughed. \"That's fine. I love you think anything served at an American restaurant will be authentic to another country.\"\n\nFiona huffed. \"it's Mediterranean Gio.\"\n\n\"It's Mediterranean style, Fiona. It isn't an actual meal you would get on any Greek island. Why enough for ten people?\"\n\nFiona shrugged her shoulder. \"In this house now days who knows how many will be here at dinner. Better too much than not enough.\"\n\nHe nodded. \"Good point.\"\n\nFiona helped Becky downstairs. \"Hey maybe let her rest a little while she's down there she looks pretty wiped.\"\n\nFiona nodded, and the two of them slowly made their way down to the new bedroom.\n\nGio turned to Abi. \"I need to talk to Tiffany so I'm going to take her out on the new bike if that's alright with you?\"\n\nAbi smiled Gio knew she realized exactly what He was about to do. \"That's fine Fiona and I are going to take Mom and go shopping. Is it okay if I get some of the money in your backpack for us to spend? We are going back to Pink Cherry's she's holding a few things for me.\"\n\nGio frowned. \"We just left there recently, and her granddaughter is supposed to be here sometime soon.\"\n\n\"Cheri will not come until five that gives me an hour and a half. I preordered what we are going to get. It's your fault part of it, anyway.\"\n\nGio raised his eyebrow. \"My fault?\"\n\n\"Yes, you said that we all needed more outfits to wear downstairs. So we all got on Cherry's website and picked out some things. She had several in stock and the others will be shipped to us here in the next two days. Plus, I want to get new locks for the girls. Considering our earlier talk, I want locks that don't humiliate anyone or make things so obvious.\"\n\nGio thought about that and nodded. \"Yeah, see if you can find those locks like moms that are less obvious.\"\n\nAbi smiled. \"We are on the same page again, Gio. That's what I ask for, expect for mom. I think we went the wrong direction for her completely. She needs the humiliation, so I'm going a new direction with her. I know she's going to accept it from you, but it's my job to help you meet each woman's needs. What I ordered may seem strange to you at first but it will help meet her needs.\"\n\n\"I trust you to know what she needs and to teach me if I need to know it.\"\n\n\"Well, thank you I'll talk with you after we both get home about it and we will have implemented it by then.\"\n\nGio nodded. \"We need to talk about a soft line stop for her, too. What happened just now could have been dangerous if we hadn't caught it. She needs to tell us when she has issues without fearing we won't play anymore.\"\n\nAbi stood and wrapped her arms around him and kissed him deep and long. \"You are so good to us. Don't let anyone tell you otherwise, Gio. You may have an enormous cock, but that isn't all you are. You are a fantastic lover and a kind, considerate and loving one too. I wasn't joking today when I told Cherry you were the rainbow unicorn. A big dicked man who knows how to please a lady and cares for her too. Go talk to Tiffany you'll see it will all work out.\"\n\nGio walked over to Tiffany. \"Want to go for a ride on my new Harley?\"\n\nShe smiled at him. \"Really? Do you even have to ask?\"\n\nGio laughed and handed her the helmet that he'd picked out for Abi. \"use this helmet for now I'll order one for you and Fiona this weekend.\"\n\nTiffany frowned. \"Why order us each one we can all use the same helmet. It's not like more than one of us can ride with you at a time.\"\n\n\"True, I guess. I just like that each of you girls has your own stuff. I mean, you are all sharing me, and I enjoy making you each feel unique.\"\n\n\"And you gave each of us our own color we noticed that but the things Abi just bought they aren't just in that one color, we like variety too, Gio. I hope you like the outfits we bought. We got some that were individual and some we each bought the same of so we can all dress the same for you.\"\n\n\"I'm sure I'll love them all.\"\n\nTiffany climbed on behind Gio and he pressed the start button and they took off. \"Oh, this is so different from your old bike.\"\n\nGio nodded. \"It is the electric engine, makes it so quiet. Easier to talk.\"\n\n\"Yeah, but no pussy vibrations.\"\n\nGio laughed. \"Well, I could order you a bullet vibrator to shove into you horny little hole when we go riding so you get your 'good vibrations'.\"\n\nTiffany chuckled over the speaker. \"That might work.\"\n\nThey pulled into the local creamery. \"Let's get a couple of shakes. I need to talk to you about something.\"\n\nGio took her hand and led her inside She got a double chocolate and he got a banana and they sat looking out over the parking lot. Gio could tell she looked nervous, and he knew that was his fault. \"We've had a rough week, huh?\"\n\nShe nodded and bit her lip. \"Yeah somewhat.\"\n\nGio smiled. \"Don't worry Tiffany, I'm not ending things again. I just need to ask you a few things.\"\n\n\"Okay.\" She relaxed a little at that.\n\n\"First, I'm sorry again for just tossing you back to your dad without asking what you wanted. That's why we're having this little talk. I never want to upset you like that again. So, when I'm thinking of something that impacts you or all of us, I want to ask your opinion and what you want or need. That's what this conversation is about I need to know Tiffany how you really feel about me.\"\n\nShe looked at this almost perfect man and was confused. \"Is this about you and Abi? I mean, I know my place in your life, Gio. Abi is your soulmate, the girl you love and I'm just the sex slave that you fuck when you need someone to help take care of your needs. Don't worry about me causing problems.\"\n\nGio sat back. \"Wait, no, that isn't what I mean. This isn't about Abi and me well it sort of is, but she wanted me to talk to you. She thinks you're in love with me and that you want to stay with us beyond the end of the school year, maybe even longer.\"\n\nA tear fell from Tiffany's eye and she swiped it angrily. \"Don't worry about me Gio and you can tell Abi she doesn't have to worry about me either. I know my place in our group. I'm yours and I plan to stay with you as long as you'll let me.\"\n\n\"But what about UT and your scholarship?\"\n\n\"I already withdrew from Ut and sent a letter explaining the issue here with the school and stated that Cheerleading has become a triggering event in my life now. I don't want to have to face football players alone again. They make me nervous.\"\n\n\"So you plan to go to school here?\"\n\n\"Honestly no. I know this sweet guy who is starting up this really cool tech startup building games and apps. I thought I might go to work for him as maybe the CEO's personal assistant or receptionist.\"\n\n\"You are more than welcome to either Job Tiffany. I know how organized you are and you would be a real help with either job.\"\n\n\"Good, now as for how I feel about you. Gio, I love you. I love our whole weird family. I'm happy where I am. I'm happy wearing your collar and staying with you for as long as you want me. Forever if you'll let me.\"\n\nGio heaved a sigh. \"Okay, good then. Listen, I messed up again with you. Tonight I'm taking the lock off your collar.\" He held up his hand when he saw the fear on her face. \"Not to get rid of you. I don't want to humiliate you anymore, Tiffany.\n\nI love you the same as I love Fiona and Abi. Fiona had a melt down today because I wasn't listening to her wants and needs. I get you need protection for now and I hope I'm reading this righ,t that you love me as much as I love you. Because Abi suggested something today. Fiona is dropping school tomorrow, and she wants to be my housewife and stay at home, mother. Abi, of course, wants to be my wife and Partner. You say you love me. That you love our entire family. Abi did some research and found something called a Polyamorous or Polyamory Relationship. It's a type of relationship where there are over two people in a committed relationship. All of them equal. So I want to know Tiffany, if you could actually marry me and Fiona and Abi and all of us be husband and wives together, would you want that?\"\n\nShe looked at him. \"Really? Is that legal?\"\n\n\"No, it isn't legal, but there are ways around that, sort of. We would make a commitment and could even have a wedding ceremony, but you wouldn't just be marrying me. You would marry me, Fiona and Abi. We'd all be equal in each other's eyes. But legally we'd have to do something weird. You could legally become a McLoed, but not my wife. You would legally be Fiona's wife. But we would have a ceremony in front of our loved ones and friends who would know that we are husband and wife and wife and wife. You would have two wives and a husband. Just not on paper.\"\n\n\"Gio, are you seriously asking me to marry you and Abi and Fiona right now? To be your wife alongside them, not just your sex slave?\"\n\n\"Yes, only I need you to understand you wouldn't be just my wife alongside of them. I wouldn't just be Gio and his three wives, it would also be Tiffany and her two wives and husband.\"\n\n\"And Abi and Fiona want this too?\"\n\n\"Let's go home and ask them.\".\n\nGio held out his hand, and Tiffany took it. They stood and moved to the door when it opened and in walked Dean Chadwick and four other members of the football team. \"Well, look what we have here, boys. The Geek and the Queen Bitch.\"\n\nFourteen\n\n<p align=\"center\">~~~~~</p>\n\nAbi Long watched as Gio left with Tiffany. So much had happened in the last twenty-four hours and she felt like she was the proverbial phoenix rising reborn from the ashes of her old life. It was just yesterday she thought she'd never get away from Dean Chadwick. Just yesterday that she'd been forced to act like she loved the asshole and act as his loving and submissive girlfriend or risk her and her mother losing everything.\n\nThen, like a cleansing fire, her mother had burned it all to the ground. Bringing them to Gio and begging him to claim them, protect them, own them. By all rights, he could have accepted her terms and things would be so different today. Instead, Gio had offered them an alternative. He asked Abi to marry him and instead of making her one of his growing number of submissive women, he'd risen her to the dominant mistress to his master, allowing Abi to grow and explore her own sexually dominant side.\n\nHe'd recognized her mother for what she was as well. Gio, with a simple few words, had offered her the opportunity to have the sexual gratification she'd not been able to fully experience since Abi's father became ill.\n\nThinking about that so much that had confused her about her mom and dad was clearer now that she was paying attention to her mother's sexual needs. Things they had done and said that she didn't understand when she was younger suddenly were completely clear. Just knowing her mother was into BDSM and humiliation had made them clearer.\n\nShe had realized just a little while ago that her mom had a thing for 'Pet Play'. She could remember how, when she was younger, her mom blushing when her dad had called Becky a \"good girl\" while patting her back or head. He used to call her mom his little love puppy around the house and even around his friends and Abi had just thought it was a weird term of enderement.\n\nNow she knew it wasn't, but probably because of Abi at the time, and Pet Play had evolved a bit since those days. They hadn't gone farther than that.\n\nAbi now planned to push her mom. To find her hard limit on how far she was willing to go with that and the whole bondage/pain thing, too. Abi smiled, thinking of the fun she was about to set up for her mom and Gio.\n\nUnlike Dean, Gio had listened to Abi's observations about the other women in his house. He'd welcomed her opinion on his other relationships and made her feel like an equal partner. Now tonight he was doing what Abi had suggested and asking Tiffany to become part of their Polyamory marriage.\n\nYes, the last twenty-four hours had definitely changed things and yet Abi couldn't sake the feeling that everything had been going too smoothly. Dean and his father weren't known for giving up so easily. It convinced her they were up to something. Something that would try to mess with her newfound happiness and bring Gio into trouble and her and her mother back under their thumbs.\n\nJust then, she heard shuffling behind her and turned to see her mom dressed in the naughty businesswoman suit Gio had picked out for her. It looked good on her mom. \"Hey baby, what are you doing out here?\"\n\n\"Reflecting on life and making some plans.\"\n\n\"Anything I need to worry about as your mother or as your lowly pain slut?\"\n\nAbi shook her head. \"Not really, wondering when the other shoe is going to drop. It worries me that the Chadwick's have seemed to give up you know that isn't like them.\"\n\nBeth's arms wrapped around her daughter from behind. \"I know it worries me, too. But thankfully I don't have to worry about them that's what I have you and Gio for now.\"\n\nAbi turned and hugged her. \"You know that I still love and respect you, right? I know we are humiliating you and treating you like a plaything, but as my mom, I've never been prouder. You know what you need, and you are finally allowing yourself to admit and embrace it.\"\n\n\"Thank you Abi, that means a lot to me. I'm proud of you, too. Watching you become a confident young woman these last few days has been part of why I'm brave enough to share who I am and what I need.\"\n\nAbi smiled. \"Thank you, too. Mom, we need to talk about this afternoon in the den, though. I know we said no soft line word but we need one. You needed to talk about the fact that the clamps were becoming a problem. We need a yellow word or a time out word that means you need to stop to talk about something or explain something. Both Gio and I are still learning about BDSM, pain play and humiliation play, so there are conversations we need to have and you need to tell us if the direction we are going works or doesn't for you. For an example, we read earlier about people that love being used as a human toilet. Are you into that or have you wanted to try that?\"\n\nBecky made a disgusted face. \"I wouldn't like that, never even thought of that, but I know I wouldn't want someone to use me like a toilet.\"\n\n\"See, that's why we need to have some conversations and during play need to pause if you need to tell us that doesn't do good things for you. What if Gio had just used you? I'm not say he wanted to or would have. But by the rules earlier, the only way you could have stopped that was to say Submarine and then you wouldn't be getting collared tonight.\"",
        "Becky nodded. \"So what are you thinking?\"\n\n\"I'm thinking that your pause word should be Periscope since your safe word is Submarine. Those are two words we will almost never use in a sexual environment.\"\n\nJust then, Fiona found them. \"Hey if we're still going shopping we need to leave soon. Can we take your car Mrs. Long I hate the piece of crap dad gave me.\"\n\nAbi smiled. \"Let's take Gio's new truck.\"\n\nFiona's eyes got round. \"Gio bought a new truck? I thought he bought that new electric Harley.\"\n\nAbi laughed. \"He did he bought both. The guy gave him a great deal on his wrecked bike and, with the 'presidential incentive rebate' for buying an alternative fuel vehicle, it made the Electric bike the same price as the used one he was going to buy. Then he went and splurged on the truck. Wanted a hybrid but four-wheel drive for the winter. The truck is seriously awesome I got to drive it home from the dealer.\"\n\nThey went outside and Abi laughed at the drool and envy on Fiona's face. \"Want to drive it? Then you can tell Gio you drove his truck before he did.\"\n\n\"He didn't test drive it?\"\n\nAbi laughed again. \"He did, but we'll tell him that doesn't count it wasn't his when he test drove it. So you and I will have driven his truck before he did. He should have taken it since he took Tiffany and she was in her skirt, but I think he forget he bought it because we had to park on the street earlier.\"\n\nFiona climbed in the driver's seat and ran her hand over the steering wheel. \"I want one. I know he won't let me have it he'll want to get me a SUV and being the stay at home mommy of our unit, that's what I'll end up with. But man, I love this truck and I haven't even driven it yet.\"\n\nAbi shook her head. \"No, I won't let him put you in a mommy's mobile. No reason you can't be the kick ass mom with the cool ass truck.\"\n\nFiona smiled. \"Thank you Abi.\"\n\nThey got to Pink Cherrys, and Abi gave both Fiona and her mom warning. \"This shop is off the wall sexy and the doorbell is hilarious. Cherry is well, she is unique. She will just flat out say what's on her mind, so don't be surprised at what comes out her mouth.\"\n\nBecky spoke up. \"She's always been that way.\"\n\nAbi looked back at her mom she didn't know why she was surprised but she was. \"MOM? You know Cherry?\"\n\n\"Charity Pinkston? Yes, she was my home-economics teacher when I was in high school. They made her resign after her divorce and she opened this shop as sort of a slap to the PTA's face for ostracizing her for getting divorced.\" Becky blushed. \"And your father and I might have bought some things from her from time to time.\"\n\nAbi was shocked, but not too shocked. It made since this was the nicest adult toy store in town. The other two she'd looked at online were more old porn shops ran by sleazy men on the outskirts of town and she would never have felt comfortable shopping there. She opened the door and laughed at Fiona and her mother's shock when the door chime went off. \"Spank Me, Master.\"\n\nThey all entered, and Abi froze when they were greeted by a young woman and not Cherry herself. \"Hi Y'all, welcome to the Pink Cherry.\"\n\nNever in her life had Abi seriously wanted to have sex with a woman. Her time with Tiffany, Cecilia, Fiona and her Mom was all more about sharing them with Gio. But this woman was a walking wet dream come true. Abi felt her panties soak as she realized this was Cheri Pinkston. The innocent twenty-year-old that Gio was supposed to teach about sex and take her cherry. But all Abi was thinking was she wanted to fuck this girl, she wanted this sexy woman under her, over her. Abi wanted to take Cheri's girl on girl virginity with or without Gio taking her actual cherry.\n\nCheri was about five foot two with the blondest hair Abi had ever seen it was almost white, it was so blonde. The cut was cute but different, long in the back like touch the top of her ass long and only chin length in the front. For about three inches, she had dyed the ends cotton candy hot pink. The girl's eyes were the color of fine Kentucky whiskey, a caramel colored amber, and the girl had no need for makeup and wasn't wearing any.\n\nShe had the plumpest lips Abi had ever seen outside of collagen filled porn stars and they had the hottest wets looking cotton candy hot pink lip gloss she'd ever seen. Her breast were slightly smaller than Fiona's, probably 30-32B cups at most. Abi knew because the girl was wearing a light pink, off the shoulder, puff sleeved crop top that was cropped just over and under those tits and the nipples were highly visible, poking against the fabric of the top. Her mid-drift was exposed, and the skin was the perfect golden tan color of a girl raised in the Georgia sun.\n\nHanging from Cheri's belly button was a sweet little piercing. Two tiny silver chains, each with a little pink cherry charm hanging from them.\n\nShe wore distressed denim shorts so small that made daisy dukes look large. With a pink bandana around the waist like a belt. Her legs were encased in sheer pink lace topped thigh highs with a seam running up the back and a pair of hot pink 4 inch heel cowboy style boots on her dainty little feet.\n\nAbi's mouth watered, and her heart pounded. She swallowed and said. \"Hello you must be Cheri Pinkston. I'm Abi Long I believe you're making a deliver to my place soon.\"\n\nThe girl blushed at Abi's obvious once over. \"I um thought I was making a delivery to the McLeod's.\"\n\nFiona looked over at Abi. She smiled the look on her mistress's face was pure lust and she knew what was going through Abi's head. She'd bet all the marbles that Abi wanted to put a collar on the little smoke show in pink. And not to help with Gio's problem, either. There might be actual drool on Abi's chin. \"You are I'm Fiona McLeod it's our house Abi is just our mistress and my brother's fianc\u00e9e.\"\n\nJust then Cherry came out and Abi shook off her girl love long enough to walk toward their older friend. Until she got behind Cheri and then she looked back at the most perfect ass, and she just wanted to drop to her knee's, yank the girl's shorts off, bury her head in that perfect ass and eat the girl until she was screaming for Abi to own her. And by God Abi was going to find away to keep this girl.\n\nThankfully, Cherry got her attention. \"I just finished putting your order together. You said you wanted my help with a couple of things when you called earlier?\"\n\n\"Yes, and don't think I'm leaving here without you explaining why you didn't tell us your granddaughter was liquid sex on legs.\"\n\nCherry looked at her. \"I guess because I don't really see her that way. As a woman, I know she's adventurous or wants to be, and innocent. As her Granny, I still see my little pigtail wearing tomboy, not the young woman she's become.\"\n\n\"Gio's gonna be hard every moment she's around.\"\n\nCherry put her hand on Abi's wrist. \"Don't you let that man of yours lose his head tonight. You both promised me she'd be pleasured and eased into sex, not taken like a conquest.\"\n\nAbi swallowed. \"I'm not worried about Gio losing his head he is a gentleman but damn Cherry, I almost jumped her in the aisle.\"\n\n\"Well, I don't mind if she wants to explore with you, but don't push her Abi. You play gentle and teach her right, too.\" The worry on her older lover's face sobered Abi and broke her lust drunkenness.\n\n\"You don't understand just how strict her upbringing has been. They taught her all sex was sinful and filthy. We should only do it for reproduction. It's taken me a year of constant emails and video calls to get her to even come here and explore the other side of that argument. If you all push too hard to fast, she'll retreat again.\"\n\nAbi nodded \"I promise well take good care of her and help her find out what she really wants to be and do. I will definitely help her learn how wonderful and pleasing any sexual contact can be.\"\n\n\"Okay, thank you. I'm trusting her to you, Abi. Please don't let me down. Now how can I help you?\"\n\nAbi smiled. \"You remember my mother?\"\n\n\"Yes, of course.\" Cherry turned to Abi's mom. \"So good to see you again, Becky. I was so sorry to hear about Johnathan.\"\n\n\"Thank you, Ms. Pinkston. It was hard when he was gone for a while there. He fought so hard to stay with us all the way to the end.\"\n\n\"The good ones always do.\"\n\n\"Yes, I believe we've found another good one.\"\n\nCherry pulled Becky into a hug. \"I know you have. I'm happy for you, Becky. You deserve another good man with a good heart. Now, how can I help you two?\"\n\nAbi smiled. \"This is a periscope moment, mother. I asked Cherry to help us because neither Gio nor myself understand the pain and restraint part of BDSM very well and we want to give you what you need. So I'd like you and Cherry to look at the wall where the paddles and whips and BDSM gear is and show me what excites you or what is strictly off limits as way too far for you. Remember that we want to challenge you to explore your limits some.\"\n\n\"Well, the paddle Gio used earlier was very nice. I liked it wasn't wood. In the past I've had to have splinters removed from wooden paddles those aren't fun or sexy.\"\n\nCherry nodded. \"Yes, I suggested he get the leather padded one. Gives a great sound and a rousing sting without the splinters of a wooden paddle or the cut of a whip.\"\n\n\"Yes, it was very good, once Gio got the hang of it. He was timid at first.\"\n\nAbi shrugged her shoulders. \"It's hard for him. He wants to give you what you need, but he doesn't enjoy causing anyone pain. Comes from all the bullying he's put up with over the years. That's why you and I are having this conversation, not you and him.\"\n\nIn the end, they got three floggers, one that was funny to Abi because it was rabbit's fur strips. Really, how much pain would soft fluffy fur cause.\n\nBut both Cherry and her mom said it wasn't about the pain but the sensation. Then they got an elk hide flogger with nine strips in it. Again a bit of sting but a softer leather, so a different feel to the sting. Then a heavier eighteen strip buffalo leather flogger. It would give more sting than everything else they owned, but not as far as an actual whip, which Becky had said was a hard pass. It turned out anything that might burn, cut, or scar was not her thing.\n\nThen they talked about restraints. And ended up with a whole sensory deprivation restraint kit. It contained a blind fold. Two silk lined padded leather wrist restraints and the cord to use them on the bed. Two silk lined padded leather ankle restraints and the cords for those to secure someone to the bed again. A quality set of noise dampening headphones and a downloadable recording of a binary beat that sounds like a heart but was at a wavelength that increases arousal.\n\nAfter the conversation, Abi herself wanted to try them. The thought of being secured helpless, unable to see or hear. To feel a sensation and not know what it was or who was doing it. That sounded delicious to her, and she thought they all might try it at least once.\n\nThat left on one more thing to discuss. \"Mom, we talked a little earlier about the pet play you and dad used to do. How far did that ever go? Did you have a collar?\"\n\nBecky nodded. \"Yes, but I only wore it in the bedroom.\"\n\n\"Did you have a costume for your pet? You know, like a tail and ears?\"\n\nShe shook her head \"No, he just called me his fuck puppy I wore a collar and while it was on, he'd only fuck me doggie style while calling me either his little fuck Puppy or his fuck bitch.\"\n\nAbi led her over to the pet play section. \"Okay, well, I want to get you back into that. I think it's a great way to enhance your humiliation level. So you have a few options on the pet. There's bunny pet. You wear long ears and a little cotton tail butt plug and at home you hop around everywhere and only eat veggies and drink from one of those water bottles with the metal ball.\"\n\nBecky shook her head. \"No, thank you. Hoping and no meat yeah I'll pass on that.\"\n\n\"Then how about cow? There's a whole cow suit, complete with horns. It's open in the crotch and has a long tail. Your tit's hang out as the utters. Oh, that's probably a pass too again. No meat, so is the horse. So that leaves Pig, kitten or puppy.\n\nI think the pig is out because though the outfit is cute with a little rubber snout and pink curly tail. You would live in a pigsty and we already agree, nasty waste isn't on your desired list either. So Kitten or Puppy. I know you did Puppy with dad so do you want to do kitten so you aren't reminded of dad?\"\n\n\"No, dear, lets stick to puppy, I'm partial to puppies.\"\n\nThey finally picked out everything. They went with a fox terrier set of ears and remote vibrating butt plug fox tail in brown and white. Becky's collar was slim, black, silk padded leather, with a small bone shaped lock. A metal engraved plate on the collar said \"McLoed Family Pet.\" Her dog tag was engraved with her pet name, well the cleaner version, though they agreed her real pet name was fuck puppy. They had the tag engraved \"Love Puppy\".\n\nBecky wanted to fully embrace the pet lifestyle, so they got two food bowls and knee pads with puppy paws on the bottoms. They also got a pet crate three, large pet bed pillows for the den since \"no pets on the furniture\" was a rule. One set of puppy pads for when it rained for the puppy to go potty on and a potty training stake and flags for outside. A long leather leash. It was pink and could double as a spanking strap to punish Fuck Puppy if she was bad. And two modified slutty business woman outfits with cutaways for the tail to fit through.\n\nAbi had offered to get her mom a \"work tail\" It was soft rubber that could be glued to her ass crack with but glue so no one at work would see it but Becky refused. She told Abi. \"If I'm going to embrace this as a lifestyle again, then I'm done hiding. I am who I am and everyone gets used to it or they can work somewhere else.\"\n\nThey put everything in the crate and were getting ready to leave when something caught Abi's attention. \"Cherry, what are these?\" She pointed into the jewelry case at what looked like a unique collar. Cherry looked. \"Oh, these are a new day collar I got in. I have a friend who is a jewelry designer. These will be unique to just my store.\"\n\n\"A day collar?\"\n\nCherry smiled. \"There are all kinds of collars, Abi. Day collars are actual collars, but they are more subtle and elegant the normal collar, like Becky has.\" Cherry pointed at an assortment of precious metal chokers or chains. Some of which looked so much like a necklace you'd never know it was a collar.\n\n\"There are consideration collars.\" Cherry pointed at chokers made of soft material, mostly silk, satin or lace, or a combination of those materials. \"These aren't lockable or made to be permanent but for someone to wear while a master or mistress is considering if a submissive is right for them and the submissive decides if they want the Dominant as their master or mistress. It lets other dominants know this submissive is off limits right now. Kind of like a reserved sign or placeholder for a more lasting collar.\n\nThen there are training collars. They are usually plain and have no lock. It's obvious from the name what they are. The Master is still training the submissive to serve, but at the same time the submissive is training the Mistress to recognize the submissive's needs and how to provide them.\n\nI know you and Gio are going to be great Dominates because of the earlier conversation with your mom. Together you and he are willing to ask questions of your submissives to see and hear what they say they need and you both just naturally recognize they can go further than they think so you 're pushing but not too much. In most D/s circles, older D/s would encourage you to slow down and put everyone in a training collar. Because you aren't fully trained, thus this lesson.\"\n\nCherry winked, then she continued. \"However, you all have known each other most of your lives and that gives you an advantage over other new D/s relationships.\"\n\nCherry went on with her lesson. \"Next, you would advance your submissives to where you are today, commitment collars. Where they are fully trained and are now willing to make a lasting commitment to you two as Dominates. You've already gotten your ceremony worked out and you realize that locking the collar on is a large part of that. Locking symbolizes the seriousness of a lasting commitment. I can order a version of these collars for that with normal locks.\n\nShe pointed to the ones she had on display. \"These, however, are of a different variety These are the last type of collar, a permanent collar.\"\n\nEach collar was a choker style collar with rings of yellow, rose, and white gold. Yellow of the bottom rings that were offset from the top rings of rose gold and smaller white gold connecting rings. But what caught Abi's attention was the charm in the front. An infinity symbol with a heart on one side with the crescent moon and stars in the heart. There were five of them laying there with a box of colored jewels next to them. Abi swallowed five of them. She looked at the jewels there were different kinds \"Are those Jewels real or crystals?\"\n\nCherry smiled. \"The jewels are the real deal I have blue sapphires, emeralds, rubies, pink sapphires and of course Diamonds.\"\n\n\"They go in the rings, right?\"\n\nCherry nodded. \"Are you going to keep these on hand?\"\n\n\"Yes, I told you they are exclusive just for the Pink Cherry.\"\n\n\"If I buy some of them now, can I add other gemstones later?\"\n\n\"Yes, it wouldn't be hard to add stones.\"\n\n\"I want three. One with an Emerald and a Blue Saphire, One with a Diamond and a Blue Saphire and One with an Emerald and a Diamond. And three locks.\"\n\n\"All right, tell me why though?\"\n\n\"Gio will insist on getting the girls' engagement rings. I'm getting them engagement collars. And one for myself. Gio is our heart who gave us the moon and stars forever and each other. The stones are representative of each of us, Diamond for me, Emerald for Fiona and Blue Sapphire for Tiffany.\"\n\n\"I'm only doing this because you understand the real significance of a permanent collar. But Abi understand, the locks on these are called permanent locks. Once you lock them in place, there is no key to unlock them. The only way to remove them is to cut the lock off.\"\n\nFiona came up with Cheri. Those two had been shopping for more clothes for the girls, while Abi was busy with her mom and Cherry. Cherry attached the stones and put each collar and lock in a jewelry box that said \"jewelry by Ava\"\n\nAbi paid, and they all loaded up with Abi opting to ride with Cheri so they could have some girl talk on the way home and she could get to know the girl.\n\nFifteen\n\n<p align=\"center\">~~~~~</p>\n\nGio and Tiffany arrived home just after Abi, Fiona and Becky. Thankfully, they'd not had any real trouble with Dean and his goon squad. They'd made a few comments and threatened him and the girls again, this time including Becky and Abi, but the creamery's store manager came out to ask if there was a problem and Gio had used the time to leave without having to fight. He'd not even let the encounter upset him until Dean had followed him into the parking lot. \"Enjoy the high life while you can, Gio. I can tell you that things are going to return to normal and soon.\" Gio laughed as he and Tiffany were riding away. When Tiffany asked what was so funny, he responded. \"They say the definition of insanity is to do the same thing over and over the same way while expecting different results. How crazy is Dean if he thinks everything can ever just go back to how they were?\"\n\nTiffany squeezed him around the middle. \"What do you mean?\"\n\n\"Think about it. Even if they can make the total mess with you and your cheerleading friends go away, things can't go back to the way they were. The blackmailing of the squad into being the players and staffs toys is known now. Parents, and other students wouldn't allow it. So that can't go back to how it was and how many of the cheerleaders are still with the guys they were with last week?\"",
        "\"About half. There were a few who made an actual connection.\"\n\n\"So that can't go back to how it was. I was a pushover who didn't stand up for himself. Mostly because it was just easier to go with the flow. But I've changed too. I like who I'm becoming more than I enjoyed being safe. They may get all of you to leave me, but they can't make me afraid to stand up anymore. So that won't go back to how it was. Plus, I don't think they could make you or Abi or Fiona leave me because you all have changed too.\"\n\n\"I have changed. You helped me change. I mean yes, that first night I didn't know that I would ever love you I wanted you and I knew I needed you not just for what your amazing cock could do but the potential to be free of Brock. After I realized you were not just a wonderful lover but a good guy, I started to like you and then you stood up to Brock and Chris and protected Tara and me. That's when I loved you, I think. Now I don't know what I would do without you.\"\n\nGio responded by patting her hands once before putting both hands back on the handlebars. \"Well, if you would just accept my proposal then you'll never have to find out.\"\n\n\"I just need to talk to Abi and Fiona first, Gio. If they really are okay with it and want me, then I'll say yes with a gigantic smile on my face.\"\n\n\"Then lets hurry and get you home and in front of them. Once you say yes, we'll be facing whatever the team is planning together and we are stronger together.\"\n\nNow they were home, and it looked like Abi and Fiona had bought out Pink Cherry's from all the stuff they were unloading from the truck Gio had forgotten he'd bought. It had been parked on the street and he'd just automatically taken his bike for his drive and conversation with Tiffany, forgetting all about the fact that he'd bought a new truck that morning. \"So what did you think of my new truck?\" Gio asked Fiona after he got his helmet off.\n\nFiona looked at him and smiled like the Cheshire cat. \"You mean my new truck? Because I hate to tell ya little brother, but I have the key fob and I'm never giving it back.\"\n\nGio laughed. \"Liked it that much, huh?\"\n\nHis sister nodded. \"Yes, and I'm serious; I'm keeping it. I need a new vehicle and it IS in my color, so that means you must have bought it for me.\"\n\nGio knew he would end up giving in to her. He loved her and loved seeing her happy. \"Then I guess I'll have to give the motorcycle to Becky because her color is black.\"\n\nBecky spoke from behind him. \"You aren't even going to get me to ride on that thing Gio McLoed never.\"\n\nGio laughed until he turned around. Standing beside Becky was a walking wet dream of a woman. \"Hi, there I'm Gio McLoed.\"\n\nThe girl smiled at him, and his heart skipped a beat. She was definitely 'pretty in pink' then he realized what she'd just asked him. \"Are you from the Clan McLoed and four hundred years old?\"\n\nHe laughed and said \"There can be only one.\"\n\nShe laughed and bounced on the balls of her toes. \"Do you have an ancient white Katana in this dwelling, Gio McLeod of the Clan McLeod?\"\n\nImitation his grandfather who had left him the Clan sword, he spoke in a perfectly terrible fake Scottish Borouge \"Nay Lassie, but I ken shoe ye me clan sword. I keep it under me, Kilt.\"\n\nShe laughed again. \"I'm Cheri Pinkston and I think with pickup lines like that I'll stick to the katana.\" Her Georgia accent swept away Gio, and he loved the way she pronounced her own name more Shaw-ree than Sherry.\n\nFiona looked at Tiffany and Abi. \"Dear God, she speaks Gio. You know he's going to want to keep her.\"\n\nAbi smiled, even though she felt a stab of jealousy. This girl spoke Gio's geek language: could she be anymore perfect for him? \"Well, she is already in Pink we don't have a pink woman yet.\"\n\nFiona laughed again \"You want to keep her too!\"\n\nTiffany smiled. \"Well, he is supposed to pop her Cherry in two weeks and we need a replacement for Tara. If we plan to not wear ourselves out we need to find some more outside women.\"\n\nBoth Fiona and Abi looked at her with shock. Tiffany shrugged. \"Don't tell me I'm the only one already getting sore from that monster in his pants.\"\n\nFiona and Abi both shook their head and Abi answered. \"No, and I have only one day of it you two have been going for several. Tiffany is right we need to find him some 'other' sources of relief.\"\n\nTiffany bit her lip. \"That's another thing. Gio asked me to marry him tonight. He said you two wanted to get married to me too is that true?\"\n\nFiona looked at Tiffany. \"Tiffany Anderson, are you asking me to marry you?\"\n\nTiffany could see the tender affection under the laughing tease and decided to go big or go home. She dropped to her knee's and heard the new girl suck in a breath. \"Fiona McLeod, would you do me the great honor of becoming my wife in a polyamory?\"\n\nSeeing how nervous Tiffany was, Fiona was serious and stopped teasing the girl. \"Yes Tiffany Anderson, I would love to marry you.\"\n\nTiffany turned and looked at Abi, tears in her eyes of love, acceptance and joy. Abigail Long, would you be my wife?\n\nAbi put her hand on the girl's cheek \"Yes Tiffany, I will be your wife.\"\n\nFiona waited until Tiffany was on her feet, and she kneeled in front of her. \"Tiffany Anderson, will you marry me and be my wife alongside Abi?\"\n\nTears of acceptance and love ran down Tiffany's face as she said. \"Oh yes, please.\"\n\nThen Fiona turned to Abi. \"Will you Abigail Long marry me in Polyamory alongside Tiffany?\"\n\nAbi again stroke Fiona's face lovingly. \"It would honor me to be your wife Fiona McLeod.\"\n\nFiona stood and glared at Gio. \"It would be nice to have a husband in all this, but no one's asked me yet.\"\n\nGio sighed and looked at their new friend Cheri. \"Do you see what I have to put up with every day? No respect at all.\"\n\nCheri laughed. \"I don't think you speak the truth Highlander.\"\n\nGio sighed, and with fake annoyance walked up to his women. \"I was going to take you someplace special and ask you like I did Tiffany, but I guess the garage will do since everyone else thinks it's okay.\"\n\nHe kneeled before his sister. \"Fiona Brigitte McLoed, I have loved you my whole life, it seems. First as my big sister, then as my lover, now as the woman wanting to mother my yet unconceived children. Please marry me alongside Abi and Tiffany in our Polyamory and be our wife?\"\n\n\"Oh Gio, just when I think you can't get any more perfect, you have to prove me wrong.\" Fiona fell to her knee's and hugged her brother and fianc\u00e9e. \"Yes, a thousand times yes to all of that.\"\n\nGio Kissed her so sweetly that it made Cheri Pinkston long for such a kiss from him. No wonder her grandmother had suggested this guy be the one to show her the delights of romantic pleasure. He really was a master.\n\nGio then turned to Tiffany. \"Now then Tiffany Anderson. I've asked you once before and you told me you needed to talk to Fiona and Abi. You have so now I ask you again. Will you marry me alongside both of them in Polyamory and be my wife?\"\n\nTiffany still crying in Joy. \"Yes Gio McLoed, I will take you as my husband in Polyamory and be your wife.\"\n\nGio stood pulling Fiona up with him and wrapped one arm around Tiffany, delivering to her a kiss as sweet and loving as the one he'd just given Fiona. Then he reached and pulled Abi into their four way hug and kissed her the same way. He looked back at Cheri, making her heart shudder, and smirked. \"As you can see, Cheri Pinkston in my life, there can't be only one. I need to catch 'em all.\"\n\n\"I see that, Gio, but do you have the balls to train the ones you catch?\"\n\nFiona looked at Abi and smirked. \"She really speaks Gio.\"\n\nAbi nodded absently. \"Yes, she seems to be perfect for us. Doesn't she?\"\n\nTiffany, who hadn't officially met the girl yet, said. \"I think we need to get to know her better for certain. It's possible she might be worth being more than a cum dump, but we don't really know her, do we?\"\n\n\"You're right, Tiffany, and that brings up an excellent point for the three of us. We need to have approval of whom Gio is using for relief of his needs outside the five of us. I mean, we know we are all 'clean and safe.' But Gio is about to be worth a lot of money and since he can't use any 'protection' We need to pre-approve his encounters. With a current STD test and proof of birth control. He's ours to take care of now as much as we are his.\"\n\nTiffany and Fiona nodded. \"But that's for later now lets get things inside and then we can have a talk with Cheri before Mia and whoever else gets here.\"\n\nThe girls nodded. Abi pointed to Tiffany and handed her a bag with all the puppy pet gear in it. \"Have you found and read a section on Pet Play in your studies yet, Tiffany?\"\n\nTiffany looked in the bag and blushed. \"Just some basics.\"\n\n\"Well, mom is embracing that life can you take her inside and help her get dressed. The Nylon collar is her 'consideration collar' put it on her. Ear's tail and knee pads only tonight Leash attached to the collar and in her mouth unless you want to lead her into her crate. The crate will be in the den tonight. Then the playroom, from then on. And before you ask. I don't know what room is going to be the playroom. At least for tonight it will be the den.\"\n\n\"Yes, Mistress.\"\n\n\"Are we going to stick to that, then?\"\n\nTiffany nodded. \"For now. I know we are engaged and working together, but someone needs to be in charge. I don't want to do it. I'll keep Gio organized but I don't want to be the leader.\"\n\nWith that, she took the bag and left. \"Come on, Becky, it's time to start getting you ready.\"\n\nBecky hurried after her. Fiona looked at Abi. \"I agree with Fiona someone has to be in charge it's been you, it should remain you. I'll take charge of household and children but you are in charge of the bedroom, us and Gio's daily use women. Mistress.\"\n\nAbi sighed, then smiled. \"Fine then housewife, you take the clothes downstairs and get them put in their proper place.\"\n\n\"I think I'll put them in the laundry first, Mistress. I'd like to know they weren't tried on before I hang them in the closets or put them in drawers.\"\n\n\"Great idea. Get to it and make sure that the food delivery is going to be on time. I reckon we are all going to need lots of energy tonight. Then meet us all in the den.\"\n\nAbi turned to Gio. \"Hey Gio, we are running out of time. Can you carry the bench from the back of Cheri's car into the den put it where you want. Thanks to mom moving the bedroom, we'll have to collar and play in there tonight.\"\n\nGio nodded. \"That metal crate goes where the coffee table is now, at least for tonight. We'll talk about a play room tomorrow morning at breakfast.\"\n\n\"What are you going to do? While I'm doing all this heavy lifting?\"\n\n\"First, I'm going to be a delightful hostess and show our new guest around the house, then I'm going to get her to help me get things ready for tonight. I bought lots of surprises for playing both with mom and the others.\"\n\n\"Sounds good.\"\n\nSixteen\n\n<p align=\"center\">~~~~~</p>\n\nGio sighed. This was part of what it meant to be the man. No wonder most of them only had one wife. He suddenly had three fianc\u00e9es and was still doing all the heavy lifting.\n\nThen he turned around to see Abi leading Cheri into the den from the dining room.\n\n\"Gio, lets sit on the couch and talk the three of us about the next two weeks.\"\n\nGio sat, and Abi sat patting between her for Cheri. \"We won't bite, at least not tonight anyway.\" She winked, and Cheri turned red. Gio laughed.\n\n\"Lets talk about the big fat elephant in the room.\"\n\nGio laughed again, but it was a more nervous laugh. \"It's big, but it ain't an elephant.\"\n\nAbi snorted. \"Jesus Gio. I meant the whole virginity removal thing that's supposed to happen in two weeks.\"\n\n\"What about it?\"\n\nAbi sighed and put her arm around Cheri. \"Look, we shouldn't have made plans for Cheri without her. It's like you me and Cherry took away a large part of learning about sexual relations from her. For all I know, Cheri doesn't want to lose her virginity and neither do you. We don't know what she wants because we don't know her yet.\"\n\nGio thought for a moment. Then hung his head. \"Fuck, how do I keep fucking up the same way every time. I forgot to ask and listen again.\"\n\nAbi laughed. \"That's not true Gio. You asked, and you listened and you answered questions even. Only with the wrong person. It's not Cherry's place to make a plan for Cheri to lose her virginity. It's up to Cheri how she wants to do that. So tell us Cheri, do you even want to lose your cherry right now? Not tonight, but I meant in this time of your life?\"\n\nCheri looked at Abi and smiled. \"I don't know. I mean I came to Granny's because I couldn't be normal at home. Not with my dad being this bigshot preacher there. Just wanting to learn how a normal woman goes about exploring her sexuality and sex and love got me fussed at and called a sinner, slut and worse.\"\n\n\"Then I say we discard the whole Gio takes you out in two weeks and takes your virginity and start over. Let us make you our girlfriend and we help you learn how normal girl's experience learning about sex and becoming a woman.\"\n\nCheri looked at Abi. \"When you say 'Us' who do you mean?\"\n\nAbi sighed. \"We're a Polyamory Cheri we four do everything together so you date all four of us. Three girlfriends and a boyfriend. Together and in smaller groups like right now, its you me and Gei. Maybe later tonight Fiona or Tiffany join us or all of us get together. Or maybe you want to explore girl on girl stuff and ask just one girl to play. Maybe you want to experience a normal date and ask just Gio. We agree to just play and explore. To give you a safe place to explore sexual relationships, ask questions, get answers. You get to experiment and be taught and when the time is right, then together we will all help you lose your cherry.\"\n\nCheri looked thoughtful and then smiled and nodded. \"I like that idea. I like the thought of doing this like a normal girl.\"\n\nGio smiles. \"Well, more normal, most girls don't get to date four people at once.\"\n\n\"I don't care. You guys were so loving and good to each other and I want that. I don't know anyone who has that. If you all will share that kind of loving feelings with me, then I want it.\"\n\nAbi smiled. \"We aren't just willing Cheri, we want to. The girls and I already talked about it and I know Gio well enough to know he's attracted to you, he wants this too.\"\n\nGio nodded and took Cheri's hand and laid it right on top of his growing problem so there was no room left for doubt as he looked in her eyes. \"I really, really do.\"\n\nAbi laughed as Cheri gasped. \"oh, my God, that's huge!\"\n\nAbi put her hand over Cheri's and showed her how to properly rub and squeeze Gio's cock through his pants, getting her own feel while she's at it. \"Oh, he isn't even done getting big yet he's just started rising for us.\"\n\nCheri's eyes got big. \"Really? It gets bigger?\"\n\nBoth Abi and Gio answered. \"Much Bigger.\"\n\nCheri found herself licking her lips, her mouth strangely full of drool. \"Can I see it?\"\n\nGio looked at Abi and raised an eyebrow. \"What?\"\n\nCheri said again. \"I've never seen a dick. I mean yeah in health class and um some porn once I got here, but I've never seen a real one or got to touch one.\"\n\nAbi giggled and asked, \"Which is it Cheri, do you want to see it or touch it?\"\n\nCheri whispered. \"Both please! I want to see it and touch it.\"\n\nGio moaned at the thought of the pretty pink wet dream playing with his big fat cock. Yes, please indeed. Abi was more practical. \"Then we need to move this party downstairs I think.\"\n\nAbi texted Fiona and Tiffany with instructions to hurry and finish up and come downstairs if they wanted to play before dinner with both Gio and the new girlfriend. Gio and Abi and Cheri had arrived and Abi told Gio to go get undressed and sit on the bed.\n\nThen she turned to Cheri. \"A lesson in kissing, Cheri. On any date, your date at some point is going to want to kiss you. It may be the beginning of the night or the end of the night, but the first time every date they should ask. If you say yes, then consent it implied for the rest of that date.\"\n\n\"Why are you giving me a lesson on kissing?\"\n\nAbi stepped close and put her hands on Cheri's waist. \"Because, Cheri, I really want to kiss you right now. May I kiss you?\"\n\n\"Oh! I've never kissed anyone either. Yes, you may kiss me.\"\n\nAnd so Abi pulled her in and when their lips met for the second time in her life, Abi saw her future in a kiss. She saw them; her and Cheri watching Gio pumping into someone while Tiffany and Fiona were kissing the woman Gio was fucking. Cheri setting on Abi's lap they themselves kissing and playing with each other. Abi lost herself in the fantasy until she heard Cheri moan as she realized she was kneading the poor girl's ass and thrusting her tongue in and out of the virgin's freshly kissed mouth. \"Opp's sorry got kinda carried away.\"\n\nCheri smiled. \"That's okay, I really liked that. I really enjoy kissing you and having you play with my ass. But I really want to play with my boyfriend too now please.\"\n\nAbi smiled. \"Gio, come set on the end of the bed. So Cheri can play with you a little.\" Then she looked and saw that Cheri was getting undressed. \"What are you doing?\"\n\nShe looked at Abi. \"I'm getting naked.\"\n\n\"No, you aren't. That's too dangerous tonight, Cheri. Just take off your top and your shorts leave your panties on.\"\n\n\"But..\"\n\nAbi held up a hand. \"Just trust me. I promise we will let you play. We will love you and show you what you have to look forward to. And we will give you pleasure you haven't even thought possible. Keeping those pretty pink panties on is to help keep an accident from happening.\"\n\n\"Allright.\"\n\nGio was setting on the end of the bed, his legs spread, his enormous fat cock standing straight up from watching Abi and Cheri's supper hot make-out session. He wasn't the slightest bit upset that they had gotten lost in each other. The hot virgin had him wanting to lose himself, too.\n\nOnly he wanted to lose himself inside her and he knew that wasn't on the table tonight. Still, he knew Abi, he'd have pleasure, and they'd send Cheri home with so many orgasms she would think about them until they met again.\n\nCheri followed Abi to the edge of the monstrous bed. Sitting before her was the first naked man she'd ever seen. The entire package mesmerized her, and not just Gio's giant cock. Sure, she'd caught glimpses in her life of boys without their shirts or in shorts, but never had she seen an entire male body. While Gio wasn't as sculpted as some men on the book covers or in the magazines she'd seen, he was flesh and blood, muscle and bone in front of her.\n\nShe looked at him and bit her bottom lip. It caused his dick to twitch, which caught her attention. \"It moved!\"\n\nAbi smile. \"It does that. When his cock twitches like that while hard, it means that you excite him. It's a way for us women to know that we are physically and sexually pleasing to the man we are with.\"\n\nCheri blushed and looked at Gio. \"I excite you, me? You find me pleasing?\" She sounded so innocent and unsure. In that moment, Gio wanted to hurt whoever had squashed this girl's self-esteem. \"Yes Cheri, you do and I do. You excite me with your looks and your desire to explore. I find you pleasing not just your body but your thoughts and attitude.\" He scooted to the end of the bed and took her hand in his, pulling her closer until she stood between his legs. Because of her short size, she was perfect for kissing and he wrapped his arm around her waist and closed the distance between them and let his lips settle on hers.\n\nWarm and wet, soft and yet hard, he tasted her, and she responded. Wrapping her arms around him, returning his kisses. Her mouth opening to his gentle, probing tongue. Cheri's moans as much a turn on as her tight little body. Her innocence an aphrodisiac Gio hadn't anticipated. He wanted their Polyamory to teach her and yet he wished she could stay as innocent as she was right now. Willing, eager, yet sweet and shy.",
        "He felt when her arms left from around his neck, her hands running down his back and arms. Rubbing, gently squeezing, feeling his skin and muscle and body. \"So hard,\" she whispered to herself. \"Yet so soft. How can he be both?\"\n\nHis mouth moved from her lips to his favorite spot on a woman that little sensitive place just under their ear where neck and jaw met. He sucked a light kiss there, causing her to shiver as he whispered to her. \"The answer, my sweet little peach, is hard work and good skin care.\" She shivered with his breath and touch, exciting him more as he heard her moan. \"God that felt good.\"\n\nHe kissed her again, this time a bit more forcefully in the same spot. Not a light kiss, but a gentle sucking one. Not hard enough to mark her, but Gio hoped enough to increase her arousal.\n\nCheri let him know he'd succeeded when she tilted her head, giving him open access to the side of her neck and gave a little crying moan of pleasure. At the same time, her hands moved to his back and around to his chest, tracing the muscles she could feel more than see. Her hands rubbing back and forth and with each little sucking kiss, her nails lightly scraped across his skin, not hard enough to mark more of a natural reaction to the pleasurable tingles shoot from her neck through her body.\n\nCheri's little sexy sounds worked on more than Gio. Abi had never in a million years thought watching the love of her life make out with another woman would turn her on. But it was. Her own naked pussy was dripping. Abi didn't know when but at some point in watching Gio and Cheri's innocent little make-out session, she had lost her own clothes.\n\nAbi couldn't stop herself. She wanted to be part of this little experience and moved up behind Cheri, her own tits pressing against the girl's back. Her arms came around to rub up and down, with Cheri across Gio's chest.\n\nWhere Gio was sucking and kissing on the girl's upper neck Abi went for the other spot down low where neck and shoulder met adding her own sucking kisses, light to start with and as she felt Cheri shudder with pleasure at the added sensation a bit harder.\n\nAbi knew when Gio decided to mark the girl's neck because she could feel his kissing pleasure increase. Abi matched him, determined to leave her own love mark on Cheri's neck. Without speaking the two of them kept up the sucking kisses as their lips moved toward each other until they were practically marking the same spot about midway down Cheri's neck there took a moment to kiss each other sucking on the others tongue before going back to their girlfriends sensitized skin.\n\nAbi's hand turned over, and she rubbed and lightly squeeze Cheri's perfect little breasts, her fingers rubbing across the girl's hardening nipples. The response being Cheri's earlier moans turning into passionate little cries. Gio's hand's moved on Cheri's back as he continued to kiss the two women, sometimes one, sometimes the other. His hands came up until the sides of his finger settled over Abi's own nipples and he rubbed tight circles on Cheri's back, pulling her closer and teasing Abi's own nipples and tits by closing his fingers, squeezing her as he rubbed.\n\nCheri was experiencing things she'd never experienced before. Feeling delicious tingles and pleasure she hadn't even imagined were possible as Gio and Abi both kissed and rubbed and sucked on parts of her body.\n\nShe was sandwiched between them, and she was getting lost in the feelings of pleasure. Abi's fingers rubbing across her nipples and kneading her breast cause little lightning like bolts of pleasure shooting into the core of nerves at the top of her pussy. Gio's kisses and sucking on her neck causing a delicious tingle that met up with the bolts of pleasure causing her body to tingle and shudder.\n\nWithout thinking, Cheri started moving so that her panty clad pussy was nestled around Gio's big hard cock. Scrubbing up and down its enormous length. She was so wet it completely soaked her panties through, making the silk feel nonexistent. Each contact with her love button causing a new growing feeling inside her virginal pussy. Every few minutes the lips on hers would change and she went from kissing Gio to Abi, with Gio sucking on her neck. Then from Kissing Abi to Gio with Abi sucking lower on her neck while all the time maintaining contact with her nipples.\n\nCheri felt a need building deep inside her, an aching tightness. The muscles inside her pussy rhythmically clutching and releasing, looking for something, seeking something. She pulled her mouth away from Gio's and chanted breathlessly. \"I need, I need, I need something. I need something.\"\n\nThen Abi's mouth came down on hers, robbing her of the ability to talk. Her girlfriend's tongue thrusting in time with the motion of her needy pussy against Gio's throbbing cock. Gio whispering in her ear. \"We know what you need, Cheri. Just keep rubbing that sweet pussy on my hard dick and you'll get what you need.\"\n\nThe need was building; the pleasure was building. Then another voice came from the side of the bed. \"Is this a private party or can we play too?\"\n\nCheri's head turned to see Fiona and Tiffany watching them and feeling their eyes. She shivered even harder. Without thinking, one of her hands reached for them. \"Love me.\" She begged, and the two girls lost their clothes and moved to join their little group.\n\nGio pulled his mouth away from her skin. \"Lets move this up the bed where we can all get comfortable and love on our girlfriend.\"\n\nHe pulled away from Cheri's pussy, and she cried out from the loss. \"Come up here and climb on Cheri.\" He said as he moved up the bed.\n\nShe wasn't sure what he meant, but she followed him up the bed. Abi behind her. Without their lips and hands on her, Cheri felt so alone, so cold, so lost.\n\nGio reached out to her and pulled her up his body until she was lying on top of him, her legs on either side of his hips, her pussy once again against his hard cock. It was so hard it was pressed against his stomach He kissed her again, his hands moving down to her panty clad ass and diving under her waistband in the back. \"Stay above the cloth, Gio. We promised not to go too fast.\"\n\n\"Fine!\" Gio growled, pulling his hands out and grasping her cheeks over her panties. Showing her how to move in this position, so she was once again rubbing against his hard cock.\n\nThe position change causing him to hit her in different spots than she had standing between his legs. It pressed tighter her against his hard cock, causing the throbbing need to increase. Those delicious tingles she felt more than saw were back and Abi settled against her back again. The girl's own nipples as hard as pebbles pressing against Cheri's back. Her hands coming back to Cheri's nipples and she leaned over the girl. \"Keep moving up and down Gio's cock, but set up so the rest of us can love on you too.\"\n\nCheri did and this new angle brought with it new feelings. She saw Fiona come toward her on her left and Tiffany on her right. She looked at Fiona and reached for her. \"Kiss me Fiona.\"\n\nHer red headed girlfriend didn't even hesitate before taking Cheri's lips, her tongue diving and twirling inside Cheri's mouth, upping the tingles.\n\nAbi's hands came back to the girl's tits and Gio added his over hers. Together they started rolling Cheri's nipples between their fingers, lightly pinching and pulling. The tiny lightning bolts of earlier became larger, more intense, and faster. Cheri's mouth came off Fiona's in a gasp of unexpert pleasure and the girl started sucking on her neck, adding her mark to Cheri.\n\nTiffany watched for a second and then turned Cheri's head and gave the innocent girl her own kiss. When Cheri responded by following Tiffany's tongue back into Tiffany's mouth, the cheerleader locked her lips and sucked on Cheri's tongue like it was a hard cock. Cheri was groaning and moaning her pleasure into Tiffany's mouth.\n\nThat pressure was building along with the pleasure again as Cheri's four lovers showed her a physical love she'd never even imagined existed. This was what her father taught was a sin?\n\nHe called this evil and wrong? Cheri felt loved and right. Like she was catching a tiny glimpse of the God of the universe at this moment and time. Feeling him love her through the hands and mouths of her lovers. Feeling his touch through Gio's big fat cock rubbing against her pussy.\n\nThat need for something more building, along with the lightning bolts and tingles. Cheri knew she was going to explode with something, but she didn't know what to call it. Whatever it was, building and building. Then she felt as Abi took Gio's hands off her tits and settled them on her hips. Abi herself moved until she was pressed up against Cheri's hip, straddling one of Gio's thighs. Cheri could feel as Abi moved her own pussy against both Gio's thing and Cheri's hip. Then Abi's head came around her side and her mouth took Cheri's tit in her mouth and she closed her lips around Cheri's hard nipple and started sucking.\n\nCheri's need exploded into a whole deeper level and her head tore free of Tiffany's sucking mouth as Cheri arched into Abi's mouth. Cheri could hear someone keening in pleasure but she was so close to becoming something she didn't realize the sound was her.\n\nTiffany's lips attached themselves to the other nipple and Fiona increased the tempo and pressure of her own sucking on Cheri's neck and Cheri's keen became a scream of pleasure as she exploded into colors and a feeling so good she thought it might kill her. \"OH MYGOD! OH GOD, THAT IS SO GOOD, SO GOOD! PLEASE DON'T STOP! NONE OF YOU STOP, PLEASE! GOD, OH GOD, OH GOD! SO GOOD, SO MUCH! GIVE ME MORE! NEVER STOP! PLEASE, PLEASE, PLEASE!\"\n\nThe feeling just kept rolling over her again and again, like the ocean crashing against the shore. Pleasure would explode and then dim just a hair, then explode again. Cheri lost the ability to talk, and she just screamed in time to the explosions. \"AIE, AIE, AIE, AIE!\"\n\nTears were running down her face as she got lost in the feeling of intense pleasure. She was sure that she was feeling the face of God's love at the hands of her friends and lovers, and she never wanted it to end.\n\nAbi came at the same time as their new girlfriend, watching the girl break apart as Cheri's first orgasm overwhelmed her had triggered one for Abi. She soaked Gio's thigh and Cheri's hip as her cum shot out of her pussy.\n\nGio lost it and sprayed cum everywhere covering Cheri's and Fiona's faces and Cheri's neck, tit's, Abi and Tiffany's faces and then Cheri's cute little belly button and panties. Watching and listening to the innocent girl cum so hard and so long had triggered his own massive cum.\n\nFor the second time that day, his cock softened after only one cum. With no prostate milking, he had spent everything he had to give right now. Cheri collapsed on him and sobbed. Now Gio worried. Had he pushed too hard, too fast? Had they messed up yet again? And then he caught what the girl on top of him was saying. \"Why, why, would they say that's evil? Why would they deny God wanted us to experience that? I don't understand, why lie about something so wonderful?\"\n\n\"I don't know Cheri. I think they just hate so big they can't feel this level of love and exist. Or they're afraid they couldn't control people if they loved each other like this. But you're right, this isn't evil. It's love, plain and simple. Thank you for letting us love you.\"\n\nCheri grabbed his face and kissed him and then Abi and then Fiona and finally Tiffany. She didn't stop for several minutes. Then she just collapsed onto the bed beside and half on top of Gio. \"Thank you, all of you. I want more of that, but not tonight. Tonight I need to process this feeling, to bask in it and try to make sense of everything. Tonight I need...\"\n\nAbi laughed, \"A shower, all of us need a shower. Gio covered us all in his cum.\"\n\nAbi sent Tiffany and Cheri to shower in the Jack and Jill bathroom upstairs. They found a pair of panties that we only slightly big for Cheri and off the two girls went.\n\nFiona went to use the upstairs Master bath. Abi and Gio headed to the shower in the bath downstairs. Abi insisted they all hurry as Mia and Cecilia were due to arrive soon. Tiffany let them know Cecilia had asked Greg Anderson to attend as well, and that Tara was coming with him. Fiona looked at Gio and laughed. \"This is why I ordered for ten. This house is never just us anymore.\"\n\nThey all disbursed to get clean fun time is over it was time to look towards work again for now. But Abi couldn't wait for after work when collars would be given and they could all love on each other again. Yesterday afternoon, she couldn't even imagine what she was experiencing today. Yet it all felt normal to her, like this was the life she was destined to have. She just prayed she could hold on to it."
    ],
    "authorname": "PreacherPorn",
    "tags": [
        "pet play",
        "bdsm",
        "spanking",
        "orgy",
        "humiliation",
        "polyamours polyamory",
        "incest taboo",
        "breeding",
        "brother sister",
        "mother daughter"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/geeks-big-break-pt-09"
}