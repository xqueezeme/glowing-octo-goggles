{
    "title": "A Man Among Women",
    "pages": [
        "My wife asked me to write a story that dealt with issues that she is currently facing in corporate America while attempting to lead a group in a dynamically new business direction. In essence, she is the Bob character in that regard. She also asked me to, \"clean it up\" so that she could share it with some of her direct reports. Sorry, there is no sex here; while it is ultimately romantic in the end, it fits better in the, \"non-erotic\" category. The story was also inspired by a job interview I once had with a company much like the one described.\n\n*\n\n\"Bob, I've really enjoyed getting to know you. Relax, you'll get to the next interview, you passed. You are head and shoulders above anyone else I've interviewed at this career seminar. I've been doing this for a few years and I'm certain that you will get lots of second interviews and several offers from other companies. You've done your homework as it regards my company's business. We're off the clock here; this is not a recruiter's trick. I need to chat with you man to man before you come up to HQ for the final interviews. How about a beer? I'm having one.\"\n\nThis had never happened before in a job interview. Certainly it could be a trick, but Sam, the HR Director for this particular company, seemed like a pretty straight guy. He had time to linger; this was the last of the five job interviews he had scheduled for the day. He felt good about his performance. He had a good resume and had studied several books on interview techniques. The manager of the career seminar company had caught him in the hall of the hotel and given him positive feedback. \n\nIn less than sixty days he would be a civilian after more years than he had originally planned in the US Army. He had been nervous when he first decided to get out of the service. He had gone to another of these career weekends with a different company and had been less successful. That company had pushed him at several companies that he just didn't like and wasn't a fit with; it had shown in his interviews and he had gotten no second interviews. In the interim he had learned the game and honed his skills. He'd spent more than he should have on a new wardrobe for the interviews but now he looked like a business man, not a young Army officer desperate to find a job.\n\nHe had a BS, Magna Cum Laude and an MBA. He'd gotten much of his education while on active duty thanks to the Degree Completion program and night school. Originally he had dropped out of college after his second year and joined the Army. His grades had been fine; he had simply been bored and broke. He knew he needed a degree to amount to anything and also knew the military could help him fund it. \n\nHe had stayed in longer than he had planned. Without a degree, Army flight training was the only ticket to being an officer, albeit a Warrant Officer. It required a longer commitment. The Army was also the only service in which he could become a pilot without a four year degree. Once he had completed his bachelors, he applied for and was awarded a commission as a Second Lieutenant. He had never expected to see combat; then the world changed.\n\nNow at thirty with two combat tours and ten years active service under his belt as an Army Aviator, it was time to move on. He had gotten married between combat tours, and then divorced after he returned from his second overseas tour. \n\nThe job market could be tough; without a college education, he was better off staying in the Army. Now he had the educational requirements and he was ready to move on to the next phase of his life. The Army just didn't excite him anymore and the pay left a lot to be desired. He knew he wasn't excited about another combat tour. He'd had good assignments and up until the last year or so had seriously considered the Army as a career. Now, just as most of his peers were doing, it was time to move on.\n\nHe had learned to fly several types of helicopters both cargo/troop carriers and attack helicopters. His last combat tour had been as the commander of a medivac or air ambulance detachment. He had performed well in combat and had received top efficiency reports. As a, \"reward\" he guessed, or maybe an attempt to entice him to stay, he had received a company command when he returned stateside. As a Captain, he was commanding a division Headquarters and Headquarters Company. If he stayed in, he would probably go to the Advanced Course and then become a staff officer for the next decade. The prospects didn't motivate him to stay.\n\n\"Bob, who else are you seriously considering?\"\n\nWell, let's see, Polatron, TIC, a medical company, an industrial refractory manufacturer, a tire company and a paper company.\"\n\n\"You're better than TIC, you'll hate Polatron in New Jersey, you are the wrong guy for the tire company, I can't see you selling corrugated containers, and I don't know anything about refractories---furnace linings? The medical company is a great one, you'll like them a lot when you go up to their general office and you would do well there. Accept all of the interview trips, make your own call, and then call me and I'll get you up for interviews within a day or two of your call. Come see us before you accept an offer. Unless you puke on the CEO, you're sure to get an offer from us. We need people like you, that is to say, we needs people who have dicks.\"\n\n\"Pardon me?\"\n\n\"Bob, ninety percent of our management level people are women; we are actually in some trouble both with the feds and with law suits because we don't hire or retain enough men. We have several former male employees who have charged us with sexual harassment. Let me give you the bad news. What do we make again?\"\n\n\"Women's products, cosmetics, makeup, jewelry, intimate apparel and casual clothing.\"\n\n\"Exactly! And who do women tend to buy those products from? Other women! And do they want to buy them from ugly women? Not on your life! When you go to the mall and see one of those cute little babes where our products are sold, half the time you are seeing a future manager. In the past, all management hires started there---to learn the business from the ground floor.\"\n\n\"I see.\"\n\n\"Needless to say it has been a dismal failure when we try it with a male. Women shoppers avoid them like the plague---men shoppers assume they're gay. Most guys tell us to take a hike before we ever get a chance to make an offer. College hires, males that is, won't even talk to us. Those that survive the first few months get sick and tired of it---or their wives threaten to divorce them. This time I suggested we look toward the junior military officer arena, find someone with more maturity and toughness.\"\n\n\"Sam, I don't think...\"\n\n\"Work with me, Bob. You currently command an H&H Company----how many people?\n\n\"There are 276 soldiers in my company and another 53 officers.\"\n\n\"How many women?\"\n\n\"More than half of the enlisted, almost half of the officers---my XO and first shirt are women as are virtually all of my company staff.\"\n\n\"What'd you do on your last combat tour---medivac detachment commander? How many women?\"\n\n\"Most of my pilots and crew members were female.\"\n\n\"Between combat tours?\"\n\n\"Flight instructor, which led to being a section leader with a dozen flight instructors under me.\"\n\n\"How many women?\"\n\n\"Half, more or less.\"\n\n\"Your first tour?\"\n\n\"Ah, that might just still be a bit classified but suffice to say there weren't any women involved; we were involved in strict combat operations supporting folks that you only know by their first names.\"\n\n\"Okay, so nobody is perfect. The point is you have more experience, by far, working with, commanding---dealing with women in the work place---than most junior military officers. Hell, you've even had a female rating officer. It occurs to me that you would not continue to have received assignments with a heavy female component if you hadn't shown those above you that you knew how to handle it. Did you ever date any of them?\"\n\n\"The Army rule is one grade above or below and never in the chain of command. I never had any sort of a relationship with anyone remotely in my chain of command or even the same overall command. I dated some female officers but never anyone that I worked with.\"\n\n\"I'm getting personal now, illegal questions if you wanted to press the issue. What about your marriage and divorce?\"\n\n\"I came back from combat lonely for female companionship and married one of the first cute girls I went out with. It was impetuous and irrational on both of our parts. We stayed together a little over a year; we're still good friends, just not husband and wife.\"\n\n\"That makes you really special\u2014a guy who is still friends with his ex wife.\"\n\n\"Sam, I know a little about sales; I did some selling way back when I was in college before the Army but I don't have any real experience...\"\n\n\"Not an issue! We don't really sell, we merchandise. I'll give you a copy of the top secret company sales manual and you'll figure it out pretty quickly. Take some time to go visit a few malls and department stores---there's one a block from this hotel. Go buy some girlie products. Talk to our people on the floor; get a real flavor for who we are. We advertise and merchandise. The ads sell a look and a feeling---get's the customer to our part of the store. The sales associates on the store floor demonstrate and in-service the products, convincing the buyer that she too can enjoy that look and that feeling.\"\n\n\"Okay.\"\n\n\"See, I told you we didn't really sell, if we did, you'd be a lot more enthused at my pathetic selling job! Look, if you're the guy I think you are you're the only one that is going to fit. When you come up to the home office, you're going to interview backwards---your first interview will be with the Chairman and founder. If you win that one---and I'll help you prepare---no one else is going to have the nerve to shoot you down. We're not talking an entry level job here, Bob---which is what everyone else you're talking to is talking about---we're talking a direct step into pretty senior middle management. I'm not going to talk to you about money at this stage but I assure you it will be competitive. By the way, the home office is in the Sun Belt not the frozen northlands. It's a great city with a fantastic quality of life.\"\n\n\"Okay, Sam, now tell me the bad news.\"\n\n\"The bad news is you will be one of a hand full of straight men in a company of close to 10,000 women. PMS is a way of life. They resent any intrusion into their girl's club. As I told you, we do not hire unattractive women; after all, most start out essentially 'modeling' the products. They will flirt shamelessly, use every trick in their feminine handbag to knock you off course, connive, and conspire behind your back---pretty much typical corporate America, except that they are universally bright, ambitious and attractive women. It will be, possibly, your greatest challenge, other than leading people in combat. Have I sold you yet?\"\n\n\"Ah...\"\n\n\"Don't even think about answering until you get though with the other companies and spend a couple of days with us. Please don't blow me off, here---give me your word as an officer and a gentleman that you will not accept another offer until we make ours. Fair enough?\"\n\n\"Fair enough, Sam.\"\n\n\"Great! Listen, I assume you're staying over, unless you've got something else planned, let me buy you dinner and on the way we might just stop by the mall.\"\n\nBob agreed. The two men walked over to the upscale mall and made a bee line for the appropriate area. It was not an area of a store that Bob had ever really visited. There were three young women working with female customers and a fourth, quite obviously the supervisor, helping a male customer.\n\nAll four were stunningly attractive; the supervisor even more so, tall, leggy, fashionable, confident and just plain gorgeous. Sam took the lead.\n\n\"Excuse me, Miss.\"\n\n\"Mindy!\" She said hitting them with a million dollar smile. \"How can I help you gentlemen?\"\n\n\"We've been on a weekend business trip and both need to buy something for our significant others to make up for it.\"\n\nMindy was very smooth, not really flirtatious but certainly not cool or distant. She treated neither of the men as if they were idiots. She ascertained how much the men wanted to spend without being too blatant. It was, Bob, thought to himself, a very pleasant sales experience. Bob had to fib a little as he attempted to describe his, \"girl friend\" since he didn't really have one. In the end, Mindy helped the two men pick very suitable and very nice gifts.\n\n\"Bob, I'll take care of this if you'll get dinner---fair enough?\"\n\n\"Sounds good Sam.\"\n\nAs they walked away, Sam spoke. \"I was just playing the part---you don't have to buy dinner.\"\n\n\"What are you planning to do with your new purchases?\"\n\n\"Well, the one for your nonexistent girl friend I'll turn in for credit as part of our secret shopper program, the other I'll give to my wife. Are you impressed with Mindy?\"\n\n\"Absolutely, that was a very pleasant experience; she never made me feel uncomfortable as a man shopping in a women's department.\"\n\n\"There are literally hundred of Mindys across the country; she is a cut above average and probably close to promotion.\"\n\nThe two men walked a couple of blocks to a very upscale steak house to enjoy a fabulous dinner and a couple of bottles of wine that were above Bob's normal fare.\n\n\"Look, Bob, working in an environment surrounded by bright and attractive women can be extremely distracting. Bluntly, some of them will make it very clear that they want to fuck you. In other cases, you're in serious danger of falling in love.\"\n\n\"How have you dealt with it?\"\n\n\"My advice is simple, don't shit where you eat. Never, ever get tempted into a fling within the company, even if it is with a peer and totally within the rules. I did fall down on the other part; I fell in love years ago and married a woman in the company. I'm a pretty average looking guy and she's a knockout but we are best friends and madly in love. She saw past my spare tire and I saw past her looks and we've been happily married for ten years and have two children.\"\n\nSam paused. \"It's funny, the founder---I helped sell her on this idea, the idea of an out of the ordinary hire---told me to she thought I should look for someone as average looking as I was. I convinced her that no, we'd made that mistake in the past. Bob, you're a damned fine looking guy and if you come to work for us you will get a lot of attention. My gut tells me you can deal with it. You're not going to be pushed around by a very attractive woman, no matter how bright she is just because she is a female.\"\n\n\"Sam, I'm not sure that men ever stop having lascivious thoughts about attractive women they work with; my executive officer is a living doll, and under different circumstances, I'd ask her out but I never have and never would. It's a real adjustment at first, working in a female saturated environment; I guess I've been successful because I treat them like, 'regular people', so to speak. I refrain from patting them on the butt when they do a good job and, of course you have to be very careful about any sort of touching that might be deemed inappropriate. On the other hand, I've found women I've worked with, for the most part, to be more open and candid---more willing to share their gut instincts---than a lot of men. They're more inclined to try to please you by doing a good job than by telling you what they think you want to hear. Once you give them the ball, so to speak, once they sensed you trust them, they grow into increased responsibility quicker than many men do.\"\n\n\"Sam, let me tell a quick war story. I went on a night medivac on my last combat assignment, well, actually, a number of them, but this one was different. There was a Special Forces soldier down there bleeding out and they were out of IVs. We were taking sporadic enemy fire; we didn't know the terrain. I was the senior pilot, the aircraft commander. My pilot was a young female LT, cute as they come, blond, athletic, big blue eyes and a smile to die for. She was also one damned fine pilot. She was probably a month away from making aircraft commander. She had all the technical skills but seemed to lack confidence in her abilities. We got cleared in and I said, 'you've got the aircraft', and I thought her jaw would drop off. I said, 'Megan, you've made this kind of approach a hundred times before and you're an excellent night pilot. I could take a bullet in the head in a couple of seconds and then you would have to make this extraction without me or that kid is going to die. Like they say in the commercial, just do it. You're ready. If you weren't, I wouldn't have given you the controls. Do you trust me?' She nodded. 'Well I trust you to make this extraction, start your approach.' She never wavered, executed the mission perfectly and within five minutes we were pumping fluids into that kid's body in three different places to try to hold on to him. He made it---made a full recovery.\"\n\n\"We didn't say much on the flight back to base. After we dropped the kid off at the hospital and returned to our base, I got a radio call from the hospital that he was stable and in surgery having his arteries closed up and the prognosis was excellent. I turned to Megan and said, 'you just saved a brave soldier's life; you should feel very good about that.' She said, 'I was so damned scared.' 'Yea, well join the club, I'm always scared when people are trying to kill me and I have an important job to do, scared I'll screw up, scared I'll fail that kid on the ground and yes, scared I'll get my ass shot off. Fear is unavoidable; it's how you respond---how you perform---when you're very close to pissing in your pants. It'll only be a little easier next time---you'll still be scared shitless but from what you just showed me you're ready to be in charge and this will not be the last boy you bring back to his loved ones. Are you ready to be an aircraft commander, Lieutenant?' 'Yes, sir.' She replied. 'That's the final test question Megan! The other senior pilots were sure you were ready but they weren't sure you knew you were ready. Obviously you are. Congratulations!' She went on to be a very good medivac pilot and saved a lot of lives. I recommended her for platoon leader when I left country and the powers that be agreed.\"\n\nBob paused, and then continued. \"Sorry for the long war story, Sam. Megan could have been named George and I would have handled it the same way. Sure, the occasional unexpected hug or the moist eyes are not something you deal with when working with men. Hell, I learned to become an equal opportunity hugger, male or female, when they came back looking beat up, they got a hug. Women tend to wear their feelings more outwardly than guys do---but that is not necessarily a negative. They're almost always easier to read, more inclined to ask when they don't understand and don't tend to bull through a lack of confidence with a lot of testosterone driven machismo when they're unsure of their abilities. They're as brave as any man out there; when they tell you that they can handle something, you can generally take it to the bank.\"\n\n\"Oh, you're an HR VP's dream come true! Save that anecdote for our founder. She was in the Women's Army Corps in the last war. She'll get it and she'll love it.\"\n\nThe next morning Sam gave Bob a ride to the airport as both men headed for home. Bob got additional interviews from all of the companies he had expected to. A couple days after returning home, he received a package from Sam with the company sales manual, org chart, backgrounds on key executives and a special credit card with instructions to visit the company's locations as he was traveling and buy something which he could send back later with one of the enclosed UPS labels.",
        "Sam's prognosis of Bob's experiences with each company ended up being right on target. Within a couple of weeks he had visited each company and received offers. The medical company was the only one he took seriously; he liked the people, he liked the culture and their offer was competitive, no worse than a break even over his current compensation with the expectation of rapid improvement. \n\nHe called Sam and arranged a couple of days of leave to visit the home office. He had studied the material Sam has provided and had visited their sales locations in a number of cities. Sam had sent him additional material on the people who would interview with to include specific, \"hot buttons\".\n\nSo it was that he flew into the Sun Belt city on Sunday evening; Sam met him at the airport and drove him back to his hotel. The two men shared dinner as Sam gave Bob the final run down on the interview process.\n\nA little after 9:00 AM on Monday morning, Sam escorted him into the chairman's office, and made the introductions. Bob knew she was in her middle sixties but she was still a strikingly attractive woman. He ended up spending the next three hours with her. Toward the end, they were exchanging humorous war stories from their respective military service. Bob found her to be one of the most impressive people he had ever met. They clicked.\n\n\"Bob, we're going to go to lunch with several of my direct reports, some of whom will spend time with you this afternoon. I'm guilty of a bit of subterfuge here; I'm thinking of hiring you for a consulting gig, or so I've let on. If things work out well, we'll get down to the details---just you and me---tomorrow. Work with me on this one, okay?\"\n\n\"You've got it.\"\n\nThe four women who joined them for lunch, all in their forties, were every bit as stunning and sharp as their boss was. He knew he was being checked out and evaluated on several levels. The probing became more intense as the afternoon interviews progressed. Be yourself, Bob and let the chips fall. The following day he would interview with several of the Area Managers who were flying in for a conference. There were four Area Managers---all women---with Regions, Districts, Sectors, and smaller units under them. At the end of the day he rejoined the founder and Sam.\n\n\"You did very well, Bob, they were all impressed. This evening you're going to join me for dinner and meet the four area managers. They are all responsible for the key P&L centers of the corporation. One or more of the folks you met with today may join us and Sam will be joining us also. I'm going to turn you back over to Sam so that you can go freshen up. We'll see you again in a couple of hours.\"\n\nSam and Bob chatted on the way back to his hotel. \"Bob, while they were all very impressed, remember, they're seeing you as a consultant who comes and then goes---not one of them. That was our dear founder's idea to make you acceptable before they discover that you're one of them, so to speak. Tonight a dinner, the four area managers will be checking you out like hawks; keep your guard up.\"\n\nThe four women in question were closer to Bob in age. All were stunning and there wasn't a fool in the bunch. He listened and occasionally asked thoughtful questions. He intentionally changed seats a couple of times so that he could spend one on one time with each of them. He was an outsider and a man but none of them missed the way the chairman interacted with him. They found themselves liking him but weren't ready to turn their backs on him just yet.\n\nThe next morning he had breakfast early at the hotel with Sam. \"How am I doing coach?\"\n\n\"Even better than I expected. Today you're going to have brief one on ones with the four of them followed by lunch---a long lunch---with the chairman and then we'll get you out of here.\"\n\nDuring the several hours of interviews he was tested, tested on his business acumen, tested on his knowledge of this company and tested as a man. A couple of them flirted; he neither bit nor got uncomfortable. He knew he was being evaluated for a job not a fuck, although any of the four women would have been extremely interesting pursuits. They were stunningly attractive, articulate, vivacious, charming and bright. Then it was time for lunch.\n\n\"What keeps you up at night as it regards this company?\" He asked pointedly, taking charge of his final interview.\n\n\"I'll gladly share that with you, but I'd be interested in knowing what you think keeps me up at night.\"\n\nAnd so Bob told her. Their customer base was boomer women; they were getting older. There market center was in malls and department stores; people were moving away from those traditional shopping venues to big box stores, drug chains, catalogue sales and the internet. While they had no competition at their price point, they were being nicked at from above and below and seriously needed to consider horizontal integration into an economy line and a super premium offering. Men snuck in and used their wives' skin care products---but would never buy them for themselves. Why not a men's line of products? Their marketing dollars were too concentrated on their existing customer base who had used their products for years, liked them and weren't likely to be spurred into buying them by a slick ad campaign since they already were committed customers. \n\nTheir daughters, on the other hand saw the companies fare as, old fashioned' or 'what my mom uses'. The labor costs associated with their store based merchandizing were high and most of their existing customers who bought in those stores didn't need the amount of service they were offered to keep buying. There was no exclusivity---every department store had their products and the company paid the stores for the right to be there. Why not turn it around? Customers came to a particular store often because the company's products were available there---and invariably bought something else. The company's line was the draw; make it hard to get and a competitive draw. Develop a limited economy line for the drug chains and big boxes while also developing a super premium and expensive line to challenge the higher price point. And that was just the tip of the iceberg.\n\n\"Well, you hit all of the things that keep me up at night and a couple I hadn't even thought of. Would you consider putting this into a marketing plan, get it down on paper, so we can see where we need to move?\"\n\n\"I already have. It's bare bones, it needs to be fleshed out and given life but the essence is there. I have a copy here. It's yours if you'd like it.\"\n\n\"Aren't you afraid I'll steal your ideas?\" The chairman said with a twinkle in her eyes.\n\n\"Hardly! That would be unethical and that's not the way you do business.\"\n\nThe chairman spent quite a while reviewing Bob's marketing plan. It was a roadmap for reorganization and far more detailed than Bob had indicated. Brilliant, humble...damn!\n\n\"I'll be right back; make yourself comfortable.\" The chairman said, returning fifteen minutes later with Sam in tow.\n\n\"Okay, Bob, it's crunch time. I had planned to bring you in as a , 'Special Assistant to the Chairman', a quasi-consultant, give you a few months to get your sea legs and then plug you in to Mary's job as Area Manager in Dallas. Mary's due for promotion; she's pretty damned sharp. Now I want to spin something a little different in your direction.\"\n\nThe chairman continued. \"You still need to get out and meet everyone, at least all of the managers. You've demonstrated that you understand this company and its markets better than many of our managers---and every real consultant we've ever hired. You have uncanny analytical skills. We've spent millions on consultants and not gotten anything as valuable as you just handed me. Let's go with the canard of, 'consultant' reporting to me for a month or so. First month you hit the road. Second month you put together a staff, from inside and outside, put together a working group, expand it to a task force and then take your 'bones' and turn them into a executable plan---detailed. At that time, I intend to promote you to Senior Vice President of, oh, how about Strategic Development---reporting to me and sitting on the executive committee. Clear it with me first, but plan to bring people up here from the field that impress you. You also should consider outside resources. Are you still with me?\"\n\nHad he not been a combat trained officer, his head would have been spinning. This was unfolding beyond anything Bob had expected.\n\n\"Not to digress, but I've got a good friend, one of my MBA professors who is getting ready to take a sabbatical. I think he would be very useful. Dr. Fuller is his name; he's written a couple of well received books on this type of business reorg.\" Bob said.\n\n\"You know Fuller? Well of course you do. I'd be tickled. I've read his most recent book. We're of the same mind. Make it happen. By the way, when can you start?\"\n\n\"I have terminal leave coming and my boss is very understanding. He's selected my successor and my command would technically be up in two weeks anyway. We can move up the change-of-command a few days.\"\n\n\"Who do you report to, anyway?\"\n\n\"On paper I report to the Division commander, a two star general but in real life I 'work' for the Division Executive Officer, a full colonel.\"\n\n\"Oh, and now I suppose you'd like to know how we're going to compensate you for your efforts? Here's what I'm thinking and Sam is with me on this. Pardon the pen and ink changes, we'll get it retyped before you sign it. Our benefits are extremely competitive and this would include stock options, car and all the crap that usually goes with a job at this level. There's the bottom line, before profit sharing, 401K matching and stock options. Oh, and by the way, as sweet as ma'am is, my name is Virginia and my friend and most people call me Ginnie.\"\n\nThe amount before Bob's eyes was four times the starting offers the other companies had made for an entry level manager. It went up substantially after three months. He was not going to be entry level; he was going to be at the center of change---an agent of change. It was all he could do to keep from saying, yes!\n\n\"Ginnie, my inclination is to say yes, on the spot. Your offer is both flattering and generous. I can think of no reason why I would refuse it. This is a huge task before us. I'd ask your indulgence to let me sleep on it and be sure in my mind and my heart that I won't disappoint you.\"\n\n\"Ah, you said us! That's what I needed to hear. So be it. Sam will expect your call before noon tomorrow. Now, as much as I have thoroughly enjoyed this, I actually have other work to do and irritating stock holders to meet with. Get out of here guys!\" Ginnie said, giving Bob an almost motherly hug before he left. Sam drove Bob back to the airport.\n\n\"What have you gotten me into evil, HR person!\" Bob quipped as they drove to the airport.\n\n\"Look Bob, no one has wowed the old lady like you did in my memory. And believe it or not, there wasn't a single negative comment from the other eight or so women you interviewed with---and even female hires don't achieve that level of perfection. She's convinced that you're the real deal---as I was from the first time I met you. I didn't oversell you, you sold yourself. Get ready for a wild ride. You are going to say yes, aren't you?\"\n\n\"In all probability. Look, if you don't hear from me by noon tomorrow, it's a yes. Is that fair enough?\"\n\nBob got his release from active duty within two weeks and started his new job a couple of days later while still technically on terminal leave.\n\nHe spent the next few weeks under cover of his, \"consulting contract\" traveling around the country meeting with each of the four area managers or VPs. Each would have brought all of her region and, in some cases, district managers in for a staff meeting which he attended. It was at one of the meetings, in Dallas, Texas, that he heard a familiar voice call to him from across the office.\n\n\"Captain!\"\n\nHe almost didn't recognize her. \"Lieutenant? Megan? Small world!\"\n\nShe almost ran across the office to give him a big hug to the fascination of the other female executives present. They broke the embrace and he looked at her closely. Yep, she fit here with all of these other stunningly attractive---and smart---women.\n\n\"Well, Lieutenant, you certainly do clean up pretty well. I had no idea you were working here.\"\n\n\"Captain, I...\"\n\n\"It's Bob, Megan just Bob. I'm out of the Army and you certainly have been for a while.\"\n\nThe two old friends chatted for a few minutes and then split up to attend to other things. Megan was a recently promoted region manager; her boss, who was a VP, motioned her over to her office and closed the door behind them.\n\n\"Where do you know Bob from, Megan?\"\n\n\"He was my commander on the other side of the world in a very depressing little country when I was flying medivac in the Army.\"\n\n\"Did you and he...\"\n\n\"Oh heavens no! Not that I wouldn't have in a heart beat. But he wouldn't have. With all due respect, he was the greatest boss I ever had---probably ever will have. I wouldn't be who I am today without him. Hell, I probably wouldn't be alive today. Have we got a few minutes?\"\n\n\"Sure, sit down, let's chat. Tell me about Bob.\"\n\n\"Mary, in a lifetime, you meet a few people that change your life, that really make an impact on what you become and who you are. It could be a favorite teacher or professor, a business mentor, whatever. A few years ago, we all recognized that the world changed. A bunch of bright eyed and busy tailed kids, mostly women, who were still caught up in the novelty of being shit hot Army Aviators got sent to a very bad place to accomplish a very important mission---saving lives. None of us ever expected to see combat or be shot at---or see kids not much younger than we were half dead or worse. All of our youthful over confidence evaporated.\"\n\n\"We didn't have anything approaching unit integrity; we were just a disorganized, screwed up gaggle. Our original commander from stateside, a woman, I'm sorry to say, couldn't handle the stress and ended up being relieved of command almost immediately. And then one day, that tall drink of water slipped into our camp and did what he had been sent there to do---he took command. We were terrified of him at first. He'd been in combat before, flying covert missions in another combat operation. He was no nonsense. He expected us to act like officers and look like officers. He instituted a crash training regimen that was tougher than anything we had ever done before. He made us re-qualify with our weapons, do physical training every day, practice hand to hand combat and fly training missions in every spare moment. He relieved some people and promoted others. A little over six weeks later, we deployed with the main assault force and set up a primitive field base near the border.\"\n\n\"No hot showers, no flush toilets, no PX and other than a company of Marines out on the perimeter, not a hell of a lot of security. We dug fighting holes---he never liked the term fox hole---and learned how to defend our perimeter. There was a field hospital about fifty miles to our rear, just across the border. And very quickly, we got called into action to do our job---evacuating wounded soldiers and Marines. We got shot at some times; several were wounded. One pilot and two crew members were killed. And it didn't matter what time of the day or night we went out or came back, there was, 'the Captain', to see us off, to check on us when we came back or right there next to us in that helicopter. And when the really bad missions came along, when the weather was crap and it was dark and there were bad guys shooting, he was right there, sitting in the left seat, leading from the front like great commanders tend to do. And late at night when a couple of young pilots would get lost and scared returning from the hospital, he was there on the radio, always calm but always in command, bringing his babies home to safety. When a chopper went down, you always knew 'the Captain' would come looking for you and take you home---and he always did. And, man or woman, when you came back from that mission that left you devastated because your guy didn't make it---you didn't get to him in time, you didn't get him to the hospital soon enough---'the Captain' was there with the right words and a hug when you desperately needed it.\" \n\n\"He flew with me one night before I became an Aircraft Commander. I assumed he'd take the controls and make the extraction. It was night, we were taking fire and he had done it a hundred times. I didn't think I could do the mission; he told me I could and would. He found the strength I had deep inside and helped me yank it to the surface. He trusted me more than I trusted me---and he was right, I did it right---that's one we saved. I told him afterwards how scared I had been. He told me he was just as scared, but I'm not sure I ever believed it---we never saw a hint of it.\"\n\n\"Look, Mary, I know you don't know much about the Army, but he was awarded a Silver Star, one of many awards he received. It's the nation's third highest award for valor under fire. It's probably the highest award that's been given in the last thirty years that wasn't given posthumously\u2014and he could have won a dozen of them. He was always cool, calm and collected. He was always measured; he never raised his voice or lost his temper. He always knew what to do; he always had a plan and it invariably was the right plan. He turned us into soldiers and officers and damned fine Army Aviators. He made us proud of ourselves.\"\n\n\"Two more anecdotes, and then I know we need to get started with the meeting. He flew with me one night when we didn't get there in time. The kid died in the back of the chopper. Bob turned the aircraft over to me and climbed over the seat to try to get pressure on a bleeder when the medic and the crew chief had run out of hands. He just wouldn't let go of that kid. The medic said, 'he's gone sir; we did everything we could.' All Bob said was, 'it wasn't enough, was it, Smitty?' He climbed back over the seat, strapped in and said, 'I've got the controls' and we flew in silence to the hospital. He was covered in that kid's blood. We dropped his body off and returned to our base. He'd usually stay and chat with the crew and help them do their post flight. He just walked off to the command tent without saying a word. After we finished up, I walked over to the tent; he was sitting there in his field chair, slumped down, looking off into space, still covered in blood.\"\n\n\"I didn't know what to say. I could see that his eyes were red. 'Is everything okay, sir?' I said pathetically. I'll never forget his words. 'He wasn't the first that we---I---didn't get to in time, Lieutenant. He won't be the last, but it never get's any easier. I can rationalize that we did everything humanly possible---everything that is expected of us---but it wasn't enough. When I write that letter to his parents or his wife and tell them how hard he fought to live and tell them how sorry I am that he didn't and how I wish we'd saved him, it provides some closure but your never forget their faces.' 'Sir, I thought the unit commanders wrote those letters.' I said. He replied. 'They do, but so do I; I feel like I owe it to their memory. This one will be number twelve. I'm not sure how many more of those letters I have in me.' An hour later he strolled into the mess tent for midnight mess in a clean uniform, chatted with the returning crews and was, 'the Captain' again.\"\n\n\"The last mission I flew with him was thirty days after he was supposed to have already gone home. He fought with higher HQ to get his Executive Officer, a female, to succeed him. He'd finally won the battle and would leave country in three or four days. He took the controls just before we started our approach; we were taking sporadic fire. `I guess I ought to do one more of these before I go home.' He said, and then a couple of minutes later changed his mind and gave me the aircraft. `Hell, Megan, you need the practice more than I do.' It was a hairy extraction. We were taking too much fire on our first attempt and had to go to plan `B'. I flew; he talked me down and then back out again while handling the radios and directing our attack escort. It wasn't until we got back to altitude that I saw the blood dripping off the bottom of his crew seat. I almost flipped out.\"",
        "\"I could see he was close to blacking out; his face was as white as a ghost. `Megan, you're in charge now and there are now two of us depending on you. Get me out of here; I'm too damned short to die in this God forsaken country. Do your job. Take me home, babe.' He said.\"\n\n\"Then, once he was sure that our patient was stabilized, he asked the medic for an IV catheter, a compression bandage and a Velcro tourniquet. Smitty, the medic, wanted to pop his seat back and treat him; `the Captain' would have none of that. He wrapped that tourniquet around his arm, found his own vein, inserted that IV catheter, hooked up the tubing to a liter bag of plasma which he hung on the door, applied the compression bandage over the wound and said, `that's better, I was getting a little dehydrated'. Hell, he was leaking like a sieve! He was seconds away from going into shock; he should have already gone into shock but it was as if he willed himself not to until everyone else was taken care of...including me.\"\n\n\"I dropped our passenger and my commander off at the hospital pad. The son of a bitch just unfastened his harness, climbed out of his seat and limped his way halfway to the trauma hut before he passed out from blood loss. I was screaming at the top of my lungs trying to get the gurney crew to understand. Finally they saw him, picked him up and rushed him inside. I wanted to shut down and stay and be there for him. But my job was to refuel, go back to base, pick up another pilot and do my job. And that is exactly what I did. We pulled three more kids out that night. One didn't make it. The next day we heard that 'the Captain' was okay. He's lost a lot of blood; if he hadn't started the IV when he did, he might not have made it. There was no permanent damage; it was a lucky, or unlucky, depending on your perspective, nick of a blood vessel---a major blood vessel--\u00aca through and through. They closed it up and we figured he'd be sent home.\"\n\n\"Three days later I got a call to pick up a passenger at the hospital. It was not uncommon for us to pick up kids who had experienced minor wounds and fly them back to their units. And there he was, limping his skinny butt out to the helicopter. They wanted to evac him to Germany for further evaluation. He'd just gotten out of bed, gotten dressed and walked out. They had laundered his uniform but you could still see the bullet hole in the left leg. He wanted to be there to personally hand over command to his chosen successor, which he did, that afternoon. Higher HQ sent down the orders for his Purple Heart a week after he left---it was his fourth. Marge was a damned fine commander but there never would be another one like, 'the Captain'. We missed him desperately.\"\n\nMegan paused before finishing up. \"Mary, I'd take a bullet for the man; I'd gladly sacrifice my life for him. I'd trust him with my life; I already have more times than I can count. I never have and probably never will meet anyone like him or have the honor of serving under anyone remotely of his caliber. They just don't get any better. I love the guy to death; it's not about romance or sex or whatever. I'll love, `the Captain', as will a whole bunch of other young pilots and soldiers, men and women, until the day I die. And if there's a God and a heaven, `the Captain' will be there when I arrive. And all he'll need to say to me to make me know that my life was worth something is, `you done good, kid.\"'\n\n\"Thanks Megan, thanks you for a lot of insight, not only into Bob but into you. You better go get started. I'll be right in.\"\n\nDamn, Mary thought to herself, did I underestimate that cute young blond. I had no idea what kind of stuff she was made of. She had liked Bob but had been wary of him. She saw the way the chairman looked at him and knew there was more to the story of his ultimate role. She buzzed her HR person. \n\n\"Bonnie, which of our managers have military service backgrounds?\" \n\n\"Just Megan, and she served in combat, a medivac pilot, I believe; she was decorated for valor under fire on more than one occasion to include the Distinguished Flying Cross, according to her DD214.\"\n\n\"Yes, I'm not surprised. Thank you.\"\n\nBetter a friend than an adversary, whatever was coming down the pike, Mary thought to herself. From what she had just heard, Bob was one of those very special people. The kind of people this company needed more of. She left her office to go to the conference room. She reworked her welcoming comments in her head as she walked.\n\n\"Folks, thanks for coming. By now you've all met Bob, who is consulting for our chairman as we try to evolve our business in changing times. Before we get down to business, I want to give you all a chance to thank a couple of people with us today who have, frankly, done things that make what we do day to day, pale by comparison. We have with us today two former US Army officers, aircraft commanders---medivac helicopter pilots---who served with distinction in combat, saved untold lives and are decorated heroes. Please take a few minutes to thank Bob and Megan for their service to our country.\" \n\nMegan was instantly viewed by her peers in a very different light. Her appearance had made them underestimate her; all in the room did a quick mental reevaluation. Bob didn't have to; he knew what stern stuff the cute young blue eyed blond was made of. He appreciated Mary's gesture but also knew that she was just self serving enough to hedge her bets. No matter, it was a shrewd tactical move and he respected that. She was the most senior of the Area managers and had excellent business sense. When the final plan evolved he'd need all the friends he could muster.\n\nBob stayed over for the obligatory dinner which followed the staff meeting, spending time to get to know all of the young managers under Mary's responsibility. They were all damned sharp; Mary developed her subordinates and took their personal and business growth to heart. He respected that a great deal. As the evening drew to a close, the group thinned and he and Mary ended up being the last to leave.\n\n\"You made quite an impression on Megan, Bob, when your two served together.\" Mary said.\n\n\"She was one of the finest young officers I ever had the honor of serving with, Mary. She's tough as nails but always eminently human. She was my favorite. I'm very proud of her.\"\n\n\"So, Bob, what's coming down the pike? I'm sure you're sworn to secrecy and I'm also sure that you are destined to be more than a, `here today and gone tomorrow' consultant.\"\n\nBob was thoughtful in his response. \"Change, Mary, but good change, aggressive, market expanding and, I believe, positive change. Will it be uncomfortable for some? Almost certainly. Will some of the old, legacy things still exist? Absolutely! They're part of the successful heritage of the company, but they will undoubtedly be a less prominent part of the company's face.\"\n\nHe paused, then added some additional thoughts. \"You must know, Mary, that Virginia holds you in very high regard. You have exceptional analytical skills and superb business acumen. For any plan to succeed---and understand, that while I may seem evasive, in reality the future is still a bit fuzzy---this organization cannot move forward without strong, principled leadership from the likes of people like you.\"\n\n\"Am I going to end up working for you someday?\" Mary asked, never one to pull her punches.\n\n\"I doubt it, but I expect that we'll be working shoulder to shoulder in the foreseeable future.\" Bob replied, with a grin.\n\n\"Tell me how I can help, without letting the cat out of the bag.\" Mary replied.\n\n\"Mary, right now we're essentially one big, jumbled together business unit. That'll certainly change; the core business will undoubtedly become a single business unit, albeit smaller. Other units will be formed to explore new markets and new ways of approaching existing markets. I would expect in a month or so, Virginia will bring senior management in to pitch the vision. Working groups will need to be formed from within and from outside. Task forces will be organized to form the core of the new units' management structures. It's not impossible that some lines will be spun off or even retired. It will take some serious, `outside the box' thinking to develop a detailed, executable business plan. The corp has good reserves, excellent cash flow and a healthy credit rating. The finalized plan will have to be sold to investors and analysts, then, the real work begins.\"\n\nBob paused again to let his words sink in. \"I'm going to ask you and your peers to do something you probably do every day, which is, rank your people. Put major emphasis on those who can work outside of the comfortable structure, creative thinkers with the balls, figuratively speaking, to fight for what they believe in. This will not be a time for the faint of heart. Good solid performers who do what is expected are always important but this is going to require a different mind set. We need folks who aren't afraid to put their jobs on the line for the good of the organization ... warriors. But they're also going to have to possess the sensitivity to help those less endowed get over the rough spots.\"\n\n\"People like Megan?\" Mary asked.\n\n\"I only know what kind of soldier, pilot and officer she was---and she was one of the best. You have to decide if she has those same superior traits as a business person.\"\n\n\"Megan told me this morning she'd trust you with her very life---already had done so, many times. Can I trust you with mine?\"\n\n\"I don't have an alter ego, Mary. I don't sneak up on people; I come at `em head on. You'll never have to wonder where I'm coming from or what my agenda is---I'll tell you straight up. I don't play games. We don't really know each other, but after almost ten years as an Army officer, my style is pretty much chiseled in concrete. It's worked for me so far and I have no intention of letting the evils of corporate America corrupt me.\"\n\nMary had learned to be cautious and suspicious of people's motives; that trait had helped her get this far without being blown out of the water by the loathsome stealth attack. For the first time in a very long time, she took this attractive, erudite man across from her at face value.\n\n\"Here's to good things in the future, Bob.\" Mary said, raising her glass. \"I genuinely look forward to our working together. Watch your back. As far as I'm concerned, to the best of my ability, I'll give you a heads up, `cover your six' as they say---but there are sharks in the water---don't let `em smell blood.\"\n\nOne down and three to go, Bob thought to himself as he returned to his room. He'd thought that Mary would be the toughest to win over. He'd been wrong and had underestimated her. She'd also let him know in no uncertain terms that his greatest challenges were ahead of him.\n\nHis next meeting with an area manager and her staff went very well. He felt reasonably comfortable that he had added another ally. The third one, Beth, was a very different matter. She was a snake and he threatened her. She was already back channeling dissent to her mentor among Virginia's direct reports. She'd heard the glowing reports from her two peers and was preparing to upend him. How to handle a snake? \n\nBob had never been afraid of snakes; he'd had a pet snake when he had been twelve. Still, sometimes a snake just won't back off. Then you had to kill it with a stick. He hoped it wouldn't come to that.\n\nBob chatted with Sam on several occasions about his concerns about number three. Sam indicated that if there was going to be a problem, he had been pretty sure that she would be the one. They agreed to keep Virginia out of the loop for the immediate future.\n\nNumber four might well be a different kind of problem. He doubted that she had the cahones to fight him but she was too married to the way things had always been done. She was a very competent manager and a good developer of talent but he doubted that she would deal with change well. She might well come under the spell of others intent on torpedoing progress. He wanted to reassure her, relieve some of her obvious anxiety, but knew he couldn't make promises---and wasn't sure he wanted to.\n\n\"Gretchen, the core business will always be there, as I see it. It's an integral part of the corporation's heritage---and you understand and run that part of the business as well as anyone. Just know that there will be new things---new business units on the horizon---but there will still be a vital need to keep the traditional, `money maker' afloat and viable.\" Shit, he thought to himself, I'm starting to sound like some half assed corporate consultant.\n\nIn the end he thought Gretchen was probably still on the fence but tilting his---and Virginia's---way. In his travels he identified a number of key junior managers that would be critical assets. He had a second list of those that were, \"okay\". He had a third list of people that he didn't hold in very high regard. His fourth, and fortunately, shortest list was of those he just couldn't get a handle on. He returned to the home office to gather his notes and thoughts and put them on paper.\n\nDr. Fuller had agreed to come on board as an outside consultant and was very excited about the opportunity. Before finalizing his presentation for Virginia, he met once again with her four direct reports in the home office.\n\nOne, for sure, was with him 100% and genuinely excited at what was on the horizon. The second one was cautious but certainly not an adversary. The third had potentially been on the chopping block before he had arrived. She was the one Virginia had planned to replace with Mary. She was older and very set in her ways. She was eligible for early retirement and that would occur sooner rather than later.\n\nThe fourth was a different matter; she could well become his nemesis. Molly was in cahoots with Beth and, he was sure, was intent on taking him down. She had built her own little support group through the organization---small but still deadly. Cut off the head of the snake and the body dies, Bob thought to himself. She was openly hostile and resistant to even the most benign suggestions. If looks could kill, he would have been a dead man. \n\nSam knew the score but wasn't sure Virginia had the full picture, although Sam had been feeding the chairman hints for some time. Bob was reasonably confident that if he and Sam, `ganged up on' Molly, they would win the battle but unless it reached the desperation point which threatened the company, that just wasn't the way he liked to do things.\n\nAs he sat in Molly's office suffering under one more of her withering tirades, he'd had enough. Time was being wasted. He got out of his chair in front of her desk, turned and walked to the door, then turned and spoke, cutting her off in mid sentence.\n\n\"Enough! I'd seriously like to have a conversation---a dialogue---with you about the future of this company but this has been a rude, demeaning lecture. When you want to talk---exchange ideas---you know where to find me.\" He never raised his voice nor slammed her office door.\n\nMolly, on the other hand, did slam his door as she entered his office and was in his face in a couple of minutes, red with rage and spitting venom.\n\n\"How dare you, you fucking prick, you son of a bitch, you God damned...\"\n\nHe interrupted her tirade as she searched for the next expletive. \"Molly, I can't decide if you dislike me because I'm male, or you just don't like me---I remind you of someone, maybe? Or maybe you're just too damned comfortable with how things are and can't stand the thought of change. Or maybe you doubt that you can handle it---the change, I mean. Which is it? We need to clear the air and get past whatever it is. I'm not scared of you. You're just very irritating and you'll lose this battle---because you're wrong. Whether I'm still here or not, this company is moving forward, with or without me---or you. Let's start over.\" He said, extending his hand. \"I'm Bob. Can I get you a fresh cup of coffee?\"\n\nHe hadn't won the battle but he had defused the boiling anger for the moment. He poured her a cup of coffee, recalling how she liked it. She sat down. He pulled a chair around and sat across from her.\n\nMolly started to speak, more measured this time. \"I've known people like you, men like you and I don't trust you as far as I can throw you! You're slick and silver tongued but all you really want is to, is to...\"\n\n\"Fuck you, literally or figuratively?\" Bob said.\n\nHer jaw almost dropped off and for a moment she was speechless. He continued.\n\n\"Molly I won't ask you to trust me at this point but I would hope you would trust the woman who hired me---the woman you've worked for over the last twenty years. She hired both of us; she hired me to help move this company to the next level, to help it succeed--\u00aceven survive. I know you care deeply about this company. I don't know what experiences you've had in your life with other men, business or otherwise. You don't know me, not even remotely. I am not here to fuck you over from a business perspective. \"\n\nHe paused, then went on. \"In term of the other kind of fucking, if we didn't have to work together and in spite of our age difference, I'd chase your little butt in a New York minute! You are a very attractive woman, which has absolutely nothing to do with business so don't worry, your panties are safe, at least as far as I'm concerned. Now for Christ's sake, let's cut the shit and get down to work...or do we need to tussle some more?\"\n\nHe had finally gotten to her. She burst out laughing, almost sliding out of her chair and nearly spilling her coffee.\n\n\"Shit! You don't pull your punches, do you?\"\n\n\"Not very often.\"\n\nLook, Bob, I understand in a previous life, in the military you were in combat. Did you ever have to...\"\n\n\"Kill anybody? No. Watch some really great, brave kids die? Yes. Too damned many and I felt personally responsible for every one of them. I can give you their names and home towns and their parent's names and addresses if you like; I don't even have to look `em up. Sure, I saved a bunch, but losing even one was one too many. And losing the ones I was responsible for, those under my command, those it was my job to bring home in one piece...\"\n\nBob trailed off. He had not shown anger but he had let his emotions slip out. It was at that moment that Molly knew he was not remotely like any of the other men she had known, professionally or personally and she just wanted to hug him. She did.\n\n\"Thanks.\" Bob said. \"I needed that. Where the hell were you when I was the one giving the hugs but no one thought that, `the Captain' needed one?\"\n\n\"Friends?\" Molly said, softly, kissing him on the forehead.\n\n\"Friends.\" Bob replied, and from that day on Bob and Molly's friendship never wavered.\n\nMolly returned to her office. Shit! I let my prejudices cloud my judgment. He's the real deal. And if the circumstances were different I'd jump his bones in a second! Now I need to get on the phone and try to undo the damage I've done, if it's not too late.\n\nBob and Molly joined each other for lunch and had an extremely productive collaboration.\n\n\"So, Bob, do you like older women?\" Molly said playfully.\n\n\"Not as a rule, but in your case I'd make an exception.\" Bob said, resisting the desire to pat her fine little fanny.\n\nSomewhere in this company there is a woman who will lasso this guy, a very lucky young woman, Molly thought to herself. I wonder who it will be?\n\nMolly succeeded in stemming the molten lava flow she had unleashed in several corners of the corporation. She'd brought Beth back on track, she hoped, and that was a start.\n\nBob, Sam and Dr. Fuller put the finishing touches on the initial presentation, the one for the chairman. Three days later, they met in her office to make the pitch.\n",
        "Virginia had something on her mind. \"Well, Bob, I had been detecting some, `tremors in the force' as the `dark side' raised its ugly head but from what I've been hearing the, young 'Jedi' has triumphed. Nice work.\" He'd had no idea that Virginia was a Star Wars aficionado.\n\nThe presentation went off brilliantly. Virginia needed to add some pieces of her own personality to it, but the changes were minor. The four worked together into the night to finalize it. The next day they pitched it to the executive committee---all were sworn to secrecy.\n\nThe four then took the show on the road, pitching it to board of directors, key analysts, potential lenders and major stock holders. Each had input, particularly as far as the financial pieces would fit, but it was a winner. Rumors leaked out and the stock price benefited from those leaks.\n\nTwo weeks later it was time to bring the troops in for the final presentation---to those who would have to buy in completely and execute the plan. It was agreed that all management folks at every level would hear it together. Virginia would deliver the opening address and announce Bob's promotion to Vice President as she introduced him. Bob would make the majority of the presentation. The top four under Virginia would then add their glowing comments. What was needed was more than consensus. What was needed was total buy in by everyone in the room.\n\nBob wondered, as he looked out over the sea of faces, close to five hundred, mostly female, if there had ever before been such a stunning array of women assembled in one room. Beauty and brains were in abundance. He'd met the majority of them and as was his style, had filed little bits and pieces away in his mental Rolodex.\n\nA little over an hour later, Bob was done. There were certainly seeds of doubt in the room and some who just wouldn't be able to adapt, but overall he'd hit a home run. Molly was the last of the four to follow Bob.\n\n\"You knocked `em dead, champ!\" She whispered in his ear as she prepared to add her piece.\n\nAfter the formal part of the program, there was lunch. In the afternoon and during the following two days, groups would break out in separate rooms to develop questions and answers as well as ascertaining what and who fit where in the new organization chart. He'd seen Megan several times and had a chance to chat with her over lunch on one of the days. Mary sidled up to him between sessions the next afternoon.\n\n\"You want her, don't you?\" Mary asked.\n\n\"Pardon me?\"\n\n\"You want to steal Megan from me and bring her in to work on the steering committee. I'm more than okay with that. I need to have someone up here to look out for my interests. She's the best of my brood and, going back to our conversation a number of weeks ago, she's exactly what you're looking for.\"\n\nA permanent steering committee based at the home office was formed. They in turn would communicate regularly with the larger task force which included all key senior managers and actually meet with them every couple of weeks somewhere around the country.  \n\nBob had originally planned to ask the senior VP who had been on board from the start to be a part of the permanent steering committee but chose Molly instead; they had become good friends and worked well together. And he got Megan along with a dozen or so other managers from every level.\n\nOver the ensuing months and weeks there were hurdles and setbacks, but within a year, the new organization was in full tilt. The new products were being well received, existing outlets were adjusting, begrudgingly to the rule changes, and the stock was taking off. Virginia ended up on the cover of several business publications. Bob's name was being whispered in inner circles across the business world. He started receiving calls from corporate recruiters wanting to snake him away. He politely ignored them.  \n\nMary was promoted and came to the home office to replace the expected retiree. She suggested that Megan would be the right choice to replace her in Dallas. Virginia agreed. Bob would miss her both professionally and personally. She had been critical to the success of their enterprise. He had also grown very fond of her.\n\nIt was on that Friday night like so many others, as he and his team trudged out to their cars after a very long day of work that it happened. As was often the case, he and Megan ended up being the last to leave. As they prepared to say goodnight, they were in each others arms. They were still in each others arms the following morning and virtually every morning for the next week. They were desperately, madly and hopelessly in love.\n\nFor Bob, Megan had always been special. For Megan, their time working together had allowed her to get past hero worship and see Bob simply as the man she wanted to spend the rest of her life with. The thought of being separated following her impending promotion was more than either could stand. And so it was a few weeks later that Bob went into Virginia's office early one morning to tender his resignation.\n\n\"Virginia, we've always been absolutely straight with each other so give me a chance to explain the, `why' before you throw something at me. I'm in love; it had to happen some day. I'm hopelessly and madly in love. Megan deserves that promotion to Dallas and I couldn't stand in her way---but I don't want to spend another day of my life without her. I can't be here and have her there. Commuting romance doesn't cut it. So...\"\n\n\"You're pretty dumb sometimes for a smart guy.\" Virginia quipped. \"Love must have clouded your senses. Hell no I'm not accepting your resignation! We'll work something out. We've got spin offs to do and someone has to run them; the structure is getting unwieldy to handle from a single central location. Hell we've got instant communications, conferencing, email and all that stuff! This is the computer age, in case you've forgotten. Have you set a date---have you even proposed? Men!\" Virginia said in mock disgust.\n\n\"Proposed, yes, ring, yes. Date, sooner rather than later, with her folks mulling over the possibilities.\"\n\n\"Well, first, congratulations! You make a gorgeous couple. And you've shared some experiences that most of us can't even imagine. My bet is yours will be one of the ones that makes it for a very, very long time. Second, go to Dallas with your bride to be! That's where you belong. There's extra office space there. Hell, you could find another job, maybe a better one---you're in demand. I don't want to lose you over this silliness. You can work out of Dallas. Most of the times you and I need to get face to face you'll probably end up flying here together. We'll make it work---you let me worry about that! You worry about becoming a husband.\"\n\nIt was settled. Bob and Megan moved to Dallas together and found a home. They were married three months later with Virginia as their matron of honor and many of their colleagues from the company in attendance.\n\nBob ultimately ended up heading one of the spin-offs, a wholly owned subsidiary of the parent company. Virginia's wedding present consisted of a substantial ownership position in the newly formed corporation. She knew she owed that special man more than she could ever repay him, but it was a start. And she too had grown to love him like the son she had never had.\n\nMegan stayed with the company in Dallas and became a Vice President. She took brief leaves to give birth to three children, two girls and a boy. After her third child was born, she retired from corporate life and devoted all of her time to being a mommy. Well, most of her time, at least. The remainder of her waking hours were devoted to the special man she had fallen in love with so many years before, flying over that God forsaken country one night, scared to death, with a brave young soldier clinging to life on the floor behind her seat. She'd known it in her heart that night.\n\nAnd so, when he thought about it, had he. Megan had always been special, his favorite, and the best he had ever had the privilege of serving with. It had just taken him a little longer to realize that she was also the only woman he would ever love and the one in whose arms he would spend the rest of his life. "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-man-among-women"
}