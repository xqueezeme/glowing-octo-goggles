{
    "title": "Mystery Woman",
    "pages": [
        "Copyright \u00a9 2020\n\nFirst, I'd like to thank blackrandI1958 for inviting my participation in, \".\" As anyone knows by reading my stories, I am not a professional witer, but I do love to write, and these invitationals are always a challenge and fun to work on.\n\nI hope you enjoy the story, and as always, I enjoy reading your feedback. \n\n*****\n\nAs he left the apartment for work that day, Morgan Johnson had no idea of the events that would show him how much of life he took for granted, and how greatly things could change. \n\nHe had always considered himself appreciative and thankful for life's blessings; after all, both his and his wife's parents were alive and healthy, for the last three years he'd been happily married to his high school sweetheart, and he loved being a press photographer for, The Tribute, one of two major Chicago newspapers. \n\n*****\n\nNodding and saying good morning to the various reporters, Morg, as everyone called him, navigated his way through the newsroom to get his assignments for the day. Andy, the photo editor, wasn't at his desk, but Morg's assignment cards were all there so he grabbed them and started his retreat.\n\n\"Morg, hold on, I've got one more for you, here.\" \n\nHe turned to see Andy walking his way with another assignment card in hand. He glanced at it as he took it from his boss. \"Is this the girl who's in the coma?\"\n\n\"Yeah, well, I guess she came out of it a few days ago, but now she's got amnesia; poor girl can't remember a thing. The cops want us to get a full face and a profile shot of her and run it on the front page to see if anyone recognizes her. We said we would.\"\n\nMorg looked at the card a little closer. \"There's no time on it.\"\n\n\"She's not going anywhere. Any time you can work it into your schedule is fine,\" Andy replied. \n\nMorg shuffled through the rest of his assignments. \"Okay, I've got some time around one. I'll scoot over there after I grab some lunch.\"\n\n\"That'd be great. I'll call the hospital and let them know you're coming.\"\n\nIt was about ten minutes after the hour when Morg checked in at the front desk. They gave him a pass and let him know the room number. He was surprised to see one of Chicago's finest standing guard outside the woman's door. Getting to know most of the cops on a first name basis was one of the perks of the job.\n\n\"Charlie, what are you doing here?\"\n\n\"Hi, Morg, you here to take pictures of our mystery girl?\"\n\n\"Yeah, I guess. I wasn't expecting to see you here, though. Is she wanted for something?\"\n\n\"No, no. She's not a perp; she's a victim. I really don't agree with this picture idea, but we can't talk her out of it, so...\"\n\nMorg was perplexed. \"So? So what, I don't get it. I thought the paper was doing you guys a favor by showing her picture on the front page.\"\n\n\"No, you're doing this at her request, not ours. Even my lieutenant tried to talk her out of it.\"\n\n\"Why?\" \n\n\"Because we don't know what kind of danger she might be in. She was shot in the head.\" He saw Morg's jaw drop. \"It looks like she was attacked, gang raped, then shot in the head. We think the attackers left her for dead. We're afraid they'll try to finish the job if they know she's still alive.\"\n\n\"Who's handling the case?\"\n\n\"Detective Nobles, but Lieutenant Ashwood is taking a special interest in it, too; I think because of the violent nature of the crime.\"\n\n\"Did you ever find out who dropped her off in front of the emergency room?\" Morgan asked.\n\n\"No,\" Charlie replied. \"We think some Good Samaritan found her and dropped her off, but he obviously didn't want to get involved. When we checked the CCTV footage, we saw he smeared mud over his license plate and wore a Cub's baseball cap. How many of those are there in Chicago?\" He chuckled. \n\n\"Well, if no one thinks this is a good idea, who came up with it in the first place?\"\n\n\"Some idiot nurse, and once it was mentioned, the girl has been adamant about it.\"\n\nIt didn't make sense to Morg. \"That's nuts. She's putting her own life in jeopardy.\"\n\n\"I know,\" Charlie said with a shrug of his shoulders. \"Why don't you give it a shot? Maybe she'll listen to you.\"\n\n\"Consider it done,\" Morg stated with conviction as he walked passed Charlie and into the mystery woman's room.\n\nShe didn't look nearly as bad as Morg had anticipated. He expected her entire head to be wrapped in bandages, but the bullet had caught her from behind and grazed the side of her head, cracking her skull and taking off a small part of her right ear. He could see where they had shaved her hair in a couple different places but some of it had grown back in already. She had a pretty large bandage on the back of her head, but from the front, had a very pretty face, even without make-up. \n\nShe literally lit up when she saw him walk in. \"You're the photographer from the paper?\"\n\n\"Yeah, how are you doing?\"\n\n\"Oh, just fantastic.\" She laughed. \n\n\"Listen, I was talking to Charlie out in the hall. He thinks this is a bad idea and I completely agree with him.\"\n\nHer small smile turned into a frown. \"What's your name?\"\n\n\"Morgan,\" he answered. \"Morgan Johnson, but people call me Morg.\"\n\n\"Nice, isn't it?\"\n\nHe was a little confused. He'd never thought of his name in those terms before. \"Nice?\"\n\n\"Yeah... to know your name, I'll bet you also know where you live, and how old you are, too. You obviously know what you do for a living. Do you know if you're married, your wife's name, who your friends are, who your parents are? Got any kids? Can you remember their names, how about where you went to school? You have any memories of growing up?\"\n\nHe just stood, staring at her. He couldn't even contemplate not knowing all that stuff. \n\nShe could tell what he was thinking. \"Yeah,\" she said, \"now you have a small idea of what my world is like. I don't care about the danger. If there's a chance of someone out there being able to tell me who I am or help me remember something, I'm going to take it.\"\n\nMorgan was still trying to come to terms with what she was saying. \"I... you're right, I can't even imagine how hard that would be, but...\"\n\n\"But nothing,\" she interjected. \"This should be my decision, not yours. Your paper already said they'd do it.\"\n\n\"Yeah, I know, but I've got a personal stake in this, too, you know. What if something happens to you because of the pictures I take? How do you think that would make me feel? At least give it some time. Maybe your memory will come back on its own.\"\n\nShe let out a big sigh of frustration. \"Fine, if you're not going to take the pictures then get out. I'll call the other paper. I'll find somebody who'll do it.\"\n\nThat angered him. \"There's one thing you haven't forgotten: how to be pig-headed,\" he growled.\n\nShe couldn't help but chuckle under her breath. \"Well, are you going to take the pictures or do I get the nurse to call the other newspaper?\"\n\nObstinate in his own right, Morgan just stood there staring at her.\n\n\"Fine!\" she said, not waiting for him to answer. \"Go on, get out. Nurse!\"\n\n\"All right, damn it, okay, I'll take the fricken pictures, but I still think you're nuts.\" \n\nSuddenly, her face glowed with a hugh smile. \"Look, the cops said they can set up a hotline. All the calls go straight to the police department so they can check out the callers.\" \n\n\"Why didn't you tell me that in the first place?\"\n\n\"Why didn't you ask?\" she responded with a smile. \n\n\"At least that will offer you some protection. I assume you'll be working with a therapist when you get out of here?\"\n\n\"I'm not sure,\" she revealed. \"The hospital has been trying to get some Medicare Emergency Fund to pay for the hospital expenses, but without even a social security number, they've been having a hard time. One of the nurses told me they might have to write it all off. If they're not going to pay the hospital, I doubt they'll pay for therapy.\"\n\n\"Well, somebody's got to do something. They can't just let you wander the streets with no food or shelter. Hell, you can't even apply for a job.\"\n\n\"You're not telling me anything I don't know, Morg. I'm praying I have family or friends in the area who will take me in. That's the reason for the photos. The hospital will have to release me in three or four days. I've got that long to find someone.\"\n\n\"What about a shelter? Surely, there has to be somewhere you could stay.\"\n\n\"Not as many as you think,\" she replied. \"Most of them are for battered women and they're filled.\" \n\nUntil that point, she'd put up a tough front, but now Morg saw the tears. In all his experiences on the paper, he'd never seen anyone quite so helpless or vulnerable. He completely understood the reasoning behind posting her pictures, she literally had no choice. He walked over to the little table next to her bed and pulled a tissue from the box. \"Here,\" he said as he handed it to her.\n\n\"Thank you.\" She felt a little embarrassed as she took it. \n\nMorg adjusted his camera settings for the lighting in the room. \"All right, look right into the camera. Perfect,\" he announced after snapping off a few exposures. \"I'll photoshop all the tubes and medical equipment so you can't see them in the picture. That way no one will be able to tell you're in a hospital.\" He snapped off a few more for a profile. \"Okay, that should do it,\" he told her. \"They'll be in tomorrow's paper. I hope it helps.\"\n\nShe thanked him profusely before they said their goodbyes. \n\nCharlie stopped him as he exited the room. \"Well, did you talk her out of it?\"\n\n\"No. She has no choice, Charlie. I just hope it works and she finds someone.\"\n\n\"Yeah, I know. Lieutenant Ashwood has someone at the station calling the shelters and human services, but so far it's a no-go. Everybody's filled to the max.\"\n\nThat night, Morgan told his wife about the young lady with no memory. He just kept shaking his head and talked about how horrible it had to be for her. \"There are so many things that we take for granted and don't even think about. Can you imagine not even knowing your own name?\"\n\n\"Not really,\" Brea replied. \n\nShe didn't seem to be as sympathetic as he was and couldn't grasp the scope of the girl's problems, but then, neither did he before meeting the mysery woman. \"God, I hope she has family that recognizes her.\"\n\n\"If not, I'm sure they'll be able to get her in some shelter someplace,\" Brea responded. \n\n\"Yeah, but she really needs family or friends, somebody that can help her remember.\"\n\nThe next morning, Morgan got to work early. His first stop was usually the newsroom to collect his assignments, but he bypassed the elevator to the fourth floor and continued to the press room where the day's papers were still coming off the line. He smiled and waved at one of the press operators as he grabbed a paper. \n\nThe fourth floor was about half empty, but Andy was at his desk going through the day's photo assignments. He glanced at his watch when he saw his favorite photographer step off the elevator.\n\n\"Jeez, Morg, you're almost an hour early. Got a hot date or something?\"\n\n\"Kind of,\" he chuckled. \"I want to run by the hospital real quick and give the mystery girl a paper. I feel so sorry for her. She can't remember anything, Andy, not her name, where she's from, nothing.\"\n\n\"Yeah, I hope the mug shots work for her. Give me a few minutes, Morg; I'm still going through these,\" he admitted while shuffling the assignments cards around on his desk. \n\n\"I was going to give this to Ross, but since you're going to be at the hospital, I'll give it to you. It's at the Mayor's office. He's scheduled a ten o'clock press conference this morning. That should give you a little time to spend with your mystery girl. Busse will be there, too.\"\n\n\"Yeah, that works out great. Thanks, Andy.\" He left as soon as his boss handed him the rest of his assignments.\n\n*****\n\n\"You still here, Charlie?\"\n\n\"Hi, Morg, yup, still here, all day, not very exciting. McMaster's relieves me at three-thirty. It looks like they're going to release her day after tomorrow, then I'm back in a patrol car. Is that the paper?\"\n\n\"Yeah,\" he answered, opening it up to the front page so Charlie could see it.\n\n\"Nice. Let's hope it does the trick.\"\n\n\"Yeah, do you know if they've found someplace for her to go, just in case?\"\n\n\"I don't think so,\" Charlie replied. \n\nShe had her eyes closed when Morg walked in. Not wanting to disturb her, he gently laid the paper on top of the sheet. Feeling his presence, she opened her eyes and smiled at him. \n\n\"I thought you'd want to see it,\" Morg explained, gesturing to the paper.\n\nHer eyes lit up and she excitedly opened it to the front page. \"You take good pictures, Morg. Thank you. Is it out yet or is this hot off the press?\"\n\n\"It'll be hitting the street in another half hour.\"\n\n\"Okay\u2014good. Keep your fingers crossed for me, Morg.\"\n\n\"I am. I really hope this works out for you, everybody's pulling for you; just in case though, do you have a backup plan?\"\n\n\"Not really, I know the cops are still trying to get me into a shelter, but so far I don't think they've been very successful. Charlie out there told me several have had to close for lack of funding and the ones still open are filled to capacity. They're taking up a collection for me at the precinct so I'll at least have a little money to start.\"\n\n\"That's a great idea. I could do the same thing at the paper.\"\n\n\"I'm not sure if I would normally take charity,\" she said with a small smile, \"but I'm in no position to turn anything down. Anything you could do would be greatly appreciated.\"\n\nMorg was ashamed that he didn't think of it himself. Time was of the essence and there was no way he'd make it back to the paper before mid-afternoon, so when he saw reporter Rick Busse at the mayor's press conference, Morg asked if he would get the ball rolling when he returned to the office. By the time Morg made it back to the paper, Rick had already been throughout the entire building and collected more than four hundred dollars. Morg had stopped at his bank during the day and added a hundred of his own to the kitty. \n\nAfter dinner that night, he poured a glass of wine for Brea and himself and suggested they sit and listen to music instead of watching the boob-tube. He waited until they cuddled together with his arm around her before starting the conversation he'd been rehearsing. \n\n\"They took up a collection at work today for that woman with amnesia.\"\n\n\"Oh, and how much did we donate?\"\n\n\"A hundred.\"\n\n\"A hundred dollars,\" she snapped.\n\n\"We can afford it.\"\n\n\"I know, but don't you think that's a little extravagant for somebody we don't even know?\"\n\nOkay, here goes nothing, he thought. \"Ah, about that...\"\n\n\"Now what? No, you can't adopt her,\" Brea snarked. \n\nHe chuckled. \"I wasn't thinking of adopting her, but how about letting her stay here for a little while.\"\n\nWith that, Brea pushed herself away from him, sat up, and looked him straight in the eye. \"Are you crazy?\"\n\nMorg knew it wasn't going to be an easy sell, but he was determined to give it his best shot. \"Only until she can find someone who can help her,\" he explained. \n\n\"Honey, we got this three-bedroom apartment so we could have a home office and so your parents would have a room when they came up to visit. In three years, they've been here four times and every time they come they get a hotel room. That bed in there has never even been slept in. \n\n\"Maybe somebody will recognize her from the paper, but if not, she has nowhere to go, honey. She can't even rent a room because she has no ID. We can't just let her wander off and die in a gutter somewhere.\" He knew he was laying it on a little thick.\n\n\"Morg, you don't know anything about her. She could be a serial killer, for all we know. Didn't you tell me her life might be in danger? What about us? If she's living here, we could be collateral damage.\"\n\n\"I talked to the cops. They think she's pretty much out of danger by now. It's been a while since she was dropped off at the hospital, and with all the publicity about her losing her memory, they think it's highly unlikely that anyone would take a chance at trying to get to her after this length of time. Besides,\" he continued, \"nobody's even going to know she's here.\"\n\nBrea still wasn't convinced. \"I don't like it, Morg. What if she begins to remember things and starts going crazy on us? I've heard that can happen.\"\n\n\"Honey, even with amnesia, she's one of the most level-headed people you'd ever want to meet. Believe me, if she starts getting her memory back, she's not about to go off her rocker.\"\n\n\"Morg, I just don't see why she's our problem all of a sudden. There are all kinds of charity services and shelters out there for people like her. What about all your cop friends? Can't one of them take her in?\"\n\n\"They're still trying to find someplace for her to stay, but nobody's stepped forward and offered her a place to live.\"\n\n\"No one except my lonely hearts club husband,\" she snarked.\n\n\"Please, honey?\" he asked. \n\nBrea laughed at his miserable attempt at looking like a lost puppy. She sighed, miserable as it was, the lost puppy face was working. \"Morg, you have to promise me that if it doesn't work out you'll find her someplace else to go.\"\n\nHe straightened his back. \"Cross my heart and hope to die,\" he said, completing the hand gesture across his chest, \"but I wouldn't be a bit surprised if you two didn't wind up as best of friends.\"\n\n\"Yeah, right,\" she smirked. \"You're going to owe me big-time for this. You better be prepared to eat lots of pussy, buster.\"\n\n\"You know, I could do with some desert,\" he said with a glint in his eye.\n\n\"How about a nice big piece of pussy pie?\"\n\nIt only took seconds for them to reach the bedroom and undress each other. He knew how much Brea loved to be eaten, but he still had to work his way down. She'd go crazy when his lips touched her neck and behind her ear. In just moments he could feel the passion building in her body, underscored by moans of ecstasy. \n\n\"Oh, God,\" she cried out as he reached her hardened nipples. God, he loved the softness of her breasts as he licked, sucked, and nibbled his way from one to the other. Instinctively, she caressed the back of his head with the gentlest encouragement as she took a deep breath. Morg smiled when he felt her body shudder with a small orgasm, already. He knew her body so well. \n\n\"Oh, yeah, oh God, oh honey,\" she cried out, breathlessly as he reached his southern most destination. His tongue slithered up and down the lips of her wet pussy, sending his lovely lady to the hights of her second orgasm. \n\nHis tongue seeked out the entrence to what he knew she craved. Upon its discovery, Morg delved in as far as possible. Cries of impending euphoria echoed from the walls as Brea's body wrethed with a craving lust. \n\n\"I want you inside me,\" she screamed. \n\nThat was music to his ears. The skin was stretched so tightly across his cock, he was literally in pain. He moved into position, hovering himself over her closed eyes, and gently stroked the inner walls of heaven. Intuitively, Brea threw her arms around her man and pulled him to her breasts. Morg felt the satisfaction of her nails digging into his back. \n\n\"Come with me, honey. I can't take any more, come with me,\" she begged. \n\n\"Oh, oh, oh,\" she yelped as he increased his speed. He had passed the point of no return as Brea's body froze in rapture. \n\n\"Ahhhhhh,\" he yelled as every nerve fired with intense euphoria. His hips moved with every powerful surge of cum. The world stopped as the physical manifestation of their love peaked in a world of their own.\n\nIt took several minutes before either were able to talk again. \"I guess this means we're going to have a tenant, huh?\"",
        "Morg raised his arm and beckoned his love to cuddle. She pressed her naked body against his, stretched her arm across his chest, and nestled into the niche of his shoulder. He turned and gave her a kiss. \"I love you,\" he whispered. She smiled as they both slipped into slumber. \n\nThe next day, Morg asked Charlie if they'd found a shelter for the patient yet.\n\n\"Not yet,\" he answered. \"For the time being, the lieutenant used his ID to get her a motel room. She'll have to pay for it, but we all came up with almost six hundred bucks for her, so that'll help her out some, anyway.\"\n\n\"I've got another five hundred in here,\" Morg announced, holding up an envelope.\n\n\"Oh, jeez, that's great. That'll give her a little cushion, anyway. What do you have in the bag?\"\n\n\"One of Brea's work out outfits. I wasn't sure if she had anything to wear out of here.\"\n\nCharlie laughed. \"Well, we went through the station's lost-and-found, but there wasn't a lot in it. We did come up with a shirt and a guy's pair of pants that we thought might fit her, but I'm sure she'd rather wear women's clothes.\"\n\n\"I also talked Brea into letting her stay with us for a while.\"\n\n\"You're kidding.\"\n\n\"Nope. We have a third bedroom in our apartment that's just sitting empty. We figured, hell, we're paying for it, we might as well use it.\"\n\n\"Jesus, Morg, everyone in the station will be happy to hear that.\"\n\n\"You... ah, you think they'll be happy enough to drive by the apartment occasionally? Brea's a little nervous that somebody might still be after our mystery woman and that we might be in danger then, as well.\"\n\n\"Oh, hell yeah,\" Charlie responded. \"No problem. I'll ask the lieutenant to set up a regular patrol. He was going to do it for whatever motel she stayed in, I'm sure he'll have no problem just switching it to your complex.\"\n\n\"That would be greatly appreciated, Charlie. Seeing a patrol car drive by now and then will make both ladies feel a lot better.\"\n\nThe mystery girl was sitting up with a smile when Morg walked in. Although she couldn't hear what he and Charlie were saying, she recognized his voice. \"Hi, Morg, come to see me off?\"\n\n\"Of course. I also come bearing gifts,\" he said, holding up the bag.\n\n\"What's in there?\"\n\n\"Well, I wasn't sure if you had anything to wear out of here so Brea, my wife, donated some workout clothes and a pair of sneakers. I think you and her are about the same size.\"\n\n\"Oh, Morg, please thank your wife for me. The police gave me a man's shirt and pants but they're way too big for me. I'd look like one of those scarecrows in the farmer's field,\" she joked.\n\n\"Well, that's another thing,\" Morg replied. \"You can thank her yourself if you want.\"\n\n\"What do you mean?\"\n\n\"We have a large three-bedroom apartment. The third bedroom has never been slept in. Brea and I talked it over and decided you can stay with us until you get your feet under you.\"\n\nShe just looked up at him, waiting for the punch line. \"You're kidding, right?\"\n\n\"No, not at all. It's up to you, of course, but it won't cost you anything and Brea doesn't work, so you won't have to worry about being alone most of the time.\"\n\nShe couldn't help but wonder if there wasn't some ulterior motive for his offer; after all, she'd only known him a couple of days. She searched his face for any underlying signs of malevolence but saw only caring and kindness. \"Are you sure, Morg? You don't know me at all. Hell,\" she chuckled, \"I don't know me at all.\"\n\n\"We're sure. Now, I'm going to go out and talk to Charlie while you get dressed. They'll be coming in to take you downstairs any time now. I'm going to take you shopping for some clothes. Oh, that reminds me, one of the guys at work took up a collection for you,\" he said, pulling the envelope out of his pocket. \"There's a little over five hundred bucks in here for you.\"\n\n\"Oh, Morg, this is too much,\" she said, being a little overwhelmed. \"I... I...\" \n\nHe saw the tears welling up in her beautiful green eyes. \"Hey, none of that,\" he told her. \"I'd say you deserve a little good fortune for a change, wouldn't you? Now get dressed,\" he said as he left her room.\n\n\"She all set?\" asked Charlie.\n\n\"Yeah, she's getting dressed. I'm going to take her to the mall so she can buy some clothes.\"\n\n\"You're not working?\"\n\n\"I switched with one of the night shift photographers. I want to make sure she and Brea are properly introduced before I leave them alone together.\"\n\n\"Good idea,\" Charlie replied. \n\nJust then they saw a nurse approaching, pushing a wheelchair. She asked Morg if he was a relative. Once they explained the situation, the nurse left the two men in the hall and went into the room to check on her patient.\n\n\"Well, I don't see any white horses in the parking lot, but it sure looks like you've got your own knight in shining armor out there,\" she commented to a smiling patient. \"All dressed, I see. So... you ready to leave us?\"\n\n\"To tell you the truth, I'm a little scared.\"\n\n\"Yeah, I can imagine. That guy who's going to take you home seems like a really nice guy, though. He says his wife will be with you most of the time, so it sounds like you're in good hands.\"\n\n\"Yeah, everybody's been so nice: you, the cops, Morg; please make sure you thank everyone for me.\"\n\n\"I will,\" the nurse assured her. \"Now, hop in so we can get you out of here,\" she said, taking ahold of the wheelchair. \n\nCharlie and Morg followed the nurse as she wheeled the mystery woman down to the first floor. \"I'll bring the car up and meet you by the door,\" Morg told them.\n\n*****\n\nThe imposing looking figure of syndicate crime boss, Vito Generissi, stood on the balcony of his Chicago high-rise apartment, looking out at the lake. \n\n\"You wanted to see me, Vito?\" Tony, the button, Spinoso wasn't nearly as impressive looking, but as Vito's enforcer and hitman, he was no one to mess with.\n\n\"Yeah, did you see the picture of that broad in the paper?\"\n\n\"The one who can't remember anything? Yeah, I saw it.\"\n\n\"You think she could be the one you shot at when you whacked Johnny?\"\n\n\"Vito, stop worrying. I'm telling you, she couldn't identify me from that far away even if she was still alive... which I'm sure she ain't. She's probably still lying in the woods where she fell; most likely, the maggots have her half- eaten by now.\"\n\n\"I hope you're right. I still can't believe you screwed up so bad.\"\n\n\"Vito, there wasn't anything I could do. Jesus, we took him out to the most desolate stretch of road around. I put two in the back of his head and all hell broke loose. That broad came out of nowhere. I got one shot off at her and we had traffic coming from both directions. I couldn't help it. I threw Johnny's body in the trunk and got out of there. \n\n\"I got it handled though, didn't I? Nobody will ever find Johnny and that broad went down like a sack of potatoes. When have you ever seen me miss?\"\n\nVito took a deep breath and let it out with a sigh. \"I hope you're right, Tony, for your sake, I hope you're right.\"\n\n*****\n\nWhen the mystery woman stood to get in the car, Morg noticed that she filled out that workout suit almost as nicely as his wife did. \n\n\"Got your money?\"\n\n\"Yep, right here,\" she replied, holding up the envelopes.\n\n\"Any idea where you want to go, any brand names come to mind?\"\n\n\"No, not really. I don't think I can even name a store, someplace where the clothes aren't real expensive. I need to conserve as much of this as possible,\" she said while looking in the envelopes. \n\n\"Okay, Target it is. There's one not far from here. What name do you like?\"\n\nShe didn't understand the question. \"Ah, Target is fine, I guess.\"\n\n\"No, I mean for you. You're going to have to pick a name, at least temporarily. We can't keep calling you Mystery Woman.\"\n\n\"Oh... yeah, I... I haven't thought of that. Gee, I don't know. How...how about Linda?\"\n\n\"Linda? That's it? You don't want something more exotic like Lucrecia or Barbarella?\"\n\nShe chuckled. \"No, that's okay, just something simple, something I can remember,\" she said with a small laugh. \"I'm praying I won't have to use it for very long, unless it's my real name, of course.\" She chuckled for the third time.\n\nMorg wondered if he could keep a sense of humor in her situation. \n\nIn the store, Morg noticed that her practical attitude carried over to her shopping habits as well. She picked out two pairs of jeans suitable for working around the house or in the yard, two pair of casual slacks, and two nice skirts. Next, she found several tops, all different styles, but everyone could be worn with any of the slacks and skirts. When it came to underwear, Morg gave her some privacy but assumed she picked substance over lace. Lastly, she went to the shoe department and chose a pair of sneakers and two pairs of casuals with low heals.\n\nWhen they checked out, Morg thought she was going to cry as she paid the three-hundred dollar tab. It was almost a third of all the money she had in the world. \n\nBrea was waiting for them when they walked into the apartment. Morg introduced them, using Linda's newly chosen name. She was still overwhelmed with their kindness and generosity. \n\n\"Brea, I'm not sure how I'll ever be able to thank you and Morg. I never expected anything like this,\" she told them both. \n\n\"Well, we're happy to be able to help out,\" Brea responded. \"Listen, Morg has to go to work in about an hour, so I was just making us all some lunch. Are you hungry?\" \n\n\"Oh, wow, yeah, I'm starving. All I can remember eating is hospital food.\"\n\n\"Ewww,\" responded Brea while making a sour face. \"Well, it's just soup and sandwiches, nothing fancy, but I'm sure it's better than hospital food.\" \n\nShe had never thought of it before, but as they all sat down to eat, Brea realized how hard it was to make conversation with someone who has no memory... what the hell do we talk about? She wondered. Luckily, Linda had an inquisitive mind.\n\n\"So, how long have you been married?\"\n\n\"Three years,\" Brea happily volunteered. \"Three long, dreadful ye...\"\n\n\"Hey,\" Morgan interrupted. He knew she didn't mean it, but he still had to voice his objections.\n\nBrea laughed. \"No, I'm just kidding. I couldn't ask for a better man. I love the silly goof to death.\"\n\n\"I've only known him for a few days, but I agree. He's been incredible.\"\n\n\"All right, ladies, you're...\" just then his phone rang. He finished his sentence before answering... \"going to give me a big ego.\n\n\"Hello.\"\n\n\"Morg?\"\n\n\"Yup, it's me.\"\n\n\"Morg, this is Jerry Wilson.\" It was another of Chicago's finest. \"I understand the mystery woman is staying with you.\"\n\n\"Her name's Linda. Yeah, she's here right now.\"\n\n\"Linda? Is her memory coming back?\"\n\n\"No, it's a name she picked out for herself. We couldn't keep calling her, \"Hey You,\" he said while smiling across the table at her.\n\n\"Oh, okay, that makes sense. Anyway, my sister-in-law is a psychiatrist. I just got off the phone with her and she's willing to work with her pro bono. Her guess is that the woman's lived a hard life and that getting raped and shot is only the most recent tragedy in a life-time of traumas. She thinks that since the brain decided to block out her getting shot, it opted to go for it all and block out her whole life.\n\n\"She asked me how stable the woman is. She said once she starts to remember things, it's going to be extremely emotional for her. What do you think, Morg, will she be able to take that kind of psychological pain?\"\n\n\"Wow, I don't really know, Jer. I'll have to sit down and talk it over with her. Did your sister-in-law say when she wants to start treating her?\"\n\n\"No, and there's one other thing, she's in Des Plaines. If you or Brea can't take her she'd have to take public transportation, but Stacy's office is only two blocks from the Amtrak station.\"\n\n\"Yeah, I'm not sure how she'll feel about that. Can I get back to you tomorrow?\"\n\n\"Well, here, take her phone number down and you can call her direct.\"\n\n\"Good idea, hold on a second.\n\n\"Honey, can you get me a pen and paper, please.\" \n\nBrea jumped up and returned from their home office within seconds, laying the items on the table in front of Morg.\n\n\"Thanks, honey. Okay, Jerry, shoot.\" He wrote down the psychiatrist's name, phone number, and office address while everyone else around the table was anxious to see what the call was all about. \"Thanks, Jer. If this works out we're all going to owe you.\"\n\nTime was getting short. Morg had to leave for work, so he gave them the Reader's Digest version. \"That was Jerry, he's another Chicago cop. His sister-in-law is a psychiatrist and says she'll work with you on getting your memory back, at no charge, but it doesn't sound like it's going to be all milk and honey. I have to run, but we have to talk about this tonight when I get home, okay?\"\n\n\"Yeah,\" Linda almost yelled with excitement. \n\nBrea put a comforting hand on Linda's arm. \"Oh, wouldn't that be wonderful,\" she commented. \n\nThat night, when he got home, the three of them sat down to discuss the call. Morg wanted to emphasize how hard it might be for her. Would she be able to handle the trauma they would uncover in the meetings?\n\nLinda was undaunted, she was determined to do whatever it took to find out who she was and regain her memory.\n\nThe next day, Brea helped her make the call. They both sat at the kitchen table as she dialed the number and set the phone on speaker so they both could talk. A secretary picked up on the second ring.\n\n\"Doctor Wahlburg's office.\"\n\n\"Yes, Hi, my name is Briana Johnson. I'm calling on behalf of a woman who has amnesia and can't remember who she is. The doctor's brother-in-law told us to call.\"\n\n\"Oh yes, the doctor said you might call. I know she wants to talk with you, but she's with a patient at the moment. Is the amnesia victim with you now?\"\n\n\"Yes, she's staying with me and my husband.\"\n\n\"Good, would it be okay to have the doctor call you back in about twenty minutes?\"\n\n\"Yes, that would be fine,\" Brea replied, before ending the call.\n\nLinda got up and walked to the coffee pot. Her hand was trembling as she poured them both a cup. \n\n\"Not nervous or anything, are you?\" Brea joked. \n\nIt was no joking matter to Linda. \"I... I just don't know what I'm going to do if this doesn't work out. I can't stay here for the rest of my life. I don't even know if I have any skills or degrees. Hell, Brea, I could be a psychiatrist myself and not even know it,\" she derided.\n\n\"Huh,\" Brea laughed as she thought about it. \"Wouldn't that be something? Listen, whatever you do, whoever you are, I'm sure you'll find out. I'm obviously not a doctor, but I know they've come a long way in medical science. They can even hypnotize you and bring your memory back that way,\" she said, remembering something she saw on TV.\n\nAs the two sat, sipping their coffee; about all they could do was wait. As she watched the minute hand on the kitchen clock, Brea was becoming as nervous as Linda. \n\nAfter what seemed like an eternity, Brea's phone finally rang. She hit the speaker icon and answered it. The doctor introduced herself. Brea started the introductions on their end, informing the doctor that she was on speaker and that Linda was listening in. Doctor Wahlburg again emphasized the emotional pain she expected her patient would have to endure. Linda bravely expressed her willingness to do whatever it took. Next, they deliberated over schedules and logistics. \n\nBy the end of their conversation, Linda had a good idea of how difficult it was going to be. She had her first appointment for the following day and Brea said she could drive her. \n\nWhen Morg came home later that night, Linda was already in bed, but Brea brought him up to date. She also admitted he was right about their developing friendship. She expressed her admiration for Linda's strength and resolve. \"I don't know how she copes,\" she told Morg, \"I'd be a total basket case.\"\n\nThe next morning, Morg was already at work by the time Linda came stumbling toward the kitchen. Brea was sitting at the table. \"You look tired. Didn't you sleep well?\"\n\n\"No, I just couldn't turn off my brain last night. I kept thinking about today,\" she said as she walked over to the coffee pot and poured herself a cup. I also realized I forgot to buy something at the store.\"\n\n\"What's that?\"\n\n\"A robe.\"\n\n\"Oh, you know what, I have an old one hanging in the back of my closet. You're welcome to it.\"\n\n\"Really, are you sure? You've already given me so much.\"\n\n\"It's yours,\" Brea told her.\n\n\"Thank you. I hate getting fully dressed before a shower. Is Morg gone already?\"\n\n\"Oh yeah, a long time ago. He starts at seven when he's on days.\"\n\nThe two ladies talked a little longer before Linda got into the shower. When she came back out there was an old, but perfectly adequate, terrycloth robe draped over the corner of her bed along with two lipsticks and some eye make-up. \n\nIt took Brea about thirty-five minutes to drive to Dr. Wahlburg's office. They were about fifteen minutes early as she parked the car. Linda just sat, staring out the window without saying a word. \n\nBrea finally broke the silence. \"You want me to go in with you?\"\n\n\"No, it... it's not necessary. I... I'm just a little scared, I guess. Maybe... no, I'm going to do this,\" she affirmed, mainly to herself. \"It's... it's just that actually being here... I mean, what if I find out something really terrible about myself?\"\n\n\"I doubt very much that'll be the case. Now go, you can do this,\" Brea told her. \n\nLinda turned her head and looked at her new friend. \"You're right,\" she said with a sigh. So, what are you going to do while I'm in there? You're not going to wait out here in the parking lot, are you?\"\n\n\"No, there's a neat little shopping center not far from here. I'll probably just walk around and do some window shopping. I'll be back in an hour to pick you up though.\"\n\n\"Okay,\" said Linda while reaching for the door handle, \"see you in an hour.\" \n\nBrea watched as her friend straightened her back and marched into the office building. Once inside, Linda looked up the room number for Dr. Wahlburg. A nice looking young woman greeted her as she entered the office.\n\n\"Hi, you must be Linda,\" she said with a friendly smile. \n\nThe new patient smiled back. \"That's me, at least for the time being,\" she chuckled. \n\nThe young lady hit a button on the intercom. \"Doctor, Linda is here for her appointment.\"\n\nFrom a doorway behind the receptionist's desk, emerged a very professional looking woman who appeared to be in her mid-forties. She approached Linda with a smile and an extended hand. \"How do you do, Linda? I'm Doctor Wahlberg. Come right in,\" she said, leading the way. \n\nOffering her a glass of water, the doctor made her patient comfortable before starting the session. \"Linda, have you recalled anything from your past since we last spoke?\"\n\n\"No, nothing.\"\n\n\"Okay. As we get further along in our sessions, your memory will most likely start coming back in quick flashes. It might last only a couple of seconds, then again you may remember entire episodes of events. Rarely does someone's total memory come back all at once. It's usually in bits and pieces. If this does happen, should you have a flash of memory, no matter how quickly it comes and goes, try to determine what triggered it, something you saw or heard, a smell maybe, or possibly a feeling of d\u00e9j\u00e0 vu, something that provoked the memory. Keep a journal with you at all times. If you should remember something, write it down, along with what you think triggered it.\"\n\nThis was all very encouraging for Linda. Her doctor sounded like she knew what she was doing. \"Doctor, what, ah... what are the chances... you know, that I'll be able to remember things.\"\n\n\"Very good, actually,\" she answered right away. \"Now, there may be things that your mind will refuse to remember, but I'm confident that we can restore most, if not all, of your past, anyway.\"",
        "\"My friend mentioned hypnotism.\"\n\n\"Yes, it's called regression therapy, but there are several different types of treatments and different people respond in different ways. The most general is what we're going to start with. It's called cognitive therapy. It's like exercising your mind. I will give you things to read, puzzles to solve, problems to work on, situations where you must make decisions, things like that. At first, it won't seem like it has anything to do with regaining your memory, but as the mind expands its thought process to comply with the additional work you're giving it, it starts to stimulate the unconscious and wakes up parts of the mind that are currently dormant. \n\n\"It takes time and I don't want you losing your patience. You need to trust me. Can you do that?\"\n\n\"Yes, of course,\" Linda responded. \"Any guess at a timeline, when I might start remembering something? My real name would be nice.\"\n\n\"No, I'm afraid not. It could happen next week, next month, or next year. Are you ready to get started?\"\n\n\"Absolutely,\" she stated with enthusiasm.\n\nFor the remainder of the hour, the doctor played word association games with her. From the answers Linda was giving her, she knew she was right about the young woman having a hard life.\n\nFor the first time since she awoke from her coma, Linda felt hopeful as they finished up. Brea was waiting for her in the outer office.\n\n\"So? How did it go?\"\n\n\"Well, I was born in Oklahoma. My dad is a cattle rancher...\" she was having a hard time keeping a straight face. When she saw Brea's jaw drop, she started laughing.\n\n\"Jeez, Linda, you had me going there for a minute.\" \n\n\"I know,\" she laughed again, \"you were eating it up like candy.\"\n\nLinda turned to the receptionist, who was also chuckling, and made another appointment. \n\nOn the way home, Linda asked if they could stop someplace where she could buy a journal and a couple of pens. As soon as they got back to the apartment, Linda changed out of her skirt and into a pair of jeans before grabbing the vacuum cleaner. They made a good team. Linda cleaned while Brea prepared to make dinner. \n\nAfter the first couple of weeks, things were developing into a regular routine. Brea would drop Linda off at the doctor's, then knock around the mall until it was time to pick her up again. Since their return trip took them passed the grocery store, they'd do the shopping on the way back. They had two full bags in the back seat as they returned home from Linda's fifth therapy session.\n\n\"I'll take one bag, you get the other,\" Brea said as she exited the driver's seat. By the time Linda got around to the other side of the car, Brea had the first bag and had already started inside. Linda was leaning inside the back door of the car, grabbing the second bag when she heard the voice of a young man who was two cars away and had his back to her.\n\n\"I'm telling you it's her, alive and well. HEY, you were the one who said the bitch was a goner, anyway!\"\n\nLinda suddenly saw an image of a shadowy face hovering over, violently ripping and tearing at her clothes. She screamed, dropped the bag, and ran past Brea who had just opened the door to the apartment. \n\n\"Linda, what's the matter?\" She had no idea what had happened but Linda was frantic. Brea quickly set the groceries down on the floor and followed Linda into her room. Linda was sitting on her bed with her arms wrapped around her knees, pulling them tightly to her chest. She was rocking back and forth as she just stared into space.\n\nBrea sat next to her and gently started rubbing back with soothing strokes. \"Linda, what is it? Did something happen in the parking lot?\"\n\nLinda didn't respond but just kept staring.\n\n\"Did you remember something?\"\n\nLinda looked at her friend and slowly nodded.\n\n\"Oh, my God, really? Do you remember what happened to you?\"\n\n\"I heard him. It's exactly what he said, 'the bitch is a goner anyway.' I heard him. He was in the parking lot just now.\"\n\n\"WHAT?\" You stay right here, don't move.\" With that, Brea ran back out to the parking lot to see if she could see anyone, but by that time the kid had disappeared. The rear door of her car was still open so she grabbed the other bag of groceries and went back into the apartment, locking the door behind her. \n\nLinda seemed to be calming down some as Brea returned to her side.\n\n\"There's nobody out there now. Did you see who it was?\"\n\n\"No, I... I'm sorry... I\"\n\n\"Don't be sorry, for Pete's sake, this is a breakthrough, Linda. You remembered something.\"\n\nLinda got a funny look on her face. \n\n\"What is it? Are you remembering more?\"\n\n\"Cory...\" she mumbled, \"I... I think my name is Cory.\" She furrowed her brow in concentration, then a small smile crept across her face. \"Yes, Yes, I'm sure of it, Cory\u2014Corrine,\" she almost hollered, Corrine... Corrine...?\" She was trying so hard. \"Ugh, I can't remember my last name, DAMN,\" she shouted with excited disappointment. \"What are you doing?\"\n\nBrea was starting to dial her phone. \"I'm calling your therapist. She might want you to go right back in to see her.\"\n\nUnfortunately, Dr. Wahlburg had a full schedule but told them to make sure she wrote down exactly what she saw and what triggered the memory. Next, Brea called Morgan.\n\nRarely did she call him on the job, so he knew it had to be important. He pulled the car off to the side of the road and answered. \"Honey, what's up? Is everything okay?\"\n\n\"Honey, Linda's name is Corrine.\" She went on to tell him the whole story. Morgan told her to call the cops immediately and have them send someone to the apartment to take her statement. Lieutenant Ashwood and a patrolman were still there when Morg got home. He was a little surprised to see someone of such high rank. Morgan had met the Lieutenant on just a couple of occasions. He introduced Morgan to the patrolman. A worried Morgan sat with the rest. \n\n\"What's going on, Lieutenant? Do you think the guy who shot her lives in the apartment complex?\"\n\n\"It's a possibility, Morg.\"\n\nJust then, another uniformed officer entered the apartment. \"Sir, I think we have the car from the video.\"\n\nThe lieutenant glanced up. \"Video?\" \n\n\"Yes, Sir, from the hospital... the car that dropped her off.\"\n\nAnxiously standing, the lieutenant looked over at the other cop. \"You stay here with them,\" he barked. \n\nMorgan accompanied both men in blue, outside. \"Sir, it's the same make and model, same color, and it has the same Motley Crew sticker on the bumper. I'm sure this is the same car.\"\n\n\"Did you run the plate yet?\"\n\n\"No, Sir, not yet.\"\n\n\"Well, do it.\" The senior officer looked over at Morgan. \"We just might have gotten very lucky. Have you seen who drives this thing?\"\n\n\"No, no clue.\"\n\nIt didn't take long before the other cop was back, holding a small writing tablet. \"Sir, the owner's name is Brian Kelsey. He's just nineteen, but he doesn't live here. He lives at 6420 South Columbia.\"\n\n\"Shit,\" responded the lieutenant. \n\nMorgan was just as disappointed. \"Now what?\"\n\n\"Well, we'll just have to keep an eye on it until somebody comes out and hops in the driver's seat. It's all we can do.\"\n\n\"What about Li... I've got to get used to her real name. What about Cory? Should we put her in a motel for now?\"\n\n\"I think that'd be best, yeah. Now that we know the perps are still in the area, I can get away with putting her in protective custody. That way the department will pay for the motel. I'll put a female officer in the room with her. Why don't you have her pack some things.\" Morgan turned and walked to the apartment as the lieutenant turned to his patrolman. \n\n\"Park yourself where you won't be seen, but where you can keep an eye on the car. Most likely our boy has a girlfriend or a buddy in one of these apartments, so try to watch and see who exits what apartments. Also, radio in and get a search warrant for his car and residence. We're looking for a gun. I'm not sure what good it'll do us if we do find one. We don't have a bullet for ballistics, but maybe we can use it to bluff somebody into a confession.\"\n\n\"Yes, Sir,\" acknowledged the officer. He immediately got in his squad car, found a place in the back of the parking lot where he'd be inconspicuous, then picked up his radio and called in for the warrant.\n\nIn the meantime, Cory was inside packing some clothes. It didn't take her long; she didn't have that many. The lieutenant spoke into his radio and got things arranged. Cory emerged from her bedroom with a suitcase Brea loaned her. \n\n\"Cory, I'm going to take you to a motel we sometimes use as a safe-house. A female officer will meet us there. She'll be spending the night with you. Hopefully, we'll have you back here tomorrow sometime. Our suspect doesn't live here, but we should have him in custody before the night is over, or by moring at the latest.\"\n\nHe turned and addressed Morgan and Brea. \"What about you guys? You want someone to stay in the apartment with you in case you get a surprise visitor?\"\n\nMorgan looked at his wife to see what she wanted. She smiled back with confidence in her husband. \"We'll be okay,\" she told lieutenant Ashwood.\n\n\"Are you sure?\"\n\n\"Yeah, thanks lieutenant, but we'll be fine,\" Morgan confirmed. \n\n\"Okay.\" He looked toward Cory. \"You ready?\"\n\n\"Yes,\" she answered with a nod of her head.\n\nA female office met them at the motel. Normally, she'd have been in uniform but changed into civies when she got the assignment. They got a room on the second floor, and both cops went through it thoroughly to make sure everything was okay. Lieutenant Ashwood was about to leave when he realized he was hungry. He glanced at his watch and saw it almost seven. His shift ended a couple of hours earlier. \"Ladies, I'm starving, what about you?\"\n\nBoth women were also hungry. There was a take-out menu from the local pizza place on a little corner table near the phone. It took only a minute for them all to agree to the toppings and a large pizza was ordered. \n\nIt was after nine by the time the Lieutenant left. Cory was curious. \"Janet, the lieutenant isn't married? I didn't see a wedding ring.\"\n\nJanet knew damn well she shouldn't be spreading her boss's troubles all over town, but... well, they had to talk about something. \"He just went through a divorce, a pretty nasty one. She's accused him of all kinds of things, shaking down prostitutes for freebies... all kinds of vile crap. I know it was just to get back at him. There're quite a few guys on the force that are not what you'd call paragons of virtue, believe me, but the lieutenant isn't one of them. He's truly one of the good guys. \n\n\"It was actually his wife who was caught cheating. You know, sometimes people can be so stupid. We're trained to be able to detect when people are lying to us. She certainly knew that yet she stood there and lied right to his face. He knew immediately. It took him less than a week to find out who she was sleeping with and catch them in the act.\"\n\n\"That's a shame,\" Cory commented. \"He really seems like a nice guy.\"\n\n\"He is. It's not easy being married to a cop though, even a good one. I sometimes feel sorry for my husband. I know he worries constantly. Every time I walk out the door he wonders if he'll ever see me alive again. That wears on a person. \n\n\"A lot of times we're not that easy to live with, either. We're trained to keep cool and always try to deescalate a situation, but we're still human. I'll tell you, when you're out on the street trying to calm someone down while they're screaming at you, calling you vile names, and then spit in your face,\" she stopped to take a deep breath, \"well, let's just say it becomes very difficult to keep your cool. We have to do it though, but for the rest of the day your anger simmers, so by the time you get home, you're ready to tear somebody's head off and guess who gets the brunt of it... yup, your loving spouse. It isn't fair, but sometimes it's just impossible to avoid. Chad, that's my husband, is a real prince. Sometimes I have no idea how he puts up with me,\" she said with a small smile.\n\n\"Yeah, I see your point. I don't know if I'd like being married to a cop.\" She thought for a second. \"I wonder if I am,\" she chuckled.\n\n\"Yeah, we all have our problems, don't we? I wouldn't want to be in your shoes, either. I heard you're starting to remember some things, though.\"\n\n\"Well, just a very little. I'm almost positive my name is Corrine. I'm not really sure how I know that, though. I don't actually remember anyone calling me that; it's just a feeling more than anything. I got a real quick flashback today when I heard that guy talking. It was hearing the words, the exact same words I heard as they were ripping my clothes off. I remembered that and then the name came to me. I... I can't explain it.\"\n\n\"Are you seeing Jerry's sister in law, the psychiatrist? I know he talked to her two or three times on your behalf.\"\n\n\"Dr. Wahlburg; yes, I've been seeing her since I got out of the hospital. Which reminds me; we called her when I had that flashback. I have an appointment with her tomorrow afternoon.\"\n\n\"We should have that guy in custody by then. I don't think there'll be a problem,\" Janet confirmed. \n\nShe was right. The following morning the desk sergeant caught Lieutenant Ashwood as soon as he walked in the door. \"Lieutenant, we got that guy from last night in a cell, downstairs. His name is Brian Kelsey. He's nineteen years old, but he says he was at work at the time the mystery woman heard the voice.\"\n\n\"Cory,\" the lieutenant replied. \"Her name is Cory. Did we verify his alibi?\"\n\n\"I'm afraid so, Lieutenant, about an hour ago, but I didn't want to let him go until I talked to you.\"\n\n\"Good. Do we know who he was visiting?\"\n\n\"Yeah, some buddy of his, ah...\" he checked his report, \"a Carl Langford, twenty-three; he's lived there for almost two years.\"\n\n\"Did we bring him in?\"\n\n\"Ah, no, I don't think so.\"\n\n\"Shit! Didn't it occur to anyone that if the voice Cory heard wasn't the guy we picked up, it was probably the guy he was visiting? Damn it, we've positively identified the car as the one that was used to drop her off at the hospital and we find it in the same parking lot where she overhears somebody talking about raping her. That's not a coincidence. Send a couple of uniforms over there to bring in this Langford guy, and let's hope he's still there. Tell them if he refuses to come in voluntarily, go ahead and arrest him on suspicion of aggravated rape.\"\n\n\"Yes, Sir. You want us to let the other one go?\"\n\n\"Hell no. What time did they bring him in?\"\n\n\"Ah,\" he looked at his roster again, \"one-fifteen this morning.\"\n\n\"Then we've got till one-fifteen tomorrow morning before we have to let him go or charge him; any sign of a lawyer yet?\"\n\n\"No, sir, he hasn't asked for one.\"\n\n\"Good. Is detective Nobles in?\"\n\n\"Yes, Sir.\"\n\n\"Okay, bring the kid up to the interview room and tell Nobles to sweat him good. He has to be involved somehow. Maybe Nobles can get him to crack. If not, we'll hold him until his buddy gets here, then we'll play one against the other.\n\n\"I'll be in my office. Let me know as soon as they bring Langford in.\"\n\n\"Will do, sir.\" As soon as the lieutenant had his back turned, the sergeant called detective Noble and told him what was said. While the detective ordered that Kelsey be taken to the interrogation room, the sergeant radioed for two patrolmen to pick up the other suspect.\n\nWhile this was going on, Janet and Cora were getting ready to face a new day. While Cora took a shower, Janet called the station for an update. She talked to the sergeant who filled her in on everything that was happening, then told her he'd send someone to relieve her.\n\n\"Don't worry about it, Sarg. My husband is out of town on business for a couple of nights, so I'm on my own right now. Cora's going to need a ride to her therapist later, so I'll just hang out with her today.\"\n\n\"I can't put you in for overtime, not when there's someone else available.\"\n\n\"I know,\" she agreed. \"I'm not looking for overtime.\"\n\n\"Okay, I'll give you a call later and let you know what's going on.\"\n\nCory was just stepping out of the shower as Janet was hanging up. \"I just talked to my sergeant. We have one of the guys in custody. We have a DNA sample from a cup he drank out of. They're on their way to pick up the other one, now, the one who lives in your apartment complex. Hopefully, we'll get his DNA the same way. Once we get a match from the sperm samples, we'll have 'em cold. We know there were three of them, so if we can get them to roll over on the third guy it'll be all over.\"\n\nAll that time, Cory had been putting on a brave face, but inwardly couldn't ditch the fear she felt. She almost collapsed on the bed as she sighed in relief. She closed her eyes and laid back with a smile. \"God, you have no idea how liberated I feel right now.\"\n\n\"I can imagine,\" Janet chuckled. \"I'm still going to stay with you today, though. I'll drive you to your therapist later, too.\"\n\n\"Okay, good. May I use your phone to call Brea and let her know she doesn't have to drive me while you jump in the shower?\" \n\n\"Of course.\"\n\n\"Then can we go out for breakfast when you get done? I'm starving.\"\n\n\"Absolutely. Give me ten minutes.\"\n\nBrea sounded upbeat when Cory gave her the news. \"Okay, thanks for letting me know. I was just looking out the window as you called. There are three squad cars out there. I assume they're here to arrest that guy. I can't believe he's been living here this whole time.\"\n\n\"Yeah, kind of scary, huh. I hope they get that third guy, then at least part of my nightmare will be over. All I'll have to worry about then is getting my memory back.\"\n\n\"I have no doubt it'll happen, Cory. Hell, it's already starting to come back a little. Call me later and let me know if you're going to stay there another day or if you're coming back tonight, will you.\"\n\n\"Will do, Brea, bye.\"\n\nJanet picked the place for breakfast, a little greasy-spoon diner that was a favorite with cops. She figured if anyone was coming after Cory, they'd be nuts to try anything in there. \n\nAfterward, they went back to the hotel and just talked for a little while. Cory learned more about the marital life of a cop. \n\nThey were getting ready to go to Cory's therapy session when she checked her purse. \"Shit,\" she uttered.\n\n\"What's the matter?\"\n\n\"Oh, in all the excitement last night, I left my journal at the apartment. I don't have much in it, but Dr. Wahlburg said I should keep it with me all the time in case I remember something. I was also going to use it for taking notes during my sessions. Would you mind terribly if we swung by and picked it up on the way?\"\n\n\"No, not at all.\" Janet checked her watch. \"We'd better get going then.\"\n\nWhen the girls got there, Cory knew Morgan was at work and wasn't sure if Brea was home or not so she used the key they gave her. \n\n\"You go grab your journal. I'll wait here by the door for you,\" Janet told her.\n\nCory walked down the hall and turned the corner for the bedrooms when she heard Brea talking on the phone. She sounded aggravated. \n\n\"Look, Bob, I told you I'm not going to see you anymore. I don't care. I still think you got me into that motel room by drugging me... because I don't remember drinking that much, that's why. Yes, I do remember, and yes, the sex was great.\"\n\nWith everything else going on in her life, Cory didn't take time to think about what she heard, she just reacted. \"You're cheating?\" Her raised voice expressed her surprise and disappointment. \n\nBrea's head snapped in the direction of the pitiful cry and saw Cory standing in the hall. \"Oh shit,\" she mumbled. \"Bob, I have to go,\" she said before abruptly disconnecting. Before she had a chance to respond, Cory incredulously continued. \n\n\"You're cheating on Morgan? I... I can't believe that. You've got the most loving and devoted husband on the planet and you're... \" she couldn't say it again. She stood there, staring at her stunned friend. Cory's mind spun around like a pinwheel in a hurricane. Her eyes started filling with moisture as the silence grew. ",
        "With her brain in a fog, Cory turned and walked into her room to retrieve her journal. Brea was waiting for her when she came back out.\n\n\"Cory, wait, let me explain.\"\n\n\"There's nothing to explain, Brea. I heard you on the phone.\"\n\n\"But you misunderstood. I'm not...\"\n\n\"Not now, Brea, not now. I can't.\"\n\n\"Cory...\" \n\n\"Leave me alone. I have to go,\" and with that, she pushed past Brea and headed for the door. \n\nJanet saw her and immediately grew concerned. \"Is everything okay? What happened?\"\n\n\"Nothing,\" Cory replied. \"Let's just go,\" she said as she walked passed the female cop and into the parking lot.\n\nOnce in the car, Janet asked again. \"Cory, are you sure nothing's wrong? Something happened in there, anything I should be concerned with?\"\n\nCory remembered how freely Janet talked about the lieutenant's marital problems, she wasn't about to give her more to talk about. \"No, Janet, I'm sorry if I was snotty back there. It's nothing to worry about, honest.\"\n\n\"Okay,\" she replied. \n\nIt was a quiet ride to the doctor's office. Janet went inside with her and said she'd wait in the outer office. Dr. Wahlburg noticed Cory's demeanor immediately. \n\n\"You look upset. Are you starting to remember more?\" she asked.\n\nCory was unconsciously wringer her hands as she sat down. Her mind was so preoccupied, she almost missed the doctor's question. \"Uh, oh, no, no, ah... anything we talk about in here is secret, right, I mean, just between you and me, even if it has nothing to do with my memory, right?\"\n\n\"Yes, that's right. What's bothering you?\" She was watching Cory closely. The worried young woman was staring at the floor, biting her thumbnail. Wringing her hands, chewing on her nails, she hadn't done any of that in her prior visits. Whatever had her so stressed was bringing out some old habits from her past.\n\nCory took a deep breath before starting to speak. The, ah... the people I'm staying with are just fantastic. I mean, I was a complete stranger yet they offered me a place to stay, took me shopping, I don't pay for any food or rent... nothing. They've virtually given me a place to live at no charge until I can get things sorted out. I mean, how do you repay someone for something like that?\"\n\nDoctor Wahlburg knew there was more to it than just trying to figure out how to thank her friends. \"Do you feel the need to thank them right now? Isn't that something that you can do overtime?\"\n\nCory raised her head and looked at the doctor with tears in her eyes. \"I just found out she's cheating on him,\" she said in a flat voice. \n\nIn all her years of practice to fall back on, for some reason that caught the doc completely off guard. A surprised, \"Oh,\" escaped her lips. \n\n\"What am I supposed to do?\" Cory pleaded. \"If it wasn't for them, I'd be roaming the streets. Everything in me says as Morgan's friend it's my duty to tell him, but how do I ruin the life of the man who saved mine? And what about her, what about Brea? Don't I owe her, too?\"\n\nShe was starting to cry harder. \"Why, why would she do that to him? He is so kind, and he loves her to death. If I tell him, it'll kill him, doctor.\"\n\nBy this time, Cory's tears were starting to flow steadily. Doctor Wahlburg stood and walked over to a table in the corner of the room and poured a glass of water. \"Here you go,\" she said as she offered it to Cory. Reaching over, the doc took a box of tissues from her desk and set them down next to her weeping patient.\n\nIt took Cory a few minutes to compose herself. \"What do I do, doctor? You must come up against this kind of thing all the time in your work. Tell me what to do, please.\"\n\n\"I wish I could, Cory. I'm not a couples therapist, that's not my expertise, but as you said, it does come up. Unfortunately, I've never found a one size fits all approach. There're a million different reasons why people cheat on their spouses, and it's never just one thing. It's usually a dozen reasons that all converge into a perfect storm of emotions. Sometimes it takes years, other times it happens on a whim.\"\n\n\"I'm just so damn angry with her,\" Cory roared. \"We were becoming such good friends, but now... how can I be her friend at all, anymore? Whether I tell him or not, how can I go on living there?\" She shook her head. \"As far as that's concerned, I still don't have anywhere else to stay, but it doesn't seem right to keep my mouth shut just so I can go on living there, either. Jesus,\" she cried, \"what the hell do I do?\"\n\nDoctor Wahlburg didn't like to see anyone in that much emotional pain, but on the other hand, that kind of mental stress could very well assist with Cory regaining her memory. \"Cory, I can't tell you what to do, but I can give you a couple things to think about. I know you've only known these people for a short time, but it sounds like you have two friends who are in trouble. If it were my friends, I'd get all the information I could and try to understand what was behind the problem. Every word spoken, every action taken by someone has a motive behind it. To understand the problem, you have to find the motives. \n\n\"The second thing I can tell you is, in my experience, the wronged spouse is usually more likely to forgive when the guilty person confesses rather than if they find out from someone else.\n\n\"That said, you have to do what you feel is right.\" The doctor gave Cory a couple of minutes to digest what she said and to wipe away some tears before she spoke again. \"I'm sorry, but we really do need to talk about what happened yesterday. Try to relax and just tell me in your own words, what happened.\"\n\nWhile Cory was explaining her flashback, lieutenant Ashwood and detective Nobles had taken their two suspects into different rooms for interrogation. The lieutenant was tall and lean, with an intimidating look about him, but Nobles was just the opposite. He was only about five-nine and overweight, with a forever smile across his face. That's why Brian found it so shocking when the smiling detective slammed his hand down on the table and gave him a menacing look. \n\n\"You guys are toast, you know that, right? We already have DNA samples from you and your buddy that matches the seamen you left in that poor girl you raped. We have you dead to rights. Tell me who the third guy is and where to find the gun and I'll talk to the DA about cutting you a deal.\"\n\n\"GUN! What gun? We didn't have any guns. Okay, yeah, we raped her, but if she was shot, it wasn't us, I swear,\" he exclaimed. \"She was stumbling around on the side of the road when we saw her. She fell right in front of our car. We got out to see if she was okay, but she looked like she was almost dead.\"\n\n\"So, instead of calling an ambulance, you guys decided just to have a little fun,\" Nobles sneered.\n\nBrian lowered his head in shame and tears started welling up in his eyes.\n\n\"If you were going to take her to the hospital, why not call for an ambulance when you were done?\"\n\n\"I... I wanted to, but the others didn't want to take the chance. We dragged her back into the woods and left her there. There was so much blood and stuff, nobody thought she was going to live.\"\n\n\"So, what happened? How'd you wind up bringing her into the hospital?\"\n\n\"I... I was feeling kind of sick. The guys dropped me off at the house. I... couldn't get over what we'd done. I drove back out there to see if she was still alive. When I got there she was still breathing, barely, but a little. I got her to my car and drove over to the hospital.\"\n\n\"Did the others know what you did?\"\n\n\"No, Jesus, they'd have beaten the shit out of me if they'd known.\"\n\nNoble's instincts told him the kid was telling the truth. He stopped the tape recorder and removed the tape before sliding a pad of paper and pen across the table. \"Here, write down everything you told me, including the name of the third person who was with you, and Langford.\"\n\nThe detective left the room. The desk sergeant saw him walking his way. \"Did you get a confession?\"\n\n\"Yeah, but only to the rape. The kid says she was stumbling along the road and denies shooting her.\"\n\n\"Shit.\"\n\n\"Yeah, I know. That means there's still somebody out there who may want to finish the job. Where's the lieutenant?\"\n\n\"He's back in his office. The other kid lawyered up real quick.\"\n\n\"Okay, thanks,\" \n\nThe lieutenant had the same reaction as the sergeant when told what the kid said. \"Shit! You really believe he's telling the truth? I just asked for a search warrant for Langford's apartment.\"\n\n\"I don't think you're going to find anything, but what the hell, let 'em toss the place,\" Nobles agreed.\n\n\"Yeah, did you get the name of the third guy?\"\n\n\"I told him to include it in his statement. I'm sure he will. He's completely given it up. He has a conscience at least. He says if the other guys knew he took her to the hospital, they'd beat the shit out of him. I'm sure he saved the girl's life.\" He turned and started for the door. \"I'll bring the kid's statement in for you to read as soon as he's done.\"\n\n\"Good work, John,\" praised the lieutenant. \n\nThe detective smiled and gave a little wave as he left the office.\n\nAs it turned out, Zach Kelsey, the kid's older brother, was the third rapist. Both boys still lived at home with their parents, who were distraught over the actions of their two sons and were cooperative when the police searched the house. They did find a twenty-two caliber handgun, but forensics determined the gun hadn't been fired in years. \n\nAll this time they had assumed the shooter and the rapists were the same, now they knew differently, and although the rapists were behind bars, the investigation was still on-going.\n\nAfter her therapy session, Cory chose to go back to the hotel with Janet for another night, but went back to Morgan and Brea's apartment the next day, despite learning what had transpired at the police station. She thanked Janet for her help and protection as she exited the car, then took a deep breath before going inside and facing her other problem.\n\nIt was almost ten-thirty and Brea was still in her bathrobe. She also knew a showdown was imminent and spent the earlier part of the morning crying. She was sitting at the kitchen table with a cup of coffee when Cory came through the door. \"I'm in here,\" she called out. \n\nCory first went to her room and tossed her bag on the bed. She had paid attention to what her therapist told her and had a plan... well, at least she had a thought regarding what to say. She walked over to the coffee pot and poured herself a cup before taking a seat on the opposite end of the kitchen table. For what seemed like a long time, the two women just stared at each other without saying a word. It was Brea who finally broke the silence. \"You ran out of here before giving me a chance to explain.\" \n\n\"Brea, what is there to explain? I heard you on the phone.\"\n\n\"You heard one side of the conversation. I didn't cheat on Morg, not physically, anyway.\"\n\n\"Brea, you said you were drunk when you had sex with him in a motel room,\" cried Cory.\n\n\"No, I didn't. First, the sex was before Morg and I got together again, and I didn't say I was drunk, I said he drugged me. I can't prove it, but I know that's what he did.\" Cory didn't have a come-back for that, she just sat there and stared with a confused look on her face.\n\n\"Look, I know Morg likes to tell everyone we were high school sweethearts, which we were, but we never really did anything about it. After graduation, we just kind of wandered off from each other. He was so involved with his job at the paper and I went to city college for a while. We were both meeting new people. There was no real break up or anything, we just started communicating less and less. We didn't meet back up for a couple of years. That's when we really fell in love. I'd been with a couple of guys in between. Bob was one of them.\"\n\n\"So you and Morg didn't... I mean, I know it's none of my business, but I just figured you two were each other's first.\"\n\n\"No, in high school, Morg was just too shy. Shit, I even tried prodding him a few times, but he never took the hint. We'd get hot and heavy in the car, sometimes he'd put his hand up my shirt, but he never tried going all the way. I didn't want him to think I was a slut so I never pushed him. I didn't have sex until I started dating another guy four or five months after graduation. He was a few years older. I held off for three dates, but I knew he'd soon drop me if I didn't put out, so...\"\n\n\"Was that Bob, then. He was your first?\"\n\n\"No, to tell you the truth, I don't even remember that guy's name. I know everyone always says you never forget your first, but I did. Bob was the second guy I had sex with. He was a lot more aggressive. He had me in the sack on our first date. Sex with him was like a contact sport. We dated for several months, in fact, we were still dating when I ran into Morg again. For about a month, I dated both of them. By that time I was already rekindling strong feelings for Morg, so I told Bob I was breaking it off. That was the last I'd seen of him until a few months ago.\"\n\nCory was still confused. \"Okay, well something happened. I know damn well I heard you say you weren't going to see him anymore. Something's going on between you two.\"\n\nBrea's expression turned to one of guilt as she nodded her head and continued. \"A few months ago, we ran into each other at the mall. It was right around lunchtime so we grabbed a bite at the food court. It had been almost four years since we'd seen each other, so we had a lot to talk about. He congratulated me when I told him I married Morg and told me he was still single. \n\n\"He had just moved back from California. He works for some computer company who sent him out there as a regional sales manager. He said his numbers were so high that they had him move back to their headquarters here in Chicago, and put him in charge of the training program. He gave me his card when we were done and said to call him sometime. He told me he'd pop for lunch at a nicer restaurant. \n\n\"At the time, I had no intention of calling him, but a month or so later, I was supposed to have lunch with a girlfriend. I was already nicely dressed and looking forward to it when she called at the last minute and had to cancel. I was really disappointed. I thought about Bob and wondered if he would be available on such short notice. \n\n\"Well, that lunch turned into a few more, then when Morg went on the night shift, the lunches turned into dinners. I knew I was crossing a line, but I honestly had no intention of sleeping with him.\"\n\nCory was shaking her head. \"So, you were literally dating this guy while poor Morg was working. Brea, I would think you'd know better than to go out with some guy who was capable of drugging you for sex.\"\n\n\"Cory, I obviously had no idea he had anything like that in mind. The last time we had dinner was a couple weeks before you moved in. He wanted to go dancing. I was apprehensive but finally said okay. I told him I only had an hour, though, before I had to get home.\n\n\"I honestly don't know how we got from the club to the motel, but the next thing I knew, Bob had his arm around me and we were walking down the hall to a room. \n\n\"I know I had to be drugged because I was horny as hell. My brain was telling me to stop, but my body couldn't wait to have him inside of me. Luckily, some guy came into the room and stopped what was going on before it went too far. I still have no idea who it was. I assume he worked for the hotel. He probably noticed me in the lobby, saw that I wasn't in control of my faculties, and got suspicious. Anyway, he got me out of there, put me in a cab and sent me home.\"\n\nCory was somewhat relieved, at least it wasn't as bad as she thought. \"So you haven't seen him since the motel incident... honest?\"\n\n\"Honest.\"\n\n\"Okay, good, then listen, I talked to Dr. Wahlburg about it. I figured she's a pretty smart lady and she's probably helped others in the same situation. She says you stand a much better chance at saving your marriage if you confess and show genuine remorse. She said it'll be much harder if he finds out from someone else.\"\n\n\"Cory, I can't.\"\n\n\"Yes you can, I'll help you. I'll be right there when you tell him and I'll fight by your side to help you save your marriage. Brea, I owe both of you more than I will ever be able to pay back. I sure as hell don't want to ruin your marriage, but trying to keep a secret like this is going fester into problems that will eventually destroy your relationship, I'm telling you.\" \n\nBrea had had those very same thoughts, but she saw no way she could confess. Even though she didn't have sex with him, she knew that Morg would consider her dates with Bob, cheating. It would be a death sentence for her marriage. God, she chastised herself, how could I have been so stupid? Her brain was a muddled mess of mindless torment. She could taste the salty moisture of her anguish as it ran down her cheeks and into the corners of her lips. \"I... I need a little time,\" she pleaded. \n\n\"Brea, please don't wait too long. You don't think this Bob will tell Morg to get back at you for ending it, do you?\"\n\n\"No, shit, he doesn't care about me enough to want revenge; besides, he'd probably be scared that Morg would come after him.\"\n\n\"Then when you're ready, let's you and I sit down and figure out the best way to approach you telling him. If you want, I'll talk to Doctor Wahlburg again. Maybe she'll be able to advise us. In the meantime, you should see what's online.\"\n\n\"Yeah, that's a good idea. Thank you.\" Brea spoke with real gratitude. \n\nThat night, when Morg came home, he thought he detected a little tension in the air, but when he asked if everything was all right, both ladies told him yes. He'd heard about the arrest of the three rapists and thought maybe he was misinterpreting the atmosphere. It was most likely relief.\n\nThat night, Cory dreamed that she was being pulled out of a car. She heard the door slam and tires squealing as it took off. She felt cold, alone, and scared. That's when she realized she was still awake. \"I remember,\" she whispered to herself. She swung her legs over the side of the bed and sat up. She put her head in her hands and tried desperately to remember more. \n\nHer eyes clenched tightly as she concentrated. Screaming, she could hear a woman screaming, but it wasn't her. It sounded like the screaming was coming from over her head. She could feel her heart pounding, she was crying. It was her mother, she was in trouble. \n\n\"No, no,\" she said out loud as the memories started to fade. She anxiously reached for the journal on the bedside table and started to quickly scribble everything down while the memories were still clear in her head. \n\nWhen she was done, she sat there and cried as quietly as she could. What happened? What happened to her mother? Who pulled her out of the car? Not knowing was worse than having no memory at all. She lay back down and eventually cried herself to sleep.\n\nThe first thing she did after waking up the next morning was to check her journal to make sure she wasn't dreaming. It was all there, the screaming, the crying, feeling afraid and lonely as someone pulling her from a car and closing the door on her. She was beginning to wonder if she really wanted her memory back; so far, they'd all been of terrible experiences. \n\nThe smell of coffee was enticing her to join Brea in the kitchen. She loosely donned her robe and stumbled toward the awaiting magic elixir. \"Oh,\" she screamed and turned her back to wrap the terry cloth garment tighter around her body and cinch it close. \"I'm sorry, Morg. I didn't realize you were home. You're usually at work by now.\"\n\nSmiling from the brief glimpse of frontal nudity, he responded. \"Today's Saturday. I'm off today and tomorrow. Monday I start on nights.\"",
        "His schedule was confusing. She didn't even try to figure it out. Cory could feel herself blushing from the unintended flashing. \"Where's Brea?\" she asked, on her way to the coffee pot.\n\n\"Getting dressed, she'll be right out.\"\n\nCory took her cup and sat down. \"I... I'm starting to remember a little more.\"\n\nMorgan's eyes widened. \"That's great.\"\n\n\"Yeah, I'm not so sure. I think something might have happened to my mother when I was small. I also remember somebody pulling me out of a car, but that seems like it's much more recent.\"\n\nAt that point, Brea walked in. \"Honey, Cory is starting to remember things,\" he told her.\n\nShe glanced at her friend as she poured herself a cup of java. \"Really?\"\n\n\"Yeah, but so far everything I remember is pretty upsetting. They're just quick flashbacks. I can't even put them in any kind of context. At first, I thought I was dreaming last night. I was kind of in that state of limbo, you know, like just before you fall asleep. I could hear a woman scream. That's when I realized I was still awake. I'm pretty sure it was my mother. I think somebody was beating her up.\"\n\n\"Oh my God, Cory, that's horrible,\" Brea responded.\n\n\"Yeah, I sure hope my whole life isn't like that, one tragedy after another. I was warned about that, but I didn't really think about it, but now...\"\n\nCory let her thoughts just kind of die in mid-sentence just as the doorbell rang. Morg and Brea looked at each other. It was barely eight-thirty on a Saturday morning, who the hell could be at their door. \"I'll get it,\" Brea volunteered. \n\n\"Make sure you look through the peephole first. Don't open it if it's nobody we know.\" Morg was still being cautious, just in case. He and Cory heard Brea open the door and the murmur of voices. A few moments later she returned with a tall, lean gentleman behind her. Cory was sitting with her back to them. \n\n\"Lieutenant,\" Morg greeted him with a surprised voice.\n\nHe first looked at Morgan, then watched as Cory instinctively pulled her robe tighter. \"Please, off duty I'm Jerrod. Lieutenant is saved for the squad room.\" \n\n\"Jerrod,\" Morgan corrected his salutation, \"can we get you a cup of coffee?\"\n\n\"If it's no trouble,\" he replied. \n\nMorgan scooted his chair over to make room while Brea poured him a cup and set it down in front of him before taking a seat herself. \n\n\"So, Jerrod, what brings you out on a Saturday morning. Anything new in the case?\" Morg asked.\n\n\"Not really, that's why I came over, to see if you've remembered anything more.\" He was facing Cory with a big smile. \n\nCory told him she was starting to remember bits and pieces but nothing that would help in the investigation. As they talked, Cory got the feeling that he was clumsily trying to flirt with her a little. She felt self-conscious, dressed only in her robe. With everything happening, she hadn't had an erotic or sexual thought since waking up in the hospital. \n\nShe was starting to notice the chiseled features of his face, the high cheekbones, squared chin. He wasn't male model material, but he wasn't bad looking in a rugged kind of way. Cory found herself subtly flirting back. She remembered what Janet had told her about him going through a bad divorce. \n\nHe only stayed half an hour, but in that time the real reason for the good lieutenant's visit became apparent to everyone, he wanted to see Cory again. Brea showed him out then returned to the kitchen. \n\n\"Well, it would appear that Cory has a big strong policeman sweet on her,\" Brea joked. \n\nCory blushed. \"It wasn't just my imagination then? I thought he was coming on to me a little bit, but I wasn't really sure,\" she replied with a very slight smile. \"He seems like a nice guy, but I can't even think of being in any kind of relationship until I find out who I am. Hell, I might even have a husband... kids, maybe,\" she said as an afterthought. \"Besides, he just went through a bad divorce.\"\n\nBoth Brea and Morg were shocked at her last statement. \"How do you know that?\" Brea questioned.\n\n\"Janet, that female cop I stayed with; she was a fountain of information. I think I know more about what goes on in that station and who's sleeping with who than the lieutenant does,\" she joked. \n\n\"Damn,\" cursed Morg.\n\n\"What?\" his wife asked.\n\n\"Well, I was thinking we should all go out and do something today. You ladies have been cooped up in the apartment for too long. I thought we could go down to the lake or maybe the zoo, or one of the museums, or something. I should have asked Jerrod if he'd like to go with us, but I didn't think of it. Now he's gone and I don't have his personal number.\"\n\n\"I do,\" volunteered Cory. She saw the looks she was getting. \"Well, he gave it to me the other night when I went to the hotel. He said in case of an emergency I should call him.\"\n\n\"This sounds like an emergency to me,\" laughed Brea.\n\nThe call was made and Jerrod jumped at the chance. Navy Pier was their first stop. She wasn't quite sure just how he did it, but Jerrod talked Cory into going on the Ferris Wheel, with one stipulation, Morg and Brea had to go, too. Since it was his idea, Jerrod insisted on paying for all of them. \n\nOnce they were back on terra firma, they grabbed lunch while listening to the waves of Lake Michigan lapping against the pier. From there they walked the two miles along the lakefront to the Field Museum. The sun was going down by the time they returned to the apartment. All four were beat and knew they'd have no trouble getting to sleep that night. They all poured out of Morgan's car as soon as he turned the engine off.\n\n\"What a fun day,\" Cory said, with a big smile. \"I can't remember when I've had a better time.\"\n\nThe others looked at her, not quite knowing what to say. It was Brea who got the joke first and laughed. Morg and Jerrod followed suit. \n\nOn the way home, everyone convinced Jerrod to stay for pizza. It was almost ten when he left. Cory walked him out to the parking lot. Once they were alone, Jerrod took the opportunity to say what he'd wanted to say all day.\n\n\"Cory, I... ah, I know this is a bad time for you, but, ah, well, I guess what I'm trying to say is, I'd like to see more of you. I wonder if you'd go out to dinner with me sometime?\"\n\nHe hadn't been very subtle with the signals he'd been sending all day, so it didn't come as any shock. She liked him, too, but there was one thing bothering her. \"Jerrod, do you think you're ready to start dating so soon after your divorce?\"\n\nNow he was shocked. Hell, she knew more about his life than her own. His brain went into hyper-drive trying to figure out... then he realized, \"Janet, the worst blabbermouth in the eighteenth squad,\" he said with a smile.\n\n\"Oh, I hope I didn't get her in trouble.\"\n\n\"No, not really. Everyone knows about Janet's flappy gums. To tell the truth, I wasnt sure myself until today. I really enjoyed your company, Cory. I'm ready.\"\n\nShe smiled. \"In that case, I'd love to go to dinner with you sometime.\"\n\nThey, both had broad smiles across their face as they parted.\n\nLater in the week, Cory told her therapist about the flashbacks. \n\n\"Do you know what may have triggered it?\" the doctor asked. Cory was trying to remember, but the doctor already had a good idea. \"Last time you were here, Cory, you told me about your friend cheating on her husband. Could that have been a factor?\"\n\n\"You're right, I was talking with Brea earlier that day about it. I told her what you said about confessing.\"\n\nDr. Wahlburg was nodding her head. The catalyst for Cory's recall was becoming clear. \"It's evident that you've had a lot of stress in your life, Cory. It's most likely the reason for your memory loss, and I'm afraid it's going be the stimulus for you regaining it.\"\n\nNot really the words of encouragement Cory was looking for. Between knowing she'd been raped by 3 men, not knowing if someone was out there looking to kill her, and her friend's infidelity, more stress was the last thing she wanted. Still, if it helped her get her memory back, she would do whatever it took. \n\nToward the end of her session, Cory couldn't resist telling the doc about her tall policeman. \n\n\"Are you talking about Lieutenant Ashwood?\"\n\n\"Yes, you know him?\"\n\n\"Of course. He works with my brother in law, Jerry Wilson, remember? Jerry's the one who hounded me day and night until I agreed to take your case.\"\n\n\"That's right, I'm sorry, I never thanked him. I really should send him a nice thank you card.\"\n\n\"He's asked how you're doing a couple of times. It seems you're somewhat of a celebrity at the station house.\" \n\n\"Me?\"\n\n\"Yeah, according to Jerry, anyway. It's nice to see Jerrod is getting out there already. I know the people he works with are all rooting for him to get out and start enjoying life again. He's a nice man with a head on his shoulders. Everyone knows it won't be long before he's made commander and given his own district.\"\n\n\"I, ah... there's no problem then, I mean... no reason why I shouldn't date him?\"\n\n\"None that I can see,\" the doctor responded. \n\nIt had been a good session and Cory was grinning from ear to ear as she walked out into the waiting room. Brea joined her as they scheduled another appointment with the secretary for the following week. On the way home, they stopped off so Cory could buy a thank you card for. A little later, Brea was making dinner while Cory sat at the kitchen table, writing a nice thank you note to Jerry Wilson. \n\nThat was about the same time that mob boss, Vito Generssi was summoning his enforcer. \"The feds found Johnny's body.\"\n\nTony's jaw about hit the floor. \"No way, Jesus, we dug all night to make sure he was deep enough in the ground that nobody would ever find him.\"\n\n\"Yeah, well somebody did, and I've got more bad news for you. Remember the broad in the hospital? Well, word is she was found stumbling around not more than a mile from where you whacked him. I knew the timing was more than a coincidence, but you were so damn sure you nailed her; you never miss, isn't that what you told me? Still think you never miss,\" he angrily challenged.\n\n\"Okay, okay, like I said, she came out of nowhere. She caught me by surprise, but I'm telling you, boss, she was too far away to recognize anybody.\"\n\n\"So you keep telling me.\"\n\n\"Besides, isn't she the one who can't remember anything?\"\n\n\"Yeah, well I'm not taking any chances. I want that broad eliminated. You think you can handle that?\"\n\nTony hung his head. \"Yes, of course.\"\n\n\"Good, she's staying with some newspaper reporter or photographer or something. Find her, and, Tony, don't screw up again.\"\n\nThe reprimanded hitman knew exactly what his boss was implying... if he screwed up this time, he'd be the next one pushing up daisies. \"I'll take care of it, Vito.\"\n\nIf the tip about the newspaper was legit, Tony would find her in no time. The mob had eyes and ears all over the city, including the police department and the newspapers. \n\nA couple of nights later, Brea was sitting on the couch watching a late-night talk show when Morgan came home from working the night shift. She knew immediately something was wrong. He didn't greet her with his usual kiss; in fact, he didn't greet her at all. Instead, without a word, he went directly into the kitchen and got himself a beer from the fridge. \n\nCory and Jerrod were just coming back from a date. They were in the parking lot, talking when Morgan pulled in. Jerrod was busy looking into Cory's eyes, but she was watching Morg. \n\n\"Something's wrong,\" Cory said.\n\n\"Why? What do you mean?\" \n\nShe could tell Morgan was angry by the way he flung the car door open and got out. \"I'm not sure,\" she replied, \"but I hope it's not what I think I it is. I'd better get in there.\"\n\n\"You want me to go in with you?\" \n\n\"No, no,\" she planted a quick kiss on Jerrod's lips, \"I'll be fine,\" she said, and before he could get out and open her door, Cory was already striding quickly across the lot, towards the apartment. Not knowing what was going on, Jerrod wasn't about to leave until he was sure everything was all right. He turned the radio on and sat back to wait. \n\nWhen Morg hadn't returned to the living room, Brea went looking for him. She found him sitting at the kitchen table with his beer. He looked like he was having trouble breathing. His eyes were glassy as if he'd been crying and she could feel the tension from across the room. Brea tentatively took the chair on the opposite side. \"What's the matter, honey?\"\n\nMorg was slumped over to one side, staring at the beer he was twirling in fingers. \"Remember Stan McCarthy? We went to his Fourth of July party a couple of years ago. He was a sergeant on the force.\"\n\n\"Vaguely,\" she replied. \"I remember going to the party, but almost everyone there was a cop. I... I don't really remember one from another.\" \n\n\"Well, he remembers you. Several times during that party he told me what a lucky guy I was.\"\n\nMorg was talking in a monotone voice that was starting to scare Brea. He obviously wasn't himself. She was getting anxious. \"Honey, what's wrong? Did something happen to him?\"\n\nNot answering her directly, Morg continued with his flat toned oratory. \"He's been going to night school, trying to work his way up to detective. When he got his certificates, Chicago had no room for him in their detective bureau so he got a job with the Des Plaines force.\"\n\nSuddenly the hair stood up on the back of Brea's neck. Des Plaines was where she rendezvoused with Bob. \n\nMorg resumed. \"A while ago, he was at the Cherry Lane Motel on Oakton, investigating a robbery they'd had there and who do you suppose he saw walk in with some guy?\"\n\nNo, no, this can't be happening, she told herself. There was no longer any doubt, the Cherry Lane Motel was where Bob had taken her. Through moisture ladened eyes, she could now see the anger in her husband's face.\n\n\"Stan was at the counter when a Robert Castens registered and got room number one twenty-two. He said the guy put his arm around your waist and helped you to the room. He talked the clerk into giving him a key-card by explaining that adultery is a crime in Illinois and threatened to charge the guy as an accomplice. \n\n\"Stan told me you were already down to your panties by the time he walked in. He found you lying on the bed with you're your arms around Castens neck while he was sucking on your tits. He said you appeared to either be high or drunk, he couldn't tell which. Not knowing the situation, Stan said he helped you get dressed and put you in a cab. By the time he got back to the room, that Castens guy had taken off.\"\n\nHis voice was getting louder. \"Jesus Christ, Brea, I know half the cops in Chicago and a bunch more in the suburbs. Did you REALLY think you could get away with cheating on me, or was it that you just didn't care if you caught?\"\n\nBrea wanted to answer him but by then she had her head in her hands and was crying too hard to say anything.\n\n\"Morg, she's pretty sure that guy drugged her. She was going to tell you herself.\"\n\nNot wanting to look at his wife, Morgan had been staring so intently at his beer that he hadn't noticed Cory standing in the doorway. Not only did the chorus of a third voice shock him, but so did her words. \"You knew?\" he asked with an angry voice.\n\n\"Only for a little while,\" she explained. \"She's been trying to find a way to confess, but she's been terrified. It's not what you think though, Morg. You have to hear her side of it.\"\n\nThis was just too much for Morgan. He had known about Brea's infidelity for few hours, but now to find out Cory knew about it and hadn't said anything after everything he'd done for her, was just too fucking much! \n\nWithout another word, he stood and headed for the front door. \"Morg, WAIT!\" Cory yelled and tried to grab him as he passed her. \"Where are you going?\"\n\nJerrod was still watching from his car when he saw Morgan almost rip the apartment door off its hinges on the way out. The lieutenant was already getting out of the car as his angry young friend sped out of the parking lot as if the devil was on his tail. He saw Cory come running out in distress.\n\n\"What the hell is going on?\" he demanded. \n\nCory ran into his arms. \"Oh, Jerrod, you have to stop him. Brea got caught in a motel room with another guy and I think Morg knows where the guy lives. I'm afraid he might go after him.\"\n\nJerrod had seen way too many situations like that in his career. Most of them did not end well. He pulled his phone out and speed-dialed the station. \n\n\"Chicago Police Department, eighteenth district.\"\n\n\"Sal, this is Lieutenant Ashwood. I need an APB on Morgan Johnson. He's driving a white Ford Escape with a press I.D. in the rear window, last seen at Waveland and Bosworth about five minutes ago. Just stop him and call me. Again, just stop him and call me. Do not, I repeat, do not use force. He may be heading into trouble and I just want to talk to him. Copy?\"\n\n\"Got it, Lieutenant. I'll send it out right now.\"\n\nHe disconnected the call and asked Cory if she knew where the other guy lived. She said no, but Brea probably knew. They both went inside and found Brea still sitting in the kitchen, looking petrified.\n\nHer eyes were all puffy and they could see the streaks of tears staining her cheeks. \"Did you stop him?\" \n\n\"No, he took off. Do you know where Bob lives?\"\n\nYou could see her expression change as Brea just realized the implication of Cory's question. \"You don't think he's gone after Bob, do you. Oh, my God, we've got to stop him.\"\n\n\"Brea, that's what we're trying to do,\" Jerrod interjected. \"Where does he live?\"\n\n\"I... I don't know. He works in Des Plaines, but I don't know where he lives, somewhere in the city, I think.\"\n\n\"What's his name?\"\n\n\"Bob Castens.\"\n\n\"Great, there's probably fifty of them in Chicago,\" commented an exasperated Jerrod. \"Let's hope Morg's spotted by a patrol car before he does anything stupid.\"\n\nCory looked at him with pleading eyes. \"Jerrod, can you stay for a while?\"\n\n\"Yeah, I'm not going anywhere.\"\n\n\"Thank you,\" she said as she reached up on her toes and kissed him on the cheek. \"It looks like it might be a long night. How about if I make a pot of coffee?\"\n\n\"Sounds good,\" affirmed the lieutenant. \n\nFifteen minutes later, Jerrod had just taken a sip of coffee when his phone rang. He grabbed it immediately. \"Yes?\"\n\n\"They've got him pulled over on Irving Park, Lieutenant. He's sitting in the front seat of the squad. You want me to patch you through?\"\n\n\"Yeah, Sal, that'd be great.\"\n\n\"What the hell's going on, Jerrod? You put an APB out on me? What the fuck did I do?\"\n\n\"Calm down, Morg. You haven't done anything, I hope. Where're you going?\"\n\n\"What business is that of yours?\" \n\n\"Well, if you're on your way over to Bob's house, it'll be my business soon enough.\"\n\nJesus, Morg thought to himself, does the whole fucking world know about Brea and this guy? \"So, what am I supposed to do, Jerrod, just roll over and play dead? What the hell would you do?\"\n\n\"Come on home. We'll talk things over. Maybe it's not as bad as you think.\"\n\n\"I'm not going back there, not right now.\"\n\nJerrod sighed in frustration. \"Well, if you go beat the crap out of that guy, I'll put you in cuffs myself. I went through the same thing myself last year. I know exactly what you're thinking, but that's not the way. I mean it, Morg, stay away from him.\"\n\nThis time it was Morgan who let out a sigh. \"Yeah, okay, fine, but I'm not going back there. I'll get a motel room someplace.\"\n\n\"Promise?\"\n\n\"Yeah, I promise.\"\n\n\"Okay, give the radio back to the officer.\"\n\nJerrod thanked the cop for spotting Morg, before signing off, then called the station and canceled the APB. There wasn't anything more he could do.\n\n\"Is he okay?\" both women asked as he disconnected.\n\n\"I think so. He said he's going to spend the night in a motel.\" The lieutenant looked at his watch and saw it was well after midnight. \"I'd better get going,\" he said. \"I have to be at the station at six. Will you girls be all right?\"",
        "\"Yeah, we'll probably be up most the night, crying,\" Cory replied. \n\n\"Well, don't hesitate to call if there's a problem.\"\n\n\"We won't. Thanks again for your help, Jerrod.\" Cory put her arms around his neck and kissed him goodbye before walking him to the door. \n\nWhen she returned to the living room, Brea had tucked her feet up under her butt and her whole body was rocking back and forth. \"What am I going to do, Cory? What am I going to do? I've lost him, I know it. He'll never forgive me, I know him.\"\n\nCory was using all the self-control she could muster. What she really wanted to do was slap the shit out of her friend before screaming at her, and telling her what a fool she was, but she couldn't do it. \n\nDespite Brea doing something so stupid, Cory wasn't about to desert her. She put her arm around her weeping friend and pulled their bodies together. \"Give him some time, honey. Right now he's in no mood for listening to anything we say. We need to give him a little time to lose some of that anger.\"\n\nIt was going to take a while for Morgan to lose his anger. He finally found a motel that wasn't too expensive and got a room for the night. There was a bar across the street. He contemplated the short walk but decided it was more important to keep a clear head than try to drink his troubles away. Hell, they'd still be there in the morning and he'd have a hangover on top of it. \n\nMorg sat on the edge of the bed and looked around the empty room. It wasn't the first time he'd been alone, but it was the first time he felt lonely. Whereever he went, whatever he did, he always felt her inside of him. She was like a light that illuminated his soul and neither the separation of time nor miles could make the light shine any less brightly... until then. As he sat there, he felt empty inside, saw only darkness and suffered with thoughts of betrayal. \n\nMoisture was building in his eyes and his vision was getting blurry. He took a deep breath and pushed his grief aside. He couldn't remember the last time he'd cried and he wasn't going to allow the self-indulgence of feeling sorry for himself. He went into the bathroom and washed the tears away.\n\nWhen he returned, Morg stretched out on the bed and laced his fingers behind his head. His brain was tormented by a dozen questions, but one kept coming back over and over again; was this Bob character the only one, or were there more?\n\nHe felt like such a sucker, such a loser. While he was at work, trying to build a future for the two of them, his wife was out catting around with other men. He kept chastising himself. How could he have been so na\u00efve, so downright stupid? On top of that, Cory evidently knew and never said anything. \n\nThe more he tried to calm himself, the more his thoughts turned to the swine she was sleeping with...Robert Castens. All he had was the name. He thought about Jerrod issuing the APB and actually found it a little amusing. 'He thought I knew where the prick lived,' he remembered. 'I wish I did. There's got to be a way to find out, but how?' He laughed at the irony, in today's world, privacy is almost non-existent, yet it's harder to find someone's address than it was in the days of land lines and telephone books. \n\nHe stared up at the plain white ceiling while his brain ran through the possibilities. He knew it was a long shot, but the only thing he could think of was the motel where asshole had taken Brea. 'Maybe he works around there or somebody knows him,' he thought.\n\nHe took a couple of deep breaths and decided to try and get some sleep. He was physically tired and emotionally exhausted. He'd be able to think better in the morning. \n\nThe light of a new day could barely break through the dark curtain hanging over the following dawn. Cory and Brea had fallen asleep on the couch and woke up with stiff necks and heavy hearts. \n\nMorgan had drifted in and out of consciousness several times through the night but finally gave up on trying for any real sleep when he saw light coming through the drapes. \n\nEven Jerrod had a restless night. He had gotten to know Morgan better while dating Cory, and what he knew, he liked. He had seen it too many times; guys who were the real victims wind up losing their jobs and even spending time in county for doing something stupid. He didn't want to see it happen to Jerrod. \n\nOn the way to his office, Jerrod spotted Charlie Watt, the officer who was standing guard outside Cory's hospital room. He remembered Charlie talking about Morg. \"Hey, Charlie, can I see you in my office a minute?\"\n\n\"Sure thing, Lieutenant, what's up,\" he asked as he followed his boss.\n\n\"Charlie, how well do you know Morg Johnson?\"\n\n\"Ah, pretty well, I guess. My wife and I have gone to a few shows and things with him and Brea, and we play golf together sometimes, why?\"\n\n\"Is he the kind of guy to seek revenge against someone who did him wrong?\"\n\nCharlie's mouth dropped open. \"What'd you do, boss?\"\n\n\"Not me, you idiot,\" he said, somewhat jokingly, \"just anyone who crossed him.\"\n\nNow he had Charlie worried. \"I don't know. I know he doesn't back down. He went with us when we raided that whorehouse last year. One of the johns threatened him, said he'd ram the camera up Morg's ass if he took a picture. Before I could even say anything, Morg pinned the guy against the wall and snarled something to him. I didn't hear what he said, but it looked like he put the fear of God into that guy. When Morg let him go, he took half a dozen shots of him, and no more was said. I don't know about revenge, but I wouldn't want to be on his bad side.\" \n\nThat really wasn't what Jerrod was hoping to hear. \"Okay, thanks, Charlie.\"\n\n\"What's going on, Lieutenant? Is he in trouble?\"\n\n\"I can't really say, Charlie, but you might want to reach out to him after your shift, today.\"\n\nBrea and Cory sat at the kitchen table with their coffees, discussing what to do. They didn't want to crowd him, but neither did they want to give him the idea they didn't care. They decided to send him several texts throughout the day. Brea sent the first one a little after eight a.m.\n\nPlease believe me when I tell you I never had sex with Bob nor did I intend to. I do admit, some of the things we did would not have passed the husband test, and for that, I am deeply, deeply sorry.\n\nCory sent the next one a couple hours later. It was short and to the point.\n\nI owe you so much. I'm sorry I didn't tell you, but I just didn't have it in me to hurt you like that.\n\nMorg was at a Denny's restaurant having breakfast when the first text came in. He looked at it, but the words meant nothing to him. He was too busy trying to figure out how he would get Casten's address if things didn't pan out at the motel.\n\nThroughout the day, he'd heard his phone buzz with a few more text messages but he hadn't checked them. He had other things on his mind. He was headed into work when his phone rang. He glanced at the screen and saw it was Charlie. After answering, Charlie asked him out for a beer but was disappointed when Morg told him he was on the night shift for the rest of the week. Reluctantly, Charlie said goodbye without learning what was so concerning to Jerrod. \n\nAs soon as Morgan walked into the newsroom he grabbed his assignments and went through them. He made one phone call and got one of them moved up half an hour. That gave him a big enough window between jobs to get over to the Cherry Lane Motel and ask some questions. \n\nHe got there a little after seven. The lobby was empty when he walked in and there was only one young man behind the desk. Morg put on his biggest, friendliest smile and approached. \"Hi,\" he greeted.\n\nThe young man matched his smile. \"Yes, sir, how can I help you?\"\n\n\"I was just wondering if you were working this shift last month when you had that robbery?\"\n\n\"Are you a detective? Did you catch him?\"\n\nFor a second, Morg thought of lying but changed his mind. \"No, just a concerned citizen,\" he answered.\n\n\"Oh?\" The smile slipped from the young man's face. \"I know it wasn't your stuff that was stolen, so what concern is it of yours?\"\n\nFrom the guy's answers so far, Morg was convinced he had the right person. He was going to level with him. \"There was another incident that night. A guy came in with a woman who was probably drunk and got a room while the detective was standing here, remember?\"\n\nHe did remember, but he wasn't going to admit to anything and he didn't like being interrogated. \"Look,\" he said a little unkindly, \"if you'd like to rent a room, I'd be happy to help you; otherwise, I have work to do.\"\n\n\"The woman is my wife,\" Morgan exclaimed, \"and I think that guy drugged her.\"\n\nThat seemed to change the clerk's attitude. \"Oh,\" he said with what sounded like empathy. \"Look, nothing happened. I gave that detective a key-card to the room and he took her out of there and put her in a cab. They didn't have time to do anything together.\n\n\"I can't give you the surveillance tapes. I already gave them to the detective because of the robbery that night.\"\n\nShit. Morgan cussed himself out under his breath. Surveillance tapes, he'd never even thought of that. \"Okay, I've already got the guy's name, but I'd really like to track him down. By any chance do you know if he works around here, or have any idea how I can find out where he lives?\" Morgan's hopes went up when he saw how the young man looked at him.\n\n\"What are you going to do? You're not going to kill him or anything, are you?\"\n\n\"No, I'm not going to kill him. I just want to know if he drugged her and if it was the only time.\"\n\nThat sounded reasonable to the clerk. \"The guy's been in here several times, mostly with a pretty blond, but I've seen him with a few others as well. I don't know where he works, but he has a vanity plate on his car. He drives a silver Hyundai with 'castcar' on the license.\"\n\nThe smile on Morg's face suddenly stretched from ear to ear. He started to pull a twenty out of his wallet.\n\n\"Uh, sir, I can't take that. You're on candid camera,\" the young man said with a slight nod of his head toward a camera in the corner. \"If the manager saw me take the money he'd wonder why, and I'd rather keep this conversation between the two of us.\"\n\n\"Okay, here,\" Morg replied. \"If they see me give you a business card, they'll just think I'm a salesman. Do you by any chance have any older relatives with a birthday coming up?\"\n\n\"Ah, well, I've got a grandmother who's going to be seventy-five this year. I don't know exactly when though.\"\n\n\"Well, when you find out, give me a call at this number and I'll make sure she gets her picture in the paper on her birthday.\"\n\nThe clerk picked the business card up from the counter and saw he was a photographer with The Tribute. \"Really? Hey thanks, she'll love that.\"\n\nMorgan had a new spring in his step as he walked back to his car. His first thought was to ask Charlie to run the plate for him but then had second thoughts. Rarely did Charlie ever call him to go out for beers after work. He had a wife and kids and loved spending his spare time at home with his family. Morg wasn't stupid. He figured Jerrod blabbed about his problem so Charlie would be reluctant to give him any info. That was okay. He knew a ton of other cops all over the city. He'd find one to run the plate for him.\n\nThat night, as he was finishing up at the paper, Morg decided to go home. Even at sixty-five dollars a night, he couldn't afford to live at the motel. Brea's heart started to pound as she saw him walk through the door. He still had on the same clothes from the night before, which made her wonder if he was staying or just grabbing a wardrobe change.\n\nShe stood, frozen with fear until she saw him put his photography bag away. That was a good indication he was going to spend the night, anyway. \n\n\"Where's Cory?\" he asked as he passed her on the way to the fridge for beer.\n\nShe almost didn't recognize his voice. It sounded flat and uncaring. Maybe it was just her guilt that perceived it that way. \"Ah, she's out with Jerrod.\"\n\n\"Huh, I would have thought she'd stay home and keep you company,\" he commented, snidely.\n\n\"She offered, but I was hoping you'd come home and I thought maybe we could sit down and talk. I... I know I...\"\n\n\"I'm not in the mood to talk yet, Brea. I don't know if I'm more hurt or angry right now, but I'm certainly not ready to discuss anything.\" He walked over and plopped down in a kitchen chair, took a sip of Miller's, and set the bottle on the table. \"I just don't get it. I thought we were so happy. I thought you felt the same way I did, that you loved me like I loved you.\"\n\n\"I do love you, Morg. Please believe me, I never had any intention of having sex with him, not really.\"\n\n\"Not really? What does that mean, not really? What--you were playing some kind of game or something, catch me if you can?\"\n\n\"No, no, I...\"\n\nMorg raised his hand and shook his head. \"Forget it. I'm sorry I brought it up. I really don't want to talk about it right now.\"\n\nJust then they heard the door open. Both Jerrod and Cory saw Morg's car in the lot so Jerrod decided to come in and just make sure things were okay. Morgan didn't feel very sociable. \n\n\"There he is, public enemy number one,\" joked Jerrod, trying to lighten the mood. \n\n\"Yeah, ha, ha,\" Morgan sneered. \"Whatever gave you the idea I knew where this asshole lives?\"\n\n\"Don't you?\"\n\n\"No, of course not. How would I?\"\n\n\"Well, you know a lot of people, Morg, a lot of cops and people in high places; it's not unreasonable to think you might have gotten his address somehow.\"\n\n\"Yeah, well I didn't.\"\n\n\"Where were you going then?\"\n\n\"Anywhere but here,\" he emphatically responded. \n\nEveryone could see Morg was still in no mood to talk to anybody. Jerrod bent over and kissed Cory. \"I'd better get going,\" he said. \n\n\"Yeah, I have an appointment with Dr. Wahlburg tomorrow, so I'd better get some sleep as well,\" Cory replied. \n\nThey both walked to the front door where they said their goodbyes a little more passionately. On the way to her bedroom, Cory called out, \"Good night.\"\n\nBrea was the only one who returned her adieu. Both she and Morgan sat at the table, neither knowing what to say to the other. Brea finally broke the silence.\n\n\"Are you coming to bed?\"\n\n\"I'll sleep on the couch,\" Morg replied. \n\nBrea felt hurt but wasn't surprised. She made a regretful sigh. \"If you change your mind or find you're getting a stiff neck, you're more than welcome to join me, although I hope you already know that. Good night, Morg. I love you,\" she said as she got up and headed into the bedroom.\n\nMorgan sat, sipping his now, lukewarm beer. He was more concerned with tracking down her lover. Originally, he was just wanted to deck the SOB, but he decided he'd rather ask the prick some questions that he'd later be able to ask Brea and see if their answers matched... then deck the SOB!\n\nWith Jerrod at the eighteenth district, he knew he couldn't go there to run the license plate, but he knew as many cops in the first district and he was sure he'd find one who would be accommodating. He had to make up a story as to why he wanted the information. He hated lying to anyone, but especially a cop. He had a good rapport with them and didn't like jeopardizing it. \n\nIt felt strange when he lay down on the couch. He really hated the situation he was in. He'd have given anything just to have things back the way they were.\n\nThe next morning, Brea was still tired as she sat up in bed. Her eyes were puffy and red from crying most of the night. The first thing she did as she walked to the kitchen was look over at the couch. He was gone. She assumed he'd be in the kitchen, but found only Cory making a fresh pot of coffee. \n\n\"Where's Morg?\"\n\nCory turned her head and almost gasped at the sad-looking sight in the doorway. \"I don't know. He was gone when I got up.\"\n\n\"Shit, I was hoping he'd at least stick around and have breakfast with us. What time is your appointment with the doctor?\"\n\n\"Ten-thirty,\" Cory replied. \n\nMorgan was already walking into the first district police headquarters, looking for a likely candidate. He saw Bill Taylor. \"Hey, Bill.\"\n\n\"Morgan, how are you?\"\n\n\"Doing good, thanks. Hey, do you think you could do me a favor?\"\n\n\"If I can, what do you need?\"\n\n\"Could you run this plate for me?\" he asked while holding out a small piece of paper.\n\n\"Morg, we're not supposed to run plates for civilians, you know that.\"\n\n\"Yeah, I know, but this guy hit my wife's car yesterday. Our neighbor saw it and wrote down the plate for me. I'd really appreciate it.\"\n\n\"Just turn it into your insurance company, Morg. They'll take care of it.\"\n\nMorgan hadn't expected that response, but he was a quick thinker. \"Yeah, I know, but I thought I'd give the guy a chance to take care of it without going through the insurance companies. It's not that bad. It'll probably take a couple hundred bucks to fix. If it was me, I'd rather pay it out of my own pocket than go through my insurance.\"\n\n\"The guy hits your car, doesn't leave a note, and you still want to give him a break? You're a nicer guy than I am, Morg. Okay,\" he said, taking the paper from Morg's hand, \"give me a minute.\" He walked over to one of the computers along the wall and logged in. He was back in just a few minutes and gave the paper back to Morgan. \"Here you go.\"\n\n\"Thanks, Bill, I owe you one. \n\n\"You mean that? My wife and I just had a baby. I'd love a nice family photo.\"\n\n\"You got it, my friend.\" Morgan removed another business card from his wallet and handed it to the uniformed officer. \"Call me and we'll get it scheduled.\"\n\nThe address was in Rosemont, normally a thirty-five-minute drive, but it was rush hour, he figured at least an hour. He looked at his watch. It was almost eight. Chances were the guy would be at work by the time he got there. The next day was Saturday, he was off. Tomorrow it is, he told himself. \n\nLater that morning, Brea took a seat in the small waiting room of Dr. Walhlburg's office while her friend went in for her weekly session. As Cory took her seat, the doctor could immediately see something was wrong and asked about it. Cory told the doctor about Morg's discovery and how the situation had deteriorated. Dr. Wahlburg was sympathetic but had a more important agenda. \n\n\"I'm sorry to hear that,\" she told Cory. \"You think they'd both be open to marriage counseling?\"\n\n\"Would you?\" Cory excitedly asked.\n\n\"No, not me. As I said before, it's not my area of expertise. I can, however, recommend some excellent therapists who specialize in that field. I'll be more than happy to give you a couple of names before you leave here today.\n\n\"However, this is your time, and I want to concentrate on getting you well, so I want you to sit back, close your eyes, and forget about your friend's problems for now. I want you to clear your mind.\"\n\nIt was easier said than done, but Cory did her best. After a couple minutes of silence, she felt relaxed. The doctor must have sensed it because only then did she speak. \n\n\"Cory, does the name Houston mean anything to you?\"\n\nShe opened her eyes as she started to answer. \"Well, I know it's in Tex... as,\" she said, drawing out the name of the state. She realized there was something familiar in the name as she was speaking. \"Texas,\" she thought out loud, \"for some reason,\" she hesitated for a moment, \"I... I can hear kids... like on a playground... they're calling me that, they're calling me Texas. Am... am I from Texas? That doesn't seem right though. No, wait! Houston, that... that's me... that's my name, Corrine Houston,\" she almost shouted with excitement. Texas was my nickname in school.\" She looked up at her therapist in astonishment. She remembered! \n\n\"How did you know?\" she asked the grinning doctor.\n\n\"Your name is Corrine Houston, you live in Stockton, Illinois, and you're twenty-six years old.\"",
        "\"YES, YES, YES,\" Cory yelled, jumping up from her seat. \"Harley, Harley, did this. He pulled me out of the car and left me. That's who was pulling me by my arm, Harley. We were living together. I... I remember that.\" She closed her eyes again in an attempt to remember more, but the rest was still a blank.\n\n\"Is he the one who shot you?\"\n\n\"No, I... I don't think so. I... I'm not sure. I don't think so, though. I don't remember getting shot.\" It was as if she suddenly lost all her energy and she collapsed back into the chair.\n\n\"So, this Harley drove you to a remote spot and just left you there? Do you remember any more?\"\n\nCory shook her head. \"No, I... I think we had an argument, I know we were fighting in the car, but it's still kind of foggy. I... I do remember it being a long drive. I had no idea where he was taking me, then... he... he just stopped in the middle of nowhere and told me to get out. When I refused, he got out of the car and came around to my side. He was pulling me out.\" \n\nAt that point, Cory's emotions were getting the most of her and she started to cry. The doctor pulled some tissues from the box on her desk and walked around to offer her patient support.\n\n\"Easy, easy,\" she said in a comforting voice. \"I know this is hard. Let's take a break. Try and relax. Lie back and close your eyes again, just try to calm down.\"\n\nCory tried to do as her doctor said, but her brain was in turmoil. \"How did you know my name?\" she asked.\n\n\"Some kids were fishing in a river along route twenty and hooked a purse...\"\n\n\"Yes, yes,\" Cory excitedly proclaimed, \"my black purse. I was trying to grab it from the front seat as he was pulling me out of the car, but I couldn't get to it.\"\n\n\"This Harley guy must be a real...\" she stopped there. She wanted to say asshole, but that wouldn't be very professional. \"Anyway, he must have thrown the purse in the river on the way home. Unfortunately, the only thing the kids found in it was this,\" she said as she set cory's driver's license on the desk, \"or, at least that's all they claimed to find.\"\n\nCory picked it up and looked. \"That's me,\" she whispered with satisfaction. \"I do exist.\" She looked up at the doc. \"How did you get this?\"\n\n\"The kids turned it into the local police department. Somebody there recognized your picture from the newspaper and called the Chicago P.D. When Jerrod heard about it he called me and asked what to do. I...\"\n\n\"Jerrod knew? I was just with him last night. He never said a thing.\"\n\n\"Yes, I told him to forward everything to me. I thought it might prompt some memory recall and I wanted you in a controlled environment. I told Jerrod not to say anything.\"\n\nThe doctor studied her reactions as her patient just sat and tried to take in everything that was happening. \"Cory, I don't want to push you but as your brain accepts more of your past, I believe you'll start to remember more and more. What happened to you out there on that road is most likely the most horrific experience any of us can imagine. Recalling what took place may never happen for you, but if it does, I'd rather it happen in this office with us together. Do you remember anything after Harley pulled you from the car?\"\n\n\"No, not really,\" she replied while shaking her head. \"I... I only remember being scared. I had no idea where I was. I... I was crying, I remember that.\"\n\nShe closed her eyes and Dr. Wahlburg could see she was trying to force herself to remember more. \"That's okay, Cory. I think that's enough for now, but don't hesitate to call me if you feel the need.\"\n\nAll the way back to the apartment, Cory eagerly told her tarnished friend the news. Morgan's car was there when they pulled into the lot. \n\n\"He still won't talk to me,\" Brea said. \"I know he's mad, but I think he's imagining a lot worse than what actually happened, and I can't stand seeing him in so much pain.\"\n\n\"That reminds me,\" Cory replied, \"here,\" she said holding out a couple of business cards. \"Doctor Wahlburg recommended these two marriage counselors. She said either one would be a good pick.\"\n\nBrea took the cards and stuck them in her purse. \"Thanks, I don't know if I could talk Morg into it, but...\" she started to cry again. \"Oh, Cory, I'm so afraid he's just going to call it quits. He's just so angry. God, I wish I had taken your advice and just told him myself. I would have at least been able to explain what happened.\"\n\n\"He loves you, Brea. Yeah, he's extremely pissed right now, but he doesn't know the whole story yet.\"\n\n\"I know, I can't get him to listen to me. He keeps saying he's not ready. I know he thinks I was having a sexual affair, Cory. I can't stand seeing him in so much pain like that, but how do I get him to sit down and listen to me? I can't tie him to a chair.\"\n\n\"I don't know, Brea, but you're going to have to find a way. The longer he goes on thinking you had sex with Bob, the worse it's going to get.\"\n\n\"What if he won't believe me, then what'll I do? How am I going to prove I didn't sleep with Bob? The only two people who know that for sure are Bob and me, and if Morg doesn't believe me, he's damn sure not going to believe Bob.\"\n\n\"I don't know, maybe you could take a lie detector test or something.\"\n\n\"Hey, that's not a bad idea,\" Brea enthusiastically commented.\n\nIt was the first smidgen of hope Brea felt since her husband confronted her. \n\nThey heard the shower running in the master bath when they walked into the apartment. Brea checked the clock on her cell. Morg had three hours before he had to leave for work. The girls decided they'd make him a nice lunch. \n\nCory was cutting up potatoes for American fries while Brea was making hamburger patties when they heard the shower stop. Once the potatoes were cooking, Cory emptied the dregs of morning coffee and started making a fresh pot when they heard the front door open and close. Both women looked at each other in shock. Brea ran to the door and looked out just in time to see Morg getting into his car and drive off without saying a word.\n\n\"I guess it'll just be the two of us for lunch,\" she expressed with sadness as she returned. \n\nNow that he had the address, Morgan could think of little else but how he was going to approach Castens. He didn't want to be bothered so he went to a restaurant and sat in a corner booth where he could think and eat at the same time. After lunch, he sat sipping several cups of coffee while going over a variety of scenarios on just how to try and get the truth out of his rival. \n\nThat night, after work, he parked in the back of the parking lot and waited until his apartment lights were turned off. When he was relatively sure the girls were asleep, he quietly entered and stretched out on the couch again before setting the alarm on his phone for six o'clock. In just five hours he would be on his way to Rosemont. He still wasn't quite sure how he would handle the looming confrontation, but he was going to try and hold his temper and see if he could get some answers out of the bastard. \n\nBy a quarter to seven on that Saturday morning, Morgan was rapidly approaching an encounter that would impact the rest of his life. He pulled into the parking lot of an apartment complex just in time to see a silver Hyundai leaving in the opposite direction. \"Shit,\" he cussed out loud. He quickly backed into a parking space and then pulled out in pursuit of his target. Only one car had managed to get between them. \n\nMorgan had assumed the jackass was headed for work, but he turned into a residential area. There were no longer any cars between them, so Morg stayed a safe distance behind and watched as his nemesis pulled up to the curb, then backed into a driveway, right up to the garage door. A man Morg assumed was Castens, got out, walked around the back of the car and opened the trunk. \n\nMorg parked at the curb in front of the house and started walking. He was halfway there when the garage door went up and another man came out with a bag of golf clubs.\n\n\"Shit,\" he once again muttered to himself. He wasn't planning to take on two guys. The trunk was blocking him from their view. He could turn around but that wasn't his style; besides, he wasn't about to wait any longer. When Castens closed the trunk, Morg was standing there. From his reaction, he knew Castens recognized him. \n\n\"What do you want?\" Castens nervously asked. \n\n\"I came to get the answers to some questions, and I'm not leaving until I get them,\" Morg responded in anger. So much for keeping his temper. \n\n\"Oh really,\" Castens sneered. \"And what if I don't feel like answering any questions? You going to take us both on?\"\n\nMorgan leered at the other guy. \"You going to back this asshole's play?\" \n\nWhen he saw the look on Morg's face, the spectator took a step back and held out both hands with his palms out. \"Hey, hey, don't get me in the middle of this,\" he said.\n\nWith Morgan still cautiously watching the other man, Castens saw his opportunity to sucker punch him. He lashed out with a wild right, but Morg saw it coming and instinctively raised his left arm to catch the punch on his shoulder. With a limited amount of formal training in his background, Morg cocked his right wrist and punched his opponent just under the sternum with the heel of his hand. Morgan heard the air forced from his adversary's lungs as Castens opened his eyes wide while gasping to breathe. It looked as if the fight was over already, but the jackass was still on his feet. A problem Morg solved with a crashing right fist to his jaw. \n\nNot sure what the golf buddy was going to do, Morgan glanced in the man's direction. The guy was watching his friend roll around coughing and moaning on his driveway. He looked up at Morg. \"Hey, he threw the first punch. I saw it,\" he declared. \"Let me guess, your wife's name is Bea or Brea, or something like that.\"\n\nMorgan was surprised at the comment. \"How do know that?\"\n\n\"Hotshot there has been telling us about her for the last two or three months.\"\n\n\"Us?\"\n\n\"Yeah, there's four us who meet for golf every weekend.\" \n\n\"We all told him he was playing with fire, but he was bound and determined to get into her pants.\"\n\n\"Did he say if it ever happened or not?\"\n\n\"Not as far as I know. I guess he came close, but some motel house dick crashed the party,\" chuckled the stranger. \"I don't think he's seen her since then.\"\n\n\"My wife thinks he drugged her,\" Morg stated.\n\n\"I wouldn't doubt it. He's been bragging about having a source for GHB. I guess it's some kind of date-rape drug. He even offered some to us, said the girl doesn't remember having sex so there's no way to prosecute. We all told him where he could stick it.\"\n\n\"Can I ask you a question? You seem like a decent guy. Why hang around with a slimeball like this?\"\n\n\"It's only for four hours on a weekend,\" he answered, \"and he plays a good game. One of the other guys even likes him a little.\"\n\nMorgan just shook his head as he turned and walked back to his car. The encounter hadn't gone as planned, but he felt he at least had enough information to confront Brea. As the adrenaline started to subside, he realized he was hungry and stopped off for breakfast on the way home.\n\nIt was almost eleven when he walked in. Brea and Cory were sitting at the kitchen table with coffee cups in front of them. He looked over and saw there was one cup left in the pot. Silently, the girls watched as he took a cup from the cabinet and poured himself the dregs. \n\n\"Cory, will you give us the room, please.\"\n\nShe looked over at Brea and saw terror in her eyes. \"Ah, Morg, would you mind if I stayed. Maybe I can help moderate.\"\n\nMorgan gave her a look. That's all it took.\n\n\"All right,\" she said, bowing her head in surrender, \"just please remember, she loves you with all her heart, Morg.\" With that, Cory retreated to her bedroom.\n\nMorgan took her seat and started the conversation immediately. \"Did you have sex with him?\"\n\n\"NO,\" she emphatically responded, \"and I never intended to, either. I know he drugged me that night at the motel, Morg. I would have never gone there with him otherwise.\"\n\n\"Then what the hell was it all about, and don't give me any of this, 'not really' crap. If you weren't going to fuck him, why were going out with him?\"\n\n\"I was just flirting, or at least that's all it was to me. I know it was wrong and I knew he wasn't beyond sleeping with a married woman, but it was never going to happen, honest Morg, I was NEVER going to sleep with him, and I never ever thought he'd go so far as to drug me.\"\n\n\"So, this was all just some kind of game for you, then? You were just teasing him? Catch me if you can?\"\n\n\"It didn't start out that way, it just kind of progressed.\"\n\n\"How did you meet him, anyway?\"\n\n\"We ran into each other at the mall, one day.\"\n\n\"What do you mean, ran into him? You knew him before?\"\n\n\"Yeah, I was dating him before you and I got back together. I cut it off as soon as you and I became exclusive, though. I hadn't seen him since, until one day at the mall. We had lunch together. I didn't think it was any big deal and had no intention of seeing him again, but about a month later, I was supposed to have lunch with Linda Whitacker. I was all dressed up, had my make-up on, and was about to leave when she called and canceled. It was disappointing, I was really looking forward to having lunch with someone. I couldn't call you, you're always eating on the fly, so I called Bob.\n\n\"Of course he was very flattering, telling me how nice I looked and giving me compliments the whole time. They were nice to hear, but really had no effect on me, so when he called a couple of weeks later and asked me out to lunch again, I didn't see the harm.\"\n\n\"If you didn't see the harm, how come you didn't tell me you were having lunch with a former boyfriend?\"\n\n\"For obvious reasons, Morg, but come on, I know damn well you flirt with waitresses you find attractive. You don't come home and tell me about it because it's just innocent fun.\"\n\n\"I've never gone to a motel with any of them,\" Morg countered. \n\nBrea let out a small sigh. This was going to be the hard part, the part of the story that Morgan may consider was worthy of divorce, but she was finally ready to face the music. \"Call me naive, but I didn't realize what he was up to until our third lunch together.\"\n\n\"Uh-huh, and what was he up to, Brea?\"\n\n\"You know, Morg. Married or not, he wanted to get me into bed.\"\n\n\"So, once you knew that, why did you continue to see him?\"\n\n\"Because it became a challenge, a contest I knew I could win,\" she admitted. \"He was always so confident when we were dating, always so sure of himself. Back then, I found it very appealing. I guess I'm a little older now; anyway, that third time we had lunch together, he started hitting on me. I thought, 'you arrogant SOB, you know I'm married and you still think you're going to get me in the sack.' That's when I thought of just stringing him along until he gave up. I even had a little speech prepared about you and what a great lover you were and how much I loved you. I thought I could knock him down a peg or two that way.\"\n\n\"You did more than have lunch with him, Brea. It was after nine o'clock at night when Stan saw you at that motel.\"\n\nShe nodded her head as tears welled up in her eyes. \"When he called to arrange another lunch date, I told him I couldn't because you were working the night shift. That's when he suggested we have dinner instead of lunch. I knew I was crossing the line, big-time, but I really wanted to wipe that smug smile off his face, so I accepted. \n\n\"I think he was pretty sure it was going to happen that night and I took satisfaction in seeing his disappointment when it didn't. Unfortunately, he didn't make an actual proposition so I didn't get a chance to give him my speech, but I really thought that was it. I didn't figure I'd hear from him again, so when he called a couple weeks later, I was surpised. He must have figured out your schedule because he knew you'd be on nights. \n\n\"He asked me out for dinner again. That was the night he took me to the motel. I imagined it would be his last-ditch effort. I was expecting a full-court press, but accepted because I thought sure I'd get a chance to say what I wanted. I never expected the drugs. At first, I thought I'd had too much to drink, but I thought about it the next day. I only had two Strawberry Daiquiris and I don't think I even finished the second one. I swear he drugged me, Morg. I can't prove it, but I know he did.\"\n\n\"I don't doubt it,\" Morg muttered, much to Brea's surprise.\n\n\"Then you believe me?\" she asked with a hint of hope in her voice. \n\n\"Yes, I believe you,\" he replied with a sigh. Morg gazed off as he silently looked out the kitchen window. It wasn't hard to see that he was still bothered. \n\nBrea couldn't stand the silence. \"Then you're not considering divorce?\"\n\n\"I didn't say that.\"\n\n\"But... but you said you believe me. I didn't have sex with him and never intended to.\"\n\n\"Maybe not, but you did deceive me and without much effort. You had five clandestine dates over three months and I never suspected a thing. I believe you when you said you never intended to fuck him, but what about next time? \n\n\"Up until now I've trusted you completely, but you've shown me you have no problem doing something behind my back if it serves your interests. Maybe next time you WILL want to fuck some guy.\"\n\n\"No, no, no, Morg, I would never do that, never,\" she emphatically denied. \"I believe in the vows we took, I promised to be faithful, to honor and cherish in sickness and in health, for richer, for poorer, until death do us part. I meant it, Morg. They're the most important words I've ever spoken.\"\n\nHe was watching her closely. Tears ran down her cheeks, her hands were white from nervously clinching them together, and her whole body was shaking. She'd never been much of an actress, her pain was real, but then so was his. \n\nHis dad always told him, \"when you have an important decision to make, think about it from all sides. Play devil's advocate, weigh the good against the bad, then go with your gut.\" He stood up and started walking for the door.\n\n\"Where are you going?\"\n\n\"I don't know, Brea. I just feel lost right now. I still don't know what I'm going to do.\"\n\n\"When will you be back?\"\n\n\"I-don't-know,\" he said more emphatically. \"Just leave me alone for right now. I'll be back when I come back. That's all I can tell you for now.\"\n\nBrea started to cry harder as he walked out. Cory spent the whole time in her room, trying not to listen, but she clearly heard the door close. She came out and saw Brea sobbing.\n\n\"What'd he say?\" she asked.\n\n\"He... he's still not sure what he's going to do. I told him everything, Cory, just like you said. I told him the truth and he said he believes me, but now he doesn't trust me anymore.\" She grabbed a tissue and wiped her eyes. \"I didn't mean to betray him, Cory, honest, I never thought of it that way.\"\n\n\"I know, hon. You can see it from his side, though, can't you?\"\n\nBrea nodded as she continued to dry fallen tears. \n\nCory pulled another chair up next to Brea's and sat as she tried to comfort her friend. \"Look, I have another date with Jerrod tonight. I'm going to call and cancel it.\"\n\n\"No, you won't,\" Brea insisted. \"I'm not letting my problems affect you and Jerrod.\"\n\n\"Okay, then why don't you come with us. Jerrod won't mind and it'll do you good to get out.\"\n\n\"No, are you kidding? I really don't think Jerrod would appreciate me tagging along. You said he was taking you to Leonardo's tonight. That's one fancy joint and very romantic. In fact, we should dig around my closet. We're about the same size. Let's see if I've got a fancy dress that'll fit you.\"\n\nMorg had no idea where he was going. He just needed something to occupy his time and he couldn't think of anything other than going for a drive. He was thinking he'd head for the country when his phone rang. Out of habit, he hit the hands-free button. \"Hello.\"",
        "\"Hey, my friend, it's Charlie Watt, how're you doing?\"\n\n\"Ah, I've been better, Charlie. What's up?\"\n\n\"I'm sorry to hear that, pal. I was calling to see if you play handball. I've got a court reserved for two o'clock and my partner just canceled.\"\n\n\"Jesus, Charlie, I'm in the car right now. I'm not dressed for it; besides, I haven't played in a couple of years. I'm not even sure I still have a glove.\"\n\n\"So, what's the problem? Run home and get changed, and don't worry about a glove. The kids get me a new one every Christmas,\" he laughed. \"I've got four or five of them in a couple different sizes. I'm sure I've got one that'll fit you.\"\n\nMorg thought for just a moment. \"You know, that might be just what I need right now. Where's the court?\"\n\n\"West Side YMCA.\"\n\n\"That's the one right off of Roosevelt?\"\n\n\"That's it,\" Charlie confirmed.\n\n\"I don't know how much competition I'll be, but I'll be there.\" The call brightened his spirits a little. Spending time with a friend while taking out his hostilities on a little black ball, never sounded better. He checked the time. It was a little after twelve. He wasn't about to go home so he headed for a Target where he could get some gym clothes and a pair of sneakers. Charlie was already changing in the locker room when he walked in. They shook hands and greeted each other with smiles.\n\n\"How's the mystery woman doing?\" Charlie inquired.\n\n\"You mean Corrine?\"\n\n\"Yeah, I heard she's making progress, that's great. Has she anything to do with what's bothering you?\"\n\n\"I suppose my troubles are the talk of the eighteenth, huh?\"\n\n\"No, not really. The lieutenant mentioned you might need a friend about now, that's all. Listen, after this, what do you say we stop for a beer someplace, and you tell me all about it? After all, if you can't spill your guts to a cop, who can you spill 'em to?\"\n\nFor the next hour, the two men battled each other as if the fate of the world hung in the balance. Morg lost the first two games but was able to pull out a win in the third, thanks to a miraculous diving save for the winning point. Their time was up before completing the fourth game, so they called it a draw even though Charlie was a point ahead. In the heat of battle, Morg didn't realize how hard he was hitting the ball until he tried taking his glove off after the match. The two friends showered and headed for a little hole-in-the-wall bar a couple blocks away.\n\n\"Okay, whose face was it on that little rubber ball,\" Charlie asked after they each ordered a beer. Morg had to think about the question, but before he figured out what it meant, Charlie clarified. \"That ball must have represented somebody by the way you were going after it. Look at that hand. It's so swollen I doubt you can hold your camera.\"\n\nMorgan forced a chuckle. \"An old boyfriend of Brea's. She's been having lunch and going out to dinner with the asshole. Last month he drugged her and took her to a motel.\"\n\n\"Oh, shit, Morg. I'm so sorry. Did he rape her?\"\n\n\"Almost. As luck would have it, Stan McCarthy was there investigating a robbery. He recognized her and got into the room before that prick had a chance to really do anything. If it hadn't been for Stan, though, that asshole would have had his way with her all night long.\"\n\n\"Jesus, Morg, I'm so sorry. Do you know who this guy is?\"\n\n\"Oh yeah, we had a little talk this morning.\"\n\n\"Oh, shit, Morg, what'd you do?\"\n\n\"He came after me, so I decked him. He swung first and I have a witness who's on my side, so I doubt very much the SOB swears out a complaint.\"\n\nWhile the two men coursed through the afternoon discussing Morg's problems, Brea was helping Cory get ready for her big date with Jerrod. There was only one dress in Brea's closet that she thought suitable for Leonardo's. It was a slinky deep purple evening gown with a plunging neckline and a slit up the side. She'd only worn it once to an Illinois State awards banquet where her husband was honored for his photography the year before. \n\n\"Oh, Brea, I can't wear this. It must have cost a fortune. I'd be scared to death that I'd spill something on it.\"\n\n\"Nonsense,\" argued Brea. \"I've only worn it on one occasion, anyway, and Leonardo's is a little out of our price range, so somebody should be seen in it.\"\n\nAfter Cory's shower, Brea called her into the master bedroom. Cory was still using the basic essential make-up Brea gave her. It was fine for everyday, but Leonardo's was certainly not an everyday kind of place. \n\n\"Cory, sit down here,\" Brea said, directing her friend to her personal make-up mirror. \"We'll use my make-up. It's a little better than that you stuff you have. Do you mind putting yourself in my hands?\" she asked. \"I've always had a knack for knowing what looks good on people.\"\n\n\"I'm all yours,\" Cory replied.\n\nOnce Brea completed her maquillage artistry, it was time to do something with Cory's hair. You couldn't even tell where they had shaved it anymore, but Cory had always simply let it hang naturally around her shoulders. Brea brought out her curling iron and hairspray and went to work styling Cory's hair up into an elegant look that coordinated with the dress. Cory didn't even recognize herself when looked into the mirror.\n\n\"Oh, my God, Brea, how did you do that? I look...\"\n\n\"Absolutely gorgeous,\" Brea said, finishing her friend's sentence. She glanced at the time. \"You'd better finish getting dressed, Cory, he'll be here pretty soon. \n\nOn the driver over, Jerrod couldn't keep from smiling. After the year-long battle with his ex, he thought it would be a long time before he was ready for another relationship, but here he was, already falling in love with a mystery woman. Thanks to the two kids fishing in the river, he at least knew she wasn't married. That had been preying on his mind. He kept thinking it'd be just his luck to fall head over heels, only to find out she was married and had two kids. One bullet dodged. The thought created a grin from ear to ear.\n\nAs Jerrod pulled into the apartment complex, his mind was so preoccupied with romantic thoughts of the future, that he completely missed seeing the dark Cadillac sedan parked at the end of the lot.\n\nCory wanted to make an entrance, so Brea answered the door. She invited Jerrod in for a quick cup of coffee, telling him Cory would be right out. Morg's absence was obvious. He wanted to ask how things were going but didn't dare. There was a clumsy silence as Brea joined him with a cup of java, but it was short-lived.\n\n\"You like?\" Cory asked as she made her appearance. \n\nJerrod was speechless. He just stopped and stared with his cup halfway to his mouth as his date made a graceful pirouette to show off her dress. \"Brea lent me the dress for tonight. I hope it's okay.\"\n\n\"Huh, oh, I... I mean, yeah, of course. Cory, you look downright stunning,\" he was eventually able to articulate. Finally, regaining his faculties, Jerrod set his cup down. \"Thanks for the coffee, Brea.\" He stood and once again, feasted his eyes on the beautiful woman standing before him. \"Honey, we'd better get going.\"\n\nIf he'd hadn't been so fixated with the woman sitting to his right, Jerrod would have most certainly spotted the tail he picked up while leaving the parking lot. On the way to the restaurant, Jerrod was able to ask about Brea and Morg. \"How are things on the homefront?\"\n\n\"I honestly don't know,\" she replied. \"Brea says she would have never gone to bed with that guy and I believe her. What's more, Morg believes her, or at least he says he does. He still can't get past it though. You have to wonder what the hell she was thinking, going to dinner with that guy. I think that's what Morg is hung up about, not the lunches so much, but going out to dinner while he was working nights, especially after she knew the guy was trying to seduce her.\"\n\n\"It's amazing how idiotic mistakes can be made by intelligent people sometimes. I sure hope they can work it out. They really seem to be in love with each other.\"\n\nThey were still talking as they approached Leonardo's. The midnight blue Caddy following behind slowly drove by as Jerrod turned into the restaurant's parking lot. \n\nSpinoso couldn't have been happier. He had identified the woman and where she was staying the previous week but had been unable to find an opportunity to whack the broad. The restaurant was perfect. He had been there several times and knew the layout. He also knew he could get in and out through the back door. The place would be packed on a Saturday night. The more people, the bigger the panic when the shooting started. Everyone would be too busy diving under tables to pay any attention to the shooter. \n\nHe drove around the block to make sure there were no surprises, then pulled into the alley. The back door of the building was supposed to be locked, but Spinoso knew from past experience that the waiters and chefs kept it propped open so they could sneak outside for a smoke. He reached into the glove compartment and pulled out his K6s snub nose. He was only interested in killing one person, so rather than leave the magnum loads in the gun, he exchanged them for regular thirty-eights before sticking the revolver into the pocket of his suit jacket. \n\nNo one paid any attention as the hitman maneuvered through the kitchen, and entered the dining area. A quick scan of the room revealed his target and her companion sitting along the opposite wall. Her escort had his back to Spinoso but she was facing in his direction. The key to an operation like that was getting in and out in a hurry, so with laser-like focus, he quickly began his approach in their direction.\n\nThe rapid movements of the advancing form caught Cory's attention. She looked up and suddenly remembered. \"Jerrod, that's him,\" she cried. \"That's the man who shot me!\"\n\nJerrod's head swiveled around and recognized the hitman just as Spinoso pulled his gun. There was no time for Jerrod to reach for his own backup piece. He launched himself over the table, knocking Cory to the floor and covering her with his own body. \n\nPandemonium broke out as the murmur of conversations was shattered by the sound of gunfire. Screams of terror and the noise of crashing glass and china added to the chaos as patrons dove for cover. Jerrod felt two slugs of hot lead rip through the flesh and muscle of his back. \n\nSpinoso knew there could be no slip-ups this time. He worked his way around the overturned tables to line up for a headshot. Despite his condition, through sheer will and determination, Jerrod reached for his gun. Spinoso had no inclination his target's companion was a cop until he felt the three slugs from Jerrod's Glock slam into his chest. \n\nFrom beneath his body, Cory heard her hero exhale what sounded like his last breath. She started screaming as she squirmed out from under him and saw the blood. \"HELP! HELP! HE'S BEEN SHOT, SOMEONE CALL AN AMBULANCE, HE'S BEEN SHOT! Oh God, she cried as she lay her head on his dormant body, \"he's been shot.\"\n\n*****\n\nMorgan was feeling better than he had in a while. Between the physical exercise and being able to bare his soul to a friend, he left the bar with a little brighter outlook. Earlier, when he left the apartment, he had every intention of spending another night in a motel but now had changed his mind. He was, however, going to stop off at a restaurant before heading home. He was starving and had no idea if Brea was making anything for dinner. It was almost seven-thirty by the time he walked in and saw the relief in Brea's face. \n\n\"I... I wasn't sure you'd be home. Are you hungry? I can quickly put something together.\"\n\n\"No, I stopped for something on the way home, but don't let me stop you from fixing something for yourself.\" Before either of them could say anything else, Morg's phone rang. He looked and saw it was Charlie. He smiled as he answered. \"What, you want a rematch already?\" \n\n\"Morg, was Cory with Jerrod tonight?\" His voice was anxious.\n\n\"Ah, I don't know. Hold on,\" he replied as he looked up at his wife. \"Where's Cory?\"\n\n\"She out on a date with Jerrod, why?\"\n\nCharlie heard her reply and didn't need his friend to repeat it. \"Morg, Jerrod's been shot.\"\n\n\"WHAT?\" he yelled. \"Is it bad?\"\n\n\"I don't know anything yet. Our district commander is calling everyone to let them know.\"\n\n\"What about Cory?\"\n\n\"I have no idea, Morg. Jerrod's been taken to Northwestern. I'm heading that way now. You might want to get up there, yourself. If she's been hit, I'm sure they'd take her there as well. They have the best trauma center in Chicago.\"\n\n\"I'm on my way, Charlie. I'll see you there.\"\n\nOverhearing only her husband's side of the conversation, Brea had no doubt something was terribly wrong. \"What is it, Morg? What's happened?\"\n\n\"I'll tell you on the way, let's go,\" he responded. Once in the car, Morg relayed what he knew. By the time they rushed into the emergency entrance, they were both frantic. Morg approached the desk with Brea right on his heels.\n\n\"We're here about the gunshot victims. What can you tell us?\" Morg impatiently asked. \n\nThe elder nurse looked at their faces and decided to forgo the usual questions about being relatives. \"Both men are being prepped for surgery,\" she answered.\n\n\"What about the woman?\" He questioned.\n\n\"I don't know anything about a woman,\" the nurse responded.\n\nHer answer immediately invoked two different lines of thought. Not having the experience of her husband, Brea instantly took it to mean her friend was okay, Morgan, on the other hand, wondered if it meant they took her to directly to the morgue. \n\nMorgan started looking for someone he knew when the nurse had a second thought. \"Ah, there was a woman who came in with one of the men. I think she's in the back with the officers.\"\n\n\"Morg grabbed Brea and started for the door to the emergency room. \"I'm sorry,\" the nurse said, raising her voice, \"you can't go back there.\"\n\nMorg was just about to start arguing with her when Charlie entered. \"They're with me,\" he said, flashing his badge. \"Come on.\"\n\nAs soon as they went through the doors, they saw a group of men and women standing in the hall, some were in uniform but others were in plain clothes. Brea spotted a flash of purple between all the moving humanity. \"Cory!\"\n\nThe distraught woman heard her name and rushed toward them, throwing her blood-stained body against her friend and wrapping her arms around Brea's neck. She was crying hysterically. \"He can't die,\" she wept, \"he can't die.\" \n\nCharlie and Morgan left the two women to console one another to see what they could find out. Charlie spoke up. \"How is he doing?\"\n\nMorgan had never met the district commander but assumed he was the one doing all the talking. \"They just took him up to surgery,\" he told Charlie. \"It looks like he took two in the back. The woman over there was with him. She's pretty shaken up. It looks like she was the target. Jerrod dove on top of her to protect her.\"\n\nMorg joined the conversation. \"The nurse said there were two men. Who's the second guy?\"\n\n\"Who are you?\" \n\n\"My name is Morgan Johnson. I'm a friend of Jerrod's. Cory, the woman Jerrod was with, is staying with my wife and me.\"\n\nThe command recognized the name and felt safe talking in front of him. \"The second guy is the shooter, Tony Spinoso.\" Morgan and Charlie were shocked, they both knew the name and reputation. \"We really don't know what happened yet.\n\nHe looked at Morg and continued. \"Your friend is pretty sure she heard five shots which accounts for the two in Jerrod and the three he pumped into Spinoso, so for right now we're ruling out a second shooter. The girl seems to have the answers, but she's too frantic to talk right now. We do have to get her statement pretty soon, but I thought we'd let her calm down a little first. I've got a couple officers back at the restaurant, questioning the customers, but I doubt they're going to be able to give us anything.\"\n\nJust then, Brea and Cory joined the others. Cory hugged Morgan and he hugged her back. Seeing her two friends seemed to calm her down considerably. \"I remember, Morg, I remembered everything as soon as I saw his face.\"\n\nTo the commander, this looked like a good opportunity. He wanted to get her account of things while it was all still fresh in her mind. \"Young lady, do you think you're ready to give us a statement.\" \n\n\"Yeah, I think so. Can she be with me?\" she asked about Brea. \n\nHe gave his approval with a nod of his head. \"Who has a squad car outside?\" Several officers answered. He picked one of them. \"Go get the recorder out of it and find a quiet place where this young lady can give you her statement.\"\n\n\"Yes, Sir,\" answered the man in blue. Both women followed him out to the waiting room. He told them to wait there and returned only a minute later with the recorder. He asked the nurse at the desk where they could go and she directed them to a small consulting room off the hall. \n\nThey all sat at a small table where the cop set up the recorder. After stating his own name, rank, date, and time, he asked both women to state their full names as well. \"All right, Ms. Houston, start at the beginning, and in your own words, tell us what happened.\"\n\nCory started her story from when she woke up in the hospital void of any memories as to who she was or how she got there. After several minutes of clarifying the backstory, she finally reached the part that explained the night's events.\n\n\"So, I just sat on the side of the road crying after he pulled me out of the car and just left me there. I was scared to death. There was nothing around but woods on both sides of the road. After about twenty minutes without seeing a car, I decided to start walking. I figure I'd have to run into somebody sooner or later.\n\nAfter a while, I had to pee. There were obviously no bathrooms around, so I trekked a little way into the woods and went behind a big tree. Just as I started to relieve myself, I heard a car coming. Then I heard it stop and was embarrassed because I thought maybe they saw me. I was just pulling my pants back up when I heard voices. The one guy sounded like he was begging. I peeked around the tree and saw a guy on his knees. There was another guy behind him with a gun. It was the same guy from tonight.\n\n\"Anyway, I screamed when I saw him shoot that other man. When I did, the guy with the gun saw me. I took off running but I guess he shot me in the head. That's all I remember until hearing voices. I must have been kind of semi-conscious when those three boys raped me, but that was after I'd been shot. \n\n\"That's the last thing I remember until waking up in the hospital. Dr. Wahlburg has been helping me remember things in bits and pieces, but when I saw that man tonight, it all came flooding back in an instant. I told Jerrod he was the guy who shot me and I'm not sure what happened after that. Jerrod jumped on top of me as I heard the shots. He saved my life,\" she said as she started to break down again. \n\nThe officer felt he had enough and ended the session. The three returned to the growing throng of cops and loved ones. \"How'd it go?\" the commander asked.\n\n\"Good,\" the officer replied. \"Any word?\"\n\n\"Spinoso died on the table. They're still working on Jerrod.\"\n\nIt was two in the morning when Cory saw the doctor coming toward them. The crowd had thinned out considerably by that time, but there were still a few die-hards sleeping in chairs along the wall. \"How is he, doctor?\" Cory asked.\n\nThe others woke up from hearing her voice. Everyone anxiously looked toward the grey-haired man in the lab coat. \"He's in recovery,\" the doctor answered. \"The bullets did quite a bit of tissue damage, but thankfully, missed the spine. There was also some bone damage in the right shoulder that we had to replace with a titanium plate, but with therapy, I think he'll make a full recovery.\"",
        "Cory collapsed with relief. The rest thanked the surgeon for his great work. After the doc told them it would be at least twelve hours before the patient could receive visitors, the crowd broke up and went home. \n\nIt was a quiet ride back to the apartment. Everyone was simply too mentally and emotionally exhausted to say anything. Morg took one look at the couch when they walked in and decided to sleep in his bed. He really needed a decent night's sleep. Everyone was out like a light five minutes after their heads hit the pillow. \n\nThe morning light was just starting to glow when Cory awakened with a start as the events of the previous night came rushing back to her. Her first thoughts were of Jerrod, but seeing Spinoso's face not only brought back her memory of being shot but everything else as well. She rolled over onto her back and pulled the sheet up to her neck in an effort to feel secure as the story of her life played out in her head.\n\nDoctor Wahlburg was right, she'd had a hard life. She was now able to put the flashbacks into context. It was indeed her mother who was being beaten, and it was her dad doing the punching. He'd sometimes come home drunk and mean. \n\nShe remembered one night when she was only about five or six, her dad backhanded her because she wouldn't stop crying. Evidently, that was the last straw for her mother. The next day she packed a bag for the two of them, took all the money she could find in the house and took off with Cory in hand. They grabbed a bus and got as far away as they could. \n\nHer mother wasn't an educated person, but she was a damn good waitress and made good tips. Life was still tough, but they squeaked by. Then tragedy struck. Her thirty-five-year-old mother died of cancer. Cory was just sixteen. She remembered being at her mother's bedside as she took her last breath. \n\nShe had no relatives and knew no one who could take her in, so Cory quit school and talked the restaurant owner into letting her take her mother's place. She had watched her work many times and learned a lot about waitressing. She had also watched her mother make out bank deposit slips and write checks for the bills, so she just continued by forging her mother's signature. \n\nShe had her first sexual encounter just after turning seventeen when she was raped while walking home from the restaurant one night. The trauma messed with her head and sent her on a self-destructive path for years. She experimented with drugs and bounced from one bad-boy, boyfriend to another until she met Harley. He wasn't very nice to her, either, but at least he wasn't into drugs. They lived together for almost two years. She thought she was happy until she caught him with another woman. That's what the fight was all about. \n\nThe sound of voices brought Cory back to the present. As she swung her legs over the edge of the bed and sat up, tears ran down her cheeks. It wasn't until she remembered her past, that she really recognized that life was giving her a second chance. She thought about the two people who had given her food and shelter all this time, and the other who had given her hope. Not since her mother passed away, did she have anyone in her life that meant so much to her.\n\nCory threw her robe over her nude body and tightly tied the sash around her waist. These people don't know how lucky they are, she told herself. With that thought in mind, she opened her bedroom door and charged into the kitchen.\n\n\"Morgan Johnson, don't you dare throw your marriage away over a damn silly mistake,\" she roared. \"Do you have any idea how rare love like yours is? Yes, what she did was foolish, but it was without malice and without any thought of betraying you.\n\n\"And you,\" she howled, looking at a shocked Brea, \"don't you EVER take this man or his love for you for granted. Why do you think he was so badly hurt by your little ploy? Because YOU are his world, his entire fucking world, and don't you ever forget it. And if you ever, EVER disrespect his love again, I'll personally kick your ass from here to Texas.\n\n\"Now,\" she continued after taking a deep breath, \"I'm going to shower and get dressed, then I'm going to the hospital so I can be there as soon as Jerrod is allowed visitors.\" She poured herself a cup of coffee-to-go and headed for the shower. \n\nThe two stunned subjects of Cory's tirade just looked at each other. \"What the hell was that about?\" he asked with a chuckle.\n\n\"I don't know, but I think she made a lot of sense.\"\n\n\"Oh, you do, do you?\" He waited a moment for effect. \"Me too.\"\n\n\"Really? Then you're not still considering divorce?\"\n\n\"No,\" he said shaking his head, \"but...\"\n\nHe never got a chance to finish his warning. Brea jumped in his lap and showed him with kisses. Cory smiled at the sounds of makeup sex coming from the bedroom as she left the apartment and grabbed a cab to the hospital. The woman behind the check-in desk said it would be a couple hours before Jerrod could see anyone. \n\n\"I'll wait,\" Cory replied. \n\nIt was after twelve-noon when a nurse found her in one of the waiting rooms. \"Are you the lady waiting to see the patient in room three-twenty?\"\n\n\"I'm not sure what room he's in. His name is Jerrod Ashwood. He's the cop who was shot last night.\"\n\n\"Yes, you can go up and see him now.\"\n\nShe thanked the nurse and almost ran to the elevator. There were already two cops in his room when she came bursting in. One was Janet, the officer who stayed with her in the motel.\n\n\"There she is, Jerrod, see, safe and sound,\" Janet commented. \"He's been worried about you,\" she told Cory.\n\nWith a big, wide smile on her beautiful face, she walked up to the side of his bed so he could see her. \"Yes, honey, I'm fine, thanks to you.\"\n\nHe looked up at her with a big, silly looking grin. His right arm was in a cast that went all the way up and wrapped around his shoulder, but other than that, he still looked like the man she'd fallen in love with. \n\nJanet gave her partner a light elbow in the ribs. \"Well, we were on patrol and figured we'd stop in and see how you were doing, Jerrod, but we have to get back out there, so we'll leave you in Cory's capable hands.\"\n\nJerrod thanked them for stopping by and told them to inform everyone at the station that he would be just fine, but apparently they didn't get the message. Over the following week, the aroma of fresh-cut flowers almost became overpowering and he had more visitors than a Stones concert, including the police commissioner.\n\nCory only went home to shower and sleep, the rest of the time she spent at his side, talking and laughing the hours away. She also saw to his every need and took care of him so well that the nursing staff made her an honorary member. \n\nThe day before he was to be discharged, they had a more serious discussion. His arm would be in the cast for another five weeks, and after that, would be pretty useless for another few. Cory offered to move in with him.\n\n\"It's going to be a while before you can use that arm again. I can help with the cooking, I can help you get dressed, I can be your chauffeur, I can do a number of things to make your life easier while you're recuperating.\" \n\n\"It's only a one-bedroom apartment,\" he said, \"with only one bed,\" he added after a slight hesitation. \n\n\"That's not a problem for me if it's not for you,\" she told him with a smile. \n\nThanks to Cory's testimony, the police were able to tie Tony Spinoso to the murder of Johnny Ricci. Unfortunately, there was no evidence that Vito Generissi ordered the hit. The three that raped Cory were currently doing time for their crime, so The Case of the Mystery Woman, as the men and women of the eighteen district called it, was closed.\n\nMorgan dropped the dime on his nemesis, Bob Castens for possession of a controlled substance. When they raided his apartment, they found enough GHB to charge him with intent to distribute. He pleaded guilty in turn for a reduced sentence, which left three golfers looking for a fourth for the next three to five years.\n\nJerrod Ashwood surprised himself. After his very contentious divorce, he thought it would take years, if ever, before he was ready to give his heart to another woman, but there he was only a year later, standing a the altar, watching his beautiful bride-to-be walk up the aisle. Standing in for her father was her good friend, Morgan Johnson, and completing the circle was the other half of the happy couple, Brea Johnson, as her matron of honor. \n\nFourteen months after getting married, Jerrod was made commander and given his own district station. Over the years, he, Cory, Brea, and Morgan became inseparable, along with their kids. \n\nNever failing to recognize and appreciate the second chance she was given at a new life, Cory, with the help of her husband and friends, founded a charity for lost and battered women, and opened three more shelters in the city of Chicago.\n\n*****\n\nCory sat on the edge of her bed, looking at the garment. Though it had been ten years since that night, her memories were as vivid as if it had been yesterday. After the dust had settled, she felt terrible about ruining Brea's beautiful dress. She still had money left from what she was given when she left the hospital and offered to pay for it, but Brea wouldn't hear of it. \n\nShe couldn't bear to throw it out. It was his blood staining the elegant fabric, the blood he sacrificed for her, so she found a secret hiding place. Not that she really needed to, but every so often, Cory remove it from its hideaway, just to remind herself of how lucky she was, and to make sure she never, ever, took Jerrod's love for granted.\n\nThe End"
    ],
    "authorname": "laptopwriter",
    "tags": [
        "press photographer",
        "amnesia",
        "hanging by a thread story",
        "hospital",
        "newspaper",
        "shot",
        "drama",
        "thriller",
        "lost identity",
        "mystery"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/mystery-woman-11"
}