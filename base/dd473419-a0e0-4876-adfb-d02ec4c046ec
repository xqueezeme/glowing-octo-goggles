{
    "title": "Finding an Editor Ch. 02",
    "pages": [
        "Part one was in Romance, but they married, so I guess this qualifies as a loving wife story. One more segment to go. Thanks for reading.\n\n.................................................\n\nI slept, dreaming odd dreams. I woke to the familiar smell of barbecue, the ultimate[for me]comfort food. Benny really didn't talk much as I ate. After we cleared the dishes he got us a beer and took me to the porch swing.\n\nWe settled in, snuggled a bit, glad to be back in each others arms. He rocked us gently, stroking my hair occasionally.\n\nI steeled myself, and pushed upright. I needed him to be able to see my face.\n\n\"First, honey, thank you for trusting me.\"\n\n\"Now, as to where I was. Do you remember my friend Beth? I worked for her before I took up teaching, at the publishing house.\"\n\nI felt his body tense.\n\n\"She's a senior editor now. I took her your book.\n\nThey can reach a far wider audience than your ebooks, generate press, advertize in major media markets. It's just too good, honey. The world needs to see it.\"\n\nHe exhaled, slowly.\n\n\"Did she like it?\"\n\n\"Honey, she loved it! Said it was probably the most powerful thing she had ever read. She's already talking movie rights, if you sign with her.\"\n\n\"Do you think it will be that successful?\"\n\nI held his hands, leaning in fr a quick kiss.\n\n\"You don't know, do you? Benny, people who read this book, or see the movie, will remember it for the rest of their lives. It's that good.\"\n\nHe stood, and walked to the end of the porch, staring into the darkness. His voice floated out of the darkness.\n\n\"Then I guess we should do it. You know, when I started writing it was for the peace it brought me. I wanted to be successful, to be sure. But as successful as you say this is going to be, I never dreamed it.\"\n\n\"But know up front, Bonnie, I won't do this alone. You are my muse, my anchor, and my best friend. The love of my life. You made me want to be a better writer.\"\n\n\"I know everybody wondered how come you chose me. You're beautiful, smarter, and much better educated. I just drove a delivery truck, what could I have to offer a woman like you? I never told you, but I've been in love with you since we were thirteen years old. I knew I wasn't in your league when you decided to go to the junior high mixer, with Jimmy Travers, and his mom picked you up in their new station wagon, and drove you to that nice restaurant afterwards with all your rich friends, that I could never compete with that. So I left you alone.\"\n\n\"Then you came back into my life, and I couldn't believe it. When we became close I kept waiting for some guy in a suit to waltz in and ruin it.\n\nBut you chose me, and if I died tomorrow, it would be knowing that you loved me, and that made my life worth living.\"\n\n\"Did you know Miriam is telling everybody we used your money for our wedding and honeymoon? Said she knew I wanted to play the big shot, act like I was something I could never be? I'm sure part of it's hate, and part jealousy, but you'd be amazed how many people believe her.\"\n\n\"So if it happens, if it becomes as popular as you think, you're taking every step with me. I'll need you to prop me up, encourage me, protect me. Will you do it?\"\n\nI swear to God, I've wept more tears in the last two years being with him than I have in my whole life, and almost all were tears of happiness and love. I walked up behind him, hugging him.\n\n\"With every breath I take. Now, I want you to take me to bed, our bed, and make love to me. Please?\"\n\nIt was the most passionate night I had ever had. There was no pounding, no screaming, no games, just a man and a woman, becoming one. I wept softly through most of it, and felt a few drop from his eyes, at the end. We didn't speak when we were done. What words could possibly convey our feelings as well as touch?\n\nThen, just before I drifted off, Miriam popped into my mind. I thought about confronting her in public, revealing all her lies, but then decided not to. The book would put paid to every negative thing she had ever said about Benny. I just needed to be there when she got the news.\n\n...............................................\n\nI called Beth the next day, saying if we could find an agent and come to terms, we were in.\n\nShe had a man call us, saying he was a legend among agents. Seventy now, he was semiretired, but there was nothing and no one he didn't know in the publishing world, as well as Hollywood.\n\nWe put him on speaker.\n\n\"Good morning. My name is Saul Sanchez. Beth gave me your number. I'd love to meet and talk about representing you. When will you be in New York again?\"\n\nI answered.\n\n\"Next Tuesday. We're going to be there for a couple of days, and we'd really like to have representation before then.\"\n\nWe talked for about an hour. He had represented some really big names in the past. He was down to three now, mostly as a favor.\n\n\"Beth let me read the first ten chapters in her office. It's as good as she said it will be. I'd like to work with you. You'll be my swansong, sending me out in style.\"\n\nWe talked to two more, made appointments, but we knew before we got on the plane it would be Saul.\n\n.................................................\n\nCome to find out, Benny wasn't very traveled. I, thanks to my first job and my ex, was. Watching him was like watching a child. Unfortunately, we weren't there to sight see, at least until we finished our business.\n\nWe got checked in just in time to freshen up for our meeting with Saul.\n\n\"Should I wear a suit?\"\n\nI laughed.\n\n\"They want you. You could show up in a torn t shirt and ragged sweat pants and they wouldn't bat an eye. They're used to eccentric behavior from writers. On the other hand, you look damned handsome in a suit, and it does convey an air of professionalism.\"\n\n\"Okay then, suit it is. But I'm not wearing a tie. And that means you better wear that blue dress. It'll keep them distracted enough to let me be comfortable.\"\n\n\"All right\" I said meekly, tingling that I still could keep him so turned on after almost a year and a half together.\n\nI lay out the dress, then decided to give him a treat. My black thong, matching garter belt, and hose. I strutted out, holding the dress.\n\n\"Honey, will you zip me?\" I said, wriggling into my dress. I loved the look on his face. Reaching up to kiss his cheek.\n\n\"Now, honey, If you start to stress today, just remember the treat you have waiting under this dress.\"\n\nHe was grinning like mad all through the cab ride.\n\n.................................................\n\nI don't know what an agent was supposed to look like, but Saul Sanchez wasn't it. I had a vision of a wizened little man in a comfortable sweater, fawning over us.\n\nSaul was six foot seven, and in great shape for his age. Thick, jet black hair I'm sure was died, a small goatee, and a skull cap. His suit looked very expensive. He had one of those personalities that could fill a room all on its' own.\n\n\"Welcome, welcome\" he boomed, shaking our hands.\n\nSoon we were in a very nice office. Dark wood, leather furniture.\n\n\"My mancave\" he said grinning. He motioned us over to a couch, and sat on the matching oversized chair. He filled it up.\n\nHe got down to business pretty quickly.\n\n\"I read your work. Pretty good, for a beginner. The first two were a bit crude, but you progressed nicely. Beth has some ideas on that, I'll let her tell you.\"\n\nHe paused.\n\n\"The new book, at least the part I saw, is nothing short of brilliant. I can tell that hearing that embarrasses you, but you'll soon get over that. You'll have too, if it hits like I expect it to.\"\n\n\"I know you have interviews with two other agents, Beth told me. Both are pretty good, would do an adequate job, so why should you go with me, especially if my fees are higher? Because I'm the best for you. I can bring forty five years of experience, and my address book is a who's who of the most important literary figures in the world, not just the city. Plus, I'm really good friends with several prominent producers and film companies, and this has Oscar written all over it, if we get the right people, especially a good screen writer.\"\n\nHe paused, out of breath.\n\n\"My wife didn't want me to do this until I told her once she read the book she would disown me if I let you slip through my fingers. So, here's my contract. Get a really good entertainment lawyer to look it over. If you don't have one, I could give you a couple of names, as can Beth. Get back to me soon if you want me. There's lot of things that need to be done. Now, any questions?\"\n\nWe had a lot of questions, and he did his best to answer them to our understanding. He gave us a hearty handshake and sent us on our way.\n\nTo be fair, we went to the meetings with the other two. One, a man slightly younger than us, seemed competent but didn't really appeal to us.\n\nThe other, a man his early thirties, was a disaster.\n\nIt was a huge office, opulent, and extremely busy. In fact, we were interrupted numerous times, and he brushed most of our questions aside, saying an assistant would be be available to answer any questions after we had signed. He had the contract ready, and his personal assistant standing by to witness.\n\nI was getting angry, and Benny seemed amused.\n\nWhen the man finally stopped talking, he leaned back in his desk chair, and smiled a sharks' smile.\n\n\"Any questions before we sign?\"\n\nBenny surprised him.\n\n\"That's a really nice suit. Where did you get it?\"\n\nHe actually seemed to preen.\n\n\"Savile Row. Seven thousand, worth every penny. I can get you the name of the tailor, if you want. Yours?\" \n\nI know he was just being polite. Benny grinned as he stood.\n\n\"JC Penny. Two eighty nine, if I can catch them on sale.\"\n\nI happened to be looking at his assistant, and I thought she was going to choke, trying not to laugh.\n\nBenny reached out and shook his hand.\n\n\"Thank you for your time. It was...educational. I'm sorry, but I don't think I'll go with your agency. Have a good day.\"\n\nHe strode out with me in tow, while the agent tried to scramble out his chair. I didn't even try to hold in my laughter as we left.\n\nWe spent the afternoon meeting lawyers. There were two names both Beth and Saul recommended, so we decided to see them first, having made appointments in advance.\n\nWe chose a woman, our age, because we both liked her.\n\n\"So, Saul Sanchez and Beth Howard. When they called almost back to back I knew I had to meet you.\"\n\nWe spent an educational hour learning about intellectual property and entertainment laws. In the end, we signed.\n\nArmed with an agent and a lawyer, we saw Beth the next day.\n\n\"We won't be talking business, per se, you have people, very competent people, to handle that now. I just wanted to meet you, Mr. Henson.\"\n\nBenny shook her hand, smiling.\n\n\"You might as well get used to calling me Benny, every one else does. It looks like we'll be talking quite a bit.\"\n\n\"Beth\" she replied, handing him a card.\n\n\"These are my private numbers. If you need me for any reason, one of these numbers will reach me. And you need to get a new cell, and not give anyone else but Saul and myself the number. It'll cut down on wait time and assure us a direct line.\"\n\n\"Now, while Saul and Karen sort everything out with our business people, there is a few things I'd like to cover. I read all five of your earlier books. Tell me, have you read them lately? Is there anything you look at and say \"this would have been better, or I should have went in this direction instead'?\"\n\nBenny actually blushed.\n\n\"Not so much on my last two, but there was a lot I wished I had changed in the first three. Some my editor suggested, some my own thoughts.\"\n\n\"Very good, Benny. You should ALWAYS listen to your editor. Who did edit them? There were a few things I would have done differently, but all editors are like that.\"\n\n\"Bonnie.\"\n\nShe looked surprised, then smiled at me.\n\n\"You have learned well, grasshopper. I'm glad you still remember what I taught you. Is it going to be a problem letting me have him?\"\n\n\"A little\" I said, \"it was a spiritual connection, and was what got us together in the first place. But he's outgrown me now, and I'm smart enough to know it. He needs your skill level and experience.\"\n\nBeth came around the desk and hugged me.\n\n\"Well said. I promise I'll be gentle, at least at first.\"\n\nBenny flamed red while we giggled.\n\nShe sat back down.\n\n\"I want you to know that Harbor House has acquired the publishing rights to all your past work. Three of them are good enough to be rewritten and published, a few months after this one comes out I want you to have one ready. They'll do well, riding the coattails of this one. Benny, before you get excited, you still retain ownership of the books, we just bought publishing rights. Are you working on anything now?\"\n\n\"Not really. I have a few ideas I'd like to develop, but I kind of got derailed by all of this.\"\n\n\"I'll be honest with you, you won't get much time to write for the next year or so. You'll come to understand why writers hate publicity, it steals their creative time. But all successful writers know it's the cost of fame. That being said, keep a laptop with you, you'll find yourself with a spare hour here, thirty minutes there. Use it, and when the furor dies down you'll be ahead when it comes to serious writing. In the meantime, you've got about six months before this hits, I want you to rewrite your third and fourth book, and think about a sequel to the third. People love mystery as much as romance. All right, business over. What are your plans for the rest of the week?\"\n\nI answered.\n\n\"Well, we have meetings with Saul and Karen, separately and together. And this is Benny's first time in New York, so I'm sure sightseeing is on the agenda.\"\n\n\"Good. It's a hell of a place to live. Have dinner with Jen and I tomorrow, we'll make some recommendations. Anything specific you'd like to do, Benny?\"\n\nJen was her new girlfriend. She said it looked like it might be serious. \n\n\"I've always wanted to see a Broadway show. A musical, if I could.\"\n\nBeth grinned.\n\n\"I'll see what I can do. You're about to learn, a successful writer aligned with a top publishing house has the entertainment world at their fingertips.\"\n\nThe next night during dinner, she produced two sets of tickets.\n\n\"Momma Mia. A matinee. And the next night Kinky Boots. Jen and I are going with you, she's been dying to see it.\"\n\nBenny was stunned.\n\n\"What do we owe you?\"\n\n\"Undying gratitude. One of the perks of the trade. And don't be surprised if the producers come sniffing around. I may have said you were about to set the literary world on fire. Network, Benny. Learn to love the word.\"\n\nShe was laughing at the look on his face.\n\nBeth and I went to the ladies room, leaving Jen at the table. Guard duty Beth called it.\n\n\"He's a babe in the woods, Bonnie. Promise me you'll protect him. You got a glimpse of how this business can be. Keep him sweet, so he can keep his perspective.\"\n\nShe was dead serious, I could see it in her face.\n\n\"Don't worry\" I told her, as she freshened her lipstick, \"I'll be like a momma bear protecting her cub. Anybody trying to get close to him is going to get chewed pretty bad.\"\n\n\"Good\" she said, pursing her lips, \"I'll hold you to that.\"\n\n..................................................\n\nBenny sat enthralled. We had excellent seats, and the producer made a point of taking us backstage before the show.\n\n\"Are you somebody? I don't recognize you. Beth says you're the next big thing in the literary world.\"\n\nHe lived up to his reputation, blunt and to the point. Before he could speak I answered.\n\n\"He's somebody very important. He's my husband. If you don't know who he is this time next year, it means you've entered a monastery in Mongolia.\"\n\n\"Well said\" he grinned, handing me a card.\n\n\"Call next time you're in town and need tickets. I'll see what I can do. And if any of your work has play potential, have Saul call me first.\"\n\nWe laughed until we cried at Kinky Boots. Beth didn't have any personal connection to any of the people involved in it, so we just enjoyed the show.\n\nI enjoyed it, but was a bit distracted. We were on the go almost since we got here, so a quick cuddle was about all we got in until business was concluded.\n\nBenny, that devious man, surprised me yet again.\n\nI was in the shower, getting ready for the show. When I came out he was gone, and a note and wrapped package was on the coffee table. I smiled, picking up the note. My mouth dropped open.\n\n\"Plum,\n\nI've missed you lately, so I'm inviting you up to the Big Apple, to see a show and have a little fun. In the package is exactly what I want you to wear. Nothing more, nothing less. I'll be in the bar, waiting. Don't make me wait too long, I'll have to punish you if you do.\n\nSir.\"\n\nI was trembling while I opened the package. Plum hadn't come out to play in over three months. She was past due.\n\nThere is no way I could describe the rush I got being Plum, being used in ways I had only dreamed about. I'm sure all women have fantasies, and I was lucky enough to find a partner willing[and eager]to let me explore them. I knew he would never do anything to really hurt me, although last time the spanking I got left a few bruises, and I sat gingerly for a few days. But it was followed by the most intense orgasm I'd ever had. I actually passed out, experiencing the 'little death' for the first time ever.\n\nA little black dress, with a row of buttons up the side, allowing a little leg or a lot to be exposed. A shelf bra similar to the ones I had back home, black garter belt and hose, black pumps with four inch heels, the tallest I had ever worn. No thong. And a note.\n\n\"Three buttons only.\"\n\nI sipped into the lingerie, slipped the dress over my head. I had already prebuttoned the skirt. It was dangerously high. I'm sure if I wasn't careful a stocking top would show. \n\nI went to slip the shoes on and felt something in the right one. I shook it and another note slipped out.\n\n\"Sit in front of the mirror and play with yourself, but DO NOT come! I want your fingers wet when you join me at the bar. If no one is in the elevator, slip a hand in, make it as fresh as possible.\"\n\nI was literally quivering. I pulled the vanity chair far enough back to have a clear view, and worked my little kitty. Juices were already flowing, and I came dangerously close to disobeying my instructions. It took every ounce of will I had to stop.\n\nThe elevator ride was agonizing. There was an older couple the first three floors, a woman and her teenage daughters for the next four. The next three I was by myself. I slipped a hand underneath my dress, rubbing slowly. The elevator stopped an I just barely got my hand out and my dress adjusted before the doors opened. A couple got in, in their thirties. The woman sniffed and smiled, knowingly. I kept my eyes down the whole time.\n\nThe last six floors I was alone, and I kept my fingers in until the door was opening.\n\nI hurried into the bar, looking desperately for Benny. The bar was curved, and I saw him sitting on the far end, near the bathroom entrance.\n\nHe stood as I entered, taking my hand, putting it to his lips for a kiss. And a slow leisurely lick.\n\n\"Mmmm.\"\n\nHe pulled the chair out at the very end of the bar. I tried to show him as much leg as possible.\n\nHe motioned for the bartender, getting me a whiskey sour and another straight rye, neat. Benny wasn't much of a drinker, but he loved rye.\n\nAs we were waiting for the car to take us to the play, we talked quietly.\n\n\"Hello, Plum. Ready for a special night?\"\n\n\"I'm so hot right now I could melt this seat.\"\n\n\"Really?\" he breathed into my ear, licking slightly. I know I jumped a little. \"You don't mind if I verify that, do you?\"\n",
        "Before I could think, his left hand had slid under my dress, urging my legs open. I obeyed on instinct, trying to muffle my moan as two fingers invaded me.\n\nHe was still whispering in my ear.\n\n\"No one can see you, this is the darkest part of the bar. No one is sitting next to us. Surrender, Plum. Enjoy the pleasure. I want to see your juices on this seat before we leave.\"\n\nI was past caring. If he had told me to remove my dress and give the bar patrons a show, I think I would have.\n\nAt first he was slow, easing his fingers in and out, making me squirm. Soon he had turned his hand slightly and his fingers had found my G spot, gaining speed and momentum. I had been on the edge for half an hour, so two minutes in I jammed my hips forward and squirted all over my dress and the chair. I managed not to cry out, but I was sweating like mad and gasping for breath. He held his hand to my mouth.\n\n\"Suck.\"\n\nI obeyed without question. I looked around and saw the bartender grin. I hope he was the only who saw me.\n\n\"May I freshen up, Sir?\"\n\nHe grinned and I felt chills.\n\n\"Yes. Fix your makeup and hair. Touch nothing else, do you understand? Good, the limo should be here by the time you get back.\n\nI stood in the bathroom of a five star hotel, fixing my makeup and hair, while my juices ran down my leg. The urge to wipe was strong, but I contained it. A woman, beautiful, came out of a stall and stood beside me, watching me.\n\n\"I saw you on the way in. It's such a rush, especially your first time, isn't it? I'm surprised to see someone your age into exhibitionism, but go, girl, enjoy it. My husband had me doing all kinds of things when we were married. Be careful, dear, don't let it take over your life. It can ruin relationships.\"\n\nI couldn't help but be a little proud.\n\n\"It was the first time ever. What a rush! And we have it under control.\"\n\n\"Well, enjoy your evening, wherever it takes you.\"\n\nI pointed her out to Benny as we left. He smiled.\n\n\"She's a pro. The bartender pointed her out to me before you arrived. A thousand a night. She must be really good.\"\n\nHe made me rub my fingers over the bar seat before we left. It was soaked.\n\n..................................................\n\nHe played with me all the way to pick up Beth and Jen, raising the privacy glass. I had my mouth around his cock in three minutes, just barely finishing before we pulled up. Beth and Jen just looked at us and grinned.\n\n\"First time in a limo?\"\n\n\"Yes\" he said, holding my hand. \"This could be my favorite mode of transportation, easily.\"\n\nThey smirked all the way to the theater, and during the late dinner afterwards.\n\nI was just about calmed down when we dropped them off. He raised the privacy panel, and played with my breasts the whole way back to the hotel. He suckled, he twisted, he pulled, keeping them achingly hard, while I sat, as ordered, with my hands at my sides.\n\nHe put them back in my bra and I had just adjusted my dress when he pulled something out of his jacket pocket. \n\nA collar. Black, slender, with a pearl set in the middle. He put it on me, turning the pearl to the center of my throat. It looked like a choker unless you really paid attention.\n\n\"Stand tall! If I catch you slumping, I'll add to the collar.\"\n\nI didn't stand tall, I strutted.\n\nIn the elevator, he unbuttoned the last three buttons on my dress, and the opening went to my waist.\n\n\"Walk carefully, Plum, or the world will know you don't have panties.\"\n\nI stood stock still when two men and a woman got on, and rode to the twentieth floor, afraid if I moved they would notice. I sighed when they got off two floors below ours.\n\nHe pulled a slender chain leash out of his pocket, attached it to the collar. When the door opened there was an older couple standing there. Before I could move, he exited, pulling slightly on the leash. The woman turned red, the man was speechless. I know they watched us all the way down the hall. I was gasping for breath when he shut the door.\n\n\"Have fun, Plum?\"\n\nHe ran his hand under my dress feeling the juices leaking from my arousal. He ran two fingers in roughly, making me gasp, before removing them and swatting my bottom.\n\n\"Go get ready for bed. There's a new product under the sink, make sure you use it.\"\n\nHe more or less shoved me into the bathroom. I almost fainted when I saw it. Two enema kits, and a bottle of lube.\n\nIt had long been a fantasy of mine to try anal sex. He had been teasing me lately, lubing a finger, teasing while he licked my kitty. When I would be close, he would shove it in to the second knuckle. I screamed and came hard every time.\n\nI read the directions carefully, my hands shaking. It took me thirty minutes to accomplish it, but I was squeaky clean, and lightly lubed.\n\nHe was waiting, a smile on his face.\n\n\"Face down\" He said, pointing at the bed. It wasn't until I laid down that I noticed the restraints. Soon I was firmly secured. He surprised me by sliding a mask over my head. It had built in ear plugs. I was completely sensory deprived. Then he put a small ball gag on me.\n\nAll I could do was lay there. I couldn't hear, see, or speak.\n\nHe left me for a few minutes. Then I felt his hand sliding softly across my bottom. I wriggled, glad to feel something. Then I felt the cool lube being poured on my bottom, running down my crack.\n\nHe rubbed some into my cheeks, before plunging into my sopping pussy, although when I was in character as Plum, I always mentally said cunt. Wives and girlfriends have pussies, subs have cunts. It made sense in my fantasy world, anyway.\n\nI arched up, moaning into the gag, but he stopped way too soon, slipping out, leaving me achingly empty. Then his fingers found my little star, teasing, rubbing, while I tried to follow his fingers.\n\nI quivered when one slipped in, groaned when he added a second, then moaned into the gag when I felt the third. After a few minutes, they were all gone. I arched up, trying to find them, when I felt something I couldn't identify touch me. Slowly, he pushed it in, millimeter by millimeter, pausing once in a while before continuing onward. It felt huge.\n\nI gasped, I cried, I tried to tell him to stop, trying too wiggle out of it. A very hard slap came across my cheeks, and I got the message, lying still. Soon it appeared to be all the way in, and I relaxed a little. \n\nHe urged me with his hands, and I raised up as far as I could with the restraints. I felt something slide between my legs, and a strap went round my waist. I felt him moving around on the bed, and soon six inches of something hard and ribbed slipped inside me. He fussed with some buckles until he had it secure.\n\nHe let me lie there fr a minute, admiring his handiwork I suppose. Suddenly the thing in my butt started vibrating. I responded my moving my hips a little. Then the vibrator in front started, at a much higher speed. It also moved in and out about an inch. In five minutes I was thrashing around on the bed, while the plug and vibrator changed speeds, sometimes going very fast in tandem, then one or the other would slow down. I thrashed, I moaned, once when they were both on high I screamed into the gag. Occasionally he would reach under me and pinch a nipple or stroke my clit, but mostly he just watched.\n\nBenny told me later he let them run for thirty minutes, until all I could do was lay and quiver. Suddenly they stopped.\n\nI felt him unbuckling the belt. He removed it and the vibrator, twisting it a few times while I moaned. I felt him climb between my legs, and he slid into me easily, stroking slowly at first, before starting to pound. The plug came back on at the highest speed. I was squirting again in five minutes. He immediately stopped, and the plug was pulled quickly out. I lay there, thinking it was over, when I felt him behind me, loosening the leg restraints. I thought the night was over until he was behind me again, pulling me to my knees. I felt something nudge my ass, something hard. I recognized it instantly.\n\nOh my God! He was really gonna fuck my ass! I immediately started getting moist.\n\nHe started out gently, and it wasn't bad until he started hitting spots the plug hadn't reached. It was painful, but not excruciating, and soon it began to feel better, then it felt good. Then it felt great! He had started a steady rhythm, increasing speed. I was babbling into the gag when I felt him reach up and unclasp it. It fell to the bed and I started screaming.\n\n\"That's it baby, fuck my ass! Make me scream! OH! OH! FuckmyassfuckmyassfuckmyassfuckmyASSSSSSSS!\"\n\nHe was pounding wildly, and when I came he released what felt like a quart. I felt my insides pulsing around him as he did. I think I saw stars, before I collapsed.\n\nHe left me there, restrained, got some warn cloths, and cleaned my bottom.\n\nGently removing the mask, he kissed me. I was so weak I just barely kissed him back. He was still cuddling me when I passed out. He tucked me in, showered, and soon snuggled with me.\n\nThe next morning I woke up and felt my throat. The collar was gone. I was exhausted. He was already up, drinking room service coffee and reading the Times when I came out of the shower.\n\nHe gave me a nice kiss and poured me a cup.\n\n\"Sleep well dear?\"\n\nI kissed him with passion.\n\n\"Like a rock. Plum called this morning, she couldn't wait to tell me about her night. It sounded wild! She said she loved it, but only wanted it to happen once in a great while, said she couldn't take it on a regular basis. I need to meet her man, he sounds sexy as hell.\"\n\n\"Maybe you will sometime.\"\n\nWe went down to breakfast, talking about the day.\n\n\"Anything special you'd like to do?\"\n\nHe grinned. \"Sight see, of course. I'd like to see the Statue Of Liberty, and the Empire State Building. But first, call Plum, I need to see her for an hour this morning.\n\n\"So soon?\" I said surprised. \"She may not be able to handle it.\"\n\n\"Oh, it would only be for an hour or so. It even isn't sexual.\"\n\n\"I'll see what I can do, maybe I can talk her into it. Let me run up to the room, make a call.\"\n\nI dashed up, stripped, put on the collar, and called.\n\n\"She said she was happy to see you. Any special way you want her?\"\n\n\"Why, naked, and on the bed, of course.\"\n\n................................................\n\nHe came in, took in the sight of me, kissed me gently, then secured me, face up, to the bed. He attached an eighteen inch spreader bar to my knees, and ran a long strap under the bed, cinching it around my waist. I was completely immobilized, and when he blindfolded me, something in his eyes made me nervous. He put his fingers to my lips. \n\n\"You know I could never hurt you right?\"\n\nI nodded.\n\n\"Then trust me. This is one of your fantasies.\"\n\nI relaxed, never even squirming when he put the gag in my mouth.\n\nI laid there for about ten minutes. I had almost dozed off when I heard a knock on the door, and Benny talking. I heard footsteps.\n\n\"Here she is\" he said.\n\nAnother voice spoke \"Very nice, especially for her age.\"\n\nANOTHER MAN! THERE WAS ANOTHER MAN IN THE ROOM!\n\nI was thrashing, then I felt gentle hands on me.\n\n\"Stop, honey. It's important you don't move. I would never let harm come to you, you know that.\"\n\nHe petted me until I sort of relaxed.\n\nThe voice spoke.\n\n\"Ma'am? This is important. You have to lay still. Still. Do you understand?\"\n\nI nodded. Benny had my hand and was stroking my cheek.\n\n\"This is gonna sting a little, but it'll be over soon.\"\n\nI felt something wet across my pussy, and tightened up. I was dried gently. Then I heard a buzzing noise.\n\n\"Remember Ma'am, stay still.\"\n\nA tattoo! Benny was putting a tattoo on me! One of my fantasies I had never had the nerve to do.\n\nFifteen minutes later he rubbed a little bit of gel over the spot.\n\n\"There now. All done. That didn't hurt much, did it? Now, follow the instructions I left your husband and you'll be just fine. It was a pleasure ma'am. And what I said about you being a fine looking woman to your husband? I was telling the truth. I hope my wife looks so good when we're your age.\"\n\nI heard Benny thanking him as he walked him to the door. He came back in, gently putting a large bandaid over the spot.\n\n\"Leave this on for the rest of the day. No peeking! You won't be able to wear panties for a few days, or pants. Loose dresses work best.\"\n\nHe unstrapped me, whistling.\n\nI got dressed, using every bit of my will power I had not to peek under the bandaid.\n\n\"Well?\"\n\n\"Neither Plum nor I know how we should feel. It was one of those fantasies both of us had. We'll just have to see. I have only one question. Did she have to be naked?\"\n\nHis grin got bigger.\n\n\"No. she could have gone into the shop, pulled her dress up and her panties down a little, and accomplished the same thing.\"\n\n\"But think about it. It was one of your fantasies, to be naked in front of another man. Somewhere in New York City is a man who has seen you in all your glory, and knows you have a tattoo. We might meet him on the street tomorrow. You might go into a tattoo parlor and see a picture of your pussy on his wall of fame. He did take a photo.\"\n\nI went red, but had to admit, if I'd had on panties, they would have been wet.\n\nWe went to lunch, saw the statue, went to the top of the Empire State building. The next day we went to the Guggenheim, spent almost the whole day.\n\nThe next day we went home. It was fun, but we were both missing our friends and porch swing.\n\nOh, and the tattoo?\n\n'Benny's,' in pink so pale it was almost invisible, with a little purple plum beside it.\n\n.................................................\n\nHilda and Sarah were all over me when we got home. I didn't tell them why we went, they thought we were on vacation. The pictures I showed them supported that. Miriam was at the pub with two friends from the bank. I think she came here because it was the one place in town he wasn't allowed into. I felt her eyes on me all night, so I talked loudly, describing the shows, the restaurants, the sights in great detail.\n\nOnce again, we met in the restroom.\n\n\"You must love him a lot to spend your money like that. Tell me, how does it feel to be a sugar momma?\"\n\nI felt Sarah and Hilda tense. I laughed.\n\n\"It feels great! I just wish I had more to spend on him, he's worth every dime.\"\n\nI walked out, leaving her with her mouth hanging open. Her day was coming.\n\n................................................\n\nFor five months we lived our lives as usual. Benny worked, redoing his older work, staying in constant contact with Beth. It hurt me to see it, knowing it used to be me.\n\nI amused myself by writing stories about Plum and Sir, turning it into an open ended series. Of course we were younger, he was much bigger[in all ways]and I was far more beautiful. And, I had a killer rack. No one would believe they were mostly true adventures of a couple in their early fifties. I was consistently ranked one of the top writers on their site.\n\nI reread his old stories, people were still commenting on them almost two years after they were posted. I showed him, and just for fun he wrote a little piece of fluff and posted it.\n\nHe got three hundred comments, welcoming him back and begging for more.\n\n..............................................\n\nWe got the advance for his book, far more money than either of us had ever seen. I had plans for the money. I finally told him what Miriam had been saying about us, and he was furious until I outlined my plan. Then he just threw up his hands and laughed, telling me I had his full support.\n\nI walked int the First National Bank, home of Mr. & Mrs. Snake. It just so happened Miriam was in charge of new accounts. When I told her I wanted to open an account, her smirk was a mile wide.\n\n\"Hiding a few dollars from your husband? About time, it must be a pain in the ass to keep him away from your money. I'm surprised, I never thought he would be such a spendthrift. Of course, I never had that kind of money, and if I had I would have made sure he never accessed it.\n\nNow, you can open up a senior account for as little as fifty dollars, and you can put any address you want on the checks.\" \n\nI let her enjoy her smugness for just a second, before telling her I needed to think about it.\n\nI went straight to the top, Mr. Snake, senior.\n\n\"One of your account officers was disrespectful. I was going to open a few accounts with these, but I think I'll go to my old bank, instead. But in fairness, I decided to see if you can offer me something better.\"\n\nHe didn't know about his son and daughter in law, or what a jerk he had been at the pub. I laid out three checks, all certified, two drawn on a company called BenBon, Inc., and one from Benny's personal account. Each was for one hundred thousand.\n\nThe man looked like he wanted to pee in his pants. He started babbling about money market accounts, prime plus, all kinds of things. I let him ramble before I brought him back to the present. I picked up two of the checks.\n\n\"I tell you what, I will give you one chance, one chance only. Have the account officer I talked to do the paperwork. And she better be polite. AND she better understand I expect confidentiality. I get the first whiff she's been talking, and I pull the account and you don't get the rest of my business. I can assure you, sir, this is just he tip of the iceberg. We could literally be talking millions here. Can you meet these expectations?\"\n\nHe fell all over himself agreeing, and called Miriam into the office.\n\n\"This woman wants to open an account. I expect you to treat her with the confidentiality and respect she deserves. Explain her options, give her good advice. You may use my office.\"\n\nMiriam looked like she had been slapped. Trying, mostly unsuccessfully, to be professional, she sat at the desk.\n\n\"How much would you like to deposit, Ma'am?\"\n\nI laid the first check down. \n\n\"I'd like this in personal checking, your boss assured me it would be the one most advantageous to me.\"\n\nHer eyes widened at the amount.\n\n\"I'd like this one in a savings account.\"\n\nI lay the second one down.\n\n\"And this one, well, why don't you just surprise me.\"\n\nHer eyes were bugging out and she seemed to have trouble breathing.\n\n\"Can you handle that, Mrs. Emerson? Or do I need to call your father in law in? And remember, Mrs.\n\nEmerson, confidentiality is paramount. Breathe one word about this money, and I'll pull it out and give it to your competitor. Do you understand? Not even your husband. You have a good day now. I'll be in a little later to sign the paperwork. I'll be easy to recognize, you'll see my new Mercedes, or maybe my old Corvette. Since Benny bought them for me, I have a hard time deciding which to drive.\"\n\nI didn't walk, I strutted out of the office. Take that, bitch! How does your new husband stack up to what you threw away? \n\nI was in the 'vette, a 1973, that went as fast as I had the nerve to drive. It's amazing how attractive it makes an old broad look with a hot rod wrapped around her.\n\nI nearly died when he bought me the Mercedes, a full size sedan with all the bells and whistles.\n\n\"This is for you. It suits you. It screams class.\"\n\nThe next week he showed up with the 'vette.\n\n\"Here\" he said handing me the keys.\n\nI was almost beyond words.\n\n\"But honey, the Mercedes is all I've ever wanted. What would I do with this one?\"\n\nHis grin got bigger.\n\n\"I didn't get it for you. Your a smart girl, you'll figure it out, and I'll leave it to you to figure out a payment plan.\"\n\nI had no idea what he was talking about, but I took it for a spin and fell in love. It was a straight drive, and I loved changing gears. It would bark the tires in the first three gears. I had to slow down, I didn't want to wear the tires out the first week.\n\nAfter burning half a tank of gas, I decided to head home, but not before stopping by Hilda's and taking her for a ride.",
        "She walked all the way around it before she jumped in the drivers' seat and held her hand out.\n\n\"Keys, now.\"\n\nI thought I was brave until she got us out on the interstate and let it loose. At one ten I was begging her to slow down, at one twenty I was screaming.\n\n\"Pussy\" she said, before slowing down to a sedate ninety. She kept telling me how much she loved it until we got to her house.\n\n\"That is one mean machine. I just have one question. What does the vanity tag mean?\"\n\nOur state only requires a back license plate. Jumping out, I ran around back.\n\nPLUM 1.\n\nI got it. He was sitting in the porch swing when I got home. I nearly broke the chains jumping into his lap.\n\n\"It's a good thing I'm not a jealous bitch. And be careful, keeping up two women could be very costly, we both have expensive tastes. Here.\"\n\nI handed him a note I had stopped on the side of the road to write, and went into the house.\n\n\"Sir,\n\nI love the car! You need to be more careful, it wouldn't do for your wife to see her husbands' bitch in such an expensive car. People will talk. Now, your pussy is dripping, so I need you to plug it. We'll consider it the first payment.\n\nFeel free to set other terms, I promise to refuse you nothing, as long as it stays between us.\n\nYour slut, \n\nPlum\"\n\nHe almost ran into the bedroom, to find me on my knees beside the bed, in my submissive posture. His pussy was pretty sore for the next couple of days.\n\nWe had Hilda, Jack, Sarah and Jim out for some barbeque, to tell them where the money we had been spending came from.\n\nTo say they were surprised was an understatement. We gave them an advanced copy of the book with strict orders not to show it to anyone before the release date, one week away.\n\n.................................................\n\nThe book was already getting buzz, Saul and Beth had been earning their pay. Every critic in New York, Chicago, and Los Angeles had been given copies a week before the general release. The feedback was amazing. A few were in a struggle to see who got to meet him first. Beth flew the ones from out of town in for a mass interview, followed by thirty minute each privately. It took two days, and exhausted Benny.\n\n\"Damn, Bonnie, they asked me everything but your bra size and the length of my cock. I didn't have a good time.\"\n\n\"Relax, honey. You knew it was coming. Just do like Etta taught you, and it'll be fine.\"\n\nEtta James[no relation, she was quick to point out}was a stunning black woman, forty two and looking thirty. She was a semi retired publicist, very good at her job. Saul recommended her.\n\nHer husband was having health issues, and she refused to leave him. A publicist has to travel a lot, so she gave up her job, becoming a consultant used on an as needed basis. Even now, she had to turn down jobs.\n\nShe coached him on how to do interviews, what questions to deflect, which to answer, what to say when he made a statement.\n\n\"Never give your home address, or personal information past what is already publicly known. To be honest, you'll probably have to move. Most people mean no harm, but if you're easily assessable, they will just drop by. They won't think of it as invading your privacy, they will think you'll enjoy knowing how you affected them.\"\n\n................................................\n\nThe book had been out three months today, and Saul, his wife Agnes, Beth, Jen, Etta, her husband Farley, Grace[our attorney] and her husband Will were having us out for a celebratory dinner/business meeting. Saul gave us an update.\n\n\"Universal called me today, sniffing around. I jerked them around a little, telling them I wasn't sure you were going to agree to a movie. But if you decided otherwise, we'd be glad to consider their offer. And Oxygen wants to make your first book into a movie of the week. They've offered you three hundred thousand for the rights.\n\nI turned it down cold, Three months from now It'll be between three quarters to a million.\"\n\nBeth added her information.\n\n\"The latest projections put you at half a million copies sold by the end of the year, maybe higher.\"\n\nWe sat with our mouths open. The book was priced at $24.95. Benny got almost seven dollars after everything was paid. That rounded out to 3.5 million!\n\n\"I'm guessing the movie rights will go for twice that\" said Saul, grinning. \"Add in paperback publishing, pay per view, DVD sales and rentals, and you could be looking at fifteen million by the end of next summer. By then, your reworked third book will be out. Don't expect the same numbers, it's not nearly as good, but you'll probably realize three to four million just from riding on the coattails of this one.\"\n\nThe Champagne flowed to the point we had to call a limo service to get us home.\n\nThe next day, after recovering, we had a serious talk about the money.\n\n\"Benny, do you want a post nupt? I'll sign it.\"\n\nHe turned bright red.\n\n\"If that was Plum talking I'd have her over my lap. Don't go all stupid on me, Bonnie. I wouldn't even be here if it weren't for you.\"\n\nI glowed, and never brought it up again.\n\n\"Well then honey, what shall we do with OUR money?\"\n\nHe shrugged.\n\n\"Never really thought about it. I never expected to ever have this much. I suppose we should think about our family. After all, we have nine grandchildren now. College educations can be pretty expensive, as I remember.\"\n\n\"Yes they are. And it'll soon be ten. Whitney called while you were in a meeting. A girl, due in August.\"\n\nHe grinned at the news.\n\n\"I stand corrected. Ten, and probably more. We need to call Grace. Didn't she tell us her husband was a financial wizard? We need to see about a trust, make sure the money is there whether we are or not.\"\n\nWe decided to help our kids out with mortgages if they would accept it, discussed buying a new house if we did indeed lose our privacy. I already had my two cars, and Benny did get a new truck, an F250 with all the bells and whistles.\n\nOther than that, we had no idea what to do with the money.\n\nWe talked about helping out Sarah and Jim, Hilda and Jack, if we could find a way to do it without offending them.\n\nI surprised him, trying to lighten the mood.\n\n\"What about your mistress? Be careful there, I think she's pretty high maintenance. I know you bought her a car, bet you thought I would never find out. Seriously, a Corvette? That pussy must be gold plated.\"\n\nHe grinned, bantering back.\n\n\"I'm sorry honey, she fulfills needs I'd never ask for from you. And if it is gold plated, then yours would be platinum and encrusted with diamonds. In fact, I feel a need to polish it a little. You coming to bed, or should I call Plum?\"\n\nIn response, I dropped my dress and bra. Clasping my breasts together, I shook them at him.\n\n\"Come to bed husband. I'll make you forget all about that low rent whore.\"\n\nIt's hard to drag someone to bed when they're dragging you harder, but we managed.\n\n..........................................\n\nWord had gotten out in our small town about his success. It was kind of hard not to, when he was on all the national morning shows, some of the late night shows, and a few independent talk shows. We ended up on Rachel Ray after Saul told her about his barbeque. He even made some, shared his sauce recipe, but not the dressing recipes for the slaw and potato salad. His corn bread pancakes were a big hit.\n\nHe was on Ellen, where she asked him when he was going to write about a hot talk show host and her even hotter wife. He earned a lot of points when he told her he didn't do biographies, and that real life was often more fairy tale like than people knew. He gave us as an example, and told her I was in the audience.\n\nShe had me come up, and asked me what it was like being married to the hottest author on the planet.\n\nI shrugged.\n\n\"I wouldn't know, I'm married to Benny. But, he is the hottest thing in the world, to me.\"\n\nBenny gave me a big kiss while the crowd cheered.\n\nI ended up staying on the couch with him for the rest of the show.\n\nUnfortunately, everyone was either nervous around us, or treated us like aliens. It came to a head when I was at the pub, one of the rare chances I got these days, and friends I'd had for forty years treated me like a stranger.\n\n\"What the hell is the matter with you people? I played in the sandbox with some of you, and now that Benny did something totally unexpected that has earned us a few dollars, I'm not the same person? I don't need Hollywood ass kissers or New York flunkies, I need someone to tell me I'm full of shit without hurting my feelings.\"\n\nI turned to Hilda and Sarah.\n\n\"You two! I've loved you like sisters for years. You're my best friends in the world, and now you act like you're scared to talk to me.Well if that's the way you feel.....\"\n\nI lost it, started crying, and headed for the door.\n\nHilda, Sarah, and three more women caught me about halfway across the floor, hugging me and crying along, murmuring apologies. They pulled me back to the table.\n\nAfter we settled down, Hilda grinned.\n\n\"Drama queen! We didn't mean anything, we figured now that you're rich, you didn't need us anymore.\n\nYou made it pretty plain you're as screwed up as ever, and we're going to have to keep an even closer eye on you. But you're footing the bar bill, moneybags. And we're kind of thirsty. Being friends with you is hard work.\"\n\nAfter that we laughed and carried on like always.\n\nI did tell them a few stories about the oddities of some of the famous people we had met, that kept them laughing. Other than that, we did what women the world over do when they're together, talk about our men.\n\nSarah had continued to lose weight, twenty pounds so far. Every ten pounds got her a trip to the lingerie store. Jim was still diligent in helping her groom.\n\nHilda was experiencing motherhood for the first time, Jacks' two daughters had moved in permanently, by choice. Her days were filled with soccer practice, band rehearsal, school events, and church activities. She was happier than I had ever seen her.\n\n\"The only thing I hate is the lack of privacy, but their mother does take them every them weekend. I think we'd go crazy if she didn't. Jack is as diligent as Jim on our grooming schedule.\" \n\nShe giggled, and told us how his youngest had almost caught them, and how she had to pull on panties quickly, over a full coating of shaving cream. We howled.\n\n\"What about you Bonnie? Benny still wield a mean razor?\"\n\nI hung my head in pretend regret.\n\n\"No, our schedule is often too hectic.\"\n\n\"So, you have to shave yourself?\"\n\nI looked up and grinned.\n\n\"No. I took a little of his money and had it removed permanently, from my ankles to my neck. Gotta tell you girls, I love it. I could probably have you guys done, if you want. We can call it a birthday present.\"\n\nSarah said no immediately. She liked the attention she got, said they often discussed problems while he did it.\n\nHilda went thoughtful, said she'd have to ask Jack.\n\n\"Is it really that smooth?\"\n\n\"Wanna see?\" I said grinning. \"Step into my office, I'll even show you my tattoo.\"\n\nI headed towards the ladies room.\n\nHilda grabbed my hand. \n\n\"Not here! Think what would happen if we got caught. I can see the headlines now.\"\n\n\"WIFE OF WORLD FAMOUS AUTHOR CAUGHT SHOWING HER BARE BOTTOM IN PUBLIC RESTROOM. Pictures of tattoo on page seven.\"\n\nWe all broke down giggling, but she was closer to a truth she never even realized.\n\n...............................................\n\nEtta gave us both several lectures on propriety.\n\n\"Everything you do in public, you need to bear in mind could be interpreted wrong. Negative publicity could hurt your reputation and wallet, deeply. If Benny wrote stuff like Fifty Shades of Grey, maybe it wouldn't seem bad, but like it or not, Benny is being hailed as a moral hero for a lot of religious and conservative groups. Doesn't matter if that's what he had in mind when you started writing, that's the result.\"\n\nSo we made sure we were circumspect in public, well dressed, polite, even tempered. We often had to go to public events because he was in such high demand. It took a little getting used to all the cameras.\n\nIn a move that surprised every one, at the first instance, Benny went into the crowd of paparazzi and introduced himself, learning names and shaking hands.\n\n\"It must be annoying chasing people around. Tell you what, why don't you all come out to the house next Saturday afternoon? Bring your wives and girlfriends, heck, bring your kids if you like. We love family time. You can get all the photos you want, a little individual face time, and a pretty good meal. Please though, call me and tell me how many are coming, so I can make sure I have enough food. And don't expect to drink too much, if kids are present.\"\n\nHe made each of them in turn take a group photo of him with the others, then waved to them and stepped inside. They had been so captivated they missed a lot of celebrities. When he found out it was the birthday of one, he coaxed a rising young singer out to sing Happy Birthday, and made them all join in the last chorus.\n\nThe guests were all laughing when we entered.\n\n\"Damn!\" said one well known stage actor, \"If I knew all it took was being nice to them, I would be drinking buddies with half of them now.\"\n\n\"In fact\" he grinned, \"I think I'll take them some drinks. It has to be hot in that blazing sun.\"\n\nHe got the waiters to gather up some soft drinks and water, and pretty much the whole party trooped out, shaking hands, passing out drinks, talking.\n\nTwenty minutes later we went back in, to waves and well wishes. Ten minutes later they were gone, having got enough photos for the day.\n\nThe next day Beth called.\n\n\"I got an interesting phone call from Etta a little while ago. She told me what Benny did. No one has ever done that before, to her knowledge. Is he really going to invite them to your house?\"\n\n\"Yes\" I said, laughing. \"Remember, it's a rental, and we're moving out the next week, so there's not much of a problem there. He's actually looking forward to it.\"\n\n\"You know, Bonnie, I don't think people realize how perceptive Benny can be, or how sharp he is.\"\n\n\"You're right\" I said, soberly. \"Even after two years, I'm still finding out things about him.\"\n\n\"Well, I'm sure Grace will call you, probably to insist she be present. Saul and I will make it a point to come also, just to keep an eye on things. I hope this doesn't blow up on him.\"\n\nAfter she rang off I started thinking. Benny was in the office of the house we had rented just outside New York, actually getting some work done. I waited until he took a break before talking to him.\n\n\"Are you sure about this, Benny?\"\n\nHe smiled.\n\n\"Yes. These people, or more like them, will be following us for awhile, until our fifteen minutes of fame are up. I'd rather have a good relationship than be antagonistic. After all, except for Plum and her little adventures, there's nothing about us the least bit titillating, and I'm not bringing her up. I can see the headlines now.\"\n\n\"Conservative author caught in romp with his mistress/sex slave. Film at eleven.\"\n\nHe broke up laughing, and I had to giggle.\n\n...............................................\n\nWe had thirty paparazzi, girlfriends, wives, and about fifteen kids of various ages show up. He had a talk with them all before the party.\n\n\"I know you'll bring your cameras, and I don't begrudge pictures, but please, keep it manageable. Try to relax, have a good time. We'll sit and answer questions for fifteen minutes after everyone arrives. After that, I don't expect to conduct anymore business, let's just relax and have a good time. If you can't do that, maybe you'd better leave now.\"\n\nNobody left. He answered all the legitimate questions, and the intrusive and off color ones he ignored. Grace was proud.\n\nThe house we leased had a security system. Grace insisted on a few upgrades, and made sure they were up and running. While most of our guests enjoyed the party, the cameras caught two, at different times, rummaging through our bedroom. One planted a small camera, and another placed three listening devices through the house.\n\nWhat Benny did surprised everyone. He was cold, ruthless, and out for blood.\n\nHe held a press conference with national media. Beth and Grace made sure they were there.\n\nHe had the State Attorney General and the sheriff of the county the house was in on the podium with him. He had also made sure all the paparazzi present at his party was there. Most were grateful for being treated like professionals.\n\nHe started the conference off by recognizing the paparazzi as professionals.\n\n\"I hosted a party last week for most of these present, and found most of them to be fairly honest, upright people. I was starting to wonder how they got such a bad reputation. Then I reviewed the security tapes for that afternoon. What I found both disgusted and saddened me. While the majority of their peers were socializing, two individuals chose to violate my trust.\"\n\nTwo of the paparazzi immediately started towards the exit, only to find law enforcement officers waiting.\n\nA huge screen activated behind the podium, showing the two searching through drawers and closets, and planting the camera and listening devices. There was a collective gasp in the room.\n\nBenny was relentless.\n\n\"I guess this is what I get for believing in the basic goodness of people. My friends here\" he gestured towards the attorney and sheriff, \"also take a dim view of such activities. I believe they have something for these gentlemen. I want everyone to know I expect them to be prosecuted fully for their deeds.\"\n\nHe started to leave the podium, but turned with an afterthought.\n\n\"Here you go boys. How's that for a story?\"\n\nThe police arrested them while their collegues snapped away. The Attorney General made a statement about supporting a new law on the books about boundaries for the press, and his intention to enforce it.\n\nMany of the paparazzi apologized to him, personally and in print. They were also a lot more polite and careful around him.\n\n................................................\n\nWhen it came time to sell the movie rights, Saul and Grace were worth their weight in gold.\n\nThey had talked it over, and decided we needed to form a production company. It would give us more control and a bigger slice of the money. He lined up some very savvy people, mostly well respected newcomers with experience in independent films.\n\nThen he let word slip out, and waited. It was amazing the way the major studios scrambled to court us. In the end, we went into a partnership with Universal. Benny had interviewed a woman with several independent films to her credit, with good reviews. He came back to Saul and Grace.\n\n\"Whoever we go with, she directs. Not negotiable, understand?\"\n\nThey were shocked, but had no choice. Universal bucked when they were told, but wanted it so bad they agreed in the end.\n\nMajor stars were begging to be cast, but in the end it was mostly newcomers, with a few seasoned and recognizable character actors. Security on the set was tight, and all the actors had to sign nondisclosure agreements not to talk abut the film until after it was released. A couple of actors were fired, as well as three of the production staff before they realized how serious we were.\n\nIt premiered two years to the day the book was released. Box office receipts set records for six months. Two multiplexes worked a deal, and all eight theaters showed the film. They stayed sold out for three weeks.\n\nThe book had a resurgence, especially the paperback. It sold another three hundred thousand. When worldwide sales were added in, over five million copies were in print.\n\nI think my most vivid memory of the film was when we slipped into a theater and watched it with a crowd. We had deliberately not viewed any of the rushes or the final product.",
        "In twenty minutes people were crying openly. About a dozen left the theater before the end, overcome with emotion. Benny and I cried along with them. It was one thing to read about it, but to actually see it made it even more powerful.\n\nOne national reviewer did a wonderful essay in his review. \n\n\"I imagine by now everyone has either read or seen Union Of Souls, the massive bestseller by Benny Henson. I was thinking the other day, if it had been pitched to a studio before it came out how it would have been received. Let's pretend for a moment I've written a screenplay, and I'm pitching it to a studio executive. The image of me on the right will be the writer, the image of me on the left will be the executive.\"\n\nA split screen appeared. His image on the right was dressed conservatively. The image on the left was dressed far better, and had his hair slicked down. He spoke.\n\n\"So, tell me about this screenplay you've got.\"\n\nThe image on the right looked nervous.\n\n\"Well, it's a love story.\"\n\n\"Good\" the other image spoke, \"romance is hot right now, especially with a good sex scene or two.\"\n\n\"Uh, there isn't any sex in it.\"\n\n\"Really\" he said surprised, \"well we'll just throw in a few nude scenes and some hints.\n\n\"Sorry, sir. Nudity won't work in this piece.\"\n\nThe pretend executive frowned.\n\n\"No sex? No nudity? Sounds kind of boring. Any action? Gun fights, car chases, special effects?\"\n\nThe writer looked like he knew it wasn't working.\n\n\"No gunfights. No car chases. The only special effect is some really good makeup. There's only one violent scene, if you can count one fourteen year old boy punching another in the nose. There are four curse words in the whole script. It's about a romance between a fifteen year old boy and a thirteen year old girl. There are exactly seven kisses between them during the whole thing. And it's set mostly in a hospital, there probably won't be more than fifty people in the whole film, including extras. And in the end, the girl dies.\"\n\nHe paused, gathering his thoughts.\n\n\"What it is, is a story of love. Pure, unadulterated love, with a little coming of age added in.\"\n\nThe executive looked at him for a few seconds.\n\n\"No sex, no nudity, no violence. No car chases, no profanity. And she dies in the end?\"\n\nThe writer nodded.\n\n\"Get out of my office! That's the worst idea for a movie I've ever heard. Pitch that to anyone else and you'll be laughed out of the business.\"\n\nThe writer leaves, sadly. The clip returns to the reviewer.\n\n\"It's a good thing that never happened in real life, the movie would have never gotten made.\"\n\n\"Now, for my review. It quite simply may be the best movie I've ever seen, of any genre. The director, Agnes Morehead, was absolutely brilliant. This will make her career a lot more difficult. Every film she makes from now on will be compared to this, and be found lacking.\n\nUnless you've been hiding under a rock for the last two years, you either read the book or have been told about it. I'm not giving anything away, by now you know the last four and a half minutes of the movie is completely silent. I was startled when I found out, and had serious doubts it would work, but it is probably the most brilliant piece of film making I've ever witnessed.\"\n\nHe paused, obviously emotional with the memory, before he continued.\n\n\"The young boy is asleep, when the monitors on his girlfriend go off. The klaxons and bells seem tremendously loud as the doctors and nurses rush in. He is gently pushed into a corner of the room while they work. As soon as they start, the film goes quiet. Two minutes later the doctor shakes his head, says something to a nurse, and looks at his watch, stating time of death. While all this is going on we get two or three second glimpses of the boy. He starts shaking, and in the end is positively vibrating. A nurse, with tears in her eyes, goes over to console him, but he pushes out of her embrace and staggers out into the hall, where he drops to his knees and screams. You can't hear it, of course, but you can FEEL it, all the way to your bones. Then it dissolves into a collage of scenes. Her in the casket, the funeral, and finally a shot of the boy, now an adult in his midtwenties, with his new wife.\n\nThey're standing in front of her tombstone, crying together. They walk away, and the final scene is the stone and the inscription.\n\nKARA EDWARDS-JOHNSON, BELOVED WIFE AND DAUGHTER. 1990-2003.\"\n\n\"I thought instead of reviewing the rest, I'd give some of the audience at a recent show a chance.\"\n\nA film clip came up of people coming out of a theater. Most were crying, or sniffling. Many couldn't even comment. They asked ten people, and three of them actually spoke. \"Beautiful\" seemed to be the common word. It went back to the reviewer.\n\n\"Now, my parting thoughts. There were some really good films made this year. I feel sorry for them. If this film doesn't own the Oscars, I'll quit my job. Best film, best director, basically a lock. Best actor and actress, best supporting actress, best screenplay, best makeup. The score and songs were written by the legendary Wiley Patterson and his wife. Moria sings the theme song, and his musical family, Jenny Green and Freddy Johnson both do a song. He'll probably get the Oscar for the score and songs. If there was an award for best janitor on a set, he'd be nominated.\"\n\n\"And speaking of janitors, the writer, Benny Henson, is actually in the film. He's the gray haired old janitor moping the floor when the young boy staggers out and drops to his knees. He helps the nurse get him to his feet.\"\n\n\"Do I recommend the movie? No. I DEMAND you see it. Now the whole thing has stirred up emotions in me, and I need a tissue. But before I go, I think you'll want to know this. The only product tie in in this movie, almost a necessity these days, is the travel packs of tissue sold at the theaters.\n\nBoth major tissue makers worked on this. The packs are pink, and all proceeds go to cancer research. They estimate eleven million dollars in sales. It got so bad the theaters had to ration napkins. Toilet tissue usage rose thirty percent.\"\n\n.................................................\n\nThe movie caused a resurgence in book sales, bringing the total to five million world wide.\n\nHis reworked third book brought in a little over four million in sales, and Universal optioned it for a million, adding half a million on the promise they could option the sequel. \n\nLifetime bought the rights to his second book for six hundred and seventy thousand, and allowed our production company to film it. Oxygen bought the rights to the first book for five hundred thousand, but used their own company to film it.\n\nBenny had worked on the sequel to the third in snatches, between travel and appearances, so when he finally got a break he finished it in six months, insisting I edit it as he finished sections.\n\n\"It'll make it so much easier when Beth gets it.\" he said, but I knew he just wanted to keep me close to him. To our surprise, Beth made very few changes and gave me editor credit, and a check. It stayed on the bestseller lists for three months.\n\nBenny wasn't as happy as he had been before all the success. He was thinner, grayer, quieter. After the sequel, he had finished his commitment to Harbor House. Surprising Beth, he refused to sign another contract.\n\n\"I'll sign one, Beth, you have my word. But right now, I'm going to take a break, spend some time with my family and friends. I'll call you in three or four months, I promise.\"\n\nIt was the end of June when he sprang it on everyone, including me. I was very happy, though, I had actually started worrying about his health.\n\nHe surprised us even further when he rented a huge compound on a Pacific island for three months. He had all our kids, plus Hilda, Jack, Sarah and Jim, and all their kids, flown out for two weeks. Beth and Jen spent a week, as did Saul, Agnes, Grace, Etta, and their husbands. We lay in the sand, went into the capitol for some nightlife, went to open air markets on other islands, and had a blast.\n\nI think we were all surprised when we discovered most women went topless, including those in government. Hilda, Sarah, and I dared each other until we learned how to wear the native wrap and spent the rest of the vacation topless, at least on the compound. Soon my daughters, daughter in laws, Grace, Beth, Jen, and Etta joined in, as well as the children. It took some getting used to from the guys, but after a week, to their credit, they barely noticed. The only exception was Agnes.\n\n\"Nobody needs to see sixty eight year old, saggy boobs.\"\n\nSaul kept after her, and three days before they were to leave she came to breakfast wearing just a wrap. She glowed a deep red while the men took turns teasing her and complimenting her breasts, but refused to cover up. By the next afternoon her only complaint was a little sunburn.\n\nWe even got to meet the King, courtesy of Mike Hogue, the real estate mogul who owned the compound. He was a giant of a man, long platinum blonde hair held back with a headband, wearing the native wrap. All us women were suitably impressed. The men were equally impressed with his companions, a striking tall blond and a shorter Hispanic woman.\n\nWhen everyone left we kept the kids, all of them. Sixteen, from three to seventeen. We hired two nannies, and they stayed until school started. By then they had all adapted to the native dress, and went back sporting great tans.\n\nMike Hogue loved children, and was a frequent visitor. He was a huge favorite, especially with the younger ones. I had to wonder, at his age, why he didn't have his own.\n\nWe went back to the real world tanned and relaxed. I knew Benny spent two hours a day locked in the office, working. That was all the time he would allow, the rest he spent with the family.\n\n..................................................\n\nWe went back to our hometown. We still owned my house and our little home we loved so much. True to Etta's words, we had to move because we had no privacy. We found and bought thirty acres on the other end of the county, the only access was a long private drive. Six acres were completely fenced in with twelve foot chain link, with privacy slats woven in. There was a state of the art security system, with cameras spread all over the property. There was also a guard house, with two full time security guards around the clock. You'd be surprised how many people, not just paparazzi, tried to sneak in. We even caught two guys armed with pistols, bent on holding us for ransom. They both got five years for conspiracy to kidnap and commit unlawful imprisonment.\n\nAnd if you weren't on the list, you didn't get in. If you were on the list, you still had to show photo i d, and it had to match what was on file.\n\nThe property had a huge pond, so Jack and Jim were there often, to fish. Hilda, Sarah, and I would sit on the patio with a pitcher of something alcoholic, and relax while we talked about our men.\n\n...............................................\n\nBenny was writing, something he wouldn't show me yet, which in my mind meant it was big. He sent a bit off to Beth, prompting a phone call.\n\n\"Where did this come from? My God, this could almost be as big as Union of Souls, even if it totally different. How close are you to finishing it?\"\n\n\"Less than half\" he said, laughing. \"I'm having a hard time writing the sex scenes. I think I'll get Bonnie to help, she's much better at them than I am.\"\n\nBeth wanted to know what he meant, so he told her about my stories, and the website. She called me the next day.\n\n\"I read your story last night. Wow! It was hot. Jen read it too, and we got so worked up we had to act out a few scenes. She's pretty sore right now. Ever think about turning it into a book?\"\n\nI was shocked, but recovered and ask if she was serious.\n\n\"As a heart attack. It's a thinking mans' version of Fifty whatever, only hotter. Interested?\"\n\nDamn right I was, so I ended up writing a book that made me famous, and almost lost everything I loved. "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/finding-an-editor-ch-02"
}