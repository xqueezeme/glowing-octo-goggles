{
    "title": "Threads: The Island",
    "pages": [
        "Threads: The Island\n\nAuthor's note: This story contains incest. It also contains lots of other action, and I should warn you now -- it's not a short one-page jerkoff story. Threads is a series of stories with a number of characters that cross over between the tales. They're all interlinked in one way or another, so look out for more in the future. I've got three more novel-length tales written and a fouth nearly completed. Anyway. Read on, hope you enjoy it. Ratings and comments always welcome.\n\nJJ\n\n*\n\nEdwin\n\nEdwin looked at the pile of paperwork on his desk and rubbed at his eyes. It had been a really long day, and only midway through what was bound to be a long week. It had begun with his friend Danny's death two days ago, and since then the Island had been a hive of activity getting things prepared. \n\nIn a couple of days time Danny's children would arrive on the Island, having just found out that they were triplets given up for adoption, and they'd be meeting here for the very first time. On top of that he had a burial to organise for Danny on the Island. Add in organising supplies and planning for every contingency, and it was no wonder he felt exhausted. It was two in the morning and high time he had some stress relief. \n\nHe got up from his desk, winced at the pain in his back and moved to the door of his office, part of his home on the Island upstairs from the clinic, and headed for the exit, moving quietly down the stairs as was his habit. Once outside he smiled. He'd always loved the cool breeze that caressed the Island through the night. \n\nHe turned left and took the path down to the beach, taking a right between two large bushes on the narrow path the kitchen staff used to bring supplies into the kitchens. A couple of turns and he was moving around the edge of the building where the Islands food was prepared and stored, unstaffed at this time of night. He knew if anyone spotted him they'd just assume he was going for his habitual late night snack, but he knew different. \n\nHe bypassed the main doors to the kitchen and entered the small courtyard that served the dual purpose of somewhere to store the trash and somewhere the chefs and porters could sneak out to for a smoke. Casually he glanced around and seeing no-one he slipped over to the backdoor of the pastry kitchen and entered a code in the keypad, a different code from the one normally used to open the door. \n\nA quiet bump sounded next to one of the bins and he moved to the corner, reached down and pulled the handle that was now protruding from the flagstoned yard. A small hatch appeared with a ladder heading down, barely visible in the moonlight. \n\nHe quickly slid himself into the narrow passage and closed the hidden hatch above him, seeing the dim lights illuminating the twenty three rungs below him. Reaching the bottom he turned around and punched another code into the wall and the small box beside it opened. He pressed his hand to the small screen inside the box and the door beside him swung open. \n\nEdwin smiled in anticipation. He had a lot of catching up to do. \n\nHe entered the saferoom, or as he thought of it, the 'Bunker' where he could retreat to if the Island was ever attacked. He ignored the open plan living area and kitchen and moved straight to the door on his left, a control room where he could make contact with the outside world if need be, but his focus wasn't on the emergency facilities. He moved straight to the console housing the covert CCTV system that Danny Tripps had painstakingly built in secret over the last fifteen years. \n\nHis friends words came back to him, as they always did when he looked at the setup. \"There's no point in being trapped in here. Much better to see what's going on outside. Then you retain an advantage the other side doesn't even know about. Information is power.\"\n\nEdwin smiled and moved to the large leather desk chair facing the bank of fifteen screens. Three large screens, a dozen smaller, all assigned letters from A to O. The one hundred and thirty eight cameras hidden around the island were numbered, making the system incredibly simple to operate. Simply type in the letter for the screen then the camera number, hit enter and that's what you saw. \n\nThe whole system was set up on a motion-activation principle, immediately discarding data that had nothing happening and that suited Edwins purposes perfectly. \n\nHe settled his fingers on the keyboard, typed A68 and hit Enter. The first of the three large screens flickered into view, a camera situated in the bedroom of Danny's favourite PA, Patricia,. She was one of Edwin's favourites too, a hot, toned blonde with a bundle of intelligence and determination. It wasn't her intellect that interested him at present though as he watched the live feed from her vacant bedroom, his memory providing him with hundreds of images of her sleeping in that very bed. \n\nHe felt the familiar stirring in his groin and smiled. Time to move the recording back. \n\nHis fingers found the small dial next to the keyboard, punched in the camera number and then rotated it back. The simple system allowed him to review all recorded footage from that particular camera and he was viewing it in reverse. A couple of chambermaids darted around briefly at high speed, and then the footage caught up to Patricia undressing then sleeping. The footage continued in reverse at high speed, skipping past hours of her lying still. She'd been asleep for five hours or so when he saw her leap out of bed, naked, and grab a towel, then disappear backwards into the bathroom. \n\nHe reset the dial, his left hand coming to rest on his belt, and as the footage began to play on the screen he unfastened his belt and trousers. \n\nPatricia appeared from the bathroom, her skin flushed from the shower, wrapped in a fluffy white towel, and as Edwin pulled down his fly and slid his hand in his trousers, she opened her towel. \n\nSeeing her side on as she lifted the towel, her body taught and firm, her breasts pert and round, Edwin slipped his hand around his cock, slowly stroking himself as he watched her dry herself. She moved too quickly for him though, drying herself rapidly then slipping under the sheet on her bed, settling down to go to sleep. \n\nEdwin frowned and punched in B69, bringing up the footage from the en-suite bathroom in Patricia's room. He punched 69 in next to the dial and rolled it back, seeing her in a high-speed blur in the shower, moving it back to play as soon as the maid appeared who'd cleaned the bathroom earlier. \n\nWhile he stroked himself in anticipation the maid finished her work, the lighting changed and Patricia appeared. Dressed only in a black thong, she walked up to the sink, her gorgeous breasts on display and as she brushed her teeth, Edwin zoomed the camera in on her breasts, stroking himself as he watched them jiggle back and forth with every motion of her arm. \n\n\"Come on, you hot bitch,\" he muttered. \"Get in the fucking shower.\"\n\nThe teeth brushing continued for another minute and then she disappeared off screen, so Edwin zoomed the view back out, seeing her step into the shower cubicle. The water began immediately and he slowed the footage down as she stepped out the cubicle to remove her thong. In slow motion she inserted her thumbs in her waistband and bent over, sliding the black material down her hips, thighs and finally to the floor, and with a casual flick of her foot, the thong ended up back in the bedroom. \n\nEdwins grip tightened on his cock. She always did this before she went in the shower. Always. He zoomed in a little closer. \n\nPatricia stood up straight and stretched, her arms rising high above her head, her breasts jutting out. Edwin groaned, licking his lips in anticipation of what came next. Her right hand slid down over her taught, flat stomach, sliding down over her shaved skin until her middle finger made contact with her clitoris. \n\n\"Go on, you fucking slut,\" he muttered, his fist pumping as he watched. \n\nPatricia's middle finger rubbed her clit up and down a couple of times, then in slow-motion, she moved it down her slit, rubbed up and down once, then plunged her middle finger deep inside her pussy. \n\n\"Fuck that dirty unwashed cunt, you whore,\" Edwin growled. His fist was pumping furiously on his cock now, loving what he saw on the screen. \n\nPatricia dipped her finger in and out three times, and as Edwin zoomed the view back out, he smiled wickedly as she raised the finger to her lips and sucked it into her mouth, her head tilted back. \n\n\"That's a good slut,\" He grunted. \n\nShe stepped forward into the shower, and Edwin stroked his cock, watching the hot water sluicing down the curves of her body. \"Come on, you dirty bitch. Do it.\" His fist was pumping rapidly up and down on his cock, his eyes fixated on the screen. \n\nPatricia turned in the shower and squatted down, her back against the wall. Edwin smiled and zoomed the camera in, framing her as her legs came up and her buttocks rested on the shower floor. He could see her pussy, her asshole, tits and face and he felt his heart lift in excitement. \n\n\"Go on. Get busy.\"\n\nShe tilted one hip and her left hand appeared under her ass, her index finger rubbing at her brown puckered hole. \n\n\"Do it, slut,\" Edwin muttered.\n\nHer right hand appeared between her legs, her fingertips brushing against her clit. Her mouth was open in anticipation, Edwin mirroring her expression on screen. Suddenly she slid two fingers into her pussy, plunging them in deep and her body stiffened in pleasure. \n\nEdwin smiled. \"And now the ass, you filthy little whore.\"\n\nPatricia's finger that had been rubbing gently at her ass suddenly pushed, forcing her up to the first knuckle in that tightest of places. He watched as her expression turned nasty and she pushed harder, sinking the finger in her ass and the two in her pussy as deep as they would go. Her breathing was fast now, as intense as the expression on her face. \n\nEdwin realised he was strangling his cock, his grip was so tight, so he eased up the pressure a fraction and continued stroking at a frantic pace, his free hand pulling his black shirt up around his shoulders in anticipation. \n\nPatricia began to plunge her fingers deep inside herself, fucking both her holes at once with vigour, and Edwin's fist pumped up and down his cock, imagining it was his cock going in and out of her ass like that. \n\nShe paused for a second, adding a second finger to her asshole and a third to her pussy, then pushing hard, she slid them all back in again. \n\n\"Fucking filthy bitch,\" he snarled, knowing what was coming next, feeling his balls begin to tighten in anticipation. \n\nPatricia's fingers were plunging in and out of her ass and cunt, as hard and fast as she could physically manage, and then her entire body stiffened and her head smacked back hard against the wall of the shower as she came. \n\nHer fingers flew out her holes, all of them going rapidly into her wide open mouth, and as Edwin watched her suck on them, he saw her pussy twitching as she came and her ass opening and closing in glorious, exquisite detail. He came too. \n\nHot cum splattered out his cock onto his stomach, one spurt and a second, the remainder flopping and dripping onto his pelvis, matting his grey pubic hair, coating his hand.\n\nPatricia's mouth closed, sucking hard on those fingers that had been deep inside her wet pussy, her tight ass, her brow furrowed and her cheeks rosy as her orgasm washed over her. \n\n\"Fucking dirty little whore,\" Edwin panted, his eyes glued to the screen as his hand fondled his sticky cock. \n\nPatricia recovered quickly, her fingers leaving her mouth only to quickly tweak her nipples once, then she stood, rinsed herself off, washed her hands and turned the shower off. \n\nEdwin leaned in the chair, panting and grinning as she left the shower. \"Filthy fucking whore,\" he muttered. Idly he wondered who he'd stroke off to tomorrow morning. Over the last decade his habit had sat him in this chair and made him stroke off to movie stars, musicians, models, hundreds of gorgeous women unknowingly recorded in their most intimate of moments while visiting the Island as guests of Danny. And Edwin had them all recorded and stored. All for his personal pleasure. \n\n\"Maybe the Doctor,\" he muttered. \"Or maybe I'll get that slut to dress up for me again. Some new fodder arriving soon though.\" He smiled, having seen the files of the three triplets. The two girls were hot. He was looking forward to seeing both of them in the most exquisite of detail. \n\nEdwin carefully lowered his shirt over his cum-splattered stomach then fastened up his trousers and belt, trapping the cooling semen against his skin. Carefully he stood up and walked to the exit, feeling it oozing down his stomach. He smiled, loving the feeling, the scent of his own cum, especially if he bumped into anyone outside. He'd deliberately hold them in conversation, just to see if they'd notice the smell. Few did, none of them figured it out though. \n\nHe left the 'Bunker' and entered the kitchen, taking the sandwich that the Chef always left out for him, munching on it as he walked back to his apartment above the clinic. \n\nKyle\n\nThe phone rang on Kyle's desk. He frowned, not needing the interruption. For the last three days he'd been working twelve hours trying to get the recommendation done for his company to purchase EDIT, an electronic records management application and he was nearly there. \n\n\"Hello. Kyle Watson, Business Strategy Team. Can I help you?\" He replied, the standard answer whenever an internal call came through to his desk.\n\n\"It's Reception. There's a Mister Crowler here to see you. Says he's a lawyer.\"\n\nKyle frowned. \"I don't have him in my diary.\"\n\n\"He says it's urgent that he speak with you,\" The security guy at reception stated. \n\n\"Em, okay. I'll be right down.\"\n\n\"Cheers.\" The other end of the line went dead. \n\nKyle headed for the elevator, the frown still creasing his features, wondering why a lawyer would be coming to see him. There was nothing legal he was involved in at work, he knew he was a pretty well behaved guy, and he knew he was up to date on his loan payments and all that. \n\nHe entered the elevator and hit the button for the ground floor, leaning against the wall as he tried to think of a single reason why a lawyer would be wanting to see him, but by the time the doors opened and he reached the reception desk, he still hadn't come up with one. \n\n\"He's in there,\" The portly security guy grunted, poking a thumb in the direction of one of the vacant meeting rooms HR used for interviews. \n\nKyle looked over, seeing an elderly man, around the age of retirement, but there was something very sharp about him. Maybe the slicked back white hair, or the black suit, shirt and tie, but from his initial glance, Kyle wouldn't be surprised to find out that this guy was Lucifers lawyer. He had that supremely confident look about him. \n\nHis frown still on his face, Kyle opened the door. \"Hi. I'm Kyle Watson. Can I help you with something?\"\n\nThe lawyer immediately stood offering a surprisingly warm handshake. \"I'm Mister Crowler, Kyle. Thankyou for agreeing to meet with me at such short notice.\"\n\n\"Sure,\" Kyle said, closing the door and taking a seat opposite the old man. \"Do you mind if you tell me straight away what it is you want? We've got three of the Company Directors in the building today, so it's kinda busy upstairs.\" \n\nThe old man nodded. \n\n\"Very well. I'm sure you're wondering why a lawyer has turned up out of the blue to see you. It involves an inheritance from a relative and you're one of the listed beneficiaries.\"\n\nKyle's eyes widened at the lawyers words. \"Oh.\" \n\n\"Not what you were expecting?\" Mister Crowler asked, an eyebrow raised at the expression on Kyle's face.\n\n\"I didn't know what to expect, but this wasn't even on the list,\" Kyle admitted. \"Who are we talking about here? I don't know of any relatives of mine that have died.\" He frowned as he thought about it. \"Not in the last few years anyway. Are you sure I'm the right Kyle Watson?\"\n\n\"I'm absolutely sure.\" The lawyers confident expression left Kyle in little doubt, confusing him further. \n\n\"So.. Em... Who died?\" Kyle nodded. \n\n\"For that you'll have to bear with me for a few moments while I show you a few files,\" Mister Crowler said, flicking open his briefcase and removing several Manilla files, placing them on the desk in front of him. The old mans fingers tapped for a few seconds on the files before he cleared his throat.\n\n\"Kyle, you are twenty three years old, born on the 19th of March, correct?\" The lawyer's tone was precise, factual, and Kyle nodded. \n\n\"Yeah.\"\n\n\"What I am about to tell you may come as a bit of a shock, so please bear with me.\" He flicked open the first file, containing several photos. The first was a black and white image of three babies, wrapped in blankets and woolen hats and they looked like they were only a day old. \n\n\"Babies,\" Kyle said aloud, knowing he was stating the obvious, but if he had fifty guesses at what was inside the manilla folders, a baby picture wouldn't have even crossed his mind.\n\n\"Correct,\" Mister Crowler replied. \"This is a photograph taken of a set of triplets several hours after they were born on the 19th of March, twenty three and a half years ago, Kyle.\"\n\nKyle's eyes shot up to the old man's, but the lawyers gaze was fixed on the photo. His finger tapped the baby on Kyle's left. \n\n\"This baby was named Katarina.\" His finger moved to tap on the infant on the right. \"This one was named Kara, and the one in the middle was named Kyle.\"\n\n\"Yeah, I think you've got the wrong Kyle, buddy,\" He said immediately. \"I don't have any sisters, or twins, or whatever.\" He kept quiet the realisation that the central baby did look like him in his own baby photos, but Kyle wasn't convinced. Babies all looked the same to him anyway. \n\n\"Please, bear with me,\" The lawyer said firmly, moving the photograph to one side. Underneath the photo was a stack of papers, and Kyle could see Adoption Certificate written on the top one. His fingers deftly rotated the document so Kyle could read it. \n\nHis eyes met the lawyers a few seconds later. \"I don't know anything about this documentation. I couldn't tell you if it's real or false. I know I'm not adopted though.\"\n\n\"Is this your birth certificate, Kyle?\" Mister Crowler said, sliding another document in front of Kyle. \n\nHe checked and nodded, frowning as he wondered why the hell this lawyer could have a copy of what looked like his own birth certificate. \"Could be, but I don't know how you have it.\"\n\nThe lawyer flicked another document next to the birth certificate. \"This is a name change by deed poll that accompanies the adoption certificate,\" He continued in the factual, clinical and emotionless tone, flicking another two documents in front of Kyle. \"And this is your original birth certificate.\"\n\nKyle forced himself to look carefully at what was in front of him. He knew that his own birth certificate was correct and couldn't see anything on it that was strange or unusual, so he began to read the name change document, and compared it with the adoption certificate. He could feel a knot in his stomach as he failed to find any inconsistencies, and with reluctance, he looked at the original birth certificate. \n\nHe read the name of the baby on the certificate and his eyes immediately shot up to the lawyers face, seeing an expression of sadness there, perhaps even a hint of empathy at the young man sitting opposite him whose very foundation was being pulled out from under him. \n\n\"The... The surname?\" Kyle stammered. \n\nMister Crowler didn't say anything. He simply slid another photograph across the table, this time of the three infants, cradled in their fathers arms. It was a younger version of a familiar face, known the world over. For the past few days it had never been off the news. ",
        "Kyle looked at the certificate again, seeing the surname. Tripps. \n\nHe re-read the name of the person listed as the father. Danny Tripps.\n\nKyle looked back at the lawyer. \"Seriously?\"\n\nMister Crowler nodded. \"Finding out that you're adopted must be a big shock, Kyle. Finding out your father was Danny Tripps must be just as big.\"\n\nKyle shook his head. It didn't make sense to him, this lawyer claiming he was adopted, let alone this absurd claim that Danny fucking Tripps, one of the wealthiest men in America, was his supposed father. A thought struck him.\n\n\"Did Ed put you up to this?\" Kyle had two best friends, Ed and Casey. While Casey worked upstairs with him, their friend Ed worked as an illustrator on comic books, but was forever trying to punk them with practical jokes. This seemed right up his street, especially four days after the world found out Danny Tripps had died of cancer. \n\nThe lawyers expression turned serious. \"Kyle, I assure you this is no joke. There is more information here for you, including a letter from Mister Tripps.\"\n\n\"A letter?\" Kyle smiled, convinced this was the work of his buddy. He chuckled. \"Let's see it then.\"\n\nThe old man frowned but opened the second file and pulled out an envelope, the paper rich and luxurious. Kyle didn't recognise the handwriting on the front, but he opened it up and unfolded the letter. \n\nKyle,\n\nI imagine you're in a bit of turmoil right now. Try not to give Mr Crowler a hard time -- he's a good man and a good friend who's been stuck with a hard job. \n\nAnyway, you've just found out I'm your father. Danny Tripps, billionaire, celebrity, playboy, entrepreneur, business genius, etc. I'm sorry to say that it's true, Kyle. And you deserve an explanation.\n\nTwenty six years ago I met a wonderful woman named Karen, we fell in love and were soon married. I started my own business making computers and doing some programming, and soon my wife fell pregnant. Life was bliss. Then the business boomed, some of the software I'd written made me a small fortune and within months I was employing hundreds of people. The business side of things isn't important now, but a few more months passed and it was time to go to the hospital. \n\nKaren gave birth to three infants, triplets, a month early, two girls and a boy, but immediately began to have complications. She was rushed into surgery, but it was no good. Just like that, the love of my life died. She was twenty five years old. She would have been a great mother.\n\nI knew nothing about raising kids, and I was so overwhelmed with grief that the only thing I could think of was to throw myself into my work. Anything to get away from the pain. A doctor suggested offering you and your sisters up for adoption. I agreed, thinking it was the best for you. It was the biggest regret of my life. At the time though, it was the best decision I could have made.\n\nYou and your sisters were put with loving families, raised in nurturing and healthy environments, and despite my promise not to, I kept tabs on you all, helping out in little ways whenever I could. Scholarships, jobs and the like. I know it's not parenting, but you and your sisters are the only family I have, even if we've never met. \n\nAnd that brings us round to the present. As I write this I'm dying. If you're reading this, then I'm already gone and you might have even heard about it on the news. Which brings me round to the point of all this. For twenty five years I've been building a business, an empire some would say, and along the way, tens of thousands of people have come to rely on me to keep their companies afloat, keep their jobs in place so they can raise their own families. It's a responsibility that I take seriously, which may well sound ironic to you, given that I haven't taken responsibility for raising my own children. \n\nI'd like you to meet your sisters, Katarina and Kara. I'd like the three of you to get to know each other. All that I have now belongs to the three of you. My inheritance. I'm told it's quite a sum. \n\nMister Crowler will give you the details on what happens next, but here's the clip notes. Go to my Island in the Caribbean, get to know your sisters, learn a bit about what's being asked of you and decide what you want to do. \n\nAlong the way you might even get to know a little more about me. \n\nIn hope and love,\n\nDanny Tripps \n\nKyle looked at the date on the letter, noting it was only two weeks old. \n\nGone were the doubts that this was Ed's work. This really wasn't his style at all. The knot in his stomach was twisting as he realised he'd have to make a call and speak to his parents. He had to ask.\n\n\"Would you excuse me for a couple of minutes, Mister Crowler. I need to make a call.\" Kyle saw the old man nod, but he was already on his way out the door. He moved on autopilot out the front doors of the building and onto the street, crowded with the usual mixture of coffee-toting office workers, shopping housewives and tourists and stepped into a doorway. He dialled.\n\n\"Hey, honey.\"\n\n\"Hi, Mom,\" Kyle replied, trying to keep his voice relaxed and casual. \"Listen, I need to ask you something.\"\n\n\"Okay, honey, but you'll have to be quick. Your father and I are just about to leave,\" She replied. Kyle could hear a car door close in the background.\n\n\"Oh, right. Today's the hiking trip, right?\"\n\nHe heard his Mom sigh down the phone. \"I swear Kyle, you never pay attention.\"\n\nHe took a deep breath. \"Mom, I need you to listen to me here, okay. I just had a visit at work from a lawyer called Mister Crowler.\" \n\nKyle paused as he heard his mother shout on his father. \"Ben, you need to be in on this,\" He heard her say. \"Okay, son. What did he say?\"\n\n\"Mom, Dad. I've got to ask you. Am I adopted?\" Kyle had his free hand held flat over his free ear, listening more intensely than he ever had in his life. \n\nThe silence that stretched into seconds on the other end of the line added to the sinking feeling in Kyle's stomach. \n\n\"Son, it's me,\" Kyle heard as his Dad came on the phone, his tone gentle. \"It's true, son. We adopted you when you were only a few days old. I'm sorry you've found out like this. Do you want to meet up and talk about it? I can come and pick you up?\"\n\nKyle pressed his face into the corner of the doorway, trying to think. It was true, he was adopted. His mind whirled with a myriad of emotions, feeling like his world had just been turned upside down, so he took several deep breaths, and thought about what he knew. His friends were his friends. His parents had kept this whopping big secret, but they'd raised him and been there for twenty three years for him. Did it really matter that they weren't linked by DNA? The thought helped him clear his head a little and he sighed. \n\nAfter a moment he replied. \"No, it's okay, and don't get all worried, okay. I know you're my parents, I know you're my Mom and Dad, you raised me and nothing's going to change that, okay?\"\n\nHe could almost hear the relief in the tones of their replies, so he pressed ahead. \n\n\"Thing is, I've found out a little about who I was before I was adopted,\" Kyle added, not quite sure how to proceed with this bit. He opted for directness. \"How much do you know about that?\" \n\nThere was a hushed, whispered conversation at the other end of the line that ended abruptly after a few more seconds.\n\n\"We know who your birth father was, honey,\" Kyle's Mom said a moment later. \"Do you?\"\n\nKyle swallowed. \"Yeah, I think so.\" His mouth was dry but he made himself say the words. \"Danny Tripps, right?\"\n\n\"That's right, son,\" His Dad said quietly. \"We weren't supposed to know, but we did.\"\n\n\"Has he left you something in his will?\" His Mom asked. \"Is that why the lawyer is there?\"\n\n\"Em, I think so,\" Kyle said, feeling more than a little nauseous now. \"Listen, they're telling me I have sisters.\"\n\n\"What?\" Both his parents replied at the same time. \n\n\"That I have sisters. Twins,\" He replied. \"Well, actually triplets, but I'm one of them, apparently.\"\n\n\"Kyle, son, we had no idea,\" His Dad said, and Kyle knew deep inside that he was telling the truth. \"Sisters?\"\n\n\"Two of them,\" Kyle confirmed. \"They want me to go and meet them.\"\n\n\"Then you should go,\" His Dad replied immediately.\n\n\"Absolutely,\" His Mom added. \"Are you alright, honey?\"\n\n\"Bit shell-shocked, I guess,\" Kyle replied. \"Listen, I've got to head back in there. Are you guys okay?\"\n\n\"Yeah, son, don't worry about us,\" His Dad answered. \"We'll stick around here for a few days, I think. Why don't you come round for dinner tonight or before it you want, we'll have a chat.\"\n\nKyle frowned. \"No, you should go on your trip. You two have been planning it for months.\" Every time Kyle visited his folks they had maps up of the areas of Canada they were hiking through and he knew they had various locations booked for the occasional night in a hotel and if they set off late they'd lose their reservations. \"Honestly, I'm okay. You should go on your trip, and besides, I can call you if I need to. You guys can call me too, okay?\"\n\nKyle could almost hear them silently discussing it with looks and gestures at the other end of the phone, something they'd done for as far back as he could remember. \n\n\"You sure, son?\" \n\n\"Yeah, Dad. You and Mom go on your trip.\"\n\n\"You sure you're not pissed at us for not telling you?\" His Dad asked bluntly, as was his way. \n\nKyle sighed. \"Honestly, Dad. I'm not angry. I'm a bit shocked, and I can't say I won't be angry in the future, but if I get angry I know where to find you.\"\n\n\"That you do, son,\" His father replied. \"You just pick up that phone and we'll come right back so you can vent your fury for as long as you need.\"\n\n\"Can I just ask, why didn't you tell me?\"\n\n\"There was never a good time for it, honey,\" His Mom replied. \"How do you bring something like that up in conversation?\"\n\n\"Besides, you would have asked who your parents were, and we would have had to lie directly to your face, son,\" His Dad added. \"We just couldn't figure out how to tell you.\"\n\n\"Fair enough,\" Kyle said, managing to sound calm while inside he just wanted to vanish somewhere quiet so he could process it all. \"Have a good trip.\"\n\n\"Love you, honey.\" \n\n\"Love you too,\" Kyle finished and ended the call. He squared his shoulders, took a deep breath and walked back in to see what else the lawyer had to say.\n\n\"Everything okay, Mister Watson?\" Mister Crowler asked as Kyle sat back down. \n\n\"I don't know if I'd describe it as okay,\" Kyle said a moment later. \"Right, I've spoken to my parents.\"\n\n\"So you know I'm telling the truth then?\"\n\nKyle swallowed and nodded. \"Bit of a shock.\"\n\n\"I believe you. Shall I continue?\" \n\n\"Might as well,\" Kyle replied.\n\n\"As he mentioned in the letter, Mister Tripps did his best to keep a discrete eye on you and your sisters while you were growing up, and he kept private files with the information for an occasion such as this. As he also said, we'd like you to come to Mister Tripps private Island, where you can meet your sisters and get to know each other without any of the constraints and pressures of the outside world.\" \n\n\"What does that mean?\" Kyle asked.\n\n\"Pressures and so forth?\" The old man asked. Kyle nodded, so he continued. \"To give you one example, Mister Tripps was a very recognisable public figure with a long ongoing relationship with the press.\"\n\nKyle nodded, having seen him at movie premieres, award shows, chat shows and in the papers too. \n\n\"The press are already making enquiries about who will inherit the vast fortune of the Tripps Empire, and sooner or later someone will remember him in a hospital twenty three years ago and either do some digging, or simply open their mouth on their favourite social networking site. In todays instant-media world, it's only a matter of hours or days before you and your sisters get tracked down and beseiged by the media.\"\n\n\"You're shitting me,\" Kyle blurted. \"Seriously? That's what you think is going to happen?\"\n\nMister Crowler blinked. \"That is what will happen, Kyle. We have experience with this.\"\n\n\"I would have thought they'd.....\" Kyle trailed off, thinking about it, and he knew that the old man was right in what he was saying. There would be a media frenzy, and he'd be right in the middle of it. \"Fuck me sideways.\"\n\n\"I see we're on the same page, Kyle.\"\n\n\"I guess so,\" he replied unhappily. \"So what happens now?\"\n\n\"There should be a car outside for you. There's a private jet due to arrive in,\" He glanced at his watch, a polished silver pocket watch, then dropped it back in his pocket. \"Nine hours time, that's half past eight tonight. Take-off will be around nine o'clock and the flight from San Antonio to Guadeloupe Island, the nearest airport to the Island, is around seven hours. From there you'll take a boat for an hour to the Island itself, so you should be there at around sunrise.\"\n\n\"Overnight journey?\" Kyle asked, frowning. \"It sounds exhausting.\"\n\n\"Unfortunately we have to get all three of you to the Island as soon as possible, so it's unavoidable on this occasion. However.\" The old man paused. \"At the airport will be a woman named Patricia, an Executive Assistant to Mister Tripps with many years experience. She'll be your liaison, your point of contact and your assistant for the duration of your trip.\"\n\n\"Why do I need an assistant?\" Kyle asked. \n\n\"Because you'll have a lot of questions,\" The old man said simply. \"Now, Patricia is very good at her job and she'll be a real asset to you, so make sure you rely upon her.\"\n\n\"We'll see,\" Kyle replied, knowing he still wasn't sure if he was going to go to this Island at all. The idea of buggering off with his folks seemed appealing, despite his well-known aversion to hiking. \n\n\"In between now and tonight you'll have a driver to look after you. Her name is Caroline, I'm assured she's very good, and she'll have a few forms for you to complete. I also have this for you.\" \n\nThe old man slid an envelope over the table. Kyle opened it and emptied the contents. A Visa card, a Mastercard, a clear envelope with cash in it and a small keyfob. \n\n\"What's all this?\"\n\n\"The credit cards are for you to purchase some suitable clothing for your trip, the cash for if you don't want to use your credit cards or if you need to tip, and the keyfob is a personal alarm,\" The old man explained. \"If you push the red button, a security team will converge on your location and extract you from any situation or threat in the vicinity.\"\n\n\"Like bodyguards?\" Kyle asked, shaking his head. \"This is too surreal.\"\n\n\"I'd imagine there will be many surreal moments in the days to come,\" The old man replied.\n\n\"Pin numbers for the cards?\" Kyle asked, picking them up and looking at them. They seemed almost holographic. \n\n\"The year of your birth. We can change that tomorrow for you.\"\n\n\"I suppose they've got like a twenty grand limit or something extravagant like that?\" Kyle laughed. \n\n\"Not quite, no.\" Mister Crowler smiled. \"I believe they're somewhere in excess of a couple of hundred thousand dollars, but they were set up in a hurry, so we'll get that straightened out too in the next few days.\"\n\nKyle snorted with laughter. \n\n\"Another surreal moment?\" The lawyer asked, his expression blank.\n\n\"Something like that.\" \n\n\"So I've got a driver, a load of credit and cash and a goon-squad on standby, just to cover me for nine hours until I catch a plane to an Island paradise?\"\n\n\"Not a plane, a private jet, but yes, close enough,\" he nodded. \n\n\"Fucking hellfire,\" Kyle said quietly, the laughter and incredulity of the moment stopped. \"So do I just go back to my desk until I finish work now? What happens?\"\n\n\"Oh, good lord, no,\" Mister Crowler replied, looking taken aback for the first time. \"Mister Tripps actually owns this company, although it's not widely known. However, no, you don't need to return to your desk. In fact you don't need to return to it ever again if you so choose.\"\n\n\"What about my boss?\" Kyle asked. \"Sometimes he's a real dick, and I don't want him to throw a bitch fit.\"\n\n\"Kyle,\" The old lawyer said, leaning forward across the table. \"It'll take a while to get your head round some of the changes that are going to happen to your life in the next few days, weeks and months. However, if your boss is, as you put it, a real dick, then you can always deal with it by coming back here in a few weeks and firing him.\"\n\n\"Good point actually.\"\n\n\"Now then, onto the last file,\" The old man said, gathering the other documentation away.\n\n\"What's in this one?\"\n\n\"Your sisters.\"\n\nKyle felt that cold sinking feeling in his stomach again and suddenly his mouth was dry. He realised he was craving a cigarette again, and had been for some time, which was unusual as he'd quit nearly a year ago and hadn't had a craving in seven or eight months.\n\n\"Okay, let's see them,\" Kyle said, feeling a hint of excitement and fear at the thought of having sisters and wanting to find out who they were.\n\nThe lawyer opened the folder and slid two photographs across the table and Kyle's breathing almost stopped. His face turned white.\n\n\"Is everything okay, Kyle?\" The old lawyer asked as Kyle stared at the photographs on the table. \"You've gone a little pale.\"\n\nIn a voice barely above a whisper, Kyle said, \"Oh, fuck, please let this be a joke.\"\n\nThree Years Ago\n\nKyle Watson smiled. It had been an epic weekend so far. \n\nSpring Break with his buddies hadn't really been something he was looking forward to, particularly as their destination was Myrtle Beach. Not exactly Cancun, Miami or Acopulco, but then, they weren't there for the sun. They were there to party. \n\nParty they had, Kyle wearily observed. They'd arrived on the Friday morning, got drunk and partied with some chicks from University of Phoenix all night, but Ed had been the only one to score. Or at least, he was the only one who claimed to score. If he actually did, Kyle knew it would have required some divine intervention.\n\nOnce they'd slept a few hours they hit the Myrtle Waves Water Park. Kyle had felt too tired to do much but lie around with his shades on, admiring the ladies that passed by in their swimwear, but Ed and Casey had immediately hit the slides. It only took half an hour for Ed to return with a limp. Casey couldn't stop laughing as he told how Ed had taken off down one of the slides after a hot girl in a bikini and had been pushing himself so fast that he flipped sideways out the slide and landed on the edge of it, narrowly missing his balls but injuring his right leg in the process.\n\nKyle sat with Ed and listened to him grumble about his injury while Casey did what Casey does and took off in pursuit of several girls heading for the lazy river. \n\n\"You should get your shades on, Ed,\" Kyle suggested. \"Some of the women going past here are fine. You can really check them out.\" \n\nHis buddy grunted, so Kyle shrugged and put his iPod on, listening to some tunes while he admired a particularly hot MILF in a red thong and matching top strolling past. \n\nAn hour or so passed and Casey finally came back full of excitement insisting they come and meet these girls from Bekeley College, down from New York for Spring Break. He'd met them on the lazy river and had been chatting with them for the last forty minutes and they wanted to meet Kyle and Ed too. \n\nKyle figured it sounded like fun, so he nodded and stashed his iPod under his towel, then got up to follow Casey. Ed grumbled but joined them anyway. It took ten minutes of paddling to catch up with the four girls on the lazy river, but Casey introduced them all as Jessica, Shanice, Julietta and Margarita. \n\n\"So I take it your names are all fake then?\" Kyle had laughed, getting a round of grins from the girls. \n\n\"Well, if you fine-ass bitches are using fake names, it must be for one reason, and that reason is carnal sinning,\" Ed said, earning a scowl from Casey. \"I'm fucking right, aren't I?\" ",
        "\"What a fucking douchebag,\" the brunette called Julietta muttered. Kyle did the only thing he could think of to remedy the situation. He tipped over Ed's inflatable, dumping him sideways into the river. \n\nThankfully the girls all laughed as he came up spluttering and the tension was eased. Over the next couple of hours they hung out with the girls, Kyle mostly chatting to Julietta, Casey to Margarita, while Ed tried unsuccessfully to get chatting with Shanice and Jessica, much to everyone's amusement. \n\nWith it being late in the afternoon though, the girls announced they had to head off. \n\n\"You guys want to meet up tonight at a party we're going to? It'll be around midnight, if that's not too late,\" Julietta said, placing her hand on Kyle's arm. \n\n\"I think we should be out partying by then,\" He grinned. \"Where about?\"\n\n\"Meet us in Club Boca. Know where that is?\" \n\n\"Sure,\" He nodded. \"We passed it last night. You want to give me your number?\" \n\nShe shook her head, but smiled. \"I wouldn't hear my phone anyway. Maybe later,\" She said, winking. \n\n\"I'll look forward to it,\" Kyle replied. \n\nAs the girls got out at the steps, Kyle casually back-paddled his inflatable, watching as they got out the water. Jessica was the first out, a thin blonde with a black one-piece making her skin look very pale. Second out was Shanice, a black curvy girl with a dazzling smile and nice hips, followed by Margarita, the most tanned of the group. \n\nKyle smiled, knowing why Casey had hit on her. She had by far the nicest body of the group and was the tallest by a couple of inches. Long dark hair tied in a ponytail, a black bikini, tight and firm all over, and an ass that reminded him of Jennifer Lopez. \n\nLast out was Julietta, the girl he'd spent the last couple of hours chatting with. Her multi-coloured one-piece was slashed red and gold and showed her off quite nicely. She was average height, and pretty much average build. Nice ass, bit of a nice cleavage, nice legs. \n\nDespite there being nothing outstanding about her, Kyle found her the most attractive of the four. \n\nJulietta turned and waved to Kyle. \"Remember. Midnight.\"\n\n\"We'll be there,\" He waved back. \n\n\"Feel free to forget the douchebag,\" She called as she disappeared.\n\n\"The douchebag will be coming,\" Ed shouted loud enough for half the park to hear. Realising everyone was looking at him, he muttered,\"Shit,\" then tipped himself into the water. \n\n\"Come on!\" \n\n\"He's got the bit between his teeth on this one,\" Casey admitted.\n\n\"I know,\" Kyle grunted. Ed had been going at them non-stop for the last hour about hitting a strip club, but Kyle and Casey were reluctant.. It wasn't that Kyle was against looking at naked women writhing all over him, but it was the amount of money they'd spend. \n\nThree times in the past couple of years the three of them had gone to strip-bars and each time Kyle and Casey had spent over two hundred bucks each, while Ed had spent everything he had, and ended up relying on his friends to get him home again afterwards. Given they were planning on hitting the clubs to meet up with the girls later, Kyle and Casey were reluctant to let Ed loose or they'd end up paying for him all night. \n\n\"It'll be fun, fuckers. Come on,\" Ed repeated. \"We'll see some tits, some hot ass, some wet pussy. Maybe even get a couple of girls to give us a private show, know what I mean?\" He winked. \n\nKyle knew what he meant. He meant that Ed would chip in his last twenty bucks and Kyle and Casey would have to put in a hundred each so that the three of them could sit there and feel awkward watching two chicks play with each other for a couple of minutes. Then they wouldn't have enough money to do anything else.\n\n\"Ed, we can visit strip clubs back home. I want to get laid, and that doesn't happen with strippers,\" Kyle pointed out. \"I want to meet the girls later.\"\n\n\"Yeah,\" Cased added. \"You can't control yourself in these places man.\"\n\n\"Alright fuckers, what do I need to do to convince you not to be lame-ass cunts and go?\" Ed said quickly, his gaze darting between his two friends. Kyle could see how eager he was. \n\n\"How much money have you got left, Ed?\" Kyle asked. \n\n\"Two hundred and four bucks. We fucking leave tomorrow, guys. Pickup at ten past eleven,\" Ed said. \"Come on, let's jjust go nuts, party like mother-fuckers and leave it all out there.\"\n\n\"I'll go if you give me one hundred and four bucks to keep for you until after we leave the strip club,\" Casey said after a moment. \n\n\"What? No fucking way, cocksucker,\" Ed blurted. \"That's my cash.\"\n\n\"Yeah, but Casey's got a point,\" Kyle argued quickly. \"It's gonna cost us at least twenty bucks to get into the club, plus drinks and then a cab back here. Throw in some food tomorrow. You can't afford to spend more than a hundred in a strip bar.\"\n\n\"Hundred and four bucks,\" Casey said, holding out his hand. \n\n\"No fucking way,\" Ed said. \"Stop being such a bunch of fucking cockblockers.\"\n\n\"Yeah, I'm not going unless you give the cash to Casey either,\" Kyle said, crossing his arms.\n\n\"Or you can go out yourself, go to the stripclub on your own, and then wait for us to get in, but we're not giving you any cash at all. Not even tomorrow,\" Casey added. \n\n\"Fucking bitches. What the fuck?\" Ed protested, but his resistance crumbled a moment later. \"Okay, okay. Hundred and four bucks, but I want that fucking green back the second we leave the strip club, cunts.\"\n\n\"Okay,\" Casey shrugged, while Kyle grinned and headed into the bathroom for a shower and a shave. He really wanted to impress Julietta tonight. Or whatever her real name was.\n\nDerriere's Gentleman's Club, the sign said outside. \n\n\"This place looks like a dive,\" Kyle muttered quietly. Still it did offer fully nude dances and you could bring in your own booze.\n\n\"Come on, losers,\" Ed grinned, a six-pack tucked under his arm. \"Let's go see some shaking milk-bombs and wide open tampon-tunnels!\" \n\nKyle shook his head at Ed. Sometimes the guy could be such a dick, but his vocabulary for slang terms when it came to the female anatomy was inexhaustible. \n\n\"Dude,\" Casey said. \"If you call them that in front of any woman you're never gonna get laid.\" \n\n\"I do fine, fucktard,\" Ed grinned. \"Come on, let's go.\"\n\nKyle followed Ed and Casey into the club, paying the steep twenty five dollar door fee. The club looked a lot better inside than it did outside, and there must have been a hundred guys in the room, with a bit of a relaxed policy of under twenty-one getting applied by the security staff. There was even a table of women across the room, getting cheers as one of them slipped a note into the g-string of a dancer. True to the advertising, a dancer was on another stage, gyrating around a pole, dressed only in black stockings and heels.\n\n\"Full nudity, bitches,\" Ed announced. \n\n\"Come on, let's go get a table,\" Kyle said, keen to get out of earshot of the security before Ed got them bounced right back out the door. \n\nThey sat down around a small table with four armchairs and within thirty seconds Ed was waving a twenty at a tall, skinny redheaded dancer with underwear the same colour as her hair. \n\n\"You looking for a dance, sugar?\" she asked, her accent betraying her East-european origins. \n\n\"You better fucking believe it, baby,\" Ed grinned, leaning forward in his chair. \n\n\"Follow me, big boy,\" she purred, taking him by the hand and leading him off through an archway draped with strings of silver beads. \n\n\"He's gonna get kicked,\" Kyle laughed. \n\n\"Yep,\" Casey nodded. \"No chance he can keep his hands to himself.\"\n\n\"Bet you five bucks it takes less than two...\" Kyle's voice trailed off as he caught sight of a familiar face. \"That's Julietta.... from the waterpark!\" \n\nShe was about thirty feet across the room, with long black curly hair, tied up at the back and dressed in black and silver underwear that showed off her body to perfection. She stood amidst a table of four guys, baiting them on to buy a dance.\n\n\"The stripper with the long dark hair?\" Casey asked, looking where Kyle's gaze was fixed. \"That a wig she's got on, bro?\"\n\n\"Must be.\" Julietta's hair was cut in a short bob that swept to one side, but her hair was a similar shade to the wig she was wearing. \"She never said she was a fucking stripper. Business student at Berkeley, she told me.\"\n\n\"Well, if she's working here, she must have been planning to blow us off,\" Casey pointed out. \"I wonder if the rest of the girls work here too. I'm going for a look.\" Kyle nodded as Casey got up and left the table.\n\nHe watched Julietta for a minute or two, feeling pretty disappointed that she'd lied to him today. He genuinely thought they were getting on good, that there was a mutual attraction there, and he felt optimistic about his chances tonight. Not now though.  \n\n\"Hey baby,\" Kyle heard as he felt a touch on his arm. He turned to see the dancer from the stage when they'd first come in, now with a tight black dress on to supplement her stockings and heels. \n\n\"Hi,\" he replied, not really sure what to say.\n\n\"You gonna spend the night looking at Sahara from afar, or would you like to look at Piper close up?\" she purred quietly.\n\n\"Erm... which one are you?\" Kyle asked, confused. \n\nThe dancer laughed. \"I'm Piper, sweetie. The girl over there is Sahara. You looking for a dance with me?\" She lowered her voice and whispered in his ear. \"I don't tease like she does. I deliver.\"\n\n\"Mind if I ask something?\" Kyle blurted, partially intoxicated by Pipers perfume, but determined to get to the bottom of the Sahara/Julietta thing. \n\n\"As long as it ends up with you and me having some private time, sweetie,\" she replied, turning and sitting on his knee, her stocking-clad legs crossing on his lap. \n\n\"Sahara,\" Kyle began. \"I met her today, at the water park. Is her real name Julietta?\"\n\nTo his surprise Piper laughed. \"I think you're getting her confused with someone else, sweetie. Sahara wasn't at no waterpark today. The girl can't even swim.\"\n\nKyle frowned. \"She was only on the lazy river anyway. It's only four foot deep.\"\n\n\"Trust me, sweetie,\" Piper smiled. \"Sahara wasn't at no water park today. And her name ain't Julietta neither.\"\n\n\"Well if it wasn't her, she must have a frickin twin in town,\" Kyle said, turning back to look at the brunette that was the spitting image of the girl he'd spent two hours talking to that afternoon. \n\n\"Anyway, enough about Sahara,\" Piper said, whispering in his ear once more. She shifted her hips slightly on his lap, getting his attention. \"Let's you and me go for a dance.\" \n\nKyle felt drawn in two directions. He really wanted to get a dance with Sahara to find out if it was Julietta or not, but Piper had been very helpful, her scent was intoxicating and her butt felt very nice as it wriggled on his lap. \n\nShe stood up and took his hand, then cocked an eyebrow at him. \"Let's go.\"\n\nBefore the dance Piper said she delivered, but Kyle honestly thought he'd had much better lapdances. It was as if her heart wasn't in it, and neither were her acting skills. He gave her twenty bucks anyway for going through the motions, thanked her and then returned to Casey, joined a moment later by Ed. \n\n\"Woo, mother fuckers,\" Ed crowed as he sat down heavily. \"That girl was all over me like a fat kids tongue on chocolate ice cream.\"\n\n\"You just had a lapdance and all you can think of to describe it is a fat kid licking ice cream?\" Casey laughed. \"Dude, that's fucked up.\"\n\n\"That's not what I fucking meant,\" Ed said quickly but the damage was done and while Kyle kept an eye on Sahara, Casey kept getting digs in on Ed. \n\n\"Hey, did you find her friends here?\" Kyle asked Casey, remembering his friends search.\n\n\"No, man. They're not here. I even asked if there was girls on their break through the back, but the bartender said they were all working because it was so busy.\"\n\n\"I asked one of the other dancers and she said it's not her,\" Kyle explained. \"Her name's Sahara apparently.\"\n\n\"Stripper names are hot!\" Ed added.\n\nKyle and Casey ignored him. \"Do you think she was telling the truth?\" Casey asked. \"Be a shame if it was her and the girls weren't going to meet us, but if it's just someone who looks like her then the girls might still be at Club Boca at twelve.\"\n\n\"She said that Sahara can't swim, and definitely wasn't at the waterpark today.\"\n\n\"You should get her over for a dance,\" Casey suggested. \"You can ask her yourself.\"\n\n\"I'm waiting for her to be done with those guys,\" Kyle explained.\n\n\"Fuck that shit,\" Ed said getting up. \"I'll go get her.\"\n\n\"Fuck no!\" Kyle said quickly while Casey grabbed Ed's wrist. \"You're not exactly Mister Tact-And-Diplomacy, Ed.\"\n\n\"So? She's only a stripper and I know how to talk to strippers.\"\n\n\"Yeah? What about the four guys she's talking with though?\" Casey pointed out. \n\n\"Man, you're such a pussy,\" Ed stated. Much as Kyle didn't like to agree with Ed on much, what he said was true. Casey would avoid any kind of potential physical confrontation and if one happened he was off like a scalded cat. He had no problem talking with women, but if there was other guys nearby showing an interest he'd avoid them like the plague rather than risk starting something.\n\n\"Ed, have a seat, man,\" Kyle said. \"I'll get her as soon as she's done with those guys, okay? Besides, there's no big rush. We don't have to be at the club for another hour.\"\n\n\"Yeah, man,\" Casey added. \"It's probably not even her anyway.\"\n\n\"Whatever, bitches,\" Ed said, taking a seat and opening another of his beers. \n\nThey sat there for another half an hour while Sahara took three of the guys individually in for dances, with Kyle biding his time. Ed disappeared for another two lapdances and Casey went for one. Another dancer approached Kyle but he declined the offer and after that the dancers seemed to leave him alone. \n\nBy the time Sahara returned after the third dance and the fourth guy at the table declined a dance with her, Kyle was about ready to hop out his chair and go over but she turned and looked right at him and then strutted over.\n\nIt was so bizarre, he thought to himself as he saw absolutely no flicker of recognition on her face. \n\n\"Hey, gorgeous,\" she said as she sat on the arm of his chair, and he knew there and then it wasn't Julietta. It was her voice. It was different. A completely different tone. Different accent. More husky and a little more Southern than Julietta's Manhattan twang. \n\n\"Your name's Sahara, right?\" Kyle said, more for a way of starting the conversation off. \n\n\"That's right,\" she nodded slowly. \"A little bird told me you're looking for some quiet time with me.\" She didn't ask a question but made it a solid statement. \n\n\"Yeah, see today I was at a waterpark and I met this girl.\"\n\n\"And she teased you, am I right?\"\n\n\"Not exactly,\" Kyle replied, a nervous smile on his face. He couldn't get over how much she looked like Julietta. \"I met this girl and you two are unbelievably similar. I thought you were her.\"\n\n\"Well I don't have any sisters, and I wasn't at any waterparks today. I was too busy working on my all over tan,\" she said, making every word sound seductive. \"Want to go to a private room so I can show you it?\" \n\n\"Em... sure,\" Kevin replied. He'd spent most of his time in the club watching her, and if it wasn't Juletta then he wanted her to dance for him. If it was Julietta, then even better. He handed her the twenty bucks he had held in his hand for the last half hour.\n\n\"Follow me,\" she said firmly. \"What's your name, handsome?\"\n\n\"Kyle.\"\n\n\"You already know my name.\" \n\n\"Sahara.\" \n\n\"Shall I tell you what else you know?\" she said, dragging the beads out the way and beckoning him through the archway.\n\n\"Sure,\" Kyle stammered, feeling suddenly more nervous now than he had since his first ever time in a strip club. \n\n\"That I'm going to give you a dance you'll remember for the rest of your life,\" she purred. Her hand dragged him into a small booth to the right of the archway and he thumped into the seat. A single light shone down in the booth from above and music pumped from speakers high on the walls throughout the room. \n\n\"Remember, no touching, Kyle,\" she breathed in his ear as she sat down astride his lap. She sat upright, her thighs either side of his and took a hold of his wrists, then paused a second, giving him a curious look.\n\n\"What's up?\" he asked, intensely aware of her chest inches from his face and the weight of her body on his.\n\n\"Nothing,\" she said quietly as if breaking from a trance. She took his wrists and placed them either side of him on the chiar. \"Keep your hands there, Kyle. You're not gonna need them.\" Then she winked. \"I know you've been watching me for a while now.\"\n\nWithout a seductive smile, Sahara leaned back, her pelvis pressing into his and she continued, arching her back until her head was on the small table in the booth. Then, in time with the pulsing music, she began to pump her hips on his, as if she was riding him. \n\nKyle took a deep breath as his body immediately responded to this sultry woman gyrating on him, grinding her crotch on his through her thin black panties with the silver lace. \n\nSahara bumped him extra hard, then four beats later the same again, then once more. Her hips resumed their quick movement, rocking on him in time with the music. \n\n\"Oh Jesus,\" he muttered, feeling his cock begin to rise in his jeans. With his hands at his sides he could feel it getting thicker and longer, growing down the right leg of his trousers. Without adjustment it was going to get painful. \n\nSahara flicked herself back upright on his lap, a graceful and erotic movement that placed her chest right in front of his face. Kyle licked his lips, acutely aware of her breathing and the rise and fall of her breasts. \n\nHe felt Sahara's hand slip around behind his neck and she began to slowly ride him, as if on a bucking bronco in slow motion, grinding her hips on him, her flat taught stomach rolling with each movement. \n\n\"Oh Jesus,\" he repeated. \n\nHer hands came up to her chest, barely a foot from his face and her finger glided slowly over her bra, tender fingertips caressing the material until they met in the middle. A smooth graceful motion had the front clip undone and then she rolled her head back and thrust her chest forward as her bra slid off her shoulders. \n\nThe luxurious full shape of her breasts moved within inches of Kyle's face and as his mouth dropped open of it's own volition, suddenly she swung away again, her left hand landing on his forehead. Kyle felt his head being held firmly agianst the seat as Sahara rose onto her knees, her breasts hovering deliciously over his open mouth. \n\nHe watched in agonisingly close detail as her free hand caressed her nipple for a moment, her face invisible in the silhouette of the overhead light, and then she brought it towards his mouth. Kyle's tongue flickered out, so close, aching to taste her tight little pink nub, longing to suck it into his mouth and pleasure her. \n\nHer body swayed, bringing her nipple closer then swinging away out of reach by a few inches, then back again once more. Kyle's tongue darted out at each swaying movement, but her hand held his head firmly in place, his tongue as little as an inch out of reach of it's target. \n\nHe groaned, an involuntary sound that brought her nipple closer. His tongue stretched out, as far as he could make it reach and he strained as she inched her breast in, closer and closer until he was sure he would be able to lick her nipple. He positively ached for it, and it was all he could do to keep his hands at his sides and not drag her into his mouth.\n\nShe released his head from the seat, but before Kyle could smother her nipple in his mouth she stood up, swaying her hips from side to side above him, slowly shuffling backwards for a moment, before she suddenly dropped to a crouch. ",
        "With the lightest of touches, her hands spread his knees apart, and her head darted between his legs, down low, almost under his balls, and he felt her nose touching the material of his trousers. \n\n\"Holy fuck,\" he growled, his breathing deep, his cock straining tight against the inner leg of his trousers as she moved her head around his groin. \n\nSahara's tongue darted out a moment later, right at the bottom of his button-fly, pressing through the denim on the base of his shaft, then slowly probing along the length of his cock, it's bulge easily visible. It continued, sometimes above, sometimes below, but always in contact until her tongue met the tip of his trapped erection. \n\nHer eyes rose to meet his. \"Now this won't do, will it?\" she purred, barely audible above the pulsing music. Her hands slid down the inside of his thighs, her right caressing the underside of his balls, the left positioning itself under his cock, and as Kyle gasped, she maneuvred his erection until it was upright in his trousers. \n\nSahara's tongue dragged itself up his button fly, bulging from the contained erection, from bottom to the tip and for a couple of seconds her head bobbed up and down, as if she was sucking him off. Kyle felt a desperate need to wrap his fingers in her hair and hold her in place, but before he could lose control and grab her she had moved again. \n\nThis time she half stood and turned around, her back now to him, her luscious, gorgeous buttocks in front of him. Again he licked his lips as they slowly lowered onto his waist, nudging a little from side to side until he could feel his erection nestled between the cheeks of her ass. \n\nThis was already a completely different class of lapdance from the one he'd experienced with Piper a short time ago. \n\nSahara slowly dragged her ass down the length of his cock, and as Kyle's head pressed back against the chair in blissful agony, she slowly rode back up him. Her hands rose to either side of her head, lacing themselves in her hair as her buttocks began to slowly ride his cock, pulling his foreskin up and down with every motion. \n\nKyle was in heaven. If it was possible to fuck someone without penetrating them, then this was it, and Sahara was really going to town on him. As her ass dragged up and down either side of his cock, she leaned back slowly until her head lay on his right shoulder. He could feel her breath on his neck as he looked at her breasts, her nipples tight and hard and agonisingly close, yet still out of reach. \n\nHe shivered as her tongue darted out, caressing the skin of his neck, slowly tracing an invisible pattern higher and higher until his ear was sucked into her mouth. Kyle's eyes closed, the sensations all over his body becoming more intense by the second as Sahara manipulated his senses. \n\nHis eyes snapped back open as she released his ear from her mouth and he watched as her fingertips took a light grip on her nipple, twisting it slightly, pulling it a little, making it stiffer and harder as her buttocks pressed down on his cock.\n\n\"Fuck,\" he said, his voice thick with desire. \n\nSahara slowly sat upright, her ass lifting off his cock as she stood and bent over, yet her hand darted down, caressing his erection as if reassuring it. Kyle could see right between her legs and the outline of her pussy through the black panties. His heart raced in hope that she was about to take them off.\n\nHer knees bent again, bouncing her ass off his cock a couple of times as if she was riding him, but her legs straightened again a moment later and one of her hands moved between her legs, a finger tracing the the lips of her pussy and continuing between the cheeks of her ass. \n\nKyle licked his lips again as the finger continued up past her ass, stopping at the waistband of her panties and hooking inside.\n\n\"Please,\" he mouthed silently, smiling as the finger began to draw her panties down, inch by inch, right in front of him. They peeled slowly from her skin, Sahara bent over right in front of him, presenting him with the best possible view, close up. \n\nKyle took a deep breath, his heart racing as his eyes focussed on her imminently visible asshole yet Sahara twisted her body a half-turn to the right, teasing him further. He could see the wicked grin on her face as she watched his reaction, swaying her ass from side to side as she slid her underwear down over her buttocks, then slowly down her thighs, dropping them to the floor. \n\nKyle wanted her desperately to resume her previous position, yet she continued swaying her hips before him, side on so he couldn't get a glimpse of what he longed to see. His cock was aching for attention and he shifted his hips a little to try and ease the pressure.\n\nSahara paused, stopped the swaying of her hips and placed a hand back on his forehead. The view of her body in profile just intensified Kyle's lust and he was sure he could hear his heart thumping above the beats of the pulsing music in the small room. \n\nHe gasped as Sahara moved quickly, a graceful fluid motion that suddenly had her feet either side of his hips with her hips above his head, her gorgeous pussy right in front of his face. Kyle swallowed, an unconscious reaciton to the sight before him. \n\nAs he watched, Sahara held his head in place, barely a foot away from her naked pelvis and she slid her free hand slowly down over her stomach, over her hip and then onto her shaven mound. Her fingernails traced in circles on the sensitive skin and Kyle was sure there were goosebumps there, so delicate was her touch. \n\nHer fingers slid lower, caressing the lips of her pussy, sliding back and forth along either side and Kyle mouth opened wide as she slid her index finger inside her, a quick dip that accepted her whole finger with no hesitation. Her finger slowly began to slide back out yet darted back in as deep as it would go. Sahara arched her back as she fingered herself, and Kyle licked his lips, feeling as if his cock got any harder it would burst.\n\nAs he watched she slid her finger free from the depths of her pussy, and as she brought it towards Kyle's mouth he opened wide, pressing forward to meet it, wanting nothing more in that instant than to suck her finger clean and taste her wetness.\n\nSahara's hand pressed firmly on his forehead keeping him in place and his eyes flickered up to hers, seeing the delightful smirk of a born tease on her beautiful features. Before he could make another move her wet finger swiped right under his nose, drawing from left to right, leaving a moist trail of her scent between his lip and nose. \n\n\"Yeah,\" Kyle blurted, immediately closing his mouth and inhaling through his nose to try and catch a whiff of her. His tongue darted out and wiped his upper lip, catching a slight hint of pussy on the tip of his tongue, but not enough to satisfy him.\n\nSahara's hands moved to either side of his head and her pelvis began to sway towards him. He felt his head get yanked back a little and he opened his mouth and stuck his tongue up, desperately hoping to taste her, to pleasure her and to feel her writhing on him. He knew he was breathing fast, was aroused beyond belief, and he wanted this girl, even if it wasn't Julietta. She was too toned, too firm to be the girl he'd chatted with that day. Sahara was like the evil-twin version of Julietta. Well, her erotic alter-ego. \n\nHis tongue probed as her pussy got closer, longing to make contact with that beautiful moist haven, yet she remained just out of reach. Her hips rocked back and forth in front of him, and he could smell her, sense that she was aroused too. She was too close for him to see but it was all instinct. \n\nEach time he tried to lift his head and plunge into her with his tongue she either pressed his head back into the seat or her hips swayed just out of reach. She was an incredible tease and she was playing him like an expert. He was overcome with desire, longing to taste her, touch her, or possess her, trapped by the knowledge that if he pushed his luck and used his hands or used his strength to taste her his feet wouldn't touch the floor until he was on his face out on the street. \n\nHis eyes flickered up to hers, and she paused, frozen with that same curious, quizzical look on her face she had before the dance started. She was looking at him as if something wasn't quite right. \n\nAs she stood there above him, her pussy barely inches from his mouth, he took a chance and pushed his tongue forward, then pulled the back of his head from the seat. \n\nKyle was in heaven the instant that the tip of his tongue slid between her lips, immediately tasting her scent, her arousal. He flicked his tongue up, seeking and finding that delicious little bud that maximised the pleasure and he dragged his tongue firmly up it, flciking upwards with the very tip of his tongue.\n\nIt had been only a second, probably not even that, yet he saw the expression of pleasure cross her face at the same time as her back arched and her pussy lifted back out of reach. The hands on his head pressed him back, yet Kyle was exultant. He'd tasted her, she was wet, and it was all he could think of.\n\nSahara began to sway to the pulsing music, now further away from him, but as his eyes slid slowly up her body Kyle thought she had never looked hotter. His eyes met hers and he could see the intensity of her eyes, staring at him as if trying to decide something only she knew. He hoped she would decide to give him another taste. \n\nKyle watched as she bent at the knees, her feet still either side of his hips and her hands slid to behind his neck as she slowly squatted down onto his hips, bringing her to a similar position to when she had first started the dance for him, although now she was naked, he was hard and he knew she was wet. \n\nHe felt her pussy resting on his erection, only the denim of his trousers separating them and then she lifted free of him, her hips rising and falling a moment later further down his cock. A slow, body-arching movement dragged her pussy up the length of his erection and Kyle growled in intensity of the pleasure and desire coursing through him.\n\nShe repeated the movement again, then a third time, and then as he was thrusting up to meet her she paused, leaving him there humping his jeans. She smiled, and Kyle smiled too, knowing he was being manipulated by a master and not caring. He was loving every second of it. \n\nSahara slid back and lowered her feet to the floor. Her body swayed, twisted and danced for him between his thighs, shadows and light flickering over her skin with each movement. As she rotated slowly Kyle glanced down at her ass, firm and taught yet shapely enough for him to want to bury his face in it. \n\nShe backed into him, the back of her knees hitting the inside of his thighs and then she slowly lowered herself down, resuming the position she'd held earlier, her buttocks enveloping his erection through his trousers and she began to rock her hips. \n\nSahara leaned back, this time to his left. Her head came down on his shoulder as her buttocks continued to rock up and down his pelvis, jerking him off, making him gasp. She sucked his ear in her mouth again, intensifying things further for Kyle, further than he could handle. \n\n\"Did you enjoy your wicked little taste?\" she whispered in his ear, her voice deep and husky.\n\nKyle nodded, his eyes closed. He longed to lift his hands and grab her hips, her breasts, anything to keep her in place. The constant motion on his cock was going to make him cum, he knew, but he didn't care he was still dressed, didn't have any thoughts beyond the pleasure of that moment. \n\n\"Thrusting your tongue into my wet little pussy like a bad boy?\" she continued, drawing a groan from Kyle as her ass worked his cock. He could feel his breathing deepen. His balls begin to tighten and he knew it wouldn't be long. \n\n\"And now you want to cum, don't you?\" she whispered.\n\n\"Yes,\" Kyle gasped. He felt her suck in his earlobe once more, releasing it quickly. Her hips took a longer and slower ride down his cock. \n\n\"I bet you want to touch me, don't you?\" Sahara whispered. \"To grab me, to take me, to fuck me.\" \n\nKyle's cock was going to explode and he knew it. His breath was coming in sharp gasps now, hard and fast as Sahara lay on top of him, working his cock with her buttocks, working his mind with her words. \n\nHe felt her hands fasten on his wrists, lifting them both. She pulled them up to meet her rocking hips and he gripped a hold of them, holding them in place to push his cock against, but Sahara continued to arch her back, riding his length up and down, manipulating his cock. He could feel it start to happen and his entire body tensed up.\n\n\"Is my ass going to make you cum, Kyle,\" she whispered in his ear.\n\nBefore Kyle could reply Sahara's buttocks tensed up, gripping him and her hips rocked fast, much faster than before, riding him hard and firm through his trousers. It sent him right over the edge. \n\nHis breathing changed, deep fast pants of breath mixed with groans, right in her ear. His cock pumped out spurt after spurt of cum onto the inside of his boxers. His body exploded in waves of pleasure, hard surges of bliss as the dancer on his lap manipulated him into and through his orgasm. \n\n\"Good boy,\" she murmured, jerking him off with the cheeks of her ass. \n\nMoments later Kyle's hands fell away from her hips, exhausted and sated as the last of his orgasm washed over him. Sahara lay still across his body now, relaxed and motionless. Her tongue darted out and traced a circle on his neck.\n\n\"Did you enjoy the dance, Kyle?\" she said quietly as he lay there panting. \n\nHe nodded, not really capable of words or coherent sentences. \n\n\"And it's a dance you'll remember for the rest of your life, isn't it?\" she said. He could hear the the wickedness in her voice with a hint of self-satisfaction for a job well done. \n\nHe nodded. \"F... fuck yes,\" he stammered a moment later. \"Incredible.\"\n\nShe kissed him on the cheek, a surprisingly tender and gentle kiss, her right hand coming up to hold him in place. \"My pleasure,\" she murmured. \n\nKyle felt her shift her weight as if she was about to get up, and his hands clasped her hips. \"Don't go.\"\n\n\"I gotta get dressed, Kyle,\" she said, smiling at him. She wiggled her hips from side to side.. \"Besides, I think you might need to go clean up.\" \n\nShe kissed his cheek once more, a disarming gesture that provided affection at the same time as reminding Kyle that the dance was over. This time as she shifted her weight to sit up he let her go, feeling her sitting upright on his lap, her back to him. \n\nKyle became aware of how the inside of his trousers were plastered with cum, and it was rapidly cooling now. She was right, he knew. He'd need to go clean up, and with a sigh of regret he accepted that the dance was finished. \n\n\"You're a hell of a good dancer, Sahara,\" he said, watching as she bent over to pick up her panties and bra. \n\nShe wiggled her hips on him, giving him a physical response rather than a verbal one he probably wouldn't have heard anyway. He took it as a sign she was pleased with his compliment and while she slipped her panties around her ankles, he pulled another twenty from his pocket. \n\nSahara stood, bent over at the waist and slid her panties back up her legs. It was the first glimpes Kyle got of her ass and of her pussy from the rear and it made him lick his lips. She straightened as she slipped her black panties with the silver lace back up, adjusting them on her hips and then she half-turned and sat on his right thigh. \n\n\"Here,\" Kyle said, lifting the twenty and handing it to her. \"Best dance I've ever had. If I could give you a hundred bucks I would, and you'd stil deserve a tip.\"\n\n\"Aren't you sweet,\" she said, and gave him a brief peck on the lips. \"Thank you, Kyle.\" \n\nSahara slipped her bra back on in a swift, practiced movement, fastening it and then running her fingers quickly through her hair, shrugging it back into place. \n\n\"Shall we?\" she said, standing and holding a hand out to Kyle to help him get up. \n\nHe smiled, took her hand and stood up, feeling a little wobbly for a moment, making her chuckle. \n\n\"Knee trembler?\" \n\nKyle nodded. \"Told you you were good.\"\n\n\"Oh, I know I'm good,\" she said, smirking. \"Honestly though, I don't usually get turned on when I do a lapdance, but there's something about you, Kyle.\"\n\nKyle smiled, but he knew that was a line. He didn't say anything further, but let her lead him from the booth and back through the beaded curtains to the main room. \n\nShe stopped and gave him a peck on the cheek, and with a whispered, \"Thanks for the dance,\" she was off. Kyle looked over at his friends, watching a dancer up on the main stage doing naked acrobatics with her thighs clasped around a steel pole, and smiling, he headed for the bathroom.\n\nKyle, Ed and Casey arrived at Club Boca but had to wait in the queue. The time passed quickly with Casey repeatedly reminding Ed not to be a total dick and Ed repeatedly quizzing Kyle about the lapdance. Since he cleaned himself up in the bathroom at the club, Kyle hadn't said a word about it to his buddies. He'd also ditched his boxers in the restroom waste-paper bin and ended up going commando. There was no way he was going to tell Ed that story.\n\nAt a little after twelve they were admitted to Club Boca, a large place focussed around dancing and drinking, with DJ's playing a mixture of mainstream dance and latin house music, and Kyle immediately picked up on the cool chilled vibe of the place. Ed and Casey hit the bar while Kyle went looking for the girls. The guys had caught up with him again by the time he spotted them, so the three of them walked over to join them. \n\n\"Hey,\" Kyle smiled as he approached Julietta. \n\n\"Hi Kyle,\" she said, smiling back. \"So you guys made it then? We thought you weren't gonna show.\"\n\nKyle smiled, knowing without a shadow of a doubt that Sahara wasn't Julietta, but the similarity to her was frightening. Realising he hadn't answered her, he smiled. \"Yeah, we got stuck in the line outside. Here now though.\"\n\n\"Glad to hear it,\" Julietta replied giving him a nudge with her elbow.\n\n\"Hey, wanna dance?\" \n\n\"Sure.\" \n\nKyle followed her down to the dance floor and took the opportunity to check her out. He really dug the short black skirt and boots and the black and white cut-off top she wore really showed her off. Once they were on the dance floor, Kyle let himself go. He'd always enjoyed dancing, especially in clubs and when a lot of his friends went through that phase where they thought that dancing was 'gay', Kyle was able to dance with most of the hot chicks in his school. Now he was twenty he felt comfortable on the dance floor. \n\nWhile they enjoyed the music, Kyle noticed the odd guy checking out Julietta from time to time. She really did look hot, he noted, and he liked how she kept looking at him. Despite his earlier orgasm at the strip club he could feel a tingle of excitement in the pit of his stomach. \n\nAfter fifteen minutes or so out on the floor, where they were briefly joined by Casey and Margarita, they stopped for a drink. Kyle grabbed them a couple of stools looking down on the dancefloor and they sat down.\n\n\"So what you been up to tonight then?\" Kyle asked. \n\n\"Oh, you know. This and that,\" she grinned. \"Four girls out on the town.\"\n\n\"I can imagine,\" he laughed. \"Lots of teasing and flirting?\"\n\n\"Little bit,\" she replied, laughing. \"Bit of drinking, bit of dancing too.\"\n\n\"Good stuff.\" He took a swig of his beer and after offering Julietta another drink, he popped down to the bar and got a round of drinks in for them all. When he got back Ed was telling them all about the strip club they were at earlier. \n\nKyle groaned, as he hand't intended telling any of the girls about Derriere's Gentleman's Club but he should have known that Ed was incapable of any kind of tact or diplomacy. He popped the drinks down on the table and picked up his and Julietta's, handing her it. ",
        "\"Sometimes he's a total asshole,\" He muttered.\n\n\"Now that's a bad case of stating-the-obvious you've got there, Kyle,\" Julietta said. He could see she wanted to ask a question of him. \n\n\"Did he tell you about the girl who looked like you?\" Kyle asked, figuring he might as well cut to the chase. \n\nShe nodded. \"He said you thought she was me?\"\n\n\"Yeah, I thought that at first, so I asked another dancer but she said Sahara couldn't swim, so it couldn't be her at the waterpark,\" Kyle explained as he saw Julietta snigger. \"Excellent stripper name, huh?\"\n\n\"Classy,\" Julietta nodded. \"So Ed said you got a dance with her?\"\n\nKyle nodded, his expression serious. \"I wanted to find out if it was you or not. I know it wasn't now, but I had to speak to her to find out. I didn't know if you were serious about meeting us here tonight and were actually a stripper, or if there was someone who looked like you and you were still gonna be here.\"\n\n\"Right,\" she said slowly. \"So you got a lapdance with my doppelganger to find out if I'd be here or not?\" He could see Julietta found the story pretty amusing.\n\n\"Pretty much,\" Kyle admitted. \"Anyway, me and Casey only went to the club because Ed was gonna go and we'd promised him before we left home that we would.\"\n\n\"You didn't want to go see naked strippers?\" she asked quickly.\n\n\"No... I mean, yes but...\" Kyle stopped, realising she was messing with him. \"Nice one,\" he laughed.\n\nJulietta winked at him and sipped at her cocktail. \"Hey, was it any good?\"\n\n\"Was what any good?\"\n\n\"The lapdance? Ed said you wouldn't speak about it.\"\n\n\"You really want to know?\" Kyle asked, looking at her curiously, wondering where she was going with this.\n\n\"Of course.\" \n\n\"Why?\"\n\n\"Because I want to know if this stripper is good or not, especially if other people might think she's me. A girl has a reputation to uphold after all and quality matters.\"\n\nKyle laughed, pleased to see she hadn't decided he was a creep because he went to a strip club with his buddies. He did noticed that the more Ed talked the more Jessica and Shanice frowned at him. Meanwhile he could see Casey and Margarita getting cosy, with hands slipping around waists, gentle touches and nudges aplenty.\n\n\"They seem to be getting on well,\" he said quietly to Julietta.\n\n\"Yeah,\" she nodded. \"They're cute together. I'm glad they're getting on.\"\n\n\"How are we doing?\" Kyle asked on an impulse. He liked to take people by surprise from time to time. \n\nHer cheeks flushed a little as she looked at him. \"Not too bad so far. Definitely potential there.\" \n\n\"So you think I'm hot then?\" he said, careful not to speak too loud.\n\n\"You're okay,\" she said archly. \"What about me?\"\n\n\"I think you're hot. You're cute and sexy and lots of fun,\" Kyle said, making it up as he went. \"I think you're a really good person too, and you deserve to have some fun.\" He swivelled the stool so he was no longer facing the group, positioning himself facing the dancefloor. He was pleased to see Julietta doing the same, their shoulders now touching as they sipped at their drinks.\n\n\"I'm.... glad you think so,\" she said a moment later, her cheeks a little blushed. \n\n\"You know, we could just take off right now?\" he suggested, but she smiled and shook her head. \n\n\"Not yet. It's our last night here, so I want to party some more.\" She gave him a very firm look. \"Later though, you might get to come back to our place. We've got a villa.\"\n\n\"I'm sure we'd both enjoy that,\" he said carefully, smiling a little. On an impulse he leaned forward to kiss her, but she jerked her head back and brought a finger up to his lips. \n\n\"Please tell me you washed after your lapdance.\"\n\nHer statement made Kyle chuckled. \"Of course I did.\"\n\nShe narrowed her eyes. \"You're sure?\"\n\n\"Definitely,\" he nodded, and then was pleased when she leaned in and kissed him. Her lips were soft yet assertive and they kissed for a few seconds. \n\n\"Consider that a canape to start your appetite,\" she said, smiling.\n\n\"If that was a canape then my stomach is making growling sounds already,\" he laughed.\n\nThey hit the dancefloor after that, pausing occasionally for drinks, but always heading back to dance. As the evening wore on they touched more and more, starting with light brushes and progressing to some pretty firm grinding and caresses. While drinking Kyle and Julietta were either touching each others hands, or Julietta was leaning into Kyle's chest, at one point sitting on his knee. It was two hours of solid foreplay before the club closed. \n\nThe seven of them left the club, with Casey and Margarita firmly paired off like Kyle and Julietta, while Ed tried unsuccessfully to get anywhere with either Jessica or Shanice, but the most he got was when he tried one of his chat-up lines and they couldn't stop laughing for several minutes. Casey suggested that he hop in a cab, but Ed wouldn't have it, and if his buddies were going to a party, he was too. \n\nThe walk to the villa Julietta was staying at took about twenty minutes and by the time they got there, they were all feeling pretty buzzed with the alcohol. When they opened the front door Kyle was really impressed. It had several bedrooms, a large lounge area and a swimming pool and jacuzzi out the back. \n\nKyle just shook his head as Ed made straight for the pool, bombing the mirror-flat surface from as great a height as he could manage, fully clothed.\n\n\"What a fucking moron,\" Julietta laughed. \n\n\"He's a good guy,\" Kyle laughed. \"He just.... he's not that tactful and there's no filter between his brain and his mouth, but if you ever need someone to get your back, he's there.\"\n\n\"He sounds like he'd get you into more trouble than out of it though,\" she teased, holding his hand.\n\n\"He has his moments,\" Kyle said, smiling. \n\n\"Come on,\" Julietta said, dragging him into one of the rooms off the lounge. Kyle's heartbeat accelerated as he entered Julietta's bedroom. Typical of a nineteen year old girl there was clothes, shoes, magazines and makeup everywhere. \n\n\"Nice and tidy,\" he laughed. \n\n\"There's some floor somewhere,\" she shrugged. \"And don't get your hopes up just yet, mister,\" she added quickly. \"I figure if we're gonna have a swim, you can pick out a bikini for me to wear.\"\n\n\"You gonna model them for me?\"\n\n\"No,\" she said, laughing. \"But you can choose what I've to wear, and then later I might let you take it off me.\" \n\n\"I can cope with that job.\"\n\n\"Thought you might,\" she grinned. Julietta rummaged around on the floor, gathering up various different coloured bits of swimsuits and while she did that, Kyle looked around, spotting a rather fancy camera on one of the units. \n\n\"Nice camera.\"\n\n\"Yeah, it's not too bad,\" she smiled. \"I'm really into photography, but I didn't want to bring my good camera with me. That's just a D80.\"\n\n\"I know it's a Nikon, but I don't know one model from another,\" Kyle smiled. \"Looks expensive.\"\n\nJulietta shrugged. \"The body isn't that expensive. The lens is a bit more though. Twenty-eight to seventy, F two point eight.\"\n\nKyle chuckled. \"I don't know what any of that means.\"\n\n\"It's not the standard lens that comes with the camera. It's more a... specialist portrait lens,\" she explained. \"I make a little side income with my photography back in New York. Actors headshots, Corporate portraits, stuff like that. It finances my hobby.\"\n\n\"Very cool,\" Kyle murmured, genuinely impressed. \"Is that what you do at Berkeley?\"\n\nShe shook her head. \"Nope. Study business. It's really boring though, so I might drop out and do the photography thing full-time.\"\n\n\"That's seriously cool.\"\n\nJulietta shrugged. \"It's not all it's cracked up to be. Lot of time spent in front of a computer editing. You have to really love it. Fortunately for me.\"\n\nKyle liked what he was seeing of this side of Julietta. This casually artistic and passionate person that had been inadvertantly hidden from him under the persona of a nineteen year old clubbing student on a spring break weekend.\n\n\"So which one?\"\n\nKyle looked at the three bikini in her hands, one black, one silver and the other blue and gold. He had no idea about styles, or cuts, but he thought the black one and said so.\n\n\"Why the black one?\" she asked as she dropped the other two.\n\n\"I thought it would go nicely with your hair,\" Kyle said honestly. \n\n\"I like that answer,\" she smiled, moving forward. Her lips found his for a few intense seconds, until they broke.\n\n\"Right, out you get,\" she ordered, smiling.\n\nHe moved to the door. \"Hey, I don't suppose you've got any shorts here that'll fit me, do you?\"\n\nJulietta raised an eyebrow. \"You're commando?\"\n\n\"Afraid so.\"\n\n\"Ask Shanice. I think she packed a pair of her brothers shorts by accident.\"\n\n\"See you in a minute,\" Kyle nodded. \"Hey, you sure you don't need me to stay and supervise you getting changed?\" \n\n\"All good things come to those who wait,\" she said, then lifted a hand, pointing out the door. \"Wait being the operative word. Out.\"\n\nKyle closed the door, smiling. \n\nShanice turned out to have a pair of shorts he could use, although they weren't for swimming but they'd do, so he popped into the bathroom to get changed. In the ten minutes that he spent waiting for Julietta, the three girls had all gotten changed and were in the water, while Casey had simply stripped to his briefs and plunged into the pool after them. \n\nEventually Julietta reappeared though, and Kyle walked over to the pool with her, liking the sight of her in the black bikini. A momentary memory popped into his head of Sahara, the stripper, with her black underwear and the similarities were abundant between the two, yet the slight differences were more pronounced at the same time.\n\nKyle nearly blurted out, \"Are you sure you don't have a sister,\" but he realised that reminding her he was thinking about a stripper and not her probably wouldn't go down too well. He opted for diving in the pool. \n\nFor an hour or so they mucked around in the pool, sending Ed to make them drinks out of whatever liquor was left in the villa. Surprisingly Ed was the first to pass out, on one of the sunloungers that surrounded the pool. At that point Casey and Margarita were definitely doing their own thing together in the jacuzzi, and Jessica and Shanice had gone inside to get some items to give Ed a 'makeover'. \n\n\"Let's leave them to it,\" Julietta whispered in Kyle's ear. \n\nHe nodded, immediately getting out the pool and helping Julietta out. She didn't let go of his hand, but pulled him after her into the house. \n\nKyle followed her into her bedroom, not pausing as she pulled him straight into the bathroom and handed him a towel. As he dried himself off in the dim light from the bedside lamp, he watched Julietta, rubbing a towel through her short bobbed hair. It was at that length that it looked awesome if it was neat or messy. \n\nWith both of them dry apart from the wet clothing, they paused, looking at each other, the air thick with tension. Kyle broke it.\n\n\"I will if you will,\" he smiled. \n\nJulietta blushed a little but smiled back at him. \"It wouldn't be smart to get into bed with wet clothes, would it?\"\n\n\"Downright stupid,\" Kyle agreed, his hand sliding down over his stomach to the button of the cargo shorts he'd borrowed. \n\n\"Really stupid,\" Julietta nodded, reaching behind her to undo the strap of her bikini top. The two black cords dangled down at the sides of her stomach, the top only held in place by the string around her neck. Kyle could see the mischevious grin on her face, the slight flush on her cheeks and chest and he knew his own breath was coming quicker. \n\nThrowing caution to the wind he shrugged his hips and pushed at the shorts, dropping them to the floor in one swift movement. \n\n\"Bear in mind the water was cold,\" he added, smirking. \n\nHer eyes flickered back up to his face. \"Poor baby. I'll make sure you're all warmed up.\" \n\nAt that Julietta reached back and pulled open the remaining knot on her bikini top, dropping it to the floor. Kyle took a deep breath as he saw her breasts, nice and firm, not too full, and the phrase 'more than a handfull is a waste' popped into his head. Her nipples were tight and hard from the cold water, and he longed to suck them in his mouth. \n\n\"Like what you see?\" Julietta asked, biting her lip as she awaited his response. \n\n\"Hotter than I could have imagined,\" Kyle said immediately. \"Beautiful.\" \n\n\"Oh, aren't you the smooth one,\" she replied, pleased at his compliment. \n\n\"Honest.\"\n\n\"Well, Mister Honest, you better get dried before you get in this bed. One of us is wet enough already.\" Julietta blushed a little more as she finished the statement but her words had an immediate effect on Kyle, and he rapidly scrubbed his damp bits dry with towel as he walked around the double bed.\n\nJulietta chuckled as she saw him do a bandy-legged hop-walk as he dried himself, getting a grin back from Kyle. Seeing how unabashed he was she quickly shed her bikini bottoms and dried herself with her towel before slipping into bed alongside him. \n\nKyle had his arm out and Julietta immediately slipped into it, snuggling into him. \n\n\"Are you cold?\" She murmured a moment later.\n\n\"Yeah.\"\n\n\"Me too. Cuddle into me,\" Julietta ordered, rolling onto her side and dragging him to spoon in behind her. \n\nKyle slipped his arm around her waist as his legs slid in, matching her position under the covers. Her butt felt cold in his lap, but it was a naked Julietta butt. It could have been made of ice and he wouldn't have moved away. He traced his fingers in a small circle around her belly button. \n\n\"That's nice,\" she murmured, worming her head inbetween Kyle and the pillow. \n\nThere was something incredibly intimate and comforting in the way their bodies were conforming into each other to Kyle. He realised that both of them were making unconscious minute adjustments, his upper leg sliding between hers, her calf resting behind his own with her foot looped under his. Her hand found his left arm and she pulled it in to her body, his hand sliding between her breasts as his right slid from her belly button to between her and the bed, wrapping her tight, her arms wrapping around his until they were as tight together as could be. \n\nThere was nothing erotic about it, he realised, just an incredible intimacy as their two bodies fit tightly together as if made for it. \n\n\"Oh my,\" Julietta purred in his ear. \"I could stay like this all night.\"\n\n\"Um... me too,\" Kyle admitted. \"And I'm not a cuddly type of guy.\"\n\n\"But this is so nice...\"\n\n\"I know,\" he admitted. \"It's.... \"\n\n\"I know,\" she finished. \n\nThey lay there, wrapped up in each other under the blankets. \n\nSahara\n\n\"Night, Tiger-Lily,\" Sahara called back as she left the dressing room of the Derriere's Gentlemens Club, smiling as she always did when the dancers said goodnight to each other using their 'stripper names'. She walked past the bar, seeing her blonde haired room-mate, Anabeth waiting for her.\n\n\"You ready to go?\" Anabeth asked. \"I'm beat.\"\n\n\"Yeah. Busy night, huh?\" Sahara replied, opening the door.\n\n\"Don't think I've ever done so many dances in one night. Goodnight, guys,\" She added to the security guys. \n\nThey turned right and walked the seventy yards to the door of their apartment block. Anabeth opened the door and the two of them climbed the two flights of stairs then entered their small scummy two-bedroom apartment. \n\nAnabeth slumped down on the sofa. \"Want a drink?\"\n\nSahara shook her head. \"Think I'm just gonna go to bed.\"\n\n\"Want some company tonight?\" Anabeth asked, grinning. \"I'll make you sleep real good.\" \n\nSahara smiled, but shook her head at her occasional fuck-buddy. \"Too tired, but thanks anyway, baby.\"\n\nAnabeth shrugged. \"I'll just have to fuck myself silly with my toys tonight instead.\"\n\n\"And probably wake the whole block when you cum,\" Sahara replied, smirking.\n\n\"Nothing wrong with enjoying yourself.\"\n\nSahara's mind conjured up the image of the young dark-haired guy who she'd danced for earlier, deliberately making him cum. \n\n\"You're smiling,\" Anabeth said immediately, her eyes narrowed. \"What did you do?\"\n\n\"Made a guy cum tonight,\" Sahara smirked. \n\nAnabeth rolled her eyes. \"That's called a professional hazard.\"\n\n\"Deliberately though.\"\n\n\"Oh, really?\" The blonde sat forward, her interest obvious. \"Tell me.\"\n\n\"Some guy called Kyle. There was just something about him,\" She explained, shrugging. \"I thought he was really hot, and when I was dancing for him I got really fucking wet. Even let him stick his tongue in my pussy for a second.\"\n\n\"You dirty slut,\" Her friend laughed. \n\n\"Hardly,\" Sahara replied. \"But I did make him cum in his pants, and then afterwards I told him that it was rare I got turned on but there was something about him.\"\n\n\"Sounds like a stripper line,\" Anabeth grinned.\n\n\"Yeah, I think that's what he thought,\" Sahara admitted. \"Thing is, if he'd shown any interest I'd have given him my cell number, or told him to meet me here at closing time, and he would be in my bed right now.\"\n\n\"If he was that hot, I might have joined you,\" Anabeth replied, winking.\n\n\"Oh, I know,\" Sahara smiled. \"And now I'm off bed alone. Night, Anabeth. Sleep good.\"\n\n\"You too, Kara.\"\n\nKyle\n\nIt was still dark when Kyle awoke, sensing a slight movement in Juliette, a slight change in posture, in position, and he knew that his own body had responded. He could feel his breathing deepen, matching hers as his cock continued to grow, nestled between the lips of her pussy, inching forward as it became thicker and longer in the darkness. \n\nWithout asking he knew she was awake, lying there with her head beside his, experiencing the same exquisite physical and intimate sensations he was. \n\nHe felt her neck stiffen as the tip of his erection glazed her clit, and hearing her exhale was a wonderous sound in his ear. Kyle turned his head and gently kissed her, a soft, tender brush of his lips on her jaw. \n\nHe felt her hand grip his a little tighter as he brushed his lips a little further along the line of her jaw until his breath was on the soft, sensitive skin below her ear. \n\nJulietta moaned softly as he held there, breathing on her with a tender intensity. Her hand came up, her fingers lacing themselves in his hair, softly steering his head to kiss her once more. \n\nKyle brushed his lips down her neck, barely touching the skin, his lips softer than they'd ever been in his life, going purely on instinct as he experienced something beautiful. He felt Julietta roll her hips in a luxurious caress, drawing him up and down her soft cleft, feeling her welcome on his arousal. \n\nHis lips traced down her neck, brushing against her collarbone as his whole body moved forward, his lips rising back up her neck as he entered her. \n\nJulietta's head rolled back, exposing her neck to him as she whispered his name.\n\n\"Kyle.\"\n\nHer body moved in response, her back arching as her head rolled back, her pelvis tilting, welcoming another inch inside her. \n\nKyle felt like he was in heaven, in another place and time where everything was emotion and intimacy, sensation and connection, as if the world had come to have no meaning and all that mattered was the here and now. This moment. \n\nHis lips met hers, the exquisite gentleness of their lips making them both moan. His hand slid out from under her and was met by her own, steering it to caress her breast, her soft skin moving with every breath under his fingertips. \n\nJulietta moved her body, a slow-motion writhe that expressed her desire, her passion, and drew Kyle's mouth to hers while she pressed into him, teasing a little more of him inside her. \n\nKyle's senses were electric, every motion and movement he made focussed on bringing pleasure to this beautiful woman in his arms. His left hand moved to her breasts, caressing her nipple between finger and thumb while his right hand moved down, his fingertips tracing invisible patterns in her skin as she began to softly sway her hips on him. He felt her tongue probe into his mouth as if tasting him. Kyle's fingers traced down over the little stripe of dark curly hair until he found what he sought, that delicious little spot that brought and enhanced so much pleasure.",
        "As his finger tip brushed it lightly, Julietta moaned in his mouth and pushed back a little further with her pelvis, tilting it and pushing, arching her back and pressing her buttocks into his lower stomach, seeking him, wanting him inside. \n\nThey broke their kiss, each breathing hard inches away from the other. Kyle knew he was fully inside her and he was almost delirious with pleasure, but his only desire was to make sure she felt the same. \n\nHis finger slid a little lower, feeling the natural moisture on his cock as Julietta slowly moved her hips back and forth on him. Kyle coated the tip of his finger with it, then dragged it back up to her little pleasure-nub.\n\n\"Oh, Kyle,\" Julietta whispered and Kyle kissed her once more, delighted with the pleasure in her voice. His finger began to slowly circle her clit as their passion built further, Julietta rocking her hips a little to move him inside her. \n\nKyle tensed, moving his own hips so he could begin to move himself inside her and as he did, his first slow thrust inside her, Julietta moaned. Kyle repeated the movement, slowly withdrawing then sliding back in until he was fully inside her, his finger brushing her bud with every motion of her breathing, his other hand caressing her nipple to a taught hardness that he longed to take in his mouth. \n\nOnce more he withdrew then slowly thrust himself inside her, feeling her back arch and her chest thrust out. \n\n\"Don't stop,\" she whispered, breaking their kiss. Her head rolled back on his shoulder once more and she took his earlobe into her mouth, sucking softly on it as her body moved, writhing in a series of connections with Kyle's. \n\nKyle wanted to pleasure her, ached to pleasure her, and so he continued to slowly slide inside her, each movement a finely controlled symphony of muscles moving in harmony to provide her with that pleasure. \n\nIdly he realised he had never experienced anything as intoxicating as this in his life, focussing solely on providing pleasure for another and feeling more intimate than he had ever been in his life. He thrust the thought aside, for truly, it didn't matter to him. All that mattered was the here and now, Julietta and the connections they were sharing in that instant. \n\nKyle continued his movements, concentrating on Julietta now, seeking to heighten her pleasure in any way possible, so while his hips continued their slow thrusts, his fingertip worked on her clit, his other hand teased her nipple to a stiffness that would penetrate steel and his mouth returned to its teasing soft kisses, first on her collarbone, then up the side of her neck, then behind and around her ear.\n\nHe knew she was breathing deeper and faster as he made his way around her, teasing and breathing on her, and she moaned as she began to push back with her own hips, seeking him, wanting more. \n\nHe increased the pressure with his finger on her little pleasure node, working it a little harder, the tip of his finger stroking it up and down, in tune with her breathing and as it increased in intensity he matched it. Unconsciously his hips did the same, a synchronous movement that tied everything in with her own arousal, growing firmer and faster as her breathing increased, as her body rolled and arched and craved more. \n\n\"Fuck, Kyle,\" she panted. \"Please.\"\n\nHis lips met hers once more, locking together in a passionate, hungry embrace that matched the intensity of their bodies. He heard her involuntary moans from deep inside her, felt her begin to tremble and he stepped up to match her. \n\nGone was the slow tender thrusts. Gone was the tender touches. Gone was the teasing caresses. They were from a moment in the past. The present was hunger, intensity, a different type of connection with a life of its own. \n\nJulietta's hips began to shake, their rhythm erratic and uncontrolled. Kyle didn't waver, didn't let up, didn't stop, just kept on going, pushing inside her, firmly manipulating her clit, his other hand holding her tight against him as her body arched, stiffened and her breath exploded from her. \n\nShe broke their kiss as she orgasmed, each breath she panted bringing forth a moan of ecstasy. Her body shuddered hard against him, shaking and squeezing, and Kyle thought it was the most beautiful thing he'd ever experienced. \n\nHe could feel her tensing inside, like miniature spasms gripping him as he thrust and withdrew. Kyle felt her vulnerability and pleasure and the intimacy and eroticism of the moment tightened him, made him moan. \n\nIt was sudden and intense, a hard and fast orgasm that he didn't expect but that blew him away. His hand moved from her clit to her lower stomach, pulling her in to his body, his muscles throughout his body strong and rigid, pressing her into his shoulder, his chest, into his pelvis, pushing himself inside her as deep as he could go. \n\n\"Oh, fuck,\" Kyle moaned as he came inside her, bucking and lurching as Julietta's body still quivered against him. \n\nShe moaned aloud knowing he was experiencing the same pleasure she was, and her hand held his head to hers, alongside each other. \n\n\"Kyle,\" she moaned in a near whisper into the darkness. \"Yes.\"\n\nHot, spasming pleasure surged through Kyle in the beauty of the moment, being inside her as they both reached that place together, locked tight in his arms, both breathing fast and hard in sheer bliss. \n\nThey stayed like that, locked together, Kyle inside Julietta. Neither wanted to let the experience go, yet as they gradually subsided, as their orgasms slowly eased away like shadows chased by the sun their tense bodies eased, relaxing and melding together in that comfortable way that only lovers can. \n\nJulietta was the first to speak. \"Kyle, that was.....\"\n\n\"I know,\" he said simply. \"I've never experienced anything like that.\"\n\n\"It was so beautiful,\" she replied, kissing him softly on the cheek. Then she giggled. \"You're still inside me.\"\n\nHe grinned and moved his hips back a little, tilting his pelvis and as he slid out of her Julietta sighed. \n\n\"I miss it already,\" she murmured. \n\nKyle re-adjusted his hips so that he was pressed back against her again, his soft penis lying against her buttocks. As Julietta snuggled her ass back into his pelvis she giggled again. \n\n\"I can feel your cum running down my skin.\"\n\n\"Yeah, sorry about that. I should have put a condom on but I was kinda caught in the moment,\" he said gently. He felt her squeeze against him, a movement of reassurance and comfort. \n\n\"Me too, but I wouldn't change it for the world,\" she whispered back, kissing him once again on the cheek. \"You know how people say about memories that last a lifetime?\"\n\n\"This was one of them,\" he agreed. \n\n\"Why do you have to live so far away?\" she whispered softly. Kyle knew exactly what she meant. He'd had girlfriends and one night stands, and none of them had even come close to this. Not once, and it was with a woman who he would never see again after this night. \n\nHe felt so incredibly close to her, so intimate that he had to ask. \"Julietta, I wasn't going to ask, but I have to know. What's your real name?\"\n\nShe lay there in silence for a moment, then her lips turned to his ear. \n\n\"Katie. It's short for Katarina.\"\n\nThree Years Later\n\n\"Is everything okay, Kyle?\" The old lawyer asked as Kyle stared at the photographs on the table. \"You've gone a little pale.\"\n\nIn a voice barely above a whisper, Kyle said, \"Oh, fuck, please let this be a joke.\"\n\nKyle was reeling, the instant recognition of the two faces in the photos making him feel nauseous, excited and angry at the same time. \n\nIt was Katie and Sahara, the two stars of his own personal spank-bank, the sexual memories that came back to him every night when he lay in bed, his eyes closed, stroking his cock. The two hottest women he'd ever encountered and God, or Fate, or Destiny had decided to fuck him up and reveal they were his sisters. He cursed the part of himself that was excited at the thought of meeting them again. He knew that he couldn't have known they were his sisters, that there was no possible way he could have known, but still he felt disgusted with himself, the strength of the social and legal taboo so strong that he just felt.... wrong. Dirty, and not in a good way. \n\nThe conflicting emotions and memories made his already knotted stomach feel like a stuffed toy inside a washing machine on a spin-cycle. \n\n\"Kyle,\" Mister Crowler asked again. \"Is everything okay?\"\n\nKyle looked at the old man across the table and took a deep breath. \"Mister Crowler, are you my lawyer?\"\n\n\"No, or more precisely, not yet. Right now I'm representing the interests of Mister Tripps. Do you need a lawyer?\" The old man tilted his head, looking at Kyle across the table. \"You need someone you can talk to confidentially with your best interests at heart and no-one elses?\"\n\n\"Something like that,\" Kyle replied. Then another realisation struck him - that when he hooked up with Katie as he thought of her, there were other people around. Ed and Casey, his buddies were there, but also her three friends. Five other people who knew the two of them had hooked up. Ed and Casey knew that he'd got a lapdance from Sahara who was actually Kara too. And if the press were going to find out about them, then all it would take would be someone to open their mouth and all kinds of shit would come out. \n\n\"I'm not going to ask any questions just yet, however I would advise you to speak to Patricia about the problem tonight, whatever it is,\" Mister Crowler said firmly. \"She is appointed to you to look after you, not to look after the business or to steer you in any particular direction, so if there's a problem, or if there may be one in the future, discuss it with her. She'll help you out.\"\n\n\"Is she a lawyer?\" Kyle asked.\n\n\"No, but she can talk to one without incriminating you, or arrange a discussion with one for you. Either way, discuss it with her. Then once the last will and testament has been read, I can give you legal counsel if it's required. Is that sufficient?\" \n\nKyle shrugged helplessly, having no idea what to do about this. \"I guess it'll have to be for now.\"\n\n\"Do you have any other questions?\"\n\nKyle thought for a moment, then nodded. \"My... sisters. Are they being told just now too?\" \n\n\"That's my task for today, I'm afraid,\" The lawyer replied. \"As soon as we're done here I'm off to let them both know too. All going well you'll all meet for the first time on the Island tomorrow.\"\n\n\"We're all taking the same plane? Sorry, jet?\" \n\nThe old man shook his head and began clearing up the documents and photographs from the table. \"No, Kyle. You'll all be making your way there and they'll arrive together.\"\n\n\"Oh, okay. So what do I do now?\" The words came out on auto-pilot. Inside, Kyle still felt like he was reeling.\n\n\"Get in the car outside, go shopping for some clothes for a week on a Caribbean island, and whatever else you want to take with you. There are limitations though.\"\n\n\"Such as don't buy a Lamborghini?\" Kyle shook his head, experiencing one of those surreal moments. \n\n\"I daresay you could if you wished, but I think Mister Tripps has a couple anyway,\" The old man replied, smiling slightly. \"Limitations. You can't discuss this with your friends, and if they ask, tell them you've had to go away on a business trip, advising the three Company Directors that turned up out the blue today. Currently they're smoothing things over within the organisation so that people will think you've been selected for a fast-track career path and are off around the country for a week or so.\"\n\n\"That's why they're here?\"\n\nThe lawyer nodded. \"They don't know the details, but yes, they're here only to give you a legitimate excuse to vanish for a week.\"\n\n\"Shit.. What about my friends? I can't tell Ed and Casey?\" Kyle asked. \n\n\"That's correct.\"\n\n\"I kinda already told my parents that I'd be going to meet these sisters of mine,\" Kyle said, frowning. \n\n\"That's okay, Kyle. They're your parents, although I'd strongly suggest you call them and ask them to keep quiet about it over the next couple of days.\"\n\n\"Okay, I will do. What else?\"\n\n\"That's us,\" The lawyer said, placing the files in his briefcase. \"Oh, here's a suggested list of items you should bring, along with a list of places you can find them. It's from a creative professional on the Island. To be frank, she's a bit of a nuisance, but she does know how to make you look good.\" The old man slid three sheets of paper across the table to Kyle. \n\n\"Come, Kyle Watson. I'll walk you to your car, introduce you to your driver and then I'll see you late tomorrow.\" Mister Crowler stood up and beckoned Kyle to the door. \n\nKyle led the lawyer out to the Reception, absently patting his pockets to make sure he had his housekeys. He could feel the wad of cash in his wallet along with the new credit cards. They exited the building and Kyle's eyes widened as he saw the two limos parked at the kerb. \n\n\"Wow, this is really real,\" He murmured.\n\n\"What was that?\" Mister Crowler asked.\n\n\"Sorry, nothing. Just muttering,\" Kyle replied. \n\n\"Well, Kyle Watson, it was a pleasure meeting you, and once again, my apologies for turning your world completely upside down. Let's hope when everything settles down it looks better than it did before.\" The old man offered a hand and Kyle shook it. \n\n\"Best of luck today, Mister Crowler. Can I make a request of you?\" Kyle said quickly as the old man turned to leave. \n\n\"Yes?\"\n\n\"When you meet my sisters could you give them a message for me?\" \n\n\"It depends on the content of the message, Kyle.\"\n\n\"Can you tell them I wish I knew I had sisters, and I'm looking forward to meeting them both for the first time tomorrow?\" \n\nThe old lawyer's eyebrow raised. \"Indeed? I'm sure I can pass that on. Good luck, Kyle, and I'll see you tomorrow. And don't forget your passport.\"\n\nKyle nodded, breathing a sigh of relief as the old man turned his back. The message had been a spur of the moment thing, and the wording impromptu, but he wanted to get a message to them if they remembered him. Telling them he wished he knew he had sisters would remind them that none of them knew they were related when they'd met before, and adding that he was looking forward to meeting them for the first time tomorrow was something he was rather pleased with. A hidden message saying don't admit that we've already met. In the event that one or both of them didn't remember him then the whole message would seem quite sweet. \n\nKyle smiled, his stomach still doing flip-flops, but nowhere near as bad as it was a few minutes ago. \n\n\"Mister Watson?\" \n\nKyle turned, hearing a woman's voice from beside the car. \"Hi?\"\n\n\"I'm Caroline, your driver for today, sir.\" Caroline turned out to be a short-haired dirty-blonde woman in her mid to late twenties, dressed in the classic black suit, white shirt, black tie and the peaked hat, common among limo drivers. \n\n\"Hi Caroline. Call me Kyle.\"\n\nShe nodded. \"Very good, sir. Kyle. Whatever. Where are we going?\"\n\nKyle smiled. \"That's an easy one. Somewhere I can buy cigarettes. Then, apparently there's a list of things I've to get.\"\n\nShe nodded, opened the door, Kyle slid in on the leather seat and moments later they were off.\n\nThat first cigarette was a guilty pleasure, but it just made Kyle feel a little sicker than he did already, so he binned it halfway through. The three hours that followed passed in a blur. \n\nCaroline drove him from store to store, picking up business suits and clothes of a far superior quality than anything he'd worn to date. Designer clothing stores, designer luggage, everything that was on the list was specific and labelled, put together by someone called Margaret. \n\nKyle was reluctant at first to accept that someone could pick out what he should wear and know better than he did what would suit him, but she seemed to have unerringly good taste. In the first three stores he tried on a few items, and after that he just checked the sizes were right and handed them to the sales assistants that followed him around. Turning up at the front door in a limo and wearing designer clothing certainly got their attention and service was excellent all afternoon.\n\nEventually the adrenalin of the whole thing began to wear off and Kyle felt exhausted, and realising he hadn't eaten at all that day, they stopped for lunch. Kyle insisted that Caroline join him, rather than eat alone and they got talking about life as a limo driver in the city. \n\n\"You see some sights, believe me.\"\n\n\"Like what?\" Kyle asked, enjoying the novelty of being able to order whatever the hell he wanted and have a pretty hot woman for company. \n\n\"Alright, couple of nights ago I'm driving these three German businessmen around, and I pick them up from the restaurant and they're all blitzed, right?\" \n\nKyle nodded and took a bite of his burger. \n\n\"Well, one of them comes up to the window and taps on it, so I lower it down while I'm driving and he asks me to take them to get some hookers.\"\n\nKyle coughed. \"No fucking way. Just like that?\"\n\nCaroline nodded, brushing her hair back from her face. \"Yeah, plain as that. So I've got three options, right? One, I can ditch them and get no tip, and probably get fired. Two, I can go and find some meth-head skanks that are probably riddled with Christ knows what diseases, or I can go with option three.\"\n\n\"Which is?\"\n\n\"Call my room-mate and get her to round up some friends.\"\n\nKyle blinked. \"Your room-mate's a hooker?\"\n\n\"Escort, and a very well paid one at that,\" Caroline replied with a raised eyebrow. \"She only works one night a week and she earns more money than I do.\"\n\nKyle nodded. \"Whatever works for you, I guess.\"\n\n\"Exactly. So I call her, tell her about these guys and she makes some calls, right?\" Caroline paused for a sip at her Pepsi.\n\n\"So you go and pick up all these girls?\" Kyle asked, amused at how matter of fact she was about it all. \n\n\"Yeah,\" She nodded. \"Three guys, five girls, a big fucking orgy in the back of the stretch limo for three hours. Got to give those guys some kudos for keeping it up for that long.\"\n\nKyle laughed and raised his bottle of beer. \"To German businessmen.\" \n\n\"And the girls they rode in on,\" Caroline laughed, chinking her glass against his beer. \n\nKyle made a face. \"What about cleaning the limo afterwards?\"\n\nCaroline shrugged. \"Someone elses job. And no, that's not the same limo. Yours is brand spanking new. Don't know how you managed that, but it suits me fine.\"\n\n\"Whatever works for you,\" Kyle smiled. \"So is it like that quite a lot?\"\n\n\"What? In the back of the limo?\"\n\n\"Yeah.\"\n\n\"Sometimes. You kind of get spells where it goes a bit nuts and then nothing happens for ages. I've had all sorts back there though. Couples who hire it for a night just to drive around the city fucking behind tinted windows. Try to spice up the old marriage. I've had guys who jacked off on their own, women who've helped them, sometimes even men who've helped them.\"\n\n\"Fucking hell,\" Kyle muttered. \"It's like a whole new world I didn't know about.\"\n\nCaroline laughed. \"You should try it out. See how the other half live.\"\n\nKyle grinned. \"What? Jerk off in the back of the limo on the way home? Nah, not really my style.\" \n\n\"Ha! You should hire a couple of classy escorts, have a threesome. It'd blow your mind.\"\n\n\"You're insane,\" Kyle laughed. \"Have you ever?\" \n\n\"What? Me? I've never hired an escort,\" She chuckled. \"Those girls cost a fortune.\"\n\nKyle laughed, let the subject drop and finished off his burger. \"Want some dessert?\"\n\n\"Coffee?\" \n\n\"That'll do for me,\" Kyle agreed. \"I would tell people I'm a latte-junkie, but it's the lamest sounding thing ever.\"\n\n\"Yeah, I wouldn't try and use that as a line on a girl. Talking of which, have you spotted the two girls to my right checking you out?\""
    ],
    "authorname": "JammyJimmy",
    "tags": [
        "threads",
        "island",
        "triplets",
        "sisters",
        "anal",
        "bath",
        "voyeur",
        "secret",
        "cctv"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/threads-the-island"
}