{
    "title": "Zoe",
    "pages": [
        "<center>This is my entry for the 'In a Sunburned Country' event.\n\nIt's half BDSM and half exhibitionism, with maybe other things thrown in as well. I flipped a coin and here is is in BDSM.\n\nIt is intended to be an awaking story, a sensual story, an erotic story, but please be aware it's mainly about buildup; there is not a lot of fast-and-furious sex in it. That may follow in another tale, but not yet. If that's what you want or need, there are lots of good alternatives around. \n\nHave fun either way!<br>+</center>\n\nAfter breakfast, I took a long shower. \n\nAfterwards, my heart already beating, I sat down at my dressing table. Looking at my image in the mirror, I wasn't sure if I should be pleased, disturbed, amused or what. I knew that in any case I was pretty excited about the day. My inner Zoe was turning cartwheels in her excitement.\n\nWhen it comes to makeup, I generally go with the less-is-more philosophy. Today, I definitely wanted better than that. I took my time; there was no hard-and-fast timetable. I wanted 'seductive but not slutty', 'daring but possibly submissive'. It took me a couple of tries but I think I got it. \n\nFinished, I moved on to my hair.\n\nI'd been to my stylist the night before. I'd pressed her to cut it short, far shorter than I was used to. She had asked me if I was sure and I'd grinned at her, invented a cute bloke I wanted to impress and told her to go for short, sexy and sassy. She had hit the nail right on the head.\n\nA kind of a raggedy bob with an uneven fringe gave me a lot of flexibility and yet, to my eyes, looked really sophisticated, really hot. It took my creamy blonde hair and, seen in the salon mirror for the first time yesterday, made both it and me look amazing.\n\nIt was also easy to recreate and maintain; a few minutes with brush and comb brought it right back. I licked my lips, smiled at my new image. Mirror Zoe smiled back. I thought she looked pretty good!\n\nTurning away from the mirror, I picked up an unmarked bag from a shopping trip earlier in the week. According to the net, 'Kay's' was the leading sex shop in Melbourne, their stock sophisticated rather than skanky. \n\nThe rope in my hands was soft nylon, 5mm thick. I thought its scarlet colour looked remarkably good against my skin.\n\nThere had also been silk cord for sale at the store - darker, almost wine-red in colour and so soft it felt like it would fall through flesh without pressure, leaving behind no mark and no damage. Sadly, my purse had begun to shudder and moan every time my fingers even went near it. And, although natural fibre was more traditional, I wanted something softer, at least to start. Nylon it would be. \n\nFor years, almost since I had entered puberty, the thought of what I was about to do today had been at the forefront of my fantasies. I'd read every book, every article I could find on bondage and exhibitionism. There weren't many, of course, at least not at first. The local library was hopeless and my parents kept the internet pretty-well locked down for their kids. Even when they bought me my first smartphone, parental controls were welded in place.\n\nThings improved overnight when I got my first job and could afford an unlimited phone of my own. And it my 'over-nights' became much, much more fun, let me tell you. A new world had opened for me.\n\nSo I'd been 'getting ready' for a long time. I guess you could say I was like somebody who's dreamed their whole life about Scuba diving and who's bought all the gear and who's spent hours polishing it and touching it and reading about diving and had a shelf of books - but had never actually gone diving.\n\nYeah, that's me.\n\nBut today was - if I could keep my nerve - The Day.\n\nThe shibari pattern I'd settled on was a simple tortoiseshell. I picked up the rope and folded it in half. Near the top end, I tied a series of simple overhand knots the length of my hand apart. The loop created by the first knot was large enough to slide over my head; once that was done and the rope allowed to fall down my front, the remaining knots were spaced evenly down my chest and stomach. \n\nI passed the two free ends between my legs and up my back before threading it through the loop at the nape of my neck. Passing a length down and under each arm, I brought the ends through the second loop in front of me, between the first and second knots. Then back to the ropes over my spine, the forward again. And back. And forth. \n\nEventually, the ends of the line were tied off after several ties around my upper thighs, much like old-fashioned garters. Looking at the mirror, I was struck by the bold pattern of diamonds overlying my torso. Although a large knot was commonly positioned over the subject's clitoris, I had other plans for today. Reaching down, I shifted the two cords to rest outside my labia. \n\nLooking at my image, I shifted my breasts so that they protruded more fully between the cords. My nipples were already hard and I caressed them gently. Already I felt a welcome tautness in my groin, a promise of... what? \n\nI wasn't entirely sure, but was eager to explore.\n\nStanding back before the mirror, I turned this way and that, admiring the effect, running my hands gently over my bewebbed body, gently pinching my nipples.\n\nI twisted my hips and felt the ropes around my body twist and shift, an improvised but most elegant sleeveless straightjacket, constraining not movement, but what - modesty? mood? Here and there, my skin was gently caught between adjoining cords. It was an incredibly erotic feeling. I felt my nipples harden still more and, for the first time, a wetness between my legs.\n\nI went over to my jewellery box and took out a treasured keepsake, a short necklace once owned by my grandmother and given to me by my mother when Gran died. At the time, its design had meant nothing to me; the chain of sterling fingernail-size triskelions had been nothing more than artistic spirals - a Celtic design, perhaps? \n\nIt wasn't until much later that I'd read of the symbol's link to, shall we say, an alternate culture. By then, Gran and Popsy were long beyond my ability to ask.\n\nGran? Could it be...? \n\nI doubt I'll ever know. One thing is certain, though - I won't be asking Mummy Dearest.\n\nI settled it around my neck, fastened the clasp. The polished silver stood out nicely against my tan. I hadn't initially known what the triskelion design represented, but out on the streets, who knows who might see it? It could be my entr\u00e9e into another new world.\n\nI tingled at the potential.\n\nReaching again into the shop bag, I pulled out a tiny box with another treasure, this one definitely new. I removed two flat clips of sterling-silver wire, much the same as paper-clips. Lacking the second loop, they nonetheless clipped firmly on my nipples, stimulating them and keeping them stiff. At the same time, they laid quite flat against my boobs, meaning I could wear a thin dress braless and not have them visible.\n\nI skipped knickers and bra. That was the whole point of the exercise.\n\nIt should have been a miniskirt, right? I had one ready, but on putting it on, the thigh ropes were well below the hem. I thought of changing the rope pattern, but I'd put too much trouble into it, felt too committed to it. It was elegant in its beauty and made me feel the same. No, I would have to skip the miniskirt.\n\nI settled for a red knee-length red circular skirt. It was a bit formal, but would work for dressy casual. A plain white leather belt emphasized the narrowness of my waist.\n\nI hesitated while choosing a top. If I'd had more confidence, I'd have gone with a plain white blouse, something thin enough to show my braless state to better advantage. I decided that would have to wait until I had a bit more confidence and settled for a short-sleeved, form-fitted black blouse with a red polka dot pattern. Add to them a pair of black (OK, super dark blue) ankle-strap heels and I figured I had a winning combination. \n\nI had one last thing to do.\n\nIt could have been vibrating panties. It could have been a small bullet. It could've been an old-fashioned egg. Instead, I reached into a drawer for the final purchase, a 'new-fashioned' vibrator, rather like an egg but far more sophisticated. It had no less than 12 settings and its batteries would run for over two hours. A small extension or finger would rest on top of my clitoris when the thing was fully inserted.\n\nI thought it would suit my purpose nicely today. I'd already washed it carefully and ensured it had a full charge. I set it for a random vibration pattern.\n\nInserting it was no problem. Although I never been with a boy I'd cared enough about to actually have sex, I'd lost my hymen so long ago as a little girl that I couldn't even remember it. Yeah, go figure, all this sexy trouble and still untapped...\n\nAnyway, the instructions suggested lube, but I was already so wet that it proved unnecessary. I had to rest one leg on a step for the right angle; it slid in with not much effort at all. I felt full - happily so. Looking in the mirror, it was essentially out of sight, with my lips hiding the clit extension and just a ring-size loop of string exposed.\n\nThe plan was simple enough, I thought - hop on the first tram which came along, take it at least 15 blocks and then walk home. On the way, I had set myself two tasks. The first was to stop and order a coffee -- sitting down for it so not to permit myself the luxury of takeout. I also had mentally highlighted my resolve to flirt with the waiter there. When I was done my coffee, I would stop in a shop and buy something mildly embarrassing - condoms, maybe? \n\nAnd I would not permit myself an orgasm until I reached home again.\n\nSo simple, right?\n\nI looked at myself in the entryway mirror and took a deep sigh. Showtime, girl!\n\nAs I looked, I could feel the first arousing tingle deep within my ladybits. \n\nI again looked at Mirror Zoe for reassurance and watched her grin nervously at me. Taking a deep breath, I opened the door and stepped outside into the warm sunshine.\n\nLocking the door behind me, I turned and headed down the steps, dropping the key into my bag as I went. I don't normally wear heels and wobbled just a little before riding-a-bicycle ability kicked in. Feeling surer of myself, I strode off down the footpath towards the tram stop.\n\nI was pleasantly aware of the girth and solid weight of the vibrator within me as I walked. The vibrations were increasing as I went, but I figured it was nothing I couldn't handle.\n\nOr, at least, nothing I couldn't handle initially. I was aware of a gradual increase in sensations. How not? But as exciting, as stimulating as it all was, I figured willpower - and the ever-present threat of public discovery and humiliation if that willpower failed me - would see me through.\n\nI passed the usual neighbourhood shops. A couple of shopkeepers I knew waved at me. I'd grown to like the openness and friendliness of the people here since arriving in Oz six months ago from the other side of the world. I waved back. Maybe I'd stop in on my return, if I were still sane. \n\nSoon I was at the tram stop. I closed my eyes, tried to focus inwardly on this particular moment of this particular day and on the sensations. I was torn between that and constantly checking to see if somebody had noticed, if there were looks of disapproval - or of interest. \n\nThere weren't - so far. To my surprise, I was both relieved and disappointed.\n\nStanding there, I found it difficult to believe I was finally doing this, had finally dared. It'd been a fantasy of mine for as long as I could remember. \n\nFortunately, it wasn't long before the tram arrived. I boarded and sat down - no backing out now. There were a couple of good-looking young boys nearby, but they were lost in talking footy and scarcely noticed me. I wasn't sure if I was irritated or relieved. \n\nI settled in for the ride. \n\nI had of course been on Collins Street since I had arrived in Melbourne, but who could ever know it all in that time? It was fun just watching. I eventually hopped off and started walking back. I figured it'd be at least a half-hour before getting home.\n\nThere are a host of coffee shops and caf\u00e9s in the area. I'd been in some, but, walking along, I waited until I found one I didn't know. It looked new, trendy and I decided to make my stop there.\n\nSadly, it was a waitress who greeted me, not a waiter, and while my dare-list didn't exactly ban flirting with another woman, I was already pushing my boundaries. I chose a spot in the warm sun by the window and ordered a cappuccino. The vibrator was revving up and down and I was more than a little aroused.\n\nThe place was anything but busy, but the coffee was excellent and I guessed business would pick up closer to noon. I forced myself to just sip the cappuccino; I wanted this to last.\n\nI sat, trying to be aware of and yet not concentrate on rope and vibrator. Histoire d'O had the women of Roissy prohibited from crossing their legs in public. Would that apply in this case? Well, I'd never been to France, much less Roissy and I knew nobody named Ren\u00e9. I crossed my legs.\n\nAnd immediately uncrossed them. Crossing them had intensified the feeling from the vibrator, almost pushing me over the edge into orgasm.\n\nI knew I would have to be careful if this whole plan wasn't to unravel in public. Well, of course not in public - that was the whole point, wasn't it? I squirmed in pleasurable discomfort. \n\n\"I like your necklace,\" came a voice from a nearby table.\n\nStartled, I turned to see a slender man sitting nearby with another woman. In his 40s, his black hair was speckled with grey at the temples; grey also showed in a well-trimmed narrow beard. His grey eyes seemed to twinkle in amusement.\n\nHe wore white daks, a light grey jacket, white dress shirt and a pink tie. There was a small carnation on his lapel. On some people, it might have been silly; on him it looked amazing. \n\nThe woman with him was younger but still older than me, maybe in her early 30s. Straight, raven-black hair came down almost to her waist. Her figure was stellar. She had high cheekbones and a perfect chin. She was dressed in an elegant white linen frock; her eyes were hidden behind large round sunnies. Her only jewellery was a heavy-linked gold chain necklace. Beneath their table, endlessly long, shapely legs led down to white high heels which I realized to my shock just had to be Louboutins.\n\nThey were a stunning couple. Sitting there, despite all the care I'd taken, I felt quite ordinary, almost drab.\n\n\"Thank you,\" I stammered, unnerved at the steady gazes of the two of them.\n\n\"It looks quite old,\" he said.\n\n\"It was my grandmother's. I'm not sure where she got it.\"\n\n\"Ah, a family treasure! Such things are indeed worth keeping. But the symbol is a deep one, for those interested in such. Do you follow symbolism or are you wear it purely for its beauty and family connection?\"\n\nI gasped as the little vibe deep within me surged suddenly. One of his eyebrows went up, but he said nothing. His companion sat looking at me impassively. \n\nIn a moment, the sensation decreased a little and I was able to respond.\n\n\"Well, I wear it in memory of Gran and it is really pretty...\"\n\nI paused. At the pause, the girl smiled slightly, briefly, almost as if in compassion.\n\n\"It is indeed,\" he said approvingly. \"What of the symbol?\"\n\nI had to wiggle in my chair as the vibrator abruptly got stronger. It was becoming harder and harder to focus. Inner Zoe giggled at my predicament. \n\nPulling myself back from the brink, I said cautiously, \"It was originally Celtic and stood for balance - mind, body and spirit, or mother, father and child, but always balance. What it meant to Gran, I am not sure.\"\n\nHe smiled at me. \"So true. But you look warm there in the sun. Would you care to join us here in the shade?\"\n\nI was indeed hot, but it wasn't entirely due to the sun. I realized that I was very close to cumming. Holding off that onrushing orgasm was taking a lot of concentration and mental effort. I could feel perspiration on my forehead. I sagged as another wave of pre-orgasmic tremors took me. \n\nThe man looked briefly at the woman, then rose, walked to my table and held out his hand in invitation. \"Come!\" \n\nDrained of almost all will but that needed to hang on, I took his hand and followed him to sit in the shade, facing away from the street and entrance.\n\n\"Pardon my manners,\" he smiled. \"My name is Gideon. May I ask yours?\"\n\n\"Zoe,\" I replied softly. The devilish machine had slowed down.\n\nA little.\n\n\"Zoe, this is Claire,\" he said, introducing me to his companion. \"Sadly, Claire has business elsewhere and cannot stay.\" It was not so much an explanation as a dismissal. The girl gave a small moue, but rose on cue and kissed his cheek. She extended her hand to me. I took it and found her grip was surprisingly strong.\n\n\"It has been a pleasure to meet you, Zoe. I do hope to see you again.\" She smiled again, this time with more sincerity. I noticed a slight accent, but couldn't place it. \"It is indeed a lovely necklace. I hope you benefit from it.\" With that curious remark, she bent and kissed my cheek, then dropped her hand and left. Her poise and gait were as polished as any high-fashion model. Her bottom inside the skirt was exquisite. \n\nI realized that, were I ever to meet her again, I would have either found a best friend or a terrible enemy.\n\nGideon cleared his throat. Looking past me and raising his hand high over his head, he waved his index finger down at us, back and forth. \n\nPuzzled, I looked over my shoulder to see the barista nod at us before starting two fresh cappuccinos. \n\n\"Over here, Zoe,\" Gideon said from behind me. \"We were talking and you are far prettier than she.\"\n\nFlustered, I turned back. Gideon had leaned back in his chair, facing me. There was a grin of sardonic amusement on his face.\n\n\"So, Zoe,\" he said levelly, \"Tell me about yourself.\"\n\nI gulped inwardly. Deep inside, I realized that this wasn't what I'd planned and that this wasn't merely a good-looking man standing for a coffee. 'Flirt with waiter' had been left miles back in the ditch. This was something far more serious. That realization hit me at the same time as the damned vibe took off again. \n\nI gasped, my hands clutched the arms of my chair.\n\nI think my eyes crossed. \n\nI would not - could not - have an orgasm in front of this man, a total stranger, not in public. That wasn't how the day-dreams ended.\n\nThe vibe slowed down, almost to nothing. I remained poised just short of the edge, simmering with frustration.\n\n\"Zoe,\" his deep voice repeated. Soft as it was, it was commanding in its presence, almost compelling.\n\nI opened my eyes again, stared at him, tried to smile back.\n\nI'd never felt so exposed before, so... overawed. But I realized that I liked it.\n\n\"Be honest now, Zoe. Be honest with both of us. You know what that symbol means, don't you?\"\n\nI bit my lip, lowered my eyes. \"Yes,\" I said softly.\n\n\"What does it mean to you, Zoe, in the context of here and now?\"\n\n\"BDSM,\" I whispered, barely audibly. \n\n\"Yes. And -- fair dinkum now - is that why you are wearing it?\"\n\nHis pale eyes bored into mine, not turning away as two cappuccinos were delivered. \n\nOnce the server had left, I worked up the courage to answer his question. \"Yes.\" \n\n\"And from that admission, I can tell you two things about Zoe,\" he said in a soft voice.\n\nI looked at him and squirmed as another round of not-quite-orgasm hit me.\n\nWithout waiting for more of a response, he continued.\n\n\"You, lovely Zoe, are somebody who wants to be a sub, but doesn't know how. Am I correct?\"\n\nTo my horror, I felt a full-body blush like a sunrise. How not to look sophisticated! In spite of myself, I nodded shyly.",
        "\"And this was your first try at it, yes?\"\n\nI nodded again, humbly. Short of just telling him to rack off, I saw no other choice.\n\n\"Good. And the second thing I can tell about you is a bit different. That outfit you have on is a perfect tenner. But Claire -- such an eye she has! - noticed some subtle bumps and shadows which suggest that you are wearing something... unusual under it? Am I right in that, Zoe?\"\n\nI closed my eyes, opened them before nodding again, slowly, hesitatingly.\n\nHis smile faded, but his overall expression remained friendly, supportive. I felt that I could fall into his eyes, they were that enthralling.\n\n\"Show it to me.\" It was less than a directive, more than a request. \n\nDespite the entire idea of my expedition, despite necklace, despite shibari and despite vibrator - despite it all - I was shocked at his expectation.\n\nI shook my head. \"No.\"\n\n\"No? Then tell me, Zoe, why did you put on a bondage harness under your kit before you went for a walk this fine morning, if not to risk getting discovered? Or do you belong to another?\"\n\nMy eyes were locked onto my knees.\n\n\"Look at me, Zoe.\"\n\nTwo ages and an eternity later, I raised my eyes to his. \n\nWe were sitting in the open in an upscale caf\u00e9. I knew I could simply get up and walk away. I knew that, but as riveted as a bird by an approaching snake, I simply could not make myself move from where I sat.\n\nMy heart pounded, and it wasn't just the damned vibrator inside me. My soul seemed to rise at the chance I knew could be mine.\n\n\"We can do this two ways, Zoe. The first is for you to do what you and I both know you want to do, which is to lift the hem of your skirt where you are sitting and show me what you are wearing. That will leave us as friends and give us both an opportunity for the future. Or - or - you can say No again, in which case we will just finish our cappuccinos and go our separate ways with no hard feelings. \n\n\"It's not every day I get to spend an hour with such a pretty young woman. I've enjoyed your company and do hope you've enjoyed our time together as well. But now it's up to you. Which is it to be?\"\n\nMy heart was hammering. I was terrified, yet I also felt I was in the brink of... what?\n\nFulfilment?\n\nDestiny?\n\nOr something else, something much, much darker?\n\nI moaned as the bloody vibe chose that moment to go into overdrive again. \n\nI had endless choices; I had no choice whatever. Not letting my eyes slip away from his, I reached down and slowly lifted my skirt, holding the hem up against my chest. The vibrator slowed down as I did so.\n\n\"Spread your legs a bit, Zoe. Ah, that's better! Very pretty indeed. Did somebody do that for you or did you do it yourself?\"\n\nI found myself unable to respond. I let the skirt fall.\n\nAfter a moment, he reached across and stroked my cheekbone with a gentle finger, smiled.\n\n\"You did it yourself, didn't you?\"\n\nI didn't know whether to be proud or ashamed. Still silent, I nodded meekly.\n\n\"Its beautiful, Zoe, artistic and very sexy. What I could see of it, that is. How far up does it go? Or did you just limit it to your bum and thighs?\"\n\n\"It's a full tortoiseshell, all the way up.\"\n\n\"What a beaut! You're very talented, Zoe, for an amateur. You are a beginner, aren't you?\"\n\nI didn't know what to say.\n\n\"Is there somebody else with a claim on you?\"\n\nI shook my head. There certainly wasn't, although too many nights had been filled with dreams of one - a strong, demanding, patient, kind, knowledgeable, assertive man. Only my dreams had never shown me his face.\n\nHe smiled, laid his hand on the table, palm upwards in invitation. \"I would very much like to see the rest of it, Zoe.\"\n\n The rest of it - that would mean...\n\nI was so desperately torn. I so wanted this man's approval. My body ached for his touch, the touch of a man I'd not known for an hour. \n\nI wanted to be sure.\n\nI wanted to be pushed.\n\nI wanted to be led. \n\nI wanted tomorrow to be safe. \n\nI wanted today to be... what?\n\nNot normal, that was for sure.  Anything  but normal.\n\nThe indecision must have shown on my face, for Gideon spoke again.\n\n\"Zoe,\" he said softly, sipping the last of his cappuccino and dropping a bill on the table to cover the cost of our coffees, \"it has been a sweet morning and perhaps we will see one another again. I am going to leave now. I am going to my flat, three minutes' walk from here. I hope you come with me, for I do wish to see the rest of that pattern. The choice is yours.\"\n\nWith that he rose to his feet. Passing me, he leaned down and kissed the top of my head in passing, like a mother kissing a small child on its way out to play. He leaned down and whispered in my ear, \"Dare to follow your dreams, Zoe. She'll be right.\"\n\nWith that, he strode out of the cafe and out the door. He didn't look back.\n\nI sat there, torn in so many different ways. \n\nHe'd said we might see each again. I wanted that. I  thought  I wanted it.\n\nAnd he seemed to understand and I had so desperately sought that kind of understanding ever since I became a woman.\n\nAnd he seemed nice. Certainly handsome and well-groomed, well-dressed. His wristwatch would have cost my rent for a quarter.\n\nAnd Claire looked terrific.\n\nBut I was terrified of what he might be. Worse - I was terrified of what I might turn out to be. \n\nAnd good girls didn't want to seem forward. Oh hell, who was I kidding about 'good girls'? Good girls didn't -- as I found myself doing as I heard the door close -- have to bite off a squeal as a momentary pulse from a vibrator drove them close to insanity in public.\n\nI sat there in complete frazzle for perhaps 20 seconds. Deciding, I lurched to my feet and, as quickly as I could on unpractised heels, ran after him. The sound of my heels seemed to echo thunder in the room around me.\n\nBursting out the door, I saw him turn a corner just ahead. Rounding it myself, I saw him about to enter a doorway like any other. \n\n\"Gideon!\" I cried.\n\nHe turned at the sound of my voice. A heartwarming smile crossed his face. My heart gave a double beat at its warmth. And the damned vibe shot up again, reminding me of how this day had been intended. I barely managed to control the wobble in my gait.\n\n\"Zoe! I am so glad you changed your mind!\" He held the door open for me and gave a small bow as he waved me through. \n\nHis flat was on the first floor, up a flight of real marble stairs. The building was like a dowager determined to maintain her looks at any cost. Clean and well-maintained, it could only be described as 'stately'.\n\nHis key went into the lock without so much as a sound, held in fingers concert pianists would kill for.\n\nHe paused before opening the door. \"Are you sure, Zoe?\"\n\n\"No,\" I said. \"I mean Yes. I mean, I think so. But No, I don't know what I'm doing.\"\n\nHis smile was comforting, endlessly warm and gentle. His hand softly traced my jawbone and I felt as safe as I had felt daring an hour before.\n\n\"That's OK. I do.\"\n\nWith that, he pushed open the door.\n\nHis flat was surprising. I wasn't sure what I had expected, but it hadn't been this. It seemed immaculately clean and tidy, as if being readied for a pre-sale viewing. Skylights made it bright and warm, as if one was actually outside. Gauzy curtains blocked a view of what was obviously a balcony outside. \n\nThe predominant colour was a light cream set off with large highlights of warm medium brown. A modest but serviceable kitchen was located unobtrusively in one corner; an overhead ring of iron hooks above a small butcher-block island was festooned with shiny copper pots and pans. The centre of the room was open and brilliantly lit by the sun; the floor was covered with an elaborate rug in cream, orange and dull red.\n\nThe walls held perhaps a dozen framed black-and-white sketches or drawings, all obviously by the same artist. While most were perhaps 12\" by 18\" in size, some were smaller, one no bigger than a postcard. All were done in a bold, simple fashion.\n\nThe people in them were... odd. All of them were distorted to some degree or another, some to the point of being grotesque - men with erections as large as themselves, women with ornate hair farting in the direction of a sour-looking naked dwarf, naked women at their toilette or surrounded in ecstatic dance by swirling hair and fabric.\n\nDeformed as they were and despite the simplicity with which they were drawn, the figures were immensely vibrant, alive. I felt myself being drawn by the intensity the artist had so purely portrayed. \n\nI was impressed with Gideon's taste. I went from one to another, turned back to see him watching me approvingly. One eyebrow went up in question.\n\n\"They're amazing!\" I said excitedly. \"Who...?\"\n\n\"Aubrey Beardsley,\" he said. \"19th century. Glad you like them.\" He smiled again, then, \"Would you like something to drink?\"\n\nI shook my head, bubbling with unstated questions, then fell silent as I remembered why we had come here. The vibrator had backed off; I could feel just the barest tingle between my legs.\n\n\"No?\" Gideon asked. \"Well then, why don't you put your handbag down and then come over here into the light?\"\n\nI moved towards the rug, stopped and bent over to remove my heels.\n\n\"Leave them on, Zoe.\" \n\nThis time, it was a command; I left them on.\n\nHe looked at me standing there, my hands by my sides. Then he spoke, his voice low. \"Well?\"\n\nThat one word sent shivers all over me. I really had no idea. This whole scheme looked really, really crazy to me now. My adolescent fantasy about walking around in public had somehow morphed into me about to take off my clothes in front of a total stranger in his flat, a man I'd only known for an hour. What was I thinking?\n\nInner Zoe was laughing hysterically. What had I been thinking about if not exactly and precisely this?\n\nI gulped, closed my eyes and, crossing my arms in front of me, reached down for my hem. In one smooth motion, I pulled it up over my hips, then my shoulders and over my head. Pulling my arms out of my sleeves, I dropped it on the floor by my feet and stood upright for his inspection.\n\nTo my surprise, he said not a word about my body, the shibari - none of it.\n\n\"Pick it up,\" he said, pointing at my dress. \"Never be sloppy, Zoe. Pick it up, fold it neatly and put it by your handbag.\" Again, it was not a request.\n\nWordlessly, I did so, returning to the centre of the rug. I could feel the warmth of the sun on my shoulders. \n\n\"That's better, Zoe. Now you need to present yourself properly. Stand up very straight and put your hands behind your head. Spread your feet apart. Wider - shoulder width. Good. Now arch your back to push your chest out. Excellent.\"\n\nI was both exhilarated and embarrassed at the complete exposure the position left me in. No know what else to do, I kept my eyes on the floor.\n\n\"Some doms, Zoe, want their subs' eyes downcast at all times. Right now, I don't want that. I want to be able to watch your expression, see your soul through your eyes. I want you to look up and forward, Zoe, all the time until I tell you differently.\"\n\nI raised my eyes, looked him in the face. His expression was at once stern yet encouraging, patient yet demanding. Above all, I saw openness, kindness. He smiled and again his finger traced my cheekbone. I felt helpless yet so incredibly powerful. I felt the air moving over my body in a way I had never felt it before. I found it exhilarating, liberating. \n\nOh, and intensely erotic.\n\n\"Stand still while I examine this most artistic marvel, Zoe. Do you mind if I touch you?\"\n\nIt was a curious mix of command and almost humble request. I was perplexed, but nodded.\n\n\"Thank you.\"\n\nGideon walked around me on the rug. I could feel his grey eyes moving over every part of my body. From time to time, a slim finger would trace a section of cord, stroke the skin beneath or beside it. \n\n\"Am I to understand that this is your first time wearing such a...\" he paused very briefly, \"... creation, Zoe?\"\n\n\"Yes.\"\n\n\"And nobody helped you?\"\n\n\"No.\"\n\nI felt his cool, strong hands sweeping over the skin of my bum, up my waist and settling on my shoulder. I'd thought I couldn't be any more turned on, but I was very wrong. And it was a different type of arousal entirely. The vibrator had left me wanting to cum; Gideon's gentle caresses left me yearning - desperately needing - to be possessed.  \n\n\"You made only one small mistake in symmetry, Zoe. One loop went over back here when it should have gone under. Especially given your inexperience, it's brilliant.\"\n\nHe removed his hands from my shoulder, gave me a gentle kiss behind one ear. I thought I would melt right there. \n\nGideon resumed his inspection. Finally, he had returned to a position immediately in front of me. Reaching up, he cupped my breasts, his fingers sweeping under the ropes at their base.\n\n\"And these clips are so clever,' he smiled. \"And so perfect for such perfect breasts.\"\n\nFor some reason, I was almost disappointed at his respectful tone. Deep down inside, I wanted to be thrown over his shoulder and carried into his cave.\n\nBeyond him, I could see his bedroom through an open door, a neatly-made bed with a sturdy wood frame and a lot of pillows, a bureau with a large mirror. Beside that open door was a closed one fitted with a deadbolt lock. Between them on the wall was a large, full-length mirror in a heavy frame. I could see the two of us in it, watch his hands linger over my breasts.\n\n\"How long have you had them on, Zoe?\"\n\nI looked at the clock on the wall. \"Maybe an hour and a half?\"\n\n\"Oh, no! That's far too long, girl! We need to get them off. May I?\"\n\nTo me, they seemed fine. My breasts felt taut, tingling, aching to be touched, but presumably he knew better than me. I nodded again.\n\nVery softly, very carefully, he removed them, put them on a nearby side table. They gleamed on the dark wood. Then the sensation hit me. \n\nHe'd been right. My nipples hurt now - sharp, deep pain to the extent that I sagged forward. I might have collapsed had he not caught me. He held me for a moment, then helped me stand back up. His lips came down, softly, on mine and the tip of his tongue swept slowly and lightly over them as tender hands caressed my breasts, helping to restore blood flow to my nipples.\n\nI moaned with both pleasure and pain.\n\n\"Wait a bit,\" he whispered. \"You'll be fine.\"\n\nHis hands left my breasts and began to roam over my stomach and thighs. A gentle finger traced between my legs. Suddenly he pulled away from me, half-kneeling in front of me. A curious finger touched the vibrator's loop protruding from between my labia. His eyes went wide. \n\n\"Zoe, are you having your per...?\" he stopped, his other hand on my mound obviously feeling the vibrator dance inside me, letting him know that, no, I wasn't wearing a tampon. \n\n\"Is this a vibe?\" he asked, his eyes wide. \n\nI nodded, this time feeling both embarrassed and proud. \"Mm-hmm.\"\n\nHe rose, his face beaming, eyes wide in admiration. \"Such daring! Such an adventurous girl! And it's been going all the time?\"\n\n\"Since I left the house, yes.\"\n\n\"Bewdy! No wonder you have been squirming! Zoe, very few women could endure that for long. Not willingly. Who has the control?\"\n\n\"Nobody has it. It's by the door in my unit.\"\n\n\"Have you cum yet, Zoe?\"\n\nI shook my head. \"No. And I really want to! But I promised myself that I wouldn't until I got home.\"\n\nA curious look came over him, part admiration, part pity. And lust -- I could see that in his eyes. \"Oh, but I want you to cum, Zoe. May I help you?\"\n\nSeeing the look on my face, he grinned. \"No, I didn't mean that, Zoe, although perhaps another time. For right now, I want to get you used to the idea of your orgasms being controlled by somebody else. Perhaps 'guide you' would be a better way of starting it.\"\n\nI thought for a moment. \"How?\"\n\n\"Well, let's start off by simply removing those lovely ropes. I'd love you to have photos of them first though, especially as it is your first time.\"\n\nMy hesitation must have shown on my face, for he smiled again and said, \"Do you have your phone with you, Zoe?\"\n\nI nodded.\n\n\"Then let me take them with your phone. You would own the photos, not me. But something this significant, this beautiful, this daring should be recorded.\"\n\nWhen I nodded again, he brought me my bag. I took out my phone, unlocked it and handed it to him. \n\nFor the next minute, he circled me, the phone flashing and clicking. Then, deliberately, he set it down.\n\n\"It's time to take them off, Zoe. The effect is so lovely, but I think you'll be impressed with the marks it has left. Just relax now; let's do it together.\"\n\nHe was of course correct, for once the red cords were removed, their image remained their place, a pale 3D photographic negative etched into my flesh. My fingers lingered in them, as did his.\n\nGideon picked up my phone again and raised an eyebrow. \"As you were before, Zoe.\" I resumed my standing pose and again Gideon's room was filled with flashing lights as he took photo after photo of me.\n\nMeanwhile, the insatiable device within me continued to tease and torment. I tried hard not to cry. \n\nFinished, Gideon stepped back.\n\n\"OK,\" he said, \"it's time. Where would you like to go from here? Most subs aren't offered the choice, but you and I are in an odd relationship. I promised you an orgasm, adventurous Zoe. How?\"\n\n\"I have a choice? And, er, what about you?\" I could see the tent in his trousers. It fascinated me. I had seen photos, videos, but never the real thing, in the flesh, so to speak.\n\nIt was time.\n\n\"Zoe, you are a remarkably pretty girl. You have also shown a sexual daring, an inventiveness which has not only amazed me, but as you see...\" here he waved a hand over his groin, \"aroused me. And, even more amazing, you did it without seeming a slag.\n\n\"I want you, Zoe. I very much want you holding and stroking me, I want you kneeling in front of me, I want you bent over that table, I want you squealing and bucking under me in my bed.\"\n\nI went scarlet at his bluntness but, unbidden, my hand went forward, stroked his length under the fabric of his trousers. His breath hissed a little.\n\nI let my hand fall away, my eyes falling to the floor again. \"I'm sorry. I... I don't know...\" My ignorance and, dare I say, innocence must have shone through, for Gideon pulled back from my hand.\n\n\"Zoe, do you mean to tell me that you...?\"\n\n\"Yes. I mean No. I mean not yet.\"\n\nBoth eyebrows went up this time.\n\n\"But I think I want to,\" I said, my heart pounding. \"With you. Here. Now.\"\n\nHis face turned serious. \"With me, Zoe - yes, too right. Here? Quite possibly.\"\n\nThen he shook his head. \"But now? I don't think so.\"\n\n\"But why?\"  Dammit!  I was so ready! Weren't Aussie boys always ready?\n\n\"Perhaps I should have said, 'not quite yet', Zoe. To start off with, are you on any form of birth control?\"\n\nI looked down at the floor. \"No,\" I whispered. Inner Zoe smirked -- how could I have overlooked something that obvious?\n\n\"Well, there's a big reason right there. And, despite the positive press, condoms don't always work.\"\n\nI almost started to cry.\n\n\"But,\" he said gently, \"I think we can be sure you leave here happy.\"\n\nI looked down at the floor, not sure what to think.\n\nHe took my chin in his hand, aimed my face at his. \"Zoe, you are not to cum without permission. Do you understand?\"\n\n\"Yes.\"\n\n\"Yes, sir.\"\n\nI nodded. \"Yes, sir.\"\n\nWithin me, the vibrator surged and I bent forward at the waist, unable to hold myself upright. \n\nHis voice cut through the sensations. \"Zoe - sit up! It is not yet your time!\" His hand seized my hair and pulled me upright. My inner Zoe moaned with me. I was a hairbreadth away from orgasm. His hand pulled on my hair, moved my head up to look into his face.",
        "\"Not yet, little one. Not yet. Do you understand?\" He shook my head softly.\n\nI groaned, nodded my head. \"Yes.\"\n\n\"Yes, what?\"\n\n\"Yes, sir.\"\n\nHe retrieved my phone and knelt in front of me.\n\n\"I want your permission to film you cumming,\" he said. \"Something for us to share later.\"\n\nI could barely hear him over what seemed to be a thunderous buzzing from inside me. It wasn't the vibrator -- it was pretty silent. It had to be my system reacting to the whole situation. \n\nI nodded.\n\n\"Good on ya!\" he beamed before placing a large ottoman in the middle of the rug. About a metre square and chair-high, it was covered in brown leather.\n\n\"Take off your heels, Zoe,\" he commanded. \"I don't want holes in the leather.\"\n\nAt his direction, I knelt on the box, my knees spread wide. \n\n\"Put your hands behind your head, Zoe,\" he directed. \"Show off those beautiful cans. And smile.\"\n\nPutting my hands back was easy enough and my boobs were indeed pushed forward. Smiling was harder as the almost-breaking orgasm bedevilled me. I tried however and, when I did so, he began filming me, walking in a slow circle around the perimeter of the rug.\n\nAfter he had made a complete rotation around me, he stopped and squatted down in front of me.\n\n\"Play with them, Zoe. Show the audience how fine-looking they are, what magnificent things of beauty and pleasure. Let the camera see how proud of them you are and how much pleasure they can give you.\" \n\nMy hands came down to cup and lift their weight. The fading-but-still-present rope marks in my soft flesh felt very odd.\n\n\"Play with your nipples, Zoe, but I remind you not to cum until I give you permission.\"\n\nWith thumbs and forefingers, I pulled them, stretched them, rolled them. \n\nI was too close. Raising my eyes, I looked into the camera lens. \"Please, sir, may I cum?\"\n\n\"I didn't quite catch that, Zoe.\"\n\nI continued to work my boobs as I repeated myself, my groin pulsing with desire. \"Please, sir, may I cum?\"\n\nHe looked at me, frowned. \"No, not yet. But soon.\"\n\n\"Reach down with your fingers, Zoe. Spread your lips for me, for the camera.\"\n\nI did so and he leaned forward, capturing my exposed pussy in closeup.\n\n\"You beauty!\" he exclaimed. \"Now, holding your lips apart, I want you to gently stroke yourself, up and down. Keep doing that until I tell you to stop.\"\n\nI traced the length of my pussy with a forefinger, working around the plastic cord from the vibe. Fire sirens were going off inside me. I was pretty sure my eyes were crossed.\n\n\"Stop.\" His voice was sharp, commanding. \n\nA tear of sheer frustration leaked from my eye. I looked up at him to see both pleasure on his face -- and, I thought, admiration.\n\nMeanwhile, the damned vibrator would simply not let me focus. It took all my concentration to not explode in front of him.\n\n\"I don't think I can do this much longer, Gideon. Please, please let me cum!\"\n\n\"Not yet. If I can endure watching you naked in front of me, you can wait, too.\"\n\n\"Please?\"\n\n\"No.\" The refusal was flat.\n\nMy inner Zoe was shrieking with delight. It was this I had been dreaming of, of being dominated, controlled, used for somebody else's pleasure and as an instrument of their sexual will -- and whim. My body protested the torment of overwhelming sensations, my captive mind purred in happy contentment.\n\nAfter a minute -- an endless minute -- Gideon told me to start playing with my clit. \n\n\"Softly, gently, round and round, Zoe. And you are not allowed to cum. This is not for your pleasure, but for mine and the camera's.\" \n\nMy world was comprised of nothing more than sensation now. With a well-lubricated fingertip, I teased, stimulated and circled as much of my love bud as I could reach around that damned vibrator. \n\nI also tried everything I could dream of to hold off against a steadily-building storm of responsiveness. I think my eyes were crossing.\n\nFinally, Gideon smiled from behind the camera. \"All right, Zoe, cum for me.\"\n\nA second later, waves of lightning burst from my clit, rippling out across and along my entire body. My nipples felt like they were on fire. I was exploding, melting, falling into a cloud of incandescent butterflies. It was an ongoing explosion of pleasure - endless, timeless, limitless.\n\nIt went on and on and on. Throughout it, Gideon encouraged me, praised me. His words stoked the fires and pushed me higher than I could ever have possibly imagined. I sobbed as his fingers roved over my breasts and inner thighs, encouraging and fanning my delight.\n\nThis was it. It was precisely this I had been dreaming of all these years -- being controlled, used by a loving, knowledgeable man. The ongoing, onrushing orgasm was amazing, but the mental satisfaction was even better.\n\nI wanted this. I wanted him doing this. It felt right, exactly how I imagined it would be to be dominated. I wanted his hands on me, I wanted to feel owned, I wanted his merciless, uncompromising love.\n\nEventually, it slowed down to the point where I could gingerly pull out the vibrator and, with trembling fingers, turn it off. \n\nGideon picked me up tenderly and carried me to the nearby sofa. He sat down with me on his lap and hugged me lovingly, patting my head, stroking my shoulders and back.\n\n\"You were amazing, Zoe,\" he said softly. \"I'm very proud of you.\"\n\nI had never felt so loved, so cherished, so complete. Never had I felt such purpose in my life.\n\nI noticed a hardness between us, gradually softening. On impulse, I wiggled my bum against it.\n\n\"Stop it, Zoe,\" he said gently. \"There'll be lots of time for that another day. Assuming...\" \n\nI was pretty sure what he meant. \n\nI was willing to make that assumption.\n\nOh, yes.\n\n\"When, Gideon?\" I asked.\n\nHe thought for a long while before handing me my phone.\n\n\"When you are willing to share those photos, Zoe.\"\n\nIn response, I leaned my head on his shoulder. It was enough."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "in a sunburned country event",
        "shibari",
        "self-shibari",
        "vibrator",
        "vibrator walk",
        "bdsm",
        "masturbation",
        "first time"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/zoe-103"
}