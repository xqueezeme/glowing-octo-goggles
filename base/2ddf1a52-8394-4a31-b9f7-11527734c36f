{
    "title": "Succubus",
    "pages": [
        "It was the part of Wakefield Manor where I felt most at home, all green leather, polished oak and the odour of antiquity. The room was cavernous and gloomy even at noon. The walls were covered from floor to ceiling with shelves that groaned under the wisdom of the ages, books far older than the manor itself. The light filtering in through the small windows, set at regular intervals high on one wall, did little to dispel the darkness. It merely softened the ebony into gray and cast a ghostly pallor on the leather bound volumes on the shelves. I didn't mind the darkness. I found it comforting. I always have.\n\nI guess a good library is one of the perks of immortality. I have had a lot of time to grow a collection. I know I should travel light, but I have never been able to resist a good read. Eternity is a long time and I actually marvel at the fact that I haven't picked up more than I have.\n\nThat day, as I paused for a moment at the door, allowing my eyes to adjust to the darkness, I noticed that I was not alone. My eyes were drawn to the soft pool of light in the middle of the room and Benjamin, sitting at one of the tables, his back to me. He was hunched over some volume that was spread open on the table before him and was regarding it so intently that he did not notice my entry.\n\nI don't usually take kindly to strangers rifling through my books without permission, but I was feeling well disposed towards my new acquisition. The poor boy was an orphan and I reminded myself to treat him kindly. Benjamin had never known his mother. She had died giving birth to him. His father, who had been the parish priest of Lumley, a pleasant little hamlet down the road, had recently met with a rather unfortunate accident. A fire broke out in the parsonage and the poor man was roasted alive.\n\nI didn't see the dead body though I happened to be passing by when the fire was finally put out. The constable thought the vision would be too much for my \"delicate sensibilities\" and that I would be quite overcome. How thoughtful of him. But the ones that did see the corpse before it was wrapped up swore that even though his face was like burnt toast, they could tell that his features were twisted with horror. It was as though the priest before he died had come face to face with his worst nightmare. \n\nThey couldn't imagine what that could be, but didn't hesitate to speculate with the morbid eagerness of those glad to be alive. There were some clues at the scene of the accident. In the smoked out ruins of the parsonage were found burnt fragments of ancient parchment. The altar boy remembered that the priest had not been himself lately. His nose had been buried for days in some yellowed manuscripts that he would scarcely abandon even to eat or drink. When the boy's curiosity had gotten the better of him and he had asked the priest what he was reading, the man had looked up with vacant, red rimmed eyes and mumbled something about exorcizing a demon. Fancy that!\n\nWell, he was certainly an eccentric sort of chap. He would fish out a tiny silver crucifix every time I passed him on the street. And the one time that I had gone for confession and he had found me sitting, demurely, in the box, he had run screaming down the aisle and out of the church. It had been beyond embarrassing.\n\nWe did give him a fine funeral nevertheless. The villagers were very generous in their praise and when Benjamin got up to speak, he looked such a picture of angelic innocence with those soft brown eyes and clear brow, that there wasn't a dry eye in the house. While the women sniffled into their lace handkerchiefs, I put my arm around the boy and consoled him.\n\n\"You will need a roof now your father is gone. Will you come home with me?\" \n\nI could feel the warmth of his skin and the slow steady beat of the blood pumping through his veins. I was suddenly impatient for an answer and anxious as to what it might be. He nodded shyly. Everyone looked pleased, no doubt secretly relieved that they would not have to grapple with the question of what to do with the young man. It was all rather touching.\n\n<center>*****</center>\n\nI peered over Benjamin's shoulder to see what had absorbed him so completely. It was an old volume, with pages that were yellow and brittle. But the picture on the page where the book lay open had lost none of its brightness. The colors, almost phosphorescent in their intensity, were undimmed. In my heart, I spoke her name ... Meridiana ...\n\nMeridiana ... sister of my soul. There she was again, resplendent in her nakedness, ... the deceptive innocence of that face set off by the lushness of her body ... the curves of her hips, the firmness of her strawberry tipped breasts, her hair like fire framing her face and the thick dewy lips of her sex. In the picture, her lips were parted, both sets of them, welcoming. Her sex was open like the heart of an exotic flower, pink and wet, a thin sheen of moisture shielding her hungry mouth. Her open wings, a deep scarlet, the color of blood, richly veined and translucent, cast into stark relief the unblemished ivory of her skin. She was planted firmly on the ground, her feet slightly apart, the tip of her tail coiled around one ankle.\n\nI winced at the thought of those lovely curves squeezed into a vial the size of my thumb. I was reminded again of the fragility of our lives and I mourned for us. We, the daughters of Lilith ... so magnificent, so achingly beautiful ... and yet we too were playthings of fate. At the height of her powers, Meridiana had juggled the world in her palms and had had a pope for a minion. Long before he was the King of Christendom, long before he was Sylvester II, Gerbert of Aurillac had been Meridiana's slave, his body captive to hers as she tore helpless little whimpers of pleasure from his throat. She had kept him alive, his soul bound in the web that she had woven. He had had his uses.\n\nAnd yet, on that fateful day, at the horns of Hattin, when the hordes of Saladin met the armies of Jerusalem, her time had come. For us, the battle was a feast, the biggest in a long time. We wouldn't have missed it for anything in the world, Meridiana and I. Death draws us like vultures to carrion and that day, we knew there would be a lot of dying. Our choice of allegiance, as always, was an accident. A quick whispered consultation and we decided to back the moors. Those earnest young crusaders who were streaming out of Europe to defend Jerusalem looked more dishy.\n\nShe was undone by a moment's inattention. She was poised over a prone soldier whom she had mortally wounded. As his life slowly ebbed out of him, she cradled in her palm his thick throbbing cock and drew him into the warmth of her body. He shuddered as she slowly milked him. She was watching his face as the pain dissolved into pleasure and didn't notice a shadowy figure creep up behind her. One moment she was sucking the juice out of her captive and the next she was thrashing about in a small bottle that the wizard who had ambushed her gleefully held up to the light.\n\nHis laughter choked as I whipped off his head, but I was too late to rescue her. Her victim, now denied the comfort of her body, was still alive. His cock was twitching helplessly, glistening in her juices and his eyes were filled with a mute plea, to be engulfed in that warmth again. I took pity on him. My fingers curled around his member and I drew him deep into me until he nudged the mouth of my womb. He moaned as he drowned again in wetness. He was young, scarcely twenty and seemed of noble birth. His armor bore a coat of arms \u2013 a fleur de lis flanked by prancing horses \u2013 that I did not recognize. I held his eyes as I took him. I watched them soften with pleasure that he had believed scarcely possible and then he was gone. And as I claimed what ought to have been hers, I wept for her.\n\nThe vial is a powder blue and sometimes when I take it out into the warmth of an English summer day, the glass darkens as though there were a storm raging within. I talk to her then. I don't know if she can hear me, but I talk to her ... of the things that matter, of a freedom that will come and of how we shall feast again ... together, on the warmth of bodies that are still alive and beating, bodies that wait for the inexorability of our judgment.\n\n<center>*****</center>\n\n\"Beautiful, isn't she?\" I asked quietly, as I placed a gentle hand on Benjamin's shoulder.\n\nHe started and then blushed at being caught admiring with such naked hunger the fetching demon spread across the page.\n\n\"Yes...,\" he mumbled. \n\nYes ... She was indeed. Suddenly, I was swept by an almost overwhelming wave of nostalgia, a hunger to look like that again, to slough off the confines of the shape that I had assumed which was attractive enough I suppose as humans go, but couldn't hold a candle to the glory of our true selves. But I resisted the temptation. The last time hadn't gone too well.\n\nIt had been Sunday morning. The sunlight was filtering in through the bay windows and under the eiderdown where I lay curled, my body sleep heavy, it was warm. The staff were in the kitchen and Lord Wakefield was off with the hunting party who were staying for the weekend. I could hear the baying of the dogs in the distance and the softer snorting of the horses. I was filled by a sense of well being so vast that I felt my body couldn't contain it. I swept aside the sheets, swung myself off the bed, tucked my feet into my fur slippers and shuffled over to the body length mirror on the wall. I turned this way and that, surveying what I saw with a critical eye. Maybe just once, I thought. It had been such a long time.\n\nI felt the familiar tingling in my shoulder blades and at the base of my spine as I became myself, joyously. I flapped my wings experimentally, enjoying the rush of air that cooled my back. Everything seemed to be in order. I hadn't lost my touch. I was so busy preening that I didn't hear the door open. I probably wouldn't have noticed him anyway. The mirror was covered by the soft expanse of spread open wing. I came back to earth when I heard the soft thud of body hitting floor. When I turned around, Lord Wakefield was lying stretched out on the bedroom rug, quite dead. He had come back for his pipe and his heart seemed to have given away at the sight of his lovely wife. Well, I did tell him that his habit would kill him one day.\n\nPity! I had been fond of the old geezer. I hadn't wanted him to go like that. I had something far more colorful planned for him, something along the lines of being loved to death in a long night of passion from which he wouldn't awake. Too late for that now. We laid my late lamented husband in the middle of the dining table. I had an anxious moment when it creaked under his considerable weight. It was Louis XIV and I didn't want it damaged. Husbands come and go, but a well made piece of furniture was another matter. \n\nIt was a very dignified ceremony. I marveled at how death improves a man in the public memory. An interminable line of friends and acquaintances, some of whom I had never seen before, waxed eloquent about how my poor Bernard had been a man of the people and how he had planned vast charitable projects that he was fond of discussing over a pint of beer at the Rooster and how now that he had been cut down in his prime \u2013 never mind that he could barely move under his own power \u2013 his projects would never see the light of day \u2013 here they looked at me quite pointedly and I looked as pointedly away.\n\nThe mourners were a persistent bunch and a steady stream of them flowed through the manor in the days that followed. Some of them reminded me delicately of Bernard's long suppressed aspirations to philanthropy. When I refused to assume any responsibility for what he might have said when his brain was addled by the fumes of what they served at the Rooster, their attitudes underwent a change. The warmth that they professed for Bernard's young widow was replaced by something a little more chilly. It was only quite recently that I had redeemed myself a little by taking Benjamin under my wing ... pardon the pun ... and the great unwashed had begun to warm to me again.\n\nAfter that little episode, I had been a bit more discreet. I didn't think the village would take too kindly to seeing a widow in her wings rather than in her weeds. Not that I was intimidated in any way by this rabble. I was put off, however, by the inconvenience of having to take a few heads off to keep a secret that I didn't want revealed. I was beginning to get used to the comforts of Wakefield Manor. When you are a few thousand years old, you get attached to a good fireplace to warm your bones. One whiff of a demon in residence and every bounty hunter in the universe would descend on the place and the neighborhood would be shot to pieces. I would rather keep things the way they are, dull and quiet, with the monotony broken only by an occasional juicy piece of meat.\n\nI looked down at Benjamin. The boy was still blushing. I wondered how he would react if the picture in his book suddenly came alive before his eyes. The thought made me giggle. He looked at me enquiringly, his forehead creasing in that way that I found utterly adorable. No, I decided, he wouldn't be a good candidate for the full Technicolor, Universal Studios version of the real me. He wasn't Cleopatra. I doubted that anybody could be.\n\n<center>*****</center>\n\nI still remember the first time I saw her ... in the palace of the Pharaohs. It stood in the sea on the island of Antirrhodos off that city of dreams, Alexandria, a city so magnificent that its people believed that its glory would last forever. It has now vanished. It sleeps beneath an ocean, drowned along with the hubris of the men who made it. But on that day, that city and that palace seemed like the center of the universe.\n\nI was on a job. In those days, there was always work for us in Egypt. I had been hired to do away gently with some minor minion who the Pharaoh feared would be a threat to his rule. The mark was a little shrimp of a fellow and I doubt he had any designs on the throne. But then, the Pharaohs were always a paranoid lot. So while I waited for a suitable opportunity to do the fellow in, I entered the service of the Pharaoh as a slave.\n\nAnd there I was one day in a quiet corridor of the palace, whiling away some time, when this baby girl who couldn't have been more than two crawled in. She seemed utterly unfazed by the fact that she was alone which itself was unusual. Privacy was not a strong suite among Egyptian royalty. And she couldn't have been a slave. She regarded me with those large solemn eyes, unblinking. I picked up my duster and desultorily flicked it over the gleaming, black limbs of an onyx statue of Amun \u2013 ra that stood guard in the corridor, but I quickly tired of it. As a matter of principle, I don't work and this was beginning to feel too much like it.\n\nI looked around carefully to make sure that we were alone and then gave her the works, horns, wings, tail and all. She regarded me silently for a moment and then ... giggled. She shuffled forward to touch the glossy membrane of my outstretched wing, which was glowing like a flaming ember in the evening sun. She ran her fingertip along the surface carefully, tracing the path of a vein and when she was done, she looked up at me and laughed again. I think that's when I fell in love. \n\nI don't know where the hours went. She was an infinite source of wonder and I did everything in my power to amuse her. She was particularly pleased when I flapped my wings and would clap her hands gleefully as the sudden rush of air caressed her cheeks. She fell asleep that evening curled up in my arms. That is how they found us, her retainers, who had been searching for her frantically in every corner of that palace which was so vast that a man who strayed in could wander like a lost soul for a lifetime and not find his way out.\n\nI became her little secret. She would sneak away from time to time to be with me. I think it tickled her to have a demon for a slave. And if truth be told, I was also secretly pleased to have a future queen of Egypt for a companion though she couldn't have beaten that confession out of me with a hot poker. As she grew older, I regaled her with stories of my adventures and she would listen, enraptured. Mine had been a busy life and I had a lot to tell, of courage, betrayal, wisdom, cruelty and yes ... of love.\n\nI watched her grow into the woman that she became and I worried for her as the years passed. She seemed so fragile, so helpless ... a delicate flower that would wilt in the first desert wind. But at every turn, she surprised me with her courage and her resourcefulness, her talent for survival. She just would not curl up and die. And for her people, she became Egypt.\n\nAt first, I stayed aloof from the other slaves. I had nothing in common with them. And I thought it more prudent. But all that changed when she discovered one of my more unusual gifts. She had just turned eighteen and to amuse her, I shifted shape in front of her eyes ... into her father, into her brothers and then others, slipping and sliding from one to the next, melting into thin air and being re born into something even more audacious. She watched my dazzling display with growing delight and then whispered slyly, \"I have something I want you to do.\"\n\nWhen I found out what it was, I wasn't overly thrilled. I'm distrustful of anything that can blow my cover and in the long history of bad ideas, this one seemed to hold its own. But already, I was unable to say no to her.\n\n<center>*****</center>\n\nIt was a full moon night. I stood in the shadow of the Sphinx, who still had his nose then, in the middle of a circle of female retainers who reclined on soft silk cushions and were looking exceedingly comfortable. We were protected from view by a barrier of silk tents, whose flaps were billowing in the evening breeze. And beyond that still, to deter any curious traveler, was a circle of eunuchs, their naked swords gleaming in the moonlight.\n\nI was feeling a bit foolish and already beginning to regret having agreed to play my part in that little charade. That night, I wasn't a slave. I wasn't even a woman. I was, to indulge Cleo's frantic imagination, a moor, taut and long limbed. I knew from the glances of approval and hunger that were being cast in my direction that I didn't look half bad, but I still felt too conspicuous for my taste.\n\nA single metallic peal \u2013 of a gong being struck - broke the silence. It had a sense of finality about it, of inevitability. When its echoes had dissolved into the desert night, a small huddle of figures emerged from one of the tents. Four slaves bore a litter on which was laid the naked body of a fifth. She stirred softly on her pallet as she was borne forward. \n\nThere was a smooth cube of stone in the middle of the circle, in front of which I stood, waiting. Its broad surface, which had rings set into the corners, was covered by a thin silk cushion. They lifted her naked body off the litter and laid her gently in the middle of it, her legs dangling over the edge. The golden brown of her body, oiled to perfection, glistened in the light of the torches that had been inserted into metal hoops buried in the stone. Her bearers, with an economy of movement that spoke of long practice, gently seized a limb each. Her arms were drawn upwards, her wrists wrapped in silk and lashed to the rings set in the corners. Her legs were spread almost painfully apart and her ankles encased in their own prison of silk.\n\nShe tugged at her bonds and the muscles along the insides of her thighs rippled as she tested the limits of her captivity. Her bearers had done their job well. After a brief struggle, she subsided. She lay there, open and helpless, the soft mounds of her breasts rising and falling with her breath. I heard her audience exhale a collective sigh of desire.",
        "From where I stood, she looked fetching. A sprinkle of dark curls, now plastered to her skin, framed the slit of her sex, the petals of which were still sealed together. As she shifted slightly and the muscles of her bottom rippled, the tight ring of her anus winked. I could feel my member stir against the silk of my loin cloth and come alive.\n\nThe four bearers who had been standing, still as statues, as their charge struggled futilely against her bonds, now began to stir. One of them walked over to stand behind me, two of them moved to either side of the bound girl while the last stood quietly near her head. They did nothing further. It was as though they were waiting for a signal to begin some ancient rite, for some propitious alignment of the stars. The cool breeze had stiffened her nipples into delicious peaks and a tiny little whimper escaped her lips.\n\nThe flaps of one of the tents stirred and Cleo emerged. She was wearing a long tunic of white silk, held together by a brooch \u2013 a single uncut emerald encased in a delicate cage of gold - tucked away snugly in the valley between her breasts. Her limbs were otherwise bare, with no ornament, but she looked radiant. Her face was actually quite plain \u2013 her nose a bit too long, her eyes perhaps too close, her chin a little too strong \u2013 but for me she was the most beautiful woman in the world. And from the whispered murmurs of awe that fluttered around the circle, I knew that I wasn't the only one who thought so.\n\nShe had a feline grace that compelled attention. It was quite simple actually. She was born to hunt and those simpering women who marveled at the perfection of her limbs - they were born to be prey. As she strode forward, aware of the fifty pairs of eyes that followed her every movement, a tiny little smile tugged at the corners of her lips, a smile that was almost a smirk. And I felt a small stab of pity for the naked girl laid out before my eyes. I knew what Cleo was capable of and I hoped her new plaything would survive the evening.\n\nCleo stood for a moment quietly regarding the naked form spread-eagled on the silk cushion. She gently smoothed back the girl's hair from her forehead and asked her name. The girl's lips were dry and she had trouble speaking. She licked her lips wet before replying.\n\n\"Imi.\"\n\n\"Imi ...\" Cleo echoed, rolling the name on her tongue, tasting it, \"it's a beautiful name.\"\n\nI doubt she thought so, but she was evidently in a mellow mood. It bode well for the girl. And then Cleo nodded ... almost imperceptibly. One of the slaves acknowledged that command with a slight incline of her head and then dipped her left shoulder. There was a soft rustle as her robe slid off her body to leave her naked. It was the first time that I had really looked at her and I realized I knew her ... vaguely. She was a favorite of Cleo's and I was beginning to understand why. I searched in my memory for a name. It didn't help that her nakedness was terribly distracting. She looked delicious. I closed my eyes to shut out that vision and her name came to me. Kiya. I felt unaccountably pleased. I guess I was scrambling for some sense of the normal and the commonplace on that strange night. When I opened my eyes, I saw Kiya lean forward and place her palms on the surface of the rock. And then, she was flowing onto it like water. I marveled at her grace.\n\nShe loped forward on her hands and knees until her face was level with the naked exposed sex of the bound slave. Her knees slid apart as she lowered herself inch by inch over the naked body that squirmed beneath her. She knew the effect that she was having on the young girl. Imi moaned at the vision that now hovered over her face \u2013 the open gleaming sex of the older woman, the lips swollen and parted, the rim of Kiya's hole glistening with her juices.\n\nKiya looked at me for a long lingering moment, a smile playing on her lips and then ... she winked ... before her face dipped towards the heat that was radiating from Imi's core. I watched, fascinated, as her tongue emerged like a sinuous serpent from between her full lips. The pink tip flickered before it softly kissed the tiny fold of skin where the lips of her victim's sex joined. The young girl shuddered at that first delicate touch, so evanescent, like a barely whispered sigh that hovers for a moment in the air and then melts into the wind.\n\nAnd then the pink tip eased forward, gentle and remorseless, parting the folded petals of Imi's sex. When Kiya was done and she lifted her head from between Imi's thighs, I felt a tremor run through my body. Imi had been laid open, not fully, but just enough for the gleaming darkness of her skin to be interrupted by a thin sliver of shiny pink. Kiya looked down at her handiwork for a moment. And then she delicately gripped the soft fleshy wings of Imi's sex between the thumb and forefinger of each hand and peeled her open. \n\nThe young girl wailed as she was exposed. The muscles on the insides of her thighs stood out like cords as she tried without success to close her legs against the eager eyes that drank in every inch of her ... the soft petals of her sex which were spread open by Kiya's fingers, the oyster pink of her secret flesh, the shiny wet pearl that was slipping out of its fleshy hood and the entrance to the mysteries of her body ... so innocent and so inviting.\n\nAnd then Kiya began to feast. She began to lave Imi's wide open pussy with soft strokes of her tongue, carefully skirting the tight little knot of her clit and the entrance to her tunnel, now glistening with her juices. Her tongue patiently learned the geography of Imi's sex \u2013 the thick flesh of her outer lips, the more delicate structure of her inner ones and the soft wet valley in between, until the young girl could no longer bear the exquisite torture. Imi's head strained upwards in a desperate lunge, aching for a taste of the sweet flesh that was poised tantalizingly above her. But swift hands on her shoulders held her down. She was to have no relief, no respite. And I watched, fascinated, as her sex was awakened, slowly, methodically.\n\nImi was now leaking like a mountain spring, her thighs slick and shining. Some of her arousal had dribbled into the valley of her bottom and coated the crinkled rosebud of her anus. Kiya drew back a little from her delicious feast and cooled it with a gentle breath. And then her tongue flickered again, running along the wet rim of Imi's entrance. She licked away the wetness that had gathered there. It was quickly replenished. Kiya probed softly, gently widening Imi's orifice, but careful not to plunge in too deep. I shivered. I knew whose privilege it was to be that night to plunder the soft welcoming depths of that ripe young body. I knew who would stretch open that tight little hole and sink into that wetness.\n\nKiya's lips nuzzled their way back along the wet crease of Imi's cunt until they brushed against the stiff little stem of flesh that was struggling out of its sheath. Kiya gently eased the hood of Imi's clit all the way back with her lips and then softly sucked the engorged nub. The naked body beneath her thrashed, unable to bear this new assault. Soft sounds of pure yearning were dribbling from Imi's lips as Kiya set her on fire.\n\nImi's hips were now churning, her tight little bottom jerking off the cushion as she offered her wet yearning cunt as a gift to those lips that were ravaging her. I could sense her desperation and I willed Kiya on ... to finally break the sweet young body that she was feasting on and to set her free. But it was not to be. Kiya was as merciless as I feared she would be.\n\nHer lips clung softly to the sweet little polyp of Imi's clit without doing more, just trapping her ... in a prison of softness and heat. And then, when even that seemed enough to tip the girl over, Kiya let her go. Imi's clit was now fully exposed, its pink length fat and engorged. Imi whimpered as she was denied the warmth of Kiya's mouth and she was abandoned to the cool evening breeze that swept across the sands. I could only imagine the sweet torment that Imi suffered as delicate fingers of air swirled around her molten core.\n\nAnd then the warmth returned as Kiya softly drew Imi's seething cunt into her mouth ... all of it ... drowning it in wetness. Imi moaned as the new sensations ... of wetness and heat ... set her nerve endings on fire. Surely, I thought, surely now, Kiya would take pity on her. I could see Kiya's lips work as she rolled Imi's flesh inside her mouth, tasting it, teasing it, laving it. Imi's body arched as she climbed towards her release. And then when she seemed poised to shatter into a million pieces, Kiya allowed the sodden flesh of Imi's cunt to slowly dribble out of her mouth. Kiya tugged on the fat outer lips ... stretching them ... before allowing them to snap back wetly against the soft pillow of Imi's curls. The cry that erupted from Imi's throat was no longer human. It was a desperate plea for the torment to end, for the ache to be eased.\n\nBut in that place, there was no mercy. Imi's torture aroused no pity in her audience ... only desire and a hunger that they had by then moved to requite. I glanced around the circle and saw bodies now flung about in abandon. In front of me, I saw a woman, her body taut like a bow, her thighs thrown wide apart, her fingers, glistening with her own juices, plunging in and out of her cunt. Her free hand fondled absently the quivering breast of the slave next to her, who was on her hands and knees, her body given into the keeping of two women who were exploring her hungrily. One of them had plunged three fingers into the woman's sex, filling her, stretching her. The other spread apart the cheeks of the woman's bottom and while I watched, eased open the soft dark orifice of her anus and slowly slid a finger into her depths. I shuddered at the sight and looked away, only for my eyes to light on the vision of Imi's cunt, now split open like an over ripe fruit. I felt myself thicken, my swollen member now thrusting urgently against the soft silk of my loin cloth. \n\n\"She's ready,\" I heard Cleo whisper and Kiya slid smoothly off the stone. Imi was once again alone. She looked heartbreakingly vulnerable, unable to conceal her desire or to close her body against a world that was ready to claim it. I felt a rush of protectiveness, but mixed with that was a hunger that I could no longer deny. I wanted that sweet cunt. It was simple, utterly elemental.\n\nBehind me, I heard the soft rustle of silk. And then the warmth of a naked body molding itself against mine. A husky voice whispered silkily in my ear ... \"I'm Amunet\" ... and then slender arms reached around me to whip off my loin cloth. A collective gasp rippled around the circle as I was unveiled. I was hard. My cock, long and thick, trembled with need. A thick drop of liquid had gathered at its tip. When my cock twitched, it dropped, drawn earthwards by its own weight, melting into the golden sand.\n\nShe pressed herself against me, the stiff peaks of her nipples burning into my skin. The damp curls of her pubes insinuated themselves into the valley between my cheeks as her fingers wrapped around my length. They wouldn't go around. Amunet moaned as my cock pulsed like a heartbeat against her palm. Kiya grabbed a fistful of Imi's hair and jerked her head upwards so that she could behold her fate. Imi ran her eyes down my nakedness and then as her glance drifted down to my waist, her eyes widened. A soft little moan escaped her throat \u2013 half gasp, half gurgle. There was fear in it, but also desire and the raw, aching need of a body that she had long ceased to control.\n\nAmunet gently dipped the tip of my cock into the wet warmth of Imi's cunt and began to work it, up and down, round and about, painting her flesh with my need. She was driving us both crazy. My hips had begun to jerk of their own accord, my body seeking the warmth of Imi's. And she seemed to want the same thing \u2013 to engulf me in her flesh. Her hips had risen off the stone, her wet inviting entrance blindly seeking its fate. Amunet giggled softly at Imi's desperation. The soft tinkle of her laughter sounded out of place. It grated against our need. But it still turned us on.\n\nAnd then as our bodies ground together, the tip of my cock caught against the slippery rim of her hole and held. Imi froze, terrified that any movement would dissolve that fleeting promise of relief. I eased forward gently and as I did, the rim of her orifice draped itself softly over my tip. She felt like warm wet silk. I paused for a moment to take a deep breath. I wanted to take her slowly, to ease, inch by inch, into that velvet glove. But I knew that would be unkind. I had to take her quickly. I had to fill her with my flesh before she could even sense the pain.\n\nI felt Amunet's palms cup my buttocks gently as my muscles tightened. And then I thrust forward, driving my diamond hard flesh into Imi's soft yielding one. Her body jerked as she was impaled. And then I began to fuck her, slowly, deliberately, mercilessly. My nostrils dilated at the heady scent that wafted up from the junction of our bodies, a scent like no other - of sweat, of blood and the sweetness of her juices. \n\nThe soft mounds of her breasts quivered with each thrust. Her eyes had rolled back in her head and her lips were softly parted, tiny little noises leaking from them as she was taken. I was filled with a wild sense of exhilaration as I plundered the sweet young body that had been laid open for me. I felt my body begin to throb, its edges blurring as I fed on Imi's pleasure. My flesh began to ripple inside her, kneading the muscles of her cunt. For Imi, it was like the sun had been plucked from the sky and thrust between her legs. She gasped and her body stiffened as it finally raced towards its release. \n\nI felt a slender hand curl around my neck. When I turned my head, I saw that it was Kiya... with that enigmatic smile on her face. She leaned forward to kiss me softly and then I saw her fingers reach into the wet marsh of Imi's cunt and delicately tease the throbbing stem that quivered between the folds. Imi screamed. And then shattered, her body jerking in its bonds as she was seized by a pleasure that she could scarcely understand. \n\nI rode out the storm patiently, waiting for her body to quieten, before taking her again, my body coursing in and out of her. Her hips responded and she danced for me, seeking, clutching, squeezing. I looked up and met Cleo's eyes. She looked pleased. She flashed me a quick smile of approval. She held my gaze as she slowly, deliberately reached up to pluck away the brooch that held her tunic in place. And then she was naked.\n\nShe stepped up to the stone slab and placed a cool hand against Imi's cheek. The young girl looked up at Cleo and moaned her hunger and the joy that was rippling through her body at that exquisite taking. And her eyes widened at seeing Cleo naked. She watched as her queen was raised onto the slab beside her. She watched as her queen straddled her head, smooth muscled thighs on either side of Imi's face. Cleo slowly lowered herself. And then Imi's universe was blotted out by wet flesh and the lingering scent of pussy juice. Her world narrowed into the taste of her mistress and my flesh thrusting in and out of her cunt.\n\nImi's tongue emerged from between her lips to bathe Cleo's clit, to worship it, to woo it. A soft little sigh escaped from Cleo's lips as her body arched and rippled to contain the waves of pleasure that were beginning to radiate from her center. And yet, even in the throes of her passion, Cleo was gentle with this girl who was serving her so eagerly. Cleo's hands cupped Imi's breasts softly and her thumbs grazed her nipples, stroking her. I think it was that tenderness that tipped me over, the vision of a queen treasuring the compliant body of her slave.\n\nAmunet sensed that I was near. Her fingers curled around the base of my shaft and she pulled me out. She held my slippery length, cradling it as I exploded, painting Imi's body with the creamy rivers of my release. The last jets landed softly on the open flower of Imi's cunt and trailed downwards along the rim of her spasming hole and into the crack of her ass. The two slaves who had been waiting patiently by Imi's side now leaned down and their tongues trailed over Imi's body, washing her, cleaning her. One of them gently pried Imi's cheeks apart and ran her tongue into the crease, swirling her tongue around the darkness of her forbidden core, tasting my spend. She ignored Imi's muffled protests which were drowned in the wetness of Cleo's cunt. For Imi, the night was far from over. But for me it was.\n\nAmunet held me still, her fingers squeezing the last drops of cum from my still rampant cock. Her body was still glued to mine, her cheek resting against my shoulder, \"Come to me tomorrow,\" she whispered urgently, \"Find me ... in the quarter of the slaves.\"\n\n<center>*****</center>\n\nI closed my eyes and drew in the scents of the palace. It was a busy, exotic mix and in it ... somewhere ... was Amunet. I followed the warm fragrance of her body and found her in a quiet corner, in a sheltered alcove that overlooked a pool with water lilies. She turned when she heard my footsteps. \n\nThere was no need for words. We plucked at each other's robes with trembling fingers until we were naked. I was already hard and she ... she was already wet. I cupped the warm, fleshy globes of her bottom and lifted her upwards. She rose with me and wrapped her slender legs around my waist. My cock sought the wet warmth of her and she groaned in frustration as I missed her entrance, my velvety tip skating along her crease. She willed herself into stillness, holding her breath as I fumbled and then, I was inside her.\n\nI moaned as I was enveloped in her warmth, my hard throbbing flesh soaking in her juices. And then I began to fuck her. I lifted her almost free until only the tip of my shaft was buried inside her before I let her go. Her flesh slapped against mine and she moaned as my cock nudged the mouth of her womb. As she fell, her throbbing clit painted a hot furrow along the length of my shaft. She wrapped her arms around my neck as she rose and fell, her hips driving frantically, almost as if she were trying to swallow me whole. But she was tiring, the movements of her hips becoming more ragged.\n\nI turned around and backed her into a wall, pinning her body. Now I had more purchase. I pulled as far back as her legs locked around my body would allow and then I drove my hips forward, skewering her. She grunted at the impact and her eyes snapped open. I held her eyes as I fucked her and reveled in the pleasure that I saw in them ... the pleasure and ... the gratitude. I could see how hungry she was ... to be owned, to be used. \n\nWhen her eyes began to glaze over, I knew she was close. I reached beneath our coupling bodies and drenched my fingers in the juices that were dripping from her cunt. And then, I placed the wet tip of one forefinger against the crinkled star of her anus and pushed. As I slid into her tight passage, she shuddered. Small, mewling noises were dripping from her lips. When my finger began to move, fucking in and out of her tight little bottom, she finally broke. Her body spasmed, her muscles milking my cock and the finger trapped in her ass. There was a scream bubbling up from her throat. She killed it ... by burying her teeth in my shoulder. She bit down until the skin broke. My nostrils trembled at the sharp scent of blood and I battled the images that bubbled up to the surface of my consciousness \u2013 the clash of arms, the fall of kingdoms, death in myriad forms and shapes.\n\nThe sharp stench of death sharpened my need and I pounded the soft wet tissues of her cunt, which were already rippling in the aftermath of her release. She held on desperately as she was claimed. I could smell her fear. But it was mixed with exhilaration. The promise of violence that rippled just beneath the surface of my skin and the sense of being gripped in the vortex of a force that she could not control only sharpened her pleasure. And when I finally yielded, thick jets of cum splashing against her soft spongy walls, she came again.",
        "For a long time, we remained joined, our foreheads touching as we reclaimed our breath. My cock was still twitching inside her. Soft little shudders ran through her as it did. Finally, when our hearts had stopped pounding, I lifted her free and laid her gently on the stone surface of the alcove. Her body was bathed in sunlight and she stretched languorously, like a cat. She was beautiful, her lips blood stained, her breasts rising and falling gently with her breath, her thighs splayed apart, my cum leaking from her bruised, swollen cunt. I had to fight the urge to take her again, right there, right then.\n\n<center>*****</center>\n\nA light evening breeze was blowing across the water, cooling the light sheen of sweat that sparkled on our bodies. I was back to playing slave again. Actually, I was quite relieved. I had been getting a little tired of this whole moor thing. Cleopatra was looking pensive. She had something on her mind. I could tell. After a few minutes of gazing absently across the Nile, the lines of her chin tightened as though she had made up her mind about something.\n\n\"I saw the two of you,\" she said suddenly, turning to me, \"you were like animals.\"\n\nAt first, I thought she was displeased. And then, I saw the longing in her eyes, a longing that her pride wouldn't allow her to express. I leaned forward and planted a soft kiss on her lips, barely a flutter. She didn't move away or protest. As the sun dipped below the horizon, our kiss deepened. Her lips parted and she let me in. I explored her mouth, slowly and patiently. And as she moaned her desire, I parted her robe and softly cupped her mound. She was warm and moist. I dipped a finger between her swollen lips to find her weeping entrance. I paused for a moment before plunging my finger deep inside her. She rose up to meet me.\n\nI added a second finger and a third until she was full. I sipped her moans from her lips as I took her. When she came, her thighs snapped shut, trapping my fingers inside her as though she couldn't bear to let me go. I cradled her body as she shuddered. When I withdrew my fingers, they shone in the half light, draped in her juices. I raised my fingers to my mouth and licked off the wetness. She blushed and her thighs fell apart. I knew what she wanted.\n\nI moved around to kneel between her open thighs. I placed my palms on the insides flattening her knees against the cushion before swooping down into the wet heat of her cunt. As I slowly drew her heated flesh into my mouth, she moaned and her body arched. I gratefully accepted that offering. I drank from that spring for what seemed like hours as her fingers played in my hair. I don't remember being happier in my life.\n\nThere is no justice in this world. She ought to have been one of us. She had the heart of a demon. She had a taste for power that was utterly amoral and she shared our abiding interest in death. She always fed me well. Her Egypt was a violent place. There were always captured soldiers or guilty conspirators who had to be dispatched. I was an entertaining way to do it. She would recline beside our coupling bodies and watch their faces intently as I slowly drew their life breath out of them. It was as though she yearned to know where they were going. That was not a question I could answer. I merely tore the souls from their bodies. I had no inkling what awaited them on the other shore.\n\nShe did not have long before she found out. She died as she lived, alone and unafraid. I was sorry to see her go. And for some time, I hatched grand schemes of vengeance. Octavius was beyond my reach, but his soldiers were easy prey. So I thinned their ranks. Given enough time and patience, I might have wiped out the Roman army in Egypt and then perhaps, history would have looked a bit different.\n\nBut as things turned out, I tired of a diet of Roman meat. They were disgusting. They smelt like they hadn't had a bath in years, an offence that my nose, which had become accustomed to the finest perfumes of the ancient world, couldn't bring itself to bear. And then, I was called away by a spot of business in the Han empire. There was this courtier that the Empress Dowager disapproved of. That was one lady you definitely didn't want to cross.\n\nIt was a welcome change. The mark was nice ... and sweet smelling. Actually, he was a great deal more than that. He was cultured and refined, the sort of chap who could recite poetry in his cups. And he knew how to treat a lady right. He was polite and courtly. He knew he had to deserve my body. It was not to be taken. It was to be freely given. We spent a wonderful evening in the courtyard of his mansion. We sat in the shadow of a stand of pine. The air was heavy with their scent and the liquid notes of a lute. I couldn't see the player, but I imagined it was a woman. There was something unmistakably feminine about its melancholy. Periodically, tiny portions of food materialized on the low table in front of me. He had trained his servants well. They were like ghosts in their discretion. By the time he led me to his room, my body was singing with a sense of well being I hadn't known in a long time.\n\nIn the flickering lamplight, his body was smooth and clean like alabaster except for the thin pink-lipped scar that ran across his back, a gift from some clumsy assassin. I ran a careful fingertip along its length as he rocked inside me. He died well, aware of his fate, calm and clear-eyed. Then I did something that was unusual for me. I took his short-sword as a souvenir. I wanted something to remember him by.\n\n<center>*****</center>\n\nWhile I abandoned my plans for revenge, I did pay Cleopatra a small tribute. A few hundred years later, in a sun-drenched studio in Naples, I sat for Massimo Stanzione as he painted his Death of Cleopatra. Of course, I didn't look even remotely like her. I was a renaissance ideal, with the face of an innocent girl and the voluptuous body of a mature woman, with curves that could block the view. But I had no choice. In the medieval art market, Cleo's sleek feline grace would have had no takers.\n\nWhen I saw the finished canvas, tears sprung to my eyes. It had an arresting beauty that was almost otherworldly. The asp clung ... tenderly ... to one rosy nipple. A single drop of blood dripped, thick and oily, down the slope of her breast. Her body was soft and sensuous and naked except for the velvet drape that was tossed coyly across her hips. Massimo had painted a dying woman who aroused not pity, but desire. You almost wanted to claim her while she was dying, to savor the last remnants of life that remained in that magnificent body. Cleo would have liked that.\n\nI was seized by an urge to absorb into myself that man who had conjured so much beauty out of a few pots of paint, but I fought it. I wish I hadn't. He would have died a beautiful death in my arms. As it turned out, he died a few years later of the plague, his body wracked with pain and covered in pestilent sores.\n\nThat painting, like so many other things, passed out of my life, until quite recently, when my own special set of skills was sought to settle a small squabble between two oil barons in St. Petersburg. The issue was resolved to everyone's satisfaction except possibly for the fellow who was reclining in a coffin in the nave of the Cathedral of the Resurrection. I like my work treated with respect and my victims to have a fitting end. This particular service had been beautiful. I wept as the music, at once tender and terrible, rolled around that church like waves. As the last note lingered in the air, reluctant to be claimed by silence, I rose from the pew and walked out into the sunlight.\n\nIt was a glorious day and I realized that I had some time to kill. So I went to the Hermitage and stood once again before Massimo's canvas. Its beauty was still undimmed. I remembered the little girl who had captured my heart by refusing to be afraid. And I found myself smiling. Distance had dulled the pain. All that remained was the celebration of a life that she had, by sheer will, made extraordinary. When I left, there was a spring in my step.\n\n<center>*****</center>\n\nI must have been gone a long time. When I emerged from my reverie, Benjamin's forehead was creased with concern. I smiled at him and gave his shoulders a reassuring squeeze. His muscles were a bundle of knots.\n\n\"Hmmm...\" I murmured, \"we need to do something about that.\" \n\nI leaned down to whisper softly in his ear.\n\n\"Would you like me to work those out for you?\"\n\nI didn't give him time to ponder his options. I took his hand and headed off purposefully in the direction of my little spa. Wakefield Manor has its compensations. \n\nHe stood in the middle of the room, awkward and unsure.\n\n\"Here,\" I said as I tossed him a towel, \"Get into the sauna. I want your pores nice and open when I work your muscles.\"\n\nHe held the towel in his hand, uncertain. I wasn't going anywhere and he was glancing around the room for a place to change. He finally trotted off in the direction of the sauna. He pulled the door behind him and as I watched in growing amusement, his clothes began to emerge, one after the other, through a crack in the door until there were evidently none left. I pulled a bell cord ... Ah, the English know how to live ... to summon Imelda. While I waited for her to arrive, I stripped off, dropping my clothes in a pile on the floor.\n\nI saw her eyes run over my naked length before she walked towards me. I held my arms out to my sides as an invitation. She picked up a towel, wrapped it around me and knotted it above my breasts. As she tucked the end of the towel into the valley between my soft mounds, the pad of her thumb grazed my skin and I felt her breathing quicken. As I strode towards the sauna, I glanced over my shoulder at her. \n\n\"I want some oil waiting for me when I come out.\"\n\nHe was surprised when I walked in. I flashed him a bright smile and settled on the wooden bench opposite him. As I threw my head back and closed my eyes, my robe fell open. I knew exactly what he would see. My thighs were slightly parted and the soft triangle of my pubes was visible. His eyes would travel upwards along the planes of my stomach until they lighted on the gentle slopes of my breasts and the melting brown of my nipples, which peeked coyly from the edge of the towel. I heard his sharp intake of breath and suppressed a smile. I wondered if he was already hard. Yes, I decided, I would put my money on it.\n\nThe heat was delicious and I caught myself drifting off to sleep. That wouldn't do, I thought dreamily. After about twenty minutes, I finally shook myself out of my lassitude and got up. He followed me as if on cue. Imelda was waiting, tray in hand, a delicate bowl of blue porcelain balanced on it. I led the way towards the massage table in the middle of the room. It gleamed darkly, its mahogany weathered by years of use. When I reached the table, I turned around, unknotted my towel and dropped it to the ground. His eyes almost started out of their sockets.\n\n\"It gets in the way,\" I explained sweetly. \n\nHe stood there frozen, a couple of feet away from me. It began to look like we would be spending all eternity trapped in that tableau. \n\n\"Take yours off,\" I added helpfully.\n\nAlmost mechanically, he reached for the towel at his waist and took it off. I heard Imelda moan softly as he was left naked. He was so hard the veins on his cock looked like they were on the verge of bursting.\n\n\"Lie on your stomach,\" I whispered. My voice came out husky.\n\nAs he clambered on, I quickly slid a pillow under his hips to make room for his throbbing shaft. He looked delicious, his tight little ass raised up, his balls swollen and his cock flat against the cushioned surface of the table. I dipped my fingers in the oil. It was pleasantly warm, just the way I like it. I began at his shoulders, slowly kneading the tightness out of his muscles. He moaned as my fingers worked, luxuriating in the unfamiliar feel of a woman's hands on his body. I'm sure it also helped that the woman in question was naked and that my breasts were bouncing softly as I worked on him. I smiled to myself. I would give him a great deal more to moan about.\n\nAfter I was done with his back, I moved to his legs, running my palms along his hard muscled thighs, his calves and his feet. I had carefully avoided that delicious looking derriere and he was getting restless. Finally after what must have seemed to him an eternity, I stopped near his waist and took each cheek in the palm of a hand. I slowly rotated the flesh, squeezing the half moons of his buttocks together and then pulling them apart, exposing the soft crinkled lip of his anus.\n\nWhen they were gleaming with oil, I used the fingers of one hand to carefully prize apart the cheeks of his ass. He was now deliciously exposed. Then, I dipped the thumb of my other hand in warm oil and rubbed it in soft circles along the rim of muscle that guarded his opening. He groaned at the sensation and his hips jerked off the pillow, unconsciously offering me his bottom to ravage. I was tempted for a moment to sink my oil slick thumb into his tight little hole and open him up. But I resisted the temptation. I sensed that it would be too much for him to cope with. His cock was leaking pre cum and I knew it wouldn't take much for him to shoot his cream all over the vinyl surface of the table. It wasn't time for that yet.\n\nI released his cheeks, letting them spring back together and then whispered, \"Roll over.\" He didn't seem to hear me the first time. I had to repeat myself a little louder before he finally obeyed, almost as though he were in a trance. There was a look almost of panic in Imelda's eyes as they fell upon the pillar of flesh that rose from Benjamin's waist. His cock was jerking, the head soaked in pre cum. I ignored it and began again at his shoulders. As I proceeded patiently down his body, there was an expression almost of disbelief on his face. His hips were surging, rising and falling like the crest of a wave, his cock swaying and bouncing. He couldn't help it.\n\nFinally, there was no skin left to cover except his trembling length and the tight swollen spheres of his balls. I hefted the cum-heavy orbs in the palm of one hand and gently rolled them. He moaned, his fingers scrabbling helplessly on my breasts, his nails softly scoring my nipples. I decided to put him out of his misery. When I trapped his cock in the prison of my fingers, he sighed softly and began to move, seeking some relief from that swollen ache that was driving him insane.\n\nIt was a relief that I denied him. My hand moved with the rhythm of his hips, offering him no friction, just the comfort of entrapment. It wasn't enough to make him come. Imelda's eyes were locked on his engorged cock and a thin line of sweat had formed on her upper lip.\n\n\"He's beautiful, isn't he?\" I teased her. She shook herself out of her trance and glanced up at my face. Her eyes were vacant. I knew she was still seeing in her mind's eye Benjamin's cock, proud and erect, wrapped in my oily fingers.\n\n\"Do you want to watch him spurt?\" I asked her, my voice half mocking. \n\nShe looked at me, confusion writ large on her face.\n\n\"Do you want to watch him spurt?\" I repeated and then added, on a whim, \"You get to decide whether he comes tonight.\"\n\nBenjamin groaned and his eyes met Imelda's across the table. There was a desperate plea in their depths. I was beginning to enjoy this.\n\n\"Yes,\" she croaked.\n\n\"Yes what, darling?\" I asked.\n\n\"Make him come,\" she groaned and then added, a hungry edge to her voice, \"Make him spurt.\" She almost spat out the last words.\n\nI decided to oblige. My hand began to move. I gently milked his cock, my palm traveling from the base to the tip, to be replaced by the palm of my other hand. I set a rhythm that I knew would drive him mad, his cock, now glistening with oil, passing through my hands by turns. His face was a mask of concentration, his forehead furrowed, as he poured every ounce of his being into scrambling up that peak to blessed release. Imelda seemed to have stopped breathing. When I was sure I had their attention, I placed the flat of one palm against his belly, flattening his body against the table, and then milked him with my other hand with three sharp swift strokes. He exploded, great gouts of sperm splashing on his body. I continued to fist him until he quietened and he had nothing left to give me.\n\nI released his softening prick and picked up a wet towel to wipe my hands on.\n\n\"Clean him up,\" I said, matter of factly. Imelda, who was still standing there, open mouthed, drinking in the sight of Benjamin, drenched in his own cum, seemed to snap out of her trance when she heard those words. She slowly wiped her forehead with one hand before she stepped gingerly on legs that seemed unsteady towards the naked body that lay splayed across the table. She gently gripped his still swollen cock and squeezed. She moaned as a thick dollop of cream oozed from the tiny lips. She leaned forward, seemingly on impulse, and drank the salty discharge. His body shuddered as she sipped. I turned away, smiling. It looked like she was enjoying the little task I had given her.\n\n<center>*****</center>\n\nThe next morning, I was already at the breakfast table when he emerged. My eyes smiled at him over the rim of my coffee cup and he blushed. I like shy young men. And this one was adorable. But I wasn't in the mood just then for light conversation and awkward silences. Anyway, he seemed to be well looked after. Imelda was clucking over him like a mother hen. I retreated to the library. There was an obscure little counter spell that I had been hunting for a while which was rumored to render a sorceror speechless. Not that there were too many bonafide sorcerors left, I thought wistfully... Life used to be more of a challenge in the old days.\n\nThe truth is that I just needed some excuse to withdraw. The library is my refuge. It is where I flee from the world. A few hours with some ancient manuscript that has passed from human memory and I feel admirably restored.\n\nThat day, the hours passed quickly. It was already dusk before I knew it. I nudged aside the remains of the lunch that Imelda had brought in some hours ago and stretched. Maybe it was time, I thought ... time to feed. My blood tripped joyously through my veins at the thought of Benjamin. I was greedy ... for his youth and his innocence. I could feel my sex grow moist at the image of his naked body spread out like a feast. Yes, I thought, squeezing my thighs together, it was definitely time.\n\nI changed into a long flowing robe of cream silk. I thought it set off my skin rather nicely. It was late and the house was quiet. I guessed that Benjamin must have turned in. I walked quietly through the corridors of that house. Benjamin had his bedroom in the East wing of the manor and it was some distance from mine. The moon was full and even though the corridors were not lit, it was easy enough to see by its silvery glow.\n\nAs I neared Benjamin's room, I saw a shadowy figure slip through his door. My initial reaction was one of concern. But it was quickly replaced by curiosity. I doubted there was anyone in the manor who wished him ill. The door was slightly ajar and its edges were softened by the light that filtered out from the room. I placed my eye against the crack and was met by an intriguing sight. Imelda stood next to the bed on which Benjamin lay asleep. And as I watched, she clutched the hem of her dress which was so short it barely covered the curves of her bottom and pulled it over her head. Her hair caught in her collar briefly before she tugged the dress free.\n\nShe had her back to me. I had never really noticed how beautiful she was. Her skin was the color of honey held up to sunlight. Her lines were soft and my eyes were drawn to the ripe curves of her buttocks and the tantalizing gap in the junction of her thighs where her pussy nestled, warm and waiting. I could already sense her arousal. In all the time that I had stood there, she hadn't taken her eyes from Benjamin. I remembered that there was an alcove to the right of the door, which was shielded by a curtain.",
        "I quietly slipped into the room and into concealment. Benjamin was asleep, the covers drawn to his chin. She stood there for a while just looking at him. She reached out and tousled his hair before gripping the edge of his quilt and pulling it away. He awoke with a start, but before he could raise an alarm, she held her fingers to his lips, quieting him. His body relaxed when he recognized her and he settled back onto the sheets.\n\nShe sat next to him on the bed and gently placed a palm against his cheek. He nuzzled it. She let him for a while and then her palm drifted downwards over his chest, the flat planes of his stomach and into the dense forest of his curls. His cock was awake and when her fingers wrapped around his length, he moaned. She fisted him without preamble until his hips began to jerk and his tight little bottom began to churn on the sheets.\n\nShe clambered onto the bed then, straddling him. She gripped his cock in one hand while she parted the lips of her cunt with the other. She aimed his swollen shaft at her entrance and then sank downwards, swallowing him. He groaned as he was sucked into her velvet heat. She placed her palms flat on his chest and then began to move her hips, rising and falling on the column of flesh that she had imprisoned in her body. From where I was, I could see the way his thickness distended her hole; the way his cock, now wet with her juices, glistened; the way her anus tightened and released in turn as she rose and fell. His body thrashed as he was used, but she had him pinned down. It was unbearably erotic. \n\nThe end was not long in coming. He shuddered softly and then his body went rigid. His toes curled and his back arched, as she sucked his essence out of him. She held still as he spurted, her loins glued to his. When his breathing finally quietened, she slowly lifted her body off his. His cock was slippery from a mixture of their fluids. She got on all fours between his parted thighs, her ass in the air, the swollen lips of her cunt cum-smeared. Her face dipped downwards and she began to lick him, her tongue running languorously up and down his still swollen length. His body quivered with each lick. She didn't stop until he had softened and his cock lay spent along his thigh. She crawled forward then to kiss him on his lips, letting him taste her and himself.\n\nShe seemed reluctant to let him go, but she finally tore herself away. She pulled up the coverlet and tucked him in. She seemed for all the world like a mother with her child, gentle and solicitous, except for what I had witnessed, that desperate frantic coupling. When she was done, she pulled her dress over herself and tiptoed out of the room. He was already asleep.\n\n<center>*****</center>\n\nI waited for a few seconds in my hiding place and then followed her at a discreet distance. I trailed her down the winding stairs into the basement where the servants had their quarters. On the way, I snatched off a wall the short sword that I had taken for a souvenir all those years ago. She stopped in front of a door of rough hewn oak. She bent over the lock, struggling with the key that she had fished out of a pocket and finally managed to work it loose. She pushed open the door and stepped through. It was when she turned around to close the door behind her that she saw me. I was already at the threshold.\n\nShe started back, fear grappling with guilt in her eyes. She kept backing up as I strode forward until her bed nudged the back of her knees and she had nowhere to go. She was scanning my face for some hint of what I proposed to do. But my eyes revealed nothing. I tossed the knife onto the bed, not taking my eyes off her face. I could see that she was beginning to panic, her eyes now flitting between my face and the knife that lay on the sheets. It had a quiet menace that dwarfed anything that I could possibly say. \n\nShe seemed to be holding her breath and I knew that it would come out as a scream. I didn't want her waking up the household help, at least not yet. So I leaned forward and covered her lips with mine. Her first reaction was one of shock. And then she melted into my arms, her body pressing itself against my own. I ran my palms down the planes of her back and over her derriere, savoring the softness and the resilience of her flesh. I pushed one knee forward and she yielded, trapping my thigh between her own.\n\nAnd then, she began to grind her crotch into the hardness of my thigh as I drank from her lips. I wondered at her hunger and then it struck me. I leaned forward a little and nuzzled her ear.\n\n\"You didn't come, did you, my little slut?\" As I poured the words softly into the shell of her ear, she moaned her answer.\n\n\"Do you want to come?\" I persisted.\n\n\"Yes,\" she whispered, her voice barely audible, \"Oh, God ... yes.\"\n\n\"Do you want me to make you come?\"\n\n\"Yes,\" she murmured, \"please ...\"\n\nI could feel the soft pulp of her cunt through the thin barrier of silk as she rutted against my thigh, her body a slave to her hunger. If she kept that up, she would come soon enough. But I had other plans for her. I stepped away from her, gripped the thin cotton of her dress in one fist and ripped the garment off her body. When she was naked, I slipped the silk robe off my shoulders and let it sidle to the floor. She moaned as my body was unveiled.\n\n\"You are beautiful,\" she whispered. She had a hungry look in her eyes. She looked like a wolf after a lean winter. Her lips parted in a soft sigh as she reached for my breasts. I grabbed her wrists before her hands could reach their destination.\n\n\"I didn't say you could have me,\" I said quietly. She looked disappointed, but didn't attempt to defy my diktat. She knew better than to do that. \n\nI placed a palm on her chest and pushed, tipping her over onto the bed. She lay there sprawled, her hands loose by her sides, her thighs flung wide open. The halo of curls that framed her cunt were wet, matted with her juices and Benjamin's. Her body was an open invitation, one that I intended to accept. I lay down on my side next to her, my head propped up on one arm. Her darker skin was a beautiful counter point to my pale one. I imagined how we would look, our limbs enmeshed, and shuddered.\n\nShe was looking at me questioningly. She was aching for me to begin. I placed a palm gently against her cheek and turned her face towards mine. Her lips parted, eager to receive me. I captured her lips between my own and gently sucked the sweet flesh. The flavor of her juices merged with the sharper tang of his cum to make an exotic mix. When I finally let her go, she was panting.\n\nI ran a soft trail of kisses along her skin before dipping my tongue delicately into the soft hollow at the base of her throat. My tongue swirled in the pool of sweat that had gathered there before resuming its journey. I drew a wet line along the deep valley between her breasts before capturing one nipple between my thumb and forefinger. It was stiff and puckered. When I twisted it gently, she groaned. I could see that she was restless. Her thighs were opening and closing of their own accord and her fingers were tugging at my hair. I knew what she wanted.\n\nMy lips nibbled their way up the slope of her breast and seized her other nipple. I was gentle with her. I sucked her engorged peak softly, patiently ... wetting it. And then I began to run the flat of my tongue along its wrinkled surface in long greedy strokes. Soft little noises were bubbling from her throat. They were gibberish, but I knew what they meant. They were the unmistakable sounds of a woman begging to be fucked.\n\nAnd then I bit into her softly. She moaned as I shook my head gently, worrying her captured nipple like a dog would a bone. She held her breath as I slowly drew her flesh out, letting her feel the edge of my teeth. Even after I let her go, I was still connected to her by a thin silvery thread of spit that stretched and then finally broke, snapping back against her bruised skin. It was time for more.\n\nI worked my way around her body to kneel between her thighs. I slid a thick pillow under her hips, raising her up. I wanted her to be able to watch as she was taken. Her lips, thick and engorged, were sealed shut from Benjamin's juices. He was smeared all over her. Even her thighs were stained with his cream. She looked delicious. There is nothing more beautiful, I thought, than a woman who has just been fucked. For a moment, I considered delicately flicking her open with my tongue. But I somehow had the notion that she would prefer something a little more brutal. So I plunged my thumb into her wetness and sliced upwards splitting her open. She was raw and swollen from her little encounter with Benjamin. Her tight little hole was stretched open and he was still bubbling out of her.\n\nI couldn't wait any longer to taste all that lovely meat. I dipped my head, opened wide and sucked the wet, cum soaked flesh of her pussy into my mouth. She wailed and her hips shot up off the sheets, but I held on. As I rolled her flesh in my mouth, my tongue washed her clean. Her breath was now coming in ragged gasps and I knew she was very close. I wanted to be inside her when she came.\n\nWhen I released her, she mewled like a kitten that had been denied its cream. But she didn't have very long to mourn her loss. I buried my tongue in her tunnel. There are times I particularly enjoy having a prehensile tongue. This was one of those. As it laved the walls of her pussy, my tongue lengthened until it was licking the mouth of her womb. She gasped in disbelief as she was stuffed with pulsing, slithering tongue. Her body was shaking and her fingers were clawing the sheets, drawing them up into sweaty clumps. And then she began to come in huge spasms that clutched at my flesh, squeezing it, milking it, hugging it. \n\nI rode out the storm and when she had calmed down, I emptied her. The rim of her hole was pulsing like a heartbeat. Her clit was swollen and its pink tip was peeking out of its sheath. My tongue has other talents and it seemed a pity just then not to use them. My tongue darted out again. Its soft tip wound itself delicately around her clit and stripped it clear of its hood. And then I began to milk it like a tiny cock. \n\nIt was pure sensory overload. Her body had not yet recovered from her last release before she tripped into her next. Her body jerked like a puppet on a string, her limbs loose and uncoordinated. Her throat was raw from screaming. When I was done, she lay there, her eyes open and unseeing, lost in a world that I couldn't share. I suddenly felt a flash of resentment. I had something that might get her attention. \n\nI picked up the short sword and held it before me. It was about eight inches long in the blade and four in the hilt. The scabbard and the handle were of jade, a pale green that was almost translucent. Both were delicately carved, with a pattern of veins so real that it looked alive. Blood seemed to pump beneath its skin. I wrapped my fingers around the grip and eased the knife from the scabbard. It glinted in the light.\n\nThe glitter of the blade caught her eye. I twisted the blade slightly and our eyes met over the line, shimmering with menace, that it carved in the air. At first, there was fear in her eyes. As I watched, it became a quiet acceptance. A soft little sigh escaped her lips and her eyes fluttered closed. She waited for the searing pain of the blade to cleave her flesh.\n\nThe soft mounds of her breasts were rising and falling with her breath. As I held the knife poised above her body, I could already see it sneaking between her ribs, sliding into her flesh. I could see blood bubble from the wound and stain her skin. The knife seemed to have a life of its own. It seemed to thrum in my hands, seeking its purpose, sensing death and wanting it. And I was tempted to give it what it sought.\n\nBut at the peak of its arc, when the blade was poised to plunge into Imelda's hapless flesh, I tamed it. I slid the knife back into the scabbard. It locked with a muted click. And then, struck by a strange impulse, I placed the smooth tip of the scabbard against Imelda's ravaged hole and buried it to the hilt in her flesh with one smooth thrust. Her eyes snapped open just as the smooth guard of polished stone smashed into her clit.\n\nShe seemed to have lost her voice. Thick gurgling noises rattled in her throat as I slowly eased the weapon out of her body and then drove it home again. I fucked her with it, caressing the warm pulsing walls of her cunt with the stone scabbard. It slid in and out of her with soft sluicing noises, the jade now glistening with her wetness. She seemed to be clutching at it, her cunt a blind hungry mouth that sought the mercy of that exquisite reaming.\n\nAnd then she began to come, her head thrown back, her body arched, the golden skin of her throat stretched as tight as the surface of a drum. I reached forward, encircled her throat with my free hand and squeezed. As the knife continued to drive in and out of her throbbing cunt, the air began to disappear around her. As she was slowly starved of breath, the pleasure multiplied until she could no longer bear it and she passed out, her body still twitching like a drunken mannequin. \n\nAs I waited for her to come around, I admired my handiwork. She looked well fucked, her face flushed, her nipples engorged, the knife still buried in her cunt. It was a while before her eyes fluttered open. She groaned as she tried to move her limbs. I'm sure every inch of her ached. I wrapped my fingers around the hilt and slowly withdrew the weapon from her cunt. She moaned as she was emptied. She had this fawning look in her eyes \u2013 love and gratitude and adoration all mixed up. I brushed her hair back from her sweat streaked forehead.\n\n\"I want you gone in the morning,\" I told her quietly as I turned to leave. I couldn't have the domestic help getting between me and my prey. She was lucky to be alive.\n\n<center>*****</center>\n\nIt was mid morning before he surfaced. He had obviously been worn out by his exertions of the night before. As he sidled into a chair next to me, I rose to pour him a cup of tea. Another quirk that I had acquired during my stay in England. It was the best Darjeeling, subtle and delicate. Just the aroma was enough to make my heart sing.\n\n\"Where's Imelda?\" he asked, confused.\n\n\"I have given her the day off,\" I said cheerfully, \"And all my other staff. I like to empty my house sometimes. Today, it's just you and me.\"\n\nHe blushed at the barest hint of a promise that seemed buried in my words. He looked fetching when he blushed. His presence was distracting. As I closed my eyes and raised my cup to my lips, I could hear the steady beat of his heart and the quiet throb of his pulse, the music of his body rejoicing in being alive. I rejoiced with him. I had big plans for him that night. I shivered in anticipation. It was going to be a long wait. I of course had ways to keep myself amused. He ... well, he would just have to stew in his own juices.\n\nThe hours fled by as usual. For centuries, I had sought a means to release Meridiana from her curse. I was no closer to an answer, but the search kept the guilt at bay. It was dusk when I heard the door open. He stood in the entrance, awkward, hesitant to violate my sanctuary.\n\n\"Come here,\" I said. It was barely a whisper, but in the tomb like silence of that room, my voice resounded.\n\nI was sitting in an armchair in the middle of the room. It had a surface of plush green leather and it was soft, the sort of thing one can sink into. I was wearing a kimono of scarlet silk. It was unusually light. I was naked underneath and the silk molded itself to my skin. My eyes held his as I untied the sash at my waist. I was still in the chair, my body framed by the silk of the kimono which now lay open. I slid my bottom forward, parted my thighs and planted my feet firmly on the carpet. I reached downward and carefully peeled open the petals of my cunt with my fingers. He moaned as the wings of my sex unfurled.\n\n\"Come here,\" I said again. And this time he heeded me.\n\nHe walked forward, still a little uncertain, almost as though he were in a dream and he would wake up at any moment. When he was within a few paces of me, I raised my hand as a signal to stop.\n\n\"Take off your clothes,\" I commanded.\n\nHe hesitated for a moment, but the need to be naked for me was far stronger than anything that his modesty could muster. He was clumsy. His fingers fumbled at the buttons of his shirt and he ripped the last one off in his impatience. I ran my eyes over his lean torso as he struggled with the rest of his clothes. The sound of the zipper being drawn rasped in the silence and he was naked except for his boxers. There was an unmistakable bulge in them and I'm sure he ached to set it free. He hooked his fingers in the waistband of the boxers and drew them downwards. He sighed softly as his cock leapt free. He was already hard.\n\nHis eyes were riveted to my cunt. The tip of my forefinger was running in slow, sensuous circles over the engorged stem of my clit, sheathing and unsheathing it. He seemed mesmerized by the sight of the pink tip sliding in and out of view. My finger drifted lower to bury itself inside me all the way to the root. When I withdrew it, my skin was slick with my juices. I raised my finger to my lips and slowly slid it into my mouth, stripping it of the wetness. His cock twitched as my finger disappeared into my mouth and then re emerged.\n\nI crooked my finger at him and beckoned him closer. He walked towards me, his cock bobbing with eagerness. When he was only a couple of paces away, I pointed downwards, making it clear where I wanted him to go. He dropped to my knees in front of me. He spread me open even wider, hooking my knees over the soft upholstered arms of the chair.\n\nHe just looked at me for a while with an expression on his face that bordered on reverence. And then his head dipped towards the open flower of my cunt. He planted a soft kiss on the moist pink flesh, wetting his lips. And then his tongue emerged to trace a long line from my hole to my clit. As my taste exploded on his tongue, he shuddered as though a million volts of energy were galloping through his body. I smiled to myself. He was hooked. When you taste one of us, there is always a price to pay.\n\nHe worked on me patiently - licking, sucking, teasing. His lips and tongue were restless, uncertain what parts of me they craved more \u2013 the quivering length of my clit, the succulent thickness of my lips or the welcoming warmth where he could drink but never quench his thirst. I stretched my body like a cat and breathed a quiet sigh of satisfaction. I hadn't felt so pampered in a long time. I was unaccountably pleased by the fact that this pleasure was not at the mercy of time or choice. I knew he would please me as long as there was breath in his body.\n\nBut wonderful as that divine licking was, there were even greater rewards that awaited me that night. I hadn't forgotten. I grabbed a fistful of his hair and twisted his face upwards. He mewled pitifully as he was torn away from the taste that now held him captive. His lips and his chin were drenched in my juices. His eyes were glazed and his nostrils flared at the sweet fragrance of me. He tried to wrench free, to blindly seek my warmth again. But I was having none of it. He had tasted enough. Now it was my turn to take him as he had never been taken before.\n\nI dragged him up to his feet, my fingers in his hair. His limbs seemed to have turned into jelly. His knees buckled and he would have collapsed if I hadn't caught him. I scooped him up in my arms and carried him to a table a few feet away. I laid him gently on the surface of green felt framed by wood. He lay there loose limbed, emptied of will, his cock painfully erect. My juices had set fire to his veins and turned his mind into mush. There was now only one thing that he was good for, only one purpose that his life, or what remained of it, was meant to serve. In the time that remained to him, his body would thrash in the throes of pleasure so complete that death would be a mercy. To live and not have that ecstasy would be torment. And since my heart is as soft as a light souffl\u00e9, it was a torment that he would be spared.",
        "I clambered onto the table and settled myself on my knees between his parted thighs. His cock seemed the only part of him that was alive. It twitched with need. A clear drop of liquid had formed at its tip and as I watched, it slid down the length of his shaft leaving a silvery trail which ended in the folds of skin that sheathed his balls. I curled my fingers around his member and squeezed softly. Another drop of liquid bubbled up from the tip. I leaned forward and flicked it with my tongue. It exploded in a tiny spray of wetness.\n\nI dipped lower and enveloped the head of his penis in the heat of my mouth. I sucked softly like a baby would at his mother's breast and he groaned. I kept going until the last trace of pre cum was gone and he was now wet with my spit. And then I dove even lower, sliding his hardness into my throat until my lips nuzzled the wiry curls of his pubes. He whimpered as the muscles of my throat began to tighten and release, softly milking him.\n\nAnd then I allowed my tongue to lengthen and to dart like a snake around his throbbing length, caressing him, drowning him in soft wetness. He gurgled softly as my tongue began to play, his fingers now wrapped in my hair. But I wasn't done.\n\nMy right hand crept beneath his body into the crevasse between his cheeks. My fingers parted him and then one fingertip probed gently. The ring of muscle guarding his entrance tightened until my lips wrapped tightly around the root of his cock and squeezed. His body relaxed then and he let me in. I slid smoothly into his soft depths. He was tight and warm and he clutched at my finger desperately, as though terrified what it might do. He found out soon enough.\n\nThe soft pad of my forefinger found the spongy knot on his upper wall and began to rub ... gently at first and then more firmly. He went crazy. His body began to thrash and it was all I could do to hold him down. His fingers were scrabbling helplessly on the felt surface of the table and I found myself regretting momentarily my choice of location for our heated coupling. That felt was going to need changing.\n\nI could feel his balls tighten with the onset of his release, but my thumb found the soft indentation of his perineum and quickly choked it off. With my other hand, I gently hefted his balls and began to roll them softly in my palm. Soft unintelligible noises dribbled from his lips ... soft pleading noises. He seemed to have been abandoned by sanity. His world was now my mouth and my hands and what they could do to him. That was enough.\n\nI knew he was ready. But I made him wait, drawing out the moment, cherishing the beauty of that body trapped in a hunger larger than itself. He lived an eternity in the hour that he wallowed in my mouth. And then I finally let him go. His body was jerking of its own accord, his hips thrusting his cock into the coolness of the night air. I knelt above him, allowing the tip of his length to brush against my lips with each uneven thrust. And then I let him sink into my wetness as I bore down on him.\n\nI remained immobile, his cock floundering in my juices. He was twitching inside me, his hard length pulsing against the walls of my cunt. It was time. My hips began to rise and fall, with a rhythm as old as man himself. Its language was unmistakable. It was the language of desire, of need, of urgency. It was a language that he understood. His fingers grabbed my waist as he thrust himself upwards, seeking oblivion and ... absolution. I obliged. I drew the hot cum boiling in his balls up the trembling length of his shaft, out of his cock and into my womb. And his soul came with it.\n\nIn those final moments, as he began to dissolve into nothingness, he regained some measure of clarity. His eyes, now focused, were dilated with fear. My heart went out to him, to the implacable nature of his solitude on that journey that he would have to make alone. He whimpered softly as his world darkened.\n\n\"Shhh...\" I whispered, \"It will be alright.\" \n\nI took his face in my hands and kissed him tenderly. His lips were already growing cold. And then he was gone.\n\n<center>*****</center>\n\nThe world was awash in moonlight. I raised my arms skywards and closed my eyes as the life that I had just claimed washed through my body like honey that had been warmed in the morning sun. I felt wonderful.\n\nIt was a cloudless night and the sky glittered with a million stars. As I breathed the world in, I was mildly surprised by the image that leapt, unbidden, to my mind. I had stopped at the butcher's at Lumley to pick up a leg of lamb. The butcher was a particularly sorry piece of work. He looked like a mild mannered accountant and wore a perpetually puzzled expression as though surprised to find himself wielding a knife. \n\nBut his son Edward was a different matter. He was a genial giant with an open guileless expression, completely at odds with the fact that his arms were usually soaked up to his elbows in blood. I think it was that combination of innocence and brutality that made me moist. I had this mad urge to lay him out on the table at which he stood, stained by the dying breath of creatures beyond count, and to draw him slowly, inexorably into my warmth. Living flesh to cold cut.\n\nI smiled to myself. Perhaps, I would order some fresh meat for lunch.\n\n<center>*****</center>\n\nIf you enjoyed this story, please spare a moment to vote. As a writer, I look forward to learning what works for you as a reader."
    ],
    "authorname": "dreamsndesires",
    "tags": [
        "fantasy",
        "succubus",
        "horror",
        "lesbian",
        "massage",
        "bondage",
        "domination",
        "anal",
        "fingering",
        "fetish"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-18"
}