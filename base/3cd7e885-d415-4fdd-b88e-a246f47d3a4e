{
    "title": "M Club Ch. 16",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nLisa marveled at the size of some of the homes in this neighborhood. The smallest ones were probably three times the size of hers and the yards were the size of city blocks. It was both fascinating and intimidating, making her feel out of place.\n\nUnfortunately, it wasn't quite enough of a distraction to get over Andy's behavior. He hadn't quite been himself for the last couple days, but she couldn't put her finger on exactly what it was. The easy smiles were still there, and he joked around like usual. Distant might be the best word for it. There was less of the flirty talk he usually engaged in. Had he finally gotten tired of waiting for her to push their kinda-sorta-not-exactly-dating-relationship forward?\n\nShe finally broke down and just asked. \"Everything okay? You seem a little, I don't know, distant.\"\n\nAndy looked surprised, or did his best to fake it. \"Me? No, I'm fine. Why?\"\n\nIf he didn't want to share, she wasn't going to push. She couldn't help but feel she was somehow responsible, though. \"Just seem quieter than usual, I guess.\"\n\n\"Sorry. I can talk more, if you'd like.\"\n\nLisa was about to reply when she noted Andy making a turn. He wasn't following Google Maps to Vida's house, and the neighborhood was convoluted enough he probably couldn't have memorized the route. \"Do you know where you're going?\"\n\nAndy looked uncomfortable. \"Oh, yeah. Vida needed a ride home from school Wednesday, so I offered.\"\n\nLisa felt a quick flush of jealousy, immediately wondering if they'd done anything else together after the ride. Then she felt even more embarrassed at her reaction, since that would have been the same afternoon when she'd been swapping oral sex with Sean and Denby while Andy had been excluded. That was before the whole \"we're not a couple\" thing even applied. She had no grounds to be jealous if anything did happen.\n\n\"Oh. That was nice of you.\"\n\nAndy nodded. \"She gave me the nickel tour of her house. It's off the hook. My apartment would probably fit inside their living room.\"\n\nSo, they went inside. Get a tour of her bedroom, perhaps?\n\n\"Got to meet her boyfriend, Leon, too,\" he said. \"Turns out he's playing football at State, so we talked shop and he gave me some tips to help make the team.\"\n\nOr not. Again, Lisa berated herself for jealous impulses. That sounded harmless enough.\n\n\"Cool.\"\n\n\"Yeah. Nice guy.\"\n\nLisa was reminded that Vida had mentioned her boyfriend as the possible exception to adhering to the rule against talking about M Club. It was understandable, not wanting to hide something like the club from her boyfriend and likely lover, but it also risked increasing the size of their little club. More people took away some of the intimacy, the bonds of friendship, that they'd enjoyed so far. It also increased the likelihood of someone slipping up and breaking their secrecy.\n\n\"Does he know about the club yet?\"\n\n\"Not as far as I know.\" Andy shrugged. \"And here we are.\"\n\nThe driveway Andy pulled into led to yet another impressive house. Two stories, columns along the front, huge yard, and everything looking immaculate. She had a feeling the inside was going to look every bit as impressive. As out of place as she felt, Lisa knew Andy must have felt even more embarrassed after having introduced her to the club in his tiny little apartment.\n\nVida hadn't seemed to care about the difference between her family's income bracket and that of the others, though. It felt more likely that she'd offered to host because her parents were gone for the evening than to flaunt her wealth. Hopefully that proved to be true.\n\n#\n\nSean and Denby, along with an assortment of Chinese food for dinner, arrived a few minutes behind Lisa and Andy. With the food set aside for the moment in the kitchen, Vida gave everyone a quick tour of the house. Unsurprisingly, the inside was exactly what Lisa had expected - gorgeous, classy, and sterile. It felt like a show home rather than somewhere people lived. There were a few signs of habitation in the kitchen with food on the counters and a handful of family photos on the fridge and Vida's room was at least a little bit messy. Lisa couldn't imagine living there, though.\n\nWell, maybe she could for the pool. Lisa's family had a nice little hot tub with just enough seclusion that the club had been able to have some naked fun time in it. Vida's family had a built-in pool with attached hot tub, including a small waterfall, creative landscaping to make parts of it feel like a jungle getaway, and tasteful furniture everywhere. Their yard, too, was landscaped in such a way as to give them complete privacy from all the neighbors.\n\n\"Shame it's too cold tonight to use it,\" Denby said. It was, unfortunately, brisk for a late May evening after a brief bout of afternoon rain.\n\n\"Hot tub's kept heated all the time,\" Vida said, \"if you really want to use it later. I'm guessing suits won't be a problem.\"\n\n\"Hasn't been in the past,\" Sean said, giving Denby a playful hip bump.\n\nLisa would have expected Andy to chime in with some suggestive comment, but he remained his quieter than usual self, merely nodding in agreement. \n\nShe leaned in close to him and whispered. \"What? Not going to show off by saying it's warm enough to use the pool, too?\"\n\nHe rolled his eyes and smiled, then whispered back, \"Shrinkage.\"\n\nLisa punched him in the shoulder. At least the Andy she knew wasn't completely absent.\n\nThey went back inside and gathered around the kitchen's massive central island where they could share dinner in a casual manner. Lisa was sure the dining room table probably got use, but it felt like they were woefully underdressed to use it. The kitchen felt right - friendly and informal.\n\nVida was an excellent host, making everyone feel welcome and fetching drinks and plates as needed. For having been an outsider less than a week ago, she almost felt like a regular. Her self-deprecating humor was refreshing and meshed well with everyone else.\n\n\"So, I do have something I need to address,\" Vida said as dinner wound down. \"My parents won't be home until midnight or so, but my boyfriend will be coming over around seven-thirty. That gives us less than an hour of private time.\"\n\nWhich would be plenty if they kept things moving at the usual pace. Lisa had been hoping for a more relaxed evening, like the other week when she had hosted at her house. Unless...\n\n\"Have you told him, yet?\" Andy voiced her question before Lisa could.\n\nVida shook her head. \"No, but I was planning on it. I don't feel comfortable keeping this from him. But I wanted to ask you guys first. I'm not presuming to think I can invite him, and if you have a real problem with him knowing at all then I'd probably have to drop out instead.\"\n\nLisa had to give Vida props for her respect for the club and the founding members.\n\n\"Well, I don't think anyone here wants to see you leave,\" Sean said. \"But without knowing him, I'm not sure we can make any judgement on whether we'd be comfortable letting him in.\"\n\n\"He's cool,\" Andy said through a mouthful of fortune cookie.\n\nDenby gave him a look. \"Wait, you know him?\"\n\n\"Leon Jacobs,\" Andy said after swallowing his bite. \"Went to Highland with us. Graduated two years ago.\"\n\nDenby and Sean didn't appear to recognize the name. Lisa only vaguely recognized it, but wasn't sure she was picturing the right guy. \n\n\"He played football,\" Andy said, picking up on their baffled expressions.\n\nVida said, \"And even though I'm biased, Andy's right - he's cool. I don't think he'd have any problem with this group. Certainly not in keeping quiet about it, or me being in it. As to whether he'd have any interest, who knows. Probably doesn't matter much because he wouldn't be able to join us much before the end of the school year, and I kinda got the impression the club was probably going to be done when we graduated in a couple weeks anyway.\"\n\nLisa hadn't really thought about the club in those terms before. It was just what they did as friends, now. But Vida was probably right. Once graduation hit, Denby would be free to have sex and she and Sean would be busy catching up in that regard. Sure, they might invite her to join them once in a while, but the need to exercise any restraint and keep things to self-play would be gone. The reason for the club would vanish.\n\n\"Andy?\" Sean looked to his friend for clarification.\n\n\"That's my take,\" he said. \"I have no problem with him knowing or joining. Up to you guys, though.\"\n\n\"Would he totally freak out if he got here early and walked in on us?\" Denby still looked dubious.\n\nVida laughed. \"If he walked in on us, he'd probably be miffed that he'd missed the beginning of an orgy or something. I wouldn't worry about it.\"\n\nLisa caught Andy's smile and subtle nod. She felt that familiar clench of jealousy in the pit of her stomach as she realized something must have happened here after all. Had the three of them enjoyed their own little tryst? What had Andy done with Vida? Oral? Had they gone all the way?\n\nAgain, Lisa had to fight back her own natural reaction. She'd been busy blowing Sean and licking and fingering Denby at the time. What right did she have to be bothered by anything Andy had been up to at the same time? None. He hadn't told them about it, but neither had she said anything to him about what she'd been up to. No matter how open-minded she considered herself and how well the group appeared to get along with one another, there were secrets and secrets within secrets. Feelings would get hurt, trust would erode. \n\nA look back at Sean and Denby told Lisa that neither had picked up on Andy's reaction. Maybe it just meant her imagination was getting the better of her. Maybe it really didn't matter. Let it go, she told herself repeatedly until the Disney music started to infuse her mantra.\n\nSean shrugged. \"Well, if you two don't think it'll be a problem, then maybe we shouldn't worry about it. If he gets here and we're still...indisposed...\"\n\n\"Exposed?\" Denby offered.\n\nSean nodded. \"Then we'll deal with it. If we're done first, then we get dressed or whatever and Vida can decide if or when she lets him know about the club. Anyone object?\"\n\nNo one did. And, just like that, the mood began to shift to the expectant energy that always preceded club activities. If nothing else could get Lisa's mind off her concerns, getting naked and masturbating in front of friends should do the trick.\n\n#\n\nLisa, sprawled naked across a plush divan, fingers dancing lightly across her clit, felt like she was in a movie. Vida's living room was huge and refined in every detail. Young, attractive, naked bodies were everywhere, the playthings of the rich and powerful as they entertained their friends behind closed doors. Sex was merely an idle dalliance that concealed the undercurrent of intrigue.\n\nTonight, that intrigue was in abundance. Ordinarily, Lisa would be absorbed in achieving orgasms with enough showmanship to be the center of the boys' attention, feeding both their arousal and her own. This evening, however, she found herself absorbed in the subtle interplay between the other club members.\n\nSean and Denby were together on a leather couch. Rather than occupying opposite ends to better watch one another while they masturbated, they were sitting shoulder to shoulder and hip to hip. Den had hooked one of her feet between Sean's long legs. On the surface, it appeared their little threesome interaction the other day had given the couple's romance a boost. Lisa had her doubts, though. Denby seemed almost too clingy and exclusively focused on Sean, like it was a conscious effort. Sean was similarly focused on Denby, but the occasional glances Lisa's way had an undercurrent of hunger. Had her blowjob so consumed his imagination that he lusted over her even in his moments of intimacy with Den? Or was he just imagining the next time the three of them could play together?\n\nAndy had taken a seat on a thick floor rug, not far from Lisa. He'd probably done this intentionally, a nod to their tenuous couple status, but it also meant his attention was more easily focused on Vida, sitting opposite in a recliner, and Sean and Denby. Vida watched both Andy and Lisa, yet most of her attention was on Andy. That wasn't surprising in and of itself, but there was no concealing a certain glint of lust in her eyes when she did.\n\nAnd what did the others make of her? What signals was she sending out? Did they pick up on how the connection between Andy and Vida was getting to her? Could Denby read her unabashed lust for Sean? Or were they all too lost in their own thoughts and actions to even take note of her? Was she once again becoming the easily overlooked, unremarkable girl in their class?\n\nLisa's attention shifted back to Vida. The Indian girl's legs were spread wide, pink slit pronounced against her dark skin and black fuzz, openly displayed for Andy. Lisa couldn't blame Andy for being infatuated with the girl - between her exotic heritage, a petite, athletic body, and her reputation for being sexually experienced and enthusiastic, how could he not?\n\nEveryone was being too quiet for Lisa's tastes. Between her imagination probably getting way too far ahead of itself and the new environment, she needed a change in vibe.\n\n\"Vida,\" she said. \"You said you'd never used any toys before, right? I brought my new vibrator along, if you want to give it a go.\"\n\nVida blinked, her mind catching up after having been lost in her thoughts. \"Oh, uh, sure.\"\n\nLisa hopped up from the divan and headed for the corner where she'd left her handbag.\n\n\"I brought a couple toys along, too,\" Denby added. \"Both my vibe and my...new one.\"\n\n\"The stunt-double?\" Lisa gave her a sly wink.\n\nDenby blushed but nodded. \"Yeah, the dildo.\" She turned to Vida. \"You're welcome to try either of those, too.\"\n\nVida looked almost overwhelmed. \"Uh, how about just the vibrator - Lisa's - for now?\"\n\n\"Okay,\" Lisa said. \"And I'll grab yours, too, Den.\"\n\n\"Stunt double?\" Andy asked while Lisa retrieved the toys.\n\nSean answered. \"Den decided to pick up a toy that, well, looks a lot like me.\"\n\n\"Ah,\" Andy said, chuckling. \"Just couldn't wait any longer, huh?\"\n\nDenby, fingers buried in her pussy, looked a little embarrassed. \"Not really, no.\"\n\nLisa brought the three toys into the middle of the living room and then leaned over Sean. She held up Denby's new dildo right next to Sean's erect cock. He paused with his easy stroking long enough for everyone to note the similarity. Lisa couldn't help but remember how they had put it to good use the other day with Denby. She also had to fight down the urge to lean over and take the real thing into her mouth again.\n\n\"Wow, yeah, that is pretty close,\" Vida said, leaning forward to get a better look. \"Of course, now my mind might go elsewhere if I try that one out.\"\n\nDenby clearly caught the innuendo. \"Yeah, well, imagine all you want. But you'll have to settle for the stunt-double.\"\n\n\"Of course,\" Vida said. \"Besides, my guy likes to do his own stunts.\"\n\nLisa refrained from rolling her eyes. At least she hadn't thrown a look Andy's way when saying it. Was he her backup, now?\n\nShe pushed herself back up from Sean and held out the toys to Vida. \"Still want the vibe, or get talked into taking Mr. Bigstuff for a roll?\"\n\nIn Lisa's peripheral vision, Sean sat a little more upright at her comment. Yes, she had meant it as a compliment to him, and she appreciated that it hadn't gone unnoticed.\n\n\"Vibrator, please,\" Vida said, reaching out and taking Lisa's new toy.\n\n\"It's pretty straightforward,\" Lisa said, setting the other toys aside while Vida gave the blue and white instrument an inspection. \"Power, speed, and vibe pattern buttons on the bottom. Business end goes wherever you like - clit or g-spot. I've found it to be...very effective. And, yes, I clean it after use.\"\n\nVida grinned when she found the power button and it kicked on. \"Wow, this thing has some power to it.\"\n\n\"That's why I picked it.\"\n\nLisa and the others watched on as Vida settled back into the recliner and hooked her legs over the arms. She fiddled with the controls until the soft hum became steady, then touched the blue tip to her clit. She gasped, retreated, and then re-engaged, sighing openly.\n\n\"Oh, now that is nice,\" she said. \"I'll definitely have to go shopping one of these days, soon.\"\n\n\"Den's sister was right,\" Lisa said. \"Every girl needs to have a toy.\"\n\n\"Because you won't always have a boy,\" Denby added.\n\nLisa almost retorted to that, but thought better of it. She didn't want to imply a future breakup between her and Sean, even though the odds said it was probably more likely than not. Few high school couples lasted forever. Maybe she just meant that even in a relationship, there would be times when one needed to knock out a quick one when her partner wasn't around.\n\nVida, after giving her clit a good working over with the vibrator, tentatively slipped the slightly bulbous tip inside her pussy. From personal experience, Lisa enjoyed switching between clit and g-spot stimulation. The insertion helped fuel her fantasy of getting fucked better than she managed with her own fingers, but the clit stimulation was more toe curling.\n\nLisa muttered, \"God, I could use a fuck right now. Oh, right, I suppose I can.\" She reached down for Denby's dildo. \"You're up, Junior.\"\n\nShe gave Denby a quick glance, just to make sure it was cool. Den nodded, smiling, then pointed at her vibrator on the coffee table. \"Mind?\" Lisa handed it to her friend and Den wasted no time in firing it up.\n\nThe boys seemed to have no problem playing with their own, built-in toys. Both stroked their cocks while looking back and forth between the two girls as they went at it with the vibrators. Lisa had to give them credit - they had learned how to stretch out their masturbation sessions to better sync with the girls'. It was a hell of a show. She couldn't imagine what their classmates would say if they knew or ever saw what the club was doing.\n\nLisa laid back on the divan and spread her legs. She hefted junior, bigger and heavier up close than she'd remembered, and conjured up images of having played with the real thing. When Sean's eyes met hers, Lisa lifted Junior to her mouth, gave it a sensual lick lengthwise, and then sucked down half the length. He grinned.\n\nDenby must have caught the exchange, because she shook her head in amusement when Lisa looked her way. Lisa gave them a playful show for a little longer, then lowered the dildo to her pussy. While she had penetrated herself on numerous occasions with fingers, the tip of her vibrator, and even a brush handle, none were nearly as big as Sean's stunt double. She was dripping with anticipation, eager to feel how it filled her.\n\nWhile rubbing the tip around her pussy to lubricate it, Lisa glanced back at the others. Vida was watching her, but clearly lost in her own building arousal from the vibrator. Andy had turned to better face Lisa as well. Judging by his expression, he was ready to use her show to fuel his imagination.\n\nWith a nudge, Lisa slipped the tip between the folds of her labia and into her pussy. Her body easily stretched to accommodate it, though it took some gentle rocking to get it in deeper. She closed her eyes and pictured Sean laying over her, sliding his cock into her pussy for the first time, taking her virginity while decorating her face and breasts with butterfly kisses. The sensation of being stretched, filled, was a powerful agent in completing the illusion. He pushed deep, until she could no longer hold back a moan.",
        "\"Nice, isn't it?\" Denby sounded amused.\n\n\"Oh yeah,\" Lisa sighed, keeping her eyes closed as she slowly began to pump with the dildo. Cock. Dildo. Conduit to her sexual being. It was heavenly, but she knew the real thing would only be better - warm, pliable, and controlled by an attentive partner. It lacked the weight of a hard body pressing into her, the warm breath on her neck, the agile tongue sparring with her own.\n\nShe cracked her eyes and found all four sets of eyes firmly on her. Denby looked amused. Sean - sly. Vida's expression said, \"Now you're starting to understand.\"\n\nAndy, the closest, surprised her. He looked hungry, predatory. His eyes were locked on her pussy, watching every thrust of Junior into her depths. Every movement was copied by his firm grip around his thick, angry red cock. When she used small, shallow thrusts, so did he. When she plunged the dildo in deep, Andy's hand slid all the way down until it strangled his balls. He was fucking her and, once she realized it, she began fucking him.\n\nLisa tuned everyone and everything else out, focusing solely on Andy's masturbation. She read his body language, his shuddering and sighs and grunts, driving the dildo in such a way as to maximize his pleasure. Then she would switch to what she needed - deep thrusts alternated with quick pulsing with only the tip inserted - and let her lover mimic. \n\nAll thought of Sean vanished from her mind, replaced with the shorter, stockier boy and that thick cock. Andy was standing beside a bed on which she was laying back, legs spread and hanging over the edge. He fucked her, used her, watched her tits bounce with each violent thrust. With as much as Junior filled her, Lisa had trouble imagining Andy's thicker cock fitting. She was eager to try, though.\n\n\"Oh, fuck,\" Andy groaned. Lisa watched as his hand squeezed with shocking strength. The tip of his cock was red and swollen to the bursting point. Wasn't that painful? A moment later, he erupted. Thick ropes of white semen decorated his hand, cock, and stomach. He held firm until nothing more came out, then his entire body seemed to collapse.\n\n\"I think you like the dildo more than I do,\" Lisa said, smiling.\n\n\"Good show,\" Andy said, his voice strained. There was a knowing smile on his face, though, and he looked extremely pleased with himself.\n\nLisa, out of the corner of her eye, noted a sudden change in Sean and Denby's postures. Their attention had shifted to behind Lisa, and she turned to look. Standing in the doorway to the kitchen was a tall, black guy in casual athletic clothing. He had sharp, intelligent eyes and an easy posture, and he was grinning widely. She only had a slight hint of recollection of him from high school and wouldn't have recognized him without knowing he'd been a former student.\n\n\"Apparently, I'm late,\" he said. \"Though I'm not a hundred percent sure for what.\"\n\nLeon, Lisa figured. Ordinarily, she would have been mortified in embarrassment at having been walked in on by a complete stranger while fucking herself with a dildo. His easy demeanor, however, instead got her turned on further still. That exhibitionist side of her was in its element.\n\n\"Hi, honey,\" Vida said, giving him a wave. She didn't bother getting up, though, as she was still too busy with the vibrator. \"Just a little get together with friends.\"\n\n\"Cool,\" he said, stepping a couple feet into the room and clearly checking everyone out.\n\nVida said, \"Everyone, this is my boyfriend, Leon. Leon - that's Denby, Sean, and Lisa. And you already met Andy, of course.\"\n\nLeon nodded across the room to Sean and Denby.\n\n\"Hey Andy,\" he said. \"Need a tissue?\"\n\nAndy looked embarrassed, but less so than Lisa would have expected given his current state. That, of course, got her to wondering again what might have happened here earlier in the week. Given her current state of arousal, however, she was slightly more turned on than jealous of that unknown.\n\n\"Uh, sure, yeah,\" Andy said. Leon crossed to the coffee table, fetched a couple tissues, and handed them to Andy. Then then turned to Lisa.\n\n\"And, yes, that was a nice show,\" he said. \"Well, what I saw of it, anyway.\"\n\nLisa, dildo still in her pussy, switched hands and extended her right. Amused, he took it and gave her a friendly shake. She could see and feel the sheer bulk of muscle in his body, even though most of it was hidden underneath his long sleeves.\n\n\"Thanks,\" she said. \"And nice to meet you.\"\n\n\"Pleasure's all mine,\" he said. There was a confidence in the way he said it - cool, comfortable, almost cocky, and very manly. It was apparent what Vida saw in him. This was a guy, not a high school boy. No offense to Sean or Andy, of course.\n\n\"So, honey,\" Vida said, drawing his attention back to her. \"This is the Highland High Masturbation Club. Care to guess what we're doing?\"\n\nLeon looked surprised and amused. \"Masturbation club? I don't remember there being one of those.\"\n\n\"It's a new thing,\" Sean said.\n\n\"And I only just joined less than a week ago,\" Vida added.\n\n\"I didn't think you did...that sort of thing,\" Leon said.\n\nVida playfully rolled her eyes. \"Why do you think I joined, silly?\"\n\nHe looked down at her splayed crotch. \"Looks like you're getting the hang of it.\"\n\n\"Like a fish to water,\" Lisa said.\n\nLeon chuckled. \"I'm sure. So, I'm guessing this club isn't the sort of thing that'll get its own page in the yearbook.\"\n\n\"Private club,\" Andy said. \"And there are some rules you'll need to know.\"\n\nLeon turned back to Andy, who had mostly finished wiping himself off. His gaze then slid back over to Lisa and she shifted her angle of attack with the dildo just a bit to give him a better view.\n\n\"Rules, huh?\"\n\nLisa said, \"First rule - you don't talk about M Club.\"\n\nJudging by his smile, Leon clearly got the reference. \"For obvious reasons, of course.\"\n\n\"That's the second rule, too,\" Denby said.\n\n\"No touching anyone else,\" Andy said. \"And no recording devices.\"\n\nLeon nodded. \"Anything else?\"\n\n\"No hiding under clothes,\" Lisa said.\n\n\"And first timers have to perform,\" Vida said, the implication clear in her statement.\n\n\"Ah,\" Leon said. \"So, this is a recruitment pitch?\"\n\n\"What do you think, honey?\" Vida said, almost purring as she continued to work the vibrator over her clit. \"Whip out that gorgeous cock of yours and show us all your skills?\"\n\nLisa could hardly wait. If Leon was as hung as he was buff, he would be fun to watch.\n\nLeon never lost his confident, comfortable demeanor, which made his reply surprising. \"Sounds like fun, but I think I might have to pass.\"\n\n\"What?\" Vida sounded genuinely shocked. \"Don't tell me you're shy all of a sudden.\"\n\n\"Hardly,\" Leon said. \"I'm good with all of it, except the rule about keeping your hands to yourself. I really don't see that happening. Not when you're here and naked. I'm about half a second away from jumping you right now.\"\n\nVida's expression softened. \"Like I'd stop you. But, their club, their rules.\"\n\n\"Somehow, I don't think too many here would mind.\" As Leon said it, his gaze shifted around to Andy, who looked guilty. \n\nHoly crap? Had Andy watched them fuck the other day? Lisa found it entirely plausible, though she was curious as to how it might have come up. If so, had he been a participant or just a spectator?\n\nThe whole idea, while outside the scope of the club, did have a certain appeal to Lisa. She liked watching the others masturbate, and watching Vida and Leon, two very attractive people, go at it in other ways would be amazing. She had enjoyed watching Sean and Denby playing and found the performance part, between her and Sean for Denby, even more arousing.\n\nVida said, \"Sorry, hon. No touchy until after the club is over. But we'd love to have you play, even if just this once. You can cum on me, if you like. That's not against the rules, I don't think.\"\n\n\"Nope,\" Denby said, perhaps just as eager to see some new action. \"Been there, done that.\"\n\n\"Full court press, huh?\" Leon shook his head. \"I don't know. When's the meeting adjourn? Maybe we could have a little after party action for whoever wanted to play.\"\n\nLisa was torn in her feelings on that matter. She was turned on enough to be drawn to the idea of playing with others, especially with an audience. She would love the chance to suck off Sean again, maybe with Denby licking her pussy, all while Leon fucked Vida. It would be amazing and crazy. But at the same time, she knew Denby wouldn't be able to do all that she wanted, and there would be questions about whether she should pay attention to Andy rather than Sean, or how each boy would feel if and how she played with the other. They might have gotten the masturbation thing down pretty well, but orgy protocols were a huge unknown. Denby's promise was the biggest obstacle and reason enough to avoid all temptation of allowing such a situation.\n\n\"Whenever they say it's done, I guess,\" Vida said. With Leon showing less interest, she seemed to be refocusing on getting herself off on the vibrator.\n\nSean shrugged. \"I guess after everyone's gotten off and no one feels like going another round. Usually doesn't take that long.\"\n\n\"Okay,\" Leon said. \"Well, I'm gonna run upstairs for a few. Gotta make a couple calls. Have fun and maybe I'll join you in a bit.\"\n\nHe blew a pouting Vida a kiss, which she returned, and nodded to the others. Lisa felt his gaze linger over her spread legs, to where Junior was buried deep in her pussy, and she secretly hoped the view might be enough to get him to change his mind. She watched him leave, picturing his ass naked.\n\n\"Party pooper,\" Vida said after he was gone. There was no venom in her voice, though. \"Wasn't sure he'd join. But since he probably wouldn't be able to hang with us very often, given his crazy schedule, it doesn't matter much.\"\n\n\"It's fine,\" Denby said. \"As long as you're sure he won't go saying anything about it.\"\n\n\"He won't. I'll make sure of that.\" Vida's voice was utterly convincing, assuaging the similar concern Lisa shared with her friend.\n\nThe vibe in the room had changed subtly since Leon's arrival and departure. The edge of excitement that had built organically now felt artificially sustained with four of the five of them still masturbating. Sean's cock, now only half hard, was perhaps the most obvious manifestation. Which way would it have gone had Leon stayed? Just as when Andy and then Vida had first joined in, there was uncertainty and awkwardness in having a new person watching such intimate exposure and acts.\n\nAfter a few minutes, however, everyone seemed to settle into a quiet groove. Vida was clearly on the brink with Lisa's vibrator and Sean had gotten himself back to full staff. Denby pinched a nipple with one hand while her other worked at her clit with her vibrator. Lisa still felt like her orgasm was a long way off, but once she zeroed in on Sean and got the picture of him rather than his stunt double fucking her, that happy buzz began to return.\n\nVida peaked first, moaning openly. Through the climax, all attention was on her. She truly was cute, Lisa thought, and probably a lot of fun in bed.\n\n\"Yeah, definitely gotta get me a vibe,\" she said. \"Thanks for sharing, Lisa.\"\n\n\"My pleasure,\" Lisa said, happy to have helped the experienced girl explore something new.\n\nLisa was soon back to using the dildo to fuck herself with abandon. Her pace closely matched Sean's hand stroke, and her fingers played aggressively across her clit. Sean's eyes were on her display and she was almost certain he was imaging that it was his cock plunging her depths as well.\n\n\"God, he's fucking you good,\" Denby said, her voice barely loud enough to carry across the room. Lisa heard a surprising hunger in her friend. She had little doubt that Den was projecting the same fantasy of watching Sean with her.\n\nA glimpse of motion behind the couch Sean and Denby occupied drew Lisa's attention. Leon had returned after a surprisingly brief time away and was standing in the doorway. Judging by his wry smile and now naked chest, perhaps he had been unable to resist the opportunity to join the fun. Now, if only he would step out from behind the couch to see if the rest of him was naked as well.\n\n\"Get in here,\" Vida said, also having noted her boyfriend's return.\n\nLeon obliged, coming in far enough to stand only a short distance from Denby. He was, indeed, gloriously naked. Lisa took in all of his muscly goodness, the room's light accentuating the angles of his dark skin. His cock appeared partly aroused, and looked likely to fall somewhere between Sean and Andy in the length and girth department. He was carrying a towel, but made no effort to hide anything.\n\n\"Felt a bit overdressed,\" he said, glancing around the group before his attention returned to Lisa's dildo action. \"Thought I might hit the hot tub for a bit. Rough lifting session this afternoon.\"\n\nLisa couldn't help but picture him lifting weights, buck naked. Leon and the rest of his team. All of those hot, strong, sweaty bodies. She would be jogging on the treadmill, watching them even as their hungry eyes kept checking her out. And when they were finished, she would be invited to join them in their locker room, sharing their showers, a dozen or more hands soaping her up.\n\nDrawing on the inspiration standing before her, Lisa was consumed by her oft-visited fantasy. She pumped the dildo frantically and a powerful orgasm welled up within moments. Even with vision blurred, she knew all eyes were locked on her, and she relished the attention, letting go.\n\nHer body, after being wracked by several waves, collapsed back on the divan. She carefully withdrew the dildo, shivering at the over-sensitive response from her body by the contact.\n\n\"Nice,\" Leon said, his attention still fully on her. Lisa noted, with some satisfaction, that his cock was now fully engorged and standing just above horizontal on its own.\n\nSean grunted, possibly in agreement and definitely in climax. Lisa's attention shifted to him just in time to watch several pulses of semen shoot straight up and splatter over his hand and lap. Where had his imagination sent that load? On her face? Across her tits? Deep in her pussy? She was feeling so slutty, so free, she was tempted to ask him.\n\nDenby, too, began moaning, vibrator locked between her legs while one hand pinched a nipple. Lisa, now familiar with her friend's orgasms, suspected it was faked just so she wouldn't be the only one left playing with herself. She might have been feeling a little self-conscious under the attention of the newcomer. Den would no doubt finish herself off before the night was over, one way or the other.\n\n\"You guys sure make a compelling sales pitch,\" Leon said, chuckling and even giving his lovely cock a quick tug. \"Still, I'm hitting the hot tub. Join or finish up or whatever you do next.\"\n\nHe took one last look around the room at the naked bodies, then brushed Vida's outstretched hand as he let himself out through the patio door into the dark. Lisa watched his taut ass through the glass as he crossed the short distance to the hot tub and let himself into the glowing blue waters. She would happily join, but was unsure what the others had in mind.\n\nDenby hopped up from the couch to grab a tissue for Sean. He thanked her as she snuggled back up beside him and whispered in his ear. Lisa wondered what that was about, even as she rose to get a tissue and wipe down her friend's dildo.\n\nAfter finishing her whispered exchange with Sean, Denby said, \"While the hot tub sounds great, we didn't bring suits. And, if I'm being perfectly honest, I don't think I could keep my hands to myself tonight if we were in there naked. After graduation, sure, all bets are off.\"\n\n\"You guys can hang around or whatever,\" Sean said, looking between Lisa and Andy. \"I think we're gonna go catch a movie. Or something.\"\n\nOr something. Lisa felt a pang of jealousy, knowing full well the sort of make out session implied behind that. Sure, there might be a layer or two of clothing between them, but there would still be a lot of intimate contact.\n\nLisa wasn't sure what she wanted. She couldn't invite herself along with the two of them. Things were still in an awkward state between her and Andy, and she wasn't sure she wouldn't feel like a third wheel hanging out in a hot tub with Leon and Vida, when they clearly wanted to bone one another.\n\n\"Well, Andy's my ride, so...\" She looked to him for some sort of indication of a preference.\n\n\"Why don't you two stay a while?\" Vida said, sounding like she meant it. \"The hot tub's nice and we won't stay out there too long, just in case my parents decide to call it an early night.\"\n\nAndy shrugged, though Lisa got the sense he wanted to stay. \"Up to you,\" he said. \"I'm good either way.\"\n\n\"Sure, okay,\" she said, hoping it wouldn't be too awkward. More naked Leon and Andy certainly wouldn't be a bad thing.\n\n\"Awesome,\" Vida said, hopping up. \"Let me go grab some towels. Back in a jiff.\"\n\nSean tossed his tissue while Denby began rounding up her clothing. With a glance toward Lisa, she said, \"You kids don't get into too much trouble now, hear?\" \n\n\"Lisa? Trouble?\" Andy laughed.\n\n\"That's exactly what I mean,\" Denby said, winking.\n\nLisa rolled her eyes, but knew her friend meant well. She gathered up the toys the girls had played with and offered to wash them up while Denby got dressed. In doing so, she caught Andy's attention and motioned him to follow to the kitchen.\n\n\"You okay staying for a bit?\" he asked in a soft tone once they were alone.\n\n\"Yeah. You?\"\n\n\"Sure. We can always bail if things get weird.\"\n\nLisa began running the toys under the sink, hand washing with a bit of soap. She had intended to ask him about the other day, but found herself hesitating. Did she really want to know? Was it any of her business.\n\n\"Something on your mind?\" He must have picked up on her body language.\n\nFuck it. \"Did something happen when you dropped off Vida the other day? Not that it's any of my business, since we're not like an official couple or anything, but it just seems like...something more than talking football.\"\n\nAndy looked a little startled, but not hurt. \"Sorta, yeah. But probably not what you think.\"\n\nLisa clasped the dildo harder to keep her hand from shaking. Why was she so nervous all of a sudden? \n\n\"I don't know what I think, honestly.\"\n\n\"I brought her home, she showed me around and then introduced me to Leon when he got home. We did talk football for a bit. And then Vida started making out with him and gave him a blowjob while I watched.\"\n\nLisa looked at him and saw a nervous smile. \"Really?\"\n\nHe nodded. \"Yeah, kinda just out of the blue. I think she wanted to show off. I don't know. Maybe to give me a show after she'd watched me and Den playing in the library.\"\n\nSomehow, Lisa had almost forgotten about that little episode. Her experience playing with Sean at the same time, on her bed, featured a little more prominently in her memory.\n\n\"She does seem to have a bit of an exhibitionist streak to her. So, you just watched?\"\n\nAndy blushed. \"Well, she didn't just blow him. She got undressed and dragged him to her bed. And, the weird thing was, they acted like I wasn't even there.\"\n\nLisa was about to respond when Sean and Denby arrived in the kitchen, both fully dressed. Lisa dried the freshly cleaned toys and handed Denby's over.\n\n\"We're gonna take off now,\" Sean said.\n\n\"Have fun,\" Denby said, giving Lisa a quick hug. Then she whispered in her ear, \"And I want to hear all about it later.\"\n\n\"You too,\" Lisa said, returning the hug.\n\nDenby, halfway outside through the kitchen door, turned back. \"Oh, Vida's already out back with your towels.\"\n\n\"Okay, thanks,\" Andy said, waving and shutting the door behind them.\n\n\"So, bed?\" Lisa prompted, now curious to know what had happened next to Andy.",
        "\"Yeah, her bed. They're kinda making out and she then asked me to join them. On the bed.\" Andy looked uncomfortable recounting the tale, but she had no reason not to believe this was the truth.\n\n\"And did you?\"\n\nHe nodded. \"Believe me, it was weird. She wanted me to join them, I think. I jerked off, but didn't do anything more than that. She offered to, you know, suck me while he was doing her from behind, but I turned her down.\"\n\nLisa was a bit surprised he would be able to resist an offer like that. \"Because of us?\"\n\nSomething flashed in Andy's eyes - annoyance? Anger? Whatever it was made her feel acutely uncomfortable.\n\n\"Yes. No. Honestly, I almost said yes because of...us.\"\n\nLisa didn't follow, and her confusion must have showed on her face.\n\nAndy took a deep breath, then continued. \"Vida asked about the park where we'd been meeting. So, when I took her home, we swung by it so I could show her where the trail started.\"\n\nLisa suddenly understood. He'd seen her car there and pieced things together. Had the two of them gone into the park and watched as she fooled around with Sean and Denby, all while he'd been left out? She felt like an ass.\n\n\"And you saw my car there.\"\n\nHe nodded, staying remarkably calm. \"I figured you weren't the only one there.\"\n\nLisa's shoulders slumped. \"No. Den wanted to borrow me. As a surprise.\"\n\n\"I get it.\" Try as he might, Andy couldn't hide all his disappointment or frustration.\n\n\"I didn't know for sure what she had in mind when she asked me to show up,\" Lisa said, as if the explanation would help any. \"She felt bad because, well, she and I had messed around a little bit in ways that she and Sean can't yet. I think she felt like she owed him, so she used me as a stand in.\"\n\nEven as the words came out of her mouth, she knew it sounded hollow.\n\nAndy gathered himself. \"That's cool. It's not like we're a couple. So, whatever you do with them isn't my business. It wasn't a club meeting or anything.\"\n\nLisa felt like a heel and wanted to hug him and apologize. But for what? They'd both conceded that what each had done was nothing the other should be upset over. And yet, here they were, acting like they'd both been caught cheating or nearly so.\n\n\"It still felt like we were going behind your back, though,\" Lisa said. \"And I wasn't real cool with that.\"\n\n\"You could have told me,\" Andy said. \n\nThe strain in his voice hurt. \"Yeah, that wouldn't have been awkward. Besides, it was Denby's show. It's not like you told me about you and Vida.\"\n\nAndy caught himself from saying something. Then he said, \"No, I guess not.\"\n\nThey stood before each other, naked, silent, uncertain, clearly sharing many of the same disjointed emotions. She liked Andy, but it was clear to her by now that she didn't have those feelings for him. He could be cute and charming in his own way, and that was all he would ever be to her.\n\n\"You don't have to pass up any...opportunities...on my account,\" she said. \"I bet Vida would give you another chance tonight, if you want it.\"\n\nAndy shook his head. \"Does that mean we're done, even if we never really were a thing?\"\n\nLisa let out a pained sigh. If this was what breaking up a non-relationship felt like, how painful would a real breakup feel? She wasn't sure she ever wanted to know.\n\n\"I know I'm not Sean, but I thought maybe we'd hit it off, eventually.\"\n\nLisa felt a flush of embarrassment at his decidedly pointed observation. \"I'm not comparing you to Sean,\" she said.\n\n\"Maybe not,\" he said. \"But I can see it between you two.\"\n\nShe didn't want to admit it, but he was right. There was just something about Sean that set her heart aflutter in a way Andy didn't. \"Even if that was true, it doesn't matter.\"\n\nAndy smiled sympathetically. \"I get it. I do.\"\n\nLisa wasn't sure if he meant her and Sean, or if he was suggesting something between he and Denby. Maybe both. She'd certainly seen a fair bit of Andy checking out her friend, but who wouldn't check out a girl with such a pretty body?\n\nLisa stepped forward and took Andy's hands in hers. \"So, now that we've decided we're not going to be a couple, can we at least agree on what we are?\" \n\n\"Friends?\"\n\n\"With some benefits?\" Lisa raised her eyebrows and gave him a hopeful smile.\n\n\"Depends,\" Andy said, trying to act serious. His goofy smile betrayed him. \"What sort of benefits?\"\n\nLisa grabbed him by the head and pulled him into an aggressive kiss. After a moment of hesitation, Andy melted into her and returned it with equal enthusiasm. Tongues lashed one another, and their bodies merged. All the tension that had built to a head, now that it was resolved, needed an outlet. She kissed him with a comfort that she'd never enjoyed during their previous make-out sessions.\n\n\"That,\" she said, catching a breath before locking lips again. She grabbed Andy's hands from where he held her hips and raised them to her breasts. He eagerly massaged her and began rubbing his thumbs over her nipples. \"And that.\"\n\nLisa ran her own hands down his chest, around his sides, and grasped his firm ass. Between their bodies, she could feel his cock returning to life, the hardness pressing into her pubic mound. She didn't think she was ready to offer the full range of \"benefits,\" but after having played with Sean, she was certainly open to going further with Andy than they'd previously gone.\n\n\"And maybe some of this,\" she said, wrapping her fingers around his cock for the first time. She could scarcely reach all the way around and wondered if she would be able to suck him off as she'd done with Sean. That had been a bit of a challenge and Andy was considerably girthier. \n\n\"I can live with that,\" Andy said through ragged breaths. \n\n\"But,\" Lisa said, pushing him back and removing all bodily contact save for the hand wrapped around his cock, \"our hostess is probably wondering what's taking us so long.\"\n\nAndy groaned but with a smile. \"You're gonna make me go out there with a raging boner?\"\n\n\"Nothing they haven't seen before,\" she said. \"And, yes, I am.\""
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "masturbation",
        "toys",
        "dildo",
        "vibrator",
        "teens",
        "party",
        "friends with benefits",
        "exhibitionist",
        "naked",
        "fantasizing"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-16"
}