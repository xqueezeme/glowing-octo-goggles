{
    "title": "A Thankful Blizzard Pt. 03",
    "pages": [
        "Author's Notes:\n\nHere it is, the (hopefully) much anticipated next segment of our journey with Kat and Paul. If you haven't read the first two parts, please go do so. This will make very little sense by itself. Any references to real entities are for reference purpose only. I do not own any of those names.\n\nA big thanks to GaiusPetronius \u2013 he stepped up and helped to edit this segment, when my friend has been busy. Gaius' guidance and wisdom/experience has helped shape several sections into this story \u2013 in my opinion turning a good story into a great one. He did this entire edit in one night. So I claim responsibility for any remaining errors, since I trust his abilities.\n\nEnjoy chapters 5-7!\n\nChapter 5\n\nI sat there in complete disbelief. Katherine White \u2013 daughter of Doug White, CEO of the White Family Corporation \u2013 was the poor stranded girl I had picked up off the side of the road. She had been kidnapped. If I remembered correctly, since the McMahon thugs had crossed the state border, it was a federal offense. From Kat's description of what happened, I doubted anyone knew she had been dumped off in the mountains of Colorado. \n\nAnd we'd just had sex. Incredible, amazing, satisfying sex. My mind wandered, replaying the events of our lovemaking. Had she said anything that could have indicated this, during our passion? No, I didn't think so. She kept chanting my name, encouraging me on. Just the thought of what we had done had me growing hard again. \n\nBut had she lied to me? It didn't seem that way. There were a couple times she seemed to be thinking about something, but I thought she was being honest the entire time. \n\nWell, my phone didn't get reception, but there was the cabin phone. Perhaps I could call out and notify her parents...\n\nShit! My own parents! They were going to be worried sick about me. I checked the time, seeing it just after 4 pm. They will have expected a call from me by now. Better take care of that really quick.\n\nI rose from the chairs and found the cabin phone, hanging from the wall. A corded phone, something I hadn't seen or experienced since I was a little boy. Well, it was still a phone. I picked up the receiver, ready to dial my parents first, deal with that, then try to reach Mr. White, or the Phoenix police, someone to notify that she was safe and we'd be back when the blizzard ended.\n\nI paused. Something didn't sound right. The phone sounded hollow: no noise, no static, no dial tone. \n\nShit! Again! I checked the cable, made sure everything was plugged in, traced the line to where it entered the wall \u2013 everything seemed in place. The snow must have done something to cut the phone line. How would I reach the outside world now? I could probably put my coat on and trudge out through the snow to the main office, get some help from Max. That was probably the wisest thing to do, before it got too dark. The sooner everyone could be notified, the better.\n\nI went over to the bedroom, peeking in, but saw that the bathroom was still closed. I'll write her a note, leave it on the bed, let her know I'm going to the office and I'll be back soon. No sense in making her worry when she comes out and can't find me.\n\nA few minutes later, I had left a simple note, with paper from her sketch book, on the bed. I had all my warmest clothing on, my coat, a hat, my gloves \u2013 anything I thought that would keep me warm during the short trek. I took a deep breath and grabbed the door handle, pushing against the door. But it didn't move. Did I leave the deadbolt latched? No, all the locks were free. I checked and confirmed the handle was turning in my gloved hand. But the door still wouldn't budge. Was I being an idiot, in a sort of panic, trying to push when I should pull? \n\nOh. That made me feel dumb. But pulling on the door didn't change the panic I was starting to feel. As the door opened up, the storm door revealed snow was blocking all but the top inch of glass. Holy shit. How would that even budge? I had to at least try. \n\nI twisted the knob and gave a lunge with my shoulder. The door seemed to move, but upon checking, it was less than an inch. I gave another shove, harder than before, but I couldn't feel the door give any leeway. It looked as if we were stuck. My shoulders slumped. I wiped some sweat from my brow, and realized I was roasting, with the effort I had been exerting and being dressed in full winter garb. Defeated, I closed the main door and started peeling off all my layers, putting them back, wondering how I was going to break the news to Kat that we were well and truly stuck. Well, if all else failed, I'm sure one of the solid wooden chairs could crash through the side window. But if the blizzard was bad enough to hold the door shut, I imagined I probably couldn't even find my way to the main office anyway. \n\nI took one last look around the cabin to see if there was any other way out of here. Finding none, I sat down heavily onto the couch, resting my elbows on my knees and my head in my hands. I sat there like that, thinking, pondering how I was going to talk to Kat. And what to do about the knowledge that she was the daughter of a ridiculously wealthy family \u2013 an heiress to that, too \u2013 who wanted to go her own way instead of taking over the family business. I couldn't blame her, really. Sure she could have wealth, probably power too, but if she wasn't happy, or if she couldn't have the time to do her art, with the responsibilities of running a corporation, what was the point? All work and no play, after all. I sighed and leaned back into the cushion. What was I going to do? \n\nI had been so lost in my thoughts that I hadn't heard the shower stop, or any other indication that Kat was right behind me, until I felt warm hands trace from my shoulders down my chest, then her lips press into my neck. Ah, God that felt so good...\n\n\"Didja miss me?\" Her soft whisper into my ear, followed by her tongue, sent shivers down my spine and blood rushing into my member. \n\n\"Hmmm, of course I did...\" I placed my hands over the top of hers. Her lips and tongue were doing wonders to my neck, jolts of pleasure racing through my body. I had to talk to her though, quickly, before I lost all rational thought. \"Kat, I...\"\n\n\"Shhhh...\" Her finger reached up to my lips, pressing her fingertip into my mouth. Good lord, this woman was sensuality personified. \"No talk \u2013 just fuck me again.\" Those words were like a fire, igniting a passion in my core. I sucked gently on her finger, then I tried one last time.\n\n\"I just have...\" This time her lips cut me off, as she had used her hand to pull my head to the side, pressing her tongue against my lips. I couldn't help it, so I parted my lips and felt her tongue press into my mouth, searching out my own tongue. That kiss lasted for what felt like forever, leaving me breathless.\n\n\"Well, if you won't fuck me...\" She climbed over the back of the couch, and I saw she was still naked from her shower. \"Then maybe I should just fuck you...\" How can a guy argue with that? I didn't think I had the courage to do so anyway. I still felt a little nervous, but far less than I'd ever felt around a woman before. The sight of her naked, climbing over the couch, and pressing into me was perhaps one of the sexiest, most beautiful things I had ever seen. She must have noticed the \"deer in the headlights\" look I had, for she giggled softly, pressing me down into the couch. She straddled my hips and leaned down, her still damp, red hair creating a curtain around my head. Her lips found mine again, one of her hands caressing the side of my face. I traced her back with my own hands, feeling the soft curves of her hips, the roundness of her ass. \n\n\"Ah, Kat... I lo... uh, love the way you make me feel.\" I was surprised I was about ready to spout the love word to her, having known her for less than a day. She either didn't notice or didn't care, for her other hand slid down my chest and grabbed my rigid penis through my pants. \n\n\"Hmm, I love the feelings you give me too!\" I'd often read of authors describing a woman speaking in such a way that it was as if she purred. I thought it ridiculous, picturing a woman purring like a cat, or some other odd behavior. Yet the way Kat had just said that \u2013 damned if she didn't purr. \"Although, I think you're way overdressed for this.\"\n\nI moaned as I felt her hand slide up and under my shirt, bunching the fabric up around her arm as she continued up my chest. As she got to my shoulders, her other hand joined the fight to get my shirt off my body. She pulled, so hard that I lifted off the cushion a little bit. I helped her out by leaning forward a bit more, lifting my arms around my head. She wasted no time, chucking the shirt to the side, attacking my bare skin with kisses, caresses and licks. I could feel the heat of her own crotch as it pressed against mine, a fact that just made me want her even more. Our first time making love had been incredible \u2013 no, it was stunning, simply beyond mere words. I was already anticipating the incredible sensations of being with her this way.\n\n\"For a Ph.D. candidate, you sure have a rockin' body,\" I heard her moan, kissing her way down my abs and reaching the waistband of my pants. Me, a \"rockin' body?\" I didn't think so, but apparently running and hiking had its benefits. She undid the button, slowly pulled the zipper down, kissing the head of my penis through the thin fabric of my underwear. I twitched at the pleasure of that kiss. \"And this...\" She kissed it again. \"Is... absolutely... amazing...\" Each word punctuated by another kiss. I thought I was going to cum, right then, without her even getting my underwear off, but she just blew warm air around it, pulling my pants the rest of the way off.\n\n\"Unghhh...\" The most words I seemed to be able to get out. \"I, uh... I almost came from that...\"\n\n\"Really? You like it?\" She leaned forward and kissed through the fabric again. \"Or do you just like seeing me do it?\" This time, she pulled the waistband of my pants down and pressed her lips around the head of my cock. \"Are you gonna' cum in my mouth again?\"\n\nI found it hard to form any words, as I had one seemingly continuous moan escaping my lips. I nodded furiously at her, a blush spreading across my face.\n\nMy cock popped out of her mouth, and she grinned. \"Which question? All of them?\"\n\nMy face turned a bit redder as I thought of her lips locking tight around my orgasm, not letting anything escape. I nodded again, still a bit unable to speak. She was a bit bolder this time, taking charge. I think I liked it.\n\n\"Well, Paul... cum in my mouth then.\" She pulled me into her mouth again, pushing a bit further down than before. It felt amazing, and I wasn't even sure what she was doing. The pleasure built in intensity, as I felt her tongue doing impossible things. At one point it felt like her tongue pushed against my slit, then flicked the underside and around the head, before pushing me further into her mouth. Her head began bobbing up and down, her hair getting a little bounce to it as it dried. Her emerald eyes were locked onto mine. I couldn't blink, I was captivated by her \u2013 the intensity with which she did these things, the smile her eyes seemed to have as she continued to slide up and down the shaft, never letting my cock slip from her mouth. The nostrils on her cute little nose would flare with each breath, each bob, up and down. I was a goner, and I'm sure she knew it. I felt that tickling intensity that signaled the oncoming orgasm.\n\n\"Ungh... ungh, Kat... Kat... I'm... guh... I...\" Words strung together into nearly incoherent phrases, as I tried to warn her. She grinned, then pushed down hard, her hand grasping the base of my shaft, the other hand massaging my balls, as the first contraction hit me like a punch to my entire lower region. Each blast, a second apart, was so intense, so pleasurable, so wonderful. My hands had grasped onto anything I could, one hand gripping the back of the couch, the other on the edge of the seat. I could see her throat moving, swallowing, as my cum poured out into her mouth. As the waves of pleasure subsided, I think I finally found the ability to breathe, and gasped for air, feeling my pulse throbbing in my head. I watched her ease up, sucking as she went, so that she came off with a pop. She swallowed hard once more, then proceeded to lick around the entire length of me, from top to bottom, with these slow, luxurious-feeling strokes of her tongue. It felt like she was massaging it, praising it, something. I had no idea that pleasure like that existed. I finally closed my eyes, breathing hard still, and tried to mumble my thanks, about as loud as I could manage at the moment.\n\n\"What's that, baby?\" \n\n\"Thank you.\"\n\nShe chuckled, a sound that still had a sexy quality to it. \"It was,\" she paused with a huge smile, \"my pleasure.\" She crawled slowly up to meet my lips, which I gladly accepted, kissing her fully. I remembered hearing from my roommate that he didn't like kissing his girlfriend after she gave him a blowjob. I couldn't see why. I could tell a subtle taste of myself was on her lips, but it was still her lips, her tongue and her passion I could feel in the kiss. I wasn't passing that up. Besides, I think I remember she kissed me after I did it to her. Seemed only fair.\n\n\"Uh... can I... um, do you now?\" Wow, I sounded so awkward.\n\nShe grinned and giggled. \"I thought you'd never ask.\" She pulled me with her, maintaining our kiss, and fell back on the couch cushions, pulling me on top of her. I realized I still had my underwear around my thighs, so I paused to pull them off.\n\n\"I, uh, still have these on.\" Once they were off, I crawled back onto her, kissing her lips some more. I felt my slightly soft penis press against her, feeling her wetness. Wow, that was hot. Hot enough that I felt myself getting harder. She did too, as she grinned and kissed me some more. \n\n\"We could... just skip... to fucking...\" She whispered between kisses. I broke off from her kiss, grinning at her.\n\n\"Soon.\" I promised her. \"But, uh, first I want to taste my little snowflake.\" I hoped it didn't sound too cheesy. I was hoping for endearing and sweet.\n\n\"Hmmm, then taste me all you want, Doc, but you may need to insert your probe for further testing.\" Kat's grin was another intoxicating quality about her. There really was so much about this woman that begged further studying, inspecting, and appreciating. \n\n\"That, I can do.\" I set to work, hoping I could give her the kind of pleasure she gave me. I recalled what I did to her before, the slow buildup and priming of her body before even touching her. Perhaps if I repeated my method, the results may match. \n\nI started by kissing her neck, much like she had to me, and licked near her ear. I decided to try whispering to her as I kissed around her neck. She seemed to like it a lot.\n\n\"When I first picked you up, I thought I had found a goddess or something.\" I felt her sigh. I used one of my hands to trace around her stomach, under her breasts, and between them. \"You wore such an amazing outfit. It was so out of place. I actually thought you may have been an angel yourself, wearing something like that out there.\" I paused to kiss under her chin, across her collarbones, to the other side, repeating the same kisses and licks. \"When you first turned towards me, your eyes were more beautiful than anything I'd ever seen before.\" I bit the bottom of her earlobe lightly.\n\n\"Ohhh, Paul...\"\n\n\"And your face \u2013 so smooth and beautiful \u2013 reminded me of a perfectly carved statue.\" My hand caressed the tops of her breasts now, briefly passing over her hard nipples, making her tense up and moan lightly. \"Then talking to you \u2013 that was the most magical part. Your mind seems to be the most beautiful part of you.\" I gently squeezed one of her breasts now, before twirling my fingers around her nipple, lightly pinching it. \"Which says a lot, as you're the most beautiful woman I've ever met.\" \n\nHer breathing increased, her chest rising and falling more rapidly now. \"Oh God, Paul...\" She was moaning, arcing her hips up into my groin now. I felt her wetness against my stiffening penis, so I thought I'd try and tease her, just a little bit. I moved my hips up and down, so that just the tip of my cock traced along her slit. When she gave a little \"oh\" of pleasure, I pressed my hips a little harder against her. I thought I could feel her clit touching the head, so I tried rubbing the length of my shaft against her. \n\n\"Oh, just fuck me... please...\" Her hips were moving too, as if she was trying to capture my cock.\n\n\"Soon.\" I repeated my promise again. I slid my kisses down her chest to her nipples, latching onto one and squeezing the other. Her moans increased. I kissed further down, along her stomach, flicking my tongue into her belly button, then down her hips, just past her lips. I heard frustration in her groans now, as I moved my kisses and tongue down her inner thigh. I got to her knee, then switched to the other leg, tracing back up. When I reached her glistening slit, I breathed deeply, inhaling her rich aroma, then breathing across the lips of her pussy.\n\n\"Ahhh, Paul, lick my pussy...\" I obliged her then, tracing my tongue along the outer labia, around the inside, pressing into her opening a few times. Her hips were moving slowly to my caresses and licks now. Her breathing had increased to a light pant. I knew I wanted to hear her moan and scream out in pleasure again, but I had really enjoyed hearing her beg me for release. I continued licking her everywhere but her clit, using my hands to hold her hips steady. When the panting increased, I used my hands to spread her pussy lips apart. I heard some frustration in her groans now, and looked up at her eyes to see her watching me. She was pinching and tugging on both her nipples now, caressing her own breasts. Her brow was furrowed, and she bit her lip.\n\n\"Oh God, Paul, don't tease me... don't tease... make me cum, please...\" There it was \u2013 her begging, panting voice. It sent shivers down my own spine. I pushed one of my fingers into her slippery pussy, and attacked her clit with my tongue, flicking it around and pulling it between my lips. The reaction was nearly instantaneous. \"Fuck, fuck, fuck... AHHHH!!\" Her breathing stopped, she tensed up, her back arching up off the cushions. Her eyes were pinched shut, little whimpers over and over. \"Uh, uh, uh, hmm, mm, mm, yes!\" Once again, it seemed that my licking became too much, because she tugged on my hair to pull me up her body. Sliding up, I snuck a kiss on each breast before I found her waiting lips.\n\n\"How... was... that... my... goddess?\" I asked between kisses.\n\n\"God, tasting myself... on your lips... is so hot!\" Her hands roamed over my back, pulling on my ass again, just like earlier. \"Fuck me, please... push into... YESSS!\" She hissed as I entered her, pushing fully into her in one thrust. \"Uhh, you feel so good in me!\"\n\n\"Weren't you supposed to fuck me?\" I felt emboldened, swearing \u2013 something I rarely did. But asking her that seemed to light a fire in her eyes, for she pushed on my chest, up and off of her. I slid out of her as she continued pushing until I was once again on my back. She crawled onto me, straddling my hips, grasping my cock and aiming it at her wet pussy.\n\n\"Then prepare to be fucked!\" And with that, she slid down, all the way. She hissed with pleasure, and proceeded to grind her hips on me. It was such a beautiful sight, watching her hips roll back and forth, feeling her hot wetness sliding up and down my shaft. \"Ah God, so good,\" she moaned. I reached up and cupped one of her breasts, feeling its weight in my hands. I rolled the nipple lightly between my fingers. \"Paul, oh, Paul...\" She was moaning as she rolled her hips in a steady rhythm. It felt so good; I didn't think I'd be this hard, this quickly after her amazing blowjob.",
        "Within minutes, I was panting too, moaning her name lightly, caressing her breasts, her arms, her thighs \u2013 anywhere my hands could reach her. She fell forward onto my chest, kissing me passionately, hungrily. I held her hips and kept a steady rhythm as I thrust up into her from below. Apparently this was a perfect position for her, because she quickly started moaning louder and louder, chanting my name with each thrust. She opened her eyes and gazed at me, so close to my face, her hands cradled my head. I had never received such an intense stare as I received from her just then. Her eyes suddenly snapped shut, she pressed her lips to mine, and I felt her scream in my own mouth. I also felt her pussy grip me tightly, as if begging for my own release. She broke from the kiss, hugging me tightly, her lips next to my ear now, as she made a squeaking moan, then a sudden outrush of air. \n\n\"Oaaaaghhhh... Paullll... Fuck!\" She nipped my ear, then \"Fill me with your cum, baby, cum in me,\" she kissed into my neck. The sudden demand from her, the whisper in my ear, the amazing sexiness of the entire scene had me rapidly approaching orgasm. With a few more thrusts, I plunged as deeply as I could, and grunted.\n\n\"Ahhh... Kat... Ungh, ungh, ungh, ohhhhhh...\" I was clutching her to me, as if she was an anchor. I think my own orgasm must have done something for her, because I felt her pussy clutching again, extending my own pleasure some more.\n\n\"Oh Paul, fuck!\" I felt her nails dig into my shoulders. \"Ohhhh...\" Her body went limp on top of me as she tried to catch her breath. I was breathing rapidly too, in near disbelief I had just had two orgasms with her, and two more only a short while ago. I held her tightly and rolled her sideways so that her back was to the cushions, my back to the open air.\n\n\"God that was amazing...\" She breathed. \n\n\"No kidding.\"\n\n\"You're sure you've never done this before?\"\n\n\"You're my first... this is only my second time ever having, uh... sex.\" \n\n\"Well...\" She was holding my head in her hands as she whispered. \"I'm glad you're my first, now second time.\"\n\n\"What? Really?\" I scooted my head back a few inches. \"But... you're so... amazing! Oh, right, you told me earlier I was your first too, but wow! How can you be so good at it?\"\n\nShe giggled, a sound I was quickly growing incredibly fond of. \"I, uh... practiced. At home.\" She seemed slightly shy, something I hadn't seen on her since the day I met her. \n\n\"Wow. I'm... I'm honored to be your first.\"\n\n\"I'm really glad, too. You saved my life... you've been nothing but sweet to me, kind and considerate, and you are...\" She leaned in to kiss me, \"...an amazing kisser...\" She touched my face, then reached between us and grabbed my limp penis, \"...and an incredible lover.\"\n\nI was reeling, to say the least. This woman, a woman I largely considered perfect, was practically calling me perfect. Holy shit.\n\n\"Uh... wow. I, uh... hmm,\" I leaned in and kissed her, hoping that she could feel all my emotions in that kiss \u2013 a soft, sensual kiss \u2013 with our lips lightly parted, my hand gently stroking her face, replacing my lips, as my hands traced along her face, touching her lips, her nose, her closed eyelids, then back to her hair. \"Thank you. Words can't describe the way I feel right now, about you, about what we've done... I, uh, you are just incredible. That's not even enough. Amazing, stunning, beautiful, gorgeous, delightful, intelligent, fun, cute, sexy, adorable...\" I trailed off, listing several more adjectives, each one making her smile grow larger and larger. By the time I ran out of descriptors, she was positively beaming, and I saw a tear form in her eye and then roll down the side of her cheek. \n\n\"Paul...\" She sniffed. \"You are... just wonderful!\" She pulled me into a hug, a rather difficult position lying on our sides as we were. She laid her head upon my own, sniffing. \"This is... the happiest I've been in, like, well, since I was a kid. Thank you, thank you thank you!\" Then she was pecking my face with kisses all over, making me laugh and smile. I was thinking how, in such a short time since I had picked her up off the side of the road this morning, it felt as if we'd grown incredibly close. And when I had checked the weather, it sounded like we'd have more time...\n\nThe weather! That's right, the radio, the news broadcast \u2013 I had completely forgotten to talk to her, to tell her what I had discovered.\n\n\"Kat.\" The sudden change in my demeanor had her frowning slightly. \"It's ok, but, before we... uh, made love,\" Wow, I still felt nervous talking about it. \"I was trying to tell you what I found out while you took your shower.\"\n\n\"Oh, yeah, the radio. What's up?\"\n\n\"Did you want to dress or anything?\" I thought it was just slightly awkward talking while nude. Enjoyable, of course, but possibly distracting.\n\n\"I enjoy your skin on mine though. Can we cuddle like this and talk?\"\n\n\"Alright.\" I cleared my throat, and stroked her hair some. \"I listened to the radio report about the weather... It turns out the blizzard has gained some intensity and may drop an additional couple inches of snow.\" I paused to gauge her reaction to this.\n\n\"So I get more time with you? Buried in this little cabin with you? That's not so bad. We have food, water, each other.\"\n\n\"True, but, well, we really are stuck.\"\n\n\"What do you mean?\" \n\n\"I tried to open the door earlier. It's stuck, won't budge. I mean, look at the window.\" I pointed to the bay window, where earlier, the snow had been a few inches above the bottom of the glass. Now it was covering over half the glass. She gasped.\n\n\"Oh my God! Paul, it's so beautiful though. It's really like a wall!\" She got giddy, gave a little giggle. \"I mean, wow! To have never seen snow before, then this! I have to see this!\" She jumped off the couch and bounced over to the window. I watched her naked form move and was mesmerized again. Her outline against the snow-covered glass made me wish I could revive my spent dick and make love to her again. \"Wow! You can see a lot of the snow crystals pressed against the glass!\"\n\nI got up to join her, lightly pressing my hand to her back. She snuggled into my arms, laying her head on my chest. \n\n\"That's likely a drift, I don't think that much snow has fallen yet.\"\n\n\"How much do you really think has come down?\"\n\n\"Well, I can't see. I remember hearing that bad blizzards can dump anywhere from 1-2\" of snow an hour. It started early, maybe 8 hours of this intensity so far? Could be anywhere from just under a foot to two feet or more, but the drifts can reach any height, really, depending upon how the wind carries and deposits it.\"\n\n\"So... if the initial report was at, what, 3-6'?\" She looked at me, so I nodded. \"Then you said they added up to 2' more?\" I nodded again. \"Could the snow completely bury the cabin?\"\n\n\"Uh... I don't really know that one. We'll likely see how it pans out tomorrow. It sounded like the snow was going to end tomorrow night, from the initial report, I think. I didn't hear if it was going to last longer. Most of the time, blizzards can't maintain intensity past a day or two. But... nothing's impossible, I suppose.\"\n\n\"We'll figure it out.\" She hugged me tighter. I liked how that sounded. We. I thought I could get used to hearing that.\n\n\"I uh, have some other bad news.\"\n\n\"Uh oh. What is it?\"\n\n\"I... well, my cell has no service. And the phone here is dead. I tried calling my parents, as they expected me around, well, now I suppose.\"\n\n\"Oh... they'll probably be worried. There's no way to get out or anything?\"\n\n\"Not that I saw. I traced the line to the wall, so it's nothing here. It's probably outside, something probably happened.\"\n\n\"We really are stuck.\" Her voice was a bit small-sounding, so I hugged her more tightly. She pressed fully against me now, her warm breasts against my chest, our groins pressed together \u2013 it felt natural and, well, perfect, as if we were made for each other. \"At least I'm with you. I just hope your parents don't freak out.\"\n\n\"Well, your dad is worried too.\"\n\n\"My dad? How do you know?\" She pulled her head back a bit, looking at me quizzically.\n\nThis was it. I had debated earlier on how to ask her or talk to her about her family. I took a deep breath, deciding the direct approach was probably best, seeing as she'd been pretty direct with me, at least in bed.\n\n\"There was a news report saying Doug White, your father, reported you missing, and a few people saw you abducted by masked men in a white van. They think you've been kidnapped, Katherine White.\"\n\n******\n\nChapter 6\n\nI hadn't anticipated seeing the look she had on her face. It looked partially as if she'd been slapped, a bit of disappointment, and a bit of... shame? Still scanning my eyes, she held me at arm's length, her weight shifting from one leg to the other. It was all the more awkward and uncomfortable, since we were both still naked, and she was being really silent. Had I offended her? I just told her about the news report, and mentioned her full name. \n\nKat dropped her head. \"I knew he'd do this.\" \n\nI almost didn't hear her. \"Pardon?\"\n\n\"My father.\" She looked up at me. \"Can we lie on the bed, you holding me? It just feels... right, when you hold me. There's more.\" She pulled away from me, weaving her fingers into mine, and guided me into the bedroom with her. I pulled back the covers and she climbed in first, nestling into me as I got settled. It really was comfortable and felt just right. I felt like the luckiest guy on the planet, as I thought about how amazing she was. And apparently she felt comfortable enough with me to share something pretty intimate. I stroked her hair with one arm, cradling her to me with the other. Her fingers traced lazy circles around my chest, her leg hiked up and resting across my thighs.\n\nShe took a big breath. \"My dad has been pressing for me to come back. I mean, really pressing. He keeps offering 'incentives,' as he calls them \u2013 perks, or bonuses. He's really intent on keeping the business in the family alone. I asked him if any of our cousins could, or would, take over. He rejected that idea quickly, saying that most of them didn't want to take over, or he couldn't trust them. 'I'm not perfect, Dad,' I'd tell him over and over. He'd say 'You are more perfect than you think.' I'm flattered, of course, that he compliments me... I know he loves me, but I wonder sometimes if he loves the company, the history, more than me or Mom.\" She paused, so I thought I'd interject quickly.\n\n\"He's right, though. About you being perfect.\" She looked up at my words and smiled.\n\n\"Thank you.\" She pressed a kiss to my chest. \"But anyway, after that mild falling out, when I left for art school, I think he understood how important art is to me. So he's been telling me to do art while I take over the business, alongside it. But I just can't get him to understand that I really don't care about \"The Five C's,\" as they call it down there...\"\n\n\"'The Five C's'?\" I gave her a puzzled look. \"What's that mean?\n\n\"Copper, Cattle, Cotton, Citrus, and Climate.\" She rolled her eyes, then took another deep breath. \"See, when Phoenix was founded, around 1867 or so, just after the Civil War, a Confederate veteran, Jack Swilling, saw potential in a valley near modern-day Phoenix, basing his ideas off the natives that used to live there. Well, Francis White, the founder of our business, was a Union soldier veteran who had happened to befriend Swilling. McMahon was a soldier as well, in the same platoon or squad, whatever they called them back then, as Francis White, but he supposedly was very anti-south, thinking the lot of them needed to be punished for causing the war. Ass-backward thinking, if you ask me.\" She grinned, feeling my soft chuckle. \"Well, basically, White and Swilling made a deal and parceled off the land available. McMahon wanted nothing to do with Swilling and refused any dealings with him. In the end, it was McMahon who got screwed, not having any land in his name. Well, at first, White wanted to partner with McMahon, creating a mining and cotton ranch, with cattle as they grew their business together. McMahon, as I think I explained earlier to you, wanted to build nearer to the other communities, offering those burlesque houses, saloons, gambling centers, all sorts of stuff like that. I don't think McMahon ever forgot, feeling like he got shafted, and has apparently passed that grudge down through his generations. Our family expanded to have all 'The Five C's' covered across our lands, then expanded into water management sometime in the 1900's. And it just kept growing. Now, word is the McMahon family wants our main plots of land, as it rests at a junction between California, New Mexico, and Mexico. I personally suspect drug trafficking down to Mexico, and some kind of oil deal with Texas. They operate mostly out of New Mexico, with some other operations in Arizona.\"\n\n\"Wow. It's way more complex than I had imagined.\"\n\n\"Oh yeah. It is special that our family has run the business since the founding of Phoenix, but I have absolutely zero interest in that kind of stuff.\"\n\n\"So how is the small business down there able to make your family's company a top Fortune 500 company?\" I was curious, if all they did was crops down there.\n\n\"Arizona produces over 95% of the nation's lettuces, you know, head, leaf, and romaine. Well WFC, our corporation, produces over half of that alone. Something like $400 million annually from lettuce, then like, $300 million each from our cattle and dairy, then all the 'Climate' businesses. Basically touristy things. That pulls in like, $1.5 billion, I think Dad said.\"\n\n\"Yeah, for not having any interest in it, you sure know a lot about it.\" I pointed out.\n\n\"Of course I do! Dad makes sure to tell me every chance he gets, as if repeating the history and current crap will make me magically care about it.\"\n\n\"So even though you could have the chance to take over a multi-billion dollar corporation, appoint someone else to manage it for you, thereby giving you all the money you wanted for art and still appease your dad, you won't do it?\"\n\nShe sighed. \"It's not that simple. Dad is a real hard-ass about who will ever be given the reins of his precious company. He even jammed a clause in the corporate by-laws that spells out that nobody but a direct descendent of Francis White is eligible to hold the office of CEO. When he didn't have any sons, but me, he amended the by-laws to permit the husband of a direct descendant of old Mr. Francis, but even then the husband has to assume the White family name for himself and sign an iron-clad prenuptial agreement giving up any claim to any interest in the company in the event of divorce.\" She took a large breath of air after all that.\n\n\"Uh... shit. No way around that, like my idea, huh?\" This guy seemed to have thought of everything. Most everyone knew of Doug White's story, similar to Sam Walton. Walton had started small, out of nothing, growing that massive retail giant, whereas White had inherited a mid-sized, successful corporation. However, he'd grown the White Family Corporation from a state-level multi-million dollar industry to a multi-billion dollar nation-wide one. So it figures he'd be pushing hard for Kat to take over.\n\n\"Shit. Your dad's pretty intense, huh?\" Lying here naked, chatting with Kat, I felt I had finally loosened up. Conversing with her just seemed easy.\n\n\"Only when it comes to the business. I can remember days where I'd be out on the ranch with him, he'd be teaching me to ride the horses, or telling me about this and that.\" She had rolled over so she was resting her chin on my chest now, and she smiled, staring past me, seemingly lost in thought.\n\n\"Ok, so why do you think the twins kidnapped you?\" That was still bothering me, why they thought a kidnapping would help them. Especially with the last two tidbits of info, Doug White probably wouldn't budge in the least. Unless they held on to her as ransom... \"Fuck, they didn't mean to let you go...\"\n\n\"What? What do you mean?\" She looked puzzled.\n\n\"Kat, think. What good would it do if they just dumped you somewhere, or killed you or something? Sure it'd make your dad sad, but he'd still run the business, probably keeping it away and out of the McMahon family's hands even more firmly. But if they had kidnapped you and kept you...\"\n\n\"Ah, you're right. They could have demanded a ransom or something.\"\n\n\"Kat, are you sure you aren't interested in this? You sure know a lot about it.\"\n\n\"I don't give a fuck about Dad's precious business!\" Kat snapped. The sudden change of demeanor made me flinch. \"Sorry... I didn't mean to yell at you. That's just the same question I got all the time. Everyone kept saying 'Oh you're just like your father,' or 'You'll make a great CEO when your dad steps down,' all sorts of shit like that, over and over and over. It gets old.\"\n\n\"I'm sorry I pressed. I suppose I could respect your position and your decision about everything. I knew I wanted to be a chemist, even though my parents wanted me to stay in Arizona and be close to them.\"\n\nKat sighed, burying her face into my chest now. Her arms snaked around me, and she shuddered. That's when I realized she was crying.\n\n\"Uh, Kat, what's wrong? Did I say something wrong?\" I tried gently patting her back.\n\n\"No...\" She sniffled a little, then looked up at me with tearful eyes. \"I imagine your parents just said something like 'Ok sweetie go ahead,' and I got a little jealous.\"\n\n\"Well, actually we fought.\" \n\n\"Really?\" She wiped her eyes. \"I guess I don't know you or your parents enough to assume.\"\n\n\"No worries. But yeah, when they heard my decision, my dad was all 'Absolutely not, young man, you need to stay home.'\"\n\n\"Wow. He and my dad could be best friends.\"\n\nI chuckled a little. \"I suppose. It took quite a while convincing my parents that I wanted to be at a university that was close to what fascinated me \u2013 snow.\" I grinned. \"They agreed, especially when I told them the nearest university that produced artificial snow and studied it regularly was in Germany.\"\n\n\"Haha, yeah, that'd do it. 'Hey Mom, Dad, if you don't like a day's drive away, I can always go halfway around the world.'\" She giggled and I joined her. It really was easy and fun to talk to this girl. We sat in a small silence for a few minutes, tracing circles on each other's bodies.\n\n\"Paul, tell me again what your dissertation is about?\"\n\n\"Oh, it's about the relationship between quantum physics and the molecular complexity of snowflakes.\" I started to explain, but heard her giggle.\n\n\"That's exactly what you said in the diner. Is that your title?\"\n\n\"Sort of.\" I had to chuckle. I did say those exact words and that exact phrase in the diner. \"The specifics are boring though, really involved technical information. Lots of mathematical proofs.\"\n\n\"Can you share a condensed cliff notes version?\" Her hopeful look, mixed with a slightly curious one, made me laugh.\n\n\"You... are adorable. I have to say it.\" Wow, I'd gone from blushing at almost everything to now making her blush with a compliment. Maybe sex was the missing factor...\n\n\"Don't tease...\" Her playful whine, accompanied by a swat to my chest, told me she didn't mind too much.\n\n\"Ok, ok. Seriously, I think I had mentioned to you about electrons being pretty much all the same. I also told you about the smallest snowflakes being made up of just over 275 molecules, right?\" She nodded, so I continued. \"There's a link between how things behave on a quantum level, and how snowflakes form. There was a doctor who conducted a large research project that was fairly widely published, about having thoughts and intentions affect ice crystal formation. He used a method that wasn't exactly reproducible, and had a hidden agenda of sponsoring sales of bottled water. Not exactly following the scientific method.\"",
        "\"Oh yeah, I heard about that.\"\n\n\"So, what I've done, is investigate the uncertainties of electron flow, as affected by external environmental artifacts \u2013 in other words, what outside forces, if any, affect an electron.\"\n\"Ah! Just like you explained the snowflake, developing differently based on all those factors!\" She was excited to know where I was going, I could tell. I grinned and nodded.\n\n\"Exactly. When you start investigating the world at a really tiny level, things don't behave like they do in the macro world. My research and theories, so far, have helped me write several papers that have been published in scientific journals. I'm not sure if they're of any help to anyone, but they're out there now.\"\n\n\"What are your papers about?\"\n\n\"Most are about what I just described, only in the gory mathematical and scientific detail.\"\n\n\"'Most?' What about the others?\"\n\nI hesitated, only because I knew these papers had earned me a couple angry letters from various sources. But, I figured she was pretty trustworthy.\n\n\"Climate changes.\"\n\n\"What? How does that have to do with quantum states, or whatever?\"\n\n\"Uh... it's not really simple. I'm not sure I can explain it in the condensed version either \u2013 it's based largely on mathematical postulation.\"\n\n\"Ok, you don't have to share that one.\" She made a face. \"I can't believe how smart you are...\" She pressed her hands against my head. \"How do you fit all that knowledge in here?\"\n\nI smiled and responded by tickling her ribs. She squealed, an intense sound that I found absolutely divine and cute.\n\n\"No, DON'T!\" She shrieked, giggling hysterically. \"Stop stop stop!\"\n\n\"I wonder how you can fit all your intelligence, talent, beauty and just plain awesomeness in here.\" I calmly said as I wrapped my arms around her.\n\nHer giggling subsided and she blushed again. \"You're such a sweetheart.\" She repositioned herself in a sitting position, cross-legged, an effect that displayed her beautiful pussy to me. She saw where my eyes had drifted to and grinned. \"And a perv.\"\n\n\"Hey,\" I laughed, \"It's something worth investigating and studying.\"\n\nShe got a sudden serious look on her face and then asked something that made my heart leap.\n\n\"Can I claim you?\"\n\n\"Uh... like... boyfriend, girlfriend?\"\n\n\"Yeah. I think we're a great fit. And I think we'll just fit better together as time goes on, so I was gonna skip the interim and claim you for my own before someone else snaps you up.\"\n\n\"Ha, I'm not sure there were that many girls ready to 'snap' me.\" Her compliment and words made me both blush and grin. \"But I agree. I have been enjoying my time with you, more than I thought possible.\"\n\n\"Now that you've been laid, I bet your confidence will shoot through the roof. And if any girl gets even a tiny glimpse of who you truly are \u2013 that amazing, sexy, funny, interesting, kind, gentle and loving man \u2013 forget it, they'll be pining over you and won't give up very easily.\"\n\n\"Thanks, Kat.\" I reached for her and pulled her to me in a hug. \"I'd love to be your boyfriend and have you as my girlfriend.\" As I held her to me, I thought I heard what sounded like a giddy squeal. Then she pressed me hard into the mattress, leaning over me.\n\n\"God, you make me so hot,\" she breathed. I wondered where she had gotten so worked up, all of a sudden. Probably talking about dating. Whatever it was though, seeing her like this, still naked, and appearing suddenly very horny, I liked it. \n\n\"Let's make love again.\"\n\nI really liked her directness. I thought this time I'd try taking the lead, see if I could actually do it. I sat back up, forcing her onto her back. She yelped in surprise, followed by what sounded like a growl.\n\n\"Oh Paul, God, fuck me now, don't even bother with the teasing.\" I was just about to follow her order, but I thought I'd still try my idea of taking charge.\n\n\"No.\" She looked kind of shocked for a second. \"I'm gonna make love to you.\"\n\n\"Ohhh, Paul...\" I glanced between her legs and saw the glistening wetness awaiting me.\n\n\"You are such an amazing woman,\" I breathed out, before lowering myself to her waiting mouth. Our tongues instantly met, having had some time to become familiar, earlier today. As we kissed, I reached down and pressed my fingers against her wetness, trailing a finger from bottom to top, lightly pressing her clitoris with my fingers. She moaned into my mouth. I felt her hips strain into my hand, eager to continue the pleasure I was giving her. I broke off from our kiss and trailed my way down her body, kissing here and there until I reached her breasts. I gave each breast equal time and attention, between my lips, teeth, tongue and fingers, she was panting and moaning by the time I moved on from her breasts.\n\n\"God, Paul, don't stop,\" She complained as I left her breasts.\n\n\"I won't.\" My lips glazed down her stomach, over her light pubic hair, and met her waiting wetness with my tongue. I think she expected me to tease her longer, since she jerked her hips and let out another yelp. \"Hmm, you taste good.\"\n\n\"Oh, yes, yes...\" I was watching her again, seeing her eyes watch me. She kept her eyes open as I spread her with my fingers, inserting one finger into her, twisting and flexing and pumping it in and out of her, while my tongue licked all across her pussy. Her moaning continued. \"Oh fuck, oh fuck, I'm gonna cum, ah ah ah, oh fuck!\" Her words made me attack her with an increased intensity, once again sucking her clitoris into my mouth, to swirl my tongue around it, flicking it back and forth rapidly while fingering her, a technique I learned from my roommate's boastings.\n\nI paused only long enough to say, \"Cum for me, baby,\" before I continued. She lost it at that, her hips violently jerking, her eyes closed tight and her moans turned to full screams of pleasure. I slowed my intensity, remembering another tip from trusty ol' roommate, until it seemed like she was almost done with her orgasm, before I sucked on her again, inserting another finger into her. She wailed now, what sounded like my name. Her fingers were once again tugging at her nipples, as she rode out another orgasm. I paused to continue and do it again, but she planted her palm squarely on my forehead.\n\n\"No... more... please. Let me... rest a... moment before... we make love.\" She panted between breaths. I liked the sound of that. I rose from between her legs staring down at her glorious nude body. She was stunning. And I was incredibly horny, pre-cum dripping from my penis, onto her mound. She was watching, still catching her breath. \"That's hot... It's like you're... priming me.\" Then she rolled over and stuck her ass up in the air, wiggling it at me. \"Paul, fuck me from behind... I want to feel you take me.\"\n\nWow. That was an amazing position... I stared at her ass, the sight of her anus puckered between her ass cheeks, the slit below it shining in the light \u2013 all of it was such a captivating sight.\n\n\"Paul, fuck me, please!\" She looked back over her shoulder. \"Yoo-hoo... I think it'll feel pretty good, probably more enjoyable than just looking.\"\n\nShaking myself from that spell, I moved forward, lining up my cock with her waiting pussy. I pressed slowly into her, moaning at the contact of her slippery walls on my sensitive penis. Pulling back out partially, I marveled at the sight. It looked like her ass was eating my cock, and it turned me on pretty immensely. I pushed back into her and she grunted in pleasure.\n\n\"Harder, fuck me harder.\" I complied, pulling out and ramming back into her harder. The feeling was so intense and amazing, different from the past two times we'd made love. There was a different pressure on my dick. She must have found the sensations enjoyable too, as she was moaning, chanting and panting all at once. \"Oh, oh, Paul, Paul, yes, harder.\" Her words repeated with each pump into her. Gradually she got louder, everything becoming an incoherent moan. I felt myself getting closer.\n\n\"Kat, uh, I'm gonnn cum,\" I told her. She moaned louder than before, almost a whine.\n\n\"Yes... Paul, cum with me... cum with me... Oh, oh oh oh!\" I felt it, her orgasm, spasms around my cock as I moved in and out of her. My own breathing hitched, the tightness overwhelming me, groaning out my own orgasm, as I pressed as deep as I could into her. My body trembled as I felt each jet of my cum pour into her pussy. Panting, I leaned forward, hugging her shoulders. She reached a hand back to touch mine. We slowly eased apart, a gout of my cum trailing out of her pussy. \"God, I can feel your cum in me now, easing out of my pussy. That's so fucking hot, Paul.\"\n\n\"You are so fucking hot.\" I felt like a kid, 'nuh-uh, you are' type of words. I collapsed onto the bed next to her. She grabbed a towel I hadn't seen earlier and wiped away some of the mess.\n\n\"God this has been amazing, Paul. I never knew it could feel like this.\"\n\n\"Me neither.\" I lay there, breathing deeply, still trying to catch my breath. If we kept this pace up... I couldn't even think or imagine keeping this pace going. \"I think I need a shower though.\"\n\n\"Me too. Again. The shower's awesome, though. Wanna take one together?\"\n\n\"Yeah, sounds fun.\" She giggled, and we hopped up to take a shower together. And it really was fun. We took turns washing each other, teasing and playing with each other, kissing and pressing our slippery bodies together. After we exited the shower, drying each other off, then getting dressed, I realized it was well past 8pm. My stomach was rumbling.\n\n\"Man I am hungry!\" Kat's words echoed my own thoughts.\n\n\"Leftovers?\" I suggested, remembering the quiche from earlier.\n\n\"Sounds good to me.\" With that, we reheated the plate and enjoyed a quiet dinner together, chatting about our pasts, our likes and interests. The more we talked together, the more I found myself really enjoying her company, really liking her. I was glad she had suggested we skip the time thing and just claim each other. I didn't want some guy sweeping her off her feet, that's for sure.\n\nThat evening, after dinner, we spent the whole time together. We watched a movie \u2013 the Western, which turned out to be an interesting tale of betrayal, similar in a sense to Kat's early ancestor \u2013 then we chatted some more, and before we knew it, it was well past midnight. It had been hard to tell what time it was once our window was mostly covered by snow. We decided to head to bed and rest. There wasn't much else to do. Well, have some more sex, but I think we were both spent completely from our wild lovemaking sessions today \u2013 yesterday, technically. I checked the cabin phone once more, just in case, but to no avail.\n\n\"Paul, you comin'?\" I heard Kat call out from the bedroom.\n\n\"Yeah, just checking the phone once more.\" I sighed. I really did worry how long it would take before we could get out of here. I shrugged. No sense worrying about it. Not much we could do to fix it, anyway.\n\nAs I walked into the bedroom, I saw Kat was already snuggled up in the covers, but smiled brightly when I walked in.\n\n\"Saved you a spot.\" She patted the bed next to her. I had to laugh, as the bed looked like it could swallow her up whole. I doubted this was a true King sized bed... it looked larger in every direction. \"C'mon, I'm cold and could use some warming up.\" I didn't know if she meant that as a sexual innuendo, or a legitimate concern. But then I saw her shiver. I shrugged out of my clothes, leaving my underwear on, but she just grinned and shook her head. So I dropped those too, and her grin was wider, as she nodded her approval.\n\nClimbing into bed naked, feeling her naked form press into me \u2013 quite possibly one of the most comforting and relaxing sensations I'd ever felt \u2013 and I soon found myself nodding off.\n\nI dreamt that first night we were together. A strange dream of a white van that kept zooming around in my vision, while I tried to chase it off, attempting to protect Kat from harm. At one point, the van almost had her, some hands grasping her, when everything turned to swirling snow. I was the size of a snowflake, and tiny golf-ball-sized colored things were swirling around me, as well as the larger snowflakes. Then this light shone on one particular snowflake. As I floated over towards it, I saw it had red hair and green eyes, Kat's face materializing on one of the arms of the snowflake. The flake moved and was covering her head, then moving up and down. I was suddenly aware of a pleasurable sensation, as I watched snowflake-Kat's face move up and down one of the arms of my dendrite snowflake. Dream-world slowly faded away to a semi-dark gloom, where I felt warm, hot lips wrapped around my cock, bobbing up and down. I blinked the sleep away, and smiled at Kat, only to moan with the pleasure she was giving me.\n\n\"It was poking me, so I couldn't resist, plus, I had to get rid of it somehow.\" The smile in her voice was cute, endearing and heartwarming. Not to mention sexy.\n\n\"Oh Kat...\" I moaned, running my fingers through her red curls, watching her give me amazing pleasure. A few minutes later, I was groaning my release, watching her swallow every bit. She crawled up toward me, wiping her mouth with the back of her hand. I started moving to repay the favor to her, but she stopped me.\n\n\"Just hold me, I'm sleepy.\" She yawned, punctuating her point. I spooned up behind her, and we fell back asleep. No other dreams came to me the rest of the night, and well, most of the morning. Thanks to the blizzard, still raging, it appeared, the only way to tell the time was from my cell phone.\n\nThat second day in the cabin, we watched our final movie, the terrible action flick \u2013 and it was indeed terrible \u2013 made love some more, ate an amazing cooked meal (I couldn't even pronounce the name) talked more, took a nap together, made love again, showered, and found ourselves sitting in the main room, me fiddling with the radio, trying to find a station that could update us on the weather. Kat had taken out her sketch book and was working furiously on something. I let her be, to focus on whatever creative vision she had. Station after station played music, or talk shows, even a Spanish channel (I didn't know a lick of Spanish, which was funny, considering I grew up in a state that bordered Mexico), before I finally found a weather report.\n\n\"...indicates the blizzard that was in effect until 9pm has been canceled. Light flurries are expected to continue through the rest of the evening and night, with accumulations less than 1\". Snow and blowing snow advisories are still in effect until 5pm tomorrow.\"\n\nI turned the volume down, and glanced over to Kat. She was focused, probably hadn't heard the news report. I rose to go over and tell her, but she suddenly looked up and halted me.\n\n\"Wait! Don't move! Sit!\" I sat down, startled. I looked around, trying to figure out what she was seeing. \"Just a few more minutes...\" I watched her work, scribbling, flicking, shading with her fingers \u2013 it was quite the sight to see. \"Ok, sorry about that.\"\n\n\"That's ok. I heard a weather report.\"\n\n\"Oh, good! What's the scoop?\"\n\n\"No more blizzard. Just light snow, less than 1\" expected.\"\n\n\"How much do you suppose actually fell?\" \n\n\"Hmm...\" I checked my cell phone for the time. \"If it snowed solid since we got in here, perhaps from 4'-8'. Unless the rate dropped at some point.\"\n\n\"Holy shit! That much? Is that like, a new record?\"\n\nI thought for a moment. \"Nope. A town west of Denver got over 5' in one day, back in the early 1900s. This was a big blizzard; don't get me wrong, just not the absolute most.\" I walked over to where she was sitting, wanting a peek at what she was drawing. She saw me and stood up.\n\n\"Oh yeah, I got inspired to draw a more abstract piece.\" She stepped aside, allowing me to sit in the chair. I'm glad I sat, because I was once again, absolutely blown away by her artwork.\n\n\"Oh my... Kat, this... everything you've drawn has been awe-inspiring and has taken my breath away.\" There on the paper, Kat had drawn an image of a cabin, looking much like ours, with snow swooped up the sides of it, such that just the roof and a little chimney were essentially poking out the top of a mound of snow. But what really captivated me, was how she somehow superimposed an image of me, wearing lab goggles, looking as if I was mixing something into the cabin, while keeping the snow at bay. And again, behind my back, were wings, like an angel, and that similar lighting effect around me. I don't know how she got two images like this on the same page. It looked like a photoshopped effect. \n\n\"... Katherine White...\"\n\n\"Wait,did you hear that? The radio \u2013 it said my name!\" Kat rushed over to the radio and turned it up.\n\n\"... as one witness reported seeing a white van driving out of Phoenix, Northbound on I-17. Authorities have expanded their search to include Flagstaff, among other Arizona cities. Neighboring states have been notified of the search for the missing girl, now believed to be kidnapped. Anyone who has seen Katherine White, or has information regarding her whereabouts is encouraged to contact the FBI Crimestoppers at ~\"\n\nKat turned the radio down again, flipping it to the couch.\n\n\"Holy shit... it sounds like one of those Dateline specials...\"\n\nIt did indeed. The FBI was involved now. I wondered what would happen first \u2013 the FBI finding us, or the snow melting or getting moved so that we could leave. I knew one thing for sure: Katherine White was truly a fascinating and exciting woman to be around.\n\n*****\n\nChapter 7\n\nWe sat there, a bit dumbfounded, confused, scared even \u2013 well at least I was. Kat looked somewhat excited. \n\n\"This is gonna be on the news.\" She was staring off into space, her hands clasping together and fidgeting.\n\n\"Uh... it already is, I believe.\"\n\n\"No, I mean televised, probably nationwide. I wouldn't be surprised if international news picked up on it. I mean, my dad started dealing with some exporting.\"\n\n\"Exporting?\"\n\n\"Yeah, like, beef products, certain dairy products, lettuce... those kinds of things.\"\n\nI thought for a second, recalling all the information she'd told me, especially about the family she suspected was ultimately responsible for her kidnapping. If the McMahon family, probably those damned twins, wanted to use some land in Phoenix as a 'base of operations,' what better place than one that's already established and had the perfect front? \"Paul? You look lost in thought. What are you thinking about?\"\n\n\"Oh, I think I found, well, I have a hypothesis as to why the McMahons have been stepping up their 'attacks' on your family's business.\" I took a sip of the water I had next to me. \"I suspect that he's looking for a 'front' to do shady business deals \u2013 perhaps trafficking to Mexico, as you said. If he had an established and well respected name, there probably wouldn't be as intense scrutiny of any shipment leaving with the White name branded on it.\"\n\n\"Fuck...\" Kat's gaze unfocused, staring at a point somewhere beyond where I was sitting. \"That would explain...\"\n\n\"Explain what?\"\n\n\"Some of the other issues we found on our properties \u2013 particularly our warehouses where trucks came and picked up goods to transport them. Slashed tires on the trucks, chains wrapped around axels...\"\n\n\"I wonder if the McMahons even realize how minor and inconsequential these things are?\"\n\n\"There's got to be more to it though. They've always raised their kids to be shrewd and cunning. I heard the conversation my dad was having with the board a while back. They'd been monitoring what McMahon had been doing with his company. Everywhere they looked \u2013 the income statements and balance sheets and other financial reports, other areas of public information \u2013 it all suggested that there was something shady going on. Things that should have been prohibited, regulated, restricted, they found these things were still running. Oil rigs in Texas that weren't up to environmental standards but never got shut down or changed, even cases where the EPA had been called in to investigate but no report had ever been filed, at least publically.\"",
        "\"Good God, how much money does this McMahon group pull in?\" I was thinking there were some bribes, buyouts and payoffs going on there.\n\n\"It's hard to say. We've tried tracing every group, company, business, whatever; they just run too many companies to know for sure. Dad thinks they do that so it's harder for authorities to track where money may be going, how it's changing hands, if illegal things are going on...\"\n\n\"To stay low profile...\" I mused. We sat there in silence for a few minutes, absorbed in thought. I was considering the fact that Kat was probably in serious danger. But if there hadn't been any concrete evidence that this was a targeted attack, and not just some random kidnapping... She was the daughter of a wealthy business owner - maybe that was sufficient to get her police protection. But could McMahon have some police in his pocket too? Or was he even behind all this? Could all the attacks have been from a different party? I sat there staring into space. My eyes fell upon the radio, sitting on the table. It was still playing the station we had been tuned into. I could hear the sound of country music and identified it as my mom's favorite song \u2013 a George Strait number about ocean-front properties in Arizona. It was the end of the song and the station went into commercials. The sound of this commercial caught my interest, as it started with a voice-over, sounding like a skit.\n\n\"The date's over, and you're standing there in front of her door with her. She's inviting you up. 'C'mon, let's go.' Will you be ready when that moment... comes? 'Oh Johnny!' Get protected, with BarrierBlue, available in assorted sizes and textures.\"\n\nWhat an odd commercial. Cheesy, with the innuendo, and horrible voice acting. The woman saying 'Oh Johnny' sounded like she was bored. At least I got to experience the full feeling and sensation with Kat, since she was on the...\n\nOh... no... We were stuck in here and she didn't have her purse when she was taken. She'd said she was on the pill. Didn't she have to take it every day? Or...\n\n\"Kat?\" My voice cracked slightly. She looked over at me so I continued after clearing my throat. \"Uh, earlier... you mentioned you were on the pill, right?\"\n\nI think she saw the worry I was trying to hide. At least, I think. I'm not actually sure what kind of look she gave me, since it crossed her face and left as soon as it had appeared.\n\n\"Kat?\" I pressed again, wondering what she was thinking or what was happening.\n\n\"It... will be ok.\" Kat looked over at me and smiled warmly. \"I'm sorry. I don't want you to think I've lied to you or anything. I really am on the pill,\" she paused for a moment, looking like she was concentrating on something. \"We should be ok. I don't think I'm at the most fertile part of my cycle.\"\n\nWell... that meant that every time we were having sex, we were basically gambling with the chances of having a pregnancy \u2013 with a woman I didn't know much about... except that her father was a really wealthy and probably very powerful man. I'm not sure that would go over well, trying to introduce myself as his daughter's boyfriend and explain away a pregnancy. I glanced at her again, but she didn't look worried. In fact, she was smiling and staring at me.\n\n\"Uh...\"\n\n\"Shhh...\" Kat interrupted me. She got up and walked over to me, placing her hands on my face. \"Don't worry, Paul. It's only been a few days, but I have a feeling everything will work out.\" \n\nHuh, if that didn't sound cryptic then I was reading into what she just said a bit too much. \n\nI felt a little awkward, unsure what to say or do next. I know it was basic, something you just ask your partner. Hmm, my partner. I liked the sound of that.. Kat stretched and yawned. It made me yawn as well.\n\n\"Well, looks like we're both tired.\" She giggled softly. She offered me her hand. \"Shall we go to bed?\"\n\n\"Sounds good to me.\" We walked into the bedroom and turned in for the night. I wish I could say we made love, but it must have been the semi-dark feeling the cabin had, what with all windows covered by snow, that was making me feel just plain exhausted, as if I had run a marathon. Plus, snuggling up naked with Kat was incredibly relaxing and felt incredibly good. I felt her breathing slow, my own eyes closing.\n\n**********\n\n\"...al... aul... Paaaaul...\" The gradual whispers woke me from my dreamless sleep.\n\n\"Uhhhhh... what time is it?\" I asked, feeling like my eyelids wouldn't quite open. I felt her reach across my chest. I squinted out one eye, seeing her check my phone.\n\n\"11. Good morning, sleepyhead.\" She kissed me, a tender sweet kiss that made me happy. That was definitely a wonderful way to wake up in the morning. I caught the scent of coffee in the air, plus something else. Eggs? Bacon? I couldn't tell.\n\n\"You've been busy, huh?\" I kissed her nose.\n\n\"Yep.\" Her giggle was still as cute as when I first heard it. \"I made us breakfast, then when I came in to wake you up, you looked so peaceful. I drew a picture of you, and then I climbed in to wake you, before our food got too cold.\"\n\n\"Ok, just let me use the bathroom real quick.\" I had to pee. Pretty badly. And for whatever reason, it was that feeling that, when just waking, the bladder doesn't feel full, but within a few minutes, you feel like you're going to piss yourself. I also had a rock hard erection, thanks in part to morning wood \u2013 I looked it up once, it actually has a scientific name of 'nocturnal penile tumescence' \u2013 but also to the fact Kat was wearing an apron, which must have been here in the cabin, and nothing else. The front of the apron hid her breasts, but her cleavage was still incredible to look at. What had me turned on the most was seeing her crawl back out of bed, her backside completely bare, save for the two ties at the neck and waist. Wow, her ass was absolutely amazing! I groaned, frustrated that I'd have to figure out a way to pee with my penis sticking straight out.\n\n\"Hmm... did I cause that?\" Kat sounded overly innocent, looking at the tent I made of the covers. \"Maybe I should take care of it then...\"\n\n\"But I have to pee...\" I can't believe I was attempting to refuse her. \n\n\"I read in a magazine that guys can get an intense and incredible orgasm when their bladders are full. Wanna test it out?\" Her sly grin made me smile too.\n\n\"With you looking like that, and knowing what you're capable of, I doubt I'll last long at all.\"\n\n\"Hmm, then we can still have warm food.\" With that, she crawled back on to the bed, peeling the covers off my body. Today, she wasted no time at all, grasping the base of my shaft and putting the head into her mouth. Holy crap, she was right, it felt more intense. Every sensation she made with her tongue, lips or teeth jolted up to my groin. It felt like I was on the edge of orgasm, due to the pressure of my bladder. \n\n\"Oh God, Kat, that feels amazing!\" I started moaning, panting as she picked up speed. \"Oh, oh... hmmm...\" It was intense. I was becoming delirious with pleasure. It started to feel like I was at the cusp of orgasm, but it just kept building in intensity. Higher and higher my pleasure went. My hands grasped hold of the sheets, hanging on for dear life. I was panting now, words failing me. My hips were jerking around, almost out of my own control. My panting built to a rapid in and out as I felt an incredibly powerful orgasm building. This feeling was definitely it, not the trick of my full bladder. I held my breath as the first wave of pleasure felt like a dam bursting within my whole groin. I could still feel my full bladder, pressing against something, making it feel more intense. Kat was watching me, those green eyes glued to mine, clearly smiling. As the next few waves hit, my breath let out, animalistic grunts coming from me with each spasm. Her mouth just caught every bit, swallowing. It felt like she was using my cock as a straw to suck out my cum.\n\nAs the last bit of cum leaked out of me, Kat licked it from the tip of my penis. I felt hyper-sensitive still, the contact making me jerk. \n\n\"Well? What kind of results do we have? Is the hypothesis true?\" She was grinning triumphantly now, as if she'd finished a race or won a medal.\n\n\"Uhhhh...\" I still couldn't speak. I just nodded as much as I could, panting to catch my breath. \"Gahh... I... wow.\" My heart was slowly returning to a normal pace. Kat crawled up to plant a kiss on my lips. I could barely wrap one of my arms around her back to accept the kiss. Part of her weight shifted onto my stomach and I was immediately reminded how badly I needed to pee. \"Ok, gotta go now.\"\n\n\"Oops, sorry.\" She kissed me once more on the forehead, then turned and walked slowly out of the room, swishing her ass side to side, glancing over her shoulder to make sure I was watching. She blew a kiss and then she was out of sight. I slowly tried standing up. My legs were shaky, uncertain after such a powerful orgasm. But, as I made it to the toilet, I was soft enough to pee comfortably. I'd say that experiment was a profound success. But, further studying and confirmation would have to be made before we changed it from a theory to a scientific law. I'd have to tell Kat my findings.\n\nVenturing out into the kitchen/dining area, I saw the small feast Kat had prepared. Wow. This girl did have a talent for cooking. There was a bowl of scrambled eggs, still steaming, a plate of bacon that looked cooked to perfection, some sausage links, biscuits, and Kat had already poured orange juice into our two cups. And there was the coffee I smelled, steaming in two mugs. I sat down in awe, and thanked her for the massive breakfast.\n\n\"You're welcome, Paul. Thank you for that serving of cream,\" She winked. \"I wasn't sure how you'd want your coffee, but I think mine will be perfect now.\" Wow. She was still wearing the apron and nothing else. I had only donned a pair of shorts, but we ate and enjoyed the breakfast. We had idle conversation, small talk and sharing of stories from our childhood and on.\n\nJust as we had finished and were picking up our plates and clearing the table, I heard it. It sounded like a rumble, a low hum. \n\n\"Kat do you hear that?\" I paused what I was doing, listening intently.\n\n\"What?\" She stopped too, looking at me.\n\n\"Just... listen, do you hear that low rumbling sound?\"\n\n\"Yeah, yeah I do. What do you think it is?\" We looked between each other, but the sound gradually got louder and louder, until I realized what it was.\n\n\"Ah, it's a snowblower!\" I quickly set the plates I was holding into the sink then heard the loud knock at the door. I ran to the bedroom, grabbing a pair of pants, then shrugging into my coat. \"Kat, get dressed or hide, whatever you need to do, I think that's Max, the owner!\" Kat scrambled to the bedroom, shutting the door behind her. I approached the main door, hoping that it was just Max, so I could still have more time with Kat. Slowly opening the door, I was right, as the sight of thick, rope-like braids of beard stuck out from a bundled face and body. It was odd, but much better to see that than the wall of snow that had covered the storm door. I opened the storm door for him. \n\n\"Hi! Just clearing out some of the snow, thought I'd check on you guys, see if you needed anything!\" Max gestured behind himself, and I was in awe. There was almost a tunnel behind him, snow reaching up above his head. That has to be a drift; we couldn't have gotten that much snow...\n\n\"Hi Max. We're fine in here, just antsy to get out.\" He chuckled at my response. \n\n\"Cabin fever setting in?\" I could see a grin on his face, as he looked past me to the closed door.\n\n\"Well, uh... not exactly.\" I didn't tell him that authorities were searching for the 'missing' girl I was with. \"The phone in here doesn't work, and my cell doesn't have reception out here.\"\n\n\"It don't work? Huh, I can have that probably fixed by this afternoon, can't guarantee it though.\" He looked thoughtful for a moment. \"I'll be working on clearing out the parking lot and access road to this cabin. We only got a couple plows in town, but those boys know how to handle snow. I'd expect you can take off, well, provided they get the pass opened up, by nightfall, though I'd recommend another night to be safe.\"\n\n\"Thanks Max.\" I was about to shut the door when I had another thought. \"Do you have a working phone, by chance? My parents were expecting me a couple nights ago and I thought I should call them before they worry themselves sick.\" \n\n\"Yeah, I got my phone back at the office. It works, 'cause I called around this morning about the roads and plow progress.\" He looked over my shoulder again. \"Why hello, Miss. I don't think I've had the pleasure...\" He was extending his hand toward her. I stepped out of the way. Katherine was dressed in the heavy clothing we bought at the store.\n\n\"I'm Katherine, nice to meet you.\" She shook his hand. \"How bad are we stuck?\"\n\n\"Well, I was just sayin' probably one more night, to be safe.\"\n\n\"Thank you, for clearing this out.\" Kat looked behind him, her mouth hanging open in awe. I remembered, she said she hadn't seen snow, so to see the tunnel must have been a new sight. \"How did you get through all that snow with that little machine?\"\n\nHe chuckled, holding his finger up to his lips before whispering, \"It's my li'l secret - a method that earns me lotsa money clearin' out snow.\" He stepped back from the door. \"You two take care, stop by if you need the phone; I got a path clear to the office. I'll be running the truck later, trying to clear some of this away. Not sure how that part'll work, with the snow higher than my blade... haven't figured out a secret method for that one. Anywho, see ya folks later!\" I shut the door to keep some of the heat in the cabin.\n\n\"Paul, we can get out of here! We can call our parents!\" Kat was jumping up and down, then threw her arms around me in a crushing hug.\n\n\"Whoa,\" I grunted, her hug squeezing the air out of my lungs.\n\n\"Sorry, I'm just happy. I mean, this has been amazing, seeing snow, being with you... but I'd like to get back home, and hopefully sort some of this mess out.\"\n\n\"Yeah, that would be nice.\" Outside, we heard Max start the snowblower back up, the sound slowly fading away. \"This whole town just seems to be full of nice people.\"\n\n\"You're right. Helen, our waitress, Monty, the store clerk, and Max, the cabin owner... It almost feels like a TV sitcom or something.\"\n\n\"Cheers... 'Sometime's you wanna go...'\" I started to sing the theme song. She was giggling.\n\n\"'Where everybody knows your name!'\" She finished for me, laughing. \"That's awesome.\"\n\n\"Ok, well, if you want to get dressed to walk through this, we can head up to the office and make some phone calls,\" I offered.\n\n\"Yeah, sounds good.\" Kat bounded off to the bedroom again, and emerged a few moments later, wearing snow boots, gloves, hat, and scarf wrapped around her face. She looked adorable, so I thought I'd compliment her.\n\n\"Kat, you look... gorgeous, beautiful as always, but exceptionally cute in all that cold-weather gear.\"\n\n\"You look pretty handsome yourself.\" Her compliment made me grin and blush slightly.\n\n\"Alright, let me get my things and we'll head out.\"\n\nThe trek through the snow wasn't as bad as I had expected, but it was still incredible to see all the snow. It looked like the pictures of the Sahara Desert with the swirls and trenches created by the wind. We passed Max along the way, waving to him. He had gotten in to his truck as he had told us, and was working on the roadways, bit by bit.\n\nArriving at the office, we kicked the snow off our boots and stepped inside. I found the phone just inside the main desk area.\n\n\"You want to call first?\" I asked Kat.\n\n\"Nah, you go ahead, let your parents know you're ok.\"\n\n\"Ok. Here goes.\" I dialed my parents' home number. It picked up after two rings.\n\n\"Hello?\" It was my dad's voice.\n\n\"Hey Dad, it's me, Paul. I'm ok, just got caught in that blizzard and had to ride it out.\n\n\"Just a moment.\" There was a slight pause and shuffling, before the phone speaker nearly deafened me.\n\n\"PAUL!!! OH MY BABY, I WAS SO WORRIED ABOUT YOU!!! HOW COME YOU DIDN'T CALL, YOU SHOULD HAVE CALLED US. YOU WORRIED ME SO MUCH, YOUNG MAN!!!\" I had the receiver away from my head, but my mom could still be heard quite clearly. Kat mouthed the word 'wow' to me. I mouthed back, 'I know.'\n\n\"Mom... it's ok, calm down. We didn't have any phone service, and were literally snowed in.\"\n\n\"We?? Why did you say 'we'?\" Figures my mom would be both that quick and that nosy.\n\n\"Kat and I. I fou...\" Kat interrupted my words with an elbow to my ribs, shaking her head. 'Later' she mouthed to me. I cleared my throat. \"I met Kat earlier and thought I could give her a ride since she lived in Phoenix, too.\"\n\n\"Oh, ok, honey, that's nice of you. We were so worried, Paul. We heard about the blizzard, and we thought the worst when we didn't hear from you.\"\n\n\"I'm sorry you had to be worried like that. Well, the roads will probably be safe enough by tomorrow, so I'll probably see you guys tomorrow night. Love you.\"\n\n\"Ok, honey, we love you too. Be safe, be careful! I still want to meet this girl, you know.\"\n\nI laughed. \"Yeah, of course, Mom. Bye now.\"\n\n\"Bye bye, honey.\" I heard the line click and set the phone back onto the receiver.\n\n\"Whew, that wasn't as bad as I thought it'd be...\" I said to Kat.\n\n\"You did a good job,\" she said with a smile.\n\n\"What, lying to my parents?\"\n\n\"No, of course not. I meant how you allayed your mom's fears in such a calm way. Besides, you didn't directly lie, you just didn't tell the whole truth.\"\n\n\"I suppose you're right. You need to call your dad?\"\n\nShe sighed. \"Yeah, I'd better, before he spends way too much money paying for search parties and whatnot.\" I stepped aside so she could dial.\n\n\"Here goes,\" she whispered to me. She waited longer than I had to. Based on her face, I assume she was listening to the answering machine, or voicemail, whatever it was. Then she started speaking.\n\n\"Hey Dad, it's me. I'm ok, really. I'm not harmed in any way \u2013 I'm ok. A really nice gentleman saw me on the side of the road and offered help, so I'll be riding back with him tomorrow. The snow has had us trapped for so long, but it's been fun to see all the snow. Well, I'll get going, tell Mom I'm ok. Bye.\" She hung up the phone and turned to me. \"It was his answering service. He must be away.\"\n\n\"Do you think we should call the FBI or something, let them know you're fine?\" I wondered.\n\n\"Naw, my dad will do that part. He'll have an easier time getting the message across.\"\n\n\"Ok, well, let's go then.\"\n\nWith our messages delivered to the best of our abilities, we headed back to the cabin. The rest of our day was largely the same as the past couple days \u2013 food, hang-out time, chatting, making love. Although we did get out to build Kat her first snowman. She loved that part, because afterward, when we were cold, we raced into the cabin and helped each other stay warm with hot chocolate, warm showers and cuddles.\n\nThe evening and overnight passed by quickly. The next morning we checked around the cabin, packing all our belongings, cleaning here and there as needed, when we heard a horn sounding outside the cabin. I peeked out the door, surprised to see Helen waiting for us.\n\n\"Hop on in, Sweeties! Max told me you'd be leaving this morning.\" Helen drove up the small inclined hill, parking in front of the office. I paid Max, thanked him profusely for his assistance and wonderful cabins. Back in the truck with Helen, she drove us to the diner, where we enjoyed a meal before we'd be heading out on the road. She gave us some last advice for getting over the pass.\n\n\"Honey, I have some extra chains. I had a truck with tires pretty much the same size as your Explorer. So you get those chains on over the pass and take them off when the sign indicates.\" Helen even stepped outside with us and showed me how to install them. I thanked Helen so much, since without her I doubt we'd have been able to make it to the cabins.",
        "She waved it off as no big deal, thanking us for stopping by. \"Make sure you come back here. And let me know when the wedding is!\" She laughed when both of us turned red. \"Bye Sweeties!\"\n\nThere I was, back in my trusty Explorer, Kat sitting next to me \u2013 this time bundled in winter wear \u2013 and we headed off down the road. The plows had been through and did the best job they could. When I encountered the chains sign, I pulled off at the next rest stop area, quickly putting the chains on. We made it over the pass with no issues. After a few bends and curves, the road straightened out a bit. With a little over 6 more hours to go, we headed down the other side of the mountain pass, a near constant stream of conversation going between us. \n\n\"Paul, can we stop at the next rest stop? I have to use the restroom.\" Kat announced a while later.\n\n\"Sure, I should probably go too.\" We had a lull in the conversation after that, so I began thinking. Had that blizzard not shown up, I would have just taken her straight home. Or, she would have been found by someone else. I think I was the only one really travelling that day, what with a winter storm warning in effect. I realized I was actually thankful for that blizzard. I had discovered things with Kat that I doubted I would ever encounter again. She had awoken a fire within me, a passion for something other than snowflakes. And that was saying a lot. I had based my whole college existence on studying snowflakes. I'd probably continue it, too - there was so much to learn from them. But this feeling \u2013 a warm, glowing feeling, something that I felt deep inside of me, and every time I considered it, I felt happy \u2013 this feeling made me want to get trapped in another blizzard with Katherine White. It made me want to be there for her through thick and thin, to help her when she was down, and to celebrate with her in the ups... Anything I had ever imagined love could be, I was starting to feel with Kat. And yet she had been the one to suggest a commitment... I wondered if she was still serious about that, and if she still would be when we got back to Phoenix. There was a chance she was just putting me on, since there wasn't any other option she could have taken. But everything she had said and done was so genuine. My thoughts were interrupted as the rest stop came into view.\n\n\"Ok, here we are.\" I said, coming to a stop in a parking space. Kat walked quickly to the restrooms. I didn't feel too strong an urge, so I thought I'd use the phone instead. My cell had reception now, so I decided to call my roommate. I tried to explain to him our situation, and if he knew of any way to let someone know that Kat was safe \u2013 like an anonymous tip. He told me he'd try his best.\n\n\"Paul!\" Kat cheerfully called my name. \n\n\"Ok, gotta go, talk to you when I get back?\" I ended my call with my roommate, then turned and saw Kat headed rapidly my direction. I quickly stuffed my phone into my pocket, just in time, as Kat leapt into my arms. It caught me slightly off balance and we tumbled into the snow (considerably less of it here than back around that pass) laughing the whole time. She was straddling my hips and leaned forward to kiss me. \n\n\"Kat, may I ask you a question?\" I was staring into her deep green eyes. She nodded.\n\n\"You don't have to ask me if you can. Just ask me what you want, you know?\" \n\n\"Oh ok... Well, are you still serious about being my girlfriend? Like we talked about, skipping the interim stuff?\"\n\n\"I'd like to give it at least a try, Paul. You're such a wonderful man, and I enjoyed my time with you in that cabin.\"\n\n\"Yeah, me too.\" I paused, taking a deep breath. \"More than I had ever imagined. I... well... I think I'm starting to fall in love with you. I'd really like to give this a try.\"\n\n\"Aww, you really are such a sweetheart!\" The smile was at her lips again. \"So you're my boyfriend now?\"\n\n\"Of course,\" I murmured, between kisses. What started as soft, innocent and sweet kisses, quickly evolved into deep, passionate, tongue\u2013twining, tantalizing kisses. I found myself growing hard, and somehow Kat felt it. Or guessed it. Probably guess, since we had on so much clothing.\n\n\"Ah, I love feeling you get hard.\" Well, I guess she did feel it. She rose off of me to look around, then leaned closer to me to whisper. \"Let's make love.\"\n\n\"Here? Now??\" I was wondering if she meant out here in the open. While we were alone at the moment, anyone could be pulling off for their own rest break.\n\n\"No, silly. We could go over into the woods a short ways, or behind the building.\" That sounded more enticing. \n\n\"Ah, you know I can't resist you. Let's hurry though; it's still really cold out.\" She helped pull me to my feet. We rushed across the snowy open area, behind the brick building that housed the bathrooms. The building had been erected just beyond a line of trees, so we had a pretty effective screen of privacy.\n\n\"God, I just love fucking you,\" Kat whispered into my ear, kissing any exposed skin she could find. Her hands were fumbling with the belt of my pants, so I reached down to help her out a bit. She took the time to pull her gloves off, stuffing them into her pockets. As she reached into my pants, pulling my hard cock out to the air, the sting of the cold was a bit shocking, but the contrast between her still warm hands and the frigid air had a certain allure to it that made it all the sexier.\n\n\"Ah, Kat, that feels good.\" She was using her hand to slide up and down my stiff member. \"Switch spots with me, I have an idea.\" I had been with my back to the wall, so we shuffled around so her back was against the wall. I reached down, undoing her pants and sliding them slowly down so I could reach my fingers in and touch her pussy. It was wet, hot, and seemed ready to be fucked, so I kissed her once more, then spun her around to face the wall, her bare ass facing me. She gasped, bracing her hands against the wall. I bent and kissed each cheek a few times. She caught on to what I was thinking and arched her back, thrusting her hips toward me, letting me catch a glimpse of her glistening pussy tucked between her legs. I pressed my cock between her cheeks, feeling her warmth against me. She reached back to help guide me in, and I felt myself sliding into her, bit by bit. Oh, heavenly sweet bliss, that felt so good, the walls of her vagina creating a sensation of perfect friction on my shaft. \n\n\"Fuck me hard, Paul, and spray my insides with your thick cum.\" Ooooh, she was talking dirty. I liked it, but I wasn't sure how to get her to say more. I decided to do as she said, and pressed hard into her, my hips meeting the flesh of her bare ass. \"Ungh, yes, hard, just like that. Make me scream...\"\n\nI pulled back until just my head was in her before ramming forward again, my hips slapping against her. She grunted, then moaned as I repeated it, over and over, grunting with each thrust, moaning with each pulling out.\n\n\"Paul, oh fuck, I can feel your balls slapping against me... Oh! Fuck, fuck, ungh ungh, ungh, ungh!\" I was pounding into her now, full sawing motion, deeply in and out of her. The pleasure was intense, but hearing her moan and grunt was even sexier.\n\n\"Are you gonna cum for me, Sweetheart?\" I was surprised to hear myself sounding confident and in charge. It felt wonderful and amazing! \"Cum on my dick, let me feel you cum and hear you scream.\"\n\n\"Ah! Fuck, I love hearing you talk dirty. Fuck my pussy, harder!\" We were like wild animals at that point, with me pounding into her fast and hard, her grunts and groans mixing with dirty words of encouragement.\n\nI was panting now, feeling my own release approaching, as I heard her breathing start to hitch. I think that meant she was about to cum, based on our past experiences. Sure enough.\n\n\"Oh fuck, I'm cumming, Paul, fuck, fuck, I'm cumming, oh, your cock feels so gooooood, FUCK!!!\" I thrust a few more times and felt myself shoot into her.\n\n\"Ungh... fuck.\" Was all I could get out, my release overwhelming me. That was intense. I looked around us, seeing the white of the snow everywhere, hanging off the trees, coating the ground with branches and pine cones poking out of the thin layer of snow here and there. With a last effort, I tried to sound in charge and confident. \"Look around and remember this moment, Kat. You got fucked behind a rest stop, surrounded by snow.\" I leaned in, peeling her coat back enough to kiss and nip at her neck.\n\n\"Oh, Paul, you fucking amazing man... I told you there was a confident man inside you... Believe me, I will remember this moment... ooooh...\" She eased forward so I slid out of her. She quickly pulled her pants back up, slightly shivering. I pulled mine up too. Grabbing Kat, I pressed her back into the wall, kissing her deeply and fully. Oh it felt good to feel like this \u2013 in charge, confident, in control. \n\n\"Kat?\"\n\n\"Yeah Paul?\"\n\n\"That was amazing.\"\n\n\"Agreed. But I'm getting cold.\"\n\n\"Right, let's get back to the heater.\" We ran around the corner, and saw that there was a middle aged man letting his dog out and about. As we passed him, I heard him mutter, 'Fuckin kids these days' or at least something similar to that. It made Kat and me giggle, even after we got into the Explorer and started back down the road.\n\n\"Do you think he heard us?\" Kat asked me, giggling.\n\n\"'Fuckin' kids these days,'\" I tried to imitate how I heard his voice. Kat burst out laughing.\n\n\"Oh, I thought he said 'Fuckin' as they please, gah.'\" We shared laughter for a while, enjoying the high of having just made love in a public space, with someone potentially having heard us. \n\nIt wasn't too long before Kat and I eased into the comfortable pattern of conversation and silence we'd grown accustomed to over the past few days together. Everything about it just felt so natural, so perfect. I really was falling in love. Whether it was a long-lasting, permanent kind of love or not was a question for a different day, a different time, but right now, I knew I was falling for her \u2013 hard. 4 days. It didn't seem like that much. Yet it seemed like a long time. In a way, it almost felt like a honeymoon. I let my mind wander and enjoy that thought \u2013 being married to this incredible, feisty, beautiful and talented redhead. Katherine White was a dream girl, and as it appeared, as she had even said, she was MY dream girl. I couldn't help it, I started giggling with giddy excitement.\n\n\"What's so funny?\" Kat asked, looking over at me.\n\n\"Nothing much... I was just thinking how you're, like, totally my dream girl. Everything I ever thought I wanted in a woman, you have and then some. You're far more beautiful than any woman I've ever seen, dreamed, or fantasized about. And you follow my intellectual ramblings as if you were a fellow Ph.D. candidate \u2013 or already holding a doctorate's degree. Plus, you create these amazing sketches from a piece of paper and a cheap pencil, expressing such deep emotions and thoughts with such simple mediums... Oh, and you make good food too.\" After my little speech, Kat had tears, but was laughing at the last line. \n\n\"Oh, Paul, you are really so sweet. I really feel the same about you, you know? You're such a smart guy, knowing a bit about almost everything, but especially all you know about water, snow, and the formation of ice. You're sweet, kind, caring \u2013 willing to share the coat off your back even if it means you'll freeze. You've got an incredibly cute body, I feel like I fit so perfectly in your arms and against you. I feel like the winner here.\" She giggled, further reinforcing the fact that I couldn't get enough of that giggle \u2013 and that each one was unique in and of itself. She was shuffling now, so I glanced over to her, seeing she had unbuckled her seatbelt and slid as far over as she could, to lean on my shoulder and hold onto my arm. She sighed, but it sounded content and happy. We continued talking with her hanging on to me like that. \n\nI'd been so lost in conversation with her that I hadn't noticed our signs. We were only 20 some miles outside Phoenix. Still dressed in our snow attire. That made sense why, even with the heater off, I had started sweating. But, we were almost home. Gosh, those last few hours passed so quickly. I was curious what would happen with the whole kidnapping thing. I thought now the perfect time to let Kat know I cared.\n\n\"Kat, if anything happens after I drop you off, if the whole kidnapping thing is too much, call me, please.\" I had her get a piece of paper and a pen from my glove box, to write my number on. She took it and put it back in the glove box. I was confused at first. Why did she do that? Did she not want my number?\n\n\"You don't need paper, I already put my contact info in your phone.\" Hearing that, I breathed a sigh of relief. \"Paul, I just want you to know that regardless of what happens, I've enjoyed our time together. I will never forget all the things you gave me and meant to me. I really do hope we can be together, but if something happens, please, just remember that.\" I smiled at her, nodding and saying I would remember it, asking her to remember the same of me.\n\nAfter a few short minutes, we were in Phoenix. Kat was directing me toward her parents' home. Navigating the final few turns, I felt a growing anxiety. I was going to be separated from her. I had grown so accustomed to having her around. \n\nPulling into a quiet looking neighborhood, I eased my Explorer along the road, watching for the wide, green ranch-style home. Nope, nope, not that one... ah, there it is. I pulled into the driveway, and shut off the engine. For being the house of a multi-billion dollar CEO, it was really unassuming and, well, plain. As I was opening the door, trying to get out quickly and open her door for her, I noticed rapid movement in the side mirror and out of the corner of my eye. People, who looked as if they had been walking dogs and watering gardens, were now rushing towards my Explorer with guns.\n\n\"GET OUT OF THE CAR, NOW!!!\" I heard a voice scream. What the fuck was going on?\n\n\"GET OUT!!!! FBI!!!\" I stepped out of the car, seeing Kat do the same. We still had on snow pants from earlier. \n\n\"HANDS ABOVE YOUR HEAD WHERE WE CAN SEE 'EM!!!\" A voice yelled, from what looked like an unsuspicious dog-walker.\n\n\"GET ON THE GROUND!!! HANDS OUT!!!\" This came from a tropical-shirt guy who was gardening earlier. Holy shit, what had I gotten into?\n\nI eased myself to the ground, slowly. I could see Kat being hauled off by two men in black uniforms. She was screaming my name, screaming 'don't take him, don't take him from me!'\n\n\"No sudden moves, asshole! Give me your hands!\" A voice yelled behind me. I complied, lifting my hands to the small of my back. I felt my hands being bound together.\n\n\"What's going on?\" were the only words I could manage to get out.\n\n\"Paul Jacob Goodman, you are under arrest in connection with the kidnapping of Ms. Katherine White. You have the right to remain silent...\" He proceeded to ramble off the stuff you only usually see on TV, before I realized what he was saying. Me?? Kidnapped her?? What kind of misunderstanding was this???\n\n\"PAUL!!! NO, LET HIM GOOOO!!! NOOOOO!!!\" I heard Katherine's wails from somewhere off just beyond my vision. The sound of her voice nearly broke my heart. \n\nWhat the fuck was going on!?\n\n\n\nEnding Notes:\n\nBum bum baaaa!!! Holy shit, even I didn't see that coming. What's going to happen next? I hope to have the next section up much quicker than it took this one to come out. Barring unforeseen and unexpected circumstances, I expect it will. It's flowin' and it's flowin' hot and ready.\n\nAs an aside, GaiusPetronius, my editor, was curious about my reference to the full bladder experience, mentioning it wasn't a much heard of sexual experience (And he's retired from being a lawyer, so I imagine he's seen a lot).\n\nI actually experienced this myself, and noticed it is an incredible experience. I was still in high school when I signed up for a sample Playboy. In there was an article about orgasms with bladders being semi to mostly full. Well, it was several years later, after I had met the woman I'm still with, while we were laying there in my bed, in a small apartment in Colorado. We were relaxing, just cuddling and enjoying our time together. I was just about ready to get up and pee when she rolled over and started kissing me. I couldn't pass up the moment, so I went with it. During the entire thing, I felt the pressure of my full bladder, in a sensation that was similar to having a mild orgasm. I also lasted longer than I usually did, to the point that she actually had gotten off several times and was wondering if I was ever going to finish. I redoubled my efforts, and with her encouragement, finally got release. It felt so intense, so incredible. I looked it up, and it turns out, at least in males, that when orgasm hits, the sphincter to the bladder pinches extra tight, so much so that I doubt even the strongest willed could urinate during orgasm. It's supposed to happen to protect the other areas of the plumbing from having waste (read: urine) get into it. (Any wonders where I got the inspiration for Paul's character?)\n\nAnyway, guys, if you're bored and lonely some night and thinking about masturbating, give it a try. Not when you're ready to burst, the \"I-can't-hold- this-get-outta- my-way-before- I-piss-myself\" feeling, but when you have that urge. It's a unique and interesting feeling.\n\nApparently, in females, when you've emptied your bladder before, that \"I'm-about-to-piss-myself\" feeling is actually some glands in there ready to make you squirt. \n\nAnd that concludes my end notes, sorry for the length.  "
    ],
    "authorname": "rexspaulding",
    "tags": [
        "snowed in",
        "blowjob",
        "sex",
        "blizzard",
        "romantic",
        "surprise ending"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-thankful-blizzard-pt-03"
}