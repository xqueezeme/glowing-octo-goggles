{
    "title": "Salvation Ch. 02",
    "pages": [
        "I straightened Moose's tie and adjusted his collar. His thick beard was freshly trimmed and he had a nice, fresh hair cut. Done by a professional stylist this time. He looked very dapper in his black suit. He wasn't entirely comfortable wearing it, but he did it for me.\n\n\"You look so handsome, Marvin,\" I said as I ran my hands over my big man's broad shoulders. He was so tall, a full six inches taller than me. His big, bulky body was also wider than mine. Moose was definitely one sexy bear.\n\n\"So do you, baby. You're so damn beautiful.\"\n\nMoose ran his hand down the back of my own freshly trimmed hair. I slid my hands under his suit jacket and rested my hands at his soft waist, covered by his crisp, white dress shirt. He held my freshly clean-shaven face in his hands and he leaned his head down and kissed me slowly. I opened my mouth and his tongue slid inside. I closed my eyes, losing myself in his deepening kiss.\n\n\"Hey, you two. Enough of that,\" Dad interrupted. \"You're supposed to do that after you're married.\"\n\nI pulled apart and wiped my mouth with the back of my hand, feeling slightly embarrassed at being caught by my dad.\n\n\"Are we ready, Dad?\" I asked.\n\n\"Yeah. Whenever you two are.\"\n\nMoose took a deep breath. \"Ready, Danny?\"\n\nI nodded. \"I'm ready, Moose.\"\n\nDad straightened my suit jacket. \"I'm so happy for you, son.\"\n\n\"Thank you, Dad.\"\n\n\"I never thought I'd see this day. Of course, in my head, I pictured it a little bit different.\"\n\nDad smiled and looked over at Moose. He walked over and ran his hands over Moose's jacket and straightened the lapels. \"You take good care of my boy, Moose.\" Dad's voice quivered slightly and he cleared his throat. Moose and I pretended not to notice Dad's emotional display.\n\n\"Don't worry, Gary. Danny's in good hands.\"\n\nDad smiled at Moose and then gave him an awkward hug and a pat on the back.\n\nMoose and I joined hands and followed Dad into the Justice of the Peace's office.\n\nMoose and I have come a long way in the year that we've been together. Moose is very happy and at peace these days. Every so often, I can tell he is thinking about what happened or his time in prison. But then he looks at me and it disappears.\n\nAs the months went on, Dad warmed up to Moose. I think the whole 'I know you're fucking my son' thing freaks Dad out a little bit, but he really tries with Moose. I think it's actually brought me and Dad closer. Our relationship is stronger than ever.\n\nMoose continued to prove himself at work, showing out all of the other guys. His hard work and dedication really helped to win Dad over. The fact that Moose was so deeply in love with me didn't hurt either.\n\nI was pleasantly surprised that Dad made Moose a supervisor last winter. It showed that Dad had faith in Moose and that he trusted him. One day when Dad retires, I'm sure it'll be my Moose that takes over for him.\n\nWhen we left the Justice of the Peace's office, we had our signed marriage certificate and the both of us wore matching gold wedding bands on our left ring fingers. We walked down the steps and started the next chapter of our lives, as a married couple.\n\n***\n\n\"Wow,\" Moose said as he shifted in his seat. \"These seats are comfortable. I've actually got room for my legs. I can't believe Gary got us first class seats.\"\n\n\"I'm in shock about the whole trip. I mean, five days at a beach resort in Puerto Vallarta? I can't believe it. I've never been to Mexico. Have you?\"\n\n\"Nope. I would have loved to have seen Gary's face at the travel agency while he booked a gay beach vacation. I'll bet he wore a hole in the chair squirming around. I wonder how many times he said 'it's not for me'.\"\n\nI leaned back in my seat and laughed. I looked out the window as the plane started to taxi. Moose reached over and took my hand and interlocked our fingers together.\n\nOnce the flight attendants delivered our snack, they lowered the cabin lights. Moose put his arm around my shoulders and I leaned my head against him.\n\n\"I'm sleepy,\" I said as I covered my mouth and stifled a yawn.\n\n\"I'm horny,\" Moose said as he reached between his legs and adjusted his dick. Moose looked around, and then whispered, \"No one's looking.\"\n\nHe pulled my hand towards his bulging crotch and I yanked it away and laughed. \"You're out of your mind if you think I'm gonna do that with all of these people around.\"\n\n\"Can't blame a guy for trying,\" he said with a grin. \"Hey. I think that's the first time you told me no. Is this how it's gonna be now that we're married?\"\n\nI poked him in the side. \"Just wait until I get you to the hotel, big guy. I'm gonna rock your world.\"\n\n***\n\nAs soon as we got our luggage in the room, we wanted to go down to the beach. The weather was just too nice and the water too inviting to stay in the room.\n\nOf course, there was a little groping as we changed into our swimming trunks. I threw on a loose fitting tank top and slid into my flip flops. Moose pulled on a cream-colored linen button-down shirt that I had bought him. He only buttoned it up half way and it showed off his hot, hairy chest.\n\nI scratched my fingers through the thick hair. \"Nice. Sexy.\"\n\n\"This is never gonna go down if you keep touching me,\" Moose said, his eyes drifting downward.\n\nI looked down to see his fat dick tenting out the fabric of his trunks. I snickered and flicked the head hard with my finger.\n\n\"Ow!\" Moose cried out and looked at me as if I had mortally wounded him. \"No hitting below the belt!\"\n\nI laughed and grabbed our towels. Moose put the hotel key card into the pocket of his trunks and we headed out to the beach.\n\nI was amazed at the crowd on the beach. It was mostly guys, but there were some ladies as well. There were gay couples holding hands and kissing in public. They even had a bar serving drinks beach-side. Of course, neither Moose or I would ever have a need for that service. I didn't really like the taste of alcohol and Moose didn't drink at all, for obvious reasons.\n\nMoose grabbed my hand and linked my fingers with his. I looked up at him and grinned. He smiled down at me, pulling me closer to him. \"This is really nice,\" he said.\n\nWe staked out a spot on the beach and I pulled off my tank top and kicked off my flip flops. Moose unbuttoned his shirt and then froze for a second. I followed his gaze to a group of queens. Their disapproving looks at my husband's body had me seeing red. Just because they were thin and shaved, muscular and waxed, didn't mean that there was anything wrong with Moose. He's a bear and I love him just the way he is.\n\nI wanted to go over there and tell them off, but Moose pulled me back. \"Just leave it, Danny. I don't give a fuck if they don't like me.\"\n\nI turned and put my hands on Moose's soft waist and tickled my fingers on his love handles. I pushed up on my toes as he leaned down and kissed me.\n\n\"I love you,\" I told him. \"I love you just the way you are, my big teddy bear.\"\n\n\"And that's the only opinion that matters to me.\"\n\nMoose had a smug smirk on his face as he shrugged off his shirt. He swatted my ass with his meaty paw, and then grabbed my hand. We ran hand-in-hand to the water, laughing the whole way. The water was a crystal clear blue and not at all cold. We swam and played and laughed together, ignoring everyone around us. It was really nice to be free, to be together in an environment that was safe. We could touch and kiss each other without having to look over our shoulders, and we took full advantage of that.\n\nWhile we were playing, I 'accidentally' splashed Moose right in the face. The sea water went right up his nose. He sputtered and growled and lunged for me. I laughed and tried to swim away. He quickly caught me and pulled me back into his chest and held me tight to him. I felt his cock swell and push into me and I drew in a sharp breath.\n\nMoose nibbled up my neck. He bit on my earring, capturing the ball in his teeth. He gave it a light tug, and then growled into my ear, \"I think we need to get back to the room. Now.\"\n\nI ran for the beach with Moose chasing after me.\n\n***\n\nMoose reached between us and pulled my trunks off and tossed them onto the floor. I pushed his shirt over his shoulders and then lifted up onto my toes and kissed him. I pushed my tongue into his mouth and he groaned and grabbed my head and kissed me back hard. He pulled back and untied his trunks and pushed them down and kicked them away. His big cock was already red and throbbing, totally rock hard. His foreskin was already pulled back, exposing the dripping and swollen head.\n\nHe gave me a little push, and I fell back onto the small sofa. He knelt down on the floor, spreading my legs wide. He grabbed my legs and pulled me so that my ass was hanging off the edge of the sofa.\n\nHe pulled a packet of lube out of his bag and I raised my eyebrow at him. \"Someone's prepared.\"\n\nHe grinned lewdly and tore open the packet. He smeared it into my ass and then slicked up his cock.\n\n\"I hope you're ready, baby, 'cause I gotta fucking be inside you right now.\"\n\nMoose lined up the wide head of his cock to my hole and pushed firmly. He slid into me nice and smooth. After taking him inside me once or twice a day for the past year, I was able to accommodate him relatively painlessly.\n\nHe closed his eyes and held still so that I could adjust, and then started moving. He grabbed my waist tight as he pumped in and out of me. I was able to reach up and run my hands all over his big, furry body. My dick throbbed and leaked all over my belly.\n\nHe had me moaning and writhing as he hit every spot inside me just right. \"So good, Moose...\"\n\nHe suddenly pulled out of me and pulled me to my feet. I looked at him questioningly.\n\n\"Ride me,\" he growled.\n\nHe sat down on the couch, his butt on the edge while he leaned flat on his back against the cushions. He grabbed me and turned me around and I squatted over him and sat down on his cock, facing away from him. I gripped his thighs and rode his dick hard and fast.\n\n\"Fuck yeah,\" he grunted.\n\nMoose brought his arms around my chest and pulled me back so that I was laying flat against his body. His sweaty, hairy body felt so good against my back. Each hair was like a pinpoint of pleasure on my skin. He sucked on my shoulder at the base of my neck while I rocked my hips back and forth. He thrust his hips up into me hard, grunting every time he slammed his girth into me.\n\nHe pushed his fingers into my mouth and I sucked them greedily as we continued our feverish coupling. He brought his wet fingers to my dick. He smeared around the spit and began stroking me. His grip was tight and his pace was frantic. His other hand rubbed the light smattering of hair on my chest, then found a nipple. He tweaked and tugged at it as his right hand jerked me off. That was all it took for me.\n\n\"Moose,\" I gasped. \"Here it comes!\"\n\nMoose bit down on my shoulder and I cried out and exploded, spraying my face and body with a copious amount of hot semen. Before I could even come down from my climax, Moose grabbed me and pulled me off him.\n\n\"On the floor, on your back! Now.\"\n\nI scrambled to the floor and lifted and spread my legs. Moose dropped down between my legs, onto his knees. He grabbed my legs and pushed them up and around his waist. He aimed his thick cock down and slid it into me in one smooth movement. I reached up for him and he grabbed my wrists and held them over my head while he pounded the holy living fuck out of me. I looked up, gazing at him in awe. His face contorted with intense pleasure. His eyes were squeezed shut, his lips parted, a sheen of sweat on his forehead. He looked like a fucking man.\n\n\"Moose,\" I moaned. \"Fuck me.\"\n\nHis eyes opened and he looked down at me. An intense connection was made between us as I stared into his brown eyes and he stared back into my hazel eyes. He held my gaze until his rhythm faltered. His eyes fluttered shut and he let out a long groan.\n\n\"I'm gonna fucking come!\" he shouted. \"Oh! Unh! Fuck! Yeah!\"\n\nMoose shoved hard into me and he blasted my insides with his hot, thick load, grunting loudly with every pulse. He continued to buck his hips and grunt until he was completely drained and his warm seed was overflowing from my body. His arms finally buckled and he collapsed on top of me.\n\n\"Oh my god,\" I gasped. \"You're a beast.\"\n\n\"So fucking good,\" he groaned as he tightened his arms around me. \"Love you, baby...\"\n\nI held Moose to my body, clutching at him tightly as I stroked the fine hairs on the tops of his shoulders. He panted and trembled in my arms, planting light kisses where ever he was able to reach without moving his head.\n\n\"I love you, Moose.\"\n\nIn response, Moose lifted his head and he kissed me slowly and deeply. When we broke apart to breathe, I squeezed him tighter to me.\n\n\"I love you on top of me,\" I whispered. \"Inside me. Holding me. Don't ever let me go.\"\n\n\"Never, Danny. I swear it.\"\n\nWe laid together like that for a while. I finally felt Moose's body relax and he pulled out of me and slid off to my side. He laid his body on mine, pinning me down with his beefy torso and a heavy arm across my chest. He started snoring into my neck and I smiled to myself. Quiet moments like this filled my heart to overflowing.\n\n***\n\nIt was five days later when we finally returned home from our vacation/honeymoon. We were rested, relaxed, tanned and happy to be home. I was utterly exhausted. We had so much sex, I was surprised that I could still walk.\n\nAs soon as we walked in the front door, Harley and Bandit went crazy. The two mutts were so happy to see us, I thought they were going to explode. We both squatted down and let them jump on us and we showered them with love.\n\nI ruffled Bandit's ears and rubbed all over his head. \"Was your grandpa good to you while your daddies were away?\"\n\nHarley barked and crouched in front of Moose. Moose laughed and swatted at his butt. Harley barked and ran circles around Moose as fast as he could. Moose just laughed. \"Who's my happy boy, huh? Did you miss daddy?\"\n\nAfter we satisfied the dogs, Moose took our luggage to the bedroom to unpack while I went to the kitchen and fixed us a late lunch.\n\nOnce we finished eating and cleaning up the kitchen, I put the dogs out back to run around and get rid of some of their excess energy.\n\n\"Man. I'm exhausted!\" I exclaimed as I fell onto the couch. \"It's so good to be home.\"\n\n\"I'm horny as fuck,\" Moose said with a growl as he pounced on top of me.\n\n\"Didn't you get enough at the beach?\" I asked with a smile.\n\n\"Fuck no. I'll never get enough of your hot little ass. That's the benefit of being your husband. Your hot little ass is now mine for life.\"\n\nMoose grabbed me and pinned me down on the couch and started sucking on my neck. I leaned my head back, baring my neck to him, lost in the sensation of his mouth and his beard whiskers against my skin. He reached under my shirt and slid a hand up towards my nipple, but he was interrupted when the phone rang.\n\n\"Shit,\" he grumbled.\n\n\"It's probably Dad, checking in on us.\"\n\nMuttering a curse under his breath, he let me go, got up and then grabbed the cordless phone off the base. He looked at the caller ID and shrugged, then pressed the button to answer it. \"Hello?\"\n\nMoose sat down and his body stiffened. \"Yes, this is Marvin.\"\n\nHis body started to shake as he listened. I sat up and slid next to him and took his hand, hoping to calm his clearly frazzled nerves. He squeezed my hand tightly, pulling on it, wanting me closer. I moved in tighter, and I planted a tender kiss on his shoulder to try to offer him comfort.\n\n\"Of course,\" he said. \"Yes.... Tomorrow.... I'll be there.... Okay, bye.\"\n\nHe hung up the phone and just stared at it.\n\n\"Are you okay?\" I asked.\n\nHe blinked and his eyes focused on mine. \"Yeah. No. That was my mom. My dad is dying. He asked for me.\"\n\nHis shoulders buckled and I pulled him close and held him. I felt his warm tears on my neck and it broke my heart.\n\nMoose hadn't seen or spoken to his parents since he was arrested nearly twelve years ago. I hoped that when he went to see them, that it would give him closure. I also hoped that they would treat him with the dignity and respect that he deserved. The thought of them disrespecting the man I loved made my blood boil. I took a deep breath and pushed those feelings aside. I kissed the side of Moose's head and I held him, trying to let him know that I was there for him.\n\n\"Will you come with me?\" he asked as he sniffled into my neck.\n\n\"You want me to come with you?\"\n\n\"Of course. You're my husband. I need you.\"\n\n***\n\nMoose appeared to walk confidently through the halls of the hospital. Only I knew him well enough to know that he was actually very nervous. I'm sure my own nervousness was readily apparent to anyone who happened to look our way. The sounds of Moose's cowboy boots on the sterile vinyl floor seemed extraordinarily loud. Nearly as loud as the pounding of my heart in my ears.\n\nAfter getting the room number from the nurse's desk, I followed Moose to the elevator. Once the doors shut, he grabbed for my hand and gripped it tightly. I looked up at him and he tried to give me a smile. I slid a little closer to him.\n\n\"It'll be okay,\" I whispered. \"He wouldn't have asked for you if he didn't want to see you.\"\n\nHe nodded and let out a deep breath. When the doors opened, he squeezed my hand and then let go. We walked down the hall, following the signs.\n\nMoose slowed as we approached his dad's room, and then skidded to a stop.\n\nAn older woman stepped out of the room and leaned against the door frame. She was tall and frail and looked to be in her sixties. She took a deep breath. It came out ragged as she exhaled. She finally turned and saw us. Her eyes widened as she looked at Moose.\n\nThey both took hesitant steps forward and she gave Moose an awkward hug. He held onto her tightly for a few seconds longer.\n\n\"Hi, Mom,\" he said quietly.\n\n\"Marvin. You look well.\"\n\nHer eyes darted to me.\n\nMoose reached for my left hand and pulled me to his right side. Mrs. Kellogg's eyes slid down to our joined hands. She looked over at Moose's left hand and then looked up at him in shock. I pulled my hand from Moose's, suddenly feeling very awkward.\n\n\"This is Danny Corbin,\" Moose said, putting his hand on my back and moving me closer. \"Danny, this is my mom. Elba Kellogg.\"\n\n\"It's nice to meet you, Mrs. Kellogg,\" I said.\n\nI held out my hand and she barely touched it and then pulled away.\n\n\"We just got married last week,\" Moose said. \"We've been together for a year.\"\n\nMrs. Kellogg looked absolutely horrified. Her mouth fell open and she looked between the two of us. \"Did you... Did you meet... in prison?\"\n\n\"No. Of course not,\" Moose said. I could sense a little frustration in his voice. I just wanted the floor to open up and swallow me whole. \"Danny began writing me as a pen pal. After I got out, I went to visit him and we fell in love.\"\n\nMrs. Kellogg covered her forehead with her hand and knitted her brows together. \"Prison turned you into a... a homosexual?\"\n\n\"No, Mom. It has nothing to do with prison. I've always been attracted to men.\"\n\n\"But you dated women. And... Kelly...\"\n\nMrs. Kellogg stepped back and slumped into the chair next to the door. \"Oh... Oh my... Oh no...\"\n\nMoose frowned. \"Kelly? What does she have to do with anything?\"\n\n\"Who's Kelly?\" I asked quietly, hoping that I didn't sound jealous, but knowing that I didn't succeed.\n\n\"She's Chad's sister...\"\n\n\"Oh.\" I nodded that I understood and gave him a reassuring smile. She's the sister of Moose's best friend. Chad was his name. The one that died in the car accident. I knew very little about Chad other than the barest of details. Moose understandably didn't like to talk about him.\n\nMrs. Kellogg sighed and stood up. \"Well, your father has been waiting for you.\" She glanced at me, and then looked back at Moose. \"I think for now, let's not mention... Danny.\"",
        "\"I'm not ashamed of Danny. He's not some dirty secret. I'll agree for now, but I do plan on telling him.\"\n\n\"Of course. Just... Let's not upset your father, this time.\"\n\nShe opened the door and Moose followed her inside. I sat down in one of the chairs sitting against the wall and let out a nervous breath. A moment later, Mrs. Kellogg came out and sat down next to me.\n\n\"He'll be fine,\" she said.\n\nI just nodded and we sat there in uncomfortable silence.\n\n\"It's nothing against you,\" she said suddenly. \"I'm just not sure about... all this... I don't really understand...\"\n\n\"It's okay. We love each other. We just got married, last week actually. We're very happy together. I want Moose to be happy. It's taken him a long time to forgive himself... to get to the point where he is now. I don't want anything to cause a setback. I won't have him upset.\" I realized that I had raised my voice and I backed down. \"I'm sorry. I just... I hate to see him hurt. He's had enough of that. He means everything to me.\"\n\nI heard her swallow and she placed a tentative hand on my leg and gave it a quick pat. It wasn't very reassuring, but it gave me hope that she might be trying.\n\nShe cut her eyes at me, and then looked down. \"There's another reason why we asked Marvin to come back home. But now... I'm not sure...\"\n\nA doctor walked past us and gave us a smile. He knocked on Mr. Kellogg's door and opened it. Moose stepped out into the hall and looked at me. His eyes were red and watery and he was trembling.\n\n\"Can I talk to you for a minute, Danny?\" he asked quietly.\n\n\"Sure.\"\n\nI got up and followed Moose down the hall. We found a couple of chairs and sat down together. He glanced around the hall and then he took my hand and squeezed it tight. He held it up to his lips and kissed my knuckles. He lowered our hands to his thigh and didn't let go.\n\n\"Are you okay?\" I asked.\n\n\"Yeah,\" he nodded. \"I'm good. He didn't say he was sorry... but he said it was good to see me, so I guess that's something. He said I looked good. That's promising, don't you think?\"\n\n\"I do. I'm so happy for you, Moose,\" I said and gave him a discreet kiss on his shoulder. \"Did he say anything about the other thing?\"\n\n\"What other thing?\"\n\n\"Your mom said there was another reason they asked you to come home besides your dad.\"\n\nMoose sighed. \"I don't know. He looked awful, Danny. So pale. So thin. The cancer has just ate him up. Just a ghost of the man I knew...\"\n\nI thought of what I would do if it was my Dad and my heart clenched. I closed my eyes and took a deep breath. Moose reached over and put his arms around my shoulders and gave me a reassuring squeeze. I opened my eyes and smiled thankfully at him. \"I should call Dad and let him know we're okay.\"\n\n\"God. I hate that we had to leave town again after being off a week. I just hope I didn't leave Gary in a bind.\"\n\n\"Moose, your job is safe. You should know that.\"\n\n\"Yeah, I know. Sometimes I still feel like I need to prove myself. I don't want to take anything for granted.\"\n\n\"I know that. And Dad knows that, too. You know he wouldn't have promoted you if you didn't deserve it.\"\n\n\"Not all of the guys think that. Some of them think it's because I'm fucking you.\"\n\n\"Well, they're just jealous. They don't know what they're talking about.\"\n\nThe doctor came out of the room and stood in front of Mrs. Kellogg. Moose and I stood up and walked over to listen to what he was saying.\n\n\"It could be anytime,\" he said quietly.\n\n\"Thank you, Doctor,\" Mrs. Kellogg whispered.\n\nThe doctor squeezed Mrs. Kellogg's arm and then walked away to check on his other patients.\n\nMoose put his hand on his mom's shoulder, and then said, \"I'd like to introduce Dad to Danny.\"\n\nMrs. Kellogg shook her head. \"I don't think it's a good idea. He won't understand.\"\n\nMoose gave her a look that said he wasn't backing down.\n\nShe sighed softly. \"If it's that important to you...\"\n\n\"It is. I want Dad to know Danny... before...\"\n\nShe pursed her lips together and nodded her head.\n\nMy stomach did flips as I followed Mrs. Kellogg and Moose into the room.\n\nWhen I saw Morton Kellogg for the first time, I didn't see any sort of resemblance between him and his son, besides his brown eyes. He looked like he was tall, and perhaps at one time he was a burly man. But now... Now he was gaunt and sickly and despite the way he hurt Moose all those years ago by turning his back when Moose needed him the most, my heart hurt for him. His breathing was labored and he seemed to struggle as he tried to keep his head up. He looked at me with a confused expression.\n\nMoose pulled me to his side. \"Dad.\" His voice was quivering with nerves. \"This is Danny. Danny and I are married.\"\n\nMr. Kellogg closed his eyes and shook his head. He had a coughing fit, and then looked between the pair of us disapprovingly. \"I figured something like that might happen in prison.\"\n\nMoose opened his mouth, presumably to correct him, but then decided to remain silent.\n\nMr. Kellogg stared at me and I dropped my gaze, unable to bear his clearly displeased scrutiny. He turned back to Moose and sighed in resignation. \"Does he know about Chad?\"\n\n\"Yes, of course. Danny knows everything. I don't keep secrets from him.\"\n\nMrs. Kellogg quickly stepped forward and interrupted the conversation. \"We're gonna let you rest, Morton. I'll be back in a little bit.\"\n\nShe leaned down and kissed him on the lips, and then on the forehead.\n\nMoose squeezed his hand. \"Bye, Dad.\"\n\nMr. Kellogg pulled his hand free, patted the top of Moose's hand, and then said, \"Bye, son.\"\n\nMoose swallowed visibly and his eyes brimmed with moisture. Something told me that Mr. Kellogg's display just now was the most affection Moose had received from him in a long time. Maybe ever. Moose nodded at his Dad.\n\n\"It was nice to meet you,\" I offered.\n\nHe appeared very ill-at-ease, but he finally said \"You, too\" and then closed his eyes with a sigh.\n\n***\n\nWe followed Mrs. Kellogg down to the cafeteria. We went through the line and got some sandwiches and let Moose pay the bill. The three of us sat at a small round table in the back corner where there was a little more privacy from the rest of the patrons.\n\nI unwrapped my turkey sandwich and just picked at it. I looked at the other two and noticed they were doing the same thing. An uncomfortable tension filled the air, thick and stifling.\n\nMrs. Kellogg pushed her sandwich aside. \"So what have you been doing these days, Marvin?\"\n\n\"I work for Danny's father, Gary. He owns Corbin Tree Services.\"\n\n\"Moose is our crew supervisor,\" I said with pride.\n\n\"Supervisor?\" she asked with surprise. \"That's a lot of responsibility.\"\n\n\"Yes, ma'am,\" Moose said modestly.\n\n\"It sounds like maybe you've turned your life around then.\"\n\n\"I'd like to think so.\"\n\nMoose glanced at me and I gave him a look that let him know how much I loved him and how proud I was of him.\n\nMrs. Kellogg's eyes grew misty and her hands started to shake. \"Marvin... I... I don't know how to tell you... I thought it was a mistake then, but the Turnbills and your father... After Chad died and then you... um, went away...\"\n\nShe grabbed a napkin and dabbed her eyes and then continued, \"James Turnbill died a couple years back. Esther, well, her health isn't doing so well these days. And Kelly... She's been in and out of rehab... She can't stay off the booze and drugs. This last time she left before her treatment was over and she disappeared... I thought she might have kept in touch with you?\"\n\n\"I haven't talked to Kelly Turnbill in well over twelve years, Mom. Not since before the accident.\"\n\n\"She was pregnant,\" she whispered.\n\nMy mouth fell open and Moose looked at her in shock. \"What?\"\n\n\"She was pregnant. They agreed that you were to never know. It wasn't right. I'm sorry, Marvin.\"\n\nMoose stood up abruptly and his chair flew backwards and clamored to the floor. He stormed out of the cafeteria.\n\nI wanted to go and chase after him, but I was so stunned I couldn't move. It hurt. Even though he didn't know, the thought that he had a child with someone was like a knife to my heart.\n\nMoose walked back in and leaned his hands on the table and glowered at his mother. \"You had no right to keep that from me. No right!\"\n\nHe pushed from the table and paced back and forth, muttering curses under his breath.\n\n\"I know, Marvin. But you were convicted and... Well, James, he never forgave you. Chad was his only son--\"\n\n\"I know that! You don't think I know that? He was my best friend and he died. He died and it was my fault. I think about him every day and it kills me inside. Every day, Mom.\"\n\nI realized a hush had fallen over the cafeteria and everyone was staring. I was close to tears, but I took in a breath and remained strong and calm for Moose. I stood up and took Moose's hand. He was shaking and I could tell that he was close to losing control. \"Moose,\" I said quietly. \"Please. Sit down.\"\n\nHe pulled me into a tight hug. He dropped his forehead onto mine and took a few deep breaths. I gently rubbed the back of his head and his back and his breathing slowed and he relaxed into my arms.\n\n\"That's better,\" I whispered. \"It's okay.\"\n\nHe let go of me and picked up his chair and set it back on its feet, and then sat down.\n\nMoose took a bite of his sandwich and stared into space as he chewed. \"Kelly and I only went out like two times... We weren't in love. It was... To be frank, it was just drunken sex...\" He then added in a quiet mutter, \"And not very good.\"\n\n\"All it takes is one time,\" she said with a shrug.\n\nMoose hesitated for a moment, and then asked the question I was dying to. \"Are you sure it's mine?\"\n\n\"I had my suspicions at first. But Chad is the spitting image of you.\"\n\n\"Jesus. She named him Chad...\"\n\n\"Yes. Kelly insisted. She also had you listed as the father on the birth certificate against her father's wishes. His name is Chad Marvin Kellogg. He just turned twelve.\"\n\nMoose buried his face in his hands. After several calming breaths, he raised his head and looked up into his mother's face. \"Where is he?\"\n\n\"He's living with Esther Turnbill right now. She can't take care of him. She has health issues and he... He is a... handful. Esther wants us to take him. We see him on occasion and we send child support payments when we can. But your father and I decided he should live with you, what with him being sick and all.\"\n\nMoose took a deep breath. \"When can I meet him?\"\n\n***\n\nWhen the car pulled up in front of the hospital, Moose and Mrs. Kellogg stood up. I really wished we could have done this somewhere else, and taken the time to do it more gently. But I understood the need to remain close to the hospital and Mr. Kellogg. Just in case...\n\nI remained on the bench, observing, not wanting to be in the way or to cause any additional stress on an already tense situation.\n\nA frail woman got out of the car and opened the trunk. The passenger door opened and a boy got out of the car. I looked at the husky twelve-year-old's face and I knew that he couldn't have been anyone else's child. He was big for his age. His hair was trimmed down to a crew cut, and it was the same color as Moose's. He also shared Moose's brown eyes. And like when I first met Moose, they were filled with pain.\n\nChad shoved his hands in his pockets and stared at the ground with a scowl on his face.\n\nMoose walked up to Esther Turnbill. He dipped his head sincerely. \"Mrs. Turnbill, I--\"\n\nShe raised her hand as if to slap him across the face. She pulled back and covered her mouth. She burst into tears and Mrs. Kellogg pulled her into her arms and led her away to comfort her. I wanted to go to Moose so bad, but I pushed my hands under my knees and remained seated on the bench.\n\nMoose moved in front of Chad and squatted down. \"Hi, Chad. I'm Marvin Kellogg. I'm your dad.\"\n\n\"You're not my dad,\" he said as he folded his arms across his chest. \"My dad died!\"\n\n\"I know that's what they told you... Your grandma, she didn't try to explain...?\"\n\n\"I don't believe her. My mom and grandpa wouldn't lie to me.\"\n\n\"I know this is all confusing and sudden... But it's best if you stay with me, at least until your mom is better.\"\n\n\"Whatever,\" Chad said.\n\nThe boy's chin started to quiver and he turned away from Moose. His shoulders shook and Moose stood up and pulled the boy into his arms. Chad cried wracking sobs into Moose's chest. Moose held him tight and rubbed his back, whispering comforting words into the top of his son's head. Moose lifted his watery eyes and looked at me.\n\nI sat there and watched with tears falling down my face. I sniffled and wiped my cheeks.\n\nChad suddenly pushed Moose away and his mood turned angry. \"Get away from me! Just leave me alone!\"\n\n\"Okay,\" Moose said as he held up his hands and stepped away. \"Why don't we put your things into my truck? Okay?\"\n\n\"Whatever. Do it yourself. I don't care,\" Chad said. He went and sat down on the curb and folded his arms across his chest.\n\nMoose sighed and looked at me, clearly wanting me to rescue him. I shrugged and looked at him helplessly. I didn't know what to do either.\n\n\"Let me help you, Moose,\" I said. I walked over to the car and pulled a suitcase out of the trunk.\n\nChad scoffed. \"'Moose'? That's a stupid name.\"\n\n\"It's a nickname,\" Moose said.\n\nChad rolled his eyes. \"Duh.\"\n\nI helped Moose carry all of Chad's things to the truck. It took the pair of us two trips to bring the suitcases and boxes and load them into the bed of Moose's truck.\n\nMoose pulled me to the side of the truck and hugged me. He leaned his head on mine and sighed deeply. \"Jesus, Danny. What am I gonna do? I didn't even ask if all of this was okay with you. It all just happened so suddenly.\"\n\n\"You don't have to ask, Moose. He's your son. This isn't exactly how I envisioned a family with you, but... We have to take care of him. He's your responsibility.\"\n\n\"He's so hurt and so angry. I don't want to make it worse for him. I'm fucking scared to death. What if I fuck it all up?\"\n\n\"He needs stability and love. You can give him that.\"\n\n\"Yeah, I suppose you're right. You gave that to me and I guess I turned out okay.\"\n\nWe both laughed softly. \"Yeah. You turned out great.\"\n\nMoose looked up over the top of his truck. He pulled me closer to the front out of the way of anyone who might be looking. He leaned his head down and gave me a soft kiss on my lips. I pushed up and returned his kiss. After one final quick kiss, we walked back.\n\nChad was standing with a stoic expression on his face as his grandmother told him goodbye. Moose and I hung back, not wanting to intrude or cause a scene with Mrs. Turnbill.\n\nMrs. Turnbill was in tears as she got into her car and left. I followed Moose to Chad's side. Moose rubbed his hand on Chad's back and Chad shot him a dirty look and squirmed away. Chad's eyes were bloodshot and he was trembling slightly, barely holding it together. I admired him for his brave face, but I knew that it was just a front. He was hurting inside.\n\nMoose put his hand back on Chad's shoulder. \"Chad? I want to introduce you to someone.\"\n\nI stepped forward and held out my hand. \"Hi, Chad. I'm Danny.\"\n\nChad ignored my hand and I finally dropped it.\n\n\"I live with Danny,\" Moose said. \"He and I... are... um... good friends.\" Moose winced at his fumbling.\n\nChad rolled his eyes. \"I'm not stupid. I know he's a fag, and so are you. I knew that the first time I saw you guys together.\"\n\nMoose took a deep breath and I could tell he was counting before he spoke in anger. \"We're just getting to know each other, so I am going to let that slide this time. But if I ever hear you call Danny the F-word again--\"\n\n\"Whatever! I can say what I want. You're not the boss of me. Moose.\"\n\nChad snarled 'Moose' with a disrespectful tone that was clearly a challenge. Moose started to grind his teeth. I shook my head at him, telling him to let it go.\n\nMrs. Kellogg linked her arm around Chad's and tried to diffuse the situation. \"Why don't we go back in and check on your grandfather?\"\n\n***\n\nMorton Kellogg died the following morning. Though it was hard on everyone, we all agreed that he was in a better place where he was no longer suffering. He was cremated and the service was held without delay, since all of the arrangements had already been made.\n\nAfter five long and emotionally exhausting days, we would finally be leaving the following morning, taking Chad home with us.\n\nTonight would be our last night in the house that Moose grew up in. I, for one, was glad to be leaving in the morning. I'd had enough of the stress of this visit and I longed to be home in my own bed. I also felt a strong need to see my Dad, to physically hug him and to tell him how much I loved and appreciated him.\n\nI watched from the doorway as Moose tucked Chad into bed. Chad was sleeping in Moose's old bedroom. I looked around the room and it just made me sad. It was devoid of anything that would have reminded the Kelloggs of Moose. It was just another guest room with a single twin bed.\n\n\"You don't have to tuck me in. I'm not a baby.\"\n\nMoose sat down on the bed and adjusted the blankets around his son. \"I know. But I wasn't around when you were a baby, so just humor me.\"\n\n\"Whatever,\" Chad said quietly.\n\nMoose let out a grunt, then grumbled, \"I'm gonna have to break you from that word.\"\n\n\"Whatever, Moose.\"\n\nMoose ran his hand over Chad's head, and then bent down and kissed him on the forehead.\n\n\"Knock it off,\" Chad said as he turned his head away.\n\nMoose got up and I could see a momentary flash of hurt on his face.\n\n\"Night, Chad,\" Moose said.\n\n\"Goodnight, Chad,\" I added.\n\nChad rolled over onto his side. Moose turned off the light. As he shut the door, Chad quietly said, \"Goodnight.\"\n\n***\n\nMoose turned off the light and crawled into bed with me. The queen-sized bed in the guest room had to have one of the most uncomfortable mattresses ever created. It was old and lumpy and sagged in the middle. After we adjusted to try to get ourselves comfortable, Moose pulled me to him and hugged me tight.\n\n\"I talked to Dad,\" I said quietly. \"He's nervous -- but excited -- to meet Chad. He spent all day yesterday fixing up our guest room for him.\"\n\n\"I really hope he didn't do too much. Sometimes your dad gets carried away when he gets a project.\"\n\n\"He's more than happy to do it. He said this is the closest he'll get to having a grandson. He's over the moon.\"\n\n\"Huh. I hadn't thought of it like that.\"\n\n\"Well, I told him to calm down a little bit. He barely accepts that you're his father. It might take him a while before he looks at me like a parent and my Dad as a grandparent. Hell, he might never see me as a parent figure.\"\n\n\"I guess I can't fault your Dad for trying. He's a good guy.\"\n\n\"Yeah. I'm so sorry about your Dad, Moose,\" I whispered. Tears filled my eyes and I lovingly stroked the hair on his chest.\n\nMoose tightened his arms around me. \"It's okay, baby. I'm just grateful that I had one more day with him. A day where he knew and accepted the real me. A day where I was his son again.\"\n\n\"I'm so glad he got to see what a wonderful man you grew up to be.\"\n\nWe quietly laid together, hugging and touching and kissing tenderly.\n\n\"I love you, Danny.\"\n\n\"I love you, Moose.\"\n\nMoose reached up and ran his hand over my clean-shaven face. \"I like you smooth,\" he said.\n\n\"Yeah? To be honest, I shaved off my beard because I accidentally cut through it while trying to trim it before the wedding. My hands were shaking. Nerves.\"\n\nMoose chuckled. \"It took too much time to get it lined up along your jawline like that. I don't have the patience.\"\n\n\"I like your beard, all full and thick. I don't want you to shave it off.\"\n\n\"Nah. It's low maintenance. Plus, I got this little hottie who keeps it trimmed short and edged neatly for me.\"",
        "\"Ooh, I'm jealous,\" I laughed.\n\n\"You should be. He's a fantastic fuck.\"\n\nI laughed and Moose leaned in and kissed me. Our kisses quickly turned passionate. He kissed and licked along my smooth jawline. \"Mm, that's nice,\" he moaned.\n\nHis lips pressed against my neck and his tongue snaked out up and down the length of my jugular. He sucked gently against the base of my neck as his hand drifted down my chest and stomach. I let my own hand move down further and we grasped each other's hard cocks. We slowly stroked each other as we made out. Moose finally broke the kiss with a groan.\n\n\"I need your mouth, baby,\" he whispered against my lips. \"Suck me.\"\n\nMoose rolled flat on his back and moved his hand to the back of my neck. I slid down and pulled his foreskin back and took him into my mouth. Moose's body was trembling as I swallowed him as deep into my throat as I could. I knew he wouldn't last long. This was our first sexual contact since we arrived in town. I sucked hard as I came up, gliding my hand up the length of his thick hard-on. My other hand raked through the hair on his chest and belly.\n\nMoose's breathing rate increased and his grip tightened on the back of my neck. I could tell that he was trying to keep the noise down.\n\n\"I'm close,\" he whispered.\n\nI pulled off, wanting to draw out his pleasure a little more. I held him in my hand and bent down and took one of his nuts into my mouth. I sucked gently as I laved my tongue all over the soft, puckered skin. I could feel Moose trembling. His hand rubbed the back of my head, encouraging me. I took his other ball into my mouth and gave it the same treatment.\n\nMoose grabbed my head and pulled it back to his dick. I took him back into my mouth, intent on making him explode. I sped up my pace and used my mouth and hand to bring him to a quick climax.\n\nMoose drew in a sharp breath. \"Aw fuck, you're gonna make me come.\"\n\nHe stifled his grunts and groans as he unloaded a bucket of spunk down my throat and into my mouth. I slurped and sucked down every drop.\n\nHe reached under my arms and pushed me onto my back. He bent over and swallowed me into his hot mouth. I bit my fist as his finger slid into my ass. Moose sucked me off while he finger fucked my ass. Within a minute, I bit my lip and quietly came, shooting my load into his sucking mouth.\n\nMoose crawled on top of my trembling body and pushed his arms under me.\n\n\"You do that so good,\" I said quietly. \"You always make me come so fast.\"\n\nAfter sharing a sloppy kiss, Moose rolled us over so that he was on his back. I laid my head on his chest and slowly stroked his furry belly.\n\n\"Everything is gonna be okay,\" I said quietly. \"I know it.\"\n\n\"I hope you're right, baby.\"\n\n***\n\nThe six hour drive dragged on. Chad sat in the back seat of Moose's quad cab pickup pouting the whole way.\n\n\"Are we almost there?\" Chad whined.\n\n\"No,\" Moose grumbled. \"We still got another two hours. Just play your Game Boy.\"\n\n\"It's a PSP, not a Game Boy,\" Chad said with an eye-roll.\n\n\"Whatever,\" Moose said mockingly.\n\nThat threw Chad off. Unable to come up with a better comeback, he just muttered his trademark response: \"Whatever.\" He slumped down in his seat and picked up his game system.\n\nWhen we finally got home, before I unlocked the door, I warned Chad, \"We have two dogs, Harley and Bandit. They'll be excited, but they won't hurt you.\"\n\nNo sooner, had I got the door open, then the dogs jumped and ran around the three of us.\n\n\"The brown terrier is Bandit,\" I said. \"The black fluffy one is Harley.\"\n\nThey sniffed all over the newcomer, but seemed to take a liking to him right away, especially Bandit. Chad seemed to really like the dogs and I hoped that they would help him adjust and cope with his new home.\n\n\"Come on, boys. Let's go out and potty,\" I said. On hearing the magical 'P' word, the dogs ran straight to the back door and I opened it and let them out.\n\n\"They just go out back?\" Chad asked as he pushed aside the curtain on the back door and looked out the window.\n\n\"Yes. It's fenced in, so they have free-reign.\"\n\nMoose and I gave Chad a tour of the house, ending in the guest room.\n\nMy mouth fell open when I saw the room. Moose sighed and shook his head. Dad had totally redecorated the room, complete with brand new furniture. It looked like a boy's room now, complete with a sports theme. He had even painted the walls blue.\n\n\"This is your room,\" Moose said. \"I hope it's okay.\"\n\nChad looked around and shrugged. \"It's okay,\" he said dismissively. As he glanced around, I could tell that he liked it, but he was trying to act like he didn't care.\n\n\"This is your home, too, Chad,\" Moose said. \"So make yourself at home, okay?\"\n\nChad let out an exaggerated sigh. \"Okay.\"\n\nAfter a dinner filled with uncomfortable silence, Moose had Chad shower and then tucked him into bed.\n\nMoose and I crawled into bed together. He turned me onto my side so that I was facing him. His arm snaked around my neck and he pulled me to his chest. His cock hardened and pushed into my stomach. I wrapped my hand around it and gave it a gentle squeeze. Moose let out a soft sigh. We fell asleep together just like that, tangled in each other's arms and legs.\n\n***\n\n\"Stop,\" I whispered, pushing Moose back with my butt. I was at the stove flipping pancakes and frying bacon, trying to fend off Moose's paws. I felt weird about fooling around or touching when Chad was in the house. Moose didn't seem to mind. He'd kiss me or paw at me without a second thought of his son being around.\n\nThis morning he ambushed me while I was in the shower. Before I knew what was happening, I was turned around and pressed against the wall. As Moose entered me from behind and took me hard and fast, I prayed that Chad couldn't hear us.\n\nMoose laughed, and then poured himself a mug of coffee and sat down at the table.\n\n\"Good morning, sunshine,\" Moose said. I turned to see Chad shuffling into the kitchen. He was still wearing a t-shirt and pajama pants. His eyes were half closed. His face was a little red and he had a line across his right cheek where it rested against the pillow.\n\nChad grunted and sat down at the table. \"I'm hungry,\" he muttered.\n\nMoose's lips pursed into a tight line. I interrupted before he could say anything. \"We're having pancakes and bacon.\"\n\n\"Okay.\"\n\n\"If you want milk or juice, help yourself. They're in the fridge. The glasses are in the cupboard next to it.\"\n\nChad poured himself a glass of orange juice and sat back down, slouched in his chair.\n\n\"Sit up straight,\" Moose said.\n\nChad rolled his eyes and scooted back in his seat and sat up.\n\nI heated the syrup in the microwave and put the bottle on the table. I then plated two pancakes with three strips of bacon and set it in front of Chad. Chad grabbed the syrup and poured a healthy amount onto his pancakes. He grabbed his fork and started to eat.\n\nMoose cleared his throat and looked at Chad. Moose jerked his head towards me. Chad just rolled his eyes again and said, \"Thanks, Danny.\"\n\n\"You're welcome. There's plenty more if you're still hungry when you're done.\"\n\nI gave Moose a plate with a large stack of pancakes and several pieces of bacon.\n\n\"Thank you, baby,\" he said. He grabbed my shirt and pulled me down and gave me a kiss.\n\n\"Ugh,\" Chad groaned. \"You guys are so gross.\"\n\nI blushed a deep red and sat down with my plate and started to eat.\n\nChad tilted his head and looked between the two of us. \"Don't you care that people know that you're fag--\"\n\nMoose slammed his fist on the table, and said angrily, \"What did I tell you about that word?\"\n\nChad jumped and looked back at Moose with wide open eyes, completely surprised at his dad's reaction.\n\n\"Apologize,\" Moose said firmly.\n\nChad ducked his head. \"Sorry,\" he said quietly.\n\n\"Apology accepted,\" Moose said more gently. \"As for your question... I love Danny and he loves me. I don't care if people know that. I am proud that someone like Danny would love someone like me.\"\n\nI frowned at Moose's choice of words, but didn't say anything.\n\n\"I would never let anyone hurt Danny. Just like I would never let anyone hurt you. Besides, it's not like people are going to know just by looking at us.\"\n\nChad scoffed. \"Yeah, right. You're always touching him every time he gets within reach. Plus look at his neck. So gross.\"\n\nI pulled my shirt collar up, trying to hide the dark passion mark on my neck. I wanted to crawl under the table and die. At least Moose had the good sense to drop his eyes and look embarrassed.\n\nI set my fork down. \"Okay, then. I have to go to work.\"\n\nI grabbed my plate and put it in the sink.\n\nMoose grabbed my hand as I walked by. \"I'll call you later, okay? Tell Gary to call me if he needs anything. I'll have my phone with me.\"\n\n\"Relax. It'll be fine. Get Chad taken care of. That's more important than some tree stumps.\"\n\nMoose nodded. \"Okay. Bye, baby.\"\n\n\"Bye. Bye, Chad.\"\n\n\"Mm-hmm,\" he said without looking back at me.\n\nI mouthed 'good luck' to Moose as I left.\n\n***\n\nMy cell phone rang, pulling me away from the checks I was signing. I picked it up and saw my husband's scowling face on the display screen. The picture always made me grin. Moose just wouldn't smile for pictures.\n\n\"Hello?\"\n\n\"Hey, baby.\"\n\n\"Hi. How's it going?\"\n\n\"Okay. I'm at the school now. Getting Chad registered. He's taking a test. I'm kind of concerned. He's bigger than most of these junior high kids... taller, bulkier...\"\n\n\"Gee, I wonder where he gets that from,\" I said with a laugh.\n\n\"I just don't want him to get teased about it. And I sure as hell don't want to have come down to the principal's office because he's been fighting. Listen, I gotta go. We're gonna go shopping after this. I'm going to get him a laptop using our joint credit card, if that's okay.\"\n\n\"Of course it is. Get him whatever he needs.\"\n\n\"Will do. I'll talk to you later, baby.\"\n\n\"Okay. Remember that Dad is coming over after work and staying for dinner.\"\n\n\"I remember. Bye, baby. Love you.\"\n\n\"Love you, too. Bye.\"\n\nI hung up the phone and set it on the desk. As I turned back to my computer, a knock on the door had me looking up.\n\nDad walked in and slumped down in the chair in front of my desk. \"I'm beat. It's been a long day. We're gonna be playing catch up for the next couple of weeks.\"\n\n\"Don't tell Moose that. He feels guilty for missing work.\"\n\nDad shook his head. \"I won't. But I'll be glad when he comes back. Daryl's lucky I didn't throw his lazy ass into the wood chipper today.\"\n\nWe both snickered. Daryl liked to goof off, but Moose kept him in line.\n\n\"He'll be back tomorrow,\" I said. \"After he drops off Chad. Tomorrow is his first day at his new school.\"\n\n\"I thought I was going to have to fire the big guy to get him to take the honeymoon.\"\n\n\"He still feels like he has to prove himself to you.\"\n\n\"He's done that and more. I would never have let him ask you for your hand if he hadn't.\"\n\n\"What? He asked you for permission to marry me?\"\n\n\"Mm-hmm. You didn't know that? He was so nervous, I thought he was going to throw up. It was actually kind of sweet. This six-foot-four, 275-pound man was asking me for my son's hand, his eyes tearing up as he told me how much he loved you and how hard he was going to work to make you happy. How could I say no to that?\"\n\nMy own eyes started to water and I looked away from Dad, down at the gold band on my left ring finger. I blinked a few times and sniffled.\n\n\"So tell me about my new grandson,\" Dad said with a smile.\n\n***\n\n\"This is a strange feeling,\" Dad said as we walked towards the porch. \"The thought of you having a kid.\"\n\n\"Tell me about it.\"\n\n\"You're holding up okay, son?\"\n\n\"Yeah. It's a lot to take in at once, but I'm trying to be supportive.\"\n\n\"You're a good man, son. And I'm sure Moose appreciates your help.\"\n\nDad squeezed my shoulders and I leaned into him.\n\n\"Thanks, Dad,\" I said quietly, and then added, \"I love you.\"\n\nDad ruffled my hair and kissed the top of my head. \"I love you, too.\"\n\nI squirmed away from his hand. \"I'm still too old for that,\" I said with a laugh.\n\n\"Nah. You're still my little boy.\"\n\nWe were both laughing as I pushed open the front door. Dad followed me inside and my smile vanished. As soon as we stepped into the living room, I could feel the tension rolling off of both Moose and Chad.\n\nChad was sitting on the sofa, his arms folded across his chest, clearly distressed. Moose's chest was heaving, his fists balled up at his sides.\n\nI looked between the two, and then settled on Moose. \"Everything okay, Moose?\"\n\nHe ground his jaw and then nodded once.\n\n\"Maybe I should come back some other time,\" Dad said quietly.\n\n\"No,\" Moose interjected. \"You're already here, Gary. We invited you for dinner. Welcome. It's good to see you.\"\n\nMoose walked over and shook Dad's hand.\n\nDad patted Moose's arm and rubbed it a little to try to calm him. \"You too, son.\"\n\n\"Chad?\" I asked. \"I want you to meet my dad, Gary Corbin.\"\n\nWhen Chad made no move to stand or even turn our way, Moose growled quietly, \"Get up.\"\n\nChad pushed himself off the couch and stood up. He held out his hand to Dad, who shook it and smiled at him. \"It's nice to meet you, Chad.\"\n\n\"You, too,\" he muttered.\n\n\"So... I heard you got registered at school today. How'd you like it?\"\n\n\"It was okay.\"\n\n\"It's bigger than your last school, right?\"\n\n\"Yeah.\"\n\n\"You sign up for any sports?\"\n\n\"Moose said I could go out for football. Though he probably won't let me now.\" Chad frowned and wrapped his arms around himself.\n\nDad cleared his throat nervously. \"If Moose says you can go out for football, then I'm sure he means it.\"\n\n\"Whatever.\"\n\nMoose growled at the word.\n\n\"Let's go get dinner started,\" I said to Moose. I looked at Dad pleadingly and he nodded.\n\nI pulled on Moose's hand and dragged him to the kitchen. He went to the fridge and grabbed a bottle of water and downed half of it in one drink. He grabbed the platter of steaks off the counter and I followed him into the back yard. Harley and Bandit came running up and they hovered and ran around us as Moose opened up the gas grill lid and and pressed the starter button to light it. We sat down at the patio table while the grill heated up. Harley laid down next to Moose's feet while Bandit sat down under my chair between my legs.\n\n\"Wanna tell me what happened?\" I asked as I reached down and ran my fingers over Bandit's head.\n\n\"The little ingrate... He's so god damned disrespectful. Things were fine all day. We actually got along and I thought he was opening up to me. When I suggested he try out for sports, he was even excited. His mom and grandparents never let him play. We talked about football, our favorite teams and players. We had a connection. He was even laughing and smiling. Then suddenly, bam! There's that fucking attitude of his.\"\n\n\"What happened?\"\n\n\"I don't know. I told him you were bringing your Dad for dinner and asked him to help me set the table. And then it was like 'whatever'.\"\n\n\"He said something about me, didn't he?\"\n\n\"Why do you say that?\"\n\n\"Because that's the only thing that would get you this upset.\"\n\nMoose sighed. \"He said 'get your fag bitch to do it'. He said it just to push my buttons. I wanted to smack the shit out of him. I mean, where does a kid his age learn to talk like that?\"\n\nI wondered if maybe it was me that Chad had a problem with. \"He just needs time,\" I said, hoping that time would really help. The thought of Moose having to choose between me and Chad broke my heart.\n\nTo take my mind off my train of thoughts, I stood up and took the platter of steaks and used the tongs to put them on the grill. Moose came up behind me and hugged me, and then pressed a kiss to the back of my neck.\n\n\"I love you, Danny.\"\n\n\"I love you, too.\"\n\nWhen we went back inside, Dad and Chad were sitting on the sofa quietly talking. Dad had his arm on the back of the sofa. He wasn't touching Chad, but it looked like he was trying to comfort him while still giving him a little space. Chad's hands were pushed between his legs and he was looking down at the floor.\n\nChad nodded and quietly said, \"Yes, sir.\"\n\n\"Okay, then,\" Dad said.\n\nChad got up and walked over to Moose. He stared down at Moose's feet and said, \"I'm sorry, Moose.\"\n\nMoose blinked in surprise and then put his hands on Chad's shoulders. He tapped his fingers under Chad's chin and Chad looked up at him. \"I accept your apology, Chad.\"\n\nChad nodded, and then went to the cupboard and grabbed four plates. Moose opened the drawer and got the silverware and the two of them set the table. While they did that, I went and sat down next to Dad.\n\n\"Thanks,\" I said quietly.\n\nHe put his arm around my shoulders. \"Eh. No big deal. I have extensive experience dealing with moody teens.\" He nudged my arm and snickered.\n\nI rolled my eyes. \"I wasn't that bad.\"\n\n\"He'll be okay, Danny. You guys just need to be there for him. He feels abandoned.\"\n\nI turned and looked back at Moose and Chad.\n\n\"Wanna help me flip the steaks, Chad?\" Moose asked him as he clicked the tongs together.\n\n\"Sure, Moose.\"\n\nMoose gave Chad the tongs and they walked outside.\n\nDad motioned with his head and we got up and followed the pair outside. Moose watched as Chad flipped over the steaks with the tongs.\n\n\"Those are perfect,\" Moose said.\n\nChad looked up at Moose and gave him the briefest of smiles.\n\nHarley dropped a tennis ball at Moose's feet and barked, wanting to play. Chad picked up the ball and threw it. Harley and Bandit ran after it at top speed. Chad chased after them and began playing fetch.\n\nI called out to him, \"Uh, watch out for the 'landmines', Chad.\"\n\nHe looked back at me confused. \"Huh?\" He looked down at the ground and the realization hit him. \"Gross!\" He lifted his feet one at a time to check the bottoms of his shoes.\n\n\"We haven't been around much to pick it up.\"\n\nWhen Harley barked, Chad tossed the ball and then gingerly stepped through the grass, avoiding the little piles, which were mostly isolated to the back corner.\n\nMoose stood next to Dad and said quietly, \"Thanks, Gary, for whatever you said to him.\"\n\n\"He's a good kid. Like I said to Danny, I have extensive experience with moody teens.\" Dad jerked his thumb towards me. \"And this one here gave me a run for my money.\"\n\nI rolled my eyes. \"Whatever.\"\n\n\"I fucking hate that word,\" Moose grumbled as he playfully smacked the back of my head. \"Say it again and I'll wear your ass out.\"\n\n\"You lay a hand on me and I'll break your fingers,\" I joked.\n\n\"I didn't say I'd be using my hand.\"\n\n\"Okay,\" Dad interrupted. \"This is too much for me.\"\n\nMoose and I both laughed as Dad wandered over to play fetch with Chad and the dogs.\n\n***\n\nI turned on the lamp on the nightstand and pulled the covers back.\n\n\"You think the kid's asleep?\" Moose asked. \"He seemed like he was worn out.\"\n\nHis voice was deep and husky and his eyes were filled with lust and desire. My body instantly responded to him. My dick rose to its full size within a second. He slowly walked up to me. He put his hands on my shoulders and pushed me down onto my knees.\n\nHe pushed his boxers down, exposing inch after inch of his swollen shaft. My mouth started to water and I put my hands on his thighs in anticipation.\n\nHis dick popped out of the shorts and smacked me in the face. I groaned and ran my tongue up the underside. A pearly drop formed at the tip and I lathed my tongue around it and cleaned it up. I captured the head between my lips and pushed his foreskin back and formed a tight seal around the corona. I looked up at Moose and caught his eye. I slowly moved up and down his dick, getting more and more of his thick girth in my mouth. When I felt the head hit my gag reflex, I relaxed and swallowed. I moved back up and then down again, fluttering my tongue along the veiny underside of his cock. I swallowed twice and then buried my nose in his pubes. I moaned around his cock, which was buried completely in my mouth and throat.",
        "\"Oh fuck,\" Moose groaned quietly as his knees buckled. He grabbed my shoulders for support. \"So fucking good...\"\n\nI backed up and began bobbing up and down his entire length. After about a minute, Moose grunted and stepped back. He pulled me up to my feet and picked me up. He squatted in front of me and took my dick straight into his mouth.\n\n\"Moose,\" I moaned.\n\nI grabbed his head in my hands and ran my fingers through his hair. He sucked up and down my shaft. He twisted his hand up and down the shaft in time with his mouth. His other hand opened the drawer and dug around until he found what he was looking for. He pulled out the bottle of lube and squeezed a dollop onto his fingers.\n\nHe sunk his mouth down my entire length as his finger slipped into my ass. He twisted and turned his finger. He rubbed it over my prostate and then thrust it in and out. I threw my head back and stifled a groan as Moose's finger, hand, and mouth brought me closer and closer.\n\nI whimpered in frustration when he pulled away. \"No, don't stop. I'm so close.\"\n\n\"I gotta fuck you, baby. I need to be inside you when I come.\"\n\n\"Oh god,\" I moaned. \"We have to be quiet, Moose.\"\n\nMoose pushed me onto the bed. He pulled me to the edge and knelt down on the floor. He pushed my legs up and apart and shoved his face in my crack. His tongue stiffened into a point and dove right into my ass. He thrust in and out, making me shake and quiver all over.\n\nOnce he got my hole relaxed and open, he stood up and poured lube onto his dick. He lined the head up with my puckered entrance and gave a firm push. I gasped and reached to him and pulled him closer. I grabbed at his soft waist and urged him forward. \"Yes,\" I whimpered. \"Please...\"\n\nMoose planted his hands on the bed and hunched over me. I wrapped my legs around his ass. My hands moved up to his furry chest.\n\n\"Tell me what you want, baby,\" he growled.\n\n\"Fuck me, Moose. Fuck me like a beast.\"\n\nMoose pulled back and slammed into me, stabbing my prostate with the head of his dick. I arched my back up and let out a muffled groan. I gripped my fingers on Moose's chest. He jackhammered his hips in and out of me, hitting and sliding across my sensitive bundle of nerves with every thrust. His thighs slapped loudly against my ass while his big, heavy balls tapped me over and over.\n\nMoose kissed me hard, shoving his tongue into my mouth. He licked along my jaw line and then sucked hard on my neck. He licked up to my ear. He grabbed my earring in his teeth and gave it a gentle tug.\n\n\"Unh... Yeah,\" he grunted with each thrust, \"So... Fucking... Tight...\"\n\n\"Oh god,\" I moaned. \"You're so big... Give it to me...\"\n\nHis beard tickled my ear as he grunted and growled into it. \"Yeah... Giving you my cock... Gonna give you my load... Gonna fucking breed you...\"\n\nI gasped, struggling to remain quiet. My body writhed underneath Moose's thrusting bulk as he pushed me closer and closer. \"Moose... Yes, Moose, don't stop...\"\n\n\"You're so close,\" he husked into my ear. \"I can feel it. I'm gonna make you come with my cock. Shoot it for me, baby.\"\n\n\"I'm gonna-- Oh Moose!\"\n\nMy body went rigid and I gripped Moose tightly, biting my lip to keep from screaming. Moose sucked hard on my neck as he continued to pound into me. A powerful contraction in my groin had me gasping. My entire body convulsed as powerful jets of come shot out of me, spraying both of us with the hot, white juices.\n\nWith a final grunt of my name, Moose shoved into me and his body jerked erratically. He grunted repeatedly with each throb of his cock. I could feel the warmth of his hot seed inside me and overflowing out of me as he continued to jab short thrusts into me.\n\nI fell back limp onto the bed. My legs unhooked from around Moose's ass and slumped down and hung off the edge. Moose leaned down and kissed me. He pulled back and his half-hard dick slipped out of me. I looked down at it; its thick girth was wet and dripping with his slimy seed.\n\n\"Fuck, I needed that,\" he panted as he stood upright. \"I need a shower.\"\n\n\"Me too. But I can't get up.\"\n\nMoose laughed and pulled me off the bed. My knees wobbled and I grabbed onto him to hold myself up.\n\n\"Oh, god, I can barely walk,\" I moaned.\n\nMoose laughed again and smacked me on the ass. We threw on our shorts and headed down the hall to the bathroom. I came up behind him and wrapped my arms around him. I laid my head on his back. I pressed my lips to his back, kissing him in the middle of the KELLOGG tattoo that spanned his back.\n\n\"I love you, Moose.\"\n\n\"I love you, too, Danny.\"\n\nMoose adjusted the shower temperature and once it warmed up, we got in the shower. I took the shower gel and washcloth and gently cleaned my big bear of a husband until he was squeaky clean all over. After I washed his hair, he returned the favor.\n\nWhen we got out of the shower, I gently dried him off with a big, fluffy bath towel. After he dried me off, he took my hand and led me back to our bedroom.\n\nAs we passed Chad's room, Moose stopped. The door was open, cracked a few inches. He gave it a little push to open it a little further. Chad was curled up in a ball on his side, the covers tucked up to his chin. While asleep, he looked like an angel. Moose looked at Chad with love and adoration, and then he looked down at me and smiled. I didn't feel at all jealous. Moose had enough love for the both of us. I hugged Moose tight around his waist and he pressed his lips to the top of my head.\n\n\"You and Chad are my family, baby,\" he whispered.\n\nHe gave me another kiss on my head, and then pulled the door shut, leaving it cracked open a few inches.\n\nOnce inside our room, Moose shut the door and turned off the light. We crawled into bed and he pulled the sheet and blanket over us. He pulled me back to his chest and spooned up behind me.\n\n\"Night, baby,\" he said. \"I love you.\"\n\n\"Night. Love you, too.\"\n\n***\n\nThe next month flew by.\n\nMoose really put a lot of effort into his relationship with Chad, and it seemed to be paying off. They bonded over sports. Moose also helped Chad with his homework every night. Sometimes I would help out, but Moose really wanted to do it.\n\nWe did a lot of activities together every weekend to try to get him used to the idea of the three of us being a family. We went to the movies, played mini golf, walked the dogs in the park. Dad also started coming over for dinner every Sunday night.\n\nChad was really opening up to Moose, and the two of them grew closer and closer.\n\nUnfortunately, Chad wasn't nearly as open towards me. If Moose was around, we got along just fine. When Moose wasn't around, he could be downright nasty to me. I got the feeling that he resented me being around. I guess I couldn't blame him. Maybe he felt he was in competition for Moose's attention. I tried to take it in stride and let it go.\n\nEven though he started three weeks into the school year, the Coach allowed Chad to try out for the junior high football team. Coach took one look at Chad and there wasn't a doubt that he'd let him try out. Chad made the cut and he worked hard at every practice.\n\nAfter three weeks on the bench, Chad was finally getting to play his first football game. With his size, the coach put him in as a defensive linebacker. That night, Moose, Dad, and I went to the junior high like always to support him and the team, but this time we got to see him in action.\n\nChad sacked the other team's quarterback in the last few minutes of the fourth quarter, and then his team went on and scored the winning touchdown. Moose was so proud I thought his face might split from the wide grin he sported.\n\nAfterward, Dad took us out to dinner at our favorite Italian restaurant. When Chad talked about the game, he was excited and grinning. I had never seen him so happy and animated. When I looked over at Moose, he was smiling as he watched his boy.\n\n\"I am so proud of you, son,\" Moose said as he put his arms around the boy's shoulders and squeezed him in a hug.\n\nChad's grin lit up the room.\n\n***\n\nChad's animosity towards me came to a head that following weekend.\n\nWhile Moose was out running an errand, I picked up around the house and then started laundry. Chad was sitting on the couch playing a game on his PSP.\n\n\"Chad? Do you have any dirty laundry in your room or in your gym bag?\"\n\n\"I'm busy,\" he said, holding up his game system.\n\n\"Could you pause that and check please?\"\n\n\"You do it.\"\n\n\"Chad, I'm asking nicely.\"\n\n\"Just 'cause you take it up the butt from my Dad doesn't mean I have to do what you say.\"\n\nHe sat there and played his game, not even looking my way while I stared at him slack-jawed and in shock.\n\nWhen I felt the stinging of tears in my eyes, I turned and went into his room and gathered up his laundry and got his dirty clothes from his gym bag. As I shut the washing machine, Moose came home.\n\nI grabbed my keys and headed for the front door.\n\nMoose frowned as I walked past him. \"Hey, baby... Where are you going?\"\n\n\"I have to go out for a bit,\" I said, wincing at the quiver in my voice.\n\nMoose pulled me into his arms. \"What's wrong?\"\n\n\"Nothing,\" I lied.\n\n\"Then why do you look like you're about to cry?\"\n\nChad scoffed and muttered, \"'Cause he's a bitch.\"\n\nMoose spun on his heels. \"What did you say?\"\n\nChad ignored him and continued playing his game.\n\n\"Chad. I'm talking to you.\"\n\nChad dropped his game system on the couch and glared at me. \"I hate him! I wish he would just go away!\"\n\nMoose stormed up to him and pointed his finger in his face. \"Listen up, you little brat. This is Danny's house. He's not going anywhere.\"\n\n\"You always take his side!\"\n\n\"You need to go to your room before I say something I'm going to regret.\"\n\n\"Fine!\"\n\nChad ran down the hall to his bedroom and slammed the door shut.\n\nMoose took my hand and pulled me to our bedroom. He shut the door and walked to the bed. He pulled the covers down and held out his hand to me.\n\n\"Come on,\" he said. \"Get in.\"\n\nI crawled into bed and he got in with me. I wrapped my arms around him and held him tight. He kissed my forehead and rubbed my head.\n\n\"You better go check on him,\" I said.\n\n\"I will in a bit. But I want to make sure you're okay.\"\n\n\"I'm fine,\" I mumbled into his neck.\n\n\"I know this has been hard on you, baby. I feel like I've been so caught up in Chad, that I've been neglecting your needs.\"\n\n\"No.... Well, maybe a little... It's just that... I understand. You know I do. But you heard him. He hates me.\"\n\n\"He doesn't hate you. He's just acting out.\"\n\n\"I don't know... Sometimes I think he's okay with me, but then... I just don't know what to do. It's so frustrating. You're such a good dad to him and I feel like I'm totally lost.\"\n\n\"I don't have any clue what I'm doing,\" he said with a dry chuckle. \"I'm making this shit up as I go along.\"\n\nMoose kissed me gently. I reached up and ran my hand over his short hair. I raked my fingers through his beard. He reached up to my hand and pressed a kiss to my palm.\n\n\"Lay back, Danny,\" he whispered.\n\nI settled down on my back as Moose moved down between my legs. I spread them apart and he unzipped my pants. I was fully hard by the time he reached into my underwear. When I felt the warm wetness of Moose's mouth, I laid my head back on the pillow and closed my eyes.\n\nMoose's head bobbed up and down the full length of my dick. He rolled and fondled my balls as he gently sucked. His other hand slid up my body and pinched and tweaked my nipples.\n\n\"I'm close,\" I whispered. \"Moose...\"\n\nI gripped the sheets in my fists and bit my lip and stifled a moan as I shot my load into Moose's mouth.\n\nI could barely keep my eyes open as he moved up next to me. All of the tension in my body evaporated, leaving me boneless and sleepy.\n\n\"I have to start dinner,\" I said as I tried to hold back a yawn.\n\n\"Just rest. We'll order a pizza or something.\"\n\nMoose cradled me in his arms and I snuggled into him and fell asleep.\n\n***\n\nI woke up when I felt Moose pull away to get out of bed.\n\n\"I didn't mean to fall asleep,\" Moose said. He sat up and stretched his arms over his head. \"I'm gonna go talk to Chad.\"\n\n\"Okay. I'll order a couple pizzas for dinner.\"\n\nI followed Moose out of the room. He went down to Chad's door and knocked while I went to the kitchen. I pulled open the utility drawer and dug around for some coupons.\n\nMoose ran into the kitchen and looked at me in a panic. \"Have you seen Chad?\"\n\n\"No,\" I shook my head. \"He's not in his room?\"\n\n\"No.\"\n\nMoose ran through the house, and then ran into the backyard. I heard him calling for Chad and I heard the dogs barking. He came rushing back inside with the dogs on his heels. They were running around in circles and whining, clearly distressed by Moose's mood.\n\nWe went back into Chad's bedroom.\n\n\"His gym bag is gone,\" I said, pointing to the pile of football equipment on the floor.\n\nMoose ran his hand over his buzz cut. \"Fuck! We gotta go find him.\"\n\n\"What is about you Kellogg boys that makes you want to run when things get tough?\"\n\n\"Not the time, Danny,\" Moose warned.\n\n\"Sorry, you're right. I'll call Dad. Between the three of us, we should find him in no time. He couldn't have got very far.\"\n\n\"Oh, god.... What if he's hurt? He must be scared.\"\n\n\"Moose, try to be calm. Come on. Let's go.\"\n\nI called Dad and let him know what was going on and he was out the door and in his truck before I hung up.\n\nThe three of us set out looking for the boy in our separate vehicles.\n\nIt wasn't even thirty minutes when I finally found him.\n\nA small, husky figure darted across the street in front of my car and I had to slam on my brakes. Three teenagers ran past after him. I pulled over and parked my car at the curb. I popped the trunk and grabbed the tire iron and took off after the kids.\n\nAs I chased them, I called Moose to let him know where I was. \"Hurry. Call Dad!\"\n\nI hung up and shoved the phone into my pocket. As I turned the corner, I spotted two of the boys holding Chad by the arms and the other one punched him in the gut. He pulled Chad's wallet out of his pocket and stuffed his money into his own pocket, and then tossed the wallet on the ground.\n\nI held up the tire iron and shouted, \"Let him go! Leave him the fuck alone!\"\n\nOne of the teens released Chad's arm and came for me. I hauled back and swung the tire iron as hard as I could, connecting with the side of his head.\n\n\"Back off!\" I shouted. The other kid holding Chad let go and took off running.\n\nThe leader came for me and I swung at him and missed. He jumped me and punched me in the jaw. I staggered backwards and held up the tire iron. He was about to hit me again, when Chad grabbed him from behind. I swung the tire iron and hit the mugger in the face as hard as I could. He grabbed at his nose as blood poured out. Chad shoved him and he fell backwards. Chad grabbed his bag and wallet from the ground and I grabbed Chad's hand and we ran as fast as we could.\n\nWhen I got to the car, I tossed the bloody tire iron into the trunk with Chad's duffel bag.\n\nI pulled the shaking youth into my arms and hugged him tight. \"You scared the hell out of me and your dad. What were you thinking? Are you hurt?\"\n\nI broke the hug and cupped his face in my hands. I looked him over to see if he was hurt. His eyes filled with tears and he threw his arms around me and hugged me.\n\n\"You came for me,\" he whispered. \"You saved me.\"\n\n\"Of course I did. We were all looking for you. Why would you run away, Chad?\"\n\n\"You were going to get rid of me anyway. I know you want Moose all to yourself. And Moose loves you more than me anyway.\"\n\n\"That's not true. He loves both of us, but in different ways. And what you have to understand is that I'm not going anywhere. And neither are you.\"\n\nChad shook his head in my chest. \"He's only letting me stay here until Mom gets better and comes home.\"\n\nI tipped his face up. \"Is that what you're worried about? Do you want to stay with us?\"\n\nHe nodded and buried his face in my chest and started to cry. \"I like living with him. I don't want him to send me away.\"\n\nI held him tight and rubbed his back. \"It'll be okay. Just tell your dad you want to stay. I promise you that he wants you to stay, too.\"\n\nMoose's truck screeched to a stop behind my car. He left the engine running as he pushed open the door and ran to us. He grabbed Chad and pulled him into a bear hug.\n\nHe gripped Chad by the shoulders and held him at arm's length. \"What the hell were you thinking, running off like that?\"\n\n\"I'm sorry. I... I didn't think you wanted me. I don't want to go back to grandma's. I want to stay with you. Please, Dad, please let me stay!\"\n\nChad threw himself against Moose and sobbed uncontrollably against Moose's chest. Moose squeezed his eyes shut, but the tears still escaped. He held Chad in his arms, rubbing his back and his head.\n\n\"Of course, son. I want you to stay with us. We both do. You're not going anywhere. You're my boy and I love you, Chad.\"\n\n\"I love you, too, Dad.\"\n\n\"I like it when you call me 'Dad'.\" Moose kissed the top of Chad's head. \"I like it a lot. Let's go home, son.\"\n\nChad nodded and stepped back and wiped his eyes with his sleeve. Moose opened the passenger door of his truck. Chad started to get in, but turned and ran to me and hugged me.\n\n\"I'm sorry, Danny,\" he whispered.\n\nI hugged him and kissed his head. \"I love you, Chad.\"\n\nChad squeezed me a little tighter, and then muttered, \"Whatever.\"\n\nI looked down at him and he looked up at me through his bangs and gave me a little smile. I ruffled Chad's hair and he laughed and swatted my hand away.\n\nChad climbed into the passenger seat of Moose's truck. Moose walked over to me and reached up and wiped the tears from my cheeks, and then leaned down and gave me a quick kiss.\n\nI sniffled and wiped my nose. \"I'm going to call Dad and let him know to meet us at home.\"\n\n\"Have him bring something to eat. I'm starved.\"\n\nI couldn't help but laugh. \"Okay.\"\n\n\"See you at home, baby.\"\n\nAs Moose got into the truck, he told Chad, \"Buckle up. Oh, and I want that PSP when we get home. No games for a week.\"\n\n\"Aw, man,\" Chad whined.\n\n***\n\nMoose and I walked down the bleacher steps onto the field. Chad came running up with his helmet in his hand, followed by another kid who was about his size, maybe a little bigger.\n\n\"Great game, champ,\" Moose said as he slapped Chad on the back.\n\n\"Thanks, Dad,\" Chad said with a grin. \"This is Jason,\" he said pointing to the boy standing next to him. \"This is my Dad. That's Danny, my step-dad.\"\n\n\"Nice to meet you,\" Moose said as he shook the boy's hand, and then I did the same.\n\n\"Can Jason go out to eat with us and spend the night tonight?\"\n\nMoose cut his eyes at me for a split second. I knew exactly what he was thinking with that look. He was scared that Jason's parents wouldn't approve of us because we were gay. Moose looked back at his son. \"If it's okay with Jason's parents. Make sure they are okay with me and Danny.\"\n\nJason and Chad both grinned widely. Jason smacked Chad's arm. \"My dads are over there. I'll go ask them.\"\n\nJason and Chad ran off towards a pair of men standing near the parking lot. One was built large and wide like a linebacker; the other was thinner and smaller. They were not unlike Moose and me.\n\n\"Well, that's a surprise. Didn't see that coming,\" I said, nodding towards Jason's dads. \"I'm glad he's making friends.\"\n\n\"Yeah. Having the court grant me full permanent custody helped him a lot. He knows he has a stable home here.\"\n\n\"Dad!\"\n\nWe looked up and Chad was waving for us to come over.\n\nMoose put his hand on the small of my back as we walked over to meet Jason's parents. The two men were smiling at us. Moose looked at me and smirked. \"Hell, maybe we'll get some new friends as well.\" He then leaned in and whispered in my ear, \"In case I forgot to tell you, I love you, Danny.\"",
        "I smiled to myself and moved slightly closer to my big bear of a husband. Moose never forgets to tell me he loves me. And even if he did forget to say it, I can see it in his eyes and in his actions every single day.\n\n\"I love you too, Moose.\""
    ],
    "authorname": "robcub32",
    "tags": [
        "gay novella",
        "gay romance",
        "bear",
        "gay bear",
        "gay marriage"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/salvation-ch-02"
}