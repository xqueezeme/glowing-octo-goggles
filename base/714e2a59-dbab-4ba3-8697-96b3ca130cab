{
    "title": "That Old House",
    "pages": [
        "================\n\nHe got more than a house - for better or worse\n\nThis is my first foray into Erotic Horror. Although there are horror/evil elements, in the end it's a romance, with a heavy paranormal theme. I wasn't sure if this went in Erotic Horror, Non-human, or Romance. Let me know if I got it wrong.\n\nThis is a long, slow-developing, complex story. Very long, approaching novel length at 56,000 words. You might want to check out the number of pages before starting. It's more than a couple of hours read. Thank you in advance for your patience.\n\nThanks to PatientLee, Dakota_Lynn, and my Writing Group for their valuable input, perhaps making a confusing read almost readable. They're also responsible for eliminating almost a quarter of the length.\n\nThis is an entry in the 2013 Halloween Contest.\n\n================\n\nFor four years I'd driven by that old house. It was high on a hill, hidden by the ancient trees around it. You could occasionally glimpse one of the four towering chimneys through a break in the foliage, but even in winter I could barely make out the silhouette of the building.\n\nIt was only a few hundred yards off the interstate. Twice, my curiosity had gotten the better of me, and I'd tried to get closer to it. The sheer cliff where they'd cut through for the highway, made any approach from the west impossible, so I searched for adjacent roads. After a few hours of wasted effort, it was clear there was no avenue up to the house proper. Studying the latest street maps, I could find nothing that got me anywhere near the hilltop.\n\nI didn't know why I was so drawn to the place, but it was always on my mind, a compulsion. I studied surveying maps and asked around the nearest town, several miles away, but couldn't find out any more about it. I researched properties for sale and old tax records, all to no avail. \n\nThere was a history to the house, and old records, but everything seemed to end around the 1930's. I ran into a blank at every turn. The more of a challenge it proved, the more stubborn I became. My obstinance was both a blessing and a curse.\n\nThe place was well off the beaten path, in backwoods Virginia, and I was only out in the area every couple of months or so, when working with a rural customer. More often than not I just drove past, staring up at the mystery. Straining to see just a little more, something to assuage my curiosity.\n\nFinally my patience surrendered to my obsession. I planned a day excursion, and one fine morning I parked my car at what I thought was the nearest and most likely access point, sprayed on an extra helping of Deep Woods Off, and started hiking in. It was hard going, no trail to speak of, which surprised me. Places like this were always targets for neighborhood kids to hang out and get in trouble. Perhaps the scarcity of local population, combined with the difficulty of access discouraged it.\n\nThe route couldn't have been much more than half a mile at best, and yet the thick undergrowth and vicious thorns kept me at bay for nearly 2 hours. I fought through, determined, clingy vines grasping at my legs, immense deadfalls abruptly blocking my route, hidden thorny branches shredding my skin, unsurpassable thickets forcing me deeper into the woods. After a few hundred yards I was exhausted, silently cursing the dark foreboding woods that sought to deny me my goal. The woods opened up to larger, more sedate forest giants that silently observed my implacable progress, before closing in again as I reached the top of the hill. When I finally broke free into the open, the manse stood before me, magnificent and sad at the same time.\n\nIt was huge, beyond my expectations. Three full stories, with 2 large chimneys on each end of the house, maybe 15 feet apart. The building was stone, five window openings on the end facing me, stacked 2-2-1, now just gaping holes in the side of the building.\n\nThe front was impressive, with a wide double doorway in the center, bracketed by two window openings on each side. On the second and third floors there had been five windows each. Now just dark smudges on the ancient fa\u00e7ade.\n\nThe original porch was long gone, but with some effort I climbed up the front into the entrance. I was holding my breath, eager to view the interior for the first time, my mind adrift in the contemplation of the wonders ahead of me. The first sight was a punch in the gut.\n\nDecrepit ruin and rot, devastating in its completeness, that was my reward. It was well lit, the light from the window openings flooding it, and daylight streaming down from above. Looking up, I could see the sky through the three intervening ceilings and the roof. Portions of the floors were still intact, as were many of the joists, pillars and beams. I carefully maneuvered my way along the walls, to see some of what lay hidden from view. Each step was an adventure, the soft rotted wood eager to pitch me into the darkness below, if I strayed from the safety of the joists.\n\nSoot blackened walls, and charred beams told me a fire must have destroyed the place. From the look of things it was the worst on the third floor and attic, with the ground floor somehow surviving with the least ruin. Significant damage, but not the hollowed out shell the top floors had become. \n\nI made it most of the way up the stairs to the second floor before the creaking of the rotted wood underfoot had my heart racing too fast to continue. When a board disintegrated underfoot, compulsion yielded to common sense, and I gave it up as too dangerous. I had peeked over the top into the floor space above, but it was difficult to tell where rooms had been. In a few places, hints remained of what might have been walls, but fallen detritus from the floor above made even that a guess at best. The devastation was near complete. Carefully working my way back down, legs trembling, I retreated from the house, my curiosity only further inflamed.\n\nFrom the outside the place was majestic. The stone looked perfect, the proportions ideal. The outline of the steeply pitched roof and those 4 fantastic chimneys against the sky were breathtaking. I walked around the building, still at a loss for how the exterior walls could look so solid, with so little inside to hold them up. \n\nThere was a 30 yard area surrounding the house, where the trees had not yet dared to trespass. The grass and clover intermixed, on the peak of the hill, where the decrepit mansion now stood. I could only imagine what it must have looked like in its glory. \n\nI wondered if it was possible to restore it to that glory. \n\nI knew I wanted to try.\n\n* * *\n\nIt took me six months of effort to track down the ownership of the property. It was considered unimproved, the House not even showing up on paperwork. Fifty year old businesses exchanged land ownership, their actions hidden behind the corporate veil.\n\nActually contacting the owner proved almost as difficult. The House had become my hobby, taking over much of my free time, occupying my thoughts. I made countless phone calls, mailing in public information requests, spending hours and hours at the local courthouse and records room. \n\nEventually my stubbornness won out. I found myself in a senior home halfway across the country, nervous to finally meet the person who I believed was the actual owner. I glanced around the room, dizzied by the combination of opulence and decay. The furniture, wallpaper, artwork, were so different from the nursing homes I was familiar with. Nothing modular or modern, it spoke of a different age, and a different class of clientele. At the same time my senses were assaulted with a variety of smells conflicting with each other. Bleach, mildew, urine, dust, and an overall mustiness that was depressing. The curtains were inexplicably closed blocking out the sunlight, leaving vague shadows in its place.\n\nOne of the assistants wheeled out an elderly woman in a wheelchair. She looked like she might have been around at the turn of the previous century. Her gray hair, or what was left of it, was carefully combed back. She had makeup on, an elegant dress, and jewelry. She had clearly made herself up for my visit.\n\n\"Mrs. Madison? I'm Jack Thompson. I hope you don't mind my coming to speak to you.\"\n\nShe giggled. The sound seemed out-of-place, coming from her. \"Mind? Of course not. It's not every day that a lady has such a handsome young man come to call. Would you like some tea? Ralph would be happy to get us some.\"\n\n\"That would be very nice. Please.\"\n\n\"I'm so glad you've come by. I don't get many visitors these days.\"\n\n\"I'm very happy to be here. You're not an easy woman to find, Mrs. Madison.\"\n\n\"Beverly, please. Mrs. Madison sounds like my mother-in-law. I shouldn't be that hard to find. I'm afraid I've been cooped up in here for nearly 20 years now.\"\n\nCooped up? I could understand that feeling. I would want out of that environment, given any chance. \"Would you like to go outside? It's a beautiful day out.\"\n\n\"Do you think we could?\"\n\n\"I don't see why not, Beverly. Why don't we have our tea out on the lawn?\" I'd seen several tables outside, and thought it would be pleasant to be outdoors. Far more pleasant than where I stood.\n\n\"That would be divine.\"\n\nI guided her wheelchair out the door, taking the ramp out to the spacious front lawn, and steered her to an open table with some shade. I parked her there, briefly wondering why more people weren't outside on such a gorgeous day.\n\n\"I'll be right back with our tea,\" I told her.\n\n\"Thank you, Jack.\"\n\nRalph was looking around for us, with a serving tray in his hands. \n\n\"Sorry, Ralph. Mrs. Madison and I will be having our tea outside at one of the tables. I hope that's not a problem.\"\n\nHe didn't seem concerned, and passed me the tray. I returned to Beverly, and set one of the cups before her. She lifted the lid off a matching small bowl, and using silver tongs, she added two sugar cubes to her cup. I'd never seen a sugar cube before. I was fascinated with her slow precise movements. Everything about her whispered grace and elegance.\n\n\"I love the spring, don't you?\" she asked, sipping daintily from her old-fashioned china tea cup.\n\n\"Absolutely. Spring and fall are my favorite seasons by far.\"\n\n\"I'm afraid my spring and fall have passed me by. I'm well into winter by now.\"\n\n\"A very lovely winter it is,\" I told her, smiling. I was surprised at my own mild flirting. Something about her set me at ease.\n\n\"You're sweet to say so. It is lonely.\"\n\n\"I'm surprised. I'd expect half the men in the house to be courting you.\"\n\n\"Oh, there still are a few, but mostly silly old fools.\"\n\n\"I'd say the ones who aren't are the fools.\"\n\nShe smiled. \"I'd agree with you, but that would be awfully brazen of me, wouldn't it?\"\n\nBeverly seemed to have her wits about her, and was quite easy to talk to. We chatted about the weather, and I found out she was a baseball fan, and we argued a little about the American League East. \n\nShe pushed her cup away, and raised her head to the sun, basking in it. \"I'm sure you didn't come out here just to flirt with an old woman.\"\n\nI blushed. \"Beverly, do you own a piece of property in Virginia? A hillside burned out home on a piece of rural land, not too far from the Chesapeake?\"\n\nShe thought about it. \"I own a few properties. Most of them leased out. In Virginia you say?\"\n\n\"Yes. The House looks very old. Not much left on the inside, but the outside is still impressive.\"\n\n\"I believe that was my Uncle Donald's place. A very sad story. His young wife and infant daughter perished in the fire. He couldn't stand to live there and moved west. He left me the property in his will. That must have been over 40 years ago.\"\n\n\"I've been fascinated by the old house on the property, and would like to try to restore it. Would you consider selling the place?\"\n\n\"You're not from around here? You live out that way?\"\n\n\"Yes ma'am.\"\n\n\"You've come a long distance to discuss this, haven't you?\"\n\n\"I've been working for almost a year to find out who owned it, and to try to buy it.\" I confessed.\n\n\"Why would you want to rebuild it?\"\n\n\"Honestly, I don't know. It's been on my mind since I caught my first glimpse of it, nagging me incessantly. When I finally hiked my way in to see it, I couldn't help but imagine what it must have been like in its hay-day, and would love to see it restored to its previous glory. I have an image in my kind of what it should look like, and I'd like to take my time rebuilding it, and live there.\"\n\n\"Quite a fascination you've developed.\"\n\n\"Yes it is. It consumes me. I'm not rich, but I think I could give you a fair price for the place.\"\n\nShe looked at me long and hard. She didn't speak for a couple of minutes. I didn't pressure her to. \"Perhaps we could come to an agreement,\" she said.\n\n\"I hope we can.\"\n\n\"The truth is, I don't need a lot of money. I'm fairly well off, and as you might imagine, my needs are simple, and I don't have a lot of expenses.\"\n\nBefore I could answer she continued.\n\n\"I have a confession, Jack. I'm lonely. And I've thoroughly enjoyed the time we've spent together.\"\n\n\"As have I, Beverly.\" As have I?\n\n\"Could you do something for me? Keep me involved in your project. Talk to me. Call me regularly. Maybe send me pictures of your progress. I have no family, and the days get longer and longer. I'd love to see what you can do with the old place.\"\n\n\"If we can come to terms, I'd love to have you involved. I'd be happy to call you as often as you wish, and send you weekly pictures of my progress, if any. Videos of the place. Whatever I could do.\"\n\n\"When it's done, could you take me out there, to see it? Please?\" She reached out with her small, cold hands, and placed them over mine.\n\nHow lonely she must be. \"Ma'am, I'll fly you out there whenever you want, at my expense. There's no access currently, but once I've cleared a road to the house, I'd love to have you come out to view it as it is now, and to see what I can make of it.\"\n\nHer eyes glistened as she looked off into the distance. \"You won't forget me once I've signed it over, will you?\"\n\n\"We could guarantee I wouldn't in the contract.\"\n\n\"I just need your word.\"\n\n\"Beverly, you have my solemn word. Like you, I have no family. I never knew my parents. I have no wife, no girlfriend, no children. I'm quite alone in this world, and can't think of anybody I'd rather share this adventure with.\"\n\nHer eyes welled up, and tears started to slowly trickle down her cheek. \"Jack, I'm rather tired. I'd like to go in now.\"\n\n\"Of course.\" Disappointed, I rolled her away from the table and wheeled her back into the building. At the threshold she stopped me. \n\n\"Are you returning east immediately?\"\n\n\"My schedule's open,\" I assured her.\n\n\"I'll have my lawyer stop by tomorrow. If you could come by for dinner, perhaps we can conclude our deal.\"\n\n\"Wild horses couldn't keep me away. Thank you.\"\n\n* * * \n\nBack in my room I was nervous. We hadn't agreed on the price, and once the lawyers got involved who knew what would happen? I was so close. I had a hard time getting to sleep that night. \n\nIn the morning I felt much calmer. I believed Beverly. I was convinced she wanted this as much as I did. I went out and did a little shopping, prepared to show her how serious I was about keeping her involved.\n\nI stopped by the home at 4:30, not certain what time dinner was. I appeared to have guessed correctly. She and a distinguished older gentleman were seated at a table, waiting for me.\n\nBeverly beamed. \"Jack! I have to tell you, I haven't been this excited in ages. I'd like to introduce you to my friend, Jerome.\"\n\nJerome stood and shook my hand. He had a determined gaze, and a firm handshake. \"Convince me I should approve this.\"\n\n\"Now Jerome...\" Beverly chided.\n\n\"No, Beverly, he's right. He has your best interests in mind. Allow me, if I may.\"\n\nOnce again, I explained in detail, how I'd first seen the place, and come to be enthralled by it. I reviewed my research, my desire, and my place in the world. He was quiet, letting me go on.\n\nI opened my briefcase, and pulled out the gift. \"Beverly, this picture frame can show a variety of photos.\" I turned it on, and she saw the digital images of the house in its current state. \"I can hook this up to the internet, and put it in your room. Then whenever I have new pictures, I can remotely put them on your picture frame for you to see, that same day.\"\n\nShe seemed excited by the idea. She was watching the picture frame, and I showed her how she could move the pictures back and forth in order, pause at any one, or leave them in slide-show mode.\n\nI held up my smartphone. \"This phone took the photos I just showed you. I'll keep it with me at all times on the property, and I promise I'll take plenty of pictures every step of the way. I'll upload them as soon as I have internet access.\"\n\nFinally, I pulled out another cell-phone. \"This is for you. I've programmed my number into it. The bill will come directly to me. You can call me anytime, and I will try to call you every day. I don't want to commit to every day, since I'm not sure I can keep that promise. But I will do my best.\"\n\nBeverly looked over at her lawyer, with a big smirk on her face. \"Jerome?\"\n\nHe sighed. \"Damn it. Alright, I'm convinced. Sign here.\"\n\nHe pushed a paper toward me. \n\n\"We haven't agreed on the price yet,\" I said, hesitating.\n\n\"I'm sure you can afford it.\" He flipped the contract back to the first page and pointed. The sales price was $1.00.\n\nI was flabbergasted. \"Beverly, that's not fair.\"\n\n\"Jack, it's just an expense for me. I pay taxes every year on a piece of land I never see and make no money off of. You'll be doing me a favor. Please agree to this.\"\n\nI could feel the tears welling in my eyes. My dream was coming true. \"I... I don't know what to say.\"\n\n\"Say yes and sign the paper. Save your money for the repairs. I suspect they will not be cheap.\"\n\nI looked over at Jerome, who shrugged. \"She wants to do this. Trust me, there's no stopping it now. And financially, it won't hurt her in the least. Sign the contract.\"\n\nI signed the paper, and went around the table and asked if it was Ok if I hugged her. She struggled to her feet, leaning heavily on my arm, and let me embrace her. I held her a long time, until I could control my emotions. My shoulder was wet when I finally eased her back into her chair.\n\nAs I took my seat she thanked me.\n\n\"I'm the one who should be thanking you. You've made it possible for my 5 year dream to come true.\"\n\n\"Jack, this is the happiest and most fun I've had in longer than I care to admit. Follow your dream. Just don't forget me.\"\n\n\"Never. I swear.\"\n\nJerome interrupted. \"That's done. How about we have dinner? It's getting late.\"\n\n* * *\n\nIt was a daunting task ahead of me. I tried to make sure that my work didn't suffer, but I spent every weekend working on my project. My holidays and vacation time were spent laboring on the House. Every day I called Beverly, in the morning, reviewing my progress, if any, the day before, and discussing my future plans. Over time our discussions moved away from the House, and encompassed our lives. We talked about my job, my project, and my Spartan life away from the two.\n\n\"Jack, why don't you date?\"\n\n\"I don't have the time, right now. I'm rather focused on my work and the House, and it doesn't make me very sociable.\"\n\n\"BS. You're a handsome young man. You should have a girl.\"\n\n\"I'd like that very much. And someday I hope I will. But that's in the future.\"\n\n\"But you dated in the past?\"\n\n\"I have. That didn't work out so well. I think I'm too intense for most of the women I meet. The same fixation I have on the House, I tend to have on whatever I'm working on.\"\n\n\"Go out tonight and relax. Chat up a girl. Buy her a drink.\"\n\nI laughed. \"Ok, Mom, I'll see if I can't go out for a beer tonight. No promises about the girl.\"",
        "She was quiet. \"Mom. Nobody ever called me that.\"\n\n\"I'm sorry, I hope I didn't offend you.\"\n\n\"Offend me? It's the nicest thing you've ever said. I should be so lucky.\"\n\n\"Beverly, you're the best thing to happen to me in ages. I can't tell you how happy I am to talk to you each day. I don't think I knew how lonely I was before you.\"\n\nI heard her sniffle. \"Enough already. You'll make an old woman cry. Go to work before you're late.\"\n\n\"On my way, Mom. Don't nag.\"\n\n\"What else are Moms for?\"\n\n* * *\n\nThe property was huge, and 90% covered with old-growth trees. The woods seemed ancient, and sometimes a little scary. Mostly oaks and hickory, some walnuts, poplars, and a scattering of other trees broke up the oak-hickory monopoly. Only the perimeter, near the roads and property line, was populated with newer, denser growth, creating a natural barrier to the outside world.\n\nI found the original entrance to the property, by working my way backwards from The House. The original path I'd taken to the building in my early explorations had the newest trees. Something had cleared out the old-growth there, whether it was a fire, or logging, I don't know. Smaller trees, dense undergrowth, and innumerable thorn thickets made it almost impassable as I'd learned. The original road traveled through older, massive trees, many 50-60 feet or taller, with diameters of 3 to 4 feet common. Only as you approached the main road, did the trees give way to the newer, dense woods I'd encountered my first time out.\n\nThe idea of getting all the permits necessary for building scared the hell out of me. I was immensely relieved when the county inspector came out to visit the property. He seemed like a genuinely nice guy, extremely helpful, and even excited to be involved in the process. It seemed like I got a ton of waivers for restoring a historic property, as long as I didn't do anything to change the exterior. The biggest issue for him was the design of the front porch, the type of windows used, and the look of the roof, as long as I left the stonework intact. He seemed to be on the phone half the time he was with me, calling in questions, and each time arguing for the minimum amount of oversight. I grew to like and respect Andrew, and assured him I'd keep him in the loop.\n\nAfter weeks of research, I selected a used portable hydraulic sawmill to purchase, figuring I could use it to cut my own wood, and sell it when I was done. Together with a rented Caterpillar and some diesel generators and worksite lighting, I worked from dawn to nearly midnight. No fear of neighbors complaining, not from over a mile away, with the woods serving as a natural sound barrier.\n\nI sold my townhouse and moved from downtown to a month-by-month rental at the edge of the suburbs. From there I had a forty minute commute to work, but I was only a little more than an hour from The House. I spent more and more of my time there, building wall supports, replacing the large beams, installing new joists, slowly giving The House a new skeleton. \n\nI never seemed to have enough time for the house. I moved an inexpensive used trailer onto the property, so I no longer had to leave on the weekends. It gained me a another 6-8 hours of work, and gave me a place to store my tools out of the weather.\n\nI've always been handy with tools. I can thank my second foster parents for that. Still, it seemed every day I was confronted with some new challenge, which inevitably required research and experimentation. I didn't mind. My obstinance and willingness to make mistakes usually saw me through. Unfortunately, that meant often doing the same job two or three times until I got it right.\n\nI had some regular laborers I'd hired, along with the occasional specialist. I even found some interested volunteers who were fascinated with the effort. A few experts on old stone houses became my online friends, and were exceedingly generous with their advice and connections. The work was progressing but I was exhausted.\n\nThe wood we cleared from the 600 yard winding entrance road was a good start, and we cleared most of the trees from the top of the hill back another 20 yards or so, more in the back. Unusual or very large trees I left in place; I liked the look and had a hard time cutting down trees that old. Besides, they were hell to work with. The sawmill was getting heavy use, grinding out board after board for the flooring, decking, and some of the walls. I learned a lot in the process, especially about costs. For the wood to be usable indoors, I had to have it kiln dried, which meant having it hauled almost 40 miles and waiting another two weeks or more to get it back. I experimented with air drying some of the wood, which I would use later in the year. A lot of work, and plenty of blisters and splinters later, it looked like I had enough wood left to build another two houses if I so desired. The smaller branches yielded a firewood pile large enough for me to into the business.\n\nI located some experts to help with cutting the huge beams needed to replace the original ones that hadn't survived. A single huge standing dead white oak provided all I needed. That was a whole new experience, trying to work with beams that were a foot wide and deep, and 30 feet long. The assistance I need for that put a dent in my budget. A big one.\n\nEverything was expensive, and I had over $80K into the work before I could even see much progress. Electricity and phone service didn't look like they were going to be too difficult, but water was a major issue. One more thing I hadn't counted on. It cost $12,000 to get water into my house. The bills kept adding up, and I realized I didn't have enough money to finish the work. I considered a mortgage on the land, and took out a loan from my 401K. \n\nI made good money, and saved what I could. I had made a tidy profit off my place in the city, a fixer-upper I'd polished up. I did much of the restoration work myself, and the experience was turning out to be invaluable. Despite doing as much as I could myself, and using available materials, everything was so damn costly. I paid. I didn't have any other choice.\n\nI still talked with Beverly daily, often twice a day or even more often. I realized that after nearly seven months, I was probably going to have to put much of the work on hold, while I slowly built up some funds. It was fall, and I knew that winter would put a halt to much of my work. I hated the idea of anything slowing me down, but my options were dwindling.\n\nIt had taken me nearly two months just to get the walls supported properly so I could do the necessary interior work. I managed to get the roof completed, and had replaced the huge interior crossbeams the floors rested upon. Working the upper floors, especially the third floor, was an adventure. The damage up there was extensive, and I seemed to have more mishaps 30' feet in the air than I would have cared for. Maybe it was me, nervous about working up so high; twice I came close to falling, boards shifting underneath me, or the weight of a beam unbalancing. I lost two full days when a central joist shifted badly, falling to the floor below, and I followed, fortunate to avoid serious injury. After that, I was more cautious, putting up temporary plywood sheets over the floor holes. It was time consuming, but at least I could work without breaking out in a cold sweat every time I looked down. It was not work for the faint of heart.\n\nBy the end of summer the floor and ceiling joists were nearing completion. I decided to stop the intermediate work, close off the top floors, seal up the windows and do what I could to make the main floor livable. I wanted to get out of my rental place and move into The House. It would make more money available for the work, and in spite of the 3-4 hour round-trip commute, I could work on it every evening, doing some interior finish.\n\nSome will consider it blasphemous, but I had no interest in restoring the home to its original condition. My research and visiting experts agreed The House was probably late 18th century, with several changes made to it. One cornerstone had 1791 carved in it, but another said 1803. Either way The House was ancient, and probably deserved a lot more attention to historical significance than I was interested in giving it. I loved it for what it was, and wanted to make a place I was happy to live in, in comfort. If that meant not scouring the countryside for period flooring and paneling, that was fine by me. I wasn't rebuilding somebody else's dream house, I was building mine. And I knew exactly what I wanted.\n\nWith the first floor wiring in, some basic plumbing, and a workable kitchen, I was tapped out. More than $180K invested, and from the outside, you could barely tell, except for the new roof and entrance. But the place was livable. Mostly. Andrew, my county inspector had come by, hanging out for a couple of hours, signing off on the first floor wiring and plumbing. He explained that was unusual in itself. \n\n\"But then again,\" he laughed. \"There's nothing 'usual' about any of this project. Takes some big cojones to take on something like this on your own.\"\n\n\"That or just too ignorant to understand the challenge.\"\n\n\"You understand,\" he said, \"you can't live in a house that's partially finished.\"\n\n\"Of course,\" I told him. \"I'm still living in the trailer.\"\n\nHe grinned. \"Just make sure it stays there. I don't need my ass chewed out.\"\n\n\"Last thing I want, believe me. I appreciate all the help. I had no idea what I was getting myself into when I started.\"\n\nHe nodded. \"That's understandable. Not a lot of restoration of 220 year old mansions going on. You know, it's gorgeous. You did a hell of a job maintaining the exterior.\"\n\n\"Didn't have to do much,\" I admitted. \"Hard to believe how little damage there was to the outside walls. Only one chimney needs any work. The windows are a pain, I admit.\"\n\n\"Whatever you're doing, keep it up. If you have any special issues, just let me know. We'll work it out. Don't keep me in the dark.\"\n\nI nodded. \"Every step of the way. I promise. Hell, I need someone watching over my shoulder, last thing I need is to screw up big time. I can't afford it.\"\n\nI'll say this. I had never met so many helpful, generous people, as I did working on that old house. Andrew was just one of them, but easily the most important. Not only was he helpful, but he was keeping everyone else off my back. I owed him one, and once the place was a little more livable, I was determined to have him and his family over for a nice dinner and tour.\n\nThe windows were in on the first floor, and I didn't have to worry about heat, with four large fireplaces on the main floor, and unlimited fire wood. A few hundred dollars for a chimney sweep had them cleaned out, and I was assured they were usable, but needed a lot of TLC, one in particular. I put a temporary trap door to the second floor in, and I had a spacious one floor apartment. \n\nWith camcorder in hand, I toured the place, commenting on the work done, what remained to be finished, and naming each room. I was proud of the work I'd completed, and could see the place finally starting to come together. Beverly was ridiculously pleased with the video, and held regular showings of it in the TV room at her place.\n\nMy company's fiscal year ended in October, and a week later I received a sizable end-of-year bonus, my largest yet, over $10K. It allowed me to purchase some additional furnishings, and to move forward with a small plan that had been developing in my mind.\n\n\"Beverly?\"\n\n\"Jack! You're calling late. What's up?\"\n\n\"I think I'm about done for the year. I'll be doing some interior work on the upper floors, but probably won't get any major improvements accomplished until the spring.\"\n\n\"That's a shame, you were making such good progress. Everyone here loves the video.\"\n\n\"I think it's time for you to come out and see what I've done with the place. Would it be Ok for me to come out and get you next weekend, and let you view it?\"\n\n\"Do you have the time? It seems you could spend those days working on your house,\" she said.\n\n\"I'd much rather spend a little time with you, to be honest. I'm worn out from burning the candle at both ends, and could use the rest. A friendly face would be nice to have around for a couple of days. Just let me know what you need, and I'll set you up a room.\"\n\nShe fought my suggestion for a bit, but I knew her heart wasn't in it. She finally agreed to come out, but only if she could pay her own way. \"You don't have to come get me, I'll have my nurse put me on the plane. If you could just meet me at the airport, I'll be fine.\"\n\nI argued but she insisted, and reminded me that I could pay for her flight when the place was finally finished. \"I couldn't stand it knowing you spent your money on me, when you could be putting in another window, or completing a wall. I'll be alright. I'll send you the flight details as soon as I have them worked out.\"\n\nI spent that week sanding the rough hewn oak floors, sealing and staining them. I prepared a room for her, and another for myself, with a bed, drapes, linens, even a dresser and nightstand. I loved how the porch had turned out, and used a little of my funds to furnish it with a few rocking chairs, and a hanging bench swing out of an old movie. A couple of small tables to hold a drink or a book, some planters with fresh wild flowers to give it the homey look, and I considered it a job well down. Things were definitely coming together.\n\nOn the Thursday before I was to pick her up, I took a long weekend and moved out of my rental. I had spent many nights in my trailer, but I was looking forward to my first night inside The House I'd practically rebuilt from scratch.\n\nI had a small blaze going in the fireplace, and was relaxing, telling myself I was going to do no work for the next four days, except for whatever problems showed up when I actually moved in. \n\nElectricity was available, but I wasn't ready to go through all the inspections it would require to get it turned on, nor the expense. I had a used diesel generator in an insulated shed out back that provided the minimum electricity I needed, especially for the small RV refrigerator and well pump. For lighting I used kerosene lamps, and I had a large propane tank out back for my kitchen stove and on demand water heater. I was almost embarrassed to put in some low-power LED light bulbs in the kitchen and bathroom, the new technology feeling so incongruent.\n\nI relaxed in a comfortable lounger in the living room, sipping on some hot chocolate, fighting off the evening chill. The old girl was still getting used to her new fittings. The wind through the upstairs floors was annoying, and The House was constantly creaking and settling, as the wood dried and all the changes slowly blended in. \n\nI wasn't used to the sounds of the night, the noisome animals, birds, and insects. I had somehow thought The House would be quiet and lonely, but it seemed alive with noises, and just outside my door were acres and acres of woods that hadn't seen this much change in scores of years. \n\nI went to bed that night exhausted to the bone, but with a huge smile on my face. I was living my dream. How many people can say that?\n\nI woke to the sound of my door creaking open, scaring the bejesus out of me. I was certain I had closed it. I got up and looked around but the front door was locked and bolted, and the windows were all shut. I checked the door latch, expecting some shoddy work on my part had left the recess misaligned, but it closed firmly. \n\nI closed the door again, checking it, and settled back down. Although everything was going well, I was feeling a moment of loneliness. I hadn't dated in over a year and was yearning for a woman's company. I closed my eyes and stroked myself slowly. I pulled back the sheets and let the cool air bathe my body. My hand moved casually, but I found myself getting very excited. Drafts of air seem to caress me, tantalizing the head of my cock while my hand stroked the shaft. The feelings were all to brief, as I came mightily, my essence pooling on my belly. I opened my eyes, and searched for something to clean up with, settling for my dirty shirt, before settling back down to sleep. Good thing I got that out of the way; wouldn't be appropriate behavior with my guest arriving in a couple of days.\n\nWhen I woke, the door was open again. What the hell was going on? I was going to have to check on that. I took my first indoor hot shower, and was pleasantly surprised at how quickly the water heated up, and how crisp the water felt. No sulfur odor, no lack of water pressure. \n\nThe House smelled wonderful, of fresh wood, and the fireplace. I walked around, king of my small domain, and made myself a large breakfast, another extravagant treat. I hadn't been eating as well as I should have, and the heavy manual labor had me dropping almost 15 pounds and tightening my belt. \n\nIn spite of my promise to myself, I found an immediate problem. I hadn't made a ramp up to the entrance. A wide set of steps led up to the front porch and I spent the morning constructing a removable ramp I set in place over half the steps. Just in time. I spent a few more minutes walking around The House, opening doors, drawing back curtains, making the place look as open and bright as possible.\n\nI cooked myself a big fat hamburger with potato chips, still indulging myself. Afterward, I neatened up the kitchen, made myself presentable and headed out to the airport. Over two hours later, I was waiting in the terminal for Beverly to be rolled out by the airline attendants.\n\nI saw her before she saw me. She was in an airport wheelchair, dressed to the nines, and being pushed by a young woman. As soon as she was past the security area I rushed to her and gave her a hug. I felt like I knew her better than anybody else in my life, sharing the last 7 months with her, albeit by long distance.\n\n\"Jack! You're skinny as a rail! And that tan looks like you just strolled off the beach.\"\n\n\"Lots of hard outdoor work can do that to a guy. I feel great. Slept like a baby last night, in my new house for the first time,\" I told her proudly.\n\n\"That's wonderful! I was surprised you waited this long. Jack, this is my nurse Karen. If it's alright by you, she'll stay with me. She can tend to my needs, knows how I like things, and remembers all that little stuff I can't be bothered with.\"\n\n\"Like your meds? Speaking of which, it's about that time.\" The woman turned to me and stretched out a hand, which I shook. \"Pleased to meet you Jack. You certainly have breathed new life into cranky here.\"\n\n\"Cranky? Beverly? She's the sweetest, least cranky person I know!\"\n\n\"To you maybe.\"\n\n\"Keep it up, Karen, and I'll cut you out of my will,\" Beverly warned.\n\n\"Again? Isn't that the 3rd time this month?\"\n\n\"It'll stick this time.\"\n\nThe nurse rolled her eyes, giving me a smile. \"Yes ma'am. Sorry ma'am. Never happen again ma'am.\"\n\n\"And none of that smarmy lip either, girl. You're the one that's always wanted to see D.C.\"\n\nTheir easy banter betrayed a close companionship that I found myself jealous of. Then I smiled. If it made her happy, all the better.\n\n\"Can I drive?\" I asked, moving toward the handles of the wheelchair.\n\n\"Please. I'm begging you,\" Karen laughed.\n\nWe headed for the luggage area and waited for their bags to arrive. Her personal wheelchair was delivered, reassembled after the flight, and Karen prepared the pillows on it, before helping Beverly into it. \n\nI'd traded my Honda in for a used truck, when I'd started all the work. It was a crew cab, and we were able to place the luggage and wheelchair in the rear. Karen got in the back, and I lifted Beverly into the passenger seat. I was surprised how light she was, and wondered if it was hauling all that lumber around, or if she really was lighter than air.",
        "\"You can put me in the truck now, Jack. Although I certainly don't mind being held by such a handsome young man.\"\n\nI was embarrassed I'd been standing there holding her, and set her into the cab. I was always a little surprised when she called me handsome. I knew better. Striking, maybe, with the large scar down the side of my jawbone, eyes too small and narrow, nose too wide. Wild hair which I could do nothing with and pretty much let it do whatever it would. No, not handsome. Still, it was nice to hear it from her.\n\nWe were already in D.C. so I gave them a short driving tour of the monuments and downtown, pointing out all the famous landmarks and buildings, to their contented oohs, and aahs. Then we headed south. It was a long drive, so we broke it up, stopping at a Cracker Barrel for dinner. From there it was less than an hour before I was turning up my private entrance, no trespassing signs displayed boldly. \n\n\"So this is your new road?\" Beverly asked, as we bounced our way up the hill.\n\n\"It needs some work, but paving it will probably be the last thing I get around to, if I can help it. We'll be on it for a while, almost half a mile, and my initial quotes are over $30K to get it done.\"\n\n\"Would gravel work?\" Karen asked from in back.\n\n\"Yeah, and that might be an alternative if the winter proves too much. Still pretty pricey, and then the whole expense is lost when I finally get around to paving it.\"\n\n\"Awfully secluded out here,\" she said, looking at the encroaching trees. The canopy was dense, letting little light through.\n\n\"Nearest neighbor is about a mile up the road. I've only met a couple of them. Nothing but farmland across the way. The nearest town is only about 8 miles away.\"\n\nWe drove that last bit in quiet, before the road opened up, crested the hill, and The House came in view.\n\n\"It's magnificent!\" Beverly exclaimed.\n\n\"It's huge!\" Karen chimed in afterwards.\n\nI pulled up in front, and we unloaded the wheelchair and escorted Beverly into The House for the first time.\n\n\"It's beautiful,\" she said softly, looking around. \n\nIt was dusk, and we only had a few minutes of daylight left. I set about lighting the kerosene lamps and getting the fireplaces going. The library and sitting room were our makeshift bedrooms, and each had its own fireplace. The huge living area hosted another one, as did the dining room. Only the kitchen at the back of The House was left without. With fires crackling and popping in all four rooms, I finally had time for my guests. \n\nKaren had brought in the bags, and settled Beverly in front of the living room fireplace, where she could watch our actions while staying warm.\n\n\"Your pictures didn't do the place justice,\" Beverly told me, when I finally settled into my lounge chair near her.\n\n\"That's why you had to see it in person.\"\n\n\"Are you happy with how it's going?\"\n\n\"Beyond happy. I'm just aggravated it's taking so long. I imagine it'll be a couple of years before I'm done with this place. Of course, a house like this one will never be really done.\"\n\nKaren was preparing tea in my kitchen, making herself at home. For the first time I wondered what it would feel like to share this place with a woman. Someone, hopefully, that loved the place as much as I did.\n\n\"You've done an amazing job here. It must have been a lot of work. The woodwork alone must have been exorbitant,\" Karen said.\n\n\"All the wood is from the property. Mostly hardwoods. I know a heck of a lot more about trees and wood then I thought I'd ever have to. Come spring I may thin out some of the woods, and sell the trees off to the lumber mill. I may even make enough to pave that road, who knows?\"\n\n\"How much land is it?\" Karen asked.\n\n\"Nearly 500 acres. Over a mile of road frontage, and well over half-a-mile deep. We've even got a creek on it, but I haven't been down there yet.\"\n\nBeverly had been quiet, but seemed to wake up a bit. \"You're doing a wonderful thing here, Jack. This place seemed so sad, so forlorn, and you've managed to breathe life back into it. It was a shame for us to let it go so.\"\n\n\"You've been here, then?\"\n\n\"Twice, a long, long time ago. Once as a young girl for my Uncle's wedding. It was amazing. So big, so beautiful. It was old even then. He restored it for his wife, who was from Philadelphia. Then years later, after he passed away, I came out once to see it after I'd inherited it. I couldn't stand to be here, it was so dreary and gloomy. They'd only lived in it for a little over a year when the fire happened. Uncle Donald was out of town. Aunt Mary and little Elizabeth were trapped on the top floor nursery and couldn't get out. When the volunteer fire department showed up, they found them dead outside the house. She'd jumped from a window rather than burn. Aunt Mary was still holding Elizabeth. It destroyed Uncle Donald when he found out. He was never the same. Never got re-married. Not that he gave up on women. He was a black sheep for a while, leaving a series of bastards in his wake. Great gossip for the family, but I could never feel anything but sorry for him. He left the place as it was, refusing to sell it or fix it. It sat here empty for at least 75 years now. Such a shame.\"\n\n\"That's so sad!\" Karen exclaimed at the end.\n\n\"It is, but even sad stories can have happy endings. I think Jack is just the man to make this a happy place once again. He's certainly made a wonderful start of it.\"\n\nWe didn't last much past that. Karen put Beverly to bed while I cleaned up a bit, and she joined me in the living room. \n\n\"I'm sorry I didn't know you were coming. I would have bought another bed. You can sleep in my room, and I'll take the couch,\" I offered.\n\n\"I'll be fine on the couch. That way I'll hear if Bev needs me in the night. Besides, I don't think you'd fit on the couch.\"\n\nShe had me there. She was small, only about 5'2\" and I'm near 6'1\". She had a better chance of squeezing in than I did.\n\nI gave her some blankets and a pillow off my bed, and left her. \"Thanks for coming. She seems comfortable around you.\"\n\nShe came over to me and pulled me down for a kiss on the cheek. \"She's more alive than I've ever seen her. It's you and your project, filling her with joy. You're a good man, Jack.\"\n\n\"It's been good for both of us. Goodnight Karen.\"\n\n\"'Night Jack. Sweet dreams.\"\n\n* * *\n\nI loved my home, but it was doing weird things to my brain. Once again I awoke in the night, and my door was open. I got up and checked on the ladies, both sleeping soundly. I closed the door firmly, determined that I would do something about that when my company was gone, and tried to get back to sleep.\n\nI was restless, and the sounds of The House weren't helping. I heard a regular creaking noise, and sat up in bed to see my rocking chair rocking back and forth. While I was staring at it, it slowly stopped moving, making me wonder if I'd been seeing things. Maybe a draft from the fireplace. Weird.\n\nLying back down, I felt my need arising again. I wasn't at an age where I felt I had to relieve myself daily; I suspect it had something to do with the young lady sleeping on my couch. Either way, I was feeling horny, and my rod was already at half-staff. I closed my eyes, casually playing with myself, while I drifted in that space between half-awake and half-asleep. My consciousness was slipping away, but the feeling below my waist was intensifying. My mind was playing tricks with me, and I thought I felt somebody settling onto the bed. I opened my eyes and glanced at the empty bed beside me, and at the closed door to my room. \n\nNothing. Door shut. Just the empty house messing with me.\n\nLooking down, I was hard as a rock, and the crown was bright red as if on the verge of coming. I settled back down, mocking myself for my behavior, and made an effort to finish what I'd started. I stroked myself firmly, letting the cool air caress the sensitive head, which was feeling incredible. When I could hold back no longer, I released, pumping hard, until the throbbing stopped. Looking down, I was surprised to see how little I'd come, just a little stickiness on the head and dripping down my hand. Nothing like the torrent from the night before. I guess that in spite of the intensity of it, I wasn't in the same recovery mode as I'd been as a teenager.\n\n* * *\n\nI awoke to the smell of coffee and bacon. I breathed deep, stretching. It smelled so good. So right. \n\nI was cold, and found I'd kicked off the covers in the night, and I was lying there with an embarrassing hard-on. I threw on some pajamas, in deference to my guests, added a heavy terrycloth robe, in order to hide my condition down below, and made my appearance.\n\nKaren laughed when she saw me. \"I thought that might wake you, sleepy head. Why don't you wash up and then you can set the table?\"\n\nBev was on the front porch, enjoying the early morning. I went out and greeted her, leaning down and kissing her on the cheek. \"Good morning, beautiful.\"\n\nShe giggled and swatted at me. \"I'm immune to flattery young man.\"\n\n\"Just stating the truth. Having you two here makes everything so perfect. The House seems like a home.\"\n\n\"It's nice,\" she sighed. \"I'd almost forgotten.\"\n\n\"I'm going to clean up now, breakfast will be ready in a few minutes.\"\n\n\"Thank you. Now run along. A grown man in a robe and pajamas? What is the world coming to?\"\n\nI went as fast as I could, and was setting the table in record time. Karen was laying out scrambled eggs, toast, pancakes and bacon. A veritable feast. I got my knuckles smacked for pilfering a piece of the crispy, thick cut meat-candy.\n\n\"Wait your turn, bucko. Why don't you bring in Bev? And be careful, she's cranky in the morning.\"\n\n\"Who are you talking about? She's the sweetest, kindest thing.\"\n\nShe rolled her eyes at me, an ability she'd perfected. \"Go on now. Before it gets cold.\"\n\nI wheeled Beverly in and sat her at the head of the table. We consumed our feast, and I plead no contest to the claim I ate more than half by myself. I asked what they wanted to do, and Beverly made it clear she planned to relax on the porch. Karen was happy enough to explore the area, and see the sealed off upstairs. \n\nAfter breakfast we set Bev up outside with a table and a pot of tea. The woman loved her tea. I also made sure she had her cell phone which miraculously had reasonable reception where we were. Then Karen and I dressed for hiking and decided to explore the woods a bit around the place. \n\nIt was nice, walking and chatting with her, exchanging bits of our backgrounds, and a love for the outdoors. We made a series of small forays, returning to The House regularly to check on Bev.\n\nBev was enjoying a book and the fresh air, and shooed us away each time we returned.\n\n\"If you don't leave me alone for at least an hour, I swear I won't be responsible for my actions!\" she finally announced, giving us our marching orders. \n\nWe decided to hike down to the road and back, and I was surprised to find myself getting hungry after all the walking. I pointed out several of the different types of trees to Karen, who picked up on the differences quickly, pointing out various specimens on our return hike.\n\n\"What did she charge you for this, if you don't mind my asking? She's notoriously stingy, and it must have cost a pretty penny. Do you come from money?\"\n\n\"Money? I come from foster homes. Six of them growing up. No, I don't come from money. I didn't realize quite how large the property was, and I was hoping just to buy The House and access to it, but she signed over the whole place.\"\n\n\"Now you've got me curious. What was it, the Lotto? Did you cash in on one of those internet startups? Spill.\"\n\nI laughed. \"I never got to make an offer. She sold it to me for a dollar.\"\n\nThat stopped her in her tracks. \"One dollar! But...that's crazy!\"\n\n\"That's what I said, but her lawyer backed her on it. The only condition was that I kept her up-to-date on the progress, which I would gladly have done anyway.\"\n\nShe started walking again, shaking her head. \"Old Bev is full of surprises, isn't she?\" We walked along in silence for a bit, before she spoke up again. \"Best deal she ever made.\"\n\n\"How's that?\"\n\n\"She was wasting away. We thought she'd pretty much given up on life, and then you came along. She could talk of nothing else each day except what you were working on, and how the house was coming. She was a delight to be with after every one of your phone calls. I've known her for several years and have never seen her happier. She deserves a little happiness. She's a good soul.\"\n\n\"It's been good for me, too. It's nice to have someone to share this with. She's the closest to family I've ever had, and I've known her maybe seven months. Hard to believe.\"\n\n\"It is hard to believe. Hard to believe you don't have someone to share this with. No special someone in your life.\"\n\n\"My own fault. Too driven to get through college, working and studying. Too focused on success at business, paying off my loans, working two jobs for three long years. Too fixated on this house for the last couple of years. I wouldn't have been good company.\"\n\n\"Thinking of settling down a bit now?\"\n\nI laughed. \"Not for a while. Everything I have is tied up in The House. I'm broke, and will have to work hard to scrape together the next 100 grand it'll take to finish this place the way I want. No, I think I'll be busy a while longer.\"\n\nShe skipped to the side of the road and returned with one of the last fall wildflowers. \"You've got to stop and smell the roses occasionally. All work and no play makes Jack a dull boy.\" She smelled the flower and held it to my nose. When I went to smell it she pushed it in my face and took off running up the road, laughing.\n\nI caught her after a short ways, and grabbed her, swinging her off the ground. \"Dull boy? You are a troublemaker aren't you?\" \n\nShe struggled in my arms for a second then twisted toward me. I was shocked when she gave me a quick kiss, and almost fell when I released her.\n\n\"Impertinent boy! I'm going to tell Bev how you manhandled me.\" She was skipping up the road backwards, wagging her finger at me.\n\nI jogged up next to her. \"Do it and I'll tell her you kissed me.\"\n\n\"You're rotten! I did no such thing. You kissed me!\"\n\n\"Keep it up, devil-girl, and I'll do it again.\"\n\nShe took off running. \"You'd have to catch me first!\"\n\nOrnery thing. Karen wasn't a kid, I'd guess early thirties, probably had me by a couple of years, but I couldn't help smile at her playful antics. She had a full figure, and when she ran any red-blooded man would recognize how womanly that figure was, with a narrow waist, wide full hips, and tapered legs. Definitely worth catching.\n\nCatch her I did, and when she turned to me I leaned down and kissed her, longer this time. She came into my arms, hugging me, returning my kiss. She pulled away, catching my hand in hers. \"Ok Romeo, I won't tell if you don't. Deal?\"\n\nI was still surprised at my own actions. It took me a few seconds to come to grips with myself. I gave her hand a squeeze. \"Deal.\"\n\nI was nearly 30 years old, and felt like I was fifteen all over again. Holding hands with a girl at the skating ring, going around and around in circles, never wanting the evening to end. Alas, at the end of the road she dropped my hand and jogged up to The House. \n\n\"How's it going, cranky-puss?\"\n\n\"Where have you two been? Leaving me alone up here for hours on end! You're just in time. If you'll help me to the restroom I won't embarrass myself.\"\n\nI checked the time. We'd been gone 55 minutes.\n\nKaren leaned down and gave her a hug. \"I'm sorry, Sweetie. We lost track of the time. Let's get you inside.\"\n\nBeverly reached up and patted her hand, as she was wheeled indoors. \"So long as you two had a nice time.\"\n\n\"He's a handful, but it was nice.\"\n\n* * *\n\nAfter lunch Bev took a nap, and I opened up the top floors and showed Karen around. She was suitably impressed with the open layout and the work done so far. The third floor was a little sparser, with the floor and ceiling unfinished, and I'd left it completely open. She even wanted to see the attic, so we headed up the last narrow stairwell and she got her wish. \n\nBack on the third floor, she walked around the room. \"I wonder which window it was.\"\n\nI hadn't thought about it, but gave it some consideration. \"It looked like the worst of the fire was in the front of The House. It was probably one of the rear windows.\"\n\nShe had stopped at the single window on the east side of The House. \"I don't think so. I think it was this one.\"\n\n\"Really? Why?\"\n\n\"I don't know. I just do.\" She shivered. \"Can we go back down now?\"\n\n\"Of course.\"\n\nBack on the main floor, she asked me what my next project was going to be.\n\n\"I'm going to start on the second floor, room by room, and when that's done, I'll get going on the top floor. I'll probably run the wiring myself, then bring in an electrician to sign it off. I'm still not too comfortable with plumbing. I guess I'll wait for the spring to bring my plumber Charlie in to finish that up. Maybe I'll be able to afford it by then.\"\n\n\"You've got your work cut out for you. That's for sure.\"\n\n\"Yeah, but you know, I enjoy doing it. It makes me happy to see it slowly come together. The House feels more alive with every board I lay, every nail I drive. Sometimes I forget I need to sleep and work long into the night.\"\n\n\"That's good. You're right about the house. It's like it's alive. Watching us, while it slowly heals under your care.\"\n\nI laughed. \"I don't mean alive like living, just, I don't know, alive.\"\n\nShe just shrugged. \"I don't know what I'm thinking. At least it seems friendly. For the most part.\"\n\n\"For me, I'm surprised how cozy the downstairs feels, with all that stone and open space.\"\n\n\"It's nice. You've made it that way.\" She wandered away from me and went to Bev who was awake and letting us know it.\n\nI had opened a few of the windows, to let the air in, and walked around partially closing them, as the day cooled a bit. I still loved the fresh air, and would take it hands down over the muggy city atmosphere. Being a couple of hundred feet higher than the surrounding area appeared to help a lot. \n\nBev looked good, her cheeks pinking up, her eyes bright. \"It's a different world up here. A different time. You can almost forget all the bad things going on elsewhere,\" she said.\n\nKaren agreed. \"No doubt. I could be anywhere, not an hour and a half away from D.C.\" \n\n\"We've talked so much about your plans for the house, what are you planning for outdoors?\" Beverly asked.\n\n\"Hadn't given it much thought. I wouldn't mind having a nice garden up here some day. I've also thought about clearing a few more trees off the southeast side. From the roof, you can see for miles. In that direction, if I opened it up, I could look out from the porch and see nothing but trees and farms almost to the river. To the south and west, I'd like to leave them as they are, blocking the view and the sound of the highway.\"\n\nKaren liked the idea, and I found myself interested in her opinion. \"Have you thought about clearing the area around that huge oak tree to the northeast? It could be so picturesque. Maybe put a bench underneath it?\"\n\n\"Hadn't thought about it, but it wouldn't be too tough to do. A couple of days work, and I can always use the wood.\"\n\n\"Can I see this tree?\" Beverly asked. \n\nI'd be hard pressed to ever say no to her.\n\nWe took her out, and gave her a tour of the area, as much as we could within her transport limitations. The old oak was huge, and had successfully held its own against the encroaching wild. The lowest branches could have been trees on their own, stretching out sideways, fighting for space. In some ways the tree was much like The House. Standing strong and solitary, taking whatever time and nature threw at it, and weathering it all. ",
        "Bev asked to take a break under the tree and we parked her there, while we sat on the ground nearby. We talked about her past, her childhood, what the country was like in the thirties and forties.\n\nShe had been in love, married young, and her husband of eight months joined the nascent Army Air Forces after Pearl Harbor. He'd died over the skies of Europe, and she'd never married again.\n\n\"It wasn't for lack of trying. I met some wonderful men, but they always dimmed in comparison to my Bill. I led an exciting life, but it was often lonely. I wouldn't wish that on anyone.\"\n\nI understood her feelings. I'd grown up alone, and figured it was a part of life. Even the few relationships I'd shared did little to ameliorate my feelings of isolation. In truth, the odd relationship I had with Beverly was the one thing in the last 1/2 dozen years that had kept my loneliness at bay.\n\nI reached my hand over and placed it on her knee. \"I hope you're not feeling too lonely. I'd like to think that we'll be friends for a long time.\"\n\nShe smiled, patting my hand. \"I'd like that. The last several months have been very nice, and this weekend has been wonderful. I'm so glad I let you talk me into coming.\"\n\nKaren added her $.02. \"Ditto to that. This has been a great break. I can't tell you how happy I am you decided to share it with me.\"\n\nWe broke up our little party, as the day slipped away. We rolled Beverly back in The House, and cranked up the fireplaces. Karen took over in the kitchen.\n\n\"Anything in the refrigerator off limits?\" she asked.\n\n\"Hardly. Everything's fair game. If you need anything that's not in there, it's about 40 minutes round trip to hit the store.\"\n\n\"I think I can manage with what you've stocked. You've got enough food in here to feed an army. Any special requests, Bev?\"\n\nBeverly shook her head. \"Surprise me, and don't hold back - no diet tonight.\"\n\nI was happy enough to sit back and chat with Bev while Karen took care of the dinner. I felt decadent, letting her do the work while I took it easy. It was a feeling I could get used to.\n\nThe aroma of meat cooking in olive oil and garlic was combating the fresh smell of the outdoors, where it was doing some serious ass-kicking, and even putting up a decent defense against the fragrant fires burning freely in all four fireplaces. So different from my antiseptic work place, and the stench of the city. \n\nBeverly was watching me, as I inhaled deeply. \"I know.\" She closed her eyes and breathed as deeply as she could. \"It's great to be able to draw a line between yourself and the rat-race.\"\n\nAmen to that.\n\nI was asking her about her extended family, which she had casually mentioned earlier. \"No, nobody very close. Some distant children and grandchildren of my cousins, haven't heard from any of them in years. My cousin Angela was the last to stay in touch. I've left a little something for all of them in my will, kind of spiteful. Just enough to let them know I was there, and if they look into it, they'll see a bunch of charities getting what might have been theirs, if they'd cared enough. A phone call or even a Christmas card would have been nice. I guess I shouldn't expect so much. Nobody writes anymore. It's email this, facebook that, and twittle notes, just blabbing your life and personal affairs to the world, and never really connecting. I sometimes think I've lived just a little too long.\"\n\nI shook my head. \"I know it might sound selfish, but I hope you live many more years, and come and visit as often as possible. You bring The House alive.\"\n\nShe laughed softly. \"It's sweet of you to say so, Jack. But it's the young girl in the kitchen livening this place up.\"\n\n\"Hardly. She's a guest, and nice to have around, but as far as I'm concerned, you're family. At least the closest I've ever had.\"\n\nShe reached out and held my hand, squeezing it softly. I was getting all mushy. Too much time away from the big tools. I needed to go out and fell a tree, get my testosterone going again. \n\nBefore it could get too maudlin, Karen called to me from the kitchen. \"Alright, slacker. Why don't you drag your cute butt in here and set the table? Dinner's only a few minutes away.\"\n\nCute butt? The woman was delusional.\n\nI set about getting the table ready, peeking at Karen's culinary effort. A simple Italian dinner, she had meatballs, meat sauce, spaghetti, bruschetta, and was browning some Italian sausage. I hope she'd cooked a lot. It smelled divine.\n\nDinner tasted even better than it smelled, and I stuffed myself to the point of bursting. Beverly couldn't praise Karen enough on all she'd pulled together, and I think she was getting embarrassed from all the compliments.\n\n\"C'mon Bev, it's just spaghetti and meatballs. No big deal.\"\n\n\"Best I've eaten in ages,\" I managed to blurt out between bites of sausage.\n\n\"That I believe. You eat like a starving lumberjack,\" Karen laughed. Hers was a strong, throaty laugh, and I liked the sound of it. A lot. I'd have to see what I could do to make her laugh more often.\n\n\"Hey! I'm only trying to make you feel appreciated. Wouldn't want any of this to go to waste.\"\n\n\"If I ate like that, you'd have to roll me away from the table, without the benefit of a fancy chair like Bev has. More like Violet in Charlie and the Chocolate Factory.\"\n\n\"So if I squeezed you, I'd get blueberry juice?\" I teased.\n\n\"Well I guess you'll just have to try it and see what you get,\" she shot back. She had a devilish look in her eye that had me blushing.\n\n\"Karen, don't tease the boy. I don't think he's been around this much womanhood in a month of Sundays.\"\n\n\"I hear it, but I don't believe it. I bet he's a heart-breaker in disguise. A wolf in lumberjack's clothing.\"\n\nAfter dinner I cleaned up, fair's fair, while the ladies enjoyed their coffee and tea. We tried our hand at Hearts for a while, and I got to hear a little about Karen's past. She'd married young, no kids, and it had fallen apart early. She'd gone back to school for her RN, and worked for a couple of years in a large hospital before she got tired of the long hours and lousy shifts. \n\nShe'd then spent another couple of years as a traveling nurse, seeing the world before she got tired of the frequent travel, and turned to the upscale nursing home where Beverly was.\n\n\"She's the best in our place, no doubt about it,\" Beverly said. \"It took some real finagling on my part to get her away from there for this trip.\"\n\n\"Hell, Bev. You and Weird John are the only things that keep me in that place.\"\n\nI got to hear about Weird John, the conspiracy nut, and his dealings with aliens and UFOs, as well as his secret government background, which gave him an encyclopedic knowledge of the world, at least the Post WWII, pre-80's version.\n\nThey had me almost rolling on the floor, hearing some of his escapades, but I should have been paying more attention to the cards. The ladies were teaming up against me, and I was getting whipped. We were playing for pennies, and I was already six bucks in the hole.\n\nWe bundled up Beverly in a blanket and retreated to the porch, where I indulged in a small Scotch and a cigar, with the ladies' permission.\n\n\"I wouldn't have taken you for a cigar smoker,\" Bev observed.\n\n\"It's pretty rare. Maybe a half-dozen a year. But this seems as good an occasion as any, breaking in my new porch.\"\n\nWe enjoyed the crisp, cool evening air. I don't think I'd ever opened up to anyone as much as I did with those two. It was just so easy, so comfortable, like I'd known them for years.\n\nMy childhood had not been a happy one, and it wasn't something I ever talked about, but between the two of them, they managed to squeeze most of my past out of me.\n\n\"It's hard to picture you as a delinquent,\" Karen remarked.\n\n\"Yeah, my counselors told me I was just trying to get attention. Luckily I got tired of the schooling, and detention, and joined the Army at 17. Four years as a Ranger straightened me up, and Uncle Sam paid for me to get a degree. Took less than 3 years, turned out I wasn't quite as dumb as I'd been led to believe.\"\n\nBev looked at me like I'd grown a second head. \"Army? You are full of surprises, aren't you?\"\n\n\"It's not for everybody, but it was good for me. I loved being a Ranger, belonging to something where my past didn't matter beans. Do your job, keep your nose clean, be willing to take a lot of crap the first year, and it's not a bad gig. I made some real friends for the first time in my life. Thought about making a career of it, but I still felt I was missing out on something.\"\n\nI took a long puff, playing at blowing smoke rings. \"I always felt like an outsider, a transient, never fitting in. Until I stood in front of The House. From that moment I knew, absolutely, without a doubt knew where I belonged, and what my purpose was. I'm lucky. I doubt one in a thousand people get to follow their dream and live with purpose.\"\n\nTurning to Bev, I took her cool hand in mine. \"I...I'll never be able to thank you enough for giving me this chance. It would have killed me if I hadn't been able to do this. You need to know this is the kindest, most generous thing anyone's ever done for me. Ever could do. I'll never be able to repay you.\"\n\nBev squeezed my hand, smiling gently. \"Don't be foolish, Jack. You gave me my life back. Finish restoring the old girl, and we'll call it even.\"\n\nWe chatted a bit more about nothing much. It didn't matter. Sitting on that porch, with them, was about as good as it gets. Nearly 30 years old, and I finally understood what it was to be content, to have family, and to belong.\n\nBev reminded us it was getting late, and I gave her a hug and a kiss on the cheek, while Karen settled her in. I moved to the swinging bench I'd installed, taking the blanket and the last couple of inches of cigar with me. I told myself it was just getting more comfortable, but down deep I hoped that Karen would respond to the invitation.\n\nI needn't have worried. When she walked out to the porch, she glanced at my empty chair, then looked over and found me on the porch swing. She smiled as she walked over and I lifted the blanket in invitation. Karen settled in next to me, nuzzling up close, as I pulled the blanket over her.\n\n\"How is she?\"\n\n\"Exhausted but ridiculously happy. She looks better then she has in ages. I suspect the fresh air and good company has a lot to do with it.\"\n\n\"I imagine the meals aren't hurting. I haven't eaten this well in, heck, I can't remember how long it's been. Maybe ever.\"\n\n\"Good,\" she said softly resting her head on my shoulder. \"I feel a little like a squatter here, and it's nice to think I can contribute in some small way.\"\n\nI maneuvered an arm around her shoulders and hugged her close. \"Don't think that way. Your presence here is a delightful surprise. I can't believe how easy you are to be around. It's like I've known you for years.\"\n\nShe giggled. \"It seems like I've known you for months. You know you're all she talks about. If I had to sit through that video of 'The House' one more time, I think I'd have done something rash. And yet all I knew of you was that voice of yours, your words, and your work on the place. In the future you might want to figure out a way to get yourself into some of the pictures. You are nothing like I'd pictured.\"\n\n\"Oh really? And how did you imagine me?\"\n\n\"Shorter. Rounder. Older. Balder.\"\n\n\"Ouch! Is that what I sound like? I guess old Bev didn't paint a very flattering portrait of me.\"\n\n\"But she did! I mean, according to her you were some Greek God, fallen to earth, or maybe a Hercules, half God, half man, able to undertake any task, no matter how impossible. I figured it for hyperbole. I mean, really? Tall dark and handsome, keeps his promises to an old woman half a country away, and restoring a mansion from scratch, with little more than desire and a Swiss-army knife? Come on!\"\n\nI had to laugh. \"I'll have you know my Swiss-army knife is the deluxe edition.\"\n\nShe giggled along with me, and we settled into a comfortable silence for a while.\n\n\"Jack?\"\n\n\"Hmmm?\" I answered quietly, realizing I'd been halfway to falling asleep.\n\n\"I know I was a little silly on our hike today, maybe even a bit brazen. I didn't mean anything by it. I'm not trying to come on strong, but it's just been such a delightful couple of days.\"\n\nI gave her another hug, or tried to, realizing my arm was falling asleep. \"I loved every minute of it. It's been nothing but work for me for too long now. Your attitude is contagious. I haven't been this happy in a long, long time.\" I struggled to move my arm a little to restore the circulation, but she made it easy for me by turning sideways and lying down in my lap.\n\n\"I'm glad. I know our time is short, and I may never see you again, but as silly as it seems, I'm having the time of my life here with you.\" She surprised me by taking my hand, which was resting on her belly, and moving it up to her breast. It filled my hand nicely, and I gave it a gentle squeeze.\n\nShe closed her eyes, and I stroked her hair while I caressed her. I felt myself hardening, embarrassed that my erection would be pushing against her head. She just smiled a little, and turned her face toward my stomach, rubbing her cheek against my hardness. \"Mmmm,\" she whispered, \"Is that for me?\"\n\n\"You're driving me crazy,\" I confessed.\n\n\"Li'l ole me? Why? I'm just lyin' here, doing nothin'.\" Her exaggerated southern drawl was fuel to the fire.\n\n\"And you're doing it incredibly well.\"\n\nShe finally opened her eyes, and I could see I'd lit a fire inside her. \"I think it's time for bed. Shall we?\"\n\n* * *\n\nI closed the door to my room quietly, nervously. She was sitting on the bed, observing. \n\n\"I have to admit, I feel a little awkward with Bev right next door,\" I said.\n\nShe gave me a knowing smile. \"I understand. But believe me, she'd approve. Hell, she'd eagerly take my place if the excitement wouldn't kill her.\"\n\nWe undressed each other quietly, slowly, taking the time to get acquainted with each other's bodies. When I had her naked I pulled her into my arms and gave her the kiss I'd been thinking about all afternoon. She molded herself to me, and kissed me deeply, completely. I was mesmerized. \n\nWe climbed into my bed and it was like we were old lovers. The awkwardness was gone, and we spent an eternity just getting comfortable with each other. When she went down on me, I had to pull the covers back to watch, carefully ensuring they still covered her, keeping her warm. \n\nIt was a delightful, intimate act. She wasn't working to get me off, she was just enjoying herself, playfully familiarizing herself with my most private part, occasionally looking up to bask in my adoration.\n\nThen she was climbing on top of me, sliding my hardness inside of her. She sighed as she settled onto it, taking my full length. \"God, it's so nice, so hard, so smooth, so perfect. Like its owner in so many ways.\"\n\nShe had me blushing. Surprising for the intimate position we were in. \"Believe me, whatever you're feeling can't hold a candle next to what I've got going on here. You are amazing.\"\n\nShe ceased her rocking and laid down on my body, while my hand caressed her bare back down to her delightfully full ass. \"That's nice to hear. I was worried I might not even remember how to do this. It's been a while.\"\n\n\"You needn't have worried,\" I assured her, holding her butt while I thrust up into her slowly and steadily. \"You are incredible. God's truth. I can't believe how wonderful I feel here with you.\"\n\nShe gasped when I thrust into her harder. \"Jesus, and to think I almost turned the old biddy down! Fuck me, Jack.\"\n\nThe eternity of foreplay, and the leisurely suck had me nearly on edge. Being inside of her, and having her so completely was just too much to bear. I pounded into her as hard as I could from our position. \"I'm so close,\" I groaned.\n\n\"Come in me. Let me feel it, come for me Jack. I want to feel you come inside of me,\" she whispered into my ear.\n\nIt set me off, and I filled her, erupting powerfully, thrusting up hard and lifting her hips with each needful burst.\n\nGasping, I slowed to a halt, holding her tightly in my arms. \"Amazing,\" I told her, turning her chin up so I could kiss her softly. \n\nShe slid off of my body to the side, holding me close, her leg over mine, her wetness pressing into my thigh. I felt a breeze, and pulled the covers over us. They'd somehow ended up almost completely off, barely covering us from the knees down. \n\nI looked over at the open doorway. Damn. I'd have to fix that. What if Bev had been up and about? \n\nIn the middle of the night, I found myself half-awake, and fully aroused. Her hands were cool and soft, barely touching me, but my response was anything but cool. I felt a burning fire in my loins, and groaned while she got me off. So intense, so powerful, after what we'd been through earlier. I moaned my pleasure, and thanked her softly, before drifting back asleep.\n\n* * *\n\nI awoke with a start, hard again. I reached for her, but the bed was cold and empty. Again, the covers were completely astrewn. I looked toward the doorway, but it was firmly shut. I could hear movement outside, and smelled fresh coffee.\n\nI half wondered if the night before had only been a dream.\n\nI put on a pair of boxers and my robe, and answered the call of coffee.\n\nBev was already seated at the table, enjoying her morning tea, and nibbling on a piece of toast. She was dressed nicely, her hair coiffed immaculately, always so proper. Made me feel like a bit of a lout, wearing only a robe. I went over and gave her a kiss on the cheek good morning, then went and got a cup of the coffee, peeking at Karen parked over a pan of pancakes in the making.\n\n\"Good morning,\" I said hesitantly.\n\nShe turned and gave me a big smile and a wink. \n\nI was confused and hesitant. I had no idea what to do next. It wasn't like it was a situation I was used to. So I just stood drinking my coffee, taking sidelong looks at the little vixen who'd rocked my world.\n\n\"Please!\" Bev sighed. \"In my day, when a boy and girl did what you guys did in the night, he'd at least give her a kiss in the morning.\"\n\nI felt myself blushing hard, but it gave me the excuse I wanted. I gave Karen a hug, and a short sweet kiss. \"She's right you know.\"\n\nKaren pulled me back down for a more thorough kiss, before turning back to her task at hand. \"Clean up a bit, breakfast's almost ready.\"\n\nI obeyed, beating a retreat. I imagined my breath was nowhere near as fresh as hers had been.\n\nI was closing the door, when I heard Karen address Bev. \"Yes we did, and yes it was incredible. Satisfied, nosy?\"\n\nI couldn't hear the reply from behind the door, and tried to block it out as I washed my face, brushed my teeth, swiped a razor across my face, and ran a brush through my unruly hair.\n\nI sat down next to Bev, and helped myself to a stack of pancakes, while Karen took a seat across from me.\n\n\"Next time, could you at least leave my door open? Do you know how hard it is to listen through these walls? Jack, I think you might have done too good a job there.\"\n\nI almost choked on that first bite. \n\n\"Wouldn't you prefer a front row view? We could park you right beside the bed if you'd like,\" Karen asked sweetly, finishing the job Bev had started, leaving me choking and coughing and grabbing for my juice.\n\nBev took it in stride. \"I'm not sure if this old ticker could handle it, but I dare say it might be worth it. Of course I wouldn't want to cramp your style.\"\n\nKaren abruptly looked serious. She reached out and took Bev's free hand in hers. \"Seriously. Anything you want. I owe you for this one.\"\n\nThat finally got to her and Bev blushed. \"I'm just teasing, you little hussy!\" She turned her attention to me. \"I really am glad that you guys found some comfort in each other.\" She put her tea down, reached out for my hand, and placed Karen's hand in mine.",
        "\"And now I owe you twice,\" I told her. \"First for giving me this wonderful place to fix up, and now bringing this sexy, saucy wench into my home.\"\n\nI guess she wasn't quite done teasing. \"I'm just glad you were up to both tasks.\"\n\nKaren rolled her eyes, \"Keep it up, old woman, and I'll see what kind of meds I can slip you to give us a little privacy.\"\n\nBev heaved an exaggerated sigh. \"Privacy? Again with the privacy? And I thought we were making progress.\"\n\nFortunately that was the end of the teasing, and we discussed what we could do with our last full day together. They were leaving the following morning, but I didn't really want to think about it.\n\nWe settled for a relaxing morning of doing nothing, followed by a picnic under our immense ancient oak.\n\nAfter lunch, Bev confessed to being a little tired, and asked for a nap. We were only too happy to accommodate her.\n\nKaren and I hadn't had more than a couple of moments alone all morning, and I desperately wanted to share some time with her. I loved the old woman, more than I thought possible in such a short time, but wouldn't mind spending a couple of hours away from her.\n\nKaren put together a snack and grabbed a tote bag, while I did a little maintenance of the fireplaces. Then we headed out for a walk. She wanted to see the stream I'd mentioned. I warned her it might be a bit of a hike, and got a machete out of the trailer to deal with any overgrowth.\n\nWe chatted amiably, mostly about The House, what work I intended to do over the winter, and about old Bev. The walk was a bit strenuous, including climbing over and under logs, and cutting our way through the underbrush in a few places. Our conversation turned to both of our jobs before too long.\n\nThe stream wasn't that far away, we soon found out, not more than a couple of hundred yards from the hilltop. Easy enough to find, we just walked downhill until we hit it. We reached the water at a point where we had about a 5 foot drop. Looking up and down the bank from where we stood, it looked like there was a more open area a short ways downstream. We cut back into the woods, and worked our way downhill, towards the main road. \n\nWe spotted the opening, an incredibly huge tree dominating a space probably 100 feet across. We approached it in awed silence, the trunk easily as broad as the old oak by The House, and stretching to the sky. The smooth bark and incredible size made its identification easy. \"Beech, largest I've ever seen,\" I informed my pretty companion.\n\n\"My God, it's gigantic!\" she gushed.\n\nI walked around the massive trunk, which forked into several secondary trunks, each as big as the enormous oak near The House. The trunk at its base must have been over 6 feet in diameter. There were numerous other beeches in the immediate area, but none half as large. There was an area 40 feet or more around the base of the tree, where almost nothing grew. I looked around more carefully, and recognized that the woods had changed dramatically, down near the stream. It was ancient, probably as old as our country. Maybe older. The floor was clear of growth except for thick moss and ferns, a fallen log nearly as tall as me stretching across the running stream. It was incredibly beautiful.\n\n\"Can you imagine how ancient this tree is? The things it's seen? It must be hundreds of years old.\"\n\n\"No kidding. I bet it's even older than Bev!\" Karen laughed.\n\nI was running my hand around the trunk, and stopped. \"Come here, you've got to see this.\"\n\nKaren hustled over and gasped when she saw where I was pointing. A huge heart had been carved into the tree, nearly two feet wide, with Don + Mary etched in its center. The carving was so old the letters had stretched until each was an inch wide, and had mostly healed over, making it difficult to read. I watched her reach out, her fingers tracing the heart's outline. \n\n\"I guess we're not the first ones to find this tree,\" she said softly.\n\n\"Sad,\" I murmured. \"He must have loved her a lot. Built this beautiful home for her, and then never returned to it.\"\n\nKaren nodded. \"This is a beautiful place. The running water, the open space, the shade of the tree, the thick moss under foot. Like a fairy tale.\"\n\nShe was turning slowly, taking in the atmosphere of this magical locale. She faced me and smiled, slipping into my arms. \"Thank you for this. I'll never, ever forget it.\"\n\nI leaned down and kissed her, and let her pull me down to the forest floor. The moss underfoot was nature's softest pillow. Our kissing intensified, and my hands explored her wonderful body.\n\n\"Make love to me, Jack. Here, in this cathedral.\" She sat up and slid her shirt off, then reached back and undid her bra.\n\nI took off my shirt and placed it on the ground, moving her onto it. She giggled, pulling out of my hands, and pulling a blanket out of her tote bag. She passed it to me, and we stretched it out on the bed of moss. We each continued disrobing until we were naked in each other's arms again.\n\nShe chuckled.\n\n\"What?\" I asked, smiling at her joyfulness.\n\n\"We've got an audience,\" she said, pointing.\n\nAbout 10 feet away, a large black squirrel was perched on its hind legs, watching us.\n\n\"He's going to get a show,\" I teased.\n\nShe rolled onto her back, opening her legs for me. \"Promise?\"\n\nI moved over her, ready. \"Absolutely.\" I rubbed my stiffness against her, pressing between her moist lips. I could hear her wetness. She was more than ready.\n\nIt was beautiful, making love to her in the open air, feeling the breeze against our bodies, hearing nature all around us. The moss was incredible, so soft underneath us, making the experience dreamlike. The sound of the running water was a comforting constant in the background. \n\nI felt strong and refreshed. The feeling of being inside her was amazing. I was pumping her easily, long firm strokes, no urge to hurry, no need for completion. The simple act was all I needed. I looked into her eyes, studying her, watching the emotions flutter across her face. She was getting excited, her breath coming faster, her hips driving back against me.\n\nI kissed her softly, and was surprised by her passionate response. I picked up the pace, moving faster, taking her, claiming her, Mother Nature our sole witness.\n\nShe whimpered softly, pulling me down and hugging me tightly. I fucked her faster, harder, more desperately. \n\n\"Oh God, oh God, oh GOD!\" she moaned loudly, her whole body tensing underneath me. \n\nHer orgasm excited me to no end, and I sought my own release, moving my hips, searching out just the right friction and angle to enhance the feeling. When I found it, I started a nice motion, long strokes finishing deep inside of her, pulling out to the very edge of her warm treasure. \"You're incredible,\" I told her softly.\n\n\"Jack, Jack,\" she gasped, arching underneath me, \"soooo good,\" she groaned.\n\nI was getting close, moving faster, spreading my knees wider, driving with my hips. \"Fuck,\" I groaned. \"Incredible.\"\n\nShe cried out loudly, coming for me again, and the experience pushed me over the edge. I slammed into her, making her scream for me. I came hard, pounding out rope after rope deep inside of her.\n\nWe lay in each other's arms, catching our breath, and reveling in the afterglow.\n\nI gave her a kiss, and got up, slowly dressing. I enjoyed watching her cover up her body, getting those last few glimpses of her nakedness as she hid it away. I passed her the blanket, and pushed the moss back into place, where my actions had left dents and divots.\n\n\"Whatcha doin'?\" she asked.\n\n\"Making the bed,\" I told her, earning a chuckle.\n\nWe walked back hand-in-hand, quietly. I helped her over logs, and through the brush, while we slowly started chatting again.\n\n\"It's all so unbelievable, surreal,\" she said, as we saw the edge of the forest at the top of the hill.\n\nI laughed. \"You're getting the bug. It's been eating away at me for 5 years.\"\n\n\"I can see how. This place is addicting.\"\n\nI don't know what came over me, but I didn't want it to end. \"If you need a fix over the holidays, the door is always open.\"\n\nShe hesitated, her hand clutching mine. \"You'll be too busy,\" she whispered.\n\n\"Not for you. Consider it, please.\"\n\n\"I'll think about it,\" she said shyly. She turned and gave me another quick kiss, before we broke out into the open.\n\nThe evening was quiet, with a simple steak and baked potato dinner prepared on the outdoor Weber grill by yours truly. We moved out to the porch, and talked long into the night. \n\n\"What are you doing for Christmas, Bev?\" I asked.\n\n\"Ham, with a house full of old farts, unless I have a better offer,\" she giggled. She was sipping on her second glass of wine, and I think she was already smashed.\n\n\"I get off from Christmas through New Year. I'd love the company.\"\n\n\"I was only teasing. I couldn't stand to interfere with your work,\" she said.\n\n\"Actually, I could still get a lot done, if you didn't mind. And still take Christmas and New Years off,\" I assured her.\n\n\"No promises, but I'll give it some thought.\" Bev answered. \"I think I'd better call it a night. It's getting late.\" \n\nI got up to give her a kiss goodnight. Karen prepared her for bed, while I closed The House down for the night.\n\n* * * \n\nAfter our afternoon dalliance, I wasn't sure if Karen would be up for some more fun, but she showed up in my room while I was still working at the fireplace. \n\nWe were more playful, exploring each other's bodies, teasing and exciting each other until the urge to go further overwhelmed me. Our lovemaking was different, more urgent, more demanding on my part. We tried a variety of positions, and I prolonged the act as long as I was physically able, taking breaks whenever I got too worked up, alternating between the use of my mouth, my hands, and my needful cock. After seeing how sexy she was climaxing, down by the stream, I was determined to have her come for me again, successfully, a few times. \n\nI wasn't inexperienced, not by any means, but making love to Karen was different than anything I'd experienced, in a wonderful way. We meshed together perfectly, and when I could hold back no longer, I was completely satisfied, and enjoyed the feeling of my release within her. \n\nWe were both utterly exhausted, and she fell asleep in my arms, with me drifting off soon after. \n\nDuring the night, I partially awoke again to that incredible feeling between my legs. I sighed peacefully, accepting her generous gift, moaning softly for her. I allowed her to get me off, remarkably quickly given the circumstances. I gave her my seed, and rolled over to take her in my arms, cuddling close for warmth in the cool room.\n\n* * *\n\nI was sorry to see them go, after such a short visit, and told them so.\n\n\"Please say you'll come back soon,\" I told Bev, with a hug at the airport. \"If not at Christmas, then before the spring. I miss you already.\"\n\nBev cackled. \"I know what you're missing already. And as much as I'd like to help you with that, I suspect I'd break a hip or worse.\" She reached up and gave me a kiss. \"Thanks for sharing this. It's wonderful. Really.\"\n\nI gave Karen a more intimate hug. \"Come back soon.\"\n\nShe smiled, and squeezed me tightly. \"I'll do what I can. These last few days have been nothing short of amazing. You're a hell of a man, Jack.\"\n\nI kissed her, letting it prolong. \"You're quite a woman yourself, Karen. I feel so spoiled and refreshed, and can't wait to get started on the second level.\"\n\n\"Stay in touch. I left my number on the kitchen table.\"\n\n\"Too late,\" I teased. \"Already got it from Bev. You'll be hearing from me.\"\n\n\"Looking forward to it.\"\n\nI hated to see them go, but I was aching to get back to work on that old house, to get her in better shape for their return.\n\n* * *\n\nThat day was spent working on laying out the walls on the second floor, integrating the large vertical posts. I was originally going to lay it out much like the first floor and original design, with a large central hall and stairway, opening into four rooms on each side. I was still astounded by the pure size of the place, wondering how much space a single family needed. I remembered that back in the day, large families were not uncommon and servants might be housed as well. A spur of the moment decision had me changing things, creating only four spacious bedrooms, each essentially a suite.\n\nWith the first and second floors completed, I would have 4 huge bedrooms, each with its own full bath, on the second floor, with a kitchen, living room, dining room, study, bath and pantry on the first. I was thinking of leaving the third floor with a completely open layout, since it was unlikely I'd need to use it at all.\n\nWhich was good. The 3rd floor creeped me out. \n\nIt was drafty, the ceiling was lower, and the fact that the original occupant had leaped to her death from there wasn't helping. Plus, after my couple of close calls while working, I wasn't all that keen on spending any more time there than needed. \n\nI did want to put in the windows on the second and third floors, but I was going to have to take my time on that until the funds improved. The House had 5 windows in front, two on each side, and three more in back. Twelve windows on the second floor. The third floor had 5 in front but only 1 on each side, and two in back. At over $240 a pop, I had enough money left to complete the second floor windows, but it would leave me nearly broke. I decided to just do the front, for the aesthetics, and one on each side. I'd leave the other five until my cash-flow was better. There was a lot of interior woodwork I could do in the meantime.\n\nBetween the trip to the airport, morning goodbyes, and closing off Bev's bedroom, I didn't get a lot done, but I was still feeling pretty good that I had a plan. \n\nDinner was lonely, and I wasn't up to making anything fancy, so I scavenged sandwich fixings out of my depleted food stock, and called it a day early. \n\nI'd come to enjoy the late night porch drink and smoke, and indulged once more. A single malt and cigar was a nice way to end the day, and I told myself I'd have to put in a stock of both. \n\nI felt a little better after receiving the call from Bev. They'd made it back in one piece.\n\n\"I had to call,\" Bev explained. \"I know I said I wouldn't, but I had to tell you. The last few days with you were the best I've spent in decades. Thank you, Jack.\"\n\n\"Bev, I feel exactly the same. I love this place, love working on it. For the first time ever, there's something wrong. It feels empty. I miss you already.\"\n\nShe giggled. I loved that giggle. It seemed to strip away the years. \"I know what you're missing, young man.\"\n\n\"Tease all you want, crazy woman. You know the truth as well as I do. I miss my partner, my friend, my adopted Mom.\"\n\n\"I miss you too, Sweetie,\" she said softly. \"I can't thank you enough.\"\n\n\"You're coming for Christmas, right?\"\n\n\"I told you I'd think about it.\"\n\n\"You had half a day. Don't make me go down there and kidnap you.\"\n\n\"Fine. You're mean, to twist an old woman's arm like this. Can I bring Karen again?\"\n\n\"You better. Unless you're planning on doing all the cooking.\"\n\n\"Right. I'm sure that's the reason.\"\n\n\"You're a terrible tease, aren't you Mom?\"\n\n\"You're just figuring that out? It's not like I have much else to do these days. You wanna talk to her? She's standing right here, trying to act all cool and collected. Think I should make her wait any longer?\"\n\n\"Let's make her sweat,\" I teased. \"You know I'd rather talk to you than anyone else.\"\n\n\"Who's teasing now? Love you, Jack. I'm putting her on.\"\n\n\"Love you too,\" I said quickly.\n\n\"Love me? You barely know me! This is so sudden,\" Karen said softly.\n\nShit. Oh shit. \"Uhh,\" I started.\n\n\"I'm kidding, Jack. Don't have a cow. I'll let her know what you said. Ol' cranky puss is in rare form. Flying makes her grouchy.\"\n\n\"You keep saying that. I don't see it.\"\n\n\"You're a guy. She's sweet on the guys. One guy in particular it seems. Can't say I blame her.\"\n\n\"I miss you already. You're coming back for Christmas with her, right?\"\n\n\"Is that what she meant by twisting her arm? You talked her into it?\" She sounded pleased.\n\n\"Seems so. You wouldn't be mean enough to send her alone, would you?\"\n\nKaren laughed. \"If you're inviting, I'm there. I'm no fool.\" She stopped her giggling. \"I miss you too. God, it's like I've known you for years, not a few days.\"\n\nWe chatted for a few more minutes before she begged off. \"I really do need to take care of Bev. These long trips are hard on her. Thanks for calling. Think of me.\"\n\n\"Non-stop, I expect. Take good care of her.\"\n\n\"Of course. I owe her big time.\"\n\nGoing to bed I reviewed my plans for the upcoming week. Unfortunately my job still beckoned, but I should still get in plenty of work time each evening, four to five hours at least.\n\nMy bed was lonely. I missed Karen. I found myself stroking an erection, almost laughing. I didn't masturbate more than a couple of times a week, often less, but the recent spate of sexual escapades had me hard as a rock, without my new playmate to take care of things.\n\nThe room was warm from the heat of the fireplace. I pulled the covers aside, and closed my eyes, remembering. I could almost feel her stroking me, sliding her warm mouth over my cock. The feeling was incredible, tingling, setting my nerves on fire.\n\nI looked down at my hardness, standing tall, basking in the feeling running up and down my shaft. I grabbed the second pillow, putting it behind my head, propping myself up. I was getting close, so close. \n\nWith a gasp I bolted upright. I was being stroked, but it wasn't me. \n\nIt wasn't anybody. I was alone in bed, but I had felt it, a smooth soft movement up and down my length. I looked around, doubting my own senses.\n\nThen it started again. A tingling feeling, that set the hair on my legs to standing on end. A soft movement, up and down my rod. It wasn't a stray breeze, or some other oddity. It was clearly a stroking. I gazed down between my legs. I didn't see anything at first, then I noticed the skin on my shaft was shifting up and down with the movement. \n\nWas I crazy? Was I dreaming? What the hell was going on!\n\nThe feeling was intense, and I felt a new pressure on the head, enclosing it. Without warning, I felt the urge to come burst upon me, and I groaned as I exploded. It was powerful, and my hips bucked against the invisible force, spasm after spasm of pleasure emptying me. Yet when it was over, I looked down at my wilting cock to see it was dry and clean. No evidence of what had just happened.\n\nI didn't believe in ghosts, or spirits, or succubi, or any other supernatural visitor, but my brain was short-circuiting, and I had no explanation for what had just happened. \n\nSuddenly I was clammy, cold. I pulled the covers up and huddled underneath them.\n\nIt took me forever to get to sleep.\n\n* * *\n\nI was useless at work the next day, my mind still in a fog. It must have been my imagination, or a very real dream. I managed to answer a few calls, and avoid any serious snafus. I was glad when the end of the work day rolled around.\n\nI delayed going home, stopping by the hardware store and ordering the windows, then hitting the grocery store to restock. I even splurged at the local Wendy's. By the time I finally got to The House, I had convinced myself that it had been my imagination.\n\nAn imagination that was running amok.\n\nI found myself imagining things, touches to my hair, something brushing against my hip. I was normally pretty quiet when on my own, but I was talking to The House, asking if anybody was there. What did they want? What was going on?\n\nAt least moving some wood and tools up to the second floor distracted me for a while, and I worked later than I would normally during the week. I still opted for a scotch on the porch, nervous about going to bed. I made it a double.",
        "When I finally retired to my room, it was well after midnight. I put on a pair of boxers, and climbed under the covers. I kept my hand clear of my waist, in case playing with myself had been a catalyst to whatever the hell happened. I felt foolish, more convinced than ever that my mind was playing tricks on me. \n\nI fell asleep easier than I would have thought possible.\n\nIt was cool in the room. I was slowly waking to that same wondrous feeling. My covers had been pushed aside, and my cock was sticking up out of the fly in my boxers, hard and happy. I almost leaped out of the bed, when I recognized the stroking from the night before. I reached my hand down to see if I could feel anything, but there was nothing to feel. Moving my hand up and down, I sensed that same tingling, almost like static electricity, and the hair on my arms stood up. When I pulled my hand away, the tingling went away, but the feeling surrounding my cock lingered, and if anything intensified.\n\nWhat the fuck?\n\nWhat was happening to me? Inwardly, I knew I should be concerned, but I felt nothing but pleasure. I wasn't scared. I wasn't even nervous. I was being pleasured, being tended with gentleness. I moaned. The intensity was as strong as the previous night, stirring me strongly.\n\n\"You're going to make me come,\" I said softly.\n\nI felt that enveloping closure around my cock. Not warm precisely, but blocking the coolness of the room. The crown of my head was being teased, my shaft stroked. I felt the end approaching and watched. I came hard, grunting, and saw my cum disappearing. Rope after rope I expelled, only to watch it immediately fade away.\n\nThe stroking continued for a brief moment longer, and then to my amazement, my cock was tucked back into my boxers. \n\n\"Why?\" I asked the empty room.\n\nI didn't really expect an answer and I didn't get one.\n\n* * *\n\nOnce it started, it only got worse.\n\nI was marginally more useful at work, and was able to complete a customer visit without fucking up too badly. I was making slow progress on The House, sometimes speaking to Bev and/or Karen on my phone while working. I didn't mention my late night visitor of course. I didn't believe it, how could they?\n\nI went back to sleeping naked, and found that if I made myself available when I got in the bed, my spectral friend would go to work right away. The feelings were intensifying, the stroking more pronounced. I imagined it was a mouth finishing me, and felt the reaction more intensely. I could feel suction. The tingling was as strong as ever, but the motion had a more physical element.\n\nEach time I came, I was still surprised to find myself clean and dry afterward. The release was exhausting, leaving me cold and trembling, yet frighteningly satisfied.\n\nMy visitor was becoming greedier, and I was waking most nights to another erection being tended to. I experimented with staying in bed in the morning, stroking myself, and quickly found my helper was willing to take over for me. A steaming hot shower afterward took care of any lingering aftereffects.\n\nBy the time the weekend arrived, I considered myself lucky. All the stories I'd heard about ghosts or spirits had never hinted at this. No eerie noises, no furniture clattering, no strange footsteps. Just a willing sex buddy, with the singular goal of getting me off. Was that really so bad?\n\nI took a break midday on Sunday, after lunch and a call to my girls out west. I cleaned up, stripped down and climbed in my bed naked, waiting to see if anything would happen. It took a couple of minutes and I wasn't disappointed. \n\nIt was different. I felt the touch, but this time it was on my chest, fondling me, stroking me. The tingling was minimized, replaced with the feather-light contact. The caressing slowly moved southward, bypassing my limp cock, and focusing on my legs. I looked at the bed to see if I could detect any movement, but it was all limited to my body.\n\nMy cock wasn't left alone long, and I felt the motion on it, the slight pressure caressing, then surrounding me. I quickly hardened, imagining invisible hands stroking me to readiness.\n\nI relaxed, giving myself over to the feeling, letting my spectral guest work. I could feel the motion clearly, imagining where the fingers enveloped me, the lone thumb opposite. The mouth settled down early, encasing me, moving further down my shaft. \n\n\"That's nice,\" I murmured, being rewarded with a teasing of the head.\n\nAs was usual, I came rather quickly, but my ghostly fellatrix continued to stroke me, playing with me, teasing me, rapidly restoring my hardness. It took longer the second time, but I was able to deliver a second gift after a few minutes.\n\nI felt the movement again, moving up my body, brushing across my nipples. A gentle tingling pressure against my lips almost made me jump, but I held still, feeling the pressure return, a soft hint against my parted lips, but undeniable.\n\nI closed my eyes, wondering what the hell was going on. \n\n\"Who are you?\" I asked softly.\n\nIt might have been my imagination, but I thought I heard the faintest of whispers.\n\n\"...friend...\"\n\n* * *\n\nIt had only been three weeks since Bev and Karen had left, and three more weeks until they'd be coming back out for Christmas. I was hard at work, determined to impress them with the updated second floor.\n\nThings were moving ahead great. I was completely energized, my real-world job doing well, and The House effort was paying off. My first several months of working on The House on my own had been difficult emotionally. I was alone, except for the remote Bev, who at the time had been a wonderful anchor, but seemed more like an audience than a participant.\n\nThe long weekend together had changed all that. I saw her as a partner now, so much of her life vested in my project. Karen was in, too. Whereas Bev focused on every detail of The House, Karen was fascinated with the place as a whole, especially the property, the landscaping, the stream and our fabulous forest. Each day I continued to send them pictures of my work, holding back a few surprises for their visit.\n\nThe time since then had introduced a new partner into my plans. \n\nMy bedtime visitor was making her presence more known. I thought of my uninvited guest as a 'her', I guess my macho self couldn't imagine anyone satisfying me sexually as anything else.\n\nThe touches were becoming common events, brushing against me whenever I took a break. Only inside The House, although the porch was included. It was crazy, I know. No other word for it. I loved her touch, and started seeking it out. After a day's work, I'd come home tired. I'd change, prepare myself dinner, and unwind on the porch, calling my girls nearly every evening. About a week earlier, I'd felt her touch on my cheek, my neck, while on the phone. I don't know what made me do it, but I stood and lowered my pants and boxers. I was speaking with Karen, having finished my call with Bev, and the sensation started. I was hard within moments, but the touch was different, teasing. It was only after I got off the phone that the real action started. \n\nI leaned back, sipping a beer, and let her pleasure me. The warmth was there, the sliding pressure, the gentle movement. I lasted a couple of minutes, completed another orgasm that left me dry, got dressed and proceeded to work on the upstairs.\n\nMy new daily routine had me putting on a robe for dinner, getting my spectral blowjob, working a few hours on The House, getting another one after my evening shower, waking to another in the middle of the night, and starting the day right with yet another. I didn't understand it. There was something about her touch that brought me to near instant readiness. It seemed no matter how often I came, she could always get me ready for more.\n\nI was talking to her now. Not getting any response other than the usual touch or caress. I'd finished framing all the rooms upstairs, installed the wiring, and was starting to put up the walls. I expected that by the end of the weekend, I'd have two of the rooms finished on the inside. I was leaving the plumbing and hallway walls open until I got my electrician to sign off on the wiring. Most of each paycheck went for more things for The House. Other than gas and food, I had few expenses.\n\nI was pleasantly exhausted, relaxed, the fire keeping the room toasty, the covers pulled aside. It was late, after 1:00 am, and my friend was in a hurry. I was barely in the bed, before I felt her touch.\n\nI chuckled, getting comfortable. \"We can go twice in a row, if you like,\" I said.\n\nShe worked me through the first one pretty quickly. I groaned my release, and was surprised to feel her touch moving up my body. Looking down I could see the sparse hairs on my chest moving as the caress continued upward. It advanced to my neck, and across my cheeks, until it seemed my face was being held. I moaned as a faint pressure descended on my lips, a gentle touch opening them. An incredibly sweet invisible kiss.\n\nMy erection had returned, and I groaned as I felt another touch, down there. A renewed pressure, enveloping me, invisible lips still grazing mine. It started moving, and my hips responded automatically. \n\n\"God that feels good, Mary,\" I groaned.\n\nAs quickly as that, all the sensation disappeared. I was left with an aching hard-on, and a fear that my words had frightened my friend off. I was stunned for a moment, the haze that enveloped me during my visitations slower to disappear than her touch.\n\nI had never given the visitor a name, not in my head, and certainly not out loud. I don't know why I said that, or picked that name. I guess that's not completely true, moments after I was alone, I suspected the reason. Bev's Aunt Mary was the one who had met her untimely demise in The House. I didn't know any other Mary, and once I thought about it, I realized I associated her with The House stronger than anything else. \n\nAfter the way I'd scared her off I guess I was wrong. Hell, the original house had been built at least 140 years before she ever graced it with her presence. Who knows how many dozens of people lived in it over the years? Or if that even had anything to do with what was going on.\n\nI didn't get woken up in the night. After waiting almost half an hour in the morning, I didn't receive my morning gift. I felt bad, mildly depressed, while I worked on one of my side projects the whole morning. No touches during the day, no mystery caresses. I was alone in The House.\n\nA brief call to Bev raised my spirits a bit after lunch, and I went back upstairs to work on the bedrooms. The walls were finished with the same wood I was using for everything. Drywall would have been easier, but nothing was cheaper than free wood, and I certainly had enough of that. I used it for the flooring, for the walls, even for the ceilings. I loved the feel of it, the smell, and knowing it came from the property. Mostly hickory for framing, white oak for paneling, and red oak for the flooring. I couldn't bring myself to cut down any of the most spectacular specimens, but clearing the road to The House gave me plenty to work with, including a good bit of pine nearest the road. The diversity of the trees still amazed me.\n\nAfter dinner, it was back to side projects before calling it a night. I waited, hopefully for a late night visit, but was disappointed.\n\nBy Sunday night, I was starting to think it had all been my imagination. A ghostly friend with benefits? Right. I'd made great progress on the second floor, and was feeling good about things again. I made an early night of it, calling the girls, sipping my scotch on the porch, and settling in with a cigar. \n\nI showered the sweat off, and gave it another 30 minutes or so, exposing myself, hoping for a visit. No luck, however, and I settled in for a restless night.\n\nWhen I woke, it was still pitch dark out, and my covers were gone. I was hard and being serviced. \"Sorry,\" I said softly. \"I didn't mean to offend.\"\n\nThe action continued, more demanding, and after a couple of minutes of attention, I moaned my release. I was happy for the moment, and settled back in. I pulled the covers up, and almost laughed when they slowly slid off my body again. The touching started, caressing my chest, then shoulders. I felt movement on my hardening cock, and once again, the feeling of complete envelopment.\n\n\"Thank you, that's incredible,\" I whispered softly, as my mysterious visitor slid up and down my length.\n\nI closed my eyes, and felt her brush against my lips. I kissed her back, thrusting upward needily. Something moved between my lips and I opened my mouth. I opened my eyes, and found myself staring into a mirage, a barely visible pair of dark eyes gazing back at me.\n\nMy heart raced and I had to resist screaming. The eyes moved away, and I could make out the barest outline of a feminine face, almost a shimmer in the air, the surrounding room clear behind it. The motion was still going on at my waist, and even the fear couldn't stop me from responding. I was getting close, too close, when the movement stopped. The phantasmal face moved downward and captured my cock, only moments before I erupted. \n\nThe feeling was stronger than ever before, and I gasped, shooting off over and over again, until I was totally spent. I lay there sweating, my chest heaving, fighting off a case of the shakes. Looking down, I saw the face was gone. That's all it ever was, no body, not even hair, just a hint of a face. A beautiful one.\n\nTrembling, I reached for the covers, only to stop when they slowly crawled up my body, covering me up. My lips were brushed against momentarily, and I was left wondering for my sanity.\n\n* * *\n\nThe following week passed, and I was back into my regular daily schedule. No more faces, but I was serviced three or four times a day. I still spoke to her softly, only of my pleasure. No names, no questions. I didn't want to scare her away. \n\nOn Tuesday I was given the flight arrival times for Bev and Karen. They'd be arriving a week from Thursday on December 23rd, in the evening. I had Friday off for Christmas, so that worked out perfectly. The following week was our Christmas shutdown, from the 27th, through New Years. I'd have plenty of time to spend with the girls.\n\nJim, my electrician inspected my electrical work, and after insisting on a few changes, signed off on it, for a couple of hundred bucks. I called Andrew, took Friday afternoon off, and had him out. He looked over the work, signed off his paper, and gave me the nice green tag I needed to keep going, at least legally. I took the opportunity to invite him and his family out over the Christmas holiday. I think I surprised him.\n\n\"Maybe Sunday the 26th?\" I offered.\n\nHe grinned. \"I need to check in at home, but I know Brianna would love to see the place, after all I've told her. You don't mind the kids?\"\n\n\"Heck no. One day I wouldn't mind filling the place with my own. Try to talk her into it. I'll have some guests over, the original owner and her nurse.\"\n\nHe smirked. \"I know you're not going to tell me you're living in there.\"\n\n\"Of course not! My trailer may be a little crowded, but it's still here.\"\n\nHe grinned. \"Alright Jack. No more questions from me. But if you could get the third floor wired and the plumbing finished, as well as put in the last windows, I imagine we can find a way to get you a habitation permit. Please don't drag it out too long.\"\n\n\"Believe me, if I had the funds, I'd do it tomorrow. It'll be a few more months probably, but I'll see what I can do.\"\n\n\"If you want, I can talk to Dale at the bank. I'm sure he could work out a short-term loan for you. It's not like you don't have a couple of million dollars of collateral here.\"\n\nA couple of million? \"I doubt it's worth anywhere near that.\"\n\n\"Are you kidding? Nearly 500 acres, worth at least $4 grand an acre? Hell, the guys at the University are hammering on me to get everything from the creek north declared a national treasure. Dr. Jansen is convinced you have a State Champion beech on your property. Your lumber alone is probably worth three times what the land is, although it would be a real shame to cut any of the old growth down.\"\n\nI was stunned by his numbers, and realized I had no idea what I was sitting on. \"I think I'm in way over my head. I'm gonna need some help. Shit, I hadn't even thought about what the property taxes were going to run me.\"\n\n\"That shouldn't be too bad. I'm guessing that 490+ acres of the land will come under agricultural timber management. It'll cost you a few thousand a year, tops. The property taxes on the house will cost you more than that. I wouldn't sweat it yet. As long as you don't do anything with the land other than right around this house, you should be safe. I'll ask around.\"\n\nOnce he'd left, I knew I needed to take some time and do some real research and planning. I was feeling more than a little stressed.\n\nSaturday, the daily caresses continued, and it seemed like things were back to normal with my special friend. I received my morning wake up call, a surprise lunchtime relief, and another visit during my porch unwinding time. I had completed a couple of my surprise projects, and was particularly relaxed. \n\nI was talking to her again, describing what I wanted to do with The House, asking her opinion on decisions, not expecting any reply. It was similar to what I was doing with Bev. I'd hate to think how weird it would have looked if anyone saw me.\n\nAt dinner, I even set her a place at the table. I wasn't so far gone that I served her food, but for some reason I thought she might join me.\n\n\"Bev and Karen are coming for Christmas next week. I hope you don't mind.\" \n\nOf course there was no response.\n\n\"I really need to figure out a worthy present for Bev. You know she's the one who sold me this place. Gave it to me really. I couldn't have done any of this without her.\"\n\nAfter a suitably long pause, I continued. \"Andrew's probably bringing his family by for dinner next Sunday. It'll be nice to have a full house. I don't know what it was like in your day, but now there's a million ways the government messes with you. We're lucky to have him on our side. He could have made this hell on us, but he's been a Godsend.\"\n\nI continued my one-sided conversation throughout dinner and the cleanup. I was feeling good about the inspection and my progress. I knew I'd be able to finish the four bedroom walls the next day. I only put in a couple of hours after dinner and decided to call it a day.\n\n\"Join me on the porch? I think I'll have a night cap and we can hit the bed early. We both deserve to celebrate a bit. This was a big day.\"\n\nI didn't dress down for my break. I had my drink and a smoke, and chatted. I knew she was with me. I could sense it. \n\n\"I wish I knew something about you. What I should call you. I think we'll be together for a long time. I know I'm not going anywhere, this is my dream house.\"\n\nI told her of my obsession with the place, hunting down information on it, tracking down Bev. I rehashed my first meetings at the senior home, and her generous gift. I even told her about what I knew of the history.\n\nI was out there a good hour, in the cool night air. I was getting cold, and figured I'd had enough. \"Come to bed, beautiful? Celebrate with me?\"\n\nI was only a little surprised when I felt her wispy kiss. \n\nI took a quick shower. I wanted to be clean for her. Why? I have no idea. It was important to me. I dried off, brushed my teeth, combed my hair, and retired to my bedroom. I built up the fire to keep the chill out, pulled down the sheets, and climbed on the bed.\n\nI felt her touch within moments, making me hard. \"Can we take it slow? I'm here for you. As many times as you want, tonight. Whatever you need.\"\n\nI guess she took me at my word. She teased me, her always faint touch just a whisper against my flesh. Her kiss, on the other hand, was firmer and warmer than ever. I had a flash of her face, it materialized for only a few seconds. Her hair was long and dark, piercing eyes that drilled down to my very soul, lips that offered a hint of a smile."
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "haunted house",
        "ghost",
        "romance",
        "evil",
        "war",
        "mature",
        "blowjobs",
        "mystery"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/that-old-house-1"
}