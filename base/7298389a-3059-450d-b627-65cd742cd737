{
    "title": "Pool Boy Ch. 37",
    "pages": [
        "Nina had got the orgy started and things were warming up, Mindy and Chuck were eyeing each other apparently hoping the other would make a move. Chuck was shy, Mindy was not. She went to her knees in front of Chuck and unzipped his pants and pulled his cock out. She looked up into Chuck's eyes as she licked his cock from his balls to the head. She giggled at the look on Chuck's face. She doubted that he would last a couple strokes of a blow-job. She decided not to test her hypothesis and continued to just lick his cock like a lollypop and grin up at him. \n\nChuck was mumbling something like, \"Oh fuck. Oh fuck.\" When she drilled the tip of her tongue onto his nerve bundle at the base of the ridge, she groaned, \"Oh my gawwddd. Yes. Right there.\" She smiled and pulled back. She didn't want him to cum yet. She started slowly jerking him off.\n\nJosie finally got her clothes off and slid off the sofa and buried Dean's cock in her mouth. He gently placed his hands on either side of her head as his head fell back and he groaned out, \"Oh fuck.\"\n\nI was pummeling Nina's pussy as I had her trapped against the wall. She was screaming and thrashing her head from side to side. She lifted her head and the look on her face was priceless. Her eyes were wide as her mouth hung open in the shape of an 'O' as she panted air in and out. Several minutes later, she made eye-contact with me and muttered, \"Oh Jesus. Here it comes.\" She tried to hump her pussy harder on my cock and I got the message. I slammed my cock hard into her and her head rocked down on my chest as her orgasm crashed into her. She mumbled over and over again, \"Yes. Yes. Yes.\"\n\nAs her orgasm dwindled, she threw her arms around my neck and collapsed against me. I held her as I lowered myself and her to the floor. When her ass touched the floor she released my neck and curled up in a fetal position and rolled onto her side. She was still gasping for air and mumbling something unintelligible. I sat my ass back on my heels and surveyed the room. The moaning and groaning noises easily overpowered the music.\n\nMost of the action was taking place on the floor and I couldn't see over the furniture. I could see Dean sitting on one of the sofas with his head tipped back. Alexis was sitting in her chair and Noah was perched above her with his knees on the chair arms drilling his long cock into her mouth. She was taking it all right down to his balls.\n\nI stood up and pushed my stiff, gooey cock back in my pants, adjusted the position as best I could, and moved over between Mitch and Rachel. I put my hand on Rachel's thigh and I thought she would cum right then. Mitch noticed her mother's reaction and reached over to touch my cock through my pants. I turned and smiled at Mitch as she raised her gaze from my lap to my face. She pulled her hand back and looked down at the floor. \n\nAlexis had apparently finished off Noah and she came over to sit beside Mitch. She leaned in to Mitch and whispered,\"Lets me and you and Hunter and your mother go in another room.\" \n\nMitch whispered back, \"I don't want to disappoint my mother.\" She was shaking her head.\n\nAlexis whispered, \"How could you disappoint her?\n\nTears exploded in Mitch's eyes and she broke down as she mumbled, \"Because she and I have been having sex for a long time and I don't want her to think that our relationship isn't enough.\" She wiped the tears from her eyes and cheeks.\n\nAlexis said, \"You know your mother is having sex elsewhere. Right?\" Mitch sniffled and nodded. \"Well, don't you think she wants the same for you?\"\n\n\"Sure, with a guy. But, I loved having sex with you and Jan. I'm afraid she would be jealous of another woman replacing her in our relationship. Especially if I'm all she has. That's why I'm hopeful she has found someone.\"\n\nAlexis looked up at me and nodded for me to step away for a chat. I stepped in close so we could speak privately. I wiped a glob of cum from her chin and pushed my finger into her mouth. She giggled and sucked my finger clean. She explained what Mitch's fears were and we decided on a plan of action.\n\nI walked back in front of Mitch and Rachel and took them both by the hand and pulled them up to their feet. Both had confused looks on their faces and Mitch turned to Alexis for an explanation. Alexis just nodded and motioned for her to go with me. Then she turned around and surveyed the room. She was looking for Crystal and headed her way.\n\nI looked to see if Rachel, Mitch and I were of any interest to anyone. We weren't. Everyone was fully engaged in one on one or more on more sex. Rachel was trembling as we went to the end of the hall and into the master bedroom. I closed the door and Rachel and Mitch went hand in hand to the bed and sat down alternating looks from me to each other. I walked over to Mitch and knelt in front of her. Rachel watched. I leaned forward and kissed Mitch passionately. Her immediate response was reserved but then suddenly she became the aggressor. I put my hands on her knees and slowly pushed my fingers up under her skirt, dragging my thumbs on the insides of her thighs. She was trembling so hard she vibrated. She pulled her lips back from mine, gasped a breath of air in to her lungs and went back to attacking my lips. I gave back in kind.\n\nHer hands went to my shirt. She fumbled with the top button and then moved to other buttons. She didn't succeed with any of them. Her legs parted slightly as my hands moved closer to her sex. She pulled her lips back again and muttered, \"Jesus. Jesus.\" She leaned her forehead against mine and whispered, \"I'm scared.\" She placed her hands on top of mine under her skirt to stop my advance. She looked into my eyes and whispered, \"I want to. I desperately want to. I'm sorry; I can't get that night out of my head.\" She looked at her mother whose eyes had teared up too. Mitch said, \"My mother needs sex though. Can you help her? I'd like to stay if she doesn't mind. Maybe that will help.\" \n\nRachel looked at me and I could tell she was ready to burst. She placed her hand on Mitch's and said, \"I do need it and of course you can stay. Hunter figured out that we have been having sex together. Join me with him. Okay?\" Mitch looked at her mother and smiled. I suggested they start and I would be right back to join them. Rachel began unbuttoning Mitch's shirt and Mitch did the same with Rachel's blouse.\n\nI went back to the living room to see how things were going. I wanted to give Mitch and Rachel a moment. Crystal must have finished off Chase and she and Alexis were in a sixty-nine on the floor in front of a sofa. I knew that had to happen. I was hoping for a three-way before this was over. Dean was now on the floor beside Alexis and Crystal. Josie was riding his cock cow-girl style. Mindy and Chuck had broke up and she was sitting on Dean's face grinding her pussy in a circular motion while Josie rode his cock. Jackson was fucking Morgan missionary style with her ankles on his shoulders. He had her ass lifted off the floor and pulled into his lap and he was pummeling her pussy. Yu-Gin was sucking Chase back up to full size again and then got on the floor in a doggy position and Chase happily took his position behind her. Noah had Jan pinned to a wall with her long legs wrapped around his naked lily-white ass. He was furiously pounding his cock into her and she was deliriously shaking her head from side to side as she clung to his neck. Nina had recovered from our fuck and she was, of all things, trying to make herself another drink. She was trying to watch the action in the living room and pour the ingredients of her drink at the same time and she was mostly pouring the booze on the table and floor. I went over to help her and she looked at me and said, \"How come you're not naked yet. I'd bet most of the girls are here just to see all that.\" She waved her hands toward me. I finished with her drink and went extra light on the booze. She wouldn't notice.\n\nI smiled down at her blurry eyes and said, \"I haven't had time because I'm looking after you.\" She guzzled down half her drink and waved me away. I hesitated a moment before I turned away. She looked like she was going to go down. I led her to a chair and sat her down. She was more interested in her drink than the sexual activity taking place all around her. I hoped she would stay there for awhile but knew she wouldn't. Drunk or sober, Nina was a live-wire.\n\nAll was going well in the living room. I turned to head toward the master bedroom and almost ran into Noah, who must have finished with Jan, and Crystal, who was just with Alexis, hand in hand heading for Noah guest room. Crystal looked back at me and she had her hands, with fingers extended, in front of her about a foot apart as she mouthed the words, \"Huge.\" She hustled to catch up with Noah. I watched her ass pivoting from side to side as she hustled down the hallway. I followed her until she disappeared into Noah's room and then continued to the end of the hall. I pushed open the door not knowing what to expect.\n\nThe erotic experiences from the living room had taken hold of both Rachel and Mitch. I knew Rachel was ready to burst. Mitch was wrestling with demons. Mother and daughter were embroiled in an extremely passionate sixty-nine on the bed and hadn't noticed me come in. Now was not the time for me. I went back to the living room to find Alexis. She was on her knees with her face buried between Nina's huge tits. Nina looked like she had passed out. Alexis pulled her face back and looked at Nina to see if there was any life there or not. Alexis took Nina's drink that was still in her hands, and put it on the end-table. Alexis looked up at me as I approached. She had a look of concern on her face. I took her hand to help her up. I said, \"I did everything I could to get her to slow down. She's going to be really pissed off at herself for missing all this.\" Alexis looked around at \"all-this\" and smiled. She started to pull me toward a chair and I resisted and told her about the situation in the bedroom. I said, \"I think you're up now. You are central in their issues.\" She smiled and stretched up and kissed me. \n\nShe headed toward the bedroom and then turned back to the room and yelled, \"Hunter is still fully clothed. Get him girls.\" I frowned at Alexis as she threw me an air-kiss and mouthed the words, \"I love you.\" She turned toward the hallway and waggled her ass at me and disappeared. I started to follow her. I wanted to watch Rachel, Mitch and Alexis together. I was nearly tackled by four naked girls before I got five feet.\n\nJan, Yu-Gin, Mindy and Morgan abandoned whoever they were doing at the moment to follow Alexis' directions. Jan was unbuttoning my shirt and got about half of them before Mindy yanked the shirt over my head. Jan began sucking on my nipples which had hardened. Yu-Gin was unbuckling my pants as Morgan yanked down my zipper. My hard cock pushed out into Morgan's face before my pants dropped off my hips. Mindy was licking her tongue along my abs and obliques. \n\nDean was lying on the floor on his back. His cock was spent and dangled between his thighs. Jan had been sitting on his face when Alexis' call to action went out. Josie, who had been so possessive of Dean earlier, was in a sixty-nine position with Chase. Chuck and Jackson were taking a shot at Nina as Chuck leaned over the chair arm and was furiously sucking on her huge tits. Jackson was dragging his hard cock through Nina's sex and was about to push it into her. I yelled his name and when he turned to look at me I wagged my index finger at him indicating, 'Don't even think about it.' He backed away with his cock and joined Chuck sucking on Nina's other tit.\n\nI stepped out of my pants. I was barefoot already. I had figured I didn't want to frig with shoes and socks when the time came. I was as naked as everyone else. Morgan had my cock in her hand and looked up at Yu-Gin with a huge grin on her face. Yu-Gin was staring at my cock and obviously was wondering if Morgan was going to do anything. She took the initiative and bent down and pushed her lips to my glans. Morgan looked so disappointed but she relinquished my fatty to Yu-Gin. Morgan sat back on her heels. Mindy was having none of being excluded and she dropped to her knees on the other side from Yu-Gin. They both struggled for possession and then settled on sharing as they ran their lips up and down the outside of my cock several times and let each other push onto the tip for a few strokes of a blowjob before pulling off and letting the other take it. \n\nJan looked at the situation and made an athletic move of throwing her arms around my neck and throwing one leg over Yu-Gin's and Mindy's heads and clamped her legs around my waist, hooking her feet behind my back. She was sucking my face as she gasped air in and groaned it out into my mouth. Yu-Gin pulled her mouth off my cock and looked up at Jan's ass slowly descending forcing Yu-Gin and Mindy to the side. Mindy tried to get her mouth on my cock again but Jan's ass was in the way so she relented to Jan's ingenuity and guided my cock into Jan's pussy. When Jan felt my glans on her sex, she made some fine adjustments and let herself drop. Her eyes went wide as she screamed hard. I grabbed her ass-cheeks and held her in place as she collapsed her head onto my shoulder gasping for air and moaning, \"Oh my fucking gawwwddd that thing is fat.\" After a few moments she started using her arms and legs to pull herself up and used her hips to rock on and off my cock.\n\nMorgan was sitting on her heels at my feet looking around for a cock of her own. She spotted two that were attached to Chuck and Jackson as they molested Nina's tits. She crawled on hands and knees to Nina's chair and reached under Chuck and started jerking off his hard cock. He was startled and pulled his lips of Nina's tit. Morgan pushed him onto his back and crawled up between his legs and started sucking his cock. Jackson, noticing Chuck's departure, looked up to see where he went. Morgan was on her knees bent forward with her lips locked on Chuck's cock. Her soaking wet pussy was pointed right at Jackson and he shuffled over on his knees and lined his hard cock up with her sex and pushed it into her. Morgan groaned around Chuck's cock and pulled back to see whose cock was in her. She smiled at Jackson and went back to work on Chuck's cock. \n\nYu-Gin and Mindy were sucking face and grinding their sex together at my feet as I maneuvered Jan's ass onto the back of a recliner chair. When she felt her ass touch, she released her arms and let the chair take her weight. She regained her purchase with her feet behind my waist and started pulling me into her as hard as she could. I looked down to watch my cock slide in and out of Jan's pussy. She had the most delicious look of pure lust on her face. Then she let out a guttural groan, \"Yessss. I'm cumming.\" Before she even finished her words, her pussy clamped on my cock and started rapidly clenching. I wanted to cum with her but I had another place to be. I fucked her until she just sagged in my arms. I moved around the chair and let her fall off my body into the comfort of the leather chair. Jan looked at me above her and released her arms. She ran one hand down my pectoral muscles and abs and down over my cock, dragging it down and off the glans as my cock bounced back up again. She watched my cock and then looked up at me. I bent lower and kissed her passionately on the lips.\n\nI pulled back and watched Jan push her fingers into her pussy as she lay there sprawled in the chair. I went down the hall and stopped at Noah's closed door. Screams and groans indicated that Noah and Crystal were having a good time. I continued down the hall and quietly opened the master bedroom door. There in the middle of the bed was a daisy-chain of three beautiful women on their sides. Mitch's face was resting on Alexis' thigh with her lips pressed into Alexis' sex. Alexis was furiously licking and tongue-fucking Rachel as she was groaning into Mitch's sex. I sat down in the chair by the door and watched as I jerked myself off. \n\nAlexis had noticed when I came in and she gave me a 'thumbs-up' signal and promptly grimaced from her orgasm. She clamped her top leg down on Mitch's face and rocked her hips forward and back. Mitch stayed right at it and Alexis kept right on drilling Rachel's pussy until she began pulsing her hips and seconds later Mitch pulled her face out of Alexis' sex and rocked her hips from her own orgasm. The all rolled onto their backs with their knees up gasping for air. All of their hips randomly surged up as their orgasms drove spastic clenches.\n\nWithout moving a muscle, Alexis said, \"Which one of you two ladies wants to fuck Hunter first. He's sitting in the chair with a fucking huge cock in his hand.\" Rachel's and Mitch's hands went up in the air at the same time. Alexis giggled and said \"It seems we have a tie.\"\n\nRachel mumbled, \"Age before beauty.\" Mitch giggled and dropped her arm like it was a wet rag. Rachel turned her head to look at the door. She motioned for me to come to her and I got up and climbed up on the bed and into the middle of the circle. Rachel's hand found my cock and started jerking on it. Mitch rolled on her side again so she could watch. Alexis sat up cross-legged to watch.\n\nRachel took a dozen or so strokes and worked up the energy to roll toward me and put her lips on my glans to kiss it. Then she stretched her lips over the knob and pushed down as far as she could and began giving a fantastic blow-job. She was delighted with my reaction as I groaned out, \"Oh fuck. Yea,\" as I involuntarily humped my hips forward. Rachel gagged a little but stayed on and increased her pace. Mitch was wide-eyed watching her mother sucking a huge cock.\n\nAlexis moved over beside Mitch and whispered, \"Don't worry; you'll get your chance.\" Mitch nodded as her fingers went to her crotch and began fingering her pussy. Alexis smiled and decided that was a good idea as she began fingering her sex too.\n\nAfter several minutes, Rachel pulled back off my cock and said, \"I want to do cowgirl this time.\" She knew she had misspoken immediately and she glanced at Mitch to see if she had heard. \n\nMitch looked at her mother and said, \"This time? How many times have you fucked him?\" She smiled at Mitch and held up one finger. Mitch said, \"Well, get out of the way and let me catch up.\" She was already moving toward me. She snatched my cock from Rachel's hand and tried to push it into her mouth. She struggled and tried again. The third try was successful and she just held my cock with her lips locked around the ridge and began a two fisted hand-job from her lips to my balls. Alexis smiled at me. She could tell I was enjoying the sensation.\n\nA couple minutes later, Mitch pulled off and said, \"What was that about cowgirl?\" I lay back on the bed and motioned for her to straddle my hips. She stood and planted her feet on either side of me and lowered her pussy to my cock. She reached down and guided my cock to her pussy and eased herself onto the glans. She groaned hard and then smiled at Rachel. She muttered,\"Oh fuck, Mom. This is incredible.\" \n\nAfter settling on the tip, she didn't move. It was like she was standing on a cliff working up the gumption to jump into the water below. I nudged her a little by rocking my hips gently upward pushing my cock deeper in her pussy. She trembled and groaned and then jumped. She let herself drop down my shaft until she was sitting on my balls. She muttered, \"Oh fuck.\" She began using her legs to pull herself up and then drop back as she started fucking my cock. Her head fell back on her neck and her hands went to her tits. I helped her by lifting and releasing her hips.\n\nAfter a few minutes, she suddenly dropped her head to look down at me. She had a grin on her face as she realized that she was about to have an orgasm from intercourse. She'd had many orgasms driven by her mother's tongue or her own fingers but she seemed to be thrilled to have one driven by a cock. She started grinding her hips around in circles and when it arrived, she screamed out, \"YEESSS. YESSSS. FUCKINGGG YESSSS. INCREDIBLE.\" Rachel grinned at me and Alexis and moved to hug and kiss Mitch. I was driving my cock up into her pussy as her motions became spastic as she held onto Rachel. When Mitch descended from her orgasm, she said, \"My God Mom. Why didn't you tell me it was like this?\"",
        "Rachel said, \"I never knew that it could be like that before Hunter. Sex with your father...well, I don't even know now what that was.\" She was grinding her hips around on her fingers and she had waited long enough. She said, \"Umm, Mitch. I don't suppose I could take your place on that monster do you.\" Mitch started to pull up my shaft but discovered that the feeling was amazing. She looked at her mother and held up one finger to indicate 'one minute'. She dropped back down again and groaned and then she started fucking me again. \n\nMitch looked at her frustrated mother and pulled her pussy off my cock. She groaned all the way up. She fell off to the opposite side from Alexis. Rachel moved up beside me and removed her fingers from her pussy and sucked them into her mouth. She said, \"I liked that position you did with Amanda. Can we do that?\" She lay on her back beside me and I rolled onto my side. She lifted her leg closest to me and I move my hips in under it. She let it drape over my thigh like Amanda had done. She reached down and spread her labia with both hands as my cock moved in from the side. Mitch was fascinated and moved around to see directly into her mother's pussy. She looked over at Alexis and grinned. Alexis smiled back. She was diddling her pussy, hoping she would get some too.\n\nI pushed my cock to Rachel's pussy and pressed my shaft into her. She groaned hard from the size. I paused and waited for her signal. She gave it immediately. I fucked Rachel's pussy in long full penetration strokes. Mitch reached in to lay her fingers along my shaft as it slid in and out. Alexis leaned in and took Mitch's hand off my shaft and turned it over to cradle my balls. Mitch giggled when she felt my balls moving around in my scrotum.\n\nRachel was moaning and groaning constantly at the assault on her pussy. I pulled my cock out to the ridge and then set myself for rapid penetrations of a few inches and began pistoning my hips as fast as I could, driving about four inches in and out of her. She screamed from this new assault and put her hands down in her sex to feel my cock. \n\nIn a few minutes, Rachel began to seize her muscles lifting herself off the bed. She started a low guttural groan as her head started rolling lazily from side to side. Her hands came out of her sex and grabbed her big tits and mashed them with her fingers. Her orgasm came in on her in slow motion. Her torso rolled from her hips to her shoulder like a writhing serpent. I was getting tired but I wanted to finish her off with my piston-fucking. \n\nSuddenly, I realized that I wasn't going to last any longer. My orgasm crashed into me so suddenly that I couldn't prepare for it. I groaned hard and humped my hips and drove my full length into her pussy as I exploded with my first cum shot. Mitch felt it all through my scrotum. She had a huge grin on her face.\n\nRachel felt my cock harden and she knew what that meant. She wasn't prepared for the power and volume and she exploded into her own orgasm. She screamed out, \"OH MY GAWWDDD. I'MMM CUUMMINNNGGG. OH JESSUSS. GIVE IT TO ME.\" I continued to drill my shaft into her depositing around eight long ropes of cum in her. Mitch noticed that cum was getting pushed out of Rachel's pussy from the combined effects of our orgasms. She didn't hesitate as she leaned in and began licking up cum as it squished past my cock. \n\nMitch pulled back and looked at Alexis with a grin. She had cum on her chin and upper lip. She ran her fingers around her lips and stuck them in her mouth. She said to Alexis, \"Not bad. Kind of tangy and salty.\" She pushed back in and licked up more cum as it appeared.\n\nI pulled my cock out of Rachel's pussy as it continued to clench on air. Mitch pushed her tongue into her mother's pussy to collect more cum and Rachel screamed from the unexpected attack. Rachel looked down between her legs to see Mitch looking at her with a thread of cum running from Mitch's nose down to her pussy. She started laughing at the sight. She motioned for Mitch to come up to her and she crawled along her body and they kissed tenderly and then Rachel licked cum from Mitch's nose and they kissed again.\n\nAlexis appeared beside me and said, \"I'd better go see how things are going. You figure out what we do with them now.\" I kissed her and she jumped down off the bed. I watched her perfect ass swing as she headed for the door. She knew I was watching so she put a little extra wiggle in her walk and turned her head to smile at me. \n\nI knew just what to do with them. I got off the bed and told them to follow me. Rachel's pussy was still having spurious clenches which caused her to walk a little funny but she was right behind me. I stopped in the hall and knock on Noah's bedroom door. There was no sound. I opened it and it was empty. I ushered Rachel and Mitch inside and told them to stay here and I'd be right back. I went into the living room to find Noah. He and nearly everyone else were sitting on various pieces of furniture in the nude talking with another drink or cup in their hands. It was obvious that most of the girls were ready to continue but they were respectful of the guy's need to recover. As they talked one or more of the girls would touch or lightly stroke a flaccid cock as if to remind it of what it was here for. Dean was back at the food table and again Josie didn't look pleased about it.\n\nNina was still sprawled in her chair with her legs spread wide open and her arms draped over the side of the chair. I went over to check on her. She was out like a light. I reached down and picked her up and carried her in my arms down the hall to a spare bedroom. I laid her on the bed and pulled a quilt over her. She never even stirred. I kissed her on the forehead and closed the door behind me.\n\nI got Noah's attention and motioned him over. He had two girls nonchalantly playing with his dick and he was reluctant to leave. I motioned again and he stood and came over. I said, \"I have an important job for you. It can't be anyone else.\"\n\nNoah sagged his shoulders and said, \"Seriously? In the middle of all this?\" He swung one arm around the room.\n\n\"I promise you, you'll like it. You'll need your tools so you'd better get that thing going again.\"\n\nNoah looked down and said, \"Yeah, well I was just about to get it back in working order when you called me over here.\" I motioned for Noah to follow me and I led him back down the hall to his room. I opened the door and the odor of sex was strong. He followed me inside and I closed the door behind him. Rachel and Mitch were sitting on the edge of the bed strumming the other's pussy. As soon as they saw Noah, they pulled their hands back into their own laps. They smiled and looked at Noah.\n\nI said, \"Noah, your job is to entertain these two beautiful women. They are important people and can't just join the group out there.\" I had Noah's interest as he looked from me to them. I turned to Rachel and Mitch and said, \"This is Noah. He is my most trusted friend in the world. He will do anything you want and I promise you that you won't be disappointed. Okay?\" Mitch nodded vigorously. Rachel was just smiling at Noah as his cock was beginning to rise. I looked back at Noah and said, \"Yeah. I thought you'd rise to the occasion.\"\n\nNoah was all smiles, \"You can count on me buddy.\" I went to the door as Noah was climbing up on the bed between Rachel and Mitch. Mitch already had his cock in her mouth and Noah was already sucking on Rachel's big tits. I smiled at them and closed the door behind me. \n\nAs soon as I appeared back in the living room, Crystal, who was sitting between Chuck and Jackson jerking on their half-erections abandoned them and stood up. What a vision she was, from her platinum blonde hair all the way down to her toes. She knew she had my attention. I pulled my attention away from her to look for Alexis. She was in an embrace with Jan. I walked across the room to her.\n\nJosie and Yu-Gin apparently had grown frustrated with the room full of limp dicks and they were engaged in a sixty-nine as were Mindy and Morgan. The guys were watching them closely as they feverishly stroked their limp dicks to get them back up again. It was an erotic sight and I knew it wouldn't take long before they were all going again.\n\nI stopped at the chair containing Alex and Jan and stood there with my own limp dick until they noticed me. Jan broke away from their embrace and looked at me. She turned back to Alexis and said, \"Wow. He does get soft after all.\" Alexis giggled and looked up at me with a \"What?\" look on her face. I explained that I was hoping to get some two on one time with her and Crystal. I looked back at Crystal and she was coming toward us.\n\nAlexis looked over at Crystal as she approached and then at Jan whose lap she was sitting in and then up at me. \"How about a three on one? Does the little man think he can handle that? Jan was looking at my face for my reaction but her attention shifted to my groin as my 'little-man' jumped and began to harden. \n\nJan looked at Alexis, who had caught the movement right at her face level, and said, \"Well, I guess we have our answer.\"\n\nAlexis giggled and said, \"The little guy is all action and no talk.\"\n\nJan laughed and added, \"Yeah. The perfect man but he spits a lot.\" They were both laughing hard as Crystal came up behind me and pressed her perfect body into my back as she reached around and wrapped her fingers around my burgeoning shaft. She squeezed hard trying to close the gap between her middle finger and her thumb. I could feel her erect nipples on my lower back and she rotated her hips forward against my thighs. Alexis climbed out of Jan's lap and pulled her up too. Alexis led the way back through the living room. I noticed that the two sixty-nine couples had broken up and each of the participants: Yu-Gin, Josie, Mindy and Morgan were now sucking the cocks of Chase, Dean, Jackson and Chuck. Dean noticed as Alexis, Crystal and Jan all had me by the cock leading me toward the bedroom. He said, \"Go Meat.\" I smiled.\n\nAs we were about to pass Noah's room, I said, \"Hold up for a second.\" I opened the door quietly to see if Noah, Rachel and Mitch were getting along okay. I was surprised at what I saw. Noah was standing at the foot of the bed pumping his cock into Rachel's pussy as she was in a doggy position on the bed with her feet and ass hanging over the edge. Tucked underneath Rachel was Mitch's ass. He pumped his cock into Rachel's pussy several times and then pulled out and guided his long 9\" cock lower and into Mitch's pussy for several strokes. He was doing a hell of a job because Mitch and Rachel were groaning hard. I smiled and closed the door.\n\nAlexis, Crystal and Jan were all trying to see around me before I closed the door. They felt the surge in hardness caused by the view of Noah fucking Rachel and Mitch at the same time in stacked doggy positions. Crystal said, \"That looks like fun. Do you think we can stack three?\" It turns out that it was possible and we tried it but none of my girls was getting enough cock time to satisfy them. Jan was on top because she was the tallest. Alexis was in the middle and she was getting twice as much cock as the others as I fucked Jan several strokes and then Alexis and finally Crystal before going back up the stack again. It was tough for me because I had to stand up on my toes to reach Jan's pussy and then bend my knees to get low enough to fuck Crystal.\n\nBecause she wasn't getting enough cock, Jan got off the stack and stood over Alexis facing me hoping I could get my face in her sex. That didn't work out either. I finally pulled back from Alexis's pussy and got down on the floor on my back with my cock hovering several inches above my stomach. I let them work out the details and Jan planted her feet on either side of my head and squatted her pussy onto my lips. Crystal planted her feet on either side of my waist facing forward and squatted her pussy onto my cock. She guided my cock back until she found it with her sex and lowered herself slowly down the shaft. Her head shook vigorously from side to side as she descended to my balls. Crystal leaned forward and cupped her hands under Jan's tits and thumbed her nipples. Jan's hands went on top of Crystal's to guide them. \n\nCrystal was fucking me by rocking her hips forward and back and I was doing the same. I always loved doing this but I had to consciously get myself in a rhythm. Fucking with my hips and fucking with my tongue was like rubbing your stomach and patting your head at the same time. It takes a little concentration. I must have been doing okay because both Jan and Crystal were going nuts.\n\nAlexis hated to break up what was obviously going to drive Jan and Crystal into orgasms but she wanted hers too. Apparently they had worked out a rotation. Jan reluctantly lifted herself off my face and stepped over me. Crystal, just as reluctantly, pulled her pussy off my fatty and slid up my body and planted her soaking wet pussy on my face. Alexis positioned herself and lowered her pussy down my shaft. She groaned the whole way down. Jan decided that she wasn't just going to sit on the sidelines waiting her turn. She stepped between Crystal and Alexis and spread her labia with her fingers. Alexis bent forward and drove her tongue into Jan's pussy. Jan's body arched back thrusting her hips forward as she let out a long moan. Alexis placed her hands on Jan's hips and used them as leverage for her tongue-job and her twerking motion.\n\nMy orgasm was circling on the periphery. I wondered which one of these three would pull it out of me. I knew from the beginning that I was going to have a hell of a time getting them off before I did. It wasn't a big deal since I knew that after I got off, I could still keep it up to finish them off.\n\nJan was getting close and it was her turn on the pole. Crystal was streaming her vaginal fluids down over my face. I slurped up as much as I could. Jan stepped over me pulling her pussy from Alexis' tongue. Alexis worked her pussy on my cock for all she was worth before she staggered up to standing. Alexis dragged her soaking wet pussy up my torso and onto my face. She leaned down and kissed my pussy juice covered lips before settling in place. Jan had a huge grin on her face as she straddled my hips and dropped her pussy down my shaft. All three of them felt different in some indescribable way. Crystal stepped over me and presented her pussy to Jan who had to bend low to get to it.\n\nJan made less than a dozen strokes up and down my shaft before she pulled back out of Crystal's pussy and screamed out, \"OH FUCK. OH FUCK. YES. I'M CUMMINGGG.\" Crystal looked down at the contorted face below her and began fingering her own pussy. I could feel Jan's pussy clenching on my cock the second she screamed out. Crystal was hoping for Jan to finish quickly so she could take her place and it wasn't long before Jan rolled off to the side and curled up into a fetal position as she seethed air through her clenched teeth. Crystal was on my cock in seconds. \n\nMy orgasm was becoming more insistent and I didn't think I'd survive Crystal's grinding motion for much longer. Alexis must have picked up on something because she pulled her pussy back and leaned down and said, \"Cum in her and then it will be you and me and I'm going to fuck your brains out.\" She pushed her pussy forward again and I drilled her pussy with my tongue. Crystal ramped up her pace and I ramped up mine. If I couldn't get her before I came, she probably would while I came. I held back as long as I could. I could feel my balls moving and my cock was getting harder. My heavy breathing suddenly caught in my throat and I heaved my hips up into Crystal and groaned, \"YYYUUNNGGGG,\" into Alexis' pussy. Jan groaned from my extra hardness and burst into her orgasm, \"OH MY GOD. TOO BIGGGG. I'MMM CUMMINGGG. CUM IN MEEEEE.\" She was bouncing everywhere. She grabbed Alexis' shoulders to steady herself. She groaned hard again, \"OH MY FUCCKINNNGG GAAWWDDD.\" \n\nI groaned hard into Alexis' pussy as the first long stream of cum blasted up into Crystal's pussy. She rode my hips up like she was riding a bucking bronco. Her back arched throwing her head back. She grabbed one of her tits and squeezed hard and then released it and grabbed back onto Alexis. I wasn't paying much attention to Alexis' pussy as I fired long powerful streams of cum into Crystal. Alexis rolled off me and Crystal collapsed her torso down on my stomach as I pounded my cock up into her. She was sort of looking at me but her eyes were glazed over. Her mouth hung open in a silent scream. Her face was contorted into a mask that looked like pain but wasn't.\n\nWhen I finished my last salvo of cum, her pussy was still clenching rapidly on my cock. She was gasping for air and in between, she muttered over and over again, \"Oh Jesus. Oh Jesus. Oh Jesus.\" Jan had recovered and sat with her back against the bed-frame grinning at Crystal's contorted face. \n\nCrystal gradually began breathing normally and she pushed her torso up and pulled her pussy off my throbbing cock. She took it in her hand and looked at Alexis. \"I think I left some here for you. I don't know how but I think he's harder now that when we started.\"\n\nAlexis grinned at Crystal and said, \"That's my man. The ever-ready bunny.\" She offered her hand to me and pulled me up to my feet. She guided me onto the bed and then turned and said, \"You guys are welcome to stay or join the others in the living room. I'm going to drain the ever-ready bunny's batteries.\" Jan and Crystal burst out laughing and found a spot at the bottom of the bed to watch.\n\nCrystal said to Jan, \"I've got to see this. He just put a ton of cum in me.\" As she said that, she felt my gooey deposit leaking from her pussy. She reached down and pulled gooey fingers up and slurped them clean. Jan saw her do it and pushed Crystal back and buried her face in Crystal's pussy slurping up a mixture of cum and vaginal juices.\n\nAlexis crawled up my body, dragging her tits along my stomach and chest. She brought them right up to my face and I flicked out my tongue on her nipple and she groaned. She offered the other tit and I did the same. She groaned again. Then she dragged her tits all the way back down so my bouncing cock slid between them as she moved lower and stretched her lips over my glans and after the usual adjustments, continued down my shaft . She looked up at me with a delicious smile on her face as my cock disappeared between her lips. \n\nWhen Alexis started her throat-job, Crystal looked at Jan and said, \"Fuck. She is good.\" Jan just nodded. Alexis worked my knob carefully in her throat and the sensation was incredible. If she kept it up I would be coming in minutes even though I had just dropped a load minutes ago. She seemed to be reading my mind and she pulled my knob out of her throat and inched her way up my shaft. She took a big breath and dealt with the saliva that had followed my cock out. She turned around and sat down on my stomach facing Jan and Crystal. She held my cock against her mons pubis and slid her clitoris up and down the topside of my shaft. Then she slid my glans into her pussy on a down-stroke and stopped for a moment. She looked at Jan and Crystal and grinned as she pushed her way down to my balls. Alexis left her hand on my cock so she could feel it as she lifted herself up. She cocked her hips so I was fucking up on her vagina. She took shallow penetrations and I knew what she was up to. Jan and Crystal didn't know though and they crowded around at my feet to watch my cock quickly driving in a few inches and then back out again. Alexis was holding herself just above my hips so I could piston-fuck her. Her fingers covered my cock and Jan and Crystal moved in closer to see.\n\nAlexis kept it up for several minutes and finally I could tell Alexis was about to blow and I hurried my orgasm to catch up with her. She started a low pitch guttural, demonic like growl that turned into a groan. Her head rolled from side to side as her mouth hung open. Her eyes were closed. My orgasm was right there and I let it go at the same time I could feel the pressure building in her pussy. My first shot was planned for her pussy but she pulled my cock out and let out a blood curdling scream and proceeded to 'squirt'. She soaked Jan and Crystal as they were getting in each other's way trying to escape. My surge of cum rocketed along behind Alexis' squirt and Jan and Crystal both caught that in the face and down over their tits. ",
        "Crystal was sputtering as she tried to clear the combination of squirt and cum from her mouth. She was already covered and decided to weather the storm in place. Jan had moved off the foot of the bed. Alexis' squirt chased her back a few feet from there. Crystal was laughing like she was dancing in the rain and rain it did. I blew a half-dozen long ropes of cum that mostly covered Crystal but some made it as far as Jan. Alexis' squirt lasted twenty seconds or so before stopping and then started again in less powerful squirts. Alexis watched the whole scene and when she stopped squirting altogether, she started laughing.\n\nCrystal was sitting at my feet with her arms spread wide as cum and squirt dripped off her arms. Her hair was covered. Her face was covered. She looked down to see the mixture of fluids dripping off her nipples to her lap. Other than the first few seconds of cum and squirt into Jan's face, the rest was mostly on her legs. She was wiping the mixture from her eyes and cheeks. She went to the bathroom and came back with several towels and a wet facecloth. She gave the facecloth to Crystal who wiped her face down before using the towel. She said, \"Wow. It's been a while since I've seen a squirt like that. Holy shit.\" Neither of us responded. Alexis' body had collapsed back on my chest. I held her tits in my hands and twirled her rock hard nipples. She didn't move for quite a while. \n\nWhen Crystal was cleaned off as well as possible she leaned forward and sucked my softening cock into her mouth. She lashed her tongue all around it until I was clean. As she pulled off, she dipped her tongue in the 'eye' to collect any remaining cum. She smacked her lips and turned back to Jan who was grinning at her.\n\nJan said to Crystal, \"Hey let's let these two get themselves together. I'm curious to see what's going on in the living room.\" They left and all was quiet except for our heaving breathing. Alexis turned over so she was lying face down on my chest. My cock, which was growing softer, dropped down into the crack of her ass and stayed there. She giggled at the sensation. I wrapped my arms around her back and waist and held her. She muttered, \"I like lying with you like this. I feel so safe wrapped up in your arms.\" I kissed her on the top of the head.\n\nWe stayed that way for a while and then Alexis said, \"We have to check on things.\" She rolled off me and pushed herself onto the floor. I followed. She was drooling squirt juice down her leg when she stood. She grabbed a discarded towel and wiped herself and then turned around and wiped my soaked legs.\n\nI checked in on Noah and he was sitting against the headboard with Mitch and Rachel on their knees between his legs trying to suck his flaccid cock back up to size. He was thoroughly enjoying their attempts. He noticed me at the door and gave me a thumbs-up sign and then looked down and gave me two thumbs-up signs. I grinned as I closed the door and continued into the living room.\n\nEveryone there was in a lull. The girls weren't even trying to get the guy's cocks back up. The booze was flowing again. I lifted the two kegs up out of the ice. I don't know what I was thinking getting two kegs. The group had formed into a few subgroups engaged in separate conversations: Chase was talking with Alexis, Jan and Crystal. Dean was talking with Josie and Yu-Gin and Mindy and Morgan were chatting with Chuck and Jackson. It occurred to me that Chuck and Jackson had been a tag-team all night. \n\nI went back down the hall to check on Nina. She was conscious and sitting on the edge of the bed. She looked like she was trying to decide if she should force herself to puke or not. She looked up when the door opened. Her gaze went right back to the floor below her dangling feet. I came in and sat beside her. She glanced at me and said, \"I really fucked up didn't I? I was looking forward to tonight. I suppose it is all over, huh?\" She reached into my lap and wrapped her fingers around as much of my cock as she could. My cock responded to her touch and she looked up at me with a smile and said, \"Maybe it's not over yet.\"\n\nI chuckled and said, \"The night's not over yet. Everyone is still here. They are taking a break at the moment. When you think you are ready, come on out. Everyone would be excited to see you.\" She smiled up at me, released my cock and nodded. I got off the bed and went back to the living room. I was curious about whether Rachel and Mitch had got Noah back up again but I didn't stop to find out.\n\nThe sterno heating cups had gone out but the trays were holding their heat pretty well. I grabbed some scallops and shrimp and some crackers and cheese and the one remaining chicken wing. I hadn't had much of a chance to eat earlier and I was starving. I found a spot to sit and ate as I listened to the conversations. I was getting up to dump my paper plate in the trash barrel when Rachel came down the hall as dressed as she was when she arrived. She didn't make any issue of her departure and stopped in the kitchen. She was still breathing hard as she pulled me through the kitchen to the hallway leading to the garage. She leaned in close to me and stretched up to kiss me. She wrapped her hand around my cock and started jerking me off. My cock responded and she said, \"Sorry. I didn't mean to do that,\" as she released it. She said, \"Thank Alexis for me. I had an amazing time. Mitch is still with Noah. I told her to stay as long as she wants. I was just getting in her way. I invited Noah to stop over tomorrow before he leaves for an encore. He has a very nice cock. Almost as nice as yours.\" She kissed me again and walked awkwardly down the hall. She waved back at me as she closed the door to her part of the house.\n\nI poured myself a cup of light beer drank half of it and filled it again. When I came back into the living room, Mitch and Noah were there joining in the group with Alexis. Dean asked if I could bring him a beer since I was up. I set my cup down and went back to get one for Dean. As I returned from the kitchen, Nina appeared at the entrance from the hallway. She looked better than she did a few minutes ago. I helped her over to the Dean/Josie group. I handed over Dean's beer and Josie hugged Nina. It was clear she was concerned about her. Nina was embarrassed and tried to squelch Josie's attempts to discuss how she was.\n\nI thought she would feel better if she had something to eat, so I fixed a plate of cracker and cheese and some shrimp and scallops and brought it to her. She looked up at me with the plate. She hesitated but took the plate and a minute later she was 'chowing-down' like she hadn't eaten in days. She looked over at me and raised her plate and mouthed the words, 'Thank you.'\n\nIt was well after midnight but I figured that after a brief respite the party would continue. Instead of ramping back up again it was winding down. To be honest, I wasn't too disappointed. We offered bedrooms if someone wanted to stay over. Other than Noah, no one did. They all lived close by anyway. As clothes were found and pulled on, they started filing through the kitchen toward the garage door. Alexis made sure they weren't too drunk. The guys had come with Jackson and he was their designated driver, so that explained why he hadn't been drinking tonight. The girls were walking the short distance through the woods to their dorms. Crystal grabbed my arm and pulled me back into the kitchen and asked if I could stop Noah and Dean from going. I was confused and she hemmed and hawed until finally explaining her request.\n\nI knew Noah wasn't going anywhere anyway. I looked to see what Dean and Josie were doing. They were both still naked sucking face on one of the sofas. Crystal was completely sober as she explained, \"Going back to even my previous life, I've always had a fantasy. Until tonight the opportunity never presented itself. I've had a lot of sex with guys and even two at once. Umm... I've never had sex with umm three guys at once. I wake up at night dreaming about it and I can masturbate to orgasm in minutes just thinking about it.\" She looked over at Noah and Dean and Josie and continued with a smile, \"I know exactly where everyone goes in my fantasy.\"\n\nAlexis had seen to the last of the group and was walking back into the kitchen and got about half of the discussion. Crystal explained again to Alexis. Alexis smiled up at me and said, \"Sounds like a lot of fun. Have you said anything to the others?\" I just shook my head.\n\nAlexis went into the living room and gathered Noah, Dean and Josie. Everyone else had left. Alexis explained Crystal's request and looked at Noah. He was easy. He was in. Alexis by-passed Dean and looked at Josie. Alexis already recognized that Dean's balls weren't his anymore. Josie looked at the hopeful look on Dean's face and then looked back at Alexis who was waiting for an answer. She hesitated and then broke into a grin and said \"It's fine with me as long as I can watch.\"\n\nAlexis looked up at me and said, \"What about you Meat?\"\n\nI said with a bit of sarcasm, \"It's fine with me as long as Alexis can watch.\" Everyone laughed. The sarcasm was cutting as Josie's face turned red with embarrassment.\n\nCrystal's eyes went wide with excitement. She jumped up and down a couple times and clapped her hands. She grabbed my hand and Noah's and led the way back to the master bedroom. Alexis and Josie shared half the chair by the door. Crystal pulled me up on the bed and fluffed up several pillows and laid me on my back against the pillows. I was comfortable. At least I was out of the wet bedding left over from Alexis' earlier squirt. Crystal explained her plan and everyone got in position. She looked back at Alexis. She was so excited.\n\nCrystal crawled up on the bed and positioned her ass on my stomach facing my feet. Her knees were up with her feet planted on the bed about mid thigh. She was sitting up straight as she grabbed my granite hard cock and held it in place as she slid her sex toward it. When she was satisfied with the alignment, she slowly slid her pussy onto my cock. She groaned from the size and stopped and adjusted as she had learned the hard way. Then she slid all the way down. She blew air from her lungs all the way down. She pushed herself up and down several times and then pulled off. My cock sprang out of her pussy and pointed straight up. \n\nCrystal leaned back against my chest and I cradled her gorgeous enhanced tits in my hands. She had asked Noah to guide my cock into her anus but he wanted nothing to do with handling my cock so he asked Alexis to assist. She bounded out of the chair and took my cock, all gooey with Crystal's juices. She looked into Crystal's sopping wet pussy and then pushed two fingers inside and finger fucked her for several strokes. Crystal's head tipped back on my shoulder as she groaned hard. This wasn't part of her plan but she was enjoying it. Alexis pulled her fingers out of Crystal's pussy and then pushed them into her anus. Crystal sat up instantly pulled her tits from my hands. She groaned from Alexis' attack and muttered, \"Oh fuck. It's been a long time since anyone ran up that road.\" Alexis pulled her two fingers out and then pushed three back in. Crystal screamed again and looked disapprovingly at Alexis.\n\nAlexis said, \"If your plan is to put Hunters' fatty up there, my three fingers is nothing. Just relax.\" Crystal leaned back against me and I cupped her tits again. After a minute or so, Crystal began pushing against Alexis' fingers. Alexis pulled her hand back and then pushed her three fingers in again. Crystal tensed again but relaxed almost immediately. Alexis pulled her hand back and guided my cock to Crystal's anus. Crystal tensed again but pushed down as I pushed up.\n\nCrystal was gritting her teeth as she pushed. I let her take the initiative until my glans suddenly pushed past her sphincter muscle. She groaned hard and seethed air through clenched teeth. She slowly but steadily began pushing down my shaft. Crystal didn't stop at the bottom as she immediately began pulling herself back up again using her legs for leverage. She anal-fucked my cock a few strokes and then lifted her head and looked at Noah. He stroked his long cock a few times and crawled up between my legs and inched forward guiding his cock to Crystal's pussy. She stopped fucking my cock as Noah pushed his cock in. I could feel Noah's cock slide past just millimeters above mine. Noah's balls came to rest at the base of my cock and then he started fucking Crystal's pussy. I groaned from the sensation. Crystal groaned too as she wagged her head from side to side. \n\nDean got ready for his assignment by stepping up on the bed and straddling Crystal's waist with his feet. He leaned forward pushing his rock hard cock toward her face. She wasn't ready for it as she was concentrating on the sensations from Noah's and my cocks. Her eyes were closed and she didn't even know he was there until Dean leaned in closer and let the tip of his cock drag across her lips as her face wagged by.\n\nCrystal shoved one hand into her sex and started working on her clitoris. Her other hand went to Dean's cock and began jerking him off. She then pulled his cock and him lower so she could get her mouth over his glans. She couldn't quite work the rhythm of rocking her hips to fuck Noah and me and use her abs to pull her mouth up and down Dean's cock. \n\nDean solved her problem when he started fucking her mouth. This was Crystal's fantasy and as we all ramped up the pace of fucking Crystal's mouth, pussy and ass, she didn't last but five minutes before her eyes went wide. I could feel her vaginal clenches in my cock. I wondered if she would have an anal orgasm too. Noah was furiously fucking Crystal's clenching pussy and Crystal had to pull Dean's cock from her mouth so she could scream, \"OH MY GAWWDDD. I'MM CUMMINGG. COME ON GUYS CUM WITH ME.\" Dean was furiously jerking himself off as Crystal's head started wagging again. She started muttering, \"OH GOD. OH GOD. OH GOD.\n\nDean suddenly arched his back and started blowing his load into Crystal's face. She flinched and tried to get his cock back in her mouth but caught the next blast across her face from one ear to the other. She took over jerking his cock as she tried to keep up a rhythm on Noah's and my cocks. Noah was groaning hard as he blew his load into Crystal's pussy. He was driving his long cock all the way in in-synch with his spurts. \n\nWhen I felt Noah's cum shots through the thin membrane that was it for me too. I groaned hard and humped up my hip lifting Crystal and taking Noah's cock with her. Noah was forced to back off and he sprayed his last few shots of cum on Crystal's groin, stomach and tits. He finished himself off with his hand as he watched me pumping my cock in and out of Crystal's ass. My head was flailing from side to side just like Crystal's as she furiously strummed her open palm and fingers over her mons pubis and clitoris. \n\nI figured she wanted my cum in her bowels but she pushed herself up with her feet and my cock pulled out of her ass in mid cumshot. It splattered everywhere forcing Noah to move back. She grabbed my cock sticking up between her legs and started jerking on it as fast as she could. She was screaming. I was groaning. Alexis and Josie had come over on the bottom of the bed to get a close-up view. They ignored the wet bedclothes. \n\nWith my cock in Crystal's hand I was launching cum three feet straight up in the air and slightly toward the head of the bed. The cum came splashing down on Crystal's body, face and head. I caught some on the side of my face. I fired stream after stream and Crystal started squealing as she watched the trajectory and landing point. I started rubbing cum into her tits. She was laughing and trying to catch my cum with her mouth. She caught some. My cum shots dwindled and finally stopped. Dean had backed off so he didn't get cum on him. He sat down beside Josie who was maneuvering herself so she could suck on his softening cock to clean it of any taste of cum.\n\nCrystal collapsed onto my body and let her legs sprawl down along the outside of mine. Alexis crawled up between my legs and sucked my softening cock into her mouth to clean my cock of cum. Crystal rested her head on my shoulder and turned toward me. She licked cum from my cheek and giggled. She and I didn't move for several minutes.\n\nCrystal's pussy continued to spastically clench for quite awhile after the action stopped. Noah dropped to his knees beside Dean and Josie took the opportunity to suck his cock in to clean it. When she was finished, she looked up at Noah and grinned. \"Nice cock, Noah,\" she said.\n\nStill lying nearly comatose, Crystal said, \"Oh my fucking gawwddd. Even my dreams weren't this good. Holy shit. Guys, you made my dream come true.\" Noah and Dean looked at each other and smiled.\n\nI said, \"It was our pleasure.\" Alexis started laughing and she got us all going.\n\nWe finally got moving and all six of us got into the shower. It was crowded but there was more room than our previous shower was for Alexis and me. We washed each other and as usual extra attention was being paid to the genitals and tits. I was done and avoided getting going again. Dean and Josie were cleaning each other. Crystal was on her knees washing Noah's cock with her lips and Noah was groaning and gasping for air with his head tipped back against the tile wall. \n\nI led Alexis out of the shower and we dried each other and watched the action for a moment before we went back in the bedroom. Alexis stripped the bedclothes and I helped her remake the bed with fresh linens. \n\nDean and Josie came out of the bathroom. She had him by the cock as he was trying to look back over his shoulder obviously trying to watch Crystal and Noah. Alexis whispered to me, \"I think Dean's cock will be in Josie's purse from now on.\" I started laughing.\n\nDean looked at me and as if he knew what I was laughing about and said \"Go ahead Meat, yuck it up.\" He separated his cock from Josie's hand and swatted her on the ass as they headed for the living room to find their clothes. When we came out in our bathrobes, Dean and Josie were fully clothed. Josie came to Alexis and thanked her profusely for the exhilarating evening. She kissed Alexis and then came and kissed me rather passionately. Dean stepped in and separated us and shook my hand. \n\nI said, \"Do you think those kegs could go to good use back at your dorm?\" Dean's eyes lit up. I lifted one of the kegs and he took the other one. We carried them down the stairs and stuffed them both in the back seat of his car. We went back and got the barrels and dumped the ice outside and pushed them upside down over the kegs. It was two o'clock in the morning and I figured those kegs would be dry by sun up.\n\nI cleaned up a little in the kitchen and just stood there looking at all the food left over. The Caterers were supposed to come back in the morning to clean up. I heard Noah's bedroom door close and I headed for the master bedroom turning off lights as I went. Alexis was already under the covers with her nightlight off. I checked to see if everything was okay in the bathroom.\n\nI spooned up with Alexis and kissed her on the side of her neck. She groaned as usual and said, \"Tread lightly there Meat.\" I chuckled and cradled my hand over her left tit and pushed my pelvis into her ass-cheeks and I don't remember anything else until the damn alarm went off less than three hours later. Jesus, I sure would be glad when the Bowl game was over. It was pitch black and I forced myself out of bed. I had to piss anyway. I did my morning bathroom stuff and stood in the bedroom doorway trying to remember where I dropped the clothes from last night or rather, this morning. Alexis hadn't even moved when the alarm went off and I didn't want to wake her pawing through my closet and bureau. I found them on the floor beside the bed and did the sniff test. Good enough. I pulled them on and headed for the kitchen. ",
        "When I opened the bedroom door, loud moans and groans came from Noah's room and they weren't all his. I remembered back that I hadn't seen Crystal leave. 'Way to go Noah,' I thought as I slowly and quietly walked past his door. I admit that I lingered for a few moments and I got that familiar sensation in my groin but I forced myself into the kitchen. The smell of spilled beer permeated the room. I ignored it and made a cup of coffee, walked by the table of cold food to see if anything appealed and headed for the van.\n\nAs wasted as I was in the locker room, I was one of the bright-eyed and bushy-tailed ones. Dean and most of the rest of the team that lived in Dean's dorm looked like zombies. Dean was wearing the same clothes as yesterday too except he had never even taken them off. As expected, he and his dorm-mates had finished off the rest of both kegs before stumbling in here for practice. When the coach came in and looked around, he chuckled and said, \"Well girls, it looks like you had a great night. So, let's all go and have a great morning. No pads. Let's move.\" A collective groan filled the locker room.\n\nMost of the guys were still shit-faced and most of those were puking in the grass after one set of wind-sprints. Coach was bellowing as usual but he had a smile of his face the whole time. All in all, he went pretty easy on us and we hit the showers after only forty-five minutes. The Cheerleaders on the other side of the field didn't look like they were in any better shape. Coach Hannah was less forgiving as they were still going when we left the field. I showered and dressed and headed for my car. Mindy and Morgan were still breathing hard as they were getting in Mindy's car when I walked out. They both expressed their thanks for being invited to the house-party. Morgan added that Chuck and Jackson had asked her and Mindy out tonight. Mindy added that she had a thing for geeks. We kissed all around and said our good-byes for the semester break and wished each other a Merry Christmas.\n\nDean stumbled out of the field house as Mindy and Morgan drove off. He looked like shit. He suggested that we stop at the fast food joint for a breakfast sandwich. He got two and I got one with a hash-brown and coffee. I asked about Josie but Dean wanted to talk about Crystal. He said that other than Alexis, Crystal was the most beautiful woman he had ever seen. When I told him that she was a billionaire or something, he dropped his sandwich right out of his mouth. He sat there slack-jawed for a few moments. \"Holy fuck,\" was all he said as he retrieved his sandwich.\n\nOutside, we said our good-byes. I would see him later that afternoon for practice. Only another few days and it would be over. When I got home, Noah was fucking Crystal up against the counter in the kitchen. Crystal was standing on one leg with the other stretched out straight along the counter-top. She was naked as was Noah. Her big tits were bouncing as Noah, standing on his tip-toes, with his fingers firmly planted on her hips was driving his cock all the way to the balls and then back to the ridge. \n\nNoah's eyes were closed as he groaned continuously. Crystal saw me come in and grinned at me as her face was bumping up against a cabinet door. Noah was pounding his cock into her for all he was worth and then he groaned hard and bent over Crystal's back and heaved back as he drove his cum spewing cock into her pussy. She screamed and then groaned as each of Noah's cum shots filled her pussy.\n\nAs soon as he was finished he dropped down off his cramping toes and pulled his cock out of Crystal. She sagged down tits first on the counter-top. Noah's cock was already softening as he leaned his ass against the counter beside Crystal as his skinny chest heaved in search for oxygen. He noticed me stand there watching. Between gasps for air he said, \"Fuck Hunter.\" - gasp - \"She is insatiable.\n\nAs if to accentuate his point, Crystal looked back at me with a lustful look on her face and said, \"Next,\" as she waggled her ass at me.\n\nI'm not used to taking sloppy-seconds but I admit that looking down into Crystal's gaping pussy as Noah's cum dripped down her leg and her perfect ass that I had thoroughly fucked only hours before, my raging hard cock was screaming 'get in there'. I unzipped my pants and my cock sprang out. Crystal looked at it and grinned as she again waggled her ass at me.\n\nWithout even dropping my pants I moved in behind her. She was trying to look back to watch. Her face was red with lust and when she felt my cock at the entrance to her sex she pushed back engulfing my cock in her pussy. She screamed from the girth of my fatty but she quickly relaxed and pushed back as I pushed in. In seconds I was pumping my cock in and out. Noah's jizz was oozing out past my cock and down over my balls to the floor as I pushed in. My height made the alignment of our sexes perfect and she was groaning non-stop as her face bumped rhythmically into the upper cabinets. \n\nAfter a few minutes, Crystal looked back at me and through gasping breaths said, \"I'm gonna cum. Oh fuck Hunter. Your cock is incredible.\" I could feel her muscles clamping and then her pussy started clenching. My orgasm was right there too. She screamed, \"OH FUCK. YEAH. CUM WITH ME.\" I ramped up my pace and I could feel my neck tendon tighten followed by the rest of me and I threw my cock into her as I launched rope after rope of jizz into her already jizz filled pussy. Her knee on her standing leg buckled and I grabbed her hips to hold her up. I was still pounding my cock into her until my last charge of cum blasted into her. Her pussy was furiously clenching on my spent cock and she was whimpering face down on the counter. \n\nI held her like that, pinned on my still hard cock for a couple minutes. She muttered into the counter, \"Fuck. I'm done. What a fantastic night. I'm going to have to hire me a stable of young men. Do either of you want the job.\" She was being facetious but Noah wasn't taking any chances. He raised his hand. We all burst out laughing. \n\nI pulled my softening cock from Crystal's pussy and helped her lower her leg off the counter. She flexed her legs with a squat and a big glob of cum dropped straight to the floor. She felt it going and she looked down. \"I should clean up. Where is your mop? I got it for her and she ran the business end under the faucet and mopped the floor around her feet. She mopped up the spilled beer while she was at it. Noah and I stood back and marveled at her incredible naked body working the mop.\n\nI returned the mop and came back in the kitchen. Noah and Crystal were sitting at the breakfast nook. I asked Noah, \"What time are you leaving? Give yourself some time before your 'appointment'.\" I emphasized the word 'appointment'.\n\nIt was obvious he didn't know I knew about his scheduled tryst with Rachel and Mitch. He smiled though and said, \"Yeah. I'd better get ready. It's a long drive home.\" He got up and leaned in and kissed Crystal very passionately. She returned his kiss in kind. When their lips parted he said, \"I hope I can see you again sometime.\"\n\nCrystal smiled, pecked him on the lips and said, \"Absolutely.\"\n\nAlexis and Noah passed in the hallway going in opposite directions. She noticed his soft but glistening cock as she passed. She had a bathrobe on and was a little startled to see a naked Crystal sitting at the breakfast nook. I was standing against the counter, fully clothed. I had put my cock away as soon as it was soft enough. She walked over to me and cuddled into my arms and then stretched up for a kiss. She pulled back and said, \"Your breath reeks of beer. Your cum is going to taste pretty bad for a couple days.\" I laughed and cradled her in my arms. Crystal was watching our display of affection. She had a wistful smile on her face.\n\nCrystal got up and said, \"Well, I've grossly over-stayed my welcome. I guess I will take a shower and get out of your hair. I've loved every second of the last twelve hours. You two are absolutely beautiful together. Alexis. Beside you, I'm a dog and I'm not ashamed to admit it. You're gorgeous.\" Alexis was thoroughly embarrassed from Crystal's compliments.\n\nAlexis pulled away from me and opened her robe to hug her naked body against Crystal's. They kissed passionately and my cock was growing again. Alexis broke their embrace and said, \"I have a particular attraction to you. I hope we see much more of each other.\"\n\nCrystal's face broke into a ultra-white toothed grin and said, \"Thank you. I was hoping you'd want to. I haven't been so attracted to another woman since college.\" She aimed her thumb at me and said, \"I hope you bring him along too. He has the most amazing cock.\" I groaned in my throat from the discomfort in my pants. Crystal pulled herself back from Alexis and then bent down and sucked each of her nipples until they were rock hard and then she turned and headed toward Noah's room. I came over behind Alexis as she watched Crystal's ass swing as she walked away. I reached around her and ran my palms over her hardened nipples. She groaned and pushed her ass back into my crotch and felt my stiffness.\n\nAlexis looked up at my face and said, \"It looks like she's got us both horny.\" She reached around and unzipped my pants and let my hard cock flop out into her waiting hand. I dropped one hand to her sex. She was sopping wet. I feather touched her clitoris and she groaned hard and lurched her hips forward as her head fell back against my chest. Her hand was jerking on my cock. She could feel that my cock was sticky so she knew where it had been a short time ago. It just seemed to excite her even more.\n\nAlexis turned around and pushed me back against the counter. She said, \"Up on the counter where you fucked Crystal.\" I couldn't figure out how she knew where that spot was but then I remembered the wet spot on the floor from the mop. I used my arms to boost my ass up on the counter. She wasted no time bending down and kissing my glans. She looked up at me and said, \"Yummy. You taste like her.\" She stretched her lips over the head and pushed her lips on. She lashed the velvety crown with her tongue and then pushed it into her throat. She gave me a short throat-job and pulled all the way off. She smacked her lips and grinned up at me. \n\nAlexis stood up and pushed her tits against me and said, \"Fuck me like you fucked Crystal.\" I nudged myself over the edge of the counter and removed her robe. I guided her to the same spot and lifted her right leg up on the counter. She looked back at me and said, \"Oooh. I think I'm going to like this.\" She bent forward over the counter and reached one hand back between her legs and started fingering her clitoris. \n\nI guided my cock to her sex and gently pushed my glans into her pussy. She clenched her teeth and seethed air into her lungs. I waited a moment and then continued as she groaned hard all the way down as my balls landed in her outstretched fingers. She gently clutched them until she lost them as I pulled back out. I got into a normal fucking rhythm as my momentum pushed her face into the cabinets on each thrust. She grabbed my balls every time. \n\nAlexis was panting against the cabinets as she randomly burst out, \"Fuck. Yes.\" And then, \"Give it to me, Baby.\" I was giving her all I had to give when I felt a new sensation on my balls. I opened my eyes and looked to my right and Crystal, fully clothed, was standing there clutching my balls and rolling them around in my ball-sack. Alexis was watching her and Crystal leaned in and they locked lips in an erotic, passionate kiss as she continued to fondle my balls. I pumped up the pace and Alexis groaned hard into Crystal's mouth. \n\nCrystal pulled back from Alexis and looked up at me and said, \"Fuck the shit out of her.\" I smiled because I was already doing that. Alexis' mouth was hanging open and a long low pitched moan drained from her lungs. It was interrupted by my thrusts and as I could feel my orgasm approaching fast with my balls moving all around in Crystal's hand, I felt Alexis seize every muscle as she furiously began humping back at me. She let out a blood curdling scream when I launched my first cum shot. Her eyes pinched tight as if she were weathering a storm of pain. She groaned with each successive shot as her pussy clamped hard on my cock. \n\nWith my last shot I was done. I stopped fucking Alexis and let her pussy continue to clench on my cock. When my cock began to soften and slowly fall out of her, she whimpered softly, \"No. Don't go.\" When I fell out of Alexis' pussy, Crystal maneuvered me around and she went to her knees and shoved my limp cock into her mouth and lashed her tongue around and around. She wanted Alexis' juices. Cleaning my cock was her excuse.\n\nAlexis was having trouble getting her leg off the counter so I reached over and helped her. She limbered her leg to get blood flowing again and turned around with her ass against the edge of the counter. Crystal saw a better opportunity and she abandoned my cock and moved her face into Alexis' crotch. As Alexis held her head in place, Crystal slurped up the cocktail of my cum and Alexis' juices. She worked at it for nearly a minute before she pushed herself away and stood up. Her face glistened with fluids. She wiped her face with the sleeve of her shirt. She kissed Alexis and then me and said, \"I've said my good-byes to Noah. I have to go.\" As she headed for the hallway she turned back and held her fingers and thumb up to her face in the universal sign, 'call me'. \n\nAlexis was still having trouble walking on the numb leg and she staggered into me. I grabbed her and held her to me. She cradled my cock and balls in her hand and simply mumbled, \"Wow. What a party.\" I chuckled and lifted her up in my arms and carried her back to the bedroom. I stopped at Noah's door and Alexis flicked the doorknob and we looked in. Noah had crashed, totally naked, on his bed snoring away. She closed the door and we went to our room to get in a nap too. We were exhausted."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "blowjob",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-37"
}