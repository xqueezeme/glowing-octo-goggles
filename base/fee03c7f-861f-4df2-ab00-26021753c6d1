{
    "title": "The Bet",
    "pages": [
        "Author's Note: I've always wanted to write a story and maybe a few others for this category. And when an idea came to mind, I fired up my word processor and got started. The title and description should've told you what this story's all about, so I hope you're not looking for an intricate plot. This is just a real-ish kind of story, containing backdoor fun. Hope that'll be enough to get you to your destination. All characters involved in sexual activities are over the age of eighteen and you must be over that age as well in order to continue reading.\n\nOtherwise, please enjoy.\n\n* * * *\n\nWhat's the deal with anal sex?\n\nWhy are so many guys so into the idea of it and want to give the--let's be honest--filthy sex act a try, at least once in their lifetime?\n\nThink, we've got perfectly good vaginas ready and willing to be taken. Yet we want the orifice that was never designed for penetration in the first place.\n\nMy theory is even though anal is much more common nowadays, it's still considered taboo. And you know how humans are; we love the thought and taste of forbidden fruit.\n\nI had extra incentive in wanting to give the sex act a try.\n\nOut of all the beautiful features nature has bestowed upon the female species: eyes, breasts, lips, hips, feet, whatever your poison is, my favorite feature is the feminine shape of the buttocks. The ass, the hiney, booty, bottom, tushy, derri\u00e8re, whatever you want to call it, it's what I love most about women.\n\nA lot of guys enjoy the idea of placing their dick between a pair of giant tits. And believe me, I get that. But what I wanted was to place it between two firm buns and penetrate the little gateway to heaven that lay beneath.\n\nMy love of a great ass is what first attracted me to my girlfriend, Brianna Lane, whom I met during my first year of college.\n\nI'll be honest, Bri couldn't be placed into the bracket of the prettiest girls you can find. She wasn't homely, mind you, and I love her, but if I had to give you an accurate rating of what she looked like, it would be a six out of ten.\n\nWhat she had in her favor, however, was a great personality--like most of us look for in a partner. In addition, her body was to die for. And her sexy British accent didn't hurt, either.\n\nBri was tall, about an inch or two shorter than me, which would place her at around five foot eight. She was also slender. Not bony, as if she tried her best to avoid food, but the type of slender that'd make you believe she participated in athletics. Which she used to in her younger days.\n\nBri didn't have big boobs on her side, though. In fact, they were small and could be compared to--let's say, apples.\n\nAnother thing I loved about my girlfriend were her legs. They were flawless. They went on and on, and were something one would masturbate over if he caught a glimpse of her in thigh-highs.\n\nBut, my girlfriend's best feature was indeed her butt.\n\nShe didn't have a huge Kim Kardashian or Nicki Minaj kind of ass, which, because of her slim frame, would've made her look ridiculous. No. Bri had a nice sensible bottom, which you'd still notice from afar.\n\nDon't get me wrong. I love a big derri\u00e8re as much as the next ass man. But what I believe makes an ass great is definitely its shape. My girlfriend had that in spades. Her ass was full, round and suited her body type to a tee.\n\nI still get a warm sensation that oddly makes me tremble whenever she bends over.\n\nA few months after she and I graduated in our respective fields, journalism and graphic design--I studied the latter--we decided to rent out an apartment and moved in together.\n\nLife was magical during our first weeks. Excluding her time of the month, we made love at least once a day, almost every day, and had done it in every room of our little home.\n\nI'm not sure why we went so crazy. It's not as if we'd never slept together. But it might have been our way of celebrating our newly found independence.\n\nI don't want you to get the wrong idea about Bri. She wasn't as sexually adventurous as I might've implied. Matter of fact, she only allowed me to sleep with her six months after our first date.\n\nBri was a bit of a church girl. Well, a lot of a church girl. Almost every Sunday she left our apartment to attend Mass--sometimes dragging me along. Not many from the Millennial and Gen Z generations are as devoted as her, but such was the result of her upbringing.\n\n\"Don't cum in my mouth, okay?\" Her eyebrows rose.\n\n\"I know.\" I pulled her long honey blonde hair out her face.\n\nHer head dropped and lips tightened around my cockhead. She sucked and swirled her tongue around it. Her head bobbed about five times. Then she pushed lower until her lips slid past the halfway point of my shaft.\n\nShe tried to get more in, but I knew she'd reached her limit. She pulled up and popped my glans from her mouth. Her tongue ran down the front of my shaft. She took my testicles in and sucked. I groaned as my eyes shut.\n\nI was as smooth as a Ken doll in that region. I'm not sure how many guys maintain that area like I do, since my eyes don't wander in locker rooms. Bri told me a while ago she didn't like the feeling of pubic hairs in her mouth. I obliged by making sure my pubic region stayed clean.\n\nIt had its perks, like her taking my balls between her soft lips. I also liked how it made me look bigger. While erect, my cock was the slightly above average size of six inches in length and five in perimeter.\n\nIt's true, a lot of men wish they were gifted a monster size porn star cock--and I used to have the same desire. But Bri had long ago let me know most women prefer regular ones. She'd admitted while the idea of a nine inch cock was intriguing, it sounded like a nightmare to live with on a day to day basis.\n\nShe was more than happy with my \"boyfriend cock,\" as she'd called it. I suspected her stroking my ego, but it was difficult to deny her logic.\n\nOnce she bathed my testicles with her tongue, Bri slid it back up and took in my glans. Her head bobbed without the need to rush. Then her pace quickened as she looked me in the eye.\n\nShe gave my glans one last hard suck and then popped me from her lips. She got onto her hands and knees and crawled forward.\n\nI was in the middle of our bed with my back against a couple pillows and the wooden headboard.\n\nBri stood on her knees, placed her hands on my shoulders and suspended her vulva over my erection. She bent her knees and stroked her clean-shaven slit with my tip, smearing it in pre-cum and saliva.\n\nShe took hold of my shaft and placed its head at her opening. Her eyes closed with a groan as she bent her knees and took in the top third of my cock. Her hips dropped lower and once I was all the way in, Bri remained in place.\n\nShe looked as if she was at peace with the world. I leaned forward and sucked in her nipple as she enjoyed my girth by humming. I moved on to her other nipple and rolled it between my teeth, earning another groan from my girlfriend.\n\nBri pushed up until only my glans remained between her wet lips. She dropped her frame again, with much less care this time, bounced off my lap and got into a medium paced rhythm.\n\n\"Aaahh,\" she moaned each time she sprang off my lap.\n\nWith my hands on her waist, I slid them lower and around her hips to cup her firm ass cheeks. I kneaded them, loving the feel of her silky bottom. I pushed my right hand farther around her left buttock, slipped my fingers between her cheeks and pressed my middle finger against her rosebud.\n\nBri stopped bouncing to pull my hand out.\n\n\"You know nothing's allowed to go back there, Dale.\" She frowned.\n\nThis is how it's always been with Bri. Butt stuff was completely off the table. She'd said she didn't want to be a complete prude, which is why she's okay with vaginal sex, but even oral sex was a battle. She'd said it wasn't what good Catholic girls do.\n\nHowever, during our trip to Perth, Australia, which I took her to as a twenty-third birthday present, she was filled with such joy on our first night, she decided to break her rule and gave me the first blowjob she'd ever given a man.\n\nIt wasn't mind blowing, I'll admit, but I appreciated it, nonetheless. Although, it did take a couple more months for her to finally give me a taste of her honey pot. Ever since then, her mind's completely changed on the idea of oral.\n\n\"Actually, I think you've just killed my mood,\" she said and pushed up, slipping my cock from her wet folds.\n\n\"Sorry, babe. I just couldn't resist. When your girlfriend has as great of an ass like mine, it's really hard to control yourself.\"\n\n\"Flattery will get you nowhere, sir.\" She moved to sit on the edge of the bed and then reached down to pick up her lacey black panties.\n\nI moved behind her. \"Let me make it up to you then,\" I said in her ear. \"What if I went down on you for at least...the next thirty minutes?\"\n\nI didn't find the idea of jacking off to reach my climax appealing.\n\nShe paused as she pulled her panties up her long legs. \"I'll give it some thought.\" She pulled her panties the rest of the way up and stood. \"But not right now. I'm still a little irritated with you.\"\n\nHer answer gave me hope. I knew once I got my tongue on her clit, she wouldn't be able to resist letting me back in. I could step away from the idea of masturbating in the shower for now, and give her a heavy load in an hour or two.\n\n\"What time is it?\" she said as she walked to the closet.\n\nI reached for the nightstand and grabbed my phone. \"Umm, it'll be noon in about twenty minutes.\"\n\n\"Really? Okay then, my team's about to play. And I have to write the article about their match for our website. Can't believe I almost forgot.\" She reached into the closet and pulled out her bright red Liverpool FC jersey.\n\n\"Who you guys playing against this week?\" I said as I picked up my boxer briefs.\n\n\"West Ham United.\"\n\nI thought. \"They're one of those London clubs, right?\"\n\n\"Wow. I'm impressed. Look who's learning about football.\"\n\n\"Soccer, you mean.\" I pulled up my underwear.\n\n\"Hey, football was invented before your American version of it. Or should I say; American version of rugby.\"\n\n\"Well, you're living in the good ol' US of A today. You should probably get used to calling it soccer. You're just gonna confuse people.\"\n\nShe rolled her eyes. Although I could tell she wanted to smile. \"Yes. I'm well aware of that by now.\" She pulled her jersey over her head. \"I'm not sure why you even care, though.\" She pulled her head through and pushed out her arms. \"You don't even watch American football. All you care about is baseball.\"\n\n\"Can you blame me? With the way the Jets and Giants play?\"\n\nThat got a chuckle out of her. It was good to see her getting over my wayward finger this soon. \"Are you going to watch the game with me?\"\n\n\"Uhh, why not? I've got nothing else going on.\"\n\n*\n\n\"So,\" I said as we prepared snacks in our small kitchen, \"think your team's gonna win today?\"\n\n\"Pssshh, of course we will.\" Bri emptied a packet of potato chips into a bowl.\n\n\"Someone's confident.\"\n\n\"Yes I am. But that's only because, well, we've won our last four games against them--and drew the one before that. We've got the best player in the world right now in our team.\n\n\"And even though we're playing away, we just crushed our archrivals, Manchester United, five nothing while playing away to them last week. So what do we have to be afraid of?\n\n\"Oh yes, and we're the former champions. I knew covid wouldn't dash my dreams. And West Ham won't stop us from achieving them, again. And did I mention we're still undefeated this season?\"\n\nI laughed.\n\nThis was the result of growing up with two older brothers and one younger, and another thing I adored about my girlfriend. I'm one of those guys who find women with a deep comprehension of sports to be as sexy as Sofia Vergara in nothing but her tiniest thong.\n\n\"I'm not doubting you. I'm just saying, love--you should never count your chickens before they hatch.\" I pulled a few beers out the fridge and a bottle of soda for Bri.\n\nI knew she wouldn't drink alcohol if she planned on writing after the game.\n\n\"Not the best analogy, but I hear where you're coming from. Still, I know we're going to win.\"\n\n\"All right.\" I mulled, placing the drinks on the counter. \"And you're not playing at the...Andfeel, you said?\"\n\n\"It's Anfield. And no, they're playing at London Stadium. Please get me some cheese, uh, lettuce, a tomato, the pickles and the left over bacon in the fridge.\" She turned and walked to the bread bin.\n\n\"Huh.\" I thought, examining her.\n\nShe was only in her Gerrard--whoever that was--red Liverpool jersey and the panties she'd put on earlier. It looked as if she wore a short dress--with sleeves. (Sorry for my ignorance to Liverpool fans that might be reading. I'm just not a big fan of the sport.) It was a sexy look and gave my frustrated cock and I ideas.\n\n\"How are West Ham doing this season?\"\n\n\"Uh, pretty well actually. I think they're fourth...or fifth on the table.\"\n\nThey're doing well and they're playing at their home stadium. Granted, I didn't know a lot about soccer, but I thought these facts would make the game interesting.\n\n\"Dale,\" she said, holding a loaf of bread, \"get the stuff from the fridge. I wanna be done with the sandwiches before the match starts.\"\n\n\"Hang on, I will.\" More thoughts arrived in my head. \"And you're sure your team will win today?\"\n\n\"Well, I don't know if they'll win. But I'm confident.\" She shrugged.\n\n\"Okay. Care to place a little wager on it then?\"\n\nShe eyed me with suspicion. \"What are you up to?\"\n\n\"Nothing. I just think a bet would make the game a lot more interesting for me.\"\n\nShe hesitated. \"What do you have in mind?\"\n\nIf you can't tell by now, anal sex is something I'd long dreamed about with my girlfriend. Who wouldn't with an ass as spectacular as hers? But she'd flat out denied me each time I brought up the subject. She wouldn't do it for my birthday, Christmas, Valentine's Day. Nada.\n\nIf she'd thought oral sex wasn't what good Christian women do, can you imagine her opinion on this?\n\nI thought of the nicest way to voice my thoughts. I didn't want to be crude, but also wanted to be straightforward.\n\n\"Well, I think you know there's something I've been dying to do with you in the bedroom for a while now.\" I noticed worry in her eyes, but continued, \"And I'd be willing to never ask you about it, again. If your team wins, of course. But if they lose, then...well, we get to give it a try.\"\n\nI knew it was a long shot her team would lose the game. But I also believed that's what would entice her to take me on. So what if the horse I bet on lost? At the rate we went at, I knew we'd never participate in any ass play anytime soon. If ever. And this seemed as good as my opportunities would get.\n\n\"Seriously, Dale?\" She frowned. \"Are you this obsessed with anal sex?\"\n\nHonestly--yes. Even when I went online, most of the porn I viewed included anal in one form or another. I couldn't help myself. And I knew she knew that from an awkward discussion we had about my browser history.\n\nThe main video I had to explain involved a naked woman in distress, trapped by thin rope connected to the ceiling and a large hook lodged deep inside her rectum.\n\n\"Well, no, I'm not that obsessed. But I think you know that it's something that I actually would like to try. And it's not like I'm gonna cheat on you to make that happen. So I thought why not put a wager on it.\n\n\"And it really would make the game more fun to watch, by the way. Plus, weren't you all super confident that your team would win today? So why are you so scared all of a sudden?\"\n\n\"I'm not,\" she said as intensity filled her hazel eyes.\n\nEven if my girlfriend couldn't be compared to movie stars, I found her golden-greenish eyes to be beautiful. And isn't that the case about all women? No matter the overall appearance, there's always something or another that makes them attractive.\n\nI was also happy to see I'd provoked Bri's competitive side, which was my goal.\n\n\"But I would like to know what would be in it for me,\" she said. What do I get out of it if my team wins?\"\n\n\"Well, what do you want? I guess you can use a strap-on on me if I lose.\"\n\nShe laughed. \"No. How would that benefit me?\"\n\n\"Name your price.\"\n\nBri gave it thought.\n\n\"Well, if the stakes are as high as anal, then if--no, when my team wins--then you have to clean the dishes every single day for the next six months. No complaining, no fussing, no bitching, no moaning.\n\n\"No excuses like 'I'm tired' or 'I'm busy' or anything else you can come up with. As soon as the sink fills, then you have to get your arse up and deal with it right away. And, just like you said, if we win, then you can never ask me about anal ever again.\"\n\nI mulled over her proposal. She was asking for a lot, considering the odds were against the team I backed winning. But I was so desperate for my girlfriend's gorgeous ass, I felt I had to take this small window of opportunity. Who knew when another would come around?\n\n\"Okay, fine. You're on.\" I stuck out my hand and we shook on it.\n\n\"Okay, now would you open the fridge and get the stuff I asked for.\"\n\nI chuckled. \"Don't worry, I'll make the sandwiches. Go and watch the game. I think it's about to start, anyway. Just take what you can for now.\"\n\n*\n\nOnce I finished with the sandwiches, I picked up the jar of pickles--Bri's favorite fruit/vegetable--then headed to the living room. I heard loud cheering from the TV as I walked. I wasn't sure what had happened, but from the shell-shocked look on my girlfriend's face I knew it wasn't good for her.\n\n\"What happened?\" I said as I took my seat next to her on the sofa.\n\n\"Oh God, we just conceded a goal.\" She dropped her face into her hands.\n\n\"Really now?\"\n\nSurely enough, as I watched the replay, the ball was kicked in from the corner of the field, which seemed to fly past everybody and then went into the back of the net.\n\nIt put a smile on my face. Perhaps my team wasn't as big of an underdog as my girlfriend had implied. Hope filled my heart, but the game had only been on for about five minutes. There was plenty of time for her team to make a comeback.\n\n\"But it's okay.\" Bri shook her body and head. \"The game's far from over. We'll equalize.\" She brimmed with confidence.\n\nIt wasn't easy not to believe her.\n\nThe referee's whistle blew and the players restarted the game. I cracked open a can of beer and picked up a bacon sandwich. Bri opened the jar of pickles, stuck one with a fork and we watched.\n\nMy opinion on sports has always been that every single sport--baseball included--is boring to watch unless you have a team or individual to root for. Which is why, I believe, for the first time in my life I found a soccer game to be interesting.\n\nI oooohed and ahhhed alongside my girlfriend for missed chances at goals. And became a little more interested in learning a few players' names. I only really knew Messi and Ronaldo.\n\n\"So who's the best player in the world you told me about earlier?\"\n\n\"Uhh, wait...That guy.\" She pointed.\n\n\"The one with the afro that hasn't been combed?\"\n\nShe burst out laughing . \"Yep. That's Mo Salah. He's Egyptian, and brilliant!\"\n\nI smiled. \"Well somebody has a crush. I better make sure I keep an eye on him if we ever meet him.\"\n\n\"Shut up.\" She chuckled.\n\nThe game went on and soon the referee's whistle blew. A free-kick was awarded to Liverpool right outside West Ham's goalkeeper area. I didn't think much would come from it. It wasn't a \"penalty,\" which I knew would've been worse.",
        "The commentator said, \"It's Alexander-Arnold. OHHH, BRILLIANT!\"\n\n\"YES!\" Bri jumped up. \"Yes, yes, yes, yes, yes!\" She hopped and clapped. \"I knew we'd come back!\" My girlfriend clenched a fist and pumped it. Then she smiled at me and sat down.\n\nI'd never been hurt more by a goal in my life. I honestly believed her team was too good. It was a great looking goal. Albeit that's coming from someone who hadn't seen too many. Still, I knew it was exceptional, judging by the commentators' opinions.\n\nI managed to smile, though. Despite the equalizer, I was happy she was happy.\n\nThe game restarted once again, and we watched, sitting on the edge of our seat until the half time whistle blew.\n\nI was entertained--forty-five minutes had never gone by quicker--but was worried West Ham wouldn't be able to pull this off. All the hope their goal had given me had been taken away by the free-kick. Momentum was on her team's side.\n\n\"Well, that was interesting,\" she said.\n\n\"Yeah. Liverpool's really that good.\"\n\n\"Tooold yaaaa,\" she sang, smiling.\n\n\"You know the game's not over, right? You're not even in the lead.\"\n\n\"Oh but it's only a matter of time.\"\n\n\"You know, arrogance isn't a pretty color on you.\" I stood, and then, sounding more confident than I felt, said, \"But we'll see what happens. I know we can still beat you.\"\n\n\"We're all allowed to dream,\" she sang, with a big smile.\n\nI smiled back. \"Gotta use the bathroom.\"\n\n*\n\nI grabbed a handful of potato chips and took a swig from my second can of beer as the whistle for the second half went off.\n\nI looked to my right. Intensity had returned to Bri's eyes. She looked nowhere near as relaxed as she had during the break.\n\nI found her enthusiasm seductive.\n\nI gazed at her long silky smooth legs. God, they were stunning, and hardened my cock, somewhat. I placed a hand on her thigh and gave it a gentle rub.\n\nI mulled over the plus side of her team getting the W. It would put her in a good mood. Which meant I could probably get another blowjob from her and drop a load inside her pussy.\n\nThis wasn't too bad of a consolation prize. But I didn't want to be a dishwashing slave for the next six months. Worst of all, anal would be further away from me than ever.\n\nCome on, West Ham, I thought, removing my hand from her leg and turned my attention to the game.\n\nWest Ham had earned another kick from the corner. I crossed my fingers and hoped lightening would strike twice. The ball came in, a West Ham player rose to it, struck the ball with his head and--\n\n\"Ohhhh\"--I launched back into the couch--\"that was so close. It just hit the, the top bar thing. \"\n\nBri chuckled. \"Crossbar.\"\n\nPlay continued. I was back on the edge of my seat. Liverpool skillfully worked the ball up the park. It was passed to the far end of the field. Then the ball got kicked into the goalkeeper's area. \"And Man\u00e9's there!\" the commentator yelled. \"Good save...\"\n\n\"Oooooh.\" Bri ran on the spot, still sitting, as I let out a sigh of relief. \"I thought that was a goal. Man\u00e9's actually our second best forward, after Salah.\"\n\nWe watched, chewed and sipped on our snacks as the ball went back and forth between the teams.\n\n\"You know what; this is actually pretty fun,\" I said. \"I think I'm gonna watch more games with you in the future.\"\n\n\"See? I told you football's a great game.\" She beamed. \"And yes, you're right, this is a lot of fun.\"\n\nMy focus returned to the TV. West Ham had control of the ball. They passed it up until the halfway line of the field.\n\nOne player received the ball and instead of passing, he ran and ran with it. He kept going. I thought he'd get tackled at any second but somehow he got through. He passed the ball forward to a teammate, leaving him practically one-on-one with the goalkeeper.\n\nMy heart hammered.\n\n\"And it's on for Fornals!\" the commentator cried. \"And it's in, it's gone through...\"\n\n\"YES!\" It was my turn to jump off the couch. \"What a goal!\" I said, feeling the same joy as the roaring home crowd. Hope was renewed in my heart. Now if only they could hold on to the lead for twenty more minutes, sweet victory would be mine.\n\nI sat down again and looked over at my girlfriend.\n\n\"I wouldn't look so smug if I were you,\" she said. \"The match isn't over. And trust me, we've come back from much worse than this. Just ask Barcelona what we did to them in the Champions League a couple seasons ago.\"\n\nHer words wiped the smile from my face. Her team did have more than enough time for another equalizer.\n\nThe game restarted and I took another sip from my can.\n\nMy eyes kept shifting to the corner of the screen, to hone in on the game clock as it ticked down. It seemed to move at bullet speed before West Ham's second goal. The opposite was now in effect.\n\nIt was torturous.\n\nI couldn't even enjoy my new hero Fornals' next golden chance at a goal. Although it would've been ruled out for him being \"offside.\"\n\nI didn't bother to ask Bri to explain how the rule works. As fun as the game had been, all I wanted was the final whistle to go off, which was still a while away.\n\nThen something miraculous happened. West Ham earned another kick from the corner of the field. I soon learned it's called a \"corner-kick,\" paying attention to the commentators.\n\nThe ball got whipped in. It flew over Liverpool's goalkeeper. A West Ham player jumped. He nailed the ball with his head and it squeezed past the goal post to his left. The home crowd roared.\n\n\"Oh, yes!\" I jumped.\n\n\"It's Kurt Zouma this time! And it's three, one now!\" the commentator rejoiced.\n\nIt felt as if I'd fallen into a dream. Even I knew Liverpool needing to score two goals in sixteen minutes was a tough ask. And them scoring three for the win? I couldn't see that happening, at all. It looked like the dishwashing duties would be divided as normal.\n\nI smiled and sat down, again. I was on the cusp of having full access to my girlfriend's sweet derri\u00e8re. My smug face returned as I turned my attention to her.\n\nShe didn't want to look my way. Anger, disappointment and worry were blended in her eyes.\n\nI took no joy in seeing her this way. In fact, it made me feel bad. I kept my mouth shut and turned my attention to the TV. There was no need to rub salt into her wounds.\n\nWith West Ham's extra goal in place, watching the game became easier. Time still dragged by--probably not so much for Bri--but I was far less anxious.\n\nBut nothing good in life ever comes easy, does it? Liverpool wouldn't give in and fought hard to find their way back into the game. They passed the ball up the park and managed to get it into the keeper's area. It bounced off a player's foot and popped up into the air.\n\n\"That's on towards Alexander-Arnold...Just couldn't take it,\" the commentator said. \"Origi can! And will...\"\n\n\"YES!\" Bri was back on her feet, clapping. \"C'mon, Liverpool, you can do this!\" She clenched her fists, curling her arms. Then sat down again, still refusing to acknowledge my existence.\n\nI shoulda known it was too good to be true. I palmed my face and watched the replay through my fingers. It was another good looking goal from Liverpool.\n\nYes, West Ham were still in front, but momentum had taken another turn.\n\nMy eyes glued back on the game clock. There were only six minutes left of play. However, I knew it'd feel more like sixty.\n\nBarely able to watch, I instead thought about the consequences of Liverpool finding a way to snatch back one last goal.\n\nThat meant our wager would result in a draw--rendering it null and void. Which wasn't as bad as losing, but would feel that way with how close West Ham were to getting over the line.\n\nBri and I watched with bated breath as minutes dropped off the clock.\n\nMy heart thumped with anticipation as the ninetieth minute came up. YES, they did it! Oh, West Ham, you've just earned yourself a brand new supporter. I smiled.\n\nI expected the referee to end the game at any second, but then learned about \"stoppage time.\" Four extra minutes were added to the game.\n\nWhen will this agony end? I fell back into the couch, placing my hands on my head.\n\nThe clock creeped to the end of play. The tension around the ground could be felt from where I sat.\n\nLiverpool were gifted another free-kick outside West Ham's goalkeeper area. Oh no. Please don't let that Arnold guy take it.\n\nMy wish was denied. He kicked in the ball. It flew over everyone waiting in the keeper's area, except for one Liverpool player who dived and rammed the ball with his head.\n\n\"And Man\u00e9's THERE!\" the commentator cried.\n\nMy heart leaped into my throat as the ball whizzed past the post.\n\n\"AAAAHH!\" Bri screeched like the victim of a stabbing, cupping her mouth with both hands. \"Oh God, that was so clooose!\" She buried her face into her lap as she ran on the spot on her tiptoes.\n\nIndeed it was close. But West Ham were still ahead.\n\nThe clock ticked down as a couple more chances came up, but nothing significant. The home fans whistled, hoping the referee would emulate them. He obliged by placing his whistle to his lips and gave it his final blow. Cheers erupted around the ground.\n\nI raised both my fists over my head in triumph.\n\nBri looked devastated.\n\n\"Wow. That was a really good game,\" I said.\n\nShe sighed. \"Yeah...It was.\" She thought. Then she finally gave me her attention and added with hesitation, \"I guess this means...we have to\"--she exhaled--\"give anal sex a go.\"\n\n\"You say that like it's a bad thing.\" I smiled.\n\nBri stared. \"Please don't make me do this, hon.\" She placed her hands together and gave me puppy-dog-eyes. \"Can't I pay you off in some other way? What if I gave you a blowjob for the Yankees' entire next game?\n\n\"All nine innings. Ad breaks included. No complaints about my jaw being sore. I promise.\"\n\nI pretended to think her offer over. It wasn't a bad one, but--in my opinion--nowhere near as good as what my new soccer team had won me.\n\n\"I'll even let you cum inside my mouth as many times as you want,\" she sweetened the deal. \"I'll swallow everything you give me. I won't waste a drop.\"\n\n\"Hmm.\" I scratched my chin. \"That does sound tempting. But I think you know how much I'd rather do what we already have in place, Bri.\"\n\nSadness filled her eyes. Again, I took no pleasure from it. Although I wasn't about to cave in, either.\n\n\"But it's gonna hurt.\"\n\n\"Actually, I read somewhere online that anal sex isn't really painful. A lot of people only describe it as feeling 'uncomfortable.' Plus, we're gonna use a ton of lube. And if you really do find it painful, we can always stop.\"\n\n\"Fine then.\" She folded her arms, frowning. \"If you really want to end up with shit on your dick, then it'll be the very least you deserve.\"\n\nI laughed, hard. \"That's fine by me. Not a single part of you grosses me out.\"\n\nHer hazel eyes looked up as her facial expression lightened. She looked close to smiling. She sighed. \"When do you want to do it?\"\n\n\"Honestly, if we could do it right now, I would. But I know you have to write your article. How about after you get done?\"\n\nShe gave it thought. \"Okay.\" Bri got up. \"A deal's a deal. I know I wouldn't have allowed you to back out of cleaning the dishes had I won.\"\n\n\"I'll take care of these\"--I pointed at the coffee table--\"and all the dishes in the sink, right now.\"\n\nShe smiled, leaned over and planted her lips over mine. \"Now that's how you turn a girl on.\"\n\n*\n\nAs I washed the dishes, I thought about the best way to enjoy anal with my girlfriend. I knew simply shoving my cock in her ass would be amazing in terms of my pleasure, but I wanted Bri to enjoy herself, too.\n\nIf she did, who knew: it could become a regular part of our sex life.\n\nI washed plates, cutlery, cups and glasses as ideas formed in my mind.\n\nA couple of the items I'd need were already in the apartment. However, I also needed to buy a few more. I normally shop online, but there was no time to wait for everything to arrive.\n\nOnce I finished my chore, I put on a pair of jeans, and then found my phone, wallet, mask and keys. I walked out the apartment, down to the street and hailed a cab.\n\n*\n\nOn my return, I found Bri sitting on the couch with her laptop open. I placed my keys in their bowl, and walked into the living room.\n\n\"Still busy?\"\n\n\"Nope.\" Her head shook. \"Just finished. I'm sending the article to my editor. Only came in here to get a few more details from the recording. Where were you?\"\n\n\"Out to a few stores.\" I walked toward the kitchen and placed the brown paper bag I carried on the counter.\n\n\"And what did you buy?\" She rested her laptop on the coffee table, stood and closed the gap between us.\n\n\"You'll find out in due time.\" I placed my hands on her hips. She was still in her Liverpool jersey, but had added on a pink pair of shorts. \"But for now, I want you to head to the bathroom, run the shower for us and I'll be right with you.\"\n\n\"Really? You want us to take a shower together?\" Her blonde eyebrows rose. \"I thought you'd want to take my poor bottom as soon as you got the chance.\"\n\nI smiled. \"Good things come to those who wait.\"\n\nOnce she was on her way, I stepped into the kitchen, opened a cupboard and fished out two wineglasses.\n\nI pulled out the bottle of sweet white wine I bought at the store from the paper bag. I uncorked it and poured its contents into the glasses. The smell was strong, but good. I placed the bottle and glasses on a tray.\n\nI opened another cupboard, took out the bottle of honey and placed it in the bag. I had everything I'd need. I gathered it all and headed to the bathroom.\n\nI pushed open the door and found Bri removing her lacey black panties. Her soccer jersey and shorts were in the washing hamper, leaving her as naked as a Playboy model. I'd seen her in the state of undress a thousand times. Yet my cock swelled.\n\n\"Wine?\" Her eyebrows rose. \"Is that what took you?\"\n\n\"Uh-huh.\" I handed her a glass and rested the tray on the sink's countertop. \"I thought it might help relax you for the rest of the day.\"\n\n\"You mean help relax me for my buggering.\" She smirked.\n\nI chortled.\n\n\"Why not, though?\" Bri shrugged and took a sip. \"It might actually help.\"\n\nI removed my sneakers, shirt, jeans, watch and boxer briefs. Then I took Bri by the hand and we stepped into the shower.\n\nWater splattered off our skin and cascaded down our bodies. The temperature was perfect: not too hot or too cold.\n\nBri took a swig from her glass and placed it on the knee-high ledge which held our shampoos and soap. With her back to me, I reached for her bottle of shampoo and squeezed it into her long honey colored hair.\n\nThe smell of roses wafted through the air.\n\nI squeezed more of the white liquid into my palm and lathered my hands. I reached up, placing my hands on her head and pushed my fingers through her hair. I slowly and firmly manipulated my fingertips into her skull.\n\n\"Hmmm,\" she moaned with a sigh. \"Well this is nice.\"\n\nA couple minutes passed as I massaged her skull and washed her hair. And once we rinsed out the suds, I grabbed the loofah sponge and coated it in soap. Bri squeezed her hair and placed it over the front of a shoulder. I rubbed circles into her back.\n\n\"Is this your plan? To pamper me so I'll put up less of a fuss when I finally get sodomized?\"\n\nI smiled and scrubbed her back. \"Nope.\"\n\n\"If you say so. Planning on washing my arse, too?\"\n\nNot answering with words, and with a smile I worked the loofah down her back, past the small of it and on to her left buttock. I rubbed it in slow circles before crossing over to her other cheek and gave it a scrubbing, too.\n\nMy free hand reached down and grasped her firm left buttock. I pulled it away from its partner and pushed the loofah between her cheeks.\n\nBri laughed. \"That's not necessary. I actually douched that area the last time I used it.\"\n\n\"You can never be too safe.\" I moved the sponge up and down her crack twice.\n\nWhen I finished cleaning her long legs, I grabbed the bar of soap and hung the loofah on a faucet. I put my arms around her waist, hugging her from behind and placing my cock between her cheeks.\n\nIt couldn't help but harden further.\n\n\"Oh God.\" She tensed up. \"It's about to happen, isn't it?\"\n\nI chuckled into her neck. \"No.\" I pulled my hips back, allowing my erection to point skyward between us. \"Not yet.\"\n\nI circled the bar of soap up her taut stomach, enjoying the soft feel of her skin. I reached her chest and lathered her left tit as my other hand stroked her soapy belly. I locked my lips onto her neck and sucked, pushing out my tongue.\n\nBri moaned, leaned back and pushed her fingers into my brown hair. I ran the bar of soap over and around her right breast as I tongued the side of her neck. I let the soap drop to the floor, pushed both hands up her frame and kneaded her slippery B-cups.\n\nI forced a groan from her as I rolled her nipples between my index fingers and thumbs. My lips worked down her neck as my right hand pushed lower and glided over her mons. I cupped her vulva and I gave it a gentle squeeze before finding her button.\n\nI worked my mouth up her neck and nibbled her earlobe, earning another moan. My left hand massaged her breast and squeezed its hard nipple. Meanwhile, my other hand's middle and index finger rubbed small circles into her clit.\n\n\"Oh, Dale...\" she said, her breathing labored and voice was hoarse, \"you're getting me there.\"\n\nOnce a couple minutes passed, I pulled my lips from her neck, hands from her body and spun my girlfriend on the spot.\n\nShe had a hazy look in her eye.\n\nI placed my palms on her hips and pushed her backward, making Bri sit on the shower's ledge. I kneeled before her and spread her legs farther apart.\n\nShe reached to her left, picked up her glass and took a sip.\n\nI leaned forward, pushed out my tongue and ran it up her wet lips, parting them to a small degree. I've always loved the taste of my girlfriend's pussy. And her natural body scent added to my enjoyment. Going down on her has never felt like a duty, but a sweet treat.\n\nBefore my tongue touched her clit, I slid it the other way until I reached her perenium. I slid my tongue back up her folds and moved it in a slow circle around her clit, making sure I avoided contact. Bri moaned, running her fingers through my hair.\n\nAt a slow pace, I ran my tongue up and down her labia a few times. Then I stiffened it and pushed it through her opening. \"Mmmh. Yes, babe,\" she whispered as I wagged my tongue inside her, moved my head back and forth and fucked her with the organ inside my mouth.\n\nHer moist flavor delighted my palate.\n\nI worked my tongue inside her, up and down her labia and around her clit for about five minutes as the volume of her sounds amplified.\n\nThen, deciding to put her out her misery, I took her clitoris between my lips and sucked.\n\nShe gasped and tightened her grip in my hair. I flicked her clit with the tip of my tongue. She moaned and moistened further. I lifted my right hand and pushed my middle and index finger through her opening as I used my tongue to draw circles on her button.\n\n\"Oh, babe,\" she purred. \"You're gonna make me cum...Just--uhh, just like that. Yes.\"\n\nI made a \"come closer\" motion with my fingers inside her, trying to stroke her G-spot as I licked, kissed and sucked her clit. Bri squirmed on her seat, moaning and groaning.\n\nSoon, her body stiffened before it shuddered as she painfully pulled my hair and let out a loud cry.\n\nNot content with one, I pulled my fingers from her, pushed her legs up and hung them over my shoulders. I dove back in and continued my assault on her clit; kissing, licking, sucking.",
        "Bri squeezed her legs around my neck and enjoyed the ride. She mewed, moaned, groaned, and commended my efforts as her body rippled. And after another five minutes, she announced the arrival of her next big O.\n\nIt's probably some sort of macho thing, but hearing a noisy climax from her has always put a big smile on my face.\n\nSatisfied, I withdrew my lips from her sweet folds and removed her legs from my shoulders. I stood and looked down at her as her chest rose and fell.\n\n\"Not sure I can get up,\" she said, opening her eyes.\n\n\"Well, you're gonna have to in a minute.\" I stepped out the shower and approached the sink.\n\nI opened the cabinet and pulled out the tub of Vaseline I used in the shower on occasion. I grabbed the paper bag on the tray and pulled out a long transparent tube with a nozzle and a blue rubber bag that resembled a hot water bottle. I connected the contraption, lubricated its nozzle and filled the rubber bag with water at the sink.\n\n\"Is that...\" said Bri, squinting her hazel eyes as I stepped into the shower. \"Is that...an enema kit?\"\n\n\"Uh-huh.\" I nodded.\n\nShe looked confused.\n\n\"Well, it's mainly used to help relieve constipation. But can also be used for...cleaning your back passage.\"\n\nBri stared. \"Oh God.\" She closed her eyes. \"And Mum warned me how weird men can be.\" Her head shook.\n\nI chuckled. \"It won't hurt. And it'll be a nice little warm up for later.\"\n\nShe sighed. \"Fine...But I think I'm going to need another glass of wine first.\"\n\nOnce she gulped it down and placed her glass on the shower's ledge, Bri bent over at the waist, placing her hands on the ledge, too. I got on one knee and admired the view of her in this position.\n\nI've said it a hundred times now, but man my girlfriend had a wonderful ass. Unable to control myself, I leaned in, planted my lips over her left cheek and then her right.\n\nMy left hand came up and took hold of a buttock. I pulled her cheeks apart and took a look at her backdoor. I'd seen it a few times during doggie style and cunnilingus, but had never gotten an ideal chance to examine this part of my girlfriend's body.\n\nIt was light brown--a nice contrast with her warm ivory complexion--and had the circumference of a nickel. At the center was the tiniest hole I'd laid eyes on. It looked as if it wouldn't accept anything bigger than a pinky.\n\nAlthough from what I'd seen on the internet, I knew it could take a whole lot more.\n\nI know the term \"asshole\" has never been a pleasant way to describe someone, but staring at hers I couldn't imagine why. I found it beautiful. A part of me wanted to lean forward and have a lick, but I found control.\n\nI lifted the lubricated nozzle of the enema kit and pressed its tip against her rosebud. I was a little jealous of the small piece of plastic--getting the first crack at entering her in this way. But I felt Bri resisting as she tensed up and clenched.\n\n\"Relax, babe,\" I said, almost in a whisper. She let out a slow exhale. I gently pushed the nozzle forward and squeezed it through with a soft squelch. \"See? All the way in.\"\n\n\"Really?\" She looked over her shoulder. \"That's not so bad.\"\n\n\"Told ya.\" I lifted the blue rubber bag, showing it to her, then raised my eyebrows and said, \"Ready?\"\n\nShe nodded. \"As I'll ever be, I guess.\"\n\nI raised the bag higher and gave it a firm squeeze. Water rushed out through its transparent tube, traveling downward, like an IV drip, and pumped into her rectum.\n\n\"Ooooh,\" Bri moaned. \"That feels a little weird.\"\n\n\"In a bad way?\"\n\n\"No. Mmmh. It's just a strange feeling of being filled up. And the water's cold--oooh...I can't believe I'm letting you do this to me.\"\n\nI squeezed and squeezed the bag and was surprised to see how much water easily pumped inside her. I'd researched on my phone--during my cab ride to the pharmacy--on what to do and what to expect. And I'd seen women online taking torrents of water from hoses in their asses. But I still expected more resistance. How much room was back there, anyway?\n\nOnce the bag was empty, I gently unplugged the nozzle and stood. \"You okay?\"\n\n\"Yeah. Just feel kinda full.\"\n\n\"Technically, you are.\"\n\n\"What do I do now?\"\n\n\"Well, I don't think you need to go all the way to the toilet to let it out. We're in the shower. You can just let it go down the drain right here.\"\n\n\"All right. Move aside before I squirt you.\"\n\nI smiled. That wouldn't have bothered me as much as she probably believed. I stepped to the side nonetheless and watched with interest as Bri took hold of her buttocks.\n\nShe spread her cheeks, bent her knees and grunted. Water gushed from her anus in a long thick stream, punching through the water from the spraying showerhead and hitting the floor.\n\nMy cock flexed with fury. Even though I'd seen such images on the internet, watching in person made the experience so much hotter. There was also something about Bri sharing a personal moment like this with me that I couldn't help but love.\n\nI felt closer to her than ever.\n\nAs the water flowing from her ass went down the drain, I noticed it wasn't as dirty as I'd anticipated. Apart from the--as should've been expected--little brown specks here and there, I'd describe the water as clean.\n\n\"How'd it feel?\"\n\n\"Not bad, I'll admit. Actually, it felt kinda nice.\" She sniggered.\n\nHappy to hear her words, I refilled the rubber bag from the showerhead. Our water had turned lukewarm. I got back behind my girlfriend.\n\n\"Think you can take it a couple more times?\"\n\n\"I think so.\"\n\nI spread her ass and reinserted the nozzle. I raised the bag and gave it a hard squeeze. As before, water ran down its tube and entered her bottom, causing Bri to moan.\n\nAfter I squeezed out the last few ounces, I put down the kit, stood to the side and used both hands to pry open her cheeks. I told Bri to let it all out. She crouched lower and moaned as water flowed from her and splashed the floor. It looked even cleaner this time.\n\nI refilled the bag two more times and we repeated the procedure. Water spurted out her ass as clear as it went in. It looked drinkable.\n\nI wanted us to keep going. This was the most fun semi sexual experience I'd encountered in my twenty-six years of life. And Bri seemed to enjoy it, too. However, it was unnecessary and I had bigger plans lined up.\n\nI placed the enema kit on the shower's ledge and turned off the water. We stepped out, grabbed a couple towels and dried off. I handed Bri the other glass of wine, took her by the hand and grabbed the paper bag on the tray.\n\n\"I'm afraid to ask what else you have in there.\"\n\n\"Nothing too scary. I promise.\"\n\nWe walked out of the bathroom, down the short hallway and stepped into our bedroom.\n\n\"Ready for the next part of the adventure?\" I said.\n\n\"Mm-hmm.\" She nodded and took a sip of her drink. \"It hasn't been too bad so far.\"\n\nI took her glass, placed it on the dresser, then grabbed two pillows and stacked them in the middle of our queen size bed. I instructed Bri to lie on top of them at her waist. She removed her towel, dried her hair a little more and got into position.\n\nI picked up my paper bag, pulled out the bottle of honey and then placed the bag by her side. I uncapped the honey and mounted the bed.\n\nBri looked over her shoulder and fixed her golden-greenish gaze on the bottle in my hand. \"And what're you planning with that?\"\n\n\"You'll see.\" I crawled behind her and placed her legs between my knees.\n\nI lifted the honey bottle, squeezed it over her left buttock and then her right. I've always loved my buns covered in honey.\n\nI dived in face first and slid my tongue up and around her right cheek, slowly licking the sweet condiment off. I crossed over to her other cheek and cleaned it spotless with my tongue, too.\n\nBri giggled. \"Enjoy that?\"\n\n\"Definitely.\" I reached for the honey. \"But I think I'm ready for the main course.\"\n\nI placed my left hand on her round little bubble butt and parted her cheeks with my thumb and index finger. I held the honey over her ass and squeezed out a dollop. It dripped between her cheeks and coated her light brown asshole.\n\nIt looked like the most mouthwatering pastry ever.\n\nI tossed the bottle aside, placed both hands on her cheeks and pried them apart. I'd been dying to do this for almost as long as I'd known her. It was a literal wish come true. I moved my face in, pushing out my tongue and ran it all the way up her ass's split.\n\nBri giggled, again. \"Oh God. I'm in a relationship with a pervert.\"\n\nI smiled. \"Like you didn't know that already.\"\n\nMy face dived back in and tongue slid up her ass two more slow times. Then I focused my attention on where the honey was concentrated. I lapped and lapped at her sphincter, enjoying the interesting blend between the sweet condiment and her asshole.\n\nI polished it, and thought about adding more honey, but didn't like how it masked her natural taste. Instead, I continued licking her rosebud, slowing down the movement of my tongue. I circled her ring with its tip as my hands massaged her cheeks.\n\nBri moaned her feelings into the mattress.\n\nWithout the honey in the way, I was able to get a better feel of her sphincter. I couldn't help but enjoy the bumpy feeling of her ridges. It was a unique part of the skin. I also enjoyed the way her asshole tightened and loosened at my inquisitive tongue.\n\nI stiffened it and pushed at her tiny opening. It resisted me, but I remained persistent with my prodding. Bri groaned as the tip of my tongue penetrated her half an inch deep.\n\nI wiggled it inside her and stimulated the nerve endings inside her anus. Judging by her moan, my girlfriend liked the feeling.\n\nI'd never eaten ass before, and a part of me believed it would probably leave a bit of a nasty taste in my mouth. But I found no such drama. I shouldn't have been surprised given how thoroughly we'd cleaned this area, but was surprised to find out I actually enjoyed her earthy flavor. Go figure.\n\nI spread her cheeks farther apart and tried to drive my tongue deeper. I didn't make much headway, though. I only managed to squeeze it about an inch inside. The flexible structure of my tongue wasn't ideal.\n\nI wiggled it inside her and extracted a throaty groan from Bri as her breathing deepened. I wondered if I could get her to cum this way, but there were other ways to try and make that happen. I wiggled my tongue for a few more seconds before I pulled out and stood on my knees.\n\nBri's back rose and fell as she recovered.\n\nI reached for my paper bag and pulled out the tube of thick-water-based lube I bought from a sex shop. It got a high recommendation from the store's manager. I also pulled out the purple toy I bought from the same store and took it out its box.\n\n\"What's that?\" she said over a shoulder.\n\n\"Just a butt plug.\" I held it up for her to see.\n\n\"That looks a little bigger than everything that's gone back there today.\"\n\nI noticed the worry in her eyes.\n\n\"I know. But the lady at the store said it's a good size for beginners. They had bigger ones. Plus, I read on Reddit that it's a good idea to start off with toys and such before you take on the real thing.\"\n\nShe thought. \"Okay...Where's the lube?\"\n\n\"Right here.\" I showed it to her. \"I'm gonna need you on your back. It'll make things much easier for you.\"\n\nAs she removed the pillows from underneath her frame, I uncapped the lube and squeezed it onto the butt plug. I used my fingers to coat the toy's entire bulge. I liked the thick durable feeling of the liquid.\n\nWith Bri on her back and her head by the headboard, I moved in closer and told her to lift her legs to her chest and bend her knees. I got on my stomach and used the excess lube from the plug to coat my middle and index finger.\n\nI placed the tip of my index against her rosebud and moved it in circles. \"Just gonna start with a finger first, all right?\" I looked her in the eye.\n\n\"Okay.\" She gave me a small nod. She looked nervous.\n\nI pushed my finger forward, which caused her to clench up as she closed her eyes. \"Babe, relax. Just like with the nozzle in the shower. The pain is all in your head.\"\n\nI watched her take in a few deep breaths, and as she let one out I pushed my finger forward. It was met with resistance from her tightness, but after a couple seconds her asshole yielded and accepted my digit.\n\n\"Mmmmh.\"\n\nI pushed in until the first knuckle. \"You okay?\"\n\n\"Mm-hmm.\"\n\nI pushed deeper until her sphincter was locked around my second knuckle, tightening and loosening. It almost felt like someone was sucking on my finger. I inched it farther and farther in until my finger pushed all the way through. Bri grunted.\n\n\"How's it feel?\"\n\n\"Uh...less awkward than I thought it would be,\" she said, opening her eyes.\n\n\"You'll get used to the slight discomfort in a minute.\" I wiggled my finger, enjoying the strange feeling of her insides and then pulled out from her asshole. When her ring locked around my first knuckle, I pushed forward, again.\n\nFor the next two minutes, I inserted and extracted my index finger from her, wiggling it from time to time, relishing the warm sensation of her rectum. At first, Bri groaned and grunted softly as her asshole nibbled on my digit. Then she let out a hum with every deep breath as she accepted my presence.\n\n\"Ready for another finger?\"\n\n\"Well, I've just gotten used to one\"--she sighed--\"so why not?\"\n\nI withdrew my finger until only the tip was left. I placed my middle finger at her rosebud and squeezed its tip alongside my index finger's. As gently as before, I drove both my digits through her sphincter.\n\nBri cooed as I maneuvered them.\n\n\"Mmmmh. Not so...hmm...bad.\" Her breathing was deep and relaxed.\n\nAfter two more minutes, I withdrew my slippery fingers with a squelch. I grabbed the purple sex toy and placed its tip at her backdoor. \"Remember to relax, hon, and stretch your legs a little wider.\"\n\nBri pulled her long legs farther apart and as she let out a deep breath, I pushed the plug forward. She closed her eyes with a raspy moan as the thick lubricated toy slowly pushed through her sphincter.\n\nMy eyes honed in on its entry. It stretched her hole into an O about two inches wide before it got swallowed whole. My cock flexed underneath my midsection. I pushed the plug in a little farther, flattening its round back end between her cheeks.\n\n\"Is it all in?\" Bri opened her eyes.\n\n\"Uh-huh. And there's also something a little unique about this toy.\" I reached for the box it came in and pulled out a small remote control. I pressed its power button.\n\n\"Oooooh.\" Her back arched as her feet planted on the mattress. \"It vibrates.\"\n\n\"Feel nice?\"\n\n\"Well, it's not the same as a vibrator feels on my vagina. But I like it.\" She smiled.\n\n\"And the vibrations on this are adjustable.\" I pressed the little plus sign button on the side of the remote a few times, which caused a loud, muffled buzzing sound.\n\n\"Ooooooh.\" Her back arched. \"Not so--mmm--high now.\"\n\nI pressed the minus button three times. The buzzing died down.\n\n\"Mmh, much better,\" she sighed.\n\nI lay on my stomach once more, moved my head over her vulva and ran my tongue up and down her wet slit, savoring her taste. I locked my lips on her swollen clit and sucked. Bri let out a hoarse cry.\n\nI licked her clit, pushed my middle finger through her walls and curled it, stroking the roof of her pussy.\n\n\"Mmnghh, babe, hold on.\" She breathed hard. \"I'm feeling...ahh, a little overstimulated right now. Let me take care of you for a second.\"\n\nOnce I removed my lips and finger from her, we switched positions. I sat in the middle of the bed and leaned back to rest against the wooden headboard. Bri was on her knees and forearms with her curvy derri\u00e8re raised high in the air.\n\n\"Look how hard this thing is.\" She took hold of my erection and looked me in the eye with a smile. \"It must be dying for some attention after everything you've done to me this afternoon.\"\n\nShe had no idea how right she was. My cock was furious with my patience.\n\nBri opened her mouth, stuck out her tongue and ran it up the front of my shaft, licking the tip and pulling away a thick string of pre-cum. Her smile showcased her teeth. I smiled back, moved her damp hair behind her shoulders and pushed my fingers through her golden locks.\n\nBri dropped her head, took in my glans, sucked hard and swished her tongue. I enjoyed her enthusiasm. She sucked my cock in deeper, taking in an eyebrow raising four inches of length.\n\nShe pulled up, slurping, and when only my cockhead remained between her lips she took in as much as she could manage. She repeated this two more times. Then her head bobbed at a fast pace as her hand stroked the last few inches of my shaft.\n\nI closed my eyes and enjoyed her skills alongside the delightful sound of her slurps. It sounded as if she was in a rush to finish a bowl of soup. I loved it. And then, surprisingly, her bobbing gained speed.\n\nI wondered what had come over her. She hadn't been this eager in weeks. Perhaps it had something to do with how I'd performed earlier with my tongue. Bri was one of the many women who like to reward a good licking. Maybe it had something to do with the humming toy inside her anus--which I liked to believe. Or maybe it was the wine, or a combination of it all. Either way, it was magical.\n\nAs her quick bobs continued, I thought about offloading inside her mouth. I'd been waiting for an orgasm for hours. But I knew she wouldn't be happy if I did it without notice. Although her mood left me unsure. It didn't matter, anyway. I wanted to save all I could for her backdoor.\n\nBri pulled me from her soft lips with a pop and made eye contact. \"Wanna throat fuck me today?\"\n\nI gave her another smile. \"What's gotten into you?\"\n\n\"I dunno. I'm just horny right now.\"\n\nWhile I climbed off the bed, Bri moved to the side of it and lay on her back, hanging her head over the edge. I stepped in front of her, taking hold of my cock.\n\nI bent my knees and grabbed a tit. She opened her mouth. I guided my cock in and took hold of her other breast. We hadn't done this in a few months. It was our go-to position whenever Bri wanted to take me as deep as possible.\n\nAt a slow speed I thrust my hips and pushed my erection past her tongue, which brushed the top side of my shaft. This felt different--in an odd but good way.\n\nI pushed deeper as I squeezed her perky apples for tits. They might not have been big, but felt great on a woman in her youth. I kneaded them and rolled her nipples between my fingers. The soulful moan I withdrew from her throat felt wondrous on my cock.\n\nI retracted my hips and before my full length could escape her mouth, I slowly thrust forward again, pushing most of my erection past her lips. Seconds ticked by as I thrust.\n\nI gained speed, pushing deeper and deeper.\n\nMy balls soon bounced off my girlfriend's face as I fucked her mouth and played with her tits. I wasn't always this vigorous with her, but knew it's what she wanted. Her hands were firm on my ass and jaws stayed wide open as she accepted my sharp thrusts.\n\nThe squelching sound of my plunges with her gags spurred me on. \"Ahh. Yeah, babe. This is fuckin' great.\" I groaned.\n\nOn any other day, I would've kept going for a little while longer, but felt an imminent orgasm. Plus, her hot mouth had driven me to my breaking point. I couldn't wait any longer. I wanted her ass--now.\n\nI thrust my hips a few more times, trying to lodge my cockhead inside her esophagus. Then I pulled out from her sweet lips.\n\n\"Had enough?\" Bri looked up and into my eyes.\n\n\"Yep.\" I wiped my forehead. \"I'm ready for the main event.\"\n\nShe rolled onto her stomach. \"It was only a matter of time.\"\n\n\"You still scared?\"\n\n\"Not as much as before, but I'm still gonna need one more glass of wine before we start, please.\"",
        "On my prompt return from the bathroom with the wine bottle, I refilled her glass. Bri sat on the edge of the bed, examining her butt plug's remote control while rubbing her pussy. I handed her the glass. She took it down in three swigs and then placed it on the dresser.\n\n\"Okay, let's do this.\" Bri scaled the bed and got on all fours with her feet hanging over the edge.\n\n\"Um, wouldn't you prefer missionary position? It'll make it easier for you.\"\n\n\"Nope. I'm a big girl. I can handle it.\"\n\nAs you wish. I moved behind her and placed my hands on her firm cheeks. I slid my thumbs to where they were held apart by the purple plug and pushed them farther open for a better look. It was one sexy view.\n\nI locked my fingers on the toy and slowly pulled. She moaned as it stretched her little hole. Her sphincter widened and locked around the widest part of the plug. It slipped out with a pop.\n\n\"Oooh,\" she groaned. \"That almost felt like I was on the toilet.\"\n\nI stood upright and shook myself out the trance of watching her asshole reseal. Fuck, that was so hot.\n\nI tossed the vibrating toy on the bed, closed in on Bri and placed a hand on the small of her back. I took hold of my shaft with my other hand and guided it forward.\n\nIt dawned on me this was it. I'd finally get to know what anal with my beloved girlfriend was like. My heart thumped with excitement.\n\n\"Mind taking my pussy a little before you start? I'm in the mood.\"\n\nI paused. \"You know now that I think about it; I actually forgot to lube up.\"\n\nFeeling somewhat disappointed her ass would have to wait, I aimed lower and squeezed my glans through her opening. I took hold of her flaring hips. Both of us moaned as I thrust and stretched apart her inner walls. I pulled out without haste and then pushed forward with control.\n\nI have to say, fucking my girlfriend has always been a pleasant experience. Her pussy fitted my cock like a glove. She was tailor-made for my girth.\n\nThe rock of my hips continued.\n\n\"Babe. C'mon. I want it hard right now.\"\n\nI considered. Even though my trip to the bathroom had cooled me down, I knew a fast pounding rhythm wouldn't take long to send me over the edge.\n\nHowever, I couldn't turn down her request. My stupid macho man pride came into play. That primal instinct to fulfil your woman's every whim in bed had the wheel. I thrust my hips with authority.\n\n\"Ahh. Yes. Just like that,\" she said as my pelvis slammed against her ass. I withdrew and once only my cockhead remained between her labia I thrust forward again, eliciting another groan from Bri.\n\nI kept going, plowing into my girlfriend at a medium paced but forceful rhythm, tugging her hips to crash into her meaty cheeks with my pelvis.\n\nHer moans, grunts, groans and cries of delight only egged me on. I thrust harder, faster and deeper, loudening the fleshy sound of our bodies coming together.\n\n\"Ahh! Yes, babe. Just like that. Oooh...Yes!\" she cried as her head snapped back at every insertion of cock.\n\nMy hips thrust. Our flesh slapped. My girlfriend whimpered. And my erection threatened to tear at the seams. It was too much. If I could've kept steaming ahead, I would have, but had reached my limit.\n\nI knew my ego would lead me astray.\n\nI felt my balls churn and erection stretch to its fullest extent. A tsunami of euphoria crashed over me. My grip on her curves tightened. I yanked her hips, thrust and groaned.\n\nMy cock pulsated between her velvet wet lips. My semen gushed out and flooded her inner walls. My euphoric high intensified and hips bucked on her buttocks.\n\n\"Ahh, fuck,\" I cried.\n\nI let out a loud exhale and once my last few spurts were sent on their long trip to her ovaries, I slowly pulled out with a squish. Some of my semen ran down over her clit, trickled to her mons and dripped to the sheets. It took a few seconds for my senses to return.\n\n\"Sorry about cumming so quick there, babe. I've been waiting for that orgasm for a while now.\"\n\n\"It's okay. We can go again when you're ready.\"\n\nWe moved to the middle of the bed and lay in our nudity on top of the covers. Her head rested on my chest and shoulder. My arm had traveled around her back and hand had stopped on her waist. Her arm lay across my stomach and leg lay on top of my own. We cuddled and enjoyed each other's warmth in silence.\n\nMinutes of relaxed breathing passed.\n\n\"You know what, babe,\" I said, \"I've been thinking.\"\n\n\"About?\"\n\n\"This whole thing hasn't been sitting right with me.\"\n\n\"Huh?\"\n\n\"This whole bet thing.\"\n\nHer head moved and she looked me in the eye. \"What are you on about?\"\n\n\"I'm talking about the prize that soccer game won me today. As much as I want it, I don't really like how I'm getting it. It feels like I'm forcing you to do something you don't want.\"\n\nBri thought. \"I don't know what you want me to say.\"\n\n\"Nothing, really. I just wanted to let you know--that I'm out. We don't have to have anal sex, anymore.\"\n\nShe paused, thinking. \"Why the sudden change of heart?\"\n\n\"Like I said, it just doesn't feel right. It hasn't actually felt right not so long after I won the bet. I think my urge for anal was just so strong...I was kinda able to...block that voice out. But as I lay here with you, like we normally do, I realize just how much I care about you, and have always cared about you.\n\n\"My job is to make you feel safe and protected. Not terrify you. And if that means I have to sacrifice this one little thing to make sure that happens...so be it. Your happiness should--and will always be my highest goal.\"\n\nBri went quiet.\n\nThen she squeezed my frame and said, \"Thank you, babe. I really appreciate you saying that. You don't know how much it warms my heart.\"\n\nI smiled.\n\n\"Oh and Dale...\"\n\n\"Yeah?\"\n\n\"I love you.\"\n\nI smiled, again. \"I love you, too, babe. Always.\" My face moved in and we kissed.\n\n\"Although,\" she said as our lips parted, \"I do wonder when you Americans will finally learn the difference between 'lay' and 'lie.'\"\n\n\"Oh here we go again.\"\n\nWe chuckled and then reunited our lips. She stroked the side of my face as our mouths smacked. Then we pulled apart and reclined, cuddling.\n\nSoon, my eyes closed.\n\n*\n\nI lay in my bed, seemingly alone, falling in and out of sleep. I looked down and noticed a girl without a face between my legs. Even though she had no discernible facial features, she found a way to smile. Her head dropped and this mystery woman took my limp cock inside her mouth.\n\nThat was the clue I needed. I wasn't always good at realizing this, but it became obvious I was in a dream. There was no way anyone other than my girlfriend would take me between her lips. Sure, it was possible. But it wasn't something I'd planned on any time soon.\n\nNow if for some weird reason, a random woman found me alone somewhere and then decided to get on her knees, pull out my cock and gave me a blowjob, I do believe I would have found the self-control to put a stop to it.\n\nHowever, given the woman in question was a faceless girl from a dream world, I lay back and allowed the bob of her head.\n\nBri had my absolute loyalty in real life, but in the land of my mind, all bets were off. This was as far from cheating as stroking my cock to thoughts of Scarlett Johansson in her Black Widow attire.\n\nMy cock flexed and steeled between the mystery girl's jaws as she sucked. She was gifted with an abundance of talent. Her mouth had no issues taking in my entire length.\n\nI loved the realistic feeling this dream delivered.\n\nThe girl's head bobbed. Then I felt my body rouse as my mind got pulled from the dream. Typical. This always happened before I could get to the best part. I tried to focus my mind and stay in the dream. And somehow, I managed to pull it off.\n\nThe faceless girl came into view as her head moved, deep-throating my cock with her soft hand on my balls. I placed a hand on top of her head and enjoyed her hot wet mouth. She slipped from my fingers with a smile. She grasped my cock and stroked it, deciding to switch to a hand job.\n\nThis made no sense. Why go back a step in foreplay? I tried to tell her using her head would be better, but my words refused to depart my mouth. I felt my body rouse again, dragging me from the dream. Dammit.\n\nI tried my best to stay in, but my mind got yanked further and further. It was hopeless. Somehow, though, I still felt the faceless girl's hand slowly moving up and down my erection.\n\nIt felt good. I tried to enjoy the sensation while it lasted.\n\nThen my eyes creaked open long enough to take in a blurry but recognizable face. I opened them, again. It took a moment for my vision to clear. Bri's smiling face came into focus.\n\nShe was as naked as I'd last remembered seeing her. Her hand was around my hard cock, stroking.\n\nWas she the faceless girl in my dream? It made sense. Her hand felt odd somehow, though. Its movements were too slick. How much pre-cum had she managed to extract?\n\nI yawned. \"What's going on?\" I said, my voice hoarse.\n\n\"Wake up, sleepy head,\" she whispered, moving closer. \"Nap time's over now.\"\n\nI turned my eyes to the sheer curtained window. It looked darker outside, but there was still light.\n\n\"How long was I out for?\" I rubbed my eyes.\n\n\"About an hour or so.\" She straddled my abdomen, lean forward and planted her lips over mine. \"Your orgasm took a lot out of you. I felt it.\"\n\nI chuckled.\n\nHer face moved in and merged our lips. She placed her hands on the sides of my face and I placed mine on her waist. Our lips smacked together as our mouths widened.\n\nI pushed my tongue past her lips and found hers for a dance. I slid my hands around her hips and grasped her silky bottom. Our tongues moved back and forth between our mouths as our lips smacked.\n\nBri pushed her one hand's fingers into my brown hair and played with it. I closed my lips on her lower one and sucked. Then I worked my tongue back into her mouth and reunited it with hers for another dance.\n\nShe moved her other hand behind her back and grasped my erection. I moaned into her mouth. Her soft hand maneuvered up and down my shaft before pointing its head toward her nether regions.\n\nShe pushed her hips back and slid my glans between her firm cheeks. Her tongue pushed past my lips. She shifted her hips farther back and squeezed the rest of my shaft through her cheeks. My cockhead strained against her sphincter.\n\nI pulled my lips from hers and looked into her hazel eyes. \"Babe...what are you doing?\"\n\nShe exhaled. \"Nothing I don't want.\" Bri closed her eyes and pushed her hips. I felt my cockhead apply greater pressure to her rosebud. She let out a deep breath.\n\n\"Mmmh,\" Bri moaned, tightening the seal of her eyes as my glans popped through her barrier.\n\nHer tightness sent ripples throughout my body. My heart rate ascended. She pushed her hips farther back with another soft moan, taking in a full inch before stopping and breathing.\n\nI felt the need to tell her she didn't have to do this, but decided to zip my lip and appreciate her gift. I closed my eyes with a moan of my own. The sensation her asshole provided was incredible. I knew nothing like it. No wonder anal was loved the world over.\n\nMy girlfriend squeezed in another inch as a concern came to mind. \"Hold on,\" I said, opening my eyes. \"Are we using any lube?\"\n\n\"Mm-hmm.\" She nodded. \"I took care of that while you were asleep...Oooh,\" she moaned as her ass swallowed an extra inch.\n\nShe wore a look of discomfort on her face. For some primal reason, it intensified my erection.\n\nAt a careful pace, Bri pushed her tight hole down my cock, moaning her way through the initial phase of penetration. I sat as if an artist painted my picture. I wanted her in complete control.\n\nShe pushed lower and grunted as her ass flattened on my groin. Bri remained in place, allowing her bottom to acclimate to my girth.\n\nBeing all the way inside her rear hole was the greatest feeling you can imagine. I wouldn't have minded letting her get used to having cock in her ass if it took all night.\n\n\"How's it feel?\" I said.\n\n\"Umm, a little like I'm taking a poop, to be honest. But in a nice way.\"\n\nAfter ten to twenty seconds, Bri pushed up with a groan, sliding her clenching sphincter up my cock. When my swollen glans fought back from exiting her backdoor, she placed both hands on my chest and slowly pushed down, again.\n\nHer eyes were closed and her facial expression transitioned to a blend between pain and pleasure. The look was sexy as hell. I slid my hands to her hips. Inch after inch entered her tight passage, which ended with another grunt as she bottomed.\n\nSeconds later, she pushed up, starting the process all over. Slowly she took my cock in and out her ass, moaning and groaning her way through the throes of first time anal.\n\nI, on the other hand, sat back and soaked in her efforts: the glorious sensation her forbidden hole provided, the sounds that came from her mouth, and the looks of joy and anguish on her face.\n\nIt was one heck of a moment in time that branded a permanent imprint in my memory.\n\nI loved being the lucky man chosen to share this experience with her. In fact, I just loved my girlfriend.\n\nAs she maneuvered her ass up and down my cock, her pace accelerated. She'd gotten past the initial phase of discomfort. Her moans turned into those of pure bliss as she bounced on my lap.\n\nBri removed a hand from my chest and placed it on her crotch. \"Mmh, yes,\" she said, rubbing her clit.\n\n\"That's my girl.\" I smiled, loving to see her enjoying herself.\n\nShe kept at it, bouncing on my lap and picking up speed. Soon, she rode my cock like a cowgirl on a bucking bull. She looked as if she'd taken part in anal for years.\n\nI became grateful for my orgasm from earlier. If not for it, this all would've drawn to a fast conclusion.\n\nSeeing she'd gotten used to taking me in the ass, I bent my knees and thrust my hips to meet her frame each time she dropped.\n\n\"Ahh. Fuck. Yes. Yes. Yes. Yes. Yes. Yes...\" she cried each time our flesh slapped, rubbing her rosy vagina.\n\nHer nipples looked harder than my high school calculus tests. I reached up and tweaked them as I cupped her tits. I felt her pussy juices dripping to my shaft. I thrust with more force.\n\n\"Ooooh. Ohh my God. Fuck!\" she cried. Her rectal walls clamped and loosened on my erection. I felt her body quiver. She let out a cry loud enough to be heard a block away as a water-like substance gushed from her pussy and soaked my groin.\n\nThis was brand new.\n\nA few more squirts gushed out as her bouncing frame slowed down alongside her hand's movements on her pussy. \"Oh my God,\" she said with a spasm as her eyes rolled.\n\nI was glad she enjoyed her climax, but it wasn't time for us to stop. Deciding to take over, I sat up and made her hug her arms around my neck. I placed my hands behind her thighs and lifted my hips and her legs as I wrestled her to the opposite end of the bed.\n\nI repositioned my hands under her thighs, pulled them up toward her chest and slung her legs over my shoulders. With Bri comatose, it felt like manhandling a body. And somehow I did it all without dislodging from her rear.\n\nI slid my hands under her arms and grasped her shoulders. I pulled on them and thrust my erection. Bri groaned as her body showed signs of life.\n\n\"You okay?\"\n\n\"Mmmh,\" she moaned with a nod. \"Ahhh,\" she groaned.\n\n\"You like having my dick inside your ass?\"\n\n\"Mmmh.\"\n\n\"Who's my good girl, Bri?\"\n\n\"Ahh,\" she groaned as I thrust and then exhaled, \"...I am.\"\n\n\"Who's my good little girl?\" I pulled her shoulders. \"Who's my good little girl who takes daddy's dick deep inside her asshole?\"\n\n\"Mmmh...I am.\"\n\n\"Does daddy's dick feel nice in your ass, hon? Do you like having daddy in your little bottom?\"\n\n\"Ohhh,\" she cried as my cock plunged deep. \"Yes, daddy...I doooo. Ohh. Oh God, yes!\"\n\n\"Are you gonna take daddy in your little bottom from now on?\"\n\n\"Mmmh...Yes, daddy.\"\n\n\"Are you gonna let daddy fuck you in the ass every night from today?\"\n\n\"Nnngggh....Yes, daddy. I promise.\"\n\n\"That's my good girl.\"\n\nI moved my head in, locked my lips on her neck and sucked. Bri cried. I whispered more dirty thoughts in her ear as I pulled on her shoulders and thrust my erection into her asshole, piledriving her with energy.\n\nMy speed only increased. I pounded her ass into the mattress and clapped our flesh. Bri's frame rippled. She moaned, groaned and grunted as her voice croaked, \"Yes, baby, yes. Fuck my little arsehole.\"\n\nI didn't relent. I gave her everything I had. I thrust hard, fast and deep, causing the fleshy sound of our connecting groins to ring around the room alongside Bri's cries and whimpers.\n\n\"Oh God. I can't believe I'm cumming, again.\" Her golden-greenish eyes rolled to the back of her head with her mouth wide open.\n\nHer asshole attempted to chop off my cock as her body shuddered and juices flowed from her pussy, soiling the sheets. I slowed the rhythm of my thrusts to savor the tightening sensation from her ass. It felt wondrous.\n\n\"Babe, switch positions,\" she said. \"Ahh...I want it from behind.\" Her chest ascended and crashed.\n\nI pulled my cock out with a squelch. It wasn't happy to exit the tight warm space of its new favorite destination. Bri turned over and hoisted her bubble butt high in the air, leaving her head low.\n\nI placed my hands on her cheeks and parted them for a look. Her asshole gaped into a small O.\n\n\"Babe, be quick,\" she said.\n\nI got upright and grasped my cock. The anal lube she'd stroked on during my nap worked great. There wasn't any need to apply more. I placed a palm on the small of her back and squeezed my glans into her rectum with a moan from my girlfriend.\n\nI'd read doggie style wasn't the easiest position for beginners of anal sex, but I didn't think she needed any slow warm-up thrusts. Bri had taken to anal like a duck to water.\n\nI took hold of her curving hips and thrust. Her hand clutched the sheets as she let out a cry. She gasped as I pulled out and then whimpered as I plowed in, yanking her hips.\n\nI kept chugging along, withdrawing until only my cockhead remained within her asshole and thrusting until my balls slapped her wet folds. My girlfriend took it like a champ and urged me to take her harder.\n\nI gave it my best.\n\nIn an attempt to spice things up, I straightened my arms and pushed down on her hips to get on my haunches and thrust into her from a more acute angle.\n\nThis might've made for better viewing for an observer, but I couldn't generate as much power from my hips. I gave her a dozen and then leaned farther over, bending my arms and widening my stance.\n\nI pulled on her hips and used my planted feet to plow into her sphincter. Bri loved it and voiced her emotions into the mattress. Finding it difficult to maintain the position, I switched back to my knees and continued plowing.\n\nFrom my time on the internet, I'd always wanted to try fucking an ass in that position--and a lot of others. But traditional doggie was much easier and plain better. Without the need for a balancing act and with my ability to withdraw farther, I thrust into Bri with gusto.\n\n\"Ahhh, yes, Dale. Just like that. Keep taking my fuckin' arsehole.\" She gritted her teeth. \"Harder, please, babe. I'm almost there, again.\" Her voice pitched up.\n\nMore than willing to please, I increased the intensity of my pumps. Sweat trickled down my face as I buttfucked my girlfriend. She moaned, groaned, grunted, whimpered and let out cries of praise.\n\nI wanted to outlast her next orgasm, but the erotic sounds she made combined with the friction from her ass were to great to overcome.",
        "I slowed my thrusts to strengthen their impact. Her meaty buttocks jiggled. Our flesh echoed throughout the apartment. My girlfriend cried. And my orgasm bubbled.\n\nI fell forward, collapsing our bodies on the bed. I gave Bri a few more hearty thrusts and stayed deep within her on the fifth. I groaned as my cock pulsated and euphoria hailed over my being. My glans lurched and spewed and coated my girlfriend's bowels.\n\nI felt her frame shudder beneath my weight as her asshole clenched my erection and sucked out my semen.\n\nI'd died and reached heaven.\n\nEven in my delirious state of mind, I heard the sound of our sheets getting soaked. I also heard Bri using words, but didn't catch her message.\n\nI was lost in my own beautiful world.\n\nI kept my cock deep inside her, giving her innards every ounce my cock could muster. When my sack was drained and my senses slowly returned, I knew at that moment more than ever; Someday, I'm going to marry this girl.\n\nI lay on top of her for a minute as my cock contracted and our breathing regulated. I climbed off her frame. We moved our heads to the pillows and cuddled in the spooning position.\n\nI closed my eyes with Bri's lower breast in my hand, her buttocks against my groin and her rose scented hair in my face.\n\n\"Think church is gonna be awkward for you tomorrow?\"\n\nShe thought. \"Why do you ask?\"\n\n\"'Cause of how many times you took the Lord's name in vain today.\"\n\nShe chuckled. \"Well nobody's perfect. And my sins will be forgiven...Plus, it's Sunday. Church was today.\"\n\nI considered. \"Oh yeah.\"\n\n\"I only didn't go because I was anticipating the game.\"\n\nA moment passed.\n\n\"Babe...\"\n\n\"Yeah?\"\n\n\"Thanks for doing that for me.\"\n\nShe reached back and stroked the side of my face. \"No need. I honestly think I enjoyed it more than you did. I can't believe I came three times and how intense my orgasms were...I never knew I could squirt.\"\n\n\"Me neither.\"\n\nShe giggled. \"Now that I think about it, I actually want more anally induced orgasms in the future.\"\n\nMy eyebrows rose. \"Really? You do?\"\n\n\"Yes.\" She giggled. \"Isn't that what you want? I thought 'daddy' wanted to fuck me in the arse every night from now on.\"\n\nI smiled. \"Yeah, but...I was only saying that to keep things interesting.\"\n\n\"I know. Also, every night would be a bit much. But every now and then--it does sound like fun. Would you like that...daddy?\"\n\nI chuckled and felt like one of the luckiest guys on the planet. \"I'd love it.\" I held her tighter and we cuddled in silence for a moment. \"Babe...\" I said.\n\n\"Yes?\"\n\n\"You're the greatest.\"\n\n\"I know.\"\n\nI chuckled. \"By the way, what made you change your mind? Did it have something to do with the butt plug?\"\n\nShe laughed. \"No. Although I did enjoy that. But...well, it's not always the man's job to ensure his partner's happiness.\"\n\nBri and I lay still and in silence for fifteen to twenty minutes before she stirred and said, \"It's about that time to make dinner.\"\n\nShe got out of bed and walked to the closet. She pulled out a white tank top and a long pair of pink and white pajama bottoms.\n\n\"We can always order food in,\" I said.\n\n\"No.\" Her head shook. \"I'm in the mood for a home cooked meal tonight.\" She pulled up her bottoms. \"You stay in bed and rest. I'll call you when I'm done.\"\n\n\"I got the dishes.\"\n\nShe smiled, walked over and gave me a kiss. Once she donned her top, Bri headed on her way to the kitchen. I lay in bed and reflected on the last few hours.\n\nIt had been one hell of a day, filled with all kinds of little twists and turns, all culminating into the greatest sex I'd had in my life. Plus, there was more on the way. The future looked divine.\n\nMy cock swelled as I thought about how it had been to enter my girlfriend's wonderful ass. Mischief soon came to mind. I climbed off the bed and walked out the bedroom without bothering to get dressed.\n\nI walked through the living room and spotted Bri by the kitchen counter. She stood by the stove and wore an apron, slicing vegetables on a cutting board. I walked behind her, placed my hands on her waist and kissed the side of her neck.\n\nShe suppressed a laugh. \"Don't you ever get satisfied? Babe, I'm busy.\"\n\n\"I know,\" I whispered. \"Just...keep going.\"\n\nBri continued slicing her green bell pepper as I licked and sucked her neck. I slipped my thumbs into her waistband and slid her bottoms down to her thighs.\n\nI nibbled her earlobe, grasped my erection and squeezed it through her firm cheeks. I tightened my glans against her asshole and took hold of her hips. I pulled them out and thrust.\n\nBri groaned.\n\n* * * *\n\nThank you for reading. Hope you enjoyed the story.\n\nAll votes, comments and favourites are appreciated.\n\nMD"
    ],
    "authorname": "Mostdefinitely",
    "tags": [
        "wager",
        "bet",
        "anal virgin",
        "butt plug",
        "enema",
        "first time",
        "first time anal",
        "girlfriend",
        "rimming",
        "salad tossing"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-bet-117"
}