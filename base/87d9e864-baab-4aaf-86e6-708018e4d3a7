{
    "title": "Blue Eyes Crying",
    "pages": [
        "Note from Jake Rivers:\n\nThis is my sixth semi-annual \"invitational.\" The initial one was based on the Statler Brother's song, \"This Bed of Rose's.\" The second used the Marty Robbins El Paso trilogy: \"El Paso\" \"El Paso City \" and \"Faleena.\" The third had stories based on the various versions of \"Maggie May\" or \"Maggie Mae.\" The fourth invitational was based on any Country & Western song and the fifth on songs by Merle Haggard.\n\nThe current invitational is based on any song written or performed by Willie Nelson.\n\nI have chosen 'Blue Eyes Crying in the Rain'. A big 'Thank You' to Mistress Lynn for editing the story and making it a much better read. There is very little sex in this story, so if that is what you are looking for, you may want to look elsewhere. For the rest of you, I hope you enjoy the story.\n\nDG Hear \n\n****\n\nMy wife of forty-five years was lying there on the bed. I was resting in the reclining chair right next to her. She had taken a turn for the worse, with only days to live.\n\nI wasn't going to let her die alone. I promised her from the day we were married that I'd be by her side, till death us do part. The extended care unit of the hospital told me I should go home and get some sleep, but I let them know I wasn't going anywhere; I was staying with Mary.\n\nMary is and has always been the love of my life and the most wonderful person on God's green earth.\n\n\"Love is like a dyin' ember<br> Only memories remain<br> Through the ages I'll remember<br> Blue eyes cryin' in the rain\"\n\nI first remember meeting Mary way back in high school so many years ago. She was a cheerleader and a choir member. In the yearbook, she was 'Miss Congeniality', and she deserved it. She was even the homecoming queen our senior year.\n\nEveryone thought the world of her. I believe half the guys in school had a crush on her. She did date a couple of the football players. Mark always said she was his girl, which kept most of the guys from asking her out.\n\nMark was the quarterback, like that's some kind of surprise. It seems all the cheerleaders liked quarterbacks. He fit the picture of what everyone imagines for that position; tall, handsome and muscular from working out all the time. I guess he was a decent guy, but to me he seemed a bit cocky. \n\nNow Mary had it all, looks, personality and a smile that would make every guy smile back and wish he could be with her. Some people would say they made a perfect couple, all but me of course. With me, it was love at first sight with Mary. She was the kind of girl you dreamed of but could never have.\n\nA little about me. My name is John and everyone knew me as a troublemaker. I got in a number of fights at other schools so my parents moved to the suburbs to help me get into another one. I only went to Eastmoor High my senior year. \n\nI was always quick tempered and reacted too soon. I had a few friends but mostly kept to myself. My parents told me to try and not get into any more fights. I just had to get through my senior year and then would enlist in the army. I had to keep my nose clean if I expected them to accept me. At least that's what I was told at the enlistment center. \n\nI didn't play sports in school. I guess I was too busy getting in trouble. I met Mary the first day of school. She was walking down the hall with two other girls and I couldn't take my eyes off her for some ungodly reason. She looked at me and smiled. \n\n\"Hi, I'm Mary. Welcome to Eastmoor High.\" As I mentioned, her smile would brighten up a room.\n\n\"Hi to you too. I'm John, John Davis. Glad to meet you.\"\n\nShe introduced her two friends and then they headed down the hall. I swear a lightening bolt struck me right there. I'd had feelings for girls before but never like this. \n\nI went into our homeroom where we had to sit in alphabetical order. I couldn't believe it. The old coot of a teacher treated us like kids.\n\n\"Please sit down when your name is called,\" he said.\n\nI glanced around the room and saw Mary talking to a guy who I later found out was Mark. I already felt jealous; what was the matter with me?\n\n\"Mary Darling.\" \n\nI watched as Mary took a seat. Darling, her name fit her like a glove. \n\n\"John Davis.\"\n\nI was surprised that I would be spending homeroom every day sitting next to Mary. Maybe this seating arrangement wasn't so bad after all.\n\nI talked to Mary every day. I didn't know a better way to start one either. We just talked about things in general. That's how I found out all about her. When I asked her out, she told me she had a very busy schedule and was sorry but that she was seeing someone, that being Mark. I remember telling her I wouldn't give up on her.\n\nI took up jogging to help keep in shape since I was going to join the service after graduation. I ran past the school every day just so I could see Mary practicing her cheers. Whenever she saw me, she gave me that beautiful smile.\n\nI did my best to stay out of trouble and keep my nose clean and grades up. I asked Mary out a number of times but she'd always say she was sorry, she couldn't. Sometimes she even looked sad when she said it.\n\nI had some friends in school, both male and female. We hung out at the local burger joint but I guess we weren't part of the so called 'cool group'. Most had brains and belonged to the band and other clubs, but not sports.\n\nSome were dating each other, which was nice. They all knew I had a crush on Mary but did their best not to talk about her and Mark. I went out with them as a group but not single dates. The girls in our group were all pretty and nice but they weren't Mary and I wasn't about to use my friends.\n\nI didn't go to the prom. The only girl I wanted to take was Mary and of course, she was going with Mark. A couple of weeks later, a few of us went to one of the local dances.\n\nIt wasn't bad and I was having a pretty good time until Mark and Mary showed up. I walked over and asked Mary to dance. \n\n\"I don't think so,\" spouted off Mark.\n\nI ignored him and asked Mary again. She looked over at Mark and said, \"Why are you like that? John's my friend and I'll dance with him if I want to.\" I never saw her like that before but I think she was quite mad at Mark.\n\n\"I'd love to dance with you John,\" she said and smiled. She stood up and we went out to the dance floor.\n\n\"I'm sorry if I caused a problem between you and Mark.\"\n\n\"He has no right to tell me who I can and can't dance with,\" replied Mary.\n\nI held her close and sort of hugged her. \"Mary, whatever happens in the future I want you to know that I really like you.\"\n\n\"I kind of like you too John,\" she said and gave me that smile again.\n\nWe didn't say anything else as I thanked her for the dance and walked her back to her seat. Mark remained silent but I could tell he was fuming. I went back to where my friends were, and soon we all left. \n\nIt was a couple of days later when I was leaving school that Mark and a couple of his friends accosted me. \"Stay the fuck away from Mary. Next time I won't be just talking. She's my girl.\"\n\nI stared at him for a few seconds. \"Listen Mark, I'm not the least bit afraid of you. Any time you want to have it out, let me know. Of course, if you're afraid and need two guys to help you, I'll probably get my ass kicked, but it shows what kind of a wimp you are. As for Mary, I'm going to marry her.\"\n\nI have no idea why I said it. The words came out of nowhere, I swear. I was ready for Mark to come out swinging at me but instead, he and his buddies starting laughing.\n\n\"Just stay the fuck away from her, understand?\" Mark said as they walked away.\n\nI couldn't believe this shit. One week of school to go and the asshole wanted to start trouble with me. I really couldn't afford to lose it all now so I did stay away from Mary. I only said hi to her in the morning, not much more. Mark smirked, but he had no idea that I just had to make it through graduation. \n\nMy parents were proud of me on graduation day. It was nice seeing them happy knowing I had finally made it. All the classmates were hugging and kissing each other on the cheek. Hell, all the cheerleaders gave me a hug.\n\nJust then, I looked up and saw Mary. I took her in my arms, hugged and then kissed her. I mean a real lovers kiss with all the feelings. The odd part was she didn't pull away, even when I kissed her again. When we broke apart, she had tears in her eyes as she went to hug other friends. I stood there wondering what could have been.\n\nAfterward, my family had a nice gathering of people and a small party for me. The following week I would be leaving for basic training. It was now time to go forward with my life.\n\nI went to jog one evening and there stood Mark and his two friends. What the fuck did they want now? School was over.\n\n\"I saw how you kissed Mary and now you're going to pay the price,\" said Mark.\n\n\"Is it going to be one on one or three on one?\" I asked.\n\nMark stepped forward and took a boxing stance. For the time being, his two buddies just stood back.\n\n\"Mark, you don't want to do this. It's over, I'm leaving for the service tomorrow. Besides, I fight dirty and I'll beat the living crap out of you.\"\n\n\"So, you're a fucking chicken too,\" he said and laughed. \n\nThat was the wrong thing to say to me. Lowering my body, I kicked Mark below the right kneecap and heard something crack. He went down with a thump and I kicked him three more times. His buddies started to come forward when I said, \"Do you really want in on this? It's your choice.\" \n\nI stood up and left Mark sprawled out, crying on the ground. One of his friends went inside to call 911 while the other stayed with him. I left and went home. \n\nAbout an hour later, the police were at my house. I told them exactly what happened and they said that Mark's friends said the same thing. I guess they figured the truth was easier to tell than a lie. Besides, it could have been three on one and that would have been hard to explain. \n\nMark's leg was broken. He wouldn't be playing college football this year. A small college accepted him to play but he only had gotten a partial scholarship so he would still attend college. I felt bad for him, but I gave him a choice. \n\nI tried calling Mary before I left for the service. Her parents said that she wasn't home but would leave her a message that I called. I wanted to apologize for the fight with Mark and to tell her I would miss her. \n\n*****\n\nNow, as I sat there looking at Mary, I couldn't help having tears in my eyes. She had been sick for over a year, constantly getting worse. It got to a point where I had to put her in a nursing home because I was just unable to give her the proper care.\n\nShe always told me, \"Don't worry John. Everything will be all right. God never gives us more than we can handle if we believe in him.\"\n\nYou see, Mary was the religious one, always looking on the bright side. She went to church quite regular and brought up the kids in a Christian home. She would always scold me when I would swear but she just had a way of saying it that I could never be mad at her.\n\nShe has been in the nursing home for the last three months. I would get myself up every morning, eat breakfast and then head over there to spend the day with Mary. She was my love, my life.\n\nShe had come down with pneumonia and then had trouble breathing. I know she developed some type of lung or respiratory ailment where she needed to be on a respirator most of the time. After that, she started losing her memory. God, I couldn't believe how fast she went downhill. The doctors diagnosed her with Alzheimer's disease, as I suspected. \n\nSome days her memory was good; on others, she didn't even recognize me or the kids, though they weren't really kids anymore. All three were married with families of their own. \n\nOur two daughters Donna and Kimberly both lived in our area. They stopped in almost daily to see their mother. On the days that she knew them, they would stay a little longer. Our son Mike lived in Michigan but came home as often as he could to see his mom. Damn, we raised some great kids.\n\nThey knew they could always find me near their mom. They often told me I shouldn't spend so much time at the nursing home but I wanted to be where Mary was.\n\nShe still had that beautiful smile that I knew so well. She always asked me to tell her how we met and about our kids and now grandkids. Even the days she couldn't remember she would still smile when I told her the different stories.\n\n\"In the twilight glow I see them<br> Blue eyes cryin' in the rain<br> When we kissed goodbye and parted<br> I knew we'd never meet again\"\n\n****\n\nMary nodded at me, her way of telling me to go on with our story. After graduation, I entered the military. When I finished basic training, I spent a year in the states and three years overseas. I made one trip home after basic training to see my family. I went to see Mary but her parents told me she was away at college. \n\nI was saddened but I knew life would go on. I was a good soldier and made it to the rank of sergeant before my discharge. I guess I sowed my wild oats, as my dad would say. I fell for a couple of women while overseas, but it was more about the sex than true love.\n\nLuckily, I had the smarts not to get very serious and marry someone for the wrong reason. Many of the women wanted to come to the United States. They'd do just about anything to become a soldier's wife\n\nI don't know how many times I laid on my bunk and thought about Mary and what she might be doing. For some reason I believe thinking of her helped get me through the rough times. I can't explain it. Mary later told me that she often prayed for me and God answered her prayers\n\nI received letters regularly from home but my parents didn't really know Mary or her parents. I thought about writing her but I wasn't sure where to send it to or if she would want to hear from me. The last thing I remember about Mary was the kiss at our graduation.\n\nI remember when I came home my dad met me at the airport and looked so proud of me. I was just glad to be home. It all took place during the Vietnam War era, and people had divided opinions on it all over the country. \n\nAfter returning home, my dad got me a job at the auto factory. It was a good paying job and eventually I became a pipe fitter at the plant. I needed to go to school part time to get my Journeyman card but it would be worth it.\n\nI was home for about a week when I went over to where Mary lived. Her parents had moved three years before and the new homeowners said they didn't have a forwarding address. When I asked them about Mary, they told me they didn't know anything about the family. I thanked them and went home.\n\nAbout six months had passed with me working the second shift and going to school during the day. One day an invitation came for our five-year class reunion. Normally I wouldn't have gone to it but I had to wonder about Mary. Since she was the most popular girl in school, I figured she would probably attend. \n\nI had to wonder what she would look like and if she might have even gotten married. After returning the reply saying that I would attend, I had second thoughts. I might be building myself up for another fall. My mom told me to just go and enjoy myself; I'd earned that right\n\n*****\n\nAs I was telling Mary our story, I noticed she'd fallen asleep. I laughed and gave her a kiss on the forehead and went back to working my crossword puzzles. I would always turn the TV on to Mary's soaps while I did them. I never did understand what she saw in them but she was a regular viewer. We've been doing this for God knows how many years and I wasn't about to change our lifestyle now.\n\nDonna and Kim came at lunchtime and stayed with Mary while she ate. It gave me some time to go home and take care of a few things like getting the mail and cutting the grass. After cleaning up, I was back a couple of hours later to be with Mary.\n\nMary told me our daughters had just left knowing I'd be back, then she asked me to tell her about finding each other at the reunion. I know I've told her this story a hundred times but like most old guys I have a tendency of repeating myself and it was great to have a wife willing to listen to me.\n\nI picked up my story, saying how I wasn't sure whether to go to the reunion. I didn't know whether Mary would be there and if she would even remember me. Then there was a good chance that she might already be married. \n\nThat night, I parked my vehicle and entered the hall. I couldn't believe how many people were there.\n\nI went to one of the tables where a woman was sitting. \n\n\"What year?\"\n\n\"I'm sorry, I don't know what you mean,\" I replied.\n\n\"Oh, this year we tried something new. This reunion is a five-year for those graduating in 1959 and ten years for those graduating in 1954. We figured it would be a much bigger turnout,\" she said as she smiled to me.\n\n\"I'm with the 1959 group,\" I said politely.\n\n\"That would be the table on the other side of the doorway.\" She glanced at the woman at the other table and said, \"Emmy, another one for you and he's a looker.\" She winked at me as she spoke.\n\nI was a bit embarrassed as I went to Emmy's table. \n\n\"Hi, I'm Emmy Harman. Gregg is my married name. I'm sorry but I can't remember your name.\"\n\n\"It's okay. I only attended my senior year. I'm not exactly a known commodity. John Davis and I'm happy to meet you Emmy.\"\n\n\"I'm sorry for forgetting your name but I do remember those beautiful blue eyes of yours,\" Emmy said and grinned. \n\n\"Thank you,\" I replied. \"What do I do next?\"\n\n\"Find the welcome packet with your nametag on it. Wear the tag for those who might not remember you. All the married women have both their maiden and married names on them. Again, welcome to the reunion and I hope you have a wonderful time.\"\n\nAs I got my packet, I looked for any that might have said Mary Darling on it. They were in alphabetical order but there were several empty spaces on the table already. I put on my nametag and walked around a little, seeing if Mary might have shown up.\n\nI felt a tap on the shoulder and turned to see one of my friends, Stan.\n\n\"Hey John, I thought it was you signing in. How's it been? I heard the army finally discharged you. Come on over and meet my wife.\"\n\nI walked over and met his wife June. A few of the group I hung around with back then were standing there too, so they introduced their spouses and dates.\n\nFor the next ten minutes, everybody talked about what they'd done the last five years. All the time they did, I was wondering if I should mention Mary. Maybe someone would know if she was here. I don't think any of them ever knew the depth of my high school crush. Even though I was trying to be attentive, I was glancing around the room in hopes of seeing Mary.\n\nAfter a few more minutes, I excused myself to get a beverage, telling them that I would see them all later. As I was sipping a beer, I looked up and saw another group of people standing together. There were three women and two men. I was sure one was Mary even though I only had a side glimpse of her. She was between the two men. \n\nThe tall fellow had his back to me and I had no idea who he might be. I could see the other's face. It was Mark. My heart fell into my stomach. Just then, Emmy approached me.\n\nThat's when I remembered that Emmy was like the gossip center in high school. She seemed to know just about everything about everyone.\n\n\"Wow!\" said Emmy. \"They make a great couple don't they? Everyone was so surprised when they got married last year, especially after Mark broke his leg right after graduation. They ended up both going to the community college and the next thing you know, they were a couple.\"\n\nEven though it was hard for me to talk, I knew I had to reply. \"What's the big surprise? They dated in high school.\"",
        "\"No they didn't. Mark went out with Mary a few times but he never dated Susan. They didn't start dating till they were in college,\" exclaimed Emmy.\n\n\"Are you saying that Mary didn't marry Mark?\"\n\n\"Duh, that's exactly what I'm saying. He married Susan last year.\"\n\n\"What about Mary? Did she marry that tall guy next to her?\" \n\n\"No silly, that's her brother. He graduated in 1954. That's his wife Alice next to him. Boy you sure have been away a long time John.\"\n\n\"Four years in the army and when I got home I started working and going to school. I guess I missed all the local gossip. Does Mary have a steady or is she married?\"\n\n\"Mary is probably the biggest mystery of our class. She dated Mark in high school but stopped after he broke his leg. Not sure exactly why. Some say it was over another guy. I think it's something Mark did at the time. Anyway, she went away to the university and earned a teaching degree. She teaches at the elementary school down the street here.\"\n\n\"So what about her dating?\"\n\n\"I've talked to Mary a lot of times. She is the sweetest and most personable woman I know, not to mention one of the prettiest. I asked her one time why she never married or had a serious relationship. She told me she dated some very nice guys but didn't love any of them. Then she told me that she was waiting for the one that God chose for her.\n\n\"I know Mary is not a nut case. She is really waiting for this chosen person, whoever he is. I can tell you he will be the luckiest man on earth. She has told me time and time again that he'll be back. She must know who it is. Anyway, John, I'd better get back to my table. Have fun at the reunion.\"\n\n\"Thanks for all the updates Emmy. Too bad you're already taken,\" I said and grinned at Emmy, who just waved as she walked away. \n\n*****\n\nI looked over at Mary lying on the bed, beaming as I was telling her the story.\n\n\"It was you John. You were the one that I was waiting for to come back. I prayed to God every day to keep you safe so you would come back to me. My parents told me you came to the house while I was away at college. It was then that I felt you were the one.\"\n\nI leaned over and kissed her lightly. I held her hands and kissed them too. It was dinnertime so Mary and I went into the dining room and ate together. I never missed a night having a meal with Mary. I guess old habits never die. The nursing staff would always smile when they saw us together at the table.\n\nThe food was okay but didn't hold a candle to my Mary's cooking. On Sundays, we would go to the church service at the nursing home and then I would take Mary to either Donna or Kim's for dinner. It also gave Mary a chance to see the grandkids. When Mike would come down with his wife and two kids, it was like having a family reunion.\n\nWe were one very loving happy family. I always gave the credit to Mary, because she just seemed to know how to handle most every situation. When the kids were little, she taught them about life and true moral values. No matter what questions they asked, even about sex, she would answer them in a very loving and honest way.\n\nI always considered myself the grouch. Even Mary would tell me to be happy and less grouchy. Life was too short to be unhappy. I always thought I was stern with the kids but Mary told me many times that they had me wrapped around their little fingers.\n\nEven today, I seem to let them have their way. Thank god, they take after their mother.\n\nAfter Sunday dinner and visiting with the grandkids, I would take Mary back to the nursing home. I could tell she was always tired and happy to be in her bed, but she never complained.\n\nUp until the last week, I would tuck Mary in, go home and try to get some rest myself. I would be up early and have breakfast, clean up a little and then head over to the home to spend the day with her.\n\nWe would go for little walks around the grounds, play a few board games or listen to some of the entertainment from groups that would visit there. We always had to get Mary back to her room in time to see her soaps. I would do my crossword puzzles.\n\nMary had lots of visitors. Even some of our old classmates and kids that she had taught would stop by. Every day some friend of hers would drop in for a visit. I had to laugh a few times after someone would leave and Mary would ask me who it was. I would explain something about that person and tell Mary how she had affected their life.\n\n*****\n\nNow I continued telling her parts of our past, just as she loved to hear.\n\nI looked across the floor and approached the group standing there. I saw Mark look up at me. He didn't look overly happy but it did make Mary turn toward me.\n\n\"John, I knew you would come.\" Mary came to me and wrapped her arms around me. I held her tight, not wanting to let her go.\n\n\"Mary, it's so good to see you. To say I missed you would be an understatement.\" We stopped hugging which I already missed as Mary introduced me to everyone.\n\n\"You know Mark.\" I nodded, trying to be friendly. \n\n\"This is Susan. She was a cheerleader, same as me. She and Mark were married last year. I'm so happy for them. This big guy here is my older brother, Tim. Alice here is his wife. Tim, this is my friend John.\" \n\nI shook Tim's hand and said hi to Alice. Mark and Susan said they were going to walk around and catch up with some of the other classmates. I stood there holding Mary's hand.\n\nWe all talked for a few minutes, but I never let go of Mary's hand. I knew Tim noticed but didn't say anything. I learned that Tim and Alice had been married for five years and had two kids. Tim worked in middle management in a manufacturing firm. For now, Alice was a stay at home mother. \n\nI told Mary that I had talked to Emmy. \"Oh, then you already know I'm a teacher,\" said Mary, and we all laughed.\n\nA couple announcements came over the audio system. \"Welcome everyone to the reunion of the classes of 1954 and 1959.\" A big round of applause went up.\n\n\"We would like a minute of silence as we announce the names of the class members who are no longer with us. The reading will be followed by a chime for each member.\"\n\nThe speaker began and I heard the name of one of my friends. Mary told me he was killed in Vietnam along with two of the other twelve names mentioned. After the chimes, everyone was back to normal and the music started. I was still holding Mary's hand and asked her to dance with me.\n\nWe went out to the dance floor and just seemed to belong together. I told her how much I missed her and thought about her daily. That was when she told me she always prayed for my safety.\n\nI held her close on the dance floor. She felt so good I never wanted to let her go. One guy from our class tapped me on the shoulder and wanted to dance with Mary. I looked over at him and shook my head. \n\n\"Sorry buddy, she's mine.\" We kept on dancing and I received that beautiful smile from Mary.\n\n\"Will you be my date for tonight Mary? How about forever?\" I was trying to be a little funny.\n\n\"I'd love to,\" said Mary.\n\n\"Is that for tonight or forever?\" \n\n\"Let's start with tonight and see how it goes,\" she said and laughed.\n\nAfter a few slow dances, we sat at a table with Amy and her husband Gregg. Amy was one of Mary's best friends, at least back in high school. Gregg was a couple of years older than we were and graduated from another high school.\n\nTed and Alice plus some friends of theirs were also at the table. Mary made all the introductions. Amy looked at me and said, \"I remember you. I always thought you had the most beautiful blue eyes. Remember Mary, how you told me you were attracted to him because of his eyes.\"\n\n\"I never said that,\" Mary responded, embarrassed.\n\n\"Yes you did,\" said Amy with a grin. \"It was when he was jogging by us during cheerleader practice. You said, and I quote, 'He has the most gorgeous blue eyes. You should see them up close. He sits next to me in homeroom', remember?\" \n\n\"Thank you, both. I wish I had known about your conversations way back then.\" I raised an eyebrow and laughed. \n\n\"Oh, she said much more than that but we won't get into it now,\" said Amy. \"Anyway, welcome home John. It is nice to see you back home safely.\"\n\nWe all talked at the table and everyone from our class kept coming over to see Mary and Amy. They were two of the most popular girls in the school. They introduced Gregg and me to just about everyone.\n\nMary and I got up and danced some more. This time I put my arms around her waist and she put hers around my neck. She looked up at me and I couldn't help myself. I leaned over and kissed her right there on the dance floor. She didn't turn away or stop me in any way. I squeezed her tighter.\n\nWe were dancing next to Emmy, the gossip. When she saw us kiss, I heard her say, \"Oh my gosh!\" Mary looked over at her and Emmy asked. \"Is he the one you've been waiting for?\"\n\nMary looked up at me and kissed me again, turned back to Emmy and smiled. \"Yes he is.\"\n\nI was in love. What more can I say. Is it possible to have known someone and then be away for five years, see them again and be in love with them? The answer is a definite yes. I don't care what anyone else thinks or their opinions on the subject. I was in love with Mary.\n\n\"Now my hair has turned to silver<br> All my life I've loved in vain<br> I can see her star in heaven<br> Blue eyes crying in the rain\" \n\nI stopped talking when I saw that Mary was having a bad day. Her breathing was irregular. I called the girls and told them there was no need to come see their mother today. She probably wouldn't recognize them. They stopped by anyway just to be with me. That's the kind of kids we raised. Thoughtful, wonderful and caring, just like their mother. Looking back on my life, I was a very lucky man.\n\nWhile we were sitting in the lunchroom, my daughters asked me if I would tell them about the day I proposed to their mother. I know they heard the story a dozen times but they knew I loved telling it also.\n\n\"As you know, your mother and I were at the class reunion. I had kissed her a number of times on the dance floor. Believe me, your mother is not the type of person that would normally show affection on the dance floor. I think it surprised everyone that knew her, including your Uncle Tim.\n\n\"We sat back down at the table and your mom and Aunt Alice went to the ladies room. I could never understand why women aren't able to go the restroom by themselves.\"\n\n\"Dad, it's just a girl thing,\" Donna said and laughed. \"There's a lot of gossip that goes on in there.\"\n\n\"I was talking with your Uncle Tim while the girls were gone.\"\n\n\"You really like Mary don't you John?\" asked Tim.\n\n\"I love her Tim. I know it sounds foolish and stupid but I am in love with her.\"\n\n\"She seems to care for you too. I've never seen her carry on with a guy like she has with you today. She's my little sister and I don't ever want to see her get hurt.\"\n\n\"Tim, I would be the last person in the world to hurt her. In fact I'm going to ask her to marry me.\"\n\n\"You're kidding right? You just saw her for the first time in five years. Don't you think that you should get to know each other a little better?\"\n\n\"Tim, I'm dead serious. I spent the last five years wondering about her. Now I've found her and I don't want to lose her again. Besides, if she says yes, we will have till the wedding for her to change her mind.\"\n\n\"John, not to burst your bubble but I know Mary as well as anyone. I don't think she'll rush into getting married. What if she says no?\"\n\n\"Then I'll deal with it for now. I don't plan on giving up on her unless she can honestly say she doesn't care for me.\"\n\n\"Good luck John, I really like you and wish you the best. Please, just don't get your hopes up too high. I don't want to see you get hurt either.\"\n\nThe girls were back from the restroom so Tim and I changed the subject. Mary and Alice were both smiling and laughing. Something told me that they might have been talking about me. I went to get drinks for the whole table. While I was gone, Tim asked Mary if she cared for me.\n\n\"Yes, I care for him a lot,\" said Mary.\n\n\"Do you love him Mary?\" asked Tim.\n\n\"You can't ask her something like that. What's gotten into you?\" asked Alice.\n\n\"I was just wondering. I know he loves her, he told me so and he wants to marry her,\" said Tim.\n\n\"Cut that out, Tim. You're embarrassing Mary.\"\n\n\"Just wondering if she wants to keep it a secret or let the world know her feelings. I guess we'll know soon.\" Tim just chuckled.\n\n\"What does that mean Tim? What are you talking about,\" asked Mary.\n\nAbout that time I brought the drinks back to the table and excused myself for a few minutes. The women were talking and Tim watched me walk up to the stage. I could see a smile on his face.\n\nI took the microphone and said, \"Excuse me, excuse me please.\"\n\nIt didn't take long for everyone to be quiet. I'm sure they wondered who I was and what I was doing. \n\n\"Hi there everyone and welcome to the reunion. I'm John Davis, class of 1959. I'm sure most of you don't know me but I have something to say.\n\n\"I fell in love with a woman five years ago. I then spent four years in the army and when I came home, I couldn't locate her. She helped me make it through a very rough and hard four years.\n\n\"I cut her picture out of our yearbook and carried it with me in my vest pocket of my uniform.\"\n\nWhen I said that, I looked out and saw Mary with an astonished look on her face. \n\n\"I came to this reunion here tonight for only one reason, and that was to see her again. I was worried that she might not be here or even worse, be married to someone else. Well, I found her and I want to say in front of everyone here that I truly love her and want her to be my wife.\"\n\nGasps went through the crowd but I just kept right on talking.\n\n\"Mary Darling, will you marry me? I know what everyone is thinking and I understand any reservations you may have.\"\n\nI looked over at the table where Mary was sitting. Her mouth opened but nothing came out. Tim was smiling so hard he was almost laughing.\n\n\"I told you Mary, now I guess it's up to you to tell everyone your secret decision,\" whispered Tim.\n\n\"Mary, I understand we just met up again tonight. You have to know that I really do love you with all my heart and soul. As far as getting to know each other better, we have a lifetime to learn each other's likes and dislikes.\n\n\"We can plan our wedding for any time you like. If you change your mind, please be honest with me and tell me. There is nothing more that I want in life than to see you happy.\"\n\nPeople were whispering all through the room. You can just about imagine what everyone must be thinking or saying. Here was Mary Darling, the pride of Eastmoor High. The woman that every guy in class had probably had a crush on at some time in their life.\n\nThen there was me, a transfer in for one year. About all that was known about me before me tonight was that I had pretty blue eyes and to a few, not a guy to mess with.\n\nI stared at Mary from the platform. In fact, at this time all eyes were on Mary. Everyone was waiting to see what this very conservative, levelheaded, smart woman would say to me.\n\nRight then, she stood up and someone handed her a microphone.\n\n\"John, this is so sudden, I hardly know what to say.\"\n\n\"Say yes Mary. I believe we were meant to be together. Waiting to ask you in another month or another year would just waste valuable time that we could be together. I learned that our life can be taken at any time, and whatever time I have left, I want to spend with you.\"\n\n\"John, John . . .\" I could see that she was looking for the words.\n\n\"Mary, if you don't love me, I understand. As I have said, your happiness is all I care about.\"\n\n\"John, this is crazy, I mean it's really crazy . . .\" She looked at her brother and Alice, then back up at me. \"Yes John Davis, I will marry you.\" She had tears running down her face.\n\nI leapt off the platform, took her in my arms and kissed her. Everyone around us clapped and shouted. I'm sure her answer surprised them all. We would be the talk of the town for the next six months, most likely.\n\n\"Wow, Dad, that is so cool it could be a movie,\" replied Kim after I finished.\n\nI laughed as we went back in the room and they kissed their mother and told her they loved her and went home. I turned on the TV to her programs even though she was fast asleep and worked on my crossword puzzles.\n\nI sat there reminiscing about the reunion some more. After she'd said yes, Tim stood up and gave me a hug and said \"You have some real gonads John; welcome to the family.\"\n\nFor the rest of the night, everyone came over to congratulate us. A few even asked if they could have a dance with Mary. She smiled at me and I knew it would be okay. I then danced with their wives. I think they were trying to find out more about me. It ended up being one hell of a great reunion.\n\n****\n\nMary woke up and wanted me to tell her more. \n\nI took Mary home; she had ridden in with Tim and Alice. It was late and I promised her I would be over the next day to help explain things to her parents.\n\n\"This is the craziest thing I have ever done, but I really do love you John. I guess I always have, though I never acted on it except for that kiss at graduation.\"\n\nWe kissed a few times and Mary went into the house. My parents were watching TV when I got home. After I told them I was getting married, they were totally flabbergasted. We sat there for the next hour and I told them the whole story about what happened at the reunion.\n\n\"It sounds crazy John, but if this is what you want, we're behind you. How about bringing over our future daughter-in-law so we can see what gave you mad cow disease,\" my dad said and laughed.\n\n\"I'm going to go talk with her parents tomorrow and then we'll stop by so you can meet her. You're going to love her.\"\n\n\"I'm sure we will John,\" said my mother. \"Any woman that can make you feel this happy is welcome here.\"\n\nThe next morning, I called Mary to find out if it was still okay to come over. She answered the phone. \n\n\"Hi John, it's been quite the morning. I told my parents about last night and they asked me how I could be so stupid. I did my best to explain that I love you and that you will be by today. Tim and Alice are coming over later too. I figure we need all the help we can get to convince them that we aren't crazy.\"\n\n\"I'm sorry that I caused so much trouble. I'll do my best to explain. I'm sure they will understand.\"\n\n\"It was my answer that caused the problem. I think mom understands but we have to work on my dad. I'll see you around noon. Oh, mom invited you over for dinner, so you'd better love pot roast. By the way John, after thinking about it all night; my answer is still yes.\"\n\nI showed up right on time. Mr. Darling invited me in but didn't seem too friendly at the moment. Just then, Mary came into the room and gave me a light hug and kiss. She introduced me to her dad and then to her mother when she joined us.\n\nI could see where Mary got her beautiful looks but I figured Mrs. Darling heard that a thousand times. Mary and I sat down on the sofa and held hands while talking to her parents.\n\nI went through the whole story of how I'd thought about Mary for the last five years, then told them everything I mentioned at the reunion the night before. I was being as honest and sincere as I could be.\n\n\"Mr. Darling, I love Mary. Maybe it's hard to understand but I want Mary in my life as my wife, but only if she loves me.\"\n\n\"John, you seem a nice enough man but Mary is our only daughter and our pride and joy. We want the best for her,\" said Mr. Darling.\n\n\"Sir, so do I. There is nothing that I wouldn't do for her.\"\n\n\"Why the rush then son? Can't the two of you date for a while and see what you have in common before making such a big decision?\"",
        "\"Mr. Darling, I would marry her today if she would have me. I know that women dream of a nice wedding and many special things. I was hoping that we could possibly be married in six months. That should be more than enough time for her to get to know me better. As I mentioned, if she finds that marrying me is a mistake then all she has to do is tell me that she doesn't love me.\"\n\n\"Dad,\" said Mary. \"You've always trusted my decisions before. I know this seems a little crazy but I love John. I cared for him in high school but didn't realize how much till last night.\"\n\n\"Sir, knowing Mary's likes and dislikes would not make me feel any different about her. I believe marriage is based on love, trust and communication. Mary agrees with me on those issues. All we ask is your blessing.\"\n\n\"What if you didn't get our blessing John? Would you and Mary run off and get married anyway?\"\n\n\"No Sir, I want Mary to be truly happy. If she were to go against her parents wishes, she wouldn't be happy. You and Mrs. Darling are the two people she loves most in this world. I want to be part of the family, not divide it.\"\n\nI looked over at Mary's mother and could tell she was on our side. I still didn't get a good read on her father. He was a very cautious man.\n\nAbout that time, Tim and Alice came in with their two kids. It changed the tension in the room. Everyone did there hugs and kisses. Alice even gave me a hug and Tim shook my hand.\n\n\"Dad, what do you think of John here?\" asked Tim.\n\n\"I'm not sure, he seems sincere but I just don't see the rush. I've never seen Mary react this way toward anyone before.\"\n\n\"It's because she's in love,\" said Alice. \"I know because that's how I acted and felt when I met Tim. We watched them closely yesterday. Believe me Dad,\" said Alice. \"They are in love.\"\n\nThe conversation was much lighter at the dinner table. I told Mr. and Mrs. Darling about my family and job. I explained that I was going to school to get my Journeyman card and would soon be a pipe fitter. Mr. Darling seemed somewhat impressed to know I was a hard worker with a future. I glanced at Mary and she was smiling at me.\n\nAfter dinner, Mr. Darling looked at his wife; she nodded her head and smiled. \"Mary, John, even though your mother and I feel this marriage is a bit sudden, you have our blessing.\"\n\nMary got up and went over to hug and kiss her parents. We could all see the real joy on her face. She came over and kissed me. I told her she could start making the plans for the wedding. I would go along with whatever she decided.\n\n\"Mary, I have ten thousand dollars saved we can use for the wedding. It is money I saved from when I was in the service.\"\n\n\"John,\" said Mr. Darling. \"Save your money for a down payment on a house. It is our duty as well as our pleasure to pay for the wedding of our daughter. This morning Mary told us you have a good heart. I'm inclined to agree with her.\"\n\nWe left the Darling household and headed to my parents house so they could meet Mary. It was love at first sight. Mom even cried when Mary gave her a hug. She told Mary she always wanted a daughter and now she had one.\n\n*****\n\nIt was getting late. The nurse came in and checked on Mary for the night. I turned off the TV and dimmed the light, then leaned back in my recliner and thought about Mary.\n\nOur wedding was wonderful. We had such a great turn out. Mary's mother and father had accepted me and understood my love for her. There was nothing I wouldn't do for the woman I loved.\n\nI thought about the first time we made love. It all happened as kind of a surprise. I wasn't going to push Mary till I knew she was ready. To be honest, I didn't know if she had ever had sex with anyone else.\n\nAbout a month before the wedding, her family was going on a camping trip. They had a camper big enough to sleep five. Mr. and Mrs. Darling were taking Tim's two kids and Mary was planning on going.\n\nThey had the camper set up on a private lot near the river. Tim and Alice were going to come the next day to spend the day with them. There would be swimming and a cookout. Their family camped a few times a year. Mary didn't go every time but she thought this might be one of her last times since we were getting married in a month.\n\nEverybody was talking about the fun they were going to have. Mrs. Darling looked over at me and said, \"I'm sorry we don't have room in the camper for you John.\"\n\nMary replied, \"Maybe you can come up and spend a day with us. We always have such a good time.\"\n\n\"Mrs. Darling, I have a tent that I use for camping out. Would it be possible for me to set it up somewhere near the camper? I have a sleeping bag and I could watch over the campfire.\"\n\nShe replied, \"I don't see why not. You know Mary will be sleeping in the camper though.\"\n\n\"Of course, I understand. It will be nice just being near her,\" I said with a genuine smile.\n\nMary was so happy and so was I. Her family seemed religious and I assumed they didn't believe in pre-marital sex. Mary might be twenty-four, but she was still their little girl. \n\nWhen I got there, I set up my tent and put my sleeping bag in it. The kids played in it during the day. They asked if they could sleep in it but their grandma said no. There wasn't enough room for three people and they would be sleeping in the camper.\n\nI saw Mary in a one-piece bathing suit for the first time. She looked gorgeous. We all played in the river and later roasted hot dogs over a campfire. It was nice, all of us sitting together just enjoying the outdoors. It was getting late and Mrs. Darling put the kids to bed.\n\nMary was the last one to get up from around the fire. We kissed a number of times before she went inside. I wanted so much to be with her. I knew I only had to wait for one more month.\n\nI was lying in my tent with the only light shining in being the moon when I heard a creak that sounded like the camper door. I glanced up and saw Mary stooping down to crawl into my tent.\n\n\"Mind if I join you for a little while?\" asked Mary.\n\n\"You know I don't, but what about your parents?\"\n\n\"No, they have to stay in the camper,\" she laughed. \"I wanted to be with you.\"\n\nShe crawled up and laid on me and we started kissing. She had a short pajama set on which I quickly unbuttoned as she fed me her breasts. I stopped thinking as I gently sucked each breast. \n\n\"I want you so bad. It's going to be so hard to wait another month,\" I said.\n\n\"The waiting is over John. I want you to make love to me tonight. I have wanted you as much as you have wanted me.\"\n\nWhen she said that, I rolled her onto her back and began kissing her from her lips to her breasts. I slid my hand down into her loose shorts and over her mound. I went lower and felt the wetness of her sex.\n\nShe raised her hips and slid off her shorts and panties. I slipped off my shorts as well. I was fingering her until she said, \"John, take me now; make love to me.\"\n\nI slid between her thighs and she took hold of my very hard cock and guided it into her pussy. She felt so damn good. We moved in a slow rhythm, with both of us reaching a climax. I don't have any idea how long we made love that night but I know we fell asleep next to each other.\n\nIt was very early in the morning when I woke up. I was scared when I realized that Mary was still next to me. All I needed was for her parents to catch us together in the tent.\n\nI woke Mary and she quickly put her pajamas back on and said, \"I love you\", before slipping back into the camper. \n\nIt wasn't an hour later when Mary came out to the tent in her bathing suit and asked me if I wanted to have a morning swim. It was then she told me that she made it into the camper just in time. As her mom and dad woke up, she acted as if she just did too and said she was going for a swim.\n\nShe laughed and told me she needed to get the remnants of our lovemaking off her body. We were in the water for about twenty minutes when her parents and the kids joined us. By then we'd pretty much cleaned off.\n\nI was remembering after our honeymoon, Mary told me that her mom had said she had a special glow about her. She realized Mary had the same glow the month before when we went camping. Her mom just smiled at her.\n\nMary also told me that when Alice and Tim came to the campgrounds, she'd noticed Mary's glow also. The only difference was Alice looked at Mary, smiled and said, \"You got laid didn't you?\"\n\nMary said she just turned red but didn't answer Alice. \n\nI can't remember how many times I repeated that story to Mary in the last six months, but every time it brought that beautiful smile to her face and tears to my blue eyes.\n\nI'd been reminiscing with Mary about all the good things in our life for several months. We really did have a wonderful, almost fairy tale life. We seldom argued but the few times we did we were always able to talk things out.\n\nCommunication was probably the greatest asset between us. We always did our best to be honest with each other. As our kids were born, we even forged a stronger bond as a family, teaching them right from wrong, always trying to show by example rather than just words.\n\nI do believe Mary deserves the credit for the upbringing of our kids. She was always patient with them and she showed love in everything she did. God, I'm going to miss her.\n\nMary was a stay at home mom until all three of our kids were in school. One day she told me that she would like to get back to teaching. She loved being able to help nurture the young children.\n\nDeep inside I was afraid that Mary might find other men desirable, to put it in a word. I had no reason to believe she would ever cheat on me, but it was something I had thought about. After all, Mary was still beautiful, desirable and a very friendly person.\n\nWhat if? I guess it's something every man has to deal with. I put on my best face and told Mary whatever she wanted to do I would always be behind her. She told me that she wouldn't take any time away from me or the kids.\n\n\"I am going to be a substitute teacher and probably work about three or four days a week. Of course when there is no school, I will always be home with the kids.\" \n\nIt really was the perfect job for her and it gave her a chance to be out among adults again.\n\nSo Mary started her new job as a substitute teacher. She chose to work in the grade school and seemed so happy when she came home. Teaching really agreed with her and she felt she was doing something important.\n\nOur lives didn't change much. We still ate dinner as a family, went to all the kids activities and we still made love on a fairly regular basis.\n\nAt dinner, we would discuss different things along with how our days went. We were eating dinner one evening when my oldest daughter Donna said that the kids in her class thought her mom was beautiful.\n\nMary just laughed and told Donna that there were many nice looking teachers in the school.\n\n\"Mom, you just have to admit it, you're a hottie.\" All the kids laughed.\n\n\"Thank you young lady but I'm your mother not your hot teacher,\" Mary replied and laughed.\n\nIt was all in jest but was the type of thing that made me worry. If the kids thought this way, how did the male teachers feel? Damn, why was I thinking like this?\n\nMary was a very observant woman. That night when we were in bed she turned to me.\n\n\"What's wrong John? Ever since I started to work again, something has been bothering you. Did I do or say something wrong?\"\n\n\"No, everything is fine,\" I replied.\n\n\"John, I know you like a book. Something is bothering you and I want to know what it is? Is it my going back to work? Is that it?\"\n\n\"Honey, I love you with all my heart.\"\n\n\"And I love you too John.\"\n\n\"I guess it has something to do with the divorce rate and the cheating that goes on anymore. I'm afraid of losing you.\"\n\n\"What? Losing me, cheating, John, have I ever given you reason to think I've been unfaithful? I love you John, you know that.\"\n\n\"It's just that you're so beautiful and great and I'm afraid other men, well you know, will make passes at you.\"\n\n\"John, women get hit on all the time. Even in the shopping malls and other stores. Salesmen are atrocious for hitting on women. Honey, there is no man for me other than you.\"\n\n\"Why haven't you told me you get hit on? We're husband and wife.\"\n\n\"John, most guys give hints and when they are rejected, they leave you alone. I'm not going to tell you every time a guy is nice to me. It doesn't mean they want in my pants, which by the way is reserved only for you.\" \n\n\"What if they come on strong and you are unable to reject them?\"\n\n\"Honey, it isn't going to happen, I promise you. If ever a man won't leave me alone, I promise to tell you and you can take care of the situation. Does that help your feelings?\" \n\n\"Yes, but I will never take you for granted. I love you too much.\"\n\nWe kissed and then we made love again. Talking to Mary helped but I still was a little worried.\n\nI remember her getting dressed for school. She looked more like a student than a teacher. I always wondered why they didn't have teachers that looked like Mary when I was in school.\n\nA couple incidents bothered me. The first one happened when Mary had a teacher's convention to go to in the next town over. She asked me if I wanted to go with her and I said definitely. Mary laughed knowing about my jealousy concerns.\n\nWe both knew I didn't like meetings but I felt much better being with Mary. During her meeting, I would find other ways to keep busy. I would wait for her in the lounge where we were spending the night and then we would have dinner. \n\nI know I drank a little too much but still had my senses. Some loud mouth came and sat next to me and began talking to me about all his extra curricular activities. He said he was to meet his wife here at the lounge. He asked me if I was married and I told him I was very happily married.\n\n\"Do you ever go out and get a little on the side?\" he asked.\n\n\"No, I love my wife and would never even consider cheating on her.\"\n\nHe looked toward the door and exclaimed, \"Holy shit, there's nothing I wouldn't give to bed her down. Damn, what a sexy broad.\"\n\nI looked over and saw it was Mary and another woman. \"Too bad she's with my wife,\" he said and laughed.\n\n\"You would never want to pay the price for that lady.\" \n\n\"Do you know her? Can you introduce me when my wife isn't around?\"\n\n\"The price is your life. She's my wife and I'll kick your ass across the room if you even get close to her. So, the price to have her would be your life,\" I responded.\n\nHe quickly got up and headed to the men's room as the women came up to me.\n\n\"Hi honey, this is June. She said she was meeting her husband here too. June, this is John, the most decent man on earth and my husband.\"\n\n\"Happy to meet you John. That was my husband Joe you were talking with.\"\n\n\"He had to make a quick trip to the men's room. I think he drank a little too much. Nice meeting you June.\"\n\nAs we left, Mary asked what the rush was. I informed her that if I had to spend another minute with Joe I'd have to kill him.\n\n\"Oh no, he said something about me didn't he? I see it in your eyes.\"\n\n\"Yes, he wanted me to introduce you to him when his wife wasn't around. He wanted to see if he could make you. Of course he changed his mind when I told him you were my wife.\"\n\n\"What changed his mind?\" asked a smiling Mary. She loved to tease me this way.\n\n\"He didn't think you were worth dying for,\" I replied.\n\n\"I love you sweetheart,\" said Mary as she kissed me. \"I do feel sorry for June. She seemed like a nice person. It's too bad she has a jerk for a husband.\n\nThe other incident was a Christmas party held for the teachers and others that worked at the school. It was on a Saturday and I had to work that day. I told Mary I would get there as soon as I could.\n\nAfter work, I went home, cleaned up, and even donned a suit. I headed to the event, which was well in progress. I knew most of the teachers since they were all Mary's friends. When I didn't see Mary, one of them told me she went to the ladies room.\n\nI headed around the corner and down the hall to find her. Right as I turned the corner I saw Mary standing there talking to some guy.\n\n\"Brent, get out of my way.\"\n\n\"Come on Mary, what's a little kiss among friends?\" He had his arm blocking her path. \"You always flirt at school and I figured you might like to . . .\"\n\n\"Flirt! I've never flirted with you. I just try to be nice to everyone. If that's flirting to you then I'll just stop talking to you.\"\n\n\"Come on Mary, let's start off with a little kiss and see where it leads.\"\n\n\"I can tell you where it will lead if you don't leave me alone. I'll tell my husband John and let him deal with you. Look, I'm a happily married woman and wouldn't even consider cheating on John. If you would have treated your wife the way my husband treats me, you wouldn't be separated now. Please put your arm down and get out of my way.\"\n\nI saw Brent drop his arm so I quickly backtracked down the hall and acted as if I was just coming that way to meet her.\n\n\"Hi honey, I finally made it. I have to go to the restroom. I'll be right back,\" I said to Mary.\n\nShe smiled at me and told me I looked good enough to eat. I told her we would consider that later. She gave me a kiss and I headed for the men's room. I spotted Brent coming down the hall and just nodded.\n\nWhen I got back to the table, Mary introduced me as her loving husband, John, to all who I didn't know. I think she did it so Brent knew she was off limits.\n\nFor some reason I never worried quite as much after that. I still went to the conventions but it was so Mary and I could get away for a little sex without the kids around.\n\nIt was while I was telling Mary about our life together that I mentioned the incident about Brent. Mary smiled and told me she never knew. She was going to tell me about Brent but he never bothered her again.\n\n*****\n\nThe last few years have been hard on us. Both of our parents died. They all lived long lives and had happy marriages. I had a minor stroke, if there is such a thing. I was only in the hospital for a few days but my loving Mary was there with me.\n\nNow it was my turn to be with her. She took a terrible turn for the worse. The doctor told me she might only have one more day. I called Michael and the girls and told them the sad news. We all spent the day with Mary.\n\nToward evening, I told them they should all go home and I would talk to them in the morning. Mike was staying at my house while he was visiting. I promised Mary she would not die alone. She knew her time was almost up.\n\n\"John, I won't be alone. God is preparing me a home as we speak. I'll be there waiting for you. I love you John.\"\n\n\"Some day when we meet up yonder<br> We'll stroll hand in hand again<br> In a land that knows no partin'<br> Blue eyes cryin' in the rain\"\n\nThe nurses got Mary ready for bed for the very last time. I dimmed the lights and sat in my recliner holding Mary's frail hand. It was about four in the morning when Mary took her last breath.\n\nI sat and cried as the nurses came in and took care of Mary and finished packing her things. I waited till six and called Mike and told him the sad news. He offered to call Donna and Kim, and then came by and picked me up.\n\nThe funeral was so sad. I can't say I ever saw so many people paying their respect to one person. If anyone ever deserved it, it was Mary. She was truly one of God's angels.\n\nI'm often asked if I believe there is a life after death, a heaven where you can see your loved one again.\n\nMy answer is an affirmative yes. At night I picture myself going to the gates of heaven; standing there is my sweet Mary, arms wide open to greet me, that beautiful smile that I always remember, where we will spend eternity together.\n\nNo more blue eyes crying in the rain but only tears of joy and happiness that being with Mary brings me.",
        "Thank you for reading my story.\n\nPlease take the time to read stories of the other authors who have written stories of Willie Nelson's songs.\n\nComments are welcome and appreciated.\n\nDG Hear"
    ],
    "authorname": "DG Hear",
    "tags": [
        "happily married",
        "dating",
        "marriage",
        "sickness"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/blue-eyes-crying"
}