{
    "title": "Mary and Alvin Ch. 08",
    "pages": [
        "Daddy Issues\n\nMary heard the whoop of a siren. That was her cue. She picked up her ice tea and dragged a kitchen chair over to one of her front windows. She had taken out the screen earlier, so that she could sit and lean out for a clear view of Main Street.\n\nShe saw the police car creeping slowly down the middle of the street. Behind it, the parade was turning from Court Street on to Main. Knots of spectators stood on the corners and in the shop doors, waiting for it. As she scanned the crowd, Mary thought she could discern between the locals, whose faces beamed with pride, and the tourists, who looked on with condescending amusement. She caught herself feeling defensive and chuckled. Was she already thinking of Londonderry as \"her town\"?\n\nThe air was suddenly filled with the sound of drum rolls and the high school marching band began playing \"Anchors Away\". They were preceded by a pair of young boys holding a banner reading \"95th Annual Londonderry Harbor Festival.\"\n\nThe band was almost deafening as they passed under Mary's window, but she couldn't help grinning as she watched them go by. Like the tourists, she recognized that there was something corny and old fashioned about the pageantry, but she had gotten to know Londonderry well enough to know that it was heartfelt, nonetheless.\n\nThe esteemed members of the Rotary Club followed the band, and behind them, an elderly man was chauffeured in a white convertible. On the side of the car a sign read \"Arthur Q. Johnson, Grand Marshall.\" Beneath his name, someone had scrawled in black magic marker, \"100 years old\". Arthur looked up at Mary and waved. She smiled and waved back.\n\nMary watched the town go by. Boy Scout Troop 1046 marched earnestly, while their younger brothers in Cub Scout Pack 625 ambled with less discipline. The Shriners, in their tassled fezzes, made looping circles on their mini-bikes. A rotund little man with a bushy gray beard strode past, accompanied by supporters with \"Re-Elect Mayor Virgil Trundy\" signs. \n\nThe Elks and the Kiwanis marched alongside their Lady's Auxiliaries. The American Legion and the VFW held their flags high and a few pushed their brethren in wheelchairs.\n\nThere was a fire truck and an ambulance and a Model T Ford. Girl Scout Troop 322 was too wise to march. They sat on hay bales on the back of a flatbed truck and pitched handfuls of candy to the spectators. The members of the Festival Committee were honored with rides as well, and Mary remembered that Bonnie had once been among them. \n\nA gaggle of apparent dignitaries passed, but Mary had no idea who they were. She was more interested in the beautifully adorned horses that clopped by, ridden by a pair of teenage girls who might have been twins.\n\nBehind the horses, the parade grew more motley. Mary guessed that the Friends Of Londonderry Bay were being cautious to leave a gap between the horses and themselves. Or perhaps the weight of their ten foot tall Earth Goddess puppet slowed them down. The Londonderry Democrats and the Town Republican Committee were so bunched together it was impossible to tell who belonged to which party.\n\nMary was thrilled to see Jennifer and Danni marching behind a banner that read \"Londonderry LGBT Pride\". Danni was carrying a rainbow flag. Mary leaned forward and waved frantically at them. Jennifer waved back, then tapped Danni and pointed up. Danni waved as well, and Jennifer blew a kiss as they crossed under Mary's window.\n\nA half dozen people carried signs demanding respect for the rights of indigenous peoples and a lone marcher held one identifying herself as the Londonderry Friends of Animals Committee. A rabble of drummers came down the street, accompanied by a girl of about six, who danced joyously among them.\n\nAnother shiny convertible rolled past. Three teenage girls sat on top of the back seat, waving to the crowd. Two were blonde, but the one in the middle was an Asian girl with jet black hair. A sign on the car door identified them as the Harbor Princess Finalists.\n\nBehind the prospective princesses came children, kids of every age, riding bikes they had festooned with streamers and balloons. The older ones weaved in and out, circling the others. The younger kids had all they could do to keep moving forward, trying not to fall too far behind the parade. Mary watched one anxious dad as he escorted a little girl who furiously pedaled her tricycle, a single pink balloon bobbing behind her. She wondered if Alvin had ever kept watch over his girls as they rode in the parade, and she was sure he had.\n\nA second police car brought up the rear. Some of the spectators followed the parade down Main and around the corner onto Front Street, while others went about their Saturday business. Mary closed the window and bounded down the stairs and out to the sidewalk. It was a perfect day, she thought as she felt the warm sun on her face and her bare legs. \n\nAlvin had just helped a pair of teenagers launch their small sailboat when he saw her striding across the parking lot, smiling and swinging her arms as she came. She marched right up to him and kissed him on the cheek.\n\n\"Well, ain't you perky this morning,\" he said, kissing her back.\n\n\"Why not? It's a beautiful July day in Maine. Almost as good as L.A. in November.\"\n\n\"You're not as funny as you think you are,\" Alvin said.\n\n\"I'm wicked pisser funny.\"\n\nAlvin shook his head and chuckled. \"Nice try,\" he said, leading her into his office.\n\nHe crossed to his desk, took a roll of bills out of his shirt pocket and sorted it into the cash drawer. When he finished he looked at Mary.\n\n\"You were wearing those shorts the day we met.\"\n\n\"Was I?\" she asked, well aware that he was correct.\n\n\"I'm not like to forget.\" He went to the door and shut it, then pulled her into his arms for a long kiss.\n\n\"Shame you have to work all day,\" Mary murmured.\n\n\"Yes, it is, but I'm looking forward to tonight.\"\n\n\"Me too. But I'm going to have fun at the fair.\"\n\n\"Well, good. Don't eat too much cotton candy. I won't have you getting seasick on my boat with a belly full of cotton candy.\"\n\n\"Ooh,\" she wrinkled her nose. \"Well, you get back to work, I'll see you later.\"\n\n\"Alright, then,\" Alvin said. He gave her one more kiss. \"I would ask a favor of you.\"\n\nMary cocked her head. \"Sure, what is it?\"\n\n\"I'd like you to wear those shorts every day until snow falls.\"\n\nMary laughed. \"Oh, is that all?\" She kissed his cheek and opened the door. \"I thought you were going to ask for a blowjob. See you later!\"\n\nAlvin watched her until she disappeared on to Front Street. He wished he could go with her to the festival, but the town was packed with locals and tourists alike and it was going to be a very busy day.\n\nA crowd was gathered on the town landing, peering over the rails. Mary made her way over to see what had grabbed their attention. A gaggle of children were squatting down to peer under the railing, allowing her to see the shore where small groups were milling around what looked like piles of trash.\n\n\"What's going on?\" she asked the young woman standing next to her.\n\n\"Cardboard boat race,\" the woman replied.\n\nAn elderly man on her other side leaned in and explained. \"Teams make homemade cardboard boats. First one to get out around the red nun and back to shore wins.\"\n\n\"Does anyone ever make it the whole way?\"\n\n\"Now and again. If not, the furthest wins.\"\n\nThe teams positioned their makeshift boats. A two person crew boarded each and prepared to get underway. A whistle blew, and their teammates shoved the boats into the water. \n\nOf the dozen entries, two floundered immediately. Four more took on water and sank within a few yards of the shore. The crowd whooped and laughed, but applauded each team as they waded back to dry land. \n\nMary found herself rooting for a pair of teenage boys who had built a pretty good facsimile of a sailboat. They were paddling as fast as they could, and had moved into the lead. Their main competition was a mailing tube catamaran, crewed by two men who were working their oars with machine like precision. The rest of the pack fell behind, and two more sank before they reached the red buoy. One could not manage the turn and veered off towards the outer harbor, while another cut in too close and tore their hull,and sank. A rowboat made the rounds, picking up the survivors from the water.\n\nIt was just the boys and the catamaran in the home stretch. Mary could see the flimsy sailboat darken and realized that as the cardboard soaked up water, it was getting heavier and slower. Inevitably, the older team passed them and reached land first, but Mary was pleased to hear the boys get a louder ovation as they came ashore.\n\nThe crowd dispersed and Mary wandered past the barricades that closed off Front Street from traffic. Tables and tents lined both sides of the street. The groups from the parade all had their spots, interspersed with merchants and game booths and food vendors.\n\nAt a tent advertising Maine Gemstones she bought a lovely pink and green tourmaline ring. She looked at watercolor seascapes of the bay and was delighted to find a booth selling beautiful items knit from alpaca wool. She bought a glass of lemonade from the Girl Scouts and a handful of vintage postcards from the Londonderry Historical Society. Mayor Trundy gave her a campaign button, which reminded her that she had not yet changed her voter registration. \n\nAs she approached the entrance to City Park she could see that carnival rides had been set up in the parking lot. A ferris wheel rose above the trees. There were more food vendors near the park gates, and she was attracted by the smells coming from their tents. She chose one and bought a basket of shrimp and french fries and a can of ginger ale. She carried her food into the park and found an empty picnic table beneath a towering maple. Down near the water a bluegrass trio was playing in the bandshell, but she could scarcely hear them over the laughing children playing in the park.\n\nShe was eating the last of her french fries when her phone rang. She fished it from her purse. It was her mother calling.\n\n\"Hi, Mom,\" Mary said brightly.\n\n\"Hello, sweetheart, how are you?\"\n\n\"Good, Mom. Right now I am sitting in the park. I'm at the harbor festival. There's a band playing, lots of people around, it's really fun.\"\n\n\"Oh that sounds nice. Is your new fella there with you?\"\n\n\"No, he's working. But I'll see him later. There's going to be fireworks, and we are going to watch them from his boat.\"\n\nThere was an uncomfortably long pause. \n\n\"You know, Mary, you still haven't told me anything about his young man.\"\n\n\"Well, here's the thing, Mom. Young man is, well, not what I'd call him.\"\n\n\"What do you mean, darling?\"\n\n\"Well, he's older, sort of.\"\n\nHer mother's tone turned icy. \"How much older?\"\n\n\"He's forty six.\"\n\n\"Oh, Mary.\"\n\n\"Mom, he's a great guy, you will really like him.\"\n\n\"But honey, why wouldn't you be interested in someone your own age? There's a much better chance of it working out.\"\n\n\"What, like it worked out with Wyatt?\"\n\n\"That's not fair, honey. And let's be honest, it was you who broke that off. He never wanted to.\"\n\n\"I don't want to get into that, Mom.\"\n\n\"It's natural that you'd want a father figure, I guess, considering.\"\n\nMary fought not to lose her temper. \"Alright, Mom, well, I don't want to talk about it. I want to enjoy this beautiful day.\"\n\n\"Okay, sweetheart, but you know I just don't want you to get hurt. And you are far from home, you don't have a support system there, no friends or family.\"\n\n\"I know you mean well, Mom, but I'm fine and things are good. Okay?\"\n\n\"Okay, well, I hope so. Love you, sweetie.\"\n\n\"Love you, Mom.\"\n\nMary growled at the silent phone. She knew that her mother thought the breakup with Wyatt was all her fault, that she had been unfair to him. But she had tried to make things work. She drew up a business plan for his photography, as she had promised. But he chafed at most of her ideas. He agreed to advertise his availability to shoot weddings and other occasions, but when a few calls came in, he had excuses why none were suitable. He has been amenable to doing more location shootings, but he dragged his feet when it came time to try to find venues to show his work.\n\nShe gave it most of the year, waiting for things to improve. One day she came home from work to find the apartment empty. He had left a note on the kitchen table to let her know that he had gone for a beer with a friend, but would be home for dinner.\n\nMary shook her head in resignation and sat down on the couch. Several of Wyatt's portfolios sat on the coffee table. She flipped one open. It was a shoot they had done a shortly before their wedding, at the Hotel Del Coronado, near San Diego. She saw herself posed in front of the picturesque hotel, and walking along the beach. But what caught her eye were a few candid pictures, one of her gazing off to sea, another in which she was squatting in the sand, holding her fingers in the lapping surf. She felt his loving gaze in the photographs.\n\nShe noticed a new portfolio. Opening it, she saw pictures from a recent session they had done together in Griffith Park. She flipped through the whole portfolio, and realized that of two dozen prints, she only appeared in three of them. He's just not interested in me anymore, she thought.\n\nTwo weeks later, she met Brent. She was attending a day long seminar at a downtown hotel, and he was part of the team training bank employees on a new software program. Mary thought he was strikingly handsome. He looked to be about thirty, with steel blue eyes and light streaks of gray at each temple. At one point during his presentation they made eye contact, and he smiled at her. She dropped her eyes in embarrassment, and when she looked up again, he was still gazing at her. She held his eyes for a moment and showed him a shy smile before he returned to his material.\n\nAt noon, the attendees were treated to a buffet luncheon on the hotel patio. Mary filled her plate with chicken salad and fresh fruit and found a seat. She decided to check her messages before she ate, and when she looked up from the phone, Brent was taking the chair across from her.\n\nHe reached over the table and introduced himself. \"Brent Scanlan, Century Solutions.\"\n\n\"Mary Winslow, First American.\"\n\n'Yes, I know,\" he said, pointing at her chest. She looked down. She forgot she'd been wearing a name tag.\n\n\"I hope you find the training helpful.\"\n\n\"Yes, very much so,\" she replied.\n\nHe asked her how the food was, and if she was enjoying the weather and how the traffic had been on her drive downtown. She struggled to answer him, suddenly feeling shy and insecure. But he continued to smile and make small talk and she realized how much she was enjoying his attention.\n\nWhen it was time to begin the afternoon session, they rose and Brent took Mary's plate.\n\n\"Let me take that,\" he said, \"It was lovely speaking with you.\"\n\n\"Likewise,\" Mary said, feeling a little flustered. Brent put the plate in a bus tub by the door and gestured Mary into the building. As they walked down the corridor to the conference room, he handed her his business card.\n\nThe afternoon session was a long drone and Mary had trouble maintaining her attention. Brent's part of the program was finished. He sat at the end of the presenters table, doodling on his note pad. Mary could not help casting glances in his direction. At one point, she let her eyes drift below the table. He sat with his legs slightly parted and for a moment she imagined herself kneeling there, sucking his cock. Surprised with herself, she shook off the image and tried to concentrate on the training, but her eyes kept drifting back to him.\n\nShe felt foolish on her drive home. She was a married woman. But a little chat and some harmless fantasy about another man couldn't hurt anything. She put it out of her mind as best she could. But when she had sex with Wyatt a few days later, the thought of kneeling between Brent's legs returned.\n\nShe received an email questionnaire the following week, asking for her comments on the seminar. She dutifully filled it out and, in a moment of whimsy, added a note that \"all the presenters were first rate, particularly Mr. Scanlan.\"\n\nHe called her the next day. \n\n\"That was above and beyond,\" he told her, \"I don't think you realize how much I appreciate your comment. My bosses definitely took notice.\"\n\n\"Well, it was my pleasure, Mr. Scanlan. I thought you did a terrific job.\"\n\n\"Please, call me Brent. Listen, I am in your area this afternoon. Maybe I could thank you by buying you a drink,\"\n\nMary felt a knot in her stomach. She struggled to think of what to say. It was completely out of the question to meet this man for a drink, and yet, the idea thrilled her.\n\n\"Miss Winslow? Mary?\"\n\n\"I'm not sure that's appropriate, Brent.\"\n\n\"It's just a cordial drink between colleagues,\" he said in a reassuring voice, \"Look, your office is right by the Starlight Lounge on Wilshire, isn't it?\"\n\n\"It's not far.\"\n\n\"I am going to treat myself to a cocktail there at five. If you'd like to join me, that would be super. If not, well, thanks again for your comments.\"\n\nMary felt her pulse racing as she hung up the phone. She was afraid she might be on the verge of a panic attack. She sat with her eyes closed and concentrated on her breathing. When she felt in control she tried to think through her feelings. Just accept the fact that you want to go have drinks with him, she thought, and focus on the reasons why you should not. Well, the reason, she told herself, there is only one. You love your husband.\n\nShe picked up the phone and called Wyatt. He did not answer. As five o'clock approached, she tried again. When she still got no answer, she left a message that she would be late getting home. She doubted he would care.\n\nMary walked into the dimly lit lounge and looked around. She saw Brent's reflection behind the bar before she saw him. As she crossed to where he was sitting, he looked up and made eye contact with her in the mirror. He turned and stood to greet her with a two handed handshake. She climbed onto the high barstool, being careful not to let her skirt ride up.\n\n\"I'm having an appletini, would you like one?\" Brent asked.\n\n\"Sure, that sounds great.\"\n\nBrent signaled the bartender and ordered Mary's drink. \n\n\"Again, thank you for your comment,\" he said to Mary, \"but, if you don't mind, what did you enjoy so much about my presentation that you singled it out for praise?\"\n\nMary blushed. \"Oh, I guess I just liked your style.\"\n\nBrent nodded, looking quite self satisfied. Mary's drink arrived and as she lifted it, he raised his own and offered a toast.\n\n\"To style.\"\n\nThey clinked their glasses together and took a drink.\n\n\"I think my strength as a presenter is that I am very straightforward,\" Brent said. \"I put out the information clear and to the point. I find that's best, don't you?\"\n\n\"I suppose so.\"\n\nHe swiveled towards Mary and put his hand on her arm. \"So, I will be straightforward now. I was really glad to see your note on the questionnaire, because I was interested in you from the moment I saw you. In fact, I looked for you as everyone was leaving, but somehow I missed you.\"\n\nThere was an awkward silence while Mary tried to formulate a response. \"I'm flattered, thank you,\" she managed, then paused.\n\n\"But?\" Brent asked.\n\nMary held up her left hand. \"I'm a married woman.\"\n\nBrent leaned his elbows and the bar and took a long sip of his appletini.\n\n\"You know, Mary, most women would say 'happily married woman', not just 'married woman\".\"\n\nMary sat with her hands in her lap, looking at her ring. \"Either way,\" she muttered, \"married.\"\n\n\"I respect that,\" he said, \"and I apologize if I have made you uncomfortable.\"",
        "\"No, I...maybe I shouldn't have come, but thank you for the drink.\"\n\n\"Please have one more with me and forgive my foolishness.\"\n\nMary nodded and Brent called for another round.\n\n\"I don't think you were foolish,\" Mary said in a shaky voice, \"I'm flattered that you are interested in me. It's a nice change of pace.\"\n\n\"I can't imagine any man not being utterly interested in you.\"\n\nMary looked into his eyes and he drew in closer. He's going to kiss me, she thought, I can't let him kiss me. But when he kissed her, she welcomed it.\n\nBrent leaned back. \"Now you must admit, that was foolish,\" he said.\n\n\"Maybe just a bit.\" Mary felt lightheaded, but knew that she was on dangerous ground.\n\n\"I should go,\" she said.\n\n\"Alright,\" he said, \"I will be content with a kiss.\" \n\nThey both stood up. \"Let me walk you to your car,\" Brent offered.\n\n\"No, that's alright.\" She was afraid that if he did, they would kiss again, and that more might follow. \"Good night.\"\n\nShe shook his hand and scurried out of the bar. By the time she reached her car, she was trembling. She got behind the wheel and sat, eyes closed, breathing deeply. After a few minutes she was calm enough to drive home.\n\nWyatt was sitting at the kitchen table when she came into the apartment. There was an array of Chinese food containers in front of him. He was eating fried rice with a spoon.\n\n\"I wish I knew you were coming home late,\" he said as Mary took off her shoes.\n\n\"I left you a message.\"\n\n\"Yeah, I meant before that.\"\n\nMary sat down across from him and looked in the cartons. She found one containing steamed dumplings, picked one out with her fingers and ate it.\n\n\"So, where'd you go?\"\n\n\"Out for drinks with someone from work.\"\n\n\"Oh.\" He picked up his phone and started reading something.\n\n\"Wyatt, can we talk?\"\n\n\"Sure,\" he said, scrolling.\n\n\"Put the phone down, please.\"\n\n\"Yeah, in a sec.\"\n\n\"Wyatt, put the phone down.\"\n\n\"Just a...\"\n\n\"Goddamn it, Wyatt,\" she shouted, \"put the fucking phone down!\"\n\nWyatt looked at her as if she had slapped him. \n\n\"Jesus, Mary, what's your deal?\"\n\nShe struggled to keep her voice calm. \"My deal is that if I ask to talk to you, it ought to be more important to you than whatever you are doing on your phone.\"\n\n\"Okay, okay, what's so important?\"\n\n\"We need to talk about us.\"\n\nWyatt rolled his eyes. \"Oh, another what's wrong with Wyatt conversation.\"\n\n\"No, let's talk about what's wrong with Mary for once.\"\n\n\"Okay, so what's wrong?\" Mary could hear an undertone of impatience in his voice.\n\n\"I've been unhappy for a while now, Wyatt, I think you know that.\"\n\n\"Yeah, pretty much.\"\n\n\"Have you given any thought as to why, or if there is anything you can do about it?\"\n\nWyatt stared into his rice and said nothing.\n\n\"Do you still love me?\" Mary asked in a quiet voice.\n\n\"Oh course I do.\"\n\n\"Why?\"\n\n\"I have always loved you. Goddamn it, you know that.\"\n\nMary leaned her chin on her hand and gazed at the ceiling for a long moment, then looked at Wyatt.\n\n\"I have always loved you, Wyatt, but I don't know if I want to be married to you anymore.\"\n\nHe looked at her with a stunned expression. He quietly mumbled, \"Fuck that,\" then swept his arm across the table, sending dumplings and rice and General Tso's Chicken flying.\n\nMary jumped up from the table and retreated into the living room. She heard Wyatt's fists slam into the table, and then the apartment was silent. She walked back to the archway into the kitchen. He was still sitting there, food all over his shirt. He looked up at her, tears flowing down his cheeks. Mary left the room before her own tears could fall.\n\nShe went to the bedroom and took her suitcase out of the closet. She hurriedly packed a few outfits, then gathered up her make up and toiletries. At the last minute she snatched the book she's been reading from the nightstand and stuffed it into the bulging suitcase.\n\nWyatt was still sitting at the table. Mary had practiced what to say while she packed, and she managed to get through her speech without breaking down.\n\n\"Wyatt, I am going to go to my Mom's for a few days. I want you to figure out where you are going to go while I'm gone. I can afford this apartment on my own, you can't. I don't know what's going to happen, but for now, I need to be on my own. I'll call you.\"\n\nWyatt looked up at her and nodded. \"I'll clean up the food.\"\n\n\"Thank you,\" she said, and walked out.\n\nMary heard someone call her name. She looked around to see Kelly Martin striding towards her. Mary stood up and they hugged. Kelly turned to a very large man behind her. \n\n\"This is my husband, Mike. And somewhere, oh there she is, that's my daughter, Breanna. I don't know where the boys have run off to.\"\n\nMary shook hands with Mike as Breanna, who looked to be about eight, waved from behind a beard of pink cotton candy. Don't go on any boat rides, kid, Mary thought.\n\nAfter a few minutes of chatting about the fair and the weather, Kelly got a serious look on her face.\n\n\"Listen, Mary,\" she asked, \"I wonder if you could do us a big favor?\"\n\n\"Sure, if I can.\"\n\n\"Well, Bre really wants to ride the ferris wheel, and unaccompanied kids aren't allowed. I am deathly afraid of heights, and Mike, well...\"\n\n\"I don't fit,\" her husband shrugged.\n\n\"Oh, I see.\" Mary looked down at Breanna. \"Would you like to go on the ferris wheel with me?\"\n\nBreanna nodded enthusiastically. Mary thought she said thank you, but it was muffled by a mouthful of pink fluff.\n\nMary disposed of her lunch trash and they all walked to the carnival rides in the parking lot. Mike purchased two tickets and handed them to Mary. \n\n\"I'll hold that for you,\" Kelly said, taking her daughter's cotton candy and biting into it. Breanna skipped over to the ferris wheel line. Mary followed and joined her.\n\n\"Have you been on a ferris wheel before?\" she asked the girl.\n\n\"Nope. Have you?\"\n\n\"Yes, a long time ago. With my father. I was probably about your age.\"\n\n\"At the festival?\"\n\n\"No, honey, it was a place called the Santa Monica Pier.\"\n\nBreanna frowned. \"Is that by here?\"\n\nMary shook her head. \"No, it's in California.\"\n\nBreanna's eyes widened. \"You been in California?\" \n\nThe line began to move. \"I was born there,\" Mary told her, \"but I live here now.\"\n\nThey clambered into a seat. The attendant lowered the safety bar and locked them in. Breanna jumped as the wheel lurched upward a few feet. Mary put her arm over the girl's shoulders. \"That's just them moving the car so the next people can get in.\"\n\nBreanna relaxed and did not flinch when the car lurched again.\n\nFinally the wheel began to slowly rotate. As they rose, Mary looked down, watching the park grow smaller beneath them. \"There's my Mom and Dad,\" Breanna shouted, waving both hands. Mary waved as well and saw Kelly give them two thumbs up. The cotton candy was gone.\n\nThey rose higher, and Mary looked towards the landing and Faulkner's Wharf came into view behind it. Tiny shapes moved about. Certainly one of them was Alvin. She raised her eyes and beyond the wharf she saw the curve of the shore, whitecaps breaking against it's rocky edge. Beyond the breakers, green hills rose and fell as far as her eye could see. Here and there the sun sparkled off a lake or the bend of a river. Had it not been for a few cell phone towers and the slashes of power lines, the world beyond Londonderry might have been an endless forest.\n\nThey crested the top and the wheel kept turning. Mary felt the descent in her stomach and looked to Breanna, but the girl's smile was broad and untroubled.\n\nThey reached the bottom and began a second upward pass, this time moving slowly, stopping for each car to spend a moment at the zenith. Mary looked the other way, out across the water. With each tick upward, the bay seemed to widen. She peered out toward the islands, and knew that if Alvin were here, he could show her where they had seen the dolphins. He could point to the cove where they had docked that first day they spent together. Where they had first kissed.\n\nThe car reached the top and she could see beyond the islands. Land and sea alternated to the misty horizon. In the distance she saw sunlight glittering off low mountains. It made her think of California. Mountains by the sea were so rare that they seemed a special thing, something unlikely, that really should not be.\n\n\"Look out there!\" Breanna cried. She pointed far out in the bay, to a single set of white sails surrounded by deep blue. \"I wonder what it's like being way out there.\"\n\n\"It's beautiful,\" Mary whispered, \"as beautiful as anything could be.\"\n\nBreanna looked up at her. \"Um, Mary, are you crying?\"\n\nMary wiped her eyes. \"Sometimes really beautiful things make you cry.\"\n\n\"Oh yeah,\" Breanna nodded, \"My Mom cries sometimes from reading books.\"\n\nThe wheel turned and they made their way to the ground. Mary's knees buckled slightly as she stepped on to the pavement.\n\n\"You alright, dear?\" Kelly asked.\n\n\"I'm fine, just a little wobbly,\" Mary said.\n\n\"Did you eat all my cotton candy?\" Breanna asked her mother.\n\n\"Might have,\" Kelly replied, \"is my face sticky?\" She took her daughter's face in both hands and kissed her on the mouth. Breanna recoiled and wiped her face on her arm as her mother cackled and turned to Mary.\n\n\"Thanks, Mary,\" she said, holding her arms out, \"Here, you want a big sticky kiss?\"\n\n\"I'm good, Kel. I'll see you on Monday.\"\n\nThey parted and Mary walked down towards the water. A rock and roll band was playing in the bandshell, and most of the crowd had congregated there. She reached the shore and climbed halfway down the rocky slope. Finding a smooth shelf of rock, she sat down and hugged her legs against her chest. The view from the ferris wheel had left her oddly unsettled. She had come to Maine for a fresh start, but she had not seriously considered if she would stay long term. Alvin complicated things. A relationship with him would be a commitment to living here, perhaps for the rest of her life.\n\nIt was ironic, she thought, that in a way, she owed her presence in Maine to Brent.\n\nShe had no desire to date anyone in the months after Wyatt moved out. She had never lived alone, and she found that she could enjoy solitude. Eating the meals she wanted without compromising, reading all evening without interruption, drifting off to sleep without the raucous soundtrack of video games from the next room; being single had its charms. But eventually, she began to feel lonesome, and when her sister-in-law Beth asked her if she would be interested in meeting one of her male friends, Mary agreed.\n\nHis name was Charles, and he was an engineer at an aerospace company. Beth and Dan arranged a small dinner party, and Beth made sure than he and Mary sat side by side.\n\nHe was a nice looking guy, slightly overweight, with light blonde hair and a neatly trimmed beard. His manners were impeccable and his conversation lively. Mary enjoyed his company and, at the end of the evening, when he asked her if she would be interested in accompanying him to a symphony concert the following week, she readily said yes.\n\nThe concert was pleasant but not exciting. She enjoyed Charles' company though, and they lingered over drinks a long time afterwards, getting to know each other.\n\nThe following week, it was dinner and a movie, and the next, a wine tasting party at a house in the Hollywood Hills. By the fourth date, Mary realized that they were already running out of things to talk about. Nonetheless, when he asked her if she would spend the night with him, she agreed. \n\nCharles was tender, considerate and quick. Mary reassured him that she was not upset with him, and promised that the next time would be better. It was but it still left her unsatisfied. She considered breaking things off with him, but felt a bit of shame at the idea that she would not see him because their sex had not been good. She went out with him one more time, but declined his invitation to his bed. He did not call the next week, perhaps sensing that she was losing interest, and when he did finally call and she told him she thought it was time to move on, he seemed neither surprised nor disappointed.\n\nMary had never considered sex particularly important. Before Charles there had only been Wyatt. Their lovemaking had been exciting in the early years, but had begun petering out long before their breakup.\n\nNow, however, she was starting to miss the touch of a man. But even more, she began wondering if she had missed the opportunities for real romance in her life. She'd been a good girl, she had always played things safe. Maybe, she wondered, I should have slept with Brent.\n\nOnce that thought entered her head, it would not go away. One night, lounging on her couch, she searched to see if he had a Facebook account. When she couldn't find one, she tried Twitter and found him there. She clicked on Follow and in less than an hour he sent her a private message. It read \"your bio says you are single\".\n\nHis directness made her catch her breath. She replied, confirming that she and Wyatt had separated and that their divorce would soon be finalized.\n\n\"I'd like to see you,\" he messaged back.\n\n\"I would like to see you too\"\n\n\"Tomorrow?\"\n\n\"Okay\"\n\n\"Starlight Lounge? For old time sake? 7:00?\"\n\n\"Yes. See you then.\"\n\nShe put down her laptop and realized that she was breathing heavily. She closed her eyes and thought about him, about those piercing blue eyes. Her hand drifted inside her pajama bottoms and she began to touch herself, imagining kissing him again, and this time, not pulling away. \n\nShe walked into the Lounge at exactly seven, and he was at the bar, in the same seat he had been in six months before. He stood and kissed her cheek before helping her onto the high barstool. She had worn a short dress and noticed his eyes on her legs as she sat and crossed them. Within a minute of being with him, she felt sexy in a way she had not in years.\n\nHe ordered martinis and asked her about her divorce. He was sympathetic as she described how she and Wyatt had drifted apart. She did not mention how her meeting with him triggered their split. They made small talk about work and politics and the weather, but they soon found themselves sitting in silence. Brent leaned close and ran one finger along the edge of Mary's face, then gently kissed her.\n\nShe lowered her head, then raised it to look around the bar. No one was paying them any mind. She put a hand on his shoulder and kissed him back.\n\nThey took their drinks to a corner table and sat side by side, holding hands. Brent wanted to know all about Mary; what music she liked, her favorite restaurants, the latest book she had read. Mary reveled in the attention, she could not remember the last time anyone was so interested in her. She scarcely noticed that when she asked about him, he deflected her questions, usually with a kiss.\n\nThey drank another round and Brent began drawing circles on Mary's thigh with his fingertips.\n\n\"I should get home soon,\" she told him, \"it is a work night.\"\n\n\"I hope it won't be six months before I see you again.\"\n\nShe picked his hand up off her leg and squeezed it. \"No, I don't think it will.\"\n\n\"Let me walk you to your car.\"\n\nHe took her hand and escorted her out of the lounge and down the block to where she had parked. She opened the car door and turned back to face him. He took her in his arms and kissed her. She kissed him back eagerly.\n\n\"I was wondering,\" he said, \"I have the use of a friend's Beach House in Malibu. Would you like to take a ride out there with me on Saturday?\"\n\nThe idea seemed so romantic that Mary could not help but nod in assent. They kissed again and parted.\n\nHe picked her up on Saturday morning in a cherry red Corvette convertible. She wore a floral pattern blue and white sundress, and she spent the whole ride to the beach holding it down in the wind. Still, she felt excited. This was the sort of romantic adventure she had never thought she would experience.\n\nThey stopped for lunch at a cafe near the lagoon, then drove to the beach house. Brent unlocked the door and they stepped inside. Mary crossed the living room to the ocean side, where a glass wall gave a panoramic view of the beach and the rolling surf. She felt Brent's hands on her hips and his lips on the side of her neck. \n\n\"Mmm,\" she moaned, \"this is wonderful.\"\n\n\"This is what a woman like you deserves.\" He turned her around and they kissed. \n\n\"Come on,\" he said, guiding her to a spiral staircase. She climbed it, Brent behind her, his hand on her hip. She stepped into a large bedroom and saw the same view of the ocean. Before she could see much more, Brent had swept her onto the king sized bed. He was on her, their legs entwined, their tongues finding each other. Mary fumbled with his belt buckle while he tugged her dress above her waist. In a moment, they were naked, and in another, he was inside her.\n\nNeither Wyatt nor Charles had fucked her like this. It felt urgent but controlled. She held on tight and wrapped her legs around his waist. After several minutes, he rolled over, carrying her with him. He continued fucking her from beneath. She was close to an orgasm when he shifted again, turning her over and entering her from behind. She raised her ass to meet him and the sound of his hips slapping against her seemed as loud as thunder. In a few moments she came with a long low moan. Brent pushed her down prone on the bed and she felt his weight pressing on her. He suddenly stiffened, then moving slowly, he came in a shuddering finish and laid limp on top of her.\n\nMary pushed upward and Brent rolled off of her. She sat up, struggling to steady her breathing.\n\n\"That was great,\" Brent moaned.\n\n\"It was,\" Mary puffed. It had been the best sex she'd ever had. There was something about the way that he had been in control, while remaining attuned to her responses that was very different from anything she had experienced before. She flopped back on the bed and closed her eyes. They laid together in silence, enjoying the afterglow. \n\nAfter a while, Mary got up to use the bathroom. When she came back, Brent was looking at his phone. He glanced up at Mary with a frown, then back at the screen.\n\n\"I'm sorry,\" he said, \"but I've got to get back to town.\"\n\n\"Is something wrong?\" Mary asked.\n\n\"No, it's just a work problem.\" He rolled off the bed and put his arms around her. He kissed her and said, \"I wish we could stay, but I promise we will come back, okay?\"\n\nMary nodded and gathered her clothes. As they drove home she watched the sunlight glimmer on the ocean. She had imagined that they would walk on the beach, preferably at sunset. She had even fantasized making love in the surf. But despite her disappointment, she felt contented. When Brent dropped her off, she considered the possibility that she might not see him again, and she was alright with that. The experience had been worthwhile, even if it might not be repeated.\n\nIt was repeated. The following weekend they enjoyed dinner at a restaurant near Mary's apartment, then spent the night in her bed, making love for hours. One day, Brent met her for lunch and she gave him a blowjob in his car. She loved the feeling of naughtiness she felt when she returned to work.\n\nMary was feeling great on the day when everything changed. In fact, as she drove home, she was thinking about what a fine day it had been. She felt like she'd had a productive shift at work, and she was planning to talk to Brent that evening and accept his invitation to accompany him on an upcoming trip to San Francisco.\n\nThat was before she pulled into her parking space and saw a nicely dressed blonde woman striding purposefully towards her.\n\n\"Are you the whore?\" the woman snarled at Mary.\n\nMary looked at her, shocked. \"Excuse me?\"\n\n\"You're Mary, right? The slut who is fucking my husband?\"",
        "\"Your husband?\" Mary asked, dumbfounded.\n\n\"Brent,\" the woman said, standing with her fists on her hips. \"Yes, my goddamn husband. How long have you been fucking him?\"\n\n\"I just..I didn't know, I...\"\n\n\"Oh christ, you're dumber than the last one.\"\n\n\"I'm sorry,\" Mary said as the woman turned away.\n\n\"Not as much as you will be,\" Brent's wife said, holding up one finger as she climbed into her car.\n\nMary stood frozen as she drove away, and for several minutes afterwards. Then she went into her apartment, kicked off her shoes and flopped down on her bed. I ought to be crying, she thought, but she felt stupid more than hurt. After a while she got up and retrieved her laptop.\n\nThere it was, on her Facebook timeline, posted two hours earlier by Lisa Scanlan. \"This whore has been fucking a married man. We have three kids. Do.Not.Trust.Her.\" Mary deleted the post and went to her settings and made her account private. There were no replies to the post, but there was no way to know how many people had seen it. Surely, some of her friends from work had. Wyatt? Her brothers or their wives? Robbie seemed to be on Facebook all day. At least, she thought, her mother didn't use Facebook. That was the thought that made her tears finally flow. \n\nShe had just sat down at her desk the next morning when she was told that she needed to report to Mr. Chou in the administration office. She took a few of her personal items from her desk and stuffed them in her purse. She was afraid that she might be escorted from the building.\n\nMr. Chou welcomed her into his office and asked her to take a seat. He sat behind his desk, his hands clasped in front of him. He did not make eye contact with Mary while he explained to her that there had been a complaint that she'd engaged in inappropriate conduct with a company consultant while attending a training seminar.\n\nMary denied it. \"I met him then, but there was no inappropriate conduct.\"\n\nMr. Chou looked at the paper in front of him. \"You didn't go out with him?\"\n\n\"I met him for drinks. Nothing happened.\"\n\nHe winced. \"Is it a coincidence that you separated from your husband shortly after meeting Mr. Scanlan?\"\n\n\"Yes. Well, no, not really. It's complicated.\"\n\n\"Miss Winslow, you are a valued employee. An exemplary employee, in fact. But we have a business relationship with Mr. Scanlan's employer, and it depends on good relations. I mean, well, you know what I mean.\"\n\nMary fought to keep from crying. \"Am I fired?\"\n\n\"Oh no,\" he said, \"But consider yourself warned that any future inappropriate conduct could result in termination.\"\n\nMary felt relieved, then almost immediately angry. She doubted that Brent was called on the carpet that way she had been.\n\nAs she returned to her desk, Mary had the impression that every eye in the office was on her. If they did not all know, they would soon. She felt defensive, but had to admit, she had always had some misgivings about Brent. She could have done some checking on him. It would not have been hard to find out that he was married. She didn't try. She had been too caught up in her fantasy.\n\nAs the weeks went by, she never completely escaped the feeling that everyone knew what she had done. She had already become isolated from most of her friends because of her split from Wyatt and now she stopped socializing with her co-workers. It seemed like her life had shrunk to a dull cycle of work followed by evenings alone in front of the television. When she received a memo that the bank was looking for people who were interested in relocating to their new facility in Maine, she indicated that she was interested. What the hell, she thought, I like lobster.\n\nMary never thought of oceans as having personalities, but she remembered the way the Pacific looked on that day she drove to Malibu with Brent as she looked out onto the water of Londonderry Bay. The Pacific had lived up to it's name, placid, inviting. Despite it's calm demeanor here in the harbor, the Atlantic was wilder, more unpredictable. The Pacific is like a dream, she thought, the Atlantic is like life. \n\nShe climbed up from the rocks and wandered over to the bandstand. A sign propped on a tripod identified the raucous musicians as the Londonderry Ukulele Ensemble. She listened for a while, then moved back along the rows of game booths and food stands. She bought another lemonade from the Girl Scouts and sipped it as she made her way back to the town landing. She crossed to the far side and leaned on the rail, looking over the narrow stretch of water that separated it from Faulkner's Wharf. She saw Alvin speaking with a young couple, a toddler wandering about their feet. As she watched, the child made a break for it, running towards the water. Without even looking down, Alvin scooped the little one into his arms and handed him over to his startled mother. Mary smiled and shook her head. After her experience with Brent she thought she'd never trust a man again. But she had instinctively trusted Alvin from their first meeting and she knew she had been right. She'd convince her mother eventually. She just had to meet him.\n\nThe couple with the wayward toddler were walking up the wharf's driveway as Mary started down it. She smiled at them and they smiled and nodded back at her. Alvin was standing in front of the boathouse watching her. She resisted the urge to run to him, settling for a wave and a slightly faster pace.\n\n\"Looks like you had a fine day at the fair,\" he said as she approached. Mary wrapped her arms around his neck and kissed him.\n\n\"I had a wonderful time. I even rode the ferris wheel.\" She told him about seeing Jennifer and Danni and showed him her new tourmaline ring.\n\n\"Well, if you ain't stuffed with corndogs and whoopie pies, I'd like to get some supper. You might want to join me.\"\n\nMary laced her arm through his. \"I'd be happy to join you, where shall we go?\"\n\n\"I had thought we'd cross over to Chase's and eat a couple of bugs.\"\n\n\"Ooh, don't call them that!\"\n\nThey boarded Sea Jay and puttered to the opposite side of the harbor. Chase's Lobster Pound consisted of a large open air building and a dozen outdoor tables at the end of a long pier. There were places to tie up small boats and Alvin found one that could just accommodate Sea Jay. Mary marveled at the skill with which he maneuvered the boat into position.\n\nAlvin gestured Mary towards the ladder that led up to the dining area.\n\n\"You just want me to go first so you can look at my butt,\" Mary playfully chided him.\n\n\"No, I want to get up there and eat. But I also want to look at your butt.\"\n\nMary gave it a little extra sway as she climbed. The dining area was packed with tourists, some in town for the festival, most on their way further down east, to Bar Harbor or Schoodic. Mary spied an empty table and sat down while Alvin went to the serving area to get their food. She was staring out across the bay when he came back with a tray holding a couple of sodas and plates piled with bright red lobsters, corn on the cob, cole slaw and biscuits. \n\n\"I saw you catch that kid,\" Mary said as they ate.\n\n\"What kid?\"\n\n\"Just before I got there, you were talking to a couple and their kid started to run towards the water and you just scooped him up.\"\n\n\"Oh. I guess I did.\" He swallowed a big bite of biscuit and added, \"I scooped you up too, didn't I?\"\n\n\"I guess you did. But I'm not a little kid.\"\n\n\"Something on your mind, Mary? You seem to have gone from high to low wicked fast.\"\n\n\"I'm just thinking about things,\" she shrugged, \"how I got here, if I fit in, things like that.\"\n\nHe nodded. \"You wandered around the fair alone, while everyone else was with their friends and their families.\"\n\n\"That's part of it,\" she replied.\n\n\"What else is part of it?\"\n\nShe looked down at her plate for a minute before answering. \"Alvin, does the age difference between us bother you?\"\n\n\"I get a bit tired of people telling me what a lucky bastard I am.\"\n\n\"I'm being serious. My mom called, and we talked about you.\"\n\n\"And...\"\n\n\"And I told her how old you were, and she was not happy.\"\n\n\"That's not a surprise is it?\"\n\n\"No, but, the thing is Alvin, she thinks...\"\n\nAlvin waited for her to continue. He reached across the table and took her hand.\n\n\"She thinks that I'm looking for a replacement for my father, because he died when I was so young. She thinks that's why things didn't work out with Wyatt, because he was a boy my own age and I expected too much from him.\"\n\nIt was Alvin's turn to look out at the water and gather his thoughts. At last he replied. \n\n\"Mary, I don't think there is anything wrong with you expecting a man to live up to your image of your father. It don't make you weak or developmentally stunted or whatever the hell you're thinking. As far as what anyone else thinks, even, with all respect, your mother, I do not give one good goddamn. Age don't matter, if you're Bogey and Bacall or if you are Romeo and Juliet.\"\n\n\"Romeo and Juliet died at the end of the story,\" Mary replied.\n\n\"So did Bogey and Bacall. And so will we.\"\n\nMary picked up his hand and kissed it. \"That was a wicked good bug, by the way.\"\n\nAlvin laughed. \"I think you're fitting in.\"\n\nThe climbed back on Sea Jay and cast off. Alvin guided the boat to a position in the middle of the harbor, directly in front of city park, and dropped anchor. The music from the bandstand echoed off the water.\n\nMary stretched out on the rear bench while Alvin went below decks. In a few minutes he returned with a large plastic pitcher and a pair of glasses.\n\n\"What do you have there?\" Mary asked.\n\n\"Sangria.\"\n\n\"You're kidding?\"\n\n\"No, I'm not kidding,\" Alvin said as he poured a glass and handed it to Mary. \n\n\"You never cease to surprise me, Alvin Faulkner.\"\n\nAlvin poured a glass for himself, and sat down beside her. Mary rested her head on his shoulder.\n\n\"This is yummy,\" she said, sipping her drink. \"How long do we have before the fireworks?\"\n\n\"Sun's almost down,\" Alvin said, looking over his shoulder to the westernsky. \"I'd guess an hour.\"\n\nMary refilled her glass. \n\n\"Thank you for what you said, Alvin.\"\n\n\"About the age difference?\"\n\n\"About not caring what my mother thinks.\"\n\nAlvin laughed. \"I'm sure she'd like me fine if she met me.\"\n\nMary shrugged. \"I think my Dad would have liked you.\"\n\n\"I'm sorry I didn't get the chance to meet him.\"\n\nAlvin snuggled his face close to Mary's.\n\n\"Remember,\" he said, \"my father died young as well. I was only eighteen.\"\n\n\"You miss him, don't you?\"\n\n\"Of course I do, but...\"\n\nMary sat back, looking into his eyes. \"But what, honey?\"\n\n\"I feel kind of guilty to say it, but in a way, his absence gave me the space to become who I was meant to be. Does that make sense to you?\"\n\n\"I think so.\"\n\n\"It doesn't make me sound like I didn't love him?\"\n\n\"No, of course not.\" She kissed his cheek.\n\n\"Fathers and sons,\" Alvin shrugged, \"I suppose that's a lot different than fathers and daughters.\"\n\nMary poured herself more Sangria. She stood up and stepped to the rail, looking over to the park.\n\n\"It looks like the whole town has come for the fireworks,\" she said.\n\n\"Likely they have. It's the biggest event of the year, save maybe the Christmas tree lighting. Of course, that's got Santa Claus, so it has an unfair advantage.\n\nShe looked over her shoulder at Alvin. \"You know, you are nothing like my Dad,\" she said. \"He was a wonderful father but he didn't have much of a sense of humor. He was a little, I guess I'd say cold.\" \n\nMary suddenly began crying. She turned her head from Alvin, hoping to hide her tears, but he heard the catch in her breath.\n\n\"Mary, what's wrong?\"\n\n\"It's just, I don't know, all day I have been thinking about some things and...\" Her voice tapered off.\n\n\"Talk to me, sweetheart.\"\n\nMary turned to face him. She leaned against the boat rail and crossed her arms over her chest. \n\n\"I was the baby and I was the only girl,\" she began hesitantly, but then the words flowed out, mixed with tears, \"and I know what people think, oh you must have been spoiled. But it wasn't like that. My dad was all into the boys and their sports and what they were going to be when they grew up.\"\n\nAlvin sat forward, listening, not interrupting.\n\n\"And I wanted to be a dancer, and I kind of thought, well, that's sort of the same thing, like being an athlete. And my Mom took me to all my lessons and my recitals. And my dad would come see me sometimes, but I knew he really wasn't interested.\"\n\nShe wiped her nose on her hand and continued.\n\n\"And more than anything, I wanted to be his girl and I was such a good girl for him, I never got in trouble, I did good in school. I wanted to show him what I could be, to make him as proud of me as he was of Stevie when he scored a touchdown.\"\n\nHer voice rose to a shout.\n\n\"But he fucking died. He got cancer and he fucking died and I never got to fucking show him! All I wanted was for Daddy to tell me he was proud of me and he never did!\"\n\nAlvin took her in his arms. She buried her face in his chest and wept, her body heaving with sobs. He petted her head until she began to calm down.\n\n\"I am not your father,\" he whispered, \"but I want you to show me what you can be.\"\n\n\"Oh, Alvin,\" Mary sighed. He guided her to the bench. They sat down and he took her shoulder and turned her towards the stern. The western sky was a blaze of magenta and orange.\n\n\"Do you know the best part of the sun going down?\" Alvin asked.\n\nMary shook her head.\n\n\"Knowing it will come back up tomorrow.\"\n\nMary kissed his cheek. \"I got tears and snot all over your shirt. And a little mascara.\"\n\n\"I'll never wash it again.\"\n\n\"I think you're learning more about me than you want to,\" Mary sniffed.\n\n\"I'm learning you can't hold your frickin' liquor.\"\n\nMary giggled and gave him a playful punch on the arm.\n\n\"Moon's up,\" Alvin said.\n\n\"It's almost full.\" \n\n\"Waxing gibbous.\"\n\nMary looked at him and shook her head. The music stopped and the crowd ashore applauded, then for a moment the only sound was the gentle slap of waves against the hull.\n\n\"It's about to start,\" Alvin said, and there was a hiss and a boom and the sky exploded in color, green and gold and white. The sparks spiraled downward so close that Mary feared they would reach the boat. She stood and went to the rail as more fireworks lit the night in blue and red.\n\nAlvin stepped behind her and wrapped his arms around her waist. Mary leaned against him and he kissed the back of her head.\n\nEach burst of light was reflected off the surface of the water. As the fireworks escalated in tempo and intensity, the night seemed awash in color. The noise was deafening, Sea Jay vibrated with it. Mary felt nearly overwhelmed with the sight and sound, but with Alvin's arms holding her tight, she felt completely safe. When she looked upward, she could imagine they was rising into the air, dancing among the kaleidoscopic colors.\n\nThe display climaxed with a crescendo of explosions, one colorful burst after another until the harbor was lit as brightly as midday. Mary felt tears on her cheeks. Maybe they were caused by the acrid smoke, Mary thought, but sometimes beautiful things can make you cry.\n\nThe last sparks spiraled to the water and blinked out, and there was a moment of silence. Then the crowd in the park roared their approval and Mary clapped her hands in delight.\n\nAlvin turned her and hugged her to his chest. She rested her head on his shoulder. The harbor grew dark and quiet as the festival goers streamed out of the park and made their way towards home.\n\n\"Alvin?\" \n\n\"Yes, Mary?\"\n\n\"One of us has to be the first to say it.\"\n\nAlvin raised her hand to his face. He kissed the back of her fingers, then looked into her eyes. \n\n\"I love you, Mary Winslow.\"\n\nMary's breath caught in her throat. She swallowed and touched her hand to the side of his face. \n\n\"I love you, Alvin Faulkner.\"\n\nThe smell of cordite faded and the clouds of smoke drifted off towards the distant hills and moonlight shone down on Londonderry harbor."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-08"
}