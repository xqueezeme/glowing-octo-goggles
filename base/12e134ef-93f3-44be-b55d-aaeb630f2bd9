{
    "title": "The Journey Ch. 05",
    "pages": [
        "Hello, friend, and welcome to Chapter Five of The Journey. If you haven't read chapters one through four, you'll be lost. But that's cool, I'm here to help. Viv is an alien, and Jane works for a secret branch of the FBI, investigating paranormal activities. So now that you know that, you're good to go! Enjoy!\n\nTHE JOURNEY, PART FIVE\n\nI can't believe, I can't believe I finally found someone.\n\n~~ Washington, DC, June ~~\n\nI looked down at my phone, buzzing on the table, in consternation. My mother never called me on Saturdays. I hope nothing's wrong.\n\nI glanced around nervously as I picked it up and touched the button to accept the FaceTime call. I wished I had my ear buds with me, I didn't want to do this on speaker. Not here.\n\n\"Oye mam\u00e1, \u00bfC\u00f3mo te va?\"\n\n\"Tuve un descanso y pens\u00e9 en llamar. \u00bfComo estuvo tu fin de semana?\"\n\nI looked up and spotted Jane headed back from the bathroom to our outdoor table at Alero's.\n\n\"Bien, salgo con un amigo.\" I said to my phone nervously as Jane sat down across from me.\n\n\"Oooh! \u00bfUna cita caliente?\" Mam\u00e1 teased me.\n\n\"Uh...\" I could feel myself blushing.\n\n\"\u00a1Est\u00e1s en una cita! \u00bfEs tierno?\"\n\n\"Mam\u00e1, stop it. No quiero hablar de mi cita con ellos sentados aqu\u00ed. Me est\u00e1s avergonzando.\"\n\n\"I'm sorry Mija, I interrupt your date?\" My mother said in her heavily accented English. Her kindly face looked at me through FaceTime. I could see the cousins I'd never met face to face working in the kitchen in the background, getting the restaurant ready for the dinner rush. Most of my cousins had a passing familiarity with the language at best. Switching to English was mam\u00e1's way of giving us a little privacy.\n\n\"It's okay Mam\u00e1, you just caught me at an awkward time is all.\"\n\n\"Okay Querida, I no tease you anymore. I just want to let you know the bank finally got the money you sent last week. I don't know why it took so long.\"\n\n\"Esas son buenas noticias.\"\n\n\"Gracias de neuvo, mija. You and Diego, you so good to us.\"\n\n\"Of course, Mam\u00e1. You know we want to do all we can.\"\n\n\"Gracias Mija, we saving up to replace the fryer, this will help much. I no keep you, I call tomorrow if we get slow. Have fun with your young man! Te amo, mija!\"\n\n\"Te amo, Mam\u00e1.\" I hung up and set the phone down on the table. \"Sorry about that.\"\n\n\"No worries,\" Jane said cheerfully. \"Was that your Grandmother?\"\n\n\"No, Abuela doesn't know how to use FaceTime, she can barely manage to answer the cell phone I got her. That was my mom calling from Mexico.\"\n\n\"Oh, that's nice! You told me you two did video calls.\"\n\n\"Yeah. It's the only way we get to see each other since she was deported.\"\n\n\"At least we aren't living twenty years ago, when you wouldn't have had this technology, right?\"\n\n\"Hooray for modern marvels,\" I agreed, reaching for my margarita.\n\n\"So...\" Jane said, pensively.\n\nI became fascinated with the bottom of my glass. I knew what was coming.\n\n\"'Have fun with your young man'?\" she said questioningly.\n\nI sighed. \"Yeah. I'm not really out to my mom. Or Abuela.\"\n\n\"No offense, but how could they not know?\" She gestured at me with a grin. \"With that haircut?\"\n\nI laughed. \"Honestly, I'm pretty sure they both know. Deep down, anyway. I think Mom's just waiting for me to tell her, but I'm not sure how she'll react if I ever do. She came to the States when she was ten and lived here for twenty years so she's not quite so conservative. Abuela, though... She's... well, she's an old lady who grew up in Mexico and she's super Catholic. I tried to tell her once.\" I made a face.\n\n\"Didn't go well?\"\n\n\"She dragged me to church so Father Esteban could yell at me, then she yelled at me for three more days. How I needed to get this stupid idea I was gay out of my head. How if I didn't shape up I was going to hell.\"\n\n\"Mmm... and now?\"\n\n\"I think she believes if she just never acknowledges it, I'll eventually meet the right man and give her a bunch of little Latino great-grand-babies.\"\n\nJane tilted her head to the side. \"That doesn't seem like a sustainable way to live.\"\n\nI took a sip of my drink, sucking an ice cube into my mouth and crunching it between my teeth. \"Well... if I confront her with it and she shuts me out of her life, I won't be able to take care of her. And not taking care of her isn't something I can live with.\"\n\n\"I see.\" She looked thoughtful.\n\n\"Is that going to be a problem for us?\"\n\n\"Honestly? I don't know, it might. My mom was raised in a black Methodist church in Southern Virginia. She didn't take it well when I came out, but she's grown to accept it. My dad grew up in a super liberal family, he was fine right out of the gate. Whenever I find the right girl and want to settle down,\" I felt her toe start rubbing up and down my calf under the table, \"I want my partner to be part of my family, and I want to be part of theirs. If things keep going as well between us as they have, I'm going to want to introduce you to them.\"\n\nIcy fingers gripped my stomach. Not from the idea of meeting Jane's parents, although that was daunting in and of itself. No, the few weeks I'd been with Jane had been amazing so far. The idea of having to choose between finally confronting Abuela about my sexuality and maybe losing her... or losing Jane...\n\n\"I know. If I ever... if I ever feel like I've met the one--\"\n\nJane raised her eyebrows with a grin.\n\n\"--that would definitely change the way I handle things,\" I continued, \"But until then...\"\n\n\"I understand,\" Jane said, her voice kind. She reached across the table and gripped my hand. \"It's a big thing, confronting a loved one with something they don't want to hear about you. It's not something I'm going to push you on.\"\n\n\"Thanks.\"\n\nI watched her pick up her margarita. Not that it's likely we'll ever get to that point... Still... I can't believe I'm going to suggest this...\n\n\"So, uh, now that we have that out in the open, you know how I said I was busy next weekend?\"\n\n\"Mm-hmm?\" she mumbled around the straw of her frozen drink. God, her lips were fucking sexy.\n\n\"It's my brother's wedding. I'm his, uh, best man, as it were.\"\n\n\"Viv, that's so cool! Sometimes I wish I had a sibling I could share things like that with.\"\n\n\"Yeah, I'm excited for him. But anyway, his wife, or fianc\u00e9 I mean, she's been holding open my plus-one spot. Hoping I'd find someone I wanted to bring.\"\n\n\"Oh! But wait... won't your grandmother be there?\"\n\n\"Yeah, that's why I didn't really consider asking if you wanted to go with me. If you came, I'd... we'd... jeez, you know what, forget I said anything.\" I felt like a fucking idiot even bringing it up.\n\n\"You'd want to stay on the down-low in front of your Abuela. Take me as a friend.\"\n\n\"Yeah, listen, never mind, I'm fucking dumb. I know how insulting that must--\"\n\n\"I'd love to go.\"\n\n\"Wait... what?\"\n\n\"I said I'd love to go. I love weddings, and I'd love to see you in one. I'm not saying I'm okay with being a secret from your grandmother forever, but it's early for us. We can pretend I'm just a friend while we're there.\"\n\n\"Uh... wow. Okay, I mean it's not like it's... I mean my brother knows about us and so does his fianc\u00e9. They're fine with it. He says, anyway.\"\n\n\"Will there be dancing?\"\n\n\"Yeah.\"\n\n\"And what will you be wearing?\"\n\n\"I'm gonna wear a tux.\"\n\n\"A tux... You're going to wear a tux...\" A hungry look crossed her face.\n\n\"Yeah, with a vest and bow tie and everything.\"\n\n\"That is definitely a selling point. I assume no dirty dancing quite like at the Latin club last week?\"\n\n\"No... have to keep at least a little daylight between us.\"\n\n\"So, we'd have to keep our hands off each other. So, if I wanted us to get really inappropriate with each other for the first time, we should maybe do that before we go to your brother's wedding then?\"\n\n\"Last week in your car wasn't really inappropriate?\" I grinned at her.\n\n\"No, that was only mildly inappropriate,\" she said, her grin matching mine.\n\nWe walked in her front door exactly nineteen minutes later, as the sun was giving up its last light to the evening. I spun her and pressed her back to the wall of her entryway, and kissed her hard, running my hand from her hip up her side towards her breasts. She stopped me.\n\n\"Wait...\" she said breathlessly, looking out the window in the door towards the street, \"Not here. Upstairs.\"\n\n\"Get going then. I'm not going to wait long.\"\n\nAs I followed her up, I tried (and failed) to keep my hands off the smooth globes of her ass as it jiggled its way up the steps. The way she pushed back against my touch told me it wasn't unwelcome. When we reached the top, she said \"Alexa, I'm home.\" All the lights came on, while her Bluetooth speakers started playing R&amp;B music.\n\n\"Alexa, turn off all the lights,\" I called out, and the apartment was plunged back into the twilight gloom coming through the front windows. She turned to me as I grabbed the hem of her University of Wakanda t-shirt. Raising her arms, she let me pull it up over her head to reveal a black satin bra and a gold hoop through her belly button, a tiny charm dangling from it.\n\nI traced the backs of my fingers over the tops of her breasts and her chest rose and fell with as her breathing quickened. She reached for my shirt. I helped, snagging my sports bra and whipping both layers of cloth over my head. Jane's eyes tried to pop out of her head as she took in my naked chest for the first time. She reached behind her with both hands, then tossed her bra after my clothes. I stepped closer, wrapping my arms around her. We pressed against each other, and the warmth of her skin flooded sensations into my mind, like the kiss of a sunbeam through a window, accompanied by a fleeting memory of feeling safe. A feeling of home. I kissed her again as I slid my nipples over hers, and was rewarded with her sharp intake of breath against my mouth. The R &amp; B music continued from the speakers on her bookshelves, all brash horns and drums as a man's falsetto voice sang about rolling on and on.\n\n\"Not that I don't like your playlists, but this isn't really the right vibe,\" I said, looking into her eyes.\n\n\"Do you want something sexier or no music?\"\n\n\"Dealer's choice.\"\n\nShe grinned as she called out, \"Alexa, it's sexy time.\" The under-cabinet lights in her kitchen came on at maybe twenty percent brightness, but blue instead their usual warm yellow. The man's falsetto voice was replaced with Alicia Keys.\n\nI snorted. \"You're a dork.\"\n\nShe giggled, which turned into a gasp as I leaned in, fastening my lips onto her neck. I felt her hands fumbling with the button to my cargo shorts and they dropped to my feet. I stepped out of them, kicking off my knock-off Birkenstocks at the same time, then I pushed her back towards the couch. Just as we reached it, she spun me around so that I was the one who flopped down onto the cushions.\n\n\"This time it's my turn,\" she said, standing over me. Once again, I felt like a fish out of water. I was always the one who took charge. But... I wanted to let her do whatever she wanted, as long as this kept going. She shimmied out her shorts, leaving her in just her panties, black satin and lace that, of course, matched her bra.\n\nJane knelt between my legs, running her hands over the tops of my thighs. Her nails raked down my legs as Miss Keys told me that everything meant nothing if she ain't got me. Jane ran her fingertips smoothly back up my legs, past my boxer-briefs, and along the skin of my stomach. I wasn't anywhere near as well-endowed as she was, her hands easily covered my breasts. I sucked in a little breath as she gave a tug on the tiny silver barbell that pierced my left nipple.\n\nShe leaned forward to kiss me as she twirled my already hard nipples between her fingers, then traced her tongue down my neck, until her lips fastened over my unpierced nipple. An inarticulate sound escaped me, as I felt her hands in the waistband of my underwear, tugging. I lifted my butt off the couch to let her slide them down my legs. I raised my feet together, to allow her to pull them off, then after she tossed them aside, she gripped my knees to spread my legs wide again, quickly moving back between them.\n\n\"I wouldn't have guessed you for a shaver,\" she breathed, as she ran her fingers over the smooth skin above my pussy.\n\n\"All the better to eat, my dear,\" I intoned in my best Big Bad Wolf voice. I could go weeks without shaving when I had no one to impress, but I usually cleaned up the joint if I was going on the prowl at a dance club. Or going on a third date with someone with whom I would never have dreamed I'd be actually getting lucky with.\n\nShe giggled again. Fuck, I love making her laugh, it's--O-o-o-o--\n\nI sucked in a deep breath as she leaned down and ran her tongue over my clit. \"Fuck yes,\" I breathed.\n\nHer only response was a happy sound, as her tongue was busy tracing circles. I closed my eyes for a moment, savoring the sensation, so I jumped a little when one of her slim fingers caressed my lips for the briefest moments before sliding smoothly into me. I was so wet, there was almost no resistance. I raised my knees higher, my bare feet lightly resting on her shoulders, while my hands caressed her cheeks, then moved to the top of her head to tangle into the mass of her ringlets.\n\n\"Can I...?\" I whispered, curling one finger under the edge of her ever-present head wrap.\n\nShe paused the ministrations her mouth was bestowing on me, but her fingers never stopped. \"If you want to. You'll see why I wear these once you take it off though.\"\n\nI gently tugged on the elastic cloth band, pulling it up over her hair. The tower of curls piled over her head promptly flopped down, covering her face to almost her chin. In the dim glow from the street lights outside I could see her adorable grin as she pushed the mop of curls to one side.\n\n\"It has a mind of its own,\" she said.\n\n\"It's fucking hot,\" I answered. That was apparently the right answer, because she dove back at me with her tongue. I gasped loudly. Her hair refused to stay to the side, falling down and covering her face while she licked at me. Can't have that. I grabbed her hair with both hands and held it up out of the way so I could watch her. As I lifted her dark curls, I revealed her hazel eyes, looking up at me in the dim light. Fuck, she is so sexy! Much as I felt like I should have been the one taking charge, I couldn't help but revel in the attention.\n\n\"Jesus, Jane, that feels so fucking... ah... ah... Ah! Good! Yes! So good!\"\n\nI was shocked how quickly my orgasm was coming. Usually I wasn't this fast but Jesus!\n\n\"Yes... yes! Don't stop! Don't stop! Don't--gaaaaah!\" The guttural cry involuntarily slipped from my mouth as tremors wracked my body. My thighs clamped onto the sides of her head, my fingers tightening in her hair.\n\nWhen I could breathe again, I sat up, pulling her face to mine. I kissed her deeply, relishing the taste of myself on her tongue.\n\n\"God, Jane, that was really good.\"\n\n\"Returning the favor from last week. Now we're even,\" she said, leaning her forehead against mine, her hair falling around our faces.\n\n\"Yeah? Time to get you back into my debt, then.\" I pulled her to her feet as I stood. \"Show me your bedroom. Time for round two.\"\n\nWhat must have been two hours later, we were sitting in the middle of her king-sized bed facing each other, legs intertwined, covers thrown to the floor, pillows scattered. Jane was panting, one hand gripping my arm as our hips rocked.\n\n\"You are entirely too good at this,\" she said between breaths as we scissored against each other. She was leaning her head back to keep her hair out of her face, but she never took her eyes off me. I curled my leg around her back, pulling her tighter to me. The coarse triangle of hair above her pussy was grinding into my clit.\n\n\"You inspire greatness in me,\" I said, panting myself.\n\nI wish I could say we both came at the same time, but the truth was this wasn't the best sex move for getting me there. It apparently was for Jane though, as she had another of her trademark quiet, intense orgasms.\n\n\"Yes... Viv, yes, yes!\"\n\nI loved how she barely whispered when she came. I kept grinding against her until she pushed me away, flopping down to her back.\n\n\"Lord in heaven, I can't take anymore!\" she said, chest heaving. Such a nice chest. I really enjoyed the heaving.\n\nI reached over the side of the bed and tossed a couple of the pillows to her, then grabbed a corner of the sheet. I dragged it back onto the bed to cover us as I turned around to lay down on my back next to her. She wasted no time snuggling up to me, head on my shoulder. Her hand caressed my stomach.\n\n\"Can I take care of you again? I think I'm at least a couple ahead of you.\"\n\nI reached down, pulling her knee over my leg. \"Nah, I think five rounds is plenty for our first real time together. We can go for more next time if you want.\" God, I wanted there to be a next time.\n\n\"More? Good Lord, you've worn me down to a nub.\"\n\n\"You're pretty good yourself, you know.\"\n\n\"Thanks,\" she said through a huge yawn. She snuggled tighter to me. Her hair tickled the side of my head, it's faint lavender scent mixing with the delicious smell of sex that filled the room.\n\n\"I'm starting to see why you always wear a head wrap,\" I said, gently stroking it away from my face.\n\nShe didn't answer. I looked down to find her sound asleep.\n\nNice work, Esparza. Did yourself proud. I stared at the ceiling, thinking back to the night we'd met, when I'd assumed she was a student, only to find she was my professor. Boy, I really thought I'd fucked myself that night. Now I've spent the last few hours fucking my teacher.\n\nThe laugh slipped out before I could catch it. Fortunately, it wasn't enough to wake Jane. She stirred against me in her sleep, her arm pulling me tighter.\n\nI have no idea how long this is going to last, but I'm going to try and enjoy every second of it until it's over, I thought. I pulled the high school boy move, lifting my fingers to my nose and savoring her scent on them.\n\nI closed my eyes. Usually after a session like that, I'd be keyed up and thinking about a shot of tequila to get to sleep. Tonight, the sound of Jane's breathing was all the lullaby I needed.\n\n~~ Lorton, Virginia ~~\n\n\"Ladies and gentlemen, may present, Mr. and Mrs. Diego Esparza! Diego, you may kiss your bride!\"\n\nJeez, could he be any more patriarchal? I thought as I clapped along with everyone else in the church. My cheeks hurt from grinning at my little brother, who was taking the priest's advice and thoroughly kissing Virginia.\n\nI hadn't been happy when Diego had told me Father Esteban would be performing their wedding mass, despite his having retired as the priest at St. Mary's. I guess I couldn't blame Diego and Virginia for asking him to do it, as they'd both grown up with him as their priest. As had I, but he and I had a different relationship. The new priest was supposed to be nice, but they'd known this guy for their whole lives.\n\nFather Esteban had glowered at me when I'd walked to the altar with Diego, wearing my tux. His grey hair and steel-rimmed glasses were as intimidating now as they'd been when I'd taken my first communion with him. I'd tried to ignore him, letting my half-inch too tight collar distract me. Since I wasn't technically 'out' to him or anyone at the church, he had no reason to deny me communion and I didn't think he'd make a scene at Diego's wedding. Instead I focused on being there for Diego and the delightful memory of the expression on Jane's face when I'd opened the door of my apartment wearing my monkey suit, minus the bow tie.",
        "I'd been equally pleased. She was wearing a vintage fifties-style sleeveless dress that came down to mid-calf. It was emerald green silk taffeta, with a wide black patent-leather belt around her midsection. A matching head wrap, a string of pearls and chunky black patent-leather Mary-Jane heels completed her look.\n\n\"Holy crap, you look good.\" I'd said.\n\n\"I can say the same about you,\" she'd replied with a look in her eyes I'd come to appreciate. I wasn't quite ready when she'd knocked, and it turned out it was a good thing she was there, because I hadn't been able to make any headway with the YouTube video on how to tie a bow tie. I couldn't believe Diego didn't go with the clip-ons. Fortunately, Jane was better able than I was to decipher the steps, and she ended up tying my tie for me. Which was way sexier than tying it myself.\n\nAs Diego walked Virginia down the aisle, I was watching Jane in the back of the crowd. She was on her feet clapping as enthusiastically as any of the other family or friends present. As I watched her I felt my grin widen. She just seemed to take joy in everything. I heard someone clear their throat and remembered I was supposed to be escorting someone down the aisle too.\n\n\"Sorry,\" I said, holding out my arm.\n\n\"They're beautiful together, aren't they?\" said Stacy, Virginia's maid of honor, as she hooked her hand through my elbow.\n\n\"Yeah. I'm really stoked for Diego,\" I replied as we followed the happy couple up the aisle, happy to let Stacy think I'd been distracted by my brother, not my undercover lover. \"By the way, thanks again for not being freaked about being escorted by a woman.\"\n\nShe laughed. \"To be honest, it worked out for me, my boyfriend is the jealous type.\"\n\n\"Glad I could head that off for you.\"\n\n\"I admire that you and your brother are close enough that he wanted you to stand up for him.\"\n\nStacy and I took our place next to Diego and Virginia in the receiving line outside the doors of the sanctuary, along with Father Esteban, as the guests filed out, Abuela among the first.\n\n\"Te ves muy bonita, nieta,\" she said perfunctorily to me, before gushing over Diego and Virginia. The rest of the guests passed by me in a blur, until Jane came through, one of the last to walk out.\n\n\"Why, hello Miss Esparza!\" She said, \"Don't you look handsome in your finery!\" She offered me a hand and a curtsy, like an old-fashioned southern lady while I nervously looked around. Abuela was across the room talking to Diego's new in-laws.\n\n\"Thanks,\" I said under my breath, as she greeted the bride and groom.\n\n\"Congratulations! I'm so happy for you, you look so lovely!\" Jane said as she shook Virginia's hand.\n\n\"Thank you! Uh, you are?\"\n\n\"I'm Jane, Viv's friend.\"\n\nDiego's eyes lit up. \"Jane! I'm really glad she talked you into coming. Viv is really--\"\n\n\"Ready to go have some cake,\" I interrupted.\n\nDiego was undeterred. \"Sweetie, this is Dr. May. She teaches at NOVA Community College,\" he said to Virginia by way of introduction.\n\n\"Used to,\" Jane said. \"I teach at Howard now, but call me Jane, please.\"\n\n\"Right!\" Diego said, lightly bumping his fist against his forehead. \"Sorry, I forgot.\"\n\nThe photographer sidled up to Virginia. \"Shall we...?\"\n\n\"Right!\" Diego said again. My brother seemed a little shell-shocked from the experience. \"Sorry. We gotta get pictures done so we can get across the street for the reception. Viv, can you get Abuela?\"\n\nAfter taking about a million pictures, Diego and Virginia led the wedding party to the banquet hall they'd rented at the Knights of Columbus center across the street. I dawdled behind as Jane had been waiting, watching the photo shoot with amusement. She sidled up to me, but didn't take my arm, keeping a discreet distance.\n\n\"You really do look handsome you know,\" she said quietly, \"I may be biased but I think you wear that better than your brother.\"\n\nI self-consciously tugged at my collar. \"I can't wait until all the formalities are over and I can lose the tie.\"\n\nWe made our way downstairs. I introduced Jane to Abuela as my friend from school after we were seated at the same table as Father Esteban. Abuela seemed to accept the friend-story, and warmed up to Jane quickly, gushing over her dress. I think it was because I almost never introduced her to my friends. I hadn't had that many friends in recent years anyway.\n\nDiego and Virginia had their first dance, Virginia danced with her dad, Diego danced with Abuela, then after dinner they cut the cake, then the celebration began in earnest. Everyone hit the dance floor and I was highly amused to see Virginia's eight- and ten-year-old nieces attach themselves to Jane during the Chicken Dance. They monopolized her for the next half hour, so I sat with Abuela, who wasn't much for dancing, although I did get her up to do the Hokey-Pokey with everyone.\n\nThe DJ was good. Virginia's parents had had a pretty small wedding budget. Diego had given me their DJ money and let me research the music for him. I'd found a woman who came highly recommended, with a good mix of traditional wedding, eighties and dance club music. I didn't tell Diego I'd thrown in two hundred fifty bucks of my own to be able to hire her.\n\nAfter a couple of hours, the families with kids and the older family members started to pay their respects to Diego and Virginia and head home. I was kept busy, escorting families out, helping to carry centerpieces and leftovers to cars, walking Abuela to her Beetle. Soon the crowd had shrunk to just thirty or forty twenty-somethings and the DJ got more serious about the music. The open bar helped lubricate the remaining guests and the dancing got serious as well.\n\nI finally had a moment to go to the bar with Jane, She ordered a white wine, which she pronounced delightful. I was looking over my choices, thinking I'd get a beer when I heard Diego behind me.\n\n\"Oya, bartender! This is my sister I told you about! She gets the special bottle!\"\n\n\"Yes sir!\" the bartender said, as he reached under the bar. Diego put his arm around my shoulder and gave me a squeeze.\n\n\"What's the special bottle?\" I eyed him suspiciously.\n\n\"Consider this your groom's woman present,\" Diego said as the bartender pulled out a tall bottle with a green crystal cactus inside, attached to the bottom of the bottle.\n\n\"No way!\" I exclaimed in delight.\n\n\"Only the best for mi familia.\"\n\nJane asked \"What is that?\"\n\n\"This is Porfidio A\u00f1ejo, my favorite tequila in the world.\"\n\n\"I knew you'd be happy,\" Diego said smugly.\n\n\"What's so special about it?\" Jane asked.\n\n\"Well for a start, it's a hundred-fifty bucks a bottle. How'd you afford this Dee? I know your budget was tight.\"\n\n\"I started saving for this since you said you'd be my best-chick.\"\n\n\"Man, this is so nice of you! Gracias hermanito!\" I gave him a one-armed hug. \"You gotta do one with me.\"\n\nHe laughed, \"You didn't think I'd let you drink this whole thing yourself, did you?\"\n\n\"Get Virginia over here too,\" I turned to the bartender, \"Can you set us up for four?\"\n\nThe barkeep put four rocks glasses with a lime wedge on each rim on the bar, then poured a finger of the golden liquid into each one. I pulled out a five out of my pocket for his tip jar, then started handing out glasses as Diego waved Virginia over. Jane looked dubiously into hers, before taking a cautious sniff of the contents.\n\n\"That smells strong!\" she said.\n\n\"Yeah, you don't have to slam it if you don't want to, this is meant for sipping.\" I handed the last glass to Virginia.\n\n\"Why did I know with the two of you, tonight would end up with us doing tequila shots?\" Virginia said. Her grin that hadn't left her face all night.\n\n\"To the happy couple! Long life, happy marriage, lots of kids!\" I said, raising my glass.\n\n\"Hey now, we've been married for like ten minutes! Give us a chance to enjoy it for at least a few weeks before the kids come.\" Diego said laughing.\n\n\"Sorry, I was channeling Abuela. Salud!\"\n\nDiego and I drained our glasses, while Virginia did the same but slower. Jane took a careful sip, then exhaled loudly, followed by a cough.\n\n\"Okay?\" I asked. I set my glass back on the bar and nodded for the bartender to hit me again.\n\n\"Y--\" she coughed again, \"Yes, it's really strong. It's--\" another sip, another cough, \"It's good though!\"\n\n\"\u00a1Vale, Esparzas, basta de beber, \u00a1m\u00e1s baile!\" Virginia whooped.\n\n\"Eres una Esparza ahora tambi\u00e9n, querida,\" Diego said as I drained my second tequila. His grin threatened to split his face in half. I took Jane's wine glass from her and set it on the bar.\n\n\"\u00a1Oh si, bueno todos bailan ahora!\" I yelled. Jane was looking at each of us, trying to figure out what the hell we were saying, but she got the idea when I grabbed her hand and we followed Diego and Virginia back to the dance floor.\n\nWe joined the crowd halfway through MKTO's Classic. I don't know if it was just being at a wedding, or that the open bar and the warmth of the tequila in my belly made me feel all romantic and shit, but now that Abuela and Father Esteban were gone, I took one of Jane's hands as we danced and starting singing the lyrics to her over the music.\n\n\"You're over my head, I'm outta my mind!\" I shouted to the music in my terrible, horrible, no-good singing voice, theatrically gesturing to her vintage dress, \"thinking I was born in the wrong time!\"\n\nJane was laughing as we spun around each other. Diego and Virginia were twirling next to us like ballroom dancers on crack.\n\n\"Outta my league! Old school chic, like a movie star from the silver screen! One of a kind living in a world gone plastic, baby you're so classic!\"\n\nI spun her out away from me, then pulled her back and she twirled up into my arms then back away again, as if we'd rehearsed it. As the song faded out the DJ transitioned to something slower, but no less sexy. Jane wouldn't let go of my hand as she took her turn singing to me, as the mesmerizing club beat filled the banquet hall, followed by Dua Lipa's voice.\n\n\"One kiss is all it takes - Fallin' in love with me - Possibilities - I look like all you need,\" Jane sang, her face almost rapt as she danced with me. Unlike me, she could carry a tune.\n\nFuck yeah, she's all I need. I wish I knew what it was in me she needs, I thought, Tonight, I don't give a shit though.\n\nShe kept going, \"Something in you-oo-oo, lit up heaven in me-ee-ee, the feeling won't let me slee-ee-eep, 'cause I'm lost in the way you move, the way you feel.\"\n\nI reached out for her other hand and started to slowly draw her closer. Our faces drew near, I could feel her breath on my lips as she sang to me \"One kiss is all it takes...\" I leaned in--\n\n--then shoved her away from me. She stared at me, hurt and confused, then followed my gaze over to where Father Esteban had just walked into the banquet hall, seemingly headed right towards us.\n\nI froze, panicked, remembering the time when I'd knocked over a candelabra in the sanctuary while playing tag with Diego when we were kids. Father Esteban had grabbed me and my brother and marched us out to find mam\u00e1, loudly letting her and all her friends know how unruly her children were being. Now I watched him head towards me, icy fingers running up my back, anticipating the confrontation I was about to have in front of everyone.\n\nAs he reached the edge of the dance floor, he stopped at the table where he'd been seated with us for dinner and started looking around. He moved a napkin, then picked up his phone. He glanced up, giving me a sour look then turned and walked back towards the door.\n\n\"Oh, fuck. Oh, fuck!\" My panic wasn't going away just because he was leaving.\n\n\"Hey, he's gone.\" Jane stepped closer to me, putting her hand on my arm.\n\n\"So what?! What if he saw me about to kiss you?! What if he tells Abuela?!\"\n\n\"If he tells her, then we'll deal with it.\"\n\nA corner of my mind wanted to stop and think about that \"we\" for a minute, but my lizard brain was a gibbering mess.\n\n\"I'm not ready to have that conversation with her! And I don't want to have it start this way if I ever have to have it!\"\n\n\"If you ever... look, why don't you--\"\n\n\"Don't tell me to calm down! You have parents who accept you, you don't know what the hell...\" I trailed off as I finally noticed the look on her face. Oh fuck, could you be anymore of a shit right now Esparza? \"I, uh, I'm sorry, I--\"\n\n\"Listen, just stop and breathe. No one else even noticed.\" Her face was a mask, a rather shocking change from her normal good-natured smile. \"He's gone, and there's no sense in having a giant freak-out and spoiling the rest of Virginia's night, right?\"\n\nI looked around and no one else had stopped dancing. No one was looking at us. Diego hadn't taken his eyes off Virginia.\n\n\"I'm...\"\n\n\"Not to mention my night,\" she muttered. \"I'm going to go back to my wine.\" She turned and walked back towards the bar.\n\nAn hour later Jane pulled her little SUV into the same space where she'd dropped me off after all the nights of driving me home after class. My stomach felt emptier now than it had the last night of the semester when I thought I'd never see her again.\n\nMan, I hope I haven't completely fucked this up.\n\nShe put the car in park and we sat in silence for what seemed like forever. Finally I couldn't stand it anymore.\n\n\"I'm really sorry I flipped my shit.\"\n\n\"It's okay.\"\n\nIt did not sound like it was okay. I sighed. She sighed.\n\n\"Well, I should probably be--\" she said into the silence.\n\n\"Do you want to come in? We could sit in my room and talk.\" I interrupted her. I had the feeling that if I just let her drive away we might not recover from this. And while I knew this wasn't going to last, I wasn't ready for it to end. Not yet.\n\nShe took a long time to answer. \"I thought you didn't invite girls inside. Is your roommate gone?\" Manny had been out at the grocery store when she picked me up, but his truck was back in its usual spot.\n\n\"I... I don't, usually. But... I'm not asking you to come in to make out or anything. I just... I'd like to talk some more. It was so busy, we didn't get to talk much at the wedding. And obviously, we have a lot to talk about.\"\n\nJane just looked at me, impassively.\n\n\"I mean I have a lot to talk about... Please?\"\n\n\"Okay.\" She turned the key off, and I gave a silent prayer of thanks.\n\n\"Hey, how was the, oh geez!\" Manny exclaimed as we walked in. He quickly jumped up from the couch and started picking up the empty beer bottles on the table. \"Didn't know you were bringing company home.\"\n\n\"It's cool, dude,\" I said, waving away his attempts at straightening up. I was just happy he wasn't sitting around in his underwear. \"This is Jane, my... Jane, this is Manny, my roommate. He's a Metro driver too.\" I was one-hundred percent sure both of them noticed my hesitation in defining my relationship with Jane, but at the moment, I had no idea where that stood.\n\n\"Nice to meet you,\" Jane said distractedly, shaking the hand he'd offered.\n\n\"You, uh, you two look really great. Must have been a good time.\"\n\n\"It was a lovely wedding,\" Jane said.\n\n\"Want me to...?\" He tipped his head towards his bedroom door.\n\n\"Nah, man, you can keep watching the game. We're just gonna go talk for a while,\" I said. I hope it's a while.\n\n\"Okay, y'all let me know if the TV's too loud.\"\n\nI led Jane into my bedroom, throwing the tux coat over my chair and shutting the door behind us, then immediately felt self-conscious about the state of my room. I started picking up clothes and dumping them in my closet, until Jane stopped me.\n\n\"Viv, I don't care what your place looks like. Can we sit?\" She had taken a seat on the edge of my bed.\n\nI dropped the pile I had in my arms and perched stiffly next to her.\n\n\"Jane I... I owe you an apology. I'm sorry I snapped your head off. In front of everyone.\"\n\n\"I don't think anyone noticed, and even if they did I don't care. I only care about us. And I'm worried about us, if the idea of telling your Abuela about us winds you up that badly.\" She wasn't exactly cold. Cool was more accurate. Which was about as good as I could hope for right now, I thought.\n\n\"I know. I overreacted. Badly. I've told you about how conservative Abuela is. But Father Esteban... he's a whole other level. I can't tell you how many times he grabbed me or Diego by the ears when he felt we were misbehaving at the church. And not gently. How many times he threatened kids with damnation for sinning.\"\n\n\"Seriously?\"\n\n\"Yeah. He was kind of a holy terror, if you'll pardon the expression. I've been scared of him my whole life. And I really wanted to kiss you. Like really wanted to kiss you right then. And then I saw him and I felt like a high school girl caught with a boy under the bleachers or something. I panicked. I'm sorry.\"\n\nShe was silent. Long enough that I didn't think she was going to answer me. I waited, holding my breath.\n\n\"Viv... I like you. I mean,\" she finally turned and looked at me. \"I really like you. But I've never dated a woman who's closeted.\"\n\n\"I'm not.\"\n\n\"You are to your grandmother, the woman who's been your de facto parent for, what? Ten years?\"\n\n\"I know. I get what you're saying. And if I... If we get serious, I'll... I'll take that step and tell her. But--\"\n\n\"We've been dating for almost two months. Do you not think we're getting serious?\" The look on her face was one of incredulity.\n\n\"I... I don't know. I haven't...\" Fuck it, just tell her. \"Jane, I haven't dated anyone longer than a month in, I don't know, years. I have no idea what I'm doing.\"\n\nShe looked at me, searchingly. \"Why?\"\n\nThe simplest question. The hardest to answer.\n\n\"I'm not sure... I had a really bad breakup about three years ago, and I've had trouble letting that go. But before that... I dunno. I just,\" I stood up and started unbuttoning my vest. I'd had enough of the monkey suit. \"I just never found the right girl before that. And I guess years of that kind of... it turned me into a love 'em and leave 'em type. Not that I want to be, it's just what I ended up as.\" I tossed the vest on my dresser and pulled apart my bow tie, letting the ends dangle. I sat back down next to her bed, and found myself with my elbows on my knees, head in my hands. \"I'm so bad at this.\"\n\nI flinched when she started rubbing my back. I sat up and looked at her.\n\n\"It's hard, being gay, when you're part of a group that can be less accepting of it than most of our society,\" she said.\n\n\"What do you mean?\"\n\n\"African-Americans can be less accepting of being gay than the mainstream has become in the United States, especially the older generations. I'm sure Hispanic culture can be the same.\"\n\n\"You can say that again.\"\n\n\"My mom wasn't exactly happy about it when I was figuring myself out, but my dad was in my corner. You haven't had anyone, except Diego. That's got to make it hard.\"\n\nI thought about that for a minute. \"But that's just... that was just coming to grips with being gay with myself. And believe me, I'm a hundred percent on board with who I am. It's just...\"\n\n\"It's scary, the idea of telling your Abuela who you are, because you're worried you'll lose her.\"\n\n\"Yeah,\" I said hoarsely.\n\n\"And I don't want to push you into doing it before you're ready. That's not my place. But one thing to consider, Abuela isn't getting all of you. She's only getting a part of you. Would you be happy to find out she's keeping some giant secret?\"\n\n\"If Abuela wants to come out to me, I'd be thrilled to hear all about it.\"",
        "Jane giggled, then put her arms around me, leaning her head against mine. \"Just something to think about.\"\n\nI wrapped my hand around hers, and we sat in a silence that felt, surprisingly, comfortable.\n\n\"Do you want to stay tonight?\" I asked her. Please say yes. Please say I didn't fuck this up yet.\n\nFor a long, heart-stopping moment, she didn't answer. Then she stood and faced away from me. \"Can you help me with my zipper?\"\n\n~~ Washington, DC, August ~~\n\n\"It's open!\" I heard Jane's voice calling through the door from upstairs after I rang her doorbell. I let myself in and climbed the steps to her living room. When I reached the top, I heard her from the back where the bedrooms were, \"Hey! I'm almost ready to go.\"\n\n\"Cool. Hey, I was able to get off next month for your book party.\" I said, tossing my backpack on her couch then headed to the kitchen. \"Had to give up a Saturday to get Friday night off, though.\"\n\n\"Oh great! Thank you for doing that!\"\n\n\"It'll be my first Friday night off in almost a year.\"\n\n\"Nice! How's the weather out there?\"\n\nI wiped the lingering sweat off my forehead. \"It's hot as hell.\"\n\nAugust in DC felt like we might as well in a steam room. For the last couple of months, I'd been coming to Jane's place on Saturday mornings with my books. We'd go to the farmers market and grab breakfast somewhere, then come back and I'd do homework or study at her kitchen island while she worked on her book in her second bedroom, which she'd set up as an office. Recently that meant reviewing the final galley drafts... whatever that meant. Then we'd go out somewhere Saturday evening and I'd stay over, going to Abuela's on Sunday morning. But I'd finished my summer semester and had a two week break before the fall session started, so we had made plans to attend a street festival off U-Street today. The walk from the Metro to Jane's townhouse had me second guessing the idea, however. I was wilting from the heat.\n\n\"I have a surprise that might make it more fun,\" she called out.\n\n\"Is it one of those hats with the fan in the visor that blows on your face?\" I got myself a glass out of her cabinets and filled it with water from the Brita in her fridge, taking a long, refreshing sip.\n\n\"Do you think I'd ever be seen in something that un-stylish?\" she asked, as she came out of the hallway.\"\n\nI covered my mouth to avoid doing a spit-take. \"What are you wearing?\" I asked, after I'd managed to swallow without choking.\n\n\"Like it?\" Jane asked, striking a pose, her hand on her hip, one knee bent.\n\nHer outfit looked at first like a pale-yellow baby-doll romper made out of light terry cloth fabric. Upon closer inspection, it was shorts and a matching tank top with spaghetti straps. The shorts were short, the cut up the hips tied loosely with laces, giving me an eyeful, and the top showing a generous amount of cleavage. The outfit was completed with a matching yellow headwrap and white tube socks which came up to mid-calf, with three baby blue stripes around the tops.\n\n\"That's sexy as fuck. You should have worn that to seventies night at the league.\"\n\n\"This isn't for dancing. This is my skating outfit.\"\n\n\"Your--\" and just like that, I realized what she was carrying in each hand.\n\n\"I'm pretty sure these'll fit you,\" she said, holding up a pair of old-fashioned looking roller-skates towards me. \"I tried on your Doc Martens last time I was at your place when you were in the shower and I think you're one size bigger than me.\"\n\nI narrowed my eyes suspiciously. \"You bought me a pair of skates.\"\n\n\"I did.\" Her smile was infectious, like always.\n\n\"How is it that we've been dating for like four months and I didn't know that skating is one of your things?\"\n\n\"I like to reveal my secrets over time, so I remain mysterious and intriguing. Don't want you to become bored with me.\"\n\n\"Like there's any danger of that.\" I took the skates from her and inspected them. They were fire-engine red leather, with black wheels, and neon yellow laces. \"I like the color.\" The pair she was holding for herself were white, the leather polished to gleaming, with transparent wheels. One had baby blue laces matching her socks, while the laces in the other was yellow that matched her outfit.\n\n\"I tried to find some that matched your bowling shoes.\"\n\n\"I think you nailed my look. How do you even know if I can skate or not?\" I asked. I felt a grin coming on.\n\n\"There are two possibilities: Either you can, in which case we get to be the hot roller-girls at the festival, or you can't, in which case I'm going to have a blast holding you up, and generally feeling physically superior to you while I teach you.\"\n\n\"Well, the joke's on you, Diego and I used to skate all the time as kids. It's been a while, but I used to be a speed demon at Skate World.\"\n\n\"Outstanding! Are you good with what you're wearing for skating? Those cargo shorts might be a little bulky for moving around.\"\n\nI looked down at my clothes. I was wearing what my brother called my lesbian summer uniform: knee-length khaki cargo shorts, Teva sandals and a tank-top.\n\n\"I guess? Why? Wait... you bought me an outfit too, didn't you?\"\n\nJane answered me with a laugh. \"Maybe. I thought you'd want to look as cute as me.\" She posed again. Damn, she does look cute. \"It's laid out on my bed. Go change so we can get going.\"\n\n\"You're kidding me with this, right?\" I said, coming back from her bedroom a few minutes later. I'd put on the clothes I'd found on her bed, but I was feeling deeply ambivalent about the idea of wearing them in public. Short royal blue satin shorts with three white stripes down the seams on each hip, and a bright red, tight sports top which matched the skates and showed my entire midriff. The only part I really liked were the bright red knee-length socks with yellow lighting bolts on the sides.\n\n\"Oh my!\" Jane said, looking me up and down, fanning herself theatrically, then she ran her tongue over her lips, leaving no doubt what she thought of how I looked. She came closer. \"Baby, you look so yummy.\"\n\n\"I'm not sure, I--\" Her kiss interrupted me. M-m-m-m, she really likes it. Well, who am I to argue? \"Okay, I'll wear it,\" I said when we came up for a breath.\n\n\"Yes!\" she said, with a little fist pump. I couldn't help but laugh.\n\n\"Did you intend for me to wear this too?\" I asked, holding up the little black fanny-pack I'd found on the bed.\n\n\"We need something to keep our phones and credit cards in.\"\n\n\"How come I have to wear it?\"\n\n\"Because, my outfit is entirely too cute and girly to wear a fanny pack with it. Yours is sportier, it'll suit you just fine.\"\n\n\"Okay, but if I'm playing the dude and carrying all your stuff while we're out, I get to play the dude when we get home tonight.\"\n\nShe cocked an eyebrow at me. \"We'll see about that.\"\n\n\"And you have to put sunscreen on me before we go, or I'll burn the shit out of my shoulders and stomach in this get-up.\"\n\n\"Deal!\"\n\nWe sat on her front porch steps to put our skates on. Mine were stiff, being brand new, and it took some effort to get my feet settled in them. Jane slipped hers right on, tightening the laces and wrapped them once around her ankles before tying a large bow in the front.\n\nI wobbled a bit, as we skated away from her townhouse. It helped that Jane held my hand. I loved it when she held my hand. Once my muscle memory came back, Jane let go of me and twirled, to skate backwards in front of me. Her movements were hypnotic, as she weaved back and forth, feet gracefully crossing over each other.\n\n\"You're just showing off now,\" I said. My skates hit a bump and I had to flail my arms to catch my balance.\n\n\"You'll get there,\" she said. She performed a little pirouette, turning forward again as we arrived at the festival. We swerved around the barriers closing the street off to car traffic. There were food vendors and merchant booths as far as we could see, a couple of blocks at least. This end of the festival had a DJ, loud music thumping over the crowd. In between songs we could hear the distant sounds of live music at the far end of the festival, several blocks away. We slowly made out way through the throng of humanity.\n\nI really liked Jane in skates. The DJ started playing Levitating, and Jane found an open space in the crowd and started dancing. She had an unbelievable move that looked like moonwalking in place. It looked like the movement of her feet should have had her strutting down the street, but she was a picture of grace on wheels as she moved in place, one hand on her hip. I tried to join in, but I couldn't for the life of me figure out how she did it. I almost fell down trying to copy her. Instead I contented myself skating in small circles around her as I watched her dance in place.\n\nWe skated in and out of booths, looking at wares and art. We stopped for some refreshing fruit-kabobs as a snack. I tried (and failed) to not stare at her terry-cloth covered ass as she danced/skated through the gaps in the crowd in front of me.\n\nWhen we finally made it to the other end of the street, we found a stage, backed up to 13th Street facing towards the festival. There was a band rocking out in front of a several hundred people. We found an open space at the back of the crowd and stopped to check them out.\n\n\"What do you think?\" Jane asked me, moonwalking in place to the beat.\n\n\"Eh, they're okay. Not my style of music, but at least they sound good.\"\n\nTruthfully, I didn't care for the song they were playing, even if they were better than most cover bands I'd ever heard.\n\nIf you wanna be somebody else, If you're tired of fighting battles with yourself,\n\nIf you wanna be somebody else, change your mind!\n\nThe song struck a little close to home for me, hitting me in my insecurities. Four months being with Jane had tempered them a little. This was maybe the longest I'd ever dated... anyone, really. But there were still moments when I found myself wondering what the hell she was doing with me. Many times, I'd take a break from studying to walk back to her office to check on her and she'd have me read a passage from her book over her shoulder. It was invariably so far over my head that I was continually baffled that this warm, cute, funny woman also had the capacity to write about such a dense, complex and important subject as race in America with such passion and eloquence, and yet still found me interesting enough to keep around.\n\nI often found myself wanting to be somebody else. For her. Because I wanted to be everything she needed, and I was sure I wasn't, and when we weren't together I lived in a low-level state of fear that she'd realize she was dating way down the social ladder. But I didn't know if I had the capacity. To be as good as I needed to be for her. Shit, I still hadn't managed to overcome my fear of talking to Abuela about Jane. And myself. Sometimes it felt like my cowardice was a cloud hanging over our relationship.\n\nThe lead singer really leaned into the lyrics and I shifted uncomfortably from skate to skate.\n\nIf you've had enough, of all your tryin'\n\nJust give up, the state of mind you're i-i-i-i-n!\n\nIf you wanna be somebody else...\n\n\"The crowd seems to like them,\" she noted, as the band came to the end of the song and transitioned straight into a Mighty Mighty Bosstones tune.\n\n\"Yeah, everyone's doing the white people bounce.\"\n\nJane laughed, which never failed to lift my mood. \"I tell you, if you and I weren't a thing, I'd have the hots for the guitarist. She's a perfect soft butch.\" It was true, the guitarist was a short, solidly built white woman who had a flat-top haircut almost identical to mine except hers was bleached blonde. Her bare arms were impressively muscled too.\n\n\"You'd have no shot, she's totally in love with the keyboard player. See? She can't stop turning around to watch her.\" Something about this band was tickling a corner of my memory, but I couldn't place it.\n\n\"Maybe she's just fascinated with her blue hair.\"\n\n\"I guess. I'm totally not into the dyed look. I like the bass player, though, she's slapping that bass like it slept with her girlfriend. Nice to see a hot Latina gettin' it.\"\n\nWe watched them play for a few more songs until I felt like I was going to overheat in the sun. \"Need something to drink?\"\n\n\"Yes, but I also need to find a bathroom.\"\n\n\"There's porta-potties over there. Go ahead and I'll get us a beer. Or do you want a hard seltzer?\"\n\nShe looked at me with mock-horror. \"You're going to drink alcohol when it's like a million degrees out here?\"\n\n\"Sure. An ice-cold beer doesn't sound refreshing?\"\n\n\"Ugh, no thanks. A bottle of water for me, please.\"\n\n\"You got it. The line for the beer place looks as long as the line for the porta-johns. You go that way, I'll go this way and we'll race to meet back here.\"\n\nJane kissed me, then skated away and I made my way to stand in line at the nearest beer vendor. When I finally got to the front of the line, I changed my mind about a beer. A hard seltzer sounded more refreshing, as hot as it was. I got a bottle of water for Jane, and two mango seltzers for myself. I shot-gunned one immediately, tossing the empty in a nearby trash can, then pushed off the bin, rolling backwards before I turned to go find Jane. Unfortunately, I hadn't looked behind me and bumped into someone as I backed up, almost knocking me off my wheels. I flailed my arms, a drink in each hand, to catch my balance then turned to apologize.\n\n\"Oh shit, sorry I--\"\n\nI found myself face-to face with Addison Wagner, looking at me with the same shocked expression on her face I'm sure was on mine. \"Viv!\"\n\nMy stomach sank into the ground. She looked almost exactly the same as the last time I'd seen her on the train platform at DuPont Circle, her white-blonde hair brushing the tops of her shoulders. A detached corner of my mind noted that she needed more sunscreen, her pale skin was turning pink where the sun touched it.\n\n\"Hi Addie.\" I couldn't think of anything else to say. I didn't know what to do. I wanted to turn and skate away. I wanted to just stare at her, see if she would say anything. I wanted to apologize. I wanted to yell at her.\n\n\"How have you been? I didn't know you skated.\"\n\nI looked down at my feet. \"I'm trying something new.\"\n\n\"Oh. That's... good. Good for you.\"\n\n\"Thanks.\"\n\nWe looked at each other for a long, uncomfortable moment.\n\nShe opened her mouth \"Listen, I--\"\n\n\"Hey baby, did you... Oh, sorry... Am I interrupting?\" Jane said as she skated up to stand beside me.\n\n\"No, I just ran into someone. Literally.\" I handed her the bottle of water. An awkward pause ensued as Jane and Addison eyed each other. Finally, I felt the need to fill the silence.\n\n\"Esta es la mujer de la que les habl\u00e9 que me rompi\u00f3 el coraz\u00f3n.\" I have no idea what possessed me to speak Spanish. I have no idea what made me say those words. Jane had been picking up a few words here and there, but I knew she'd have no idea what I'd just said. Bless her, she rolled with it.\n\n\"Te entiendo,\" she said, as a reply. I managed to conceal my surprise that she even knew that phrase, or that it was perfectly appropriate.\n\nAddison didn't conceal her surprise. \"I didn't know you spoke Spanish,\" she blurted out. I felt a flash of anger, but how could she have known? The whole time I'd been with Addison, I'd tried to hide any part of myself that I thought she'd have felt was... alien. Beneath her. I'd never felt that urge with Jane. Maybe because we were both minorities. Both... other.\n\n\"There was a lot you didn't know about me, Addie.\"\n\nHer brow furrowed. I could tell she was trying to be cordial. I didn't know if it was because she genuinely had no animus towards me now or just because she'd always been basically a decent person. I decided there wasn't much else for us to say.\n\n\"Well, we gotta get going. Nice to see you,\" I said, starting to turn away.\n\n\"Viv, I--\" she started.\n\nI paused to see what she had to say, but she was interrupted before she could continue.\n\n\"Hey, there you are, Jo wants us to come backstage and--\" Her doctor chick rolled up to us in her wheelchair then stopped with a little screech of her tires when she saw me. Her being seated did absolutely nothing to conceal the enormous baby bump she was sporting. I never wanted kids, and having them with Addison had never even entered the fantasies I'd had when I'd thought about how it might have been if it'd worked out between us. But just seeing them next to each other, clearly in the early stages of starting a family was an extra knife in my gut. \"Oh! Sorry, I uh... Miss... Esparza? Right?\" She was clearly thrown by my presence.\n\n\"Just call me Viv,\" I turned and indicated Jane. \"This is Jane May. Jane, this is Addison Wagner and... sorry I don't remember your name.\"\n\n\"Liz Charles,\" the doctor chick said. We stood there, the awkwardness quickly becoming unbearable.\n\n\"Well, we should--\" I started again.\n\n\"Viv, I've always wanted to tell you that I forgive you!\" Addie blurted out.\n\nI stared at her. Silence fell over us, as the festival-goers continued to swirl around, oblivious to the drama getting ready to occur in their midst.\n\nOf all the reactions I'd thought I might have when I imagined this moment, the white-hot anger I felt wasn't one I'd ever predicted.\n\n\"You... You forgive me. You forgive me? You forgive me.\"\n\nI could see the confusion on her face. \"Well, yeah. For... for you know, when you--\"\n\nI did not want her to finish that sentence in front of Jane. \"You forgive me?! You used me! And lied to my face, the whole time! You were over her, you said!\" I said, pointing at the doctor chick who rolled her chair back from me a few inches. She looked just as shocked as Addie at my outburst. \"You'd moved on! 'We should make a real go of it', you said! All your bullshit lies about how I was good enough for you, when you were just using me to try and forget her!\"\n\n\"Hey! You're the one who--\"\n\n\"I'm the one who ended it!\" I felt Jane put her hand on my shoulder, but I shrugged it off. \"You were lying to yourself, which was your problem but you were lying to me too, and that was my problem!\"\n\n\"I... I'm... I...\" she stammered.\n\n\"It's fine, Addie, you go ahead and forgive me. Great. I forgive you too. Now we can both move on with our lives!\" I snarled sarcastically, \"C'mon Jane,\" I skated away without waiting to see if she followed. Thankfully, I was more than a block away from Addison and her doctor chick when the tears clouding my eyes made me miss the empty beer can lying in the street. It went under my wheels, causing me to go flying. I landed on the asphalt on my knees, the can of seltzer I was holding exploding under my hand as I tried to catch myself.\n\n\"Ow, fuck! God dammit!\"\n\nJane was instantly kneeling at my side. \"Are you alright?\"\n\nI rolled over onto my butt, and buried my face in my hands. The pain that was causing the tears to spill down my cheeks had nothing to do with the pain from my knees. Although I could already feel I was going to have a huge road rash on both of them. I felt so fucking humiliated. Running into Addison and her partner like that. With Jane standing right there, watching the whole thing! A sob escaped my lips.\n\n\"Easy, it's okay. You're okay!\" I could feel the stares from the crowd around us.\n\n\"How could I be okay after that?\" I asked, my voice muffled by my hands.\n\n\"Hey, do you ladies need a paramedic or something?\" I heard someone ask.\n\nI dropped my hands from my face. \"No,\" I huffed loudly.\n\n\"C'mon, let's get you up,\" Jane said.",
        "Several pairs of helping hands were offered from the crowd and I was pulled to my feet.\n\n\"Lean on me, let's get you home.\" Jane's voice offered no judgment, just kindness and concern. I leaned on her shoulder as I limped back to her townhouse. Limping on skates, I can't recommend it\n\nIt was quite an operation, her getting both our skates off and helping me hobble up the steps. The tennis ball sized raw wounds on my knees were already starting to tighten up, making it incredibly painful to flex my knees.\n\nJane helped me to the couch, then fussed about the apartment, and returned with a handful of items and a bowl of water. She dipped a washcloth in the bowl and ever so gently began dabbing at the bloody spots on my knees. I hissed in pain.\n\n\"I know, but we have to get the crud out of it.\"\n\n\"Yeah, I know.\"\n\nShe worked quietly for several minutes, then finally broke the silence.\n\n\"What did you say to me in Spanish?\"\n\nI looked out the windows without answering.\n\n\"I caught 'heart' at the end.\"\n\n\"I said, she was the girl who broke my heart.\" I closed my eyes in pain as I finally let myself admit it to myself for the first time. Addison had broken my heart. Because I'd thought I wasn't worthy of her. And I'd desperately wanted to be. To be good enough. Because I had wanted to be in love with her. Or at least someone like her. Someone as interesting and capable and smart. And I wanted her to feel the same about me. And I'd known she never would. Never could have. Not with someone like me.\n\n\"Do you want to talk about it?\" she asked me quietly.\n\nI watched her hands as they gently removed the dirt and grime that had been ground into my knees.\n\n\"Viv? Tell me what happened.\"\n\nCould I get away with not telling her? No, probably not after what just happened. I heaved another sigh which turned into a hiss as she hit an especially sensitive spot.\n\n\"I met Addie at The League. We traded phone numbers and ended up seeing each other. At the time, Liz was her friend. She was straight. Well, I guess she thought she was straight anyway. And after Addie and I had been on a few dates, she told me she'd fallen in love with Liz, even though she was straight, and she didn't think she should date me because she was messed up over it.\"\n\n\"Hmm. What happened then?\"\n\n\"Well... By this time, I'd already kinda figured out that Addie and I probably weren't going to be compatible anyway. But... Fuck, this is embarrassing.\"\n\n\"I'm not going to judge you, Viv. I'd just like to know what happened. So I can understand.\"\n\nI hadn't been able to meet her eyes since we'd gotten back to the apartment. \"I knew I wasn't the right one for her, not in the long haul. But she was hot. I suggested, you know... if she needed someone to just hang out with, maybe distract her from Liz, that I'd be up for it.\"\n\n\"Like... friends?\"\n\nI sighed. \"Friends with benefits.\"\n\n\"Ah.\"\n\n\"Yeah. And she took me up on it. We started sleeping together that day.\"\n\n\"Oh... Really?\"\n\n\"Yeah. In hindsight, that was probably a red flag. I mean... I liked it, obviously, but who does that? When they're hung up on someone else?\"\n\nShe carefully dried my wounds with a new washcloth. \"This next part is going to hurt,\" she said, lifting a bottle of hydrogen-peroxide.\n\nI gritted my teeth as she poured a capful on the wounds, the liquid erupting into angry bubbling.\n\n\"Ow!\" I sucked breath between my teeth. \"Anyway, pretty soon she started saying that we should move beyond friends. Get serious about each other.\"\n\n\"Did you?\"\n\n\"I was pretty skeptical. I was sure she wasn't over Liz. I was sure I wasn't the right girl for her even if she was over Liz. But I wanted to. I really liked her, even though...\"\n\n\"Even though... what?\"\n\nI finally looked her in the eyes. \"I... I felt she was out of my league. That I wasn't good enough or smart enough for her. Especially not good enough to replace Liz.\"\n\nJane sat back and looked at me. After a long pause, she said, \"So you've had self-confidence problems about yourself for a long time, huh? It isn't just with me.\"\n\nI looked away again. \"No, it's not just with you. But I'm sure I've gotten worse since Addison.\"\n\n\"Okay, so then what happened?\"\n\n\"Well, I'd almost gotten comfortable with the idea, and then I had that crash I told you about. On the Red Line?\"\n\n\"What did the crash have to do with you and her?\"\n\n\"I was thrown headfirst into the control panel, and got taken to the hospital. It's how I got this scar.\" I pointed to the faded white line on my forehead reaching from the middle of my eyebrow up into my hair.\n\n\"You never told me you were hurt!\" she said in surprise.\n\n\"Yeah. Split my head open, got a pretty good concussion. I called Addie and asked if she could come get me. She lived like ten minutes away. But, in what I'm sure was one of the worst freak coincidences in the world, Liz was the doctor in the E.R. who treated me.\"\n\n\"She's a doctor? Really?\" Jane said, as her eyebrows shot up.\n\n\"Not really the point of the story, but yeah.\"\n\n\"Sorry, just surprised. When I imagine an E.R. doctor I don't think of someone in a wheelchair. I should think about why that surprised me.\"\n\nA faint smile curled my lips. Even during a conversation like this, Jane was always wanting to examine blind spots and biases in people, whether in others or herself. It was one of the things I loved about her.\n\n\"So, yeah, she'd just finished stitching up my head when Addie came in.\"\n\n\"What happened then?\"\n\nA felt another stab of pain in my heart. I couldn't believe that after years of distance it was still hitting me like this. I guess because I'd had to see her again. And have her doctor chick shoved in my face again. And her stupid baby bump.\n\n\"Addie just... melted. It was so fucking obvious that she was head over heels for her. She barely looked at me.\"\n\n\"Ouch.\"\n\n\"Yeah. Anyway, after that, we muddled along for... I don't know, maybe another month? Three weeks? She kept saying 'I'm ready to be over Liz', which was another red flag. She wasn't over Liz, she just wanted to be. So where did that leave me?\"\n\n\"That sounds really hard, Viv. I'm sorry you had to go through that.\"\n\n\"Yeah.\" I could hear the tears coming up in my voice. I stomped on them hard. I'd cried enough in front of Jane already today. \"Anyway, like I said, maybe three weeks later we... We broke up. And that was the last time I saw her. Until, I saw her and Liz together on the platform on the Red Line, a year or so later. And it was really fucking clear that she wasn't her straight friend anymore. They were together.\"\n\n\"Ouch.\" she said again.\n\n\"Yeah.\"\n\nWe sat in silence, the sounds of the city outside our only soundtrack.\n\n\"Why did she forgive you?\"\n\n\"What?\" My head jerked up in surprise at the question.\n\n\"She said she wanted to tell you she forgave you. That's when you went off on her. What was she forgiving you for?\"\n\nI looked into her eyes. They were so kind, so gentle, so warm. She wasn't judging me. She was just listening to me. Should I tell her what I did? Could I? Would she judge me then? Would she... Would she leave me? Kick me to the curb, finally? For being the cheating bitch that I am? I can't tell her the truth. Can I?\n\n\"We, ah... we had a really loud fight. In public. And, uh, I said some things. Some pretty harsh things. About her being a liar. And things about Liz. I was pretty mean.\"\n\n\"Well, you certainly had a good reason.\"\n\n\"I don't want to one hundred percent make her out to be the villain. I did some shit. Said some shit. And I'm the one who suggested we start, you know... I'm the one who pushed the friends with benefits thing from the start. I'm not blameless.\"\n\n\"I'd say she was the one at fault though. Using you to try to get over her straight crush like that? Lying to you about her feelings? All you did in the end was say some mean things.\"\n\nGuilt washed over me. I knew that Addie had used me, but I had cheated on her. I mean, I hadn't slept with Astrid, but I could admit that was only because Addie had caught me before I could. I'd succumbed to the temptation to cheat after it was undeniably clear to me how in denial she was about her feelings for Liz. But I still cheated. Addie wasn't the only black hat in this movie. I wasn't pure as the driven snow. And I was letting Addie take all the blame in Jane's mind.\n\n\"Anyway, I'm sorry you had to be there to see that,\" I said, the embarrassment plain in my voice.\n\nShe touched my cheek with the tips of her graceful fingers. \"Baby, it's okay! I'm just glad I could be here for you. I'm sorry you wiped out and gave yourself two giant street pizzas.\"\n\nI laughed, then sniffed, trying not to cry again.\n\nShe gently pushed my legs apart, shuffling forward between them, then kissed me tenderly.\n\n\"I'm also sorry she put you through all that. I want you to know, there's no one that I'm hung up on. Except you.\"\n\nI looked up, startled.\n\n\"Uh... okay.\"\n\n\"I don't have anyone in my past you need to worry about. I'm focused on the present.\" She cupped my face in her hands and kissed me again, then she wrapped me in a tight hug. I pressed my cheek against hers as I felt tears coming on again.\n\nHow? How is this woman hung up on me?\n\nShe hugged me tightly to her, giving me the comfort that I needed, careful to avoid touching the wounds on my knees.\n\nShe's so thoughtful and smart and pretty and caring. She's all I could ever hope for.\n\nAnd I just lied to her.\n\nTo Be Continued...\n\nThank you for reading, friend. As always, I have updated Viv's Dance Party playlist with the songs from this chapter, as well as updating the Rotor's Set List.\n\nAs always, thank you to my editor, AwkwardMD, for her outstanding work making me look better.\n\nSpecial thanks to AvidReader223, my main beta reader on this series. If you like Jane, you can attribute a lot of that to her for checking my biases and helping me keep Jane authentic."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "lesbian romance",
        "gay",
        "gay romance",
        "romance",
        "wedding",
        "latina",
        "interracial",
        "slow burn",
        "love story"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-journey-ch-05-5"
}