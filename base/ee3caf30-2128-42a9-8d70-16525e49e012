{
    "title": "Mrs. Swanson's Boarding House",
    "pages": [
        "'Mr. Morton, what is the meaning of this?\" Mrs. Swanson had summoned Carl Morton her newest boarder to her parlor. Displayed on the coffee table were two white sheets; white. that is. except for the yellowish stains that Carl could plainly see.\n\n\"I..I..I d.d.don't know!\" Carl stammered embarrassed to be questioned about the obvious semen stains on the otherwise immaculate sheets.\n\n\"Come now, Mr. Morton.\" Mrs. Swanson scolded in her best motherly voice. \"Surely you don't expect a proper lady to explain your bodily functions, and you want to go to medical school?\"\n\n\"I..I.. know what the stains are, Mrs. Swanson.\" Carl confessed as Susan Bridgeway looked on, bemused. Susan Bridgeway was Mrs. Swanson's housekeeper and cook. She stood slightly behind Mrs. Swanson dressed in her maids uniform, a plain black dress with white cuffs and collar. The dress buttoned all the way from the hem of its skirt which was mid calf to its collar. Her blond hair was pinned up in a no nonsense \"bun\" and she wore white stockings and sensible shoes. She was the picture of domestic efficiency. \n\nCarl's face reddened as he stood before the two women, they were both roughly his mother's age. \"Do you recall, Mr. Morton, that when your parents and I signed your boarding contract they agreed that I would act \"in loco parentis\"?\n\n\"Yes, Mrs. Swanson.\" Carl recalled waiting in the dining room while his parents, the Doctor and Mrs. Morton discussed the details of his living arrangements while he attended the university to study pre-med. Mrs. Bridgeway had served him cookies and milk while he waited. Doctor Morton had lived at Mrs. Swanson's while he attended medical school and had been introduced to Carl's mother the former Sarah Lee Parker by Mrs. Swanson. Their discussions seemed to drag on forever but Carl reasoned that being old friends they most likely spent some time just catching up. When Carl was finally summoned to the parlor where his parents had been meeting with Mrs. Swanson behind closed doors he found his mother chatting with Mrs. Swanson as his father appeared to be adjusting his tie. His father's suit coat was draped on a clothes tree; the kind found in a gentleman's bedroom. An odd piece of furniture for a parlor Carl thought at the time.\n\n\"Carl.\" His mother began. \"Mrs. Swanson has agreed to accept responsibility for you while you are attending university.\"\n\n\"I don't think I understand, Mother?\" Carl thought he would be on his own when he left home to attend college.\n\n\"Son.\" His father interrupted as he put his suit coat on. \"It's a formality, in case of an emergency Mrs. Swanson will be able to make decisions that your mother and I would normally make for you.\"\n\n\"That's right, dear.\" His mother added. \"Your father's parents signed the same agreement when he lived at Mrs. Swanson's. Didn't they, Roger?\"\n\n\"My parents trusted Mrs. Swanson to supervise me and your mother and I trust Mrs. Swanson to keep an eye on you for us.\" \n\n\"Mr. Morton, among other things, you agreed that you would not make unnecessary work for me or Miss Bridgeway. Do you recall, Mr. Morton?\"\n\n\"Yes, ma'am.\" Carl replied quietly. What would his parents think if they knew his first infraction involved a wet dream?\n\n\"And do you recall that you would always wear a suit and tie when you used the common rooms?\"\n\nCarl had failed to put on his suit coat when Miss Bridgeway informed him that his presence was required by Mrs. Swanson in the parlor. \"I'm sorry, ma'am. It won't happen again.\" Carl looked down as he apologized.\n\nI'm afraid that apologies alone will not suffice, Mr. Morton.\" Mrs. Swanson scolded. \"I want you to go back to your room and write two proper apologies. One to Miss Bridgeway for making her work harder, and one to me for disrespecting my rules. Do you think you can manage that, Mr. Morton?\"\n\n\"Yes, ma'am. Right away, ma'am.\" Carl almost bowed as he left the room. She made him feel so childlike and small.\n\nAs he hurriedly wrote his apologies, Tom Murphy an upper classman already in medical school entered his room. \"She called you downstairs?\" \n\nCarl nodded yes but didn't look up as he continued to write.\n\n\"Did she close the door?\" Just the way he asked the question made Carl feel that Tom knew more than he let on.\n\n\"No, she left it open, why do you ask?\"\n\n\"Oh, nothing.\" Carl couldn't help but notice a faint smile on Tom's lips. \"I guess you'll find out soon enough.\"\n\n\"Find out what? Carl demanded.\n\n\"You know it's against the rules to discuss anything about Mrs. Swanson's. Do you want me to get into trouble too?\" Tom turned and left the room leaving Carl to finish his notes of apology and wondering what might be going on.\n\nWhen Carl returned to the foyer the doors to the parlor were closed. Carl knocked softly. The door was answered by Miss Bridgeway. \"I'm afraid you'll have to wait in the kitchen, Mr. Morton. Mrs. Swanson is attending to Mr. Butler.\" She closed the door behind her and ushered Carl to the rear of the house. Wait here until I come back to get you, Mr. Morton.\n\nMiss Bridgeway's manner was all business. Cool, almost cold, calm and efficient, she carried herself in such a way as to demand respect. Her posture might have been described as aloof were it not for the maid's uniform. She was small; no more than five-two but sturdy; maybe a hundred and forty pounds. Her uniform accentuated her ample bosom, tight belly and full round buttocks. Carl watched as she returned to the parlor. Her hips seemed to sway in a way he hadn't noticed before. Before she reentered the parlor she looked back at him and seemed to smile ever so slightly. As he blushed and looked away he noticed a slight stirring in his trousers.\n\nCarl waited patiently; actually relieved for the moment that he wasn't facing Mrs. Swanson. As time passed he wondered what might be taking so long and rehearsed his apology over and over again.\n\nSoon enough the parlor doors opened and Scott Butler, another upper classman left without even looking towards Carl. Miss Bridgeway stepped into the hall and motioned for Carl to come to the parlor.\n\nCarl drew a deep breath, stood, adjusted his suit coat and walked quickly to his second meeting with Mrs. Swanson. As he entered the parlor he had to turn sideways to avoid brushing against Miss Bridgeway whose dress collar was no longer buttoned al the way to the top. \"Excuse me, please.\" He asked politely.\n\n\"You're excused, Mr. Morton.\" Miss Bridgeway smiled as she looked into his eyes and caused him to blush.\n\n\"Please come in, Mr. Morton.\" Mrs. Swanson ordered. \"Let me see your apology.\"\n\nThe parlor door closed quietly behind him. \"Which one ma'am.\"\n\n\"Let's start with your least serious offense, failing to wear your suit coat when you came down to meet with me.\" \n\nCarl handed a small envelope to Mrs. Swanson. She opened it glanced at the contents, smiled and said, \"Thank-you, Mr. Morton, your apology is accepted. Please be more careful in the future.\"\n\n\"I can assure you that I will, Mrs. Swanson, thank-you for being so understanding.\"\n\n\"You're welcome, Mr. Morton. Now we must deal with the more serious matter; creating extra work for Miss Bridgeway. May I see your apology please?\"\n\nCarl handed the second envelope to Mrs. Swanson. She read the note, smiled and handed it to her maid. Miss Bridgeway read it and smiled. \"You seem contrite enough, Mr. Morton, but mere contrition is not enough to mitigate this situation. You must be willing to do two things to make this right. First, you must take steps to prevent this sort of thing from happening in the future. And second you must perform an act of restitution. Do you agree, Mr. Morton?\"\n\n\"I think I understand what you mean but what do you want?\"\n\n\"As far as restitution is concerned I think helping Miss Bridgeway in the laundry for an hour would be fair. Would that be sufficient for you, Miss Bridgeway?\"\n\n\"That would be fair, Mrs. Swanson, thank-you.\"\n\n\"Very well then, you will help in the laundry at a time that is convenient for you but you must complete your service by the end of the week, is that understood?\"\n\n\"Yes, ma'am.\" Carl answered quickly.\n\n\"Good!\" Mrs. Swanson exclaimed. \"Now we must deal with prevention. As with most young men your age you seem to suffer from rather frequent nocturnal emissions.\" Carl blushed, his eyes turned down. \"Isn't that right Miss Bridgeway?\"\n\n\"I should say so, ma'am. Every night it seems to me.\"\n\n\"That's not healthy, not healthy at all. For a young man like you to be successful at school you must be able to focus on your studies. While you may not be aware of it your subconscious is pre occupied with sex.\" Carl could feel his penis beginning to throb. He was unable to look at Mrs. Swanson as she spoke. \"Please take your jacket and hang it on the clothes tree.\"\n\n\"I beg your pardon.\"\n\n\"I want you to be more comfortable as we talk.\" Mrs. Swanson reassured him. \"Now hang your jacket up and come sit beside me.\" Mrs. Swanson patted the seat next to her on the settee.\"\n\nAs he sat down Mrs. Swanson placed her hand on his knee. \"Look at me Carl.\" It was the first time she had addressed him by his first name. \"Do you trust me, Carl?\"\n\nCarl blushed, afraid that the growing bulge was becoming obvious. \"Yes ma'am.\"\n\n\"Your mother and I discussed this very topic when your parents brought you to me. She was very apologetic that she had not yet started your training...\"\n\n\"My training?\" Carl interrupted, confused.\n\n\"Please don't interrupt, Carl. Your mother felt that she didn't have enough time. Your birthday was just last week so she asked me to begin your training. It's unusual for a young man to be placed in my care without any training at all but under the circumstances I agreed. Now where was I?\"\n\n\"You were explaining to Carl that young men like him can be preoccupied with sex and not even know it.\" Miss Bridgeway offered.\n\n\"Thank-you, Susan. That's right; in fact, all men are preoccupied with sex! That is why women must help men control their urges. Wives, of course, help their husbands but young men must be helped by the women in their lives who love them and care for them. That starts with their mothers usually, but it could be their aunts or sisters or cousins or any woman who cares for the young man and wants him to grow into a healthy, intelligent, successful gentleman; a man who loves and respects all women but especially his wife. Do you understand, Carl?\"\n\n\"I think so...\" Carl really wasn't sure where this was going.\n\n\"Do you masturbate, Carl?\"\n\nThe question was so direct that it caught Carl off guard.\n\n\"It's all right, Carl. You can say yes. Little boys masturbate. Don't they, Susan?\"\n\n\"I should say so!\" Susan exclaimed.\n\n\"Do you want to grow emotionally, Carl?\"\n\n\"Yes, of course.\"\n\n\"Then I'm sure you'll agree that it's unhealthy to play with yourself all alone in the dark in your room, or worse, looking at dirty pictures.\"\n\nCarl nodded, yes.\"\n\n\"And you'll also agree that a daily sexual release will help prevent these nasty nocturnal emissions you've been having.\"\n\nCarl nodded again without thinking. He was agreeing just to be agreeable. He was uncomfortable to say the least and wanted to end this and go back to his room.\n\n\"And that Miss Bridgeway and I should help you control your natural urges so that you can have a healthy relationship with women all your life.\"\n\n\"Yes, Mrs. Swanson.\"\n\n\"Good, now let's get a look at you. Miss Bridgeway, show Carl the proper way to place his clothes on the clothes tree. Pay attention Carl, whenever you come to us for help you will always come to us properly dressed, you will explain that you need our help and you will ask permission to remove your clothing so that we can help you. The proper thing to say first is 'ma'am, I need your help, may I please remove my clothing?'\"\n\nCarl just stood there in silence, shocked, unable to speak or move. \"Did you hear me, Carl?\"\n\n\"Yes, but...\"\n\n\"Carl!\" Mrs. Swanson interrupted sternly, \"Would you like me to call your parents?\"\n\n\"No, ma'am.\"\n\n\"Then proceed.\"\n\nCarl rose and started to loosen his tie. \"Mr. Morton!\" Mrs. Swanson's voice indicated her displeasure. \"What did I tell you you must do?\"\n\nCarl blushed. \"Ma'am, I need your help, may I please remove my clothing.\"\n\n\"Yes you may.\"\n\nMiss Bridgeway helped Carl take off his tie and shirt. Carl felt very uneasy. He wanted to resist but then again he was strangely excited. \n\n\"Leave his shorts on, Miss Bridgeway.\"\n\n\"Of course, ma'am.\"\n\nWhen all his clothes were neatly arranged Miss Bridgeway took Carl by the hand and led him over to Mrs. Swanson. Carl's penis was just barely constrained.\n\n\"Do you think it is proper for a man to let a woman know that he appreciates her, Carl?\"\n\n\"It would be polite to do so, Mrs. Swanson.\"\n\n\"That's right, Carl. And do you know how a man expresses his ultimate appreciation?\"\n\n\"I'm not sure what you mean, Mrs. Swanson.\"\n\n\"When a man begins to notice a woman there is a sub-conscious response that he is unable to control. His penis begins to swell. The deeper his appreciation the more intense the swelling. Unfortunately, for women, men have hidden their penises and consequently the surest sign of their interest under layers of clothing. Your mother and I belong to a small cadre of modern women who want to change this. We believe that the world would be a better place if men were free to express their desires naturally. We believe that men should be naked at all times so that as women we can observe them and help them control their natural desires.\"\n\n\"But, Mrs. Swanson, that's not possible!\"\n\n\"Of course, dear, you're right! Society isn't ready yet and may never be. But, in my home, and in the homes of a surprising number of enlightened women it is happening! When your parents went home the first thing your father did when he entered the house was strip!\"\n\n\"But what about my sister?\"\n\n\"Your mother has been teaching your sister Ruth about the ways of The Sisterhood since she turned eighteen. I am giving you a choice. On the one hand you may reject my offer to bring you into our CFNM world. A world enjoyed by your parents and sister. A world enjoyed by your aunt Carolyn, Uncle Ward and Cousin Chris...\"\n\n\"Wait, what is CFNM?\"\n\n\"It stands for Clothed Female Naked Male.\"\n\n\"But why are the men the only ones who are naked?\"\n\n\"Because women in our world are the dominate sex, Carl. No matter how successful a man becomes in his career, and believe me, when I tell you that the ladies of the sisterhood expect their men to be highly successful, in a CFNM home the women rule. The most obvious expression of that dominance is the clothing that hides her private parts from all men except their husbands or lovers and even they must earn the right to see and touch. But then CFNM men learn from an early age how to please women. If you reject this world you will not be a full time member of your family. You will be excluded from many family events and you will be asked to leave my home tonight. On the other hand if you choose to submit to the CFNM lifestyle I will begin your education immediately! If you want to stay please take off your shorts and show me your penis.\"\n\nCarl's mind was spinning out of control. Could he believe Mrs. Swanson? Was his father the Dr. Roger Swanson, Chief of Surgery at Memorial Hospital willing to parade around naked at home? He remembered his father adjusting his tie in this very room. \"May I ask one question, ma'am?\"\n\n\"Just one, Carl, and then you must decide.'\n\n\"Has my father ever been naked in your home?\"\n\n\"I trained your father, Carl. I introduced him to your mother. Whenever he visits whether your mother is with him or not he spends some of his visit naked as a sign of his respect. It's time to make your choice.\"\n\nCarl stepped out of his shorts, folded them and placed them on the clothes tree. He turned and took one step towards Mrs. Swanson. His penis was fully erect.\n\nMrs. Swanson smiled, \"You've got a lovely penis, Carl! Don't you agree Miss Bridgeway?\n\n\"Indeed I do! And Carl's testicles are very nice too! May I touch them?\"\n\n\"Soon enough, Miss Bridgeway.\" She took his testicles in her hand and slowly rolled them from side to side. She pulled gently trying to get them to loosen but they drew even tighter. \"Do your balls ever ache Carl?\n\n\"Sometimes.\" He moaned.\n\nWhen they do you must come to me or Miss Bridgeway, do you understand? \n\n\"Yes, ma'am.\"\n\n\"You are never, ever to jack-off by yourself.\" Mrs. Swanson scolded. \"From now on your sexual release will be monitored by one of the Sisters. Do you understand?\"\n\n\"Yes, ma'am.\" Carl's erection was becoming painful.\n\n\"Miss Bridgeway?\"\n\n\"Yes, ma'am.\"\n\n\"Do you see how dark Carl's penis is becoming?\"\n\n\"Yes, ma'am.\"\n\n\"The head is especially swollen now, it's super sensitive. We could make him cum with just a few quick pumps but I want this one to build up. At this point I like to refer to the penis as a cock. It sounds so much more powerful. I might make him cum without touching his cock, wouldn't that be fun?\n\nCarl moaned helplessly, his knees began to shake. \"Pleeeaseee......\"\n\n\"Please what? Carl. What do you want? You can tell me!\" Mrs. Swanson had him literally by the balls and she was enjoying every minute. She knew that training Carl would be even better than training his father. Carl would be second generation CFNM. The movement was growing. A movement that had existed in isolation since time began. But now, in the modern era, the ease of communication had broken down the barriers that limited its growth in the past. \"Tell me what you want me to do.\"\n\n\"I need to cum!\" Carl pleaded. \"Make me cum!\"\n\n\"I like spurt, Carl. Can you say 'make me spurt' for me.\"\n\n\"Oh.h.h yes.s.s.s please.. Make Me Spurt!!! Please make me spurt.\"\n\n\"Isn't it just wonderful how anxious a young man gets when he's really excited, Miss Bridgeway?\"\n\n\"Indeed it is! Mr. Morton can't seem to keep his hips still and you haven't even touched his pretty penis. He looks so sweet thrusting his hips and clenching his butt cheeks.\"\n\nCarl was on the brink of cuming but Mrs. Swanson knew how to keep a slow steady pace that would keep him that way as long as she wanted. \n\n\"From now on Carl you will live by my rules! You must promise that you will never masturbate yourself unless one of the Sisters gives you permission.\"\n\n\"Yes, ma'am.\" Carl moaned.\n\n\"All of your semen belongs to The Sisterhood. Do you understand?\"\n\n\"Yes, ma'am.\"\n\n\"Say it, Carl. Promise!\"\n\n\"All of my semen belongs to The Sisterhood and I will never masturbate without the permission of a Sister.\"\n\n\"You won't regret this, Carl. The Sisters can make a nice young man feel very loved and wanted. And when we find the right Sister to be your wife you will be prepared to please her in every way possible.\" Carl's breathing was very shallow but rapid. Those quick short breathes that let Mrs. Swanson know he was on the brink of ejaculation. His eyes were closed and he was panting, he was like putty in her hands and she once again felt the stirring in her pussy that only came out when she exercised her power over a naked man. How many times had she done this? Too many to count but watching a penis as she teased it never failed to make her wet. \"It's almost time, Carl. I must put on my apron first. You wouldn't want to soil my nice blouse now would you?\"\n\n\"Oh, no, ma'am, please. Please! Make me spurt for you!\" Carl was desperate.\n\nMrs. Swanson put on a white apron, the kind worn by cooks and sat down on the edge of her chair. \"I want you to place your feet on either side of my legs, Carl. A little closer, dear. When you spurt for me I want to catch it on this apron. We don't want to make a mess now do we?\" Carl just moaned. \"Would you massage Carl's balls now please, Miss Bridgeway?\"\n\n\"I thought you'd never ask.\" She giggled as she assumed her position behind Mrs. Swanson's newest recruit. She was always amused at how easily Mrs. Swanson could get a young man to do her bidding. Her warm hand cupped Carl's balls and gently rubbed them. Her free hand rubbed his chest teasing the tiny nipples that were hard as little stones.",
        "\"It's almost time, Carl. Squat a little closer. You don't want to miss my apron do you? I'm going to hold your cock, Carl, I want you to fuck my hand and spurt for me. Can you do that for me Carl?\"\n\nAs Mrs. Swanson took his rock hard penis in her soft hand Carl did the only thing he could. He began pumping his hips as if he were fucking her hand. Each time he pulled back she squeezed gently. Within seconds his first spurt splashed against her apron covered breasts. \"That's a good boy, spurt for me, nice big healthy spurts!\"\n\nAs Carl calmed down and regained his composure Mrs. Swanson milked the last few drops of semen from his wilting penis. \"This is so much better than playing with yourself, don't you agree, Carl?\"\n\n\"Yes, Mrs. Swanson.\" Carl sighed. He was surprised at how relaxed he felt and how at ease he was being naked in front of these women; women who were old enough to be his mother.\n\n\"Miss Bridgeway, may I have a warm wash cloth please?\" As she wiped her hands she said, \"Please tidy up Carl's genitals, I'm afraid I may have left them a little sticky.\"\n\nThe warm washcloth felt very nice as Miss Bridgeway cleaned his cock and balls.\n\n\"Please sit down beside me Mr. Morton.\" She patted the seat beside her on the settee. \"I hope that you won't be bashful about asking for help in the future. Miss Bridgeway and I will be here for you. Do you understand?\"\n\n\"Yes, Mrs. Swanson, I understand.\"\n\n\"As time goes by I will introduce you to other members of The Sisterhood and many of them will be willing to help you too but for now it will be just Miss Bridgeway and me. Of course, in a week or two, when your mother and sister visit I will present you to them as a new devotee.\"\n\n\"I'm sorry, what does that mean?\"\n\n\"I'm sorry, Carl. A 'devotee' is a term that the Sisters use to indicate that a man is one of our disciples. One who follows our rules. In much the same way that a good husband is devoted to his wife a 'devotee' is devoted to all women of the Sisterhood. When a devotee is introduced to a Sister for the first time he is \"un veiled\". That means that he is ceremoniously stripped and presented to her. It's customary for the devotee to have an erection as a sign of his appreciation for her and its also customary for the Sister to handle his genitals as a sign that she accepts him. Sometimes she may even masturbate him although it's not necessary. I expect that your mother and sister may want to masturbate you when I present you so that you won't feel uncomfortable asking them for help when you go home on vacation. The sooner the better we always say.\" Carl was embarrassed to think that his mother and sister would be masturbating him and his penis was beginning to harden. \"Is it the thought of your mother or your sister making you hard, Carl?\"\n\n\"Both, ma'am.\"\n\n\"That's sweet, Carl.\" Mrs. Swanson patted him on the thigh. \"As a devotee you will be under the tutelage of all the Sisters but your primary circle of Sisters will consist of Miss Bridgeway and me while you are here at school and your mother and sister at home. Your mother will find two or three Sisters who live close by to assist her and I imagine that your aunt Carolyn will be one of them.\n\nCarl's eyes widened as the thought of his aunt entered his mind. He had always had a crush on his aunt and the thought of her fondling him made his erection even stronger.\n\n\"Before you go back to your room, Carl, I want you to be sure that you understand my house rules. First, when you are in the private areas of the house you will be naked. Scott and Tom are already naked and they have removed the door to your rooms so that Miss Bridgeway and I can monitor you at all times. Second, there will be absolutely no masturbating alone. Miss Bridgeway and I will be available to help you as needed and you will have a regularly scheduled 'milking' time each evening. Third, when you young men come downstairs for breakfast and lunch you will use the back stairs and eat in the kitchen, naked, you will dress for dinner with me each evening. Forth, you will never discuss anything about this house or me or The Sisterhood unless one of the Sisters is present. That includes among yourselves; do you understand?\"\n\n\"Yes, ma'am.\"\n\n\"There are no secrets Carl, anything you want to know I will tell you. I want to avoid the spread of any false information; is that clear?\"\n\n\"Yes, ma'am.\"\n\n\"Very well then, do you have any questions?\"\n\n\"No, ma'am.\"\n\n\"You seem to have a very nice erection already, Carl, are your balls still bothering you?\"\n\n\"Yes, ma'am.\"\n\n\"Would you like Miss Bridgeway to help you with it?\"\n\n\"Oh yes! Yes please!\" Carl was unsure why these women liked to masturbate young men or even what he was getting into but the thought of another hand job made his cock throb even harder.\n\n\"Then what have I told you to do?\"\n\nCarl turned to Miss Bridgeway and said, \"My testicles are making me uncomfortable, Miss Bridgeway, will you help me?\"\n\n\"Of course, dear.\" She said as she patted his genitals and winked at Mrs. Swanson. \"I'd be delighted.\"\n\n\"Take him to the kitchen and introduce him to the milking bench, Susan, and be sure to use some lotion to protect his skin.\"\n\n\"Very well, ma'am.\" She answered as she gathered up Carl's clothing and taking his stiff penis in hand guided him from the parlor."
    ],
    "authorname": "0ra11yfix8ed",
    "tags": [
        "cfnm",
        "clothed females",
        "naked males",
        "masturbation",
        "spurting"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/mrs-swansons-boarding-house"
}