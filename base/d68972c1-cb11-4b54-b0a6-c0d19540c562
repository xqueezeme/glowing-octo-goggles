{
    "title": "Coeds at Camp Ch. 04",
    "pages": [
        "Tina Lambert stood at the sink in the little cabin washing her hands.\n\n\"That's the seventh time you've done that, Tina-Marina,\" Margie Stone said.\n\n\"The ninth!\" Tina said.\n\nMargie lay on the bed wearing only the crisp bill Tina had earned -- Ben Franklin's vaguely smiling face pressed between her legs.\n\n\"You know, Tina, if we each earned just one of these a day all summer we'd double our money. That'd be almost fourteen thousand dollars!\"\n\n\"That's easy for you to say, Marge. You didn't have to jerk off Methuselah.\"\n\n\"Hey, girlfriend -- a hundred bucks for six minutes of work? I can handle that.\"\n\n\"You know what that makes us, don't you, Marge?\"\n\n\"Yeah, I suppose -- well, no, it's different. This is a nudist camp, and they are tips.\"\n\n\"With that kind of rationale you definitely have af future in national politics, Marge.\"\n\nTina turned away from the sink. She wore a tiny white bikini.\n\n\"And you know, you can put something on, Marge. We're off duty.\"\n\n\"Yeah, I guess. I'm getting kinda used to it.\"\n\nMargie plucked the bill from its perch, gave Ben a quick kiss, and handed the hundred to Tina. She swung her shapely legs off the bed.\n\n\"Besides,\" she said, \"I'm sure not everybody will be like Henry Hackett.\"\n\n\"You mean you're banking on there being more Freds and Tommys here --\"\n\nThe girls were startled by a banging on the door.\n\n\"Hello! Anybody home?\"\n\n\"Shit!\" Margie said and scurried for the bathroom.\n\n\"Who is it?\" Tina called.\n\n\"Tommy. You saw me at the pool today,\" a male voice said.\n\nTina opened the door. Two young men were standing there in swim trunks. Tommy, tall and blond, radiated a perfect white-toothed smile. The other youth was muscular, dark-haired and looked pale and ill.\n\n\"Who is it?\" Marge yelled from the bathroom.\n\n\"It's okay, Marge,\" Tina said.\n\nMargie emerged cautiously, a white bath towel wrapped around her body.\n\n\"We weren't really introduced earlier.\" Tommy said. \"Thought we'd drop by and say, hi. I'm Tommy -- this is Derek, he's a groundskeeper.\"\n\nDerek managed a half-hearted wave. Margie peeked around the door.\n\n\"What's the matter with him? He looks sick.\"\n\n\"Oh, he'll be okay,\" Tommy said. \"He just ate something that disagreed with him.\"\n\n\"Hacketts!\" Derek muttered and gagged.\n\n\"He said 'Hacketts'. They're always the first guests to arrive,\" Tommy said.\n\n\"We know the Hacketts!\" Tina said.\n\n\"Yeah, we've already had some hands-on experience with them,\" Margie said.\n\n\"Derek had to help them set up their RV,\" Tommy said and slapped his friend good-naturedly on the shoulder.\n\n\"Hold still, Derek,\" he said, \"you've got something stuck on your lip.\"\n\nHe plucked off a single strand of hair and examined it. Derek gagged again.\n\n\"Oh, God!\" Margie said. \"I thought we'd taken care of that horny bastard for awhile!\"\n\n\"No!\" Derek mumbled. \"Not Henry -- Helen!\"\n\n\"Jeez!\" Tina said.\n\n\"It was awful!\"\n\n\"Try not to think about it,\" Tommy said.\n\n\"Just lying there on my back --\" Derek continued.\n\n\"Forget it, Derek!\" Tommy cautioned.\n\n\"I couldn't breathe! I was suffocating!\"\n\n\"Derek -- please!\"\n\n\"--and she just sits on me, glaring at the TV and yelling, 'Fuck you, Dr. Phil!'\"\n\nTommy put a comforting arm around his friend's shoulder.\n\n\"I got sick!\" Derek said, his face contorted in agony.\n\n\"God, you upchucked in Helen's --\" Tina said, her eyes wide.\n\nDerek shook his head.\n\n\"No, I tried to make it to the bathroom -- but Henry was in there puking his guts up.\"\n\n\"The man's going to have no bodily fluids left,\" Margie said.\n\n\"It took me a half-hour to clean their carpet,\" Derek lamented.\n\nHe opened his clenched fist and examined a badly crumpled one hundred dollar bill.\n\n\"It's not worth it,\" he said.\n\n\"That's enough of that,\" Tommy said. \"We came by because we thought, well -- since you two are new here we could, you know -- do something tonight.\"\n\nMargie's eyes narrowed.\n\n\"What did you have in mind?\" she asked.\n\nTommy shrugged.\n\n\"I don't know, the pond's real pretty in the evening. We could just, you know -- sit around.\"\n\n\"You could show us the ins and outs of the place, I suppose,\" Margie said.\n\nTommy grinned sheepishly.\n\n\"I don't know,\" Tina said. \"I'm allergic to mosquitoes -- they leave big bumps.\"\n\n\"Yeah, just look at her chest,\" Margie said.\n\n\"Then how about the rec hall?\" Tommy persisted. \"We could do some pool, maybe a little ping-pong?\"\n\nMargie looked at Tina.\n\n\"What do you think?\"\n\nTina shrugged.\n\n\"Guess it beats sitting around the cabin,\" she said.\n\n\"Great!\" Tommy beamed. \"We'll meet you there at seven. I'll go into town and pick up some tacos!\"\n\nDerek slapped his hand over his mouth and bolted for the trees.\n\nThe shiny green six-ball rolled across the felt and plopped neatly into the pocket.\n\n\"Wow, Marge, you're good! Where did you learn to play pool so good?\" Tommy asked.\n\n\"In biology lab,\" Margie said.\n\n\"They had a pool table in your biology lab?\"\n\n\"I don't know. I never went.\"\n\nTommy watched her lean across the table. Generous portions of lower buttock swelled out from under her tight cut-off jeans and the tops of her white breasts spilled from the blue halter.\n\n\"I liked biology,\" Tommy said, \"especially anatomy.\"\n\n\"Damn! I missed!\" Margie said. \"Sometimes I get all the balls.\"\n\n\"I don't doubt that a bit,\" Tommy said.\n\n\"How about some ping-pong, Tina?\" Derek asked.\n\nThe two sat on a bench and watched Margie and Tommy shoot pool.\n\n\"No, I don't think so,\" Tina said. \"I'm not very coordinated. Besides, I've had plenty of wrist exercise for one day.\"\n\n\"You look great tonight, Tina. Love the bikini.\"\n\n\"You don't think I'm over-dressed?\"\n\n\"Well, you'll have tan lines if you wear it too often.\"\n\nA breeze wafted through the open windows of the rec room and carried the soft chirping of crickets from the camp pond.\n\n\"You know, I think I really like it here,\" Tina said.\n\n\"Yeah, it's cool,\" Derek said. He slid a muscular arm around her shoulders.\n\nTina stood abruptly and pointed.\n\n\"Oh, what are those? Torture devices?\"\n\n\"No,\" Derek laughed. \"Weight machines.\"\n\nHe walked to one, sat on the bench, and pressed the bars. The muscles in his arms, shoulders and chest rippled.\n\n\"This one's great for the pecs,\" he said.\n\n\"You ought to try it, Tina-Marina,\" Margie said.\n\n\"What's that?\" Tina pointed to a smaller device shrouded by a canvas cover.\n\nDerek grinned.\n\n\"That's, um, a special machine -- for guests only,\" he said.\n\n\"What's it do?\"\n\n\"Afraid you'll never find out, Tina.\"\n\n\"Can we look at it?\"\n\n\"Better not,\" Derek said, \"Laci would kill us.\"\n\n\"Where is the mighty Mistress Roosevelt, anyway?\" Margie asked.\n\n\"Downtown at the jail,\" Tommy said.\n\n\"At the jail?\"\n\n\"Yeah. Seems she assaulted some delivery guy with a ketchup bottle. She's making bail.\"\n\nMargie put her stick down and walked to the covered object.\n\n\"What's so secret about a freakin' exercise machine?\" she demanded.\n\n\"Well, like Derek said, it's special. It's a passive exercise machine,\" Tommy said.\n\nBoth boys chuckled.\n\n\"Yeah? Well why do they keep it covered?\"\n\n\"Hygiene!\" Both boys laughed out loud.\n\n\"Hmmm.\" Margie tugged at the laces on the tarp.\n\n\"Can't we take a peek?\" she asked.\n\n\"I don't know if that's a good idea, Margie.\"\n\n\"Oh, please! I can't stand secrets!\"\n\n\"I don't know--\" Tommy said.\n\n\"Please!\" Margie clasped her hands between her legs and bent over. Her breasts almost tumbled out of the halter.\n\n\"Uh, how long is Laci going to be gone?\" Derek asked.\n\n\"She usually gives the cops some shit.\"\n\n\"PLEASE!\"\n\n\"What the hell,\" Tommy said.\n\nHe and Derek loosened the cords and lifted the canvas from the device.\n\n\"Holy shit!\" Margie exclaimed. Her jaw dropped.\n\n\"Jeez Marie!\" Tina said. Her eyes got huge. \"What is it?\"\n\n\"I think I know.\" Margie said. \"I saw something like it on the Internet.\"\n\n\"Well?\"\n\n\"It's a fucking machine,\" Margie said.\n\n\"I know its a machine, but --\"\n\n\"Not a machine, Tina-marina. Not a fucking MACHINE -- a FUCKING machine.\"\n\n\"Oh,\" Tina said. \"Yeah, gosh, I guess the big dildo on the end is a dead giveaway.\"\n\nTina touched the motor housing.\n\n\"Gee, it looks like Dad's garage opener,\" she said.\n\nMargie ran her finger along the telescoping rod that protruded horizontally from the housing.\n\n\"If this was your dad's garage opener, your mother would be doing a whole lot more commuting,\" she said.\n\nShe touched the rubbery shaft of the dildo.\n\n\"I always wondered what they did with King Kong's dick after they shot him.\"\n\n\"Okay, girls, you've had your look-see,\" Tommy said. He started to spread the tarp back over the macine.\n\n\"Wait!\" Margie said.\n\nShe tweaked the dildo's glans.\n\n\"I didn't know they really made these things.\"\n\n\"Marge,\" Tina said apprehensively.\n\n\"I wonder what it feels like,\" Margie said and ran her fingers gingerly down the shaft.\n\n\"Marge!\"\n\n\"I'll bet it can, like, go faster than a guy --\"\n\n\"MARGE!\"\n\n\"--and doesn't stop before you're ready.\"\n\n\"M-A-R-G-I-E!!\"\n\n\"Wanna test ride?\" Tommy asked and grinned.\n\n\"Ah, shit! Jeez Marie!\"\n\n\"I'm not going to be the only one bare-ass naked here,\" Margie said.\n\nThe boys quickly slipped out of their shorts, their cocks springing out already hard and red-tipped.\n\n\"I think they like us, Tina-Marina,\" Margie said as she pulled the halter over her head and let her firm breasts judder free.\n\nShe shimmied out of her cut-offs and stood naked.\n\n\"I don't know if this is really a good idea,\" Tina said, standing in her bikini bottom with her arms crossed over her chest.\n\n\"Don't be such a prude,\" Margie said. \n\nShe slipped a finger into Tina's bikini bottom and tugged it down, bringing the girl's fresh-shaven twat into view.\n\n\"What do I do?\" Margie asked.\n\nTommy smiled at her.\n\n\"Just sit on the end of that weight bench there -- lean back and relax.\"\n\nHe walked to a counter and took a tube from a drawer and squirted a large dollop of gel onto his fingers.\n\n\"You need lubrication for this.\"\n\n\"Yeah, lube is good,\" Margie said.\n\nTommy knelt beside her.\n\n\"Spread your legs a little, doll,\" he said softly.\n\nMargie leaned back on her elbows and opened her alabaster thighs. Her slit was already pink, moist, the tiny button peeking up. Tommy touched the ointment to it and began massaging it gently.\n\n\"Mmmmm!\" Margie purred and opened her legs wider.\n\nTina watched with her mouth open. Derek's cock hardened further, curving up in a graceful arc. \n\n\"Derek, push it over closer,\" Tommy ordered.\n\nDerek moved the machine closer between Margie's opened legs.\n\n\"Lube it, Tina,\" Tommy said.\n\n\"Me?\"\n\nTommy shot her a menacing glance. She took the tube, squeezed out a sizable portion, and began rubbing it onto the rubbery dildo.\n\n\"Have to get you good and lubed,\" Tommy said.\n\n\"Yeah -- good and lubed,\" Margie cooed. Her eyes were closed and her hips were slowly gyrating to the rhythm of Tommy's massaging.\n\n\"Get a little into you, too.\"\n\n\"Ahhh!\" Margie moaned has the boy's fingers slipped into her.\n\nTommy took the dildo in his free hand and positioned it near the girl's opening.\n\n\"Just turn it onto '1', Derek.\"\n\nDerek turned a dial on the motor housing. The lights in the rec room dimmed for an instant and them the machine started to hum. The dildo began vibrating. Tommy touched it to Margie's glistening pussy.\n\n\"Ohh!\"\n\n\"Just relax, hon.\"\n\nHe inched the head head between the pink lips.\n\n\"Mmmm!\"\n\n\"Help me, Tina, Hold her other leg.\"\n\nTina knelt at Margie's side and gently grasped her friend's thigh, opening her farther. Tommy pressed the phallus into her pussy until the head disappeared.\n\n\"Ohhh!\"\n\nMargie's green eyes fluttered open and she looked down between her legs.\n\n\"It--it's--going into me!\"\n\nTommy pushed the shaft in deeper.\n\n\"'2', Derek,\" he said.\n\nThe dildo began making short in-and-out strokes.\n\n\"Oh, God!\" Tina gasped. She closed her eyes again. Her hips began throbbing with the machine's motion.\n\n\"Oh, shit! It feels --good!\"\n\n\"Yeah. You like that don't you, baby!\"\n\nHe pushed it in deeper. Tina stared wide-eyed as the swollen lips of her friend's vagina grasped the slippery length. The shaft was stroking in and out of her a few inches. stretching the slit wide.\n\n\"God, it's fucking me!\" Margie hissed.\n\n\"Yeah, it looks really good,\" Tommy said.\n\nHe massaged the thigh he held. His engorged cock was pressed against Margie's undulating hip.\n\n\"Pull her forward,\" he said to Tina.\n\nThey urged the girl slowly forward to meet the thrusts.\n\n\"Ahh. I don't think I can take anymore!\" Margie gasped.\n\nTina and Tommy kept edging her forward, the shaft inching into her slick, wet cunt until it buried itself entirely, deeply into her.\n\n\"Ahhhhh!\"\n\n\"'3'\" Tommy ordered.\n\nDerek turned the dial and the cock began fucking like a piston, moving in and out of the girl's pussy with a loud, wet, slurpy sound.\n\n\"Oh, God!\" Margie screamed. She stared down at the shaft that impaled her.\n\nHer breasts swayed and jiggled with the momentum of the thrusts. Tommy leaned to her, took a swollen nipple into his mouth and ran his tongue around it.\n\n\"'4'!\" Tina yelled.\n\nThe machine kicked into its highest gear, pumping the thick shaft relentlessly into Margie. The girl leaned back on the bench and stretched her legs wide to let the shaft do its work. Her whole body shook with the throbbing intrusions..\n\n\"Ahhhggggggghhh!\"\n\nTina's saw Derek standing by the motor housing. He was watching the machine fuck Margie as he slowly stroked his red, enraged cock. Tina put her free hand on her own crotch and she felt the hot moisture there. Tommy put two fingers at Margie's clit and began massaging. The girl's breath came in huge gasps. \n\n\"Oh fuck--oh fuck--of fuck\" she moaned, turning her head from side to side\n\nSuddenly she jerked her thighs free from Tina and Tommy's grasp. Her legs straightened and her back arched up violently, lifting the machine off the floor.\n\n\"Ghhaaahhaaaa!\" she screamed, pushed herself violently against the shaft that impaled her, then collapsed like a rag-doll.\n\nDerek geared the machine down until the cock was making slow easy strokes in Margie's pussy. The girl lay gasping for breath.\n\nDerek was beside Tina. He lifted her easily by the waist.\n\n\"I gotta fuck you!\" he said.\n\n\"Yeah. Fuck!\" Tina said. She wrapped her legs around his hips and his hard dick went into in her as he carried her to the pool table.\n\nHe stretched her across the table and was instantly on top of her, his long, arched dick plunging completely into her.\n\nShe wrapped her arms around him as he humped her violently.\n\n\"Yes! Do it like the machine!\" Tina screamed. \"Fuck me like the machine!\"\n\nHe crushed into her, pressing her into the hard surface of the table as his cock penetrated incredibly deep into her hot, wet cunt. Tina looked through a haze of pleasure and saw Margie sitting upright, straddling the weight-bench. One hand was at her pussy and Tommy's dick was deep in her mouth. Images of the day flooded her mind -- Margie naked on Laci's desk, the lather being massaged into her own cunt, Fred's long white shaft buried in Maribeth Perkins' pussy, the machine plunging into Margie.Tina felt the climax rising deep inside her. She tried to hold it off, but the thrusts of Derek's huge dick were coming faster, harder. She could hold it no longer.\n\n\"Ohhh! Jeeez!\" she screamed as the pleasure washed over her. She felt Derek's hot cum release deep inside and saw a glob of Tommy's white cream spurt from the end of his swollen dick onto Margie's hot flushed face.\n\n\"What the fuck is going on in here!\"\n\n\"Holy shit\"\n\n\"Jeez Marie!\"\n\n\"It's Laci!\"\n\nThe four young campers stared dumbfounded at the vision in the doorway. Laci Roosevelt, six-feet tall with muscles bulging in the bare thighs below her tight black skirt stood hands-on-hips glaring at the carnage in the rec room -- the panting naked bodies, taco wrappers strewn about, a half-emptied soda can spilling it contents onto the floor beneath the Fucking Machine. The girls and boys leapt from their entanglements and began putting on shorts, halters, and bikini tops.\n\n\"I said, what the fuck's going on here!\" Laci bellowed again.\n\n\"We were just shootin' some pool.\" Tommy blurted.\n\n\"Yeah, playing a little ping-pong,\" Derek offered.\n\n\"The last time I played ping-pong, we didn't use no rubber dick!\" Laci said, eyeing the machine.\n\nLaci circled the room slowly, surveying the mess, clucking her tongue while the kids scrambled to dress.\n\n\"We'll clean it up --\" Tommy said.\n\n\"Shut the fuck up, dickwad!\" \n\n\"Yes, ma'am.\"\n\n\"I ain't had a really good day. This is the last thing I wanted to come home to!\"\n\n\"Sorry.\"\n\n\"I said shut up, you worthless piece of white jism!\"\n\nShe narrowed her eyes at the girls, who stood with their hands behind their backs, staring glumly at the floor.\n\n\"I no sooner get your little twats shaved and cleaned than you gotta go try 'em out.\"\n\n\"Sorry, ma'am.\"\n\n\"Sorry.\"\n\nShe turned to the boys.\n\n\"You little pieces of shit get to your cabin and jerk each other off. I'll have Fred deal with you tomorrow.\"\n\nThe boys nodded and skedaddled.\n\nThe girls started to leave, too.\n\n\"Not so fast! I ain't done with you little cum-twats. You clean up this fucking mess.\"\n\nThe girls picked up the wrappers and empty cans, scrubbed the dildo and weight bench with wet paper towels, racked the pool balls.\n\n\"Can we go now, Laci?\" Margie asked.\n\nLaci laughed a deep, humorless chuckle.\n\n\"Like I said ladies, I ain't had a real good day. Do you know how hard you gotta squeeze a cocksucker's balls to get him to drop assault charges against you?\"\n\n\"No, ma'am.\"\n\n\"No, ma'am.\"\n\n\"Ever seen a white guy turn blue?\"\n\n\"No ma'am.\"\n\n\"While I was doin' that, y'all girls was havin' a good time, wasn't you. A real party right here at Laci's place?\"\n\n\"Sorry.\"\n\nLaci studied the girls for a long moment, then her face split into a broad, evil smile.\n\n\"Y'all bend over the pool table.\"\n\n\"What?\" Tina asked.\n\n\"You heard me. Bend them sweet little asses over the table.\"\n\n\"Why --do you want -- us to do that?\" Margie asked.\n\n\"You'll find out, twiddle-dee-twats. Y'all want to keep working here?\"\n\n\"Yes, ma'am.\" The girls nodded.\n\n\"Then bend 'em over!\"\n\nThe girls walked to the table and stretched across it, side by side. Laci sauntered to the ping-pong table and picked up a paddle.\n\n\"Uh, what are youg going to do with that, Laci?\" Tina asked.\n\n\"Use your imagination, girlfriend,\" Laci smiled.\n\n\"Shit, Laci -- you're not going to -- spank us, are you?\" Margie asked.\n\nLaci slapped the paddle against her palm.\n\n\"Spank you? Spank you? Nah, I ain't gonna spank you.\"\n\n\"Whew!\" Tina said. \"I thought for a minute --\"\n\n\"I'm going to wallop you!\"\n\n\"Shit! You can't do that! I mean, it's against the law, isn't it?\"\n\n\"Sure it is. sweetie. But it ain't against the law for me to fire your little asses!\"\n\nTina and Margie looked at each other.\n\n\"Will it hurt?\" Tina asked.\n\n\"Aw, just a little sting.\"\n\n\"What do you think, Marge?\" Tina asked.\n\n\"I hate to give up seven thousand dollars -- plus tips. I got swats once in junior high. It wasn't too bad.\"\n\n\"And we did break the rules,\" Tina said, \" I guess we got something coming.\"\n\n\"What do you twinkie-twats say?\"\n\n\"Okay.\"\n\n\"Yes, ma'am.\"\n\n\"All right, then, slide them little drawers down and kick 'em off.\"\n\nThe girls obeyed.\n\n\"Bend way over and spread those legs.\"\n\nThe girls complied. Laci strolled over and touched the paddle to one of Margie's bare bottom-cheeks, then to Tina's.\n\n\"My, my -- maybe this day ain't gonna end so bad after all. You ever been walloped, sweetcheeks?\" she asked Tina.\n\n\"No ma'am.\"\n\n\"Well you're gonna be now.\"\n\nShe tapped the paddle against the girl's bare bottom.\n\n\"You gonna get it right there, darlin'.\"",
        "\"Yes, ma'am.\"\n\n\"You just hold real still while I take some of the hide off your little ass.\"\n\n\"Yes, ma --\"\n\nLaci drew back the paddle and swung it forward hard.\n\nSmack!\n\n\"Ow!\"\n\nTina jerked upright and her hands flew to her stricken bottom.\n\n\"Ow! That hurt!\"\n\n\"Meant to hurt, sweetheart. Now you just bend back over and get that little butt in the air for more. Don't be standin' up on me! Get your hands away!\"\n\n\"Yes, ma'am,\" Tina said and bent over the table again.\n\n\"My, my -- gotta red spot already,\" Laci chuckled.\n\nMargie glared at the woman over her shoulder.\n\n\"Oh, this one's showin' some attitude! We'll take care of that!\"\n\nLaci positioned the paddle on Margie's bottom as the girl continued to glare. She brought the paddle over her shoulder and swung in an arc.\n\nSMACK!\n\nMargie's body lurched forward with the blow.\n\n\"Shit!\" she hissed through clenched teeth.\n\n\"Here's another, baby!\"\n\nLaci delivered a hard blow to Margie's other bottom-cheek.\n\nSMACK!\n\nMargie lurched and groaned but stayed bent over.\n\n\"And here's one for Blondie!\"\n\nSMACK!\n\n\"Ohhh!\" Tina's eyes reddened.\n\n\"Try not to holler,\" Margie whispered, \"it'll just egg her o--\"\n\nSMACK!\n\nMargie's body shuddered with the blow.\n\nSMACK! SMACK! SMACK!\n\nThe girls' bare young bottoms quivered and jiggled as the blows fell on them. Tina clenched her fists and Margie bit into her lower lip against the sting.\n\n\"Don't you clench them little asses!\" Laci ordered. \"Leave 'em nice and loose. You got it comin'!\"\n\nSMACK! SMACK! SMACK! SMACK!\n\n\"Owwww!\" Tina moaned. Margie drew quick hissing breaths each time the paddle fell on her.\n\nThe sound of wood against flesh reverberated in the big room.\n\nSMACK! SMACK! SMACK! SMACK! SMACK!\n\nThe girls' bottoms twitched and swayed as the licks fell. Tears fell on the green felt of the pool table.\n\nFinally Laci paused, her giant breasts heaved as she panted from the exertion.\n\n\"One more!\" she said.\n\nShe swung round in a full arc and delivered the paddle hard, catching Margie half on her thighs.\n\n\"Yiiiieeee!\"\n\nMargie bolted upright and clutched at her bottom.\n\n\"Thought that one would get to you!\" Laci said and tossed the paddle onto the table.\n\n\"Get those red asses to your cabin,\" she said and strode out the door.\n\n\"It hurts!\" Tina whimpered as she lay on her stomach on the big bed in the cabin.\n\n\"Yeah!\" Margie agreed as she laid beside her.\n\nMargie raised up and looked at Tina's bare bottom.\n\n\"You might have some blisters.\"\n\nShe eased herself off the bed and took a jar from her bag.\n\n\"This might help.\"\n\nShe took a dollup white cream on her fingers.\n\n\"No, don't touch it!\" Tina whined.\n\n\"Be still.\"\n\nMargie touched the cream to Tina's bottom and spread it gently.\n\n\"Oh! Yeah, that's better. It's so -- cool!\"\n\nMargie smeared on more cream and Tina sighed with relief.\n\n\"That feels so good!\" she murmured.\n\nMargie stretched out on her stomach when she was done.\n\n\"Laci's evil,\" she said.\n\n\"I guess.\" Tina agreed. \"In a way she's kinda cool, though.\"\n\nShe took the jar of cream, got a large glob on her fingers and spread it gently over Margie's red bottom.\n\n\"Mmmm! You're right. It feels good.\"\n\n\"Funny,\" Tina said. \"It hurts, but -- it's like there's something else.\"\n\n\"What?\"\n\n\"I don't know. It's like I really wish Derek was here right now.\"\n\nMargie laughed.\n\n\"I know -- I'm wet, too. Something about that paddle!\"\n\nTina put the jar on the nightstand and lay on her stomach.\n\n\"I'm sorry I got us into this, Marge,\" she said.\n\n\"Yeah, Tina-Marina. If we were home we'd be flippin' burgers, draggin' the boulevard at night -- I'd be getting boinked by Andy Schumacher twice a week.\"\n\nShe scooted closer to Tina.\n\n\"I've done more in one day here than I'd do all summer at home --and we still got nearly twelve weeks to go!\"\n\n\"Yeah,\" Tina said.\n\nTina's eyelids were becoming heavy. Exhaustion from the day's events was settling in.\n\n\"I just don't want you to hate me, Marge.\" \n\nMarge put her face close to Tina's\n\n\"Hate you? I couldn't hate you, Tina-Marina! I love you -- you're my best friend!\"\n\n\"Yeah--friends,\" Tina murmured as sleep overcame her.\n\nThe cool summer breeze drifted in through the cabin's window. Tina Lambert dreamt that she felt Margie's warm, wet lips pressed against her mouth."
    ],
    "authorname": "Spengler",
    "tags": [
        "asked laci",
        "tina derek",
        "tina margie",
        "yeah cool",
        "tina tommy",
        "margie asked",
        "marge tina",
        "tommy put",
        "exercise machine",
        "laci"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/coeds-at-camp-ch-04"
}