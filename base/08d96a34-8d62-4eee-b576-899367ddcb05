{
    "title": "Necessity is the Mother of Obsession Ch. 04",
    "pages": [
        "The Victory - When A Plan Cums Together \n\nAuthor's note: This story arc is my first attempt in the Erotic Couplings genre. My other attempts all seem to have devolved into Romance. I suppose this could be, too. In any case, this is Part 4 of a 5-part story arc. Once more, there is a lot of non-sexual moving the story forward at the beginning, then the more erotic stuff, including some bi/lesbian, light B&amp;D and group. Please vote/comment. Consider it like applause. It's how I know whether I'm pleasing my audience. Enjoy... \n\n* * * * * \n\nThursday Morning \n\n\"Billy Boy sure gave you a strange look on the way in this morning,\" Lu commented to Karen as they sat with John and Orin, going over the plans for the day. \"I can't decide if he's lustful, afraid, curious or reverent. Or all of the above.\" \n\n\"Lu, all I did was come on to him, hard, at dinner, danced some really hot Bachata, hauled him off the dance floor and fucked his brains out behind the ice maker,\" Karen smiled. \"No biggie.\" \n\n\"Which gave me the chance to seed Bob with the information we discussed,\" John told them in low tones. \"Let's see how today's discussions go. Morton wanted us to all come back civil today. I think he's going to be surprised. Orin, did Bob Mills call your contact?\" \n\n\"Yes, sir, he did,\" Orin answered, keeping his voice low also. \"And got legitimate confirmation of what you told him.\" \n\n\"Then life is about to get a whole lot better,\" John smiled. \"Now all we have to do is allow them to fall in behind Bob's new epiphany and support the merger, then get Jim Morton to back our stock split plan, which I think Karen can do at dinner.\" \n\n\"Me?\" Karen was surprised. \"What do I know about stock split plans? Or any of the financials? Why don't you convince him? Wheeling and dealing is your bailiwick, not mine.\" \n\n\"One,\" John told her, turning to her, \"you've been absorbing all the relevant data since last Friday when you began saving this deal. You know everything necessary to talk about the advantages of Pearson selling his stock to us and to Morton. Two, just like with the Pearsons, it won't be Jim that makes the decision. It'll be Pam. And you're going to have a lot more leverage with her than I ever will. Besides, three... I can't get personally involved with anything between Jim, Pam or any combination of the above, because as the VP representing Sethridge and indirectly Tikken, I've got to look as pure as the driven snow.\" \n\n\"Have you even looked at any snow lately?\" Karen came back. She knew he was right and she was going to do what needed doing... she just didn't like the idea of being forced. \n\n\"You're going to do fine, Karen,\" he answered. \"You handled Billy perfectly.\" \n\n\"That was just giving in to my base animal nature,\" she argued. \n\n\"Well?...\" John shrugged. He already had a feeling what was going to happen with Pam. And maybe even Jim, if Karen was good enough. \n\n\"Fine... Sir,\" Karen shot back. \"You know I'll do whatever I need to do, so you succeed. Just let me know where the mines are.\" John didn't argue. He just nodded. \n\n\"If you people are ready,\" he suggested, \"let's top off our coffees and head on in...\" \n\nThursday Lunch \n\n\"Pearson and Morton have no idea what just steamrollered them!\" John chuckled as the four sat down at lunch, back at their usual Bistro. \"Mills admitting that he'd been acting shortsighted floored them! Awesome! Just awesome! Thank you, Karen, thank you, thank you, thank you!\" \n\nKaren didn't know why John was making such a big deal out of it. He's the one that talked to Bob Mills. All she did was keep Billy occupied. And speaking of which... \n\n\"Excuse me, Mr. Thompson?\" Billy Mills' voice came from behind Karen. She hadn't seen him walk up. She tried to casually look over her shoulder at him. \n\n\"Yes?\" John answered. \"What can I do for you, Billy?\" \n\n\"I don't want to interrupt your lunch, sir,\" Billy told him, \"and I'd like a short word with Karen, if I may.\" \n\nJohn looked at Karen and Karen shrugged, then started to stand. \"Order what I got last time,\" she told him. \"I'll be back in a minute.\" Then she stepped away with Billy walking beside her until they were several tables over and out of earshot. \n\n\"So what's up, Billy?\" she asked as she turned to face him. \n\n\"A couple of things,\" he smiled, \"so please bear with me. First off, and this has to be between us, my father told me last night that your boss had shared some confidential information which 'informed his change of mind' to put it his way. But he couldn't or wouldn't give me any details. So, since secretaries tend to know everything about their bosses, I was wondering if you know what, exactly, Mr. Thompson told my dad last night?\" \n\nKaren took a breath and let it out. She was not going to get dazzled by that smile. \n\n\"Billy, even if I knew what was said, which I don't,\" she told him, \"I couldn't discuss anything my boss might or might not know, or might or might not have said. He's my boss.\" She figured the first part wasn't a lie - she didn't know precisely what John had said to Mr. Mills. The backend was gospel for any woman who wanted to be in the position she was in. \n\n\"Okay. Loyalty. I can accept that,\" he continued to smile. \"I kind of thought that might be your answer, but I had to try. It's extremely unusual for my father to change his mind like he has.\" Karen just shrugged. \n\n\"Okay, on to number two,\" Billy continued, \"how long are you staying in Vegas?\" \n\n\"I believe we fly out Saturday evening,\" she told him. \"John has some things we need to tidy up tomorrow, and then he's promised me some sightseeing.\" Billy nodded his understanding. \n\n\"Then your availability for a date would be...?\" he asked. \n\n\"Nil, at this point,\" Karen told him. \"Unless John changes his mind.\" She thought about it for a moment before deciding to leave her options open. \"Do you ever make it to L.A.?\" she asked. \n\n\"Occasionally,\" he told her. \"Not recently. But there is always the quick trip or whatever.\" \n\n\"Then text me the next time you're coming out,\" she decided. \"You have my number. If I'm available, maybe we could get together.\" His smile broadened at the prospect. \n\n\"So, tell me...\" he ventured. \"Are you and he...?\" \n\n\"What happens in Vegas, stays in Vegas,\" she smiled and he knew that ended the conversation. \n\n\"Well, whatever happens in Vegas, I hope you enjoy it. I'll let you get back to your lunch.\" He started to leave when she suddenly asked him, \"how did you know where we were having lunch?\" \n\n\"I didn't,\" he told her, pausing. \"I followed you. Looks like a nice place. I'll have to try it sometime. Take care.\" He turned and headed away and Karen went back to her companions. \n\nOf course, she had to relate what happened in detail, and so forth, but eventually the four headed back to the afternoon meeting. \n\n* * * * * \n\n\"I think we've seen some fundamental shifts in position and reasoning,\" James Morton was addressing the assembled personnel. \"And rehashing some of the financials has shown a slightly different light on what we were considering yesterday. At this point, I would suggest that you, George and Bob, plan on meeting me in my office on Monday to finalize our position. You can take tomorrow to go over anything you want to bring to the table. It would be best if we had a decision by Monday night.\" \n\n\"The rest of you... I would like to thank you for an outstanding job of organizing and presenting the information we asked of you, in a concise and understandable manner. And I'd like to thank you, John, and your people, for making a last minute dash out here to help us put this to bed. I'm impressed. You have good people supporting you and you bring a lot to the table.\" \n\n\"So unless anyone else has something of consequence to bring to our attention, I'm going to end this meeting and cut you all loose.\" \n\nNo one had anything and the meeting ended, with the divers participants heading out on their own particular paths. John told Orin that if the deal went through, he should plan on rounding up the COO of Tikken and bringing him out to L.A., on Sethridge's dime. \n\nSince they had several hours before John and Karen had to meet the Mortons, Lu invited herself back to their hotel for a drink to relax. \n\n\"That was some very effective wheeling and dealing, this trip, John,\" Lu told him as the three of them relaxed in the parlor of their hotel suite. \"One more bit of business and you've earned your salary for the month.\" \n\n\"I'm not doing it alone, Lu,\" he pointed out. \"Without my very able Personal Assistant, we wouldn't have gotten very far. I can schmooze, but she can schmooze better. Hell, she even got in your pants.\" \n\nA wistful look crossed Lu's face before she sighed, \"yeah... that was nice...\" Karen chuckled. \n\n\"You do know you scared the shit out of me, right?\" Karen asked. \"When you first came over to 'check me out' for John? I didn't have a clue what I was doing, but I knew I had to impress you if I wanted John to succeed.\" \n\n\"Girl, you have no idea how well you impressed me,\" Lu smiled, lifting her glass in a mock toast. \n\n\"Oh, I think I do, now,\" Karen lifted hers in return. \n\n\"Lu, tomorrow I'm going to have morning meetings with Pearson, Mills and Morton, separately. Before they get together Monday. I don't see any reason to drag Karen along. Any ideas on how to pamper her while I'm busy?\" The brief look of lust that crossed Lu's face was very noticeable. \n\n\"Unfortunately, John, I'm scheduled to be with Orin and the Mergers and Acquisitions people most of the morning,\" Lu answered, dropping back into business mode. \"But I'd think an all expense paid morning at one of the luxury spas would be in order.\" \n\n\"I like the sound of that,\" Karen smiled. \"The first and last time I've had a full-blown spa day was for my 21st birthday. My Dad paid for it.\" \n\n\"Let your other Daddy pay for this one,\" Lu told her. \"The Sugar one.\" \n\n\"Oh, John's a lot more than a Sugar Daddy,\" Karen hurried to his defense, then realized how what she'd blurted out had sounded. \"He's my boss...\" she added lamely. \n\n\"No worries,\" John intervened. \"Lu, you know more about the girlie stuff than I do. You pick a nice place. Put it on your personal card and I'll reimburse you.\" \n\n\"Well, folks,\" Karen decided, standing up, \"the rum is nice, I'm relaxed, and I'm going to go grab a nap before I have to get cleaned up to go out tonight. Lu, since I'm probably screwing Pam tonight and not John, feel free to boff him before you go, if you want. I suspect you're a lot more bi than lez. In any case, take care and I'll catch up with you later.\" She walked over to John, leaned down and kissed him. \n\n\"Have a nice nap,\" he said to her retreating back as she headed for her bedroom. \n\n\"As nice as fucking your brains out sounds, John,\" Lu told him after Karen had gone, \"I think I'm going to mosey along. I'll catch up with you two in the morning and take Karen to the spa, before I go meet with Orin and that crew.\" \n\n\"I'm going to have another drink and then follow the sage example of my P-A,\" John smiled. \"You can let yourself out, right?\" \n\nLu left, John fixed another drink and headed to his bedroom. Karen is really getting to me, he thought as he lay down. Once business is done here, I'm going to have to take a hard look at how I want to handle this going forward. She is rather awesome... even if she doesn't realize it. \n\nThursday Evening \n\n\"Jim, I have to tell you, you surprised me,\" John told him as he, Karen, Jim and Pam Morton were being seated. \"I would have been scrambling to get reservations at the Eiffel, once I found out Pam liked French, but you beating me to it, here, at Marche Bacchus, is a pleasant surprise.\" \n\n\"John, the Eiffel is a tourist trap,\" Jim Morton told him with a smile, \"and the food isn't worth it, in my opinion. You're paying for the ambience. Here, patio dining, overlooking the lake... good food and... well, not horribly unreasonable prices. And it doesn't hurt to know the wait staff. I prefer to eat here. As soon as I heard you were taking George and Gloria to dinner, I made reservations. I guess it worked out well, since you took Bob and Billy out last night.\" \n\n\"And he knows I absolutely love their Prince Edward Island mussels,\" Pam gushed. Karen was taking the opportunity to size her up. \n\nFor fifty, she looked excellent. She could easily have passed for early thirties. Karen knew she showed a bit more mileage with her clothes off, but not so much as to be disillusioning. She was a little taller than Karen, maybe 5'7\", and heavier - maybe 150 lbs. to Karen's 130. Definitely bustier, probably a double-D whatever the girth. At a guess, Karen figured 34DD-24-36, rounded and curvy and looking very comfortable. She had light blue eyes and was blonde, possibly natural since there was no evidence of roots, and the smuggled photos had shown she shaved her pussy. She wore her tresses just past shoulder length. Very utilitarian, able to be let down or taken up as desired. Tonight, she had it up. \n\nJohn and Jim had both worn dark suits. Karen appreciated John's suggestion for her wardrobe, as the ivory number with the demur front and open back fit right in. Pam wore a similar dress, although hers had a bit of plunge to the front, and hers was a medium teal with silver accents. Pam's had enough of a plunge that Karen could tell she wasn't wearing a bra. Plus, the points of her nipples sticking out confirmed it. \n\nI'm glad to see she's braless, Karen thought as she took the woman in, while keeping her eyes moving between John, Jim and Pam. The cut of this dress means I am, too, and as thin as it is, I hope it's teasing the hell out of her. \n\nKaren let her attention shift to Jim. At Pam's comment about the mussels, he and John had started talking about French cuisine and their various preferences. She knew the man was 60, and he had enough of the careworn about him to confirm it, though other than his face and hands, he looked rather fit. He had a full head of grey - almost white - hair and wore a neatly trimmed beard and moustache. He looked a lot like Sean Connery in Hunt for Red October. Which went straight to Karen's groin. \n\nShe was musing on what he might look like naked when the water and menus arrived. Their server, Anna, left them to peruse their choices and Karen dragged her attention away from Jim and onto the menu - where she was promptly overwhelmed. Everything on it looked good. There was quite a bit of banter among John and the Mortons, and in the end she let their suggestions dictate her choices. \n\nHer soup was the French Onion, which she was told was superb, and she split a Bacchus Platter of appetizers with John, although Pam insisted she try some of the Escargot Persillade, too. She decided to skip the pasta and went with the Beef Tenderloin with Wild Mushrooms for her entr\u00e9e. She let John talk her into the Chocolate Mousse Trio for dessert and left it to the others to decide the wines. \n\nOver the soup and appetizers, Karen caught Pam sizing her up. Okay, it's showtime, Karen thought. Here's where you make your bonus. Ing\u00e9nue is probably a good approach... \n\n\"I insist we spend at least some time, not talking shop,\" Pam put in at one point, when John and Jim were discussing the abrupt change in Bob Mills' attitude. She turned to Karen. \"So, Karen... what brings you to Vegas?\" \n\n\"Unfortunately, shop,\" Karen told her, a bit apologetically. She's fishing for my relationship to John, she thought. Well, let's let her catch something... \n\n\"By day, I am John's mild-mannered Personal Assistant,\" she smiled to Pam. \"This is my first trip away from the office to help on a project. I've only been with John six months, but I think we've developed a good working relationship.\" \n\n\"And by night?...\" Pam prompted. \n\n\"Rocky Horror,\" John quickly leaned in, interrupting whatever Karen was going to say. Pam grinned as she recognized the reference. \n\n\"Really...\" Pam almost purred. \"So is this your first time to Vegas?\" \n\n\"Actually, yes,\" Karen admitted, \"and it's been a bit of a whirlwind. I haven't had much chance to do anything touristy, yet, but John's promised that if all goes well, I'll get some personal time in. Maybe some sightseeing, or a spa date. I'm hoping things are going well...\" She looked over to Jim Morton with a hopeful expression. \n\n\"I'd say they're going marvelously well,\" Jim smiled. \"Just some technical bits to work out. You've probably earned a bonus as well.\" \n\n\"Jim!\" John mock-objected. \"Don't spend me into the poorhouse!\" \n\n\"John, you will be anything but poor, believe me,\" Jim answered seriously. \"You've got a good team and you know it. I don't know how you changed Bob's and Billy's minds - and I do believe it was you, or one of your people - but that bit of maneuvering saved the deal. I'll see what they come back with on Monday, but I think we're going ahead.\" \n\nKaren turned to John and with all the na\u00efve innocence she could muster, asked, \"Are the technical bits the stock split you were talking about?\" She had Jim and Pam Morton's undivided attention as John tried to figure out how to respond to that. \n\n\"Well, yes, that's part of it,\" he answered her slowly, beginning to see the beauty in the setup. \"I don't think that was supposed to get discussed at dinner, though, luv.\" \n\n\"Oh. Sorry...\" Karen looked very apologetic. \n\n\"What stock split?\" That was Pam, not Jim. John had the good graces to look a little uncomfortable. \n\n\"Um...\" he hesitated. \"Uh, just a way we'd discussed to keep the balance of power in our favor, that's all.\" \n\n\"What stock split?\" Pam iterated. Karen decided to lie and hoped John would back her. \n\n\"I suggested that when George... I mean, Mr. Pearson... wants to cash out, it would be best for future plans if he split his stock between Sethridge, the controlling partner in Tikken, and you, Mr. Morton,\" she told them. \"I think John agreed with me.\" John did not contradict her. \n\n\"Why would you suggest that?\" Jim Morton wanted to know. \n\n\"Well...\" Karen paused to look at John, who gave her an obvious nod of approval, \"technically, you're heavy on the R&amp;D side and Tikken is heavy on the production side, so you'd want your R&amp;D decisions to drive the direction of the company, rather than short-term profits. Especially since Tikken is going to...\" \n\nShe came to a full stop, realizing she'd just blown it. Nobody was supposed to know about the NASA deal. \n\n\"Go on,\" Jim told her, followed almost immediately by Pam's \"going to what?\" \n\n\"I'm sorry,\" she apologized. \"I almost forgot, it's confidential. But what I wanted to point out was, in the past the Mills' strategies have been short-term buy in, short-term cash out, without really looking to the future. If you, Mr. Morton, had controlling interest, backed by Sethridge, through Tikken, you could do some of the long-range stuff you've wanted to do, but couldn't afford.\" \n\n\"Is this what you pay your Personal Assistant for, John?\" Jim asked him. \"To come up with brilliant strategies?\" John sort of shrugged. \n\n\"She's a recent but very valuable addition to our team, Jim,\" he told her. \"I do tend to listen to her. She returns the favor.\" \n\n\"Marry her, John,\" Pam suddenly stated. \"Don't let her get anywhere near the competition.\" \n\nOh, Christ! That's three! Karen thought, with a small bit of panic rising inside. First Gloria, then Lu and now Pam. Lord, please don't let them blow it for me, please don't let them blow it, please... I just want to keep dating him... \n\nJohn chuckled and told her the same thing he'd told the Pearsons. \"We're a little gun shy in that area, Pam,\" John turned to her. \"But believe me, I hear you.\" ",
        "\"So,\" Karen interrupted, again feeling the need to redirect the conversation. \"Now that my piece of this trip is over, what does a single girl do for entertainment in Las Vegas?\" \n\nHoly shit, she just blew the Gates to Hell wide open, John thought as he looked at her and saw how Pam was leering, too. Pride and Greed won't touch her, but she'll never make it to Envy, Gluttony, Wrath and Sloth. She'll go straight to Lust, do not pass Go!, do not collect $200. I'll be lucky if she makes it back alive. \n\n\"After dinner,\" Pam told her in a very suggestive tone, \"she comes with me for a girls' night out while the boys go play with their plans and strategies. Friday, you spend recuperating.\" \n\n\"Please don't break her,\" John asked softly and Pam laughed. \n\n\"That was a serious request,\" Jim pointed out to his wife in a tone reserved for married couples and which communicated volumes. Pam stopped laughing. \n\n\"I won't,\" she answered both men. \"Rule Number One and all that. We'll be good, or good at it.\" \n\n\"What's Rule Number One?\" Karen asked, seriously not knowing. \n\n\"No means No,\" Pam turned to her. \"When we're out partying, if you don't want to do something, all you have to do is say No. It is absolute and must be respected, always and everywhere. By everyone.\" \n\n\"I've never heard that before,\" Karen admitted. \"It makes a lot of sense. I think I should have known about it.\" \n\n\"He was Asshole Number 5, Karen,\" John pointed out softly. \"Not Boyfriend Number 5.\" She felt herself starting to blush. \n\n\"Yeah, right...\" she murmured, looking down at the table and trying not to show too much embarrassment. Pam was watching her like a hawk. \n\n\"Not to worry...\" Pam brightened up. \"You're under my aegis tonight. We'll have a great time.\" \n\nJesus, I hope she knows what she's doing, John thought as he looked over at Karen. I trust her, but Pam's a handful... \n\nThe entr\u00e9es arrived just in time to keep Pam on her side of the table. \n\nConversation fell off as they tucked in to an excellent repast. Karen sipped at the Bordeaux they'd ordered for her and tried to tame the tempest in her mind. I'm going swimming with sharks. I know Pam likes swingers' parties and that's probably what she is going to try to introduce me to. Am I ready for a group fuck? Billy was a one-shot, and Lu is just plain crazy-fun, but am I ready to fuck some stranger I just met? And John won't be around to rescue me. Or Lu. God, I hope I'm up to this... \n\nShe kept her attention on her food to avoid eye contact with Pam. John, also, was surreptitiously eyeing Pam and trying to decide if he needed to go along as a chaperone. \n\nConversation drifted to sights to see and things to do around Las Vegas, and then on to other vacation-related topics. \"Shop talk\" wasn't brought up again until dessert had been polished off and the four were sipping after-dinner espresso. \n\n\"I know you two are going to want to talk about the big business deal,\" Pam brought up out of nowhere, \"and I want to take Karen to meet some of my friends. And I know John's nervous about me taking her off somewhere beyond his control. Guardian Angel and all that. So, here's what I propose. Jim, you stay here and do whatever you boys do until it's time for John to go back to his hotel, and then you drive him back. Karen can take their car and drive me to my friends' place and deliver me home afterwards, or have a quick escape plan if she feels she needs it. I can always find my way back.\" \n\n\"So what do you say, John? Is it a plan?\" she asked him. John looked over to Karen. \n\n\"Do I call Lu and have her meet you, for a chaperone?\" he asked. Karen thought about it for a minute. \n\n\"No, I don't think so, John. Hell, she'd be right there with Pam, walking me down the primrose path. I think I'll be alright.\" At the comment about the primrose path, Pam Morton's eyebrows had shot up. \n\n\"It would appear, dear,\" Jim put in before she could respond, \"that some of your exploits are legendary.\" She turned and looked pointedly at him for a few moments. Then laughed. \n\n\"As are some of yours, sweetheart,\" she told him. \"And nothing is going to happen to Karen that she doesn't want to have happen.\" \n\n\"I'll take your word on that,\" John told her. \"Not to throw out a curfew, and... it would be nice if she were back to the hotel before 2am. She's got plans for the morning and so do I. And please... don't let her get drunk.\" \n\nKaren looked over at John and thought, note to self: he's absolutely right. No drinking. \n\n\"Not a problem,\" Pam smiled, rising. \"In which case, I'm going to the Ladies' and then we can go, whenever you're ready, Karen.\" She walked off as Karen rose to follow her. \n\nKaren leaned over John and gave him a light kiss, then told him, \"I'll be fine, John. I won't get drunk and we have each other's cells. And my GPS is on. You can find me if you need to... just be ready to do your manly duty when I get back.\" \n\n\"Are you joking?\" he asked, genuinely surprised. \"Do you know what she...?\" and he paused before finishing his thought in front of Jim Morton. \n\n\"You may be a bit tired, my dear,\" Jim spoke up. \"Nonetheless, John, you should always be ready to do your manly duty.\" He laughed and John joined in. Karen gave him another quick kiss and headed off for the restrooms. After she was out of earshot, Jim turned his attention back to John. \n\n\"She's a good fit for you, John,\" he observed. \"Pam's a good fit for me, too. I just can't keep up with her anymore, so she goes out to blow off steam, but always comes home. Karen may get her horizons expanded, hanging around with my wife, but she won't get hurt.\" \n\n\"And about that stock split idea,\" he went on, transitioning back to business, \"tell me how you see it happening. If it makes sense, I'll feel out George about it. Plus, if you'd care to share whatever 'confidential information' about Tikken that Karen was about to spill, I'd appreciate it. I don't like getting blindsided.\" \n\nConversation devolved into \"talking shop\" while Karen headed off into brand new adventures. \n\n* * * * * \n\nPam had directed Karen to a suburban house outside of Las Vegas proper. A typical sprawling ranch house, on a typical suburban cul-de-sac, with an atypical number of cars parked around. \n\nMust be a hell of a party, Karen thought as she found a place to park, about a long block away. \n\nOn the ride out, Pam had explained a little about where they were going, leaving quite a bit to the imagination. She'd explained that this party was colloquially a \"swingers' party\" - a mixed group of adults of all shapes, sizes and backgrounds, all sharing two things: a desire to share sexually-oriented fun with other consenting adults and a desire to do it in safety and privacy. \n\nGenerally, it was a group of people who knew each other and threw themed get-togethers on the weekends, usually at one of a few houses large enough to host the gathering. There were rules for attendance, the first and foremost being \"No means No.\" Along with it went \"don't touch without permission.\" Others were simple, like \"Be courteous\", \"drink in moderation\" and \"if there's a problem, tell the host.\" Others, like \"no drugs, no cameras, no single men\" kept the party fun and private. \"Arrive together, leave together\" and \"check with your partner through the evening\" helped keep couples as couples. Coming to a swing party to \"fix\" your relationship was only going to break it. There were other points of etiquette, like taking the time to talk to other people, dressing to impress and regarding cleanliness as a must - the host would have mouthwash and other stuff to freshen up. \n\n\"So how does the 'arrive together, leave together' apply to us?\" Karen had asked. \"If I want to leave, does that mean you have to, too?\" \n\n\"No, as single women it doesn't,\" Pam explained. \"If we were in a relationship, then it would only be polite to follow the rule. By the way, an unwritten rule is that the ladies tend to rule the situation at the party. If the ladies aren't happy, nobody's happy. Another unwritten rule is, take time to get to know your prospective partner before you propose anything intimate. Unless they're friends you've known for awhile, it's just plain good sense to get a feel for whether you want to do anything with any particular person.\" \n\n\"I've seen people come to one of these parties having an off night, and they just sit around, talking with people. Because you can actually make good friends. Tonight won't be a major blowout, since it's Thursday. So it's a good bet I'm going to know most of the people there. But you'll be a newcomer and you'll probably draw a lot of attention. Only do what you're comfortable with.\" \n\n\"John wants you back by two, so we should wrap up whatever we're doing not later than one. That gives us time for you to make it back to the hotel.\" \n\nI think moderation is going to be a good idea, Karen thought as they approached the house. I can play with Pam, and maybe others, without going hog-wild. That should make her happy and get John his win. \n\nThe door was opened by a good-looking, dark-haired young man in sandals, slacks and a dress shirt with the sleeves turned up. Karen had no idea why she expected someone to answer the door naked. \n\n\"Pam!\" the man exclaimed on seeing her. She stepped forward into his offered hug and it was obvious they knew each other well. When Pam eased up on the hug, she turned to include Karen in the conversation. \n\n\"Rod, I'd like you to meet Karen, a very recent friend of mine who's here to put all the nasty rumors about swinging to bed,\" Pam started the introduction. Karen nodded. \n\n\"Karen, this is Rod... we only go by first names at parties... a long time friend and one of our hosts this evening.\" \n\n\"Pleased to meet you,\" Karen nodded. Rod let go of Pam and asked, \"should I extend my hand or open my arms?\" \n\n\"Oh! I do hugs,\" Karen decided and stepped forward into the man's friendly, firm embrace. It wasn't long, but it wasn't quick, either. Rod gave her an obvious looking over when they broke the hug. \n\n\"That is a very nice dress, Karen,\" he told her, \"and it's nice that it's all you underneath. Come on in and meet the others.\" He stepped back so the women could enter, then added over his shoulder as he started down a hallway, \"we have all sorts of munchies and drinks laid out in the kitchen... kind of a help yourself buffet. A few people are already tagged, but most everyone else is out by the pool. We can swing through the kitchen on the way through.\" \n\n\"Tagged means in one of the rooms with a Do Not Disturb indication on the outside,\" Pam explained softly, leaning into Karen slightly, who nodded. \n\nHe is smooth, Karen thought as she followed Rod and Pam. And not at all unattractive. We're sticking with non-alcoholic tonight, girl. Remember. \n\nWhen they got to the kitchen, Karen was introduced to Amy and Phil, she in a see-through sundress and he in cargo shorts and a sleeveless T. They were regulars and were helping out in the food and beverages department. Karen got a tonic and lime over ice and decided her first impressions of the couple were that they were nice, and friendly. They didn't go for hugs, probably because they were elbows deep in making sandwiches. They promised to make time to chat, later. \n\nWalking out the back to the pool was a slight surprise, but one Karen had been trying to imagine on the way to the party. Nobody was fucking. At least, not that she could see. But there were a variety of clothed, semi-clothed and naked people drifting about, some in chairs by the fire pit, some along the side of the pool and some swimming, maybe a couple of dozen in all. She noted that all the swimmers were sans suits. \n\nSo the overtly sexual stuff must be behind closed doors, Karen thought. Good. Not sure I'm up for being on public display. She let herself be led over to the fire pit and introduced to a number of couples and a couple of single women, in various modes of dress but all looking good. Maybe not textbook sexy in some cases, but definitely sensual. One couple that caught her attention were an older couple, a little on the roly-poly side, who were introduced as The Professor and Marianne. \n\n\"Gilligan's Island?\" Karen wondered aloud. He was in shorts and a T-shirt, she was naked. Zaftig came to Karen's mind. \n\n\"It's an inside joke,\" he told her. \"My wife's name really is Marianne, while I do teach for a living, hence the appellation Professor. Obviously, this information...\" he swept his arm in an arc indicating the backyard... \"can't go anywhere, for professional reasons. This is a quiet, safe place for us to play with our more adventurous sides.\" \n\n\"I'm counting on that,\" Karen told him. \"This is my first time at one of these parties. My new friend Pam has promised to show me the ropes.\" The moment she said it, she regretted her choice of words. \n\n\"That would be the third room on the left,\" Marianne giggled. \"Hey, Pam... if you need some help...\" \n\n\"Marianne likes to get wrapped up in her play,\" Pam intoned, with the intentional emphasis. \n\n\"Seriously?\" Karen asked, revising her estimate of the woman. \"At a party like this?\" \n\n\"Well, light stuff,\" Marianne clarified. \"It's fun and it's safe. There's plenty of people around to make sure it doesn't go overboard. Would you like to try it? You could Dom me...\" \n\n\"Um...\" Karen was have an internal pep talk. We want to impress Pam, we want to make a good impression on her friends. This couple isn't in the beautiful people category but they seem like fun. And she wants to be the Sub. Do I know enough to Dom her? Safely? \n\n\"If you want reassurance that everything is okay, my husband can be there,\" Marianne went on, reading Karen's hesitation as being unsure. \"He could be a pretty good guide, too.\" \n\n\"And if you'd like,\" Pam added, \"I could be there, too. I'd just watch.\" \n\nOkay, now Pam's interested in seeing how I handle this, Karen thought. Guess I go for it. \n\n\"Sure,\" she smiled to Marianne. \"I'm a bit of a novice at playing the Dom, but I guess it could be fun. What do we do?\" \n\n\"Well, the first thing I do,\" Pam told her, \"is go check that the playroom is available while you get whatever kind of refreshment you want. I'd suggest at least a bottle of water.\" Then she headed back into the house. Karen looked around. There was a poolside bar and she figured they'd have water. \n\n\"If you'll excuse me for a minute,\" she told Marianne, \"I'm going to go get some water.\" \n\n\"I'll go with you!\" Marianne beamed, standing up and moving towards Karen. \n\nWow! Karen thought as she waited for her. Did I have her pegged wrong... yeah, she's short, maybe 5'2\" or 5'3\", but all those rolls I thought were fat just melted into her when she stood up. She's maybe a size 12? Round, yes, but rather attractive... \n\nMarianne led the way over to the pool bar where she got a lemon-lime Gatorade instead of water while the Professor rose and followed them over. \n\n\"Personally, I think this is better for rehydrating, which is why we contribute a case every party we attend,\" Marianne told Karen. \"You should try it.\" Karen shrugged, thought why not? and took one. The trio then headed for the house, meeting Pam at the door. \n\n\"I've got it reserved,\" she smiled. \"Come on, Karen... let's expand your horizons...\" \n\nPam led the small group down a hallway to, as Marianne had quipped, the third room on the left. As they entered, Karen noted that the lighting was soft, there was padding and large pillows scattered around, a couple of benches and hooks with ropes and pulleys in the ceiling. One entire wall was a mirror. \n\nThere was a shelving unit with a number of cubby holes and each cubby held different bits of bondage equipment, along with lubricants, dildos, vibrators, other various and sundry items and sanitary wipes. \n\nPam produced a yellow ribbon from somewhere and tied it on the door knob, pushing it shut until it latched. Karen noted that there wasn't any lock on the door. Pam noticed her noticing. \n\n\"For emergency purposes, and to help ensure that no one is locked away against their will, Karen,\" she told her. \"With the ribbon on the door, no one will come in unless something is happening that doesn't sound good to our hosts, in which case, they may open the door and look in just to check. No one else will.\" \n\n\"I suppose,\" the Professor intoned with a theatrical flair, \"that I no longer have need of these...\" He faced the wall and pulled his t-shirt off over his head, folding it and putting it into one of the small cubicles. He also unbuttoned his shorts and stepped out of them, putting them in the cubicle as well. \n\nOh! He's rather long... she noted as the Professor turned to join them. Flaccid, he was five or six inches long. And he actually had a rather nice ass and legs. Most of his roundness was in his belly. I think they call it 'visceral fat', she thought. I can work with that... \n\n\"Well, when in Rome...\" Pam smiled and eased out of her teal blue dress and as Karen had suspected, she only had a thong on underneath. Her assessment of Pam at dinner had been spot on. Older, but still very sexy. She then realized all eyes were on her. \n\nIt's showtime... she thought as she smiled demurely and kicked her low heels off, over towards the wall. The Professor went and retrieved them, putting them in a cubicle. She undid the hidden side zipper, then slowly eased the dress off over her head, giving the others plenty of time to note that she was wearing ivory stockings and garters with lace panties and nothing else. She could have sworn she felt the room's pheromone level rise before she even got the dress over her head. \n\nThe Professor reached for it and she handed it to him with a nod of thanks, then slid the panties down, revealing her baby smooth pussy. The Professor took the panties as well, although there was some serious ogling going on. Karen slowly and meticulously undid each of the garter snaps, then rolled down first one and then the other stocking, sliding them off her feet and handing them to the Professor. \n\nThe fact that her bending over like that showed off her flexibility wasn't lost on anyone. In fact, Marianne looked almost rabid. \n\n\"Please, Mistress,\" she asked as she managed to break her gaze from Karen's body and look at her face, \"please put the heels back on?\" Karen thought it a little weird but didn't see any reason not to, so she did. \n\n\"Like this?\" she asked, displaying her naked body, plus heels, before the woman. Marianne sighed heavily and murmured, \"yes, Mistress, exactly like that. Thank you.\" \n\n\"They make you look more authoritarian,\" Pam said quietly into Karen's ear. \"More statuesque.\" \n\n\"So...\" Karen drawled as she shifted into play-acting, hoping to God she knew what she was doing, or could figure it out, to use John's phrase. \"Let us say you, Marianne, are my pet Bitch. Are there any things, any toys, my Bitch particularly likes? If so, retrieve them, and bring them to me.\" \n\nMarianne walked over to one of the cubbyhole cabinets and began taking out zip-loc bags. Karen saw her choose a set of wrist and ankle restraints, a bag with chain and carabineer-style fasteners, another with nipple clamps, a couple of hanks of soft nylon rope, a bag with pussy and butt plugs and a bag with gags. She dropped the rope and fasteners on one of the low benches on her way back to Karen, where she knelt at Karen's feet and offered the collection. \n\nWow, she is really into this, Karen thought. Let's see how creative I can get and still keep it light... \n\n\"Thank you, my pet,\" Karen told Marianne as she took the bags from her, then stroked her hair like one might pet a dog. \"Professor, please come here.\" Since the Professor technically wasn't a Sub, she decided a please was in order. He accommodated her by moving up and standing next to the still kneeling Marianne. ",
        "\"Please assist me in dressing my pet,\" Karen asked him, and together they affixed the wrist and ankle cuffs. Karen then had Marianne stand and she noted that Marianne kept her head bowed as she stood there, not looking at Karen. Looking over her pet, Karen decided one more touch would be nice. \n\n\"Pam, is there a leash in that stuff?\" Karen asked her. Pam broke out in a grin as she walked over to the cubby unit and did some rummaging around, finally pulling out a thick nylon dog collar and leash which she brought over to Karen. \n\n\"Please collar my pet,\" Karen requested and would have sworn she saw a ripple of excitement flow through Pam as she moved to comply. When she was done affixing it, she brought Karen the other end of it. \n\n\"Hmmm,\" Karen intoned, as if speaking to herself. \"Let's see what we're working with here...\" Tugging on the leash and saying \"heel,\" she led Marianne over to the low bench, stopping just short of it. \"Professor, would you come here for a moment, please?\" she asked and he moved to her. \"Please sit,\" Karen requested, gesturing to the bench and the Professor sat, facing his wife. \n\n\"Kneel, pet,\" Karen told Marianne and she knelt. \"Suck him hard,\" she further instructed and without hesitating, Marianne leaned forward and took her husband's semi-hard cock in her mouth and began going down on him. And with rapid effect. He came up to full erection, reminding Karen never to judge a book by its cover. \n\nWhoof! she thought as she watched. He's going to be a tight fit... \n\n\"Pam, would please take this?\" she asked, holding out the leash. \"I want to go look at something. Make sure my pet does not slack off.\" Pam was continuously smiling at this point and Karen was hoping that the little role-play was getting to her. \n\n\"Yes, Ma'am,\" Pam nodded slightly as she took the end of the leash. Excellent! Karen thought as she moved to the cubby unit. She was specifically looking for a magic wand type vibrator, but battery operated so she didn't have to plug it into the wall. She hit the jackpot, from her point of view. She found the wand she wanted, plus she found a battery operated, remote controlled Butterfly. \n\nShe checked that they were charged up and brought them back to the bench. When she got there, Marianne was still dutifully going down on the Professor, although she seemed more flushed. Karen walked up behind her. \n\n\"My pet, stand up but do not stop sucking,\" she instructed. Marianne rose with a little difficulty, but to Karen's surprise, had no problem bending over at the waist to keep sucking her husband. \n\nFlexibility is obviously not an issue, Karen thought as she watched Marianne get settled into position, one hand resting on one of the Professor's thighs for support, the other still gripping the base of his cock as she bobbed up and down on him, managing to get most of him into her. Must be lots of practice, Karen thought as she stepped in behind Marianne, pressing the wand against her nether lips and clit. And turning it on. \n\nMarianne's moan filled the room and her legs and belly began quivering, but she stayed bent over and she did not stop sucking the Professor. Karen kept the vibe pressed against her and smiled as her moans increased in pitch and volume. As did the trembling. Finally Marianne's self-control wore thin and she stopped sucking long enough to beg. \n\n\"Please, Mistress...\" she moaned, and Karen knew she was on the brink. \"Please, may I cum? Please?\" \n\n\"Not right yet, my pet,\" Karen told her and smiled again at the moan of frustration and excitement it elicited. Karen paused for just a moment before adding, \"when he does, you may.\" \n\nThe result was as if someone had ramped up Marianne's speed control. Gone was the long, languorous stroking and sucking. She went after the Professor like a madwoman, grasping his balls as she bobbed up and down at a furious pace, twisting and pulling them. She finally brought things to a head, as it were, by inserting a finger in his ass. That pretty much did him in. \n\nI didn't tell her she couldn't use her hands, Karen mused as she watched the Professor cry out, arch up and obviously start blowing his load down Marianne's throat. Once he'd start to cum, Marianne let out her own loud moan and Karen could see her nether lips and anus convulsing with strong orgasmic contractions. Her legs were quivering so bad, Karen thought she might collapse and decided she didn't want any accidents. \n\n\"You may kneel,\" Karen told her as she took the wand away and Marianne did exactly that, although it looked more like a cave-in. She did end up on her knees and still had the Professor's cock in her mouth as she kept sucking out whatever cum he had left. \n\n\"Professor, are you satisfied?\" Karen asked him and his expression was priceless. Somewhere between absolute ecstasy and a total disbelief that Karen would even have to ask the question. \n\n\"Oh, God, yes!\" he moaned. \"I haven't been sucked dry like that in quite awhile. I'm not usually on the receiving end.\" \n\n\"You should try it more,\" Karen smiled. \"My pet, you will stop sucking the Professor. Pam?\" She waited until she had Pam's attention. \"Take his place.\" Again, another priceless look, but after questioning surprise, Pam got the idea that Karen was serious and moved to sit in front of Marianne, in the spot the Professor was vacating. And she did it without challenging Karen at all. \n\n\"My pet,\" Karen addressed Marianne, \"you will demonstrate to me that you are worthy of being allowed to give me oral pleasure.\" Pam's muttered oh, fuck! as she scooted her butt forward and leaned back was exactly what Karen wanted to hear. She was going to get to Pam Morton one way or another. \n\n\"My pet, stand up,\" Karen directed Marianne, who got unsteadily to her feet. \"Put this on.\" Karen handed her the Butterfly and Marianne carefully stepped into the elastic straps which held it in place. Karen reached between Marianne's legs and stuck a couple of fingers into her pussy, getting a loud moan in return, and decided she didn't need additional lube. Karen fit the internal part of the vibrator into her pet's pussy and made sure the outer part was against her very swollen clit. Then she stepped back, holding the remote control. \n\n\"You may kneel, and demonstrate,\" Karen told her and Marianne did. She knelt between Pam's legs and leaned forward. \n\n\"Karen,\" Pam started to tell her, \"you may not know it, but Marianne gives some of the... Oh, My GOD!... best head... Jesus Christ!... of any of the... oh, fuck, you bitch!... women I know. Her memory for...\" Pam had to pause to pant heavily several times. \"For what turns each of her partners on is extraordinary.\" \n\n\"Oh, God, Marianne! You're going to fucking make me cum!\" Marianne had no intention of quitting and Pam was lost into a very long orgasm. \n\nWell, so far, so good, Karen thought as she surveyed her handiwork. I wonder what I should do next? \n\nShe was interrupted in her speculation by the Professor lightly touching her arm. When she turned to look, he was holding out a suede flogger with maybe a couple of dozen strands. He nodded in the direction of his wife. \n\n\"Softly,\" he told Karen. \"Butt and thighs. She likes it.\" \n\nKaren gave him a smile and took the flogger, walking up behind and to the side of Marianne, who was very intently trying to get Pam to go over again. \n\nThe swish and slap! of the flogger was unmistakable. So was Marianne's cry as she started trembling again, like she did earlier, right before she came. Karen had to give her credit. She did try to stay focused on Pam. Karen put just a little more power behind the next stroke and Marianne trembled even more. Keeping it at that level, Karen kept applying light strokes to Marianne's ample bottom and thighs. Karen was up to about eight strokes and starting to get some color when Marianne lost it. \n\nWith a loud cry, Marianne began convulsing. Karen could see her anus pulsing but the Butterfly was in the way of seeing her pussy. Marianne dropped her head off of Pam's groin and half-caught herself on her forearms, apparently going over again. \n\n\"I'm sorry, Mistress,\" she blurted out, still shaking like crazy. \"I just can't... oh, fuck! Cumming!!\" \n\nKaren watched in appreciation as the Butterfly kept an obviously sensitive Marianne rolling over her orgasms. Guess we take it to the next level, she thought, trying to figure out what might trip Pam's triggers. I suppose it's my turn to be serviced. \n\n\"So, Pam... would you say that my pet is of sufficient proficiency that I should allow her to pleasure me?\" Karen asked with a wink Pam could see but Marianne couldn't. \n\n\"I would say she has achieved suitable proficiency,\" Pam smiled. \"Shall I vacate my position?\" \n\n\"Professor?\" Karen turned to him instead of answering. \"Let us secure my pet to the bench, on her back.\" Pam took that as her cue to get out of the way, then assist the Professor in picking up a still-quivering Marianne and place her on her back on the low bench. Karen grabbed the bag of carabineers and the rope and systematically secured Marianne's ankles to the feet of the bench, and then her wrists beneath it. When she had her pet trussed up the way she wanted her, Karen moved back to the head of the bench. \n\n\"Pam, would you please remove the Butterfly?\" Karen asked and Pam moved to do so. \n\nMarianne mumbled an \"Oh, God!...\" of relief as the vibrator was taken off. Karen handed the remote to Pam, then positioned herself over Marianne's head. The bench was almost the perfect height... Karen only had to squat down a little to put her dripping pussy squarely over Marianne's eager mouth. As she slowly lowered her nether lips to her pet's, Marianne began licking and sucking with expert abandon, making Karen feel like someone had shot a lightning bolt up her pussy. \n\nOh, Lord, this woman knows what she's doing! Karen thought as tingling traces of excitement shot up through her groin and into her belly. Damn! I need some kind of support... \n\n\"Pam, would you please straddle my pet, facing me?\" Karen asked and although Pam tried to handle the request seriously, she couldn't help the brief grin that appeared. Pam did as asked, moving next to Marianne's upturned belly and swinging a leg over, standing square on the floor in front of Karen, who reached her hands out and put them on Pam's shoulders. Acutely aware that this was the first direct contact between the women, Karen smiled slightly and told Pam, \"thanks... I needed that.\" \n\nPam just smiled and told her, \"of course, my dear... anything you want.\" It went far beyond that not too long after when Pam decided her free hands would be just as useful massaging Karen's breasts and tweaking her nipples. Right straight to her clit. \n\n\"Oh, God, that's good...\" Karen moaned as the combination of Marianne's cunnilingus and Pam's petting brought her dangerously close to cumming. Jesus, I don't know if I should let go or not, Karen agonized, wanting very, very much to just go with the flow. But she had one more thing she wanted to do before she lost control. \n\n\"Professor, please come here,\" she asked and he walked over next to her. She reached out her hand and began fondling his balls and semi-erect cock, with gratifying results. He began to grow again. Karen kept on fondling him until he was hard enough to fuck, then told him, \"please tend to my pet's other end.\" His smile let her know he got her message. \n\nAs he walked away, Pam pulled Karen into a kiss. It wasn't expected but it wasn't unwelcome. Karen let herself get lost in the woman's sensuous mouth, starting with soft lips and gentle exploration, then more aggressive tongue action until they were both uvula spelunking. Figuring well, here goes nothing... Karen drifted one hand down to Pam's mons and began feeling for the rather swollen clit she'd noticed when Pam was mounting up. At the same time, she leaned her head into Pam's shoulder and drifted her other hand down to Pam's breast, gently returning the massage and nipple tweaking. \n\nKaren had no problem finding her targets and explicit confirmation that she was doing something right. \n\n\"Oh, fuck! You wonderful teasing bitch, you...\" Pam murmured into their kiss as Karen's fingers found exactly what she'd hoped to find. That was the point when the Professor plunged deep into Marianne and began a vigorous fucking, making Marianne lose focus on her task as she again came, and came hard. And the moment Marianne's mouth came off of Karen while she cried out her orgasm, Pam figured what's good for the goose was good for the goose... and went straight to slipping two fingers into Karen. \n\n\"Oh, fuck!... oh, fuck!...\" There was no way Karen was going to hold back. She had been building up to this since the conversation at the fire pit. \"Oh, fuck!... You're gonna... I'm gonna... Oh, FUCK! I'm CUMMINGGGG!!\" She felt herself crush down on Pam's fingers and they stroked and probed, and she discovered she'd also come back down on Marianne's face. Except this time, Marianne stuck her tongue up Karen's rosebud. \n\nKaren couldn't say anything intelligible. All she could do was moan as yet another shockwave shot through her body from the anilingus. Pam started chuckling as she figured out how to stroke Karen's G-spot and keep her rolling over the cums. \n\n\"Yeah, go ahead and laugh, bitch,\" Karen managed to groan between waves. \"Oh, fuck!...\" \n\n\"Consider it repayment of my debt from having Marianne do me earlier,\" Pam smiled. \"And I love how responsive you are!\" \n\nKaren's only response was to moan again as another orgasm ripped through her, until she finally had to say, \"okay... okay... enough... you can stop, my pet. And Pam? Please slide back a bit.\" \n\nMarianne stopped with the oral while Karen struggled to stand up and Pam withdrew her fingers while sliding back on Marianne, until their pussies were about even. Karen caught the Professor's eye and raised both of her eyebrows in invitation. The Professor read her perfectly. He pulled out of Marianne and plunged into Pam. \n\n\"OHMYFUCKINGGOD!!\" Pam was not at all subtle. \"OH-GOD-OH-GOD-OH-GOD... FUUUUUCCKKKK!!\" \n\n\"I seemed to have missed that one before,\" Karen told her, smugly. \"I wouldn't have wanted you to feel shortchanged. Professor? Go ahead and finish up, if you like.\" And while the Professor pounded Pam into next week, Karen knelt down next to the bench where Marianne's hands were still bound beneath it and Pam's head was buried in her ample chest, and slowly, deliberately, sensuously kissed Marianne. \n\nMarianne excelled with her mouth in many ways, and Karen was getting lost in her kisses when the Professor finally went over and took Pam with him. After that, the energy in the room rapidly dissipated, the Professor and Pam dismounted, sitting on the padded floor, and Karen broke the kiss, looking into Marianne's very grateful eyes and smiling. \n\n\"Let's get you unhooked,\" she suggested and Marianne sighed. A glutton for punishment, Karen thought. I hope she got what she wanted. She set about undoing the wrist and ankle restraints and helping Marianne to sit up on the bench. She was rather wobbly. \n\n\"There is no way in this world, or the next, that you are an amateur!\" Marianne informed Karen while Pam passed out water. \"That was the most amazing... well... whatever you call it. Scene? The most amazing scene from a woman who claims to need guidance.\" Marianne smiled and added, \"I call bullshit.\" Karen just smiled back. \n\n\"You're pretty amazing, too,\" she told her erstwhile pet. \"I hope you were pleased.\" \n\nMarianne gave her one of those are you kidding? looks, staggered to her feet, wobbled her way over to Karen, threw her arms around her, pushed her plush body into Karen and kissed her, deeply. \n\n\"What do you think?\" Marianne asked as she finally let Karen come up for air. \n\n\"I think... wow!...\" Karen answered. \"I think I need a dip in the pool to recover a bit before I have to take Pam home and head for my hotel.\" \n\n\"Amen to that, sister,\" Pam smiled and went to pick up her clothes. The Professor went to his shorts and pulled a business card out of his wallet, handing it to Karen. All it said was \"The Professor and Marianne\" and a phone number. \n\n\"If you're ever back in the area, give us a call,\" he suggested. \"We'd love to get together with you again. And if you don't mind the company, we'd love to join you in the pool.\" \n\n\"Have you got another one of those?\" Karen asked, and he fished one out. She flipped it over and wrote \"Karen O\" and her phone number. She handed it back to him and said, \"in case you want to get hold of me.\" The \"regulars\" took a few minutes to clean up the toys and put everything back for the next occupants, then the four headed out - still gloriously naked - to the pool. Karen noted she was getting very approving looks on the way out. \n\nThe four of them spent perhaps half an hour lazing around in the pool, with Karen getting introduced to other couples and sharing light chit-chat. Eventually it was Pam who pointed out that if they wanted to make Karen's curfew, they should wrap it up. Karen and Pam said their goodbyes, and Karen made a point of finding their host, Rod, and complimenting him on hosting a great party at an impressive home. Then she and Pam headed off. \n\nThey hadn't gone far when Pam turned to Karen. \n\n\"Karen, I have a request of you, and it falls into the 'no is an appropriate answer' category,\" Pam commented. \n\n\"Yes?\" Karen prompted, watching the road. \n\n\"The way you handled Marianne at the party was, simply put, awesome. Your attitude and actions alone were enough to have me dripping. But I found that I was wanting something more. Specifically, I found myself wanting you, alone, one-on-one. So my question is, would you be willing to take me back to your hotel and spend some girl-time with me?\" Pam sat back and carefully studied the woman behind the wheel. \n\nOutwardly, Karen didn't seem surprised. She looked thoughtful as she kept her eye on traffic and headed them back to the Grand. Finally, though, she pulled over into a parking lot and rummaged in her purse for her phone. Retrieving it, she called John. When he answered, she could hear some kind of cheering and music in the background and an announcer's voice. \n\n\"Hi, it's Karen. Where are you? You're not back at the hotel?\" \n\n\"Haven't made it there, yet. Jim and I have been doing some pub crawling and shooting the bull,\" he answered. \"Is there a problem?\" \n\n\"Not a problem, really,\" she told him. \"I'm calling for permission.\" \n\n\"Permission for what? You're a big girl...\" he asked, confused. \n\n\"Pam would like to come back to the hotel and sample my wares,\" Karen told him. \"I'd like her to. But you've got the other bedroom and it's got to be okay with you. I thought you had to be up in the morning?\" \n\n\"I do,\" he answered upbeat. \"I'll be fine. The conversation is winding down, anyway, and Jim will drop me off in... oh, say... an hour? Is that enough time?\" \n\n\"I doubt it,\" Karen told him. \"Just ignore the sounds from the other room.\" \n\n\"Or come join us!\" Pam spoke up, loud enough for John to hear and to elicit a laugh. \n\n\"So what do two guys talk about while crawling from pub to pub?\" Karen asked, trying to ignore Pam and failing, with a grin. \n\n\"I'll bet he says sex,\" Pam told her at the same time John was saying \"Sex, of course.\" \n\nKaren was quiet long enough, staring at Pam, that John prompted, \"Hey, Karen! Are you there?\" \n\n\"Yeah, I'm here,\" she answered slowly, then asked Pam, \"how did you know that?\" \n\n\"Wait! Never mind!\" she caught herself. \"Later. John? We're about 15 or 20 minutes from the hotel, so unless you're downstairs, we'll probably beat you there. Consider yourself warned.\" ",
        "\"Fair enough,\" he told her and she could hear the smile on the other end. \"See you later. Oh, and I've got Lu picking you up for your spa date in the morning. All you have to do is follow her, nod appropriately and let yourself be spoiled. On me. Goodnight, luv.\" \n\n\"Goodnight... Sir,\" Karen answered. She couldn't resist it. \n\n\"Are you in leather and D-rings?\" John asked. \"Or looking for a paddling?\" \n\n\"The latter. Bye...\" \n\n\"Bye,\" he answered and they rang off. Karen started the car up again and pulled out into traffic. \n\n\"So I take it you can come out to play,\" Pam observed. \"Or at least, this end of the conversation sounded like it.\" \n\n\"Yes, I can definitely come out to play,\" Karen acknowledged. \"Just... let's not make it an all-night thing, okay?\" \n\n\"Perfectly fine with me,\" Pam smiled and sat back to enjoy the ride back to hotel, while Karen speculated in her mind about what, precisely, Pam might have in mind. \n\n* * * * * \n\nJohn put away his phone and turned to Jim Morton. \n\n\"That was Karen,\" he explained. \"Pam's requesting some one-on-one time and they're going back to the hotel. We've got separate rooms, so I won't be intruding.\" \n\n\"Well, that's good,\" Jim nodded. \"We're about wrapped up here anyway, and I need my beauty rest.\" He smiled slightly and added, \"you're an interesting man, John. You deal with curves and change-ups better than most other men I know. I hope to have more involvement with you, after the merger goes through.\" \n\n\"As noted before, Jim, I can't predict that. Tikken is in my region and so are you, so it's possible.\" \n\nThe two men had stayed at Marche Bacchus after Karen and Pam left, ostensibly to have a couple more drinks and talk business. The \"talk business\" had been rather brief. \n\n\"It's rather simple, Jim, but very confidential,\" John had told him. \"For the stock split, when Pearson is ready to sell, he executes a private sale, fifty percent to you, fifty percent to Sethridge. That leaves the balance of power in your hands, like it is now. And Mills won't fight it because of the 'confidential information' he has and which I'm about to tell you. If he finds out you know, it had better be from a source wholly unconnected with me.\" Morton nodded and listened. \n\n\"The reason Bob Mills won't fight you is because he knows Tikken is about to come into a hefty NASA contract. Eight figures hefty, and probably long term. Tikken needs your unused properties and facilities to make a 2018 start-up. Just by merging, you're looking at a minimum twenty percent jump in profitability, and probably more. And depending on how your R&amp;D leverages Tikken's expanded production capabilities, the possibilities are endless.\" \n\nJim Morton had nodded impassively, then commented, \"that would go a long way to explaining Bob's sudden change of heart. Have you engineered the rest of the pieces you need?\" \n\n\"Pearson is on board with the stock split idea,\" John told him. \"Mills is on board with supporting the merger. The only wildcard left is you. Or more specifically, Pam. You two have to support making the merger happen.\" \n\n\"Which is why you sic'd your lovely and talented assistant on my wife?\" Jim smiled. \n\n\"You aren't going to believe this, Jim,\" John told him slowly, \"but Karen is a complete unknown in all this. She started as my personal assistant six months ago and was so good at being her quiet, efficient, effective self that I didn't notice her until I suddenly needed her to come on this trip with me, to cover for another one of my staff who is out on maternity leave. We're developing our relationships, both personal and professional, as we go.\" \n\n\"She has an adventurous side that, coupled with a very sharp mind which I don't think she knows she has, has been very good at breaking the ice and eliciting behaviors I couldn't have done alone. We suspected Pam would be a powerful influence on you, but all we knew about her was what was printed in the society pages and that she has a kinky, sexy side.\" \n\n\"I didn't think trying to seduce your wife was a particularly good move on my part,\" John went on. \"Karen wasn't intimidated by the idea of socializing with her, so I trusted Karen's instincts. I hope I didn't judge poorly. I was afraid my wheeling and dealing lifestyle might be over her depth, though now I'm thinking not.\" \n\n\"You probably hit on the best of solutions,\" Jim told him. \"Pam's adventurous, too, and she loves having playmates. Since my health problems screwed up my ability to keep up with her, she's ranged farther afield, but so far hasn't done anything injurious, to herself or to others.\" \n\n\"You do realize, John, that it would have been okay for you to bed her, right?\" \n\n\"Actually, no... regardless of rumor, I wasn't going to make that presumption. At minimum, tacky would be an appropriate description. I certainly wouldn't want to piss off either of you,\" John pointed out. \n\n\"John, are you hung?\" Jim Morton asked and John sat there for several heartbeats before responding. \n\n\"Um... why?\" was what he finally settled on. \n\nMorton chuckled. \"Because if you are,\" he smiled, \"you would probably make Pam's night if you showed up in the middle of whatever she and Karen are doing and offered to participate. My wife has a thing about m\u00e9nages with a male-female couple, and in her case, bigger is better. She and I used to enjoy sharing with a third person, until my prowess took a nosedive. Now she looks to find that in others. And I'll tell you another strange thing...\" \n\n\"If you and Karen and she had a romping good time, she would come home glowing and I would reap the benefits. Because when she's sated, she moves into what she calls her 'giving place' where she and I can cuddle and pet for long periods of time without any pressure. And that occasionally works for me.\" \n\n\"Jim, if I can ask a personal question,\" John decided to probe a little, \"have you tried Viagra or Cialis? Or Levitra? Because if an erection is the only problem...\" \n\n\"I can't,\" Jim told him. \"Unfortunately. Not until I'm off the nitroglycerin. Believe me, I've thought about it. I appreciate the suggestion.\" \n\n\"What about your hands and mouth?\" John persisted. \"There's nothing that says you have to have an erection to have a sex life...\" \n\n\"Oh, I don't mean to imply that I'm celibate,\" Jim hastened to explain. \"It simply takes me quite a bit longer, with vigorous stimulation, to reach erection and orgasm. And honestly, sometimes Pam can make me cum without an erection. Really weird, that one. I still go to some of the parties, especially if the host or hostess is a long time friend. I've just turned the duty of pleasuring my wife's adventurous side over to the New Guard.\" \n\n\"Well, I suppose it's that kind of tolerance and flexibility that makes for a long-lasting relationship,\" John mused. \"Not something with which I'm particularly experienced.\" \n\n\"You could be,\" Jim pointed out. \"I'm not saying it's easy. It takes work. In my opinion, though, it's worth it. By the way... want to get out of here and do some tittie-bar crawling?\" \n\n\"Um... sure?\" John decided. \"It's your lead...\" \n\n\"Great,\" Jim beamed. \"Haven't had a good crawl for awhile. As far as I'm concerned, Vegas has the best topless in the country. You know, just because I'm on a diet, doesn't mean I can't look at the menu. And you're probably the right guy to do it with. I'll get the check and we'll go.\" \n\n\"Negative,\" John stopped him. \"I've got the check. I invited you and Pam out, I'm paying.\" He signaled for their waitress as he dug out his wallet. \n\n\"Okay...\" Jim nodded. \"Then I've got drinks on our crawl. But we're definitely ending the night at the Palomino Club. Ever been there?\" \n\n\"Once... a long time ago,\" John told him as he paid the bill. \"A post-baccalaureate romp with some buddies. It'll be interesting to see how it's changed.\" \n\nJohn finished up and the two men headed out. \n\n* * * * * \n\nJohn was hearing some decidedly erotic moaning coming from Karen's room. \n\nWell, he thought as he listened appreciatively, this is going to mark the end of one hell of a night... \n\nThey'd started at the iconic Cheetah's, used in the movie Showgirls, and each had gotten a lap dance in tribute to the film. It was a full nude club with no alcohol, which meant tonic and lime to John, and he had to admit that Cleo, his dancer, did one incredibly professional job of keeping him hard through most of it. He did manage to keep from getting off, but barely. \n\nThey'd moved on to the Double Down Saloon, the next on Jim's crawl list and a world-class dive bar with loud rock, cheap booze (including Ass Juice and Bacon Martinis), infamous toilets (they've since put locks on them), sticky floors and an ambience suitable for the dregs of humanity. And a lot of fun. \n\nJim, and a couple of the staff there that he knew, kept John laughing his ass off, making fun of the Strip and going on about how they were the last holdout for a real bar in a fake city. John actually paid the twenty dollars for Puke Insurance. Otherwise, the rule was, you make a mess, you clean it. John's first impressions had convinced him the insurance was a good idea. \n\nThey didn't stay long, and next moved on to Crazy Horse III, critiquing the glitzy, standard Las Vegas hype, overpriced drinks and girls, and generally reminding themselves of why a quiet night at home with friends was a lot more fun. After reaching their \"hit on\" limit, they decided to go ahead and go to the Palomino Club. \n\nThe only Strip bar grandfathered in when full nudity and alcohol were separated from each other by law, it was probably the best place to girl-watch and drink... provided you don't mind the prices. For John and Jim, it had been a great way to wind up the crawl, especially when Karen had called for permission to take Pam back to the hotel. \n\n\"Leather and D-rings?\" Jim asked him after he'd hung up. \n\n\"Actually, she's looking for the paddling,\" John had smiled. \"When we're away from work, I've told her not to call me Sir unless she's in leather and D-rings. It's become kind of a joke.\" \n\n\"Feisty,\" Jim had observed. \"Better hurry home. I'm going to guess my wife has waylaid her. You may need to rescue your lovely assistant.\" \n\n\"If you want to pay the tab,\" John nodded, \"then we can split after this set. You can just drop me at the hotel. We're at the Grand.\" \n\n\"Works for me,\" Jim had told him. \"I've got to get my beauty rest, anyway. I'm going to have some interesting conversations with George and Bob tomorrow.\" \n\nJim Morton dropped John in front of the hotel just before 2am and the two men parted company. John had headed on up to the room and let himself in, trying to be quiet so he didn't interrupt Karen. Which is how he found himself standing in the foyer, listening to the moaning, and becoming more and more intrigued. Because the moaning didn't really sound like Karen. \n\nHe knocked, lightly, and after a moment, Karen opened the door. \n\n\"Oh, hi, John!\" she smiled, standing in front of him, completely naked. \"Are we making too much noise?\" \n\n\"No... could you join me out here for a moment?\" he asked, taking in her loveliness. \n\n\"Um...\" she stalled, looking thoughtful. Then she turned to face into the room. \n\n\"I'll just be out here for a bit. Moan if you need me.\" Then she stepped out to join John in the foyer, leaving her bedroom door open. \"What's up?\" \n\n\"I've been informed by a certain woman's husband that I could make her night... and his... if I were to join you in whatever romp you are currently enjoying. And the decision is completely yours. Although, he seemed to think you'd be the one that needed rescuing.\" \n\nKaren grinned. \"I thought you didn't fuck clients... or their wives... That's what you've got me for.\" \n\n\"Usually, I don't,\" he told her. \"Except at the negotiating table. However, I'm privy to confidential information which leads me to believe I could be of some service. If you want. I'm not going to be the 'bull in a china shop' you mentioned earlier.\" \n\n\"When did I say tha... oh, yeah.\" The night I got hammered, Karen remembered. \n\n\"Well,\" she braved ahead, \"it appears Pam likes to be Dom'd. She couldn't fit in Number 27, so I improvised. If you want to wait 30 seconds after I walk back in, then come on in and do what comes naturally...\" She let the sentence hang as a bit of a tease. \n\nJohn smiled slightly and nodded, then headed for his room to divest himself of the evening's clothes and slip into something more comfortable... like a robe. He made sure to wait the full thirty seconds and a bit more, then eased into Karen's room, where Pam's moans had restarted, although muffled. \n\nHe had to suppress a smile as he saw Pam on her back near the edge of the bed, her wrists and ankles hooked together and her legs spread by the tube-and-rope John had used on Karen, and Karen astride Pam's face, forcing the older woman to eat her, facing away from John. Pam was positioned perfectly for John to walk up to the foot of the bed, stand there, and stick his cock in her. An idea, he decided, with quite a bit of merit. \n\nQuietly, so as not to be noticed, he eased up to the foot of the bed and stood looking at Pam's shaved pussy. Her lips were a bit puffy and elongated, possibly from childbirth, and at the moment were flushed a deep pink. Her clit was swollen almost to the size of his thumb and she was dripping her juices down her thighs to her ass. \n\nWell, she looks fairly ready to me, John thought as he massaged his cock. It was being very cooperative and coming up hard, rapidly, at the sight and sounds of the two women sharing erotic pleasure. Let's see what happens when I do this... \n\nHe stepped forward, aligned his cock with Pam's slit and thrust all the way in. \n\n\"MMFKKNGDDD!!\" Pam almost came off the bed. In fact, she might have if Karen hadn't been riding her face and John wasn't skewering her. \"FK! FK! FK!\" Her muffled cries kept time with John's thrusts and she arched her pelvis up into him on each stroke. It did not take many before she gave one long moan into Karen's pussy and started shaking, obviously with orgasmic waves crashing through her. Karen looked over her shoulder at John and started laughing. \n\nHer laugh was cut short, however, when Pam's orgasm began to subside and she thrust her face up into Karen, hitting something right, because it was Karen's turn to moan, \"Oh, my God!... Fuck!... Cumming!\" \n\nKaren leaned forward, holding herself up with her arms while keeping her pussy down on Pam's mouth. John, not having been told to stop, kept right on thrusting. And apparently very well. \n\nWhen Karen started coming down from her crashing cum, she moved off of Pam's face so she could turn around and face John, giving Pam a moment to actually say something not muted by pussy. \n\n\"If that's John in my cunt, you are... oh, my God!... you are one fucking well-hung stud! Oh, shit!... Fuck... Cumming...\" She lapsed into low moans and guttural growls while Karen positioned herself over Pam again, staying off her face this time and opting instead to add some oral to John's fucking. But not before she leaned forward and took John's face in her hands, drawing him to her and into a deep, deep kiss. \n\nJohn returned it with equal passion and without losing his rhythm. Beneath them, Pam Morton kept rolling over mini-orgasms and was very vocal about it. When Karen finally broke the kiss, it was to sink down to Pam's pussy and begin licking and sucking her clit while John arched back a bit, giving her some room. That ramped Pam up to a major orgasm that had her shaking in her bonds. As she calmed down, John lifted Karen's head to meet his gaze. \n\n\"Maybe we should let her out of her restraints, luv,\" he suggested. \"She seems pretty much like mush.\" \n\nKaren smiled. \"Yeah, I think you're right. Mr. Morton will probably want his wife back in some sort of functional condition.\" \n\nKaren eased off Pam and John eased out of her. Together, they undid the tied thighs and coupled restraints, easing Pam up into the bed so that she could straighten her legs. Somewhere in there, Pam had opened her eyes and seen that it was, in fact, John. \n\n\"Why do I suspect Jim put you up to this?\" she asked. \"Not that I'm complaining, mind you...\" she hurried to amend. \n\n\"Now, Pam...\" John teased as he helped Karen remove the wrist and ankle cuffs, \"I'm not the kind of guy to kiss-and-tell...\" Pam gave him a cocked eyebrow. \"But I do suspect that you'll make his day, relatively soon. And as fun as you are, I'm going to have to hit the sack soon. I've got meetings tomorrow. Feel free to hang around with Karen as long as you like. And Luv? Remember Lu's coming by to get you in the morning before she has to head to her meetings. We can all get together again at dinner.\" \n\n\"Don't worry about me, John,\" Karen smiled. \"I'm taking a page from your 'wing-it' book. I'll be fine.\" \n\nJohn gave her a long, lingering kiss before gathering his stuff and heading first to the fridge for a drink and then to his room. Karen killed everything but the nightlights and crawled in bed with Pam. \n\n\"You can leave whenever you want,\" she told her. \"I'm pretty exhausted and I'd love to just curl up with you and fall out. I suspect you are very comfortable to sleep with.\" \n\n\"You've got it, girl,\" Pam smiled. \"I need the Ladies' first, though. I'll be back.\" \n\nKaren was drifting off to sleep, thinking of White Rabbits and Wonderlands, when she felt Pam's soft, warm body slide into bed and cuddle up to her. \n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/necessity-is-the-mother-of-obsession-ch-04"
}