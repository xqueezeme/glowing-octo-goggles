{
    "title": "A Submissive Lady Joins a Couple",
    "pages": [
        "Her walk was assertive. Although maybe it was just the sweet sway of her ass. So perfectly formed as if God herself had spent a decade designing its delicate deliciousness. We had been friends for a few years before she demurely suggested it would be fun to have a roll in the hay. I took my time weighing the various options, risks and benefits. \n\nTwice a week she'd run by the house while I was working from home. Runner's legs, short shorts and a sports bra. A few times she had stopped on her return to request a cool drink of water. Her nipples subtly winked, and after the second time I openly teased her about the exciting runs she ventured out upon. It was during one of the water breaks when she looked me in the eye, smiled and softly stated, \"It would be nice to have you actually physically undress me, instead of using your eyes and let me caress your body.\" \n\nI stumbled. No doubt my mouth had fallen open. It is not every day a fantasy becomes a real possibility-with the switch in your palm. Fortunately, I wasn't 21 and recovered. \"I'm sure our bodies would enjoy each other. The concern is collateral damage. Let me think about it,\" I replied. She finished her water, smiled and left. It wasn't a friendly goodbye, she delivered a deep sensual kiss while purposely grinding her hips into my pelvis. No words were needed to get her message. \n\nThe potential collateral damage wasn't insignificant. We both were married, our parents had done business together for decades and her husband was a client of my fathers. In addition, my wife's company was one of her biggest clients. It didn't take much deep thought to realize there could be implications. After a long millisecond, my rational side screamed, \"Bloody fucking no way in hell.\" Alas, my genetics make up contains an X and Y chromosome. \n\nI next ran into her a few days later. She was just wrapping up a morning run. I watched her jogging down the block so I exited the house as she drew near with a cold glass of water in my hand. \"How far you running these days? Seems like you flew by over an hour ago,\" I inquired while handing her the cool water. \n\nShe graciously accepted the water, took a tall drink then responded, \"Just 8 miles today. Have to keep these legs toned and the stomach from bulging.\" \n\nWhile talking she brought the glass into her sports bra and placed it snuggly up against her breast then pulled it away. Her nipple visibly stuck out. My eyes automatically focused on the pronounced bump. She responded by asking, \"Would you like me to do the same to the other?\" \n\n\"Sure. Beautiful sights are always special in the morning,\" I replied. \n\nShe brought the glass back to the other side, and repeated the procedure and then reapplied the glass to her other nipple. I couldn't help, but smile. As my lips curled towards the heavens, she brought the glass up to her sports bra and poured the remnants over both breasts. Despite the thickness of her white sports bra, the shadows of her nipples were visible and both stuck out like lug nuts. \n\n\"I better go shower now. Have to get this sweat off and deal with an itch. Let me know please when you make a decision,\" she stated as she slowly jogged off. The show left me with a swelling in my shorts so I too retreated. \n\nThe blatant show of desire corrupted my dreams. In them, I ripped her exercise outfit off and pounded her. During the day, I contemplated ways to taste her fruit and imagined the sounds of her squeals. Work became a second thought, so I had to focus on getting my focus back (ie making sure I avoided her). This helped, and allowed me to stall in providing an answer as I knew what I wanted to do, and knew what I should say. Problem is there were no similarities between the two. \n\nAnother week went by without any contact. I'd arranged a business lunch meeting with an old client/friend, Bob, which started late and included drinks. After our meal, we had another drink and switched gears. The conversation went from sports teams to politics, but ultimately settled on our waitress's sex appeal and the uncomfortableness of dealing with hot clients. Being on our second drink, our tongues had loosened and we privately discussed whether the loosening of another button on our waitress's top would disclose sufficient cleavage to permit us a tiny glimpse of her areola. \n\nAfter this the topics changed often, but usually involved some reference to sex or a bit of glorious female anatomy we'd witnessed. This must of rekindled Bob's memory as he abruptly changed gears and asked for we had found a babysitter. \n\n\"For what?\" I responded. \n\n\"Dinner\" he shouted back. \"Next Saturday night? I talked with Jennifer and she said your calendar was open, sounded fun and she just needed to check with you.\" \n\nThis got me laughing, as no doubt my wife, Jennifer, had forgotten the last part. In our busy lives this wasn't uncommon for either of us. I replied, \"Sounds good, so we should be available. Here, I'll shoot Jennifer a text and confirm.\" \n\nBob smiled, then leaned forward, and added, \"It's going to be fun. Every couple I've invited the lady part is damn hot and all have some business connection to my company. I've picked out an armful of cabs, pinots and chardonnays that will make anyone's tongue dance.\" \n\n\"So you've invited us because you think my wife is hot and want to do business with her,\" I laugh-spoke in response. \"Hope for some freebie benefits too?\" \n\n\"Shit, I've never been shy about letting you know what I thought of Jennifer since you first started dating her. Opinion hasn't changed, but you're the business connection for your team. And I promise, your marriage eyes will bug out at the candy. Little wine in everyone and open flirting will be taking place. Just fun friendly flirting. Get your wife to wear something sexy. Unfortunately, not a orgy, although I've no doubt you'd be the first ripping off their clothes if there was,\" Bob ranted. His eyes giving away he was quite pleased with himself. \n\nI smiled broadly, then asked about the guest list. If Bob said the attendees would be hot, then there was no doubt they would be. He indicated I might know a few of the invited couples, then mentioned my running friend, Jewel and her husband. My heart rate jumped, but I tried to play it cool. \n\nBob laughed, then added, \"I've seen you checking out Jewel several times. Shit, I have too. I'd give a nut to ride her over the bridge and back. She'd be fine. Think if she was into you, she would do whatever was asked.\" \n\nI was in between a sip of my drink, and the later part of his comment forced me to choke. \n\nLaughter spilt from Bob's lips, then he stated, \"Yeah, knew that would get your attention. Wouldn't it be great to see her nipples grow hard? She probably loves to service.\" \n\nThis time I kept from choking then naively added, \"Think she's into S&amp;M and into getting whipped and tied up? She seems more like a dominant type that would want to tell you what to do and when.\" \n\n\"Nah, you are young. She has to be Lady Firm in her business. My experience is those types want to drop control, turn the tables and do what is asked of them. Not the pain, shit. Just submissive. One of those that gets off on pleasing and doing what's asked,\" Bob responded. \n\n\"My experience is ladies like to be treated special, wined and dined, then slowly they give up their treasures,\" I commented. \n\n\"You are fucked up. Trust me. Women aren't too different than men, and love their fill of sex. Some do like the fluff, but majority like to be treated as a woman. Told when to suck, fuck and where. If they're willing to get naked with you, then 90% already have decided they trust you. Men aren't so trusting. When a lady trusts a guy she will often demonstrate the trust by surrendering to him. Not to get hurt, but to totally please him. It's their way of showing acceptance. They give you the power to control and use their body. It totally turns them on and satisfies them. In the end, both get fucked silly is how it usually goes.\" \n\n\"Wow. Guess I am young and naive. You've tested the waters much more,\" was my meek response. \n\n\"Mark you have to get young. I'm not telling you to go fuck anything that will spread her legs, but have some fun. Go home tonight and whisper some nighty things to Jennifer. Watch some porn. Shit, there are sites that produce flicks aimed solely at couples. My guess is Jennifer also wants some bedroom fun. Here's a dare. I dare you to fuck her at our house tomorrow night. $500 says you won't even try. I'll make it sweeter. You do so and I'll pay up, don't do the deed then I get to call you Pussy for a week.\" \n\nI laughed in response then asked our waitress for the bill. \n\n\"We good? I'm just having fun, but also being a bit honest. Sorry if I got too personal.\" \n\n\"We're good. I'm about to miss a closing so have to run. My apologies. Oh! and Jenn texted back. We are on, so see you next Saturday,\" I replied then headed for the cashier and exit. \n\nTwo things were twirling through my mind. First, how Jenn would react to the notion of fucking in someone else's house while at an intimate party. Second, could Jewel really not be the dominant type and want to be told when and how to pleasure her lover. It didn't match with my perceptions of her as she was a firecracker when it came to business and very successful. I just couldn't imagine her wanting to be told to suck my cock or dress a certain way. \n\nThe next morning came quick after an uneventful Friday night. A little league baseball game, take-out dinner, kids to bed and then we both faded like the severely inebriated. Minor problem being we'd shared one glass of wine. Jennifer awoke early and departed for shopping with the girls and to get a new dress for next weekend's dinner party. She cutely asked me what style of dress I thought would look sexy on her. I responded, \"Something short, sheer and that makes it easy for me to fuck you in.\" We did have our dirty talk. \n\n\"Men. All of you are alike. I'll see what I can do. Can you help me gather the kids and their gear for their visit to my sisters? I'll be home before five-ish, then we can leave around 6:30 for the company party,\" Jenn advised. \"And my parents are available for next weekend, they even agreed to take the kids overnight so we can really enjoy ourselves.\" We rounded up the troops, toys and books and loaded it all into her utility vehicle. Then she headed off. \n\nI had a rare morning and afternoon alone. Thoughts of various projects floated through my head, but instead I ignored them and sat on our porch enjoying the paper with fresh coffee. One of the articles must have caught my attention as I didn't hear anyone approach until she kicked the bottom of my flipflops. It startled me, and as I looked up was surprised to see Jewel standing right before me. \n\nImmediately, her unanswered question started binging in my head, along with Bob's read of her. Making matters worse, she wore a loose tank top with a tube top running bra underneath which didn't quite manage to conceal her erect nipples. Her shorts consisted of tight white yoga pants that came down to her knees. She looked mighty fine. \n\nMost of the time, I would have pretended not to notice, even though she was looking at me stare right at her banded girls. This time I just smiled, then commented, \"Looking nice. How was the run?\" \n\n\"Great! Do you mind if I use your potty? Drank too much water. If your kids weren't home I'd leave the door open and hope you'd try to sneak a peek\" Jewel teased as she started to open our door. \n\n\"Of course you can use our facilities,\" I answered. \"The family is away so use away and help yourself to water or juice in the frig.\" \n\n\"So poor Mark is left all alone? Well well,\" Jewel uttered softly. \"That is too bad, cause its possible I may not be able to control myself being around the likes of you.\" She then seductively wiggled her tight rear while sliding her hands down and then back up her splendid behind before she walked inside. \n\nI sat on the porch contemplating my position, good or bad luck and what the hell I should do. A few weeks earlier I'd failed to act, in any type of way. Today, was going to be different. I grew bold, but then didn't know what the hell to do. Shit I was pathetic. Then my discussion with Bob ran through my head. Maybe I could put our competing theories to test Mr. Bob's theory. This would be a small step, fun and fairly safe I thought. \n\nI stood up and walked into the house. Jewel was coming from the kitchen with a glass of ice water in her hand. Forcing myself to be more of what I thought, and not acting how I perceived I should act, I smiled then spoke up. \n\n\"Jewel?\" \n\n\"Yeah?\" she promptly replied looking into my eyes. \n\nTrying to keep my voice firm I asked, \"Your outfit is sexy. I think it would look better without any panties or bra. Would you please do me a favor and go to the restroom and take them off?\" \n\n\"Anything for you Mark.\" Jewel replied and sauntered off to the restroom. \n\nIt seemed like she was gone for ten or fifteen minutes, but I'm sure it was less than five. During this time I kept thinking what an idiot I was. Anyone could stop by at any moment, including my wife or a neighbor. They surely would wonder why the hell she was minimally covered and then what if they found her discarded sports bra and panties. \n\nAnd then, she emerged. The loose tank top swaying with each step revealing the arc of her torso as it eased down to her hips and side glimpses of her firm breasts. Her nipples were obviously erect. My eyes ventured further down and my mouth opened. The white spandex shorts came to her knees beautifully outlining her tone legs. Her hip bones jutted out to compliment her flat abdomen, and sexiest of all was how the shiny material highlighted her female parts with a noticeable camel toe. \n\nI sat on our sofa, then instructed, \"Come here. Stand before me.\" \n\nShe did as I asked. I spread my knees apart and she scooted forward even closer. With my right hand I reached out and placed my fingertips just above her the outside of her knee only lightly making contact with her silky shorts. I inched my hand upwards, when they got to her hips, I instructed her to slow turn around. \n\nAs Jewel made the pivot my fingers came into direct contact with her ass. I made a large circle, feeling its plump tightness and then drew one finger gently down the crack of her ass. Not stopping until I could feel the heat of her genitalia. I told her to again turn around. After doing so, I continued my tracings, but this time my finger wondered up her abdomen and underneath her baggy tank top. My fingers glided over her ribs up to the bottom of her right breast where I changed directions and began a spiral of circles that ended at her nipple. I pinched its hardness firmly, pulling out a bit and then performed the same procedure on her left breast. \n\nJewel's breathing had escalated as I teased her. I continued to lightly touch her, dragging the tips of my fingers down her ribs, over her hips and down to the outside of her knee. Then I brought my hand across her knee, and onto her inner thigh. Slowly, I inched my fingers upwards. When I came to the camel toe area I reduced my touch to one fingertip. Lightly going up one lip, then down the other and the several small circles around the camel toe. Finally, I rested my finger at the base of her pussy crack and stopped. \n\n\"Jewel, I want you to pull up your running pants so they hug your pussy even tighter,\" I instructed. She complied without hesitation. Then I pushed my finger deeply into her crack until the thin material completely halted my progress. The spandex quickly became wet. With agonizing slowness, I moved my finger higher until it bumped against her clit. Slowly, I began to massage it. \n\nHer face was reddening, and she'd begun to breathe heavily. As my finger teased her clit, Jewel pushed her hips forward. I responded by pulling my finger away, then raising it to her lips. \"Kiss my finger, then suck on it,\" I requested. \n\nShe complied and after twenty seconds I returned my finger to her growing wet spot. Most of my attention was focused on a soft, but growing ever firmer, rubbing of her clit and occasionally dipping lower and inwards. I was also heating up. For years I'd dreamed of how sweet it would be to play with her, and now the dream was unfolding. \n\nAfter a few minutes of this I stood, our bodies almost touching, and whispered to Jewel, \"Kiss me.\" \n\nShe instantly complied. First our lips just touched softly, then slowly parted giving way to a tender kiss. Tentatively, our tongues touched and within a minute we were sweetly exploring lips, tongue and beyond. Her lips were soft, rosy and firm. They responded perfectly. Not instant face sucking. Instead, a kiss that started slow, and adeptly built up steam and eventually caught on fire. I too began to thrust my hips, gyrating into her crotch and hip as I used the heel of my thumb to ever more forcefully rub against her clit. \n\nI couldn't wait any more, and dove my hand straight down her pants and began to explore her sex in earnest. Her juices were unique. A little thicker then I'd experienced before, and slicker. With two fingers I parted her lips and easily slipped a finger into her while we made out. Then I slide my thumb down and pushed it into her. She'd began to almost whimper which motivated me further. \n\n\"Take off your shorts!,\" I commanded and as Jewel did so I twisted her tank top so that her tits were now exposed. They were gorgeous. Faint freckles lined her chest and almost marched all the way up to her nipples. I'd always fancied freckles on a ladies bare chest and tits. I lowered my mouth and drew in her nipple, while I groped her other tit with my free hand. I molested her breasts for a minute or so then returned to our kissing, as my right hand rubbed and stroked her pussy, while my left hand felt and squeezed her delicious ass. \n\nOur kissing grew more frantic, and as it did I shoved fingers deep into her pussy. Her tightness was surprising and as I pushed them up knuckle deep into her whimpering become much less subtle. A minute later I felt her hand fondle with the button and zipper of my shorts, and then they dropped. She pulled my cock out of my underwear and began to rub its length while teasing my cock head with her thumb. Pre-cum fluid oozed out of my cock. \n\nHer efforts pushed me to a different level. I knew that if I didn't control myself I'd explode in her hand. Who could blame such an early release given the long years I'd fantasized about this moment. To regain composure, I used the trick of thinking about something else to delay what was soon going to happen. As we continued to kiss I thought of Bob, and how he seemed to be spot on with regards to Jewel's desires. She loved to be submissive. A subservient. I thought of how I could learn to love such a toy, then I thought of the dinner party and the sexuality component. Things could get interesting. As we kissed and felt up each other's bodies an idea entered my head. It was wicked, but at that moment wicked was wonderful. \n\nI pushed my underwear down to my ankles, then reached both hands around Jewel's ass and picked her up. We continued to kiss, and as we did so I lined up her slit opening with the tip of my cock then slowly sat back onto the couch and proceeded to guide her onto me. Her weight pushed her pussy down onto my cock to the hilt. As I bottomed out, we froze for a bit, just staring into each other's eyes. After more kissing, slowly she began to move up and down, gently riding me as she grinded her clit against my pelvis. We kissed and slowly fucked for several minutes. \n\nSlowly I brought our kissing to an end, then instructed her. \"You don't get to cum yet, Jewel. No matter what I do, you cannot cum. Understand?\" I asked. \n\n\"Yes, anything you want,\" she softly responded. ",
        "I reaffirmed my request, \"Do not cum. You are my sex toy. You are to bring pleasure to me. Understand?,\" \n\n\"Yes. I'm just to please you,\" she responded with a hint of a smile. \n\nIn response, I pulled hard on her ass forcing the friction between her clit and my hip to increase. \n\n\"Oh, fuck. No. Don't do that,\" Jewel pleaded. \n\nI lifted her up a bit and drive her pussy down hard on my dick. She bounced up and down, then whispered, \"My pussy is going to pleasure your cock until you cum deep in me.\" \n\n\"Not yet my petite piece. I'm going to flip you over and fuck you hard. When I cum my first blast will be in your pussy. The second blast I want in your mouth. Do you understand?,\" I asked while at the same time flipping her over. \n\nHer reply was simple, \"Yes.\" \n\nOnce she was on her back, I pushed her knees to her head and spread them wide then pulled on her hips to scoot her forward. In this position I could visibly pound her pussy and at the same time watch her gorgeous face and eyes. She had a pretty pussy. Small swollen outer lips, but her inner lips stuck out. One much more noticeably then the other. At some point, I was going to suck her clit until she begged me to stop while cumming all over my face, but not now. \n\nI fucked her hard for a few minutes without talking. Sweat dripped off my forehead and onto her breasts and face. It didn't take long for my orgasm. After the first stream of cum soaked her pussy I pulled out, scouted up and placed my cock into her waiting mouth. She opened up and sucked wildly, intensifying my release as I bathed her mouth with semen. Jewel kept sucking until my cock was clean then I stopped her and pulled away. \n\nShe stretched out her legs and worked to regain her breath. Her tits remained exposed from the tank top, and her nipples were crimson and hard. I sat next to her feet and told her of my plans for next weekend. \n\n\"We better have you scoot along soon or else we could be discovered,\" I advised her. As I did so I reached between her legs and began to thumb her little clit as it appeared to be begging for attention. While doing so, I delivered the rest of my plans. \"Next Saturday night you are going to attend the dinner at Bob's house. Be nice, but distant. I want you to wear a sexy revealing dress to dinner. No underwear and no bra. Whenever, I get close to you, make sure to expose yourself to me discretely. No one else can know. Do you understand?\" \n\nHer eyes seemed to be on fire. I initially thought with possible anger, but then she asked, \"Just my breasts or more?\" \n\n\"More,\" I answered. \"After dinner do not lose sight of me. When I go somewhere with Jenn I want you to follow behind us, but not too close. We are going to have sex someplace at Bob's house. I'll leave the door a crack open. You are going to watch me fuck her. After I fuck her for a bit, I am going to discover you watching and bring you in to share. Do you understand?\" \n\n\"Ok, but what will happen to me and what if we get caught together?\" she asked a bit nervously. \n\n\"If you do well, maybe I'll let you give yourself an orgasm or more. Once you are in, the door will be locked,\" I replied. Then added, \"Look at you now. Naked and freshly fucked, looking so delicious. When you leave her, walk home without your bra or panties. I want to know your walking home wet and unfilled, and maybe some lucky person will catch a glimpse of your hot body or wet stain from your pussy. Do you understand Jewel?\" \n\nShe looked down at the floor, then back up at my eyes and replied, \"Yes\" as she chewed on her lips. \n\n\"Good, then one more kiss, until next Saturday night. Assuming you do as you are told,\" I countered. Then I took her hand and pulled her up from the couch and we both stood inches apart. I placed my hands on her face and pulled her lips to mine. This time our kissing was intense, without any tenderness, instead it was replaced with a little desperateness. My cock even started twitching such that I could have easily gone for a second round. \n\nInstead we kissing and my hands once again explored her sex and ass. This time, I managed to get three fingers into her tight little pussy. I couldn't get them as deep as I wanted due to her tightness. She was obviously experiencing a little pain and sexual agony. Abruptly, I broke our kiss, and placed my fingers into her mouth. She smiled while sucking them clean. \n\nThe way she sucked made me want to replace my fingers with my cock, but I refrained. Instead, I pulled my hand away and handed her her running shorts. She pulled them up, then sat down to slip on her shoes and socks. Once done, she adjusted her top to cover up her tits, and walked toward the door. \n\nI called to her, \"Jewel! You forgot something. Come here.\" \n\nShe did as I asked, then demurely asked, \"What?\" \n\n\"I need to adjust your clothing before you leave, and one more kiss,\" I responded. I then glided my fingers over her body, ever so lightly, just as I'd done when our play time started. Then pulled her into me and we kissed. Softly, tenderly, and ever so slowly with increasing passion. When her tongue pushed its way past my lips, I took my hand and attacked her pussy. Pushing the white fabric deep into her folds, and vigorously rubbing her clit. The shorts sported a giant wet spot making them a little transparent. \n\nI broke our kiss and teased her. \"Damn you Jewel. Look-you're making my cock hard again. Hold on a second.\" I grabbed my phone, and snapped a few upclose pics of her wet pussy outline. Then had her bend over at the waist touching her toes. I went behind, and took a few more photos, then pulled her shorts down past her ass and snapped a couple of her exposed enflamed vagina. Finally, I rubbed my cock head against her drenched opening and pushed into her again, then added, \"Saturday night make sure your pussy is wet all night. I'm going to make sure it is damn sore next Sunday.\" With that I pulled out, pulled up her shorts, then slapped her bum and dismissed her. \n\nShe walked out the door only looking back once. We lived in a quiet part of town, so it was unlikely she'd run into anyone. But the thought of her possibly exposing her tits and soaked pussy made me horny and filled my mind with a whole host of ideas. \n\n======================================================== \n\nBefore Jenn returned home from dropping the kids off at her parents, I showered and completed several chores around the house. We'd had a great sex life until the last two years. Kids and the daily routine seemed to have zapped it of its vitality. I still thought she was sexy as hell, and enjoyed fucking her. Its just most nights we poured ourselves into bed late, arose early and often with one of the kids laying in between us. Not the best recipe for a little hot sex. \n\nOur lives weren't always this full. We'd explored nude beaches together, had sex in public and come very close to swapping spouses with another couple (the other female caused all to back out when she became overly drunk) and had discussions about sex, marriage, love and fucking others. However, officially we'd never crossed the line. \n\nDuring this time period Jenn had also twice made out with another lady. Each time we'd enjoyed explosive sex afterwards, and one of the kissing sessions involved me which came so close to becoming a threesome. My main recollection was how hot it was to have three people kissing, and it had been a long time since Jenn was so wet. After ten minutes of kissing the other lady, I kissed her for a bit, felt her up and then let Jenn continue her make out session. As she did, I stuck my hands down her pants and was surprised to find her panties drenched. The more a pussy becomes lubricated the harder I get. It's the equivalent of a designer sex drug for me. \n\nAfter our joint make-out session I'd tried to talk with Jenn about it and how intoxicating it was to discover she was into chics. The conversation didn't get far, however, it did get us to the point where we'd mutually talk about hot ladies and we had done this frequently enough that I now knew her \"type.\" Jewel fit into this category and I was hoping to use it to all of our advantages. \n\nJenn returned home close to six, gave me a kiss and dashed upstairs to shower. En route up the stairs she requested that I sort through some of the new dresses she bought and pick out the two sexiest ones, and she'd wear one tonight. I smiled in agreement and off she went. Hearing the shower start, I went to the kitchen and prepared her a mimosa then carried it upstairs and set it on the bathroom counter. Next stop was to review the dresses she'd purchased. \n\nSpread out on our bed were an aqua colored short sequined dress, a floor length black gown with slits that looked as though they went up to the hip region and a tiny white tube dress. All three would undoubtedly look great on my wife, but tonight I wanted to be able to view her sexy legs and a short dress would provide easier access. I hung up the long gown in our closet and tried to decide what I'd wear. After a few minutes I emerged with dress jeans, and a black slim cut button-up dress shirt, with sleeves rolled up and leather loafers. \n\nJenn had stepped out of the shower and was drying herself off. I stood there silently admiring her sexy body, then spoke up, \"You still got it honey. Every time I see you naked I starting thinking off all the crazy things I'd like to do with your sexiness.\" \n\n\"Don't get any ideas. We're already running late,\" she replied as she dried off the last damp parts of her body. \n\n\"Oh, I've got lots of ideas honey. Nothing will ever stop those ideas from flowing when I get to see your sexy nakedness,\" I retorted. \n\n\"If we didn't have dinner plans and no kids around, I'd have you fill me on some of those ideas while I rode you like a good cowgirl,\" she teased back with a smile. \n\nI softly slapped her derriere then advised, \"I think we need to spend more time making those ideas happen, and less time with other items. You know I want to see your body used so lovely you cum for at least an hour.\" I teasingly rolled her clit softly between the folds of her pussy, then added, \"I'll grab some decent wine and let you finish. Love you!\" We kissed and off I ventured to our little cellar. \n\nJenn knew most of my sexual fantasies well, however, she was quite reserved when it came to similar disclosures. She claimed not to have many and didn't go much beyond this answer. In contrast, I'd revealed several to her. Like most guys, a threesome with two ladies was high on the list. However, my disclosures didn't stop there. \n\nIn the midst of sexual play, we'd discussed one of my fantasies involving us and two other couples where she was the center of attention. The fantasy was along these lines: Laying naked in the middle of the bed we'd massage Jenn for about 30 minutes slowly getting closer and closer to her erogenous zones. Then began to work on those zones until she had her first orgasm. This would be followed by a long drown out session where each person had wild sex with her. The fantasy was prefaced with us sharing a bottle of red wine, and then taking a few puffs of herb. She rarely partook in the later, but when she did it made her a sexual dynamo who just couldn't seem to get enough. \n\nIn the cellar, I pulled out a bottle each of Cab, Merlot and Pinot and packed them in a carrier. Then ventured out to the living room, put on some music and tried to relax. While working on relaxing I playing through my head various scenarios on how the night might end up, how the guests would interact and entertain one another and all the possible things that could go wrong. Thirty-minutes passed like two, and my training of thinking was interrupted by Jenn walking down the stairs announcing, \"What are you so focused about? Think you need a tall drink!\" \n\n\"I agree, but let's wait till we get to Bob's,\" I replied. Then grabbed the keys and held the door open for Jen as we headed to the car. Oh. Forgot something. Jenn walking down the stairs did make me entirely forget my mental rumblings. When I saw her the only thing running through my head was whether we should just stay home and fuck the night away. \n\nHer white tube dress looked stunning. Surprisingly, she hadn't worn a bra and one could faintly see her nipples through the fabric. She had on four inch heels so came down the stairs slowly, which gave me opportunity to see her panties. White and sheer, such that I could somewhat make out her pussy. The tube dress easily rode up her legs, and would expose her undies if she wasn't attentive. Below her dress were her stunning legs. Toned, well-muscled and naked. In addition, she had a white boa draped around her shoulders. Believe she didn't wear a bra thinking the boa would conceal her tight nipples. Made a note to myself to see that the boa was set aside later in the evening. \n\nWe made the 20 minute drive to Bob's without incident. Engaged in small talk along the way-kids, work and summer plans. I did try to shift focus by playing some of Jenn's favorite music and surprised her with another mimosa for the ride there. Couldn't help myself once on the highway, placed my hand on her thigh then slowly scooted it up until I was rubbing her pussy. She responded by invitingly opening her legs, but stopped me after a few minutes stating, \"You can't make me get these panties all wet. Let's pick this up later tonight on the way home?\" \n\n\"Ok, later tonight,\" I agreed. Believe our agreement wasn't actually as to the same terms. I smiled. Jenn was playful and this was a good sign. We pulled into Bob's driveway and parked behind a few other cars. We entered Bob's house and were greeted by several people, but Bob was the first to officially greet u. \n\nHe gave me a \"man\" hug and a much more intimate one for Jenn, which included a little kiss. Then he openly ran his eyes up and down her body, smiled and looked her in the eyes while announcing, \"Damn Jenn. You look wonderfully sexy tonight. So glad you could attend our party. Please mingle, and I'll be around in just a few to properly introduce you.\" \n\n\"Shall we?\" I asked Jenn as I took her hand and headed over to one of the couples we knew there. \n\nWe didn't walk far when Jenn laughed out, \"Laura! I didn't know you two would be here. Give us a hug and where have you been? Its been a few months.\" \n\nLaura readily accepted Jenn's hug, then responded, \"We've been working. Traveling to few locals for business and organizing packages.\" She then delivered a big hug, and followed it up with a kiss on the lips. It probably was just me, but the kiss seemed fuller then a friendly hello. I'd always admired her from afar, but kept such info discrete. \n\nLaura's husband was Jake, a good fun athletic guy. He and I had a similar sense of humor and had spent many an hour sharing laughs along with beers and wine. I had no idea they were friends of Bob, but wasn't too surprised to see them here. The two owned and ran a successful travel promotion website, and often their \"business\" requirement took them to exotic fine locals during which they arranged travel deals for their customers which were primarily middle age and up, and with high incomes. Jake had mentioned they were usually \"comped\" the nicest suites, and this made their work especially miserable. We'd often discuss organizing a joint trip, but our schedules had never meshed. \n\nLaura was much more bubbly and vivacious then her counterpart. She wasn't much over five feet tall, but had a rocking body. She was a unique dress. Bright red, with only one broad strap going from her chest to the opposite shoulder, and then to the middle of her back. The main part of the dress was pleated, and baggy, but came to a shocking end just an inch or so past her ass. When she hugged me it was obvious she too didn't have a bra on, and the shortness of her dress had me dying to take a peak. From prior outings, I knew she had a fantastic ass that the dress effectively hid, but hinted strongly it could easily pop into view. \n\nHer husband also wore jeans, but had them stylishly rolled up, to reveal cream colored dress shoes. On top was a baby blue dress shirt covered with a white linen Grand Pa coat from the '30's. Had to admit that with his thick hair, and tinted glasses he looked like a model. I was going to have fun giving him shit throughout the evening about being dressed like a Ken doll. What is a friend good for if they can't freely give you shit. \n\nAs we chatted another couple came over that knew Laura and Jake. I didn't recognize either of them, but had to say Bob's statement was proving to be damn accurate. After a bit we were introduced. Their names were Magnolia and Marcellus. He was black, naturally chiseled, yet lanky and at six-three had a body that looked like a NFL quarterback. In contrast, she had long wavy blond hair, sky blue eyes, perfect legs and surely was the hot cheerleader the QB had landed. God bless him or them. I was wrong. \n\nMarcellus and Magnolia were computer programmers with their own business specializing in tech glitches (ie the people you called from your IT department fucked up). And the reason why they knew Bob, Laura and Jake. Their fitness came from being rock climbers and a focus on healthy eating. I had to laugh at my own judgmentalism. They both seemed laid back. He wore jeans, and a silk white t-shirt, while she wore a little black dress from which her nipples were extruding. \n\nThe three of us talked about business, undiscovered places to travel to and finally hot new restaurants in our area which hadn't been discovered by the masses (my specialty). Throughout the conversation all three guys were doing their best not to stare at the delightful breast show, with limited success. The girls knew and were flaunting their braless state. At one point, Jenn even held a cold glass of chardonnay up against her breast just to make it even perkier. The conversation flowed easily, and we all managed to finish one glass and start on another. \n\nDuring our chit-chat, I'd noticed another guest had arrived. This time it was Jewel and she was alone. Her outfit was a touch more formal, but also more naughty. A light blue floral long dress with hardly visible spaghetti straps, a lace banding around her upper waste, and then a few slits. Three of them. Two on each side running from the floor up to her waist, and one in the center that looked to go crotch high. She walked slowly, otherwise her pussy, assuming she'd complied, would be partially displayed. The lace binding also ran up and down each slit, and probably created some adhesion to keep her dress from fully opening. She too was braless, and her firm tits looked like they belonged to a twenty year old. \n\nAll this was taken in from a few side glances, but I wasn't the only one taking notice of her. Each time a new lady arrived the guys spent the first few minutes making obvious observations of the lightly covered breasts, but the effect wore off somewhat. After fifteen minutes, it was only when someone's nipples stuck out did the guys get goofy eyed. It probably would have been entertaining to watch on video. \n\nBob and his wife greeted Jewel, along with another couple that I didn't recognize. Then the foursome wondered over to our circle. Bob approached, and spoke up, \"I think you all have meet, and everyone here knows my wife Allison and I, so let me finish the introductions. This lovey aqua-eyed gem is Jewel. Her husband was called away on business so we get her to ourselves tonight. And here we have the captivating Todd and Sarah. They're visiting from Kansas and we thought everyone tonight would appreciate their company.\" \n\nAllison and Bob were almost opposites. He's tall, a bit on the heavy side, on the north end of 50 and devilishly charming in slow southern seductive manner. In contrast, Allison was small, athletic, and young and pistol quick. She competed at the DI level in college, still pushed herself and would sulk for a long day whenever she lost a local race. Just watching the two of them interact was entertaining. Her ass had always caused my cock to tingle, and she often went without a bra. Tonight, she even pushed that envelope. ",
        "Wrapped around Allison's torso and breasts was a shoulderless crop top, made of a light gold band on the top, from which multiple layers of small satin gold tassels hung down. Over this she wore an open short mid wasted black blazer. While her breasts were small, her nipples when erect easily stuck out an inch. If she turned quickly, the gold tassels would sway and briefly expose her nipple if caught from the right angle such that the blazer didn't conceal the exposure. I'd not doubt that Allison had planned out this effect. On the bottom she wore vintage jeans sporting several tears and worn spots, along with sexy pumps. From behind, the holes revealed a few delicious views of her bottom and made it clear she was going either commando or crotchless. \n\nSarah and Todd didn't blend in well for several reasons. One, she was the only lady wearing a bra. If I'd been in her bra, I'd have strategically gone to the rest room and removed it. Two, she kept position herself so that her husband was steered away from views of the other women. Three, it was obvious there was no equality between the couple, as Todd agreed with every statement, obeyed her every order and failed to add anything to the conversation. My heart went out to him. Their marriage more closely resembled slavery then a committed appreciative partnership. \n\nAfter the introductions, Bob announced it was time to serve the meal and requested we be seated. Just as he made the announcements both Marcellus and Magnolia's cell phones light up like they were on fire. The two huddled off to the side whispering into their phones with an obvious look of concern on each of their faces. After a few minutes they told the group they had a business emergency, but hoped to return later and dashed off. It was a sudden departure, but the two flowed as a work team and it was almost cute how easily went into fix mode and eased out. No doubt, something they had engaged in during the past. \n\nWith the group cut, by two Bob refocused on getting all of us to the table. The dining area was unique. A long table squeezed into a rectangular spot. The far end abutted a cement wall, while along the sides were two walls filled with wine bottles, light reflected off the bottles to provide a darkened atmosphere. The table top was covered with a draped white linen and five place dinner ware was arranged for each person. \n\nAs we converged on the table, Allison announced, \"Tonight we decided to arrange the seating as we thought this would stimulate more dialogue and get everyone a little more comfortable. So please take your seats, and the caterer can then start pouring drinks and snacks.\" Just after delivering her statement she pulled two seats away and quickly rearranged a few name markers. \n\nThis caused a few to start talking and slowed their progress to the table. Allison seemed to be impatient with people's slow progress so she began announcing the seating assignments. \"Jewel, you are all the way down, on the right side. Todd you're across from her, and Jack you're next to Jewel. I'm on the other side of you so we both get to tease you.\" She smiled seductively, then continued her seating announcement. \"Laura, you are directly across from Jack, Bob is to your right and Jenn you get to tease my husband during dinner tonight. Jake you are on my left and Sarah could you please sit next to Jake?\" \n\nAfter a bit of fumbling about, we took our assigned spots. I was thrilled that Jewel was next to me, and had a wall to her right, while the long table cloth blocked the view of others from the waist down. The servers filled our wine glasses first, and as they filled the others glasses on the far end I turned towards Jewel and quietly instructed her, \"Sit with your legs on the side of the chair.\" She promptly complied. \n\nThe collective showing of erect nipples straining beneath flimsy material did have its intended effect. The head of my cock was tingling and most of the others seemed to be openly flirting. While talking with Bob, I dropped my hands into my lap, then slowly drifted my right hand over onto Jewel's thigh. As our dialogue continued, I pushed my hand down further and began to stroke Jewel's inviting pussy. Moisture was already leaking out of her opening. The sexy vibe was getting to her also. \n\nAppetizers appeared quickly on the table, and low glasses were promptly filled. While I chatted with Allison, Laura and Bob, Jewel worked at striking up a conversation with Todd. I made her attempt a little difficult. When she attempted to talk with others, I'd used my index finger to trace circles around her opening, and periodically dip it into her. When Jewel got to a point where it appeared she would be engaged in a long dialog, I started to firmly rub her clit. The impact was noticeable, but having just met Jewel, I'm sure Todd had no idea as to the cause of her difficulties. \n\nI also had distractions. Asides from my finger play, Allison's nipples kept popping into view. From my vantage, one or both of her nipples were almost constantly visible. Several times, she caught me looking and at one point leaned over and whispered into my ear, \"They are cute aren't they?\" \n\nI turned a little pink, smiled and responded, \"Very cute.\" Then continued on with the conversation. I don't remember the specific topics we covered, but do know the conversation flowed easily and fast. Except for Jewel. Her attempts to engage Todd had little success, and no doubt he noticed her reddening cheeks and heavy breathing. \n\nOn the far end of the table, Jake, Jenn and Bob were laughing often and obviously having a much lighter conversation. Sarah didn't appear to be involved and sat with her arms folded across her chest. The conversation halted as the caterer served dinner, during which time I took a break from my finger play. People ate and laughed, and the meal was uneventful, but satisfying. This was followed up with a light chocolate dessert, during which I again played with Jewel's pussy and managed to rub a bit of the chocolate onto her clit for a hopeful later snack. \n\nAfter dessert was finished, Sarah abruptly announced they had to leave to prepare for their trip home. Both Bob and Allison seemed surprised, and insisted on giving the couple a ride home. Suppose they felt some feathers needed to be smoothed out. I was unsure why Bob had invited them, but not shocked at their early departure. This seemed to ruffle the groups' vibe. Laura and Jake advised they wanted to check on their kids as they had a new babysitter so suddenly our group of nine had temporarily dwindled to three. The three couples left, and the caterer wasn't far behind them which left Jenn, Jewel and myself the run of the house. \n\nWhen our fellow guests departed, Jewel spoke up, \"Let's go out to their deck. Being in the country we should have a great view of the stars.\" \n\n\"Sounds relaxing and romantic,\" Jenn added. \n\nThe three of us wandered out to the deck and aimed our eyes towards the heavens. It was a beautiful night, with many constellations easily visible. As we pointed out different features to one another, Jewel said, \"I actually wanted to come out because a friend gave me a joint, and its been like a decade since I've smoked, but think it would be fun tonight.\" \n\n\"So you pulled us out here so you could sneak away and get high?\" I asked. \n\n\"I'll share,\" Jewel replied. \n\n\"Just ignore him. I'll join you and let Jack abstain. That way we'll have a driver and it would be rude to let you smoke alone,\" Jenn responded. \n\n\"So were going to stand out here in the cold, huddle together and smoke away like we are a bunch of teenagers?\" I asked. \n\n\"No idiot. Jewel and I are going to smoke. You just get to watch us hot teenagers,\" Jenn shot back with laughter between the lines and put her arm around Jewel's waist then gave her a peck on the cheek. \n\n\"Actually, we can act like teenagers. Bob has a hot tub around the corner and out a bit. Why don't we crash it and would be a good place to smoke so we don't get cold or have to huddle around like school kids,\" Jewel suggested. \n\n\"You have my vote. Let's crash it!\" Jenn added, then grabbed my hand and Jewel's and began walking to the direction Jewel indicated. \n\n\"Hot tub and two beautiful ladies. Who the hell would say no to that?\" I added. We all giggled. \n\nThe hot tub was set off about 30 yards from the house, and once the cover was lifted off it was easy to find the lights and bubbles button. I turned them both on and all three of us slipped out of our outfits. No one mentioned the presumed nudity while walking to the tub and think it added another layer of excitement. We soaked in the tub for a few minutes, then Jewel climbed out to get her joint and a lighter. \n\nAs she climbed back in, she announced, \"I'm going to turn off the bubbles, don't want water bubbles interfering with our smoking attempts. It's been a long while.\" She then light up the joint, and tried to take a big breath, but instead ended up in a coughing fit. I couldn't help myself, and started laughing. \n\n\"Here let me show you how it's done,\" Jenn spoke up. She took the joint and stated, \"Go steady and slow, and make sure to take a little air in from the sides, and always finish with a suck of just air.\" She then demonstrated her technique, and also ended up coughing which created more laughter. \n\nJenn rarely smoked, but I loved it when she did as it seemed to make her exceptionally horny, and much less inhibited. After three puffs, Jenn indicated she was done and Jewel agreed she'd had enough too. The three of us sat there for a bit gauzing at the stars. I was also gauzing at the ladies naked bodies. My cock was expanding and I had no doubt more would happen soon. \n\n\"I'm going to dash in and go potty,\" Jewel announced and quickly climbed out of the tub, giving us a nice show. \n\nAs she walked away I hollered out, \"Can you grab a bottle of bubbles. We brought some and Bob put them in the frig.\" \n\nJewel replied, \"Sure.\" And this was followed with laughter. I think the pot was starting to kick in. \n\nAs Jenn disappeared into the house, I reached out, grabbed Jenn's hand and pulled her towards me and wrapped my arms around her. \"Damn you look hot. Come here sexy I want to kiss you,\" I stated. \n\n\"You're just getting all worked up seeing Jewel naked,\" she responded then we kissed for a bit. As we did so, she straddled my lap and she began to rub her mound against my now firm cock. \n\n\"I think you are also getting turned on by Jewel,\" I managed to reply before we launched into another round of making out. There was no doubt the pot was impacting Jenn as she usually didn't move towards sex this fast. She was rubbing her clit against the base of my shaft and moaning between kisses. I pulled my hand from her back, and placed it up against her pussy. I slid her over just a little and was surprised to find how wet she'd become. Two fingers easily slid into her, evoking a load moan. Us I explored her tunnel I used my thumb to massage her clit and while doing so asked, \"Would you like to fuck Jewel? Imagine her playing with your pussy and kissing you.\" \n\nJenn responded hungrily by pushing my hand away, grabbing my cock and then sliding it up into her. She began to slowly move up and down, taking my full length into her. We'd just started this when we were interrupted. \n\n\"Here's the bubbles. I can go back to the house if you'd like some privacy,\" Jewel spoke out. It startled me, but Jenn recovered in style. \n\n\"Just teasing him. Please join us and let's get that bottle open,\" Jenn responded as she moved off of my lap. \n\n\"Ok,\" Jewel accepted and handed the bottle to me. She climbed back into the hot tub, commenting, \"You two looked so cute and intimate together. And pretty sexy.\" \n\nI eased the cork off the bubbles, poured each of us a glass and handed the ladies their drinks. The cold liquid played a bubbly symphony on our tongues, and made the warm soothing water feel even more magical. The ladies sipped on the champagne and seemed to zone out for a bit. I slowly sipped my glass, but let my eyes take in their lovely nakedness. \n\nAfter finishing her glass, Jenn softly asked, \"Jewel, come sit between Jack and I. We can alternate giving each other massages.\" \n\n\"Ohh, that sounds nice,\" replied Jewel then eased her way between us. Jenn began rubbing the left side of her shoulder, so I mimicked her movements on the right side. Starting with her shoulder then slowly going down her back and back up. Jenn asked for Jewel's arm, massaging her palm and fingers, then working upwards and I followed her lead. \n\nOnce we completed Jewel's arm massage, Jenn directed, \"Spin around now, and put you feet in our laps so we can give them some attention along with your legs.\" Jewel complied after we rearranged our positions. She was now sitting in the middle of the far seat, while Jenn and I were on seats to both her left and right. Jewel had to slouch down in the water in order for her legs to reach our laps, and they formed a nice inviting V, while her breasts floated buoyantly. My cock remained rigid and was screaming for more attention. \n\nWe spent some time on Jewel's feet. She was obviously enjoying our efforts. Her calves came next, and then up to her knee and thigh. While rubbing her thigh, Jewel's foot came into contact with my cock and she used it to gently stroke my shaft. I couldn't help myself, and when I reached the upper portion of her thigh I dipped my fingers into her open vagina. She responded with a moan and by thrusting her hips upwards. \n\n\"I saw that you two,\" Jenn commented, and added, \"just make sure everyone is ok with all this before things get out of hand. Jewel, are you ok with the massage being a little sexy?\" \n\nJewel responded by grabbing Jenn's hands and placing them on her shoulders, then she pulled Jenn between her legs, and used her hands to guide Jenn's face towards her. When her lips were a few inches away from Jewel's face, Jewel answered, \"Yes I'm wonderfully ok with this.\" She then planted a soft full kiss onto my beautiful Jenn's lips. \n\nThe kiss blossomed into a full on make out session. Lips parted and tongues danced between their mouths. As the kiss went on, they began to use their hands to explore one another's bodies. Jewel latching onto Jenn's sweet tits, and breaking the kiss momentarily to suck on her dark brown nipples before reinitiating the kiss. \n\nJenn appeared to be enjoying herself. I was surprised by how fast she was pushing the envelope. From my view, I witnessed her hand fondle and pull on Jewel's nipples, then drop down and was no doubt playing with her pussy. The way Jewel was moving around and moaning Jenn was doing a good job. \n\nI scooted next to the two and teasingly rubbed Jenn's ass then dropped my fingers to her pussy. There was no denying her sexual attraction. Pussy juice wasn't just on her lips, but had already oozed down one of her thighs. My fingers easily entered her causing a slow release of a moan. I rubbed her G spot, then felt Jewel's fingers similarly exploring Jenn's pussy, but focusing on her clit. \n\nThe dance continue for a few minutes, then I stood up behind Jenn, pulled her up onto her feet, and easily drove my cock deep into her pussy. After a few short strokes I grabbed her hips and began to fuck her in earnest. This didn't last long. \n\n\"Wait wait. You two are probably going to kill me, but I have to stop. I have to pee so bad. And I want to enjoy this. I'll be right back,\" Jenn announced. She then hopped out of the tub and walked rapidly back to the house. Half way there she hollered back with a laughing voice, \"Don't do anything I wouldn't do.\" Then disappeared inside. \n\nI sat back into the hot tub then told Jewel, \"Come here. Suck my cock underwater.\" She edged over, smiled and did just as I asked. Her head fully submerged while her tight ass was entirely exposed. She sucked my cock expertly, then popped up for a breath of air. I greeted her with one request, \"Keep sucking.\" \n\nShe complied quickly. Her warm lips wrapped about my cock and expertly she took my whole cock into her mouth and down her throat. She sucked vigorously and began to bob up and down my member. As she did this, I played with her ass and pussy, forcing my fingers deep into her vagina. \n\nWhen Jewel came up for another breath, I grabbed her chin and held it. Then told her, \"When Jenn comes back and I'm fucking her I want you to suck on her clit so she cums over and over. Whenever she gets close to cumming make sure that you grab her tits and squeeze them hard. Got that?\" \n\nJewel responded by nodding her head affirmatively and smiling. \n\n\"Are you going to do whatever I ask of you tonight?\" I asked. \n\n\"Yes. Just think of me as your animated sex toy. I will do whatever you please, I'm just there for your pleasure. You control me totally,\" Jewel answered. \n\n\"After I cum in Jenn's pussy I want you to lick it out of her and see if you can make her cum. But right now I want you to put your legs around me, squat down and rub just your lips against the head of my cock,\" I ordered. \n\nJewel stood up, straddled my body, and squatted down so her open vagina just touched my dick. I grabbed my own cock, and used its head to spread Jewel's pussy lips. I raised my hips up just enough to place my cock head inside her vagina and slowly withdrew it, then pulled her down so that her clit was nestled against the base of my cock. Two hands wrapped around her ass, and I pulled her firmly against me, while pressing one finger firmly on her anus. \n\n\"Oh god, that feels good. Please put it in me,\" Jewel pleaded. \n\nI repeated the pull, doing so more firmly and pressing the tip of my finger into her ass. \"What do you want me to do to you?\" I asked. \n\n\"Screw me with your cock please,\" Jewel responded. \n\n\"Quit your nice talk. Say it right,\" I commanded. \n\n\"Fuck me please,\" she pleaded. \n\n\"Fuck what with what?\" \n\n\"Fuck my pussy with your cock please,\" \n\nI pulled her torso away from my shaft, then looking directly into her eyes I slowly stated \"Say It Right. Be a dirty slut.\" \n\n\"Fuck my cunt. My wet spread wide cunt with your cock.\" \n\n\"Do you want me to fuck your cunt right now?\" \n\n\"Yes. Please.\" \n\n\"No. I'm going to use this cock to fuck my wife. Maybe later if you're good I'll fuck your pussy. Right now I want to fuck Jenn and then see your face covered in our cum and fuck juices.\" And I pushed her away, just as Jenn returned to the hot tub. \n\n\"Thought for sure you two would be humping the hell out of each other by now. Did you even start? Y'all certainly don't need my approval to have a little fun,\" Jenn stated after climbing into the tub. \n\n\"We had a little fun, but I think it's a lot funner if we include you in the mix,\" I responded. Then added, \"Why don't you put your bottom up against me and make out some more with Jewel. I want to slowly screw you while she's getting you worked up in the front.\" \n\n\"Sounds interesting. I think I'm ready for a little fun,\" Jenn answered before standing in the center of the tub, and pulling Jewel up by her hands to join her. The two began to kiss and this time it intensified quickly. Lips curling around tongues and tongues exploring one another's mouth as hands began to grope and probe. \n\nI watched for about 90 seconds, softly stroking my hard cock. When I saw Jewel's fingers dancing in and out of Jenn's pussy I approached Jenn from behind and pressed the tip of my dick against her opening. \"Jewel open her lips up for me, and guide me into her,\" I stated firmly. \n\nJewel's placed one hand about my shaft, and with the other spead Jenn's pussy open. She then pulled on my cock a little, letting me know it was time to stoke forward. I easily entered her, then grabbed Jenn's hips and pulled her back onto my cock as I shoved forward. \n\nI fucked her slowly for a bit. Letting the girls continue to kiss and paw at one another. As I picked up my pace, Jenn's breathing quickened and soon she had to break from kissing Jewel. A minute later she was moaning with each of my thrusts, getting closer to release. ",
        "My breathing and pleasure was also escalating. \"Suck and pull on her nipples Jewel. She loves that when she's getting close, and play with her clit,\" I instructed Jewel who readily complied. Quickly, Jenn's moaning became louder and deeper. I knew she was getting close, as was I. \"Now suck hard on her clit, put your fingers into her and rub my cock in her pussy,\" I grunted to Jewel. \n\nThis time a few seconds passed before Jewel acted. She locked eyes with me, then slowly bent down onto her knees and latched onto Jenn's clit with her lips. She began sucking and then went all out. Hungrily attacking my wife's clit. As she did so, she worked a few fingers up into my wife's pussy, stretching her out well and began massaging my cock. \n\n\"Oh god. That feels so good. Shit, oh shit,\" Jenn moaned out. \n\n\"Lick that pussy good Jewel. Do you like that honey?\" I asked. \n\n\"Yes, oh yes,\" moaned Jenn. \n\n\"I'm going to cum in your pussy honey and Jewel's going to clean us up. Do you like watching her suck on your clit?\" \n\n\"Oh shit, oh good, ahmmm, ahhh shiittt. I'm cummminggg,\" stammered Jenn. \n\nAs her pussy spasmed around my shaft I blasted a load of cum into her upper depths. Acting quickly I pulled my cock out, cupped one hand behind Jewel's head and stuffed my dick into her waiting mouth just as a second blast shout out. She sucked my cock deep into her mouth and immediately began pistoning her head back and forth. A final blast of semen shot out, and my overly sensitive cock wasn't able to take any more so I pulled it out. After my cock popped free, I redirected Jewel's face to my wife's waiting snatch. \n\nJewel stuck her tongue deep into Jenn's soaked pussy, lapping up my escaping semen and complying perfectly with my instructions. Jenn responded with more moans, placed her hands behind Jewel's head and began to hump her face. \n\nJenn and I had frequently discussed the fantasy of a threesome with another woman after I discovered how wet she'd become from making out with a lady. She admitted it excited her to think of kissing another woman and have the lady suck on her nipples, but she claimed she would be uncomfortable going any further. Now before my eyes she'd gone much further \n\nShe was humping Jewel's face with her pussy then paused dramatically as Jewel moved upwards and was now sucking delicately on her clit while teasing it with her tongue. \"Ohh, fuck, don't stop. Suck it more. You're going to make me cum again,\" Jenn squealed out as she again pulled Jewel to her loins \n\n\"Do you like Jewel eating your pussy?\" I asked my wife. \n\n\"Ahh, yes. Yeahhsss,\" she sighed back in response. \n\n\"Do you want her to stop?\" \n\n\"Unnhhh ahh. Ohh God. I'm close,\" she replied then leaned back onto the edge of the hot tub, lifted her knees up and completely spread her legs wide open. Jewel stood up, then bent over at the waist to renew her assault on my wife's open vagina. Jewel's ass was now out of the water and looking delightful. \n\nI too then stood and placed myself behind Jewel's glistening ass. Hew swollen lips and ass looked especially tempting as the glimmered from the water. I grabbed a healthy handful of Jewel's ass and squeezed her cheeks. \"Think we should reward our sex toy with some dick my love?\" I asked Jenn. \n\nShe moaned several times, vigorously humping Jewel's face and finally yelled out, \"Ah yes, oh ahhh fuck her any time, just, oh fuck shit. I'm cummmminngg.\" I began to rub my cock against Jewel's exposed vagina, but pulled my still limp cock away. Instead, just as Jenn announced her orgasm, I pushed two fingers deep into Jewel's pussy. I fucked her opening with my fingers, however, just as soon as Jenn's orgasm subsided, I pulled my hands completely away. \n\nMy cock was now half way firm, no doubt thanks to the little blue pill I'd taken earlier. It wouldn't have taken much attention to render it ready to go. As Jenn's breathing calmed down a bit, I walked over to her and place one of my pussy soaked fingers into her mouth. She eagerly accepted it, and sucked on it suggestively. \n\nWhen I pulled it out, she smiled and added, \"Tastes good. Is it someone else's turn now?\" I responded by going in for a long deep French kiss. I couldn't get enough of this woman and wanted her again. When I broke our kiss, I noticed headlights in the driveway. \n\n\"Shit, ladies. Looks like we'll have to take a break as the rest of the crew is back.\" The two women turned their heads so they could also see the headlights and both let out a complaining sigh. \"Why don't we pop out and go party with our friends a bit, then later can play some more if everyone is agreeable,\" I suggested. \n\n\"Oh, shit. Jewel can you believe how polite he is being. Agreeable. He wants to fuck you so bad I can smell it on his breath. And, so do I. We're going to go back to the party, be sociable, and then later both of us are going to fuck you silly,\" Jenn replied, then began to climb out of the hot tub. \n\nJewel followed her, and when she lifted one leg outside of the tub I stopped her. \"A kiss please,\" I requested. We kissed briefly, but long enough for my hands to again sneak into her pussy and rub her clit. When I let her go she finished her egress from the tub. \n\nThen Jenn pulled her into her arms and gave her the same treatment, but at the end she knelt down in front of Jewel and gave her clit a few brief licks. My cock was now completely hard. She stood up, smiled at the two of us and stated, \"Shall we dress?\" \n\nThere was no answer, but instead the three of us dried off with the towels I'd brought out and put on our clothes. Then we walked back to the house. When we walked through the back door we were instantly greeted and grilled by the returning foursome. I had to admit I was surprised Jake and Laura had returned as I expected them to use their \"babysitter check\" as an excuse to escape for the night. \n\n\"So you two decided to go hot tubbing? Without any suits, and don't even invite us?\" asked Allison. \"When at a party it's rude not to include others. Shame on you three,\" Allison jokingly scolded us. \n\n\"We weren't the ones that dashed off and left their guests unattended,\" countered Jenn. \"So it was perfectly suiting that we take advantage of your hot tub. And I will say it was great. Very relaxing to sit out there under the stars and just chill.\" \n\n\"Chill my ass!\" came a deep voice from around the corner. Then Magnolia and Marcellus appeared from around the corner. \"Magnolia and I got back about 30 minutes ago. Thought we'd been abandoned, although Bob did text to let us know y'alls status. My beautiful lady here heard some splashing out back, got all worked up and could barely sit still. Mmm, the three of you did look like you were having some fun, but that was not chilling,\" Marcellus stated. \n\n\"I love it!\" Allison replied. \n\n\"So sexy,\" Laura added. \n\n\"Ok, I admit it. We are busted for having a little fun,\" I answered. I had also checked out Magnolia. Her cheeks were red and nipples plenty erect. I suspect the two of them had done more than just watch. \n\n\"Bob why don't we do something that would be fun for all of us?\" Allison asked. \n\n\"Don't think we'd all fit into the hot tub. Perhaps a game of hide and seek or take turns with one another for two minutes in a darkened closet?\" Bob answered. \n\n\"Bob no offense, but I am not going into a darkened closet with you,\" I added. \n\n\"No let's play a game. A fun couples game,\" Allison advised. \"Listen up. Let me know if anyone is not comfortable with this, it should be fun and educational. Plus involve a little kissing and massaging. So here is the idea. We break up into couples, but have a drawing so that the couples are not as currently paired. Once split up, each couple comes up with a challenge question. This is a question based on something they or their partner do in their relationship which makes both feel sexy, upbeat or relaxed. No sex. Light kissing and massaging is fine, but we can't get too carried away. Any problems?\" \n\n\"I'm not sure I understand. Could you give us an example?\" asked Laura. \n\n\"Sure. Here is an easy one. I love when Bob plants numbers of light little kisses up and down my neck and shoulders. Very sweet and erotic. So that would be a challenge question,\" answered Allison. \n\n\"So each pair just comes up with a question. Guess that would be a bit educational,\" Marcellus replied. \n\n\"No. We get to demonstrate, right?\" asked Jake. \n\nAllison laughed briefly than stated, \"Of course we demonstrate. That's the fun. Each group gets to sample the challenge question and demonstrate to the others whether its effective or not. Have to make things interesting don't we? So with four couples there will be four challenge questions and 16 demonstrations. Any more questions or anyone not want to participate?\" \n\n\"Do we watch 16 challenges or have four couples demonstrate at the same time? And what about Jewel?\" asked Jenn. \n\n\"Good questions. Let's see. How about we first divvy up the couples, and then we'll draw for Jewel. She can be a prize for one lucky couple. If we had all day, 16 demos might be fun, but I think that would drag out the game too long. If the four couples demo together it'll be fun to experience and watch others doing it at the same time,\" Allison answered. \n\nEveryone advised they were fine with the rules and ready to play the game. Allison insisted on more wine being opened then wrote everyone's names on a small sticky and put the girls names, with the exception of Jewel, in a bowl and the guys names in a cup. The draw was then made. \n\nJenn was paired with Bob. Allison with Jake. Laura with Marcellus. And, Magnolia and I became a \"couple.\" Allison then took three white plastic forks, and an identical blue one and placed them in a brown paper bag. \n\n\"I'm going to ask that the men close their eyes and pull a fork out of the bag. Whoever, gets the blue fork becomes a threesome with Jewel,\" Allison instructed. I had to chuckle in my mind given the recent threesome Jenn and I had just enjoyed with her. Marcellus drew the lucky fork. He smiled big, and positioned himself between Laura and Jewel with an arm around each. Looking at Magnolia I thought there was a bit of jealousy in her eye. \n\n\"So let's break up into our groups, and take about five minutes for each couple to decide upon their challenge question. If any are questions are too similar we'll demand a reformulation so be creative. We go in alphabetical order, based on the couple's female name. So yes, I get to go first. My game, my rules,\" Allison rattled out. \n\nMagnolia and I walked over to the living room and sat next to one another on a sofa. When we'd first got in from the hot tub, her nipples were rock hard, but had now receded. After sitting, she turned to me and asked, \"What do you think is sexy, romantic and just a touch above an R rating?\" \n\nShe'd nailed the game down precisely. \"Well, I suppose there are lots of things that can get me going, but really it is what turns one on by doing something to the other is how I see it,\" I answered. \n\n\"Agree,\" Magnolia nodded. Then added, \"I really get into watching others. Really gets more worked up.\" She looked straight into my eyes, and continued, \"You all did a number on us. We were just about ready to have our own fun when everyone showed up.\" \n\n\"Coitus interupticus is the worse,\" I teased. \n\n\"But that's not a challenge as we can't request everyone else to get busy while I or we watch. I love my hair played with, especially when it is combined with nipple play. Oh, shit. Is that TMI?\" asked Magnolia. \n\n\"Not all. Love it,\" I responded while chuckling. \"Think that falls in the R rating category?\" I inquired. \n\n\"You know we are going last. I'd bet by the time we get to our challenge the group has notched things up a few levels,\" Magnolia stated. \n\n\"Think you're probably correct.\" Just this brief conversation had returned Magnolia's nipples to partial erection and she smiled each time I took in a view. \n\n\"I have an idea. How about a slow strip and lap dance? Wouldn't that turn most guys on?\" Magnolia asked. \n\n\"Shit. A lap dance with any of the ladies here would definitely get a guy rolling,\" I replied. \n\n\"Well in this case it would be me giving you a lap dance. And doing so while the others were doing the same thing. Think you could handle that sexy?\" inquired Magnolia. \n\nMy dick was now at full attention. The notion of seeing this blond hottie, naked or nearly naked, bouncing on my lap was causing my heart rate to jump. \"So we'd tell the group our challenge is to have the lady perform a seductive strip and then do a lap dance to a song?\" \n\n\"Yep. And we aren't at a strip club so maybe someone's fingers could roam a little,\" Magnolia answered while looking me straight in the eye with a flat out sexy smile. I was ready to skip the other challenges and go straight to this one. \n\n\"Sounds heavenly. Hey, what if someone stills our idea? Could happen since we are last,\" I advised. \n\n\"Shit. Marcellus loves lap dances. What will we do if they take our challenge?\" \n\n\"Well it wouldn't be too bad as I'd get to enjoy the lap dance that much sooner. Imagine everyone will be pretty worked up by then and the ladies will be undressed. Hey, I got an idea. Jenn loves tantric massages. Are you familiar with them?\" I asked. \n\n\"Not really. Like a back massage?\" \n\n\"It can be on the back, but that's not the focus. You give the massage by just using light touches from the tips of your fingers. They just barely make contact with the other person's skin. As the massage progresses, you teasingly focus on the erotic parts of one's anatomy-breasts, butt and more. Also, when giving the massage you jump your hand around so the person doesn't know where they'll be touched next. It's beyond sensual. It never fails to get Jenn extremely horny.\" \n\n\"Wow. Just thinking about it sounds exciting. Your wife is hot. I really got off on watching your adult play in the hot tub. And when Jewel ate her out is was like live porn right there. If the others hadn't returned we would have joined you. Who knows what you and I would be doing right now?\" Magnolia teased. \"Think we are challenge ready. I'm looking forward to this game.\" \n\nShit! Did my ears here that correctly. Was she suggesting that she'd like to fuck me. I thought she'd have fun, but did not anticipate that response. Before I had any more time to think about it Allison shouted out, \"Time is up. Everyone help out. Push a couch towards the center of the room, five or so yards apart and they will serve as our stages.\" \n\nMagnolia was sitting across from me and as she stood she spread her legs a little. Her short black dress rode up and her vagina briefly popped into view. She too was commando. I then stood and both of us pulled our couch towards the middle of Bob's massive living room. Then we sat back down onto our couch. \n\n\"The first challenge isn't a shocker,\" Allison told us. \"It's my kissing thing. Girls sit in the middle of the couch, close their eyes and then the guys lightly kiss the ladies exposed skin from the torso up to their neck. Little sexy pecks. No kissing on the lips and Marcellus you have double duty, but no extra time. Ready, go!\" \n\nThe quick start surprised everyone. While Magnolia and I had sexually teased one another with words we'd had no contact. She sat waiting patiently in the middle of our couch with her eyes closed. I looked around and Bob was already nibbling on Jenn's neck, while Jake was similarly engaged with Allison. Marcellus and I caught eyes and exchanged a laugh. He too wasn't sure how to proceed, and had double the problem. \n\nI approached Magnolia from the front, bent down and slowly exhaled my warm breath on her neck. I repeated this a few times then planted a long soft kiss on the left side of her neck. After a few seconds I withdrew the kiss, exhaled another warm breath on her neck and repeated the kissing process. As I did this I worked my way up to her earlobe, focused on it for a moment, then begin to kiss downwards. \n\nMy kissing traveled down towards the base of her cleavage and then slowly started back up. Magnolia's breathing had steadily increased and as I kissed upwards I drug the back of my hand across the bumps caused by her erect braless nipples. When I reached her right earlobe, I nibbled on it softly and lightly blew into her ear. I kneeled on the side of the couch, lifted her hair up with my right hand and exposed her hairline. Then I softly placed kisses on the back of her neck, while using my right hand to massage her scalp and with my left hand reached around to her front and teased her left nipple. \n\nA minute later, Allison spoke out, \"Time is up or we'll never get through all the challenges.\" \n\nDuring this challenge the room had fallen silent. Everyone now looked entranced. Glancing over at my wife, I saw that her nipples were also making their presence known. Abruptly, Magnolia stood up and walked away towards the kitchen saying she needed to refill her wine glass. Everyone else sat still. \n\n\"Ok, up next is the challenge from Team Jenn,\" Allison spoke out loudly. \"What is it?\" \n\nJenn cleared her throat then stated, \"I love kissing. Slow soft sweet kisses that slowly increase. So our challenge is that you lay next to your partner and take turns showing them how to kiss for maximum seduction.\" Good challenge. And Jenn was being brutally honest. Slow passionate kisses turning into hot make-out sessions really did light her fire. It would be interesting to see how fired up she got, especially with the effects of still being high. \n\nMagnolia returned, sat down next to me and softly whispered, \"So now we get to make out. Shit. I felt like I could have had an orgasm on that last challenge. No fair playing with my tit and nipple. Don't do that again unless you pull my dress aside.\" \n\nShe certainly knew how to crank up a guy. Jenn than let us know we were to lay down and start kissing, and she put a 7 minute limit on the challenge. \n\nMagnolia took a long sip from her wine glass and then laid back on the couch on her side. I took off my shoes, then did the same. I scooted close to her and put my right arm on her torso, and as I did so she began to talk. \n\n\"Sorry about dashing off. I just needed a moment. Watching you in the hot tub really hit me hard sexually. I wanted to be Jenn, having you making love to me and then Jewel lick my pussy until there's a round two. Marcellus was just about to screw me when everyone returned. I did have a thong on. When you were kissing my neck I felt like I had to have you inside me. I'm really committed to Marcellus, but one look at him over there with Laura and Jewel and I know what he wants. More importantly, I checked with me. I'm sure I'll feel a little funny in the morning, but I don't want to regret not doing something I so badly want. I'm totally soaked down there. Guess, what I'm trying to say is I want you to fuck me.\" \n\nWith that said, Magnolia placed a hand behind my head and pulled me towards her waiting lips. Our lips touched softly for a bit, becoming accustomed to the new touch. Delighting in each other's seductive smell we piled kisses onto each other's lips. Time paused, but slowly our lips parted and I slipped my tongue into her mouth. She opened her jaw and let me explore before pressing her tongue into my mouth. Our kissing was slow to take off, but now was rapidly growing more wanton. I pressed my leg between her thighs and she began to hump her pussy against it causing our kissing to become even more passionate. \n\nI begin to grind into her hips. It seemed like only seconds had passed, but I was sure time was flying and half our time had expired. I slid my hand down from her torso and onto Magnolia's pussy. She was correct, her pussy was soaked. I easily slid two fingers into her pussy, and she responded by opening her legs wider and moaning approval. I explored her vagina with my fingers, then pulled my hand out, reached under the top of her dress and tugged on her nipples with my slippery fingers. As I did this I moved onto the top of her so that our hips were aligned. While doing this, our kiss broke and I momentarily looked down to see her bald pink swollen pussy. ",
        "Also, I paused to look about the room. Bob was in the missionary position with Jenn, and also fully clothed. Jenn's white tube dress was up around her waist, and she was thrusting up hard against Bob such that her ass was completely lifting off the couch. Across from Jenn, Marcellus was sitting upright being straddled by Laura. Her little red dress, wasn't entirely a dress as it had a bottom otherwise she would have been displaying her goods frequently. Marcellus had it yanked up tight against her pretty ass such that her cheeks were fully exposed. While Jewel was on the other of the two, and had fished out one of Laura's tits and was sucking away on it as Marcellus' fingers were diddling her pussy. \n\nOn the fourth couch, Jack was laying down on his back while Allison straddled him as the two fiercely kissed one another. Both their hands were exploring each other's bodies which caused Allison's tiny titties to be completely exposed as her tassel top had been pulled down to her waist. As I watched, I heard a rip and saw that Jake had enlarged one of the holes in Allison's jeans and now had access to her pussy. It appeared all were headed to the same direction, so I returned my focus to Magnolia. \n\nShe'd pulled out her perfect tits and eagerly pulled me towards her. Our mouths opened before they met and as I placed my tongue into her mouth she sucked hard on it simulating a blow job. I ground my bound cock forcefully into her pussy and then broke our kiss. While I continue to grind into her, I whispered into her ear what was going on around us. \n\n\"I want to see,\" Magnolia pleaded. So I rolled off carefully and flipped her on top of me. She straddled my hips which parted her twat and began to look around. It wasn't long till she bent back down for more kisses and whispered to me, \"Fuck. That's so hot. I just want to fuck all night now. Your wife wants to get fucked almost as badly as I do.\" As she said this, Magnolia reached down my pants and pulled my dick up so the tip was exposed from the waist of my jeans. She rubbed the pre-cum from my cock around its head, then inched her pussy up until her entrance was pressing onto my dick. What a wicked feeling it was to have such a luscious blonde, with full firm breasts, desperately trying to get me inside of her. \n\nI pulled her shoulders down so we could continue our kissing while thrusting up as hard as possible. Half of my cock head was buried in her wet lips, and eagerly we were trying to get more inside her. She raised her pussy up just for a second, and unbuttoned the top of my jeans then lowered her opening onto the full head of my cock. \"Ahh, you feel so good. I want you all the way inside me. You can fuck me anyway you like tonight,\" Magnolia oozed into my ear. I thrust up just an inch further and the alarm from Jenn's phone went off. \n\nCollectively several \"Sighs,\" \"Fucks\" and \"Aghhhs\" sounded. Promptly followed by Allison issuing more commands. \n\n\"Remember NO SEX! We have to finish the game and then everyone can decide what they're comfortable with or what they are not comfortable doing. We don't want people to feel pressured to do something they are not comfortable with. And please, everyone remember, no means no.\" \n\nThe speech was almost comical. Jake had ripped Allison's jeans even more so that when she stood there not only where her tits exposed, but her pussy was easily visible. It was inflamed, red and slick. However, the speech did cause the couples to untangle. \n\nJenn sat up and pulled her top up over her breasts, while her pussy remained viewable, then asked, \"Who goes next? I'm having fun and ready for more.\" \n\n\"I think we are,\" Jewel answered. \n\n\"Our challenge is a strip tease, followed by a lap dance. I'll get the two songs ready and when the music starts we can roll. Ironically, it looks like the girls are much more undressed than the boys,\" Laura added. Her outfit had been pulled down so her tits were uncovered, but the dress continued to hide her goodies. In contrast, Jewel's dress has bunched up on the floor so she stood completely naked, but quickly replaced it before the music started. \n\nMagnolia whispered to me, \"Good thing we have a back-up plan. And the strip tease sounds pretty mellow now, but I think the lap dance will be interesting.\" She had pulled up her spaghetti straps so was now fully clothed. \n\n\"Ok, guys sit in the middle of the couch. Ladies get ready, go,\" Laura excitedly announced. A repeating electric beat blared out from hidden speakers, then the song became familiar as George Michael started singing about teasing you, wanting you and chanting I want your sex. Because sex is natural and sex is fun. A perfect selection. \n\nMagnolia spread my legs far apart and began seductively dancing in front of me. As the song spread up, show lowered her spaghetti straps exposing her tits and gently pulled on her nipples. The other ladies were similarly losing their clothes. While Jewel's dress was already off as she danced about Marcellus. Laura's creamy breasts were out, and she was rubbing her ass up and down Marcellus' crotch. He wasn't passive, and had pulled the pants part of Laura's skirt up tightly into her pussy exposing its curves and moisture. \n\nJenn was slowly pulling down her dress, while playing with her tits and pussy. Allison was the most dressed, as she still had her jeans on, but her top was off and Jack kept reaching out for her crotch. She'd let him touch it briefly then teasingly pull away. \n\nMy attention quickly returned to Magnolia, as she was now bent over at the waist standing in front of me. Her soaked pussy on full display. I reached towards and slid my thumb up into her soaked tunnel. While with my other hand, I eased down her dress so that she was now naked. She then scooted back and started to rub her derriere against my chest. I grabbed it firmly and teased her ass apart to reveal her pussy and puckered anus. \n\nThe song was reaching its end, and Magnolia spun around and quickly unbuttoned my shirt and pulled it off. As the song was ending she unzipped my pants and pulled them off leaving me in my boxer briefs. \n\n\"Ok everyone. Calm down. We have one more song for this challenge. Let me get it set up, and then let's see how badly we can tease these boys,\" announced Laura. She fiddled with her phone, and a short while later Wild Thing by Tone Loc began to blare out. Magnolia smiled at me seductively, then pulled my legs so my butt scooted down lower on the couch, then pushed my legs apart by standing between them. \n\nAs the first lyrics popped out, Magnolia began to softly shake her hips to the beat. She puckered her lips, and blew me a kiss. Then turned around, gently shook her fine ass and slowly bent over at the waist stopping when her back was close to a 45 degree angle. She turned her head, looking directly into my eyes, then placed her fingers to her mouth. A slow kiss was planted on her outstretched fingers and brought slowly to her ass, which then began to bump to the bass. While bumping she continued to bend over until her face was close to her ankles. \n\nHer perfect teardrop ass was now deliciously displayed. Bent over, the top of her cheeks resembled a heart, but in the middle of this heart was a swollen pink moist pussy. One of her hands slid up her legs, then delicately opened her inner lips to expose her privates. My cock was rock hard now. Magnolia then scooted back until her legs were touching mine, and bent her knees to lower her naked ass to the bulge in my briefs and just as Tone Loc began singing out \"let's do the wild thing\" she began rubbing her ass and pussy up and down my shaft. \n\nShe kept this up for a few seconds before sitting fully on my lap, pulling her legs back, and then falling forward at the waist and catching herself with her hands. This positioned her so she was laying stomach down on my lap, with her crotch directly on top of my dick, while her legs were spread about my waist. She slowly began to hump my bulge. My resistance was gone, and her touching request from earlier was bouncing around hard in my head. I brought my right hand forward and slowly slid it up her thigh to cup her ass. I squeezed gently, not wanting in any way to alter its perfectness. \n\nAs Magnolia continue to hump, I slid my hand down her ass and used my thumb to rub the entrance of her pussy. I was surprised how much her wetness had increased. My thumb parted her lips and entered her. After I played with her vagina for a bit, she withdrew my hand and switched positions. \n\nThis time she straddled my thigh and blatantly began to grind her clit up and down it. As she did this she teased her nipples alternatingly across my lips while staring into my eyes. I was in heaven. A perfectly formed blonde, with light blue eyes sitting naked on my lap and who a few minutes ago told me I could do anything with her. My mind was exploding with ideas, but I hadn't completely tossed caution to the dogs. \n\nShe again readjusted, this time wrapping her legs around my waist while continue to tease my lips with her nipples. I opened my mouth and took one in, first sucking firmly on it then biting down moderately hard. \n\nIt drew a response. Magnolia cried out, \"Oh fuck. So horny. Let me, let me make it better.\" She took her hand and pushed down my briefs so the elastic waist band was now under my exposed cock and balls. Then she pulled herself closer so that her clit was directly rubbing against my shaft and began to masturbate using my dick as her tool. \n\nAs she humped against my dick we kissed furiously, but after a bit she pulled away and hung her head against my shoulder. Her moaning was almost nonstop as the thrust and frequency of her humping increased. Less than a minute later, she announced, \"I'm going to cum. Hold me tight.\" Her body was now desperately jack hammering against me. A few seconds later, she exploded. Muttering out, \"Oh, ooohhh, awhooh, I'm I'm cumming. Ohhh owhhh.\" As her orgasm was subsiding, I cupped her ass with both hands, pulled her up a bit so the tip of my dick was at her entrance then slammed her back down fully penetrating her. \n\nShe responded by slowly starting to fuck me. \"Shit I wanted this an hour ago. You feel so good. Ahohhh. Huh. I don't want to stop. Please, oh, oh, oh please keep fucking me. Do anything. Oh shit,\" Magnolia pleaded. \n\nThere was a reason for this. The Wild Thing song had just ended. I looked about and the other dancers hadn't quite taken things to this level. However, Jake's cock was also pulled out and Ms. No Sex Allison was sucking away on his cock, but stopped when the song ended. The other ladies were wrapped about their dudes, but hadn't quite taken to our level. \n\nWhen the song ended I pulled Magnolia up, and lifted her off my dick, then casually pulled my briefs back up. \"Ohh, shit. Your kidding me right?\" was Magnolia's response, but she was quickly drowned out. \n\n\"Whew, now that was hot. Lets get a refresher drink, let everyone readjust and then finish the last challenge,\" instructed Allison. Collectively, there were moans from the group, but the couples began to untangle and get to their feet. \n\nI lifted Magnolia from my lap, sat her next to me, and then stood up. My erection was easily visible, but all of the other gentlemen sported similar bulges. Turning around I extended my hands to Magnolia, and pulled her up once she grabbed a hold. Standing toe to toe, I whispered to her, \"During the next challenge you'll get exactly what you want, and maybe more.\" Then turned and followed Allison's tight firm ass to the kitchen. \n\n\"Let me pull out some chilled Rose for all of us to enjoy, and there is a restroom down the haul to the left and two upstairs,\" Allison advised. Then she went to the frig to retrieve the Rose. As she did this, Jenn headed for the lower restroom, while Jack and Jewel headed upstairs with me directly behind them. \n\nAs the three of us climbed upstairs, Jack hollered out, \"Last one up loses out.\" Then dashed off to one of the restrooms. When Jewel reached the top of the stairway she turned in the opposite direction so I presumed she knew where the second restroom was located and followed her. Sure enough, she walked right through an extra bedroom and into its own washroom. \n\nJewel automatically tried to close the door behind her, not realizing I was almost on her heels. I caught it before the door latched, and walked into the restroom with her. She seemed a bit surprised, and I couldn't help but admire her naked body. Apple sized breasts, a shaved vagina, slim waist and crazy legs. \n\n\"Are you enjoying the game?\" I asked. \n\n\"Yes, but preferred our hot tub play. It was nice how you told me what to do. I, I wouldn't have done that on my own,\" Jewel responded. \n\nMy response to her honesty was to pull out my briefs, and whip out my partial erect cock. \"I want you to suck my cock for a bit. I want you to tell me what Magnolia tastes like,\" I instructed. \"Make me hard\" \n\nJewel gracefully dropped to her knees, and literally began to gobble down my cock. Within a minute, she had me at full staff. I pulled her off, and with my finger under her chin raised her up then began to fiercely kiss her. While I hadn't tasted Magnolia, I'd smelt her scent and its soft aroma was detectable on Jewel's lips. As we kissed, I plowed my fingers into her sacred folds then pulled them out as I broke our kiss. Making a peace sign with my fingers, I placed one into her mouth and the other into mine. \n\nAfter sucking on it for a few seconds I withdrew my hand, then thought turn about would be fair play. \"Turn around, bend over on the sink, and spread your legs. Now raise your ass up by standing on your tippy toes,\" I ordered. Again, Jewel did just as I asked. \n\nShe assumed the position and raised her perfect ass upwards. The effect was impressive. Her round moons, framed her nicely opened pussy which appeared as though it was begging for my cock. I lined up my penis with her opening and thrust into her love pit. A beast long asleep emerged in the restroom, and I fucked her hard. Primally. Only for a minute, but she'd been fucked. \n\nJust as abruptly, I pulled out and turned her around. Again I raised her chin, this time so we were looking at each other eye to eye. \"During the next challenge, I want you to direct the couples towards Jenn. Help her out with the task, and when you get back downstairs offer the group to smoke another joint\" I then pulled up my briefs and walked out of the restroom to rejoin the others. \n\nWhen I returned everyone had a glass of wine in their hand and I too was given one. Its coolness felt refreshing on my lips. The group was talking about everything, but sex which seemed ironic. However, there was a high level of flirting, smiling and sexy eyes flashing back and forth. I think everyone knew where this party was headed, and perhaps it was ironic, I thought it odd sex wasn't a topic given the ladies were all naked and the men all but naked with two supporting obvious hard-ons. \n\nAllison and Laura had noticed my return and after a bit made their way to me. The two of them started to pester me with questions. \"So what exactly were the three of you doing in the hot tub?\" asked Laura. \"Seemed like Marcellus and Magnolia thought you were doing more than soaking,\" she added. \n\n\"I bet the three of them started their challenge game a bit before the others answered Allison. \"Would have been fun I bet.\" \n\nTo this they added several other questions, often with the other providing the answer. Mostly, I admired their naked bodies. Wishing I could do more, but clearly the time wasn't right. Laura's tits perfectly complimented Allison's small breasts, and ironically so did their asses which got me wondering about their love boxes. \n\nJewel came to my rescue. She'd rejoined the group, approached Allison and whispered into her ear. Allison responded to the whisper with a positive nod, smile and then asked loudly, \"Does anyone have a problem with smoking a joint? Whoever likes can take a hit, but cool if you can't or its not your thing,\" she added to cover the range of possibilities. \n\nAs Jewel light up the joint, she stood next to Jenn and offered her the second hit. Jenn took it with a smile and passed the joint along. After that I lost track of who took a puff and who didn't, but know it never made its way back to me which generated a smile. After the herb was passed about, Allison returned to my side to ask about the next challenge. Her reddening eyes evidenced that she had also enjoyed some of the pot. \n\nShe nuzzled up against me so that her nipple was pressing into my arm, and continued her questions. \"What's the next challenge sexy?\" she inquired. Her later comment caught me off guard, but cute and given everyone's state of undress appropriate. \n\n\"Its pretty simple as one of the other couples stole our first idea. A tantric massage. The lady just lays down on the couch, eyes closed via blindfold and the partner caresses her body with just finger tips, first all over, and then sexually, but always trying to surprise their partner where the fingers are going to land next,\" I answered. To complete the explanation, I teased the base of her neck with the fingers of my left hand, and while doing this used my right hand fingers to gently touch one of her nipples. \n\nAllison's response was to jump a bit, then she pushed her mound against my thigh. With her privates gutting against my thigh, she announced to the group, \"Time for the next challenge people and Jack's going to announce it,\" Allison lectured. So I repeated my explanation to the group, but with greater detail. I could tell people were unsure, but knew this would be a hit from past experiences. \n\nAllison let the group know it was time for the final challenge. She slowly scooted the group back to the couches after putting some soft music on the stereo, gathering a few bottles of massage oil and rounding up items we could use as blindfolds. Allison distributed the blindfolds and oil, then the ladies tied them on, except for Jewel who assisted Laura with hers. I smiled at how worked up Laura would soon be. \n\nWhile Magnolia was tying her blind fold on she asked, \"Why did you leave my side? I thought you were going to switch partners.\" \n\n\"No worry about that my sexy one. I wanted a little break as otherwise I'd be the one minute wonder. You got me pretty hot. And now its time to turn the tables. Lay down and relax.\" With that I guided her down to the sofa, kneeled beside her and began to coat her top side with massage oil after warming it in my palms. I was careful to avoid her vagina, but did generously coat her tits. \n\nI started by letting my finger tips dance ever so slightly on her body. Each hand doing something different, and then jumping to another spot of her body. Sometimes working together, but other times separately. The touch was very feint, yet slow enough to avoid tickling the recipient. After five minutes of this I could visibly see Magnolia's body relax and her breathing slow. I continued at this pace for another few minutes, knowing that much more and I might touch her to sleep. \n\nMy next move was to twirl my fingers in a spiral around her breast, but purposefully stop just before contacting her nipple. The focus of my massage had shifted to quasi-erotic zones. Her neck, the inside of her wrists, her feet, inner thighs and her hip area. After this I grabbed one of her legs and spread it wide so I'd have full access to her vagina then continued my light touches, but avoiding direct contact with her pussy. \n\nNo doubt Magnolia thought I was about to lather some attention on her pussy, but alas not quite yet. Her breathing wasn't calm any longer, and each time I pulled one of my hands away she would tense a bit unsure of where it would touch down next. On their own, her nipples had turned into firm nubs and periodically I'd just barely touch them. ",
        "Her state of excitement revealed itself when I applied raindrop touches up her inner thigh, then jumped across her vagina and down the other thigh. The second time I did this, she thrust her pussy upwards as my hand went across to try and initiate some contact. It wasn't just the massage charging Magnolia up, but also the atmosphere. \n\nSome of the couples had obviously proceeded forward a bit quicker than us. Several ladies were moaning, and breathing heavily. Turning my head around I saw that Jake had several fingers buried in Allison's pussy and was using his other hand to tweak her clit. Her hands were firmly gripping the couch, hips raising upwards and it looked like she might orgasm soon. \n\nKiddie corner from us were Bob and Jenn. He too had his hands buried in her crotch, her knees were up in the air and spread apart as far as possible giving him complete access to her pussy. In addition, she was using her hand to stroke Bob's cock and it was obvious he was having trouble concentrating. I had just turned my attention back to Magnolia when I heard Jenn speak up, \"I want to have round after round of sex. Don't cum yet Bob.\" \n\nI stifled my laughter, and glanced back. She looked like a visual of the line I Want Sex. Her ass was thrusting upwards hard, and Bob's cock was now between her thick beautiful lips. She was in full on heat. I wasn't the only one to notice. Jewel had tapped the shoulders of Marcellus and Laura, whispered something to them and now the threesome were approaching Jenn and Bob. \n\nMagnolia turned her face towards me and asked, \"Are people fucking now. It sounds so hot.\" \n\n\"Let me look, I'll be right back,\" I answered. I stood, but instead of walking away positioned my hands just above her open pussy. One an inch above her clit, and the other at her entrance. I waited about 10 seconds and then attacked her vagina. Gently rocking her clit, while pushing two fingers in and out of her vagina. The attack was unsuspected. Initially, she tried to close her legs, but couldn't quite manage, and instead began to thrust upwards while pulling her thighs far apart. \n\nShe then reached up and pulled the blindfold off. \"Oh shit. I thought it was someone else, but I'm so horny I didn't care. It sounds so erotic, and smells like sex. Enough touching, I want you to come up here, kiss me and fuck me,\" Magnolia requested through staggered breaths. \n\nI continued to play with her pussy, and slowly increasing the pressure and movement of my fingers on her clit. After a bit I stopped, then asked, \"Why don't you get up on your knees. I want you to see what is taking place. Spread your knees apart and put your ass up in the air.\" As she repositioned, I discarded my briefs and knelt behind her. I teased her by rubbing the tip of my cock against her ass, then pulled back away from her while asking, \"Do you see anyone fucking?\" \n\nHer response was not heard as instead of fucking her, I flipped over onto my back and quickly put my head between her thighs and attacked her pussy with my lips and tongue. She tried to pull away briefly, but soon began to grind her pussy down towards my face. After lapping up her juices, and penetrating her opening with my tongue I shifted my focus entirely towards her clit. Teasing it with my tongue, slowly building up pressure on it and then sucking on it directly. While doing this I squeezed fingers into her opening, then massaged her G spot. It didn't take long before Magnolia was cumming on my face while squeezing my head with her thighs. After her orgasm, I lapped again at her opening to taste her and then pulled my head out from underneath her. \n\nI repositioned myself by sitting down on the couch right next to her head. Immediately, we began to kiss. Softly, slowly and deeply. When we broke the kiss, she looked at my penis staring her in the face, then bent her head down and began to blow me. She was skilled, and easily took the length of my cock down her throat. It didn't take long before I was softly humping her face, and knew this would have to stop or I'd blow my load. \n\nMy hands lifted her head upwards, loving the view of her blonde locks and blue eyes positioned just above my cock. \"Hold off, I want to cum in your pussy,\" I requested. \n\nWith a twinkle in her eye, she replied, \"The pussy on your lips doesn't taste like the juices on your cock. This is a crazy night. You're making me want things I've never thought of. Let's make us some hot love and watch this crazy show.\" I stood up, and eased her onto her back, then grabbed her ankles, pulled her legs together and pushed them far forward. This caused her swollen lips to pop out from between her legs, and also allowed me to see her face and tits. \n\nI guided my cock to her entrance and slowly eased it into her. She watched me intently, smiling the whole time. Her blond hair, blue eyes, red lips and succulent tits made her look like a centerfold. I was a fortunate man. Her pussy was well beyond lubricated, so my cock easily entered her. I started slowly, easing my cock all the way in, and then gliding it back out, admiring its shine from Magnolia's pussy juices then re-entering her until I was sunk to the hilt. \n\nMy slow sexy screw lasted a few minutes, then I spread her legs, laid down and we began to play missionaries. Our kissing was slow, tender, yet heating. \"How do you like it, slow, fast or hard. I'd like to pleasure you,\" I asked her. \n\n\"Mmmm it just feels so good right now. I finally have you in my arms and pussy. I wanted this for way too long tonight. Do you like that?\" she replied and had now wrapped her legs around my waist and was meeting each of my thrusts with one of her own. \n\n\"Who the hell wouldn't love that? But tell me what you like?\" I panted out. \n\n\"I love long slow deep fucks, and play with my ass when I cum. You're like a fuck stud. Sleeping with multiple ladies in one day. It turns me on. Pull my nipples hard,\" Magnolia requested. \n\nI'd started to fuck her harder and faster, but slowed down a bit and went back to kissing. As I did I twisted her nipples and squeezed her breasts, then replied to her allegations, \"I'm no fuck stud. More towards the opposite, however, today all 10 of my stars aligned and I'm thrilled with it.\" As I delivered the last part, I drove my cock up into her moist depths as far as possible. \n\n\"You don't get your own sex appeal. Which itself is sexy. Suck and bite my tits now. Ohh, there. So nice. Do you like fucking me? Did you like seeing this blonde suck your cock? Ohhh right there, ohh God. Mmmm. I'm might need this regularly. I want to do naughty things with you. AaOhhhh! Play with my ass. Hurry,\" Magnolia pleaded as her humping had jumped to a rabbit's pace. \n\nMy left hand firmly grabbed one of her nipples and viciously pinched on it, while with my right hand I did more than play with her ass. Instead, I swiped at some of the moisture from her pussy to moisten my finger then drove it knuckle deep into her ass. The impact was immediate. \n\n\"Ohhh. Ahhh OHHHH! Stop, ohh, stop. just a, just a Shittttt fuck,\" Magnolia hissed as her orgasm peaked. I did comply with her request, and pulled myself off of her while leaving my throbbing cock buried deep within her, then placed one hand on her pussy. \n\nI moved my thumb to her swollen exposed clit and asked, \"Do you want me to rub it?\" \n\n\"Oh, shit, please no!\" she begged. \n\nInstead, I just applied firm pressure to it with my thumb while I used two of my other fingers to insert inside her vagina along side my dick. Her face was rosy red and sweaty, while her light blues had that wild sex look. I caused me to slowly start pumping into her in unison with my fingers. \"Are you ready to fuck?\" I boldly asked. \n\n\"Please, please, give me a minute. I'm too sensitive. Let me blow you for a bit.\" \n\n\"No. I want to keep my cock in your pussy. It feels great and my cock feels like steel. I'm ready to fuck you,\" I told her. Right at this time, I looked up and around the room. \"Holy shit. Fuck Magnolia you have to see this.\" \n\nI begrudgingly pulled out, then turned her sideways facing the action and moved her upwards so her head was on the sofa arm. Then I scissored my legs between hers so that our crotches joined together and pushed my meat into her fluid rich pussy. It, the view or both caused her to forcefully moan out, \"Oh Fuck!\" \n\nMy hips began to thrust my cock deep into her sex, as I did so I suggested, \"Tell me what you see, and what's fucking hot.\" \n\n\"Your wife is getting fucked. They're all using her-Marcellus, Bob, Jewel and Laura. She's sucking Bob's cock while Marcellus is fucking her with his giant cock. Jewel's licking her clit and Laura's sucking on her tits. I think Jenn's playing with Laura's pussy too. Jesus. Fuck me now,\" Magnolia ordered. \n\nI did my best to comply. One of my hands grabbed her shoulder, while the other was placed on her opposite hip bone so I could pull her into me each time I thrust forward maximizing my penetration. My strokes were slow and deep as I wanted to put off my impending orgasm. \"What else is happening?\" I asked. \n\n\"Jake is fucking Allison doggie style and she's watching the rest fuck too. Good its hot. Your dick feels amazing. Bob and Marcellus are switching places, and, ohh shit, Laura's eating your wife's pussy. Oh, its ... ohhh,\" \n\n\"Would you like to eat Jenn's pussy after I fucked her?\" \n\n\"Yes. Yes, I want that. I want to kiss all of her lips and have you fuck the two of us. Jake just came. I can see it leaking out of Allison's pussy. Oh, jesus, I just don't want this to stop. Use me, use me hard,\" Magnolia pleaded. I pulled my hand off her hip and this time forced three fingers into her pulsating cunt, and began to rub her clit with my thumb. \"Oh fuck. I'm gonna cum again. Stuff, ohh, stuff. Nooo!!,\" she screamed. \n\nI'd pulled my cock and fingers out of her leaving her pussy gapping open. \"Should I fuck your ass?\" I asked. \n\n\"Yes, but not now. My pussy please,\" she begged. She then pushed down off the arm, grabbed my cock and succeeded in getting it half way into her. \n\nI too was ready. My hips fired on autopilot and I fucked her hard. Shoving my cock as deep into her sex box as possible, then reloading. The sounds of the others fully engaged in their own sexual passions added to my high. Stretching her pussy wide, I managed to place three fingers into her opening and used them to massage the base of my cock. This reduced Magnolia to emitting a constant series of moans and ahs. \n\nLooking down, Magnolia's body was on fire and her eyes desperate for further release. This was the last mental straw I didn't last long. When I came my thumb twirled about her clit sending both of us beyond the edge and into full release. Blast after blast of my semen soaked her pussy. Afterwards, we lay together in a sweat soaked pile, smiling and gently kissing one another. \n\n\"Holy shit! Are you trying to kill me?\" I jokingly asked. \n\n\"Wow. That was so intense. Oh my God I can't remember the last time I came like that,\" Magnolia shot back. \n\nAfter five minutes we reposition our bodies so we could watch the others. I sat with my back against the far arm of the couch, while Magnolia parked herself between my legs and leaned back against my chest. \n\nJake sat on the sofa formerly occupied by Jewel and crew watching the Jenn show. While Allison was on the sofa across from us, also being entertained by Jenn, but she had a hand between her legs and was working herself up. On the main stage, Bob was fucking Jenn, while Laura had straddled her face and was busy trying to deep throat Marcellus. Jewel was doing her best to tease Jenn's clit whenever Bob pulled back from her pussy. It was a full on orgy. \n\nAllison noticed we were relaxing and popped over to the end of our sofa by Magnolia's feet. \"I never dreamed anything like this would happen, but I have to admit its hot as hell,\" Allison communicated to us. \"Its like someone spiked the air with sex. You two looked so into each other when fucking,\" she added. Her fingers were lightly teasing her clit. Her focus was on Jenn &amp; Co., but she kept glancing at Magnolia and her exposed pussy. \n\nThe group event taking place was a drug. Bob had pulled out of Jenn and was now screwing Laura who was laying next to Jenn. The two ladies were making out, while Marcellus was now ramming his massive cock deep into Jenn's folds. Jewel was playing with the ladies breasts, while her hand was vigorously loving her pussy. My cock wasn't entirely desensitized from Magnolia's use of it, and the fact that her butt cheeks kept rubbing up against it didn't help matters, but even with the V on board I was drained, but also knew the V would enable me to get hard again. \n\nMagnolia had pulled her knees up to give Allison more room, but kept her legs open for the viewing pleasure. This passive gesture wasn't passed on Allison, and she laid down on her stomach with her heads between Magnolia's thighs. My hands were wrapped around Magnolia's chest holding her tits and I could feel an increase in her breathing. When Magnolia didn't react, Allison took one hand and began to play with Magnolia's outer pussy, while her other hand appeared to be between her own legs. \n\nAfter teasing her, Allison softly pushed a finger into her pussy. A minute later a second finger was added, and Allison buried her head further between Magnolia's thighs so she could lick her pussy. Magnolia responded with a soft \"Mmmm.\" \n\nAllison knew what she was doing as Magnolia's mmm's and ohh's grew in frequency, and she'd began to push her mound up towards Allison's tongue. It was obvious Magnolia was enjoying the attention, then abruptly pushed Allison's head back stating, \"Please stop. I have to pee so bad. Let me go freshen up and I'll return to let you finish.\" \n\nFunny, as I was also dying to urinate. \"Our bladders must be on the same timing device as I have to go pee like race horse,\" I announced just after Magnolia stood up. \n\n\"Can you two do me a favor?\" asked Allison. \n\nI was a bit surprised, but had no problems assisting a host. \"Anything for you, what is it,\" I replied. \n\n\"Can you two use the restroom in our master bedroom upstairs? Then on your way back, please get the silver silk bag in the pedestal to the left of the bed. There are some toys in their I think we all might enjoy,\" requested Allison. \n\nI smiled fat and while bounding up the stairs replied, \"Excellent idea!\" \n\nMagnolia released her bladder, and wasn't shy about leaving the restroom door wide open while I searched for the silver toy bag. The sound of Magnolia's release was driving me crazy to relieve myself, but I was soon distracted. Inside the pedestal were two bags. One silver and one gold. I pulled out the silver bag and inside were several pink vibrators, a small butt plug with a jewel on the end and a couple of silicon dildos. Naturally, I also had to inspect the gold bag as it was much larger. \n\nIt too contained toys, but a little different. A very large black dildo, a strap on and two big butt plugs. In addition, there were some fierce looking nipple clamps, half melted candles, hand-cuffs, rope and a ball gag. I laughed out loud. Apparently, Bob and Allison had much more sexual fun and variety than I ever imagined. \n\nMagnolia was entering the room and busted me inspecting the gold bag contents then asked, \"What are you laughing about?\" \n\n\"Here, look at the silver bag goodies, and then look in the gold bag. Then you tell me what I was laughing about,\" I answered. \n\nWhen I returned from the Lou, Magnolia had dumped the contents of the gold bag on the bed, and had a Holy Shit look on her face. \"I would never have guessed in a million years Bob or Allison would have anything like this in their bedroom. Especially, the gag and hand-cuffs. And who the hell would ever enjoy such a massive toy. That would never fit in me!\" she stated emphatically. \n\n\"Its not like Marcellus has a small cock, and you sure seemed to enjoy the attention of my cock and fingers inside you,\" I retorted. \n\n\"There is no way,\" Magnolia replied while shaking her head. \n\n\"Have you played much with toys?\" I followed up. \n\n\"Not really,\" she answered. \"Grew up being preached to that sex was bad, and only the deviant had such toys or watched porn.\" \n\n\"What about a vibrator?\" \n\n\"Nope,\" Magnolia answered looked a tad embarrassed. \n\n\"And look at you now. Come here and lay down. I'm going to give you a quick lesson before we go back down.\" \n\n\"Just be quick. I don't want to be gone for too long,\" Magnolia stated as she laid back down on the bed with her legs already spread. I grabbed one of the pink vibrators, then laid down next to her. I tilted her face towards mine and we kissed deeply for a bit. \n\n\"Did you like what you saw downstairs?\" I asked. \n\nShe responded with a quick yes, then drew me in for additional kissing. While kissing, I turned on the vibrator and began to rub its tip up and down her opening. After a bit, I moved it towards her clit and gave her a blast of its vibrations before pushing into her cum soaked pussy. It entered her easily. After a few strokes I withdrew it and rubbed circles around her sensitive nub. She responded quickly. \n\n\"Ohh, fuck. That feels good. Shit, I could come again,\" she panted out. \n\n\"Here, hold it and play with it against your clit. I want to finger your pussy. It's getting so wet. Its a real turn on when a pussy is soaked,\" I whispered into her ear then handed her the vibrator. \n\nShe took the toy and greedily began to rub its head up and down the sides of her clit. I stuffed three fingers into her and then squeezed a fourth one in, moving my hand back and forth, giving her a slow fuck. While doing this I added, \"I think Allison wants to lick your pussy while using the vibrator on you so she can taste your cum.\" \n\n\"Mmm ohhh, I'm oh, I, ah-oh oh, I'd never had a lady, ah, lady kiss my pussy before,\" Magnolia informed me. I had to admit I was surprised. \n\n\"I'm going to get you totally soaked, then deliver you back to her so she can eat you out. Do you want that?\" I asked. \n\n\"Yes! Ohh, gawd, can you fuck me while, ahh ohh, I vibrate. Then she can lick and suck my cunt all she wants,\" Magnolia answered. \n\n\"You want me to fuck your cunt?\" As I asked this as I pushed my fingers all into her, stretching her wide. \n\n\"Yes, oh shit, yes,\" she answered. \"Fuck, oh shit, this is intense. I, I, can feel one. God. It's ...\" \n\nI pulled my hand out and grabbed the giant dildo. It had to be twelve inches long and wider than a coke can. I pushed the head into her opening. Magnolia had pulled the vibrator away from her clit and with the other hand was grabbing the dildo. \"Its too, ohh, oh, oh big,\" she pled. But instead of pulling it away she began to help me guide it deeper into her. \"Oh, fuck, fuck, stop, oh oh, more. Oh shit its good.\" \n\n\"Keep the vibrator on your clit. We need to get you wet,\" I instructed her. She laid her head back, and opened her legs wider to give me better access. When I had about six inches inside her, I began to pull the toy out and then slowly back in. It didn't take long before her pussy was gobbling up nine to ten inches of the toy while she furiously diddled her clit and raised her ass up to get even more of the toy inside her. \n\nHer moans become constant and then turned to a squeal. I knew she was close so yanked the dildo out of her opening and pulled the vibrator from her hand. \"Lets finish this downstairs,\" I told her. \n\n\"What the fuck?\" was her response. \"I was going to fucking cum.\" \n\n\"I know. You will, and in Allison's mouth,\" I stated and than grabbed her hand and pulled her upright. She was in a haze. Mad, desperate and horny as fuck. I put the vibrator back in the silver bag and grabbed a few items from the gold bag, but left the giant dildo on the bed. Bob and Allison would get a laugh I was sure, and possibly the toys left behind might get some additional use. ",
        "Holding Magnolia's hand I walked her out of the bedroom and to the top of the stairs landing, where she purposefully stopped. Looking me directly in the eyes, and placing her hand on my cock, she asked, \"You've gotten hard again. Why don't we go back and just you can fuck me. The big cock. You could put it back in my cunt, and use this on my ass. I want you to fuck me that way. Ok?\" \n\n\"Don't give me such wonderful ideas. I'd love to fuck you that way, but it would be rude to the rest of the party. Look, Allison is waiting to make you cum,\" I replied. Then without giving her a chance to answer walked her down the stairs and delivered her to Allison. \n\n\"That was a long pee. You two have missed quite a show and I am horny. What took you so long, and sit your ass down here beautiful lady,\" Allison commanded. Magnolia complied by sitting down on the sofa, leaning back and pushing her knees far apart. Her pussy opened on its own, with sex fluid running down from her vagina to her ass. Allison was quick to get down on her knees in front of Magnolia. \n\n\"So what fireworks did we miss? Didn't seem like we were gone more than five minutes,\" I asked. \n\n\"Your wife is putting on quite a show, and making me horny as hell. Bob got too excited and didn't last long. Afterwards, Laura cleaned your wife up and made her come so hard I thought she was going to pass out. Then Marcellus gave her a royal screwing. He took her in all types of positions, and Jenn keep asking him to fuck her harder. Everyone in the room got quiet and was fixed on them. He eventually came and Laura again feasted on your lovely wife's pussy. All that loving and sex got Jake worked up. When Marcellus was done, Jenn looked right at him and asked if anyone else wanted to fuck. And as you can see he took her up on the offer,\" Allison answered. She then turned her head back and attacked Magnolia's open vagina. \n\nAllison's brief description of the events we missed made me realize Magnolia and I were probably gone for a bit more than five minutes and, more importantly, got my cock re-hardened. A few times each year, Jenn would get super horny and I'd always teased her that she appeared insatiable and how it would be convenient to have a group there ready to sex her up. Finally, the timing of her urge and group presence coincided perfectly. \n\nJust fifteen feet to my side, Jake was fucking Jenn as deep as possible, while Jenn was encouraging him on with naughty talk and how she wanted more. Laura was alternately kissing Jenn and Jake. While Marcellus and Jewel sat on the opposite couch mesmerized by the Jenn orgy, and had one another's hands on the opposite members sex. The air was thick with sex. \n\nIn front of me, Allison was diving her tongue deep into Magnolia's snatch and now had a vibrator she was alternately using to fuck and tickle Magnolia's pussy. Magnolia had now too started talking dirty. Requesting Allison to push her tongue deeper into her pussy. She'd kept pushing her pussy forward into Allison's face, and ultimately slid off the sofa. Her ass was now on the floor, with her back against the couch, and she had her hands behind her knees to pull back her legs and expose her sex. \n\nAllison remained on her knees, but her head was now a foot lower than her bottom as she ate away at Magnolia's sloppy opening. The result was her tight little delicioius ass was propped up in the air, and the tilt of her spine caused her ass and pussy to pop out like an early morning blossoming flower. My cock was salivating at the view. I discretely grabbed the silver toy bag and pulled out the jeweled butt plug, then placed myself directly behind Allison's upturned ass. \n\nI bent my knees sideways, then took my cock head and rubbed it up and down Allison's slit. She pulled away from Magnolia's pussy just long enough to mutter a simple \"yes\" so I drove my cock straight into her tiny vagina. With my knees bent, and her ass tilted upwards, I was easily able to achieve full penetration. It was beyond erotic to witness my cock sliding in and out of Allison's love hole, while she dove, with gusto, into Magnolia's pussy. \n\nIn this position, with Allison's small build, I routinely bottomed out adding to my pleasure. I'd set the plug down next to me and was able to easily retrieve it. Briefly, I pulled out of Allison's pussy and replaced my dick with the plug to get it lubricated. Once done, I stuffed my cock back into her, and used my thumb to massage her rosebud until it was suitable relaxed. \n\nSlowly, I twisted the three inch plug into Allison's ass. The anal penetration caused her to stop lapping Magnolia's pussy and instead a low moan uttered from her mouth. \n\n\"Ahh, That's nice. Now put your cock in me. There, yes, like that.\" \n\nOnce the jeweled stub was in place, I resumed my slow fuck of Allison. The combination had an obvious impact. She had difficulty giving her undivided attention to Magnolia's pussy. Her focus became unfocused and Magnolia took note. It didn't help when I reached my hand around her waist and began to rub her clit vigorously. \n\n\"Oh fuck. Ahh, ahhhh. Fuck that feels good,\" stammered out Allison. \"Pull it out of my ass and put it in again then fuck me harder.\" \n\nI did as she requested. Her explicit fucking requests were erotic alone and caused my cock to swell larger. Less than a minute of hard pounding and she erupted into a powerful orgasm. \n\n\"Oh, God, oh god. I love it. One more, ahh oh fuck, oh fuuckkk yes. Oh shit ohhhh,\" Allison came. \n\nIt happened so quickly it caught both Magnolia and I off guard. Allison collapsed into a quacking pile, then rolled over onto her back trying to catch her breath. This left me standing with a tent pole and five feet away Magnolia who was sitting spread eagled with her pussy gapping open. In addition, our trio had captured the attention of Jewel who was now sitting on the sofa besides Magnolia. Our surprise may have froze Magnolia and I, but not Jewel. She slipped off the couch and straddled Magnolia. Instantly the two began to make out. \n\nThis lasted for about a minute, when Jewel pulled back, stood and then put her pussy directly atop Magnolia's lips. Based on our prior words, I was pretty sure Magnolia had never tasted nectar from the golden fruit. She licked in with gusty. First exploring Jewel's sweet folds, then concentrating on her clit while her fingers explored Jewel's pussy. After a minute of oral fun, Jewel plopped back down on Magnolia and resumed their kissing. \n\nWith Jewel straddling Magnolia, and Magnolia's spread legs, both of their pussies were visible and available. I looked over to the other pile of action and saw that Jake looked like he was ready to explode, while Laura and Jenn were locked in a fierce kissing dual. This would be a night to remember forever. \n\nI decided to have a little more fun, so kneeled in front of Magnolia's spread legs and easily drove my meat into her depths. As I worked my cock in and out of her sweet moisture I used my fingers to explore Jewel's wet folds. There was no doubt she was sexcited by the night. Her pussy was drenched. The slipperiness usually associated with moisture inside a ladies pussy now coated her inner thighs. \n\nUsing my hands, I pulled Magnolia back so her head was on the floor and repositioned Jewel so her pussy was directly atop Magnolia's gap. The girls didn't objection and barely paused their make out session. I'd no doubt they both knew my intent. Positioning myself between the girls open thighs I placed the tip of my cock at Jewel's lips and eased it into her. Her sole response was to start slowly thrusting her mound against Magnolia's. \n\nThis captured my attention and made me aware of the rareness of being able to explore two fine fine vaginas. I pulled my dick out, and eased two fingers into both of their pussies. And with my fingers I explored. Both of their pussies were vaginas, yet they were so different. Their lubrications were different, not to mention their tightness, length of opening, ridge crests on the top of their vagina and depth. Magnolia's wasn't as tight, but her cervix was easily felt and her vagina seemed to keep its tightness well back into her opening. In contrast, Jewel's pussy was little, tight, and deep. However, once my fingers squeezed through her initial opening it opened up. I concluded both pussies were made for fucking and need further exploration on later dates. \n\nAfter taking a little time to discover the unique differences between their clits I refilled Jewel's pussy. I eased my cock fully into her then delivered several slow long strokes. Then I dislodged my dick and feed it into Magnolia's gushing opening. The girls seemed to thrive on the three way fuck as they grew more and more aroused. \n\nThe noises we were making grew louder. Magnolia had managed to get both her hands down by Jewel's pussy and would guide my cock in and out of Jewel, then occasionally bark out a command, \"Go fast, pound her really hard. I'm going to really rub her clit then stop and have you do me.\" \n\n\"Bitch,\" Jewel softly replied to our treatment, yet whimpering loudly each time we turned our attention to her. \n\nWhen I stuffed my cock into Magnolia she'd attack Jewel's lips, driving her tongue deep into her mouth and thrust her pelvis up into Jewel's mound. Jewel responded by thrusting right back then grinding her clit into Magnolia's mound. As I alternated from one pussy to the next, both women were heating up, but Magnolia was particularly enjoying directing our play. \n\nAfter fucking her for a bit she'd think of a new approach to take with Jewel. \"When you fuck her next, ahh, there, I want, I want you to play with her ass. Ahh, one more, slow. Now her,\" Magnolia requested. \n\n\"Oh, god, oh ahh so nice,\" Jewel responded in a much quieter tone after I'd pulled out and rammed my manhood into Jewel's tight pussy. After a few strokes I took my left thumb and eased it deeply into Jewel's ass. It caused her to freeze momentarily, and Magnolia took advantage of the pause to firmly rub Jewel's clit and push a few fingers of her other hand into Jewel's box. \n\n\"Ahh, oh, oh, uhhh, oooooohhhhhh god.\" The additional attention sent Jewel into a series of nonstop moans. I knew she was close, so decided to give her my full attention. \n\nMagnolia also knew Jewel' orgasm was eminent. \"Do you like us fucking you babe? Do like being a toy with her holes full? Cum on his cock and my fingers. Do you hear me? Cum!,\" Magnolia barked as she pushed her fingers even deeper into Jewel. Her strategy worked. \n\n\"Oh my god, oh, oh ohhh shit!! Shit!! I'm cumming, fuck, fuck, fuck me!\" Jewel moaned out. As she did I pounded her pussy hard while using my other hand to shove all of my fingers into Magnolia's box. The combo sent her off too so I rocketed my hand in and out of her gash. Their bodies and cunts squirmed with pleasure as the electrical release rocked their cerebellums. \n\nOnce they came down, I pulled away, effectively conceding my cock wasn't capable of another release, and the V was responsible for its swollen state. Nonetheless, a fat smile was draped across my face. And I knew my dick would be beyond sore in the morning, but it would be a soreness I'd love. \n\n\"I think our game got a little out of control. Loved every minute of it and I must say Bob did an outstanding job of picking the guests,\" Allison spoke up. Hearing her voice caused me to look around, and for the first time I realized our little end romp had an audience. Jake and Marcellus each gave me a thumbs up, while Jenn was smiling away at me. \n\n\"Game? I think officially we just had an orgy,\" added Jenn. \n\n\"It was a fucking fuck show. God damn I never dreamed this would happen, much less involve me. Damn Jenn. You were hot. Redefining the term porn goddess,\" Marcellus complimented my wife. As she stood there cum was emptying out of her. Apparently, Laura hadn't fully done her job. \n\n\"This porn goddess can use my tongue any time,\" added Laura as she put her arms around Jenn. \n\n\"Well porn goddess or not, this lady is in desperate need of a shower and all by myself. I surprised myself. Allison is there a room I can use?\" asked Jenn. \n\n\"Of course. Why doesn't everyone spend the night. We have sufficient rooms with the guest house, and then we don't have to worry about driving. Think we all did consume a decent amount of alcohol and other goodies. Plus it will be good for all to check in with one another in the morning. Don't won't any awkward feelings in the morning,\" offered Allison. \n\nThe room erupted in laughter and everyone agreed to crash there. Not surprising given it was well past midnight. Jenn and I were assigned the guest house so Jenn quickly departed after hugs and kisses good night. I did notice the goodbye with Laura was longer then the others and Laura's fingers did not behave themselves. Marcellus and Magnolia were assigned the guest room upstairs, while Jake and Laura were placed in the downstairs spare bedroom. They too said good-night and left about ten minutes after Jenn departed. \n\nBob had retired earlier, so this left Allison, Jewel and I. Allison placed Jewel in the movie room in the basement on a couch and apologized for the minimal sleeping room. Jewel didn't complain a bit, and the three of us gathered some blankets and sheets to turn the couch into a bed. Allison hugged her good night, and when my turn came to say goodbye I was given a long kiss and full body contact. As the kiss ended, Jewel whispered, \"Let me know if you need anything. Anything at all.\" \n\n\"Thanks. And sweet dreams to you too,\" I replied. Allison and I then walked up to the main floor. \n\n\"What a party. Did you have fun Jack?\" \n\n\"What male in their right mind wouldn't of had fun. Shit. This was a dream come true for me.\" \n\n\"And for some others too no doubt. Its been a long time since I've had such a burning between my legs that just won't quit.\" \n\n\"I hear you. Tonight I was planning on same post-dinner fun with Jenn so took a little supplement. It kept me in the game, but I'm sure my guy will be sore tomorrow.\" \n\nAllison looked at me with a smile, then asked, \"Does it still need attention? Maybe you can temper my flames.\" She then walked over, grabbed my cock and began to little stroke it. \n\n\"Any other time and I'd be raping you if you did this to me Allison, but I can't right now and I think I need to check in on Jenn.\" \n\n\"Look your cock is saying something different. Its getting nicely firm.\" As she stated this she started to rub my cock head up and down her slickened slit. \n\n\"Rain check, please?\" I stated as I pulled myself away. She frowned playfully. \n\n\"Wait. One more thing, please Jack. Can you remove this for me?\" Allison asked and then bent over at the waist to reveal the jeweled plug still in place. \n\n\"Sure.\" As I approached she parted her legs so her sex was on full display. Red, swollen and wet. I grabbed the jeweled handle, twisted it a bit then began to pull on it. \n\n\"Wait.\" Allison then began to fuck her pussy with her hand. I was tempted and my cock was now more than firm. Fucking Viagra overdose. \"Ok now pull, please.\" \n\nI eased it out and set it down next to the silver bag. \"Sweet dreams Allison. See you in the morning.\" I then turned and exited the main house. \n\nWalking into the guest house, I was greeted by Jenn. Still naked, and busy drying herself off. \"Hey honey. You ok my wild one?\" \n\n\"Yeah. I'm good. The shower was needed. Sometimes you don't think you'd ever do something, and then you start and you just can't stop. I felt like I couldn't get enough sex and just wanted everyone to fuck me tonight. Do you think I'm a slut?\" \n\n\"No. You're my wife, the woman I love.\" I then wrapped my arms around her naked body and just held her for a few minutes. \n\n\"So your not angry with me fucking not just Bob, but Marcellus and Jake?\" \n\n\"Why would I? And don't forget Laura. And wasn't Allison involved too?\" \n\n\"Shut up.\" \n\n\"Jenn. It was sexy and erotic as hell. Remember those time when I've told you that you seem sexually insatiable. I've always wanted to see you in such a state and then get royally fucked by multiple people. I was just being honest, and now I got my wish. It turned me on much more than I thought possible, although I was a bit distracted. And how could I be angry when I was off being a slut too?\" \n\n\"Did you play anymore after I left? I'd like to think your excited to have me naked in your arms, but I noticed your hard-on was there when you walked in.\" \n\n\"Allison wanted to play, and I did pull out her jeweled butt plug, but passed. I took a little too much Viagra this evening and am paying the price. My cock is going to be sore as hell tomorrow.\" \n\nJenn started laughing, and then crying. Tears of joy. \"Oh shit. That is funny. I'd be fine if you want to go back and fuck her.\" \n\n\"I told her I'd take a rain check. I'm right where I want to be. Would you like to use my drug enhanced dick?\" \n\n\"Hell no. This vag is off limit for a few months.\" With that I put my arms around her, picked her up then laid her back on the bed with me on top. We kissed gently, but couldn't help ourselves and soon our tongues were greeting one another. Long lost friends. And as they said hello my cock just slipped into her. No doubt the abundant fluids helped. \n\n\"Hey. I said no more.\" Then she wrapped her legs around my waist, but pulled her head back and held me in place. \"Did you enjoy yourself tonight?\" \n\n\"Yes. It was fun. Would be great to repeat, but you're the prize. This is where I want to be every night. Except maybe not so sore\" \n\n\"Cock deep in a well fucked pussy? Is that where? Remember the times we got similarly sore? Our honeymoon, Desire, that Napa vineyard and our little vacation fuck festivals? Next day we'd just fuck away that soreness until it was gone or something like that.\" Jenn asked with laughter and then pulled me down and rolled on top of me so we remained connected. \n\n\"It is fun to fuck for fun. You trying to tell me tomorrow might bring more of the same?\" \n\n\"Who knows? Would you like that?\" \n\n\"Depends. With this crew and you? Yeah, I think I could handle that and what if it got turned up a notch. Would you like every guy here to fuck you?\" \n\n\"Maybe,\" Jenn answered, as she crammed every bit of my cock deep into her well fucked pussy. We kissed and fucked for a few minutes, then Jenn stopped her thrusting. \"Jack, before we do anything more, we need to talk. And I want this talk to take place in just this position. Listen, just listen. Please don't answer until I'm finished. Ok?\" \n\n\"Finish cumming,\" I asked goofily. \n\n\"No. I'm being serious. Please, listen.\" \n\n\"Sure,\" I answered as my heart started to worry and acid filled my stomach. \n\n\"I've cheated on you. It was not intentionally. I'd had too much wine, there was a kiss, then more kisses, touching and I just couldn't resist. I was seduced. It came unexpectedly, seemed so natural and I had to have it.\" \n\nI had to admit there was some anger, but I too had cheated so right then I knew there was no way I'd break our marriage over that, but the \"had to have it\" phrase caught my attention. \n\nThen Jenn continued, \"It gets worse. I cheated with Jewel, then thought you'd probably do the same. I was wrong. It took her much longer to seduce you. I really had to prime her on how to tease you, and what to wear. Actually, it was fun. Naughty fun.\" \n\nNow she had my attention. \"You had Jewel fuck me. On purpose?\" Now I was getting a bit angry. I'd been had? \n\n\"Yes, on purpose, but she wanted you. She wants us!\" This last bit was followed by a chunk of silence, as my dick slipped out of Jenn's pussy. \n\n\"What do you mean us?\" \n\n\"She probably needs to explain. There is a reason she's here alone. Her 'loving' husband left her for a guy and filed for divorce a couple of months ago. Since then she has done an unhealthy amount of reflecting. About marriage, relationships, same sex relationships and life. She came to me for advice, told me how she really admired the both of us and thought we were both sexy as hell. After two bottles of wine, we hugged and were going to kiss goodbye, but it turned into a bit more. An all out make out session.\" ",
        "\"Did you have sex?\" I meekly asked. \n\n\"Not that night, but it did get me really wet and horny. You were out of town, so I used my toy and masturbated half the night. Voyage one on getting my pussy so sore due to another woman. Two nights later we met at her place and after being their for less than five minutes our clothes came off. We ravaged each other's bodies. Our conversations also grew deeper, but there was no way I was going to leave you.\" \n\n\"Jewel asked you to leave me,\" I stated incredibly. \n\n\"No! She thinks her God, a female, made you and I for each other, but she did admit to having the hots for you for years. She did ask to join us. Well more like become our roommate. I didn't know how to tell you, and I thought the idea of her seducing you was erotic as hell. I tried to get her to videotape it, but she refused. So I told her that I'd ask you about such a possibility after she fucked you. And now that has happened, so I've got a question for you.\" \n\n\"Wait, wait, wait. You wanted her to seduce me because she seduced you?\" \n\n\"Not really. Maybe partially. I don't know. Mostly, I wanted to know she could get to you, and I wanted to be able to suck your dick and taste her pussy on it. My sexuality didn't check in with my brain. I never meant to hurt you in any way. If you had totally refused her advances, I also thought there was a good chance you'd never agree to having her as our roommate. It's complicated, but I love you and am crazily in love with you.\" \n\n\"I take it you want her to be our roommate?\" I asked and as I did so flipped Jenn off of me onto her back, then rolled on top of her. \n\n\"Only if you are more than fine with it.\" \n\n\"I'm assuming that we'd be more than roommates. She'd be fucking you, and I'd be fucking both of you?\" \n\n\"If you'd like that.\" \n\n\"What do you think Jewel thought about tonight?\" I asked. \n\n\"We didn't talk about it, but judging from how wet she was I think she was really turned on. She wants us to tell her how to please us. Turns out the big boss lady is a true submissive.\" \n\n\"Do you like telling her what to do?\" \n\n\"Yes. It turns me on,\" Jenn answered. \n\n\"Me too. Do you think she liked seeing you get fucked multiple times by multiple guys and women?\" As I asked this, my dick's hardness began to return. \n\n\"I think so,\" Jenn answered. \n\n\"You like being a slut?\" \n\n\"Yes! I couldn't believe it. I would have fucked everyone there if I'd had it my way even though my pussy is so so sore.\" \n\n\"You want more people to fuck your cunt?\" \n\n\"Yessss,\" Jenn purred and began to thrust up against my growing shaft. \n\n\"You want me to fuck you right now don't you?\" \n\n\"Please\" she responded and with her hips and pussy she was trying to get my cock to enter her. I weakened and slid my cock in. She vigorously began to nurse it back to life while sucking on my tongue like it was another dick. Then I had a thought. \n\n\"Wait, stop.\" I pulled out and stood up, much to Jenn's shock. \"I'm going to get our roomie. She shouldn't be sleeping by herself on a made up couch. She should be naked in our bed, available for us. I'll be right back.\" I then marched right out, back into the house and down to the movie room. \n\nJewel was fast asleep, but woke up fast when I pulled the covers back and pushed a finger into her. When her eyes recognized me, she asked \"You want me?\" \n\n\"Yes. Our companion should be sleeping with us, not by herself. Let's go.\" I grabbed her hand and walked her up, out and into the guest house. \n\nWhen I walked in Jenn was laying naked on the bed. \"Jewel, I want you to kiss my wife with passion, then suck her tits with even more passion and finally eat her out. I'm going to fuck you while you screw her.\" Without any hesitation Jewel laid on top of Jenn and the two began to kiss. I watched. Thousands of thoughts racing through my head. This was crazy. My dick disagreed. It raged. \n\nWhen Jewel had my wife's legs parted and was licking and sucking away at her mound, I slid my meat into her pussy. I began to fuck away. This was not going to be a gentle fuck. She had difficulty keeping her mouth to Jenn's pussy, but did her best. My cock seemed almost numb from the thoughts and feelings racing through my body, but it didn't last long. \n\n\"Jewel, I want you to fuck my wife's cunt with your hand. Put your whole hand in that pussy. All that fucking she did should make it easy for you.\" \n\nThis caught Jenn's attention as her eyes shoot open fully. Jewel pulled her sweet little mouth away, narrowed her fingers into a tight cluster and began squeezing them into my wife's hot pussy. It must have been a combination of pleasure and pain, as once her hand was half way in Jenn's head tilted backwards and she was moaning nonstop. Jewel's hand was coated in fluids and I think she was getting off on it. \n\nIt didn't take long until her entire hand was pushed up wrist deep into Jenn's vagina. She then began to pump it back and forth, eliciting shrieks and moans from Jenn. As her pace quickened, I pulled my cock out and lined up the head of my cock with Jewel's sphincter and pushed it into her ass. I was gentle for the first strokes then began to give her ass a good fucking. Jewel was now moaning much lower than before. \n\nI began to sweat, and realized maybe I could cum again. \"Jewel suck on her clit too,\" I barked out. Jewel did just as I asked, so for her reward I filed her pussy with my thumb and used my index finger to giver her clit a workout. Thirty seconds later Jenn screamed out she was cumming. Jewel and I were seconds behind her, and then we were a pile of collapsed bodies. \n\nAfter catching our breaths, I was the first to speak. \"I have to shower, and get to sleep. What a crazy day. Jewel, in our bed you will always sleep naked and do not say no to either of us. If I wake up with a hard-on, and want to fuck you, then I will. Understand?\" \n\n\"Yes. And thank you, the both of you for inviting me to your bed,\" Jewel answered. \n\nWhen I returned from my shower Jenn was already asleep. I had Jewel move over, then crawled between the naked ladies and spooned Jewel so my dick was pressed up against her firm just fucked ass. \"I think this might work out between the three of us, but I suspect you will be getting fucked more than you thought possible. Good night my little hottie.\" \n\n\"Good night.\""
    ],
    "authorname": "wetwordmixer",
    "tags": [
        "group sex",
        "lesbian",
        "oral sex",
        "anal sex",
        "threesome",
        "orgy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-submissive-lady-joins-a-couple"
}