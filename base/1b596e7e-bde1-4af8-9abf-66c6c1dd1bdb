{
    "title": "Saturday Night School Ch. 11",
    "pages": [
        "Charlie Tucker slouched down in his seat at the back of the movie theater, pulling his baseball cap down to obscure his face. He couldn't see them yet but he could hear them, talking loudly as they walked through the hallway that led into the theater. In particular, he could pick out Michelle's laugh. He knew that laugh well.\n\nThe theater was mostly empty, since the movie they were coming to see was on its fourth week of release. Charlie was by himself in the last row. In fact, he hadn't seen anyone come in and sit in any of the last five rows. The theater was angled downwards and the seat backs were high enough that he couldn't really be sure where the nearest person was. His seat, in a niche to the left of the aisle, allowed him to view anyone entering the theater. The entrance opened onto a walkway that crossed through the middle of the theater, with patrons having the option to go up the stairs to the upper levels of seating, or down to the lower levels.\n\nCody appeared in the entrance first, with Ryan appearing a moment later. Cody looked at the seats, quickly glancing upward without coming close to looking towards Charlie's seat, then turning his head to look towards the lower levels. He was clearly more interested in the lower seating, closer to the screen. He pointed at a row and Ryan nodded in agreement. They walked down the stairs.\n\nThe rest of them followed. Vampire Vanessa. Blonde Sandy and brown-haired Tina. And then Michelle. Michelle was wearing her green jacket and a pair of tight blue jeans. She was saying something to Tina. Charlie shrank down in his seat and his fingers scratched at his chin through his thick beard. He imagined Michelle, sensing his eyes on her, abruptly turning and looking up in his direction. Searching him out, finding him in his hiding spot in the back of the theater. Would she even recognize him the way he looked now? Or would she just see a ragged man in disheveled clothing and an old baseball cap, face obscured by a scraggly beard, someone unworthy of notice?\n\nThe last person to enter was Glenn Mack. Charlie watched as Michelle turned, smiling, and said something to Glenn, something too far away to overhear. Glenn Mack. How could it have been, Charlie mused, that he had once thought Glenn Mack was a nice guy? Now, looking down at him, Charlie could think of no one that he hated more.\n\nHe watched Michelle, walking with Glenn, bringing up the tail end of their pack of friends. All of them turned, one by one, to go down the same row, with Michelle and Glenn the last two. Charlie could see just their heads over the tall seat backs as they walked towards the center of the row. He picked out Michelle's black hair and watched her intently to see where she sat. The seating arrangement required some discussion, apparently, and Charlie watched the heads moving back and forth, appearing and disappearing, as seats were shifted. He didn't care where the rest of them sat. He just wanted to see where Michelle ended up.\n\nShe settled in the center of the group, and his spirits plunged as he watched Glenn take the seat next to her. He couldn't see either of them after they sat, but still his eyes remained on those two seats. He felt desperate to know what Michelle and Glenn were doing.\n\nAn hour and fifty-five minutes. That was how long the movie was. That was how long he would have to sit there, in the darkness, looking down at the spot where Michelle and Glenn sat together, wondering how things could have gone so wrong.\n\n****\n\nMaybe Charlie should have sensed something was amiss on the Sunday when he and Michelle went out to celebrate his acceptance into Jefferson University's Apex film program. He wanted to take Michelle out to brunch and intended to pay the check, but she insisted that it would be her treat. After all, she said, they were celebrating his accomplishment, so why would he be the one to pay? He tried to argue but she wouldn't budge.\n\nOkay, Charlie finally relented. She could pay, but he would drive.\n\nDeal, she said.\n\nHe could have told her that she didn't need to do anything more for him because she had already done so much the night before. Walking naked through the Macy's parking lot, just so he could gaze at her nude body in the glow of the street lights. Pulling him onto her as she lay naked on the hood of her car, making love to him under the night sky. She had given herself to him, unconditionally and completely, where anyone could see, all to fulfill his lurid fantasy; how could he ask for more from her?\n\nHe could have said that, but he found himself reluctant to speak of what they had done the night before. It was starting to seem like a dream in his mind, a memory too incredible to be real. Perhaps he and Michelle had put on masks that night, assumed roles; her the angel, himself the devil, coming together, making love, then fleeing before anyone saw them. She had said it was too much, too risky, she had said she wouldn't do it but Charlie had gone to that parking lot anyway and waited for her, knowing she would be there eventually. He knew she wouldn't be able to resist. The risk made it even more irresistible to her.\n\nMichelle was also reluctant to talk about what they had done. She didn't bring it up, either.\n\nHe picked her up at a juice bar on the west side of Pine Hills. She said it was within walking distance of her house. When he saw her, she was wearing a tank top and a tight pair of black shorts, and when she sat in his car he couldn't help but look down and admire her long legs.\n\nMichelle wanted to go to a place about five miles west of Pine Hills, a place called Nora's Nook. \"You've never been to Nora's?\" She grinned at him. \"You'll like it. They have the best pancakes!\"\n\nShe was right. The pancakes were very good.\n\nMostly, he just liked being with her. He liked looking across the table and seeing her face looking back at him. He snuck peeks at her, watching her as she did things. Sipping her orange juice. Taking a bite of pancake. Spreading grape jam on her toast. He wanted to remember the way she did everything.\n\nHe liked talking to her, the sound of her voice. He felt like they had reached a level of comfort between them where the conversation took very little effort. She seemed interested in what he was saying, and he loved the moments when he could make her laugh. He loved the sound of her laugh.\n\nHe had such a good time with Michelle that it wasn't until later that evening that he realized their brunch date had followed a similar pattern as their previous dates. He always met her somewhere other than her house, they always went somewhere out of town, and afterwards, he always dropped her off somewhere other than her house. In this case, back to the juice bar. The juice bar that she said was close to her house.\n\nA very nice date. But he wondered if it had been a secret date. Did her parents know she had been out with him? Did anyone else know? Did Michelle take them to a restaurant out of town to make it less likely that anyone they knew would see them?\n\nIt wasn't hard to shrug off those concerns. They had enjoyed a nice afternoon with each other. When he dropped her off at the juice bar, he leaned over to kiss her goodbye, and she gladly returned his kiss. What did he have to complain about? Life was good on a day when he got to kiss Michelle.\n\nThe next day at school, he saw Michelle once in the hallway, in the distance, too far away to wave at her. She didn't see him. Charlie was anxious to speak to her. He felt like he'd failed the previous week when he waited until Thursday to make plans with her for the weekend. By the time he asked, she was already booked for both Friday and Saturday night. This week, he wanted to ask her out as soon as he could.\n\nAlso, he needed to set up a second night of filming for their short film \"Anything You Want\". He was thinking that they could schedule it for Wednesday at Greenholt Gardens, but he needed to confirm the day and time with Michelle and the rest of the cast. Wednesday for filming, and maybe Michelle would be interested in going to the gardens another night, just the two of them. Maybe that could happen Tuesday night.\n\nWhen Charlie sent Michelle a text message asking if she had time to meet, he already had a schedule planned out in his head. He would see Michelle four out of the next five nights. Tuesday, he would meet her at the gardens for a nude walk and sex. Wednesday, at the gardens for filming. Friday and Saturday, he would take her out, to dinner, or a movie, or whatever she wanted to do.\n\nMichelle texted back: \"Do you want to meet at lunch?\"\n\n\"Okay,\" he replied. \"Come to the editing bay?\"\n\n\"Okay. To eat lunch there?\"\n\n\"Yes,\" he texted. \"I'll show you how the film's going.\"\n\n\"Okay!\" she sent back, followed by a smiling emoji.\n\nIt wasn't until he stepped out of his last class before lunch that he realized he didn't know if he was supposed to provide the lunch or not. Were they meeting in the editing bay? Or buying lunch together, then walking to the editing bay to eat it? He decided he would stop by the cafeteria, and if she wasn't there, he would buy her something.\n\nTen minutes after the start of lunch, he walked into the editing bay, carrying two slices of pizza and two drinks, only to find Michelle sitting in a chair, halfway done with a salad. \"Oh...\" She looked at what he was carrying. \"I thought we were meeting here?\"\n\n\"Yeah...\" He set down the food. \"I wasn't sure... I bought you a slice of pizza if you want it.\"\n\n\"Oh, thanks. I'm all right, actually. I brought my lunch today.\"\n\n\"Oh. Okay.\"\n\n\"Sit down.\" She pulled out his chair for him. \"You've already done some editing on the movie?\"\n\n\"Yeah. Do you want to see?\"\n\n\"Sure!\"\n\nCharlie pulled out his flash drive and connected it to the computer. He opened the rough cut of the film and showed Michelle the pieces he had edited together. She leaned forward, gazing intently at the screen as the video played. In particular, she seemed fascinated by the clips of herself.\n\n\"Do I seem like a good actress?\" she murmured. \"I mean, am I doing okay?\"\n\n\"Sure, you're doing great!\" he said. \"Don't you think so?\"\n\n\"Some of these clips of me, I just want to cringe. I don't even know what I'm doing.\"\n\n\"Naw, don't say that!\"\n\n\"It's true! I really don't know anything about acting. But the parts you've edited together... it's so different when it's all put together, isn't it? It becomes something else. Like, it doesn't even seem like me anymore, when it goes between me and Kim and Darren and we're all talking to each other.\"\n\n\"You're doing a good job,\" he reassured her. \"Everyone is.\"\n\n\"I hope so,\" she said. \"I can't believe you've done so much work on it already!\"\n\nCharlie spoke his next words without thinking, and in later days, he would think back to these careless words and wonder how much they contributed to what happened the next day.\n\nHe said, \"Ronni has been a big help with the editing.\"\n\n\"Oh, really?\" Michelle looked up. \"She's been helping?\"\n\n\"Yeah. We did some work over the weekend.\"\n\n\"You did. You did a lot of work.\" Michelle looked at the screen. \"You worked on this computer?\"\n\n\"Yeah. Saturday.\"\n\n\"She was here on Saturday?\"\n\n\"Yeah.\"\n\nMichelle nodded slowly. \"Well. The film looks really good so far. Was Ronni excited that you got into the film program at Jefferson U?\"\n\nCharlie hesitated. In fact, he had spent Saturday afternoon in the editing bay with Ronni, but hadn't thought to tell her that he was accepted into the film program. \"\"Yeah,\" he said to Michelle. \"Yeah, Ronni was thrilled.\"\n\n\"She probably knows all about it. It's the kind of thing that she'd apply to, isn't it?\"\n\n\"Maybe. I don't know. We didn't talk about it a whole lot.\" Charlie cleared his throat. \"Hey, so anyways, I was wondering, how's your schedule this week?\"\n\n\"My schedule?\"\n\n\"Can you make it to Greenholt Gardens on Wednesday? We were hoping to get a second night of filming.\"\n\nMichelle thought for a moment, then nodded. \"I think so. I can do Wednesday.\"\n\n\"What about tomorrow?\"\n\n\"You want to film tomorrow, too?\"\n\n\"No,\" Charlie said. \"Not for filming. Do you want to go to the gardens, you and me?\"\n\n\"Oh,\" she said. \"You mean... to walk?\"\n\n\"Yeah.\" He smiled to show her he meant more than walking. \"Just you and me.\"\n\n\"You and me, and Nick.\"\n\nCharlie shrugged. \"Well, yeah. Nick will be working. But he won't be with us most of the time.\"\n\n\"Right.\" Michelle looked down at her hands. \"I don't think I can, Charlie. Two nights in a row, late at the gardens? I don't think my parents will go for that.\"\n\n\"No?\"\n\n\"We stay there pretty late. I don't think I can do more than one night during the week.\"\n\n\"All right.\" Charlie tried his best to conceal his disappointment. He hadn't realized how sure he had been that she would say yes until she said no.\n\n\"Which night should I try for? Tuesday or Wednesday?\"\n\n\"Wednesday, I guess,\" Charlie said reluctantly. \"We should try to make some progress on the film.\"\n\n\"Wednesday is better?\"\n\n\"Yeah. If Darren and Kim can make it. I still need to ask them.\"\n\n\"Okay. Just let me know. If they can make it, I'll be there.\" A chime sounded from Michelle's phone, and she glanced at it. \"Oh! I should run. I need to stop by Vanessa's locker before class starts.\" She smiled. \"The movie looks really good so far, Charlie.\" She leaned over and kissed him on the cheek. Then she gathered her empty salad container and rushed off.\n\nIt wasn't until she was already gone that Charlie realized he hadn't asked her out for the weekend. In the calendar in his mind, he had imagined spending four out of the next five evenings with her. Now, after half an hour together, he had only gotten her to commit to one.\n\n***\n\nHe called Michelle after school, and the call went to voice mail. \"Hey,\" he said. \"It's Charlie. I forgot to ask you at lunch... are you doing anything this weekend? Want to go out and do something? Like a movie or something? Um... yeah. Call me when you can. Bye.\"\n\nAfter he disconnected, Charlie realized that he had no idea what movies were playing. He quickly booted up his computer and found the website of the Pine Hills 10-Plex. He read down the list of movies.\n\nThe phone chirped and he grabbed it swiftly, expecting Michelle. But it was Ronni's name on the caller ID. \"Hey,\" he answered.\n\n\"Hey, Charlie,\" Ronni said. \"Nick is fine with us filming on Wednesday. I talked to Kim, too, and she's free. Did you ask Michelle?\"\n\n\"Yeah. Michelle says she can make it. I haven't asked Darren.\"\n\n\"Will you call him?\"\n\n\"Sure.\"\n\n\"Do you have a list of shots you want to get?\"\n\nHe did. Ronni had her copy of the script with her and they talked through the next few scenes. Charlie explained how he saw it in his head, and Ronni made suggestions. They discussed how they could organize things on Wednesday to get the maximum amount of work in during their short time at the gardens. When Ronni finally hung up, almost forty minutes had passed.\n\nCharlie started to set his phone down on his dresser when he saw a notification of a missed call. It was Michelle's number. A missed call, but no voice mail.\n\nHe called her again, and again his call went to voice mail. \"Hey, Michelle,\" he said. \"This is Charlie again. Sorry I missed your call. I was on the phone with Ronni, talking about the movie. My phone didn't even ring or anything. I'm not sure why it didn't. Anyways... just wanted to check with you again about this weekend. If you wanted do to something. Talk to you soon.\"\n\nHe kept the phone next to him for the rest of the evening, glancing at it frequently. Michelle didn't call back.\n\n***\n\nCharlie didn't need to look for Michelle the next day. He was logging some equipment back into the AV closet in the morning when he suddenly realized she was standing behind him in the doorway. She was dressed casually, in a short-sleeve blue top and black jeans. Charlie set down the speaker he was holding and leaned against the shelf. \"Hey, Michelle. Good morning.\"\n\n\"Hi, Charlie.\" Michelle hesitated, then took a step into the closet.\n\n\"I guess we played phone tag last night. Did you get my message? The second one?\"\n\n\"The second one?\"\n\n\"Yeah. I left you a message. You called me, I missed it, so I called you back and I left a message. My phone didn't ring when you called, that's why I didn't pick up.\"\n\n\"Oh. Yeah, I got that message.\" She held her hands clasped in front of her. \"That's why I wanted to talk to you.\"\n\n\"I sort of had an idea for Saturday night,\" Charlie said. \"If you're free, that is. Do you like Thai food?\"\n\n\"Charlie,\" Michelle said. \"I want you to do something for me.\"\n\n\"What?\"\n\n\"I want you to ask Ronni out. I want you to ask her on a date.\"\n\nCharlie stared at her. He thought he must have misheard. \"What?\"\n\n\"You should see if she's busy on Saturday. If she's free, I want you to take her out. Not just as friends. A date.\" Michelle gazed at him earnestly. She seemed to be serious. But Charlie couldn't make sense of the request.\n\n\"But I'm asking you out for Saturday,\" he said slowly. \"I want to go out with you. Like we had brunch together two days ago.\"\n\n\"I know,\" Michelle said. \"But I want you to have a date with Ronni instead.\"\n\n\"I do have a date with Ronni. I'm taking her to the prom. Remember?\"\n\n\"I want you to take her out before then. This weekend.\"\n\nCharlie studied Michelle's face, looking for something that might give him a hint where all of this was coming from. \"Why?\" he asked finally.\n\n\"I was up late last night, thinking,\" she said. \"About you and me, and you and Ronni, and everything that's happened, with the movie and everything. I think you and Ronni seem like a good match. I really do, Charlie. I see the way you two work together, when we're filming at the garden. You get along really well. And you have a lot in common.\" She looked up. \"Maybe you should give it a chance.\"\n\n\"Michelle,\" Charlie said. \"Ronni and I are just friends. Right?\"\n\n\"I know,\" she said. \"I know you're just friends. But maybe that's just because of me. Because I'm standing in the way.\"\n\n\"No, you're not. What are you saying? You're not standing in the way of anything.\"\n\n\"It's in your movie, Charlie.\" Michelle glanced outside the closet, making sure that they were still alone. \"I spent a lot of time thinking last night, and it finally hit me what your movie is about. You have a man and a woman who are acting like friends but actually they're falling in love with each other. And the third person in the scene is a woman who takes her clothes off as the movie goes on. That's me, you wrote that role for me. I'm the third person.\"\n\n\"Wait, wait. You think that I'm Max and Ronni is Ingrid? You think that's what the movie is about?\"\n\n\"I don't know. Don't you think it's something to think about?\"\n\n\"No. That's not what the movie's about at all. You're reading into it. You're seeing something that's not there.\"\n\n\"But, Charlie. Last night, I was thinking about the last time we were filming at the gardens. After Kim and Darren left. Wasn't I acting exactly like your Gwen character? I basically became her. As soon as it was only you, me and Ronni left, I threw off all my clothes and fluttered around while you and Ronni put everything away. You two did the work and I was just silly, naked Gwen. Naked and invisible.\"\n\n\"It wasn't just us three, Nick was there, too.\"\n\n\"Right.\" She looked down at her hands. \"Nick was also there. I was naked in front of him, too.\"\n\n\"I thought you did that because you felt comfortable with us. All of us have seen you naked before, we know that's how you like to be sometimes, and I thought...\"\n\n\"No... that's not why I did it. I didn't feel comfortable. I did it because I thought I could get away with it... I knew none of you would say anything... and it was exciting, because I thought about doing it and then I just did it, just like that. And then... I don't know. I drove off by myself. I left all three of you behind and drove off. It's something I need to think about. Why I acted that way.\"",
        "\"Michelle,\" Charlie said. \"If you want to know what I was thinking when I wrote that movie, I can tell you exactly what I was thinking. I didn't write it about Max and Ingrid - I started with Gwen. I wanted to write a character you could play who had nude scenes...\"\n\n\"And what about the other movie?\" Michelle asked. \"My movie?\"\n\n\"Huh?\"\n\n\"When you did your interview at Jefferson University,\" Michelle said, \"you showed them a movie that they really liked. You said it was a movie you were making for me, a gift for me, but you said I couldn't see it, because it wasn't done yet. Are you ever going to give it to me? Or is it still not done?\"\n\n\"Oh... that.\" Charlie hadn't thought about his Michelle tribute video in a while. \"Uh... it's still not done.\"\n\n\"Uh huh.\" Michelle nodded, as if she wasn't surprised. \"Maybe it'll never be done. You're focused on your new project now, right?\"\n\n\"No, it's not that. I'm just trying to tell you...\" He started, but just then, the bell rang. The five-minute bell, warning them to go to their first class.\n\n\"We'll talk later,\" Michelle said. \"I just want you to think about what I've said, okay? I'm not asking you to do anything right away. With Ronni, I mean. Just think about it.\" She took a step towards the door. \"I need to get to class.\"\n\n\"Wait,\" Charlie said. \"What about you?\"\n\n\"Me?\"\n\n\"If I take Ronni out on Saturday, what will you do? Sit at home alone all night?\"\n\n\"Oh!\" Michelle smiled. \"No, I won't be sitting at home alone. I'm doing something with Vanessa. She invited me to see a movie.\"\n\n\"Really? What movie?\"\n\n\"'Night Crew'?\" She looked embarrassed. \"I've heard it's bad, but I guess it's bad enough to be kind of funny?\"\n\nCharlie frowned. \"Just you and Vanessa?\"\n\n\"Well... no. Some other people, too.\" She hesitated. \"The usual gang. Cody, Sandy, Ryan, Glenn...\"\n\n\"Glenn?\" Charlie repeated. \"Glenn is going with you?\"\n\n\"Uh-huh.\"\n\n\"So you're going out with Glenn on Saturday. That's what you're really saying.\"\n\n\"No, I'm not! I mean, he'll probably be there, but a whole group is going, it's not like I'm going WITH him...\"\n\n\"You just named three couples,\" Charlie said. He ticked them off on his fingers. \"Vanessa and Cody, Sandy and Ryan... that leaves you with Glenn.\" He shook his head incredulously. \"So that's why you want me to go out with Ronni on Saturday? Because you already have a date with someone else?\"\n\n\"Charlie, no. It's not like that...\"\n\n\"You want me to go on a date with Ronni so you don't have to feel guilty about being out with Glenn,\" Charlie said in a flat tone. \"That's the real reason you want me to do it.\"\n\nMichelle opened and closed her mouth, struggling to find the right words. The second bell rang; now they were both late for class. She said, \"He's one of my friends. The same group of friends that I sit with all the time during lunch. That group of friends is going to the movies.\"\n\n\"He's your friend. I just said the same thing about Ronni, and you said I only think of Ronni as a friend because you're standing in the way. So the same must be true of Glenn. Maybe you and Glenn would be together if I wasn't standing in the way. Right?\"\n\nMichelle shook her head. Her shoulders slumped, and she looked like she was on the verge of crumpling in on herself like a paper cup. \"I don't know,\" she whispered. She spoke so quietly that it took a moment for Charlie to understand. Three little words, but to Charlie, they felt like a punch in the gut.\n\n\"You know what?\" he said bitterly. \"Go out with Glenn. It makes a lot of sense, you and him. I mean, your moms are friends, right?\" He didn't wait for her response. He walked past her, out the door, heading for his first class. He didn't look back.\n\n***\n\nThe problem was, it did make sense. That was the worst part of it. He had never met Michelle's parents, but he knew they wouldn't like him, if they knew anything about his relationship with Michelle. He was a bad influence on her. Bonnie and Clyde. He was the Clyde to her Bonnie. The guy that convinced her to do bad, illegal things.\n\nHello, Mr. and Mrs. Santos. I'm Charlie. Glenn takes your daughter to the movies. I have sex with her on the hood of her car. He has lunch with her in the cafeteria. I fuck her in the parking lot of the Macy's. I take her out to restaurants where she gives me blow jobs under the table.\n\nHello, Mr. and Mrs. Santos. I'm Charlie Tucker, and I just realized I'm the bad guy in this movie.\n\n\"Are you okay, Charlie?\" Ronni asked. She was sitting across from him at lunch. \"You're completely distracted.\"\n\nCharlie realized he was staring into space. Specifically, staring to the side, at a blank wall. He looked at Ronni. She looked back, and he couldn't decide if she appeared concerned, or just puzzled.\n\n\"Are you busy Saturday?\" The words came out before he could think about them.\n\n\"Not too busy,\" she said. \"Do you think you'll come in and do some editing?\"\n\n\"No, I mean Saturday night. Do you want to do something Saturday night?\"\n\n\"Saturday night?\" She looked at him thoughtfully. \"You're not going out with Michelle that night?\"\n\n\"No.\" Charlie looked down at his food. In a quiet voice, he said, \"I think we broke up.\"\n\n\"What?\" Ronni blinked. \"Did you just say you and Michelle broke up?\"\n\n\"Yeah. I think so.\"\n\n\"Why? What happened?\"\n\n\"I asked her if she wanted to do something on Saturday.\" Charlie knew even as he spoke that he would leave out certain details of his conversation with Michelle. For instance, Michelle's suggestion that he go out with Ronni. \"I asked her a few times, but she kept evading the question. Finally, she admitted that she already had plans that night. She's going to the movies with Glenn Mack.\"\n\n\"No way,\" Ronni said. \"What movie? Did she say?\"\n\n\"'Night Crew'.\"\n\n\"What? That's supposed to a terrible movie. And it's been out for a month.\"\n\n\"Glenn wants to see it, I guess.\" Charlie leaned his elbow on the table, tapping his fingers against the side of his head. He felt like he was looking through the world through a grey shroud. Everything seemed darker than usual, dark and colorless. The gloom in his thoughts infected his physical body, and he felt tired, as if his arms and legs weighed more than usual.\n\n\"So what did you say?\"\n\n\"I got a little mad,\" Charlie said, visualizing the scene earlier with Michelle. \"I told her she should go ahead and be with Glenn, that he was a better match for her.\"\n\n\"Yikes. What did she say?\"\n\n\"I don't know. Nothing. I had to go to class. I didn't wait around.\"\n\nRonni sat back in her chair, considering the news. \"When did this happen?\"\n\n\"This morning.\"\n\n\"And you haven't talked to her since then?\"\n\n\"No.\"\n\n\"You know... she's supposed to meet us at Greenholt Gardens tomorrow. We're filming, right?\"\n\n\"Yeah, I know.\" His fantasy schedule was a joke now. He had thought he would see Michelle four evenings that week. Now only one day remained, the day of the filming.\n\n\"Should we cancel? Is Michelle going to show up?\"\n\n\"That was the other part of our fight,\" Charlie said. \"The film. Michelle thinks there's a subtext to the Gwen character. Like the way I wrote Gwen says something about what I think of her.\"\n\n\"What does she think it says?\"\n\n\"She said Gwen was 'naked and invisible.' She used those exact words.\"\n\n\"Naked and invisible? That doesn't make any sense.\" Ronni shook her head. \"Those words don't go together. They're more like the opposite of each other.\"\n\n\"I know. In the original script, Gwen is naked in the final scene, and no one seems to notice. The other characters just accept it. So maybe you could define Gwen as 'naked and invisible' in the last scene. But I don't know how Michelle can decide that's some kind of subtext for what I think of her.\"\n\n\"You did write the character for her.\"\n\n\"Yeah,\" he said. \"I wrote the whole film for her. I wanted to give her a role to play. I wasn't trying to make any kind of statement about her.\"\n\n\"Does Michelle think you treat her like she's invisible?\"\n\nCharlie held up his hands. \"No. I don't know. I don't know why she would think that. If anything, I'm the one that's invisible.\"\n\n\"What? What does that mean?\"\n\nCharlie leaned against the table. \"Nothing. I don't know.\"\n\nThey sat in silence for a moment. Ronni asked, \"So she doesn't want to do the film anymore? Should we cancel tomorrow?\"\n\n\"No,\" Charlie said in a low voice. \"Let's not cancel it yet. I think she might still be there.\"\n\n\"We already have some good stuff edited,\" Ronni said. \"It'd be a shame if we didn't at least try to finish it.\"\n\n\"Yeah. I think so, too.\"\n\nRonni stirred her drink with her straw. The ice rattled against the plastic cup. \"So Glenn asked Michelle to see a movie, and she said yes?\"\n\n\"I don't know how it all got planned. It's a bunch of couples going. Michelle and her friends.\"\n\n\"Oh, so it's not Glenn and Michelle alone? It's a group of people?\"\n\n\"Yeah. Couples. Vanessa and Cody, Glenn and Michelle, some others. I don't know the whole list.\"\n\nRonni stirred her ice again. \"And you're sure Michelle is there with Glenn? She's not there to be with her other friends? Like Vanessa and the other cheerleaders?\"\n\nCharlie made himself think back to that morning, trying to remember exactly what Michelle had said. \"I don't know,\" he finally admitted. \"I'm not sure. It sounded like she was going as Glenn's date, but I don't remember that she said it. It was more like she implied it.\"\n\n\"Maybe you should ask her?\" Ronni suggested. \"Would she answer honestly if it was a date?\"\n\n\"The thing is...\" Charlie said, \"I don't think Michelle knows.\"\n\nRonni frowned. \"She doesn't know if it's a date?\"\n\n\"I don't think she knows whether or not she wants it to be a date.\" Charlie felt the gloom settling over him again, pulling him down with its weight. Because as he said the words, he felt the truth in them. Michelle didn't know who she wanted to be with.\n\n\"Well,\" Ronni said, \"she needs to know, because you need to know.\" And that was the truth, too.\n\nA horrible thought occurred to him. He hadn't paid a lot of attention to Michelle's social life; he knew she spent a lot of time with her cheerleader friends, and that meant she spent some time with the guys who were friends with her cheerleader friends. He had assumed that if anything was happening between her and another boy, he would hear about it. Gossip spread quickly at Pine Hills High.\n\nBut now he wondered if she had been on previous dates with Glenn, casual dates similar to her upcoming movie date. A lot of Michelle's weekend time in the last couple months couldn't be unaccounted for. Had she been dating Glenn openly while secretly spending time with Charlie? It would explain Cody's strong reaction to seeing Charlie and Michelle kissing at the train station.\n\nHow could he trust Michelle? How could he know how she really felt about Glenn?\n\nSuddenly, Charlie had a thought. He sat up straight, and Ronni must have seen the change in him, because she became alert. \"Hey. Your friend Jennifer Addish. She did the make-up last year for that pirate musical, didn't she?\"\n\n\"Not by herself. But yeah, she did a lot of it.\"\n\n\"She's very talented. Didn't she help James Castro with that werewolf costume last Halloween?\"\n\n\"Yes, she did.\" Ronni frowned. \"I hope you're not thinking what I think you're thinking.\"\n\nBut that was exactly what he was thinking.\n\n***\n\nVanessa was the head cheerleader, and everyone called her Vampire Vanessa because she had pronounced upper canines that resembled fangs. She also had very light skin which contrasted with her very dark hair and also contributed to her vampire-like appearance. Vanessa didn't discourage the nickname; she had dressed as a vampire for Halloween all four years of high school.\n\nWhen Charlie saw her in the cafeteria, she was wearing a long green dress, and Charlie paused a moment to admire her. He still thought Michelle's beauty was at a level by itself, but Vanessa was undeniably attractive. She looked Charlie's way and said, \"There you are.\"\n\n\"I'm glad you're here. I didn't know if you would come.\" He glanced down at her outfit. \"That dress looks good on you.\"\n\n\"Thanks.\" She sounded nervous. \"Of course I'm here. I didn't have a choice.\"\n\n\"You always have a choice,\" Charlie said. \"Follow me. I'll introduce you to my friends.\" He walked through the lunch tables, and Vanessa trailed along behind him. Lunch had just started, and the tables were still only half full.\n\nCharlie could see Greg Arden sitting at a table with Michael and Dinesh from the AV team. Michael and Dinesh sat together on one side of the table, and Greg sat on the other side. The other seats were empty, more than enough space for Vanessa and Charlie to join them.\n\nThe three boys looked up at them as they approached. \"Hey,\" Charlie greeted them. \"Greg, Michael, Dinesh.\" He pointed to each of them in turn. \"You know Vanessa, right?\"\n\n\"Right,\" Greg answered. He nodded towards Vanessa.\n\n\"Hi,\" Vanessa waved at them.\n\n\"Hi.\" The three boys all spoke at the same time.\n\nCharlie looked at Vanessa. \"You're sorry?\"\n\nShe nodded. \"I am. I'm really sorry.\"\n\n\"Isn't it enough that you said it? You said it and you mean it?\"\n\n\"No.\" She looked down shamefully as she shook her head. \"It's not enough. I want you to know how sorry I am.\"\n\n\"All right,\" Charlie said. \"Then take off all of your clothes.\"\n\nVanessa nodded. She crossed her arms in front of her and pinched the sides of the dress. Slowly, she began to tug the dress up, shimmying out from under it. Her long legs were revealed, her skimpy black panties. The type of panties a vampire would wear.\n\n\"What's going on, Charlie?\" Greg asked. He was staring at Vanessa as she disrobed. All of them stared at Vanessa.\n\n\"This is something that Vanessa owes me,\" Charlie told the table of boys. \"She made a mistake and it cost me someone I cared about. Now she wants to be punished for it.\"\n\n\"Is she really going to take off everything?\" Greg asked as he gaped at Vanessa, and Charlie didn't even need to answer because Vanessa was already pushing her panties down her legs. She kicked off the flimsy garment and pushed it into the pile with her discarded dress and bra. Now that she was completely naked, she looked at Charlie, waiting for his next instructions.\n\n\"Vanessa is going to eat lunch with us, and she's going to remain like this until lunch period is over.\" He looked at Vanessa, eyeing her body. Her nipples were so pink that they barely stood out against her skin. He wasn't able to judge if her pubic hair was as dark as the hair on her head, because she had it completely shaved smooth. Charlie pointed to the seat by Greg. \"Vanessa, you can sit there.\"\n\nVanessa didn't hesitate; she walked around the table and took the seat next to Greg. She looked up at Charlie, waiting obediently for his command.\n\n\"I'm going to get some food for us to share, Vanessa,\" Charlie said. \"You guys enjoy Vanessa's company.\"\n\nGreg stared openly at Vanessa's body. \"Can we touch her?\"\n\n\"Yes,\" Charlie said. \"That's part of her punishment. But you aren't allowed to fuck her.\"\n\nGreg nodded. He was already reaching between her legs. Vanessa didn't say a word, only opened her legs wider.\n\nCharlie turned away from the sight. He would buy Vanessa something to eat, but first he had to use the bathroom. He hurried in that direction. The pressure was building in his groin, and he was embarrassed to realize that he had a clear erection bulging against his pants. What could he do? How could he not be erect, with beautiful naked Vanessa waiting for him back at his table? It would make it difficult to pee, though. Plus, it was embarrassing, walking through the cafeteria with an obvious erection.\n\nThe door to the bathroom wasn't where he remembered it. He turned in place, searching the cafeteria for the door, and saw that Greg now had Vanessa bent over the table and he was fucking her vigorously from behind. He wasn't supposed to be doing that, Charlie had clearly told him it wasn't allowed, yet there they were. Charlie tried to step in that direction, but his legs were unresponsive. He really needed to go to the bathroom.\n\nThe urge was getting desperate. He would need to pee somewhere. Maybe even in the corner. But he was enormously erect, in fact, his cock was now out of his pants, and his pace was sluggish. Also, he couldn't look away from the vision of Vanessa, on the table, her legs spread, and a boy between those legs, a boy he didn't recognize, fucking her, fucking her hard enough to make her breasts bounce. She was biting her lip to keep from crying out, hard enough to bring a trickle of blood from her mouth, and her teeth were fangs, long fangs. That's why they called her a vampire. Because of those fangs.\n\nHe couldn't stop himself. He was hard as a rock and he had to pee, and it was building up beyond his ability to restrain it. Suddenly, it burst free...\n\nCharlie woke with a shock. He was cumming in his pajamas. He shoved his blanket off the bed and stared at the wet spot in the front of his pajama pants. His erection still jabbed against the fabric, and he watched it pulse, unleashing another shot of cum into his boxers.\n\nHe stared at the mess in revulsion. His sheets would need to be washed. The blanket, too. Discretely washed, along with what he was wearing. How could he be having a wet dream? He hadn't had one in years, not since he had figured out how to masturbate in junior high.\n\nThe content of the dream repulsed him as well. How could he be dreaming of Vanessa Watson in that way? It was like he had been cheating on Michelle with her best friend, even if it was just a dream. If he could dream it, what did that say about what was going on in his subconscious? Did he lust for Vanessa at some level?\n\nThe way he had treated her... offering her to his friends like she was a toy for them to play with... like he was a pimp and she was one of his prostitutes... and then that whole thing about punishing her... that was weird, too. He had been so cold and dominating in the dream, and it bothered him that the dream had gotten him so hard, that his sleeping mind had used that lurid fantasy to trick him into cumming.\n\nIt was almost six in the morning; the sun wasn't even up. Charlie pulled off his pajamas and wrapped them in the sheet and blanket. Later in the day, he would throw them in the laundry, but for now, they needed to live at the bottom of his hamper. He usually did his own laundry, so he didn't need to worry that his mom would discover them there.\n\nHis bathrobe was hanging in the bathroom across the hall. He peeked out to make sure the hall was empty, then darted across. He closed the bathroom door and started the shower.\n\nAs he cleaned himself off in the hot water, he brooded over his dream. He had left Vanessa at that lunch table with the boys, warning them that they weren't allowed to fuck her. As if he alone was in charge of whether or not she had sex with them, like she had no will of her own. Then, he had looked back at the table to discover Greg having sex with her anyway, and the sight of it hadn't angered or dismayed him. It had turned him on.\n\n\"It was a dream,\" he murmured to himself. \"Just a weird dream.\" Not the real Vanessa. But he still felt guilty that he had treated her that way.\n\nWhy was it Vanessa? Why not Michelle? Maybe his subconscious had balked at casting Michelle in the role. It was too graphic a scene for her. Maybe he couldn't imagine Michelle having sex with someone else, a stranger, so his mind had selected Vanessa instead. Vanessa was attractive. But it wasn't like he was attracted to her in the same way he was attracted to Michelle.\n\nWas he?\n\nAnd if he really thought about the things he'd seen Michelle do... honestly, was the idea of her having sex with a stranger that far off?\n\nShe had kissed Daryl. She had kissed him while she was naked. Daryl, the school security guard. Daryl had fondled her while she kissed him.",
        "Michelle had kissed Nick, Ronni's brother, and she was naked then, too. She had kissed Nick after they had just met. And several times after that. She had been naked every time. Nick knew Michelle was an exhibitionist, and Michelle knew that Nick knew. Charlie could list a number of times when Michelle had clearly been displaying herself for Nick's gaze.\n\nWhat if Michelle had sex with someone else, and Charlie was there watching? Would he stop her? Or would it turn him on?\n\nHe was horrified by the idea that it might turn him on.\n\nMichelle had questioned the nature of their relationship, and now Charlie found himself questioning it as well. From the first moment that he saw Michelle standing naked in the school hallway, sex had been a major part of what connected them. She was an exhibitionist, frequently displaying her body for him, frequently being openly sexual in his presence. He often fell into the habit of thinking that the public displays were Michelle's fetish and he was just a happy beneficiary. But deep down, he knew that wasn't the truth. He got off on her streaking just as much as she did.\n\nMaybe that's what the dream was telling him? Maybe it was showing him that he would be just as turned on by any attractive woman displaying herself in public. It didn't have to be Michelle.\n\nHe realized what an obvious statement this was and chuckled. It wasn't really a revelation so say that he liked looking at naked women. So did most heterosexual teenage boys. Big deal.\n\nWhen he thought about it, he wasn't spending all of his time with Michelle begging her to get undressed. Frequently, he was the one telling her to put her clothes back on. It wasn't just about seeing her naked. It was about sharing the adventure with her. Feeling her thrill when she took her clothes off and being there to hide her and protect her when she came close to being discovered. He was her guide, her bodyguard, her public lover.\n\nMichelle wanted him to think about the nature of their relationship, but it really didn't take much soul-searching for him to understand what Michelle was to him. He loved her. He was in love with her. Sex was a big part of their relationship, and sex between them usually included Michelle indulging her fetish for exhibitionism and public exposure. But if Michelle decided she needed to take a break and just wanted to be celibate for a time, Charlie would still want to spend time with her. He would still love every minute he spent with her.\n\nThe question was, would she still want to spend time with him?\n\n***\n\nCharlie tried to get back to sleep after his shower, but he tossed and turned and finally gave up. He went down to the kitchen and moped at the kitchen table for half an hour, eating his bowl of cereal with the automatic movements of a robot running on low batteries. Shortly after 7:00 AM, he decided to drive to school. He would get there early, but could kill time in the A/V rooms. Maybe Michelle would meet him there again, to continue their talk.\n\nHe pulled into the front lot of Pine Hills High about half an hour before the first bell would ring. The front lot had a few empty parking spaces, but he passed them and continued around the school to the back lot, hoping to find a parking space close to the green door that he usually used on the weekends. He noticed a woman walking in the distance, heading towards the doors that entered the school by the cafeteria, and his pulse quickened. What a coincidence, to see Vampire Vanessa so soon after he had dreamed of her. He couldn't help superimposing the obscene images from his dream onto her as she walked. She was wearing tight black jeans and a clingy sleeveless black top, and it wasn't difficult to look at the contours of her body and compare them to the naked version of her from his dream.\n\nShe was walking towards a group of boys who loitered just outside the cafeteria doors. Charlie could see her smiling and greeting them. He recognized one of the boys as Cody. Sure, that made sense. She was dating Cody.\n\nCharlie looked away from her. He shouldn't be staring at Vanessa. It didn't matter that he had dreamed about her. It was just a dream, and in reality, Vanessa may have been Michelle's best friend but Charlie didn't know her hardly at all. He had only talked to her a few times.\n\nHe pulled into a parking space as close as he could get to the green door. That put him closer to Cody than he preferred, but he told himself it didn't matter. Cody hadn't said a word to him since the day his tires got slashed. Maybe the tall football player had stopped caring about Charlie. As far as he knew, Charlie and Michelle had stopped spending time together.\n\nAs Charlie stepped out of his car, he couldn't help himself. He looked over at Vanessa. She was bending over her bag, her jeans stretched over a very firm ass. The memory of his dream returned, and Charlie let his eyes linger on her for just a little too long. Then his eyes shifted to the right, and he noticed Cody staring right at him.\n\nCharlie quickly turned back to his car. He really didn't need Cody telling Vanessa that he had been checking her out. His backpack was in the backseat of the car so he unlocked the back door.\n\nCody raised his voice, clearly intending it to carry over the distance to Charlie. \"Hey, look at that,\" he drawled. \"Charlie Tucker has new tires.\" The other boys snickered.\n\nCharlie turned to glare at them. Cody was gazing at him, coldly defiant, with Vanessa standing next to him. She looked embarrassed. \"You're the one who bought them,\" Charlie retorted.\n\nCody looked indignant. \"What are you talking about? I didn't buy shit. Why would I?\" His glare challenged Charlie to make an accusation.\n\nCharlie turned away from the boys and hoisted his bag out of the back seat, throwing it over his shoulder. He could still hear them muttering to each other and snickering behind him. Charlie shut the car door and walked towards the school, moving swiftly to hide his confusion. Why would Cody deny that he had paid for the tires? Was he trying to save face in front of his friends? Or putting up a front because he didn't want to admit to having slashed the tires in the first place?\n\nOr was Cody telling the truth and he really didn't pay for the tires?\n\nIn an instant, Charlie understood what must have happened, and it made him sick to his stomach. The money hadn't come from Cody. It had come from Michelle. She was the one who told him Cody was going to pay for the tires, and she was the one that gave him the money. Two hundred and fifty dollars.\n\nTwo hundred and fifty dollars of her own money. She had paid for the tires out of her own pocket. Why had she lied about it?\n\nTo appease Charlie so he wouldn't do anything about Cody. That was the explanation that made the most sense. She paid him the money to placate him. And then he would accept what she had asked for next: to pretend like she and Charlie had nothing going on between them. That they were just friends.\n\nShe had paid him $250 to be her secret. So that he wouldn't make waves at school and disrupt her relationship with her friends there. Her relationship with Glenn.\n\nIt seemed so obvious to Charlie that he wondered how he could have missed it before. Cody wouldn't slash his tires and then immediately turn around and pay for the damage. Michelle had explained it by saying that Vanessa had put pressure on Cody, and Charlie had bought that explanation without even thinking about how unlikely it was.\n\nHe entered the school and went straight to the editing bay. Immediately, he pulled out his phone and looked up Michelle's number. For several seconds, his finger hovered over the call button, but he couldn't bring himself to press it.\n\nHe didn't want to call her right then. It wasn't a good idea. He was too upset and he didn't know what he would say. The bell would ring for them to go to their classes, and he didn't want to have another conversation cut short at the wrong moment. No, he would talk to her later. He needed to think about this new information, turn it around in his head for a while.\n\nHow many times had she been out with Glenn without telling him? Charlie wondered if Michelle would tell him if he asked her. The previous Friday, she said she needed to eat dinner with her family. The previous Saturday, she said she had plans with Vanessa. Now, Charlie wondered if she had been with Glenn both of those nights.\n\nHe knew Michelle was capable of lying to people. She lied to her parents all the time. Why would he imagine he was the exception? She had lied about the $250. Maybe she was lying about everything.\n\nOn Saturday, he would see for himself. With the help of Jennifer Addish, he would sit in the same movie theater where Michelle intended to watch \"Night Crew\" with Glenn and the rest of her friends. Charlie would wear a disguise so that they wouldn't recognize him. Once the movie started, he would find a position where he could observe Michelle and Glenn.\n\nHe needed to know what they had going on between them.\n\n***\n\nDuring lunch, he sat with Ronni and Jennifer. Jennifer was a thin girl, pale with long brown hair, known for her easy laugh. She laughed at everything. But when Charlie explained what he wanted, she frowned. \"You want me to make you look older?\"\n\n\"Yeah, basically. I want you to give me a beard. A beard and a moustache. Can you make it look real?\"\n\n\"Sure. But it won't get you into a bar, if that's what you're planning.\"\n\n\"He needs a disguise so he can spy on his girlfriend,\" Ronni said frankly. \"He thinks she's cheating on him.\"\n\nJennifer winced. \"Ouch. Sorry. That sucks, Charlie.\"\n\n\"Yeah...\" Charlie didn't know what else to say.\n\n\"I didn't know you had a girlfriend. Does she go to Pine Hills?\"\n\nBefore he could answer, Ronni spoke up. \"No,\" she said. \"She goes to a different school.\"\n\nJennifer nodded. \"I can do it. It's easy. I can make you look completely different. She'll never recognize you.\"\n\nCharlie went to his car five minutes before lunch ended. He called Michelle.\n\n\"Hello?\" she said.\n\n\"Hey. It's Charlie. I just wanted to confirm with you, you're coming to Greenholt Gardens tonight, right? We're filming.\"\n\n\"Hi, Charlie. Uh-huh. I haven't forgotten. I'll be there.\"\n\n\"Great,\" Charlie said. \"Oh, I wanted to tell you. I took your suggestion. I asked Ronni out for Saturday.\"\n\nMichelle was silent for a moment. Then she said, \"You did?\"\n\n\"Yeah, at lunch. She said yes. We have plans for this Saturday.\" It wasn't a lie. He would meet Jennifer and Ronni in the afternoon, and Jennifer would help him with his disguise.\n\n\"Oh....\" Michelle said. \"Okay.\"\n\n\"Yeah,\" he said. \"Well, anyways. I just wanted to make sure that you're still okay with tonight at the gardens. I'm calling all the actors. We need all of you to be there or we have to cancel the whole thing.\"\n\n\"I'll be there. Don't worry.\"\n\n\"Okay. That's awesome. Well... bye. See you tonight.\"\n\nHe disconnected without waiting for her response.\n\n***\n\nIn the original script for \"Anything You Want\", the Gwen character wore less and less clothing as the film progressed, until she was naked in the final scene. She was meant to be the personification of the passion growing between the other two characters, a passion that they otherwise hid from each other. It pretended to be artistic, but in reality, Charlie had only written it that way so Michelle would have a nude scene in the film.\n\nBut Michelle had been reluctant to do the scene, so Charlie had rewritten the script. Now, instead of Michelle wearing less and less, she just wore brighter and brighter clothing. On the first day of filming, she had worn a conservative dark blue dress. Now, for the second scene, Michelle had selected her own dress, a dress that was maroon at the hem and gradually changed color to a glowing orange at her shoulders. It made Charlie think of a fireplace, late in the evening, when the flames are gone but the wood still smolders.\n\nThe blue dress had come down nearly to her ankles, while the red dress stopped at her knees and left her arms bare. Charlie had meant to be cold and professional to Michelle that evening, but he couldn't help himself. \"That dress is perfect,\" he told her. \"Exactly right for this scene.\"\n\nMichelle smiled. \"I told you I'd take care of my outfits.\"\n\nHe thought it might be awkward between them, but in actuality, they didn't have the time to be awkward. As soon as Kim and Darren arrived, Charlie felt like a countdown had started. He needed to get as much footage as he could in the two hours that they had, and that meant the was constantly going between the camera and the actors, resetting them, making suggestions for their lines, moving lights. He talked to Ronni more than he did Michelle, but that was because he needed Ronni's help with everything.\n\nAs midnight approached, Ronni leaned over to him. \"You think we have enough for this scene?\"\n\n\"No,\" Charlie answered immediately. He sighed. \"We'll have to figure out how to make it work when we edit.\"\n\n\"Right.\"\n\nThey rushed to film a few final critical shots, then Charlie let everyone know they were done.\n\n\"One thing I like I about you, Charlie.\" Darren grinned as he slapped Charlie on the shoulder. \"You never keep us over.\" Charlie tried to return the grin, but a string of tension was knotting in his gut now that the filming was over. During the filming, he could lose himself in his work. Now he felt Michelle's presence like a physical force pulling at him, and he felt like he was watching her in his peripheral vision at every moment.\n\nKim Mink disappeared immediately, and Darren made a show of helping them put away some equipment, but really just stood around making jokes for a few minutes before departing. Charlie kept his eye on Michelle as he took down the lighting, knowing that she might get up to leave at any moment. If she did start to leave, he would insist on walking her out. He needed to talk to her.\n\nNick appeared to help them bag up the equipment. \"Those other two are gone,\" he said. \"I watched them drive away on the security camera.\"\n\n\"Yeah,\" Charlie said. \"It's late.\"\n\n\"You're in the clear, Michelle,\" Nick said cheerfully.\n\n\"What?\" She looked up.\n\n\"You can take off your clothes now,\" he said. \"It's just us here.\"\n\nOh, no, Charlie groaned internally. Not now. Not a good time.\n\nMichelle stood up. She glanced at Charlie, perhaps trying to catch his eye, but he avoided her gaze, pretending to be absorbed in what he was doing. He didn't want to do anything that could be mistaken for encouragement.\n\nSurely, she wouldn't. Not here, not now. Not with so much unresolved between them.\n\n\"Here, Michelle.\" Ronni appeared next to her, offering her a small blue duffle bag.\n\n\"What's this?\" Michelle asked, as she let Ronni push the duffel bag into her hands.\n\n\"For your clothes,\" Ronni said. \"So you don't forget them when you leave.\"\n\n\"Oh. Okay.\" Michelle looked down at the duffel bag. \"Thanks.\" She sat the bag on the table next to her. Did she glance at Charlie again? He thought so, but he couldn't be sure since he was watching her out of the corner of his eye. She had her hands behind her back, fumbling for her zipper, then Ronni stepped in to help, pulling it down for her.\n\nCharlie didn't watch Michelle as she undressed. He only glanced at her quickly, a minute later, and saw that she was naked. She had folded her dress and was slipping it into the duffel bag.\n\nNaked. He needed to have a serious talk with her, and she was completely naked.\n\nShe raised her eyes and saw him watching her. She shifted nervously and her hands rose an inch, as if she suppressed an instinct to cover herself. Like his gaze made her self-conscious, like she was exposing herself to him for the first time.\n\nHe couldn't wait any longer. \"Michelle,\" he said. \"I need to talk to you.\"\n\n\"Okay.\"\n\n\"In private. Come on.\" He beckoned her towards the snack bar. She followed; he saw that she carried her purse with her, and the blue duffel bag. He didn't speak to her until they had stepped inside. At that point, he turned and faced her. He reached in his pocket and pulled out a wad of bills.\n\n\"Here.\" He held out the money.\n\nMichelle didn't reach for it. \"What's this?\"\n\n\"The $250 that you gave me. You said it came from Cody. But it's not his money, is it? It's your money. Take it. I don't want it.\"\n\nMichelle looked stricken. She took the bills and cradled them gingerly in her fingers. \"Charlie...\"\n\n\"I don't know why you would lie to me. Why did you say it was from him? Did you think I wouldn't find out, eventually?\"\n\n\"I just felt bad,\" she said softly. \"I didn't want anyone to fight over me. I felt bad about what happened to your tires.\"\n\n\"So you took $250 of your own money and gave it to me? You told me that you and Vanessa stood up to Cody, you made him admit he slashed my tires and you made him promise to pay me back. But none of that happened, did it? You went to Cody and you denied there was anything between us. That's all you did. You didn't stand up for me at all. You just renounced me.\"\n\n\"I didn't. I didn't renounce you.\" Michelle gazed at her hands, the wad of bills crumpled into a ball. \"It wasn't any of his business. That's why I said that. He didn't need to know about us.\"\n\n\"What was the $250? Some money so I'd let it go? So I wouldn't stir anything up among your friends?\"\n\n\"It was just for your tires,\" she said. \"I wanted to pay for your tires. I felt bad that someone did that to you.\"\n\n\"Keep it. I don't want your money.\"\n\n\"Okay.\" She still held the money in her hands. \"I'm sorry I didn't tell you the truth. It's just... I didn't want anyone to fight over me.\"\n\n\"Right.\" Charlie looked at the window of the snack bar, out at the gardens. He didn't want to look at her body, to be distracted by it. \"I guess the lie worked, then. No one is fighting over you right now.\" He glanced at her. She was still looking down and wouldn't make eye contact. He couldn't help himself; his eyes slid over her body. Even as angry as he was, he still felt the desire to reach for her. To stroke her skin, to touch her breasts. \"We'll finish up with the equipment. Why don't you head home, Michelle. It's late. We can finish without you.\" He paused, then specified, \"Put your clothes back on before you leave.\"\n\nMichelle nodded. Without saying a word, she put the money into her purse, then reached for the blue duffel bag. She pulled her red dress out of the bag and slid it over her head and down her body. She tugged it into place.\n\nCharlie walked her to the back door of the snack bar and opened it for her. The parking lot held four cars; Kim and Darren had left. As Michelle stepped out, Charlie noticed that the back of her dress was still unzipped. He didn't offer to zip it for her.\n\n\"You have your car keys, right?\" Charlie asked.\n\n\"Yes.\" Michelle turned to face him.\n\n\"All right. Good night. then.\" Charlie pulled the door closed. He stood by the door, waiting, listening. Maybe she would knock at the door, maybe she would insist on kissing him goodbye, the way that she did, with her whole body pressed against him. Maybe she would knock at the door, and when he pushed it open, she would be naked, her dress tossed to the ground. Naked and wanting a good night kiss. He would give her a kiss, his hands stroking her body as he did it, and then maybe he'd push her against the wall and he would give her a good night fuck. He would stop caring about the money, and stop caring about her and Glenn Mack and Vanessa and Cody and all the rest. He would enter her, and all he would care about was her, the smell of her, the taste of her, the feel of her.\n\nInstead, he heard her car start. A moment later, the sound of her car pulling out of the parking lot. Then quiet.\n\nRonni gave him an inquiring look when he returned, and he could tell she was curious what had happened. But he didn't volunteer any information and she didn't ask. Quickly and quietly, they packed everything up.",
        "Nick helped them carry the equipment out to Charlie's car. Ronni sat down the two bags she was carrying and shook her head incredulously. \"I gave her this thing so she wouldn't forget her stuff, and then she went and did it anyway.\" Charlie followed Ronni's gaze, and saw the blue bag sitting on top of the hood of his car.\n\nHe didn't bother to check to see if Michelle's red dress was in it; he knew it was. Michelle had left the bag there to send him a message, but what the message was, he didn't have a clue. He picked up the bag and put it in his trunk with the other equipment.\n\n***\n\n\"Why did you give her that blue bag?\" Charlie asked. He was at school, sitting at the main computer in the editing bay. The bell had just signaled that school was over, and he could hear students talking and laughing in the hallway.\n\n\"Who, Michelle?\" Ronni asked from the seat behind him. \"You know why I did it.\"\n\n\"I don't. Why did you give it to her?\"\n\n\"To put her clothes in. So she wouldn't leave them behind.\"\n\nCharlie scowled. \"You shouldn't have done that.\"\n\n\"Why not?\"\n\n\"Because. You knew what it would make her do. You knew she would undress. You put pressure on her to do it. She wasn't sure, but when you gave her that bag, she felt like she had to.\"\n\n\"I don't think so,\" Ronni said. \"It was ultimately up to her. She chose to take her clothes off.\"\n\n\"It wasn't a good time for her to do it,\" Charlie muttered. \"I didn't want her to do it. I told you that we broke up. You shouldn't have pressured her to strip. You and Nick. Not after she broke up with me.\"\n\n\"I thought you broke up with her.\"\n\n\"I did. I mean...\" He frowned, trying to remember. Did he break up with Michelle or vice versa? Or had it been mutual? He couldn't remember the exact words of their conversation.\n\n\"She wanted you to be with me,\" Ronni said. \"Remember?\"\n\n\"She did?\" Charlie couldn't remember. The memories slipped away from him like threads of oil in water. Did he break up with Michelle? Or did she break up with him? What did Ronni have to do with any of it?\n\n\"You think she's so exciting, don't you?\" Ronni's voice had become low and sultry. \"Because she gets naked for you. But I can get naked for you, too.\" Behind him, Charlie heard the sound of a zipper, the rustling of cloth. A moment later, Ronni's blue jeans dropped onto the table next to him.\n\n\"Ronni!\" He kept his eyes on the screen. \"What're you doing? You can't do that.\"\n\nAnother bundle of fabric dropped onto the blue jeans. Ronni's white t-shirt. \"You like it when she does it,\" she whispered next to his ear. \"Do you like it when I do it?\"\n\n\"No! I mean... Ronni. This isn't a good place or time for this. Can't you hear the people in the hallway? Class just let out.\" A pair of panties landed on the top of his monitor. His heart was thundering in his chest. Did she have anything left to take off? Or was Ronni sitting completely naked behind him?\n\n\"I am,\" she whispered. \"I'm naked. Just like Michelle. Isn't this how you want me?\"\n\nHer body pressed against his back and her arms slid around him. Her hands went down his front, towards his erection. Charlie noticed motion to his left; he looked over and saw that they weren't alone. A ring of students had gathered around them, watching them. Charlie knew he should stop Ronni, he should warn her, but he didn't. He let her put her hand between his legs, let her stroke his erection in front of everyone...\n\nCharlie woke up as he climaxed. He was cumming in his pajamas again.\n\nFive minutes later, he stood in the shower, washing himself off. His thoughts were troubled. Another wet dream, just a few days after the first one. What was happening to him? Why did his dreams have him lusting after every girl at school, every girl but Michelle? Why was his subconscious weaving together these lurid fantasies of public exposure?\n\nHe gazed down at his drooping penis, dripping in the shower water. A stubborn, defiant organ. It insisted that every woman was the same, that sex was sex, that a naked woman was a naked woman, no matter who she was. That sulking, dangling thing. It just wanted to feel good, to nestle in someplace tight and warm and wet. It wanted to pretend that was all that mattered.\n\n\"You don't even get it,\" his thoughts raged. \"If we sit in that theater on Saturday, and we see Michelle is actually Glenn's girlfriend, it's going to destroy us. Nothing else is going to matter. There won't be a Ronni, there won't be a Vampire Vanessa. There won't be another woman to convince to strip in public. There's just going to be emptiness. The rest of senior year is just going to be empty and colorless and nothing else.\"\n\nHis penis sagged towards the drain, the water dripping from it in a steady stream. It had one eye, pointed down, as if avoiding his gaze. Could it feel shame? His wet dreams seemed like denial. He could already see the bleak days ahead, cock in hand, lying in bed alone, masturbating to his memories of Michelle. His penis would be satisfied, it must be satisfied, even if it could only be satisfied by the fading memories of his one achingly brief brush with love.\n\n***\n\nThe fake beard and moustache made Charlie's face itch. Earlier, he had bought a ticket and walked through the theater lobby without anyone scrutinizing his disguise. All credit to Jennifer - she was a skilled make-up artist and did excellent work. Charlie barely recognized himself when he looked in the mirror.\n\nHe arrived early so he could find a seat in the back of the theater, a spot where Michelle was unlikely to see him. Even with the disguise, he feared that she would be able to pick him out. He wanted to be sitting in his spot before she or any of her friends arrived.\n\nHe picked a spot that gave him a good view of the entrance to the theater. He could lean over slightly and look down the aisle all the way to the front row. He could see Michelle's arrival and he would be able to see when she left. If she glanced up in his direction, he just needed to lean back and slouch and he would disappear into the darkness.\n\nBut when Michelle finally arrived, Charlie realized the flaw in his spying position. Michelle and Glenn were sitting next to each other and he was too far away to see anything they did during the movie. The movie was almost two hours long and anything could happen during that time. They could hold hands. They could kiss. Charlie was there to observe the way Michelle interacted with the charismatic football player, but he had no view of it.\n\nMaybe he could move during the movie, when the theater was dark. Find a seat a little closer. The theater was nearly empty. He had a lot of seats to choose from. He just had to remember: the closer he sat to her, the greater the chance she might see and recognize him. And that would be a disaster.\n\nStill, he had to chance it or the whole thing would be a waste of time. He needed to be able to see them. He just had to trust in Jennifer's disguise. Michelle didn't expect him to be there and she wouldn't be looking for him. She wouldn't pay any attention to the scruffy man in the baseball cap and the beard.\n\nHe heard laughter from below. Boys laughing. Glenn and his friends having a good time. Charlie clenched his jaw and slouched in his chair. He wondered when the movie would start. The time on his phone read 7:48. The movie was three minutes late.\n\nThe lights dimmed. Finally! Charlie perked up in his seat. The screen lit up and started to play a commercial for Coca-Cola. Then a warning to the audience that all cell phones should be silenced. Charlie tapped his foot impatiently through one preview, then the next. He told himself that he would wait for the movie to start before he slipped out of his seat and crept closer to Michelle's row.\n\nHe was leaning forward, too far forward, when all of a sudden Michelle appeared in the aisle, walking up the stairs. She seemed to be looking straight at him. Charlie froze; he waited for the inevitable reaction when she recognized him. Instead, her eyes slid to the side, oblivious to his presence. Maybe he was hidden in the darkness, or maybe his disguise fooled her. Whatever the reason, she didn't notice him.\n\nVanessa and Tina followed her. Three girls on an expedition to the lobby. Maybe they wanted to buy sodas and popcorn from the concession counter. Or maybe they were all headed to the bathroom. They would likely miss the beginning of the movie, but probably they didn't care.\n\nWhatever their reasons for leaving, Charlie couldn't move while they were gone. He couldn't risk getting caught while wandering through the theater. Besides, if Michelle was outside with Vanessa and Tina, then she wasn't with Glenn, and Charlie had no reason to watch her. He leaned back in his seat and watched the start of the movie.\n\nNight Crew. Not the kind of movie he would pick to see. It was a comedy about a group of custodians at a department store. Charlie wondered which of Michelle's friends had picked this particular film.\n\nHis phone buzzed from where it was sitting on the seat next to him. A text message. To his surprise, it was from Michelle.\n\n\"Hi, Charlie,\" it read. \"Are you out with Ronni?\"\n\nDid she know? Did she see him? Charlie glanced down the aisle but no one was looking in his direction. Michelle was still outside with her friends, as far as he could tell.\n\nSo maybe she was asking because she really thought he might be out with Ronni. She wanted to know how it was going. Charlie cradled the phone in his hand, his finger hovering over the keyboard. He thought about making up a story, something about an awesome date with Ronni, everything going perfectly, blah blah blah. But then he wondered what the point was of lying to Michelle. To try and make her jealous? Maybe she wouldn't even care. And what if she discovered his lie? It would be humiliating.\n\n\"No,\" he texted back. After a brief hesitation, he typed, \"I saw her earlier today. We did some editing on the film. Just work.\"\n\nHe waited to see if Michelle would respond. After a minute, her response appeared on the screen: \"No plans with her tonight?\"\n\n\"No,\" he wrote. \"Cancelled.\"\n\nHe watched his phone, waiting for an answer, but it never came. When he saw Michelle reappear in the aisle with her friends, he knew he wasn't going to get a response. Their brief communication was over; Michelle wouldn't dare text him in front of Glenn. He watched her walk down to her row, and his eyes followed her in the dim light until she disappeared into her seat.\n\nNow he wasn't sure what to do. He wanted to find a seat where he would have a better view of her, but now that she had texted him, he felt self-conscious about being there in the theater with her. It felt like she had put a spotlight on him. She was thinking of him, she wanted to know what he was doing, if he was with Ronni. But he wasn't with Ronni. Because he was spying on Michelle. Stalking her. That was what he was doing, wasn't it? He was stalking her.\n\nHe was the bad guy in the movie.\n\nHe wanted to leave. The whole scheme seemed ridiculous to him now. In the back of a dark movie theater, wearing a fake beard and a baseball cap, watching Michelle's seat like he could see through it if he stared hard enough. Even if he sat closer, would he really be able to watch her while remaining inconspicuous? It would be pretty obvious he was watching her and not the movie.\n\nAll this subterfuge, and in the end, all he had was a view of the back of her seat.\n\nA burst of laughter came from that row. He couldn't tell who it was. He didn't think it was Michelle's laugh. Whatever they were laughing at, it wasn't the movie. Charlie leaned forward, concentrating on separating the sound of the movie from the noises coming from Michelle's row. He couldn't see her, but maybe he could hear her.\n\nMore giggling, laughter. Voices talking back and forth. Charlie wondered if this was why they had picked a movie that had been out for weeks. The theater was close to empty and they could talk and laugh without worrying about the other customers complaining. Charlie thought he heard Michelle giggling a couple times, but he didn't hear her saying anything.\n\nA text appeared on his phone. It was from Michelle, and she provided a reason for some of the laughter. \"Ugh,\" she wrote. \"Someone snuck tequila into the movie. They're playing a drinking game.\"\n\nHe wrote back, \"Who?\"\n\n\"Cody. Others.\"\n\n\"Are you playing?\"\n\n\"No,\" she wrote. \"I don't drink.\"\n\nCharlie looked up at the movie screen. Three of the custodians in the film were trying to chase down a raccoon, with slapstick consequences. Charlie texted Michelle: \"Is the movie good?\"\n\n\"No,\" she wrote back. \"It's terrible.\"\n\nHer friends didn't seem to think it was so terrible. Charlie heard an eruption of laughter from that row as the custodians fell over each other trying to chase the raccoon. He checked the rest of the theater and could only see a handful of other patrons, scattered here and there. Charlie's row was empty except for a short elderly man on the far side. The elderly man was absorbed in the movie, but he wasn't laughing. No one was laughing in the theater but Michelle's friends.\n\nWas Glenn drinking? Charlie wondered if his rival had joined in the drinking game. He wished he could figure out a subtle way to ask Michelle about it in a text. Glenn and Cody were friends, and if Cody was drinking, it seemed likely that Glenn was getting drunk as well. What was Glenn like when he was drunk?\n\nNow the laughter coming from that row seemed like drunken laughter. The loud voices sounded like the belligerent shouting of the intoxicated. \"Oh my god,\" Michelle texted. \"This is embarrassing. They're being so loud.\"\n\nCharlie texted back, \"Who?\"\n\n\"The boys. They're drinking and being loud.\"\n\n\"Are people complaining?\" Charlie asked.\n\n\"No,\" she sent. \"No one else is here, thank god.\"\n\n\"Wrong,\" Charlie thought to himself. \"I'm here.\" But, of course, he wasn't going to tell her that. And he wasn't going to complain about her friends, no matter how loud they got. Actually, if he was being honest, it made him happy that Glenn, Cody and the boys were behaving so obnoxiously. Their behavior might cause Michelle to think twice about spending time with them in the future.\n\nThe movie seemed to be reaching a climactic moment. The custodians had all been fired, and now they sat around a table brooding about their futures. Michelle texted him. \"Now Cody and Vanessa are making out. They're not even watching the movie anymore.\"\n\nCharlie was about to type a response, when another text came from her. \"Hello,\" it said. Then several more texts, very quickly, one after the other: \"Hello.\" \"Hello.\" \"Test.\" \"Test.\"\n\n\"What's up?\" He texted back.\n\nStill more texts came from her. \"Test.\" \"Test.\" \"Test.\" The phone vibrated in his hand.\n\nThen: \"Are you here in the theater?\"\n\nToo late, Charlie realized that his phone had been audibly buzzing with each text that she sent. The movie was at a quiet moment, and Michelle's friends weren't making any noise, either. The sound of his phone buzzing must have carried down to the row where Michelle sat. She had caught on to the pattern: every single text she sent to Charlie resulted in a buzz from the back of the theater.\n\nHe fumbled with the settings of the phone, trying to make it silent. But Michelle was done sending texts; Charlie looked down the aisle and saw her emerge from her row. She started up the stairs, her eyes flashing over each row, examining each person. She didn't have many to pick from, and her eyes swiftly landed on Charlie. She stared up at him for a moment, and he could see the exact moment when she recognized him.\n\nShe stormed up the last few steps and loomed over him in the back row. \"Charlie! What is this? What are you wearing?\" She spoke in an angry whisper. \"What the heck are you wearing? Is this thing glued on?\" She seized the beard, tugging on it. He winced as it pulled at his skin. \"Are you here spying on me?\"\n\n\"I... um....\" How could he deny it? What else could he be doing?\n\n\"You look ridiculous,\" she said. \"Who put this on you? You look like a biker.\" She pulled at the beard again.\n\n\"Jennifer Addish.\"\n\n\"Right. Of course. Ronni's best friend. She helped you put on a disguise so you could come here and spy on me.\"\n\nCharlie shook his head. He didn't even want to look at her. He spoke in a low voice, \"I'm an idiot.\"\n\n\"What?\"\n\n\"You're right. I don't even know what I'm doing here. I'm sorry. This was so stupid.\"\n\n\"You're here to spy on me.\"\n\nHe looked up at her. \"I am. The thought of you with...with him. I'm sorry. I'm acting crazy. Jealous. I don't even know what I'm doing.\"\n\nShe looked down at him silently for a moment, her hands on her hips. Her lips were pursed together. \"Will you leave?\" she asked.\n\n\"Yes. I'll leave.\"\n\n\"Right now?\"\n\n\"Yes. I won't spy on you anymore. You don't have to tell me this was crazy. I know it was crazy.\"\n\n\"Ok.\" She glanced down the aisle, towards the row where her friends sat. \"I'll talk to you later, then.\"\n\n\"Ok. I'm sorry, Michelle.\"\n\n\"That's fine. I'm still mad at you, though.\" Michelle turned and started down the stairs. She only made it down five steps before she turned around. She hesitated, gazing at Charlie, then shot a quick glance towards the front of the theater where her friends were sitting. They were blocked from view by the tall seats. Michelle looked back up at Charlie. Swiftly, she came back up the stairs.\n\n\"Michelle?\" he asked uncertainly.\n\nShe slid her jacket off her shoulders. She let it fall to the floor.\n\n\"Michelle?\"\n\n\"You make me do crazy things, too,\" she breathed. Now she was undoing the buttons on her shirt.\n\n\"Michelle...\" Charlie whispered. He could see past her to the old man sitting on the other side of the row. The old man was still watching the movie. \"There's a man in on the other side of the row. He can see you.\"\n\nMichelle finished unbuttoning her shirt. She slid it off and let it drop to the floor. She reached behind to undo her black bra. \"It doesn't matter,\" she said. \"He won't recognize you. You're wearing a disguise, aren't you?\" She slid her bra off. It joined the rest of her clothes on the floor.\n\nCharlie looked past her, towards the elderly man, and saw that the man had noticed them, and was looking right at Michelle as she stripped. Charlie said nothing; he watched as Michelle pushed her tight jeans down her thighs, revealing dark panties. Charlie could see that the old man had his eyes locked onto Michelle's ass. \"He's looking right at us,\" Charlie said in a low voice.\n\nMichelle turned around. She faced the stranger, wearing nothing but a flimsy pair of black panties. Her finger rose to her lips and she gave the man the \"shhh!\" gesture. Then she bent over and pushed her panties down her legs. When she sat down in Charlie's lap, she was completely naked, and didn't seem to care at all that the old man ten seats away had forgotten about the movie and was now entirely focused on the live show she and Charlie were putting on.\n\nShe kissed Charlie. The fake beard must have felt odd to her, but it didn't cause her any hesitation. He wondered if it was part of the thrill for her; maybe she was pretending that he was a bearded stranger. Her legs were pressed tightly together, but when he slid his hand between her knees, it took only the slightest nudge to make her spread them wide apart. She was giving a clear view of her pussy to the man on the other side of the row, and Charlie knew how it excited her. He could feel her excitement when he slid his fingers into her.\n\nEverything was happening so quickly. Charlie understood why they had to rush; Michelle had a row of friends sitting below who might start to wonder where she was if she was gone too long. This wasn't a slow, romantic encounter. Michelle had suddenly gotten it into her head that she wanted to fuck him, and that's what she intended to do.",
        "She straddled him, grinding against him while her mouth pressed hungrily against his. Her pussy rubbed against the bulge of his cock through his pants. Somehow, through anxious and frenetic fumbling, they managed to free his cock, and she rose above it, dropping onto it, sliding it into her wet slit. She bounced on his lap, impaled on his erection, her breasts rising and falling in front of his eyes.\n\nThey fought to keep silent as they fucked furiously in the back row of the movie theater. The old man, who might have given them away, instead watched their coupling in awed silence. Fortunately, the events in the movie had returned to slapstick humor, and the loud sound effects obscured the sound of their sex.\n\nThe whole thing happened so quickly. Charlie tried to last as long as he could, but he quickly felt the tightness in his groin that meant he was about to cum. \"I can't... I'm about to...\" he moaned in her ear.\n\nMichelle suddenly slipped off him. She reached down and clutched his cock in her fingers. \"Don't hold it back,\" she whispered in his ear. \"Just go ahead.\"\n\n\"Michelle...\" he groaned. She was squeezing him, stroking him, and all at once it broke free. Cum spurted from his cock like it was a firehose. Michelle clutched his shaft in her small hand, and directed his cock towards him. She made sure that every drop of cum landed on his shirt.\n\n\"I'm still mad at you, Charlie,\" Michelle murmured. \"You shouldn't spy on me like this.\"\n\nCharlie was in a daze. He looked down at the sticky white mess on his shirt.\n\nMichelle gathered her clothes and started to dress. \"We'll talk later,\" she said.\n\n\"Michelle...\"\n\n\"That was hot.\" She smiled at him. \"I've always wanted to have sex in a movie theater.\" She was already nearly dressed; he was impressed by the speed with which she slid back into her garments. Once everything was back in place, she turned away and walked back down the steps. She didn't say another word to him, didn't give him a backwards glance. Just left him with his cock out and his shirt dripping in cum.\n\nCharlie had some napkins with him, but they proved inadequate for dealing with the mess on his shirt. Finally, he just put on his jacket and held it closed in the front as he walked down the stairs and exited the theater. Fortunately, no one paid any attention to the man in the beard who slipped quickly and quietly out the exit door and disappeared into the night.\n\n***\n\nCharlie's phone buzzed while he was in bed staring at the night sky out his window. It was almost midnight. He glanced at the screen, expecting it to be Michelle, but it was Ronni.\n\n\"Hey,\" she said. \"Is it too late to call?\"\n\n\"It's all right. I'm still awake.\"\n\n\"So... what happened? Did you go to the movie?\"\n\n\"Yeah.\"\n\n\"Michelle was there?\"\n\n\"Yeah.\"\n\n\"So? What happened?\"\n\nHe considered his answer for a moment. \"It's okay. Everything's okay. She doesn't like Glenn.\"\n\n\"No?\"\n\nCharlie recalled the feel of Michelle's pussy around his cock, her naked body on top of him, moving up and down in his lap. \"No,\" he said. \"I think Michelle and I are good.\"\n\nRonni was silent for a moment. \"What happened, Charlie?\" she asked.\n\n\"The disguise didn't work,\" he said. \"She knew it was me.\" His face was red where the beard and moustache had been. He had removed them too quickly in the car.\n\n\"She recognized you?\"\u2028\n\n\"Yeah. But it's all good.\" He paused. \"I think we worked it out.\"\n\n\"Oh. You did? As in, you're back together?\"\n\n\"I think so.\" The way Michelle had stripped for him, as if she yearned to be naked for him. The feel of her, on top of him in the theater, her body pressed against him, her lips on his. \"Yeah, we're back together.\"\n\n\"She wasn't mad about you sneaking in to watch her?\"\n\n\"No. I mean, yeah. She was mad about that.\" The whole thing was starting to seem surreal. Like a weird dream. Just like the evening in the Macy's parking lot. \"I don't know. She said she was mad... but I think a part of her was glad I was there?\" He gazed up at the dark sky out his window. \"Maybe I looked so pathetic when she caught me that she couldn't stay angry.\"\n\nRonni was quiet. Maybe she understood that he couldn't tell the whole story, that he had to keep some of it between Michelle and himself. \"Well,\" she said softly, \"you sound happier now, Charlie. So maybe it was worth it in the end.\"\n\n\"Yeah,\" he said. \"It was a crazy thing to do, the whole disguise thing... I probably shouldn't have done it. But it worked out.\"\n\n\"I'm glad she makes you happy. I want you to be happy. Good night, Charlie.\"\n\n\"Good night,\" he said, but Ronni had already disconnected."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "public nudity",
        "public sex",
        "exhibitionist",
        "cmnf",
        "movie theater"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-11"
}