{
    "title": "The Designer Ch. 12",
    "pages": [
        "The thought of being able to influence someone's self-control was too tempting. I quickly scanned Alyssa's profile in the elevator, and centered on the familiar sexual curve. With a slightly different tactic, I pushed along the top of her moral curve. It felt like flicking my tongue across the edge of my teeth. I wanted to reduce her normal level of self-control, but I wasn't sure what, if anything, would happen.\n\nI watched her carefully as she was thinking her private thoughts. I heard her soft, sensuous intake of breath, as if just reliving a sensuous thought. Her lips pressed together, then opened, the tip of her tongue slipping along the slight gap. Her eyes drifted down to my crotch, and I felt myself get aroused as she let go of my hand, and slid her fingers up my thigh. I looked up at the elevator lights, noticing we were getting close to the lobby. I felt her hands cup my bulge, fingers exploring the outline of my tumescent cock.\n\nI sighed reluctantly, and tried to reverse my push across her moral profile. More of a mental pull back, than a push. Alyssa looked up at me, and leaving the lingering touch of her fingers, she removed her hand, and returned to interlocking her fingers with mine.\n\n\"I guess that answers the question,\" She laughed, her blue eyes sparkling.\n\nI smiled at her as we exited the elevator. We shared a quiet silence as we walked through the hotel lobby and exited the building. We walked the short distance to the restaurant. We entered the restaurant and found the three girls sharing a table. They'd already helped themselves to the breakfast buffet, so we quickly filled our plates and joined Carmen, Kelly and Lexi at the table.\n\nThey were all smiles, and beautiful. I sat down next to Kelly, with Alyssa beside me. Kelly leaned over and kissed me on the cheek, and rubbed her hand along my thigh. I smiled back at her, and gave the self-control pull-back command I'd just learned. Kelly moved her hand back to her own lap, but still smiled at me. \n\n\"Maybe I could make this work!\" I thought to myself.\n\n\"How was your run?\" I asked Lexi, as I started eating.\n\n\"Sucked.\" Lexi admitted with a small frown, \"I felt like I couldn't keep even the slow pace I usually run with Carmen.\"\n\n\"Hey!\" Carmen teased, \"I'm not horribly slow!\"\n\n\"You know what I mean, Car-car!\" Lexi continued, \"I just think missing a week of running really affected my training.\"\n\nI was busy monitoring the areas of Lexi's moral profile, and as she talked about running, I tried to reinforce any self-control around her running areas. I hoped that might help get her back on track. I felt really guilty that my recklessness might have affected her goals. Perhaps sensing my regret, Alyssa squeezed my thigh. It comforted me, knowing that she could sense my uneasiness.\n\nAs we ate, Alyssa started questioning Kelly, asking the standard questions. I held Kelly's hand as they talked, scanning and adjusting as I listened to her answers. It wasn't a perfect plan, because with such a drastically altered moral profile, there were many things that she no longer seemed to feel strongly about. There was a topic, I really wanted to know more about, so when Alyssa's questions slowed, I stepped in.\n\n\"Kelly, tell me about Carl?\" I asked gently, \"Were you two serious?\"\n\nKelly dropped her eyes slightly, \"I don't really know, Jeremiah. I think I wanted it to be more serious than it really was. I've been thinking about him this past week. Wondering if we'd been happy if I'd reacted to his advances the way I did with you.\"\n\nI gulped quietly, I wasn't sure if she knew how I'd affected her. It wasn't that she had accepted my advances. My adjustment made it easier for her to choose to have sex, so it really wasn't the same thing. I watched her closely.\n\n\"The more I thought about it, the more I realized that Carl...\" Kelly started, \"Carl wasn't in love with me, he was in love with the idea of having sex with me. All our conversations eventually lead to making out. We never talked about other topics, like Alyssa was asking about just now. I really think he just wanted to have sex with me.\"\n\nI stifled a sad sigh, convicted at the bluntness of her realization. I was just like Carl when we first met, I was just as guilty.\n\n\"With you, Jeremiah, I felt different.\" Kelly continued to explain. Alyssa held my other hand, comforting me as Kelly explained herself.\n\n\"Even though I wanted to have sex with you after the first kiss,\" Kelly laughed, \"I felt like you were interested in more than just putting tab A in slot B. You were so good to me, making sure I experienced all the wonderful things about sex. Then you talked with me, stayed the night with me. You even planned a special weekend, this weekend with all of us. Carl would never have done anything so special.\"\n\nKelly leaned over and kissed me on my check. Her hand sliding around behind my head, and turning my face to her, before kissing me softly on the mouth. \n\n\"Thank you, Jeremiah,\" She said, lifting her eyes to mine, \"I feel like you've given me a gift.\"\n\nI smiled back at her, but I couldn't resist asking another question, \"Are you bothered that I'm not only with you? I mean I've had sex with everyone at this table.\"\n\nI heard a giggle, and turned to see the waitress had stopped by to clear some dishes and had overheard me. Lexi saw her pause at my statement and giggled. Carmen laughed as she saw the waitress look at me, then all the girls. I turned about every shade of red at once, and the waitress smiled at me, shook her head and backed away.\n\nAll four of the girls laughed joyously. I was mortified, but then laughed too. I had either made the waitress really curious, or scared her away. Almost 500 miles from home it really didn't matter what other people thought about me. Also the look on the poor lady's face was priceless.\n\nKelly leaned into me, and spoke loud enough for all of us to hear, \"I didn't always feel this way. I know I used to have very different feelings about sex, and relationships. In the past week, however, I've grown to love Lexi and Carmen as much as anyone I've ever known. I hardly know you, Jeremiah, but I feel I can trust you, and Alyssa has been really helpful with sorting out how I feel about everything. It doesn't seem wrong to me that we've all shared you. It just seems natural, I don't know why.\"\n\n\"Thank you for being honest with me, Kelly,\" I started, then turned to look at each of my lovely companions.\n\n\"Do each of you feel the same way?\" I asked, \"Is it awkward for any of you?\"\n\nAlyssa reached over and took my hand in hers, holding mine softly. She watched the other girls, as she waited for either Carmen or Lexi to speak. Lexi shifted a bit, then looked at me.\n\n\"I love being with you, Jeremiah,\" she started then looked at the other girls in turn, \"And you Kelly, and of course you Carmen. Alyssa I loved being with you last night and this morning.\"\n\nLexi shared her wonderful smile with each of us in turn, her eyes bright with a happy emotion.\n\n\"I can see all of us sharing our love more often,\" she continued, then looked directly at Kelly, \"When I first moved in with you, Kelly, I had a crush on you. I was too timid to admit it. You seemed to be so perfect, so pure. I quickly put it out of my mind.\"\n\nShe then turned and looked at Carmen, holding her hand as she spoke with her, \"When I met you Carmen at the track, I felt an immediate bond of friendship. I also started having fantasies about being with you, especially after hearing you have sex so often.\"\n\nFinally, Alexis met me with her eyes, \"Since I met you Jeremiah, I've felt freer with my sexuality. I feel like I can finally be me, who I am on the inside and out. So yes, I feel exactly like Kelly\"\n\nWe all looked towards Carmen, who smiled brightly and the laughed, trying to lighten the mood, that had become serious.\n\n\"Fuck, I just like fucking y'all,\" Carmen said candidly, then lowered her voice, \"Seriously, you guys know I have had my share of fucked up relationships.\"\n\nShe looked directly at me, \"But ever since I met you Jeremiah, I knew you were a different sort of man. You have always shown concern for my friends, and compassion for me.\"\n\nShe looked at Kelly then Lexi, \"I've grown to love both of you crazy bitches like sisters, I don't ever want to be apart from you.\"\n\nThen she looked directly at Alyssa, \"You were so sweet to me when I felt so horrible yesterday. Thank you. I also think you're sexy as hell, and I'm calling first dibs on you tonight!\"\n\nThe table all laughed at Carmen's statement, but Alyssa turned to me before speaking, \"Jeremiah always has first dibs on me.\"\n\nI sighed and kissed her softly, then said, \"I love you, but I've watched you looking at Carmen all morning. I don't think I could keep the two of you apart.\"\n\nAlyssa smile, then looked around the table, meeting each girl's eyes. \"I hardly know any of you, but we all share a common love of this man,\" she squeezed my hand, \"I love him, and though I only have met all of you, can't imagine that we won't all be together soon.\"\n\nThe thought of all of us together beyond this weekend hadn't really registered with my brain. It was at once arousing and horrifying. I knew in my gut that I love each of them in their own special way. The responsibility of providing for all of them, their happiness, it was a weight I almost felt physically. At the same time, I had a sense of joy. I freely admit that I felt a strong connection to each of the girls, regardless of the randomness of how we met. It felt like fate had made all of this happen. I smiled and held up my water glass to all of the girls.\n\n\"A toast!,\" I began, \"to us! Let's find out how this will work. I'm all in.\"\n\nThey all raised their glasses and repeated in chorus, \"To us.\"\n\nThe conversation shifted with the acceptance of our new weird family. The girls started to excitedly discuss what needed to happen. The end of the semester was only a few months away, and Alyssa promised to find out the requirements for transferring. Kelly promised to talk with her parents about her change in major, and she seemed very determined to have the conversation. I buttressed her self-control in that area as she spoke of her plans.\n\nSoon, though, the conversation died down. Carmen started looking at Alyssa in her predatory way, which was very sexy. I started to get aroused, and Alyssa felt me stiffen. She turned to me, then followed my eyes to Carmen's. When she saw Carmen's smouldering eyes lock into hers, she flushed and caught her breath. I called for the check, and soon the five of us were hurrying out of the restaurant and back to our suites.\n\nOnce again we barely made it to the elevator before Carmen was pulling Alyssa into her, and kissing her hard and passionately. I remember thinking idly, I could reinforce their self-control but then where is the fun in that. I pulled Lexi and Kelly to me, and kissed one then the other waiting for the elevator to make it to our floor. Had I mentioned that the elevator was somewhat slow? By the time it reached our floor, Kelly was rubbing my erection through my pants and I had my hand up Lexi's shirt caressing her firm breast.\n\nWe spilled out of the elevator, and I'm not sure who moved down the hall faster, Carmen or Alyssa. The three of us watched them enter into Carmen's side of our adjoining suite, while I walked Kelly and Lexi to my door and opened it, letting the two girls enter first. As they entered they pulled off their clothes and headed to my bed. I paused at the adjoining door, and took a moment to see what Alyssa and Carmen were doing.\n\nAlyssa was on her back, with one leg between Carmen's open thighs. Carmen was bent over Alyssa and they were kissing deeply while Carmen's bottom pressed into Aly's core. A slow sensuous rotating grinding motion of Carmen's hips revealed her talented dancing movements. Alyssa's hands clung to Carmen's hips, pulling her closer. I couldn't see, but could imagine that Alyssa was arching her back trying to press harder into the juncture of Carmen's thighs.\n\nI closed the door part way, and turned to my bed. Kelly and Lexi were both naked, heads leaned back against the headboard on each side of the king-sized bed. They were both on their backs, but they were kissing each other deeply. Each had a hand in the other's pussy, rubbing up and down the other's slippery pink lips. I stripped slowly, enjoying the show on my bed. I slowly walked towards them, with my hand idly stroking up and down my engorged manhood.\n\nAs I crawled from the foot of the bed, both girls' heads turn toward me in unison. Smiles grew on their faces as they watched me slowly stroke my cock. Each of them swiped their tongue along their lips, then moving with an odd synchronicity swiveled their bodies and crawled towards me. Lexi's athletic form was almost feline in its sensuous flow, while Kelly's more fuller curves moved with a practiced grace. As they reached where I knelt, they rose up and kissed me on the cheek. I turned and kissed Kelly first, enjoying her open mouth and languid tongue. Then I moved to kiss Lexi, who kissed me with an aggressive passion, her tongue darting into mine. \n\nIn some unspoken agreement, they pulled then pushed back towards the head of the bed. I fell and twisted onto my back. As I bounced into the mattress, my cock bounced erratically. Lexi reached out a hand and steadied the rod, and Kelly leaned over and sucked the head into her mouth. Lexi bent over from the other side of my body and kissed down the side of it, then kissed my balls, sucking one testicle carefully into her mouth. I moaned appreciatively, my fingers combing through blond and amber locks as they worked in tangent on my cock.\n\nMy hands traced down the back of their head and along their spines. Tracing along the curve of their buttocks, my fingers slid around each of their round cheeks and between their thighs. Cupping each of their sexes, I wriggled the tips of each finger between their aroused lips, coating the tips with the wetness of their arousal. My ministrations only encouraged their love of my cock and balls, they switched places, Kelly's sensuous mouth moving to my other testicle, while Lexi's more aggressive mouth worked its way down my shaft.\n\nAfter tracing my fingers along each of their pussies, outlining each lip, and circling the very differently shaped firm nubs, I slid one finger deep into each slit. Each finger slid in easily, and I added a second finger to each of their accepting tunnels. They moaned over my cock and balls, as their hips undulated their sexes against my hands. As I continued to explore inside of their pussies, it was almost like being a puppeteer, my fingers eliciting delicious feedback as the girls kissed, sucked, licked and nibbled my sensitive organ. \n\nFinally I pulled my fingers from their quims, and tapped their bottoms, indicating that we needed to rearrange. The sensations flowing through my core were nearing the brink, and I didn't want to crest too soon. Sensing my intention the girls moved away from my twitching shaft and slid up alongside me prone form, and then kissed me. I could taste myself in each kiss. Kissing one sexy coed before turning and kissing the other. Exploring with my lips and tongues, until I could tell the difference of each person with my eyes closed.\n\nI felt a hand reach and grip my shaft, by feeling I could tell it belonged to the body associated with Kelly's sweet mouth. That body moved and I felt a leg swing over my hips. Her hand pulled my cock to align with her slippery sex and I moaned into her mouth as my cock slid deep inside of her. Her mouth disconnected and her face withdrew as she rose up to ride my cock like a cowgirl. A halo of red hair obscured my vision as Lexi leaned into me and kissed me deeply as I moaned in passion.\n\nThen Lexi's mouth separated and I could watch Kelly's voluptuous form bouncing on my groin for a few moments before a freckled thigh once again blocked my view. I followed the line of the firm muscular leg up and was treated to the smoothly shaved mound with the gaping aroused lips of Lexi's pussy. I licked my lips and lifted my mouth to her tender crease as she lowered herself onto my extended tongue. The weight of her body pressed my head back into the mattress as she ground her sex into my willing mouth. My thoughts became sparse as I focused my attention to licking every millimeter of Lexi's delicious cunt.\n\nI felt Kelly's body moving up and down on my cock. Then a slight change in the angle of my entry and feeling Lexi's pussy angle change indicated the two girls were joined in a kiss. I imagined watching the pair arched over my body. My mouth and cock using their sexes for my pleasure, while they pleasured themselves above me. We fell into a slow sensuous rhythm, interrupted by spasms of frenzy, backing off before plunging over the brink. The triangle of our bodies vibrating in erotic passion.\n\nAfter untold seconds, minutes, the frequency of our delicious vibrations pulsed us over the edge. I felt both girls gyrations increase frantically. I lifted my hips into Kelly, bouncing my buttocks off the bed to thrust into her deeper. I reached around Lexi's thighs and pulled her down onto my mouth, as I encircled her pulsing lips and flicked my tongue back and forth over her clit. I felt both bodies above me part and moans erupted into the air. Their shrieks muffled by the hard grip of Lexi's thighs against my head. I let go, thrusting hard and arching my back, pounding my cock upwards into Kelly's pussy and ejecting cum deep into her womb.\n\nIt seemed as if we froze in that position together, three bodies shivering in orgasmic ecstasy. Then in concert deflating, our bodies quietly lying against the soft mattress. Only the sound of our breathing fill the air as the girls arrange themselves against my side, and our breathing slows. Then an odd sound begins, like a tapping. Confused I lift my head to see Carmen and Alyssa at the door to our adjoining room.\n\n\"Amazing!\" Alyssa said softly, clapping her hands playfully.\n\n\"Oh My God,\" Carmen sighed sensuously, \"I hope you have some left in you Jeremiah.\"\n\nCarmen crawled onto the bed and started softly cleaning the combination of Kelly's juices and my cum from my shaft and balls. Soon Alyssa joined her and the pair made neat work of lapping every stray drop. They paused periodically to kiss, as if sharing the taste of some special concoction, before lapping up a new section of sexual excretions. By the time they had finished, my cock was fully aroused again.\n\nCarmen rose up satisfied and held my shaft as Alyssa rose up and straddled my aching erection. Alyssa slid down my shaft, and I watched Carmen climb up the bed towards my face. Lexi and Kelly made room while Carmen lifted her firm olive skinned thigh over my head. I lifted my face to inhale her musky scent. Then lost myself in the sensations of being worked again by two of the women I loved. My hands soon found purchase on the spare bodies, and I caressed the skin of Kelly and Lexi. All five of us moved together. I lost myself in the sensation, completely unaware of the passing of time. I don't know how long the five of us made love, until we fell asleep.\n\n-------------------\n\nI woke up surrounded by naked bodies, and twisted sheets. We had started playing around near noon, and now the windows were dimming with the fading twilight. I stayed as still as I could listening to the quiet breaths of my companions, and tried to figure out who was where without waking anyone up.\n\nI moved my eyes and saw a mane of light brown hair on my chest, rising and falling with my breaths. I knew it was Alyssa, her ear pressed to my chest and listening to my heart beat. My arm was around another body, a head pressed against my shoulder the blond hair tickling my jaw; Kelly. Behind Alyssa a freckled arm draped over my lovers shoulder and I knew Lexi was snuggled in behind Alyssa on my left. So that meant the hand and fingers idly playing with my soft cock and balls belonged to Carmen. I small lift of my head so I could look down my body and I saw her black mane of hair on my belly. She faced away from me, and must have been just looking at my cock as she played with it.",
        "Smiling at the thought, I flexed my inner muscle and made my cock engorge a small bit, and I heard Carmen's sharp intake of breath. She turned her head, and looked up at me with a smile.. then shifted her body to kiss my cock. I groaned and shook my head, I felt almost raw. She smiled and gave it a nice peck on the tip, then slid up my body to look at me.\n\nI mouthed, \"are you hungry?\" not wanting to wake the other three.\n\nShe nodded and smiled. Then she laid her head on my abdomen, and combed her fingers through Alyssa's hair. Alyssa stirred her head moving back before relaxing back into my chest. She must have smiled at Carmen, because Carmen's smiled slightly changed. Carmen moved up and kissed Alyssa, dragging her breasts across my skin. I felt my dick pulse in response to the sensuous movement, which cause Carmen to look at me. Then Alyssa moved to look at me, and smiled. Her movement woke up Lexi, who slid over Alyssa to kiss Carmen, while all the motion stirred Kelly who started kissing my chest and rubbing her fingers across my chest.\n\nI could have stayed in that bed forever.\n\nInstead I shifted my body and sat up, as the girls all shifted into sitting positions. We enjoyed a comfortable closeness, that while sexually charged with our nudity was also just a relaxing respite. Eventually everyone started sliding off the bed, and moving to find clothes. It was almost like we didn't have to say anything to understand that it was time to eat. In a few minutes we were all dressed. Then we looked at each other and realized that all the girls hair was messy, and we all laughed at each other.\n\nWhile the ladies went into the bathrooms, I sat in a chair and collected my thoughts. The day we had today was without drama, I didn't feel bad for enjoying all of my women. Though I didn't know what to call all of them. My girls, sounds possessive; My harem, too middle eastern; My family was the closest fit. But that didn't really completely define who we were. I felt like our connection was deeper than any relationship I'd ever had, even more than my parents and siblings.\n\nWas it because I had shifted their minds? Was my mind shifted because of that interaction? Did my initial careless push bind us together forever, or was it the more careful small fixes that slowly knotted our psyches. I knew that Alexis and Kelly were just slightly different than Alyssa and Carmen. Alyssa and Carmen still seemed to be their own selves. Drawn to me, but also willing to make up their own minds. Lexi and Kelly always seemed to want to check in with me, see if I was okay. The three of us seemed to share a more intuitive understanding of each others minds. Almost like a hive mind, where the swarm does the bidding of the queen.\n\nWait, that would make me the queen? I smiled at my own joke. No, I was definitely a king, and these four were my princesses. As I wrapped up that thought they all returned to the main suite's sitting room as if on cue. They all had their hair back in ponytails, and looked radiant. Without saying another word, I followed them out of the room and down to the hotel.\n\nI began to wonder what, if any, additional control I had of the other girls minds. My perception was I could effect their moral values and their self-control. I thought that they still retained the ability to choose, a modified free will. I decided to try another experiment, could I directly influence their behavior, could I make them choose to do something. Without speaking, I tried to push the thought of getting into Kelly's car and driving to a new place to eat. As we exited the lobby, Kelly took the lead, and soon we were all in the car without another word spoken. I was somewhat amazed that I was able to influence them that easily.\n\nI pushed another thought, this time I pushed the desire to kiss Alyssa towards Carmen. They were sitting on either side of me in the back seat, with Kelly driving and Lexi beside her in the passenger seat. Slowly Carmen's hand slid over my lap, and pulled Alyssa across me, and kissed her a soft sensuous kiss. My mind quivered in arousal, shock, bewilderment and questions; oh so many questions.\n\n\"What made you kiss Alyssa?\" I asked finally breaking the silence.\n\n\"Suddenly, I wanted to kiss her,\" Carmen replied, \"I felt like I wanted to reassure her that I was thinking about her.\"\n\n\"And you?\" I asked Alyssa, \"what were you thinking just now?\"\n\n\"When she grabbed my hand, and pulled me across your lap, I felt she needed a kiss\" Alyssa admitted, \"I guess, it felt natural to accept her kiss and return it.\"\n\nMy face must have gone pale, because Alyssa suddenly looked at me with concern.\n\n\"What is the matter J?\" she asked.\n\n\"I just was thinking about how much I wanted to see Carmen kiss you,\" I admitted sheepishly. \"I was shocked when she kissed you. I think I caused it. The same thing in getting in the car to go to dinner, no one spoke, I just thought it.\"\n\nAlyssa looked up at me, and I could tell she was thinking about what I just said. Rationally, I considered that it could all be coincidence, that I pushed a thought and the others acted independently. I knew Alyssa was thinking the same thing. \n\n\"But two...\" I began.\n\n\"different thoughts,\" she continued. \n\n\"in a row.\" We finished together. \n\nA chill ran up my spine. I suddenly knew that we were linked. I was quietly freaking out, and Alyssa tried to help by holding my hand, grounding me. The interior of the car seemingly teemed with nervous energy. \n\n\"You've got to calm down, love,\" Alyssa said quietly, \"deep breaths, find a center, you'll terrify us all.\"\n\nI closed my eyes, and took a deep breath. I looked at her and focused on her brilliant blue eyes. Her brow knotted in intensity, and suddenly I felt awash in a deep sense of peace. I squeezed Alyssa's hand in mine, and looked at her.\n\n\"Thank you,\" I said, \"I think it might flow both ways, suggestions. At least between you and me.\"\n\n\"Why do you think that?\" Alyssa asked.\n\n\"Because, weren't you thinking that?,\" I tried to explain, \"I thought you might be sending me a thoughts of peace and ... \"\n\n\"I was only worried that you'd freak out and we'd all feel it,\" Alyssa said, \"Whatever you felt was the power of your own control of the situation.\"\n\nI breathed out, and tried to concentrate on my thoughts, without sending worry and stress out to the rest of the car. It felt weird trying to guard my thoughts, but it became easier. The rest of the car which had fallen into a quiet solemn tomb, soon returned to the happy vibe that we'd felt as we left the hotel room.\n\nWe drove to the mall, and Kelly picked an Italian restaurant on the edge of the parking lot. At that point I was trying to stay neutral in my thoughts, so I was relieved that Kelly determined where we would eat on her own. I was disturbed thinking that I had created a woman drone army. I guess I let my imagination run away with me. Kelly and Lexi got out of the car followed by Carmen. Alyssa leaned across the seat and grabbed Carmen's hand.\n\n\"Go get a table, I need to talk to Jeremiah real quick,\" Alyssa said.\n\nCarmen smiled a knowing smile, \"Don't be too long, we still have a long night ahead of us.\"\n\nI blushed, but I knew that this wasn't going to be a quick fuck as Carmen assumed. When Carmen shut the door, I knew counseling had started. I was glad for that, because I was on the verge of freaking out.\n\n\"Jeremiah, tell me what is troubling you,\" Alyssa started\n\n\"I think my powers have changed, or I have discovered something new!\" I began cautiously. \"Beyond just shifting morals and self-control, I think I can control people.\"\n\n\"Control people?\" Alyssa questioned, \"Explain how can you control people.\"\n\n\"Just now, I pushed a thought to have Carmen kiss you.\" I explained. \"Before that I suggested we all get in the car. No one said anything, but all of you just went to the car. I don't want to have that much control over anyone!\"\n\n\"Okay, Jeremiah, calm down.\" Alyssa soothed, \"I did feel both suggestions, but I didn't feel like I couldn't say no to it. Try to suggest something to me now.\"\n\nI pushed a thought of her taking off her top, and presenting her breasts to me.\n\nAlyssa blushed, then spoke, \"Oh Jeremiah, I do like that idea, but we really should eat. Don't you think?\"\n\nI sat speechless for a moment, \"What did you think I wanted you to do?\"\n\n\"Pull up my top and show you my tits,\" Alyssa said simply with a smile.\n\nI opened my mouth as if to say something, but no words came out.\n\n\"I think you've established a bit of telepathy with each of us,\" Alyssa explained, \"I don't think it's that surprising, you've established a deep physical and sexual connection with each of us. There is something that happens in the brain when two people have sex. It's something science doesn't understand very well. Think about it though, Jeremiah, how well do you remember the people you've had sex with?\"\n\nI thought for a moment, then answered, \"Each person has been special to me, and I can remember each of them vividly. Even just the people I've kissed.\"\n\n\"That's right,\" Alyssa continued, \"That's what I'm talking about. So with your connections with each of us, and with your powers, I think you can send us ideas, thoughts, feelings, emotions. We are still free to accept those or reject those thoughts.\"\n\n\"Don't you think that's just weird,\" I asked, \"Won't if freak the other girls out that I have such control.\"\n\nAlyssa thought for a moment, then asked, \"Can you tell me what I'm thinking, not generally but an exact thought?\"\n\nI scanned, and saw her moral profile centered on food and relationships, I tried to zoom in more, but shook my head.\n\n\"No, all I can tell is that you are thinking about food and social relationships.\"\n\n\"Okay so you can't read our mind, exactly.\" Alyssa said. \"You can tell I'm really hungry and I am thinking about how all of us relate together. That's not surprising really, you'd know that without your powers. So I think if we can explain that to all the girls, I think they'd understand it just another way that you are a very special person.\"\n\nI bowed my head in thought, then sought her eyes. She was smiling at me, and then reached up and grabbed my hand. I knew the counseling session was over, and was relieved.\n\n\"Jeremiah, we all trust you, you've shown all of us that you have our best interests in heart,\" Alyssa said softly, \"I only wish you would start trusting yourself.\"\n\nI smiled and opened the door. After I got out, I held out my hand and helped Alyssa step out of the car. We held hands as we got into the restaurant, and soon we were all seated around another table. The other three girls met us both with smiles, and soon we were all eating, and talking as normal.\n\nAfter a bit, I needed to start the discussion about what would happen next. So I pushed a thought out to all of them with a question about what they would like to happen. I didn't want to influence any of them with my desires, I just wanted to get the conversation going.\n\n\"Ugh, I'm dreading the ride home tomorrow,\" said Carmen with her usual bluntness.\n\n\"Well thanks, Carmen,\" said Lexi teasing, \"I'm actually looking forward to driving in the car with you. Now that Kelly is back to driving, maybe we can share some alone time.\"\n\n\"I hadn't thought of that,\" returned Carmen, \"Now I'm looking forward to the drive.\"\n\n\"If you think I'm going to drive all the way with you two having sex in the back seat,\" exclaimed Kelly a bit too loudly. So I pushed a suggestion to lower voices, and Kelly's voice dropped in volume, \"you'd better think again! I think we can set up a rotation.\"\n\n\"I think I'm going to sleep the whole way back,\" said Alyssa, \"I love all of you, but I need to start exercising to increase my stamina to keep with all of you.\"\n\n\"What will you do when you get back to school?\" I asked, \"You all missed a week of classes, will any of you struggle with your grades?\"\n\nAll three thought for a second, then shook their heads. I paid attention to the part of the graph they were focusing on, and pushed a boost in self-control, as well as a suggestion to study hard and make good grades. Transfers worked better with good students, and I was beginning to lok forward to having my family all together.\n\n\"I think I can buckle down and catch up on the missed week,\" said Kelly, \"finals aren't for another month, if I apply myself I might get Dean's list this semester.\"\n\nLexi nodded and agreed, \"Yeah, classes won't be an issue, I was ahead a bit before last week, so I'm not too far behind. I should make Dean's list again.\"\n\nCarmen rolled her eyes, \"Dean's list?! I'll be lucky to get a few Bs. I'm just a dancer, all this core class work is really hard for me.\"\n\nKelly and Lexi both turned to Carmen and both agreed to help her with her classes. I made a small adjustment to Carmen's mental profile to help her see the value in studying and give her the self-control to stay on task.\n\n\"Are all of you still going to transfer to State for the fall semester?\" I asked, wondering if the conversations from last night and this morning was still serious.\n\nThey all nodded and talked about how their school was too cold during the winter, and would like to live in a more moderate area like State. They also said after talking with me and Alyssa that State sounded perfect for all their future plans. Kelly brought up her parents again, and I increased her self-control, and her moral boundary that lit up when she talked about the conflict.\n\n\"Maybe I should meet your parents,\" I offered, and for the first time considered using my powers to help one of my friends.\n\n\"Oh would you?\" asked Kelly excitedly. \"I don't live far from the State campus, I only went to my school to put a bit of distance between me and my parents. I think they'll be fine with me transferring, it's the change in major they'll resist. Still I'd love to introduce you to them.\"\n\nI nodded, and we agreed to talk more after the semester was over. As the conversation wound down I called for the check. The restaurant that Kelly drove us to was outside the local mall, and I suggested we browse for a bit before going to the hotel. The girls, of course, agreed. I say of course, because they are girls, and shopping seems to be part of their DNA, but also because I wanted to give them all something, so I pushed a strong suggestion along with my words.\n\nWe left the car parked in the restaurant lot, and walked the short distance to the mall entrance. Once inside I found a jewelry story, and started looking. The girls all looked at the rings with wide eyes. I knew they weren't expecting me to buy rings, looking at rings is just another thing that girls like to do. I was looking for something more specific.\n\nAfter looking through the different cases, I found what I was looking for, a small pendant in silver that had a four section celtic knot.\n\nI asked the shopkeeper, \"Do you happen to have four of these? along with silver chain necklaces?\"\n\nThe shopkeeper eyed my four companions, then nodded knowingly, \"Yes, sir I believe I do have four of that item, let me check.\"\n\nHe went back in the back room, while I kept looking through the cases. I had checked the amount on the pendant and I was sure I could afford to put the fine jewelry on my AMEX card. In another month I'd turn 21, and the balance of my trust fund from my grandfather would be available. It wasn't millions of dollars, but it would make the rest of my college life a bit more enjoyable.\n\nFinally the jeweler returned with four black boxes, displaying each of them for me, the delicate knot looked amazing with a fine silver chain. I nodded and slid across my card, and soon the transaction was complete. With a nod, I thanked the jeweler. I then sent a suggestion to leave the mall and go back to the hotel, becoming more comfortable with my newfound ability to influence my girls.\n\nAfter we drove the short distance to the hotel and went back up to our room, I asked all the girls to come into the main sitting room. I passed each of them one of the slim black necklace boxes, then asked them to open it together.\n\n\"I want each one of you to have a symbol for what each of us means to each other.\" I said taking the time to look at each one of them with a smile. \"In the short time I've known you three, and in the past week, Alyssa, I've discovered such a strong bond between us. I love each of you, and I want to be with you all.\"\n\nThey all smiled back at me, taking the necklaces out of the boxes and looking at them in the light. I went first to Alyssa and helped to fasten it behind her neck. I kissed her neck where the chain touched her skin. I continued around the room and repeated the same ritual. A sense of love and warmth filled the room as sat back down in my chair. I wanted to hear from each of the girls, so i quieted my mind, and tried to just listen.\n\nKelly smiled at me, \"Jeremiah, I will proudly wear this because it will remind me that you are looking out for me. That you care for me, and I care for you too.\" Then she looked around the room at each of the other girls, \"This also symbolizes that I care for each of you, that we are sisters together in this relationship.\"\n\nLexi spoke next, her eyes bright with emotion, \"Everything that Kelly said is true for me too. This past week has been amazing, and this weekend was like icing on the cake. I know I will always cherish each of you, and this symbol will always remind me of each of you.\"\n\nCarmen held her head down, her hands covering her mouth. Her hair was covering her face, and I felt strong emotions from her, I resisted the impulse to scan her, because I wanted everyone to be honest in what they said. Finally, Carmen lifted her head to speak, tears streaming down her cheeks.\n\n\"I don't know what to say,\" she started, \"I started this weekend confused over what a true relationship really meant. Now, near the end I have a symbol of a real and honest relationship. The most fucked up relationship I've ever heard of, but the best thing that's ever happened to me. Thank you Jeremiah. Thank each of you.\"\n\nBefore Alyssa spoke she slid a small black box out of her purse and gave it to me. I opened the box and saw a similar pendant on a heftier chain. Four loops around a central loop. As I saw the chain, it started to get blurry and I felt tears fall down my cheeks. Alyssa stood up and fastened the chain around my neck.\n\n\"We all chipped in to get you this chain, Jeremiah,\" she started, \"we were talking while we were looking at rings, and wanted to give you a gift. To show you how we all felt about you. So with this chain our circle is complete. I am all in. I love you Jeremiah, and I love Kelly and Carmen and Lexi too.\"\n\nI was silent. With what I had learned today, the synchronicity of the purchase wasn't a surprise. But the questions in my mind wouldn't stop, did I cause them to want to buy me a symbol by wanting to buy a symbol for them? The whole idea was like infinity, never-ending. Perhaps their thoughts had influenced my decision. What I couldn't deny was that we were inexorably linked, and to tear apart that bond would hurt us all. The one thing I never wanted to do was to hurt any of these women.\n\nSlowly, wordlessly, we all rose and began to undress until the only thing each of us wore were the silver knots on silver chains. Then we all walked into the main suite's bedroom, and began to physically show each other the love we had for each other. There were moans and sighs. Words weren't spoken as we enjoyed each others bodies. The love making was slow and sensual, like a slow boil. When the crest of our emotions finally peaked we all shivered in orgasm. I sent my feeling of bliss to each of the girls, and they all shuddered as they felt my passion pass through them.\n\nWe slept in a tangle of bodies, not waking until the sun just peaked through the windows. As we untangled and showered. Each of us said our goodbyes as we packed for our rides home. Words were spoken and promises made. The goodbyes were short, because we knew we'd be together soon. We left that hotel, and headed in opposite directions. I felt a slight emptiness as we left, but as I fingered my pendant I felt more at peace than I had in days.",
        "That weekend marked a the beginning of a new direction of my life. My life had changed in that wild week that started with me meeting Kelly on the stairs. I made mistakes, but the mistakes only revealed a greater benefit. I wish I could say that was true of all my mistakes. I had some more to make, but that's a different chapter.\n\nAuthor's Note: This ends the first part of The Designer series. I'm greatly appreciative of all the comments, and votes. It's encouraged me to continue the series. I have some great ideas for the next series to explore how Jeremiah learns the relationships aren't always so easy when one of the the members can't control minds.\n\nThanks to sportychica334 for all her help in editing and encouragement to continue writing. Thanks to beta readers Karenas and Emily124 for offering suggestions and critiques.\n\nI hope the next part will kick off in a couple of weeks to a month. So be looking for it."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "college",
        "coed",
        "ffffm",
        "group sex",
        "drama",
        "relationships"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-ch-12"
}