{
    "title": "Master! Master! Pt. 11",
    "pages": [
        "\"Don't think you'll be able to break me so easily,\" Betty scoffed.\n\nHer pride was admirable, considering her position. We were in Elise's guest room and I had Betty tied to the bed with a bandana covering her eyes. Her legs were in the air, forcefully spread with ropes leading to the headboard where her wrists were bound. With her body in such a position, her titanic breasts looked even more magnificent, two avalanches of flesh just begging to be manhandled. Her pussy and anus were on display, her thick thighs and perfect ass lit with the light of the afternoon sun. I was giving her the second match she had so thirstily demanded and even constructed a plan on how to beat her. I decided to use a much more refined method than before and Lorraine was kind enough to give me some advice.\n\nI leaned over her, not touching her, simply pressing down on the mattress around her while my breath flittered her hair. \"Break you? I could never do something so cruel. But before I'm done with you, you'll be addressing me as Master.\" \n\n\"Never going to happen.\"\n\nI blew gently on her lips, just to make them quiver, but I denied her the kiss she expected and instead blew more air, this time into her ear. A shiver ran through her, her ear flapping from the sensation of my breath. I then moved down, stimulating her not with my tongue or lips as I normally would, but with a simple stream of air. My breath lapped at her nipples, drawing away warmth and causing them to become erect from the chill. Betty's tough bravado was coming undone, her own breath trembling as her strength left her. Like with Sonja the night before, since I was depriving her of sight, her body compensated by over-processing all other stimuli. Every physical sensation was magnified to make up for the loss of information.\n\nI reached her belly, flat and smooth. She was especially ticklish here. I focused on her navel, first blowing on it, then dropping a dollop of saliva into it. She shuddered as my spit filled her belly button. \n\n\"You're a disrespectful little brat,\" she hissed. \n\n\"You're nothing but a slutty cow bitch. You don't deserve respect.\"\n\n'Don't you know? All strong, independent women are secret masochists. All you have to do is hit them with the right level of cruelty and they'll melt like butter.' My instincts told me to take Lorraine's advice with more than a few grains of salt, but I felt in this case, she was right. The first time Betty and I had sex, she certainly changed her tune once I took charge.\n\n\"In fact, since I gave you the ability to talk, you have no say in the matter if I take it away.\"\n\nBefore she could reply, I secured a ball gag in her mouth. It wasn't a solid rubber ball like you would normally see, instead it was hollow and perforated, like a whiffle ball, to let the wearer's saliva leak freely. I continued my journey south, massaging her with streams of air. I focused on the backs of her thighs and her rear end, vast fields of caramel-colored porcelain skin, canvases just waiting to be painted with our shared fluids.\n\nI hadn't even touched her, yet her pink flower petals were glistening. A single drop of her arousal slipped down to her asshole. The breath I streamed onto her pussy caused the liquid to evaporate, drawing away her heat. It was a drop of only a degree of warmth, but that chill still made her shiver from head to hoof. \n\n\"Now, how about I give you a proper milking?\"\n\nMy gentle teasing was swept aside, my hands grabbing her breasts like two bear traps. Betty screamed through her gag as I viciously fondled her, my hands always moving, making sure that not a single centimeter of flesh was spared. Her tits were the perfect playthings, welcoming my squeezes and smothering. After only moments, her milk began to trickle. The more I mashed them, the more came out. Soon her breasts were rubbed raw, the skin turning red from the abuse, but her milk was spraying like two squirt guns, covering her naked body. I couldn't help myself, I gluttonously licked her tits clean, savoring every drop I slurped off her skin. The feel of my tongue on flesh made her shiver and convulse.\n\n\"Maybe I should take you home with me. I can keep you in my woodshed, and you'll spend the rest of your life hooked up to a milking machine and a feeding tube. I'll visit you every day, just to get some cream for my coffee and have my way with you.\"\n\nI need to stop hanging out with Lorraine. I think she might be a bad influence on me.\n\nNow it was time to truly feast. Her pussy was inviting me to taste it, for my tongue to pass her lips. I gave in to my desires, drinking her nectar straight from the tap. To prime the pump, I would tickle her clitoris with my nose, feeling it harden as her arousal rose. Betty whimpered from the intrusion, feeling my tongue probe every fold and nerve ending. Saliva was dripping from the gag in her mouth, running down her breasts and mixing with her spilled milk. I buried my face in her cunt, slobbering like a dog and using everything at my disposal to stimulate her. \n\nHer voice was rising higher and higher, telling me what was about to happen. I brought her to the threshold of climax but pulled myself away before she could cross it. She whimpered and moaned, having forgotten her pride and now begging me to continue. I would satisfy her, but not in the way she thought. I moved back between her legs, but this time, my tongue found a different opening. Betty became stiff as she felt me lick her backdoor, slipping around the entrance. I penetrated the ring, jamming my tongue into her asshole like I was putting out a cigarette. Betty shivered, unable to process the sensation. I toyed with her for a while, using my tongue to try and loosen her up.\n\nI returned to her pussy, continuing where I left off, but I left something behind. Betty's whole body began rigid as I pushed my thumb up into her asshole. Back when she was a regular cow, it was not unheard of for a vet to put a gloved hand where the sun didn't shine, such as to take her temperature or check for intestinal blockages. But now she had been reborn with a new body and a virgin anus that had never been touched before. She was no longer an animal that simply loathed the uncomfortable feeling of having that spot probed, as she now had a mind that could attach meaning to it and understand my actions.\n\nA flesh stream of arousal was flowing from her, brought on by the taboo sensation of my thumb twisting around in her anus. I pulled it out and pushed it in over and over again, just to force her to experience that penetration as much as possible. She could have stopped me if she wanted to. With her strength, she could have snapped the ropes holding her like they were lines of floss. She could have ripped her hands free of the headboard like it was made of wet cardboard. Instead, she held still and let me do as I see fit, obeying orders I had not given her. Deep down, she wanted the violation to continue.\n\nIt was now time for the main event. I rested my manhood on her pussy, simply rubbing the shaft against the entrance. Betty's breathing quickened, but she didn't know why. We had first fucked just a few days ago, I had explored her thoroughly, the two of us each getting to know each other's most sensitive areas intimately. So why was such slight contact making her shiver like this? Why was the anticipation twisting her stomach into knots? She kept expecting me to slide it in, to ravish her, but the penetration never came. On one hand, it was eternal disappointment, but on the other, just the touch of my cock rubbing against her clitoris was almost more than she could handle. She felt like her head was filled with fog, her senses distorting even with such little contact.\n\nI leaned over, licking her saliva off her breasts, then pulled the gag out of her mouth and kissed her. \"Do you want me to fuck you?\"\n\n\"Uh-huh,\" she said with a hurried nod.\n\n\"Then say it. Say 'Master, please fuck my slutty pussy'.\"\n\n\"M-Master, please fuck my s-slutty pussy.\"\n\nI put the gag back in her mouth, and without using my hands, I plugged into her, burying myself balls-deep in her cunt. She moaned in bliss, having waited for this since Elise pulled her off me the first time. I went to work, throwing myself at her again and again, bombarding her interior with brutal thrusts. Her pussy welcomed the hammering, slick and splashing her womanly essence with every move I made. I was dropping my full weight on her for maximum depth and force, with Betty helpless to do anything but try to endure until I was satisfied. To further enforce her situation, I slapped her breasts over and over again, as if punishing them for their blasphemous size. The strikes were light, I didn't want to actually hurt her, but her mammary glands were so sensitive, and her skin was reddening and beginning to swell.\n\nThanks to how well I warmed her up, it only took her a couple minutes to cum, her orgasms so intense that along with milk from her breasts, she squirted a clear liquid from her pussy, spraying me with her womanly scent. And of course, she gave a long, deep moo through the whole process. I pulled out of her, still rock hard and ready to go. \n\n\"You know what I'm going to do next, don't you? You know where I'm going to put it.\" She gave a soft whine. \"Are you going to ask me to stop? Are you going to deny your Master what he wants?\"\n\nShe didn't reply. I reached down to my pants on the floor and pulled something out of the pocket, something Betty didn't know about. I wiped some of the milk off her breasts and then rubbed it on her asshole as lubricant. She shuddered as I worked my fingers inside her, making sure she was ready for me. I didn't give her any warning, I simply forced myself on her, hollowing out her anus with my cock. She moaned like an opera singer, but I didn't give her any time to get accustomed to it. I sodomized her without mercy, taking her ass as my property. The bed was shaking from my thrusts, my eyes moving back and forth from her tear-streaked face, to her bruised tits, to my manhood pulling out and being forced back into her asshole. But of course, I could always do more. In my hand, I held Momo's vibrator, the object I had been carrying in my pocket. I turned it on and held it against Betty's clitoris, further stimulating the already erect nub.\n\nThe two-pronged attack left Betty screaming, arching her back again and again. She couldn't handle it, both the vibrator and the anal violation. It was too much. Her body did only what it could: orgasm. She came again and again, but as before, I didn't give her any time to rest or even ease up. I continued fucking her, every full insertion causing another climax. It became too many to count, they felt so good but she wished desperately for them to stop. The cruel euphoria didn't finish until I did, finally coming to halt and flooding Betty's asshole with hot semen. I pulled out of her, leaving a white thread connecting my flaccid member to her bruised starfish.\n\nIt was done, I had beaten her and then some. Now it was time to patch things up. I unfasted her legs, slowly lowering them and then giving them deep massages to return regular blood-flow and ease the stiffness of the muscles. I then freed her wrists, but since she didn't seem to have the strength, I removed her gag and the bandana over her eyes for her.\n\n\"Are you ok?\" I asked, my hand on her cheek.\n\n\"Master, kiss me,\" she whimpered.\n\nI lied down beside her and let our lips meet. She sent her tongue deep into my mouth and I did the same. For someone drained of stamina, she kissed me voraciously. I couldn't help myself, my hand slid south, down her milk-soaked belly and between her legs. She spread them to welcome me and I went to work with my fingers. The harder I fingered her, the more aggressive her kiss became. She even reached down and started stroking my member.\n\n\"I'm thirsty,\" I said.\n\nI broke our kiss, but Betty lost none of her spirit, for my lips immediately found her nipple. Her milk flowed effortlessly, dangerously delicious and quenching my thirst after all the work I had put in. Betty moaned, not just from my mouth on her breast, but my fingers inside her. I decided to tease her, further assert my dominance. I pulled my hand from her pussy and used it to grab her other breast and push it towards her face. She knew what I wanted her to do, and though she hesitated for a moment, she gave in and began sucking on her own nipple. I moved my hand back between her legs but she held her breast still, drinking from her own tap. With two mouths on her areolas and my fingers inside her, she had one final orgasm, and as a result, her feminine arousal sprayed my hand and her milk rushed down my throat with enough force to almost choke me. Once she had settled down and I had my fill, I sat up, and she immediately went to work, rolling my dick around in her mouth and licking it clean of semen and the taste of her anus.\n\nMomo, Sonja, Chloe, and Leah, I loved them with all my heart, but the best sex was always with Betty. They were pets and lovers, but she was an eager sex slave.\n\nShe was getting all worked up again. Once she had cleaned me off, she started making love to the head, aiming for the most sensitive nerve endings while working the shaft with her hand. It took some time but she didn't give up, not releasing my cock until I ejaculated into her mouth. She even showed it to me, the white pool behind her teeth, proud of her skills in pleasuring her Master.\n\nI looked to the clock. \"Dr. Lawrence is due to be here in an hour. Let's go at it again in the shower.\"\n\n----------\n\nI had initially considered asking the doctor to come to my house, but instead I gave him Elise's address. Her home was large enough for him to meet everyone. He was flying from New York on a government plane, but even with that convenience, the fact that he was in charge of the New York investigation meant that it had taken some time for him to actually travel. Lorraine and I were sitting on the front porch, nervous as could be. For all we knew, a convoy of CDC vehicles and black SUVs with tinted windows could show up any second and we could all be hauled away, never to be seen again.\n\n\"So, I take it that you broke Betty?\" Lorraine asked to break the silence.\n\n\"How could you tell?\"\n\n\"The fact that when you came downstairs, she looked at you like she was madly in love and would happily become your footrest if you told her.\"\n\n\"Let's just say that she now calls me Master, but not quite in the same way that the other girls do. Your advice came in really handy.\"\n\n\"Happy to help. Just let me watch next time.\"\n\n\"Deal.\"\n\nOn cue, a powder-blue rental car pulled up the driveway. Lorraine and I both got up as it pulled to a stop next to my car and a man got out. He was portly, with a large gut and a thinning hairline, but he looked friendly. He had his CDC credentials hanging from his neck and carried a medical bag filled with basic equipment.\n\n\"Ah, you must be the two miracle makers,\" he said as we greeted him.\n\n\"Thanks for coming out here. I know it was probably a real pain,\" I said.\n\n\"Well, if even half the things you told me are true, then this was well worth it. So, do you think you could introduce me to everyone?\"\n\n\"Sure, come on in,\" said Lorraine.\n\nWe brought him inside, where everyone was waiting in the dining room. Elise, Betty, the girls, and the pillar men were all anxious, knowing how important this meeting was. Dr. Lawrence was likewise surprised to see them. There was no question that he had spent a lot of time around the transformed zoo animals, so he knew what to expect, but everyone here was different. They all looked perfectly natural, dressed up like normal people, lacking the confusion he had seen in the others.\n\n\"Hello, I'm Dr. Jerry Lawrence from the CDC. I can't tell you how amazing it is to meet you all.\"\n\nElise got up from her seat and moved towards him, her chair close enough that she could reach him just by stretching her tail, rather than actually slithering. Her upper body almost resembled an old party balloon, floating along and dragging its string along the floor. She extended her hand to him.\n\n\"Hi, I'm Elise Baxter, Lorraine's sister. Welcome to my home.\"\n\nHe shook her hand but didn't even try to make eye contact, his eyes glued to her tail. He didn't mean to be rude, he just couldn't believe what he was looking at. Before him stood the living embodiment of biology being turned on its head. A small part of him, the mad scientist that dwelled in every doctor, wanted to dissect and thoroughly examine every part of her body, down to her DNA.\n\n\"My God, so it is true,\" he said.\n\n\"Yep, welcome to the freak show. I hope you're enjoying your legs to their fullest.\"\n\n\"This is the main reason why we decided to reveal ourselves. If we really are affecting humans now, then we need help, and my sister needs a cure,\" Lorraine said.\n\n\"We don't know if Lorraine and I caused this or if this was something else,\" I said. \"Initially, I thought she had transformed simply because she was near us both at the same time, but I've been thinking maybe it was an ability she has. Lorraine and I affect others, maybe Elise can affect herself. Who knows? We're flying blind here.\"\n\n\"I'll be honest, looking Ms. Baxter here, I can't even begin to imagine a cure being attainable. This is freaking magic, it's otherworldly.\"\n\n\"Either way, we need help.\"\n\n\"Well that's what I'm here for. First, I'd like to ask each of you some questions, try to find out as much as I can. I'd also like to perform some tests and examinations if you'll let me.\"\n\n\"Whatever you need.\"\n\n\"Perfect. Since this all started with you, I'd like to talk to you first.\"\n\n\"Feel free to use the living room.\" Elise turned to everyone else. \"And while he's talking, I know plenty of cows that need some care.\"\n\nThe girls all groaned in anguish but obediently followed Betty outside, along with the pillar men. Dr. Lawrence and I moved to the living room. He pulled out a pad of paper and a voice recorder, first stating our names and the date for the record.\n\n\"So, I'd like you to start from the beginning.\"\n\n\"Well it first occurred in July with my cat, Momo. I woke up one morning to find her lying on top of me, having turned into a human.\"\n\n\"Before then, how long had you had Momo?\"\n\n\"Two years, I think. We had been living in my former home.\"\n\n\"Before she transformed, did any unusual occurrences happen? Changes in health, environment, diet?\"\n\n\"No, nothing. Until that point, my life was completely normal. Believe me, I've lived a very dull life. That was the first truly weird thing to ever happen to me.\"\n\n\"So, animals have never behaved strangely around you or anything like that?\"\n\n\"No, nothing.\"\n\n\"What was Momo's behavior upon... transforming?\"\n\n\"She acted exactly as you might expect a cat would. Her first words were \"feed me\". She had gained the ability to talk and she spoke like a normal person. Well, her intelligence and personality are very child-like, but that's because she's still a cat at heart.\"\n\n\"How do you mean?\"\n\n\"You'll discover this when you talk to her, but she speaks in third person. Her whole life revolves around napping, eating, and cuddling.\"\n\n\"Cuddling?\"\n\n\"She's very affectionate.\"\n\nLawrence took a deep breath. \"I know this is a very complicated question, but I have to ask this: have you been physically intimate with Momo and the others?\"\n\nI knew that this was eventually going to come up, but it still left me with my stomach in knots.\n\n\"We do have a loving relationship. I have had sexual intercourse with the girls and do so almost nightly, though I never forced anything onto them.\"\n\nLawrence sighed and rubbed his forehead. \"I really wish you had said no. Don't get me wrong, I'm not judging. It's just that you've kind of contaminated the psychological and anthropological study of these creatures.\"",
        "\"Believe me, I know. I did all that I could to resist temptation. I was worried that I would be taking advantage of her, that it was immoral, and that the nature of our relationship would be inevitably discovered. Momo was the one who initiated it.\"\n\n\"She was? Are you saying she understood such a relationship?\"\n\n\"Yes and no. When she transformed, some animal instincts were lost. One of them was the instinct for reproduction. She had no knowledge of any kind about sex. All her knowledge came from discovering ways of making herself feel good, you know, playing with herself.\"\n\n\"We see that same trait in young children when they become aware of their sex.\"\n\n\"Yeah, it was like that. She had a strong lust but no actual sense of sexuality. She hadn't learned how to actually add meaning to it. She discovered sexual intercourse completely by accident, simply theorizing that it would make us both feel good. She probably thought we were the first people to ever do such a thing.\"\n\n\"So after you were intimate the first time, what happened?\"\n\n\"It sort of became our special relationship, the only one of its kind. She is both a pet and a lover.\"\n\n\"Did you ever worry about her getting pregnant?\"\n\n\"I had her neutered the year before. I was pretty much just hoping it hadn't been reversed.\"\n\n\"Did you ever let Momo out of the house?\"\n\n\"Not by herself. I was too afraid of someone seeing her. I would wait for night to come and then we'd go for a walk at the park nearby. After a few weeks, I found a stray dog going through my trash and named her Sonja. I took her in, gave her a home while I waited for her owners to come pick her up. Around a month later, she transformed. I woke up to find her lying next to me in bed.\"\n\n\"What's her personality like?\"\n\n\"She's very bubbly and happy, kind of an airhead but sweet as can be. Even after transforming, she loved to run around and play. Hell, I still throw frisbees for her.\"\n\n\"How long did you wait until you...\"\n\n\"Around two weeks. I knew it was inevitably going to happen so I wasn't as apprehensive. It would have happened sooner, but Momo was jealous and would do everything she could to make sure we didn't. Once I knew that the transformations would keep happening, I decided to move. I bought a small cabin out in the woods where I knew that the girls could go outside freely. Sonja and I were intimate our first day there.\"\n\n\"How long until the next girl appeared?\"\n\n\"Chloe appeared in October. She was a mouse living in my woodshed. Unfortunately, since we hadn't spent any actual time together before her transformation, she didn't trust me like Momo and Sonja did. She was used to being at the bottom of the food chain so she was naturally terrified of everything.\"\n\n\"Meaning you couldn't have intercourse with her.\"\n\n\"I wanted to wait for her to be ready. It also gave me a chance to figure out the fertility issue. I knew Momo had been fixed, I believed Sonja had, but Chloe was a wild animal. So, while we built up a trust and got to know each other, I decided to see if and when she might show any signs of a menstrual cycle. I waited a month, then I asked her if she wanted to \"play together\" like I did with Momo and Sonja and she said yes. That was how I learned that the girls are sterile.\n\nThen... sometime after Chloe, likely in December, there was a fourth girl.\"\n\n\"I believe you mentioned her before, a deer?\"\n\n\"Yes, she appeared out in the woods, but we didn't know about her until the girls found her body. She had frozen to death. I waited for the ground to thaw and then I gave her a proper burial. After that, I ended up stopping here at the farm while running some errands. My tire was flat and my jack was broken. I met Elise, who was normal back then, and Betty, one of the cows. Elise went inside to answer a call, leaving me with Betty. I had my back turned for only a second, but in that moment, she turned. And... let's just say that unlike the other girls, she had been around the block and didn't need to be taught anything.\"\n\n\"So the two of you had sex?\"\n\n\"On the barn floor. Trust me, she wouldn't take no for an answer. Elise found us and told me that the same thing had been happening with her sister. She invited me to meet her sister and her pets and I brought the girls. We had a party, got to know each other, had a little too much to drink. Elise and I had a one-night stand, and when we woke up the next morning, she had her tail.\n\nAt that point, Lorraine and I knew that we couldn't hide anymore and decided to go to the zoo. But first, I decided to try and transform an animal on command. Sonja just happened to have found a salamander and wanted to show me an... that's how Leah came along.\"\n\n\"And then you went to New York and made me very busy.\"\n\n\"Correct.\"\n\n\"Now I'd like to go into details about your life with your pets. What kind of diet do you give them?\"\n\n\"Pretty much whatever I eat, I feed them regular people food. I don't keep junk food in my house and I make sure they get plenty of fruits and vegetables. But one thing they absolutely love is cake. I get it for them on special occasions and holidays. I've taught the girls how to cook, so we each take turns making dinner. I usually leave them to prepare their own breakfasts, though on the weekends I will cook for them. Momo and Sonja still like to eat pet food sometimes, you know, wet for sandwiches and dry for cereal.\n\nWhile they can eat at a dinner table, they prefer to eat on the floor using food bowls.\" Lawrence raised an eyebrow in skepticism. \"It's true. They'll line up on the floor like a row of sphynxes and eat without using their hands. They really do like it that way. It was a major pain in the ass teaching them table manners.\"\n\n\"How about their general hygiene?\"\n\n\"They're very clean. I've taught them to brush and floss and they take frequent showers.\"\n\n\"Do they do their business inside or outside?\"\n\n\"Inside. Teaching them to use toilet paper was awkward to say the least.\"\n\n\"What kind of activities do you do with them, besides... you know?\"\n\n\"I read with them, play board games with them, go for walks, and we watch TV together. On nice days, I'll throw frisbees and tennis balls for Sonja. I also taught the girls how to read. Each of the girls has a hobby; Momo likes to draw, Sonja plays with clay, Chloe is a reader, and we're still working on finding something for Leah.\"\n\n\"Have you noticed any traits in them that pertain to their original animal forms?\"\n\n\"Well Momo, Sonja, and Chloe all have very good hearing. It's no surprise with those huge ears. Sonja also has a superhuman nose. She likes to play hide and seek and follow everyone like a bloodhound. Momo gets high when exposed to catnip. I've already told you how nervous Chloe is. Leah is a mute, but she can communicate using hums and inflections. Her skin is also very sensitive and covered in a sort of natural moisturizer, which is why her clothes are made of rubber. Betty was originally a milking cow, so she lactates.\"\n\n\"I can't tell you how helpful this has all been. Trust me, no one in the CDC has slept a wink since this happened. Hopefully what you've told me will answer some of our questions. I'd like to speak with the others now.\"\n\n\"Would it be ok if I'm in the room when you talk to the girls? They'll get really nervous, especially Chloe.\"\n\n\"Of course. Call them in.\"\n\nI stepped outside and hollered for Momo. She rushed over happily, as long as it meant she didn't need to do any more farm work. She joined Lawrence and I in the living room and sat next to me.\n\n\"First, can you confirm that your name is Momo?\" he asked.\n\n\"Momo is Momo,\" said softly.\n\n\"And you were originally a housecat?\" She nodded. \"Do you recall the actual transformation?\"\n\n\"No, Momo was asleep when it happened. When Momo went to sleep, she was small and furry, and when Momo woke up, she was big and her fur was gone.\"\n\n\"How did you react when you realized what had happened?\"\n\n\"Momo was hungry and asked Master to feed Momo.\"\n\n\"You weren't... concerned that you had transformed into a person? Confused?\"\n\n\"Momo. Was. Hungry.\"\n\n\"I told you, Doc, she's still a cat at heart.\"\n\n\"Momo, tell me about your day. How do you spend your time?\"\n\n\"Momo first wakes up in bed and plays with Master. Then Momo goes downstairs and has breakfast. After Momo is full, Momo brushes her teeth, and then takes a nap. After napping, Momo will draw or play on Master's computer, but Momo usually just plays with herself until Master comes home. Then Momo curls up with Master on the couch and watches the news. After dinner, Momo and Master watch TV, then play in bed and go to sleep.\"\n\nLawrence didn't do a very good job hiding his laughs. I couldn't blame him, hearing Momo talk about playing was hilarious. Plus, he wasn't used to her cutesy way of talking. He asked Momo a few questions about her hobbies, her diet, and her hygiene.\n\n\"Well, Momo, it's been a true pleasure to meet you. Now, I would like to perform some tests, if you wouldn't mind.\"\n\n\"Tests?\"\n\n\"Sort of like what a vet does.\"\n\nThe hair of Momo's head and tail stood on end and she gave a ferocious hiss. Lawrence jerked back in fear and Momo crawled behind me.\n\n\"Doc, what the hell? What could possibly make you think \"vet\" is an ok word to say around her?\"\n\n\"Uh... sorry.\"\n\n\"Momo, would you be willing to let the nice doctor give you an exam? It will be very quick.\"\n\n\"No! Momo hates the vet!\"\n\n\"If you do it, I'll buy you a cake.\"\n\nMomo's ears drooped and she growled in annoyance. \"Fine. But he's not going to put anything up Momo's butt, is he?\"\n\n\"Dr. Lawrence, I hope you don't have a rectal thermometer in that bag.\"\n\n\"No, nothing of the sort.\"\n\n\"Ok, Momo, just do what the doctor says and you'll get your reward.\"\n\n\"Fine.\"\n\nHe went through the tests, reading her blood pressure, looking into her ears and eyes, examining her teeth, and checking her reflexes, as well as the sensitivity of her ears and tail. Then came the final task.\n\n\"Momo, you've been a good girl, and now, the last thing I'd like to do is take a blood sample.\"\n\nI had a feeling he'd do something like that. I certainly understood why. He had already taken some of her hairs. I had no objection to it, but Momo might not be the same.\n\n\"A blood sample?\" she asked.\n\nHe pulled out a large syringe. \"I'll use this to draw some of your blood and collect it in a little container. It will just be a small poke. Can you give me your arm?\"\n\nSeeing the needle, Momo became scared, but held out her arm. Dr. Lawrence swabbed her elbow with alcohol and rested the needle on her skin. \"Ok, it's going to feel like a big pinch, but just take a deep breath and look away.\"\n\nI instinctively wrapped my arms around Momo from behind, holding her in a bear hug. I was right to do so, as when the needle was inserted, she released another shrill growl and tried to take a swing at him. I stopped her and held her still until the doctor was done. Once the needle was removed, Momo didn't even wait for him to put on a band-aid. She curled up in my lap and cried on my shoulder.\n\n\"Shhh, it's ok, you were very brave. You were a good girl and it's all over now.\"\n\nDr. Lawrence and I waited for her to become calm and then I brought her outside and set her in one of the chairs on the front porch to relax. Next, I called in Sonja. She bounced inside, full of energy and joy. \n\n\"Here, Master!\" she said, sitting next to me.\n\n\"Sonja, I'd like you to speak with Dr. Lawrence and answer some questions.\"\n\n\"What species of dog was she before she transformed?\"\n\n\"I think she was a golden doodle.\"\n\n\"Sonja, your Master tells me you were a stray when he took you in. Can you tell me where you were before you met him?\"\n\nAll the happiness was drained from her. \"I was in a bad place. I was always hungry and I never got to sleep inside. People yelled at me and I didn't have a name. But when I ran away, I found Master and was finally loved!\"\n\n\"I'm very sorry, Sonja,\" the doctor murmured. \"When you became what you are right now, did that make you happy or sad? Do you like being a person?\"\n\n\"I love being big! Now I can hug Master! I can talk to Master! I can play with Master! But when it's cold, I do miss my fur. I don't like wearing clothes, but it's hard being naked sometimes.\"\n\nLawrence continued asking questions as to activities, what she liked and disliked, and how she acted in certain situations. Then came the physical examinations. She didn't like getting her blood pressure checked or having her ears examined, but there was one thing she did enjoy.\n\n\"Ok, Sonja, I'm going to test your reflexes now. I'm going to tap your knee and see if you react.\"\n\n\"Will it hurt?\"\n\n\"Oh, not at all.\" \n\nHe took out a small rubber hammer and gave her a soft knock under her kneecap. Her leg jerked and she burst into laughter. \"Again! Do it again!\" Dr. Lawrence laughed as well and continued tapping her knee, making it twitch and bringing her endless amusement. He finished by taking a blood sample, with Sonja's reaction similar to Momo's. Luckily, she was cheered up with a few more taps on the knees.\n\nI let Sonja go outside and called in Chloe. As expected, she was the most nervous of all of them. She hid behind me, unwilling to make eye contact with the doctor.\n\n\"Chloe, I was wondering if you would be up to answering some questions.\" \n\nShe didn't respond, keeping her face pressed against my back.\n\n\"Chloe, you just need to answer some questions. It will be ok. Here, sit in my lap.\"\n\nShe finally perked up a bit and got into my lap.\n\n\"It's strange,\" said Dr. Lawrence, \"I thought she was a child at first glance.\"\n\n\"Me too. My theory is that the size of the girls depends on what kind of animal they were. Mice and salamanders are around the same size, which is why Leah is just a couple inches taller. Betty was a cow, which is why she's the largest. When I first found Chloe, I didn't think I would be able to touch her since I first thought she was just a kid.\"\n\n\"Chloe, before you transformed, did the two of you spend any time together?\"\n\nShe shook her head. \"I saw Master when he'd come into the woodshed, but he was so big, I thought he would squish me or eat me.\"\n\n\"I would never squish you,\" I said as I fluffed her hair.\n\n\"What was your relationship like with your Master initially?\"\n\n\"I was scared of him, but he seemed nice. He gave me food and let me sleep in his bed. He also gave me warm clothes and would rub my ears. I liked being around Master and felt safe.\"\n\n\"What about Momo and Sonja, how were you with them?\"\n\n\"Sonja was very friendly, but she always wanted to run around. She kind of scared me. Momo... wasn't very nice.\"\n\n\"What do you mean?\"\n\n\"She was always tickling and playing with me, even when I didn't want to.\" \n\nLawrence eyed me and I nodded. \"Momo still had some predatory instincts and thought of Chloe as a toy. I put a stop to it, I punished Momo, and I made sure she understood what was ok and what wasn't.\"\n\n\"Chloe, how do you feel about playing?\"\n\n\"It looked scary when I saw it, and it hurt when we did it for the first time. But I love playing with Master. I love when he holds me. And now I like playing with Momo and Sonja and Leah.\"\n\nDr. Lawrence continued asking his questions and then did the medical examination. Chloe obediently put up with it, though she did shed some tears when he took the blood sample. On the bright side, when Lawrence used the blood pressure cuff, every time he tightened it, she would give a squeak, which was both adorable and hilarious.\n\nLast was Leah, who could only answer questions by nodding or shaking her head. During the medical examination, Dr. Lawrence, aside from a blood sample, took a small skin sample and some of her liquid.\n\n\"Good, thank you all for everything that you've told me. Next I'll speak with Lorraine and her pets.\"\n\nThat poor man.\n\nI went outside and tagged Lorraine in, then went into the barn to meet Betty.\n\n\"Anything I can do to help?\"\n\nBetty's face became flushed and she started to massage her breasts. \"I really want Master to milk me again, and I want Master to fill me with his milk.\"\n\nFuck, I really had broken her.\n\n----------\n\nAfter speaking with everyone, Dr. Lawrence came out of the house with all of his equipment and samples. Along with the girls and the pillar men, he had taken blood from Lorraine, Elise, and I.\n\n\"So what now?\" I asked.\n\n\"Now we analyze the samples. I don't know how long it will take to find a cure, if we even can, but there is now a chance. You've given us a lot of information, so now we process it.\"\n\n\"What about us? What about the animals from the zoo? What happens if another animal transforms near us and is discovered?\"\n\n\"First thing's first, I need to talk to my superiors. I do believe that we can offer some kind of support or protection, but I'm not in any position to decide anything at this very moment. Just continue to keep your heads down and I'll try and contact you in the next couple of days.\"\n\n\"Good, because... if this is going to keep happening, there is the financial issue I'm dealing with. I've already got four mouths to feed and Lorraine and Elise are in the same boat.\"\n\n\"Don't worry about money, we'll get it all figured out. You just need to wait a bit. If something happens or you need help, just call me.\"\n\nHe then got into his car and drove away. Once he was gone, I went back into the house, where once again, everyone was gathered around the dinner table.\n\n\"Well, it looks like Lorraine will be moving back in,\" I said.\n\n\"The peace and quiet were nice while they lasted,\" Elise groaned.\n\n\"So I guess we're sticking with the status quo?\" Lorraine asked.\n\n\"Dr. Lawrence said he'd call in the next couple of days. The CDC just needs to go over all the new information and decide what to do.\"\n\n\"Ugh, I'm exhausted,\" said Lorraine. \"Do you and the girls want to stay for dinner? Let's just order pizza.\"\n\n\"Sure, I'll pick it up. I also owe these girls a cake.\"\n\n----------\n\nIt was Saturday and I was so glad it had arrived. From the moment Elise transformed, I had barely been able to sleep due to anxiety. Lorraine was a crazy bitch, but if it weren't for the sex during the New York trip, the stress would have probably given me ulcers. But now, we had made contact with the CDC and so far, everything had run without issue. All we could do was wait for Dr. Lawrence to call me back, so until then, no good would come from freaking out. It kind of felt like a waste that I used a fake grandma excuse to get a week off work, only to be busy the entire time.\n\nAnyway, I had taken the chance to sleep in, enjoyed a nice brunch, and now the girls and I were just lazing the day away. There were probably things that needed to be done around the house, but they could wait until tomorrow. I was on the couch, screwing around on my laptop and watching TV, Momo was next to me, snoozing in a sunbeam, and Sonja was overseeing a game of checkers between Chloe and Leah.\n\nAs a cloud passed by the sun, Momo decided to change her position. She turned around on the couch cushion, resting her head on my lap. I ruffled her hair and rubbed her ears, relishing the purr she gave in return. Then, of course, my hand fell to her breasts, squeezing and massaging them. It's just such a wonderful feeling, knowing that at any time, there are lovely breasts in reach that I can play with. That softness makes it impossible to leave them alone.\n\n\"Master?\" she hummed. \n\n\"What is it, sweetie?\"\n\n\"We've all been really good, right?\"\n\n\"Yes...\"\n\n\"And we helped Elise on the farm.\"\n\n\"That's true.\" \n\n\"Then will Master let us watch porn?\"\n\nBoth Sonja and Chloe perked up.\n\n\"Well, you girls have certainly earned it, but this is only for special occasions, just like cake.\"\n\n\"Yay, porn!\" Momo and Sonja cheered.",
        "Leah gave Chloe a look of confusion. \"Porn is videos of people playing. We watched it when we were messing around with Master's computer,\" Chloe replied. \n\nSonja took my other side on the couch and Chloe and Leah took the ends. I went to my favorite porn site and looked for a decent vid. Oh, a milf POV clip! I clicked on it and the girls huddled in. For the sake of convenience, I skipped through the introduction and interview to when she started blowing the guy. All the girls oohed and awed at the sight, soaking up the sexual stimuli like sponges.\n\n\"Is this what we look like when we use our mouths?\" Chloe asked, able to look down on the woman's head thanks to the camera view.\n\n\"Pretty much, but you're all much cuter and prettier than any of these women.\"\n\nThe blowjob continued with the girls taking notes, studying on how they might improve their technique. I was already getting hard. It felt strange to actually watch the whole movie instead of just skipping around and watching twenty-second increments. After showing off her skill, the woman stripped down and lied back on the bed, her legs spread wide. The girls all held their breath as the man penetrated her, their ears perking to her shrill moans.\n\n\"Hmph, my breasts are way bigger than hers!\" Sonja bragged. After all that time she spent around Betty, it was no surprise that she'd want to assert her superiority.\n\n\"Yes they are, dear,\" I sighed while patting her head.\n\nThe movie continued, the woman changing positions from missionary to doggy style and then to both forwards and reverse cowgirl. It wasn't lost on me, Momo and Sonja's hands slipping between their legs. Shameless as always, they couldn't help but play with themselves as they watched. Leah did the same, instinctively imitating them without understanding what they were doing. Chloe, always modest and shy, abstained, and I rewarded her with an ear rub.\n\nThe video finished as they all did, with the man ejaculating on her face.\n\n\"Master, why does he do that?\" Momo asked.\n\n\"What do you mean?\"\n\n\"She wants to drink it, doesn't she? So why doesn't she just use her mouth on him? Why does he have to do it himself? He's spilling so much.\"\n\n\"Well... it's sort of like... he's marking her with his scent. I've done it with you girls before, when I've used your breasts to cum.\"\n\n\"Can we watch another movie?\" Sonja asked.\n\n\"Of course.\"\n\nI selected another video, a basic somewhat muscular guy fucking a generally attractive girl. It wasn't POV, just pure generic pornography.\n\n\"Everyone plays the same way we do!\" Chloe giggled.\n\nMomo's slender fingers then found my zipper. She had noticed how hard I'd become. I pushed the computer further down my lap to give her room and she pulled my kielbasa free. She rested her head on my lap, my cock finding its home in her mouth. She made love to the head with the inside of her cheek while her eyes remained glued to the screen, watching the woman do the same thing. My fingers slipped into her honeypot, stirring it up as thanks for her efforts. She had become so wet from the movie, her pussy sounding like macaroni and cheese being mixed. The girls weren't sure what to watch, the porn on the computer or the porn Momo was making.\n\nShe sat up after a couple minutes to wipe the slobber off her cheek and Sonja took that opportunity, devouring my manhood and declaring my lap to be sovereign territory of the dog nation. Chloe and Leah both leaned in, waiting for their own turns.\n\n\"You girls just can't help yourselves, can you?\" I said with a laugh.\n\n----------\n\nIt was Thursday night. The girls and I were at the farm, invited for dinner. We had just finished eating and we all just sitting around the table and talking. I had work tomorrow, so I wasn't drinking.\n\n\"So, I haven't asked yet, how's it been with you two? Lorraine has moved back in, that's got to be fun.\"\n\nElise groaned. \"I didn't think it was possible, but she's somehow gotten even more annoying than before this all started. Do you know much I miss having peace and quiet? When she moved out, I was left to run this farm by myself. It was arduous, but it was blissful.\"\n\n\"All I did was try to explain the goldmine of potential fetish porn we could make!\" said Lorraine. \"After all, obviously she's open to new things when she's drunk. Have you ever considered making porn with your girls?\" \n\nI swallowed a lump in my throat. There was that one time I considered it, when I found Momo using her vibrator. \"No, I never thought about it and I never will.\"\n\nMomo jumped from her seat. \"Porn? Can we make porn? Momo wants to make porn!\"\n\n\"Oh, Jesus Christ,\" I said.\n\n\"Come on, once this gets out into the open, Rule 34 will take full effect and armies of lonely men will be begging for catgirl titties! We're sitting on a goldmine! Oh, by the way, Momo, can you do me a favor?\" Momo's ears perked up. \"Can you hold up your hands and say 'nyaa' for me?\" Momo didn't understand but obliged. She held up her hands to her chin and went \"nyaa\", while Lorraine recorded it with her phone. \"Perfect. My tumblr followers are going to love this.\"\n\n\"What is porn?\" Betty asked.\n\n\"They're videos of people having sex,\" said Tobi, \"Mistress had us watch so we could learn how to please her.\"\n\nElise and I gave Lorraine looks of disgust, but she was smiling and looking off into the distance, her mind preoccupied with memories of bedroom shenanigans with her male harem.\n\n\"Oh yes, we watched so many different kinds of porn! We watched regular porn, we watched anal porn, we watched POV porn, we watched milf porn, we watched barely legal porn, we watched cartoon porn, we watched peeing porn, we watched interracial porn, we watched bukkake porn, we watched gangbang porn, we watched double-penetration porn, we watched fisting porn, we watched scat porn, we watched\u2014\"\n\n\"Steve!\" Lorraine exclaimed.\n\nI can't believe I had sex with that woman. My soul feels so filthy.\n\nBetty looked at me. \"I'll make whatever kind of porn Master wants,\" she purred.\n\n\"Ok, what the hell did you do to her?\" Elise asked. \"Every time I say your name, she gets all nervous like a schoolgirl.\"\n\n\"Hey, that's between her and me.\"\n\n\"Master, can we please make porn?\" Sonja asked.\n\nI can't believe I'm having this conversation.\n\n\"No, we are not going to make porn.\"\n\nLorraine poured herself a glass of wine. \"You could keep it private, not showing it to anyone. Anyone except for me. Hell, we could watch it on the TV in the living room like a home movie. We could even trade videos. I've already built up a vast archive.\" \n\n\"I think you've had enough to drink,\" said Elise, pulling away the wine bottle with her tail.\n\n\"You've gotten pretty good at that,\" I said.\n\n\"I know, right? I'm actually starting to warm up to it. I've been trying to build up the courage to go outside, but I know that once I get dirty, I'll never be able to wash it out of my scales.\"\n\n\"Maybe the CDC can make some kind of condom you can wear on your tail.\"\n\n\"Speaking of which, have you gotten freaky with that thing yet? The tip of your tail would make a great dildo. Plus, if you two have sex again, he can be the one to take it in the ass.\"\n\n\"Why must you ruin every conversation?\"\n\n\"Because I feed on your misery and awkwardness. That sound you make, that groan you do whenever you facepalm, that sustains me. By the power of awkwardness, I shall live forever!\"\n\nThe ringing of my phone stopped the conversation. I took it out to see who it was, and my stillness caused everyone to become alert. I was staring at my phone, seeing Dr. Lawrence's name. With countless eyes on me, I answered it.\n\n\"Hi, Dr. Lawrence, what's going on?\"\n\n\"Things have become much more complicated.\"\n\nMy heart sank into my stomach. Shit! Shit! Shit! Shit! We're going to end up in the labs from District 9!\n\n\"Define complicated.\"\n\nThe blood drained from everyone's faces.\n\n\"Well, believe it or not, it's the kind of complicated that may end up benefiting you.\"\n\nMy sphincter, having slammed shut like a vault, slightly loosened with a glimmer of hope. I released some of my held breath, prompting others to do the same. \"I'm here with Elise and Lorraine, can I put you on speakerphone?\"\n\n\"That would be best.\" \n\nI set my phone on the table.\n\n\"Hi, Dr. Lawrence,\" the sisters said.\n\n\"Hello, Dr. Lawrence!\" the girls and pillar men called.\n\n\"Hello everyone. Now, to start, I want to tell you the results of the tests we ran on your blood samples. Your sample and Lorraine's showed no extraordinary traits or components, same with your DNA. As for your pets, we have confirmed that you are all indeed hybrids. Half your DNA is human, the other half is the animal that you originally were. Now here's the interesting part. We can't track the genealogy of any of you. Your animal DNA is easy, we can categorize that in our sleep, but your human DNA doesn't correspond to any known ethnic group or homo subset.\"\n\nThe girls and the pillar men looked at each other in bafflement. The explanation had gone completely over their heads. I would have to explain everything to them later. Actually, this made a lot of sense. At the zoo, most of the animals we turned had complexions that varied without any sort of pattern, but if their DNA didn't correspond to any ethnic groups, then of course their skin tones would be random.\n\n\"Doctor Lawrence, what about me?\" Elise asked.\n\n\"Elise, you are the opposite. Your snake DNA, or rather, the DNA that is not human, does not correspond to any known species on Earth. I'm not sure if that answers your questions, but I guess it's something you can be proud of in a way. Other than that, we have nothing else we can tell you, but we're going to keep looking.\n\nNow onto the main topic. As I was just saying, things have become complicated, but this may end up helping your case. Normally I would give you the whole \"this is classified\" speech, but obviously you've shown you can keep a secret.\" He paused for a few moments. I was about to ask him what was wrong when\u2014 \"It's happening elsewhere.\"\n\nLorraine and I exchanged glances. \"You've got to be kidding.\"\n\n\"I'm serious, but that's just the start of what's going on. Yesterday, a film crew in Alaska was using drones to record wolves for the next season of 'planet earth'. They saw one of the wolves transform into a woman.\"\n\n\"Was anyone around? Anyone who could have caused it?\" Elise asked.\n\n\"No, this was pure Alaskan wilderness. The film crew had to keep a wide distance from the pack to get their shot.\"\n\n\"So it happened on its own,\" I said.\n\n\"That's the most prevalent theory. Others have suggested that perhaps someone in the film crew had a similar ability that worked over a longer range, or that your effective range has increased to the other side of the country, though that's doubted.\"\n\n\"So what happened to her? Did you guys capture her?\" Lorraine asked.\n\n\"Well, we did, initially, but then we came up with an idea.\"\n\n\"What idea?\"\n\n\"We sent in a team to sedate her with tranquilizer guns, but as soon as we got close, the entire pack closed in to try and protect her. We had to dope every wolf just so we could grab her.\"\n\n\"So the wolves still recognized her as one of their own?\" Elise asked.\n\n\"Correct, and here's where things get really crazy. She's pregnant.\"\n\nThe air was drained from the room, none of us knowing what to say. How was this possible? All the girls were sterile!\n\n\"Trust me, I know exactly what you're thinking. She's well along, too, just a few more weeks. We believe that since she was pregnant before she transformed, the wolf fetuses are still in her womb, that is, if they are still normal wolves or if they've transformed like her.\"\n\n\"Where is she now?\" Lorraine asked.\n\n\"We let her go. We left her to wake up with the rest of the pack.\"\n\n\"What do you mean you let her go?\" I asked.\n\n\"That was the idea we had. We're going to let her continue her current lifestyle and surveil her from a distance to see how she interacts with the rest of the wolves. Studying the psychology and group dynamics of these creatures has become one of our top priorities. Before we released her back into the wild, we tagged her with a GPS and a thermometer. This way, we can make sure she doesn't get hypothermic during the night. Once she gives birth, we'll sedate the pack again and examine the pups. If they are human, we'll take them and the mother into protective care, and if they are normal wolves, we'll wait until she's raised them and leave them to the pack while we take the mother. She can survive the nights right now, but there's no way we can leave her out there once the temperature drops.\"\n\n\"Ok, so how does this benefit us?\" I asked.\n\n\"Originally, keeping you quarantined was the only contingency plan we could come up with to prevent more animals from transforming. However, if it continues to happen naturally, then the two of you go from being nuisances to godsends. Now the World Health Organization wants to form a contingency plan for if more hybrids show up.\"\n\n\"What, are they expecting this to become like the X-Men universe?\" Lorraine asked.\n\n\"Well they believe that it is a possibility. If animals can now transform without a human causing it, then there is nothing to stop it from continuing or the rate of the occurrences even increasing. For this to happen so soon after your trip to New York, we do believe that that is the most likely scenario. In which case, what information about the zoo that has managed to leak to the public may be a blessing, as it will possibly brace the people for what is about to happen.\n\nThe WHO and the CDC would like a chance to study hybrids in a lifelike, laboratory setting, to see how they can cohabitate with people. You and Lorraine are the only two people known to be able to cause these phenomena, so we'd like to see how you and your hybrids live together, as well as continue to study your abilities.\"\n\nLorraine and I exchanged glances. \"You basically want to put cameras on us 24/7, watching our every move,\" she said.\n\n\"Pretty much. We'd like to move you to a facility where we can monitor your social interactions and get a much better understanding of the physiology of the hybrids. Our initial plan was to simply have you all live on the farm and install cameras in the house, but with eleven of you, and possibly more in the future, you would probably all get a little too cramped. We're offering you more room in an environment we can monitor.\"\n\n\"It looks like you'll be making porn after all,\" said Elise under her breath.\n\n\"This isn't going to turn into a prison, is it?\" I asked.\n\n\"Of course not. The world is inevitably going to find out about the hybrids, and when that happens, there is going to be a lot of confusion. You can help us get the information we need to fight that confusion and figure out a way to keep things from turning ugly. We want to carefully expose both sides to each other and you two will be the mediators for that. Once containment is no longer possible, we want you to introduce your pets to the world in carefully measured doses.\"\n\n\"What about me?\" Elise asked. \"I have a farm to run and I'm not going to leave my home or my cows. Besides, I really don't want anyone to see me.\"\n\n\"This is only a temporary measure, a few months at the most. Your cows will be taken care of in your absence. Actually, while you're staying there, we would like to remodel your homes to better suit the needs of your pets and ensure their wellbeing. Elise, this would benefit you the most, as the facility will offer you proper housing for your condition and an environment where we can thoroughly examine you and try to help you.\"\n\n\"What about the zoo animals? Where are they?\" I asked.\n\n\"That's also what we'd like your help with. They'll be living with you while you're staying at the facility. We're still trying to figure out how to house them to fit their physical and psychological needs, trying to balance the natural environment that they're used to and the human environment that they've evolved to. We're hoping that we can use what we learn from you to give them proper homes. You guys will be in charge. Whatever you want or need to make everyone comfortable, we'll supply it.\"\n\nWhile the idea of being under constant surveillance made me nervous, this offer was still a godsend. Truth be told, my little cabin had become awfully cramped with the five of us, and this facility would give us the chance to find some real answers. Hell, just giving the girls a CAT scan would be monumental. Plus, I would be able to see my creations from the zoo again. I had worried about them nonstop since leaving New York, wondering what kind of care they were given. Now I could properly watch over them, and Lorraine could do the same with hers.\n\n\"I want to see them, I want to make sure they're being well taken care of while this is all getting set up.\"\n\n\"That would be great, we could really use some help figuring out how to care for them. You and Lorraine fly back to New York and we'll bring you in.\"\n\nI looked at Lorraine, filled with terror. I'd have to fly again with her?\n\n***\n\nPlease comment!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "cow girl",
        "bdsm",
        "interracial",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-11"
}