{
    "title": "Writing Erotica for Fun & Profit",
    "pages": [
        "To begin my little essay, let me say that you will be much more successful and contented as an author if you concentrate more on the former than on the latter.\n\nGood day. My name is BrettJ, as you can see from the header. If any of you are new to my work, I am a prolific writer of erotica. On this site alone, I have accomplished the authorship of nearly 500 pieces. Elsewhere, under a different name, there are nearly 200 more. To date, I have written and sold nearly 1600 pieces of erotica fiction. I would say that does qualify me to give advice to fledgling erotic authors or even those whose \"batteries\" might need recharging. Sadly, it does indeed happen to the best of us.\n\nI hope that his essay can offer advice, a bit of humor and some insight. I'm going to try and be thoughtful and offer some perspective on what it is like to be an author of erotic fiction and how to keep going at it after years of work.\n\nAn acquaintance of mine is a very successful author. His name is Mark Evanier and if that name is familiar to some of you, there is good reason. Mark has worked on such TV series as Roseanne and was Story Editor / Producer on both Garfield and Friends and the current Garfield Show. He has written books on such luminaries as Jack Kirby and voice actress June Foray and contributed several articles to magazines on animation and comics. He has been a prolific author for over 40 years.\n\nMark and I share one viewpoint -- writers must write. Don't make writing for pay a goal and not write a word until you are paid to do so -- write. Write as much as you can as often as you can. Have fun with the process, share your work and write, write, write until your words flow freely.\n\nI think sites like LITEROTICA are a great thing, although some may disagree. I was \"discovered\" here after a few months of writing. I am now going to contradict some of my own advice as well as some of Mark's.\n\nDO NOT let yourself be conned by publishers offering to get you work if you send them \"samples\". Don't work for free. Send A sample, sure -- or even just a few pages of something you consider a worthy example of your work. That is a reasonable request. If you are worth publishing, someone will want to pay you. That is the bottom line, except in my case. You may feel free to laugh, but the company for which I've worked this past 8 years asked to \"borrow\" some of my writing with the promise of future employment if they liked what they saw. In those days, I never would have believed I would ever be a professional author, I thought it was a pipe dream. They were offering free magazines in exchange for stories, I thought I'd end up with some free reading material. I said sure and thought nothing more of it.\n\nExcept that I lucked out. My company turned out to be wholly legit, even if the woman I originally dealt with was not. I sent them some material and heard nothing. Six months later, I got an E-Mail from the company asking why I had not sent them any new material. I responded that I had not been paid for the new material I had sent. Not Dime One. Within minutes, I had another E-Mail with an apology attached. They told me in no uncertain terms that they had no intention of cheating me and were apologetic and were going to make immediate restitution. I was to invoice them and a check would be sent out that day. I didn't have a full accounting to the original material I had sent, but did manage to cobble something together. I think it was for 15 stories, if memory serves. I got another mail and was told the check had been sent that day. To their credit, it arrived the following week. I later learned that there were some shenanigans going on behind the scenes and I was dealing with a new person as opposed to the initial contact. The second person left after another year passed and I now deal with either my \"liaison\" or the publisher himself.\n\nMoving on we come to more business. In the early days, I was a freelance author, as most of you will likely be in the beginning or for the duration of your careers. Nothing wrong with that, but there are a few pitfalls. In my freelance career, I learned a hard lesson. Don't count on the cash until it is in your hands. My company had a \"pay upon publication\" policy at that time. At one point, they had about 50 of my stories and I had not seen a penny. I was very nearly broke and needed the money. Luckily, I hit a streak where they needed material and not only did I get paid, they needed more ASAP.\n\nBe willing to walk away if the money isn't good. Erotic novels don't necessarily pay well. I earn more writing short stories than I would for two full novels per month. It isn't a high-paying field, rather, it is based on volume. If you are prolific like myself, you can earn a nice secondary income. You have to decide what makes you comfortable.\n\nOne good thing began to happen and that was, I established a reputation. I delivered the material as asked, to the themes they wanted and I delivered on time. Until two years ago, due to family circumstances and a serious, unexpected illness, I had never missed a deadline. That led them to offering me a contract. I was their first contracted employee.\n\nHere is another business point -- you do need to know when to stand up for yourself and be willing to walk away. They were stalling on signing the contract, so I gave them an ultimatum -- sign before two more weeks were up or there would be no further material from me. I had nothing to lose -- they did. What they were asking from me was 300 new pieces a year -- nearly a million words.\n\nYes, you read that right -- but I believed I could do it. In fact, I knew that I could. I was prolific and to this day, I have more stories in my head than I have time to write. \n\nSo they signed -- and then, they made a mistake I urge all of you to avoid. They did not read the very contract they had signed. I you wonder how that could happen, it was because they had never had a contracted employee before, remember? They had nothing to go on, so I, with the aid of a (very cute ~ sigh) friend wrote the contract myself. It spelled out what they got and what I got and I was beyond fair. When an issue arose six months in, I could stand my ground. \"It's not in the contract,\" was my simple answer. In fact, it was not. I didn't have to do as they asked, which was an unreasonable demand at the time. We have amended the contract a few times since then, once with a demand they held firm, once on a term I refused to budge on -- direct deposit pay.\n\nI cannot stress this enough -- understand the terms of your payment and employment. In plain English -- what am I giving you and what are you giving me?\n\nOther important things to remember -- keep a copy of everything you write and make sure you can prove it's yours. I use many pseudonyms because I write a lot of material. Everything on LIT and elsewhere holds my copyright. My publishers once found someone on the Internet ripping us off, as did LIT. We put a stop to it (it turned out not to be the website, but someone claiming he had my permission to use my material -- he did not).\n\nOther tips now, including this one -- a lesson I had to learn the hard way -- twice, in fact. Know your limitations. If a company is offering you a thousand dollars for 40 stories a month, that might sound great -- but if you can only write 20, be realistic. Don't overdo. Your reputation will suffer if you can't deliver. A few years ago, my company and I came into dispute over my quota. They wanted a change which would have cost me a fair chunk of money. I wasn't thrilled. My liaison stood her ground and I had some years with the company, so I did something I didn't want to do -- I went over her head. With the assistance of an outside mediator and my publisher himself, we reached an agreement that ended up netting me $10 more a month for 3 less stories -- ten thousand words, in fact. It ended up making life easier until life kicked me in the unmentionables two years back.\n\nHere is where my reputation and honesty saved my ass, for those of you still with me. They knew I'd deliver. Even last year, when it became apparent something was wrong, they trusted me. I was not fired for being so behind, I was \"suspended\". I intend to deliver everything I was paid for and work towards rebuilding my career. Wish me luck, all right?\n\nNow comes the fun and intriguing part. I said it before, but it truly bears restating. Writers need to write. Erotica is as valid a genre as anything else and I believe I write erotica, not merely \"porn\". I don't try to crank it out, I do try to put thought into each and every piece. I've earned myself a nice following on LIT and at one point, was in their Top 100 most-read authors. I try to have fun when I am writing and I do think it shows in the work.\n\nMy first story was just a one-off and it took me a few days to write. A little science-fiction erotic piece (entitled \"Programmed For Love\" if anyone wants to search for it). It was based on a story I'd read years earlier and I did my own take on it. To my surprise, it earned me my first \"H\" (for Hot) on LITEROTICA. I have several hundred now. I believe that's because I try to have fun and think of the readers while writing each piece, while not letting them limit me. I don't ever pander to them, although I do to myself. I try to be funny, erotic and romantic or raunchy, depending on the style of the story.\n\nIn the early days, I was just thrilled to be writing again. I'd had a few medical issues that took away my creativity. 100% gone. When I got it back, it was with a zeal I had not enjoyed since my 20's. I loved writing erotica and I dearly loved getting fan mail (I still do) especially from women who liked my work. I've got several female fans who tell me one of the reasons they like my work is my dialog and I never write weak women characters.\n\nDialog is essential to good erotica, in my opinion. Don't write just a string of epithets and \"fuck me\" wordage. Have your characters talk like real people. Hear the conversations in your head. Be witty and funny. Use slang when appropriate but do NOT use Smartphone short forms unless pertinent to the story.\n\nLord, oh dear Lord of all that is kinky, please use some kind of spell check and watch your grammar. Your \"grammer\" is your mother's mom. Learn the difference between \"you're\" and \"your\". Add to that list \"two / to / too\" and \"they're / there / their\". There are several others that creep in. Learn when to end a paragraph. Check for run-on sentences.\n\nI generally avoid the stories that read like a Phone Sex scenario and so do most publishers. By those, I mean as in \"You entered the room wearing your shortest skirt and high heels. I had chosen to wear my navy blazer and gray slacks.\" Give your characters names (first and laugh) and back stories. If you know who they are as people, it will come across to the readers. I've even found myself revisiting characters because I thought of new ideas for them. It has happened several times. I have also thought of an idea for a supporting character that might only have appeared in a paragraph or two. Ideas come from everywhere.\n\nSo, when those ideas DO arrive -- write them down. Or, if you're at the computer as I am now, create an \"idea file\" and write as much into that as comes to you at that moment. I have several stories in inventory that I will get around to. I know from experience that if I don't put them somewhere, they will sometimes fade. At times, even the title will jog my memory. Other times, I need more. I have had an \"idea\" spew out of me that turned into 3 or 4 pages of material before I stopped typing. I fleshed it out later and those stories are often my best because I took the time to jot it all down while it was still fresh and naughty in my fevered imagination.\n\nThere is no easy answer to the question \"where do you get all of your ideas?\" because there is no hard answer. It just -- is. The answer is -- everywhere. On the bus, in conversations, from another story, from reading Playboy to the silliest of things. One fan challenged me to write a story about pinball. Look for it. Another wanted me to write a story involving Peanut Butter. Wrote that one too.\n\nDon't forget to have fun. Good erotica is, in my opinion, fun erotica. Whether it's romantic, raunchy or perverted, it should be fun for the author and for the reader.\n\nI don't believe you have to have more than the germ of an idea to start writing. I've even started a story with just a title or the name of the female lead. I look upon it as a journey, I've started out and I know where the end is when I get there. At other times, I have the beginning and ending in mind. The sex is the middle, like the filling in an Oreo.\n\nOther ideas from me, once again -- fun. Believe it or not, nice Catholic girls and boys can write erotica. It isn't usually real, so go a little hog wild. I entered the LITEROTICA Survivor Contest last year to expand my horizons. I wrote in a few categories I hadn't before. I won one of the prizes. I entered again this year, much for the same reason. This very essay is part of that. I regret that LIT is ending them as of this year because I do believe the challenge made me a better author. Writers, challenge yourself. If you can write hardcore porn, write something with romance. If you tend to be a bit on the flowery side, go for the nasty stuff. Think like a gentleman or lady in the day to day world, be a bit of a whore on the printed page.\n\nAs I said, I get inspiration from a lot of places and one of those is photos. Almost all of my characters have a real-life visual counterpart. In my \"Heather and Bryan\" series, there are two real-life Heathers I use as templates, both from Playboy. So I know how their bodies look in certain positions, the color of their eyes, all of it. I even hear some of their voices based on videos. I don't advise using their real names, although real first names are usually okay. In a few situations, I got permission from actual women (Linn Thomas, Erin Fox and adult film actress Angela Sommers) to use them as characters in my story. All of those ladies approved.\n\nSet the scene. What does the room look like? How is each character dressed and in the case of the women, made up? High heels, bare feet or slippers? Shaved, trimmed or au naturel? You might not think it matters to the readers -- but it does.\n\nNow that you have some of the basics down, get writing. If you have a talent for writing, it shouldn't be like pulling teeth. That does happen, even to someone like me. With my illness, I had the ideas, the process was just excruciating for a time. A friend offered me good advice. He had no idea how much I'd written and when I told him, he was astonished. \"That much?\" He gasped when I answered. When I told him how much per month, his eyes went wild. \"No wonder you're tired,\" he admonished me. \"Stop beating yourself up, you need a break.\" He was right. It is okay to take a break, although sometimes, you can't afford to. In my case, my health won out over commerce.\n\nYou're writing now -- having fun? Good, is it a short story or a novella or a full-on novel? Sometimes it can start out as one and move into the second and eventually, the third. Or a series of stories. Some publishers don't want series, so know who buys what in advance if you can.\n\nI can say that the current erotic fiction market is in a state of flux. Novels sell, but usually by established writers like Opal Carew. Short story markets are still fairly good, although the E-Book / Kindle market is opening up. Even Amazon offers self-publishing, well worth exploring. Of course, you don't have to choose one over the other, you can market yourself as many ways as you would like, providing you remember the time factor.\n\nI also suggest writing to your comfort level. Don't write something that you know would make you very uncomfortable. I don't like rape / non-consent material or anything degrading. I know I could write Gay erotica, but it isn't my genre. I write good lesbian fiction and a few other odd categories that some might find off-putting. I have fun, remember it is all a fantasy and that bills must get paid. Commerce does matter. Again, I stress -- do NOT let a publisher con you into writing for \"free\". Yes, get your work out there -- LIT and other sites can do that for you, or you can create your own site. Sometimes, a fledgling company will offer to publish a story of yours in an anthology, with a copy of the book as your recompense unless the sales go over a certain number. I've done that once, as I thought it fair enough for a novice writer. The book was fun, although badly edited. Spelling, grammatical and layout errors were abundant. It wasn't too difficult to see why the book didn't sell huge numbers.\n\nHere's one thought as I wrap up -- decide for yourself if you want to tell friends and family what you do. It was about 4 years before I told my family and they weren't thrilled. They still aren't, although now that they see what I earned, it's a bit more acceptable. Most of my friends know. Some still don't. The stigma remains. I'm proud of my accomplishments and the volume of work I have achieved. Still, I don't want everyone knowing I'm a \"pornographer\". I certainly am not Larry Flynt.\n\nWrite. If you have computer skills, you've got another tool to use in furthering your career. Before you find a publisher, have something to show them. Have a few somethings because lots of publishers (mine included) publish several genres.\n\nThe work is out there if you pursue it, it's fun and it's challenging.\n\nIf anyone wishes to ask me further questions, I'm usually on my thread in the Forums or PM me. I'm willing to help out anyone.\n\nIn summation, I stick by this -- write because it's something you love to do.\n\nBrettJ\n\nDecember 31, 2014 "
    ],
    "authorname": "BrettJ",
    "tags": [
        "instruction",
        "humor",
        "essay",
        "advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/writing-erotica-for-fun-and-profit"
}