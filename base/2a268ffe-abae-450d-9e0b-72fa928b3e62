{
    "title": "Falsely Accused Ch. 05",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 17 - Consequences\n\nFriday, August 18th. It was eerily quiet as I watched the burning body of the man I'd just shot dead as he was about to throw a Molotov cocktail into Laura's office.\n\n\"Sir,\" Cindy said quietly, \"I've got to bag your gun.\"\n\n\"Yes.\" I said. \"Hold open the bag.\" She did so, and I ejected the magazine from my gun into the evidence bag. Then I cleared my weapon, the cartridge flying to one side, and slid it into the bag. Cindy went over and photographed the three expended shells, then used tweezers to pick up the unfired cartridge and the three expended shells, and bagged them all in the same bag with the gun and magazine.\n\n* * * * * * * * * * * * * * * *\n\nSenior Sergeant Hewitt's SWAT Team led the charge up the small hill towards the Psychology Building, Lt. Irwin's 1st Precinct Officers right behind. They drove almost headlong into the protesters, who began screaming and running away to the four winds. The building was quickly secured, and the crime scene (the dead body) was secured for the Crime Lab to process.\n\nMoments later, Captain Teresa Croyle came into Laura's office, tears in her eyes. \"I... I'm sorry, sir. I failed to get them here on time...\"\n\n\"We heard on the radio.\" I said. \"It's not your fault.\" As more Officers poured in, I began giving orders. \"Rudistan! You and Morton take that evidence from Captain Ross and keep two-man control of it.\" Cindy signed the evidence over to Rudistan and Morton. \"Ross, take my family in my SUV to Headquarters.\" I handed her the car keys. Cindy and Laura carried Carole and Jim out, escorted by other officers. My wife's face was almost gray with what had to be fear... for me.\n\n\"Sir,\" said Lt. Irwin, \"I'll take you and Captain Croyle to Headquarters.\"\n\n* * * * * * * * * * * * * * * *\n\nAlthough I had no regrets about shooting the bastard that was trying to kill my family, I knew it was going to be a long, long day. I gave my statement on camera in the Main Conference room, with Lt. Curly Goodwin of Internal Affairs leading the questioning and Inspector General Wellman observing, and the Police Captain Union's rep there as my representation.\n\n\"He'd already thrown one Molotov cocktail,\" said Goodwin, \"and was throwing another? And you're sure your only option was to shoot?\"\n\n\"Yes.\" I said. \"I believe I had no other option to save my family, and Captain Ross, inside the room.\"\n\nAfter the inquisition--- er, questioning, the Chief came in. \"Okay, Horace,\" he said to the I.G., \"desk duty? Restricted duty?\"\n\n\"Restricted duty, for now.\" said I.G. Wellman. \"The Sheriff will make the final decision.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is John Hardwood, KSTD Five-Alive News!\" said a very happy Hardwood. \"We have exclusive coverage of Commander Donald Troy murdering a peaceful protester on the University Campus today! You will not see this footage on any other station!\"\n\nThe camera coverage was actually distant and spotty, and the Molotov cocktail exploding could be clearly seen as part of it, though Hardwood conveniently forgot to mention that part of it.\n\n\"Oh wow.\" said Joanne Warner, nearly in tears. \"They were trying to kill the Commander's family!\"\n\n\"Yeah.\" said a somber Theo Washington.\n\n\"And the Press is calling it murder.\" said an angry Jerome Davis. \"God damn John Hardwood!\"\n\n* * * * * * * * * * * * * * * *\n\nAt noon, Sheriff Daniel Allgood came to the podium in the City Hall atrium, and spoke into the microphones and before the cameras.\n\n\"The shooting at the Psychology Building is under investigation.\" said the Sheriff. \"It is clear that the man that was shot was in the act of throwing a Molotov cocktail at the Psychology Building, having already thrown one and maybe two such incendiary devices already.\"\n\n\"Even so,\" continued the Sheriff, \"the shooting of the man by Commander Donald Troy must be fully investigated. Commander Troy has also has violated internal Police Department policies. Therefore, while the Board of Inquiry investigates, I am suspending Commander Troy without pay for the duration of the investigation.\"\n\nThe shock wave that went through Headquarters and the TCPD was like a bomb blast. I was in my office, watching with the Chiefs... Moynahan and Griswold, who had come over as soon as he'd heard the news.\n\n\"For God's sake.\" muttered Moynahan. \"That's a bit excessive.\"\n\n\"Pretty low class of Allgood, too.\" said Griswold, looking like he'd lost his child. \"And what 'internal policies' is he talking about?\"\n\n\"Internal Affairs bugging our offices and listening in.\" I said. \"Anyway, it's no big surprise... Okay, gentlemen, I've got to pack my personal stuff...\"\n\nI did so. The Trojan Horse and the painting were wrapped and put in a box, and into it I added the drawing by Gunny Guernica's son and the framed Marine insignia. I emptied the contents of the safe in my office into a box, and put Bowser's citations in that box. I left everything else. As I packed, I realized that this office had lost that energy it once had, that feeling that I belonged in this office, that it was special, that it was... home...\n\nChief Griswold helped me take the boxes to his car, the act of doing something helping to ease his own pain. I went back inside, turned in my I.D. card and badge to the Duty Desk Sergeant and signed out...\n\n* * * * * * * * * * * * * * * *\n\nAs Teresa Croyle came up the hallway and looked inside the anteroom to my office, she saw Cindy standing in the doorway to the office. Going over, she saw that Cindy was surveying the empty room, tears running down her cheeks.\n\n\"It's my fault.\" Cindy said. \"I betrayed him, and this is what has happened. It's my fault.\"\n\n\"No, it's mine.\" said Teresa. \"I did not get people over there in time to stop the riot. It was my fault he had to shoot that punk.\"\n\n\"No, you did what you could.\" Cindy said. 'It's just... this room... the energy is gone. There used to be an energy to this room, but it's just... emptiness now.\"\n\n\"Ladieeeees,\" growled the voice of Chief Moynahan behind them, \"we have to keep going. Come to my office in ten minutes.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Sergeant Charles,\" said Chief Moynahan to the Officer standing at attention in front of his desk, \"why didn't you act when Captain Croyle ordered you to deploy your team?\"\n\n\"Sir,\" said Charles, \"I was ordered to stand down by Commander Harlow. She outranks Captain Croyle.\"\n\n\"First of all,\" said the Chief, \"you were ordered to move to save another Police Officer's family, that being the family of Commander Troy. How you could fail to act to save lives is absolutely beyond my comprehension.\n\n\"Second, Captain Croyle is your direct chain-of-command, and Commander Harlow is not even in your chain-of-command at any point. You should have followed your Captain's direct orders, not Commander Harlow's ill-conceived and improper orders to the contrary.\"\n\nSergeant Charles said nothing. Chief Moynahan said \"Okay, you are on restricted desk duty until the investigations are complete. You're under investigation for failing to follow your Captain's orders, putting lives in danger. That investigation will be concurrent with Commander Troy's investigation. Dismissed.\"\n\n* * * * * * * * * * * * * * * *\n\n8:30pm, Friday, August 18th. A celebration party was in progress at Thomas P. Cook's home. Also present were State Senator Katherine Woodburn, Councilwomen Kelly Carnes and Malinda Adams, trusted reporter John Hardwood, Deputy Police Chief Della Harlow, Sheriff Deputy (Captain) Scott Peterson, Dr. Jan Camp, and Dr. Lionel Carmela.\n\n\"We got him.\" said Kelly Carnes, with a great deal of satisfaction in her voice. \"We finally got rid of the God-damned Iron Crowbar.\"\n\n\"Well, not yet, not completely.\" said Thomas P. Cook. \"But he's suspended, and when the Board of Inquiry finds him in the wrong and not indemnified, he'll be summarily fired from the TCPD.\"\n\n\"And all it took was for some thugs to attack his family.\" said Carnes. No one seemed to have empathy for the dead man that Commander Troy had blown away.\n\n\"We have to act quickly while Commander Troy is suspended.\" said Katherine Woodburn. \"It may be ruled a good shoot... but by that time, we'll have Jared out of the Governor's Mansion.\"\n\n\"What's going to happen with that?\" asked Thomas P. Cook.\n\n\"Lieutenant Governor Collins is going to go to the State Supreme Court to get authorization to convene the Legislature for an Impeachment vote.\" said Woodburn. \"Recent comments by the Governor show him to be mentally incompetent.\"\n\n\"And the Press has laid that groundwork for you by chanting that every chance we get.\" said John Hardwood.\n\n\"Yes, you have.\" said Woodburn. \"So, are you going to keep pounding away at Troy in the Media, until he is gone?\"\n\n\"Oh yes.\" said Hardwood, relishing his words. \"But not too much. Our friend on the Board of Inquiry intends to delay action for as long as possible, to keep Troy suspended and in limbo for as long as we can.\"\n\n\"How long will that be?\" asked Scott Peterson.\n\n\"We're hoping to keep delaying for a month or more.\" said Thomas P. Cook. \"But we expect John Colby and Dagmar Schoen to begin raising hell after a couple of weeks.\"\n\n\"The Sheriff did not want to suspend Troy.\" said Scott Peterson, which he knew to be an outright lie. \"It took a lot of pressure from wealthy political donors to get him to do that much. He probably won't brook a delay more than two weeks.\"\n\n\"So we're ready to put our plans into effect?\" asked Carnes.\n\n\"Yes. Yes we are.\" said Cook.\n\n\"What about his wife?\" asked Dr. Lionel Carmela. \"What are we going to do about that fucking bitch?\"\n\n\"One thing at a time, Dr. Carmela.\" said Thomas P. Cook. \"In due time, she'll be out on her ass, as will Marvin Milton, and persons of your political thought will rule the Campus. And then Conservative speech will be eradicated... by whatever means necessary...\"\n\n\"Yes, that's true.\" said Dr. Jan Camp. \"Don't worry, Lionel. We will soon be rid of those on Campus that oppose our views... including that piece of dog shit Wellman...\" Carmela smiled.\n\n* * * * * * * * * * * * * * * *\n\nThe mood at The Cabin was more somber. Molly had brought the boys, and Cindy had brought Laura and the kids to the Cabin, then went and got Buddy and Bowser and brought them up, as well. Chief Griswold had brought me to the Cabin, where I put the boxes of stuff in my office.\n\nMy mother came up and helped cook dinner (which means she actually did the cooking), and Todd and Teresa came with Todd's kids, as well. I was glad to have them all there... despite this day, I was grateful to have this family. They were worth the fight I was fighting.\n\n\"Cindy took Callie to 'The Vision' compound.\" said Teresa. \"Cindy was really shaken up by what happened today. I could probably use some of Dr. Eckhart's therapy, too.\"\n\n\"You've got Buddy.\" Todd said. \"He's the best therapy.\" Indeed, a handsome Cocker Spaniel was in Teresa's lap, enjoying being petted and 'skritched'. Teresa half-smiled.\n\n\"Buddy is good therapy, aren't you boy?\" Teresa said. Buddy looked up at her and wagged his tail. Meanwhile, Bowser had been 'letting' me give him attention, with Carole helping me pet him. And one thing was for sure...\n\nNo matter how bad it gets, good dogs just make things better.\n\n* * * * * * * * * * * * * * * *\n\n\"Everyone is asleep.\" said Laura as she came out on deck where I was sitting, watching the Town, petting Bowser. I picked him up and Laura sat down beside me on the metal loveseat, then I set him in my lap. Laura helped me pet him.\n\n\"How are you feeling?\" Laura asked me.\n\n\"I dunno.\" I said as I saw the light of a train come out of the western horizon. \"I don't regret shooting that piece of shit. I think what bothers me is what the Sheriff did. Suspension without pay? Sheesh.\"\n\n\"We're okay with money.\" Laura said.\n\n\"It's not about the money.\" I said. \"Suspension without pay is a declaration of 'guilty until proved innocent'. The Captain's Union is grieving it, but... well, it doesn't matter.\"\n\n\"I don't think I've ever heard you sound quite this way.\" Laura said.\n\n\"You weren't here the night before I took Westboro on his last helicopter ride.\" I said. Indeed, I was feeling much worse, much lower than I'd felt on that fateful night. I felt Laura snuggle into my side and put her head on my shoulder. One person there for me when I needed it most, I thought to myself.\n\n\"So... you still happy here at the University?\" I asked my wife.\n\n\"Yes, I think so.\" said Laura. \"Despite some of the hostility, I've got a lot of support, too. And Wellman does not like Jan Camp. But I do know this: I'm ready to follow you wherever you want to go, if you want to leave here.\"\n\nI nodded. \"Not yet. I've still got to find a way to exonerate Peter Gordon. Maybe this suspension is a blessing in disguise. Now I can work on that unabated...\" \n\nI felt some life come back into my soul as I realized I still had purpose and a mission to fulfill. And I felt life coming back to a certain part of me.\n\n\"Let's go in and go to bed.\" I said. Laura did not have to be asked twice.\n\n* * * * * * * * * * * * * * * *\n\nThe light of the bedside lamp bathed the room in a soft glow of warm light as I pistoned my throbbing cock in and out of Laura's sopping went cunt from the rear. My wife's shoulders were on the bed, her cheek pressed into the mattress, and her succulent ass was high in the air as I held her hips and slammed my turgid meat into her again and again with relentless power.\n\n\"Oh, yes!\" Laura moaned. \"Give it to me! Fuck me with that iron hard cock!\" She was pushing her ass back into my groin in perfect time with each of my thrusts. I was gripping her hips, pulling her into me, and her asscheeks slammed into my groin with wet, thudding smacks of raw sexual pleasure.\n\n\"Damn, you are so fucking hot!\" I grunted as we rutted lustily in marital bliss. Laura had already come hard once, and was working her way to another orgasm. I knew that her spasming, clutching cunt would drive me over the crest, and that I would soon be pumping my load into her hot, wet depths...\n\n... and as the gray mist in my eyes cleared up, I realized that my cock was firing the last pulses of my intense climax into her. Laura's cries of pleasure seemed far away as I felt my body shiver. I was leaning over her, my chest against her curved back, my hands gripping her large, milk-filled breasts as we shivered though the last of our moment of ecstasy.\n\nAs I was catching my breath, Laura said \"Darling, what is that light on the deck?\" I looked over to the window. The blinds were down, but an eerie blue light could be seen between them.\n\n\"I don't know. Maybe it's the moon.\" I said as I eased off of my wife, my cock sliding out of her sperm-filled pussy. I got of the bed and went to the window and peeked out. \n\nThe deck was to my lower right, bathed in moonlight. At the far end, just inside the rail overlooking the cliff, I saw a tall man in a dark suit and tie standing there. His head was glowing white and totally featureless, though I could sense he was looking straight ahead at the back door. No, this can't be! I thought to myself. It's the Slender Man!\n\nAs Laura came up to the window, the apparition's head seemed to turn. A cold chill ran through me as I realized the Slender Man was looking right up at us!\n\n\"What is that?\" Laura gasped. I was already in motion, grabbing my pants an my holstered gun.\n\n\"Get a leash for Bowser!\" I shouted as I ran out of the bedroom and down the hall. I tore down the stairs and into the greatroom to the back door. When I opened it and looked onto the deck, it was empty. Slender Man, or whatever that had been, was gone.\n\n* * * * * * * * * * * * * * * *\n\n\"Sniff, boy!\" I encouraged Bowser, who had a leash attached to his collar. Molly had Buddy likewise restrained. They were both sniffing were I'd asked them to, the end of the deck where Slender Man had been standing. I had them sniff around the deck and around the side towards the driveway. But in the end, they just looked up at us as if they wanted to hear the punch line of the joke, or as if they thought we humans were a bit nuts. They might well have been right about the second part.\n\n\"If I hadn't seen Slender Many myself that time,\" Molly said, \"I'd be wondering about you, Don.\"\n\n\"I saw him, too.\" Laura said. \"And someone was here. Look what was taped to the window by the door.\" She handed me the piece of paper. On it was a drawing of the Slender Man in the trees, 'X's for his eyes, and the words \"Don't look back, or he takes you!\".\n\n\"Another of the Eight Pages.\" I said as we all went inside. Buddy and Bowser were released, and wasted no time in returning to their guard posts over the kids. We adults might have had a libation or two... though tthe drinks did not get the chill out of the very depths of my soul...\n\nPart 18 - Witnesses Against The Prosecution\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, August 21st, from in front of City Hall. \"Fox Two News is bringing you continuing coverage of the Police shooting of a protester on the University Campus!\"\n\nBettina: \"Police Commander Donald Troy shot and killed a protester identified as 'Davey Jones' last Friday, as Jones was throwing Molotov cocktails at the Psychology Building, where Commander Troy's wife and children were located. Commander Troy was suspended without pay by Sheriff Daniel Allgood, a move that Police Chief Sean Moynahan called 'excessively harsh'. The Police Captain's Union has grieved the Sheriff's action, saying a full suspension without pay without a Board of Inquiry ruling is 'premature' and 'unwarranted'.\"\n\nMore Bettina: \"However, not all of the Police Force is in agreement with the Chief on Commander Troy's actions. Deputy Chief Della Harlow had this to say. Roll tape.\"\n\nTape rolled. Harlow was shown saying \"Commander Troy's shooting of an unarmed, peaceful protester was nothing short of murder. While I applaud Sheriff Allgood's action, a suspension is not nearly enough; Commander Troy should be arrested.\" \n\nThe tape showed Bettina asking \"But we have video showing the man that was shot was throwing Molotov cocktails. How is that peaceful or unarmed?\"\n\n\"I don't believe the false reports that the unarmed protester was doing those things.\" said Harlow. \"Commander Troy acted irrationally and maliciously, and his actions far exceeded any danger that he or anyone else was in.\"\n\nBack to Bettina live: \"The only other comment by the Town & County Police is that they are demanding an expedited Board of Inquiry. Chief Sean Moynahan warned that any attempt to delay the Board of Inquiry or drag out the proceedings will be met with legal action and possibly other action.\"\n\nBettina: \"And the TCPD is not taking well to their Commander's suspension: at least 122 tickets were issued over the weekend, for everything from speeding to impaired driving to disorderly conduct and underage drinking at several Fraternity Houses. The crackdown was especially hard in the northern suburbs, the areas represented on the Town Council by Kelly Carnes.\"",
        "Bettina: \"Meanwhile, Dr. Sidney P. Wellman, President of the University, issued a statement strongly condemning the protesters and thanking Commander Troy for protecting those inside the Psychology Building. He also stated that Professor Laura Fredricson will continue to do her work, though with increased Campus Police and State Patrol protection.\n\n\"Other professors at the School, led by Women's Studies Professor Jan Camp, have demanded that Dr. Wellman put Professor Fredricson on leave, citing that Professor Fredricson's presence creates a danger to her fellow Faculty and students at School. President Wellman dismissed Dr. Camp's demands, and suggested that Dr. Camp needs to do more work in her own field of study and stop worrying about his job or Professor Fredricson's job. And now let's go to Nick Eastwood for Sports. Nick!\"\n\n\"Thank you, Bettina!\" said the handsome blonde Nick Eastwood. \"The University Athletic Department has announced that the Mascot 'change of the guard' ceremony will take place before the Bulldogs' first game against Taco State on Saturday, September 2d. Chief III will turn over the Mascot Collar to his son, who will become Chief IV, and Chief III will retire to a dog's life for his remaining years. As to the Bulldog players, they are eager to begin what they believe could be a special season, and have already circled October 28th at the Wildcats as an important date on the schedule!\"\n\n* * * * * * * * * * * * * * * *\n\nThere was no banter in MCD nor Vice. No one came in early. Detectives in MCD were expected to arrive before shift change at 8:00am, which in Commander Troy's opinion (which counted the most) meant by 7:45am. Most came in earlier to work out and join the coffee klatch, but this morning there was no activity until 7:40am.\n\n\"It's bad.\" Cindy said to Teresa as they drank coffee in Cindy's office at 8:30am. \"I've never seen the TCPD so demoralized, not even after Julie Newton betrayed us.\"\n\n\"It's bad at the Precincts, too.\" said Teresa. \"I talked to the Precinct Captains in the last half hour. It's almost completely silent. No one is talking. Irwin said it was the same all weekend. And 122 tickets? We're gonna hear about that from the Council.\"\n\n\"I just can't believe Sheriff Allgood did what he did.\" said Cindy. \"If Commander Troy is cleared by the Board of Inquiry, Daniel has made an enemy, and an enemy he truly does not want to have.\"\n\n\"Speaking of that,\" said Teresa, \"I've made one, too. I heard Captain Charles was furious that I put his son Sergeant Charles on suspension. The Union may grieve it, too.\"\n\n\"Naw, Chief Griswold told him what really happened, that Sergeant Charles wrongly listened to Harlow.\" Cindy said. \"The Union is also holding off on grieving it until Commander Troy's Board of Inquiry.\"\n\n\"Todd is keeping Carole and Jim along with his own kids at the BOW Enterprises day care center, so they're protected.\" said Teresa. \"Todd jacked up security there, as well. Anyone tries to crash the fence, and the Crown Chemicals incident will look like a picnic in comparison.\" Cindy gave a pursed smile and nodded briefly.\n\n\"Laura is making a point to go in to work this morning at the School.\" Cindy said. \"So that leaves the one remaining question: what is the Iron Crowbar up to?\"\n\n\"Up to no good, as usual, I suspect.\" Teresa said. \"As he himself would say: it is possible that suspending him was more of a mistake than the Enemy realizes...\"\n\n* * * * * * * * * * * * * * * *\n\nI was driving the Black Beauty into the City. Eddy the Bounty Hunter was with me. He had offered to help me on my mission to exonerate Peter Dwayne Gordon, and had told me he would help without pay, that this was not a matter of money. To say I was surprised was an understatement, but I did agree to buy him breakfast and lunch.\n\n\"Okay,\" I said as we drove through Nextdoor County, \"I found three Court cases involving Kendra Luskin, all of them civil trials with settlements. My FBI friends are quietly looking into them for me. They're all cases where she accused a man of either sexual harassment or rape. Then I found another case, where a man was put in prison for rape, and you get one guess who his accuser was.\"\n\n\"Luskin.\" said Eddy.\n\n\"Yep.\" I said. \"His name is Quint Danielson. Never been convicted of a crime beyond speeding before. Accused of date rape by Kendra Luskin, and convicted. Some anomalies in the trial, too.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Well, your appetite is unaffected by everything.\" said Lindy Linares as she and Martin Nash came up to our booth at the City Diner, near the Federal Building in the City.\n\n\"I totally concur with the philosophy of Senator Jimmy 'Coffin' Cerone, that nothing is solved by not eating.\" I said. As Lindy sat down next to me and Nash next to Eddy, they told the waitress that they'd eaten already, and I asked her to bring coffee for them and put it on my tab.\n\n\"Here's what we got on those cases.\" said Lindy. \"A couple were sealed, but can be subpoenaed by Peter Gordon's lawyer.\" She handed me a file folder full of information.\n\n\"Thanks.\" I said. \"I'll start reading it after we finish here. So, what's going on in FBI land?\"\n\n\"Jack is miserable.\" said Lindy. \"He's lost his best friend, that being you.\"\n\n\"Yeah, I miss that ol' double-cheeseburger-eating son-of-a-gun, too.\" I said.\n\n\"He's more worried about what might happen to us, his team.\" said Nash. \"The only reason we're still here is because we've all refused to be transferred. My uncle is trying to keep us together, but he's retiring by the end of September. Word is that Dana Fox and some others are just waiting to for him to walk out the door, and then they're going to rip us all apart... to the point we might not be FBI Agents any longer.\"\n\n\"Well, there's an open position for Police Commander in the TCPD.\" I said.\n\n\"Sheesh, sir,\" said Nash, \"there's no way anyone else could fill that position, not after all you've done.\"\n\n\"I appreciate the sentiment.\" I said. \"In the meantime, keep your ears open and your heads on swivels. It's going to get worse before it gets better...\"\n\n* * * * * * * * * * * * * * * *\n\nHis name was Don... well, Donny. Donny Tate. He was 26 years old, medium height, slender, somewhat nerdish, brown hair. And he looked totally defeated by Life. His eyes were empty; there was no passion nor purpose behind them.\n\n\"My dad is the head of City Global Insurance.\" said Tate. \"I was working there, in the Accounting Department, and studying for my CPA. And then one night at a big party for now-Senator Richard Nunn, this woman starts flirting with me. She was really hot... I mean smoking hot. I've never talked for five minutes with a woman like that, much less had one pay attention to me.\"\n\n\"What happened?\" I asked, to get the conversation moving along.\n\n\"Well, she took me by the hand and led me out of there. We found a room with a sofa on it, and she was all over me. She sucked me off... I didn't last a minute... then she had me playing with her boobs and her pussylips until I was hard again, then she sat down on my cock and fucked me. I didn't last another two minutes and came in her.\"\n\n\"After that, she told me to go back to the party, that she had to clean up first.\" said Tate. I went back and waited for her, but she never came back. The next thing I know, the Police are banging on my door the next morning, and they arrest me, accusing me of raping her!\"\n\n\"Did you go to trial?\" I asked.\n\n\"No.\" said Tate. \"The bitch went to my dad... said that she'd drop the charges, in exchange for a check, somewhere in the mid six figures. They drew up a contract, where she dropped all charges and we can't talk publicly about it. If we do, she can have the charges reinstated.\"\n\n\"That's null and void if you're subpoenaed to testify in Court.\" I said. I wasn't really sure that was true, but I needed this guy to testify. He agreed to, if he had to.\n\n\"What happened after that?\" I asked.\n\n\"Well, I had to leave my dad's company.\" said Tate. \"Too many people knew something was up. And my shot to be a CPA was gone. Right now I'm doing some work for a temp accounting agency, and I do taxes in the Spring.\"\n\nI had a thought. \"Tate, after all this is over... how good are you at forensic accounting?...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Governor, will you also suspend Donald Troy from the SBI?\" shouted John Hardwood at the Governor as the politician tried to enter a Midtown building to give a speech. A gaggle of reporters shouted questions along those same lines.\n\n\"Okay, I'll make this one statement, then say no more.\" said the Governor. \"Inspector Troy is not on active SBI duty, but is part-time under the rules of the Reserve program. He is not suspended, and I'm not sure how someone not on active duty can be suspended. In general, we expect he will not come onto active SBI duty until his local issues are cleared up. That is all I have to say.\"\n\n\"So you're not suspending him?\" shouted Hardwood. \"You have no problem with Troy murdering a man?\"\n\n\"I never said any such thing, Hardwood.\" said the Governor. \"And if you say that on television, you'll be sued for libel.\"\n\n\"Is that a threat, Governor?\" Hardwood shouted. \"Are you threatening the Press now? Are you the Gestapo like Troy?\" The Governor was quickly whisked inside the building. Other reporters congratulated a grinning Hardwood.\n\n\"You reamed the son of a bitch!\" someone said to him.\n\n\"I sure did.\" said Hardwood, very happy with himself. \"And that's just the tip of the iceberg of what we're going to do to that God-damned Republican, and to his 'boy' Troy...\"\n\n* * * * * * * * * * * * * * * *\n\nDarren Stevens was next on our list. He was tall and lanky, dark brown hair, and had a naturally cynical voice.\n\n\"I worked at an advertising firm, McElwain & Tate.\" said Stevens. \"I had the portfolios of the company's biggest clients. I also was doing some work for Zack Millner, the Democrat running against Samuel Russell for U.S. Senate. About 18 months ago, we had a Christmas party. A woman began talking to me... flirting, really... and wanted me to go with her into another room. She half dragged me down the hallway before I could stop her and get back to the party room.\"\n\nI had an insight. \"You didn't want to go with her,\" I said, \"because you don't play on her team, so to speak.\"\n\n\"Yes, Mr. Troy, that is correct.\" said Stevens. \"I am gay. I had no interest, sexual or otherwise, in Ms. Luskin. Anyway, I didn't think anything of it until a couple of days later, when I was called into Mr. McElwain's office. He said Ms. Luskin had filed a lawsuit against me and the company for sexual harassment. Seems she had 'witnesses' that said I'd taken her down the hall, not the other way around.\"\n\n\"To make a long story short,\" said Stevens, \"I told the company to fight, to countersue, as I did. And I told them why her charges were fraud and blackmail. Well, they settled with her, though for far less than she wanted... and they fired me. Officially, for sexual harassment. But I know the real reason they fired me was because of my sexual orientation, and that was their perfect excuse to get rid of me in a way that I couldn't fight them over.\"\n\n\"How did your own countersuit go?\" I asked.\n\n\"Poorly.\" said Stevens. \"It's almost as if that Court was rigged. When Luskin settled the suit with the company, she dropped her suit against me. I wanted to continue my suit against her, but it was dropped as being countersuit. My attempts to re-file as a free standing lawsuit were dismissed with prejudice, and I lost the appeal.\"\n\n\"So what happened to you?\" I asked.\n\n\"I've been unable to find good work in my own profession.\" said Stevens. \"But I'm good behind a camera... filming... well, films.\"\n\n\"Gay porn.\" I said.\n\n\"Not much gets by you, Mr. Troy.\" said Stevens.\n\n\"When all this is over,\" I said, \"I might be able to find some work for you and your talents, in both advertising and filming...\"\n\n* * * * * * * * * * * * * * * *\n\nTwo other stories were similar to Donny Tate's. That afternoon, Eddy and I went to Jacksonville State Prison with SBI-SIS Lieutenant Norm Chow. Quint Danielson was brought into the interrogation room, and his handcuffed hands were locked to the table.\n\n\"You don't have to lock him to the table.\" I said to the guard.\n\n\"Regulations, sir.\" said the guard. \"He's a violent offender.\" The guard left us alone with Quint.\n\n\"Well, I tried.\" I said. \"Quint, we're here to get your story about Kendra Luskin.\"\n\n\"Yeah.\" said Quint. He was an athletic man, with a bald head and a relatively big mustache. His eyes were blue and somewhat introspective; I could see he was not a dumb brute.\n\n\"I saw on TV that that Luskin bitch was at it again.\" said Quint. \"Is there any way I can help?\"\n\n\"Tell us your story.\" said Chow.\n\nQuint told the story which was almost exactly the same as Peter Gordon's... Luskin had accused Quint of raping her in his car after taking her out to dinner. Quint said it was consentual, and that Luskin had initiated sex, and was all over him, and witnesses at the party where they'd met, and the restaurant where they'd had dinner had testified she was all over him. But he'd been convicted, anyway... by a second jury after the first one could not reach a verdict. The jury selection of the second trial had some strangenesses about it.\n\n\"What work were you doing when you were arrested?\" I asked Quint.\n\n\"I was a Life Coach.\" said Danielson. \"I was a speaker, and ran motivational sessions at a lot of those football camps. You know, telling them to 'embrace the suck' like the Navy SEALs teach, stuff like that. And I worked with athletes individually. I have a degree in Psychology, not to the level of your wife, Commander Troy, but I did good work with athletes and sports competitors.\"\n\n\"So... why would Luskin target you?\" I asked, confused. \"Who would want to fuck you over, as the others were?\"\n\n\"I don't know.\" said Quint.\n\n\"Did you ever find out something, some secret?\" I asked. \"Did you witness something you weren't supposed to?\"\n\n\"Not that I know of.\" said Quint, his eyes avoiding mine as I peered at him. He then said \"I just have one question: if you can get Peter Gordon acquitted, do you think you can get me a new trial?\"\n\n\"I'll do what I can.\" I replied.\n\n* * * * * * * * * * * * * * * *\n\nI was very introspective as we drove from Jacksonville to Midtown. Finally, I spoke.\n\n\"Norm,\" I said, \"what do we know about Quint Danielson?\" I knew he'd been looking up Quint's information on his iPad as we were driving. The Black Beauty was a personal hotspot, by the way.\n\n\"Nothing out of the ordinary.\" said Chow. \"He was a coach and a motivational speaker. Pro teams paid him a good bit to work with their players, especially baseball pitchers and batters that were in slumps. He had no convictions of anything more than a couple of speeding tickets here and there. He had a good reputation until the rape conviction.\"\n\n\"It does not make sense.\" I said under my breath.\n\n\"What's that, sir?\" asked Chow.\n\n\"I understand why the others were targeted by Luskin.\" I said. \"I don't understand why Quint was targeted. We need to dig harder into him and his past.\"\n\n\"Yes sir.\" said Chow. \"By the way, I have the Police report of the case, including Luskin's original complaint, and the transcript from the trial, as you asked.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is awesome!\" said Mike G. Todd as Eddy and I presented our evidence to him. \"If this can't get Peter acquitted, then there is no System of Justice in this country.\"\n\n\"Or this world.\" I said. \"Take special note, too: Luskin's first report to the Police in the Quint Danielson case, and her testimony in the trial is verbatim what she reported to the TCPD at the Hospital and in her statement the next day at the Station.\"\n\n\"Wow.\" said Mike. Then he frowned. \"Where are these witnesses now?\" he asked.\n\n\"In a very safe place.\" I said. \"Under my protection.\" I did not mention, nor did I need to, that 'The Vision' compound in Coltrane County was most very secure.\n\nPart 19 - Patience Exhausted\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded reporterette at 7:00am, Tuesday, August 22d. \"The Police Captain's Union has filed a formal complaint with the Court that the Board of Inquiry is dragging its feet in investigating Commander Donald Troy's shooting of a protester last week!\"\n\nBettina: \"The Captain's Union is complaining that the Board of Inquiry has not even formally convened nor taken any testimony in the case. Inspector General Horace S. Wellman filed a brief that his Office has not been contacted at all by the Board of Inquiry, and that the delay is extremely unusual.\"\n\nBettina: \"Furthermore, the Police Union, which represents Police Officers below the rank of Captain, has stated that Police Officers are inquiring about going on strike if Commander Troy's case is not resolved more quickly. Fox Two News has learned that the morale of the TCPD is very depleted, and the vast majority of Police Officers are firmly behind Commander Troy and his actions, and are demanding his immediate return to duty.\"\n\n* * * * * * * * * * * * * * * *\n\nI was wearing my semi-formal jacket with ribbons as part of my uniform for the Board of Inquiry hearing. It had not been scheduled for today, but the pressure put on the Board (and the Sheriff) by the Unions had had the desired effect: a fire had been lit under the asses of the County Government.\n\nThe Lead Commissioner of the Board of Inquiry was an older black man, who often led these such Boards. One of the other Commissioners was Mr. Fitzgerald, who was normally friendly to the Police. But the last Commissioner was a man named Finneran, who looked like a sloppier version of Dick Ferrell with his droopy brown mustache. He was a friend of Thomas P. Cook, and therefore a virulent enemy of Your Iron Crowbar.\n\nBefore I took the stand, there were several other witnesses. One was Captain Teresa Croyle, who told her story, emphasizing the lack of response by certain Officers to my calls for help. Sergeant Charles took the stand, and admitted that he'd made a bad decision to listen to Commander Harlow instead of Captain Croyle, which had resulted in a delay in Officers getting to the scene. Lt. Irwin and Sr. Sergeant Hewitt testified to what they knew.\n\nCommander Harlow then testified, and stated that she believed Charles acted correctly, that Irwin and Hewitt and Croyle had disobeyed the orders of a Superior Officer, that being her, Commander Harlow. When asked by Fitzgerald why she ordered a stand-down when Commander Troy and his family were in existential danger, Harlow vigorously stated that the protesters were peaceful, and that Commander Troy and his family were not in danger of their lives.\n\nThen Cindy was put on the stand. She detailed how our attempt to evacuate Laura and the children was cut off by the very sudden appearance of a large number of protesters. \"It was as if they were waiting for us to arrive, then they came out of nowhere and surrounded us completely. It was an ambush.\" she said. She also detailed her actions inside, including beginning the investigation process by securing my gun and the shells.\n\nIt was a full but hushed room when I took the stand. I detailed everything that happened, including the plan to evacuate my family and the sudden appearance of the protesters, which dovetailed with Cindy's testimony. I then described everything I'd seen at the window. \"They were bracketing the window.\" I said. \"Their first throws were off target, but getting closer. If another had been thrown, it would've broken through a window and set the building on fire.\"\n\nI was peppered with questions from Finneran. \"Commander, you're renowned for solving cases by anticipating the criminals' actions. Why didn't you anticipate this and have a beanbag shotgun or tear gas to combat the protesters?\"",
        "\"Commissioner,\" I said, \"if I could've foreseen that, then I would've been able to foresee the whole thing... and not have allowed my family to go into that building in the first place. Obviously I could not reasonably anticipate the ambush and being suddenly surrounded.\"\n\nAt the end, Finneran played what he thought would be his trump card: \"Commander Troy, you murdered a human being. Do you feel any remorse for killing that young man?\"\n\n\"I don't accept the premise of your question.\" I replied. \"I did not murder him; I responded to his threat of throwing a Molotov cocktail at me, and I shot him in self-defense. Again, that's not murder.\"\n\n\"I'll ask the pertinent part again.\" said Finneran. \"Do you feel any remorse at all for killing another human being?\"\n\n\"To save my family?\" I shot back. \"Of course not.\"\n\n\"Look dammit, it's a yes-or-no question!\" exclaimed an exasperated Finneran. \"Do you feel any remorse over killing that man?\"\n\n\"For the sake of my family,\" I replied again, \"no. Not at all.\"\n\nI could sense the reaction in the room; some for me, some against.\n\n* * * * * * * * * * * * * * * *\n\nTeresa and Cindy were theoretically not to have contact with me while I was suspended. When Sheriff Allgood told them that, Cindy had all but gotten in his face and said \"If you think I won't talk to my blood kin whenever I damn well please, you got another think coming, Sheriff! Oh, and if you want to fire or suspend me without pay for insubordination, have at it. Won't be long before you don't have a Police Force to suspend, anymore.\"\n\n\"Heh heh heh heh.\" barked Chief Moynahan. \"She's right, you know.\" The Sheriff just left the building.\n\nSo, Teresa and Cindy, as well as Todd, came to visit me at The Cabin, ostensibly bringing Carole and Jim home. \n\n\"I think it was a good day before the Board of Inquiry.\" Teresa said. \"We got everything out in the open. We proved the perp was throwing a Molotov cocktail, and the protesters were anything but peaceful.\"\n\n\"You guys did very well.\" I said. \"There are two issues that will come out of this: chain-of-command, and if I'm indemnified.\"\n\n\"The Chief thinks you hurt yourself by saying you had no remorse for killing that punk.\" Cindy said.\n\n\"But you did great challenging that Commissioner's assertion that you murdered him.\" replied Teresa. \"That had to be done. It was dirty pool on his part to try to paste that on you.\"\n\n\"Part of their plan.\" I said. \"Now we'll have to see how long they can delay making a decision.\"\n\n* * * * * * * * * * * * * * * *\n\nThursday, August 24th. The heat in the County was rising with the summer temperatures. The University Greek Community (fraternities and sororities) was in the middle of their Rush Week, but several TCPD crackdowns and arrests for underage drinking had dampened the enthusiasm. \n\nAdditionally, there were sporadic outbursts of protests by women's groups, but there had been no serious issues. But that was about to change.\n\nAt 9:45am, the TCPD received a call for help from the Campus Police. Student groups were massing in what was known as the 'VIP Parking Lot', which was a relatively small parking lot south of the much larger parking lot that was on the southside of the football stadium. The smaller parking lot was in something of a depression, or 'bowl', in the terrain, and it was surrounded by the Campus grass, walkways, big oak trees, and some buildings.\n\nAt 9:55am, the TCPD's SpecOps teams were on the west side of the Stadium, near the driveway that led into that small parking lot. To their surprise, Deputy Chief Della Harlow appeared with a couple of Sheriff's Deputies.\n\n\"Hewitt!\" Harlow ordered. \"You are to go down that road and secure that parking lot! Get moving!\"\n\n\"That order... is countermanded!\" yelled a voice behind her. It was Captain Teresa Croyle, wearing full armor...\n\n... and carrying a red crowbar. \n\nAnd not just any crowbar... it was the red crowbar. Everyone knew what that meant, and tremendous energy surged into the Police upon sight of it.\n\n\"I am the Acting Commander here, Croyle!\" shouted Harlow. \"Hewitt, obey my orders, or you will be brought up on criminal charges.\"\n\n\"Bullshit!\" said Teresa, not all that loudly, but with plenty of 'Teresa Cunt' menace in her voice. \"If these Officers go down in there, they'll be ambushed. No way in hell I'm allowing their lives to be endangered like that. Your orders are illegal and harmful to the well-being of my Officers! And they will not be followed!\"\n\nTeresa was not finished: \"In addition, Hewitt, your chain-of-command is through me to the Chief, not through this idiot bitch that doesn't know her fat ass from a hole in the ground!'\n\n\"Croyle, you're suspended!\" shouted Harlow. \"Deputies, arrest her.\" The Deputies were about to move, but found that they would be facing off against the newly re-energized SpecOps Officers of the TCPD... and one Police Boxing Matches Champion with a red crowbar in her hands and an attitude to match. Guess who was going to win that one...\n\n\"Hewitt!\" said Teresa, \"deploy in a wide ring around that parking lot. Push the protesters into it, and take them down. Make as many arrests as you can. Do to them what Harlow wanted them to do to you. Deputies! Escort Commander Harlow out of here, before she is 'accidentally' shot by a stray bullet.\" Officers moved with a purpose to implement her instructions. The Deputies got Harlow out of there.\n\nFor a long time, since the night I had first brought a blue crowbar down upon the back of Sergei Molotov, I had cultivated the 'mystique', the legend of the Crowbar, a legend and power that had grown beyond just one or two people. That work had paid off today in the exercise of that power without my presence, as the TCPD had avoided being the demoralized victims of an ambush, and instead became the energized ambushers...\n\n* * * * * * * * * * * * * * * *\n\n\"Thirty six arrests.\" said the Chief. \"Good work, Captain. That red crowbar suits you.\" They were in his office, discussing the Police action that had netted 36 protesters. \n\nThere had been many men in this group, and they as well as the women had been extremely hostile and violent, trying to physically harm Officers with everything short of guns. They'd slung bicycle locks on chains, thrown rocks and bricks and metal objects, and a few had had Molotov Cocktails, though none were used. Fortunately, no one was seriously hurt, though Officers had violently thrown protesters to the ground in effecting arrests, causing some protesters to whine and demand 'safe spaces' as well as lawyers.\n\n\"No sir,\" said Teresa, \"it does not suit me. It suits Commander Troy. He asked me to carry it to make a point to some people. But we need him back, sir. And the sooner the better.\"\n\n\"I know.\" said Moynahan. \"The I.G. and the Sheriff called me. Harlow filed a formal complaint of insubordination on your part. She wants you suspended. The Sheriff and I.G. says they will investigate internally first. That's their way of stalling.\"\n\n\"So they got rid of Commander Troy, and now they're gunning for me.\" said Teresa. \"And they're doing all they can to get our people hurt, too, Chief.\"\n\n\"Yes, I know\" said Moynahan. \"And I've had my fill of it. Captain, you're still on duty as of now. Act exactly as you would under any other circumstances. Your direct chain of command remains Commander Troy and then me, and I just told you to disregard any orders Harlow gives you. Dismissed.\" Teresa got out.\n\nThe Chief picked up his phone. \"Briscoe!\" he all but shouted into it. \"Tell the Press there will be a press conference at 11:00am.\"\n\n* * * * * * * * * * * * * * * *\n\nThe Press Room was full, and it was buzzing at 11:00am when Chief Moynahan entered the room. He stepped up onto the raised platform area and stepped up to the dias.\n\n\"Ladies and gentlemen, thank you for coming.\" said the Chief. \"I am here to make two announcements. First, I commend Captain Teresa Croyle and her Officers for handling an ugly protest by violent thugs today. The charges against those arrested will include assaulting Police officers and other crimes of violence against other persons. Captain Croyle also acted to prevent our Officers from following unlawful orders that might have gotten our Officers harrrrrmed.\"\n\n\"Next,\" said the Chief, \"I will not tolerate the delay by the Board of Inquiry into the investigation of Commander Donald Troy any longer. Hell, the Board of Inquiry to award his dog a citation did not last this long, and it is clear they are stalling now. I am done with it. If the Board does not deliver its decision by noon tomorrow, I will unilaterally and fully reinstate Commander Troy to his duties as Police Commander at that time. Before you ask: yes, I have the legal authority to do that, and I am exercising it. I will take no questions. That is all.\" And despite the furious volley of questions hurled at him by the rabid, out-of-control Press, he left the room without saying another word.\n\nThe Police Captain's Union issued a statement ten minutes later in strong support of Chief Moynahan and Commander Troy. Asked for a response, the Sheriff's Office only stated 'no comment'...\n\n* * * * * * * * * * * * * * * *\n\nFriday, August 25th. At 10:00am, the Board of Inquiry convened to deliver its findings concerning the Commander Troy incident, and it was carried live by KXTC and KSTD. The lead Commissioner read the statement:\n\n\"We usually just give our results without much further comment,\" said the lead Commissioner, \"but in this case we have to note that this is a 2-1 decision with a very strong dissent, which is included in or published report. Also, this Board does not appreciate being pressured by threats from the Police Chief to circumvent our well-established process of investigation and deliberation of the evidence of that investigation.\n\n\"Having said that: in the overall, while we find that Commander Troy's action bordered upon excessive use of force, the overall finding is that he did not have any other choice, that the lives of other persons were in existential danger, that University property was in existential danger, and we therefore find that Commander Troy's actions were proper and that this was a 'good shoot'.\"\n\nA huge cheer erupted in MCD at the words, which was matched by similar cheers at The Old Mill and at County Jail. Cindy and Teresa both bowed their heads in relief, then looked at each other, their faces inscrutable to each other.\n\nBettina came on camera on KXTC: \"As you just heard, Commander Donald Troy has been exonerated in the shooting death of a protester on the University Campus. The Board of Inquiry has found that his actions were proper, and their written report goes further in saying that Commander Troy had no reasonable alternative to the actions he took. The report also excoriates the TCPD for their very slow response to the situation, even after Commander Troy called multiple times for assistance.\"\n\n\"In the dissent, one Commissioner stated that he thought Commander Troy's excessive use of force bordered on 'a crime', and that he should've considered reasonable alternative to taking such violent and forceful actions. He further stated that the danger posed by the 'peaceful' protesters was badly overstated, and that the Police should have stood down...\"\n\n* * * * * * * * * * * * * * * *\n\n*BLAM!* *BLAM!* *BLAM!* *BLAM!*\n\nThe echo of the shots had barely faded away as I cleared my weapon and set it down on the bench. The targets were flying towards me on the pulley-and-wire driven holders. Even from a distance, it was clear I'd passed both left- and right-handed.\n\n\"Welcome back, Commander.\" said the Chief as the Armorer certified my re-qualification.\n\n\"Thank you, Chief.\" I said. \"And thanks for taking up for me and lighting a fire under the Board's collective ass.\"\n\n\"Heh heh heh heh.\" barked the Chief. \"If there's one thing I learned in the Cavalry, it was how to light fires under some asses.\" The Armorer barked a laugh at that one.\n\nWe went back upstairs and down the hall. As I got to the door of MCD, I felt my arm being grabbed and I was pulled into the large room, which erupted into cheers.\n\n\"For he's a jolly good fellow, for he's a jolly good fellow; for he's a jolly good fellllllowwwwww, which nobody can deny!\" a lot of Police Officers sang, and sang very poorly, I might add. Still, it was nice to be welcomed back.\n\nHow they'd gotten a red devil cake with white cream cheese frosting so quickly, I am not sure, but they had one. And as pieces were being served, Cindy rang a glass with a spoon... but Teresa did the talking.\n\n\"Okay, everyone,\" Teresa said, \"if anyone wanted to know what it's like without Commander Troy here, we just spent one week of pure hell finding out.\" Acclaim and laughter rang out. \"And the best news is that I get to return this to its rightful owner.\" \n\nWith that, she offered me the red crowbar as if it were a katana. I respectfully took it into my hands.\n\n\"It's good to be back.\" I said, tapping the crowbar in my hand. \"Nothing like a week of forced vacation to find out how good you are without me. And I'm happy to say that you all did very well in my absence, and I'm very proud of you all. Captain Croyle, please relay those sentiments to all of the Officers of the Police Force.\" There was polite applause. \n\nThen I said \"Okay, that cake looks good. Where is my slice?...\"\n\nPart 20 - The Trial\n\nTuesday, September 5th. What the Press was calling the trial of the century, Town & County v. Peter Dwayne Gordon began at 9:00am in the Old Courthouse, which was by far the largest Courtroom in the complex. The chamber was as full as it could get with reporters and other spectators, some wearing red shirts with a logo of a pennant flag.\n\nOver 90 persons were pooled for Jury selection, and it looked for a while like it might not be enough. As Peter Gordon sat at the Defense table in his suit, looking part scared, part stupefied, and part curious, his attorney Mike G. Todd was working hard to get female jurors dismissed for cause, so that he would not have to use his strikes more than he wanted. Likewise, Jenna Stiles was doing the same for males, particularly white males.\n\nJudge Patrick R. Folsom began to make it clear that he was in charge of his Courtroom and this trial. He made the lawyers work until 8:00pm, by which time a Jury of 12 citizens and six alternates had been seated. They were sequestered at the University Hotel.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded reporterette from in front of the Courthouse at 7:00am, Wednesday, September 6th. \"The Jury for the trial of Peter Dwayne Gordon has been selected, and opening arguments will get underway at 9:00am. Legal experts believe that the trial won't last more than a few days, as the Prosecution's case appears to be very strong.\"\n\nBettina went on: \"Fox Two News has learned that the Prosecution has attempted to get several affidavits thrown out, and the Officers making those affidavits prevented from testifying to the condition of victim Kendra Luskin's dress. There is confusion as to whether or not her dress was torn during the alleged sexual assault.\"\n\nMore Bettina: \"And in State news, Fox Two News has learned that a hearing before the State Supreme Court was postponed by Lt. Governor Graham Collins. The Lt. Governor's Office has not commented on the nature of the hearing, but sources tell Fox Two News that the hearing was to clear the way to convene the Legislature to impeach Governor Val Jared. No reason was given for the postponement.\"\n\n* * * * * * * * * * * * * * * *\n\n\"They postponed the Supreme Court hearing,\" growled Chief Griswold, \"because the Iron Crowbar was reinstated earlier than they expected.\" The old Chief had brought doughnuts to MCD, and was partaking of a few of them himself. \n\n\"I don't doubt you're correct on that, Chief.\" I said. I was wearing my semi-formal jacket with ribbons, and the Medal of Valor with Oak Leaf Cluster around my neck. Cindy was similarly attired, and her Medal of Valor was around her neck. We were going to be called to the stand either today or tomorrow.\n\n\"Wowwww...\" said Jermaine Davis, catching on. \"Sir, this whole thing to get you on suspension, was just to get you out of the way so they could go after the Governor?\"\n\n\"Very astute of you, Mr. Davis.\" I said. \"That is Iron Crowbar thinking, there. Here, hold this.\" I handed him the red crowbar. \"Take care of it today. I can't have it with me while I'm in the Courtroom. The temptation to use it might be too much for me.\" Everyone laughed, partly politely at my joke, and partly at Jerome's google-eyed look of shock at getting to keep the crowbar for the day.\n\nSome time later, as Cindy and I were about to leave for the Courthouse, I saw Della Harlow coming down the hall; she was also subpoenaed to be a witness in Court. I could not resist:\n\n\"Captain Croyle!\" I said very loudly, \"you are 'Acting Commander' and in charge until I get back!\"\n\n\"Yes sir!\" replied Teresa, having seen Della and knowing what I was doing. Sergeant Rudistan did not succeed in suppressing laughter, especially at Harlow's look of fury.\n\n* * * * * * * * * * * * * * * *\n\n\"Please state your name and occupation.\" said Jenna Stiles after I was sworn in.\n\n\"James Donald Troy. Police Commander.\" I replied.\n\nJenna had few questions for me. She had not even wanted to call me to the stand, but D.A. Krasney had told her the optics would be bad if the Defense called me and the Prosecution didn't. Then she stated the words that Mike G. Todd could barely wait to hear: \"Your witness.\"\n\n\"Your Honor,\" started Mike, \"I'd like to read Commander Troy's outstanding Police record to the Jury.\"\n\n\"Objection!\" shouted Jenna. \"His name and occupation is sufficient!\"\n\n\"Your Honor,\" said Mike, \"this is to establish the Commander as an expert witness, and also to show his level of unimpeachable integrity.\" Jenna rolled her eyes at that one.\n\n\"I've always taken the Prosecution's side when they establish the Commander's bona fides this way.\" said Judge Folsom. \"It's only fair that the Defense be allowed to in this case. Objection overruled. You may proceed, Counselor.\"\n\n\"Thank you, Your Honor.\" said Mike. He read my record to the Jury, ending with \"... the Distinguished Service Medal, two Purple Orders for being wounded in the line of duty, and the only Public Servant in Town or County history to be awarded two Medals of Valor...\"\n\n* * * * * * * * * * * * * * * *\n\n\"So, Commander,\" said Mike G. Todd as he worked through the case with me, \"you observed at the Hospital that Ms. Luskin's dress was not torn?\" The dress had been admitted into evidence earlier in the day, along with other forensic evidence.\n\n\"That is correct.\" I said.\n\n\"Your Honor,\" said Todd, \"I'd like to enter these affidavits into the record, showing that several other Officers also observed the dress as not being torn.\"\n\n\"Objection!\" shouted Stiles.\n\n\"Overruled!\" growled Folsom. \"I've already ruled that these affidavits may be entered into the record.\"\n\n\"Commander Troy,\" said Mike G. Todd, \"in investigating crimes, not only rape crimes, but really almost any crime, do you investigate the victim and the victim's family?\"\n\n\"We make routine checks of their basic data.\" I said.\n\n\"What information do you check?\" asked Todd.\n\n\"Objection as to form!\" said Jenna.\n\n\"Sustained.\" said Folsom. \"Restate the question more specifically, Mr. Todd.\"\n\n\"Yes, Your Honor.\" said Mike. \"Commander, in nearly all cases, do you gather Police records of the victim as well as the suspect?\"\n\n\"Yes.\" I said, knowing Mike couldn't 'lead the witness', but had to spoon-feed this to the Jury.\n\n\"And you check on who reported the crime as well, do you not?\"",
        "\"That is correct.\" I replied.\n\n\"And you gather their Police records, as well?\" said Mike.\n\n\"Objection!\" said Jenna. \"Defense counsel is wasting our time with tangential issues.\"\n\n\"Overruled.\" said Folsom. \"But Counselor, do get to your point in a timely manner.\"\n\n\"I am, Your Honor.\" said Mike. \"Commander, did you find any Police record of Kendra Luskin?\"\n\n\"One charge of prostitution.\" I said. Todd went to his table and picked up a document in a bound folder.\n\n\"Your Honor, I'd like to enter this into evidence...\"\n\n\"So entered.\" said the Judge.\n\n\"Did you find any other Police reports involving Ms. Luskin?\" asked Mike Todd.\n\n\"Yes.\" I said. \"Several where she was the complainant in sexual harassment or rape cases.\"\n\nA murmur went through the packed Courthouse. Mike G. Todd went to his desk. \"Your Honor, I'd like to enter these reports into evidence---\"\n\n\"Objection!\" shouted Jenna. \"Relevance! And the Defense did not properly notify the Prosecution of this information.\"\n\nThe judge called a ten minute recess for the Jury. He looked over the information, and I saw his eyes widen as he read it. Mike G. Todd then showed he'd sent the information in a proper and timely manner to the Prosecution on the last day of the Discovery phase.\n\n\"I'll allow it...\" said the Judge.\n\n* * * * * * * * * * * * * * * *\n\nThe Prosecution had worked to arrange things so that Kendra Luskin was the last witness of the day. That way, the sequestered Jury would have her testimony to consider overnight. Sometimes... things don't work out the way they're intended.\n\nJenna led Kendra through her story, and Kendra's words were exactly like what she'd said in her initial report and her later statement to the Police. A bit too exactly like her previous statements. Jenna also had the DNA evidence from the collected semen samples on Kendra's dress and panties entered; it was stipulated that it was Peter's DNA. A stipulation in Court is a something, usually a piece of factual evidence, that both Prosecution and Defense agree upon.\n\nOnce she was finished, Jenna turned smugly to the other table and said \"Your witness.\"\n\n\"Ms. Luskin,\" said Mike G. Todd, going to the evidence table and picking up a bound document, \"this is City Police case #2E26022, filed two years ago.\" Todd named the date. \"Did you file this report?\"\n\n\"I don't know.\" said Kendra Luskin in her husky voice.\n\n\"Please look at it to refresh your memory.\" said Mike. Kendra looked at the document, and from my seat behind the Defense table I could see her eyes fall just a bit.\n\n\"Did you file that report, Ms. Luskin?\" asked Mike.\n\n\"Yes.\" said Kendra.\n\n\"Would you please read this paragraph?\" asked Mike, pointing to a highlighted paragraph.\n\n\"Objection!\" shouted Jenna Stiles.\n\n\"Overruled!\" said Judge Folsom. \"Ms. Luskin, read it as he asked you to.\"\n\nKendra began reading. The words sounded very familiar... indeed, they might as well have been her complaint to the TCPD about Peter Gordon.\"\n\nMike repeated the process with two other files from two other cases. \"Ms. Luskin,\" he asked, \"why are these reports, that were filed months apart, so similar in even their exact words?\"\n\n\"Objection!\" yelled an angry Jenna Stiles.\n\n\"I withdraw the question, Your Honor.\" said Mike G. Todd, his devastating point already well made. \"No more questions, Your Honor.\"\n\n\"We'll adjourn until 9:00am tomorrow morning.\" said Folsom. He banged his gavel, the Prosecution, Defense, and the Accused stood as the Jury left the room, then he ended the day's session.\n\n* * * * * * * * * * * * * * * *\n\n\"That was fantastic.\" said Teresa as we ate pizzas at the Mountain Nest for supper. \"Mike lit a torch under that woman's a---\" She stopped short, seeing that Carole and Jim were at the table. Todd grinned, which made Carole grin, though she didn't know why. \n\n\"er... fourth point of contact.\" Teresa finished, using a little Airborne lingo, there. I grinned, as did little Jim, though he likely didn't know why.\n\n\"Yes, it was good.\" I said. \"The Prosecution will rest tomorrow by noon, unless they have a surprise witness they didn't inform the Defense about. And then Mike is going to hit them with Round Two.\"\n\n* * * * * * * * * * * * * * * *\n\nThey were in the D.A.'s Conference Room in City Hall, where they usually met. Krasney, Jenna, Paulina Patterson, Franklin Washington, and Savannah Fineman were at the table, eating pizzas.\n\n\"What's next?\" asked Krasney.\n\n\"In addition to the documents they didn't tell us about until literally the last hour,\" said Jenna, bitterness in her voice, \"they're going to bring up witnesses... the people Luskin filed those previous complaints against.\"\n\n\"We've got to stop that from happening.\" said Fineman.\n\n\"How?\" snarled Jenna.\n\n\"We'll ask for a continuance.\" said Krasney. \"We'll object to the admission of the witnesses as well as the documents, citing relevance, and we'll ask for a continuance while we appeal the ruling.\"\n\n\"Folsom won't go for that.\" said Franklin Washington.\n\n\"Then we'll ask for him to recuse himself.\" said Krasney.\n\n\"And then we'll get Watts... who might just give the Defense a directed verdict of acquittal.\" said Jenna. \"Paulina, you got any ideas?\"\n\n\"Just one.\" said Paulina. \"The only thing you can do is try to impeach these witnesses on the stand. Say they're disgruntled, bitter about being called out for their sexual harassment or rape charges...\"\n\nPart 21 - Beating of a Butterfly's Wings\n\n\"The Prosecution... rests.\" said Jenna Stiles at 10:30am Friday morning, September 8th.\n\n\"Defense counsel?\" asked Judge Folsom.\n\n\"Your Honor, the Defense calls Donny Tate to the stand.\" said Mike G. Todd.\n\nDonny Tate and the other Defense witnesses had been brought in by helicopter from 'The Vision' to the Courthouse. It is possible that Your Iron Crowbar was the pilot of that helicopter. Tate and the others were taken inside under very heavy TCPD guard. Now Tate was walking up the aisle to take the stand. Deuteronomy 32:35, I thought to myself.\n\nMike led Tate through his story, that Kendra had initiated sexual contact with him, then charged him with a sex crime. Todd again had the Police report read out loud. Then he turned it over to the Prosecution for the cross examination.\n\n\"Mr. Tate,\" said Jenna Stiles, \"if you're innocent, why did you settle?\"\n\n\"I didn't settle.\" said Tate, which explained Mike Todd's lack of objection to the question. \"The company settled. I've maintained my innocence throughout.\"\n\n\"Mr. Tate,\" Jenna all but shouted, \"isn't it true that you're testifying only because you're disgruntled that Ms. Luskin filed charges against you for raping her?\"\n\n\"Objection!\" shouted Mike G. Todd. \"Leading the witness!\"\n\n\"Your Honor, permission to treat this witness as hostile.\" replied Jenna, which if granted would allow her to lead the witness.\n\n\"No.\" said Judge Folsom. \"That hasn't been established at all. Conform to the guidelines, Ms. Stiles. The objection is sustained.\"\n\n\"I withdraw the question, Your Honor.\" said Jenna. \"No more questions.\"\n\nDarren Stevens also testified. Mike led him through the story, including the part about the company using the charges as an excuse to fire him for his homosexuality. Neither Jenna nor D.A. Krasney, who was sitting next to her, knew what to do... trying to impeach his testimony as being from a disgruntled rapist was not going to work with Stevens.\n\n* * * * * * * * * * * * * * * *\n\nThe Defense rested. Jenna took her last shot; she called Deputy Chief Della Harlow to the stand.\n\n\"And throughout the investigation, Commander Troy was investigating the victim exclusively, is that not right?\" Jenna asked Della.\n\n\"Objection, calls for speculation!\" Mike G. Todd quickly called out.\n\n\"Your Honor,\" said Jenna, \"I'm establishing the state of mind of the Police Commander that he has been biased against the woman----\"\n\n\"Objection!\" shouted Mike.\n\n\"Sustained!\" snarled the Judge. \"Approach the Bench. Bailiff, escort the Jury out for a ten minute break.\"\n\nAt the bench, Folsom lit into Stiles. \"Ms. Stiles, I am not going to let you lay grounds for a mistrial, here. You try a stunt like that again, and I'll make a direct verdict of acquittal as well as have you in jail for Contempt of Court.\"\n\n\"Your Honor,\" said Jenna, \"I'm trying to establish Commander Troy's biased state of mind---\"\n\n\"Not this way, you won't.\" said Folsom. \"The objection on speculation is sustained.\"\n\n\"Your Honor,\" Jenna replied, \"I ask for a continuance to appeal this before the trial continues, as well as an appeal of the submission of those other rapists' testimony----\"\n\n\"That's defamation, Your Honor.\" said Mike G. Todd.\n\n\"I agree.\" said Folsom. \"Your request for a continuance is summarily denied. Finish it up, Ms. Stiles...\"\n\n* * * * * * * * * * * * * * * *\n\n2:30pm. The case was put in the hands of the Jury, who were escorted out for a late lunch and to begin deliberations. Mike G. Todd turned to me, sitting in the front row behind him. Sitting beside me was Captain Teresa Croyle, in her Duty Dress Uniform.\n\n\"Well, they might deliberate all weekend.\" said Mike. \"It'd be great if they came back today... that would likely be an acquittal. The longer they go, the more I'm worried about a hung jury.\"\n\n\"You've done a fantastic job.\" I whispered. \"It's in the Jury's hands now... and God's.\"\n\n* * * * * * * * * * * * * * * *\n\nAn hour later, the Bailiff came over and asked me to come to the Judge's chambers. Teresa and I went with the Bailiff.\n\n\"Come in.\" said the Judge. \"I just want to tell you that the Jury has reached a verdict. I don't know what it is, but I want to give you the chance to get anti-riot Officers ready, if you deem that necessary.\"\n\n\"Yes, let's err on the side of a strong presence.\" I said to Teresa.\n\n\"They're ready to go, Your Honor.\" Teresa said. \"I put them on standby at noon. Captain Ross volunteered to be in charge of them for me while I'm here. Hewitt is in tactical command.\" I looked at the judge and just nodded.\n\n\"We'll read the verdict in open Court in one hour.\" said Judge Folsom.\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded reporterette from outside the Courthouse complex. \"Fox Two News has learned that the TCPD is deploying their armored riot troops around the Courthouse! And sources are telling Fox Two News that the Jury may have already reached a verdict!...\"\n\nIndeed, they had. At 4:35pm they entered the packed but hushed Courtroom.\n\n\"Members of the Jury, have you reached a verdict?\" asked Judge Folsom.\n\n\"We have, Your Honor.\" said the forewoman, handing the Bailiff the written document. The Bailiff handed the papers to the Judge, who read them, then had the Bailiff pass the papers to the Court Reporter.\n\nIt is tradition that the Defendant and his attorneys stand to hear the verdict. In some places both the Prosecution and Defense stand. This day was a little bit different. As Peter Dwayne Gordon and Mike G. Todd rose to their feet, I also stood up behind them.\n\nThe Jury knew that Peter Dwayne Gordon's life was in their hands. What they did not know was that my life was also in their hands; their decision would chart the course of my future. A guilty verdict, and my life as Police Officer would end; I would not care to carry on the charade of being an Agent of the Law standing for Justice.\n\nAnd like the beating of a butterfly's wings changing the currents of the winds of the world, the ripple effects for the Town & County Police, and therefore the County itself, would be enormous. Ergo, I stood with the Defense to hear my future, and my Police Force's future, being read.\n\nSeeing me stand, Teresa also stood. And seeing us stand, the Prosecution stood, as did Della Harlow, Gwen Munson, and Kelly Carnes, who were sitting on the front row behind the Prosecution's table.\n\nWe listened as the Court Reporter began reading:\n\n\"We the Jury find the Defendant in Count One of the indictment...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "iron crowbar",
        "slender man",
        "mystery",
        "drama",
        "police drama",
        "crime drama"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/falsely-accused-ch-05"
}