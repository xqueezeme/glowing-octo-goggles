{
    "title": "The Saga Continues Ch. 05",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 23 - L.A. Confidential\n\n(Author's note: This is another of those 'bridge' stories, interlude-type stories that give information and set the table with groundwork, as well as a case to solve. Thanks for your patience, and enjoy the sex and the rest of the story.)\n\nThe plane came over the mountains and landed at LAX. Cindy and Callie disembarked and walked down the concourse towards Baggage Claim. It was 2:00pm, Pacific Time, Monday, November 13th.\n\n\"We going to get a taxi, or Uber?\" asked Cindy.\n\n\"Neither one.\" said Callie. \"Annemarie is coming to pick us up.\" Callie made her way down the sidewalk, and soon spotted the big van with Callie's film company logo on it...\n\n* * * * * * * * * * * * * * * *\n\nCulver City, California, \"Heart of Screenland\". It looked like any office building, with bands of glass alternating with what looked like granite. Callie led the way inside, followed by Cindy, and the beautiful Annemarie brought up the rear. Annemarie had enthusiastically greeted Cindy, and seemed to be over the ordeal she'd suffered at Point Hollow and nearby places. (Author's note: 'Point Hollow'.)\n\n\"Let me give you the quick tour.\" said Callie. \"The offices are here to the right. Behind them is the warehouse area, where we ship toys, some books and magazines, some CDs. With the internet, the toys are really the only thing we ship a good bit of.\"\n\n\"Then to the left here are the studios.\" said Callie. \"We often rent one of the houses in the wealthy areas of the metro LA area, but we have a nice looking bedroom set, a more dorm-room looking bedroom set, a kitchen set, and a main room. We do cook in the kitchen and feed everybody when we're shooting. Annemarie, why aren't we shooting?\"\n\n\"Off day today.\" said Annemarie. \"We're going to do the tranny shoot tomorrow.\"\n\n\"Oh yeah, that'll be great!\" said Callie. \"Cindy, Annemarie went into the niche of 'chicks with dicks', and we've got this hot guy... well, girl... well, both. Asian, long, long hair, got a nice boob job, looks like a woman in every way, gets hit on by guys... then he takes off his clothes and this seven inch cock springs out. Our girls are fighting for scenes with him.\"\n\n\"Sounds interesting.\" said Cindy, not all that interested. \"What other films are you making?\"\n\n\"Romantic, loving films.\" said Annemarie. \"Couple having in-the-morning sex, coming home from work and can't wait to get to bed sex, sex after a hot date. Women friendly films. They sell pretty well.\"\n\n\"And you know this guy.\" Callie said as a tall lanky man came up. It was Darren Stevens, who'd been set up by Kendra Luskin and testified against her in the Peter Dwayne Gordon trial. (Author's note: 'Falsely Accused', Ch. 05.) He and Cindy shook hands and exchanged greetings.\n\n\"This guy is great behind the camera.\" Annemarie said. \"I've been told we're probably going to win the cinematography award for Adult Films this year, and it's because of Darren.\"\n\n\"And I'm grateful to have had this chance.\" said Darren. \"How's your Commander doing, by the way?\"\n\n\"He's good.\" said Cindy. \"By the way, Callie, how are people around here going to take it that I'm a cop?\"\n\nCallie said \"It's kind of an open secret, but we're not advertising it, either. You're out of jurisdiction, so it shouldn't matter, and I'm telling everyone that you're my live-in girlfriend and assistant for non-filming matters.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Yeah, I never sold this condo, even after I moved to your Town.\" Callie said as she led Cindy into the apartment. \"And since you won't let me pay you a dime to stay in your condo, I can pay for this.\" The windows let in good light, and it felt cheerful, like it's owner. It wasn't huge, but it felt spacious, as it was an open floor plan to the kitchen behind.\n\n\"It's a nice place.\" Cindy said. There were shops on the ground floor, then condo apartments for the next six floors. \"Earthquake proof?\"\n\n\"As good as it can get.\" said Callie. \"But it's like a nuclear bomb... when the big one hits, all bets are off. So, what do you think of L.A.?\"\n\n\"Culver City is not as bad as I'd heard it was.\" said Cindy. \"Those 'COPS' shows always seemed to be filming in Culver City, and all the porn studios are there.\"\n\n\"No, it's not that bad at all.\" said Callie. \"Of course, the first thing I heard about your Town was that it was very small and very boring, and the University was the only thing of interest there. And then we go there to shoot dorm room porn movies, and end up in a murder case and the Iron Crowbar and his lovely Green Crowbar in our faces.\"\n\nCindy laughed. \"I'm glad you did come to visit.\" she said, walking up to Callie and sliding her arms around the beautiful blonde's waist. \"And I'm glad you came back.\" Their kiss turned hot and lusty, and soon Cindy was getting a tour of the bedroom... \n\nPart 24 - California Creamin'\n\nTuesday, November 14th. Callie and Cindy came into the office at 8:00am or so. They were the first ones to arrive. Cindy made coffee in the big coffeepot in the breakroom, then she and Callie warmed up some pastries for breakfast.\n\n\"Not only is California time behind yours,\" Callie said, \"people won't start coming in until 9:00 at least. But we usually go until 6:00, 7:00 at night, maybe even later if we're doing well on a shoot.\"\n\nThey went to the office, where Cindy was watching the local news while Callie looked over the books. Then Callie had Cindy come over and look at the books.\n\n\"Everything seems to be in order.\" Cindy said. \"You think someone is siphoning off some funds from you?\"\n\n\"Not really.\" said Callie. \"I just wanted you to look at them before I submit them for an audit, in case I decide to sell the company.\"\n\n\"Oh, you're considering----\" Cindy started, but stopped when they heard the front door open. A slender girl with big breasts and streaks of metallic red in her hair came in. She reminded Cindy of Goth Girl Mary Mahoney.\n\n\"This is Celia, our bookkeeper and manager.\" said Callie. \"Celia, this is my friend Cindy.\" Celia came up and gave Cindy a hug.\n\n\"So you're the one that Callie never stops talking about.\" said Celia, her purplish-lipsticked lips forming a happy smile. \"I'm so glad you finally came to California with her.\"\n\n\"Are you one of Callie's actresses?\" Cindy asked.\n\n\"When I came to California,\" said Celia, \"I did a couple of those 'tryout' films, and really did get tried out behind the scenes. It was okay, but I'm not as hot as Callie and her contract stars.\"\n\n\"Aw, you were great.\" replied Callie, who turned to Cindy and sad \"Celia mentioned she had an accounting degree, so I asked if she wanted to do some work behind a desk instead of on her back, and it's been great.\" They talked about the business side of the business for a few minutes, then others started trickling in.\n\n\"You remember Bobby 'The Stallion' Steed from the case in your County.\" said Callie. \"Bobby, do you recognize Cindy?\" Bobby was already buzzed.\n\n\"She was wearing the cop uniform last time, wasn't she?\" Bobby said. \"She looked hot. Put it back on and let's do a scene, baby.\" Celia laughed, and Callie had something of a smirk on her face.\n\n\"She's not on your team, Stallion.\" Callie said. \"And she's on my private team, if you get my drift.\"\n\n\"Oh. Girlfriend.\" said Steed. \"Figures.\"\n\n\"And this is the other Bobby, Bobby Breeze.\" said Callie as young man with a pear shaped body (i.e. getting overweight) and light brown skin came in. \"Bobby is the set manager, helps out in the warehouse, stuff like that. He'll tell you he just hangs out, but we miss him when he's not here.\"\n\nBobby was a friendly soul and greeted Cindy enthusiastically. \"You're definitely not one of Callie's girls, and your perception is more than being a cop.\" he said.\n\n\"Speaking of the girls,\" said Callie, \"here they come now.\" Three hot young women in tank-top blouses, hot shorts, and high heel sandals came in. Callie lined them up for introductions.\n\n\"You know Brooke Monarch, a.k.a. 'Cassandra', from the case in your Town.\" said Callie, referring to the beautiful raven-black haired woman, whose eyes bore into Cindy's with both lust and curiosity. \"And this is our newest star, June Amethyst.\" June was a gorgeous brown-haired woman, about 24 years old, big not-natural breasts, shapely legs. She was tall for a porn star, about 5'6\" without heels.\n\n\"June is married to one of our financial backers.\" Callie went on. \"He loves watching her perform on set. And this is Felicia Foxworthy.\" Felicia was Hispanic, and had a beautiful face. On camera she looked taller and bigger, but her toned, fit body was slender, and even in her heels was barely Cindy's barefoot height.\n\nSome minutes later, as everyone was chatting over coffee and pastries, two more porn stars came in. Callie noticed that Cindy was studying them especially carefully. One was a very attractive Asian woman, with high-riding but artificial breasts, long hair, very slanted eyes (to be politically incorrect about it), and slender, shapely legs. It took close observation for Cindy to see the Adam's Apple and the shaping of the knees that gave away the fact that this woman was born a man.\n\n\"This is Chris, our hot new star.\" said Callie, her eyes twinkling a bit. She'd observed that Cindy was very much liking what she saw in Chris, and the attraction was mutual. Fortunately, Callie was not the jealous type.\n\nThe other porn star was definitely a man. Tall, slender, extremely fit and toned, with a solid, hard ass. His hair was raven black, but it was his eyes and his jawline that had Cindy's attention... he looked familiar, as if related to someone she knew...\n\n\"This is Benny Black.\" said Callie. \"And just wait until you see him fuck...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, Bobby,\" said Annemarie, \"what's our first scene?\"\n\n\"June, is your husband coming by today?\" asked Bobby Breeze.\n\n\"No, he's closing on some rental houses.\" said June Amethyst.\n\n\"Okay, then,\" suggested Bobby Breeze, \"why don't we have you and Benny Black do the morning wake-up scene.\" Everyone agreed, and they moved to the bedroom set, which had a window to the outside that was letting in light.\n\nCindy watched in fascination as June and Benny acted as if they were just waking up. They began kissing, which turned into deeper, tongue-twining kisses. As Benny disrobed June, her magnificent body came into full view, the cameras catching the angles. It was an intense, mesmerizing scene---\"\n\n\"Cut!\" yelled Annemarie. \"Great job, guys. Let's get some still photos now.\" Darren moved in with an expensive camera and began taking shots, first of the couple kissing, posing and still with their lips meeting. Then June sat on the end of the bed. Benny slid his thick, nine inch cock halfway into June's mouth, her full lips stretched around the shaft, and they kept very still as photos were taken.\n\n\"June loves having her husband here to watch.\" whispered Callie to Cindy as they watched from well behind the others. \"And her husband really gets off watching her. He'll sit there and masturbate while one of the guys is fucking her, and that just gets her into it. Since he's not here, it probably won't be as hot.\"\n\n\"Looked pretty damn hot starting off.\" said Cindy. \"How many porn stars are married?\"\n\n\"You might be surprised to learn that most of the bigger named stars are married.\" replied Callie. \"Asa Akira, for example. Happily wedded wife.\"\n\n\"Wow.\" said Cindy. \"I guess Don and Laura aren't that unusual, after all.\" Callie laughed.\n\n\"Honey,\" Callie said, \"Laura is as much a hubby-watcher as Don is a wife-watcher, if not more. Laura told me she and Don had a threesome with Paulina Patterson for his birthday, and that she really got off watching Don fucking the hell out of Paulina... and they're not doing it for the camera, you know.\"\n\nThe scene had started back, and June and Benny had provided each other oral sex. Now the handsome young stud was mounting the brunette beauty, and Cindy again felt the intensity and the heat of their mating, as if it were more than just performing for the camera.\n\nJune groaned as Benny mounted her and sank his long, thick cock deep into June. He began stroking it in and out of her, building up a rhythm----\"\n\n\"Cut!\" yelled Annemarie. \"Okay, get the still penetration shots. And then we'll sit back and let them fuck their brains out. You're obviously hot for each other, aren't you?\"\n\n\"Oh yeah.\" said June. As the still shots were taken, Benny bent down and kissed June's sexy mouth, and they soon were sharing tongue-twining, open-mouth French kisses. This wasn't really part of the script; these two well-matched lovers were sharing their hot desires for each other.\n\nAfter some time, June and Benny had fucked in several positions, and now were nearing the end of the scene. Benny was going to fuck June missionary-style until he came inside her for the creampie shot. This was called 'fuck to pop'. As Cindy watched, her pussy already wet, she began to realize something as she watched Benny's languid motions, the smooth, even undulations of his hips and ass... and she realized she'd seen that fucking motion before... by a relatively young man as he'd fucked Cindy's best friend, neither of them realizing Cindy had watched them...\n\n* * * * * * * * * * * * * * * *\n\nAnother feature of business operations was that everyone was drinking. Not heavily (except for Bobby Steed), but mixed drinks and wine were available in the breakroom. Even Cindy had mixed some vodka with a delicious lemon-lime mixer, and was getting a bit of a buzz.\n\n\"Okay, what's next?\" asked Annemarie, having loaded up (the cameras, that is) for the next scene.\n\nBobby Breeze said \"We've got the Stallion and Felicia doing an office scene. Then Chris and Cassandra doing the fetish scene.\"\n\n\"Let's do Bobby and Felicia first.\" said Callie. She rarely interjected herself, so everyone was a bit surprised, but they went with it. They moved to the office set room to set up. Well, almost everyone. Callie had made observations, and had alerted someone to something...\n\n* * * * * * * * * * * * * * * *\n\n\"Hello.\" said the Asian coming into the door of the breakroom, her voice low but feminine-sounding. Cindy had just made herself another drink. \"So you're Cindy. Callie's a lucky woman. You're a very beautiful woman.\" Cindy noticed that Chris had closed the door, and she was glad.\n\n\"Mmmm, thank you.\" said Cindy. \"You're pretty hot yourself.\"\n\n\"You know what I've got under this dress, don't you?\" said Chris, coming up close to Cindy. Cindy looked down to see something tenting the skirt of Chris's dress. \n\n\"And nice tits to go with it.\" Cindy said as her hands went to them. Chris slid 'her' hands around Cindy's waist, and pressed 'her' mouth to Cindy's. The ruggedly pretty blonde returned the kiss, their tongues twining.\n\nCindy's green dress and Chris's red-patterned dress fell to the floor in two heaps as they kissed hungrily. Cindy was sucking Chris's tits and Chris nuzzled her neck and felt up her lower back and firm, hardbody ass.\n\n\"I remember seeing you in those competitions.\" Chris whispered. \"God, you were so fucking hot, and you still are. I've dreamed of fucking you...\"\n\n\"Now's your chance.\" Cindy whispered as they kissed some more. Chris guided Cindy down onto the sofa, Cindy wearing only her high-heel sandals with leather straps and wooden soles. Chris was totally naked, and as he lay on top of Cindy, kissing her and sucking her tits, she was playing with his throbbing cock, which was at its full seven-inch length.\n\nCindy spread her legs obscenely, one leg resting on the top of the sofa, the other on the floor. Chris had worked 'her' way down to Cindy's wet snatch, and was now licking Cindy's slit with gusto.\n\n\"Unnnh!\" Cindy groaned as the first paroxysm of pleasure blasted through her loins, her first orgasm of the day. She pushed Chris's face into her pussy and ground her labes against Chris's high cheekbones, letting the pleasure wash through her.\n\n\"Are you ready?\" asked Chris after a couple more minutes.\n\n\"Yes.\" Cindy gasped. \"Do me.\"\n\nChris eased up and mounted Cindy, hoping he wouldn't lose control and climax just as he was fulfilling his fantasy of fucking this Miss Physical America beauty. Cindy reached down and guided Chris's cock into her slit and Chris pushed 'her' slender ass forward, driving his prick into Cindy until their pelvises met.\n\n\"Oh God!\" Cindy gasped. It felt great. She began sucking Chris's breasts, playing with 'her' hard nipples as she lay on that sofa and took Chris's relentless, driving thrusts up into her womanhood.\n\nThey fucked for long minutes, Chris kissing Cindy's mouth then nuzzling her neck as he thrust hard into her again and again, slowly withdrawing only to drive hard and deep back into Cindy. For her part, Cindy was coming around Chris's cock every few minutes, her pussy clamping hard on it as Cindy admired Chris's beautiful Asian face, having the best of both worlds in her own mind. \n\n\"Unh, I can't hold back.\" said Chris.\n\n\"Don't pull out.\" said Cindy. \"Come inside me.\" Cindy was on the pill, but that would not have mattered. She wanted to feel Chris release inside her. She pulled her legs up and wrapped them tightly around the Asian wo-man's slender back. It only took a few strokes before Chris was firing his load into Cindy. It was a fairly weak, watery load, but enough to coat Cindy's insides with male essence for the first time in years.\n\nAs they lay together in post-coital bliss, Chris nuzzling Cindy's neck again, Cindy opened her eyes to see Callie standing over them.\n\n\"God! that was beautiful to watch.\" Callie said, her blue eyes sparking as radiantly as her smile. \"Get off her, Chris. I want to eat your cum out of my girl's snatch.\"\n\nChris got off and Callie dove between Cindy's legs and began licking Cindy's pussy. Chris put his cock into Cindy's mouth, and Cindy dutifully cleaned it off, licking Chris's relatively small balls, as well. Then Chris sat down and watched Callie eat Cindy's pussy. Cindy came hard in Callie's mouth, twice, before Callie was satisfied.\n\n\"Oh God, now I've got to get laid.\" said Callie, absolutely loving it that Cindy had fucked Chris's cock. \"How was that, girl?\"\n\n\"It was good.\" Cindy said, sounding as relaxed as she felt. \"It was fun...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Well, not to be a Debbie Downer,\" said Bobby Breeze, teasing Cindy a bit as he said \"but Chris is now useless for the day after you drained her balls.\" Everyone laughed.\n\n\"No, we can still do a lot of stuff with Chris.\" said Annemarie. \"We need some warmup work (oral sex), and some softcore scenes with Cassandra.\"\n\n\"Hey,\" said Bobby Steed, \"can I get a scene with Cindy? That would break the Internet.\" Bobby was getting more and more intoxicated, having drunk way too much.\n\n\"You better worry about getting it up for your own scene.\" said Callie, her voice very stern. \"Okay, let's get lunch...\"\n\n* * * * * * * * * * * * * * * *\n\nAs Callie and Cindy cuddled in bed that night, Callie said \"I can't stand it, I've got to talk about it with you... what was your first cock in years like?\"\n\nCindy chuckled, mostly at Callie's insatiable curiosity. \"It was... not bad. If Chris were a woman, she'd be one beautiful Asian. As it was, I was just turned on by Chris's looks, and letting 'her' fuck me just felt right. And Chris knows what he's doing with that cock; it was a great fuck.\"",
        "\"So no regrets?\" asked Callie.\n\n\"No.\" said Cindy. \"But don't get any ideas of you and me doing threesomes with men. I'm still a woman's woman...\" she leaned over and kissed Callie warmly on the mouth. \"Especially this woman.\"\n\n\"Mmmm.\" said Callie, kissing Cindy back, another warm romantic kiss. \"I'm just so happy for you, seeing you open up like you did today. You did look like you were having a lot of fun, and that's what it's really all about.\" She kissed Cindy again, and soon the women were deeply and passionately making out...\n\nPart 25 - Bugs And Slugs\n\nWednesday, November 15th. Still not used to the time zone differences, Cindy woke up at 3:00am. She got up, put on her t-shirt, panties and gym shorts, and went into the great room. Moonlight streamed into the south-facing windows, mixed with the streetlamps from below.\n\nShe got her laptop and opened it, and checked her emails. She read the email confirming the Junction Station Depot was rented in her and Commander Troy's names. Most of the Orange Order did not know that she and Don were paying for renting the Depot overnight as well as paying for all the food. Then she read Teresa's email offering to pay a third of the cost. Don's email said he accepted that, so Cindy wrote back she was good with that.\n\nSomething told her to look out the window. Creeping up to it in a way to make sure she wasn't illuminated by the moonlight, and therefore not seen from outside, she peeked out the window. The street looked deserted in both directions, as she'd expect at this hour... wait, was that something moving?\n\nShe thought she'd seen movement in a blue car parked in front of the Starbucks at the corner of the building at the intersection to her left, to the east. Concentrating on it, she saw the shadow move again. Definitely someone, definitely someone awake... and in a position to be watching this apartment.\n\nShe watched for ten minutes, but could never get any views of any faces. She crawled over and got her iPhone, and went back and recorded for another five minutes or so. Then she crawled away again then went to the bedroom and woke up Callie.\n\n\"Hey!\" she whispered. \"I think there's someone in a car on the street watching us. Let's go check it out.\"\n\n\"You know we don't have gun carry permits in California, don't you?\" asked Callie.\n\n\"If that becomes a problem, I'll work the 'professional courtesy' angle as a cop from another State.\" Cindy said. \"And if that doesn't work, one hell of a Second Amendment lawsuit will follow.\"\n\n\"All right.\" Callie said, getting up. \"I'll watch from the doorway to the building. Here.\" She opened a back panel in a closet and brought out an armored vest for Cindy to wear. Good CIA stuff, Cindy realized as she put it on then put clothes on over it.\n\nThey descended the hallway stairs, then went to the door. Cindy was about to walk out onto the street when she stopped. The blue car was gone!\n\n\"Well, damn.\" Cindy said. As she and Callie rode the elevator back up, she put her finger over her mouth in a 'hush' sign. Callie nodded. Once back in the apartment, Cindy got a piece of paper and wrote 'Do you check for bugs?'. Callie nodded but also shrugged. Cindy got out her bug-detector, concealed in the ink pen she normally had in the pocket of her Uniform shirt, and started looking. A bug was found in the living room, and another in the bedroom, both concealed under lamps. \n\nTurning on the bug-killer, Cindy said \"They heard us coming to check them out, and drove away.\"\n\n\"I usually have this place swept for bugs once a week by my Company employers.\" said Callie. By that she meant her CIA employers. \"Either they're not doing a very good job, or they're part of this.\"\n\n\"Or, if we give them the benefit of the doubt,\" Cindy said, \"the bugs were planted very recently, perhaps just before we got here. I should've swept for bugs then.\"\n\n\"Who do you think is doing this?\" asked Callie.\n\n\"I'm not sure yet.\" said Cindy. She took the bugs and their transmitting antennae, took them to the toilet, and flushed them down, flushing a couple of extra times afterwards.\n\n\"You need to call Laura and tell her about this.\" Cindy said. \"And I'll talk to Don.\"\n\n* * * * * * * * * * * * * * * *\n\nAs they ate breakfast, Callie said \"Laura asked me what type of bug it was, and then said to keep our eyes peeled, stay together, and she's going to contact Janet Riordan out here and let her know about the bugging.\"\n\nCindy said \"Don was far more interested in the car and people that were watching us, and he is convinced that it's us they're watching. He said to look around when we're at your offices, on any film shoots at any other locations, when we're driving around, and so on. He's going to contact Lt. Claire Michaels with LAPD's Major Crimes unit and see if they can get us some help, too.\"\n\n\"Does he have any idea who it might be?\" asked Callie.\n\n\"I've worked with Don every day for five years now.\" said Cindy. \"And he always knows or has an idea of something that he does not share with me immediately. I'm dead certain that's the case now...\n\n* * * * * * * * * * * * * * * *\n\nOffice Staff and porn stars in the offices watched with enormous curiosity as Cindy went through the place with her bug detector. She found none. \"No active ones, anyway.\" she said to Callie. \"But there could be some really sophisticated passive ones that this device doesn't detect well; this isn't the latest detection technology... Don will probably give me that as a Christmas present.\"\n\nCallie grinned, then said \"I'm going to let everyone know we had watchers, and for them to be on the lookout.\" With that, she gathered the office staff and the porn stars together. \"I'm not sure what's going on, but Cindy and I have become aware that we were being watched at home. Someone may be watching us here, too, so really watch out when you leave, just before you come in, when you're driving here, and so on.\"\n\n\"Are the cops planning to raid us?\" asked Bobby 'The Stallion' Steed.\n\n\"I don't think this is the cops.\" said Cindy, not giving her reasons why. \"Callie, is the protection money paid up?\"\n\n\"You bet.\" said Celia, the accounting girl. \"That's the first thing I pay every month.\"\n\n\"The Mob doesn't play that way, anyway.\" said Bobby Breeze. \"If they are wondering who Cindy is, they'll just call and ask, and we'd tell 'em she's Callie's main squeeze and business partner. If they wanted to fuck us up, they'd have warned us already.\" \n\n\"If anything, we should contact them and ask what's going on.\" said Celia. \"We're paying protection money, let's get some protection, or at least some information.\"\n\n\"Good idea.\" said Callie. \"Do that now.\" Celia left the room.\n\n\"All right guys,\" said Callie. \"I'm not trying to scare you or anything, but we all know the drill. If you hear the word 'Bolt!' being shouted again and again, run the hell out of here and away from here as far and as fast as you can. You should know where you're going to run to, and if you don't... figure it out quick.\" Then she grinned her beautiful grin and said \"But until then, there are too many of you sitting around here and not fucking in front of my cameras...\"\n\n* * * * * * * * * * * * * * * *\n\nIt was amazing to Cindy, watching Benny Black fuck Cassandra Monarch, just how much Benny's fucking motion was like Todd Burke's. Benny, she thought to herself... damn, if I couldn't see his face in the dark, I'd think he was Todd, Cindy thought to herself. And Benny's face... while Todd took a lot after his mother Elizabeth and his grandmother Phyllis, and Benny apparently looked like his mother... they both still had a few features in common with Michael Burke that a trained eye like Cindy's was noticing... hmmm... naah, it couldn't be... could it? I mean... well...\n\n\"You're enjoying watching this.\" said Callie as she came up to Cindy, who was sitting well behind the cameras and boom mikes and staff persons.\n\n\"Hey,\" Cindy whispered, \"does Benny's fucking motions look familiar to you?\" Callie watched for a moment, then her eyes lit up.\n\n\"Damn, you're good!\" Callie whispered back. \"Yeah...\"\n\n* * * * * * * * * * * * * * * *\n\nNow they were doing a tranny scene with Chris and Felicia Foxworthy. Lunch was going to be late, and Cindy was still on Town & County Time when it came to her tummy growling. She went to the kitchen, but there was no food there. She then went to the office.\n\n\"Here's a bag of gorp.\" said Celia, which was a dried-fruit-and-nuts-and-Chex trail mix. Cindy opened it and began eating as she looked out the front window.\n\n\"I contacted our Mob Boys.\" said Celia. \"They're going to have a couple of people drive around, see if they can spot anyone watching us.\"\n\n\"Okay, good--- what the fuck?\" Cindy gasped.\n\n\"What is it?\" Celia said.\n\n\"That son of a fucking bitch!\" Cindy growled. She then turned and said \"I think I see who's fucking with us. I gotta get Callie.\" She rushed back into the set areas to tell Callie that she had just seen FBI Agent Dana Fox across the street.\n\n* * * * * * * * * * * * * * * *\n\n\"He's an FBI Agent, and a dirty one.\" said Cindy, as she, Callie, Celia, and Bobby Breeze looked through the window. \"My PD had dealings with him back in Town... and not good ones.\"\n\n\"Weird for him to just be standing there like that, out in the open.\" said Bobby.\n\n\"Like he's waiting for someone.\" said Celia.\n\n\"Or he wants me to see him and recognize him.\" Cindy said. \"Okay, Callie, I've got a phone call to make... to the Iron Crowbar.\"\n\n\"And you're not talking about my cock when you say that, are ya babe?\" said Bobby Steed.\n\n\"Definitely not.\" replied Cindy witheringly.\n\nPart 26 - Major Crowbars\n\n\"Captain Ross!\" said Lt. Claire Michaels as she hugged Cindy warmly. \"It's so good to see you!\" They were in the main room of the LAPD's Major Crimes unit.\n\n\"And you.\" Cindy said. Then she looked over her shoulder and saw Lorena Rose coming up. \"Lorena, you're looking great! How are you?\"\n\n\"Awesome!\" said Lorena, also hugging Cindy. \"How's Commander Troy and everyone?\"\n\n\"They're all doing well.\" said Cindy. \"Hugh Hewitt was just promoted to SWAT Lieutenant, by the way.\"\n\n\"Oh, really?\" said Claire, who was once the TCPD's SWAT Lieutenant, and who had been dating Hugh Hewitt... and came back to L.A. partially to make a clean break after breaking up with him. \"Commander Troy let him out of purgatory?\"\n\n\"Teresa Croyle went to bat for him.\" said Cindy. \"And he supported her support of him---\"\n\n\"Ah, so this is the Iron Crowbar's Iron Crowbar.\" said a tall Asian man, coming up to them. Claire laughed.\n\n\"Captain Cindy Ross, this is Lieutenant Tal Shiarr.\" said Claire as he shook hands with Cindy, then Claire made other introductions. \"That's Lieutenant Provino, over there.\" she said nodding towards the older man still sitting in his chair, working on something at his desk.\n\n\"And this is our Commander, Mary Raytheon.\" said Lt. Shiarr as the office door opened and Raytheon came out. \"Commander, this is Captain Cindy Ross of the TCPD. Police partner of the Iron Crowbar.\"\n\n\"Ah, Captain Ross, it's so good to finally meet you.\" said Commander Raytheon. \"Both Commander Troy and his wife have told me so much about you.\"\n\n\"All good, I hope.\" said Cindy. \"It's good to meet you, ma'am. Commander Troy was highly impressed with you, and your team here, as well.\"\n\n\"Speaking of Commander Troy, I just got off the phone with him.\" said Commander Raytheon. \"What is this about a rogue FBI Agent spying on your partner's film company?\" Right to the point she's getting, Cindy thought.\n\n\"Yes ma'am.\" Cindy said. \"He's supposed to be in San Francisco, but I saw him----\" Suddenly she stopped talking. Wide-eyed, Cindy was looking at a group of people through the window, walking down the hallway. \n\n\"What is it?\" Claire asked.\n\n\"That's him!\" exclaimed Cindy. \"That's FBI Agent Dana Fox!\"\n\n\"Ma'am,\" said Lt. Tal Shiarr, \"that's Tom Worcester. He's a CBI Agent. California Bureau of Investigation.\"\n\n\"I don't know what name he's calling himself.\" said Cindy, with irritation in her voice, \"but I know who I just saw. THAT was Dana Fox...\"\n\n* * * * * * * * * * * * * * * *\n\nThey gathered in the special-access audio-visual room. \"Okay, we've got hookup.\" A second later, the TCPD's Main Conference Room came onscreen, with two men sitting behind the table, their backs to the wall adjoining the hallway so that the sun from the windows didn't put them in shadow.\n\n\"Hel-lo, Co-mman-der Troy!\" everyone said in unison.\n\n\"Hi guys!\" I said happily, waving to them as they popped up on the monitor set up for us. \"How are my favorite LA people doing?\"\n\n\"Great!\" said Claire Michaels. \"We're trying to keep your Captain here.\" She was talking about Cindy, who was sitting next to her.\n\n\"Don't you dare.\" I said, then introduced the man sitting next to me. \"For those who have not met him, this is FBI Special Agent In Charge Jack Muscone. So, you've got a problem out there?\"\n\n\"Hi, Commander, Mr. Muscone.\" said Commander Mary Raytheon. \"Yes, your Captain has identified a man here as FBI Special Agent Dana Fox. He has represented himself to us as CBI Agent Tom Worcester, and he's enlisted our cooperation in surveillance and a possible raid upon the Culver City film operation of Captain Ross's friend.\"\n\n\"Have you checked out the film company?\" I asked.\n\n\"They're legit all the way.\" said Lt. Tal Shiarr. \"No problems of any kind. When Worcester, or Fox, or whoever he is, came to us about them, we were really shocked when he said they were a major drug and human trafficking hub.\"\n\nCmdr. Raytheon spoke up. \"Mr. Muscone, what can you tell us about Mr. Fox?\"\n\n\"He's on thin ice with me.\" said Muscone. \"And he's already under the ice with Commander Troy. He was sent to San Francisco and should be there, not Los Angeles. I checked with my superiors, and he has not been authorized to go undercover as a CBI Agent in any capacity for any reason. He has not been assigned any case in the Los Angeles area. He has no reason to be there nor to be casing a business that by sheer coincidence is owned by Captain Ross's friend.\"\n\n\"We've also checked, and the FBI offices in San Francisco have not assigned Mr. Fox to anything here in L.A., and didn't know he was down there.\" said Cmdr. Raytheon. \"My contacts in Washington also have no knowledge of any of this. So that leaves the question: what do you want us to do, Commander Troy?\"\n\n\"In light of the threat to raid that business,\" I said, \"I think y'all might want to confront Mr. Fox, put the question to him about what he's doing, then start breaking his story down. We just don't have time to sting him or give him rope to hang himself with.\"\n\n\"And then his superiors in the FBI will be wanting to ask him what he's doing.\" said Jack Muscone.\n\n\"Commander Troy,\" said Lt. Provino, \"do you think this is because this business is operated by Captain Ross's friend?\"\n\n\"I think that's some of it.\" I said. \"But I think there may be more than that behind it. But we need more data to form cogent theories.\"\n\n\"You're using big words for such a small Town Police Officer, Commander Troy.\" said Lt. Provino. I laughed, knowing he was teasing me.\n\nWe made our plan of action, then said our goodbyes and disconnected.\n\n\"Well, Don,\" said Jack, \"this is right in Agatha Christie's wheelhouse on coincidences, or lack of them.\"\n\n\"Yes, it is.\" I said, not really listening. I was off to reverie-land.\n\n* * * * * * * * * * * * * * * *\n\n\"Agent Worcester,\" said Cmdr. Raytheon, \"can you come in here a moment?\" \n\n\"Sure, Commander.\" said Dana Fox. He followed her into the conference room. The door closed behind him, and he was facing the entire Major Crimes unit. \"Wha... what's this about?\"\n\n\"This is an FBI employee record.\" said Raytheon as Lt. Shiarr brought it up on screen. \"Do you recognize this man, Agent Worcester?\" It was Dana Fox's own FBI employee record, of course.\n\nFox nodded. \"Well, you've just blown my cover. I wish you'd have had the courtesy to ask me this a bit more privately.\"\n\n\"Courtesy goes both ways, Special Agent Fox.\" said Lt. Provino, who Cindy had noticed talked a lot like TCPD Police Chief Sean Moynahan. \"You could have let us know who you really are, what you're really do-ing.\"\n\n\"No, I couldn't.\" said Fox. \"This is a special undercover mission, and I wasn't authorized to share it with you. Look, you're just going to have to take my word for this, and understand that we can't just share every little thing.\"\n\n\"And who was doing that authorizing, or lack of it?\" asked Lt. Provino.\n\n\"My superiors in the FBI, of course.\" said Fox.\n\n\"Well, this can be resolved very easily.\" said Mary Raytheon. \"Why don't you give us the name of your superiors who authorized your mission, so we can confirm what you're saying.\"\n\n\"I'm not authorized to do that, and I won't do it.\" said Fox. \"And to that point, if it means discontinuing our cooperation on this mission, then that's what I'll have to do.\"\n\n\"Oh, we're through cooperating, that is for sure.\" said Mary Raytheon. \"But the problem now becomes that the Federal Government is intruding upon the exclusive jurisdiction of the State of California, and you know we don't like that very much. So... either give us a name to contact to verify the legitimacy of your mission, or we'll have to contact the FBI ourselves about it... and if they cannot or will not support your story, Mr. Fox, there may be... legal implications.\"\n\n\"And I'm sure you've figured out that we've already contacted your FBI superiors.\" said Lt. Provino. \"So your story better match theirs, and better be very, very good.\"\n\n\"In that case, I'll be going.\" said Fox. \"But be assured that I'm a Federal Agent with Federal authority in this jurisdiction and on this case. I'd rather cooperate, but if you want to make a war out of it...\"\n\n\"Then we will give you that war.\" said a voice behind him. Cindy Ross had come in the door with Claire Michaels, who was holding an object that looked suspiciously like a green crowbar.\n\n\"Oh. You.\" Fox said derisively. \"You know, little girl, you're not in your jurisdiction now. You won't get away with assaulting a Federal Agent like your boss did.\"\n\n\"But you're in my jurisdiction, scumbag.\" said Claire Michaels, tapping the green crowbar in her hands. \"And I am eager to join the Crowbar Club.\"\n\n\"Get out of my way.\" said Fox, wanting to leave.\n\n\"Get out of Los Angeles.\" said Mary Raytheon. \"Or I will have you arrested, for impersonating a State Agent under false pretenses. We're not afraid of a war with the FBI, Mr. Fox. You and they are on very shaky ground with us, as it is.\"\n\nFox went for the door, and was not impeded. He left.\n\nClaire said \"Darn, I wanted to use this. It does feel good in the hands. Commander Troy would've been proud of me if I'd waxed Fox with this.\"\n\n\"Commander Troy is going to love hearing about this, anyway.\" said Lorena Rose.\n\n\"What is it that inspires this loyalty to Commander Troy and his crowbar?\" asked Cmdr. Mary Raytheon. Lorena Rose caught it first, and began laughing. She could not stop, and was soon literally rolling on the floor laughing.\n\nCindy tried hard but failed, and was soon laughing as well. It became infectious and the whole group began laughing.\n\n\"Co-mannnn-derrrr,\" said Lt. Provino to the stunned Cmdr. Raytheon, \"per-haps it was your choice of worrrrrds...\"\n\n\"Oh my goodness.\" said Raytheon, shaking her head. Then she laughed, too.\n\nPart 27 - California Contemplations\n\nThursday, November 16th. Cindy Ross came to the LAPD Major Crimes unit.\n\n\"Well, Captain,\" said Lt. Shiarr, \"it looks like FBI Agent Fox got out of town. Regular patrols of your friend's business spotted nobody casing the place. The FBI Office here in LA called and said Dana Fox was contacted and has been ordered to report to the San Francisco office to explain himself.\"",
        "Cindy nodded. \"Not that that means anything.\" she said. \"I talked to Don last night, who has been in constant touch with Jack Muscone. The FBI Washington office doesn't understand how the San Francisco office 'lost' Fox for any length of time. The San Francisco office is pushing back, saying they're going to handle it 'internally'. And no official OPR has been started at any level in any office about it.\"\n\n\"You're upset about this.\" said Mary Raytheon, observing Cindy.\n\n\"Yes ma'am, I am.\" said Cindy. \"I quit being an FBI Consultant because Dana Fox had one of my Officer's father beaten nearly to death over perceived leaks of information about a corporation believed to be manipulating food control, a corporation that may have murdered a man. And the FBI is not only doing nothing about this bozo, they don't even keep track of him... and here he is, persecuting my girlfriend and her legitimate company...\" Cindy stopped only because she was out of breath.\n\n\"I understand, Captain, I really do.\" said Raytheon. \"I've let the FBI know that this incident has harmed our relationship with them, as well. We've had a couple of recent incidents with them, and while I don't blame them for the Fox situation, as it appears his were rogue actions, it does let us put the heat on them, the FBI, a bit more. Maybe they'll see the need to clean up their act.\"\n\n\"I hope so.\" said Cindy, not expecting such cleaning up to occur. \"Anyway, I really appreciate you and your team's help on this, and I know Commander Troy is grateful, as well.\"\n\n\"I have seen in the quality of Lt. Michaels and Detective Rose just how good Commander Troy's Officers are.\" said Mary. \"And that extends to you, Captain.\"\n\n\"Thank you, ma'am.\" said Cindy.\n\n\"I have a question.\" said Claire Michaels, having just come into the office. \"How did it go with that kid Commander Troy rescued?\"\n\n\"Oh, that.\" Cindy said, her face turning soft. \"We took him to the Fire Station to be reunited with his dad. It was a... well, it was a really special moment. And let me tell you something else Commander Troy did. We had an old World War 2 veteran, a Mr. Davis, who had a friend named 'Strait' in the War. Strait's grand-nephew is Deputy Sheriff in the county next to mine, good kid if a little goofy. He knew his great-uncle had died in Korea, and his family had moved east. Well, when Mr. Davis died, Commander Troy found Strait's uncle's family and flew them in for the funeral. First time Deputy Strait had ever met his family.\"\n\n\"Awwwww, that's so awesome.\" said Claire.\n\n\"Yes, very impressive.\" said Cmdr. Raytheon.\n\nAfter more Police consultation and conversations, Cindy made her goodbyes with her new friends of the LAPD, and headed back to Culver City.\n\n* * * * * * * * * * * * * * * *\n\n\"Come on in.\" I said as Jack Muscone appeared at my office door. \"Have a seat.\"\n\n\"Thanks.\" said Muscone, sitting down in one of the new, more comfortable hot chairs. These had armrests and cushions, and were more comfortable than the old ones. Even Cindy might choose one of them over the sofa, but I digress.\n\n\"I came by to give you an update on Fox.\" said Jack. \"He told his superiors in San Francisco that he'd gotten a tip on Callie's company being a human trafficking outlet. He showed some paperwork where he documented that, and it's thin but acceptable. He then said he began an operation in secret because he was afraid of leaks or moles, and was going to tell the LA FBI office about it once he had more information.\"\n\n\"Sounds like a big load.\" I said. \"So they accepted that?\"\n\n\"He's being reprimanded for not informing his immediate superiors.\" said Jack. \"And he's been told to stay away from LA and from Callie's company completely.\"\n\nI peered at Jack until he became uncomfortable. Finally, he said \"What?\"\n\n\"Jack,\" I said, getting comfortable in my chair, the girdle not helping my back pain, \"let me ask this: have they started an OPR on Fox for this?\"\n\nJack's beady black eyes winced just a bit. \"No. And I'll just say it... they're not going to.\"\n\n\"Look, I'm asking this friend to friend, and before Cindy gets back home.\" I said. \"Why aren't they looking into this? At the very least there should be an OPR on it. It cannot be a coincidence that Fox targeted Cindy's partner's company, which has never had problems of any kind before. He's not in his assigned city, he doesn't follow protocols, he doesn't get approval, he was lying to the LAPD, damaging the FBI's relationship with them, such as it is. And not even a cursory examination of this? Why not?\"\n\nJack nodded, as if knowing this moment was going to come. \"Friend to friend, then. Don, I have had nothing but sheer admiration for what you have done these last few years. So many times I've thought you were crazy about something, from Westboro to Les Craig, to George Aurus and that Federal facility... and then it turns out you were not only right, but way more right than anyone knew, depths of corruption weeded out like I've never seen.\"\n\n\"So when you beat the living shit out of Dana Fox,\" Jack continued, \"I believed you and I backed you. I saw that Laura and Melina weren't kidding either; they wanted Fox's blood, too. My team also believed you, and still does. Having said that, there are a lot, and I mean a lot, of FBI Agents that do not know you, have heard about you but have not seen your work, and a good number of them are not on your side. Many of them want you arrested and imprisoned for assaulting Dana Fox. Some of them have said they will kill you if they get the chance.\"\n\n\"Adding to it,\" said Muscone, \"is that some don't believe Fox was behind the Milton beating. They're incensed that the FBI was blamed for that assault. It's not a matter of thinking Milton was really a whistleblower or a traitor, but simply that they don't believe that Fox, and therefore the FBI, had anything to do with that. Now you gave us enough to believe it, but the Winters information is being suppressed. He's overseas, and he's the CIA's problem right now.\" \n\n\"So the point is that some of these Agents believe Fox is right and you were and are wrong, and they are influential with some of the brass in Washington.\" Muscone went on. \"The Deputy Director loved you to death and went to bat for you a ton of times, but he's retired now. The EAD likes you a lot, and has so far been on your side, but he's not influential with everyone.\"\n\n\"In fact, the FBI Offices in Washington, D.C. have become politicized,\" went on Muscone, \"and have been getting that way and getting worse for several years now. As politics in the Nation have become more divided and more strident, so has the FBI and CIA in Washington. I'm scared to death that one day things are going to be so bad in Washington that it's going to become apparent that the FBI has become corrupted at the highest levels, and that trust in my beloved Bureau will be destroyed, that the American People will not look upon us as stalwart defenders of America, but as traitors to it.\"\n\nI nodded, and Jack went on: \"So yes, everyone knows Dana Fox was targeting your Captain's girlfriend's business, and that he was doing it out of spite and personal hatred. But they're not going to do anything about it because it's just too hot to handle. So no OPR, no investigation. They're going to slap his wrist a little hard, and then they're going to let it go.\"\n\nI nodded sadly. \"So... where do we go from here?\"\n\nJack said \"I'm going to do what I've always done when artillery is being fired over my head from both sides... I'm going to put my nose to the grindstone, work the cases that come my way, and do everything I can to protect my team from being used as political punching bags. And hopefully I'll have the greatest crime-fighting mind of this era to consult with while I'm doing it.\"\n\n\"I dunno, my mother's not doing much consulting these days.\" I said.\n\n\"She has a great mind.\" Jack said. \"She does not have the greatest crime-fighting mind, though. That would be you.\"\n\n\"Butter me up, butter me up.\" I replied. \"So, I'm in danger of being shot by FBI Agents now? That's all I need.\"\n\n\"I think after this latest crap move by Fox,\" Muscone said, \"your stock is making a comeback. It's not like Fox is winning any friends here. In time, this too shall pass...\"\n\n* * * * * * * * * * * * * * * *\n\n6:40pm Los Angeles time, Thursday, Nov. 16th. Cindy had a surprise for Callie's company's stars and staff: she catered a steak-and-salad dinner for them. It was a huge feast, and it was very good. There was no food wasted; all of it was consumed by hungry porn stars and office staff members.\n\n\"Naah, y'all should have no more problems.\" said Callie as they talked over dinner. \"The LAPD took care of the slug who was watching us, and our Protection Boys are aware of the issues and are watching out for any residual issues.\"\n\n\"Even so,\" said Annemarie, \"we've scheduled a road trip to shoot some scenes in the Mountain West States, then we'll break for the Holidays. Only the warehouse staff will be here.\"\n\n\"I heard a rumor: are you really going to retire, Callie?\" asked Felicia Foxworthy.\n\nCallie looked like she'd been caught with her hand in the cookie jar. \"Maybe from the acting part of it.\" she said after a pause. \"Maybe I'll just work behind the scenes, write some romantic scripts for you guys to shoot, get Darren to teach me some of his great camerawork...\"\n\n\"You're our best-selling asset.\" said Bobby Steed, who was beginning to feel the effect of the wine and beers he'd been consuming. And for The Stallion to feel the effects required a lot of consumption.\n\n\"The Company is going to be fine.\" said Callie. \"You ladies are doing very well, we'll be getting in more hot new stars, and demand for porn content is not going to go away any time soon.\"\n\n* * * * * * * * * * * * * * * *\n\n\"What a day.\"\n\nCallie Carrington said the words as she and Cindy snuggled together on the sofa of the greatroom, the light of the moon and the streetlamps filtering in through the windows. They were drinking Scotch and Sodas, listening to very soft jazz music, and mellowing out.\n\n\"I think they were a little bit happy to see me go.\" Cindy said as she sipped her drink.\n\n\"Only Bobby Steed.\" said Callie. \"Bobby Breeze likes you, Celia loves you, Annemarie and Chris like you. Steed wanted to fuck you but couldn't get into your pants... and you would beat the shit out of him if he tried... and he doesn't think very fast. He sees you as a cop first, too.\"\n\n\"I think all of them always had that in the back of their minds.\" said Cindy. \"And then when the shit with Fox started hitting the fan, they got uncomfortable that they were getting attention, and saw it as me bringing it down on them.\"\n\n\"Mmmm, I dunno.\" Callie said, not wanting to admit that Cindy was pretty much right.\n\n\"And I think they're blaming me that you're considering retirement.\" Cindy said.\n\n\"I won't deny that... well, that they're worried about me retiring.\" Callie said. \"And they may well be right. I'm considering selling the company, selling this condo, and just staying with you. My life is with you. I can let this all go.\"\n\n\"Awww...\" Cindy said, then turned and kissed Callie on the cheek. \"I won't deny that I would love it if you did that. But don't sell this condo. We can come out here for vacation getaways, or if we ever need to be in this area on business. This is a great place. If you sell it, let me buy it from you.\"\n\nCallie grinned her beautiful grin. \"All right, I won't sell it to anyone but you. And you're right, it will be fun to come out and party every once in a while.\"\n\n\"So do you really want to sell the company?\" asked Cindy. \"Not trying to talk you out of it or into it, but you've got a thing going with it. Might not be a bad idea to keep it going.\"\n\n\"I've been thinking about it for a while.\" Callie said. \"It's a long distance, and while I've got good people working for me, if they go, or if anything happens, then I've gotta fix it... and then there's all the crappola of dealing with things...\"\n\n\"You could sell shares, bring in some people in part ownership.\" Cindy suggested.\n\n\"This isn't like your gym.\" said Callie. \"The only people that can really buy in are outsiders. Maybe another big name porn star, but they have their own going concerns. I could have CallieCarrington.com, but that requires full-time work and attention.. and I'd rather have less of that, not more.\"\n\nCindy nodded. Callie got up to get more drinks, and Cindy laid down on the sofa. When Callie came back, she lay down and nestled into Cindy, then pulled Cindy's arms over her.\n\n\"Ahhhh...\" Callie said, \"just let me wrap myself in you like a blanket, and feel warm and protected and without a care in the world for just a few minutes.\" Cindy hugged Callie to her.\n\nMoments later, Cindy realized that Callie was asleep. She had just heard Callie essentially commit to her, Cindy, and to their relationship. It was now in her face, and she contemplated what the best answer for her and for Callie was. She listened to the music as she finished off her drink, then she relaxed and fell asl---\n\nPart 28 - Where The Heart Is\n\nIt was dark as the plane landed at City Airport at 8:30pm, Friday, November 17th. Callie and Cindy were among the many passengers that deplaned from the large jet, which would continue on to New York City.\n\nAs they got to Baggage Claim, they were surprised to see a familiar face waiting for them. It was Teresa Croyle. \"I drove the Black Beauty over to pick you up.\" said Teresa.\n\n\"You get one guess who asked her to do that.\" Cindy said to Callie as she hugged Teresa. \"So, how did you like the Black Beauty?\"\n\n\"Drives well, especially at over 120 mph.\" said Teresa. \"I didn't get to try all the toys in it, though.\"\n\n\"And let's hope we never have to.\" said Cindy. \"Oh, here's our bags.\" They collected their stuff and Teresa led them out of the airport building and to the dark-green-colored O65 Imperial Crown in the vast parking lot.\n\nCindy took the wheel for the drive home, and Callie had Teresa take the shotgun seat so that she (Callie) could stretch out in back. \"So, is Headquarters still standing?\" Cindy asked Teresa as they got onto the highway.\n\n\"Yes.\" said Teresa. \"Commander Troy talked to the MCD Detectives today. I think he's about to have a breakthrough in the cold case and is going to begin getting warrants for some searches. Vice corralled one shipment of drugs going into the industrial district, and then got the one coming in behind it, meant for T-Square's clubs. Mary Milton realized the first shipment was a distraction, and she and Christopher Purvis were able to dig out where the second one was coming to.\"\n\n\"Great!\" said Cindy. \"T-Square is going to have to work harder if he wants to fool Mary any of the time.\"\n\n\"Other than that, it's been quiet.\" said Teresa. \"You picked a good week to go on vacation and get some quiet rest.\" That caused a burst of laughter from the backseat, as Callie was greatly amused.\n\n\"Yeah, it was hardly the quietest of weeks in LA.\" said Cindy.\n\n\"Yeah, Commander Troy was pissed about Dana Fox showing up.\" said Teresa.\n\n\"Oh, that was nothing.\" Callie said, grinning wickedly. \"We had an earthquake out there... Cindy got laid!\"\n\n\"Shut the front door!\" Teresa exclaimed, peering at Cindy and seeing that it was true \"Way to go, girl!\"\n\n\"Callie...\" Cindy said. \"you're telling tales out of school.\"\n\n\"To your soul sister, there.\" said Callie, still grinning. \"And she's happy for you, like I am.\"\n\n\"Next round of beers is on me.\" said Teresa. \"And if you actually use the motor in this car, we might get to the Cop Bar in time to have that round...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, November 20th, from in front of City Hall. \"Fox Two News has learned that the Town & County Police secured warrants to search a patch of county land and dredge a pond on the property!\"\n\nBettina started: \"The operation started yesterday on a piece of land once owned by former County Councilman J.G. McGill and deeded over to the County some years ago. Divers searched a pond on the property and found four firearms that had been thrown into the pond, as well as some containers of chemicals that had been thrown in there.\"\n\n\"When asked if this search was related to the murder of Tammy Cochran between six and twelve years ago,\" said Bettina, \"Police Chief Sean Moynahan had this to say. Roll tape.\"\n\nTape rolled, showing Chief Moynahan in the Press Room at Police Headquarters. \"Yes, it's related to the cold case. If one of those firearms matches the ballistics of the bullets found where the bodies of Tammy Cochran and her unborn child were found, then we will be making some progress towards a solution to this old case.\"\n\n\"Chief!\" shouted John Hardwood, \"even if you do find the weapon, is it enough to make an actual case for murder? Won't a good defense lawyer rip Commander Troy's case to shreds?\"\n\n\"Heh heh heh heh.\" laughed Moynahan. \"When did Commander Troy become D.A.? You've got too much of an obsession with the Iron Crowbar, Mr. Hardwood.\" That remark stung, and the entire Press Corps in the room knew it. Hardwood did not try to hide the unappeasable hatred that was written on his face.\n\nBack to Bettina live: \"Commander Troy has been asked for comment, but has so far not returned our calls. Meanwhile, in State news, SBI-SIS Lieutenant Norm Chow confirmed that the SBI does have the results of the FBI's forensic examination of the booklet alleged to have been signed by Governor Jared, and the signature and inscription were both clearly falsified. While Hillary Braselton has reached a plea deal over her part in these false charge, the SBI-SIS is continuing to investigate who was behind this plot to smear the Governor. State Republicans are not pleased. Roll tape.\"\n\n\"We are not pleased.\" said Lt. Governor Graham Collins as tape rolled. \"We believe the expenditure of manpower and money by Commander Donald Troy after this case has been resolved and these women have apologized and reached plea deals is simply inexcusable. Commander Troy's witch hunt using SBI resources and State tax dollars is an affront to the Citizens of the State, and we are looking into ways to cutting off his funds to investigate further.\"\n\nBack to Bettina live: \"But Lt. Governor Collins's position is by no means unanimous. U.S. Senator Bill Nunn said this. Roll tape.\"\n\n\"I'm wondering why Graham Collins is so frightened of what Inspector Troy is going to find.\" said Nunn. \"We're trying to get to the bottom of this vicious and false attack on the Governor of our State, and the Lt. Governor is doing all he can to stop that investigation... and one has to ask why.\"\n\n\"And in national news,\" said Bettina, \"the deaths of a family of four in Augusta, Georgia are being attributed to serial killer Red Brookstein. Brookstein escaped from prison several months ago, and has killed a number of people since. The FBI has been working on the case but have not caught up to Brookstein yet, and an FBI spokesman in the City confirmed that the FBI is devoting more resources to the capture of this extremely dangerous criminal. And now let's go to Nick Eastwood for Sports. Nick!\"\n\n\"Thank you, Bettina!\" said Nick Eastwood. \"This Saturday the undefeated Bulldogs will go up against 2-9 State Tech at 'Historic' Tech Field. It's a non-conference game for these Schools for the first time since before the Conference was formed, but it's expected to have all the rancor this in-State rivalry has had for decades.\"\n\nNick continued: \"There is already controversy, as State Tech refused to allow our Conference's officials to be used, with State Tech citing bias against them by our Conference that led to State Tech's departure from the Conference. The University retaliated by saying either our Conference's officials or a third-party Conference officials will be required. The Mountain West Conference agreed to provide an officiating crew, thus settling the dispute...\"",
        "* * * * * * * * * * * * * * * *\n\n\"Looks like I missed a good party.\" Cindy said as we drank coffee in MCD with all the Detectives. \"Several of them, in fact. Mary, that was great work by you and all of your Vice Squad.\"\n\n\"Thanks, ma'am.\" said Mary. \"Purvis was all over that like one of T-Square's cheap suits.\" Everyone laughed, partially because T-Square's suits were expensive and looked good, and partially because it had been Mary herself that had been all over that case.\n\n\"And what's going on with these warrants, and finding guns in the pond?\" Cindy asked.\n\n\"I'll tell you all about that later.\" I said, letting my voice be just a bit 'quiet' to connote my desire for her to stop talking about that at this time.\n\n\"Commander, who are you rooting for on Saturday?\" asked Joanne Warner happily. \"The Bulldogs, or State Tech?\"\n\n\"Oh, Bulldogs, no doubt.\" I said. \"I even root for the Wildcats's archenemy State U. to whip State Tech's sorry asses.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Welcome back, Captain Ross. How was California?\" I said as we gathered in my office for the Angels meeting. I was noticing a gleam in Teresa's eyes, and wondered what that was about.\n\n\"It was great!\" Cindy said. \"But it's good to be back. And I wish to God that Dana Fox would show up here like he did in California. Then you could take care of business a little more completely.\"\n\n\"We'll talk about that.\" I said, letting the seriousness of my voice show that there were serious issues there. \"But first, let's bring you up to speed on the Tammy Cochran cold case. What happened is that I was able to get warrants to search that tract of land where Tammy was found, and that included dredging the pond, which was never done before. We came up with several handguns that had been thrown into there, and Tanya's Crime Lab is now working on those.\"\n\nI continued: \"We also found some containers of chemicals that had been thrown in there. Some insecticides that are no longer legal to make. Some of the labels are still visible, and say 'Ultra Diox' on them. The Crime Lab is attempting to get lot numbers and trace back time of sales.\"\n\n\"So we're working it on two angles.\" I said. If we can match a gun to the bullets at Tammy's burial site, and that gun was owned by one of the McGill's, it's probable cause to bring that person in and lean hard on them. Ditto for the chemicals, though that'll be me and the FBI pushing on that.\"\n\nCindy nodded. I turned to Teresa. \"Anything new on your front?\"\n\n\"Briggs went to the Union.\" said Teresa. \"Filed multiple grievances, the latest being my email to him explaining my intent to bring him up for discipline for missing meetings I've explicitly ordered him to attend.\"\n\n\"Yes, the Chief has already told me.\" I said. \"Anything else?\"\n\n\"Just some grapevine stuff.\" said Teresa. \"There's word that those red-shirted thugs are going to do something to disrupt our Orange Order overnight patrol. We may have to limit where we go, or really change the routes so they can't anticipate us. We can put out extra people to protect the initiates, but the Press might make a huge issue of the 'overwhelming Police presence'.\"\n\nI nodded. \"Prepare to have extra people on call if not on duty, in case of trouble. But let's not change the traditional routes unless it's a really bad threat... I don't want to be seen as reacting to these filthy bastards and letting them think they've won.\"\n\nAs I wrapped up the meeting, Cindy went there: \"What are they doing about Dana Fox?\" she asked.\n\n\"Not much.\" I said. \"Slap on the wrist. No official OPR opened, that I know of, anyway.\" Cindy scowled.\n\n\"Why are you still working with those corrupt slugs?\" Cindy asked, her voice low and venomous. Teresa's eyes widened a bit. I just met Cindy's glare.\n\n\"I'll say just one thing about that.\" I said. \"The fact I'm working with Muscone and his team is the only reason I'm able to bring up any flak on your behalf about Fox in the first place. But I also think they are treating this just a bit too casually... and that means they may have someone looking into Fox very quietly and non-publicly.\"\n\n\"Don, they don't have an Internal Affairs like we do.\" Cindy said. \"If they're not opening an OPR on him, that means they're giving him a free pass.\"\n\n\"So they're making a point to tell me.\" I said. \"But I know sneaky subterfuge when I see it... I watch my daughter ceaselessly try to find new ways to give her stringbeans to Bowser. So I'm just going to play along... for the moment. I'd suggest you do the same, though you have your own paths to follow...\"\n\nPart 29 - Holiday Spirit\n\nThursday, November 23d. Thanksgiving at the Cabin was a festive occasion. Cindy and Callie went to Cindy's father's compound in Coltrane County, but we had just about everyone else. Paulina Patterson brought Tasha. Jack Muscone and Tanya Perlman brought little Pete. Martin Nash, Lindy Linares, and Sandra Speer came, and Sandra brought baby Greta! \n\nCarole and Tasha were just beside themselves seeing baby Greta, who seemed to like them, as well. My mother and I made sure to get a lot of pictures of them together... not knowing how often we'd see Greta.\n\n* * * * * * * * * * * * * * * *\n\nLaura and I were invited to go to the Bulldogs-Engineers game, but we made our excuses, including mine that I was working on a serious case. I did have the game on TV; the #2 team in the Nation, the Bulldogs, were relegated to an early game. Tech Field was 3/4 blue and silver; Tech fans didn't bother to show up.\n\nThe game ended 56-0 Bulldogs, with their third team players getting most of the second half snaps.\n\nBut then the day turned bad. The Wildcats lost to a very good 9-2 State U. Purple Hawks team, their first win over us in six years. Rebuild around the crowbar, I silently thought. Rebuild around the crowbar...\n\nCarole and Marie were playing, and the game had been on the television in the greatroom. Bowser barked when the Wildcats scored, causing Carole to turn and say \"Yay, Wildcats!\" But after the loss, Carole said \"Oh well, we'll get 'em next year!\" and continued to play with Marie without a care in the world. First world problems, our college sports were...\n\n* * * * * * * * * * * * * * * *\n\nSunday, November 26th. It was Ian's turn to have a birthday, the next day on the 27th. So we had yet another party, but this time over in Nextdoor County. Cindy brought Callie, who was looking strangely subdued and thoughtful the whole time.\n\nAnd Carole got into some trouble... she kept saying she wanted to go home to see Bowser. I told her that we'd see Bowser in a little bit, but it was her brother Ian's birthday, and we were going to help celebrate it with him. That got me one sulking daughter, who was turned over to her Mommy for remedial instruction. That didn't work, nor did 'time out'.\n\nWhen we got home, Carole ran inside to find Bowser and Buddy hanging out where they always did, on the landing at the top of the stairs. The dogs seemed fine and were happy to see us; I couldn't tell what Carole's obsession had been. I took the dogs out to do their business while Laura kept Carole on the steps in 'time out'. \n\nWhen I got back, I sat with Carole, who continued to sulk fiercely. I dunno where she was getting this stubborn streak, I thought to myself. Must come from her mother's side of the family...\n\n* * * * * * * * * * * * * * * *\n\nTuesday, November 28th. My assistant Helena had informed me the morning before that less than half the Orange Order ballots had been turned in so far. I sent out an email to 'Loddy-Doddy-Everybody' (that's actually how I have it in my email index) to get ballots in. That got 'water cooler talk' going.\n\n\"There's no real consensus on who to vote for.\" said Teresa as we drank coffee in MCD with everyone and watched Bettina's report on Christmas shopping. \"The Chief is eligible now, and he'll likely get voted in, but after that it's wide open.\"\n\n\"In a way, that's good.\" I said. \"We only have two spots, the Chief is getting one of them and we're not going to have extra slots like they did when Cindy and I were brought in.\"\n\n\"Sir, who are you going to vote for?\" asked Joanne Warner.\n\n\"Bowser.\" I said. Then I added \"No, I'm just kidding about that. Knowing you guys, you really would try to vote the dog in, but as much as we could use a good mascot, it's all about the humans on this Police Force. As to my vote...\" \n\nAnd then it hit me. I went to my office and got my ballot, then came back. \"I do have an idea. And if people happen to see it while refilling their coffee mugs, then so be it.\" I put my ballot down on the coffee table and proceeded to watch the news. Detectives refilled their coffee mugs, surprisingly needing refills at the same time, wouldn't you know...\n\n* * * * * * * * * * * * * * * *\n\nThursday, November 30th. The Orange Order balloting closed at noon. Cindy and I gave Helena a bouquet of roses for being the keeper of the Ballot Box (and Helena loved getting those roses), then we took the Box under two-man control to City Hall. We were meeting in the conference room of the Board of Commissioners.\n\n\"Thank you all for coming.\" said Corporal Kirkpatrick, taking charge. \"First, Mrs. Peabody and I will count the ballots.\" He took the Ballot Box from me and the 'tag' box from Cindy. The tag box showed who voted, and would be matched up with the ballots inside by Mrs. Peabody to ensure it was all correct.\n\nMoments later, it was certified. Those of us in the Inner Circle were brought up to see the results. Then the rest of the group came up.\n\n\"Do we all agree on these two nominees?\" asked Corporal Kirkpatrick. We all agreed.\n\n\"Very well.\" said Corporal Kirkpatrick. \"We now have two things to do. First, to select our newest Inner Circle members. We are picking two this year. The other is to select a new spokesperson, as my term has expired. Let's do that first.\"\n\nSecret ballots were taken. Your Iron Crowbar won handily. But I said \"I appreciate your sentiment, but I must raise an objection: I truly believe the Spokesperson should be one of you Uniformed Officers, not me nor the Captains. The Orange Order is everyone's organization, and I believe it means something for our Officers to see it led by their fellow Officers. They see more than enough of me as it is.\"\n\n\"No doubt about that.\" said Cindy, making everyone laugh. A red crowbar was waved in her general direction.\n\n\"I agree with what the Commander is saying, also.\" said Chief Griswold. \"So, Commander Troy, I guess it's up to you to pick our next Spokesperson.\" There was an acclaim for that.\n\n\"Okay.\" I said. As I looked around the room, Micah Rudistan was egregiously pointing his hands at himself and mouthing 'pick me!'.\n\n\"Rudistan,\" I said, \"you're a great Officer, but there is no way in hell I am picking you. Laughter erupted, especially from Rudistan himself. So I said \"I'm thinking future Sergeant... Morton... should be the next Spokesman.\" Sr. Patrolman Morton looked shocked, and everyone else applauded.\n\n\"Uh, thank you sir.\" said Morton, standing up. \"I think.\" More laughter. \"Okay... Inner Circle. If those of you in the Inner Circle will form a circle in the middle, and the rest of you on the outside ring...\" As we did, he went and got two sets of robes and two orange-glassed lanterns. As Morton wasn't Inner Circle, it was Rudistan who took them and walked between the circles and then stopped in front of... Precinct Captain Damien Thompson.\n\n\"Captain Thompson,\" Rudistan said, \"if you accept the responsibilities and rewards of being a member of the Orange Order Inner Circle, signify so by taking this lantern.\" Damien took the lantern.\n\nRudistan repeated the process, walking between the circles and stopping in front of... Captain Teresa Croyle.\n\n\"Captain Croyle,\" Rudistan said, \"if you accept the responsibilities and rewards of being a member of the Orange Order Inner Circle, signify so by taking this lantern.\" Teresa took the lantern.\n\nThe rest of the Order was excused as the Inner Circle conducted its initiation ceremony.\n\nPart 30 - Orange Is The New Order\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette from in front of Police Headquarters at 7:00am, Friday, December 1st. \"Today is the Police Department's Orange Order Day. Officers will learn who among them will be inducted into the TCPD's honorary fraternity later today. The members of the Orange Order do not choose who joins them, but the entire Police Force makes the selection of those they believe worthy of this honor.\"\n\nBettina continued \"Tonight, the initiates will walk what is called a Patrol of Honor, carrying lanterns like the first citizen patrols in Holland in the days of the Prince of Orange.\" Bettina then proceeded to tell the route in very explicit detail, which annoyed me.\n\n\"Why is she telling everyone the specific route?\" I asked. \"We've never put that out before. Who the hell released that?\"\n\n\"It wasn't me.\" said the Chief. \"Nor did I authorize it. I'll check with Briscoe.\" He left the room.\n\n\"Should we change the route?\" asked Teresa quietly.\n\nI thought about it. \"Let's change the timing of it. Let's get MLK Jr. Avenue out of the way early, then do the northside later. We've only got one group tonight, so we don't have to worry about multiple routes. And we'll go back to the meeting place straight down University Avenue, with heavy escort.\"\n\n* * * * * * * * * * * * * * * *\n\nWith everyone in Standard Uniform, with no insignia for MOVs or Purple Orders and such, and only our ranks giving any differentiation to our uniforms, it became something of a party day. Lt. Tanya Perlman had come in, wearing a Standard Uniform and her 'Retired' badge. She talked the Cochran/McGill case with the MCD Detectives.\n\nRight after the shift change at 8:00am, the Chief called me and Cindy into MCD. And then, with great solemnity, Sergeant Rudistan and Corporal Kirkpatrick came up to us and said \"I'm sorry, ma'am, sir, but it is my duty to inform you that you are out of uniform.\"\n\nCindy looked daggers at them, but I was well aware that something was up. \"Oh really?\" I said loudly. \"What is the correction we need to make?\"\n\nWith that, Patrolman Hicks and Patrolman Johnson came around from behind us with two international orange crowbars... among the set Susie and Davie had brought us. \"Sir,\" said Rudistan, \"on Orange Order day, you should be carrying an orange crowbar. Same for you, ma'am.\"\n\nI now realized the real reason the kids had had orange crowbars made. Not so much for the Boxing Matches, but for this day and occasion. I took the orange crowbar from Hicks and tapped it in my hand. \"Feels good.\" I said. \"I feel properly attired now. Thank you for bringing this to our attention.\" Cindy took her orange crowbar and everyone applauded. Tanya had recorded that 'ceremony' on her iPhone.\n\nAnd after today, my orange crowbar would stay in my office, hanging on the wall beneath the red one the Fire Department gave me, and brought out only on future Orange Order days. Properly attired, indeed.\n\n* * * * * * * * * * * * * * * *\n\nAt 3:30pm, those of us in the Orange Order put our Orange Order medals on our uniforms and gathered in the Main Conference Room. Everyone else knew they needed to be somewhere at Headquarters. Our scouts quickly determined where the two new honorees were. We planned our route.\n\nAt 3:45, we headed out. Chief Griswold told Captain Damien to be the line leader, and for Teresa to bring up the rear, and that that would be tonight's order, as well. Griswold and I knew why; almost no one else did.\n\nWe headed out, going along the back hallway towards the gym and Interrogation Rooms. Then we turned down the hall and went past Administration. Turning again, we were along the front hall, seeing many Officers in the Main Auditorium, waiting. Everyone was forbidden from following us, but they watched curiously. \n\nAnd now we moved along the hallway between the Officers Offices and MCD and Vice, towards the back corner where the Chief's Office was. As we got to the corner, we stopped. Chief Griswold was followed by Cindy into the Chief's office.\n\n\"Chief Moynahan,\" growled Griswold, \"would you please come with us?\"\n\n\"Certainly.\" said Moynahan. He was brought into the line behind Captain Thompson. We began again, taking the same route down the hallways. No one was surprised that we'd picked up the Police Chief along the way, but who the other initiate would be had everyone wondering...\n\n* * * * * * * * * * * * * * * *\n\nMCD was full of Detectives from both MCD and Vice. Mary Milton and Teddy Parker were playing a very simple card game: whoever picked the higher card off the standard deck won. Others were sitting and talking in groups. Myron was sitting in a chair off to the side, watching the monitor on the far side wall.\n\nThey noticed that the Orange Order line had come by the side-by-side doors of MCD and Vice and stopped just beyond. \"Ooooh, they're stopping here.\" Joanne whispered excitedly. Activity in the room stopped.\n\nWhat they did not know was that Your Iron Crowbar had continued down the hall, followed by Cindy Ross. We came in the door to the back hallway, surprising everyone. All eyes were on me as I came to the middle of the now-silent room, ju-ust past my intended target. Then I executed a sharp left-face, looked down, and pointed to the front side door we'd be exiting out of.\n\n\"Supervisor Myron Milton,\" I said solemnly, \"would you please come with us?\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "porn stars",
        "iron crowbar",
        "tranny sex",
        "lesbian sex",
        "mystery",
        "police drama",
        "crime drama",
        "drama"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-saga-continues-ch-05"
}