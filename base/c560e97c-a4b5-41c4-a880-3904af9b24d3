{
    "title": "Everything You Want Ch. 05",
    "pages": [
        "Author's Note: Sorry for the time mix-up. The story does take place in December. This is the last chapter in Connor and Angie's story. Thank you for reading it. I'm so glad you guys enjoyed it. Have a Happy Holiday and look out for a brand new story coming next year. ~n4m\n\n***************************\n\nConnor stepped closer to her. \"Are you sure you want this?\"\n\nShe sighed. \"I am. I am so tired of running from everything.\"\n\nHe drew her closer to him. \"Aww, that's so romantic.\"\n\nAngie laughed. \"I feel like in the process of things I just keep hurting everyone. I hurt both of us by not admitting my feelings earlier. And for that I'm so sorry.\"\n\n\"Don't apologize, Ange. You're hard-headed as hell. That's what I love about you.\" He brushed an errant tear from her cheeks. \"Please don't cry, my love.\"\n\nShe looked up at him. He could see the vulnerability in her eyes, her unwillingness to let it, let the bullshit pretenses go. \n\n\"Am I really?\" she asked softly. \n\n\"What?\"\n\n\"Am I your love?\"\n\nConnor smiled. He kissed her lips softly, taking the sigh that escaped from her mouth into his. \"Yes, you are my love. You are that and so much more. You will call me on my bullshit; the one girl who will stay up late with me and watch ridiculous movies; the one who picks me up when I'm too drunk to carry my Irish ass to bed; the one girl who knows all the dumb shit about me and still wants to be around me. You're the woman I want to make love to every day, five times a day for the rest of my life. A Chuisle Mo Chro\u00ed. You are the pulse of my heart. I love you, Angela Hartley.\"\n\nShe was crying outright now as he wrapped his arms around her waist. \"My Angie,\" he whispered, inhaling the scent of her hair. \"My beautiful Angie.\"\n\nAngie snuggled into his chest, inhaling his masculine scent. \"Wow, how long have you been holding that in?\"\n\nConnor snorted. \"Damn near eight years.\"\n\n\"Pussy.\" They laughed. \n\nAngie glanced up at him. Suddenly it all seemed so clear. She was supposed to be with him all along. He was the other half, the missing piece of her heart. His words were so beautiful. She didn't know if she'd be able to express herself like he did. She figured she'd do better.\n\nGrabbing the front of his shirt, she pulled him down to her, covering his lips with hers. Angie moaned, wrapping her fingers in his reddish-brown curls, pulling him further into her. She needed to devour every inch of him. \n\n\"God,\" she gasped, pulling away from him. \"You have no idea how long I've wanted to do that.\"\n\nConnor grinned. \"I can only imagine.\"\n\nShe smiled up at him. \"I love you, Connor Gavin. I suppose I always have.\"\n\nTaking his hand, she led him down the hallway to her bedroom. \n\n\"You've been such a patient boy,\" she said, smiling. \"It's time for your reward.\"\n\nLifting his shift off, she kissed his warm, bare chest. Connor groaned from the contact. Angie undid his belt buckle and slid his zipper down slowly. \n\nReaching inside, she cupped his erection and smiled at his sharp intake of breath. \"You know I was always a little curious about you ever since that time I spent the night in high school and I saw you naked. I was impressed back then.\"\n\nConnor groaned. \"Yeah, well he's definitely improved with age, Peeping Tom.\"\n\nAngie slowly dropped to her knees, kissing a fire line down to his groin. Sliding his pants down, she freed his cock. It was perfect, smooth and thick with a pinkish-red head. She kissed the weeping tip, swirling her tongue around before taking his size completely into her mouth. \n\n\"Oh god,\" Connor moaned, twisting his hands through her brown hair. \n\nAngie gently cupped his balls, humming softly as she bobbed up and down on his shaft. Connor breathed heavily. Pushing her away gently, she helped her to her feet and kissed her hard. He grinned at the slightly bewildered look on her face. \"I want to cum inside you, babe.\"\n\nHe sat own on the bed. Glancing up at her, he chuckled. \"Undress for me, hellcat.\"\n\nAngie smiled shyly. She felt like it was her time, she was so nervous. She removed her sweater, lifting it over her head. Stepping out of her denim skirt, she was left in her dark purple bra and matching hipster underwear. Angie bit her bottom lip, sucking the fleshy bit into her mouth. She had never felt so vulnerable in her life, even when she was wearing a bathing suit. \n\nThis was more than just swimming with Connor at the beach. She was about to share something incredibly special with her best friend. Angie smiled shyly at him. Walking over, she kissed him on the lips. \n\n\"It's okay baby,\" he whispered. \"Everything's going to be okay.\"\n\nStepping back, Angie unhooked her bra, allowing her breasts to bounce free. Connor let out a small gasp. He always fantasized about her, but the real thing was more beautiful than any dream. They were large, more than a handful and capped with dark chocolate nipples. Her brown skin glowed in the dim lighting of the bedroom. \n\nHe smiled when he saw the silver barbells in each nipple. They both had black tops and painted skull and crossbones. \n\n\"When did you get those done?\"\n\nShe smiled mysteriously. \"There's a lot you don't know about me, Mr. Gavin.\"\n\nAngie turned, a slow sexy smile on her face. She hooked her thumbs on the sides of her panties as she bent down slowly. Sliding down her panties, she grinned as she heard Connor growl. \n\nConnor felt his head spin. She was gorgeous, the warm mahogany of her outside giving way to the deep crimsons and burgundies of her inner womanhood. \"God, Angie\" he said as she kicked out of her panties and turned to stare at him. \"You are more beautiful than I could have ever imagined.\"\n\nHe held out his hand for her, pulling her close to him. His mouth covered hers, his desire to be in every part of her driving him to near-manic proportions. \"Let me taste you, baby\" he said hoarsely. She reached down to take off her boots, but he stopped her. \"Leave them on,\" he said, grinning wickedly. \n\nShe smirked. \"You are such a pervert, Gavin.\"\n\n\"Oh, babe you have no idea\" he said, closing his eye in an exaggerated wink. He laid her down on the bed, admiring the way the deep purple of the sheets highlighted the golden tones of her skin. He kissed her, grazing her nipple with his thumb. His lips moved down to her neck, sucking softly and making her sigh. \n\nAn evil thought crossed his mind. Connor sucked harder, leaving a deep red spot on her neck. Angie grinned. \"You are an asshole.\"\n\nConnor laughed, moving farther down her body. He licked her right nipple, hardening the brown bud. When he bit down softly, he felt her shudder in response. \"Connor you're killing me.\"\n\n\"Be patient babe,\" he said, kissing her navel. Slipping her left leg on his shoulder, kissed the inside of her thigh. \n\nHe lowered his head to inhale her, the scent tingling his nostrils and making him feel light. His tongue grazed her smooth outer lips as she moaned aloud. Grinning, he parted her slick folds with his thumb and forefinger, stopping briefly to admire her. Lightly, he flicked her clit with his tongue, making the little bud vibrate. \n\nWhen he slipped his finger inside, her hips bucked. \"Connor,\" she pleaded.\n\n\"Tell me what you want hellcat,\" he said, circling his thumb around her clit. \n\n\"I want you inside me,\" she moaned. \"Now.\"\n\nConnor lifted his head from between her legs. Wordlessly, slid back up her body, positioning the head of his cock right at her opening. \n\n\"You want this?\" he asked, rubbing his shaft against her soaking slit.\n\nAngie moaned and grinded her pelvis against his. \"Yes, please.\"\n\nKissing her lips, he slid a little inside her and pulled back out. Angie bit her lip in frustration. \"You're really going to drag this out, aren't you?\"\n\nConnor smiled down at her. \"Hey, you made me wait eight years.\"\n\n\"Oh, Gavin you are so going to pay.\"\n\nConnor plunged into her in one solid thrust, making them both moan loudly. \"Promise?\" he grunted \n\nBeing inside her was indescribable. Connor felt as if her pussy was made for him. He thrust in and out, grinding his hips into hers and making wide circles. He was moving at a slower pace, determined to last. He wanted her to cum first, to enjoy this experience. \n\nHe watched as her large breasts bounced with every thrust. She was moaning loudly now, her arms stretched above her head, grabbing hold of the headboard. \n\n\"You like this cock, hellcat?\" he groaned.\n\nHer response was to left her hips higher to meet his thrusts. Connor pulled out of her completely, rubbed her slit up and down with his hand, and rammed his cock into her again. \n\nHe grinned like a kid in a candy store when she screamed and wrapped her legs around his waist. \"I take it you liked that?\" he said wickedly. \n\n\"Yes. Oh god, yes,\" she chanted. She hissed loudly when he took her nipple into his mouth and nipped it hard. \n\n\"Who made you scream,\" he whispered in her ear. \n\nShe just whimpered. Connor pulled out and thrust hard back into her, emitting another small scream from her mouth. Her hands grabbed at his back, her nails digging into his skin. \n\n\"I said, who made you scream\" he asked again. He knew that there were going to be marks in the morning, he didn't give a damn. \n\n\"You, baby\" she moaned. \"Oh, Connor I'm going to cum!\"\n\nConnor groaned as she tightened around him. Her eyes stayed opened as she bit her lip, trying to stifle her pleasure. \n\nHe moved faster now, like a piston moving in and out of her. He brushed her lip out of her mouth. \"Let it out, hellcat. Let me hear you sing.\"\n\nAngie felt herself hit the edge and tumble over as the release came over her. She let out a long wail as she shuddered from the orgasm's intensity. Connor held onto her as her body rocked out one wave after another. It had been so long since she felt a man's touch and the right man was doing the right things to her body. \n\nBefore she had time to catch her breath, Connor slid out of her wetness. Turning her over, he spanked her ass, making her moan and wiggle it. \n\nHe slid in from the back, his dick missing her warmth. Connor felt as if he could stay inside her for the rest of his life. \n\nAngie shuddered, enjoying the feel of his cock pulsating inside her. He was long and thick. \n\nConnor leaned down to plant kisses on her back. \"I know I was gentle before, but now I'm going to fuck you,\" he said, stroking in and out of her. \"If you thought last time was good, you ain't seen nothing yet, hellcat.\"\n\nAngie raised her ass, allowing him to go deeper. \"Spank me, please.\"\n\nConnor brought his hand down several times, giving her sharp stinging slaps that made her whimper with pleasure.\n\nHe raised her up, turning her face to his. \"You're so kinky, hellcat,\" he said, strumming her clit. \"It's turning me on.\"\n\nAngie grinned and reached her hand around them and slapped his ass, making him moan. \"Baby, you have no idea.\"\n\nAngie fell back to the bed, resting on her elbows. She began to meet his thrusts, pushing back. Connor groaned. \"Dance for me hellcat. Dance on that cock.\"\n\nShe rotated her hips wildly, making her breasts sway. Connor grabbed hold of them, flicking the bars and whispering dirty things in her ear. \n\n\"You gonna cum for me again, baby?\" he asked, quickening his strokes. \n\n\"Mmm yes, fuck me harder.\"\n\n\"You like the way I fuck you, Angie?\" he groaned. \n\nHis hand traveled to her pussy, pinching her clit and making her squeal. \"Oh, Conny, I'm going to cum again,\" she moaned. Turning to look at him, she flashed him a grin. \"You with me baby?\"\n\n\"Always, hellcat.\" He gave one final thrust that pushed them both over the edge. It was as if eight years of longing was released in that one magnificent moment. Connor felt his toes curl and his eyes roll back into his head as her pussy tightened almost painfully around his cock. She continued to dance on his cock as his heartbeat slowed down. \n\nRolling over, he brought her with him, laying her on his chest. \n\n\"Wow,\" she breathed. \"Just...wow.\"\n\nHe kissed her slick forehead. \"My sentiments exactly.\"\n\n***************************\n\nConnor smiled in his sleep. He just had the most amazing dream. Angie had told him that she loved him and they made hard love on her bed. \n\n\"What are you smiling at, lover?\" \n\nHe opened his eyes. She was straddling him, her breasts bouncing lightly. His cock was pulsing inside of her as she rode him softly. \n\n\"I was just dreaming,\" he said smiling. He grabbed her ass and rocked her towards him.\n\n\"Mmm, any good?\" she asked, leaning back on her arms. She used one hand to cup his balls. \n\n\"This is better,\" he groaned. \"Much better.\"\n\nShe grinded her hips, moving to some unknown rhythm. \n\nConnor clasped his hands behind his head, watching her work. She was so beautiful. Her messy brown hair was like a halo in the sunlight framing her cocoa-colored face. She was perfection personified, and she was his. His heart. \n\nAngie cupped her breasts, flicking the barbells and making herself whimper. She started to move faster, her hips gyrating quickly. Connor grabbed handfuls of her ass. \"Come on hellcat,\" he moaned. \"Cum for me.\"\n\nShe leaned forward, sucking his earlobe into her mouth. \"You first, baby,\" she whispered. Her pussy muscles tightened around his cock. He moaned loudly, digging his fingers deeply into her ass cheeks. \n\nThey both came, Angie shuddering violently and Connor growling her name. \n\nShe laid down on his chest, licking his nipple. She lifted her head, grinning at him. \"Now who made who scream, cowboy?\"\n\nConnor tousled her hair. \"Yeah, whatever. You're awesome. We both know that.\"\n\nShe kissed him. \"Merry Christmas, Conny.\"\n\nHe laughed. \"Christmas is tomorrow, baby.\"\n\n\"I know,\" she said, wiggling on his softening cock. \"I just wanted to give you your present early.\"\n\n\"Well, I didn't like it. Can I send it back?\" \n\nHe ducked as she slapped him upside the head. \"Shut up, dummy.\"\n\n\"Truce! I'm just kidding,\" he said, laughing. He flipped over to his side, gathering her in his arms. Looking into her eyes, he felt at peace. \"I love you.\"\n\nStroking the side of his face, she smiled. \"I love you too, Connor Gavin.\"\n\n***************************\n\nThey stayed in bed the entire day, making love in every part of the apartment. After the fourth phone call from Roxie, they emerged Christmas afternoon to spend the holiday with family. \n\n\"Well, nice to see you two showed up,\" Roxie smiled knowingly as they both entered the elder Hartley's house. \n\nAngie winked. \"Sorry, Rox\" she kissed her sister. \"We were a little pre-occupied.\"\n\nConnor didn't think it was possible to be any happier. He was surrounded by his family and friends, and the woman that he loved more than life. \n\nAfter all the Christmas presents were handed out, Connor stood up. \"Everyone, I have an announcement to make.\"\n\n\"You're coming out of the closet?\" Derek quipped loudly. Everyone chuckled. \n\n\"That's no surprise,\" Jess snickered.\n\n\"Quiet you,\" he shot back. \"No, this is much juicier than my sexuality. I just want you guys to know that I am in love.\"\n\n\"No shit,\" Carrie snorted. There were more titters of laughter. \n\n\"Okay, can I finish or not?\"\n\n\"Quiet, you gits,\" Dex said smiling. \"Let the man finish.\"\n\n\"Thank you, Dex. As I was saying: I am in love. With this woman right here.\" He pointed to Angie, who was trying hard to look oblivious. \n\n\"Um, Connor we kind of all knew that,\" Roxie said. \n\n\"Yeah, just kiss her and shut up.\" Everyone was surprised to hear that come from Nina Hartley. Mrs. Hartley never said a harsh word to anyone. She smiled at the incredulous look her daughters shot her. \"What,\" she said innocently. \"I'm just saying what everyone is thinking.\"\n\nConnor laughed, grabbing her in a hug. \"Nice, Mrs. H.\"\n\nTurning back to Angie, he grinned. \"I have a present for you, hellcat.\" He handed her a small flat box. When she opened it, she gasped. \"Oh Connor, it's beautiful.\" She pulled out a small silver bracelet. On the wide silver front their initials were carved, as well as 'Pulse of My Heart.\"\n\nShe smiled at the smirk on his face. \"How long have you been planning this?\"\n\n\"Eight years, kid.\" \n\nShe grabbed him in a hug. \"I love you. I'll never get tired of saying that.\"\n\n\"I love you too.\" \n\nHe handed her the box again. \n\n\"Look, there's more in there.\"\n\nAngie pulled out several gift cards, one to Home Depot, Bed Bath and Beyond, and other various stores. \"What the hell,\" she asked.\n\nShe looked at Connor, who appeared to be trying to hold in his laughter. \"Well, everyone chipped in and decided it was high time you decorated your apartment.\"\n\nConnor's parents and everyone else burst into laughter. \n\nAngie turned and smiled. \"You mean our apartment.\"\n\nConnor smirked. \"And who said we were living together?\"\n\n\"Shut up. I did. And there's no arguing about that.\"\n\nConnor's father, James laughed. \"I've always said she was a fiery one. You've got your hands full with her, my boy.\"\n\n\"Oh, I hope so.\"\n\n***************************\n\nThey returned to Connor's apartment after spending the evening with their friends and family in Jersey. Connor had barely waited for her to take off her coat before he had her against the wall. Angie smiled as she remembered her orgasm. It was hard and fast, catching her totally off-guard. She loved the way Connor made her feel. It was dirty and sexy at the same time. He cherished her body and she adored his in the same way.\n\nThey were lying on the kitchen table, never making it to the bedroom. \"Baby, reach into my pocket,\" he said, trying to catch his breath. \n\nAngie sat up and rifled through his pants which were still around his ankles. Inside, there was a small black velvet box. Connor smiled when she opened the box and saw her face. Angie pulled out the modest platinum ring with the solitary large diamond.\n\n\"You like it?\"\n\n\"It's beautiful,\" she said, slipping the ring easily onto her finger. \n\n\"That's cool. My other girlfriend will really appreciate it.\"\n\n\"Boy, I'm going to hit you.\"\n\n\"Oh please do,\" he said, sitting up next to her. \n\nShe smiled. \"Do you think we're ready?\"\n\nConnor stared at her. \"Woman, I have been waiting eight damn years. I'm not waiting any longer. You're mine.\"\n\n\"Oh, listen to that caveman talk.\"\n\nHe grabbed her, settling her onto his lap. \"You like it.\"\n\nAngie giggled. \"I do. I'm going to be honest though, I was actually hoping for a new pair of barbells. Or maybe some diamond studded leather wrists cuffs.\"\n\nConnor winked. \"Mmm, those are waiting in the bedroom. I've got so much in store for you, girl.\"\n\nAngie hopped off the table. Stripping down, she turned back to him. \"Well, what are you waiting for? Let's go Gavin.\" She switched down the hallway, her ass swinging.\n\nConnor shook his head, admiring her curves and thanking the powers that be for sending her to him. \"Awesome,\" he whispered. Getting down from the table, he stepped out of his pants and removed his shirt. \"Hey, Angie,\" he called, running down the hallway. \"I get the cuffs first!\"\n\nThe End. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "interracial romance",
        "interracial drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/everything-you-want-ch-05"
}