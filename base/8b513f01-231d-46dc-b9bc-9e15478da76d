{
    "title": "Finding the Perfect Fit Pt. 17",
    "pages": [
        "<center>January 12</center>\n\nI woke up early needing to pee, finding and putting on a longer shirt so I wasn't walking around naked. That done, I took care of my business and checked the living room, finding no Donna. Peering out a window, I only saw my car parked out front, keeping the hateful cold company. Rubbing sleep out of my eyes and leaving the dead night behind, I returned to my room where Jamie was still asleep and grabbed my laptop.\n\nSitting on the couch, I powered my computer up and learned it was five thirty in the morning, a hour I rarely saw. But, like over Thanksgiving weekend, I was ready to write, the eye now open and wanting to transcribe what Jamie and I had done.\n\nThe writing went smoothly but by the time I had finished, thirty minutes had passed and I'd run out of steam. Saving the document, I turned the computer off and went back to my room, stripping before climbing back into the warm bed with Jamie. Having gotten the itchy demand for writing out of my system, I drifted off quickly and slept deeply.\n\nWhen I reawoke, there was meager light coming through the blinds, meaning it could be any time between eight in the morning to five in the afternoon. Jamie was on his side, facing away from me and I scooted closer, molding to his slumbering form. He was wonderfully warm, a space heater of the best sort, murmuring as I brushed the curling mess of hair out of my way. Planting a kiss on his neck, I saw his eyes not yet open but something else was awake.\n\nRunning a hand over his hips, worming my body ever closer to that full butt which had bore the brunt of last night's passion, I found the heat standing to full attention. Taking the silky length in my loose grasp, I gave a few tugs and Jamie stirred, a sleepy moan that cracked as it was voiced.\n\n\"Good morning my lovely.\" I whispered in his ear, still giving him long, leisurely pulls like the ones he had done last night.\n\n\"Wha...?\" To his credit, Jamie didn't freak out but looked over his shoulder, eyes unfocused and bleary. I didn't say anything more, as what was happening spoke for itself. As I kept stroking he might not have woken up much but his body knew what it wanted, his butt pushing into the nothing I had right now as another tired moan came out.\n\n\"That's right.\" I said, kissing the back of his neck. Jamie was making familiar noises now, hips bucking as he got into it. \"That's right.\" Nothing else came to mind but the words didn't matter, only the soft, encouraging tone I used to say them. With a shudder that raced down his spine, Jamie gave a sharp exhale as I felt what was in my hand fire, making a mess sure, but feeling him let loose was fascinating. Now that I had done the male part of sex, I wanted to know more about his climax, how this pulsing prick in my hand behaved.\n\nAfter a good deal of panting, Jamie rolled over, his tired but flushed face framed by serious bed head.\n\n\"Good morning to you too.\" We shared a kiss and he gave a groan as I retook his dick and gave the now soft thing a few strokes. \"Please, no more. Not right now.\"\n\n\"Hmm, Jamie turned down a hand job, interesting.\" I said in a bad German accent, Jamie squinting as if trying to read fine print.\n\n\"Are you studying me? Is that why you wanna get a place together?\" I laughed, sitting up and watching Jamie as he did the same, his boobs on full display and yep, he was checking out mine as well.\n\n\"Just figurin' out whatcha like.\" His dick was making a halfhearted attempt to stand and I gave it a tweak on the soft and pliable head, making both it and Jamie jump. \"Besides, I'd never had a chance to play around with morning wood before. How was it?\"\n\n\"Hell of a way to wake up. It's nice but uh, we made a mess.\" Sighing, I fell over Jamie and reached on the lower shelf of my bedside stand, finding a roll of toilet paper I kept on hand and wiped up what I could, not quite able to get the white stain fully off my red sheets. \"Sorry.\"\n\n\"Pfft, oh no, a cum stain. No college student's ever dealt with that before!\" Shaking my head, I settled back and found my phone, finding it was almost nine. \"Ya work today?\"\n\n\"Nope, got it off.\" I stuck my tongue out at him, Jamie smirking at my childish behavior.\n\n\"I go in at four so we still got some time.\" I wanted to say something funny but instead climbed out of bed, my bladder just now waking up. Finding the shirt I'd worn to write earlier, I pulled it on, grabbed the ball of soiled paper and deposited that in the toilet before relieving myself. That done, I passed Jamie in the little stub of a hallway as he took his turn, with me retaking my spot on the bed, waking up for once without the aid of caffeine. It was nice, a typical lazy Sunday where all responsibility was on hold.\n\nEyeing the stain that was going to take some effort to remove, if I ever got around to it, I wondered if this was the new normal for us: Me strapping on and giving it to him and then giving out hand or blow jobs when time didn't permit us to come here.\n\nJamie, in one of his over sized Metallica shirts, returned and I lined up my thoughts before speaking them, needing this to come out right.\n\n\"Hey, are ya happy with how things have been going?\" Sitting down and wrapping his arms about mostly bare legs, Jamie gave me a blank look and I elaborated. \"I wanna make sure that your getting whatcha want from me and I'm not being selfish by fucking ya instead of the other way around.\"\n\nTaking a drink of water, Jamie attempted to get his out of control hair out of his face and failed, using a hand to keep it back in a tail as he spoke.\n\n\"I, I don't know Gen! All this is still so new to me. I'll be having a bad day, usually at work, and remember 'oh yeah, I've been laid!' and things are just a little bit better.\" With an amused grin, Jamie dropped a wink at me and I giggled, taken in by how sure and honest he was. \"I don't regret anything we've done together.\" Getting up, I grabbed my brush and a few elastic ties and handed them over, still chewing on his statement.\n\n\"What, you don't believe me?\" He asked, getting to work on the tangles of dark brown hair.\n\n\"No, I do!\" I withdrew, searching for what I had to say and yanking it from some deep hiding place. \"I'm sorta shocked at how easy I've gotten used to this, ya know? Before meeting you, I'd never seriously thought of using a strap on. But I've gotten a taste for it now and it's kinda second nature.\" Jamie gave his now shimmering hair a toss, capturing my attention for a second.\n\n\"Same.\" A hesitation, Jamie's gaze flickering to the closet. \"Since meeting you the things I didn't want to accept, that had been hidden away have all come out.\" He smiled, eyes going sharp and sexy. \"It's like some Lovecraft or King story where instead of madness, I was uncovering what I secretly wanted.\" He handed the brush over and I got to work on my hair, still listening.\n\n\"It was the first time you dry humped me. That... changed things? No, opened a door. Hm.\" Giving a grunt, Jamie wasn't happy with his phrasing and having been writing, I understood that frustration all too well.\n\n\"Ya liked it.\" He nodded, still mulling over how to phrase it.\n\n\"It felt right.\" Said slowly, repeating himself after we'd done some humping in my backseat. \"And the implications of that were terrifying.\" Jamie saw my expression and shook his head. \"Look, I got called 'gay' nearly every day at school and my Dad even asked me to my face if I was a faggot.\" I recoiled at hearing that, unable to comprehend a parent so bad at their job.\n\n\"Jesus. And that's why you went silent?\" I asked, getting a snort in return.\n\n\"It wasn't quiet up here.\" Tapping the side of his head, Jamie ran fingers through his hair, holding up a curl before his eyes. \"I felt like if I wore a bra, got humped, he'd somehow know and that'd be it.\" Another shake of the head, sending his hair waving about. It was getting longer and just like with the skirts, I could tell he was enjoying it.\n\n\"I wish I could kick the shit out of this guy.\" I said, Jamie letting out a peal of humorless laughter.\n\n\"Get in line. Tom's threatened to tear his head off and shit down his neck.\" For the second time in my life, I felt something aside from annoyance for Jamie's dormmate. \"You, Tom, all the advice I got from Internet friends, all told me to live for myself. So... That's what I've been doing.\"\n\n\"Good! We ain't hurting anyone so what does it matter?\" I insisted, Jamie nodding along.\n\n\"I...\" Once more his gaze wandered, Jamie falling quiet as I waited. \"This sounds stupid but just follow me, okay?\" Taking one of his hands as he got all his thoughts ordered, I said nothing. \"There's this song that...\" I brought his hand up to my lips and gave the back of it a gentle kiss as Jamie struggled, now on the verge of tears, to speak.\n\n\"It's by Metallica and it's just, dark and fucked. But there's a line near the end that stuck with me and I've tried to live by it but only since meeting you do I feel like I've been able to do that.\" Wiping away the overflow from his eyes, Jamie looked at the bed, then me, trying so damn hard to be resolute. Turning his head, he gave a quick cough and then, in a light singing voice that quaked, he sang.\n\n\"'Renew our faith which way we can, to fall in love with life again...'\" Clenching his jaw, Jamie fell quiet and I took him in my arms. His breath hissed and he burrowed his face into the hair I'd just brushed, trembling hands wrapping around me. Together we were like that for some unknown amount of time before he tapped my back and I let go, Jamie falling back on his haunches and wiping red eyes.\n\n\"It shouldn't be that big of a deal.\" He muttered, that confidence having crumbled away.\n\n\"So what if it is?\" Jamie shook his head but I pressed on. \"People cry reading books and watching movies, a song's no different. They can tell stories, set a mood! You just happened to find one that hit close to home.\" It was a striking line, I can say that much.\n\n\"Yeah but saying 'I cried cause of a Metallica song' gets weird looks from people.\" Still with that childish sulk, as if feeling something was wrong.\n\n\"Then say it's from a famous poet or some shit! If it works for ya, then who cares where it's from! Fuckin' better than most the idiot shit I see on Facebook.\" I had the account mostly out of habit and my feed was endlessly filled with stupidity that lowered my faith in humanity each time I dared browse it.\n\nJamie lapsed into laughter, falling over as he tried and failed to speak. \"Oh my God yes, the celebrated poet James Hetfield! With such classics as Enter Sandman and, and, fuckin' Devil's Dance!\" At that bit of wit I didn't understand, Jamie rendered himself unable to speak from laughing so hard. It was better than seeing him dealing with his shithead father's stupidity however, so I waited for him to wind down.\n\n\"Oh shit.\" Laying flat on his back, Jamie lifted an arm and I gave him a high five, knocking it right back down. \"Anyway, what I was trying to say before was I came to college to find myself, to be able to fall in love with life again.\" The mood and his voice was still light but the subject matter had plunged back down into darkness.\n\n\"But I was still stressed out, scared anyone would find out 'bout my boobs. Tom was trying to get me to go out, have fun and the one time I go with him...\" A few steps on my knees and this time I bent down over him, my hair falling in a curtain about us as I looked at an upside down Jamie.\n\n\"'We're just two lost souls swimming in a fish bowl, year after year. Running over the same old ground and how we found the same old fears.'\" I sang, the sad song being a staple of classic rock stations and Jamie bit back tears once more. \"And now you're here.\" Adding in my own line for the chorus, I kissed the tip of his nose and then positioned myself to peck his lips.\n\n\"We found each other.\" He whispered up at me and now it was my turn to stifle tears. Instead, Jamie lifted and kissed me, upside down to each other and still made it work, kinda like that one scene in Spider-Man. We stayed like that, slowly and sweetly working out how to make this position work until his stomach growled loud enough I heard it.\n\n\"Tell me how ya really feel.\" I rolled off the bed, stretching as Jamie tried and failed to rise.\n\n\"Ugh. I didn't realize how hungry I was. Shit.\" Sitting on the edge of my bed, Jamie rose and started to dress. \"Sorry, I gotta eat something.\"\n\n\"How dare you need food!\" Flinging a bra at him, Jamie caught it and pulled off his shirt, getting into the bra with a practiced ease. Man, seeing his boobs fitting so well in a bra it's like... I dunno, I just love it. \"Where ya wanna eat?\"\n\n\"Not fast food.\" Dressed and ready for the day, I got my shoes on as Jamie got the his second layer on, the hoodie that would fit Tom and was still comically over sized on him. \"I swear, one day I'm going to get lost in this fucking thing.\"\n\n\"I'll just hafta go lookin' for ya then.\" Slipping an arm about his waist, Jamie did the same to me and we walked that way until getting to the front door and then we became just another college couple, a guy and girl who had defied Pink Floyd's song. One of them anyway. Pretty sure we're all just bricks in the wall.\n\nWe went to IHOP, of course, talked about nothing and ate, got out of there was it was busy as fuck, I dropped Jamie off and got changed for my shift at the gas station. Did that, made it home and been writing this. Pretty good day. Started it by giving a handy to a sleeping person and ended laying by the stain that I hadn't bothered to scrub at. Oh well.\n\n<center>January 17</center>\n\nWork and school have tried to kick my ass but no! I refuse! I'm not falling behind this early! There's been no time to write, not when I've been keeping up on homework, reading extra shit for English and picking up a few spare shifts at the gas station. Cause soon Jamie and I are going to be getting a place together and man, I can't fucking wait.\n\nTonight I came home to another of Donna's parties, rap being played at a deafening volume and drunk basketball players all over the place. And of course, more beer pong trying to be played in our tiny kitchen and all I could do was sigh. Sure, last time I'd met Jamie at one of these but now that we were together, I didn't need this shit.\n\nIgnoring Donna, who was stuck in the kitchen and attempting to wave me over, I walked into my room and found some woman pacing back and forth, talking on the phone and glaring at me as if I had interrupted her.\n\n\"Yeah? Whatcha want?\" Short and scrawny with giant hoop earrings, the stranger sighed and resumed her conversation. \"Look, I saw your Tweet and-\"\n\n\"This is my room.\" I opened the door and the haunting sound of brain cells dying, otherwise known as mumble rap, thundered in, threatening to give me a headache as I jerked a thumb over my shoulder. \"Out.\"\n\n\"Ugh! Give me a minute, I'm gonna tell Donna to kick this bitch out.\" The stranger gave me the evil eye as I laughed, dropping my coat to the floor and looking down at her.\n\n\"Go ahead, try it and see what happens.\" My smile must not have been to her liking as she got the fuck out, with me slamming the door behind her.\n\nThat done, I changed and ate a sandwich I'd bought from work, firing up my computer and putting in earbuds to drown out the affront to music being blasted in the next room over. Jamie finally got back to me, having spent most of his night cleaning at Dairy Queen. He confirmed he has tomorrow night off and thankfully, so did I. After a week of giving it my all, I needed some time with my boyfriend. I have a morning shift, he has an afternoon one and the rest of the day is ours!\n\n<center>January 18</center>\n\nI got up and got to work, seriously dragging but buying caffeine to get me started. Putting on some music, I began stocking milk while going over the past week. It'd flown by but been productive, with shit getting done on a constant basis, aside from typing in this journal. English had switched over to poetry and I wasn't thrilled with the change. Robert Frost was good but the rest didn't impress. I thought most poems were about women, how hot they were and how much the poet loved them but I've yet to read any of that! I can't wait to get back to the stories, learning of the hows and whys they worked.\n\nMy phone vibrated, a winter weather advisory letting me know shit was about to go down outside. Firing off a quick text to Jamie asking if he had a ride, I got back to work, my thoughts turning to him. The last time we'd hung out and talked, he'd mentioned some Metallica song but not the name of it. At least, I don't remember it. Well, I needed something to keep me going and Metallica might do the trick.\n\nFinishing off stocking the milk, I took a drink of Dew and retreated away from the well lit doors that occasionally opened. Opening Google and punching in the lyric he'd recited, at least getting close enough, I found the song was called Fixxxer and got it playing while starting in on the big names of soda pop. But I was going slower than usual, paying close attention to the song and it's lyrics. I caught 'voodoo' and nearly dropped a tray of Dr. Pepper trying to yank my phone free, not believing I was hearing this correctly.\n\nKicking the song back ten seconds, I watched as the lyrics showed up on screen and yes, I'd been right as the familiar voice sang:\n\n'But tell me can you heal what Father's done?\n\nOr fix this hole in a Mother's son?\n\nCan you heal the broken worlds within?\n\nCan you strip away so we may start again?\n\nTell me can you heal what Father's done?\n\nOr cut this rope and let us run?\n\nJust when it all seems fine and I'm pain free\n\nJab another pin, jab another pin in me.'\n\nI listened to the song in not horror but a darkening of my already dim mood, wanting to stop this poison from seeping into what was supposed to be a good day. But this is what Jamie heard at some point in the past, alone, with a shithead Father that hadn't cared enough to teach him the world wasn't fair and to be ready for it. Yet Jamie had played out the shitty hand he had been dealt and this song factored into that so I was going to listen, to understand a little bit more about him via this fucked up method.\n\nThe second chorus came around and I wanted to ask how was it so close to what Jamie had felt, how specific it was to him. But this was a Metallica song, they had been the biggest band in the 90's, did other people react like Jamie did to this? How many broken worlds had this touched? Thankfully, the singing stopped and guitar and drums kicked up, with me checking to make sure I was still alone and unobserved in my hidey hole in the cooler.\n\nAs the downbeat solo, I think that's what it was, ended, distorted vocals kicked in and after a few lines, there it was. The snippet that had driven Jamie to tears and I understood now. The singer's voice cleared up as he repeated it, to fall in love with life again and the chorus came back asking, pleading, to heal what Father had done. And then outright begging at the end for no more pins, to be spared.\n\nWiping my eyes, I hadn't cried but still felt drained, tapping on Nothing Else Matters, hoping that would help clear my head. With another nip of caffeine, I got to work, taking grim joy in knowing what needed to be done and racing the clock to ensure I plugged the holes.\n\nAs I worked, my mind chewed relentlessly on what I heard and how disquieting it was to see the parallels of the song and Jamie. Sure, his shithead Dad probably didn't know or practice voodoo but the rest of it was so close. But even then, a different line had jumped out at me, like a striking bit from a story: 'Can you strip away so we may start again?'\n\nAnd the answer is yes. A hundred, thousand, million times yes. After hearing that fucked up song, I had the potential to understand Jamie better. I'd lucked out, having two functioning parents who gave a shit and trying connect with someone who didn't have that was difficult and might not even be possible for me. But I understand loneliness, especially after Cass.",
        "A text freed me from the quagmire my mind was becoming, from Jamie. He said he'd get a ride to work from Tom and if I'd picked him after then he might not freeze. Not thinking about it, I told him I'd listened to that song he'd mentioned last week and tucked my phone away, wondering what he would say.\n\nWhen the message came, I found it much lighter in tone than I expected.\n\n'Yeah, not a good song to start the day off with. I'd go with Battery, gets the blood pumping!' I took his advice and sure enough, after a slow intro it launched into a driving, relentless tempo that got me moving and I burned through the rest of my shift with ease. That done, I clocked out, bought a salad and was feeling better until the automatic door slid open and revealed the hellscape that outside had become.\n\nA inconsistent drizzle of sleet had covered everything in a second, imperfect skin of ice, tiny spheres of ice crunching under foot. And it was still coming down, the wind throwing it in sudden, startling bursts. Starting my car, I got the windshield scraper out and cleared off front, back and driver's side windows, slipping several times but powering through.\n\nBy the time I sat down and cranked the heater, I was beyond pissed off and kept my earbuds in, spamming Battery as I began the exhaustingly slow and careful drive home. Even from the parking lot I could see where a SUV had smashed into the stoplight, knocking it at a drunken angle and turning the four way intersection into an existential crisis. The jackass who had done the deed was pacing while yelling into his phone, a thirty something guy in an expensive coat and with a bad mustache who looked like a complainer, the sort who always found something to throw a fit over when shopping around the gas station.\n\nAvoiding that mess, I kicked my trusty, well worn car in reverse and got going, my face pulled into a snarl as other cars weaved and skidded about me. What was usually a ten minute drive became thirty, driving past three more accidents as the sleet thickened into hail, cutting visibility even further. The hammering of the weather cut past the metal as the sides of the road began to clog with water, ice floating along without a care in the world.\n\nI caught myself saying; \"I gotta get the fuck off the road,\" over and over but it was the damn truth. But where else aside from my dorm, which had no protection, could I go? My parent's place was on the other side of town and while my car would be protected in the garage, there was no way I was going to risk that trip.\n\nPulling into the campus, my face starting to ache from being on high alert, I dodged a car that had spun out, passed by another that had taken out a light pole, and finally made it home. Parking, I offered thanks to God and whatever else had helped me make it though. Grabbing my salad I no longer wanted, I got out into the shit and ran to my trunk, thanking Dad as I popped it and pulled out a tarp. Sure, I was getting soaked but I used bungie straps to secure the corners with the eyelets and after a few minutes, my car had more protection than most sitting out there, getting hammered by hail.\n\nThat done, I went inside, Donna missing, made it to my room and stripped. Wrapping up in a blanket, I shivered while browsing and eventually tossing my phone to the side only to immediately scrabble to pick it back up, asking if Jamie made it to work safely.\n\n'It's the fucking 9th circle of Hell out here!' I had no idea what he was talking about but a picture followed his last message, showing a fancy new car had somehow skidded into a parking lot and smashed into a power pole, making me flinch. It looked to be a very recent model, the sort I really hadn't worked on cause they rarely came into Dick's.\n\n'It knocked out the power at work so we're just sitting here, Boss is coming to figure things out.' I gave a harsh bark of laughter, happy for Jamie, but if he got out early that meant me going back out into the shit.\n\n'Should I get ready to pick ya up then?' I asked, never wanting to leave my blanket wrap.\n\n'Not sure. It's bad out there Gen.' My thumb hovered over the screen before furiously pounding out my next message.\n\n'You're not walking. I'll steal another car and get you if I have to.' If Donna showed up with her vehicle still functioning, I'd be willing to take it out for a spin.\n\n'Grand Theft Auto is a game, not a suggestion.' I snorted, keeping the blanket about me as I found another pair of jeans and a sweater, getting ready to brave the elements. Sitting back down, I looked at clothes I'd picked out and it finally dawned on me that Jamie was going to be coming here. All week I'd been waiting for this and now that it was coming to pass, what was I going to do with it?\n\nLast time I'd taken Jamie with him on his back and legs spread, a vision that was getting me in the right frame of mind and mood. Sure, we could do that again but I wanted to try something new. Then again, Jamie might have an idea so making plans now might be too much. All of this assumed I could even survive the trip to get him. Looking out my window, I saw snow had been added to the mix, slowly covering up the ice and making it that much more dangerous.\n\nA thought pinged off in my head and I checked the kitchen, holding the blanket about me as I confirmed the fridge only had a few bottles of water and a sad, wilted half head of lettuce. The cabinets didn't have much else aside from a few packages of ramen that made my stomach churn. I was done and over with the cheap stuff and had been eyeing a new ramen shop for a while but never found the time to check it out.\n\nSighing, I got back to my room and dressed, no new messages on my phone. Stepping into damp shoes and pulling my coat on, I stepped back outside into the wind and absolute chill slashed through my jeans with ease. Raising the tarp, I got in and started my car then began to pull the now heavy tarp off, wrestling it back into the tightly rolled bundle it had been. Using the bungie cords, I got it somewhat wrangled back into shape and shoved it in the trunk, breathing hard and the large snowflakes sticking to me.\n\nWindows were clear, car hot, I ventured back out. The roads were largely abandoned and I was thankful for it, taking it easy to a grocery store and grabbing enough food for Jamie and I, then leaving the shockingly pack place behind and going to Jamie's Dairy Queen.\n\nWhen I pulled up, I saw none of the lights were on and when I got out, the sign on the door said 'Closed'. Getting back inside, I texted Jamie I was here if he wanted a ride. While waiting, I saw the expensive car that had knocked out the power was gone but the power pole definitely wasn't standing straight, something it and I had in common.\n\nThe door opened and Jamie came running out, Missy giving me a wave as she relocked the door.\n\n\"I'm so happy to see you!\" Slamming the door behind him, Jamie shivered, turning the radio up and then off as it was just the DJ reporting on the weather. \"We were cleaning using flashlights, waiting to hear back from the electric company but it ain't happening today.\"\n\n\"I picked up some food but we might be snowed in. Ya sure ya wanna be stuck at my place?\" Jamie gave me a flat stare, then started shaking his head.\n\n\"Where else could I go? Hang out with Tom in our tiny dorm and pretend I didn't walk in on him jacking off the other night? Or maybe, I could have a romantic night with my girlfriend!\" I had to admit, he had a point.\n\n\"I'm glad I got one of the dorm houses, even if it was the meth one.\" I said, Jamie's expression one of utter bafflement but I couldn't laugh. Now was the time for driving. \"Sorry gotta pay attention.\" Jamie nodded and I went slow, the snow blowing over the windshield and scurrying across the now white ground in odd waves that invited the eye to watch. I resisted the urge and made the trip back, the turn to Jamie's dorm turning into a slide where I corrected and pumped the brakes like I'd been taught. Recovering, I parked and breathed, Jamie looking like he'd just shat himself.\n\n\"Cool, glad we're not dead.\" He said as I got moving, pulling up in front of the snow veiled building that was on the verge of disappearing. \"If I'm not back in ten minutes, never forget me.\" Snatching up one of my hands, Jamie looked into my eyes before bursting out laughing.\n\n\"How could I ever forget your rack, I mean, you?\" My quip only made him laugh harder, fighting to get back in his coat.\n\n\"Damn right!\" Checking around, there was only snow and the promise of bitter cold, Jamie lifted his shirt and showed the peach bra he was wearing.\n\n\"Jamie!\" I looked as well, seeing no one but tittering out of nervousness.\n\n\"Hey, if someone's out in this then they deserved a look.\" A quick peck on the cheek and Jamie was gone into the swirling chaos, so white and innocent. Flicking the radio back on, I found some old song and let it play, it ending and another weather report that promised more snow during the night. Jamie, being very careful, walking from the blinding purity, the wind playing with the few dark strands of hair that had escaped his hood.\n\n\"Oh God, let's get to your place.\" With a burst of cold and wet flakes blowing in, Jamie sat and I followed orders, getting back without incident but not talking either. I was getting a headache from focusing and for once was happy to be done driving, parking beside Donna's car and letting out a sigh that we'd have to contend with her.\n\nJamie helped me take the groceries in and Donna was wrapped up in a blanket on the couch, ear buds in and books open. She waved but otherwise stayed put as I put away the frozen pizza's, salad mix and cans of soup. That done, Jamie and I went to where we both wanted to be and he at once started stripping.\n\n\"Well then.\" I said as Jamie launched his shirt across the room and then let his baggy jeans drop and stepped out of the denim puddle. In the peach bra and plain black panties, it occurred to me that he had worn this to work and was probably his new normal.\n\n\"Gonna wash up real quick. I did a bunch of cleaning and... Yeah.\" Holding his hands up as if they were dripping with blood, Jamie dug into his bag and pulled forth a pair of basketball shorts and his usual huge hoodie and together they hid all his feminine assets. Hell, and his guy assets too.\n\nTaking off my coat and shoes, I wondered what today would bring. Or tomorrow, if it kept snowing and classes got called off. When Jamie returned he sat close enough our hips were touching and leaned against me, smelling of soap.\n\n\"Do you have anything in mind for this evening's entertainment darling?\" I asked in a deep, snooty voice, pretending to be that elusive upper crust of society that might as well have existed on a different plane of existence than I did.\n\n\"I got a few ideas.\" Rubbing his leg, I pulled back the shorts to reveal he had shaved his legs once more and they were wonderfully smooth. \"Finding time to shave isn't easy but it's worth it.\"\n\n\"How does it feel?\" I asked, the rising heat within being paired with the curiosity of how Jamie felt about typical female actions and clothing.\n\n\"Weird but in a good way? Like, I can tell when I've shaved without looking. I can feel my jeans more, same with these shorts. And I'm more aware of my legs this way, if that makes any sense.\" I nodded, getting the general gist of what he was talking about but having been doing this for years now, it was all so familiar and usual for me.\n\nA knock on the door made me pull my hand back, then wonder why I bothered when Donna poked her head in.\n\n\"Hey, it's supposed to snow for like the next two days so classes are probably canceled tomorrow. I'mma be watching Netflix and hoping the power doesn't go out. Got any movie suggestions?\" Donna had managed to catch up on Supernatural and having to wait on new episodes one at a time, week over week, annoyed her beyond words.\n\n\"Seen Enter the Spiderverse yet?\" Donna shook her head and Jamie lit up. \"It's one of the best Spider-Man movies ever and has Nic Cage as Spider-Man Noir. It's perfect.\"\n\n\"Wait, what?\" The French word got my attention, tearing my mind away from Jamie and towards the story I'd started, so fragile but able to be anything.\n\n\"You haven't seen it either?! Come on.\" Snagging my blanket, I followed Jamie and we snugged up on the floor together, resting our backs on the couch as Donna found the movie on her new TV and got it playing. Hidden by the blanket, I slipped my hand in his shorts while watching Miles' world get turned upside down, rubbing Jamie through his panties. His legs stirred as I teased him to full hardness, enjoying both the movie and how well he was dealing with my actions.\n\nBy the time Spiderverse had wrapped up, I was impressed with the movie and eager to get back to my room and see what Jamie had in mind for activities. Donna, lounging with the air of an empress, spoke up as I gave Jamie the blanket to cover his arousal.\n\n\"Not bad. What else ya got?\" She asked, begrudgingly, as if watching an animated movie was beneath her.\n\n\"Um, The Fountain is slow but beautiful, The Irishman is long as hell but interesting, I've heard good things about Parasite but I'm not sure it's on Netflix yet? And there's always Pulp Fiction. We're in college after all and have to watch it at least once a year.\" I laughed at that, throwing an arm over Jamie's shoulder and giving Donna a cool look, letting her know I was going to steal him away and she would be left with the 30 inch screen and the whole of the internet to keep her company.\n\n\"Oh, real quick, do any of you know what this is?\" We shuffled back in the line of sight, seeing she Donna was pointing at. It was a movie call Mulholland Drive, a pretty blonde on the thumbnail image, the tags proclaiming it 'dark' and 'mind bending'.\n\n\"Shit.\" Just from that word I knew Jamie had seen it. It had the same weight of when one of the mechanics asked Dick if he had seen the game yesterday and knowing damn well he had. That same word, pronounced 'shiet!' by Dick, carried the same meaning. \"That's a David Lynch movie.\"\n\n\"Never heard of him.\" Neither had I but that didn't mean I was going to advertise my ignorance when I could ask Jamie later.\n\n\"He's got his own style and it's weird. I watched Twin Peaks, a show he made, and it was good but... weird.\" Jamie sounded hesitant, as if the movie was going to crawl out of the screen and make him watch it.\n\n\"You're going to be here all night, right?\" I nodded along with Jamie as Donna thought it over. \"I can do scary as long as I'm not alone.\" Thinking back on this conversation, Jamie said weird, not scary and the question of how she handled that was never asked.\n\n\"What, all that Supernatural didn't toughen ya up?\" I said, retreating into my room before any response could be given. \"If she interrupts us 'cause of your movie suggestion, ya get to explain it.\" Muttering that to Jamie, he rolled his eyes and stepped back out.\n\n\"Hey, if you get too freaked out, knock first okay? Gen and I were going to be, I dunno, writing poetry for each other and you don't need to see that.\" Jamie said, smirking at my laughter as he shut the door behind him. \"There, was that so hard?\"\n\n\"Poetry? Is that what we're calling it now?\" I got out through my laughter, nearly falling on my ass as Jamie balled the blanket up and threw it at me.\n\n\"What would you call it? Hm?\" Tossing the bundle to the bed, I flipped on the closet light and struck a pose, leg raised seductively as I teased my shirt over my head. \"See, that's not fair.\"\n\n\"Why not? Cause ya could do the same thing.\" I said, seeing the thought enter into his head and he tried to mirror my pose, having much more success just removing his shirt and slipping his shorts down.\n\n\"Fuck subtlety.\" At that, I joined him in getting down to my underwear, grinning all the while as Jamie clicked my door's lock. \"So, I believe you were asking me for ideas before the movie break, yes?\"\n\n\"Hm, why yes, yes I was.\" I said in the same smoozy voice as before.\n\n\"So... Would you mind indulging me?\" He asked and I raised an eyebrow at that.\n\n\"Is that code for fuckin' ya again?\" His flat stare told me no, it was not. Not yet anyway. Kneeling, he pulled out the bag containing my penis... Okay, that reads really wrong now that I'm looking at it. Jamie got my dildo and the straps that held it on. There, better.\n\n\"Hm, huh. Not sure how this is going to work...\" He said, mouth twisted into a frown as he looked at the brown bag hiding such fun.\n\n\"Whatcha thinkin'?\" I joined in, unable to resist the urge to unlatch his bra.\n\n\"Wha! Gen!\" I giggled but he just slid it off, stretching, full pale breasts on show. \"I can't help but notice that shut you up.\"\n\n\"Aboobles.\" That nonsense was all I could offer as Jamie grinned, poking one of my still bra covered boobs.\n\n\"So, I've had this idea, this, it's not a fetish but...\" Falling silent, Jamie thought his words over before shrugging. \"I had a thought that it would be hot to lift up a skirt and well, having that be waiting.\" He pointed at the bag holding my dildo and I was instantly on board, my mind twisting what he said around.\n\n\"Sure, as long as we're both in skirts.\" I grinned at his confusion, reaching in my closet and not finding what I was looking for at first but a pleated mini skirt rescued from my parent's place was tossed Jamie's way. \"Cause I agree, that would be hot.\" Biting his lower lip, Jamie dropped his gaze to the skirt and there wasn't much left to say. Joining me in the closet, HAHA so funny, he picked out some of his stuff stashed on a shelf as I stood beside him, finding the pencil skirt and taking a lace bra with me.\n\nLighting the candle that qualified as mood lighting, I changed into lace panties and bra, pulling up the stockings that Jamie loved so. Then moved on to the gray low cut shirt and getting the base for the dildo on before worming into the pencil skirt. Taking up my purple dick, I tucked it in the back of skirt's waistband like tough guys did with guns. It was a surprise either way.\n\n\"Wow, this shows off a lot of leg.\" Jamie was looking in the mirror, the pleated skirt falling just above mid-thigh, not quite hiding away the elastic tops of his white stockings.\n\n\"Looking good!\" Smoothing the skirt over his hips, the black and red checkered pattern matching the Christine shirt he had finally found a chance to wear. While Jamie didn't have thunder thighs, there was enough meat and shape to them that he didn't look out of place in such a short skirt.\n\n\"How do you wear this out in public?\" His tone made it clear that he considered such a thing unthinkable.\n\n\"I'm used to it but if ya really worried, ya wear a pair of spandex shorts or something under it so not everything is shown off.\" Jamie blushed and, with a finger, I flipped up the hem, peeking his lacy panties and he showing that he was quite excited by all of this already. He gave an adorable 'eep!', hands darting down to fix the skirt and make himself decent.\n\n\"Don't do that!\" Slowly unfurling from his protective stance familiar to me from wearing skirts on a windy day, Jamie smoothed it out and sighed. \"This is way too short.\"\n\n\"I mean, I like it but yeah, it's not a thing ya wear out and about unless ya want attention.\" I mean, sure, anyone with a nice pair of legs could turn heads wearing that but most of them had thoughts and ideas I really didn't want to deal with. Jamie would have the same problem, especially if he stuck with the stockings. \"Sooo... Ya ready?\"\n\n\"...Make up?\" He asked and I smiled, wanting to get this going but knowing how all these little additions added to his happiness and pushed his appearance further away from male. The more feminine Jamie looked, the more girly he seemed to act and both those things boiled my brain into shutdown and the fire took over.",
        "\"Sure, whatcha want?\" I asked, even though I still had the same stock from Thanksgiving: eyeliner and shadow, along with lipstick and gloss.\n\n\"Well, it's whatever you want.\" He said, noticing me rolling my eyes and planted his hands on hips. \"I'm going to be blowing you, right? So what do you want to see?\" Jamie saying that made the flame roar to life, trying to steal away control and take him right then and there, the dildo's hard presence against my lower back able to make it possible.\n\nInstead I held up the eyeliner pencil and he sat in my computer chair, still not happy with the black point being so close to his eyes but admiring the end result as I got my own eyes outlined in black much faster than putting it on him. Lip gloss came next and once mine was on, I handed it over to Jamie, who took his time but got it right.\n\nJamie approached the mirror, puckering his lips while leaning forward so that his rack was on display and I had a moment of disbelief. This couldn't be the same guy who had been freaked out by a bra when hiding from a college party. But, like the stories of some girl who tries sex for the first time to find that she really likes it and becomes known as a slut, sometimes all it takes in that first taste to break down most, if not all, inhibitions.\n\nA few hushed steps got me to the bed and I got the lube, Jamie watching what I was doing in the reflection. Sauntering over, I slipped an arm about his waist and set the lube in his cleavage. That done, I traced his wet lips with a finger, feeling the slight give and softness of the lower one. They weren't that big but not narrow either, a nice middle ground with enough volume that, when colored or shiny, they asked to be kissed. And a question had passed through them and soon, they would be wrapped around something dick shaped once more.\n\nIn the dusty surface of the mirror, I saw him reach up, wrapping his hand about my wrist and looking on as if he was studying my loosely curled hand. Bringing it closer, he closed lips about my middle two fingers and his tongue circled them oh so slowly. Thanks to habit from working in a car garage, my nails were kept short and they weren't in the way as he sank more of my fingers in, tongue teasing the undersides and I realized what was happening, the thought hitting me like a brick.\n\nJamie was blowing me. Simple as. My clit wasn't big enough to be treated like this, I couldn't feel him through the dildo but this was as close as we were going to get to the real deal.\n\nMy head rolled to the side and a moan escaped, head lulling on a suddenly weak neck as the lumpy ceiling came into view when I remembered that breathing was good in situations like this. With a few of those, I blinked back to what my life had become, witnessing the eternal dance between light and shadow over Jamie and his gently bobbing head, taking what I had to the knuckle.\n\nRational thought failed, the heat building within had consumed it and now I was fire, demanding and ravenous. With the hand not receiving attention I'd never dreamed of, I pulled the purple promise of a good time from it's hiding spot and ran it up the back of Jamie's skirt clad ass, his moan both felt and telling me all I needed to know.\n\nStill, with his hand about my wrist his movements got faster as I held the dildo near the base and got the head under the skirt, poking where it had been before. He wiggled back into it, the noise being made vibrating my fingers as I ran it up and down, teasing. There wasn't much else I could do, with one hand being tied up and the harness being trapped under the tight pencil skirt. Holding the dildo lengthwise, I grabbed the hem and without much grace got it up about my waist. Feeding the length through the loop wasn't easy but Jamie was fully committed to blowing me now, hair swaying along with his tempo.\n\nFinally, I got my artificial dick locked in and now everything imaginable was possible: Jamie on his knees, looking up at me as he worked. Jamie on his back, legs spread as I took him in one single, smooth motion. Jamie above me, sinking down on this piece of plastic, bare breasts bouncing as his legs lifted then dropped him. Instead, the inferno that had consumed all my thoughts and memories acted on one of them.\n\nLoosening one of the straps about my waist, my erection didn't lose any of it's firmness but rather the angle drooped from 90 degrees to about 45. Shimming my skirt back down, I looked and saw the obvious shape of it tenting the fabric. Jamie's fantasy wasn't very compatible with such an inflexible toy but I'd find a way to make do. That done, I pressed my package against his butt and the louder moan that spilled out from his not quite full mouth was everything.\n\nHips gyrating without any shame, Jamie's blowjob motions ceased as he played with the dick, trying to get it positioned without hands and failing. I removed my fingers from his mouth and snagged his chin with them, turning him about to face me. Leaning in for a kiss, he bumped into my eternal erection and, with a flicker of his gaze up to my face, sunk down on his knees.\n\nChecking the mirror, I moved and Jamie followed, seeing himself on stockings knees before a penis straining to be free of it's confines. Shadows flowed over his face, joining with the black about his eyes, a flash of green cutting past the darkness, looking up at me. I saw the sheen on his lips as they parted, plucking the bottle from where it had been nestled in his bosom and the harsh sound of it opening still fit here in this place were words weren't needed. We had returned to the primal call and response of need and understood another.\n\nStill looking up at me with soft, nearly pleading eyes, Jamie ran his hands up my thighs before leaning in and rubbing the side of his face against my hardness through the fabric of the skirt. I groaned through gritted teeth at that, finding that my wildest imaginings weren't keeping up with him. Lacking the ability to feel what he was doing didn't matter as much as how he was acting, fuck he was performing now, and it was enough to send me flying over the edge.\n\nTeasing the hem up at such a slow pace that if it had been real I would have gone insane, Jamie took the head in his mouth once it peeked out and together with the skirt being raised and lifting it, he got my dick in its proper position and I secured it back into place.\n\nDown, past the obstruction of my breasts, Jamie poured a thick rope of lube directly on the veined surface and, with a hand that knew the correction motions, got the whole of it slick as he looked over at the mirror. The slight, wet sounds of the lube mingled with breathing was all the noise being made, our reflections silent as they mimed our actions.\n\nOpening his mouth in an 'O' that couldn't be mistaken for anything else, Jamie took the now gleaming wet head into his mouth and I had to stifle a cry, covering my mouth and whimpering as he took nearly half of the length in one go. Giving an approving moan of his own, he looked up as candlelight flowed over his face, danced gleefully over the dick in his mouth and I knew what that felt like now, he had shown me.\n\nThrowing my head back, I trembled as color invaded my vision and strength faded my from legs and arms. Fire roared, making demands but there was no time for that now, Jamie was getting what he wanted and my desires were going to have to wait. An exhaled breath that almost sounded like a cough came out and I sucked in much needed air instead of a dick like my boyfriend was currently doing.\n\nWith unsteady hands, I took either side of his head and the soft, curling hair helped bring me back. Another moan, Jamie seeing that I had returned from my brief sojourn and he began once more. I saw his actions in the mirror, the simply repeating rhythm I had visited upon him being paid back. \n\nJamie took more of my faux dick, a hand wrapped about the base, eyes closed in what might have been concentration as six inches was being presented and attempted to be conquered. A little more of the unnatural color of the dildo slid past his lips and he stopped, blinking a few times and then pulling off it entirely.\n\nWatching him taking in air, seeing the short skirt hiding away his only mark of masculinity his body really provided, I gave in to the demands being made from within. There had been no lie earlier and now I had to experience what he was. Extending a hand, I said nothing to Jamie's blatant confusion as I help him rise and then lead him to the bed. Pushing him on his back, I repeated his actions, running my hands up his thighs and up the skirt, lifting it and seeing his trapped goodness all wrapped up in lace. At that, the searing heat from within burned hotter still.\n\nCarefully, I eased the panties down and what sprung out stood tall amid all the feminine trappings. A skirt threatened to cover it once more, stockings below and garter above, panties still containing his balls. Jamie had been absolutely right: This was worth seeing.\n\nNow that he was free, I swung my feet up towards Jamie and lay on my side, my dick waiting for him as I gave his a few strokes. He got the message and rolled on his side, each of us worming about until all was within reach. There wasn't a shred of male clothing being worn on this bed yet two dicks were taken, even if mine was a falsehood. What I had in my mouth was the real deal and leaking, betraying the excitement his eyes kept hidden so well.\n\nThe arm not wedged awkwardly under me took that slight curve of his hips, the sleekness of the garter and lace texture of the panties as I took hold of his ass, taking more of his cock with each bob of my head. His muffled moans were returning and the taste of musky salt increased as I opened my throat and fought back a gag, getting comfortable with Jamie now all the way in.\n\nSqueezing the butt cheek I held, I found that thanks to how we had come together my nose was mashed into Jamie's balls, not usually an enviable position to be but they were still in panties and having that texture, something so fancy was nearly sacrilegious to be wedged betwixt nose and testicle. All of him tensed and now it was my turn to pull back, grabbing air and stealing a glance down at Jamie who only had the head in his mouth and face contorted in in anticipation of the end.\n\nGoing back, I gave him a few more trips around with my tongue and gasped when something brushed my sudden panties, slight but desperately needed there. I tried to buck my hips, to get him to understand he was doing the right thing but then he gave another jerk and I was suddenly drowning.\n\nOpening my throat once more, I swallowed one mouthful before remembering that here, saving it wasn't a bad idea and I took the hot, must embers of his passion as it poured forth, hand still on his ass and marveling how it was tensing in time with each shot. Jamie's cries slight but didn't escape my notice, his white stockinged legs having curled up as he rode out his orgasm. Only when he started to go soft, how slow yet complete that change was, did I tuck his tool back into the panties and rose, Jamie joining me.\n\nTaking one of his breasts in my hand, I kissed him, a peck on the lips and he lingered, his tongue tasting my lips and there was no complaint. He kissed me harder, stroking the dildo still and my opened my mouth, sharing with him what my fake dick couldn't provide. Lazily we kissed, drifting by as he swallowed and I felt his boob, his ass and with a bit of encouragement, got him hard once more.\n\nSitting back, I undid the strap and got the contraption holding my dick off, knowing what I wanted but unsure of how to go about asking him for it.\n\n\"Jamie?\" I asked, not finding what I needed but yet need was going to drive me out of my mind.\n\n\"Yeah?\" Color high, still fully clothed and wearing the shadows atop that, Jamie sat up and looked at me, head tilting to the side. \"What's up?\" Not speaking, instead I crawled to the edge of the bed and reached under for the bag, pulling out a condom and going for the forgotten lube, mind trying to think all the while and mostly failing.\n\n\"I... Just askin' but would ya be willing to fuck me?\" He blinked as I held up a finger, cutting him off. \"Here.\" I lifted the skirt, revealing my soaked crotch and he flushed hard, biting his lower lip and looking to the ceiling. It couldn't have been very useful as the only answer it gave was 'lump', which is never what anyone needs to hear.\n\n\"Yes?\" He cringed at how he said it, letting out a frustrated groan so different from his sexy one I chuckled. \"That's not what I meant!\"\n\n\"I mean, ya don't have to-\" This time me cut me off, trying to speak but failing once, twice before getting it out.\n\n\"I- Look, promise me you won't laugh.\" Instantly the only thing in the whole of the world I had to do was exactly that. Biting my cheek I nodded, unable to blink as all bodily functions, even being achingly horny, had been diverted to not die laughing.\n\n\"Say it.\" Jamie's tone was so unamused it might has well have been dead and I have no idea what I tried to say but a creak was all that came out, becoming a wheeze as I expelled all air. Couldn't laugh then! After a deep breath, the urge passed and I nodded, holding up a finger once more before I was able to talk.\n\n\"Okay, okay. Shit, sorry. I will not laugh.\" A single blink was Jamie's response and yeah, I can't blame him there. \"Please, do go on.\" Jamie pondered while I checked him out again and my need came pouring back.\n\n\"I've stayed away from there 'cause you're the first girl I've been with. I have no idea what to do there! I know how that works cause I've had practice.\" He gestured towards my discarded dildo, color blazing in his cheeks. \"I, I like how yours looks.\" Jamie was providing the blush, there was no doubt about that.\n\n\"The girl I fooled around with used to call me 'Dinkleballs' cause, as she put it, 'I looked like I had a little package.'\" It wasn't the best of nicknames and Jamie lapsed into frantic giggles I couldn't blame him for. Cause Cass had been kinda right, I experienced it myself here in this very room, comparing busts and panties with Jamie. \"Yeah, yeah, laugh it up chuckles.\"\n\n\"I'm sorry! I am!\" Said while trying not to laugh hysterically siphoned nearly all the truth from his words and I waited for him to wind down. \"I just, I dunno, didn't want mess up or do something wrong.\"\n\n\"And ya knew all bout butt stuff?\" He sighed and I clarified. \"I'm not trying to make ya feel bad, I genuinely want to know. 'Cause I'm coming at this from the other side.\" The few times Cass and I had the time and privacy to get handsy, I used what worked for me and ended up letting her take control as the constantly shifting demands her clit needed was beyond me. Too much rubbing and she freaked out, too little and she'd reach down to do it herself. Maybe that was a sign it wasn't going to work, I dunno.\n\n\"Ugh! Butts are easier to appreciate.\" Jamie proclaimed and I had to keep from laughing again, instead nodding as I did agree there. \"With you, I see your butt in tight jeans and I have some idea, right? I know 'cause I have one. Sure, I didn't mess around back there at all before you but vagina's are like some really advanced math problem I can't begin to solve.\" He finished and I got what I wanted: Understanding.\n\n\"Well, one way to fix that.\" I tossed him the condom and it bounced off his boobs, Jamie fumbling about for the rubber. \"I love you and all the things we do in here but I need this, okay? If ya not comfortable with it or don't like it I'll get a new vibrator or something but tonight, please?\"\n\n\"Of course!\" Holding the condom up, Jamie tore it open but paused, finding one last thing to say. \"I don't want to be selfish but I didn't want to be a stereotypical virgin either.\"\n\n\"Good news! You're not one anymore.\" Flames were starting to take over, reducing words to so much ash and cinder. \"Lay back, I'll be on top.\"\n\n\"Oh thank God.\" I retained enough self to laugh at that, once again rescuing his dick from the lace and rubbing a little bit of lube on it, then taking the condom he handed me. Carefully I got it fitted and gave the now protected and crinkly Little Jamie a fresh coat of lube before snapping the bottle shut and letting it drop to the bed. Eyes huge, made even bigger thanks to the eyeliner, he watched as I straddled him, teasing up my skirt, finding new limits of my patience to see him squirm.\n\nPushing my panties to the side, I lowered to him and the touch on ignored lips nearly made my whole being combust. Fully clothed the both of us, I made some sort of noise as he slipped in, far bigger than his two fingers had been and with an adjustment of my hips, Jamie pierced into what had been empty for so much of our time together.\n\nI heard his gasp but failed to react to it, to comfort him or say anything. Jamie might not be the biggest but right then and there, he was perfect, fulfilling my desires as I had done to him before. I took the whole of him and his shocked face was lost to the darkness and my own pleasure. This was familiar, known but long absent and I was going to make the best of it.\n\nMoving my hips much in the same way Jamie had done to me, I closed what little distance there was left, flipping his skirt up again to expose the white garter belt as, somehow, that added to my desires. He was driven deep and made good on the promise of all phallic things that made middle-schoolers giggle. Just as he craved taking the dildo from time to time so did I want this, the pure simplicity of cock but the wrappings about it, the breasts that began to move about as I started to ride him, the outlined in black eyes squeezed shut and glossy lips open wide as a moan came forth, these where things Clint nor Cass had provided.\n\nEither the fear of making a mistake had been banished or he knew what to do from our previous tryst but Jamie didn't just lay there and let me do all the work. He rose to meet my hips, held onto my legs as if for salvation and made light, astonished sounds that was a good replacement for the music I had failed to play.\n\nGod it was good and that it was Jamie made it all the better. It was what I needed. Rather than just relying on stimulating my clit and the joy of being with Jamie, this was being penetrated and yet still different from how I got off when I took him in my ass. I stopped to breath, to make sure he was alright and ask him to last just a little longer, please I needed this. He nodded and I slipped my hands under the shirt he was wearing, feeling the smoothness of his skin as I pushed it up over his breasts clad in a lace bra. Taking hold of them, I resumed my motions with a savage glee. I was fucking a honest to goodness dick and had real, home grown tits in my hands. That confirmed to me then and still does now, writing this, of a life well lived.\n\n\"Gen!\" His voice was strained but I shook my head, still bouncing upon the guy whom I'd fucked in the butt on this very bed not that long ago.\n\n\"Not yet!\" All of him, I took it then again, long strokes that made his boobs bounce and face increasingly desperate. I had meant to say 'almost' but his sudden thrust knocked it out of me. A few more urgent meetings of my sex to his flat pubic plain and I disappeared into my own world. Yes, I still felt him but the utter tidal wave of pleasure smashed into the fire that had driven me here and there was no winner. The fire raged on, the pleasure smashed into it and I was caught up in it, a bystander of my own climax as it kept me in those moments, powerful enough to be beyond memory. Typing this, I can't recall with clarity how it felt, not exactly. It's one of those things that can't be remembered with any accuracy, only that it happened and you know you want it to happen again.\n\nRolling off of him, I lay there panting, glowing with happiness and satisfaction. I must have drifted off as Jamie gently shook me awake, having changed into his usual clothing.",
        "\"Do you want to change before bed?\" I nodded but failed to move, still being too blissed out to operate. Jamie pulled my skirt off, then removed the stockings, smiling at me all the while. \"I take it I did good?\"\n\n\"Yeah.\" I croaked, Jamie handing me a nearly empty bottle of water that failed to wake me up but at least got me talking. \"I needed that.\"\n\n\"So you said.\" Struggling to sit up, I got my shirt off and the lace bra joined it, the both of us having to fight down the panties that probably needed to be soaked. At last naked, the chilly air that the ancient heater couldn't quite get to a comfortable temperature perfect for sleeping. Jamie slipped under covers and I joined him, his warmth calling out to me.\n\n\"Thanks.\" Jamie laughed, wiggling closer to me as I slung an arm over his torso and found a breast, hearing his breath catch as I did so. \"What?\"\n\n\"I should be thanking you. For all of this.\" He said as his hand joined mine as I circled the areola until the center rose tall. Anything more that might have been said or done was lost as sleep stole me away."
    ],
    "authorname": "Joshana",
    "tags": [
        "blowjob",
        "college",
        "crossdressing",
        "female dominate",
        "male submissive",
        "romance",
        "romantic",
        "strap on"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/finding-the-perfect-fit-pt-17"
}